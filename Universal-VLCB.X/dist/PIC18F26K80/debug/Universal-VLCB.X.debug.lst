

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Nov 06 16:32:21 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	_eventTable_text,global,ovrld,reloc=2,class=CODE,delta=1,noexec
     8                           	psect	_paramBlock_text,global,ovrld,reloc=2,class=CODE,delta=1,noexec
     9                           	psect	_name_text,global,ovrld,reloc=2,class=CODE,delta=1,noexec
    10                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=2
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1,group=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1,group=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1,group=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1,group=1
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1,group=1
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1
   194                           	psect	text170,global,reloc=2,class=CODE,delta=1
   195                           	psect	text171,global,reloc=2,class=CODE,delta=1
   196                           	psect	text172,global,reloc=2,class=CODE,delta=1
   197                           	psect	text173,global,reloc=2,class=CODE,delta=1
   198                           	psect	text174,global,reloc=2,class=CODE,delta=1
   199                           	psect	text175,global,reloc=2,class=CODE,delta=1
   200                           	psect	text176,global,reloc=2,class=CODE,delta=1
   201                           	psect	text177,global,reloc=2,class=CODE,delta=1
   202                           	psect	text178,global,reloc=2,class=CODE,delta=1
   203                           	psect	text179,global,reloc=2,class=CODE,delta=1
   204                           	psect	text180,global,reloc=2,class=CODE,delta=1
   205                           	psect	text181,global,reloc=2,class=CODE,delta=1
   206                           	psect	text182,global,reloc=2,class=CODE,delta=1
   207                           	psect	text183,global,reloc=2,class=CODE,delta=1
   208                           	psect	text184,global,reloc=2,class=CODE,delta=1
   209                           	psect	text185,global,reloc=2,class=CODE,delta=1
   210                           	psect	text186,global,reloc=2,class=CODE,delta=1
   211                           	psect	text187,global,reloc=2,class=CODE,delta=1
   212                           	psect	text188,global,reloc=2,class=CODE,delta=1
   213                           	psect	text189,global,reloc=2,class=CODE,delta=1
   214                           	psect	text190,global,reloc=2,class=CODE,delta=1
   215                           	psect	text191,global,reloc=2,class=CODE,delta=1
   216                           	psect	text192,global,reloc=2,class=CODE,delta=1
   217                           	psect	text193,global,reloc=2,class=CODE,delta=1
   218                           	psect	text194,global,reloc=2,class=CODE,delta=1
   219                           	psect	text195,global,reloc=2,class=CODE,delta=1
   220                           	psect	text196,global,reloc=2,class=CODE,delta=1
   221                           	psect	text197,global,reloc=2,class=CODE,delta=1
   222                           	psect	mainSec,global,reloc=2,class=CODE,delta=1
   223                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   224                           	psect	text199,global,reloc=2,class=CODE,delta=1
   225                           	psect	text200,global,reloc=2,class=CODE,delta=1
   226                           	psect	text201,global,reloc=2,class=CODE,delta=1
   227                           	psect	text202,global,reloc=2,class=CODE,delta=1
   228                           	psect	text203,global,reloc=2,class=CODE,delta=1
   229                           	psect	text204,global,reloc=2,class=CODE,delta=1
   230                           	psect	text205,global,reloc=2,class=CODE,delta=1
   231                           	psect	text206,global,reloc=2,class=CODE,delta=1
   232                           	psect	text207,global,reloc=2,class=CODE,delta=1
   233                           	psect	text208,global,reloc=2,class=CODE,delta=1
   234                           	psect	text209,global,reloc=2,class=CODE,delta=1
   235                           	psect	text210,global,reloc=2,class=CODE,delta=1
   236                           	psect	text211,global,reloc=2,class=CODE,delta=1
   237                           	psect	text212,global,reloc=2,class=CODE,delta=1
   238                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   239                           	psect	text214,global,reloc=2,class=CODE,delta=1
   240                           	psect	text215,global,reloc=2,class=CODE,delta=1
   241                           	psect	text216,global,reloc=2,class=CODE,delta=1
   242                           	psect	text217,global,reloc=2,class=CODE,delta=1
   243                           	psect	text218,global,reloc=2,class=CODE,delta=1
   244                           	psect	text219,global,reloc=2,class=CODE,delta=1
   245                           	psect	text220,global,reloc=2,class=CODE,delta=1
   246                           	psect	text221,global,reloc=2,class=CODE,delta=1
   247                           	psect	text222,global,reloc=2,class=CODE,delta=1
   248                           	psect	text223,global,reloc=2,class=CODE,delta=1
   249                           	psect	text224,global,reloc=2,class=CODE,delta=1
   250                           	psect	text225,global,reloc=2,class=CODE,delta=1
   251                           	psect	text226,global,reloc=2,class=CODE,delta=1
   252                           	psect	text227,global,reloc=2,class=CODE,delta=1
   253                           	psect	text228,global,reloc=2,class=CODE,delta=1
   254                           	psect	text229,global,reloc=2,class=CODE,delta=1
   255                           	psect	text230,global,reloc=2,class=CODE,delta=1
   256                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   257                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   258                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
   259                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   260   000000                     
   261                           ; Generated 12/10/2023 GMT
   262                           ; 
   263                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   264                           ; All rights reserved.
   265                           ; 
   266                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   267                           ; 
   268                           ; Redistribution and use in source and binary forms, with or without modification, are
   269                           ; permitted provided that the following conditions are met:
   270                           ; 
   271                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   272                           ;        conditions and the following disclaimer.
   273                           ; 
   274                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   275                           ;        of conditions and the following disclaimer in the documentation and/or other
   276                           ;        materials provided with the distribution. Publication is not required when
   277                           ;        this file is used in an embedded application.
   278                           ; 
   279                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   280                           ;        software without specific prior written permission.
   281                           ; 
   282                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   283                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   284                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   285                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   286                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   287                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   288                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   289                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   290                           ; 
   291                           ; 
   292                           ; Code-generator required, PIC18F26K80 Definitions
   293                           ; 
   294                           ; SFR Addresses
   295   000000                     
   296                           	psect	eeprom_data
   297   F003FF                     	org	1023	;# 
   298   F003FF  00                 	db	0	;# 
   299   000000                     _eventTable_absaddr	set	61312
   300                           
   301                           	psect	mediumconst
   302   00ED28                     __pmediumconst:
   303                           	callstack 0
   304   00ED28  00                 	db	0
   305   00ED29                     _priorities:
   306                           	callstack 0
   307   00ED29  01                 	db	1
   308   00ED2A  01                 	db	1
   309   00ED2B  03                 	db	3
   310   00ED2C  02                 	db	2
   311   00ED2D  02                 	db	2
   312   00ED2E  02                 	db	2
   313   00ED2F  02                 	db	2
   314   00ED30  03                 	db	3
   315   00ED31  02                 	db	2
   316   00ED32  02                 	db	2
   317   00ED33  03                 	db	3
   318   00ED34  01                 	db	1
   319   00ED35  00                 	db	0
   320   00ED36  00                 	db	0
   321   00ED37  01                 	db	1
   322   00ED38  01                 	db	1
   323   00ED39  01                 	db	1
   324   00ED3A  01                 	db	1
   325   00ED3B  01                 	db	1
   326   00ED3C  01                 	db	1
   327   00ED3D  01                 	db	1
   328   00ED3E  01                 	db	1
   329   00ED3F  01                 	db	1
   330   00ED40  01                 	db	1
   331   00ED41  01                 	db	1
   332   00ED42  01                 	db	1
   333   00ED43  01                 	db	1
   334   00ED44  01                 	db	1
   335   00ED45  01                 	db	1
   336   00ED46  01                 	db	1
   337   00ED47  01                 	db	1
   338   00ED48  01                 	db	1
   339   00ED49  01                 	db	1
   340   00ED4A  01                 	db	1
   341   00ED4B  01                 	db	1
   342   00ED4C  01                 	db	1
   343   00ED4D  01                 	db	1
   344   00ED4E  01                 	db	1
   345   00ED4F  01                 	db	1
   346   00ED50  01                 	db	1
   347   00ED51  01                 	db	1
   348   00ED52  01                 	db	1
   349   00ED53  01                 	db	1
   350   00ED54  01                 	db	1
   351   00ED55  01                 	db	1
   352   00ED56  01                 	db	1
   353   00ED57  01                 	db	1
   354   00ED58  01                 	db	1
   355   00ED59  01                 	db	1
   356   00ED5A  01                 	db	1
   357   00ED5B  01                 	db	1
   358   00ED5C  01                 	db	1
   359   00ED5D  01                 	db	1
   360   00ED5E  01                 	db	1
   361   00ED5F  01                 	db	1
   362   00ED60  01                 	db	1
   363   00ED61  01                 	db	1
   364   00ED62  01                 	db	1
   365   00ED63  01                 	db	1
   366   00ED64  01                 	db	1
   367   00ED65  01                 	db	1
   368   00ED66  01                 	db	1
   369   00ED67  01                 	db	1
   370   00ED68  00                 	db	0
   371   00ED69  01                 	db	1
   372   00ED6A  01                 	db	1
   373   00ED6B  01                 	db	1
   374   00ED6C  01                 	db	1
   375   00ED6D  01                 	db	1
   376   00ED6E  01                 	db	1
   377   00ED6F  01                 	db	1
   378   00ED70  01                 	db	1
   379   00ED71  01                 	db	1
   380   00ED72  00                 	db	0
   381   00ED73  01                 	db	1
   382   00ED74  01                 	db	1
   383   00ED75  00                 	db	0
   384   00ED76  00                 	db	0
   385   00ED77  00                 	db	0
   386   00ED78  00                 	db	0
   387   00ED79  00                 	db	0
   388   00ED7A  00                 	db	0
   389   00ED7B  00                 	db	0
   390   00ED7C  00                 	db	0
   391   00ED7D  00                 	db	0
   392   00ED7E  00                 	db	0
   393   00ED7F  00                 	db	0
   394   00ED80  00                 	db	0
   395   00ED81  00                 	db	0
   396   00ED82  00                 	db	0
   397   00ED83  00                 	db	0
   398   00ED84  00                 	db	0
   399   00ED85  00                 	db	0
   400   00ED86  01                 	db	1
   401   00ED87  01                 	db	1
   402   00ED88  01                 	db	1
   403   00ED89  01                 	db	1
   404   00ED8A  01                 	db	1
   405   00ED8B  03                 	db	3
   406   00ED8C  01                 	db	1
   407   00ED8D  01                 	db	1
   408   00ED8E  01                 	db	1
   409   00ED8F  01                 	db	1
   410   00ED90  01                 	db	1
   411   00ED91  01                 	db	1
   412   00ED92  01                 	db	1
   413   00ED93  01                 	db	1
   414   00ED94  00                 	db	0
   415   00ED95  00                 	db	0
   416   00ED96  00                 	db	0
   417   00ED97  00                 	db	0
   418   00ED98  00                 	db	0
   419   00ED99  00                 	db	0
   420   00ED9A  00                 	db	0
   421   00ED9B  00                 	db	0
   422   00ED9C  01                 	db	1
   423   00ED9D  00                 	db	0
   424   00ED9E  01                 	db	1
   425   00ED9F  01                 	db	1
   426   00EDA0  01                 	db	1
   427   00EDA1  01                 	db	1
   428   00EDA2  01                 	db	1
   429   00EDA3  01                 	db	1
   430   00EDA4  00                 	db	0
   431   00EDA5  01                 	db	1
   432   00EDA6  01                 	db	1
   433   00EDA7  01                 	db	1
   434   00EDA8  01                 	db	1
   435   00EDA9  01                 	db	1
   436   00EDAA  01                 	db	1
   437   00EDAB  01                 	db	1
   438   00EDAC  00                 	db	0
   439   00EDAD  01                 	db	1
   440   00EDAE  01                 	db	1
   441   00EDAF  01                 	db	1
   442   00EDB0  01                 	db	1
   443   00EDB1  01                 	db	1
   444   00EDB2  01                 	db	1
   445   00EDB3  00                 	db	0
   446   00EDB4  01                 	db	1
   447   00EDB5  00                 	db	0
   448   00EDB6  00                 	db	0
   449   00EDB7  00                 	db	0
   450   00EDB8  00                 	db	0
   451   00EDB9  00                 	db	0
   452   00EDBA  00                 	db	0
   453   00EDBB  00                 	db	0
   454   00EDBC  00                 	db	0
   455   00EDBD  00                 	db	0
   456   00EDBE  00                 	db	0
   457   00EDBF  00                 	db	0
   458   00EDC0  00                 	db	0
   459   00EDC1  00                 	db	0
   460   00EDC2  00                 	db	0
   461   00EDC3  00                 	db	0
   462   00EDC4  00                 	db	0
   463   00EDC5  01                 	db	1
   464   00EDC6  01                 	db	1
   465   00EDC7  01                 	db	1
   466   00EDC8  01                 	db	1
   467   00EDC9  01                 	db	1
   468   00EDCA  01                 	db	1
   469   00EDCB  01                 	db	1
   470   00EDCC  01                 	db	1
   471   00EDCD  01                 	db	1
   472   00EDCE  01                 	db	1
   473   00EDCF  01                 	db	1
   474   00EDD0  00                 	db	0
   475   00EDD1  00                 	db	0
   476   00EDD2  01                 	db	1
   477   00EDD3  01                 	db	1
   478   00EDD4  00                 	db	0
   479   00EDD5  00                 	db	0
   480   00EDD6  00                 	db	0
   481   00EDD7  00                 	db	0
   482   00EDD8  00                 	db	0
   483   00EDD9  00                 	db	0
   484   00EDDA  00                 	db	0
   485   00EDDB  00                 	db	0
   486   00EDDC  01                 	db	1
   487   00EDDD  00                 	db	0
   488   00EDDE  00                 	db	0
   489   00EDDF  01                 	db	1
   490   00EDE0  01                 	db	1
   491   00EDE1  01                 	db	1
   492   00EDE2  00                 	db	0
   493   00EDE3  00                 	db	0
   494   00EDE4  00                 	db	0
   495   00EDE5  01                 	db	1
   496   00EDE6  01                 	db	1
   497   00EDE7  01                 	db	1
   498   00EDE8  01                 	db	1
   499   00EDE9  01                 	db	1
   500   00EDEA  01                 	db	1
   501   00EDEB  01                 	db	1
   502   00EDEC  00                 	db	0
   503   00EDED  01                 	db	1
   504   00EDEE  01                 	db	1
   505   00EDEF  01                 	db	1
   506   00EDF0  01                 	db	1
   507   00EDF1  01                 	db	1
   508   00EDF2  01                 	db	1
   509   00EDF3  01                 	db	1
   510   00EDF4  01                 	db	1
   511   00EDF5  00                 	db	0
   512   00EDF6  00                 	db	0
   513   00EDF7  00                 	db	0
   514   00EDF8  00                 	db	0
   515   00EDF9  00                 	db	0
   516   00EDFA  00                 	db	0
   517   00EDFB  01                 	db	1
   518   00EDFC  01                 	db	1
   519   00EDFD  00                 	db	0
   520   00EDFE  00                 	db	0
   521   00EDFF  01                 	db	1
   522   00EE00  01                 	db	1
   523   00EE01  01                 	db	1
   524   00EE02  00                 	db	0
   525   00EE03  00                 	db	0
   526   00EE04  00                 	db	0
   527   00EE05  01                 	db	1
   528   00EE06  01                 	db	1
   529   00EE07  00                 	db	0
   530   00EE08  01                 	db	1
   531   00EE09  01                 	db	1
   532   00EE0A  01                 	db	1
   533   00EE0B  00                 	db	0
   534   00EE0C  00                 	db	0
   535   00EE0D  01                 	db	1
   536   00EE0E  00                 	db	0
   537   00EE0F  01                 	db	1
   538   00EE10  01                 	db	1
   539   00EE11  01                 	db	1
   540   00EE12  01                 	db	1
   541   00EE13  01                 	db	1
   542   00EE14  00                 	db	0
   543   00EE15  00                 	db	0
   544   00EE16  00                 	db	0
   545   00EE17  00                 	db	0
   546   00EE18  00                 	db	0
   547   00EE19  00                 	db	0
   548   00EE1A  00                 	db	0
   549   00EE1B  00                 	db	0
   550   00EE1C  00                 	db	0
   551   00EE1D  00                 	db	0
   552   00EE1E  00                 	db	0
   553   00EE1F  00                 	db	0
   554   00EE20  00                 	db	0
   555   00EE21  00                 	db	0
   556   00EE22  00                 	db	0
   557   00EE23  01                 	db	1
   558   00EE24  00                 	db	0
   559   00EE25  00                 	db	0
   560   00EE26  00                 	db	0
   561   00EE27  00                 	db	0
   562   00EE28  00                 	db	0
   563   00EE29                     __end_of_priorities:
   564                           	callstack 0
   565   00EE29                     _configs:
   566                           	callstack 0
   567   00EE29  0B                 	db	11
   568   00EE2A  43                 	db	67
   569   00EE2B  00                 	db	0
   570   00EE2C  FF                 	db	255
   571   00EE2D  0C                 	db	12
   572   00EE2E  43                 	db	67
   573   00EE2F  01                 	db	1
   574   00EE30  FF                 	db	255
   575   00EE31  0D                 	db	13
   576   00EE32  43                 	db	67
   577   00EE33  02                 	db	2
   578   00EE34  FF                 	db	255
   579   00EE35  0E                 	db	14
   580   00EE36  43                 	db	67
   581   00EE37  03                 	db	3
   582   00EE38  FF                 	db	255
   583   00EE39  0F                 	db	15
   584   00EE3A  43                 	db	67
   585   00EE3B  04                 	db	4
   586   00EE3C  FF                 	db	255
   587   00EE3D  10                 	db	16
   588   00EE3E  43                 	db	67
   589   00EE3F  05                 	db	5
   590   00EE40  FF                 	db	255
   591   00EE41  11                 	db	17
   592   00EE42  43                 	db	67
   593   00EE43  06                 	db	6
   594   00EE44  FF                 	db	255
   595   00EE45  12                 	db	18
   596   00EE46  43                 	db	67
   597   00EE47  07                 	db	7
   598   00EE48  FF                 	db	255
   599   00EE49  15                 	db	21
   600   00EE4A  42                 	db	66
   601   00EE4B  00                 	db	0
   602   00EE4C  0A                 	db	10
   603   00EE4D  16                 	db	22
   604   00EE4E  42                 	db	66
   605   00EE4F  01                 	db	1
   606   00EE50  08                 	db	8
   607   00EE51  19                 	db	25
   608   00EE52  42                 	db	66
   609   00EE53  04                 	db	4
   610   00EE54  09                 	db	9
   611   00EE55  1A                 	db	26
   612   00EE56  42                 	db	66
   613   00EE57  05                 	db	5
   614   00EE58  FF                 	db	255
   615   00EE59  03                 	db	3
   616   00EE5A  41                 	db	65
   617   00EE5B  01                 	db	1
   618   00EE5C  01                 	db	1
   619   00EE5D  02                 	db	2
   620   00EE5E  41                 	db	65
   621   00EE5F  00                 	db	0
   622   00EE60  00                 	db	0
   623   00EE61  05                 	db	5
   624   00EE62  41                 	db	65
   625   00EE63  03                 	db	3
   626   00EE64  03                 	db	3
   627   00EE65  07                 	db	7
   628   00EE66  41                 	db	65
   629   00EE67  05                 	db	5
   630   00EE68  04                 	db	4
   631   00EE69                     __end_of_configs:
   632                           	callstack 0
   633   000000                     _paramBlock_absaddr	set	2080
   634   00EE69                     _services:
   635                           	callstack 0
   636   00EE69  68                 	db	low _canService
   637   00EE6A  EF                 	db	high _canService
   638   00EE6B  56                 	db	low _mnsService
   639   00EE6C  EF                 	db	high _mnsService
   640   00EE6D  44                 	db	low _nvService
   641   00EE6E  EF                 	db	high _nvService
   642   00EE6F  32                 	db	low _bootService
   643   00EE70  EF                 	db	high _bootService
   644   00EE71  20                 	db	low _eventTeachService
   645   00EE72  EF                 	db	high _eventTeachService
   646   00EE73  0E                 	db	low _eventConsumer2QService
   647   00EE74  EF                 	db	high _eventConsumer2QService
   648   00EE75  FC                 	db	low _eventProducerService
   649   00EE76  EE                 	db	high _eventProducerService
   650   00EE77  EA                 	db	low _eventCoeService
   651   00EE78  EE                 	db	high _eventCoeService
   652   00EE79  D8                 	db	low _eventAckService
   653   00EE7A  EE                 	db	high _eventAckService
   654   00EE7B                     __end_of_services:
   655                           	callstack 0
   656   00EE7B                     _bl_version:
   657                           	callstack 0
   658   00EE7B  42                 	db	66
   659   00EE7C  4C                 	db	76
   660   00EE7D  5F                 	db	95
   661   00EE7E  56                 	db	86
   662   00EE7F  45                 	db	69
   663   00EE80  52                 	db	82
   664   00EE81  53                 	db	83
   665   00EE82  49                 	db	73
   666   00EE83  4F                 	db	79
   667   00EE84  4E                 	db	78
   668   00EE85  3D                 	db	61
   669   00EE86                     __end_of_bl_version:
   670                           	callstack 0
   671   000000                     _name_absaddr	set	2120
   672   00EE86                     _canPri:
   673                           	callstack 0
   674   00EE86  B0                 	db	176
   675   00EE87  A0                 	db	160
   676   00EE88  90                 	db	144
   677   00EE89  80                 	db	128
   678   00EE8A  00                 	db	0
   679   00EE8B                     __end_of_canPri:
   680                           	callstack 0
   681   00EE8B                     _channelDefaultNVs:
   682                           	callstack 0
   683   00EE8B  00                 	db	0
   684   00EE8C  06                 	db	6
   685   00EE8D  04                 	db	4
   686   00EE8E  04                 	db	4
   687   00EE8F  00                 	db	0
   688   00EE90  00                 	db	0
   689   00EE91  00                 	db	0
   690   00EE92  01                 	db	1
   691   00EE93  06                 	db	6
   692   00EE94  00                 	db	0
   693   00EE95  00                 	db	0
   694   00EE96  00                 	db	0
   695   00EE97  00                 	db	0
   696   00EE98  00                 	db	0
   697   00EE99  02                 	db	2
   698   00EE9A  06                 	db	6
   699   00EE9B  80                 	db	128
   700   00EE9C  80                 	db	128
   701   00EE9D  EB                 	db	235
   702   00EE9E  EB                 	db	235
   703   00EE9F  00                 	db	0
   704   00EEA0  03                 	db	3
   705   00EEA1  06                 	db	6
   706   00EEA2  80                 	db	128
   707   00EEA3  7F                 	db	127
   708   00EEA4  40                 	db	64
   709   00EEA5  03                 	db	3
   710   00EEA6  3C                 	db	60
   711   00EEA7  04                 	db	4
   712   00EEA8  06                 	db	6
   713   00EEA9  03                 	db	3
   714   00EEAA  80                 	db	128
   715   00EEAB  80                 	db	128
   716   00EEAC  80                 	db	128
   717   00EEAD  00                 	db	0
   718   00EEAE  05                 	db	5
   719   00EEAF  06                 	db	6
   720   00EEB0  80                 	db	128
   721   00EEB1  10                 	db	16
   722   00EEB2  00                 	db	0
   723   00EEB3  00                 	db	0
   724   00EEB4  00                 	db	0
   725   00EEB5  06                 	db	6
   726   00EEB6  06                 	db	6
   727   00EEB7  00                 	db	0
   728   00EEB8  7B                 	db	123
   729   00EEB9  20                 	db	32
   730   00EEBA  07                 	db	7
   731   00EEBB  FF                 	db	255
   732   00EEBC  07                 	db	7
   733   00EEBD  06                 	db	6
   734   00EEBE  05                 	db	5
   735   00EEBF  00                 	db	0
   736   00EEC0  00                 	db	0
   737   00EEC1  00                 	db	0
   738   00EEC2  00                 	db	0
   739   00EEC3  08                 	db	8
   740   00EEC4  00                 	db	0
   741   00EEC5  00                 	db	0
   742   00EEC6  00                 	db	0
   743   00EEC7  00                 	db	0
   744   00EEC8  00                 	db	0
   745   00EEC9  00                 	db	0
   746   00EECA  00                 	db	0
   747   00EECB  00                 	db	0
   748   00EECC  00                 	db	0
   749   00EECD  00                 	db	0
   750   00EECE  00                 	db	0
   751   00EECF  00                 	db	0
   752   00EED0  00                 	db	0
   753   00EED1  00                 	db	0
   754   00EED2  00                 	db	0
   755   00EED3  00                 	db	0
   756   00EED4  00                 	db	0
   757   00EED5  00                 	db	0
   758   00EED6  00                 	db	0
   759   00EED7  00                 	db	0
   760   00EED8                     __end_of_channelDefaultNVs:
   761                           	callstack 0
   762   00EED8                     _eventAckService:
   763                           	callstack 0
   764   00EED8  09                 	db	9
   765   00EED9  01                 	db	1
   766   00EEDA  00                 	db	0
   767   00EEDB  00                 	db	0
   768   00EEDC  50                 	db	low _ackPowerUp
   769   00EEDD  C0                 	db	high _ackPowerUp
   770   00EEDE  EE                 	db	low _ackEventProcessMessage
   771   00EEDF  65                 	db	high _ackEventProcessMessage
   772   00EEE0  00                 	db	0
   773   00EEE1  00                 	db	0
   774   00EEE2  00                 	db	0
   775   00EEE3  00                 	db	0
   776   00EEE4  00                 	db	0
   777   00EEE5  00                 	db	0
   778   00EEE6  00                 	db	0
   779   00EEE7  00                 	db	0
   780   00EEE8  FE                 	db	low _ackGetDiagnostic
   781   00EEE9  C1                 	db	high _ackGetDiagnostic
   782   00EEEA                     __end_of_eventAckService:
   783                           	callstack 0
   784   00EEEA                     _eventCoeService:
   785                           	callstack 0
   786   00EEEA  08                 	db	8
   787   00EEEB  01                 	db	1
   788   00EEEC  00                 	db	0
   789   00EEED  00                 	db	0
   790   00EEEE  00                 	db	0
   791   00EEEF  00                 	db	0
   792   00EEF0  00                 	db	0
   793   00EEF1  00                 	db	0
   794   00EEF2  00                 	db	0
   795   00EEF3  00                 	db	0
   796   00EEF4  00                 	db	0
   797   00EEF5  00                 	db	0
   798   00EEF6  00                 	db	0
   799   00EEF7  00                 	db	0
   800   00EEF8  00                 	db	0
   801   00EEF9  00                 	db	0
   802   00EEFA  00                 	db	0
   803   00EEFB  00                 	db	0
   804   00EEFC                     __end_of_eventCoeService:
   805                           	callstack 0
   806   00EEFC                     _eventProducerService:
   807                           	callstack 0
   808   00EEFC  05                 	db	5
   809   00EEFD  01                 	db	1
   810   00EEFE  00                 	db	0
   811   00EEFF  00                 	db	0
   812   00EF00  22                 	db	low _producerPowerUp
   813   00EF01  C0                 	db	high _producerPowerUp
   814   00EF02  4A                 	db	low _producerProcessMessage
   815   00EF03  5F                 	db	high _producerProcessMessage
   816   00EF04  00                 	db	0
   817   00EF05  00                 	db	0
   818   00EF06  00                 	db	0
   819   00EF07  00                 	db	0
   820   00EF08  00                 	db	0
   821   00EF09  00                 	db	0
   822   00EF0A  E8                 	db	low _producerEsdData
   823   00EF0B  C3                 	db	high _producerEsdData
   824   00EF0C  86                 	db	low _producerGetDiagnostic
   825   00EF0D  C1                 	db	high _producerGetDiagnostic
   826   00EF0E                     __end_of_eventProducerService:
   827                           	callstack 0
   828   00EF0E                     _eventConsumer2QService:
   829                           	callstack 0
   830   00EF0E  06                 	db	6
   831   00EF0F  01                 	db	1
   832   00EF10  00                 	db	0
   833   00EF11  00                 	db	0
   834   00EF12  CC                 	db	low _consumer2QPowerUp
   835   00EF13  BA                 	db	high _consumer2QPowerUp
   836   00EF14  82                 	db	low _consumer2QProcessMessage
   837   00EF15  35                 	db	high _consumer2QProcessMessage
   838   00EF16  00                 	db	0
   839   00EF17  00                 	db	0
   840   00EF18  00                 	db	0
   841   00EF19  00                 	db	0
   842   00EF1A  00                 	db	0
   843   00EF1B  00                 	db	0
   844   00EF1C  08                 	db	low _consumer2QEsdData
   845   00EF1D  C4                 	db	high _consumer2QEsdData
   846   00EF1E  26                 	db	low _consumer2QGetDiagnostic
   847   00EF1F  C2                 	db	high _consumer2QGetDiagnostic
   848   00EF20                     __end_of_eventConsumer2QService:
   849                           	callstack 0
   850   00EF20                     _eventTeachService:
   851                           	callstack 0
   852   00EF20  04                 	db	4
   853   00EF21  01                 	db	1
   854   00EF22  44                 	db	low _teachFactoryReset
   855   00EF23  C6                 	db	high _teachFactoryReset
   856   00EF24  6E                 	db	low _teachPowerUp
   857   00EF25  BE                 	db	high _teachPowerUp
   858   00EF26  0A                 	db	low _teachProcessMessage
   859   00EF27  22                 	db	high _teachProcessMessage
   860   00EF28  00                 	db	0
   861   00EF29  00                 	db	0
   862   00EF2A  00                 	db	0
   863   00EF2B  00                 	db	0
   864   00EF2C  00                 	db	0
   865   00EF2D  00                 	db	0
   866   00EF2E  36                 	db	low _teachGetESDdata
   867   00EF2F  C3                 	db	high _teachGetESDdata
   868   00EF30  4E                 	db	low _teachGetDiagnostic
   869   00EF31  C2                 	db	high _teachGetDiagnostic
   870   00EF32                     __end_of_eventTeachService:
   871                           	callstack 0
   872   00EF32                     _bootService:
   873                           	callstack 0
   874   00EF32  0A                 	db	10
   875   00EF33  01                 	db	1
   876   00EF34  00                 	db	0
   877   00EF35  00                 	db	0
   878   00EF36  2C                 	db	low _bootPowerUp
   879   00EF37  91                 	db	high _bootPowerUp
   880   00EF38  98                 	db	low _bootProcessMessage
   881   00EF39  A0                 	db	high _bootProcessMessage
   882   00EF3A  00                 	db	0
   883   00EF3B  00                 	db	0
   884   00EF3C  00                 	db	0
   885   00EF3D  00                 	db	0
   886   00EF3E  00                 	db	0
   887   00EF3F  00                 	db	0
   888   00EF40  12                 	db	low _bootEsdData
   889   00EF41  C3                 	db	high _bootEsdData
   890   00EF42  00                 	db	0
   891   00EF43  00                 	db	0
   892   00EF44                     __end_of_bootService:
   893                           	callstack 0
   894   00EF44                     _nvService:
   895                           	callstack 0
   896   00EF44  02                 	db	2
   897   00EF45  01                 	db	1
   898   00EF46  E2                 	db	low _nvFactoryReset
   899   00EF47  BC                 	db	high _nvFactoryReset
   900   00EF48  3C                 	db	low _nvPowerUp
   901   00EF49  BE                 	db	high _nvPowerUp
   902   00EF4A  8C                 	db	low _nvProcessMessage
   903   00EF4B  46                 	db	high _nvProcessMessage
   904   00EF4C  00                 	db	0
   905   00EF4D  00                 	db	0
   906   00EF4E  00                 	db	0
   907   00EF4F  00                 	db	0
   908   00EF50  00                 	db	0
   909   00EF51  00                 	db	0
   910   00EF52  F8                 	db	low _nvGetESDdata
   911   00EF53  C4                 	db	high _nvGetESDdata
   912   00EF54  AE                 	db	low _nvGetDiagnostic
   913   00EF55  C1                 	db	high _nvGetDiagnostic
   914   00EF56                     __end_of_nvService:
   915                           	callstack 0
   916   00EF56                     _mnsService:
   917                           	callstack 0
   918   00EF56  01                 	db	1
   919   00EF57  01                 	db	1
   920   00EF58  B0                 	db	low _mnsFactoryReset
   921   00EF59  AB                 	db	high _mnsFactoryReset
   922   00EF5A  4A                 	db	low _mnsPowerUp
   923   00EF5B  7E                 	db	high _mnsPowerUp
   924   00EF5C  CE                 	db	low _mnsProcessMessage
   925   00EF5D  16                 	db	high _mnsProcessMessage
   926   00EF5E  3C                 	db	low _mnsPoll
   927   00EF5F  43                 	db	high _mnsPoll
   928   00EF60  00                 	db	0
   929   00EF61  00                 	db	0
   930   00EF62  86                 	db	low _mnsLowIsr
   931   00EF63  C5                 	db	high _mnsLowIsr
   932   00EF64  00                 	db	0
   933   00EF65  00                 	db	0
   934   00EF66  D6                 	db	low _mnsGetDiagnostic
   935   00EF67  C1                 	db	high _mnsGetDiagnostic
   936   00EF68                     __end_of_mnsService:
   937                           	callstack 0
   938   00EF68                     _canService:
   939                           	callstack 0
   940   00EF68  03                 	db	3
   941   00EF69  02                 	db	2
   942   00EF6A  88                 	db	low _canFactoryReset
   943   00EF6B  C4                 	db	high _canFactoryReset
   944   00EF6C  14                 	db	low _canPowerUp
   945   00EF6D  6F                 	db	high _canPowerUp
   946   00EF6E  38                 	db	low _canProcessMessage
   947   00EF6F  9B                 	db	high _canProcessMessage
   948   00EF70  00                 	db	0
   949   00EF71  00                 	db	0
   950   00EF72  48                 	db	low _canIsr
   951   00EF73  C4                 	db	high _canIsr
   952   00EF74  48                 	db	low _canIsr
   953   00EF75  C4                 	db	high _canIsr
   954   00EF76  DE                 	db	low _canEsdData
   955   00EF77  C4                 	db	high _canEsdData
   956   00EF78  B0                 	db	low _canGetDiagnostic
   957   00EF79  AF                 	db	high _canGetDiagnostic
   958   00EF7A                     __end_of_canService:
   959                           	callstack 0
   960   00EF7A                     _canTransport:
   961                           	callstack 0
   962   00EF7A  AC                 	db	low _canSendMessage
   963   00EF7B  49                 	db	high _canSendMessage
   964   00EF7C  DC                 	db	low _canReceiveMessage
   965   00EF7D  67                 	db	high _canReceiveMessage
   966   00EF7E                     __end_of_canTransport:
   967                           	callstack 0
   968   000000                     _eventTable_absaddr	set	61312
   969   00EF7E  00                 	db	0	; dummy byte at the end
   970   000000                     
   971                           	psect	_eventTable_text
   972   00EF80                     __p_eventTable_text:
   973                           	callstack 0
   974   00EF80                     _eventTable:
   975                           	callstack 0
   976   00EF80  FF                 	db	255
   977   00EF81  FF                 	db	255
   978   00EF82  FF                 	db	255
   979   00EF83  FF                 	db	255
   980   00EF84  FF                 	db	255
   981   00EF85  FF                 	db	255
   982   00EF86  FF                 	db	255
   983   00EF87  FF                 	db	255
   984   00EF88  FF                 	db	255
   985   00EF89  FF                 	db	255
   986   00EF8A  FF                 	db	255
   987   00EF8B  FF                 	db	255
   988   00EF8C  FF                 	db	255
   989   00EF8D  FF                 	db	255
   990   00EF8E  FF                 	db	255
   991   00EF8F  FF                 	db	255
   992   00EF90  FF                 	db	255
   993   00EF91  FF                 	db	255
   994   00EF92  FF                 	db	255
   995   00EF93  FF                 	db	255
   996   00EF94  FF                 	db	255
   997   00EF95  FF                 	db	255
   998   00EF96  FF                 	db	255
   999   00EF97  FF                 	db	255
  1000   00EF98  FF                 	db	255
  1001   00EF99  FF                 	db	255
  1002   00EF9A  FF                 	db	255
  1003   00EF9B  FF                 	db	255
  1004   00EF9C  FF                 	db	255
  1005   00EF9D  FF                 	db	255
  1006   00EF9E  FF                 	db	255
  1007   00EF9F  FF                 	db	255
  1008   00EFA0  FF                 	db	255
  1009   00EFA1  FF                 	db	255
  1010   00EFA2  FF                 	db	255
  1011   00EFA3  FF                 	db	255
  1012   00EFA4  FF                 	db	255
  1013   00EFA5  FF                 	db	255
  1014   00EFA6  FF                 	db	255
  1015   00EFA7  FF                 	db	255
  1016   00EFA8  FF                 	db	255
  1017   00EFA9  FF                 	db	255
  1018   00EFAA  FF                 	db	255
  1019   00EFAB  FF                 	db	255
  1020   00EFAC  FF                 	db	255
  1021   00EFAD  FF                 	db	255
  1022   00EFAE  FF                 	db	255
  1023   00EFAF  FF                 	db	255
  1024   00EFB0  FF                 	db	255
  1025   00EFB1  FF                 	db	255
  1026   00EFB2  FF                 	db	255
  1027   00EFB3  FF                 	db	255
  1028   00EFB4  FF                 	db	255
  1029   00EFB5  FF                 	db	255
  1030   00EFB6  FF                 	db	255
  1031   00EFB7  FF                 	db	255
  1032   00EFB8  FF                 	db	255
  1033   00EFB9  FF                 	db	255
  1034   00EFBA  FF                 	db	255
  1035   00EFBB  FF                 	db	255
  1036   00EFBC  FF                 	db	255
  1037   00EFBD  FF                 	db	255
  1038   00EFBE  FF                 	db	255
  1039   00EFBF  FF                 	db	255
  1040   00EFC0  FF                 	db	255
  1041   00EFC1  FF                 	db	255
  1042   00EFC2  FF                 	db	255
  1043   00EFC3  FF                 	db	255
  1044   00EFC4  FF                 	db	255
  1045   00EFC5  FF                 	db	255
  1046   00EFC6  FF                 	db	255
  1047   00EFC7  FF                 	db	255
  1048   00EFC8  FF                 	db	255
  1049   00EFC9  FF                 	db	255
  1050   00EFCA  FF                 	db	255
  1051   00EFCB  FF                 	db	255
  1052   00EFCC  FF                 	db	255
  1053   00EFCD  FF                 	db	255
  1054   00EFCE  FF                 	db	255
  1055   00EFCF  FF                 	db	255
  1056   00EFD0  FF                 	db	255
  1057   00EFD1  FF                 	db	255
  1058   00EFD2  FF                 	db	255
  1059   00EFD3  FF                 	db	255
  1060   00EFD4  FF                 	db	255
  1061   00EFD5  FF                 	db	255
  1062   00EFD6  FF                 	db	255
  1063   00EFD7  FF                 	db	255
  1064   00EFD8  FF                 	db	255
  1065   00EFD9  FF                 	db	255
  1066   00EFDA  FF                 	db	255
  1067   00EFDB  FF                 	db	255
  1068   00EFDC  FF                 	db	255
  1069   00EFDD  FF                 	db	255
  1070   00EFDE  FF                 	db	255
  1071   00EFDF  FF                 	db	255
  1072   00EFE0  FF                 	db	255
  1073   00EFE1  FF                 	db	255
  1074   00EFE2  FF                 	db	255
  1075   00EFE3  FF                 	db	255
  1076   00EFE4  FF                 	db	255
  1077   00EFE5  FF                 	db	255
  1078   00EFE6  FF                 	db	255
  1079   00EFE7  FF                 	db	255
  1080   00EFE8  FF                 	db	255
  1081   00EFE9  FF                 	db	255
  1082   00EFEA  FF                 	db	255
  1083   00EFEB  FF                 	db	255
  1084   00EFEC  FF                 	db	255
  1085   00EFED  FF                 	db	255
  1086   00EFEE  FF                 	db	255
  1087   00EFEF  FF                 	db	255
  1088   00EFF0  FF                 	db	255
  1089   00EFF1  FF                 	db	255
  1090   00EFF2  FF                 	db	255
  1091   00EFF3  FF                 	db	255
  1092   00EFF4  FF                 	db	255
  1093   00EFF5  FF                 	db	255
  1094   00EFF6  FF                 	db	255
  1095   00EFF7  FF                 	db	255
  1096   00EFF8  FF                 	db	255
  1097   00EFF9  FF                 	db	255
  1098   00EFFA  FF                 	db	255
  1099   00EFFB  FF                 	db	255
  1100   00EFFC  FF                 	db	255
  1101   00EFFD  FF                 	db	255
  1102   00EFFE  FF                 	db	255
  1103   00EFFF  FF                 	db	255
  1104   00F000  FF                 	db	255
  1105   00F001  FF                 	db	255
  1106   00F002  FF                 	db	255
  1107   00F003  FF                 	db	255
  1108   00F004  FF                 	db	255
  1109   00F005  FF                 	db	255
  1110   00F006  FF                 	db	255
  1111   00F007  FF                 	db	255
  1112   00F008  FF                 	db	255
  1113   00F009  FF                 	db	255
  1114   00F00A  FF                 	db	255
  1115   00F00B  FF                 	db	255
  1116   00F00C  FF                 	db	255
  1117   00F00D  FF                 	db	255
  1118   00F00E  FF                 	db	255
  1119   00F00F  FF                 	db	255
  1120   00F010  FF                 	db	255
  1121   00F011  FF                 	db	255
  1122   00F012  FF                 	db	255
  1123   00F013  FF                 	db	255
  1124   00F014  FF                 	db	255
  1125   00F015  FF                 	db	255
  1126   00F016  FF                 	db	255
  1127   00F017  FF                 	db	255
  1128   00F018  FF                 	db	255
  1129   00F019  FF                 	db	255
  1130   00F01A  FF                 	db	255
  1131   00F01B  FF                 	db	255
  1132   00F01C  FF                 	db	255
  1133   00F01D  FF                 	db	255
  1134   00F01E  FF                 	db	255
  1135   00F01F  FF                 	db	255
  1136   00F020  FF                 	db	255
  1137   00F021  FF                 	db	255
  1138   00F022  FF                 	db	255
  1139   00F023  FF                 	db	255
  1140   00F024  FF                 	db	255
  1141   00F025  FF                 	db	255
  1142   00F026  FF                 	db	255
  1143   00F027  FF                 	db	255
  1144   00F028  FF                 	db	255
  1145   00F029  FF                 	db	255
  1146   00F02A  FF                 	db	255
  1147   00F02B  FF                 	db	255
  1148   00F02C  FF                 	db	255
  1149   00F02D  FF                 	db	255
  1150   00F02E  FF                 	db	255
  1151   00F02F  FF                 	db	255
  1152   00F030  FF                 	db	255
  1153   00F031  FF                 	db	255
  1154   00F032  FF                 	db	255
  1155   00F033  FF                 	db	255
  1156   00F034  FF                 	db	255
  1157   00F035  FF                 	db	255
  1158   00F036  FF                 	db	255
  1159   00F037  FF                 	db	255
  1160   00F038  FF                 	db	255
  1161   00F039  FF                 	db	255
  1162   00F03A  FF                 	db	255
  1163   00F03B  FF                 	db	255
  1164   00F03C  FF                 	db	255
  1165   00F03D  FF                 	db	255
  1166   00F03E  FF                 	db	255
  1167   00F03F  FF                 	db	255
  1168   00F040  FF                 	db	255
  1169   00F041  FF                 	db	255
  1170   00F042  FF                 	db	255
  1171   00F043  FF                 	db	255
  1172   00F044  FF                 	db	255
  1173   00F045  FF                 	db	255
  1174   00F046  FF                 	db	255
  1175   00F047  FF                 	db	255
  1176   00F048  FF                 	db	255
  1177   00F049  FF                 	db	255
  1178   00F04A  FF                 	db	255
  1179   00F04B  FF                 	db	255
  1180   00F04C  FF                 	db	255
  1181   00F04D  FF                 	db	255
  1182   00F04E  FF                 	db	255
  1183   00F04F  FF                 	db	255
  1184   00F050  FF                 	db	255
  1185   00F051  FF                 	db	255
  1186   00F052  FF                 	db	255
  1187   00F053  FF                 	db	255
  1188   00F054  FF                 	db	255
  1189   00F055  FF                 	db	255
  1190   00F056  FF                 	db	255
  1191   00F057  FF                 	db	255
  1192   00F058  FF                 	db	255
  1193   00F059  FF                 	db	255
  1194   00F05A  FF                 	db	255
  1195   00F05B  FF                 	db	255
  1196   00F05C  FF                 	db	255
  1197   00F05D  FF                 	db	255
  1198   00F05E  FF                 	db	255
  1199   00F05F  FF                 	db	255
  1200   00F060  FF                 	db	255
  1201   00F061  FF                 	db	255
  1202   00F062  FF                 	db	255
  1203   00F063  FF                 	db	255
  1204   00F064  FF                 	db	255
  1205   00F065  FF                 	db	255
  1206   00F066  FF                 	db	255
  1207   00F067  FF                 	db	255
  1208   00F068  FF                 	db	255
  1209   00F069  FF                 	db	255
  1210   00F06A  FF                 	db	255
  1211   00F06B  FF                 	db	255
  1212   00F06C  FF                 	db	255
  1213   00F06D  FF                 	db	255
  1214   00F06E  FF                 	db	255
  1215   00F06F  FF                 	db	255
  1216   00F070  FF                 	db	255
  1217   00F071  FF                 	db	255
  1218   00F072  FF                 	db	255
  1219   00F073  FF                 	db	255
  1220   00F074  FF                 	db	255
  1221   00F075  FF                 	db	255
  1222   00F076  FF                 	db	255
  1223   00F077  FF                 	db	255
  1224   00F078  FF                 	db	255
  1225   00F079  FF                 	db	255
  1226   00F07A  FF                 	db	255
  1227   00F07B  FF                 	db	255
  1228   00F07C  FF                 	db	255
  1229   00F07D  FF                 	db	255
  1230   00F07E  FF                 	db	255
  1231   00F07F  FF                 	db	255
  1232   00F080  FF                 	db	255
  1233   00F081  FF                 	db	255
  1234   00F082  FF                 	db	255
  1235   00F083  FF                 	db	255
  1236   00F084  FF                 	db	255
  1237   00F085  FF                 	db	255
  1238   00F086  FF                 	db	255
  1239   00F087  FF                 	db	255
  1240   00F088  FF                 	db	255
  1241   00F089  FF                 	db	255
  1242   00F08A  FF                 	db	255
  1243   00F08B  FF                 	db	255
  1244   00F08C  FF                 	db	255
  1245   00F08D  FF                 	db	255
  1246   00F08E  FF                 	db	255
  1247   00F08F  FF                 	db	255
  1248   00F090  FF                 	db	255
  1249   00F091  FF                 	db	255
  1250   00F092  FF                 	db	255
  1251   00F093  FF                 	db	255
  1252   00F094  FF                 	db	255
  1253   00F095  FF                 	db	255
  1254   00F096  FF                 	db	255
  1255   00F097  FF                 	db	255
  1256   00F098  FF                 	db	255
  1257   00F099  FF                 	db	255
  1258   00F09A  FF                 	db	255
  1259   00F09B  FF                 	db	255
  1260   00F09C  FF                 	db	255
  1261   00F09D  FF                 	db	255
  1262   00F09E  FF                 	db	255
  1263   00F09F  FF                 	db	255
  1264   00F0A0  FF                 	db	255
  1265   00F0A1  FF                 	db	255
  1266   00F0A2  FF                 	db	255
  1267   00F0A3  FF                 	db	255
  1268   00F0A4  FF                 	db	255
  1269   00F0A5  FF                 	db	255
  1270   00F0A6  FF                 	db	255
  1271   00F0A7  FF                 	db	255
  1272   00F0A8  FF                 	db	255
  1273   00F0A9  FF                 	db	255
  1274   00F0AA  FF                 	db	255
  1275   00F0AB  FF                 	db	255
  1276   00F0AC  FF                 	db	255
  1277   00F0AD  FF                 	db	255
  1278   00F0AE  FF                 	db	255
  1279   00F0AF  FF                 	db	255
  1280   00F0B0  FF                 	db	255
  1281   00F0B1  FF                 	db	255
  1282   00F0B2  FF                 	db	255
  1283   00F0B3  FF                 	db	255
  1284   00F0B4  FF                 	db	255
  1285   00F0B5  FF                 	db	255
  1286   00F0B6  FF                 	db	255
  1287   00F0B7  FF                 	db	255
  1288   00F0B8  FF                 	db	255
  1289   00F0B9  FF                 	db	255
  1290   00F0BA  FF                 	db	255
  1291   00F0BB  FF                 	db	255
  1292   00F0BC  FF                 	db	255
  1293   00F0BD  FF                 	db	255
  1294   00F0BE  FF                 	db	255
  1295   00F0BF  FF                 	db	255
  1296   00F0C0  FF                 	db	255
  1297   00F0C1  FF                 	db	255
  1298   00F0C2  FF                 	db	255
  1299   00F0C3  FF                 	db	255
  1300   00F0C4  FF                 	db	255
  1301   00F0C5  FF                 	db	255
  1302   00F0C6  FF                 	db	255
  1303   00F0C7  FF                 	db	255
  1304   00F0C8  FF                 	db	255
  1305   00F0C9  FF                 	db	255
  1306   00F0CA  FF                 	db	255
  1307   00F0CB  FF                 	db	255
  1308   00F0CC  FF                 	db	255
  1309   00F0CD  FF                 	db	255
  1310   00F0CE  FF                 	db	255
  1311   00F0CF  FF                 	db	255
  1312   00F0D0  FF                 	db	255
  1313   00F0D1  FF                 	db	255
  1314   00F0D2  FF                 	db	255
  1315   00F0D3  FF                 	db	255
  1316   00F0D4  FF                 	db	255
  1317   00F0D5  FF                 	db	255
  1318   00F0D6  FF                 	db	255
  1319   00F0D7  FF                 	db	255
  1320   00F0D8  FF                 	db	255
  1321   00F0D9  FF                 	db	255
  1322   00F0DA  FF                 	db	255
  1323   00F0DB  FF                 	db	255
  1324   00F0DC  FF                 	db	255
  1325   00F0DD  FF                 	db	255
  1326   00F0DE  FF                 	db	255
  1327   00F0DF  FF                 	db	255
  1328   00F0E0  FF                 	db	255
  1329   00F0E1  FF                 	db	255
  1330   00F0E2  FF                 	db	255
  1331   00F0E3  FF                 	db	255
  1332   00F0E4  FF                 	db	255
  1333   00F0E5  FF                 	db	255
  1334   00F0E6  FF                 	db	255
  1335   00F0E7  FF                 	db	255
  1336   00F0E8  FF                 	db	255
  1337   00F0E9  FF                 	db	255
  1338   00F0EA  FF                 	db	255
  1339   00F0EB  FF                 	db	255
  1340   00F0EC  FF                 	db	255
  1341   00F0ED  FF                 	db	255
  1342   00F0EE  FF                 	db	255
  1343   00F0EF  FF                 	db	255
  1344   00F0F0  FF                 	db	255
  1345   00F0F1  FF                 	db	255
  1346   00F0F2  FF                 	db	255
  1347   00F0F3  FF                 	db	255
  1348   00F0F4  FF                 	db	255
  1349   00F0F5  FF                 	db	255
  1350   00F0F6  FF                 	db	255
  1351   00F0F7  FF                 	db	255
  1352   00F0F8  FF                 	db	255
  1353   00F0F9  FF                 	db	255
  1354   00F0FA  FF                 	db	255
  1355   00F0FB  FF                 	db	255
  1356   00F0FC  FF                 	db	255
  1357   00F0FD  FF                 	db	255
  1358   00F0FE  FF                 	db	255
  1359   00F0FF  FF                 	db	255
  1360   00F100  FF                 	db	255
  1361   00F101  FF                 	db	255
  1362   00F102  FF                 	db	255
  1363   00F103  FF                 	db	255
  1364   00F104  FF                 	db	255
  1365   00F105  FF                 	db	255
  1366   00F106  FF                 	db	255
  1367   00F107  FF                 	db	255
  1368   00F108  FF                 	db	255
  1369   00F109  FF                 	db	255
  1370   00F10A  FF                 	db	255
  1371   00F10B  FF                 	db	255
  1372   00F10C  FF                 	db	255
  1373   00F10D  FF                 	db	255
  1374   00F10E  FF                 	db	255
  1375   00F10F  FF                 	db	255
  1376   00F110  FF                 	db	255
  1377   00F111  FF                 	db	255
  1378   00F112  FF                 	db	255
  1379   00F113  FF                 	db	255
  1380   00F114  FF                 	db	255
  1381   00F115  FF                 	db	255
  1382   00F116  FF                 	db	255
  1383   00F117  FF                 	db	255
  1384   00F118  FF                 	db	255
  1385   00F119  FF                 	db	255
  1386   00F11A  FF                 	db	255
  1387   00F11B  FF                 	db	255
  1388   00F11C  FF                 	db	255
  1389   00F11D  FF                 	db	255
  1390   00F11E  FF                 	db	255
  1391   00F11F  FF                 	db	255
  1392   00F120  FF                 	db	255
  1393   00F121  FF                 	db	255
  1394   00F122  FF                 	db	255
  1395   00F123  FF                 	db	255
  1396   00F124  FF                 	db	255
  1397   00F125  FF                 	db	255
  1398   00F126  FF                 	db	255
  1399   00F127  FF                 	db	255
  1400   00F128  FF                 	db	255
  1401   00F129  FF                 	db	255
  1402   00F12A  FF                 	db	255
  1403   00F12B  FF                 	db	255
  1404   00F12C  FF                 	db	255
  1405   00F12D  FF                 	db	255
  1406   00F12E  FF                 	db	255
  1407   00F12F  FF                 	db	255
  1408   00F130  FF                 	db	255
  1409   00F131  FF                 	db	255
  1410   00F132  FF                 	db	255
  1411   00F133  FF                 	db	255
  1412   00F134  FF                 	db	255
  1413   00F135  FF                 	db	255
  1414   00F136  FF                 	db	255
  1415   00F137  FF                 	db	255
  1416   00F138  FF                 	db	255
  1417   00F139  FF                 	db	255
  1418   00F13A  FF                 	db	255
  1419   00F13B  FF                 	db	255
  1420   00F13C  FF                 	db	255
  1421   00F13D  FF                 	db	255
  1422   00F13E  FF                 	db	255
  1423   00F13F  FF                 	db	255
  1424   00F140  FF                 	db	255
  1425   00F141  FF                 	db	255
  1426   00F142  FF                 	db	255
  1427   00F143  FF                 	db	255
  1428   00F144  FF                 	db	255
  1429   00F145  FF                 	db	255
  1430   00F146  FF                 	db	255
  1431   00F147  FF                 	db	255
  1432   00F148  FF                 	db	255
  1433   00F149  FF                 	db	255
  1434   00F14A  FF                 	db	255
  1435   00F14B  FF                 	db	255
  1436   00F14C  FF                 	db	255
  1437   00F14D  FF                 	db	255
  1438   00F14E  FF                 	db	255
  1439   00F14F  FF                 	db	255
  1440   00F150  FF                 	db	255
  1441   00F151  FF                 	db	255
  1442   00F152  FF                 	db	255
  1443   00F153  FF                 	db	255
  1444   00F154  FF                 	db	255
  1445   00F155  FF                 	db	255
  1446   00F156  FF                 	db	255
  1447   00F157  FF                 	db	255
  1448   00F158  FF                 	db	255
  1449   00F159  FF                 	db	255
  1450   00F15A  FF                 	db	255
  1451   00F15B  FF                 	db	255
  1452   00F15C  FF                 	db	255
  1453   00F15D  FF                 	db	255
  1454   00F15E  FF                 	db	255
  1455   00F15F  FF                 	db	255
  1456   00F160  FF                 	db	255
  1457   00F161  FF                 	db	255
  1458   00F162  FF                 	db	255
  1459   00F163  FF                 	db	255
  1460   00F164  FF                 	db	255
  1461   00F165  FF                 	db	255
  1462   00F166  FF                 	db	255
  1463   00F167  FF                 	db	255
  1464   00F168  FF                 	db	255
  1465   00F169  FF                 	db	255
  1466   00F16A  FF                 	db	255
  1467   00F16B  FF                 	db	255
  1468   00F16C  FF                 	db	255
  1469   00F16D  FF                 	db	255
  1470   00F16E  FF                 	db	255
  1471   00F16F  FF                 	db	255
  1472   00F170  FF                 	db	255
  1473   00F171  FF                 	db	255
  1474   00F172  FF                 	db	255
  1475   00F173  FF                 	db	255
  1476   00F174  FF                 	db	255
  1477   00F175  FF                 	db	255
  1478   00F176  FF                 	db	255
  1479   00F177  FF                 	db	255
  1480   00F178  FF                 	db	255
  1481   00F179  FF                 	db	255
  1482   00F17A  FF                 	db	255
  1483   00F17B  FF                 	db	255
  1484   00F17C  FF                 	db	255
  1485   00F17D  FF                 	db	255
  1486   00F17E  FF                 	db	255
  1487   00F17F  FF                 	db	255
  1488   00F180  FF                 	db	255
  1489   00F181  FF                 	db	255
  1490   00F182  FF                 	db	255
  1491   00F183  FF                 	db	255
  1492   00F184  FF                 	db	255
  1493   00F185  FF                 	db	255
  1494   00F186  FF                 	db	255
  1495   00F187  FF                 	db	255
  1496   00F188  FF                 	db	255
  1497   00F189  FF                 	db	255
  1498   00F18A  FF                 	db	255
  1499   00F18B  FF                 	db	255
  1500   00F18C  FF                 	db	255
  1501   00F18D  FF                 	db	255
  1502   00F18E  FF                 	db	255
  1503   00F18F  FF                 	db	255
  1504   00F190  FF                 	db	255
  1505   00F191  FF                 	db	255
  1506   00F192  FF                 	db	255
  1507   00F193  FF                 	db	255
  1508   00F194  FF                 	db	255
  1509   00F195  FF                 	db	255
  1510   00F196  FF                 	db	255
  1511   00F197  FF                 	db	255
  1512   00F198  FF                 	db	255
  1513   00F199  FF                 	db	255
  1514   00F19A  FF                 	db	255
  1515   00F19B  FF                 	db	255
  1516   00F19C  FF                 	db	255
  1517   00F19D  FF                 	db	255
  1518   00F19E  FF                 	db	255
  1519   00F19F  FF                 	db	255
  1520   00F1A0  FF                 	db	255
  1521   00F1A1  FF                 	db	255
  1522   00F1A2  FF                 	db	255
  1523   00F1A3  FF                 	db	255
  1524   00F1A4  FF                 	db	255
  1525   00F1A5  FF                 	db	255
  1526   00F1A6  FF                 	db	255
  1527   00F1A7  FF                 	db	255
  1528   00F1A8  FF                 	db	255
  1529   00F1A9  FF                 	db	255
  1530   00F1AA  FF                 	db	255
  1531   00F1AB  FF                 	db	255
  1532   00F1AC  FF                 	db	255
  1533   00F1AD  FF                 	db	255
  1534   00F1AE  FF                 	db	255
  1535   00F1AF  FF                 	db	255
  1536   00F1B0  FF                 	db	255
  1537   00F1B1  FF                 	db	255
  1538   00F1B2  FF                 	db	255
  1539   00F1B3  FF                 	db	255
  1540   00F1B4  FF                 	db	255
  1541   00F1B5  FF                 	db	255
  1542   00F1B6  FF                 	db	255
  1543   00F1B7  FF                 	db	255
  1544   00F1B8  FF                 	db	255
  1545   00F1B9  FF                 	db	255
  1546   00F1BA  FF                 	db	255
  1547   00F1BB  FF                 	db	255
  1548   00F1BC  FF                 	db	255
  1549   00F1BD  FF                 	db	255
  1550   00F1BE  FF                 	db	255
  1551   00F1BF  FF                 	db	255
  1552   00F1C0  FF                 	db	255
  1553   00F1C1  FF                 	db	255
  1554   00F1C2  FF                 	db	255
  1555   00F1C3  FF                 	db	255
  1556   00F1C4  FF                 	db	255
  1557   00F1C5  FF                 	db	255
  1558   00F1C6  FF                 	db	255
  1559   00F1C7  FF                 	db	255
  1560   00F1C8  FF                 	db	255
  1561   00F1C9  FF                 	db	255
  1562   00F1CA  FF                 	db	255
  1563   00F1CB  FF                 	db	255
  1564   00F1CC  FF                 	db	255
  1565   00F1CD  FF                 	db	255
  1566   00F1CE  FF                 	db	255
  1567   00F1CF  FF                 	db	255
  1568   00F1D0  FF                 	db	255
  1569   00F1D1  FF                 	db	255
  1570   00F1D2  FF                 	db	255
  1571   00F1D3  FF                 	db	255
  1572   00F1D4  FF                 	db	255
  1573   00F1D5  FF                 	db	255
  1574   00F1D6  FF                 	db	255
  1575   00F1D7  FF                 	db	255
  1576   00F1D8  FF                 	db	255
  1577   00F1D9  FF                 	db	255
  1578   00F1DA  FF                 	db	255
  1579   00F1DB  FF                 	db	255
  1580   00F1DC  FF                 	db	255
  1581   00F1DD  FF                 	db	255
  1582   00F1DE  FF                 	db	255
  1583   00F1DF  FF                 	db	255
  1584   00F1E0  FF                 	db	255
  1585   00F1E1  FF                 	db	255
  1586   00F1E2  FF                 	db	255
  1587   00F1E3  FF                 	db	255
  1588   00F1E4  FF                 	db	255
  1589   00F1E5  FF                 	db	255
  1590   00F1E6  FF                 	db	255
  1591   00F1E7  FF                 	db	255
  1592   00F1E8  FF                 	db	255
  1593   00F1E9  FF                 	db	255
  1594   00F1EA  FF                 	db	255
  1595   00F1EB  FF                 	db	255
  1596   00F1EC  FF                 	db	255
  1597   00F1ED  FF                 	db	255
  1598   00F1EE  FF                 	db	255
  1599   00F1EF  FF                 	db	255
  1600   00F1F0  FF                 	db	255
  1601   00F1F1  FF                 	db	255
  1602   00F1F2  FF                 	db	255
  1603   00F1F3  FF                 	db	255
  1604   00F1F4  FF                 	db	255
  1605   00F1F5  FF                 	db	255
  1606   00F1F6  FF                 	db	255
  1607   00F1F7  FF                 	db	255
  1608   00F1F8  FF                 	db	255
  1609   00F1F9  FF                 	db	255
  1610   00F1FA  FF                 	db	255
  1611   00F1FB  FF                 	db	255
  1612   00F1FC  FF                 	db	255
  1613   00F1FD  FF                 	db	255
  1614   00F1FE  FF                 	db	255
  1615   00F1FF  FF                 	db	255
  1616   00F200  FF                 	db	255
  1617   00F201  FF                 	db	255
  1618   00F202  FF                 	db	255
  1619   00F203  FF                 	db	255
  1620   00F204  FF                 	db	255
  1621   00F205  FF                 	db	255
  1622   00F206  FF                 	db	255
  1623   00F207  FF                 	db	255
  1624   00F208  FF                 	db	255
  1625   00F209  FF                 	db	255
  1626   00F20A  FF                 	db	255
  1627   00F20B  FF                 	db	255
  1628   00F20C  FF                 	db	255
  1629   00F20D  FF                 	db	255
  1630   00F20E  FF                 	db	255
  1631   00F20F  FF                 	db	255
  1632   00F210  FF                 	db	255
  1633   00F211  FF                 	db	255
  1634   00F212  FF                 	db	255
  1635   00F213  FF                 	db	255
  1636   00F214  FF                 	db	255
  1637   00F215  FF                 	db	255
  1638   00F216  FF                 	db	255
  1639   00F217  FF                 	db	255
  1640   00F218  FF                 	db	255
  1641   00F219  FF                 	db	255
  1642   00F21A  FF                 	db	255
  1643   00F21B  FF                 	db	255
  1644   00F21C  FF                 	db	255
  1645   00F21D  FF                 	db	255
  1646   00F21E  FF                 	db	255
  1647   00F21F  FF                 	db	255
  1648   00F220  FF                 	db	255
  1649   00F221  FF                 	db	255
  1650   00F222  FF                 	db	255
  1651   00F223  FF                 	db	255
  1652   00F224  FF                 	db	255
  1653   00F225  FF                 	db	255
  1654   00F226  FF                 	db	255
  1655   00F227  FF                 	db	255
  1656   00F228  FF                 	db	255
  1657   00F229  FF                 	db	255
  1658   00F22A  FF                 	db	255
  1659   00F22B  FF                 	db	255
  1660   00F22C  FF                 	db	255
  1661   00F22D  FF                 	db	255
  1662   00F22E  FF                 	db	255
  1663   00F22F  FF                 	db	255
  1664   00F230  FF                 	db	255
  1665   00F231  FF                 	db	255
  1666   00F232  FF                 	db	255
  1667   00F233  FF                 	db	255
  1668   00F234  FF                 	db	255
  1669   00F235  FF                 	db	255
  1670   00F236  FF                 	db	255
  1671   00F237  FF                 	db	255
  1672   00F238  FF                 	db	255
  1673   00F239  FF                 	db	255
  1674   00F23A  FF                 	db	255
  1675   00F23B  FF                 	db	255
  1676   00F23C  FF                 	db	255
  1677   00F23D  FF                 	db	255
  1678   00F23E  FF                 	db	255
  1679   00F23F  FF                 	db	255
  1680   00F240  FF                 	db	255
  1681   00F241  FF                 	db	255
  1682   00F242  FF                 	db	255
  1683   00F243  FF                 	db	255
  1684   00F244  FF                 	db	255
  1685   00F245  FF                 	db	255
  1686   00F246  FF                 	db	255
  1687   00F247  FF                 	db	255
  1688   00F248  FF                 	db	255
  1689   00F249  FF                 	db	255
  1690   00F24A  FF                 	db	255
  1691   00F24B  FF                 	db	255
  1692   00F24C  FF                 	db	255
  1693   00F24D  FF                 	db	255
  1694   00F24E  FF                 	db	255
  1695   00F24F  FF                 	db	255
  1696   00F250  FF                 	db	255
  1697   00F251  FF                 	db	255
  1698   00F252  FF                 	db	255
  1699   00F253  FF                 	db	255
  1700   00F254  FF                 	db	255
  1701   00F255  FF                 	db	255
  1702   00F256  FF                 	db	255
  1703   00F257  FF                 	db	255
  1704   00F258  FF                 	db	255
  1705   00F259  FF                 	db	255
  1706   00F25A  FF                 	db	255
  1707   00F25B  FF                 	db	255
  1708   00F25C  FF                 	db	255
  1709   00F25D  FF                 	db	255
  1710   00F25E  FF                 	db	255
  1711   00F25F  FF                 	db	255
  1712   00F260  FF                 	db	255
  1713   00F261  FF                 	db	255
  1714   00F262  FF                 	db	255
  1715   00F263  FF                 	db	255
  1716   00F264  FF                 	db	255
  1717   00F265  FF                 	db	255
  1718   00F266  FF                 	db	255
  1719   00F267  FF                 	db	255
  1720   00F268  FF                 	db	255
  1721   00F269  FF                 	db	255
  1722   00F26A  FF                 	db	255
  1723   00F26B  FF                 	db	255
  1724   00F26C  FF                 	db	255
  1725   00F26D  FF                 	db	255
  1726   00F26E  FF                 	db	255
  1727   00F26F  FF                 	db	255
  1728   00F270  FF                 	db	255
  1729   00F271  FF                 	db	255
  1730   00F272  FF                 	db	255
  1731   00F273  FF                 	db	255
  1732   00F274  FF                 	db	255
  1733   00F275  FF                 	db	255
  1734   00F276  FF                 	db	255
  1735   00F277  FF                 	db	255
  1736   00F278  FF                 	db	255
  1737   00F279  FF                 	db	255
  1738   00F27A  FF                 	db	255
  1739   00F27B  FF                 	db	255
  1740   00F27C  FF                 	db	255
  1741   00F27D  FF                 	db	255
  1742   00F27E  FF                 	db	255
  1743   00F27F  FF                 	db	255
  1744   00F280  FF                 	db	255
  1745   00F281  FF                 	db	255
  1746   00F282  FF                 	db	255
  1747   00F283  FF                 	db	255
  1748   00F284  FF                 	db	255
  1749   00F285  FF                 	db	255
  1750   00F286  FF                 	db	255
  1751   00F287  FF                 	db	255
  1752   00F288  FF                 	db	255
  1753   00F289  FF                 	db	255
  1754   00F28A  FF                 	db	255
  1755   00F28B  FF                 	db	255
  1756   00F28C  FF                 	db	255
  1757   00F28D  FF                 	db	255
  1758   00F28E  FF                 	db	255
  1759   00F28F  FF                 	db	255
  1760   00F290  FF                 	db	255
  1761   00F291  FF                 	db	255
  1762   00F292  FF                 	db	255
  1763   00F293  FF                 	db	255
  1764   00F294  FF                 	db	255
  1765   00F295  FF                 	db	255
  1766   00F296  FF                 	db	255
  1767   00F297  FF                 	db	255
  1768   00F298  FF                 	db	255
  1769   00F299  FF                 	db	255
  1770   00F29A  FF                 	db	255
  1771   00F29B  FF                 	db	255
  1772   00F29C  FF                 	db	255
  1773   00F29D  FF                 	db	255
  1774   00F29E  FF                 	db	255
  1775   00F29F  FF                 	db	255
  1776   00F2A0  FF                 	db	255
  1777   00F2A1  FF                 	db	255
  1778   00F2A2  FF                 	db	255
  1779   00F2A3  FF                 	db	255
  1780   00F2A4  FF                 	db	255
  1781   00F2A5  FF                 	db	255
  1782   00F2A6  FF                 	db	255
  1783   00F2A7  FF                 	db	255
  1784   00F2A8  FF                 	db	255
  1785   00F2A9  FF                 	db	255
  1786   00F2AA  FF                 	db	255
  1787   00F2AB  FF                 	db	255
  1788   00F2AC  FF                 	db	255
  1789   00F2AD  FF                 	db	255
  1790   00F2AE  FF                 	db	255
  1791   00F2AF  FF                 	db	255
  1792   00F2B0  FF                 	db	255
  1793   00F2B1  FF                 	db	255
  1794   00F2B2  FF                 	db	255
  1795   00F2B3  FF                 	db	255
  1796   00F2B4  FF                 	db	255
  1797   00F2B5  FF                 	db	255
  1798   00F2B6  FF                 	db	255
  1799   00F2B7  FF                 	db	255
  1800   00F2B8  FF                 	db	255
  1801   00F2B9  FF                 	db	255
  1802   00F2BA  FF                 	db	255
  1803   00F2BB  FF                 	db	255
  1804   00F2BC  FF                 	db	255
  1805   00F2BD  FF                 	db	255
  1806   00F2BE  FF                 	db	255
  1807   00F2BF  FF                 	db	255
  1808   00F2C0  FF                 	db	255
  1809   00F2C1  FF                 	db	255
  1810   00F2C2  FF                 	db	255
  1811   00F2C3  FF                 	db	255
  1812   00F2C4  FF                 	db	255
  1813   00F2C5  FF                 	db	255
  1814   00F2C6  FF                 	db	255
  1815   00F2C7  FF                 	db	255
  1816   00F2C8  FF                 	db	255
  1817   00F2C9  FF                 	db	255
  1818   00F2CA  FF                 	db	255
  1819   00F2CB  FF                 	db	255
  1820   00F2CC  FF                 	db	255
  1821   00F2CD  FF                 	db	255
  1822   00F2CE  FF                 	db	255
  1823   00F2CF  FF                 	db	255
  1824   00F2D0  FF                 	db	255
  1825   00F2D1  FF                 	db	255
  1826   00F2D2  FF                 	db	255
  1827   00F2D3  FF                 	db	255
  1828   00F2D4  FF                 	db	255
  1829   00F2D5  FF                 	db	255
  1830   00F2D6  FF                 	db	255
  1831   00F2D7  FF                 	db	255
  1832   00F2D8  FF                 	db	255
  1833   00F2D9  FF                 	db	255
  1834   00F2DA  FF                 	db	255
  1835   00F2DB  FF                 	db	255
  1836   00F2DC  FF                 	db	255
  1837   00F2DD  FF                 	db	255
  1838   00F2DE  FF                 	db	255
  1839   00F2DF  FF                 	db	255
  1840   00F2E0  FF                 	db	255
  1841   00F2E1  FF                 	db	255
  1842   00F2E2  FF                 	db	255
  1843   00F2E3  FF                 	db	255
  1844   00F2E4  FF                 	db	255
  1845   00F2E5  FF                 	db	255
  1846   00F2E6  FF                 	db	255
  1847   00F2E7  FF                 	db	255
  1848   00F2E8  FF                 	db	255
  1849   00F2E9  FF                 	db	255
  1850   00F2EA  FF                 	db	255
  1851   00F2EB  FF                 	db	255
  1852   00F2EC  FF                 	db	255
  1853   00F2ED  FF                 	db	255
  1854   00F2EE  FF                 	db	255
  1855   00F2EF  FF                 	db	255
  1856   00F2F0  FF                 	db	255
  1857   00F2F1  FF                 	db	255
  1858   00F2F2  FF                 	db	255
  1859   00F2F3  FF                 	db	255
  1860   00F2F4  FF                 	db	255
  1861   00F2F5  FF                 	db	255
  1862   00F2F6  FF                 	db	255
  1863   00F2F7  FF                 	db	255
  1864   00F2F8  FF                 	db	255
  1865   00F2F9  FF                 	db	255
  1866   00F2FA  FF                 	db	255
  1867   00F2FB  FF                 	db	255
  1868   00F2FC  FF                 	db	255
  1869   00F2FD  FF                 	db	255
  1870   00F2FE  FF                 	db	255
  1871   00F2FF  FF                 	db	255
  1872   00F300  FF                 	db	255
  1873   00F301  FF                 	db	255
  1874   00F302  FF                 	db	255
  1875   00F303  FF                 	db	255
  1876   00F304  FF                 	db	255
  1877   00F305  FF                 	db	255
  1878   00F306  FF                 	db	255
  1879   00F307  FF                 	db	255
  1880   00F308  FF                 	db	255
  1881   00F309  FF                 	db	255
  1882   00F30A  FF                 	db	255
  1883   00F30B  FF                 	db	255
  1884   00F30C  FF                 	db	255
  1885   00F30D  FF                 	db	255
  1886   00F30E  FF                 	db	255
  1887   00F30F  FF                 	db	255
  1888   00F310  FF                 	db	255
  1889   00F311  FF                 	db	255
  1890   00F312  FF                 	db	255
  1891   00F313  FF                 	db	255
  1892   00F314  FF                 	db	255
  1893   00F315  FF                 	db	255
  1894   00F316  FF                 	db	255
  1895   00F317  FF                 	db	255
  1896   00F318  FF                 	db	255
  1897   00F319  FF                 	db	255
  1898   00F31A  FF                 	db	255
  1899   00F31B  FF                 	db	255
  1900   00F31C  FF                 	db	255
  1901   00F31D  FF                 	db	255
  1902   00F31E  FF                 	db	255
  1903   00F31F  FF                 	db	255
  1904   00F320  FF                 	db	255
  1905   00F321  FF                 	db	255
  1906   00F322  FF                 	db	255
  1907   00F323  FF                 	db	255
  1908   00F324  FF                 	db	255
  1909   00F325  FF                 	db	255
  1910   00F326  FF                 	db	255
  1911   00F327  FF                 	db	255
  1912   00F328  FF                 	db	255
  1913   00F329  FF                 	db	255
  1914   00F32A  FF                 	db	255
  1915   00F32B  FF                 	db	255
  1916   00F32C  FF                 	db	255
  1917   00F32D  FF                 	db	255
  1918   00F32E  FF                 	db	255
  1919   00F32F  FF                 	db	255
  1920   00F330  FF                 	db	255
  1921   00F331  FF                 	db	255
  1922   00F332  FF                 	db	255
  1923   00F333  FF                 	db	255
  1924   00F334  FF                 	db	255
  1925   00F335  FF                 	db	255
  1926   00F336  FF                 	db	255
  1927   00F337  FF                 	db	255
  1928   00F338  FF                 	db	255
  1929   00F339  FF                 	db	255
  1930   00F33A  FF                 	db	255
  1931   00F33B  FF                 	db	255
  1932   00F33C  FF                 	db	255
  1933   00F33D  FF                 	db	255
  1934   00F33E  FF                 	db	255
  1935   00F33F  FF                 	db	255
  1936   00F340  FF                 	db	255
  1937   00F341  FF                 	db	255
  1938   00F342  FF                 	db	255
  1939   00F343  FF                 	db	255
  1940   00F344  FF                 	db	255
  1941   00F345  FF                 	db	255
  1942   00F346  FF                 	db	255
  1943   00F347  FF                 	db	255
  1944   00F348  FF                 	db	255
  1945   00F349  FF                 	db	255
  1946   00F34A  FF                 	db	255
  1947   00F34B  FF                 	db	255
  1948   00F34C  FF                 	db	255
  1949   00F34D  FF                 	db	255
  1950   00F34E  FF                 	db	255
  1951   00F34F  FF                 	db	255
  1952   00F350  FF                 	db	255
  1953   00F351  FF                 	db	255
  1954   00F352  FF                 	db	255
  1955   00F353  FF                 	db	255
  1956   00F354  FF                 	db	255
  1957   00F355  FF                 	db	255
  1958   00F356  FF                 	db	255
  1959   00F357  FF                 	db	255
  1960   00F358  FF                 	db	255
  1961   00F359  FF                 	db	255
  1962   00F35A  FF                 	db	255
  1963   00F35B  FF                 	db	255
  1964   00F35C  FF                 	db	255
  1965   00F35D  FF                 	db	255
  1966   00F35E  FF                 	db	255
  1967   00F35F  FF                 	db	255
  1968   00F360  FF                 	db	255
  1969   00F361  FF                 	db	255
  1970   00F362  FF                 	db	255
  1971   00F363  FF                 	db	255
  1972   00F364  FF                 	db	255
  1973   00F365  FF                 	db	255
  1974   00F366  FF                 	db	255
  1975   00F367  FF                 	db	255
  1976   00F368  FF                 	db	255
  1977   00F369  FF                 	db	255
  1978   00F36A  FF                 	db	255
  1979   00F36B  FF                 	db	255
  1980   00F36C  FF                 	db	255
  1981   00F36D  FF                 	db	255
  1982   00F36E  FF                 	db	255
  1983   00F36F  FF                 	db	255
  1984   00F370  FF                 	db	255
  1985   00F371  FF                 	db	255
  1986   00F372  FF                 	db	255
  1987   00F373  FF                 	db	255
  1988   00F374  FF                 	db	255
  1989   00F375  FF                 	db	255
  1990   00F376  FF                 	db	255
  1991   00F377  FF                 	db	255
  1992   00F378  FF                 	db	255
  1993   00F379  FF                 	db	255
  1994   00F37A  FF                 	db	255
  1995   00F37B  FF                 	db	255
  1996   00F37C  FF                 	db	255
  1997   00F37D  FF                 	db	255
  1998   00F37E  FF                 	db	255
  1999   00F37F  FF                 	db	255
  2000   00F380  FF                 	db	255
  2001   00F381  FF                 	db	255
  2002   00F382  FF                 	db	255
  2003   00F383  FF                 	db	255
  2004   00F384  FF                 	db	255
  2005   00F385  FF                 	db	255
  2006   00F386  FF                 	db	255
  2007   00F387  FF                 	db	255
  2008   00F388  FF                 	db	255
  2009   00F389  FF                 	db	255
  2010   00F38A  FF                 	db	255
  2011   00F38B  FF                 	db	255
  2012   00F38C  FF                 	db	255
  2013   00F38D  FF                 	db	255
  2014   00F38E  FF                 	db	255
  2015   00F38F  FF                 	db	255
  2016   00F390  FF                 	db	255
  2017   00F391  FF                 	db	255
  2018   00F392  FF                 	db	255
  2019   00F393  FF                 	db	255
  2020   00F394  FF                 	db	255
  2021   00F395  FF                 	db	255
  2022   00F396  FF                 	db	255
  2023   00F397  FF                 	db	255
  2024   00F398  FF                 	db	255
  2025   00F399  FF                 	db	255
  2026   00F39A  FF                 	db	255
  2027   00F39B  FF                 	db	255
  2028   00F39C  FF                 	db	255
  2029   00F39D  FF                 	db	255
  2030   00F39E  FF                 	db	255
  2031   00F39F  FF                 	db	255
  2032   00F3A0  FF                 	db	255
  2033   00F3A1  FF                 	db	255
  2034   00F3A2  FF                 	db	255
  2035   00F3A3  FF                 	db	255
  2036   00F3A4  FF                 	db	255
  2037   00F3A5  FF                 	db	255
  2038   00F3A6  FF                 	db	255
  2039   00F3A7  FF                 	db	255
  2040   00F3A8  FF                 	db	255
  2041   00F3A9  FF                 	db	255
  2042   00F3AA  FF                 	db	255
  2043   00F3AB  FF                 	db	255
  2044   00F3AC  FF                 	db	255
  2045   00F3AD  FF                 	db	255
  2046   00F3AE  FF                 	db	255
  2047   00F3AF  FF                 	db	255
  2048   00F3B0  FF                 	db	255
  2049   00F3B1  FF                 	db	255
  2050   00F3B2  FF                 	db	255
  2051   00F3B3  FF                 	db	255
  2052   00F3B4  FF                 	db	255
  2053   00F3B5  FF                 	db	255
  2054   00F3B6  FF                 	db	255
  2055   00F3B7  FF                 	db	255
  2056   00F3B8  FF                 	db	255
  2057   00F3B9  FF                 	db	255
  2058   00F3BA  FF                 	db	255
  2059   00F3BB  FF                 	db	255
  2060   00F3BC  FF                 	db	255
  2061   00F3BD  FF                 	db	255
  2062   00F3BE  FF                 	db	255
  2063   00F3BF  FF                 	db	255
  2064   00F3C0  FF                 	db	255
  2065   00F3C1  FF                 	db	255
  2066   00F3C2  FF                 	db	255
  2067   00F3C3  FF                 	db	255
  2068   00F3C4  FF                 	db	255
  2069   00F3C5  FF                 	db	255
  2070   00F3C6  FF                 	db	255
  2071   00F3C7  FF                 	db	255
  2072   00F3C8  FF                 	db	255
  2073   00F3C9  FF                 	db	255
  2074   00F3CA  FF                 	db	255
  2075   00F3CB  FF                 	db	255
  2076   00F3CC  FF                 	db	255
  2077   00F3CD  FF                 	db	255
  2078   00F3CE  FF                 	db	255
  2079   00F3CF  FF                 	db	255
  2080   00F3D0  FF                 	db	255
  2081   00F3D1  FF                 	db	255
  2082   00F3D2  FF                 	db	255
  2083   00F3D3  FF                 	db	255
  2084   00F3D4  FF                 	db	255
  2085   00F3D5  FF                 	db	255
  2086   00F3D6  FF                 	db	255
  2087   00F3D7  FF                 	db	255
  2088   00F3D8  FF                 	db	255
  2089   00F3D9  FF                 	db	255
  2090   00F3DA  FF                 	db	255
  2091   00F3DB  FF                 	db	255
  2092   00F3DC  FF                 	db	255
  2093   00F3DD  FF                 	db	255
  2094   00F3DE  FF                 	db	255
  2095   00F3DF  FF                 	db	255
  2096   00F3E0  FF                 	db	255
  2097   00F3E1  FF                 	db	255
  2098   00F3E2  FF                 	db	255
  2099   00F3E3  FF                 	db	255
  2100   00F3E4  FF                 	db	255
  2101   00F3E5  FF                 	db	255
  2102   00F3E6  FF                 	db	255
  2103   00F3E7  FF                 	db	255
  2104   00F3E8  FF                 	db	255
  2105   00F3E9  FF                 	db	255
  2106   00F3EA  FF                 	db	255
  2107   00F3EB  FF                 	db	255
  2108   00F3EC  FF                 	db	255
  2109   00F3ED  FF                 	db	255
  2110   00F3EE  FF                 	db	255
  2111   00F3EF  FF                 	db	255
  2112   00F3F0  FF                 	db	255
  2113   00F3F1  FF                 	db	255
  2114   00F3F2  FF                 	db	255
  2115   00F3F3  FF                 	db	255
  2116   00F3F4  FF                 	db	255
  2117   00F3F5  FF                 	db	255
  2118   00F3F6  FF                 	db	255
  2119   00F3F7  FF                 	db	255
  2120   00F3F8  FF                 	db	255
  2121   00F3F9  FF                 	db	255
  2122   00F3FA  FF                 	db	255
  2123   00F3FB  FF                 	db	255
  2124   00F3FC  FF                 	db	255
  2125   00F3FD  FF                 	db	255
  2126   00F3FE  FF                 	db	255
  2127   00F3FF  FF                 	db	255
  2128   00F400  FF                 	db	255
  2129   00F401  FF                 	db	255
  2130   00F402  FF                 	db	255
  2131   00F403  FF                 	db	255
  2132   00F404  FF                 	db	255
  2133   00F405  FF                 	db	255
  2134   00F406  FF                 	db	255
  2135   00F407  FF                 	db	255
  2136   00F408  FF                 	db	255
  2137   00F409  FF                 	db	255
  2138   00F40A  FF                 	db	255
  2139   00F40B  FF                 	db	255
  2140   00F40C  FF                 	db	255
  2141   00F40D  FF                 	db	255
  2142   00F40E  FF                 	db	255
  2143   00F40F  FF                 	db	255
  2144   00F410  FF                 	db	255
  2145   00F411  FF                 	db	255
  2146   00F412  FF                 	db	255
  2147   00F413  FF                 	db	255
  2148   00F414  FF                 	db	255
  2149   00F415  FF                 	db	255
  2150   00F416  FF                 	db	255
  2151   00F417  FF                 	db	255
  2152   00F418  FF                 	db	255
  2153   00F419  FF                 	db	255
  2154   00F41A  FF                 	db	255
  2155   00F41B  FF                 	db	255
  2156   00F41C  FF                 	db	255
  2157   00F41D  FF                 	db	255
  2158   00F41E  FF                 	db	255
  2159   00F41F  FF                 	db	255
  2160   00F420  FF                 	db	255
  2161   00F421  FF                 	db	255
  2162   00F422  FF                 	db	255
  2163   00F423  FF                 	db	255
  2164   00F424  FF                 	db	255
  2165   00F425  FF                 	db	255
  2166   00F426  FF                 	db	255
  2167   00F427  FF                 	db	255
  2168   00F428  FF                 	db	255
  2169   00F429  FF                 	db	255
  2170   00F42A  FF                 	db	255
  2171   00F42B  FF                 	db	255
  2172   00F42C  FF                 	db	255
  2173   00F42D  FF                 	db	255
  2174   00F42E  FF                 	db	255
  2175   00F42F  FF                 	db	255
  2176   00F430  FF                 	db	255
  2177   00F431  FF                 	db	255
  2178   00F432  FF                 	db	255
  2179   00F433  FF                 	db	255
  2180   00F434  FF                 	db	255
  2181   00F435  FF                 	db	255
  2182   00F436  FF                 	db	255
  2183   00F437  FF                 	db	255
  2184   00F438  FF                 	db	255
  2185   00F439  FF                 	db	255
  2186   00F43A  FF                 	db	255
  2187   00F43B  FF                 	db	255
  2188   00F43C  FF                 	db	255
  2189   00F43D  FF                 	db	255
  2190   00F43E  FF                 	db	255
  2191   00F43F  FF                 	db	255
  2192   00F440  FF                 	db	255
  2193   00F441  FF                 	db	255
  2194   00F442  FF                 	db	255
  2195   00F443  FF                 	db	255
  2196   00F444  FF                 	db	255
  2197   00F445  FF                 	db	255
  2198   00F446  FF                 	db	255
  2199   00F447  FF                 	db	255
  2200   00F448  FF                 	db	255
  2201   00F449  FF                 	db	255
  2202   00F44A  FF                 	db	255
  2203   00F44B  FF                 	db	255
  2204   00F44C  FF                 	db	255
  2205   00F44D  FF                 	db	255
  2206   00F44E  FF                 	db	255
  2207   00F44F  FF                 	db	255
  2208   00F450  FF                 	db	255
  2209   00F451  FF                 	db	255
  2210   00F452  FF                 	db	255
  2211   00F453  FF                 	db	255
  2212   00F454  FF                 	db	255
  2213   00F455  FF                 	db	255
  2214   00F456  FF                 	db	255
  2215   00F457  FF                 	db	255
  2216   00F458  FF                 	db	255
  2217   00F459  FF                 	db	255
  2218   00F45A  FF                 	db	255
  2219   00F45B  FF                 	db	255
  2220   00F45C  FF                 	db	255
  2221   00F45D  FF                 	db	255
  2222   00F45E  FF                 	db	255
  2223   00F45F  FF                 	db	255
  2224   00F460  FF                 	db	255
  2225   00F461  FF                 	db	255
  2226   00F462  FF                 	db	255
  2227   00F463  FF                 	db	255
  2228   00F464  FF                 	db	255
  2229   00F465  FF                 	db	255
  2230   00F466  FF                 	db	255
  2231   00F467  FF                 	db	255
  2232   00F468  FF                 	db	255
  2233   00F469  FF                 	db	255
  2234   00F46A  FF                 	db	255
  2235   00F46B  FF                 	db	255
  2236   00F46C  FF                 	db	255
  2237   00F46D  FF                 	db	255
  2238   00F46E  FF                 	db	255
  2239   00F46F  FF                 	db	255
  2240   00F470  FF                 	db	255
  2241   00F471  FF                 	db	255
  2242   00F472  FF                 	db	255
  2243   00F473  FF                 	db	255
  2244   00F474  FF                 	db	255
  2245   00F475  FF                 	db	255
  2246   00F476  FF                 	db	255
  2247   00F477  FF                 	db	255
  2248   00F478  FF                 	db	255
  2249   00F479  FF                 	db	255
  2250   00F47A  FF                 	db	255
  2251   00F47B  FF                 	db	255
  2252   00F47C  FF                 	db	255
  2253   00F47D  FF                 	db	255
  2254   00F47E  FF                 	db	255
  2255   00F47F  FF                 	db	255
  2256   00F480  FF                 	db	255
  2257   00F481  FF                 	db	255
  2258   00F482  FF                 	db	255
  2259   00F483  FF                 	db	255
  2260   00F484  FF                 	db	255
  2261   00F485  FF                 	db	255
  2262   00F486  FF                 	db	255
  2263   00F487  FF                 	db	255
  2264   00F488  FF                 	db	255
  2265   00F489  FF                 	db	255
  2266   00F48A  FF                 	db	255
  2267   00F48B  FF                 	db	255
  2268   00F48C  FF                 	db	255
  2269   00F48D  FF                 	db	255
  2270   00F48E  FF                 	db	255
  2271   00F48F  FF                 	db	255
  2272   00F490  FF                 	db	255
  2273   00F491  FF                 	db	255
  2274   00F492  FF                 	db	255
  2275   00F493  FF                 	db	255
  2276   00F494  FF                 	db	255
  2277   00F495  FF                 	db	255
  2278   00F496  FF                 	db	255
  2279   00F497  FF                 	db	255
  2280   00F498  FF                 	db	255
  2281   00F499  FF                 	db	255
  2282   00F49A  FF                 	db	255
  2283   00F49B  FF                 	db	255
  2284   00F49C  FF                 	db	255
  2285   00F49D  FF                 	db	255
  2286   00F49E  FF                 	db	255
  2287   00F49F  FF                 	db	255
  2288   00F4A0  FF                 	db	255
  2289   00F4A1  FF                 	db	255
  2290   00F4A2  FF                 	db	255
  2291   00F4A3  FF                 	db	255
  2292   00F4A4  FF                 	db	255
  2293   00F4A5  FF                 	db	255
  2294   00F4A6  FF                 	db	255
  2295   00F4A7  FF                 	db	255
  2296   00F4A8  FF                 	db	255
  2297   00F4A9  FF                 	db	255
  2298   00F4AA  FF                 	db	255
  2299   00F4AB  FF                 	db	255
  2300   00F4AC  FF                 	db	255
  2301   00F4AD  FF                 	db	255
  2302   00F4AE  FF                 	db	255
  2303   00F4AF  FF                 	db	255
  2304   00F4B0  FF                 	db	255
  2305   00F4B1  FF                 	db	255
  2306   00F4B2  FF                 	db	255
  2307   00F4B3  FF                 	db	255
  2308   00F4B4  FF                 	db	255
  2309   00F4B5  FF                 	db	255
  2310   00F4B6  FF                 	db	255
  2311   00F4B7  FF                 	db	255
  2312   00F4B8  FF                 	db	255
  2313   00F4B9  FF                 	db	255
  2314   00F4BA  FF                 	db	255
  2315   00F4BB  FF                 	db	255
  2316   00F4BC  FF                 	db	255
  2317   00F4BD  FF                 	db	255
  2318   00F4BE  FF                 	db	255
  2319   00F4BF  FF                 	db	255
  2320   00F4C0  FF                 	db	255
  2321   00F4C1  FF                 	db	255
  2322   00F4C2  FF                 	db	255
  2323   00F4C3  FF                 	db	255
  2324   00F4C4  FF                 	db	255
  2325   00F4C5  FF                 	db	255
  2326   00F4C6  FF                 	db	255
  2327   00F4C7  FF                 	db	255
  2328   00F4C8  FF                 	db	255
  2329   00F4C9  FF                 	db	255
  2330   00F4CA  FF                 	db	255
  2331   00F4CB  FF                 	db	255
  2332   00F4CC  FF                 	db	255
  2333   00F4CD  FF                 	db	255
  2334   00F4CE  FF                 	db	255
  2335   00F4CF  FF                 	db	255
  2336   00F4D0  FF                 	db	255
  2337   00F4D1  FF                 	db	255
  2338   00F4D2  FF                 	db	255
  2339   00F4D3  FF                 	db	255
  2340   00F4D4  FF                 	db	255
  2341   00F4D5  FF                 	db	255
  2342   00F4D6  FF                 	db	255
  2343   00F4D7  FF                 	db	255
  2344   00F4D8  FF                 	db	255
  2345   00F4D9  FF                 	db	255
  2346   00F4DA  FF                 	db	255
  2347   00F4DB  FF                 	db	255
  2348   00F4DC  FF                 	db	255
  2349   00F4DD  FF                 	db	255
  2350   00F4DE  FF                 	db	255
  2351   00F4DF  FF                 	db	255
  2352   00F4E0  FF                 	db	255
  2353   00F4E1  FF                 	db	255
  2354   00F4E2  FF                 	db	255
  2355   00F4E3  FF                 	db	255
  2356   00F4E4  FF                 	db	255
  2357   00F4E5  FF                 	db	255
  2358   00F4E6  FF                 	db	255
  2359   00F4E7  FF                 	db	255
  2360   00F4E8  FF                 	db	255
  2361   00F4E9  FF                 	db	255
  2362   00F4EA  FF                 	db	255
  2363   00F4EB  FF                 	db	255
  2364   00F4EC  FF                 	db	255
  2365   00F4ED  FF                 	db	255
  2366   00F4EE  FF                 	db	255
  2367   00F4EF  FF                 	db	255
  2368   00F4F0  FF                 	db	255
  2369   00F4F1  FF                 	db	255
  2370   00F4F2  FF                 	db	255
  2371   00F4F3  FF                 	db	255
  2372   00F4F4  FF                 	db	255
  2373   00F4F5  FF                 	db	255
  2374   00F4F6  FF                 	db	255
  2375   00F4F7  FF                 	db	255
  2376   00F4F8  FF                 	db	255
  2377   00F4F9  FF                 	db	255
  2378   00F4FA  FF                 	db	255
  2379   00F4FB  FF                 	db	255
  2380   00F4FC  FF                 	db	255
  2381   00F4FD  FF                 	db	255
  2382   00F4FE  FF                 	db	255
  2383   00F4FF  FF                 	db	255
  2384   00F500  FF                 	db	255
  2385   00F501  FF                 	db	255
  2386   00F502  FF                 	db	255
  2387   00F503  FF                 	db	255
  2388   00F504  FF                 	db	255
  2389   00F505  FF                 	db	255
  2390   00F506  FF                 	db	255
  2391   00F507  FF                 	db	255
  2392   00F508  FF                 	db	255
  2393   00F509  FF                 	db	255
  2394   00F50A  FF                 	db	255
  2395   00F50B  FF                 	db	255
  2396   00F50C  FF                 	db	255
  2397   00F50D  FF                 	db	255
  2398   00F50E  FF                 	db	255
  2399   00F50F  FF                 	db	255
  2400   00F510  FF                 	db	255
  2401   00F511  FF                 	db	255
  2402   00F512  FF                 	db	255
  2403   00F513  FF                 	db	255
  2404   00F514  FF                 	db	255
  2405   00F515  FF                 	db	255
  2406   00F516  FF                 	db	255
  2407   00F517  FF                 	db	255
  2408   00F518  FF                 	db	255
  2409   00F519  FF                 	db	255
  2410   00F51A  FF                 	db	255
  2411   00F51B  FF                 	db	255
  2412   00F51C  FF                 	db	255
  2413   00F51D  FF                 	db	255
  2414   00F51E  FF                 	db	255
  2415   00F51F  FF                 	db	255
  2416   00F520  FF                 	db	255
  2417   00F521  FF                 	db	255
  2418   00F522  FF                 	db	255
  2419   00F523  FF                 	db	255
  2420   00F524  FF                 	db	255
  2421   00F525  FF                 	db	255
  2422   00F526  FF                 	db	255
  2423   00F527  FF                 	db	255
  2424   00F528  FF                 	db	255
  2425   00F529  FF                 	db	255
  2426   00F52A  FF                 	db	255
  2427   00F52B  FF                 	db	255
  2428   00F52C  FF                 	db	255
  2429   00F52D  FF                 	db	255
  2430   00F52E  FF                 	db	255
  2431   00F52F  FF                 	db	255
  2432   00F530  FF                 	db	255
  2433   00F531  FF                 	db	255
  2434   00F532  FF                 	db	255
  2435   00F533  FF                 	db	255
  2436   00F534  FF                 	db	255
  2437   00F535  FF                 	db	255
  2438   00F536  FF                 	db	255
  2439   00F537  FF                 	db	255
  2440   00F538  FF                 	db	255
  2441   00F539  FF                 	db	255
  2442   00F53A  FF                 	db	255
  2443   00F53B  FF                 	db	255
  2444   00F53C  FF                 	db	255
  2445   00F53D  FF                 	db	255
  2446   00F53E  FF                 	db	255
  2447   00F53F  FF                 	db	255
  2448   00F540  FF                 	db	255
  2449   00F541  FF                 	db	255
  2450   00F542  FF                 	db	255
  2451   00F543  FF                 	db	255
  2452   00F544  FF                 	db	255
  2453   00F545  FF                 	db	255
  2454   00F546  FF                 	db	255
  2455   00F547  FF                 	db	255
  2456   00F548  FF                 	db	255
  2457   00F549  FF                 	db	255
  2458   00F54A  FF                 	db	255
  2459   00F54B  FF                 	db	255
  2460   00F54C  FF                 	db	255
  2461   00F54D  FF                 	db	255
  2462   00F54E  FF                 	db	255
  2463   00F54F  FF                 	db	255
  2464   00F550  FF                 	db	255
  2465   00F551  FF                 	db	255
  2466   00F552  FF                 	db	255
  2467   00F553  FF                 	db	255
  2468   00F554  FF                 	db	255
  2469   00F555  FF                 	db	255
  2470   00F556  FF                 	db	255
  2471   00F557  FF                 	db	255
  2472   00F558  FF                 	db	255
  2473   00F559  FF                 	db	255
  2474   00F55A  FF                 	db	255
  2475   00F55B  FF                 	db	255
  2476   00F55C  FF                 	db	255
  2477   00F55D  FF                 	db	255
  2478   00F55E  FF                 	db	255
  2479   00F55F  FF                 	db	255
  2480   00F560  FF                 	db	255
  2481   00F561  FF                 	db	255
  2482   00F562  FF                 	db	255
  2483   00F563  FF                 	db	255
  2484   00F564  FF                 	db	255
  2485   00F565  FF                 	db	255
  2486   00F566  FF                 	db	255
  2487   00F567  FF                 	db	255
  2488   00F568  FF                 	db	255
  2489   00F569  FF                 	db	255
  2490   00F56A  FF                 	db	255
  2491   00F56B  FF                 	db	255
  2492   00F56C  FF                 	db	255
  2493   00F56D  FF                 	db	255
  2494   00F56E  FF                 	db	255
  2495   00F56F  FF                 	db	255
  2496   00F570  FF                 	db	255
  2497   00F571  FF                 	db	255
  2498   00F572  FF                 	db	255
  2499   00F573  FF                 	db	255
  2500   00F574  FF                 	db	255
  2501   00F575  FF                 	db	255
  2502   00F576  FF                 	db	255
  2503   00F577  FF                 	db	255
  2504   00F578  FF                 	db	255
  2505   00F579  FF                 	db	255
  2506   00F57A  FF                 	db	255
  2507   00F57B  FF                 	db	255
  2508   00F57C  FF                 	db	255
  2509   00F57D  FF                 	db	255
  2510   00F57E  FF                 	db	255
  2511   00F57F  FF                 	db	255
  2512   00F580  FF                 	db	255
  2513   00F581  FF                 	db	255
  2514   00F582  FF                 	db	255
  2515   00F583  FF                 	db	255
  2516   00F584  FF                 	db	255
  2517   00F585  FF                 	db	255
  2518   00F586  FF                 	db	255
  2519   00F587  FF                 	db	255
  2520   00F588  FF                 	db	255
  2521   00F589  FF                 	db	255
  2522   00F58A  FF                 	db	255
  2523   00F58B  FF                 	db	255
  2524   00F58C  FF                 	db	255
  2525   00F58D  FF                 	db	255
  2526   00F58E  FF                 	db	255
  2527   00F58F  FF                 	db	255
  2528   00F590  FF                 	db	255
  2529   00F591  FF                 	db	255
  2530   00F592  FF                 	db	255
  2531   00F593  FF                 	db	255
  2532   00F594  FF                 	db	255
  2533   00F595  FF                 	db	255
  2534   00F596  FF                 	db	255
  2535   00F597  FF                 	db	255
  2536   00F598  FF                 	db	255
  2537   00F599  FF                 	db	255
  2538   00F59A  FF                 	db	255
  2539   00F59B  FF                 	db	255
  2540   00F59C  FF                 	db	255
  2541   00F59D  FF                 	db	255
  2542   00F59E  FF                 	db	255
  2543   00F59F  FF                 	db	255
  2544   00F5A0  FF                 	db	255
  2545   00F5A1  FF                 	db	255
  2546   00F5A2  FF                 	db	255
  2547   00F5A3  FF                 	db	255
  2548   00F5A4  FF                 	db	255
  2549   00F5A5  FF                 	db	255
  2550   00F5A6  FF                 	db	255
  2551   00F5A7  FF                 	db	255
  2552   00F5A8  FF                 	db	255
  2553   00F5A9  FF                 	db	255
  2554   00F5AA  FF                 	db	255
  2555   00F5AB  FF                 	db	255
  2556   00F5AC  FF                 	db	255
  2557   00F5AD  FF                 	db	255
  2558   00F5AE  FF                 	db	255
  2559   00F5AF  FF                 	db	255
  2560   00F5B0  FF                 	db	255
  2561   00F5B1  FF                 	db	255
  2562   00F5B2  FF                 	db	255
  2563   00F5B3  FF                 	db	255
  2564   00F5B4  FF                 	db	255
  2565   00F5B5  FF                 	db	255
  2566   00F5B6  FF                 	db	255
  2567   00F5B7  FF                 	db	255
  2568   00F5B8  FF                 	db	255
  2569   00F5B9  FF                 	db	255
  2570   00F5BA  FF                 	db	255
  2571   00F5BB  FF                 	db	255
  2572   00F5BC  FF                 	db	255
  2573   00F5BD  FF                 	db	255
  2574   00F5BE  FF                 	db	255
  2575   00F5BF  FF                 	db	255
  2576   00F5C0  FF                 	db	255
  2577   00F5C1  FF                 	db	255
  2578   00F5C2  FF                 	db	255
  2579   00F5C3  FF                 	db	255
  2580   00F5C4  FF                 	db	255
  2581   00F5C5  FF                 	db	255
  2582   00F5C6  FF                 	db	255
  2583   00F5C7  FF                 	db	255
  2584   00F5C8  FF                 	db	255
  2585   00F5C9  FF                 	db	255
  2586   00F5CA  FF                 	db	255
  2587   00F5CB  FF                 	db	255
  2588   00F5CC  FF                 	db	255
  2589   00F5CD  FF                 	db	255
  2590   00F5CE  FF                 	db	255
  2591   00F5CF  FF                 	db	255
  2592   00F5D0  FF                 	db	255
  2593   00F5D1  FF                 	db	255
  2594   00F5D2  FF                 	db	255
  2595   00F5D3  FF                 	db	255
  2596   00F5D4  FF                 	db	255
  2597   00F5D5  FF                 	db	255
  2598   00F5D6  FF                 	db	255
  2599   00F5D7  FF                 	db	255
  2600   00F5D8  FF                 	db	255
  2601   00F5D9  FF                 	db	255
  2602   00F5DA  FF                 	db	255
  2603   00F5DB  FF                 	db	255
  2604   00F5DC  FF                 	db	255
  2605   00F5DD  FF                 	db	255
  2606   00F5DE  FF                 	db	255
  2607   00F5DF  FF                 	db	255
  2608   00F5E0  FF                 	db	255
  2609   00F5E1  FF                 	db	255
  2610   00F5E2  FF                 	db	255
  2611   00F5E3  FF                 	db	255
  2612   00F5E4  FF                 	db	255
  2613   00F5E5  FF                 	db	255
  2614   00F5E6  FF                 	db	255
  2615   00F5E7  FF                 	db	255
  2616   00F5E8  FF                 	db	255
  2617   00F5E9  FF                 	db	255
  2618   00F5EA  FF                 	db	255
  2619   00F5EB  FF                 	db	255
  2620   00F5EC  FF                 	db	255
  2621   00F5ED  FF                 	db	255
  2622   00F5EE  FF                 	db	255
  2623   00F5EF  FF                 	db	255
  2624   00F5F0  FF                 	db	255
  2625   00F5F1  FF                 	db	255
  2626   00F5F2  FF                 	db	255
  2627   00F5F3  FF                 	db	255
  2628   00F5F4  FF                 	db	255
  2629   00F5F5  FF                 	db	255
  2630   00F5F6  FF                 	db	255
  2631   00F5F7  FF                 	db	255
  2632   00F5F8  FF                 	db	255
  2633   00F5F9  FF                 	db	255
  2634   00F5FA  FF                 	db	255
  2635   00F5FB  FF                 	db	255
  2636   00F5FC  FF                 	db	255
  2637   00F5FD  FF                 	db	255
  2638   00F5FE  FF                 	db	255
  2639   00F5FF  FF                 	db	255
  2640   00F600  FF                 	db	255
  2641   00F601  FF                 	db	255
  2642   00F602  FF                 	db	255
  2643   00F603  FF                 	db	255
  2644   00F604  FF                 	db	255
  2645   00F605  FF                 	db	255
  2646   00F606  FF                 	db	255
  2647   00F607  FF                 	db	255
  2648   00F608  FF                 	db	255
  2649   00F609  FF                 	db	255
  2650   00F60A  FF                 	db	255
  2651   00F60B  FF                 	db	255
  2652   00F60C  FF                 	db	255
  2653   00F60D  FF                 	db	255
  2654   00F60E  FF                 	db	255
  2655   00F60F  FF                 	db	255
  2656   00F610  FF                 	db	255
  2657   00F611  FF                 	db	255
  2658   00F612  FF                 	db	255
  2659   00F613  FF                 	db	255
  2660   00F614  FF                 	db	255
  2661   00F615  FF                 	db	255
  2662   00F616  FF                 	db	255
  2663   00F617  FF                 	db	255
  2664   00F618  FF                 	db	255
  2665   00F619  FF                 	db	255
  2666   00F61A  FF                 	db	255
  2667   00F61B  FF                 	db	255
  2668   00F61C  FF                 	db	255
  2669   00F61D  FF                 	db	255
  2670   00F61E  FF                 	db	255
  2671   00F61F  FF                 	db	255
  2672   00F620  FF                 	db	255
  2673   00F621  FF                 	db	255
  2674   00F622  FF                 	db	255
  2675   00F623  FF                 	db	255
  2676   00F624  FF                 	db	255
  2677   00F625  FF                 	db	255
  2678   00F626  FF                 	db	255
  2679   00F627  FF                 	db	255
  2680   00F628  FF                 	db	255
  2681   00F629  FF                 	db	255
  2682   00F62A  FF                 	db	255
  2683   00F62B  FF                 	db	255
  2684   00F62C  FF                 	db	255
  2685   00F62D  FF                 	db	255
  2686   00F62E  FF                 	db	255
  2687   00F62F  FF                 	db	255
  2688   00F630  FF                 	db	255
  2689   00F631  FF                 	db	255
  2690   00F632  FF                 	db	255
  2691   00F633  FF                 	db	255
  2692   00F634  FF                 	db	255
  2693   00F635  FF                 	db	255
  2694   00F636  FF                 	db	255
  2695   00F637  FF                 	db	255
  2696   00F638  FF                 	db	255
  2697   00F639  FF                 	db	255
  2698   00F63A  FF                 	db	255
  2699   00F63B  FF                 	db	255
  2700   00F63C  FF                 	db	255
  2701   00F63D  FF                 	db	255
  2702   00F63E  FF                 	db	255
  2703   00F63F  FF                 	db	255
  2704   00F640  FF                 	db	255
  2705   00F641  FF                 	db	255
  2706   00F642  FF                 	db	255
  2707   00F643  FF                 	db	255
  2708   00F644  FF                 	db	255
  2709   00F645  FF                 	db	255
  2710   00F646  FF                 	db	255
  2711   00F647  FF                 	db	255
  2712   00F648  FF                 	db	255
  2713   00F649  FF                 	db	255
  2714   00F64A  FF                 	db	255
  2715   00F64B  FF                 	db	255
  2716   00F64C  FF                 	db	255
  2717   00F64D  FF                 	db	255
  2718   00F64E  FF                 	db	255
  2719   00F64F  FF                 	db	255
  2720   00F650  FF                 	db	255
  2721   00F651  FF                 	db	255
  2722   00F652  FF                 	db	255
  2723   00F653  FF                 	db	255
  2724   00F654  FF                 	db	255
  2725   00F655  FF                 	db	255
  2726   00F656  FF                 	db	255
  2727   00F657  FF                 	db	255
  2728   00F658  FF                 	db	255
  2729   00F659  FF                 	db	255
  2730   00F65A  FF                 	db	255
  2731   00F65B  FF                 	db	255
  2732   00F65C  FF                 	db	255
  2733   00F65D  FF                 	db	255
  2734   00F65E  FF                 	db	255
  2735   00F65F  FF                 	db	255
  2736   00F660  FF                 	db	255
  2737   00F661  FF                 	db	255
  2738   00F662  FF                 	db	255
  2739   00F663  FF                 	db	255
  2740   00F664  FF                 	db	255
  2741   00F665  FF                 	db	255
  2742   00F666  FF                 	db	255
  2743   00F667  FF                 	db	255
  2744   00F668  FF                 	db	255
  2745   00F669  FF                 	db	255
  2746   00F66A  FF                 	db	255
  2747   00F66B  FF                 	db	255
  2748   00F66C  FF                 	db	255
  2749   00F66D  FF                 	db	255
  2750   00F66E  FF                 	db	255
  2751   00F66F  FF                 	db	255
  2752   00F670  FF                 	db	255
  2753   00F671  FF                 	db	255
  2754   00F672  FF                 	db	255
  2755   00F673  FF                 	db	255
  2756   00F674  FF                 	db	255
  2757   00F675  FF                 	db	255
  2758   00F676  FF                 	db	255
  2759   00F677  FF                 	db	255
  2760   00F678  FF                 	db	255
  2761   00F679  FF                 	db	255
  2762   00F67A  FF                 	db	255
  2763   00F67B  FF                 	db	255
  2764   00F67C  FF                 	db	255
  2765   00F67D  FF                 	db	255
  2766   00F67E  FF                 	db	255
  2767   00F67F  FF                 	db	255
  2768   00F680  FF                 	db	255
  2769   00F681  FF                 	db	255
  2770   00F682  FF                 	db	255
  2771   00F683  FF                 	db	255
  2772   00F684  FF                 	db	255
  2773   00F685  FF                 	db	255
  2774   00F686  FF                 	db	255
  2775   00F687  FF                 	db	255
  2776   00F688  FF                 	db	255
  2777   00F689  FF                 	db	255
  2778   00F68A  FF                 	db	255
  2779   00F68B  FF                 	db	255
  2780   00F68C  FF                 	db	255
  2781   00F68D  FF                 	db	255
  2782   00F68E  FF                 	db	255
  2783   00F68F  FF                 	db	255
  2784   00F690  FF                 	db	255
  2785   00F691  FF                 	db	255
  2786   00F692  FF                 	db	255
  2787   00F693  FF                 	db	255
  2788   00F694  FF                 	db	255
  2789   00F695  FF                 	db	255
  2790   00F696  FF                 	db	255
  2791   00F697  FF                 	db	255
  2792   00F698  FF                 	db	255
  2793   00F699  FF                 	db	255
  2794   00F69A  FF                 	db	255
  2795   00F69B  FF                 	db	255
  2796   00F69C  FF                 	db	255
  2797   00F69D  FF                 	db	255
  2798   00F69E  FF                 	db	255
  2799   00F69F  FF                 	db	255
  2800   00F6A0  FF                 	db	255
  2801   00F6A1  FF                 	db	255
  2802   00F6A2  FF                 	db	255
  2803   00F6A3  FF                 	db	255
  2804   00F6A4  FF                 	db	255
  2805   00F6A5  FF                 	db	255
  2806   00F6A6  FF                 	db	255
  2807   00F6A7  FF                 	db	255
  2808   00F6A8  FF                 	db	255
  2809   00F6A9  FF                 	db	255
  2810   00F6AA  FF                 	db	255
  2811   00F6AB  FF                 	db	255
  2812   00F6AC  FF                 	db	255
  2813   00F6AD  FF                 	db	255
  2814   00F6AE  FF                 	db	255
  2815   00F6AF  FF                 	db	255
  2816   00F6B0  FF                 	db	255
  2817   00F6B1  FF                 	db	255
  2818   00F6B2  FF                 	db	255
  2819   00F6B3  FF                 	db	255
  2820   00F6B4  FF                 	db	255
  2821   00F6B5  FF                 	db	255
  2822   00F6B6  FF                 	db	255
  2823   00F6B7  FF                 	db	255
  2824   00F6B8  FF                 	db	255
  2825   00F6B9  FF                 	db	255
  2826   00F6BA  FF                 	db	255
  2827   00F6BB  FF                 	db	255
  2828   00F6BC  FF                 	db	255
  2829   00F6BD  FF                 	db	255
  2830   00F6BE  FF                 	db	255
  2831   00F6BF  FF                 	db	255
  2832   00F6C0  FF                 	db	255
  2833   00F6C1  FF                 	db	255
  2834   00F6C2  FF                 	db	255
  2835   00F6C3  FF                 	db	255
  2836   00F6C4  FF                 	db	255
  2837   00F6C5  FF                 	db	255
  2838   00F6C6  FF                 	db	255
  2839   00F6C7  FF                 	db	255
  2840   00F6C8  FF                 	db	255
  2841   00F6C9  FF                 	db	255
  2842   00F6CA  FF                 	db	255
  2843   00F6CB  FF                 	db	255
  2844   00F6CC  FF                 	db	255
  2845   00F6CD  FF                 	db	255
  2846   00F6CE  FF                 	db	255
  2847   00F6CF  FF                 	db	255
  2848   00F6D0  FF                 	db	255
  2849   00F6D1  FF                 	db	255
  2850   00F6D2  FF                 	db	255
  2851   00F6D3  FF                 	db	255
  2852   00F6D4  FF                 	db	255
  2853   00F6D5  FF                 	db	255
  2854   00F6D6  FF                 	db	255
  2855   00F6D7  FF                 	db	255
  2856   00F6D8  FF                 	db	255
  2857   00F6D9  FF                 	db	255
  2858   00F6DA  FF                 	db	255
  2859   00F6DB  FF                 	db	255
  2860   00F6DC  FF                 	db	255
  2861   00F6DD  FF                 	db	255
  2862   00F6DE  FF                 	db	255
  2863   00F6DF  FF                 	db	255
  2864   00F6E0  FF                 	db	255
  2865   00F6E1  FF                 	db	255
  2866   00F6E2  FF                 	db	255
  2867   00F6E3  FF                 	db	255
  2868   00F6E4  FF                 	db	255
  2869   00F6E5  FF                 	db	255
  2870   00F6E6  FF                 	db	255
  2871   00F6E7  FF                 	db	255
  2872   00F6E8  FF                 	db	255
  2873   00F6E9  FF                 	db	255
  2874   00F6EA  FF                 	db	255
  2875   00F6EB  FF                 	db	255
  2876   00F6EC  FF                 	db	255
  2877   00F6ED  FF                 	db	255
  2878   00F6EE  FF                 	db	255
  2879   00F6EF  FF                 	db	255
  2880   00F6F0  FF                 	db	255
  2881   00F6F1  FF                 	db	255
  2882   00F6F2  FF                 	db	255
  2883   00F6F3  FF                 	db	255
  2884   00F6F4  FF                 	db	255
  2885   00F6F5  FF                 	db	255
  2886   00F6F6  FF                 	db	255
  2887   00F6F7  FF                 	db	255
  2888   00F6F8  FF                 	db	255
  2889   00F6F9  FF                 	db	255
  2890   00F6FA  FF                 	db	255
  2891   00F6FB  FF                 	db	255
  2892   00F6FC  FF                 	db	255
  2893   00F6FD  FF                 	db	255
  2894   00F6FE  FF                 	db	255
  2895   00F6FF  FF                 	db	255
  2896   00F700  FF                 	db	255
  2897   00F701  FF                 	db	255
  2898   00F702  FF                 	db	255
  2899   00F703  FF                 	db	255
  2900   00F704  FF                 	db	255
  2901   00F705  FF                 	db	255
  2902   00F706  FF                 	db	255
  2903   00F707  FF                 	db	255
  2904   00F708  FF                 	db	255
  2905   00F709  FF                 	db	255
  2906   00F70A  FF                 	db	255
  2907   00F70B  FF                 	db	255
  2908   00F70C  FF                 	db	255
  2909   00F70D  FF                 	db	255
  2910   00F70E  FF                 	db	255
  2911   00F70F  FF                 	db	255
  2912   00F710  FF                 	db	255
  2913   00F711  FF                 	db	255
  2914   00F712  FF                 	db	255
  2915   00F713  FF                 	db	255
  2916   00F714  FF                 	db	255
  2917   00F715  FF                 	db	255
  2918   00F716  FF                 	db	255
  2919   00F717  FF                 	db	255
  2920   00F718  FF                 	db	255
  2921   00F719  FF                 	db	255
  2922   00F71A  FF                 	db	255
  2923   00F71B  FF                 	db	255
  2924   00F71C  FF                 	db	255
  2925   00F71D  FF                 	db	255
  2926   00F71E  FF                 	db	255
  2927   00F71F  FF                 	db	255
  2928   00F720  FF                 	db	255
  2929   00F721  FF                 	db	255
  2930   00F722  FF                 	db	255
  2931   00F723  FF                 	db	255
  2932   00F724  FF                 	db	255
  2933   00F725  FF                 	db	255
  2934   00F726  FF                 	db	255
  2935   00F727  FF                 	db	255
  2936   00F728  FF                 	db	255
  2937   00F729  FF                 	db	255
  2938   00F72A  FF                 	db	255
  2939   00F72B  FF                 	db	255
  2940   00F72C  FF                 	db	255
  2941   00F72D  FF                 	db	255
  2942   00F72E  FF                 	db	255
  2943   00F72F  FF                 	db	255
  2944   00F730  FF                 	db	255
  2945   00F731  FF                 	db	255
  2946   00F732  FF                 	db	255
  2947   00F733  FF                 	db	255
  2948   00F734  FF                 	db	255
  2949   00F735  FF                 	db	255
  2950   00F736  FF                 	db	255
  2951   00F737  FF                 	db	255
  2952   00F738  FF                 	db	255
  2953   00F739  FF                 	db	255
  2954   00F73A  FF                 	db	255
  2955   00F73B  FF                 	db	255
  2956   00F73C  FF                 	db	255
  2957   00F73D  FF                 	db	255
  2958   00F73E  FF                 	db	255
  2959   00F73F  FF                 	db	255
  2960   00F740  FF                 	db	255
  2961   00F741  FF                 	db	255
  2962   00F742  FF                 	db	255
  2963   00F743  FF                 	db	255
  2964   00F744  FF                 	db	255
  2965   00F745  FF                 	db	255
  2966   00F746  FF                 	db	255
  2967   00F747  FF                 	db	255
  2968   00F748  FF                 	db	255
  2969   00F749  FF                 	db	255
  2970   00F74A  FF                 	db	255
  2971   00F74B  FF                 	db	255
  2972   00F74C  FF                 	db	255
  2973   00F74D  FF                 	db	255
  2974   00F74E  FF                 	db	255
  2975   00F74F  FF                 	db	255
  2976   00F750  FF                 	db	255
  2977   00F751  FF                 	db	255
  2978   00F752  FF                 	db	255
  2979   00F753  FF                 	db	255
  2980   00F754  FF                 	db	255
  2981   00F755  FF                 	db	255
  2982   00F756  FF                 	db	255
  2983   00F757  FF                 	db	255
  2984   00F758  FF                 	db	255
  2985   00F759  FF                 	db	255
  2986   00F75A  FF                 	db	255
  2987   00F75B  FF                 	db	255
  2988   00F75C  FF                 	db	255
  2989   00F75D  FF                 	db	255
  2990   00F75E  FF                 	db	255
  2991   00F75F  FF                 	db	255
  2992   00F760  FF                 	db	255
  2993   00F761  FF                 	db	255
  2994   00F762  FF                 	db	255
  2995   00F763  FF                 	db	255
  2996   00F764  FF                 	db	255
  2997   00F765  FF                 	db	255
  2998   00F766  FF                 	db	255
  2999   00F767  FF                 	db	255
  3000   00F768  FF                 	db	255
  3001   00F769  FF                 	db	255
  3002   00F76A  FF                 	db	255
  3003   00F76B  FF                 	db	255
  3004   00F76C  FF                 	db	255
  3005   00F76D  FF                 	db	255
  3006   00F76E  FF                 	db	255
  3007   00F76F  FF                 	db	255
  3008   00F770  FF                 	db	255
  3009   00F771  FF                 	db	255
  3010   00F772  FF                 	db	255
  3011   00F773  FF                 	db	255
  3012   00F774  FF                 	db	255
  3013   00F775  FF                 	db	255
  3014   00F776  FF                 	db	255
  3015   00F777  FF                 	db	255
  3016   00F778  FF                 	db	255
  3017   00F779  FF                 	db	255
  3018   00F77A  FF                 	db	255
  3019   00F77B  FF                 	db	255
  3020   00F77C  FF                 	db	255
  3021   00F77D  FF                 	db	255
  3022   00F77E  FF                 	db	255
  3023   00F77F  FF                 	db	255
  3024   00F780  FF                 	db	255
  3025   00F781  FF                 	db	255
  3026   00F782  FF                 	db	255
  3027   00F783  FF                 	db	255
  3028   00F784  FF                 	db	255
  3029   00F785  FF                 	db	255
  3030   00F786  FF                 	db	255
  3031   00F787  FF                 	db	255
  3032   00F788  FF                 	db	255
  3033   00F789  FF                 	db	255
  3034   00F78A  FF                 	db	255
  3035   00F78B  FF                 	db	255
  3036   00F78C  FF                 	db	255
  3037   00F78D  FF                 	db	255
  3038   00F78E  FF                 	db	255
  3039   00F78F  FF                 	db	255
  3040   00F790  FF                 	db	255
  3041   00F791  FF                 	db	255
  3042   00F792  FF                 	db	255
  3043   00F793  FF                 	db	255
  3044   00F794  FF                 	db	255
  3045   00F795  FF                 	db	255
  3046   00F796  FF                 	db	255
  3047   00F797  FF                 	db	255
  3048   00F798  FF                 	db	255
  3049   00F799  FF                 	db	255
  3050   00F79A  FF                 	db	255
  3051   00F79B  FF                 	db	255
  3052   00F79C  FF                 	db	255
  3053   00F79D  FF                 	db	255
  3054   00F79E  FF                 	db	255
  3055   00F79F  FF                 	db	255
  3056   00F7A0  FF                 	db	255
  3057   00F7A1  FF                 	db	255
  3058   00F7A2  FF                 	db	255
  3059   00F7A3  FF                 	db	255
  3060   00F7A4  FF                 	db	255
  3061   00F7A5  FF                 	db	255
  3062   00F7A6  FF                 	db	255
  3063   00F7A7  FF                 	db	255
  3064   00F7A8  FF                 	db	255
  3065   00F7A9  FF                 	db	255
  3066   00F7AA  FF                 	db	255
  3067   00F7AB  FF                 	db	255
  3068   00F7AC  FF                 	db	255
  3069   00F7AD  FF                 	db	255
  3070   00F7AE  FF                 	db	255
  3071   00F7AF  FF                 	db	255
  3072   00F7B0  FF                 	db	255
  3073   00F7B1  FF                 	db	255
  3074   00F7B2  FF                 	db	255
  3075   00F7B3  FF                 	db	255
  3076   00F7B4  FF                 	db	255
  3077   00F7B5  FF                 	db	255
  3078   00F7B6  FF                 	db	255
  3079   00F7B7  FF                 	db	255
  3080   00F7B8  FF                 	db	255
  3081   00F7B9  FF                 	db	255
  3082   00F7BA  FF                 	db	255
  3083   00F7BB  FF                 	db	255
  3084   00F7BC  FF                 	db	255
  3085   00F7BD  FF                 	db	255
  3086   00F7BE  FF                 	db	255
  3087   00F7BF  FF                 	db	255
  3088   00F7C0  FF                 	db	255
  3089   00F7C1  FF                 	db	255
  3090   00F7C2  FF                 	db	255
  3091   00F7C3  FF                 	db	255
  3092   00F7C4  FF                 	db	255
  3093   00F7C5  FF                 	db	255
  3094   00F7C6  FF                 	db	255
  3095   00F7C7  FF                 	db	255
  3096   00F7C8  FF                 	db	255
  3097   00F7C9  FF                 	db	255
  3098   00F7CA  FF                 	db	255
  3099   00F7CB  FF                 	db	255
  3100   00F7CC  FF                 	db	255
  3101   00F7CD  FF                 	db	255
  3102   00F7CE  FF                 	db	255
  3103   00F7CF  FF                 	db	255
  3104   00F7D0  FF                 	db	255
  3105   00F7D1  FF                 	db	255
  3106   00F7D2  FF                 	db	255
  3107   00F7D3  FF                 	db	255
  3108   00F7D4  FF                 	db	255
  3109   00F7D5  FF                 	db	255
  3110   00F7D6  FF                 	db	255
  3111   00F7D7  FF                 	db	255
  3112   00F7D8  FF                 	db	255
  3113   00F7D9  FF                 	db	255
  3114   00F7DA  FF                 	db	255
  3115   00F7DB  FF                 	db	255
  3116   00F7DC  FF                 	db	255
  3117   00F7DD  FF                 	db	255
  3118   00F7DE  FF                 	db	255
  3119   00F7DF  FF                 	db	255
  3120   00F7E0  FF                 	db	255
  3121   00F7E1  FF                 	db	255
  3122   00F7E2  FF                 	db	255
  3123   00F7E3  FF                 	db	255
  3124   00F7E4  FF                 	db	255
  3125   00F7E5  FF                 	db	255
  3126   00F7E6  FF                 	db	255
  3127   00F7E7  FF                 	db	255
  3128   00F7E8  FF                 	db	255
  3129   00F7E9  FF                 	db	255
  3130   00F7EA  FF                 	db	255
  3131   00F7EB  FF                 	db	255
  3132   00F7EC  FF                 	db	255
  3133   00F7ED  FF                 	db	255
  3134   00F7EE  FF                 	db	255
  3135   00F7EF  FF                 	db	255
  3136   00F7F0  FF                 	db	255
  3137   00F7F1  FF                 	db	255
  3138   00F7F2  FF                 	db	255
  3139   00F7F3  FF                 	db	255
  3140   00F7F4  FF                 	db	255
  3141   00F7F5  FF                 	db	255
  3142   00F7F6  FF                 	db	255
  3143   00F7F7  FF                 	db	255
  3144   00F7F8  FF                 	db	255
  3145   00F7F9  FF                 	db	255
  3146   00F7FA  FF                 	db	255
  3147   00F7FB  FF                 	db	255
  3148   00F7FC  FF                 	db	255
  3149   00F7FD  FF                 	db	255
  3150   00F7FE  FF                 	db	255
  3151   00F7FF  FF                 	db	255
  3152   00F800  FF                 	db	255
  3153   00F801  FF                 	db	255
  3154   00F802  FF                 	db	255
  3155   00F803  FF                 	db	255
  3156   00F804  FF                 	db	255
  3157   00F805  FF                 	db	255
  3158   00F806  FF                 	db	255
  3159   00F807  FF                 	db	255
  3160   00F808  FF                 	db	255
  3161   00F809  FF                 	db	255
  3162   00F80A  FF                 	db	255
  3163   00F80B  FF                 	db	255
  3164   00F80C  FF                 	db	255
  3165   00F80D  FF                 	db	255
  3166   00F80E  FF                 	db	255
  3167   00F80F  FF                 	db	255
  3168   00F810  FF                 	db	255
  3169   00F811  FF                 	db	255
  3170   00F812  FF                 	db	255
  3171   00F813  FF                 	db	255
  3172   00F814  FF                 	db	255
  3173   00F815  FF                 	db	255
  3174   00F816  FF                 	db	255
  3175   00F817  FF                 	db	255
  3176   00F818  FF                 	db	255
  3177   00F819  FF                 	db	255
  3178   00F81A  FF                 	db	255
  3179   00F81B  FF                 	db	255
  3180   00F81C  FF                 	db	255
  3181   00F81D  FF                 	db	255
  3182   00F81E  FF                 	db	255
  3183   00F81F  FF                 	db	255
  3184   00F820  FF                 	db	255
  3185   00F821  FF                 	db	255
  3186   00F822  FF                 	db	255
  3187   00F823  FF                 	db	255
  3188   00F824  FF                 	db	255
  3189   00F825  FF                 	db	255
  3190   00F826  FF                 	db	255
  3191   00F827  FF                 	db	255
  3192   00F828  FF                 	db	255
  3193   00F829  FF                 	db	255
  3194   00F82A  FF                 	db	255
  3195   00F82B  FF                 	db	255
  3196   00F82C  FF                 	db	255
  3197   00F82D  FF                 	db	255
  3198   00F82E  FF                 	db	255
  3199   00F82F  FF                 	db	255
  3200   00F830  FF                 	db	255
  3201   00F831  FF                 	db	255
  3202   00F832  FF                 	db	255
  3203   00F833  FF                 	db	255
  3204   00F834  FF                 	db	255
  3205   00F835  FF                 	db	255
  3206   00F836  FF                 	db	255
  3207   00F837  FF                 	db	255
  3208   00F838  FF                 	db	255
  3209   00F839  FF                 	db	255
  3210   00F83A  FF                 	db	255
  3211   00F83B  FF                 	db	255
  3212   00F83C  FF                 	db	255
  3213   00F83D  FF                 	db	255
  3214   00F83E  FF                 	db	255
  3215   00F83F  FF                 	db	255
  3216   00F840  FF                 	db	255
  3217   00F841  FF                 	db	255
  3218   00F842  FF                 	db	255
  3219   00F843  FF                 	db	255
  3220   00F844  FF                 	db	255
  3221   00F845  FF                 	db	255
  3222   00F846  FF                 	db	255
  3223   00F847  FF                 	db	255
  3224   00F848  FF                 	db	255
  3225   00F849  FF                 	db	255
  3226   00F84A  FF                 	db	255
  3227   00F84B  FF                 	db	255
  3228   00F84C  FF                 	db	255
  3229   00F84D  FF                 	db	255
  3230   00F84E  FF                 	db	255
  3231   00F84F  FF                 	db	255
  3232   00F850  FF                 	db	255
  3233   00F851  FF                 	db	255
  3234   00F852  FF                 	db	255
  3235   00F853  FF                 	db	255
  3236   00F854  FF                 	db	255
  3237   00F855  FF                 	db	255
  3238   00F856  FF                 	db	255
  3239   00F857  FF                 	db	255
  3240   00F858  FF                 	db	255
  3241   00F859  FF                 	db	255
  3242   00F85A  FF                 	db	255
  3243   00F85B  FF                 	db	255
  3244   00F85C  FF                 	db	255
  3245   00F85D  FF                 	db	255
  3246   00F85E  FF                 	db	255
  3247   00F85F  FF                 	db	255
  3248   00F860  FF                 	db	255
  3249   00F861  FF                 	db	255
  3250   00F862  FF                 	db	255
  3251   00F863  FF                 	db	255
  3252   00F864  FF                 	db	255
  3253   00F865  FF                 	db	255
  3254   00F866  FF                 	db	255
  3255   00F867  FF                 	db	255
  3256   00F868  FF                 	db	255
  3257   00F869  FF                 	db	255
  3258   00F86A  FF                 	db	255
  3259   00F86B  FF                 	db	255
  3260   00F86C  FF                 	db	255
  3261   00F86D  FF                 	db	255
  3262   00F86E  FF                 	db	255
  3263   00F86F  FF                 	db	255
  3264   00F870  FF                 	db	255
  3265   00F871  FF                 	db	255
  3266   00F872  FF                 	db	255
  3267   00F873  FF                 	db	255
  3268   00F874  FF                 	db	255
  3269   00F875  FF                 	db	255
  3270   00F876  FF                 	db	255
  3271   00F877  FF                 	db	255
  3272   00F878  FF                 	db	255
  3273   00F879  FF                 	db	255
  3274   00F87A  FF                 	db	255
  3275   00F87B  FF                 	db	255
  3276   00F87C  FF                 	db	255
  3277   00F87D  FF                 	db	255
  3278   00F87E  FF                 	db	255
  3279   00F87F  FF                 	db	255
  3280   00F880  FF                 	db	255
  3281   00F881  FF                 	db	255
  3282   00F882  FF                 	db	255
  3283   00F883  FF                 	db	255
  3284   00F884  FF                 	db	255
  3285   00F885  FF                 	db	255
  3286   00F886  FF                 	db	255
  3287   00F887  FF                 	db	255
  3288   00F888  FF                 	db	255
  3289   00F889  FF                 	db	255
  3290   00F88A  FF                 	db	255
  3291   00F88B  FF                 	db	255
  3292   00F88C  FF                 	db	255
  3293   00F88D  FF                 	db	255
  3294   00F88E  FF                 	db	255
  3295   00F88F  FF                 	db	255
  3296   00F890  FF                 	db	255
  3297   00F891  FF                 	db	255
  3298   00F892  FF                 	db	255
  3299   00F893  FF                 	db	255
  3300   00F894  FF                 	db	255
  3301   00F895  FF                 	db	255
  3302   00F896  FF                 	db	255
  3303   00F897  FF                 	db	255
  3304   00F898  FF                 	db	255
  3305   00F899  FF                 	db	255
  3306   00F89A  FF                 	db	255
  3307   00F89B  FF                 	db	255
  3308   00F89C  FF                 	db	255
  3309   00F89D  FF                 	db	255
  3310   00F89E  FF                 	db	255
  3311   00F89F  FF                 	db	255
  3312   00F8A0  FF                 	db	255
  3313   00F8A1  FF                 	db	255
  3314   00F8A2  FF                 	db	255
  3315   00F8A3  FF                 	db	255
  3316   00F8A4  FF                 	db	255
  3317   00F8A5  FF                 	db	255
  3318   00F8A6  FF                 	db	255
  3319   00F8A7  FF                 	db	255
  3320   00F8A8  FF                 	db	255
  3321   00F8A9  FF                 	db	255
  3322   00F8AA  FF                 	db	255
  3323   00F8AB  FF                 	db	255
  3324   00F8AC  FF                 	db	255
  3325   00F8AD  FF                 	db	255
  3326   00F8AE  FF                 	db	255
  3327   00F8AF  FF                 	db	255
  3328   00F8B0  FF                 	db	255
  3329   00F8B1  FF                 	db	255
  3330   00F8B2  FF                 	db	255
  3331   00F8B3  FF                 	db	255
  3332   00F8B4  FF                 	db	255
  3333   00F8B5  FF                 	db	255
  3334   00F8B6  FF                 	db	255
  3335   00F8B7  FF                 	db	255
  3336   00F8B8  FF                 	db	255
  3337   00F8B9  FF                 	db	255
  3338   00F8BA  FF                 	db	255
  3339   00F8BB  FF                 	db	255
  3340   00F8BC  FF                 	db	255
  3341   00F8BD  FF                 	db	255
  3342   00F8BE  FF                 	db	255
  3343   00F8BF  FF                 	db	255
  3344   00F8C0  FF                 	db	255
  3345   00F8C1  FF                 	db	255
  3346   00F8C2  FF                 	db	255
  3347   00F8C3  FF                 	db	255
  3348   00F8C4  FF                 	db	255
  3349   00F8C5  FF                 	db	255
  3350   00F8C6  FF                 	db	255
  3351   00F8C7  FF                 	db	255
  3352   00F8C8  FF                 	db	255
  3353   00F8C9  FF                 	db	255
  3354   00F8CA  FF                 	db	255
  3355   00F8CB  FF                 	db	255
  3356   00F8CC  FF                 	db	255
  3357   00F8CD  FF                 	db	255
  3358   00F8CE  FF                 	db	255
  3359   00F8CF  FF                 	db	255
  3360   00F8D0  FF                 	db	255
  3361   00F8D1  FF                 	db	255
  3362   00F8D2  FF                 	db	255
  3363   00F8D3  FF                 	db	255
  3364   00F8D4  FF                 	db	255
  3365   00F8D5  FF                 	db	255
  3366   00F8D6  FF                 	db	255
  3367   00F8D7  FF                 	db	255
  3368   00F8D8  FF                 	db	255
  3369   00F8D9  FF                 	db	255
  3370   00F8DA  FF                 	db	255
  3371   00F8DB  FF                 	db	255
  3372   00F8DC  FF                 	db	255
  3373   00F8DD  FF                 	db	255
  3374   00F8DE  FF                 	db	255
  3375   00F8DF  FF                 	db	255
  3376   00F8E0  FF                 	db	255
  3377   00F8E1  FF                 	db	255
  3378   00F8E2  FF                 	db	255
  3379   00F8E3  FF                 	db	255
  3380   00F8E4  FF                 	db	255
  3381   00F8E5  FF                 	db	255
  3382   00F8E6  FF                 	db	255
  3383   00F8E7  FF                 	db	255
  3384   00F8E8  FF                 	db	255
  3385   00F8E9  FF                 	db	255
  3386   00F8EA  FF                 	db	255
  3387   00F8EB  FF                 	db	255
  3388   00F8EC  FF                 	db	255
  3389   00F8ED  FF                 	db	255
  3390   00F8EE  FF                 	db	255
  3391   00F8EF  FF                 	db	255
  3392   00F8F0  FF                 	db	255
  3393   00F8F1  FF                 	db	255
  3394   00F8F2  FF                 	db	255
  3395   00F8F3  FF                 	db	255
  3396   00F8F4  FF                 	db	255
  3397   00F8F5  FF                 	db	255
  3398   00F8F6  FF                 	db	255
  3399   00F8F7  FF                 	db	255
  3400   00F8F8  FF                 	db	255
  3401   00F8F9  FF                 	db	255
  3402   00F8FA  FF                 	db	255
  3403   00F8FB  FF                 	db	255
  3404   00F8FC  FF                 	db	255
  3405   00F8FD  FF                 	db	255
  3406   00F8FE  FF                 	db	255
  3407   00F8FF  FF                 	db	255
  3408   00F900  FF                 	db	255
  3409   00F901  FF                 	db	255
  3410   00F902  FF                 	db	255
  3411   00F903  FF                 	db	255
  3412   00F904  FF                 	db	255
  3413   00F905  FF                 	db	255
  3414   00F906  FF                 	db	255
  3415   00F907  FF                 	db	255
  3416   00F908  FF                 	db	255
  3417   00F909  FF                 	db	255
  3418   00F90A  FF                 	db	255
  3419   00F90B  FF                 	db	255
  3420   00F90C  FF                 	db	255
  3421   00F90D  FF                 	db	255
  3422   00F90E  FF                 	db	255
  3423   00F90F  FF                 	db	255
  3424   00F910  FF                 	db	255
  3425   00F911  FF                 	db	255
  3426   00F912  FF                 	db	255
  3427   00F913  FF                 	db	255
  3428   00F914  FF                 	db	255
  3429   00F915  FF                 	db	255
  3430   00F916  FF                 	db	255
  3431   00F917  FF                 	db	255
  3432   00F918  FF                 	db	255
  3433   00F919  FF                 	db	255
  3434   00F91A  FF                 	db	255
  3435   00F91B  FF                 	db	255
  3436   00F91C  FF                 	db	255
  3437   00F91D  FF                 	db	255
  3438   00F91E  FF                 	db	255
  3439   00F91F  FF                 	db	255
  3440   00F920  FF                 	db	255
  3441   00F921  FF                 	db	255
  3442   00F922  FF                 	db	255
  3443   00F923  FF                 	db	255
  3444   00F924  FF                 	db	255
  3445   00F925  FF                 	db	255
  3446   00F926  FF                 	db	255
  3447   00F927  FF                 	db	255
  3448   00F928  FF                 	db	255
  3449   00F929  FF                 	db	255
  3450   00F92A  FF                 	db	255
  3451   00F92B  FF                 	db	255
  3452   00F92C  FF                 	db	255
  3453   00F92D  FF                 	db	255
  3454   00F92E  FF                 	db	255
  3455   00F92F  FF                 	db	255
  3456   00F930  FF                 	db	255
  3457   00F931  FF                 	db	255
  3458   00F932  FF                 	db	255
  3459   00F933  FF                 	db	255
  3460   00F934  FF                 	db	255
  3461   00F935  FF                 	db	255
  3462   00F936  FF                 	db	255
  3463   00F937  FF                 	db	255
  3464   00F938  FF                 	db	255
  3465   00F939  FF                 	db	255
  3466   00F93A  FF                 	db	255
  3467   00F93B  FF                 	db	255
  3468   00F93C  FF                 	db	255
  3469   00F93D  FF                 	db	255
  3470   00F93E  FF                 	db	255
  3471   00F93F  FF                 	db	255
  3472   00F940  FF                 	db	255
  3473   00F941  FF                 	db	255
  3474   00F942  FF                 	db	255
  3475   00F943  FF                 	db	255
  3476   00F944  FF                 	db	255
  3477   00F945  FF                 	db	255
  3478   00F946  FF                 	db	255
  3479   00F947  FF                 	db	255
  3480   00F948  FF                 	db	255
  3481   00F949  FF                 	db	255
  3482   00F94A  FF                 	db	255
  3483   00F94B  FF                 	db	255
  3484   00F94C  FF                 	db	255
  3485   00F94D  FF                 	db	255
  3486   00F94E  FF                 	db	255
  3487   00F94F  FF                 	db	255
  3488   00F950  FF                 	db	255
  3489   00F951  FF                 	db	255
  3490   00F952  FF                 	db	255
  3491   00F953  FF                 	db	255
  3492   00F954  FF                 	db	255
  3493   00F955  FF                 	db	255
  3494   00F956  FF                 	db	255
  3495   00F957  FF                 	db	255
  3496   00F958  FF                 	db	255
  3497   00F959  FF                 	db	255
  3498   00F95A  FF                 	db	255
  3499   00F95B  FF                 	db	255
  3500   00F95C  FF                 	db	255
  3501   00F95D  FF                 	db	255
  3502   00F95E  FF                 	db	255
  3503   00F95F  FF                 	db	255
  3504   00F960  FF                 	db	255
  3505   00F961  FF                 	db	255
  3506   00F962  FF                 	db	255
  3507   00F963  FF                 	db	255
  3508   00F964  FF                 	db	255
  3509   00F965  FF                 	db	255
  3510   00F966  FF                 	db	255
  3511   00F967  FF                 	db	255
  3512   00F968  FF                 	db	255
  3513   00F969  FF                 	db	255
  3514   00F96A  FF                 	db	255
  3515   00F96B  FF                 	db	255
  3516   00F96C  FF                 	db	255
  3517   00F96D  FF                 	db	255
  3518   00F96E  FF                 	db	255
  3519   00F96F  FF                 	db	255
  3520   00F970  FF                 	db	255
  3521   00F971  FF                 	db	255
  3522   00F972  FF                 	db	255
  3523   00F973  FF                 	db	255
  3524   00F974  FF                 	db	255
  3525   00F975  FF                 	db	255
  3526   00F976  FF                 	db	255
  3527   00F977  FF                 	db	255
  3528   00F978  FF                 	db	255
  3529   00F979  FF                 	db	255
  3530   00F97A  FF                 	db	255
  3531   00F97B  FF                 	db	255
  3532   00F97C  FF                 	db	255
  3533   00F97D  FF                 	db	255
  3534   00F97E  FF                 	db	255
  3535   00F97F  FF                 	db	255
  3536   00F980  FF                 	db	255
  3537   00F981  FF                 	db	255
  3538   00F982  FF                 	db	255
  3539   00F983  FF                 	db	255
  3540   00F984  FF                 	db	255
  3541   00F985  FF                 	db	255
  3542   00F986  FF                 	db	255
  3543   00F987  FF                 	db	255
  3544   00F988  FF                 	db	255
  3545   00F989  FF                 	db	255
  3546   00F98A  FF                 	db	255
  3547   00F98B  FF                 	db	255
  3548   00F98C  FF                 	db	255
  3549   00F98D  FF                 	db	255
  3550   00F98E  FF                 	db	255
  3551   00F98F  FF                 	db	255
  3552   00F990  FF                 	db	255
  3553   00F991  FF                 	db	255
  3554   00F992  FF                 	db	255
  3555   00F993  FF                 	db	255
  3556   00F994  FF                 	db	255
  3557   00F995  FF                 	db	255
  3558   00F996  FF                 	db	255
  3559   00F997  FF                 	db	255
  3560   00F998  FF                 	db	255
  3561   00F999  FF                 	db	255
  3562   00F99A  FF                 	db	255
  3563   00F99B  FF                 	db	255
  3564   00F99C  FF                 	db	255
  3565   00F99D  FF                 	db	255
  3566   00F99E  FF                 	db	255
  3567   00F99F  FF                 	db	255
  3568   00F9A0  FF                 	db	255
  3569   00F9A1  FF                 	db	255
  3570   00F9A2  FF                 	db	255
  3571   00F9A3  FF                 	db	255
  3572   00F9A4  FF                 	db	255
  3573   00F9A5  FF                 	db	255
  3574   00F9A6  FF                 	db	255
  3575   00F9A7  FF                 	db	255
  3576   00F9A8  FF                 	db	255
  3577   00F9A9  FF                 	db	255
  3578   00F9AA  FF                 	db	255
  3579   00F9AB  FF                 	db	255
  3580   00F9AC  FF                 	db	255
  3581   00F9AD  FF                 	db	255
  3582   00F9AE  FF                 	db	255
  3583   00F9AF  FF                 	db	255
  3584   00F9B0  FF                 	db	255
  3585   00F9B1  FF                 	db	255
  3586   00F9B2  FF                 	db	255
  3587   00F9B3  FF                 	db	255
  3588   00F9B4  FF                 	db	255
  3589   00F9B5  FF                 	db	255
  3590   00F9B6  FF                 	db	255
  3591   00F9B7  FF                 	db	255
  3592   00F9B8  FF                 	db	255
  3593   00F9B9  FF                 	db	255
  3594   00F9BA  FF                 	db	255
  3595   00F9BB  FF                 	db	255
  3596   00F9BC  FF                 	db	255
  3597   00F9BD  FF                 	db	255
  3598   00F9BE  FF                 	db	255
  3599   00F9BF  FF                 	db	255
  3600   00F9C0  FF                 	db	255
  3601   00F9C1  FF                 	db	255
  3602   00F9C2  FF                 	db	255
  3603   00F9C3  FF                 	db	255
  3604   00F9C4  FF                 	db	255
  3605   00F9C5  FF                 	db	255
  3606   00F9C6  FF                 	db	255
  3607   00F9C7  FF                 	db	255
  3608   00F9C8  FF                 	db	255
  3609   00F9C9  FF                 	db	255
  3610   00F9CA  FF                 	db	255
  3611   00F9CB  FF                 	db	255
  3612   00F9CC  FF                 	db	255
  3613   00F9CD  FF                 	db	255
  3614   00F9CE  FF                 	db	255
  3615   00F9CF  FF                 	db	255
  3616   00F9D0  FF                 	db	255
  3617   00F9D1  FF                 	db	255
  3618   00F9D2  FF                 	db	255
  3619   00F9D3  FF                 	db	255
  3620   00F9D4  FF                 	db	255
  3621   00F9D5  FF                 	db	255
  3622   00F9D6  FF                 	db	255
  3623   00F9D7  FF                 	db	255
  3624   00F9D8  FF                 	db	255
  3625   00F9D9  FF                 	db	255
  3626   00F9DA  FF                 	db	255
  3627   00F9DB  FF                 	db	255
  3628   00F9DC  FF                 	db	255
  3629   00F9DD  FF                 	db	255
  3630   00F9DE  FF                 	db	255
  3631   00F9DF  FF                 	db	255
  3632   00F9E0  FF                 	db	255
  3633   00F9E1  FF                 	db	255
  3634   00F9E2  FF                 	db	255
  3635   00F9E3  FF                 	db	255
  3636   00F9E4  FF                 	db	255
  3637   00F9E5  FF                 	db	255
  3638   00F9E6  FF                 	db	255
  3639   00F9E7  FF                 	db	255
  3640   00F9E8  FF                 	db	255
  3641   00F9E9  FF                 	db	255
  3642   00F9EA  FF                 	db	255
  3643   00F9EB  FF                 	db	255
  3644   00F9EC  FF                 	db	255
  3645   00F9ED  FF                 	db	255
  3646   00F9EE  FF                 	db	255
  3647   00F9EF  FF                 	db	255
  3648   00F9F0  FF                 	db	255
  3649   00F9F1  FF                 	db	255
  3650   00F9F2  FF                 	db	255
  3651   00F9F3  FF                 	db	255
  3652   00F9F4  FF                 	db	255
  3653   00F9F5  FF                 	db	255
  3654   00F9F6  FF                 	db	255
  3655   00F9F7  FF                 	db	255
  3656   00F9F8  FF                 	db	255
  3657   00F9F9  FF                 	db	255
  3658   00F9FA  FF                 	db	255
  3659   00F9FB  FF                 	db	255
  3660   00F9FC  FF                 	db	255
  3661   00F9FD  FF                 	db	255
  3662   00F9FE  FF                 	db	255
  3663   00F9FF  FF                 	db	255
  3664   00FA00  FF                 	db	255
  3665   00FA01  FF                 	db	255
  3666   00FA02  FF                 	db	255
  3667   00FA03  FF                 	db	255
  3668   00FA04  FF                 	db	255
  3669   00FA05  FF                 	db	255
  3670   00FA06  FF                 	db	255
  3671   00FA07  FF                 	db	255
  3672   00FA08  FF                 	db	255
  3673   00FA09  FF                 	db	255
  3674   00FA0A  FF                 	db	255
  3675   00FA0B  FF                 	db	255
  3676   00FA0C  FF                 	db	255
  3677   00FA0D  FF                 	db	255
  3678   00FA0E  FF                 	db	255
  3679   00FA0F  FF                 	db	255
  3680   00FA10  FF                 	db	255
  3681   00FA11  FF                 	db	255
  3682   00FA12  FF                 	db	255
  3683   00FA13  FF                 	db	255
  3684   00FA14  FF                 	db	255
  3685   00FA15  FF                 	db	255
  3686   00FA16  FF                 	db	255
  3687   00FA17  FF                 	db	255
  3688   00FA18  FF                 	db	255
  3689   00FA19  FF                 	db	255
  3690   00FA1A  FF                 	db	255
  3691   00FA1B  FF                 	db	255
  3692   00FA1C  FF                 	db	255
  3693   00FA1D  FF                 	db	255
  3694   00FA1E  FF                 	db	255
  3695   00FA1F  FF                 	db	255
  3696   00FA20  FF                 	db	255
  3697   00FA21  FF                 	db	255
  3698   00FA22  FF                 	db	255
  3699   00FA23  FF                 	db	255
  3700   00FA24  FF                 	db	255
  3701   00FA25  FF                 	db	255
  3702   00FA26  FF                 	db	255
  3703   00FA27  FF                 	db	255
  3704   00FA28  FF                 	db	255
  3705   00FA29  FF                 	db	255
  3706   00FA2A  FF                 	db	255
  3707   00FA2B  FF                 	db	255
  3708   00FA2C  FF                 	db	255
  3709   00FA2D  FF                 	db	255
  3710   00FA2E  FF                 	db	255
  3711   00FA2F  FF                 	db	255
  3712   00FA30  FF                 	db	255
  3713   00FA31  FF                 	db	255
  3714   00FA32  FF                 	db	255
  3715   00FA33  FF                 	db	255
  3716   00FA34  FF                 	db	255
  3717   00FA35  FF                 	db	255
  3718   00FA36  FF                 	db	255
  3719   00FA37  FF                 	db	255
  3720   00FA38  FF                 	db	255
  3721   00FA39  FF                 	db	255
  3722   00FA3A  FF                 	db	255
  3723   00FA3B  FF                 	db	255
  3724   00FA3C  FF                 	db	255
  3725   00FA3D  FF                 	db	255
  3726   00FA3E  FF                 	db	255
  3727   00FA3F  FF                 	db	255
  3728   00FA40  FF                 	db	255
  3729   00FA41  FF                 	db	255
  3730   00FA42  FF                 	db	255
  3731   00FA43  FF                 	db	255
  3732   00FA44  FF                 	db	255
  3733   00FA45  FF                 	db	255
  3734   00FA46  FF                 	db	255
  3735   00FA47  FF                 	db	255
  3736   00FA48  FF                 	db	255
  3737   00FA49  FF                 	db	255
  3738   00FA4A  FF                 	db	255
  3739   00FA4B  FF                 	db	255
  3740   00FA4C  FF                 	db	255
  3741   00FA4D  FF                 	db	255
  3742   00FA4E  FF                 	db	255
  3743   00FA4F  FF                 	db	255
  3744   00FA50  FF                 	db	255
  3745   00FA51  FF                 	db	255
  3746   00FA52  FF                 	db	255
  3747   00FA53  FF                 	db	255
  3748   00FA54  FF                 	db	255
  3749   00FA55  FF                 	db	255
  3750   00FA56  FF                 	db	255
  3751   00FA57  FF                 	db	255
  3752   00FA58  FF                 	db	255
  3753   00FA59  FF                 	db	255
  3754   00FA5A  FF                 	db	255
  3755   00FA5B  FF                 	db	255
  3756   00FA5C  FF                 	db	255
  3757   00FA5D  FF                 	db	255
  3758   00FA5E  FF                 	db	255
  3759   00FA5F  FF                 	db	255
  3760   00FA60  FF                 	db	255
  3761   00FA61  FF                 	db	255
  3762   00FA62  FF                 	db	255
  3763   00FA63  FF                 	db	255
  3764   00FA64  FF                 	db	255
  3765   00FA65  FF                 	db	255
  3766   00FA66  FF                 	db	255
  3767   00FA67  FF                 	db	255
  3768   00FA68  FF                 	db	255
  3769   00FA69  FF                 	db	255
  3770   00FA6A  FF                 	db	255
  3771   00FA6B  FF                 	db	255
  3772   00FA6C  FF                 	db	255
  3773   00FA6D  FF                 	db	255
  3774   00FA6E  FF                 	db	255
  3775   00FA6F  FF                 	db	255
  3776   00FA70  FF                 	db	255
  3777   00FA71  FF                 	db	255
  3778   00FA72  FF                 	db	255
  3779   00FA73  FF                 	db	255
  3780   00FA74  FF                 	db	255
  3781   00FA75  FF                 	db	255
  3782   00FA76  FF                 	db	255
  3783   00FA77  FF                 	db	255
  3784   00FA78  FF                 	db	255
  3785   00FA79  FF                 	db	255
  3786   00FA7A  FF                 	db	255
  3787   00FA7B  FF                 	db	255
  3788   00FA7C  FF                 	db	255
  3789   00FA7D  FF                 	db	255
  3790   00FA7E  FF                 	db	255
  3791   00FA7F  FF                 	db	255
  3792   00FA80  FF                 	db	255
  3793   00FA81  FF                 	db	255
  3794   00FA82  FF                 	db	255
  3795   00FA83  FF                 	db	255
  3796   00FA84  FF                 	db	255
  3797   00FA85  FF                 	db	255
  3798   00FA86  FF                 	db	255
  3799   00FA87  FF                 	db	255
  3800   00FA88  FF                 	db	255
  3801   00FA89  FF                 	db	255
  3802   00FA8A  FF                 	db	255
  3803   00FA8B  FF                 	db	255
  3804   00FA8C  FF                 	db	255
  3805   00FA8D  FF                 	db	255
  3806   00FA8E  FF                 	db	255
  3807   00FA8F  FF                 	db	255
  3808   00FA90  FF                 	db	255
  3809   00FA91  FF                 	db	255
  3810   00FA92  FF                 	db	255
  3811   00FA93  FF                 	db	255
  3812   00FA94  FF                 	db	255
  3813   00FA95  FF                 	db	255
  3814   00FA96  FF                 	db	255
  3815   00FA97  FF                 	db	255
  3816   00FA98  FF                 	db	255
  3817   00FA99  FF                 	db	255
  3818   00FA9A  FF                 	db	255
  3819   00FA9B  FF                 	db	255
  3820   00FA9C  FF                 	db	255
  3821   00FA9D  FF                 	db	255
  3822   00FA9E  FF                 	db	255
  3823   00FA9F  FF                 	db	255
  3824   00FAA0  FF                 	db	255
  3825   00FAA1  FF                 	db	255
  3826   00FAA2  FF                 	db	255
  3827   00FAA3  FF                 	db	255
  3828   00FAA4  FF                 	db	255
  3829   00FAA5  FF                 	db	255
  3830   00FAA6  FF                 	db	255
  3831   00FAA7  FF                 	db	255
  3832   00FAA8  FF                 	db	255
  3833   00FAA9  FF                 	db	255
  3834   00FAAA  FF                 	db	255
  3835   00FAAB  FF                 	db	255
  3836   00FAAC  FF                 	db	255
  3837   00FAAD  FF                 	db	255
  3838   00FAAE  FF                 	db	255
  3839   00FAAF  FF                 	db	255
  3840   00FAB0  FF                 	db	255
  3841   00FAB1  FF                 	db	255
  3842   00FAB2  FF                 	db	255
  3843   00FAB3  FF                 	db	255
  3844   00FAB4  FF                 	db	255
  3845   00FAB5  FF                 	db	255
  3846   00FAB6  FF                 	db	255
  3847   00FAB7  FF                 	db	255
  3848   00FAB8  FF                 	db	255
  3849   00FAB9  FF                 	db	255
  3850   00FABA  FF                 	db	255
  3851   00FABB  FF                 	db	255
  3852   00FABC  FF                 	db	255
  3853   00FABD  FF                 	db	255
  3854   00FABE  FF                 	db	255
  3855   00FABF  FF                 	db	255
  3856   00FAC0  FF                 	db	255
  3857   00FAC1  FF                 	db	255
  3858   00FAC2  FF                 	db	255
  3859   00FAC3  FF                 	db	255
  3860   00FAC4  FF                 	db	255
  3861   00FAC5  FF                 	db	255
  3862   00FAC6  FF                 	db	255
  3863   00FAC7  FF                 	db	255
  3864   00FAC8  FF                 	db	255
  3865   00FAC9  FF                 	db	255
  3866   00FACA  FF                 	db	255
  3867   00FACB  FF                 	db	255
  3868   00FACC  FF                 	db	255
  3869   00FACD  FF                 	db	255
  3870   00FACE  FF                 	db	255
  3871   00FACF  FF                 	db	255
  3872   00FAD0  FF                 	db	255
  3873   00FAD1  FF                 	db	255
  3874   00FAD2  FF                 	db	255
  3875   00FAD3  FF                 	db	255
  3876   00FAD4  FF                 	db	255
  3877   00FAD5  FF                 	db	255
  3878   00FAD6  FF                 	db	255
  3879   00FAD7  FF                 	db	255
  3880   00FAD8  FF                 	db	255
  3881   00FAD9  FF                 	db	255
  3882   00FADA  FF                 	db	255
  3883   00FADB  FF                 	db	255
  3884   00FADC  FF                 	db	255
  3885   00FADD  FF                 	db	255
  3886   00FADE  FF                 	db	255
  3887   00FADF  FF                 	db	255
  3888   00FAE0  FF                 	db	255
  3889   00FAE1  FF                 	db	255
  3890   00FAE2  FF                 	db	255
  3891   00FAE3  FF                 	db	255
  3892   00FAE4  FF                 	db	255
  3893   00FAE5  FF                 	db	255
  3894   00FAE6  FF                 	db	255
  3895   00FAE7  FF                 	db	255
  3896   00FAE8  FF                 	db	255
  3897   00FAE9  FF                 	db	255
  3898   00FAEA  FF                 	db	255
  3899   00FAEB  FF                 	db	255
  3900   00FAEC  FF                 	db	255
  3901   00FAED  FF                 	db	255
  3902   00FAEE  FF                 	db	255
  3903   00FAEF  FF                 	db	255
  3904   00FAF0  FF                 	db	255
  3905   00FAF1  FF                 	db	255
  3906   00FAF2  FF                 	db	255
  3907   00FAF3  FF                 	db	255
  3908   00FAF4  FF                 	db	255
  3909   00FAF5  FF                 	db	255
  3910   00FAF6  FF                 	db	255
  3911   00FAF7  FF                 	db	255
  3912   00FAF8  FF                 	db	255
  3913   00FAF9  FF                 	db	255
  3914   00FAFA  FF                 	db	255
  3915   00FAFB  FF                 	db	255
  3916   00FAFC  FF                 	db	255
  3917   00FAFD  FF                 	db	255
  3918   00FAFE  FF                 	db	255
  3919   00FAFF  FF                 	db	255
  3920   00FB00  FF                 	db	255
  3921   00FB01  FF                 	db	255
  3922   00FB02  FF                 	db	255
  3923   00FB03  FF                 	db	255
  3924   00FB04  FF                 	db	255
  3925   00FB05  FF                 	db	255
  3926   00FB06  FF                 	db	255
  3927   00FB07  FF                 	db	255
  3928   00FB08  FF                 	db	255
  3929   00FB09  FF                 	db	255
  3930   00FB0A  FF                 	db	255
  3931   00FB0B  FF                 	db	255
  3932   00FB0C  FF                 	db	255
  3933   00FB0D  FF                 	db	255
  3934   00FB0E  FF                 	db	255
  3935   00FB0F  FF                 	db	255
  3936   00FB10  FF                 	db	255
  3937   00FB11  FF                 	db	255
  3938   00FB12  FF                 	db	255
  3939   00FB13  FF                 	db	255
  3940   00FB14  FF                 	db	255
  3941   00FB15  FF                 	db	255
  3942   00FB16  FF                 	db	255
  3943   00FB17  FF                 	db	255
  3944   00FB18  FF                 	db	255
  3945   00FB19  FF                 	db	255
  3946   00FB1A  FF                 	db	255
  3947   00FB1B  FF                 	db	255
  3948   00FB1C  FF                 	db	255
  3949   00FB1D  FF                 	db	255
  3950   00FB1E  FF                 	db	255
  3951   00FB1F  FF                 	db	255
  3952   00FB20  FF                 	db	255
  3953   00FB21  FF                 	db	255
  3954   00FB22  FF                 	db	255
  3955   00FB23  FF                 	db	255
  3956   00FB24  FF                 	db	255
  3957   00FB25  FF                 	db	255
  3958   00FB26  FF                 	db	255
  3959   00FB27  FF                 	db	255
  3960   00FB28  FF                 	db	255
  3961   00FB29  FF                 	db	255
  3962   00FB2A  FF                 	db	255
  3963   00FB2B  FF                 	db	255
  3964   00FB2C  FF                 	db	255
  3965   00FB2D  FF                 	db	255
  3966   00FB2E  FF                 	db	255
  3967   00FB2F  FF                 	db	255
  3968   00FB30  FF                 	db	255
  3969   00FB31  FF                 	db	255
  3970   00FB32  FF                 	db	255
  3971   00FB33  FF                 	db	255
  3972   00FB34  FF                 	db	255
  3973   00FB35  FF                 	db	255
  3974   00FB36  FF                 	db	255
  3975   00FB37  FF                 	db	255
  3976   00FB38  FF                 	db	255
  3977   00FB39  FF                 	db	255
  3978   00FB3A  FF                 	db	255
  3979   00FB3B  FF                 	db	255
  3980   00FB3C  FF                 	db	255
  3981   00FB3D  FF                 	db	255
  3982   00FB3E  FF                 	db	255
  3983   00FB3F  FF                 	db	255
  3984   00FB40  FF                 	db	255
  3985   00FB41  FF                 	db	255
  3986   00FB42  FF                 	db	255
  3987   00FB43  FF                 	db	255
  3988   00FB44  FF                 	db	255
  3989   00FB45  FF                 	db	255
  3990   00FB46  FF                 	db	255
  3991   00FB47  FF                 	db	255
  3992   00FB48  FF                 	db	255
  3993   00FB49  FF                 	db	255
  3994   00FB4A  FF                 	db	255
  3995   00FB4B  FF                 	db	255
  3996   00FB4C  FF                 	db	255
  3997   00FB4D  FF                 	db	255
  3998   00FB4E  FF                 	db	255
  3999   00FB4F  FF                 	db	255
  4000   00FB50  FF                 	db	255
  4001   00FB51  FF                 	db	255
  4002   00FB52  FF                 	db	255
  4003   00FB53  FF                 	db	255
  4004   00FB54  FF                 	db	255
  4005   00FB55  FF                 	db	255
  4006   00FB56  FF                 	db	255
  4007   00FB57  FF                 	db	255
  4008   00FB58  FF                 	db	255
  4009   00FB59  FF                 	db	255
  4010   00FB5A  FF                 	db	255
  4011   00FB5B  FF                 	db	255
  4012   00FB5C  FF                 	db	255
  4013   00FB5D  FF                 	db	255
  4014   00FB5E  FF                 	db	255
  4015   00FB5F  FF                 	db	255
  4016   00FB60  FF                 	db	255
  4017   00FB61  FF                 	db	255
  4018   00FB62  FF                 	db	255
  4019   00FB63  FF                 	db	255
  4020   00FB64  FF                 	db	255
  4021   00FB65  FF                 	db	255
  4022   00FB66  FF                 	db	255
  4023   00FB67  FF                 	db	255
  4024   00FB68  FF                 	db	255
  4025   00FB69  FF                 	db	255
  4026   00FB6A  FF                 	db	255
  4027   00FB6B  FF                 	db	255
  4028   00FB6C  FF                 	db	255
  4029   00FB6D  FF                 	db	255
  4030   00FB6E  FF                 	db	255
  4031   00FB6F  FF                 	db	255
  4032   00FB70  FF                 	db	255
  4033   00FB71  FF                 	db	255
  4034   00FB72  FF                 	db	255
  4035   00FB73  FF                 	db	255
  4036   00FB74  FF                 	db	255
  4037   00FB75  FF                 	db	255
  4038   00FB76  FF                 	db	255
  4039   00FB77  FF                 	db	255
  4040   00FB78  FF                 	db	255
  4041   00FB79  FF                 	db	255
  4042   00FB7A  FF                 	db	255
  4043   00FB7B  FF                 	db	255
  4044   00FB7C  FF                 	db	255
  4045   00FB7D  FF                 	db	255
  4046   00FB7E  FF                 	db	255
  4047   00FB7F  FF                 	db	255
  4048   00FB80  FF                 	db	255
  4049   00FB81  FF                 	db	255
  4050   00FB82  FF                 	db	255
  4051   00FB83  FF                 	db	255
  4052   00FB84  FF                 	db	255
  4053   00FB85  FF                 	db	255
  4054   00FB86  FF                 	db	255
  4055   00FB87  FF                 	db	255
  4056   00FB88  FF                 	db	255
  4057   00FB89  FF                 	db	255
  4058   00FB8A  FF                 	db	255
  4059   00FB8B  FF                 	db	255
  4060   00FB8C  FF                 	db	255
  4061   00FB8D  FF                 	db	255
  4062   00FB8E  FF                 	db	255
  4063   00FB8F  FF                 	db	255
  4064   00FB90  FF                 	db	255
  4065   00FB91  FF                 	db	255
  4066   00FB92  FF                 	db	255
  4067   00FB93  FF                 	db	255
  4068   00FB94  FF                 	db	255
  4069   00FB95  FF                 	db	255
  4070   00FB96  FF                 	db	255
  4071   00FB97  FF                 	db	255
  4072   00FB98  FF                 	db	255
  4073   00FB99  FF                 	db	255
  4074   00FB9A  FF                 	db	255
  4075   00FB9B  FF                 	db	255
  4076   00FB9C  FF                 	db	255
  4077   00FB9D  FF                 	db	255
  4078   00FB9E  FF                 	db	255
  4079   00FB9F  FF                 	db	255
  4080   00FBA0  FF                 	db	255
  4081   00FBA1  FF                 	db	255
  4082   00FBA2  FF                 	db	255
  4083   00FBA3  FF                 	db	255
  4084   00FBA4  FF                 	db	255
  4085   00FBA5  FF                 	db	255
  4086   00FBA6  FF                 	db	255
  4087   00FBA7  FF                 	db	255
  4088   00FBA8  FF                 	db	255
  4089   00FBA9  FF                 	db	255
  4090   00FBAA  FF                 	db	255
  4091   00FBAB  FF                 	db	255
  4092   00FBAC  FF                 	db	255
  4093   00FBAD  FF                 	db	255
  4094   00FBAE  FF                 	db	255
  4095   00FBAF  FF                 	db	255
  4096   00FBB0  FF                 	db	255
  4097   00FBB1  FF                 	db	255
  4098   00FBB2  FF                 	db	255
  4099   00FBB3  FF                 	db	255
  4100   00FBB4  FF                 	db	255
  4101   00FBB5  FF                 	db	255
  4102   00FBB6  FF                 	db	255
  4103   00FBB7  FF                 	db	255
  4104   00FBB8  FF                 	db	255
  4105   00FBB9  FF                 	db	255
  4106   00FBBA  FF                 	db	255
  4107   00FBBB  FF                 	db	255
  4108   00FBBC  FF                 	db	255
  4109   00FBBD  FF                 	db	255
  4110   00FBBE  FF                 	db	255
  4111   00FBBF  FF                 	db	255
  4112   00FBC0  FF                 	db	255
  4113   00FBC1  FF                 	db	255
  4114   00FBC2  FF                 	db	255
  4115   00FBC3  FF                 	db	255
  4116   00FBC4  FF                 	db	255
  4117   00FBC5  FF                 	db	255
  4118   00FBC6  FF                 	db	255
  4119   00FBC7  FF                 	db	255
  4120   00FBC8  FF                 	db	255
  4121   00FBC9  FF                 	db	255
  4122   00FBCA  FF                 	db	255
  4123   00FBCB  FF                 	db	255
  4124   00FBCC  FF                 	db	255
  4125   00FBCD  FF                 	db	255
  4126   00FBCE  FF                 	db	255
  4127   00FBCF  FF                 	db	255
  4128   00FBD0  FF                 	db	255
  4129   00FBD1  FF                 	db	255
  4130   00FBD2  FF                 	db	255
  4131   00FBD3  FF                 	db	255
  4132   00FBD4  FF                 	db	255
  4133   00FBD5  FF                 	db	255
  4134   00FBD6  FF                 	db	255
  4135   00FBD7  FF                 	db	255
  4136   00FBD8  FF                 	db	255
  4137   00FBD9  FF                 	db	255
  4138   00FBDA  FF                 	db	255
  4139   00FBDB  FF                 	db	255
  4140   00FBDC  FF                 	db	255
  4141   00FBDD  FF                 	db	255
  4142   00FBDE  FF                 	db	255
  4143   00FBDF  FF                 	db	255
  4144   00FBE0  FF                 	db	255
  4145   00FBE1  FF                 	db	255
  4146   00FBE2  FF                 	db	255
  4147   00FBE3  FF                 	db	255
  4148   00FBE4  FF                 	db	255
  4149   00FBE5  FF                 	db	255
  4150   00FBE6  FF                 	db	255
  4151   00FBE7  FF                 	db	255
  4152   00FBE8  FF                 	db	255
  4153   00FBE9  FF                 	db	255
  4154   00FBEA  FF                 	db	255
  4155   00FBEB  FF                 	db	255
  4156   00FBEC  FF                 	db	255
  4157   00FBED  FF                 	db	255
  4158   00FBEE  FF                 	db	255
  4159   00FBEF  FF                 	db	255
  4160   00FBF0  FF                 	db	255
  4161   00FBF1  FF                 	db	255
  4162   00FBF2  FF                 	db	255
  4163   00FBF3  FF                 	db	255
  4164   00FBF4  FF                 	db	255
  4165   00FBF5  FF                 	db	255
  4166   00FBF6  FF                 	db	255
  4167   00FBF7  FF                 	db	255
  4168   00FBF8  FF                 	db	255
  4169   00FBF9  FF                 	db	255
  4170   00FBFA  FF                 	db	255
  4171   00FBFB  FF                 	db	255
  4172   00FBFC  FF                 	db	255
  4173   00FBFD  FF                 	db	255
  4174   00FBFE  FF                 	db	255
  4175   00FBFF  FF                 	db	255
  4176   00FC00  FF                 	db	255
  4177   00FC01  FF                 	db	255
  4178   00FC02  FF                 	db	255
  4179   00FC03  FF                 	db	255
  4180   00FC04  FF                 	db	255
  4181   00FC05  FF                 	db	255
  4182   00FC06  FF                 	db	255
  4183   00FC07  FF                 	db	255
  4184   00FC08  FF                 	db	255
  4185   00FC09  FF                 	db	255
  4186   00FC0A  FF                 	db	255
  4187   00FC0B  FF                 	db	255
  4188   00FC0C  FF                 	db	255
  4189   00FC0D  FF                 	db	255
  4190   00FC0E  FF                 	db	255
  4191   00FC0F  FF                 	db	255
  4192   00FC10  FF                 	db	255
  4193   00FC11  FF                 	db	255
  4194   00FC12  FF                 	db	255
  4195   00FC13  FF                 	db	255
  4196   00FC14  FF                 	db	255
  4197   00FC15  FF                 	db	255
  4198   00FC16  FF                 	db	255
  4199   00FC17  FF                 	db	255
  4200   00FC18  FF                 	db	255
  4201   00FC19  FF                 	db	255
  4202   00FC1A  FF                 	db	255
  4203   00FC1B  FF                 	db	255
  4204   00FC1C  FF                 	db	255
  4205   00FC1D  FF                 	db	255
  4206   00FC1E  FF                 	db	255
  4207   00FC1F  FF                 	db	255
  4208   00FC20  FF                 	db	255
  4209   00FC21  FF                 	db	255
  4210   00FC22  FF                 	db	255
  4211   00FC23  FF                 	db	255
  4212   00FC24  FF                 	db	255
  4213   00FC25  FF                 	db	255
  4214   00FC26  FF                 	db	255
  4215   00FC27  FF                 	db	255
  4216   00FC28  FF                 	db	255
  4217   00FC29  FF                 	db	255
  4218   00FC2A  FF                 	db	255
  4219   00FC2B  FF                 	db	255
  4220   00FC2C  FF                 	db	255
  4221   00FC2D  FF                 	db	255
  4222   00FC2E  FF                 	db	255
  4223   00FC2F  FF                 	db	255
  4224   00FC30  FF                 	db	255
  4225   00FC31  FF                 	db	255
  4226   00FC32  FF                 	db	255
  4227   00FC33  FF                 	db	255
  4228   00FC34  FF                 	db	255
  4229   00FC35  FF                 	db	255
  4230   00FC36  FF                 	db	255
  4231   00FC37  FF                 	db	255
  4232   00FC38  FF                 	db	255
  4233   00FC39  FF                 	db	255
  4234   00FC3A  FF                 	db	255
  4235   00FC3B  FF                 	db	255
  4236   00FC3C  FF                 	db	255
  4237   00FC3D  FF                 	db	255
  4238   00FC3E  FF                 	db	255
  4239   00FC3F  FF                 	db	255
  4240   00FC40  FF                 	db	255
  4241   00FC41  FF                 	db	255
  4242   00FC42  FF                 	db	255
  4243   00FC43  FF                 	db	255
  4244   00FC44  FF                 	db	255
  4245   00FC45  FF                 	db	255
  4246   00FC46  FF                 	db	255
  4247   00FC47  FF                 	db	255
  4248   00FC48  FF                 	db	255
  4249   00FC49  FF                 	db	255
  4250   00FC4A  FF                 	db	255
  4251   00FC4B  FF                 	db	255
  4252   00FC4C  FF                 	db	255
  4253   00FC4D  FF                 	db	255
  4254   00FC4E  FF                 	db	255
  4255   00FC4F  FF                 	db	255
  4256   00FC50  FF                 	db	255
  4257   00FC51  FF                 	db	255
  4258   00FC52  FF                 	db	255
  4259   00FC53  FF                 	db	255
  4260   00FC54  FF                 	db	255
  4261   00FC55  FF                 	db	255
  4262   00FC56  FF                 	db	255
  4263   00FC57  FF                 	db	255
  4264   00FC58  FF                 	db	255
  4265   00FC59  FF                 	db	255
  4266   00FC5A  FF                 	db	255
  4267   00FC5B  FF                 	db	255
  4268   00FC5C  FF                 	db	255
  4269   00FC5D  FF                 	db	255
  4270   00FC5E  FF                 	db	255
  4271   00FC5F  FF                 	db	255
  4272   00FC60  FF                 	db	255
  4273   00FC61  FF                 	db	255
  4274   00FC62  FF                 	db	255
  4275   00FC63  FF                 	db	255
  4276   00FC64  FF                 	db	255
  4277   00FC65  FF                 	db	255
  4278   00FC66  FF                 	db	255
  4279   00FC67  FF                 	db	255
  4280   00FC68  FF                 	db	255
  4281   00FC69  FF                 	db	255
  4282   00FC6A  FF                 	db	255
  4283   00FC6B  FF                 	db	255
  4284   00FC6C  FF                 	db	255
  4285   00FC6D  FF                 	db	255
  4286   00FC6E  FF                 	db	255
  4287   00FC6F  FF                 	db	255
  4288   00FC70  FF                 	db	255
  4289   00FC71  FF                 	db	255
  4290   00FC72  FF                 	db	255
  4291   00FC73  FF                 	db	255
  4292   00FC74  FF                 	db	255
  4293   00FC75  FF                 	db	255
  4294   00FC76  FF                 	db	255
  4295   00FC77  FF                 	db	255
  4296   00FC78  FF                 	db	255
  4297   00FC79  FF                 	db	255
  4298   00FC7A  FF                 	db	255
  4299   00FC7B  FF                 	db	255
  4300   00FC7C  FF                 	db	255
  4301   00FC7D  FF                 	db	255
  4302   00FC7E  FF                 	db	255
  4303   00FC7F  FF                 	db	255
  4304   00FC80  FF                 	db	255
  4305   00FC81  FF                 	db	255
  4306   00FC82  FF                 	db	255
  4307   00FC83  FF                 	db	255
  4308   00FC84  FF                 	db	255
  4309   00FC85  FF                 	db	255
  4310   00FC86  FF                 	db	255
  4311   00FC87  FF                 	db	255
  4312   00FC88  FF                 	db	255
  4313   00FC89  FF                 	db	255
  4314   00FC8A  FF                 	db	255
  4315   00FC8B  FF                 	db	255
  4316   00FC8C  FF                 	db	255
  4317   00FC8D  FF                 	db	255
  4318   00FC8E  FF                 	db	255
  4319   00FC8F  FF                 	db	255
  4320   00FC90  FF                 	db	255
  4321   00FC91  FF                 	db	255
  4322   00FC92  FF                 	db	255
  4323   00FC93  FF                 	db	255
  4324   00FC94  FF                 	db	255
  4325   00FC95  FF                 	db	255
  4326   00FC96  FF                 	db	255
  4327   00FC97  FF                 	db	255
  4328   00FC98  FF                 	db	255
  4329   00FC99  FF                 	db	255
  4330   00FC9A  FF                 	db	255
  4331   00FC9B  FF                 	db	255
  4332   00FC9C  FF                 	db	255
  4333   00FC9D  FF                 	db	255
  4334   00FC9E  FF                 	db	255
  4335   00FC9F  FF                 	db	255
  4336   00FCA0  FF                 	db	255
  4337   00FCA1  FF                 	db	255
  4338   00FCA2  FF                 	db	255
  4339   00FCA3  FF                 	db	255
  4340   00FCA4  FF                 	db	255
  4341   00FCA5  FF                 	db	255
  4342   00FCA6  FF                 	db	255
  4343   00FCA7  FF                 	db	255
  4344   00FCA8  FF                 	db	255
  4345   00FCA9  FF                 	db	255
  4346   00FCAA  FF                 	db	255
  4347   00FCAB  FF                 	db	255
  4348   00FCAC  FF                 	db	255
  4349   00FCAD  FF                 	db	255
  4350   00FCAE  FF                 	db	255
  4351   00FCAF  FF                 	db	255
  4352   00FCB0  FF                 	db	255
  4353   00FCB1  FF                 	db	255
  4354   00FCB2  FF                 	db	255
  4355   00FCB3  FF                 	db	255
  4356   00FCB4  FF                 	db	255
  4357   00FCB5  FF                 	db	255
  4358   00FCB6  FF                 	db	255
  4359   00FCB7  FF                 	db	255
  4360   00FCB8  FF                 	db	255
  4361   00FCB9  FF                 	db	255
  4362   00FCBA  FF                 	db	255
  4363   00FCBB  FF                 	db	255
  4364   00FCBC  FF                 	db	255
  4365   00FCBD  FF                 	db	255
  4366   00FCBE  FF                 	db	255
  4367   00FCBF  FF                 	db	255
  4368   00FCC0  FF                 	db	255
  4369   00FCC1  FF                 	db	255
  4370   00FCC2  FF                 	db	255
  4371   00FCC3  FF                 	db	255
  4372   00FCC4  FF                 	db	255
  4373   00FCC5  FF                 	db	255
  4374   00FCC6  FF                 	db	255
  4375   00FCC7  FF                 	db	255
  4376   00FCC8  FF                 	db	255
  4377   00FCC9  FF                 	db	255
  4378   00FCCA  FF                 	db	255
  4379   00FCCB  FF                 	db	255
  4380   00FCCC  FF                 	db	255
  4381   00FCCD  FF                 	db	255
  4382   00FCCE  FF                 	db	255
  4383   00FCCF  FF                 	db	255
  4384   00FCD0  FF                 	db	255
  4385   00FCD1  FF                 	db	255
  4386   00FCD2  FF                 	db	255
  4387   00FCD3  FF                 	db	255
  4388   00FCD4  FF                 	db	255
  4389   00FCD5  FF                 	db	255
  4390   00FCD6  FF                 	db	255
  4391   00FCD7  FF                 	db	255
  4392   00FCD8  FF                 	db	255
  4393   00FCD9  FF                 	db	255
  4394   00FCDA  FF                 	db	255
  4395   00FCDB  FF                 	db	255
  4396   00FCDC  FF                 	db	255
  4397   00FCDD  FF                 	db	255
  4398   00FCDE  FF                 	db	255
  4399   00FCDF  FF                 	db	255
  4400   00FCE0  FF                 	db	255
  4401   00FCE1  FF                 	db	255
  4402   00FCE2  FF                 	db	255
  4403   00FCE3  FF                 	db	255
  4404   00FCE4  FF                 	db	255
  4405   00FCE5  FF                 	db	255
  4406   00FCE6  FF                 	db	255
  4407   00FCE7  FF                 	db	255
  4408   00FCE8  FF                 	db	255
  4409   00FCE9  FF                 	db	255
  4410   00FCEA  FF                 	db	255
  4411   00FCEB  FF                 	db	255
  4412   00FCEC  FF                 	db	255
  4413   00FCED  FF                 	db	255
  4414   00FCEE  FF                 	db	255
  4415   00FCEF  FF                 	db	255
  4416   00FCF0  FF                 	db	255
  4417   00FCF1  FF                 	db	255
  4418   00FCF2  FF                 	db	255
  4419   00FCF3  FF                 	db	255
  4420   00FCF4  FF                 	db	255
  4421   00FCF5  FF                 	db	255
  4422   00FCF6  FF                 	db	255
  4423   00FCF7  FF                 	db	255
  4424   00FCF8  FF                 	db	255
  4425   00FCF9  FF                 	db	255
  4426   00FCFA  FF                 	db	255
  4427   00FCFB  FF                 	db	255
  4428   00FCFC  FF                 	db	255
  4429   00FCFD  FF                 	db	255
  4430   00FCFE  FF                 	db	255
  4431   00FCFF  FF                 	db	255
  4432   00FD00  FF                 	db	255
  4433   00FD01  FF                 	db	255
  4434   00FD02  FF                 	db	255
  4435   00FD03  FF                 	db	255
  4436   00FD04  FF                 	db	255
  4437   00FD05  FF                 	db	255
  4438   00FD06  FF                 	db	255
  4439   00FD07  FF                 	db	255
  4440   00FD08  FF                 	db	255
  4441   00FD09  FF                 	db	255
  4442   00FD0A  FF                 	db	255
  4443   00FD0B  FF                 	db	255
  4444   00FD0C  FF                 	db	255
  4445   00FD0D  FF                 	db	255
  4446   00FD0E  FF                 	db	255
  4447   00FD0F  FF                 	db	255
  4448   00FD10  FF                 	db	255
  4449   00FD11  FF                 	db	255
  4450   00FD12  FF                 	db	255
  4451   00FD13  FF                 	db	255
  4452   00FD14  FF                 	db	255
  4453   00FD15  FF                 	db	255
  4454   00FD16  FF                 	db	255
  4455   00FD17  FF                 	db	255
  4456   00FD18  FF                 	db	255
  4457   00FD19  FF                 	db	255
  4458   00FD1A  FF                 	db	255
  4459   00FD1B  FF                 	db	255
  4460   00FD1C  FF                 	db	255
  4461   00FD1D  FF                 	db	255
  4462   00FD1E  FF                 	db	255
  4463   00FD1F  FF                 	db	255
  4464   00FD20  FF                 	db	255
  4465   00FD21  FF                 	db	255
  4466   00FD22  FF                 	db	255
  4467   00FD23  FF                 	db	255
  4468   00FD24  FF                 	db	255
  4469   00FD25  FF                 	db	255
  4470   00FD26  FF                 	db	255
  4471   00FD27  FF                 	db	255
  4472   00FD28  FF                 	db	255
  4473   00FD29  FF                 	db	255
  4474   00FD2A  FF                 	db	255
  4475   00FD2B  FF                 	db	255
  4476   00FD2C  FF                 	db	255
  4477   00FD2D  FF                 	db	255
  4478   00FD2E  FF                 	db	255
  4479   00FD2F  FF                 	db	255
  4480   00FD30  FF                 	db	255
  4481   00FD31  FF                 	db	255
  4482   00FD32  FF                 	db	255
  4483   00FD33  FF                 	db	255
  4484   00FD34  FF                 	db	255
  4485   00FD35  FF                 	db	255
  4486   00FD36  FF                 	db	255
  4487   00FD37  FF                 	db	255
  4488   00FD38  FF                 	db	255
  4489   00FD39  FF                 	db	255
  4490   00FD3A  FF                 	db	255
  4491   00FD3B  FF                 	db	255
  4492   00FD3C  FF                 	db	255
  4493   00FD3D  FF                 	db	255
  4494   00FD3E  FF                 	db	255
  4495   00FD3F  FF                 	db	255
  4496   00FD40  FF                 	db	255
  4497   00FD41  FF                 	db	255
  4498   00FD42  FF                 	db	255
  4499   00FD43  FF                 	db	255
  4500   00FD44  FF                 	db	255
  4501   00FD45  FF                 	db	255
  4502   00FD46  FF                 	db	255
  4503   00FD47  FF                 	db	255
  4504   00FD48  FF                 	db	255
  4505   00FD49  FF                 	db	255
  4506   00FD4A  FF                 	db	255
  4507   00FD4B  FF                 	db	255
  4508   00FD4C  FF                 	db	255
  4509   00FD4D  FF                 	db	255
  4510   00FD4E  FF                 	db	255
  4511   00FD4F  FF                 	db	255
  4512   00FD50  FF                 	db	255
  4513   00FD51  FF                 	db	255
  4514   00FD52  FF                 	db	255
  4515   00FD53  FF                 	db	255
  4516   00FD54  FF                 	db	255
  4517   00FD55  FF                 	db	255
  4518   00FD56  FF                 	db	255
  4519   00FD57  FF                 	db	255
  4520   00FD58  FF                 	db	255
  4521   00FD59  FF                 	db	255
  4522   00FD5A  FF                 	db	255
  4523   00FD5B  FF                 	db	255
  4524   00FD5C  FF                 	db	255
  4525   00FD5D  FF                 	db	255
  4526   00FD5E  FF                 	db	255
  4527   00FD5F  FF                 	db	255
  4528   00FD60  FF                 	db	255
  4529   00FD61  FF                 	db	255
  4530   00FD62  FF                 	db	255
  4531   00FD63  FF                 	db	255
  4532   00FD64  FF                 	db	255
  4533   00FD65  FF                 	db	255
  4534   00FD66  FF                 	db	255
  4535   00FD67  FF                 	db	255
  4536   00FD68  FF                 	db	255
  4537   00FD69  FF                 	db	255
  4538   00FD6A  FF                 	db	255
  4539   00FD6B  FF                 	db	255
  4540   00FD6C  FF                 	db	255
  4541   00FD6D  FF                 	db	255
  4542   00FD6E  FF                 	db	255
  4543   00FD6F  FF                 	db	255
  4544   00FD70  FF                 	db	255
  4545   00FD71  FF                 	db	255
  4546   00FD72  FF                 	db	255
  4547   00FD73  FF                 	db	255
  4548   00FD74  FF                 	db	255
  4549   00FD75  FF                 	db	255
  4550   00FD76  FF                 	db	255
  4551   00FD77  FF                 	db	255
  4552   00FD78  FF                 	db	255
  4553   00FD79  FF                 	db	255
  4554   00FD7A  FF                 	db	255
  4555   00FD7B  FF                 	db	255
  4556   00FD7C  FF                 	db	255
  4557   00FD7D  FF                 	db	255
  4558   00FD7E  FF                 	db	255
  4559   00FD7F  FF                 	db	255
  4560   00FD80  FF                 	db	255
  4561   00FD81  FF                 	db	255
  4562   00FD82  FF                 	db	255
  4563   00FD83  FF                 	db	255
  4564   00FD84  FF                 	db	255
  4565   00FD85  FF                 	db	255
  4566   00FD86  FF                 	db	255
  4567   00FD87  FF                 	db	255
  4568   00FD88  FF                 	db	255
  4569   00FD89  FF                 	db	255
  4570   00FD8A  FF                 	db	255
  4571   00FD8B  FF                 	db	255
  4572   00FD8C  FF                 	db	255
  4573   00FD8D  FF                 	db	255
  4574   00FD8E  FF                 	db	255
  4575   00FD8F  FF                 	db	255
  4576   00FD90  FF                 	db	255
  4577   00FD91  FF                 	db	255
  4578   00FD92  FF                 	db	255
  4579   00FD93  FF                 	db	255
  4580   00FD94  FF                 	db	255
  4581   00FD95  FF                 	db	255
  4582   00FD96  FF                 	db	255
  4583   00FD97  FF                 	db	255
  4584   00FD98  FF                 	db	255
  4585   00FD99  FF                 	db	255
  4586   00FD9A  FF                 	db	255
  4587   00FD9B  FF                 	db	255
  4588   00FD9C  FF                 	db	255
  4589   00FD9D  FF                 	db	255
  4590   00FD9E  FF                 	db	255
  4591   00FD9F  FF                 	db	255
  4592   00FDA0  FF                 	db	255
  4593   00FDA1  FF                 	db	255
  4594   00FDA2  FF                 	db	255
  4595   00FDA3  FF                 	db	255
  4596   00FDA4  FF                 	db	255
  4597   00FDA5  FF                 	db	255
  4598   00FDA6  FF                 	db	255
  4599   00FDA7  FF                 	db	255
  4600   00FDA8  FF                 	db	255
  4601   00FDA9  FF                 	db	255
  4602   00FDAA  FF                 	db	255
  4603   00FDAB  FF                 	db	255
  4604   00FDAC  FF                 	db	255
  4605   00FDAD  FF                 	db	255
  4606   00FDAE  FF                 	db	255
  4607   00FDAF  FF                 	db	255
  4608   00FDB0  FF                 	db	255
  4609   00FDB1  FF                 	db	255
  4610   00FDB2  FF                 	db	255
  4611   00FDB3  FF                 	db	255
  4612   00FDB4  FF                 	db	255
  4613   00FDB5  FF                 	db	255
  4614   00FDB6  FF                 	db	255
  4615   00FDB7  FF                 	db	255
  4616   00FDB8  FF                 	db	255
  4617   00FDB9  FF                 	db	255
  4618   00FDBA  FF                 	db	255
  4619   00FDBB  FF                 	db	255
  4620   00FDBC  FF                 	db	255
  4621   00FDBD  FF                 	db	255
  4622   00FDBE  FF                 	db	255
  4623   00FDBF  FF                 	db	255
  4624   00FDC0  FF                 	db	255
  4625   00FDC1  FF                 	db	255
  4626   00FDC2  FF                 	db	255
  4627   00FDC3  FF                 	db	255
  4628   00FDC4  FF                 	db	255
  4629   00FDC5  FF                 	db	255
  4630   00FDC6  FF                 	db	255
  4631   00FDC7  FF                 	db	255
  4632   00FDC8  FF                 	db	255
  4633   00FDC9  FF                 	db	255
  4634   00FDCA  FF                 	db	255
  4635   00FDCB  FF                 	db	255
  4636   00FDCC  FF                 	db	255
  4637   00FDCD  FF                 	db	255
  4638   00FDCE  FF                 	db	255
  4639   00FDCF  FF                 	db	255
  4640   00FDD0  FF                 	db	255
  4641   00FDD1  FF                 	db	255
  4642   00FDD2  FF                 	db	255
  4643   00FDD3  FF                 	db	255
  4644   00FDD4  FF                 	db	255
  4645   00FDD5  FF                 	db	255
  4646   00FDD6  FF                 	db	255
  4647   00FDD7  FF                 	db	255
  4648   00FDD8  FF                 	db	255
  4649   00FDD9  FF                 	db	255
  4650   00FDDA  FF                 	db	255
  4651   00FDDB  FF                 	db	255
  4652   00FDDC  FF                 	db	255
  4653   00FDDD  FF                 	db	255
  4654   00FDDE  FF                 	db	255
  4655   00FDDF  FF                 	db	255
  4656   00FDE0  FF                 	db	255
  4657   00FDE1  FF                 	db	255
  4658   00FDE2  FF                 	db	255
  4659   00FDE3  FF                 	db	255
  4660   00FDE4  FF                 	db	255
  4661   00FDE5  FF                 	db	255
  4662   00FDE6  FF                 	db	255
  4663   00FDE7  FF                 	db	255
  4664   00FDE8  FF                 	db	255
  4665   00FDE9  FF                 	db	255
  4666   00FDEA  FF                 	db	255
  4667   00FDEB  FF                 	db	255
  4668   00FDEC  FF                 	db	255
  4669   00FDED  FF                 	db	255
  4670   00FDEE  FF                 	db	255
  4671   00FDEF  FF                 	db	255
  4672   00FDF0  FF                 	db	255
  4673   00FDF1  FF                 	db	255
  4674   00FDF2  FF                 	db	255
  4675   00FDF3  FF                 	db	255
  4676   00FDF4  FF                 	db	255
  4677   00FDF5  FF                 	db	255
  4678   00FDF6  FF                 	db	255
  4679   00FDF7  FF                 	db	255
  4680   00FDF8  FF                 	db	255
  4681   00FDF9  FF                 	db	255
  4682   00FDFA  FF                 	db	255
  4683   00FDFB  FF                 	db	255
  4684   00FDFC  FF                 	db	255
  4685   00FDFD  FF                 	db	255
  4686   00FDFE  FF                 	db	255
  4687   00FDFF  FF                 	db	255
  4688   00FE00  FF                 	db	255
  4689   00FE01  FF                 	db	255
  4690   00FE02  FF                 	db	255
  4691   00FE03  FF                 	db	255
  4692   00FE04  FF                 	db	255
  4693   00FE05  FF                 	db	255
  4694   00FE06  FF                 	db	255
  4695   00FE07  FF                 	db	255
  4696   00FE08  FF                 	db	255
  4697   00FE09  FF                 	db	255
  4698   00FE0A  FF                 	db	255
  4699   00FE0B  FF                 	db	255
  4700   00FE0C  FF                 	db	255
  4701   00FE0D  FF                 	db	255
  4702   00FE0E  FF                 	db	255
  4703   00FE0F  FF                 	db	255
  4704   00FE10  FF                 	db	255
  4705   00FE11  FF                 	db	255
  4706   00FE12  FF                 	db	255
  4707   00FE13  FF                 	db	255
  4708   00FE14  FF                 	db	255
  4709   00FE15  FF                 	db	255
  4710   00FE16  FF                 	db	255
  4711   00FE17  FF                 	db	255
  4712   00FE18  FF                 	db	255
  4713   00FE19  FF                 	db	255
  4714   00FE1A  FF                 	db	255
  4715   00FE1B  FF                 	db	255
  4716   00FE1C  FF                 	db	255
  4717   00FE1D  FF                 	db	255
  4718   00FE1E  FF                 	db	255
  4719   00FE1F  FF                 	db	255
  4720   00FE20  FF                 	db	255
  4721   00FE21  FF                 	db	255
  4722   00FE22  FF                 	db	255
  4723   00FE23  FF                 	db	255
  4724   00FE24  FF                 	db	255
  4725   00FE25  FF                 	db	255
  4726   00FE26  FF                 	db	255
  4727   00FE27  FF                 	db	255
  4728   00FE28  FF                 	db	255
  4729   00FE29  FF                 	db	255
  4730   00FE2A  FF                 	db	255
  4731   00FE2B  FF                 	db	255
  4732   00FE2C  FF                 	db	255
  4733   00FE2D  FF                 	db	255
  4734   00FE2E  FF                 	db	255
  4735   00FE2F  FF                 	db	255
  4736   00FE30  FF                 	db	255
  4737   00FE31  FF                 	db	255
  4738   00FE32  FF                 	db	255
  4739   00FE33  FF                 	db	255
  4740   00FE34  FF                 	db	255
  4741   00FE35  FF                 	db	255
  4742   00FE36  FF                 	db	255
  4743   00FE37  FF                 	db	255
  4744   00FE38  FF                 	db	255
  4745   00FE39  FF                 	db	255
  4746   00FE3A  FF                 	db	255
  4747   00FE3B  FF                 	db	255
  4748   00FE3C  FF                 	db	255
  4749   00FE3D  FF                 	db	255
  4750   00FE3E  FF                 	db	255
  4751   00FE3F  FF                 	db	255
  4752   00FE40  FF                 	db	255
  4753   00FE41  FF                 	db	255
  4754   00FE42  FF                 	db	255
  4755   00FE43  FF                 	db	255
  4756   00FE44  FF                 	db	255
  4757   00FE45  FF                 	db	255
  4758   00FE46  FF                 	db	255
  4759   00FE47  FF                 	db	255
  4760   00FE48  FF                 	db	255
  4761   00FE49  FF                 	db	255
  4762   00FE4A  FF                 	db	255
  4763   00FE4B  FF                 	db	255
  4764   00FE4C  FF                 	db	255
  4765   00FE4D  FF                 	db	255
  4766   00FE4E  FF                 	db	255
  4767   00FE4F  FF                 	db	255
  4768   00FE50  FF                 	db	255
  4769   00FE51  FF                 	db	255
  4770   00FE52  FF                 	db	255
  4771   00FE53  FF                 	db	255
  4772   00FE54  FF                 	db	255
  4773   00FE55  FF                 	db	255
  4774   00FE56  FF                 	db	255
  4775   00FE57  FF                 	db	255
  4776   00FE58  FF                 	db	255
  4777   00FE59  FF                 	db	255
  4778   00FE5A  FF                 	db	255
  4779   00FE5B  FF                 	db	255
  4780   00FE5C  FF                 	db	255
  4781   00FE5D  FF                 	db	255
  4782   00FE5E  FF                 	db	255
  4783   00FE5F  FF                 	db	255
  4784   00FE60  FF                 	db	255
  4785   00FE61  FF                 	db	255
  4786   00FE62  FF                 	db	255
  4787   00FE63  FF                 	db	255
  4788   00FE64  FF                 	db	255
  4789   00FE65  FF                 	db	255
  4790   00FE66  FF                 	db	255
  4791   00FE67  FF                 	db	255
  4792   00FE68  FF                 	db	255
  4793   00FE69  FF                 	db	255
  4794   00FE6A  FF                 	db	255
  4795   00FE6B  FF                 	db	255
  4796   00FE6C  FF                 	db	255
  4797   00FE6D  FF                 	db	255
  4798   00FE6E  FF                 	db	255
  4799   00FE6F  FF                 	db	255
  4800   00FE70  FF                 	db	255
  4801   00FE71  FF                 	db	255
  4802   00FE72  FF                 	db	255
  4803   00FE73  FF                 	db	255
  4804   00FE74  FF                 	db	255
  4805   00FE75  FF                 	db	255
  4806   00FE76  FF                 	db	255
  4807   00FE77  FF                 	db	255
  4808   00FE78  FF                 	db	255
  4809   00FE79  FF                 	db	255
  4810   00FE7A  FF                 	db	255
  4811   00FE7B  FF                 	db	255
  4812   00FE7C  FF                 	db	255
  4813   00FE7D  FF                 	db	255
  4814   00FE7E  FF                 	db	255
  4815   00FE7F  FF                 	db	255
  4816   00FE80  FF                 	db	255
  4817   00FE81  FF                 	db	255
  4818   00FE82  FF                 	db	255
  4819   00FE83  FF                 	db	255
  4820   00FE84  FF                 	db	255
  4821   00FE85  FF                 	db	255
  4822   00FE86  FF                 	db	255
  4823   00FE87  FF                 	db	255
  4824   00FE88  FF                 	db	255
  4825   00FE89  FF                 	db	255
  4826   00FE8A  FF                 	db	255
  4827   00FE8B  FF                 	db	255
  4828   00FE8C  FF                 	db	255
  4829   00FE8D  FF                 	db	255
  4830   00FE8E  FF                 	db	255
  4831   00FE8F  FF                 	db	255
  4832   00FE90  FF                 	db	255
  4833   00FE91  FF                 	db	255
  4834   00FE92  FF                 	db	255
  4835   00FE93  FF                 	db	255
  4836   00FE94  FF                 	db	255
  4837   00FE95  FF                 	db	255
  4838   00FE96  FF                 	db	255
  4839   00FE97  FF                 	db	255
  4840   00FE98  FF                 	db	255
  4841   00FE99  FF                 	db	255
  4842   00FE9A  FF                 	db	255
  4843   00FE9B  FF                 	db	255
  4844   00FE9C  FF                 	db	255
  4845   00FE9D  FF                 	db	255
  4846   00FE9E  FF                 	db	255
  4847   00FE9F  FF                 	db	255
  4848   00FEA0  FF                 	db	255
  4849   00FEA1  FF                 	db	255
  4850   00FEA2  FF                 	db	255
  4851   00FEA3  FF                 	db	255
  4852   00FEA4  FF                 	db	255
  4853   00FEA5  FF                 	db	255
  4854   00FEA6  FF                 	db	255
  4855   00FEA7  FF                 	db	255
  4856   00FEA8  FF                 	db	255
  4857   00FEA9  FF                 	db	255
  4858   00FEAA  FF                 	db	255
  4859   00FEAB  FF                 	db	255
  4860   00FEAC  FF                 	db	255
  4861   00FEAD  FF                 	db	255
  4862   00FEAE  FF                 	db	255
  4863   00FEAF  FF                 	db	255
  4864   00FEB0  FF                 	db	255
  4865   00FEB1  FF                 	db	255
  4866   00FEB2  FF                 	db	255
  4867   00FEB3  FF                 	db	255
  4868   00FEB4  FF                 	db	255
  4869   00FEB5  FF                 	db	255
  4870   00FEB6  FF                 	db	255
  4871   00FEB7  FF                 	db	255
  4872   00FEB8  FF                 	db	255
  4873   00FEB9  FF                 	db	255
  4874   00FEBA  FF                 	db	255
  4875   00FEBB  FF                 	db	255
  4876   00FEBC  FF                 	db	255
  4877   00FEBD  FF                 	db	255
  4878   00FEBE  FF                 	db	255
  4879   00FEBF  FF                 	db	255
  4880   00FEC0  FF                 	db	255
  4881   00FEC1  FF                 	db	255
  4882   00FEC2  FF                 	db	255
  4883   00FEC3  FF                 	db	255
  4884   00FEC4  FF                 	db	255
  4885   00FEC5  FF                 	db	255
  4886   00FEC6  FF                 	db	255
  4887   00FEC7  FF                 	db	255
  4888   00FEC8  FF                 	db	255
  4889   00FEC9  FF                 	db	255
  4890   00FECA  FF                 	db	255
  4891   00FECB  FF                 	db	255
  4892   00FECC  FF                 	db	255
  4893   00FECD  FF                 	db	255
  4894   00FECE  FF                 	db	255
  4895   00FECF  FF                 	db	255
  4896   00FED0  FF                 	db	255
  4897   00FED1  FF                 	db	255
  4898   00FED2  FF                 	db	255
  4899   00FED3  FF                 	db	255
  4900   00FED4  FF                 	db	255
  4901   00FED5  FF                 	db	255
  4902   00FED6  FF                 	db	255
  4903   00FED7  FF                 	db	255
  4904   00FED8  FF                 	db	255
  4905   00FED9  FF                 	db	255
  4906   00FEDA  FF                 	db	255
  4907   00FEDB  FF                 	db	255
  4908   00FEDC  FF                 	db	255
  4909   00FEDD  FF                 	db	255
  4910   00FEDE  FF                 	db	255
  4911   00FEDF  FF                 	db	255
  4912   00FEE0  FF                 	db	255
  4913   00FEE1  FF                 	db	255
  4914   00FEE2  FF                 	db	255
  4915   00FEE3  FF                 	db	255
  4916   00FEE4  FF                 	db	255
  4917   00FEE5  FF                 	db	255
  4918   00FEE6  FF                 	db	255
  4919   00FEE7  FF                 	db	255
  4920   00FEE8  FF                 	db	255
  4921   00FEE9  FF                 	db	255
  4922   00FEEA  FF                 	db	255
  4923   00FEEB  FF                 	db	255
  4924   00FEEC  FF                 	db	255
  4925   00FEED  FF                 	db	255
  4926   00FEEE  FF                 	db	255
  4927   00FEEF  FF                 	db	255
  4928   00FEF0  FF                 	db	255
  4929   00FEF1  FF                 	db	255
  4930   00FEF2  FF                 	db	255
  4931   00FEF3  FF                 	db	255
  4932   00FEF4  FF                 	db	255
  4933   00FEF5  FF                 	db	255
  4934   00FEF6  FF                 	db	255
  4935   00FEF7  FF                 	db	255
  4936   00FEF8  FF                 	db	255
  4937   00FEF9  FF                 	db	255
  4938   00FEFA  FF                 	db	255
  4939   00FEFB  FF                 	db	255
  4940   00FEFC  FF                 	db	255
  4941   00FEFD  FF                 	db	255
  4942   00FEFE  FF                 	db	255
  4943   00FEFF  FF                 	db	255
  4944   00FF00  FF                 	db	255
  4945   00FF01  FF                 	db	255
  4946   00FF02  FF                 	db	255
  4947   00FF03  FF                 	db	255
  4948   00FF04  FF                 	db	255
  4949   00FF05  FF                 	db	255
  4950   00FF06  FF                 	db	255
  4951   00FF07  FF                 	db	255
  4952   00FF08  FF                 	db	255
  4953   00FF09  FF                 	db	255
  4954   00FF0A  FF                 	db	255
  4955   00FF0B  FF                 	db	255
  4956   00FF0C  FF                 	db	255
  4957   00FF0D  FF                 	db	255
  4958   00FF0E  FF                 	db	255
  4959   00FF0F  FF                 	db	255
  4960   00FF10  FF                 	db	255
  4961   00FF11  FF                 	db	255
  4962   00FF12  FF                 	db	255
  4963   00FF13  FF                 	db	255
  4964   00FF14  FF                 	db	255
  4965   00FF15  FF                 	db	255
  4966   00FF16  FF                 	db	255
  4967   00FF17  FF                 	db	255
  4968   00FF18  FF                 	db	255
  4969   00FF19  FF                 	db	255
  4970   00FF1A  FF                 	db	255
  4971   00FF1B  FF                 	db	255
  4972   00FF1C  FF                 	db	255
  4973   00FF1D  FF                 	db	255
  4974   00FF1E  FF                 	db	255
  4975   00FF1F  FF                 	db	255
  4976   00FF20  FF                 	db	255
  4977   00FF21  FF                 	db	255
  4978   00FF22  FF                 	db	255
  4979   00FF23  FF                 	db	255
  4980   00FF24  FF                 	db	255
  4981   00FF25  FF                 	db	255
  4982   00FF26  FF                 	db	255
  4983   00FF27  FF                 	db	255
  4984   00FF28  FF                 	db	255
  4985   00FF29  FF                 	db	255
  4986   00FF2A  FF                 	db	255
  4987   00FF2B  FF                 	db	255
  4988   00FF2C  FF                 	db	255
  4989   00FF2D  FF                 	db	255
  4990   00FF2E  FF                 	db	255
  4991   00FF2F  FF                 	db	255
  4992   00FF30  FF                 	db	255
  4993   00FF31  FF                 	db	255
  4994   00FF32  FF                 	db	255
  4995   00FF33  FF                 	db	255
  4996   00FF34  FF                 	db	255
  4997   00FF35  FF                 	db	255
  4998   00FF36  FF                 	db	255
  4999   00FF37  FF                 	db	255
  5000   00FF38  FF                 	db	255
  5001   00FF39  FF                 	db	255
  5002   00FF3A  FF                 	db	255
  5003   00FF3B  FF                 	db	255
  5004   00FF3C  FF                 	db	255
  5005   00FF3D  FF                 	db	255
  5006   00FF3E  FF                 	db	255
  5007   00FF3F  FF                 	db	255
  5008   00FF40  FF                 	db	255
  5009   00FF41  FF                 	db	255
  5010   00FF42  FF                 	db	255
  5011   00FF43  FF                 	db	255
  5012   00FF44  FF                 	db	255
  5013   00FF45  FF                 	db	255
  5014   00FF46  FF                 	db	255
  5015   00FF47  FF                 	db	255
  5016   00FF48  FF                 	db	255
  5017   00FF49  FF                 	db	255
  5018   00FF4A  FF                 	db	255
  5019   00FF4B  FF                 	db	255
  5020   00FF4C  FF                 	db	255
  5021   00FF4D  FF                 	db	255
  5022   00FF4E  FF                 	db	255
  5023   00FF4F  FF                 	db	255
  5024   00FF50  FF                 	db	255
  5025   00FF51  FF                 	db	255
  5026   00FF52  FF                 	db	255
  5027   00FF53  FF                 	db	255
  5028   00FF54  FF                 	db	255
  5029   00FF55  FF                 	db	255
  5030   00FF56  FF                 	db	255
  5031   00FF57  FF                 	db	255
  5032   00FF58  FF                 	db	255
  5033   00FF59  FF                 	db	255
  5034   00FF5A  FF                 	db	255
  5035   00FF5B  FF                 	db	255
  5036   00FF5C  FF                 	db	255
  5037   00FF5D  FF                 	db	255
  5038   00FF5E  FF                 	db	255
  5039   00FF5F  FF                 	db	255
  5040   00FF60  FF                 	db	255
  5041   00FF61  FF                 	db	255
  5042   00FF62  FF                 	db	255
  5043   00FF63  FF                 	db	255
  5044   00FF64  FF                 	db	255
  5045   00FF65  FF                 	db	255
  5046   00FF66  FF                 	db	255
  5047   00FF67  FF                 	db	255
  5048   00FF68  FF                 	db	255
  5049   00FF69  FF                 	db	255
  5050   00FF6A  FF                 	db	255
  5051   00FF6B  FF                 	db	255
  5052   00FF6C  FF                 	db	255
  5053   00FF6D  FF                 	db	255
  5054   00FF6E  FF                 	db	255
  5055   00FF6F  FF                 	db	255
  5056   00FF70                     __end_of_eventTable:
  5057                           	callstack 0
  5058   000000                     _paramBlock_absaddr	set	2080
  5059                           
  5060                           	psect	_paramBlock_text
  5061   000820                     __p_paramBlock_text:
  5062                           	callstack 0
  5063   000820                     _paramBlock:
  5064                           	callstack 0
  5065   000820  A5                 	db	165
  5066   000821  61                 	db	97
  5067   000822  20                 	db	32
  5068   000823  FF                 	db	255
  5069   000824  14                 	db	20
  5070   000825  7F                 	db	127
  5071   000826  04                 	db	4
  5072   000827  0B                 	db	11
  5073   000828  0F                 	db	15
  5074   000829  01                 	db	1
  5075   00082A  00                 	db	0
  5076   00082B  08                 	db	8
  5077   00082C  00                 	db	0
  5078   00082D  00                 	db	0
  5079   00082E  00                 	db	0
  5080   00082F  00                 	db	0
  5081   000830  00                 	db	0
  5082   000831  00                 	db	0
  5083   000832  01                 	db	1
  5084   000833  05                 	db	5
  5085   000834  00                 	db	0
  5086   000835  00                 	db	0
  5087   000836  00                 	db	0
  5088   000837  00                 	db	0
  5089   000838  14                 	db	20
  5090   000839  00                 	db	0
  5091   00083A  48                 	db	72
  5092   00083B  08                 	db	8
  5093   00083C  00                 	db	0
  5094   00083D  00                 	db	0
  5095   00083E  49                 	db	73
  5096   00083F  03                 	db	3
  5097   000840                     __end_of_paramBlock:
  5098                           	callstack 0
  5099   000000                     _name_absaddr	set	2120
  5100                           
  5101                           	psect	_name_text
  5102   000848                     __p_name_text:
  5103                           	callstack 0
  5104   000848                     _name:
  5105                           	callstack 0
  5106   000848  4D                 	db	77
  5107   000849  49                 	db	73
  5108   00084A  4F                 	db	79
  5109   00084B  20                 	db	32
  5110   00084C  20                 	db	32
  5111   00084D  20                 	db	32
  5112   00084E  20                 	db	32
  5113   00084F  00                 	db	0
  5114   000850                     __end_of_name:
  5115                           	callstack 0
  5116   000000                     _COMSTAT	set	3953
  5117   000000                     _PIR5bits	set	3959
  5118   000000                     _PIE5bits	set	3958
  5119   000000                     _TXBIEbits	set	3711
  5120   000000                     _BIE0	set	3710
  5121   000000                     _RXF0SIDL	set	3809
  5122   000000                     _RXM0SIDH	set	3832
  5123   000000                     _CIOCON	set	3952
  5124   000000                     _ECANCON	set	3954
  5125   000000                     _IPR5	set	3960
  5126   000000                     _EECON2	set	3966
  5127   000000                     _TMR0L	set	4054
  5128   000000                     _TMR0H	set	4055
  5129   000000                     _TMR3L	set	4018
  5130   000000                     _TMR3H	set	4019
  5131   000000                     _TMR1L	set	4046
  5132   000000                     _TMR1H	set	4047
  5133   000000                     _T3CONbits	set	4017
  5134   000000                     _ANCON1	set	3932
  5135   000000                     _ANCON0	set	3933
  5136   000000                     _B0CON	set	3712
  5137                           
  5138                           	psect	nvBANK0
  5139   0000D1                     __pnvBANK0:
  5140                           	callstack 0
  5141   0000D1                     _flashBlock:
  5142                           	callstack 0
  5143   0000D1                     	ds	2
  5144   000000                     _TXB2CONbits	set	3840
  5145   000000                     _TXB1CONbits	set	3856
  5146   000000                     _TXB0CONbits	set	3872
  5147   000000                     _COMSTATbits	set	3953
  5148   000000                     _EECON1	set	3967
  5149   000000                     _T0CONbits	set	4053
  5150   000000                     _LATBbits	set	3978
  5151   000000                     _TRISAbits	set	3986
  5152   000000                     _TRISBbits	set	3987
  5153   000000                     _PORTAbits	set	3968
  5154   000000                     _BRGCON1	set	3651
  5155   000000                     _BSEL0	set	3709
  5156   000000                     _WPUB	set	3931
  5157   000000                     _INTCON2bits	set	4081
  5158   000000                     _TBLPTR	set	4086
  5159   000000                     _TABLAT	set	4085
  5160   000000                     _TBLPTRU	set	4088
  5161   000000                     _INTCONbits	set	4082
  5162   000000                     _CANSTATbits	set	3950
  5163   000000                     _CANCON	set	3951
  5164   000000                     _EEDATA	set	3955
  5165   000000                     _EEADR	set	3956
  5166   000000                     _EEADRH	set	3957
  5167   000000                     _EECON1bits	set	3967
  5168   000000                     _PORTA	set	3968
  5169   000000                     _LATA	set	3977
  5170   000000                     _TRISA	set	3986
  5171   000000                     _RXB0CON	set	3936
  5172   000000                     _OSCTUNEbits	set	3995
  5173   000000                     _PIE1bits	set	3997
  5174   000000                     _PIR1bits	set	3998
  5175   000000                     _TRISC	set	3988
  5176   000000                     _TRISB	set	3987
  5177   000000                     _PIE2bits	set	4000
  5178   000000                     _PIR2bits	set	4001
  5179   000000                     _T1GCONbits	set	4010
  5180   000000                     _LATC	set	3979
  5181   000000                     _LATB	set	3978
  5182   000000                     _PORTC	set	3970
  5183   000000                     _PORTB	set	3969
  5184   000000                     _T3GCONbits	set	4016
  5185   000000                     _T1CONbits	set	4045
  5186   000000                     _RCONbits	set	4048
  5187   000000                     _T0CON	set	4053
  5188   000000                     _EEIF	set	32190
  5189   000000                     _RXFCON0	set	3654
  5190   000000                     _RXFBCON0	set	3697
  5191   000000                     _BRGCON3	set	3653
  5192   000000                     _BRGCON2	set	3652
  5193   000000                     _TXB2CON	set	3840
  5194   000000                     _TXB1CON	set	3856
  5195   000000                     _TXB0CON	set	3872
  5196   000000                     _RXM0EIDL	set	3835
  5197   000000                     _RXM0EIDH	set	3834
  5198   000000                     _RXM0SIDL	set	3833
  5199   000000                     _RXB1CON	set	3888
  5200   000000                     _MSEL0	set	3705
  5201   000000                     _B1CON	set	3728
  5202   000000                     _B2CON	set	3744
  5203   000000                     _B3CON	set	3760
  5204   000000                     _B4CON	set	3776
  5205   000000                     _B5CON	set	3792
  5206   000000                     _TXB0SIDL	set	3874
  5207   000000                     _TXB0SIDH	set	3873
  5208   000000                     _TXB0DLC	set	3877
  5209   000000                     _TXB0D7	set	3885
  5210   000000                     _TXB0D6	set	3884
  5211   000000                     _TXB0D5	set	3883
  5212   000000                     _TXB0D4	set	3882
  5213   000000                     _TXB0D3	set	3881
  5214   000000                     _TXB0D2	set	3880
  5215   000000                     _TXB0D1	set	3879
  5216   000000                     _TXB0D0	set	3878
  5217   000000                     _TXB1SIDL	set	3858
  5218   000000                     _TXB1SIDH	set	3857
  5219   000000                     _TXB1DLC	set	3861
  5220   000000                     _TXB2SIDL	set	3842
  5221   000000                     _TXB2SIDH	set	3841
  5222   000000                     _TXB2DLC	set	3845
  5223                           
  5224                           ; #config settings
  5225                           
  5226                           	psect	cinit
  5227   00AC28                     __pcinit:
  5228                           	callstack 0
  5229   00AC28                     start_initialization:
  5230                           	callstack 0
  5231   00AC28                     __initialization:
  5232                           	callstack 0
  5233                           
  5234                           ; Clear objects allocated to BIGRAM (928 bytes)
  5235   00AC28  EE05  F048         	lfsr	0,__pbssBIGRAM
  5236   00AC2C  EE13 F0A0          	lfsr	1,928
  5237   00AC30                     clear_0:
  5238   00AC30  6AEE               	clrf	postinc0,c
  5239   00AC32  50E5               	movf	postdec1,w,c
  5240   00AC34  50E1               	movf	fsr1l,w,c
  5241   00AC36  E1FC               	bnz	clear_0
  5242   00AC38  50E2               	movf	fsr1h,w,c
  5243   00AC3A  E1FA               	bnz	clear_0
  5244                           
  5245                           ; Clear objects allocated to BANK5 (72 bytes)
  5246   00AC3C  EE05  F000         	lfsr	0,__pbssBANK5
  5247   00AC40  0E48               	movlw	72
  5248   00AC42                     clear_1:
  5249   00AC42  6AEE               	clrf	postinc0,c
  5250   00AC44  06E8               	decf	wreg,f,c
  5251   00AC46  E1FD               	bnz	clear_1
  5252                           
  5253                           ; Clear objects allocated to BANK4 (192 bytes)
  5254   00AC48  EE04  F000         	lfsr	0,__pbssBANK4
  5255   00AC4C  0EC0               	movlw	192
  5256   00AC4E                     clear_2:
  5257   00AC4E  6AEE               	clrf	postinc0,c
  5258   00AC50  06E8               	decf	wreg,f,c
  5259   00AC52  E1FD               	bnz	clear_2
  5260                           
  5261                           ; Clear objects allocated to BANK3 (200 bytes)
  5262   00AC54  EE03  F000         	lfsr	0,__pbssBANK3
  5263   00AC58  0EC8               	movlw	200
  5264   00AC5A                     clear_3:
  5265   00AC5A  6AEE               	clrf	postinc0,c
  5266   00AC5C  06E8               	decf	wreg,f,c
  5267   00AC5E  E1FD               	bnz	clear_3
  5268                           
  5269                           ; Clear objects allocated to BANK2 (204 bytes)
  5270   00AC60  EE02  F000         	lfsr	0,__pbssBANK2
  5271   00AC64  0ECC               	movlw	204
  5272   00AC66                     clear_4:
  5273   00AC66  6AEE               	clrf	postinc0,c
  5274   00AC68  06E8               	decf	wreg,f,c
  5275   00AC6A  E1FD               	bnz	clear_4
  5276                           
  5277                           ; Clear objects allocated to BANK1 (186 bytes)
  5278   00AC6C  EE01  F000         	lfsr	0,__pbssBANK1
  5279   00AC70  0EBA               	movlw	186
  5280   00AC72                     clear_5:
  5281   00AC72  6AEE               	clrf	postinc0,c
  5282   00AC74  06E8               	decf	wreg,f,c
  5283   00AC76  E1FD               	bnz	clear_5
  5284                           
  5285                           ; Clear objects allocated to BANK0 (40 bytes)
  5286   00AC78  EE00  F0A9         	lfsr	0,__pbssBANK0
  5287   00AC7C  0E28               	movlw	40
  5288   00AC7E                     clear_6:
  5289   00AC7E  6AEE               	clrf	postinc0,c
  5290   00AC80  06E8               	decf	wreg,f,c
  5291   00AC82  E1FD               	bnz	clear_6
  5292                           
  5293                           ; Clear objects allocated to COMRAM (41 bytes)
  5294   00AC84  EE00  F02B         	lfsr	0,__pbssCOMRAM
  5295   00AC88  0E29               	movlw	41
  5296   00AC8A                     clear_7:
  5297   00AC8A  6AEE               	clrf	postinc0,c
  5298   00AC8C  06E8               	decf	wreg,f,c
  5299   00AC8E  E1FD               	bnz	clear_7
  5300   00AC90                     end_of_initialization:
  5301                           	callstack 0
  5302   00AC90                     __end_of__initialization:
  5303                           	callstack 0
  5304   00AC90  9054               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5305   00AC92  9254               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5306   00AC94  0100               	movlb	0
  5307   00AC96  EFD2  F05C         	goto	_main	;jump to C main() function
  5308                           
  5309                           	psect	bssCOMRAM
  5310   00002B                     __pbssCOMRAM:
  5311                           	callstack 0
  5312   00002B                     _enumerationStartTime:
  5313                           	callstack 0
  5314   00002B                     	ds	4
  5315   00002F                     _canTransmitTimeout:
  5316                           	callstack 0
  5317   00002F                     	ds	4
  5318   000033                     _pbTimer:
  5319                           	callstack 0
  5320   000033                     	ds	4
  5321   000037                     _startWait:
  5322                           	callstack 0
  5323   000037                     	ds	4
  5324   00003B                     _startTime:
  5325                           	callstack 0
  5326   00003B                     	ds	4
  5327   00003F                     _timedResponseCallback:
  5328                           	callstack 0
  5329   00003F                     	ds	2
  5330   000041                     _EnumerationState:
  5331                           	callstack 0
  5332   000041                     	ds	1
  5333   000042                     _eeBootFlag:
  5334                           	callstack 0
  5335   000042                     	ds	1
  5336   000043                     _timedResponseStep:
  5337                           	callstack 0
  5338   000043                     	ds	1
  5339   000044                     _timedResponseAllServicesFlag:
  5340                           	callstack 0
  5341   000044                     	ds	1
  5342   000045                     _heartbeatSequence:
  5343                           	callstack 0
  5344   000045                     	ds	1
  5345   000046                     _last_mode_flags:
  5346                           	callstack 0
  5347   000046                     	ds	1
  5348   000047                     _last_mode_state:
  5349                           	callstack 0
  5350   000047                     	ds	1
  5351   000048                     _bootloaderVersion:
  5352                           	callstack 0
  5353   000048                     	ds	1
  5354   000049                     _expedited:
  5355                           	callstack 0
  5356   000049                     	ds	1
  5357   00004A                     _txQueue:
  5358                           	callstack 0
  5359   00004A                     	ds	5
  5360   00004F                     _rxQueue:
  5361                           	callstack 0
  5362   00004F                     	ds	5
  5363                           
  5364                           	psect	bssBANK0
  5365   0000A9                     __pbssBANK0:
  5366                           	callstack 0
  5367   0000A9                     _currentPos:
  5368                           	callstack 0
  5369   0000A9                     	ds	16
  5370   0000B9                     _flashCounter:
  5371                           	callstack 0
  5372   0000B9                     	ds	2
  5373   0000BB                     _ledState:
  5374                           	callstack 0
  5375   0000BB                     	ds	2
  5376   0000BD                     _nn:
  5377                           	callstack 0
  5378   0000BD                     	ds	2
  5379   0000BF                     _enumerationState:
  5380                           	callstack 0
  5381   0000BF                     	ds	1
  5382   0000C0                     _canTransmitFailed:
  5383                           	callstack 0
  5384   0000C0                     	ds	1
  5385   0000C1                     _canId:
  5386                           	callstack 0
  5387   0000C1                     	ds	1
  5388   0000C2                     _flashFlags:
  5389                           	callstack 0
  5390   0000C2                     	ds	1
  5391   0000C3                     _timedResponseType:
  5392                           	callstack 0
  5393   0000C3                     	ds	1
  5394   0000C4                     _timedResponseServiceIndex:
  5395                           	callstack 0
  5396   0000C4                     	ds	1
  5397   0000C5                     _mode_state:
  5398                           	callstack 0
  5399   0000C5                     	ds	1
  5400   0000C6                     _timerExtension2:
  5401                           	callstack 0
  5402   0000C6                     	ds	1
  5403   0000C7                     _timerExtension1:
  5404                           	callstack 0
  5405   0000C7                     	ds	1
  5406   0000C8                     _bootloaderType:
  5407                           	callstack 0
  5408   0000C8                     	ds	1
  5409   0000C9                     _servoInBlock:
  5410                           	callstack 0
  5411   0000C9                     	ds	1
  5412   0000CA                     _expeditedWriteIndex:
  5413                           	callstack 0
  5414   0000CA                     	ds	1
  5415   0000CB                     _expeditedReadIndex:
  5416                           	callstack 0
  5417   0000CB                     	ds	1
  5418   0000CC                     _normalWriteIndex:
  5419                           	callstack 0
  5420   0000CC                     	ds	1
  5421   0000CD                     _normalReadIndex:
  5422                           	callstack 0
  5423   0000CD                     	ds	1
  5424   0000CE                     _io@inputs$F849:
  5425                           	callstack 0
  5426   0000CE                     	ds	1
  5427   0000CF                     _io:
  5428                           	callstack 0
  5429   0000CF                     	ds	1
  5430   0000D0                     _started:
  5431                           	callstack 0
  5432   0000D0                     	ds	1
  5433                           
  5434                           	psect	bssBANK1
  5435   000100                     __pbssBANK1:
  5436                           	callstack 0
  5437   000100                     _stepsPerPollSpeed:
  5438                           	callstack 0
  5439   000100                     	ds	16
  5440   000110                     _servoState:
  5441                           	callstack 0
  5442   000110                     	ds	16
  5443   000120                     _targetPos:
  5444                           	callstack 0
  5445   000120                     	ds	16
  5446   000130                     _flashDelays:
  5447                           	callstack 0
  5448   000130                     	ds	16
  5449   000140                     _flashFlushTime:
  5450                           	callstack 0
  5451   000140                     	ds	4
  5452   000144                     _timedResponseTime:
  5453                           	callstack 0
  5454   000144                     	ds	4
  5455   000148                     _ledTimer:
  5456                           	callstack 0
  5457   000148                     	ds	4
  5458   00014C                     _uptimeTimer:
  5459                           	callstack 0
  5460   00014C                     	ds	4
  5461   000150                     _heartbeatTimer:
  5462                           	callstack 0
  5463   000150                     	ds	4
  5464   000154                     _lastActionPollTime:
  5465                           	callstack 0
  5466   000154                     	ds	4
  5467   000158                     _lastInputScanTime:
  5468                           	callstack 0
  5469   000158                     	ds	4
  5470   00015C                     _lastServoStartTime:
  5471                           	callstack 0
  5472   00015C                     	ds	4
  5473   000160                     _previousNN:
  5474                           	callstack 0
  5475   000160                     	ds	2
  5476   000162                     _transport:
  5477                           	callstack 0
  5478   000162                     	ds	2
  5479   000164                     _timedResponseDelay:
  5480                           	callstack 0
  5481   000164                     	ds	1
  5482   000165                     _setupModePreviousMode:
  5483                           	callstack 0
  5484   000165                     	ds	1
  5485   000166                     _mode_flags:
  5486                           	callstack 0
  5487   000166                     	ds	1
  5488   000167                     _canDiagnostics:
  5489                           	callstack 0
  5490   000167                     	ds	38
  5491   00018D                     _mnsDiagnostics:
  5492                           	callstack 0
  5493   00018D                     	ds	14
  5494   00019B                     _tmpMessage:
  5495                           	callstack 0
  5496   00019B                     	ds	9
  5497   0001A4                     _nvDiagnostics:
  5498                           	callstack 0
  5499   0001A4                     	ds	6
  5500   0001AA                     _producerDiagnostics:
  5501                           	callstack 0
  5502   0001AA                     	ds	4
  5503   0001AE                     _teachDiagnostics:
  5504                           	callstack 0
  5505   0001AE                     	ds	4
  5506   0001B2                     _ackDiagnostics:
  5507                           	callstack 0
  5508   0001B2                     	ds	4
  5509   0001B6                     _consumer2QDiagnostics:
  5510                           	callstack 0
  5511   0001B6                     	ds	4
  5512                           
  5513                           	psect	bssBANK2
  5514   000200                     __pbssBANK2:
  5515                           	callstack 0
  5516   000200                     _speed:
  5517                           	callstack 0
  5518   000200                     	ds	32
  5519   000220                     _evs:
  5520                           	callstack 0
  5521   000220                     	ds	20
  5522   000234                     _enumerationResults:
  5523                           	callstack 0
  5524   000234                     	ds	16
  5525   000244                     _bounceState:
  5526                           	callstack 0
  5527   000244                     	ds	16
  5528   000254                     _loopCount:
  5529                           	callstack 0
  5530   000254                     	ds	16
  5531   000264                     _pollCount:
  5532                           	callstack 0
  5533   000264                     	ds	16
  5534   000274                     _pollsPerStepSpeed:
  5535                           	callstack 0
  5536   000274                     	ds	16
  5537   000284                     _delayCount:
  5538                           	callstack 0
  5539   000284                     	ds	16
  5540   000294                     _inputState:
  5541                           	callstack 0
  5542   000294                     	ds	16
  5543   0002A4                     _pulseDelays:
  5544                           	callstack 0
  5545   0002A4                     	ds	16
  5546   0002B4                     _outputState:
  5547                           	callstack 0
  5548   0002B4                     	ds	16
  5549   0002C4                     _expeditedQueueBuf:
  5550                           	callstack 0
  5551   0002C4                     	ds	8
  5552                           
  5553                           	psect	bssBANK3
  5554   000300                     __pbssBANK3:
  5555                           	callstack 0
  5556   000300                     _happening2Event:
  5557                           	callstack 0
  5558   000300                     	ds	72
  5559   000348                     _flashBuffer:
  5560                           	callstack 0
  5561   000348                     	ds	64
  5562   000388                     _ticksWhenStopped:
  5563                           	callstack 0
  5564   000388                     	ds	64
  5565                           
  5566                           	psect	bssBANK4
  5567   000400                     __pbssBANK4:
  5568                           	callstack 0
  5569   000400                     _nvCache:
  5570                           	callstack 0
  5571   000400                     	ds	128
  5572   000480                     _normalQueueBuf:
  5573                           	callstack 0
  5574   000480                     	ds	64
  5575                           
  5576                           	psect	bssBANK5
  5577   000500                     __pbssBANK5:
  5578                           	callstack 0
  5579   000500                     _txBuffers:
  5580                           	callstack 0
  5581   000500                     	ds	72
  5582                           
  5583                           	psect	bssBIGRAM
  5584   000548                     __pbssBIGRAM:
  5585                           	callstack 0
  5586   000548                     _eventChains:
  5587                           	callstack 0
  5588   000548                     	ds	640
  5589   0007C8                     _rxBuffers:
  5590                           	callstack 0
  5591   0007C8                     	ds	288
  5592                           
  5593                           	psect	cstackBANK2
  5594   0002CC                     __pcstackBANK2:
  5595                           	callstack 0
  5596   0002CC                     ??_mnsProcessMessage:
  5597   0002CC                     ??_teachProcessMessage:
  5598   0002CC                     ??_producerProcessMessage:
  5599   0002CC                     consumer2QProcessMessage@end:
  5600                           	callstack 0
  5601   0002CC                     ackEventProcessMessage@eventEN:
  5602                           	callstack 0
  5603                           
  5604                           ; 2 bytes @ 0x0
  5605   0002CC                     	ds	1
  5606   0002CD                     consumer2QProcessMessage@change:
  5607                           	callstack 0
  5608                           
  5609                           ; 1 bytes @ 0x1
  5610   0002CD                     	ds	1
  5611   0002CE                     consumer2QProcessMessage@opc:
  5612                           	callstack 0
  5613   0002CE                     ackEventProcessMessage@eventIndex:
  5614                           	callstack 0
  5615                           
  5616                           ; 1 bytes @ 0x2
  5617   0002CE                     	ds	1
  5618   0002CF                     consumer2QProcessMessage@enn:
  5619                           	callstack 0
  5620   0002CF                     ackEventProcessMessage@eventNN:
  5621                           	callstack 0
  5622                           
  5623                           ; 2 bytes @ 0x3
  5624   0002CF                     	ds	2
  5625   0002D1                     consumer2QProcessMessage@tableIndex:
  5626                           	callstack 0
  5627                           
  5628                           ; 1 bytes @ 0x5
  5629   0002D1                     	ds	1
  5630   0002D2                     consumer2QProcessMessage@nextAction:
  5631                           	callstack 0
  5632                           
  5633                           ; 1 bytes @ 0x6
  5634   0002D2                     	ds	1
  5635   0002D3                     consumer2QProcessMessage@firstAction:
  5636                           	callstack 0
  5637                           
  5638                           ; 1 bytes @ 0x7
  5639   0002D3                     	ds	1
  5640   0002D4                     consumer2QProcessMessage@nextSimultaneous:
  5641                           	callstack 0
  5642                           
  5643                           ; 1 bytes @ 0x8
  5644   0002D4                     	ds	1
  5645   0002D5                     consumer2QProcessMessage@io:
  5646                           	callstack 0
  5647                           
  5648                           ; 1 bytes @ 0x9
  5649   0002D5                     	ds	1
  5650   0002D6                     consumer2QProcessMessage@masked_action:
  5651                           	callstack 0
  5652                           
  5653                           ; 1 bytes @ 0xA
  5654   0002D6                     	ds	1
  5655   0002D7                     consumer2QProcessMessage@ca:
  5656                           	callstack 0
  5657                           
  5658                           ; 1 bytes @ 0xB
  5659   0002D7                     	ds	1
  5660   0002D8                     consumer2QProcessMessage@e:
  5661                           	callstack 0
  5662                           
  5663                           ; 1 bytes @ 0xC
  5664   0002D8                     	ds	1
  5665   0002D9                     consumer2QProcessMessage@action:
  5666                           	callstack 0
  5667                           
  5668                           ; 1 bytes @ 0xD
  5669   0002D9                     	ds	17
  5670   0002EA                     ??_poll:
  5671                           
  5672                           ; 1 bytes @ 0x1E
  5673   0002EA                     	ds	4
  5674   0002EE                     poll@handled:
  5675                           	callstack 0
  5676                           
  5677                           ; 1 bytes @ 0x22
  5678   0002EE                     	ds	1
  5679   0002EF                     poll@i:
  5680                           	callstack 0
  5681                           
  5682                           ; 1 bytes @ 0x23
  5683   0002EF                     	ds	1
  5684   0002F0                     poll@m:
  5685                           	callstack 0
  5686                           
  5687                           ; 9 bytes @ 0x24
  5688   0002F0                     	ds	9
  5689                           
  5690                           	psect	cstackBANK1
  5691   0001BA                     __pcstackBANK1:
  5692                           	callstack 0
  5693   0001BA                     ??_writeNVM:
  5694   0001BA                     ??_rebuildHashtable:
  5695   0001BA                     APP_GetEventState@flags:
  5696                           	callstack 0
  5697   0001BA                     bounceDown@reversed:
  5698                           	callstack 0
  5699   0001BA                     sendMessage@len:
  5700                           	callstack 0
  5701   0001BA                     findEvent@nodeNumber:
  5702                           	callstack 0
  5703                           
  5704                           ; 2 bytes @ 0x0
  5705   0001BA                     	ds	1
  5706   0001BB                     APP_GetEventState@disable_off:
  5707                           	callstack 0
  5708   0001BB                     sendMessage@data1:
  5709                           	callstack 0
  5710   0001BB                     bounceDown@tmp:
  5711                           	callstack 0
  5712                           
  5713                           ; 2 bytes @ 0x1
  5714   0001BB                     	ds	1
  5715   0001BC                     ??_configIO:
  5716   0001BC                     ??_nvFactoryReset:
  5717   0001BC                     APP_GetEventState@h:
  5718                           	callstack 0
  5719   0001BC                     saveNV@value:
  5720                           	callstack 0
  5721   0001BC                     sendMessage@data2:
  5722                           	callstack 0
  5723   0001BC                     setNewCanId@newCanId:
  5724                           	callstack 0
  5725   0001BC                     findEvent@eventNumber:
  5726                           	callstack 0
  5727                           
  5728                           ; 2 bytes @ 0x2
  5729   0001BC                     	ds	1
  5730   0001BD                     ??_saveNV:
  5731   0001BD                     ??_processEnumeration:
  5732   0001BD                     APP_GetEventState@happeningIndex:
  5733                           	callstack 0
  5734   0001BD                     bounceDown@io:
  5735                           	callstack 0
  5736   0001BD                     sendMessage@data3:
  5737                           	callstack 0
  5738   0001BD                     rebuildHashtable@ev:
  5739                           	callstack 0
  5740                           
  5741                           ; 2 bytes @ 0x3
  5742   0001BD                     	ds	1
  5743   0001BE                     ??_findEvent:
  5744   0001BE                     nvFactoryReset@i:
  5745                           	callstack 0
  5746   0001BE                     sendMessage@data4:
  5747                           	callstack 0
  5748   0001BE                     _configIO$8081:
  5749                           	callstack 0
  5750                           
  5751                           ; 1 bytes @ 0x4
  5752   0001BE                     	ds	1
  5753   0001BF                     saveNV@index:
  5754                           	callstack 0
  5755   0001BF                     sendMessage@data5:
  5756                           	callstack 0
  5757   0001BF                     rebuildHashtable@hash:
  5758                           	callstack 0
  5759   0001BF                     _configIO$746:
  5760                           	callstack 0
  5761                           
  5762                           ; 2 bytes @ 0x5
  5763   0001BF                     	ds	1
  5764   0001C0                     defaultNVs@type:
  5765                           	callstack 0
  5766   0001C0                     sendMessage@data6:
  5767                           	callstack 0
  5768   0001C0                     rebuildHashtable@happening:
  5769                           	callstack 0
  5770   0001C0                     findEvent@nn:
  5771                           	callstack 0
  5772                           
  5773                           ; 2 bytes @ 0x6
  5774   0001C0                     	ds	1
  5775   0001C1                     ??_defaultNVs:
  5776   0001C1                     configIO@action:
  5777                           	callstack 0
  5778   0001C1                     sendMessage@data7:
  5779                           	callstack 0
  5780   0001C1                     processEnumeration@enumResult:
  5781                           	callstack 0
  5782   0001C1                     rebuildHashtable@chainIdx:
  5783                           	callstack 0
  5784                           
  5785                           ; 1 bytes @ 0x7
  5786   0001C1                     	ds	1
  5787   0001C2                     configIO@type:
  5788                           	callstack 0
  5789   0001C2                     sendMessage3@opc:
  5790                           	callstack 0
  5791   0001C2                     sendMessage4@data1:
  5792                           	callstack 0
  5793   0001C2                     sendMessage5@data1:
  5794                           	callstack 0
  5795   0001C2                     sendMessage6@data1:
  5796                           	callstack 0
  5797   0001C2                     sendMessage7@data1:
  5798                           	callstack 0
  5799   0001C2                     processEnumeration@newCanId:
  5800                           	callstack 0
  5801   0001C2                     rebuildHashtable@tableIndex:
  5802                           	callstack 0
  5803   0001C2                     findEvent@en:
  5804                           	callstack 0
  5805                           
  5806                           ; 2 bytes @ 0x8
  5807   0001C2                     	ds	1
  5808   0001C3                     ??_clearAllEvents:
  5809   0001C3                     ??_doNnevn:
  5810   0001C3                     ??_removeTableEntry:
  5811   0001C3                     configIO@i:
  5812                           	callstack 0
  5813   0001C3                     defaultNVs@io:
  5814                           	callstack 0
  5815   0001C3                     sendMessage4@data2:
  5816                           	callstack 0
  5817   0001C3                     sendMessage5@data2:
  5818                           	callstack 0
  5819   0001C3                     sendMessage6@data2:
  5820                           	callstack 0
  5821   0001C3                     sendMessage7@data2:
  5822                           	callstack 0
  5823   0001C3                     processEnumeration@i:
  5824                           	callstack 0
  5825   0001C3                     teachPowerUp@i:
  5826                           	callstack 0
  5827   0001C3                     doRqevn@count:
  5828                           	callstack 0
  5829                           
  5830                           ; 1 bytes @ 0x9
  5831   0001C3                     	ds	1
  5832   0001C4                     ??_powerUp:
  5833   0001C4                     defaultNVs@i:
  5834                           	callstack 0
  5835   0001C4                     sendMessage4@data3:
  5836                           	callstack 0
  5837   0001C4                     sendMessage5@data3:
  5838                           	callstack 0
  5839   0001C4                     sendMessage6@data3:
  5840                           	callstack 0
  5841   0001C4                     sendMessage7@data3:
  5842                           	callstack 0
  5843   0001C4                     doRqevn@i:
  5844                           	callstack 0
  5845   0001C4                     findEvent@hash:
  5846                           	callstack 0
  5847   0001C4                     canReceiveMessage@m:
  5848                           	callstack 0
  5849                           
  5850                           ; 2 bytes @ 0xA
  5851   0001C4                     	ds	1
  5852   0001C5                     sendMessage4@data4:
  5853                           	callstack 0
  5854   0001C5                     sendMessage5@data4:
  5855                           	callstack 0
  5856   0001C5                     sendMessage6@data4:
  5857                           	callstack 0
  5858   0001C5                     sendMessage7@data4:
  5859                           	callstack 0
  5860   0001C5                     findEvent@chainIdx:
  5861                           	callstack 0
  5862                           
  5863                           ; 1 bytes @ 0xB
  5864   0001C5                     	ds	1
  5865   0001C6                     sendMessage5@data5:
  5866                           	callstack 0
  5867   0001C6                     sendMessage6@data5:
  5868                           	callstack 0
  5869   0001C6                     sendMessage7@data5:
  5870                           	callstack 0
  5871   0001C6                     findEvent@tableIndex:
  5872                           	callstack 0
  5873   0001C6                     sendProducedEvent@opc:
  5874                           	callstack 0
  5875                           
  5876                           ; 1 bytes @ 0xC
  5877   0001C6                     	ds	1
  5878   0001C7                     ??_mnsPoll:
  5879   0001C7                     sendMessage6@data6:
  5880                           	callstack 0
  5881   0001C7                     sendMessage7@data6:
  5882                           	callstack 0
  5883   0001C7                     canReceiveMessage@messageAvailable:
  5884                           	callstack 0
  5885   0001C7                     clearAllEvents@tableIndex:
  5886                           	callstack 0
  5887   0001C7                     doNnevn@f:
  5888                           	callstack 0
  5889   0001C7                     doNenrd@index:
  5890                           	callstack 0
  5891   0001C7                     doReval@evNum:
  5892                           	callstack 0
  5893   0001C7                     removeTableEntry@f:
  5894                           	callstack 0
  5895   0001C7                     checkLen@m:
  5896                           	callstack 0
  5897   0001C7                     sendProducedEvent@producedEventEN:
  5898                           	callstack 0
  5899                           
  5900                           ; 2 bytes @ 0xD
  5901   0001C7                     	ds	1
  5902   0001C8                     ??_doReval:
  5903   0001C8                     powerUp@i:
  5904                           	callstack 0
  5905   0001C8                     sendMessage7@data7:
  5906                           	callstack 0
  5907   0001C8                     doNnevn@count:
  5908                           	callstack 0
  5909   0001C8                     removeTableEntry@tableIndex:
  5910                           	callstack 0
  5911   0001C8                     canReceiveMessage@mp:
  5912                           	callstack 0
  5913   0001C8                     doNenrd@nodeNumber:
  5914                           	callstack 0
  5915   0001C8                     doReqev@nodeNumber:
  5916                           	callstack 0
  5917                           
  5918                           ; 2 bytes @ 0xE
  5919   0001C8                     	ds	1
  5920   0001C9                     checkLen@needed:
  5921                           	callstack 0
  5922   0001C9                     doNnevn@i:
  5923                           	callstack 0
  5924   0001C9                     doReval@evIndex:
  5925                           	callstack 0
  5926   0001C9                     checkRemoveTableEntry@tableIndex:
  5927                           	callstack 0
  5928   0001C9                     removeEvent@nodeNumber:
  5929                           	callstack 0
  5930   0001C9                     sendProducedEvent@producedEventNN:
  5931                           	callstack 0
  5932                           
  5933                           ; 2 bytes @ 0xF
  5934   0001C9                     	ds	1
  5935   0001CA                     checkLen@service:
  5936                           	callstack 0
  5937   0001CA                     canReceiveMessage@no:
  5938                           	callstack 0
  5939   0001CA                     doReval@enNum:
  5940                           	callstack 0
  5941   0001CA                     checkRemoveTableEntry@e:
  5942                           	callstack 0
  5943   0001CA                     doNenrd@eventNumber:
  5944                           	callstack 0
  5945   0001CA                     doReqev@eventNumber:
  5946                           	callstack 0
  5947                           
  5948                           ; 2 bytes @ 0x10
  5949   0001CA                     	ds	1
  5950   0001CB                     writeEv@evNum:
  5951                           	callstack 0
  5952   0001CB                     sendProducedEvent@happening:
  5953                           	callstack 0
  5954   0001CB                     ackEventCheckLen@m:
  5955                           	callstack 0
  5956   0001CB                     canReceiveMessage@p:
  5957                           	callstack 0
  5958   0001CB                     teachCheckLen@m:
  5959                           	callstack 0
  5960   0001CB                     doReval@evVal:
  5961                           	callstack 0
  5962   0001CB                     removeEvent@eventNumber:
  5963                           	callstack 0
  5964                           
  5965                           ; 2 bytes @ 0x11
  5966   0001CB                     	ds	1
  5967   0001CC                     ??_inputScan:
  5968   0001CC                     ??_pollServos:
  5969   0001CC                     sendInvertedProducedEvent@state:
  5970                           	callstack 0
  5971   0001CC                     doNenrd@tableIndex:
  5972                           	callstack 0
  5973   0001CC                     doReqev@evNum:
  5974                           	callstack 0
  5975   0001CC                     writeEv@evVal:
  5976                           	callstack 0
  5977                           
  5978                           ; 1 bytes @ 0x12
  5979   0001CC                     	ds	1
  5980   0001CD                     ??_writeEv:
  5981   0001CD                     processOutputs@io:
  5982                           	callstack 0
  5983   0001CD                     sendInvertedProducedEvent@invert:
  5984                           	callstack 0
  5985   0001CD                     ackEventCheckLen@needed:
  5986                           	callstack 0
  5987   0001CD                     teachCheckLen@needed:
  5988                           	callstack 0
  5989   0001CD                     doReval@tableIndex:
  5990                           	callstack 0
  5991   0001CD                     removeEvent@tableIndex:
  5992                           	callstack 0
  5993   0001CD                     doReqev@evVal:
  5994                           	callstack 0
  5995                           
  5996                           ; 2 bytes @ 0x13
  5997   0001CD                     	ds	1
  5998   0001CE                     inputScan@change:
  5999                           	callstack 0
  6000   0001CE                     sendInvertedProducedEvent@can_send_on:
  6001                           	callstack 0
  6002   0001CE                     teachCheckLen@learn:
  6003                           	callstack 0
  6004   0001CE                     doEvuln@nodeNumber:
  6005                           	callstack 0
  6006                           
  6007                           ; 2 bytes @ 0x14
  6008   0001CE                     	ds	1
  6009   0001CF                     inputScan@input:
  6010                           	callstack 0
  6011   0001CF                     sendInvertedProducedEvent@can_send_off:
  6012                           	callstack 0
  6013   0001CF                     doReqev@tableIndex:
  6014                           	callstack 0
  6015                           
  6016                           ; 1 bytes @ 0x15
  6017   0001CF                     	ds	1
  6018   0001D0                     sendInvertedProducedEvent@happening:
  6019                           	callstack 0
  6020   0001D0                     doEvuln@eventNumber:
  6021                           	callstack 0
  6022                           
  6023                           ; 2 bytes @ 0x16
  6024   0001D0                     	ds	1
  6025   0001D1                     writeEv@startIndex:
  6026                           	callstack 0
  6027   0001D1                     _sendInvertedProducedEvent$1404:
  6028                           	callstack 0
  6029                           
  6030                           ; 2 bytes @ 0x17
  6031   0001D1                     	ds	1
  6032   0001D2                     doEvuln@result:
  6033                           	callstack 0
  6034   0001D2                     writeEv@nextF:
  6035                           	callstack 0
  6036                           
  6037                           ; 1 bytes @ 0x18
  6038   0001D2                     	ds	1
  6039   0001D3                     sendInvertedProducedEvent@state_to_send:
  6040                           	callstack 0
  6041   0001D3                     writeEv@e:
  6042                           	callstack 0
  6043                           
  6044                           ; 1 bytes @ 0x19
  6045   0001D3                     	ds	1
  6046   0001D4                     startDigitalOutput@state:
  6047                           	callstack 0
  6048   0001D4                     pollServos@target:
  6049                           	callstack 0
  6050   0001D4                     mnsTRallDiagnosticsCallback@serviceIndex:
  6051                           	callstack 0
  6052   0001D4                     reqevCallback@serviceIndex:
  6053                           	callstack 0
  6054   0001D4                     writeEv@f:
  6055                           	callstack 0
  6056                           
  6057                           ; 1 bytes @ 0x1A
  6058   0001D4                     	ds	1
  6059   0001D5                     ??_startDigitalOutput:
  6060   0001D5                     sodTRCallback@step:
  6061                           	callstack 0
  6062   0001D5                     pollServos@beforeMidway:
  6063                           	callstack 0
  6064   0001D5                     mnsTRserviceDiscoveryCallback@step:
  6065                           	callstack 0
  6066   0001D5                     mnsTRallDiagnosticsCallback@step:
  6067                           	callstack 0
  6068   0001D5                     mnsTRrqnpnCallback@step:
  6069                           	callstack 0
  6070   0001D5                     nvTRnvrdCallback@step:
  6071                           	callstack 0
  6072   0001D5                     nerdCallback@step:
  6073                           	callstack 0
  6074   0001D5                     reqevCallback@step:
  6075                           	callstack 0
  6076   0001D5                     writeEv@tableIndex:
  6077                           	callstack 0
  6078                           
  6079                           ; 1 bytes @ 0x1B
  6080   0001D5                     	ds	1
  6081   0001D6                     ??_mnsTRallDiagnosticsCallback:
  6082   0001D6                     ??_mnsTRserviceDiscoveryCallback:
  6083   0001D6                     ??_reqevCallback:
  6084   0001D6                     sodTRCallback@disable_SOD_response:
  6085                           	callstack 0
  6086   0001D6                     pollServos@midway:
  6087                           	callstack 0
  6088   0001D6                     writeEv@nextIdx:
  6089                           	callstack 0
  6090   0001D6                     nvTRnvrdCallback@valueOrError:
  6091                           	callstack 0
  6092   0001D6                     nerdCallback@nodeNumber:
  6093                           	callstack 0
  6094                           
  6095                           ; 2 bytes @ 0x1C
  6096   0001D6                     	ds	1
  6097   0001D7                     deleteActionRange@number:
  6098                           	callstack 0
  6099   0001D7                     sodTRCallback@send_on_ok:
  6100                           	callstack 0
  6101   0001D7                     pollServos@io:
  6102                           	callstack 0
  6103   0001D7                     deleteHappeningRange@number:
  6104                           	callstack 0
  6105   0001D7                     _startDigitalOutput$808:
  6106                           	callstack 0
  6107   0001D7                     addEvent@nodeNumber:
  6108                           	callstack 0
  6109                           
  6110                           ; 2 bytes @ 0x1D
  6111   0001D7                     	ds	1
  6112   0001D8                     ??_deleteHappeningRange:
  6113   0001D8                     ??_deleteActionRange:
  6114   0001D8                     sodTRCallback@send_off_ok:
  6115                           	callstack 0
  6116   0001D8                     startServos@type:
  6117                           	callstack 0
  6118   0001D8                     nerdCallback@eventNumber:
  6119                           	callstack 0
  6120                           
  6121                           ; 2 bytes @ 0x1E
  6122   0001D8                     	ds	1
  6123   0001D9                     startDigitalOutput@pinState:
  6124                           	callstack 0
  6125   0001D9                     _sodTRCallback$1424:
  6126                           	callstack 0
  6127   0001D9                     addEvent@eventNumber:
  6128                           	callstack 0
  6129                           
  6130                           ; 2 bytes @ 0x1F
  6131   0001D9                     	ds	1
  6132   0001DA                     startDigitalOutput@actionState:
  6133                           	callstack 0
  6134   0001DA                     _sodTRCallback$1425:
  6135                           	callstack 0
  6136   0001DA                     mnsTRallDiagnosticsCallback@d:
  6137                           	callstack 0
  6138                           
  6139                           ; 2 bytes @ 0x20
  6140   0001DA                     	ds	1
  6141   0001DB                     startDigitalOutput@io:
  6142                           	callstack 0
  6143   0001DB                     sodTRCallback@happeningIndex:
  6144                           	callstack 0
  6145   0001DB                     reqevCallback@nEv:
  6146                           	callstack 0
  6147   0001DB                     addEvent@evNum:
  6148                           	callstack 0
  6149                           
  6150                           ; 1 bytes @ 0x21
  6151   0001DB                     	ds	1
  6152   0001DC                     sodTRCallback@disable_off:
  6153                           	callstack 0
  6154   0001DC                     startOutput@act:
  6155                           	callstack 0
  6156   0001DC                     addEvent@evVal:
  6157                           	callstack 0
  6158   0001DC                     reqevCallback@ev:
  6159                           	callstack 0
  6160                           
  6161                           ; 2 bytes @ 0x22
  6162   0001DC                     	ds	1
  6163   0001DD                     deleteActionRange@updated:
  6164                           	callstack 0
  6165   0001DD                     sodTRCallback@value:
  6166                           	callstack 0
  6167   0001DD                     startOutput@type:
  6168                           	callstack 0
  6169   0001DD                     addEvent@forceOwnNN:
  6170                           	callstack 0
  6171   0001DD                     deleteHappeningRange@happening:
  6172                           	callstack 0
  6173                           
  6174                           ; 1 bytes @ 0x23
  6175   0001DD                     	ds	1
  6176   0001DE                     ??_addEvent:
  6177   0001DE                     deleteActionRange@action:
  6178                           	callstack 0
  6179   0001DE                     sodTRCallback@event_inverted:
  6180                           	callstack 0
  6181   0001DE                     startOutput@io:
  6182                           	callstack 0
  6183   0001DE                     deleteHappeningRange@h:
  6184                           	callstack 0
  6185   0001DE                     reqevCallback@nodeNumber:
  6186                           	callstack 0
  6187                           
  6188                           ; 2 bytes @ 0x24
  6189   0001DE                     	ds	1
  6190   0001DF                     deleteActionRange@e:
  6191                           	callstack 0
  6192   0001DF                     processActions@simultaneous:
  6193                           	callstack 0
  6194   0001DF                     sodTRCallback@flags:
  6195                           	callstack 0
  6196   0001DF                     deleteHappeningRange@tableIndex:
  6197                           	callstack 0
  6198                           
  6199                           ; 1 bytes @ 0x25
  6200   0001DF                     	ds	1
  6201   0001E0                     deleteActionRange@tableIndex:
  6202                           	callstack 0
  6203   0001E0                     processActions@peekItem:
  6204                           	callstack 0
  6205   0001E0                     sodTRCallback@io:
  6206                           	callstack 0
  6207   0001E0                     reqevCallback@eventNumber:
  6208                           	callstack 0
  6209                           
  6210                           ; 2 bytes @ 0x26
  6211   0001E0                     	ds	1
  6212   0001E1                     clearEvents@io:
  6213                           	callstack 0
  6214   0001E1                     processActions@nextType:
  6215                           	callstack 0
  6216                           
  6217                           ; 1 bytes @ 0x27
  6218   0001E1                     	ds	1
  6219   0001E2                     processActions@nextIo:
  6220                           	callstack 0
  6221   0001E2                     reqevCallback@tableIndex:
  6222                           	callstack 0
  6223   0001E2                     addEvent@error:
  6224                           	callstack 0
  6225                           
  6226                           ; 1 bytes @ 0x28
  6227   0001E2                     	ds	1
  6228   0001E3                     ??_pollTimedResponse:
  6229   0001E3                     processActions@type:
  6230                           	callstack 0
  6231   0001E3                     addEvent@f:
  6232                           	callstack 0
  6233                           
  6234                           ; 1 bytes @ 0x29
  6235   0001E3                     	ds	1
  6236   0001E4                     processActions@ioAction:
  6237                           	callstack 0
  6238   0001E4                     addEvent@e:
  6239                           	callstack 0
  6240                           
  6241                           ; 1 bytes @ 0x2A
  6242   0001E4                     	ds	1
  6243   0001E5                     processActions@nextAction:
  6244                           	callstack 0
  6245   0001E5                     pollTimedResponse@result:
  6246                           	callstack 0
  6247   0001E5                     addEvent@tableIndex:
  6248                           	callstack 0
  6249                           
  6250                           ; 1 bytes @ 0x2B
  6251   0001E5                     	ds	1
  6252   0001E6                     defaultEvents@type:
  6253                           	callstack 0
  6254   0001E6                     processActions@io:
  6255                           	callstack 0
  6256   0001E6                     APP_addEvent@nodeNumber:
  6257                           	callstack 0
  6258                           
  6259                           ; 2 bytes @ 0x2C
  6260   0001E6                     	ds	1
  6261   0001E7                     processActions@action:
  6262                           	callstack 0
  6263   0001E7                     defaultEvents@en:
  6264                           	callstack 0
  6265                           
  6266                           ; 2 bytes @ 0x2D
  6267   0001E7                     	ds	1
  6268   0001E8                     ??_loop:
  6269   0001E8                     APP_addEvent@eventNumber:
  6270                           	callstack 0
  6271                           
  6272                           ; 2 bytes @ 0x2E
  6273   0001E8                     	ds	1
  6274   0001E9                     defaultEvents@io:
  6275                           	callstack 0
  6276                           
  6277                           ; 1 bytes @ 0x2F
  6278   0001E9                     	ds	1
  6279   0001EA                     setType@type:
  6280                           	callstack 0
  6281   0001EA                     APP_addEvent@evNum:
  6282                           	callstack 0
  6283                           
  6284                           ; 1 bytes @ 0x30
  6285   0001EA                     	ds	1
  6286   0001EB                     setType@index:
  6287                           	callstack 0
  6288   0001EB                     APP_addEvent@evVal:
  6289                           	callstack 0
  6290                           
  6291                           ; 1 bytes @ 0x31
  6292   0001EB                     	ds	1
  6293   0001EC                     setType@io:
  6294                           	callstack 0
  6295   0001EC                     APP_addEvent@forceOwnNN:
  6296                           	callstack 0
  6297                           
  6298                           ; 1 bytes @ 0x32
  6299   0001EC                     	ds	1
  6300   0001ED                     APP_factoryReset@io:
  6301                           	callstack 0
  6302   0001ED                     APP_addEvent@tableIndex:
  6303                           	callstack 0
  6304   0001ED                     APP_nvValueChanged@value:
  6305                           	callstack 0
  6306                           
  6307                           ; 1 bytes @ 0x33
  6308   0001ED                     	ds	1
  6309   0001EE                     ??_factoryReset:
  6310   0001EE                     APP_nvValueChanged@oldValue:
  6311                           	callstack 0
  6312   0001EE                     doEvlrn@nodeNumber:
  6313                           	callstack 0
  6314                           
  6315                           ; 2 bytes @ 0x34
  6316   0001EE                     	ds	1
  6317   0001EF                     ??_APP_nvValueChanged:
  6318                           
  6319                           ; 1 bytes @ 0x35
  6320   0001EF                     	ds	1
  6321   0001F0                     doEvlrn@eventNumber:
  6322                           	callstack 0
  6323                           
  6324                           ; 2 bytes @ 0x36
  6325   0001F0                     	ds	2
  6326   0001F2                     APP_nvValueChanged@index:
  6327                           	callstack 0
  6328   0001F2                     factoryReset@i:
  6329                           	callstack 0
  6330   0001F2                     doEvlrn@evNum:
  6331                           	callstack 0
  6332                           
  6333                           ; 1 bytes @ 0x38
  6334   0001F2                     	ds	1
  6335   0001F3                     APP_nvValueChanged@io:
  6336                           	callstack 0
  6337   0001F3                     checkPowerOnPb@i:
  6338                           	callstack 0
  6339   0001F3                     doEvlrn@evVal:
  6340                           	callstack 0
  6341                           
  6342                           ; 1 bytes @ 0x39
  6343   0001F3                     	ds	1
  6344   0001F4                     setNV@value:
  6345                           	callstack 0
  6346   0001F4                     doEvlrn@error:
  6347                           	callstack 0
  6348                           
  6349                           ; 1 bytes @ 0x3A
  6350   0001F4                     	ds	1
  6351   0001F5                     ??_setNV:
  6352                           
  6353                           ; 1 bytes @ 0x3B
  6354   0001F5                     	ds	2
  6355   0001F7                     setNV@oldValue:
  6356                           	callstack 0
  6357                           
  6358                           ; 1 bytes @ 0x3D
  6359   0001F7                     	ds	1
  6360   0001F8                     setNV@index:
  6361                           	callstack 0
  6362                           
  6363                           ; 1 bytes @ 0x3E
  6364   0001F8                     	ds	1
  6365   0001F9                     consumer2QProcessMessage@m:
  6366                           	callstack 0
  6367   0001F9                     bootProcessMessage@m:
  6368                           	callstack 0
  6369   0001F9                     ackEventProcessMessage@m:
  6370                           	callstack 0
  6371   0001F9                     mnsProcessMessage@m:
  6372                           	callstack 0
  6373   0001F9                     nvProcessMessage@m:
  6374                           	callstack 0
  6375   0001F9                     canProcessMessage@m:
  6376                           	callstack 0
  6377   0001F9                     teachProcessMessage@m:
  6378                           	callstack 0
  6379   0001F9                     producerProcessMessage@m:
  6380                           	callstack 0
  6381                           
  6382                           ; 2 bytes @ 0x3F
  6383   0001F9                     	ds	2
  6384   0001FB                     ??_consumer2QProcessMessage:
  6385   0001FB                     ??_bootProcessMessage:
  6386   0001FB                     ??_ackEventProcessMessage:
  6387   0001FB                     ??_nvProcessMessage:
  6388   0001FB                     ??_canProcessMessage:
  6389   0001FB                     mnsProcessMessage@i:
  6390                           	callstack 0
  6391   0001FB                     producerProcessMessage@ev:
  6392                           	callstack 0
  6393                           
  6394                           ; 2 bytes @ 0x41
  6395   0001FB                     	ds	1
  6396   0001FC                     mnsProcessMessage@d:
  6397                           	callstack 0
  6398                           
  6399                           ; 2 bytes @ 0x42
  6400   0001FC                     	ds	1
  6401   0001FD                     producerProcessMessage@h:
  6402                           	callstack 0
  6403   0001FD                     nvProcessMessage@valueOrError:
  6404                           	callstack 0
  6405                           
  6406                           ; 2 bytes @ 0x43
  6407   0001FD                     	ds	1
  6408   0001FE                     mnsProcessMessage@newMode:
  6409                           	callstack 0
  6410   0001FE                     producerProcessMessage@index:
  6411                           	callstack 0
  6412                           
  6413                           ; 1 bytes @ 0x44
  6414   0001FE                     	ds	1
  6415                           
  6416                           	psect	cstackBANK0
  6417   000060                     __pcstackBANK0:
  6418                           	callstack 0
  6419   000060                     ?i1_getNextWriteMessage:
  6420                           	callstack 0
  6421   000060                     ?i1_pop:
  6422                           	callstack 0
  6423   000060                     ?i1_getBufferPointer:
  6424                           	callstack 0
  6425   000060                     ?i1_tickGet:
  6426                           	callstack 0
  6427   000060                     i1_isEvent$4885:
  6428                           	callstack 0
  6429   000060                     i1getNextWriteMessage@q:
  6430                           	callstack 0
  6431   000060                     i1pop@q:
  6432                           	callstack 0
  6433                           
  6434                           ; 1 bytes @ 0x0
  6435   000060                     	ds	1
  6436   000061                     i1isEvent@opc:
  6437                           	callstack 0
  6438                           
  6439                           ; 1 bytes @ 0x1
  6440   000061                     	ds	1
  6441   000062                     ??i1_getNextWriteMessage:
  6442   000062                     ??i1_pop:
  6443   000062                     i1getBufferPointer@b:
  6444                           	callstack 0
  6445                           
  6446                           ; 1 bytes @ 0x2
  6447   000062                     	ds	2
  6448   000064                     i1tickGet@IntFlag2:
  6449                           	callstack 0
  6450                           
  6451                           ; 1 bytes @ 0x4
  6452   000064                     	ds	1
  6453   000065                     i1tickGet@IntFlag1:
  6454                           	callstack 0
  6455                           
  6456                           ; 1 bytes @ 0x5
  6457   000065                     	ds	1
  6458   000066                     i1tickGet@currentTime:
  6459                           	callstack 0
  6460                           
  6461                           ; 4 bytes @ 0x6
  6462   000066                     	ds	1
  6463   000067                     i1pop@ret:
  6464                           	callstack 0
  6465                           
  6466                           ; 2 bytes @ 0x7
  6467   000067                     	ds	4
  6468   00006B                     i1getNextWriteMessage@wr:
  6469                           	callstack 0
  6470                           
  6471                           ; 1 bytes @ 0xB
  6472   00006B                     	ds	1
  6473   00006C                     ??_checkTxFifo:
  6474   00006C                     canFillRxFifo@m:
  6475                           	callstack 0
  6476                           
  6477                           ; 2 bytes @ 0xC
  6478   00006C                     	ds	2
  6479   00006E                     canFillRxFifo@ptr:
  6480                           	callstack 0
  6481                           
  6482                           ; 2 bytes @ 0xE
  6483   00006E                     	ds	3
  6484   000071                     checkTxFifo@m:
  6485                           	callstack 0
  6486                           
  6487                           ; 2 bytes @ 0x11
  6488   000071                     	ds	2
  6489   000073                     checkTxFifo@mp:
  6490                           	callstack 0
  6491                           
  6492                           ; 2 bytes @ 0x13
  6493   000073                     	ds	2
  6494   000075                     ??_checkCANTimeout:
  6495                           
  6496                           ; 1 bytes @ 0x15
  6497   000075                     	ds	4
  6498   000079                     ??_lowIsr:
  6499                           
  6500                           ; 1 bytes @ 0x19
  6501   000079                     	ds	4
  6502   00007D                     lowIsr@i:
  6503                           	callstack 0
  6504                           
  6505                           ; 1 bytes @ 0x1D
  6506   00007D                     	ds	1
  6507   00007E                     ??_isrLow:
  6508                           
  6509                           ; 1 bytes @ 0x1E
  6510   00007E                     	ds	15
  6511   00008D                     ??_findServiceIndex:
  6512   00008D                     ??_have:
  6513   00008D                     ??_showStatus:
  6514   00008D                     ?_getNV:
  6515                           	callstack 0
  6516   00008D                     ?_findService:
  6517                           	callstack 0
  6518   00008D                     ?_getNextWriteMessage:
  6519                           	callstack 0
  6520   00008D                     ?_pop:
  6521                           	callstack 0
  6522   00008D                     ?_getBufferPointer:
  6523                           	callstack 0
  6524   00008D                     ?___awmod:
  6525                           	callstack 0
  6526   00008D                     ?_tickGet:
  6527                           	callstack 0
  6528   00008D                     initOutputs@io:
  6529                           	callstack 0
  6530   00008D                     consumer2QEsdData@index:
  6531                           	callstack 0
  6532   00008D                     pushTwoAction@a:
  6533                           	callstack 0
  6534   00008D                     peekTwoActionQueue@qty:
  6535                           	callstack 0
  6536   00008D                     deleteTwoActionQueue@qty:
  6537                           	callstack 0
  6538   00008D                     needsStarting@act:
  6539                           	callstack 0
  6540   00008D                     completed@action:
  6541                           	callstack 0
  6542   00008D                     finaliseOutput@type:
  6543                           	callstack 0
  6544   00008D                     startBounceOutput@action:
  6545                           	callstack 0
  6546   00008D                     initBounce@io:
  6547                           	callstack 0
  6548   00008D                     bootEsdData@id:
  6549                           	callstack 0
  6550   00008D                     ackPowerUp@i:
  6551                           	callstack 0
  6552   00008D                     nvGetESDdata@id:
  6553                           	callstack 0
  6554   00008D                     initTicker@priority:
  6555                           	callstack 0
  6556   00008D                     setTimedResponseDelay@delay:
  6557                           	callstack 0
  6558   00008D                     _isEvent$4885:
  6559                           	callstack 0
  6560   00008D                     push@q:
  6561                           	callstack 0
  6562   00008D                     getNextWriteMessage@q:
  6563                           	callstack 0
  6564   00008D                     pop@q:
  6565                           	callstack 0
  6566   00008D                     quantity@q:
  6567                           	callstack 0
  6568   00008D                     eraseFlashBlock@interruptEnabled:
  6569                           	callstack 0
  6570   00008D                     loadFlashBlock@i:
  6571                           	callstack 0
  6572   00008D                     canEsdData@id:
  6573                           	callstack 0
  6574   00008D                     teachGetESDdata@id:
  6575                           	callstack 0
  6576   00008D                     evtIdxToTableIndex@evtIdx:
  6577                           	callstack 0
  6578   00008D                     tableIndexToEvtIdx@tableIndex:
  6579                           	callstack 0
  6580   00008D                     producerPowerUp@i:
  6581                           	callstack 0
  6582   00008D                     producerEsdData@index:
  6583                           	callstack 0
  6584   00008D                     APP_preProcessMessage@m:
  6585                           	callstack 0
  6586   00008D                     APP_postProcessMessage@m:
  6587                           	callstack 0
  6588   00008D                     EEPROM_Read@index:
  6589                           	callstack 0
  6590   00008D                     FLASH_Read@address:
  6591                           	callstack 0
  6592   00008D                     ___awmod@dividend:
  6593                           	callstack 0
  6594   00008D                     memcpy@d1:
  6595                           	callstack 0
  6596                           
  6597                           ; 2 bytes @ 0x2D
  6598   00008D                     	ds	1
  6599   00008E                     ??_quantity:
  6600   00008E                     peekTwoActionQueue@index:
  6601                           	callstack 0
  6602   00008E                     deleteTwoActionQueue@index:
  6603                           	callstack 0
  6604   00008E                     needsStarting@type:
  6605                           	callstack 0
  6606   00008E                     completed@type:
  6607                           	callstack 0
  6608   00008E                     startBounceOutput@io:
  6609                           	callstack 0
  6610   00008E                     initTicker@divider:
  6611                           	callstack 0
  6612   00008E                     isEvent@opc:
  6613                           	callstack 0
  6614   00008E                     flushFlashBlock@interruptEnabled:
  6615                           	callstack 0
  6616   00008E                     push@m:
  6617                           	callstack 0
  6618                           
  6619                           ; 2 bytes @ 0x2E
  6620   00008E                     	ds	1
  6621   00008F                     ??_getNV:
  6622   00008F                     ??_findService:
  6623   00008F                     ??_getNextWriteMessage:
  6624   00008F                     ??_pop:
  6625   00008F                     ??_FLASH_Read:
  6626   00008F                     showStatus@s:
  6627                           	callstack 0
  6628   00008F                     initTicker@i:
  6629                           	callstack 0
  6630   00008F                     findServiceIndex@serviceType:
  6631                           	callstack 0
  6632   00008F                     have@id:
  6633                           	callstack 0
  6634   00008F                     flushFlashBlock@i:
  6635                           	callstack 0
  6636   00008F                     getBufferPointer@b:
  6637                           	callstack 0
  6638   00008F                     EEPROM_Write@index:
  6639                           	callstack 0
  6640   00008F                     ___awmod@divisor:
  6641                           	callstack 0
  6642   00008F                     memcpy@s1:
  6643                           	callstack 0
  6644                           
  6645                           ; 2 bytes @ 0x2F
  6646   00008F                     	ds	1
  6647   000090                     ??_push:
  6648   000090                     getNV@index:
  6649                           	callstack 0
  6650   000090                     findServiceIndex@i:
  6651                           	callstack 0
  6652   000090                     have@i:
  6653                           	callstack 0
  6654   000090                     FLASH_Write@index:
  6655                           	callstack 0
  6656                           
  6657                           ; 2 bytes @ 0x30
  6658   000090                     	ds	1
  6659   000091                     ??_readInput:
  6660   000091                     ?_readNVM:
  6661                           	callstack 0
  6662   000091                     ?___wmul:
  6663                           	callstack 0
  6664   000091                     ?___lmul:
  6665                           	callstack 0
  6666   000091                     setOutputPin@state:
  6667                           	callstack 0
  6668   000091                     needsStarting@io:
  6669                           	callstack 0
  6670   000091                     _completed$1545:
  6671                           	callstack 0
  6672   000091                     startServoOutput@action:
  6673                           	callstack 0
  6674   000091                     startMultiOutput@action:
  6675                           	callstack 0
  6676   000091                     setServoState@action:
  6677                           	callstack 0
  6678   000091                     setBounceState@action:
  6679                           	callstack 0
  6680   000091                     setMultiState@action:
  6681                           	callstack 0
  6682   000091                     getParameterFlags@flags:
  6683                           	callstack 0
  6684   000091                     tickGet@IntFlag2:
  6685                           	callstack 0
  6686   000091                     startTimedResponse@serviceIndex:
  6687                           	callstack 0
  6688   000091                     findService@id:
  6689                           	callstack 0
  6690   000091                     EEPROM_Write@value:
  6691                           	callstack 0
  6692   000091                     ___awmod@counter:
  6693                           	callstack 0
  6694   000091                     ___wmul@multiplier:
  6695                           	callstack 0
  6696   000091                     memcpy@n:
  6697                           	callstack 0
  6698   000091                     readNVM@index:
  6699                           	callstack 0
  6700   000091                     ___lmul@multiplier:
  6701                           	callstack 0
  6702                           
  6703                           ; 4 bytes @ 0x31
  6704   000091                     	ds	1
  6705   000092                     ??_setOutputPin:
  6706   000092                     ??_startServoOutput:
  6707   000092                     ??_startMultiOutput:
  6708   000092                     completed@io:
  6709                           	callstack 0
  6710   000092                     setServoState@io:
  6711                           	callstack 0
  6712   000092                     setBounceState@io:
  6713                           	callstack 0
  6714   000092                     setMultiState@io:
  6715                           	callstack 0
  6716   000092                     getParameter@idx:
  6717                           	callstack 0
  6718   000092                     tickGet@IntFlag1:
  6719                           	callstack 0
  6720   000092                     findService@i:
  6721                           	callstack 0
  6722   000092                     EEPROM_Write@interruptEnabled:
  6723                           	callstack 0
  6724   000092                     FLASH_Write@value:
  6725                           	callstack 0
  6726   000092                     ___awmod@sign:
  6727                           	callstack 0
  6728   000092                     startTimedResponse@callback:
  6729                           	callstack 0
  6730   000092                     getNumRxBuffersInUse@ptr:
  6731                           	callstack 0
  6732                           
  6733                           ; 2 bytes @ 0x32
  6734   000092                     	ds	1
  6735   000093                     ??_FLASH_Write:
  6736   000093                     readInput@io:
  6737                           	callstack 0
  6738   000093                     setOutputState@act:
  6739                           	callstack 0
  6740   000093                     startServoOutput@io:
  6741                           	callstack 0
  6742   000093                     startMultiOutput@io:
  6743                           	callstack 0
  6744   000093                     memcpy@tmp:
  6745                           	callstack 0
  6746   000093                     ___wmul@multiplicand:
  6747                           	callstack 0
  6748   000093                     tickGet@currentTime:
  6749                           	callstack 0
  6750                           
  6751                           ; 4 bytes @ 0x33
  6752   000093                     	ds	1
  6753   000094                     ??_readNVM:
  6754   000094                     setOutputPin@io:
  6755                           	callstack 0
  6756   000094                     setOutputState@type:
  6757                           	callstack 0
  6758   000094                     startTimedResponse@type:
  6759                           	callstack 0
  6760   000094                     getNumRxBuffersInUse@no:
  6761                           	callstack 0
  6762   000094                     pop@ret:
  6763                           	callstack 0
  6764   000094                     memcpy@d:
  6765                           	callstack 0
  6766                           
  6767                           ; 2 bytes @ 0x34
  6768   000094                     	ds	1
  6769   000095                     ??_setupTimer1:
  6770   000095                     ??_setupTimer3:
  6771   000095                     setOutputState@io:
  6772                           	callstack 0
  6773   000095                     getNumRxBuffersInUse@i:
  6774                           	callstack 0
  6775   000095                     ___wmul@product:
  6776                           	callstack 0
  6777   000095                     ___lmul@multiplicand:
  6778                           	callstack 0
  6779                           
  6780                           ; 4 bytes @ 0x35
  6781   000095                     	ds	1
  6782   000096                     ?_consumer2QGetDiagnostic:
  6783                           	callstack 0
  6784   000096                     ?_ackGetDiagnostic:
  6785                           	callstack 0
  6786   000096                     ?_mnsGetDiagnostic:
  6787                           	callstack 0
  6788   000096                     ?_nvGetDiagnostic:
  6789                           	callstack 0
  6790   000096                     ?_canGetDiagnostic:
  6791                           	callstack 0
  6792   000096                     ?_teachGetDiagnostic:
  6793                           	callstack 0
  6794   000096                     ?_producerGetDiagnostic:
  6795                           	callstack 0
  6796   000096                     readNVM@type:
  6797                           	callstack 0
  6798   000096                     memcpy@s:
  6799                           	callstack 0
  6800                           
  6801                           ; 2 bytes @ 0x36
  6802   000096                     	ds	1
  6803   000097                     ??_initInputScan:
  6804   000097                     ??_validStart:
  6805   000097                     ??_loadNvCache:
  6806   000097                     ??_canPowerUp:
  6807   000097                     ?_getNN:
  6808                           	callstack 0
  6809   000097                     ?_getEN:
  6810                           	callstack 0
  6811   000097                     ?___awdiv:
  6812                           	callstack 0
  6813   000097                     ?___lldiv:
  6814                           	callstack 0
  6815   000097                     setDigitalOutput@state:
  6816                           	callstack 0
  6817   000097                     bootPowerUp@b:
  6818                           	callstack 0
  6819   000097                     mnsPowerUp@i:
  6820                           	callstack 0
  6821   000097                     handleSelfEnumeration@p:
  6822                           	callstack 0
  6823   000097                     ___awdiv@dividend:
  6824                           	callstack 0
  6825   000097                     ___lldiv@dividend:
  6826                           	callstack 0
  6827                           
  6828                           ; 4 bytes @ 0x37
  6829   000097                     	ds	1
  6830   000098                     ??_canGetDiagnostic:
  6831   000098                     setDigitalOutput@pinState:
  6832                           	callstack 0
  6833   000098                     consumer2QGetDiagnostic@index:
  6834                           	callstack 0
  6835   000098                     bootPowerUp@found:
  6836                           	callstack 0
  6837   000098                     ackGetDiagnostic@index:
  6838                           	callstack 0
  6839   000098                     mnsGetDiagnostic@index:
  6840                           	callstack 0
  6841   000098                     nvGetDiagnostic@index:
  6842                           	callstack 0
  6843   000098                     getNextWriteMessage@wr:
  6844                           	callstack 0
  6845   000098                     teachGetDiagnostic@index:
  6846                           	callstack 0
  6847   000098                     producerGetDiagnostic@index:
  6848                           	callstack 0
  6849   000098                     _setupTimer1$1931:
  6850                           	callstack 0
  6851   000098                     _setupTimer3$1935:
  6852                           	callstack 0
  6853   000098                     mnsPowerUp@temp:
  6854                           	callstack 0
  6855   000098                     canPowerUp@temp:
  6856                           	callstack 0
  6857                           
  6858                           ; 2 bytes @ 0x38
  6859   000098                     	ds	1
  6860   000099                     ??_handleSelfEnumeration:
  6861   000099                     ??_getNN:
  6862   000099                     ??_getEN:
  6863   000099                     setDigitalOutput@io:
  6864                           	callstack 0
  6865   000099                     initInputScan@input:
  6866                           	callstack 0
  6867   000099                     bootPowerUp@i:
  6868                           	callstack 0
  6869   000099                     canGetDiagnostic@index:
  6870                           	callstack 0
  6871   000099                     loadNvCache@temp:
  6872                           	callstack 0
  6873   000099                     canSendMessage@mp:
  6874                           	callstack 0
  6875   000099                     ___awdiv@divisor:
  6876                           	callstack 0
  6877   000099                     ___lmul@product:
  6878                           	callstack 0
  6879                           
  6880                           ; 4 bytes @ 0x39
  6881   000099                     	ds	1
  6882   00009A                     setupTimer1@ticks:
  6883                           	callstack 0
  6884   00009A                     setupTimer3@ticks:
  6885                           	callstack 0
  6886   00009A                     bootPowerUp@a:
  6887                           	callstack 0
  6888                           
  6889                           ; 3 bytes @ 0x3A
  6890   00009A                     	ds	1
  6891   00009B                     ??_canSendMessage:
  6892   00009B                     loadNvCache@i:
  6893                           	callstack 0
  6894   00009B                     validStart@tableIndex:
  6895                           	callstack 0
  6896   00009B                     ___awdiv@counter:
  6897                           	callstack 0
  6898   00009B                     ___lldiv@divisor:
  6899                           	callstack 0
  6900                           
  6901                           ; 4 bytes @ 0x3B
  6902   00009B                     	ds	1
  6903   00009C                     setupTimer1@io:
  6904                           	callstack 0
  6905   00009C                     setupTimer3@io:
  6906                           	callstack 0
  6907   00009C                     nvPowerUp@i:
  6908                           	callstack 0
  6909   00009C                     validStart@f:
  6910                           	callstack 0
  6911   00009C                     ___awdiv@sign:
  6912                           	callstack 0
  6913                           
  6914                           ; 1 bytes @ 0x3C
  6915   00009C                     	ds	1
  6916   00009D                     ??_getEVs:
  6917   00009D                     ??_numEv:
  6918   00009D                     ?_getEv:
  6919                           	callstack 0
  6920   00009D                     handleSelfEnumeration@incomingCanId:
  6921                           	callstack 0
  6922   00009D                     getEv@evNum:
  6923                           	callstack 0
  6924   00009D                     doWait@duration:
  6925                           	callstack 0
  6926   00009D                     getNN@hi:
  6927                           	callstack 0
  6928   00009D                     getEN@hi:
  6929                           	callstack 0
  6930   00009D                     ___awdiv@quotient:
  6931                           	callstack 0
  6932                           
  6933                           ; 2 bytes @ 0x3D
  6934   00009D                     	ds	2
  6935   00009F                     ??_getEv:
  6936   00009F                     ??_doWait:
  6937   00009F                     ??_bounceUp:
  6938   00009F                     ??_bounceDown:
  6939   00009F                     ??_APP_GetEventState:
  6940   00009F                     ??_APP_nvDefault:
  6941   00009F                     ??_leds_poll:
  6942   00009F                     APP_nvValidate@value:
  6943                           	callstack 0
  6944   00009F                     setServoPosition@pos:
  6945                           	callstack 0
  6946   00009F                     getNN@lo:
  6947                           	callstack 0
  6948   00009F                     getEN@lo:
  6949                           	callstack 0
  6950   00009F                     ___lldiv@quotient:
  6951                           	callstack 0
  6952                           
  6953                           ; 4 bytes @ 0x3F
  6954   00009F                     	ds	1
  6955   0000A0                     APP_nvValidate@index:
  6956                           	callstack 0
  6957   0000A0                     setServoPosition@io:
  6958                           	callstack 0
  6959   0000A0                     canSendMessage@no:
  6960                           	callstack 0
  6961                           
  6962                           ; 1 bytes @ 0x40
  6963   0000A0                     	ds	1
  6964   0000A1                     setOutputPosition@pos:
  6965                           	callstack 0
  6966   0000A1                     numEv@num:
  6967                           	callstack 0
  6968   0000A1                     getEVs@f:
  6969                           	callstack 0
  6970   0000A1                     getNN@f:
  6971                           	callstack 0
  6972   0000A1                     getEN@tableIndex:
  6973                           	callstack 0
  6974   0000A1                     canSendMessage@m:
  6975                           	callstack 0
  6976                           
  6977                           ; 2 bytes @ 0x41
  6978   0000A1                     	ds	1
  6979   0000A2                     setOutputPosition@type:
  6980                           	callstack 0
  6981   0000A2                     numEv@f:
  6982                           	callstack 0
  6983   0000A2                     getEVs@evIdx:
  6984                           	callstack 0
  6985   0000A2                     getNN@tableIndex:
  6986                           	callstack 0
  6987                           
  6988                           ; 1 bytes @ 0x42
  6989   0000A2                     	ds	1
  6990   0000A3                     ??_sendMessage:
  6991   0000A3                     APP_nvDefault@index:
  6992                           	callstack 0
  6993   0000A3                     setOutputPosition@io:
  6994                           	callstack 0
  6995   0000A3                     numEv@tableIndex:
  6996                           	callstack 0
  6997   0000A3                     getEVs@tableIndex:
  6998                           	callstack 0
  6999   0000A3                     ___lldiv@counter:
  7000                           	callstack 0
  7001   0000A3                     getHash@nn:
  7002                           	callstack 0
  7003                           
  7004                           ; 2 bytes @ 0x43
  7005   0000A3                     	ds	1
  7006   0000A4                     ??_initServos:
  7007   0000A4                     ??_pbDownTimer:
  7008   0000A4                     ??_pbUpTimer:
  7009   0000A4                     getEv@f:
  7010                           	callstack 0
  7011   0000A4                     getEVs@evNum:
  7012                           	callstack 0
  7013   0000A4                     writeNVM@index:
  7014                           	callstack 0
  7015                           
  7016                           ; 3 bytes @ 0x44
  7017   0000A4                     	ds	1
  7018   0000A5                     bounceUp@reversed:
  7019                           	callstack 0
  7020   0000A5                     sendMessage@opc:
  7021                           	callstack 0
  7022   0000A5                     getEv@tableIndex:
  7023                           	callstack 0
  7024   0000A5                     getHash@en:
  7025                           	callstack 0
  7026                           
  7027                           ; 2 bytes @ 0x45
  7028   0000A5                     	ds	1
  7029   0000A6                     isConsumedEvent@eventIndex:
  7030                           	callstack 0
  7031   0000A6                     bounceUp@midway:
  7032                           	callstack 0
  7033   0000A6                     sendMessage2@data1:
  7034                           	callstack 0
  7035   0000A6                     sendMessage3@data1:
  7036                           	callstack 0
  7037   0000A6                     sendMessage4@opc:
  7038                           	callstack 0
  7039   0000A6                     sendMessage5@opc:
  7040                           	callstack 0
  7041   0000A6                     sendMessage6@opc:
  7042                           	callstack 0
  7043   0000A6                     sendMessage7@opc:
  7044                           	callstack 0
  7045   0000A6                     _initServos$8083:
  7046                           	callstack 0
  7047                           
  7048                           ; 1 bytes @ 0x46
  7049   0000A6                     	ds	1
  7050   0000A7                     ??_getHash:
  7051   0000A7                     isConsumedEvent@ev:
  7052                           	callstack 0
  7053   0000A7                     bounceUp@io:
  7054                           	callstack 0
  7055   0000A7                     sendMessage2@data2:
  7056                           	callstack 0
  7057   0000A7                     sendMessage3@data2:
  7058                           	callstack 0
  7059   0000A7                     writeNVM@value:
  7060                           	callstack 0
  7061   0000A7                     sendProducedEvent@onOff:
  7062                           	callstack 0
  7063   0000A7                     _initServos$8082:
  7064                           	callstack 0
  7065                           
  7066                           ; 1 bytes @ 0x47
  7067   0000A7                     	ds	1
  7068   0000A8                     initServos@io:
  7069                           	callstack 0
  7070   0000A8                     pbDownTimer@timeout:
  7071                           	callstack 0
  7072   0000A8                     pbUpTimer@timeout:
  7073                           	callstack 0
  7074   0000A8                     sendMessage2@opc:
  7075                           	callstack 0
  7076   0000A8                     sendMessage3@data3:
  7077                           	callstack 0
  7078   0000A8                     writeNVM@type:
  7079                           	callstack 0
  7080   0000A8                     getHash@hash:
  7081                           	callstack 0
  7082                           
  7083                           ; 1 bytes @ 0x48
  7084   0000A8                     	ds	1
  7085   0000A9                     
  7086                           ; 1 bytes @ 0x49
  7087                           
  7088                           	psect	cstackCOMRAM
  7089   000001                     __pcstackCOMRAM:
  7090                           	callstack 0
  7091   000001                     ?i2_getNV:
  7092                           	callstack 0
  7093   000001                     ?i2_getNextWriteMessage:
  7094                           	callstack 0
  7095   000001                     ?i2_pop:
  7096                           	callstack 0
  7097   000001                     ?i2_getBufferPointer:
  7098                           	callstack 0
  7099   000001                     ?i2_tickGet:
  7100                           	callstack 0
  7101   000001                     i2_isEvent$4885:
  7102                           	callstack 0
  7103   000001                     i2getNextWriteMessage@q:
  7104                           	callstack 0
  7105   000001                     i2pop@q:
  7106                           	callstack 0
  7107                           
  7108                           ; 1 bytes @ 0x0
  7109   000001                     	ds	1
  7110   000002                     i2isEvent@opc:
  7111                           	callstack 0
  7112                           
  7113                           ; 1 bytes @ 0x1
  7114   000002                     	ds	1
  7115   000003                     ??i2_getNV:
  7116   000003                     ??i2_getNextWriteMessage:
  7117   000003                     ??i2_pop:
  7118   000003                     i2getBufferPointer@b:
  7119                           	callstack 0
  7120                           
  7121                           ; 1 bytes @ 0x2
  7122   000003                     	ds	1
  7123   000004                     i2getNV@index:
  7124                           	callstack 0
  7125                           
  7126                           ; 1 bytes @ 0x3
  7127   000004                     	ds	1
  7128   000005                     i2setOutputPin@state:
  7129                           	callstack 0
  7130   000005                     i2tickGet@IntFlag2:
  7131                           	callstack 0
  7132                           
  7133                           ; 1 bytes @ 0x4
  7134   000005                     	ds	1
  7135   000006                     ??i2_setOutputPin:
  7136   000006                     i2tickGet@IntFlag1:
  7137                           	callstack 0
  7138                           
  7139                           ; 1 bytes @ 0x5
  7140   000006                     	ds	1
  7141   000007                     i2tickGet@currentTime:
  7142                           	callstack 0
  7143                           
  7144                           ; 4 bytes @ 0x6
  7145   000007                     	ds	1
  7146   000008                     i2setOutputPin@io:
  7147                           	callstack 0
  7148   000008                     i2pop@ret:
  7149                           	callstack 0
  7150                           
  7151                           ; 2 bytes @ 0x7
  7152   000008                     	ds	1
  7153   000009                     
  7154                           ; 1 bytes @ 0x8
  7155   000009                     	ds	3
  7156   00000C                     i2getNextWriteMessage@wr:
  7157                           	callstack 0
  7158                           
  7159                           ; 1 bytes @ 0xB
  7160   00000C                     	ds	1
  7161   00000D                     ??i2_checkTxFifo:
  7162   00000D                     i2canFillRxFifo@m:
  7163                           	callstack 0
  7164                           
  7165                           ; 2 bytes @ 0xC
  7166   00000D                     	ds	2
  7167   00000F                     i2canFillRxFifo@ptr:
  7168                           	callstack 0
  7169                           
  7170                           ; 2 bytes @ 0xE
  7171   00000F                     	ds	3
  7172   000012                     i2checkTxFifo@m:
  7173                           	callstack 0
  7174                           
  7175                           ; 2 bytes @ 0x11
  7176   000012                     	ds	2
  7177   000014                     i2checkTxFifo@mp:
  7178                           	callstack 0
  7179                           
  7180                           ; 2 bytes @ 0x13
  7181   000014                     	ds	2
  7182   000016                     ??i2_checkCANTimeout:
  7183   000016                     
  7184                           ; 1 bytes @ 0x15
  7185   000016                     	ds	4
  7186   00001A                     ??_highIsr:
  7187   00001A                     
  7188                           ; 1 bytes @ 0x19
  7189   00001A                     	ds	4
  7190   00001E                     highIsr@i:
  7191                           	callstack 0
  7192                           
  7193                           ; 1 bytes @ 0x1D
  7194   00001E                     	ds	1
  7195   00001F                     ??_isrHigh:
  7196                           
  7197                           ; 1 bytes @ 0x1E
  7198   00001F                     	ds	12
  7199                           
  7200 ;;
  7201 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  7202 ;;
  7203 ;; *************** function _main *****************
  7204 ;; Defined at:
  7205 ;;		line 1249 in file "../../VLCBlib_PIC/vlcb.c"
  7206 ;; Parameters:    Size  Location     Type
  7207 ;;		None
  7208 ;; Auto vars:     Size  Location     Type
  7209 ;;  i               1    0        unsigned char 
  7210 ;; Return value:  Size  Location     Type
  7211 ;;                  1    wreg      void 
  7212 ;; Registers used:
  7213 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  7214 ;; Tracked objects:
  7215 ;;		On entry : 0/0
  7216 ;;		On exit  : 0/0
  7217 ;;		Unchanged: 0/0
  7218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7223 ;;Total ram usage:        0 bytes
  7224 ;; Hardware stack levels required when called: 29
  7225 ;; This function calls:
  7226 ;;		_checkPowerOnPb
  7227 ;;		_factoryReset
  7228 ;;		_initRomOps
  7229 ;;		_loop
  7230 ;;		_poll
  7231 ;;		_powerUp
  7232 ;;		_readNVM
  7233 ;;		_setup
  7234 ;; This function is called by:
  7235 ;;		Startup code after reset
  7236 ;; This function uses a non-reentrant model
  7237 ;;
  7238                           
  7239                           	psect	text0
  7240   00B9A4                     __ptext0:
  7241                           	callstack 0
  7242   00B9A4                     _main:
  7243                           	callstack 2
  7244                           
  7245                           ;../../VLCBlib_PIC/vlcb.c: 1250:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1256:     OSCT
      +                          UNEbits.PLLEN = 1;
  7246                           
  7247                           ;incstack = 0
  7248   00B9A4  8C9B               	bsf	155,6,c	;volatile
  7249                           
  7250                           ;../../VLCBlib_PIC/vlcb.c: 1271:     RCONbits.IPEN = 1;
  7251   00B9A6  8ED0               	bsf	208,7,c	;volatile
  7252                           
  7253                           ;../../VLCBlib_PIC/vlcb.c: 1293:     initRomOps();
  7254   00B9A8  ECB9  F062         	call	_initRomOps	;wreg free
  7255                           
  7256                           ;../../VLCBlib_PIC/vlcb.c: 1295:     if (readNVM(EEPROM_NVM_TYPE, 0x3FA) != 1) {
  7257   00B9AC  0EFA               	movlw	250
  7258   00B9AE  0100               	movlb	0	; () banked
  7259   00B9B0  6F91               	movwf	readNVM@index& (0+255),b
  7260   00B9B2  0E03               	movlw	3
  7261   00B9B4  6F92               	movwf	(readNVM@index+1)& (0+255),b
  7262   00B9B6  0E00               	movlw	0
  7263   00B9B8  6F93               	movwf	(readNVM@index+2)& (0+255),b
  7264   00B9BA  0E00               	movlw	0
  7265   00B9BC  ECD0  F059         	call	_readNVM
  7266   00B9C0  0100               	movlb	0	; () banked
  7267   00B9C2  0591               	decf	?_readNVM& (0+255),w,b
  7268   00B9C4  1192               	iorwf	(?_readNVM+1)& (0+255),w,b
  7269   00B9C6  A4D8               	btfss	status,2,c
  7270                           
  7271                           ; BSR set to: 0
  7272                           ;../../VLCBlib_PIC/vlcb.c: 1296:         factoryReset();
  7273   00B9C8  ECB1  F042         	call	_factoryReset	;wreg free
  7274                           
  7275                           ;../../VLCBlib_PIC/vlcb.c: 1300:     powerUp();
  7276                           
  7277                           ;../../VLCBlib_PIC/vlcb.c: 1297:     }
  7278   00B9CC  EC78  F044         	call	_powerUp	;wreg free
  7279                           
  7280                           ;../../VLCBlib_PIC/vlcb.c: 1303:     {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
  7281   00B9D0  8EF2               	bsf	242,7,c	;volatile
  7282   00B9D2  8CF2               	bsf	242,6,c	;volatile
  7283                           
  7284                           ;../../VLCBlib_PIC/vlcb.c: 1304:     checkPowerOnPb();
  7285   00B9D4  EC2F  F05A         	call	_checkPowerOnPb	;wreg free
  7286                           
  7287                           ;../../VLCBlib_PIC/vlcb.c: 1307:     {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
  7288   00B9D8  9EF2               	bcf	242,7,c	;volatile
  7289   00B9DA  9CF2               	bcf	242,6,c	;volatile
  7290                           
  7291                           ;../../VLCBlib_PIC/vlcb.c: 1308:     setup();
  7292   00B9DC  EC9F  F04C         	call	_setup	;wreg free
  7293                           
  7294                           ;../../VLCBlib_PIC/vlcb.c: 1311:     {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
  7295   00B9E0  8EF2               	bsf	242,7,c	;volatile
  7296   00B9E2  8CF2               	bsf	242,6,c	;volatile
  7297   00B9E4                     l24993:
  7298                           
  7299                           ;../../VLCBlib_PIC/vlcb.c: 1315:         poll();
  7300   00B9E4  EC86  F01C         	call	_poll	;wreg free
  7301                           
  7302                           ;../../VLCBlib_PIC/vlcb.c: 1316:         loop();
  7303   00B9E8  ECCA  F035         	call	_loop	;wreg free
  7304   00B9EC  D7FB               	goto	l24993
  7305   00B9EE                     __end_of_main:
  7306                           	callstack 0
  7307                           
  7308 ;; *************** function _setup *****************
  7309 ;; Defined at:
  7310 ;;		line 236 in file "../main.c"
  7311 ;; Parameters:    Size  Location     Type
  7312 ;;		None
  7313 ;; Auto vars:     Size  Location     Type
  7314 ;;		None
  7315 ;; Return value:  Size  Location     Type
  7316 ;;                  1    wreg      void 
  7317 ;; Registers used:
  7318 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7319 ;; Tracked objects:
  7320 ;;		On entry : 0/0
  7321 ;;		On exit  : 0/0
  7322 ;;		Unchanged: 0/0
  7323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7328 ;;Total ram usage:        0 bytes
  7329 ;; Hardware stack levels used: 1
  7330 ;; Hardware stack levels required when called: 19
  7331 ;; This function calls:
  7332 ;;		_configIO
  7333 ;;		_getNV
  7334 ;;		_initInputScan
  7335 ;;		_initOutputs
  7336 ;;		_initServos
  7337 ;;		_setTimedResponseDelay
  7338 ;;		_tickGet
  7339 ;;		_universalEventsInit
  7340 ;; This function is called by:
  7341 ;;		_main
  7342 ;; This function uses a non-reentrant model
  7343 ;;
  7344                           
  7345                           	psect	text1
  7346   00993E                     __ptext1:
  7347                           	callstack 0
  7348   00993E                     _setup:
  7349                           	callstack 11
  7350                           
  7351                           ;../main.c: 241:     transport = &canTransport;
  7352                           
  7353                           ;incstack = 0
  7354   00993E  0E7A               	movlw	low _canTransport
  7355   009940  0101               	movlb	1	; () banked
  7356   009942  6F62               	movwf	_transport& (0+255),b
  7357   009944  0EEF               	movlw	high _canTransport
  7358   009946  6F63               	movwf	(_transport+1)& (0+255),b
  7359                           
  7360                           ; BSR set to: 1
  7361                           ;../main.c: 248:     INTCON2bits.RBPU = 0;
  7362   009948  9EF1               	bcf	241,7,c	;volatile
  7363                           
  7364                           ; BSR set to: 1
  7365                           ;../main.c: 250:     WPUB = (uint8_t)getNV(4);
  7366   00994A  0E04               	movlw	4
  7367   00994C  EC52  F05E         	call	_getNV
  7368   009950  0100               	movlb	0	; () banked
  7369   009952  518D               	movf	?_getNV& (0+255),w,b
  7370   009954  010F               	movlb	15	; () banked
  7371   009956  6F5B               	movwf	91,b	;volatile
  7372                           
  7373                           ; BSR set to: 15
  7374                           ;../main.c: 304:     setTimedResponseDelay((uint8_t)getNV(5));
  7375   009958  0E05               	movlw	5
  7376   00995A  EC52  F05E         	call	_getNV
  7377   00995E  0100               	movlb	0	; () banked
  7378   009960  518D               	movf	?_getNV& (0+255),w,b
  7379   009962  EC09  F063         	call	_setTimedResponseDelay
  7380                           
  7381                           ;../main.c: 305:     universalEventsInit();
  7382   009966  ECCD  F062         	call	_universalEventsInit	;wreg free
  7383                           
  7384                           ;../main.c: 312:     ANCON0 = 0x00;
  7385   00996A  0E00               	movlw	0
  7386   00996C  010F               	movlb	15	; () banked
  7387   00996E  6F5D               	movwf	93,b	;volatile
  7388                           
  7389                           ; BSR set to: 15
  7390                           ;../main.c: 313:     ANCON1 = 0x00;
  7391   009970  0E00               	movlw	0
  7392   009972  6F5C               	movwf	92,b	;volatile
  7393                           
  7394                           ; BSR set to: 15
  7395                           ;../main.c: 326:     initServos();
  7396   009974  ECFF  F03D         	call	_initServos	;wreg free
  7397                           
  7398                           ;../main.c: 328:     initOutputs();
  7399   009978  EC6D  F060         	call	_initOutputs	;wreg free
  7400                           
  7401                           ;../main.c: 331:     for (io=0; io< 16; io++) {
  7402   00997C  0E00               	movlw	0
  7403   00997E  0100               	movlb	0	; () banked
  7404   009980  6FCF               	movwf	_io& (0+255),b
  7405   009982                     l24741:
  7406                           
  7407                           ; BSR set to: 0
  7408   009982  0E0F               	movlw	15
  7409   009984  65CF               	cpfsgt	_io& (0+255),b
  7410   009986  D001               	goto	l24745
  7411   009988  D006               	goto	l24751
  7412   00998A                     l24745:
  7413                           
  7414                           ; BSR set to: 0
  7415                           ;../main.c: 332:         configIO(io);
  7416   00998A  51CF               	movf	_io& (0+255),w,b
  7417   00998C  EC52  F026         	call	_configIO
  7418                           
  7419                           ;../main.c: 333:     }
  7420   009990  0100               	movlb	0	; () banked
  7421   009992  2BCF               	incf	_io& (0+255),f,b
  7422   009994  D7F6               	goto	l24741
  7423   009996                     l24751:
  7424                           
  7425                           ; BSR set to: 0
  7426                           ;../main.c: 334:     initInputScan();
  7427   009996  ECF4  F04C         	call	_initInputScan	;wreg free
  7428                           
  7429                           ;../main.c: 340:     (INTCONbits.GIE = 1);
  7430   00999A  8EF2               	bsf	242,7,c	;volatile
  7431                           
  7432                           ;../main.c: 342:     startTime.val = tickGet();
  7433   00999C  ECE4  F05A         	call	_tickGet	;wreg free
  7434   0099A0  C08D  F03B         	movff	?_tickGet,_startTime
  7435   0099A4  C08E  F03C         	movff	?_tickGet+1,_startTime+1
  7436   0099A8  C08F  F03D         	movff	?_tickGet+2,_startTime+2
  7437   0099AC  C090  F03E         	movff	?_tickGet+3,_startTime+3
  7438                           
  7439                           ;../main.c: 343:     lastServoStartTime.val = startTime.val;
  7440   0099B0  C03B  F15C         	movff	_startTime,_lastServoStartTime
  7441   0099B4  C03C  F15D         	movff	_startTime+1,_lastServoStartTime+1
  7442   0099B8  C03D  F15E         	movff	_startTime+2,_lastServoStartTime+2
  7443   0099BC  C03E  F15F         	movff	_startTime+3,_lastServoStartTime+3
  7444                           
  7445                           ;../main.c: 344:     lastInputScanTime.val = startTime.val;
  7446   0099C0  C03B  F158         	movff	_startTime,_lastInputScanTime
  7447   0099C4  C03C  F159         	movff	_startTime+1,_lastInputScanTime+1
  7448   0099C8  C03D  F15A         	movff	_startTime+2,_lastInputScanTime+2
  7449   0099CC  C03E  F15B         	movff	_startTime+3,_lastInputScanTime+3
  7450                           
  7451                           ;../main.c: 345:     lastActionPollTime.val = startTime.val;
  7452   0099D0  C03B  F154         	movff	_startTime,_lastActionPollTime
  7453   0099D4  C03C  F155         	movff	_startTime+1,_lastActionPollTime+1
  7454   0099D8  C03D  F156         	movff	_startTime+2,_lastActionPollTime+2
  7455   0099DC  C03E  F157         	movff	_startTime+3,_lastActionPollTime+3
  7456                           
  7457                           ;../main.c: 350:     started = FALSE;
  7458   0099E0  0E00               	movlw	0
  7459   0099E2  0100               	movlb	0	; () banked
  7460   0099E4  6FD0               	movwf	_started& (0+255),b
  7461                           
  7462                           ; BSR set to: 0
  7463   0099E6  0012               	return		;funcret
  7464   0099E8                     __end_of_setup:
  7465                           	callstack 0
  7466                           
  7467 ;; *************** function _universalEventsInit *****************
  7468 ;; Defined at:
  7469 ;;		line 93 in file "../universalEvents.c"
  7470 ;; Parameters:    Size  Location     Type
  7471 ;;		None
  7472 ;; Auto vars:     Size  Location     Type
  7473 ;;		None
  7474 ;; Return value:  Size  Location     Type
  7475 ;;                  1    wreg      void 
  7476 ;; Registers used:
  7477 ;;		wreg, status,2
  7478 ;; Tracked objects:
  7479 ;;		On entry : 0/0
  7480 ;;		On exit  : 0/0
  7481 ;;		Unchanged: 0/0
  7482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7487 ;;Total ram usage:        0 bytes
  7488 ;; Hardware stack levels used: 1
  7489 ;; Hardware stack levels required when called: 12
  7490 ;; This function calls:
  7491 ;;		Nothing
  7492 ;; This function is called by:
  7493 ;;		_setup
  7494 ;; This function uses a non-reentrant model
  7495 ;;
  7496                           
  7497                           	psect	text2
  7498   00C59A                     __ptext2:
  7499                           	callstack 0
  7500   00C59A                     _universalEventsInit:
  7501                           	callstack 17
  7502                           
  7503                           ;../universalEvents.c: 94:     startWait.val = 0;
  7504                           
  7505                           ; BSR set to: 0
  7506                           ;incstack = 0
  7507   00C59A  0E00               	movlw	0
  7508   00C59C  6E37               	movwf	_startWait^0,c
  7509   00C59E  0E00               	movlw	0
  7510   00C5A0  6E38               	movwf	(_startWait+1)^0,c
  7511   00C5A2  0E00               	movlw	0
  7512   00C5A4  6E39               	movwf	(_startWait+2)^0,c
  7513   00C5A6  0E00               	movlw	0
  7514   00C5A8  6E3A               	movwf	(_startWait+3)^0,c
  7515   00C5AA  0012               	return		;funcret
  7516   00C5AC                     __end_of_universalEventsInit:
  7517                           	callstack 0
  7518                           
  7519 ;; *************** function _initServos *****************
  7520 ;; Defined at:
  7521 ;;		line 123 in file "../servo.c"
  7522 ;; Parameters:    Size  Location     Type
  7523 ;;		None
  7524 ;; Auto vars:     Size  Location     Type
  7525 ;;  io              1   72[BANK0 ] unsigned char 
  7526 ;; Return value:  Size  Location     Type
  7527 ;;                  1    wreg      void 
  7528 ;; Registers used:
  7529 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7530 ;; Tracked objects:
  7531 ;;		On entry : 0/0
  7532 ;;		On exit  : 0/0
  7533 ;;		Unchanged: 0/0
  7534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7536 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7537 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7538 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7539 ;;Total ram usage:        5 bytes
  7540 ;; Hardware stack levels used: 1
  7541 ;; Hardware stack levels required when called: 15
  7542 ;; This function calls:
  7543 ;;		_getNV
  7544 ;;		_readNVM
  7545 ;;		_setOutputPosition
  7546 ;;		_tickGet
  7547 ;; This function is called by:
  7548 ;;		_setup
  7549 ;; This function uses a non-reentrant model
  7550 ;;
  7551                           
  7552                           	psect	text3
  7553   007BFE                     __ptext3:
  7554                           	callstack 0
  7555   007BFE                     _initServos:
  7556                           	callstack 14
  7557                           
  7558                           ;incstack = 0
  7559   007BFE  0E00               	movlw	0
  7560   007C00  0100               	movlb	0	; () banked
  7561   007C02  6FA8               	movwf	initServos@io& (0+255),b
  7562   007C04                     l22703:
  7563                           
  7564                           ; BSR set to: 0
  7565   007C04  51A8               	movf	initServos@io& (0+255),w,b
  7566   007C06  0D07               	mullw	7
  7567   007C08  50F3               	movf	243,w,c
  7568   007C0A  0F11               	addlw	17
  7569   007C0C  EC52  F05E         	call	_getNV
  7570   007C10  0100               	movlb	0	; () banked
  7571   007C12  A58D               	btfss	?_getNV& (0+255),2,b
  7572   007C14  D009               	goto	l22707
  7573                           
  7574                           ; BSR set to: 0
  7575   007C16  0E10               	movlw	low _servoState
  7576   007C18  25A8               	addwf	initServos@io& (0+255),w,b
  7577   007C1A  6ED9               	movwf	fsr2l,c
  7578   007C1C  6ADA               	clrf	fsr2h,c
  7579   007C1E  0E01               	movlw	high _servoState
  7580   007C20  22DA               	addwfc	fsr2h,f,c
  7581   007C22  0E01               	movlw	1
  7582   007C24  6EDF               	movwf	indf2,c
  7583   007C26  D007               	goto	l22709
  7584   007C28                     l22707:
  7585                           
  7586                           ; BSR set to: 0
  7587   007C28  0E10               	movlw	low _servoState
  7588   007C2A  25A8               	addwf	initServos@io& (0+255),w,b
  7589   007C2C  6ED9               	movwf	fsr2l,c
  7590   007C2E  6ADA               	clrf	fsr2h,c
  7591   007C30  0E01               	movlw	high _servoState
  7592   007C32  22DA               	addwfc	fsr2h,f,c
  7593   007C34  6ADF               	clrf	indf2,c
  7594   007C36                     l22709:
  7595                           
  7596                           ; BSR set to: 0
  7597   007C36  ECE4  F05A         	call	_tickGet	;wreg free
  7598   007C3A  0100               	movlb	0	; () banked
  7599   007C3C  51A8               	movf	initServos@io& (0+255),w,b
  7600   007C3E  0D04               	mullw	4
  7601   007C40  0E88               	movlw	low _ticksWhenStopped
  7602   007C42  24F3               	addwf	243,w,c
  7603   007C44  6ED9               	movwf	fsr2l,c
  7604   007C46  0E03               	movlw	high _ticksWhenStopped
  7605   007C48  20F4               	addwfc	prodh,w,c
  7606   007C4A  6EDA               	movwf	fsr2h,c
  7607   007C4C  C08D  FFDE         	movff	?_tickGet,postinc2
  7608   007C50  C08E  FFDE         	movff	?_tickGet+1,postinc2
  7609   007C54  C08F  FFDE         	movff	?_tickGet+2,postinc2
  7610   007C58  C090  FFDE         	movff	?_tickGet+3,postinc2
  7611                           
  7612                           ; BSR set to: 0
  7613   007C5C  51A8               	movf	initServos@io& (0+255),w,b
  7614   007C5E  0D07               	mullw	7
  7615   007C60  50F3               	movf	243,w,c
  7616   007C62  0F11               	addlw	17
  7617   007C64  EC52  F05E         	call	_getNV
  7618   007C68  0100               	movlb	0	; () banked
  7619   007C6A  A58D               	btfss	?_getNV& (0+255),2,b
  7620   007C6C  D020               	goto	l22717
  7621                           
  7622                           ; BSR set to: 0
  7623   007C6E  51A8               	movf	initServos@io& (0+255),w,b
  7624   007C70  0D07               	mullw	7
  7625   007C72  50F3               	movf	243,w,c
  7626   007C74  0F10               	addlw	16
  7627   007C76  EC52  F05E         	call	_getNV
  7628   007C7A  0100               	movlb	0	; () banked
  7629   007C7C  518D               	movf	?_getNV& (0+255),w,b
  7630   007C7E  6FA7               	movwf	_initServos$8082& (0+255),b
  7631                           
  7632                           ; BSR set to: 0
  7633   007C80  0EDE               	movlw	222
  7634   007C82  25A8               	addwf	initServos@io& (0+255),w,b
  7635   007C84  6FA4               	movwf	??_initServos& (0+255),b
  7636   007C86  6BA5               	clrf	(??_initServos+1)& (0+255),b
  7637   007C88  0E03               	movlw	3
  7638   007C8A  23A5               	addwfc	(??_initServos+1)& (0+255),f,b
  7639   007C8C  C0A4  F091         	movff	??_initServos,readNVM@index
  7640   007C90  C0A5  F092         	movff	??_initServos+1,readNVM@index+1
  7641   007C94  6B93               	clrf	(readNVM@index+2)& (0+255),b
  7642   007C96  0E00               	movlw	0
  7643   007C98  ECD0  F059         	call	_readNVM
  7644   007C9C  0100               	movlb	0	; () banked
  7645   007C9E  5191               	movf	?_readNVM& (0+255),w,b
  7646   007CA0  6FA1               	movwf	setOutputPosition@pos& (0+255),b
  7647   007CA2  C0A7  F0A2         	movff	_initServos$8082,setOutputPosition@type
  7648   007CA6  51A8               	movf	initServos@io& (0+255),w,b
  7649   007CA8  EC4D  F056         	call	_setOutputPosition
  7650   007CAC  D019               	goto	l22721
  7651   007CAE                     l22717:
  7652                           
  7653                           ; BSR set to: 0
  7654   007CAE  51A8               	movf	initServos@io& (0+255),w,b
  7655   007CB0  0D07               	mullw	7
  7656   007CB2  50F3               	movf	243,w,c
  7657   007CB4  0F12               	addlw	18
  7658   007CB6  EC52  F05E         	call	_getNV
  7659   007CBA  0100               	movlb	0	; () banked
  7660   007CBC  518D               	movf	?_getNV& (0+255),w,b
  7661   007CBE  6FA7               	movwf	_initServos$8082& (0+255),b
  7662   007CC0  51A8               	movf	initServos@io& (0+255),w,b
  7663   007CC2  0D07               	mullw	7
  7664   007CC4  50F3               	movf	243,w,c
  7665   007CC6  0F10               	addlw	16
  7666   007CC8  EC52  F05E         	call	_getNV
  7667   007CCC  0100               	movlb	0	; () banked
  7668   007CCE  518D               	movf	?_getNV& (0+255),w,b
  7669   007CD0  6FA6               	movwf	_initServos$8083& (0+255),b
  7670                           
  7671                           ; BSR set to: 0
  7672   007CD2  C0A7  F0A1         	movff	_initServos$8082,setOutputPosition@pos
  7673   007CD6  C0A6  F0A2         	movff	_initServos$8083,setOutputPosition@type
  7674   007CDA  51A8               	movf	initServos@io& (0+255),w,b
  7675   007CDC  EC4D  F056         	call	_setOutputPosition
  7676   007CE0                     l22721:
  7677   007CE0  0E00               	movlw	low _stepsPerPollSpeed
  7678   007CE2  0100               	movlb	0	; () banked
  7679   007CE4  25A8               	addwf	initServos@io& (0+255),w,b
  7680   007CE6  6ED9               	movwf	fsr2l,c
  7681   007CE8  6ADA               	clrf	fsr2h,c
  7682   007CEA  0E01               	movlw	high _stepsPerPollSpeed
  7683   007CEC  22DA               	addwfc	fsr2h,f,c
  7684   007CEE  6ADF               	clrf	indf2,c
  7685                           
  7686                           ; BSR set to: 0
  7687   007CF0  2BA8               	incf	initServos@io& (0+255),f,b
  7688                           
  7689                           ; BSR set to: 0
  7690   007CF2  0E0F               	movlw	15
  7691   007CF4  65A8               	cpfsgt	initServos@io& (0+255),b
  7692   007CF6  D786               	goto	l22703
  7693                           
  7694                           ; BSR set to: 0
  7695   007CF8  9EAA               	bcf	170,7,c	;volatile
  7696                           
  7697                           ; BSR set to: 0
  7698   007CFA  0E3F               	movlw	-193
  7699   007CFC  16CD               	andwf	205,f,c	;volatile
  7700   007CFE  50CD               	movf	205,w,c	;volatile
  7701   007D00  0BCF               	andlw	-49
  7702   007D02  0920               	iorlw	32
  7703   007D04  6ECD               	movwf	205,c	;volatile
  7704                           
  7705                           ; BSR set to: 0
  7706   007D06  86CD               	bsf	205,3,c	;volatile
  7707                           
  7708                           ; BSR set to: 0
  7709   007D08  82CD               	bsf	205,1,c	;volatile
  7710                           
  7711                           ; BSR set to: 0
  7712   007D0A  809D               	bsf	157,0,c	;volatile
  7713                           
  7714                           ; BSR set to: 0
  7715   007D0C  9EB0               	bcf	176,7,c	;volatile
  7716   007D0E  0E3F               	movlw	-193
  7717   007D10  16B1               	andwf	177,f,c	;volatile
  7718   007D12  50B1               	movf	177,w,c	;volatile
  7719   007D14  0BCF               	andlw	-49
  7720   007D16  0920               	iorlw	32
  7721   007D18  6EB1               	movwf	177,c	;volatile
  7722                           
  7723                           ; BSR set to: 0
  7724   007D1A  86B1               	bsf	177,3,c	;volatile
  7725                           
  7726                           ; BSR set to: 0
  7727   007D1C  82B1               	bsf	177,1,c	;volatile
  7728                           
  7729                           ; BSR set to: 0
  7730   007D1E  82A0               	bsf	160,1,c	;volatile
  7731                           
  7732                           ; BSR set to: 0
  7733                           ;../servo.c: 175:     servoInBlock = io -1;
  7734   007D20  05A8               	decf	initServos@io& (0+255),w,b
  7735   007D22  6FC9               	movwf	_servoInBlock& (0+255),b
  7736                           
  7737                           ; BSR set to: 0
  7738   007D24  0012               	return		;funcret
  7739   007D26                     __end_of_initServos:
  7740                           	callstack 0
  7741                           
  7742 ;; *************** function _setOutputPosition *****************
  7743 ;; Defined at:
  7744 ;;		line 148 in file "../outputs.c"
  7745 ;; Parameters:    Size  Location     Type
  7746 ;;  io              1    wreg     unsigned char 
  7747 ;;  pos             1   65[BANK0 ] unsigned char 
  7748 ;;  type            1   66[BANK0 ] unsigned char 
  7749 ;; Auto vars:     Size  Location     Type
  7750 ;;  io              1   67[BANK0 ] unsigned char 
  7751 ;; Return value:  Size  Location     Type
  7752 ;;                  1    wreg      void 
  7753 ;; Registers used:
  7754 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7755 ;; Tracked objects:
  7756 ;;		On entry : 0/0
  7757 ;;		On exit  : 0/0
  7758 ;;		Unchanged: 0/0
  7759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7760 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7761 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7763 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7764 ;;Total ram usage:        3 bytes
  7765 ;; Hardware stack levels used: 1
  7766 ;; Hardware stack levels required when called: 14
  7767 ;; This function calls:
  7768 ;;		_getNV
  7769 ;;		_setDigitalOutput
  7770 ;;		_setOutputPin
  7771 ;;		_setServoPosition
  7772 ;; This function is called by:
  7773 ;;		_initServos
  7774 ;; This function uses a non-reentrant model
  7775 ;;
  7776                           
  7777                           	psect	text4
  7778   00AC9A                     __ptext4:
  7779                           	callstack 0
  7780   00AC9A                     _setOutputPosition:
  7781                           	callstack 14
  7782                           
  7783                           ; BSR set to: 0
  7784                           ;incstack = 0
  7785                           ;setOutputPosition@io stored from wreg
  7786   00AC9A  0100               	movlb	0	; () banked
  7787   00AC9C  6FA3               	movwf	setOutputPosition@io& (0+255),b
  7788                           
  7789                           ;../outputs.c: 149:     switch(type) {
  7790   00AC9E  D020               	goto	l21633
  7791   00ACA0                     l21621:
  7792                           
  7793                           ; BSR set to: 0
  7794                           ;../outputs.c: 156:             setDigitalOutput(io, pos);
  7795   00ACA0  C0A1  F097         	movff	setOutputPosition@pos,setDigitalOutput@state
  7796   00ACA4  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7797   00ACA6  EC4A  F052         	call	_setDigitalOutput
  7798   00ACAA  0012               	return	
  7799   00ACAC                     l21625:
  7800                           
  7801                           ; BSR set to: 0
  7802                           ;../outputs.c: 166:             setServoPosition(io, pos);
  7803   00ACAC  C0A1  F09F         	movff	setOutputPosition@pos,setServoPosition@pos
  7804   00ACB0  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7805   00ACB2  EC77  F061         	call	_setServoPosition
  7806                           
  7807                           ;../outputs.c: 167:             setOutputPin(io, getNV((16 + 7*(io) + 1) & 0x20)?TRUE:FA
      +                          LSE);
  7808   00ACB6  0100               	movlb	0	; () banked
  7809   00ACB8  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7810   00ACBA  0D07               	mullw	7
  7811   00ACBC  50F3               	movf	243,w,c
  7812   00ACBE  0F11               	addlw	17
  7813   00ACC0  0B20               	andlw	32
  7814   00ACC2  EC52  F05E         	call	_getNV
  7815   00ACC6  0100               	movlb	0	; () banked
  7816   00ACC8  518D               	movf	?_getNV& (0+255),w,b
  7817   00ACCA  118E               	iorwf	(?_getNV+1)& (0+255),w,b
  7818   00ACCC  B4D8               	btfsc	status,2,c
  7819   00ACCE  D002               	goto	u22180
  7820   00ACD0  0E01               	movlw	1
  7821   00ACD2  D001               	goto	u22190
  7822   00ACD4                     u22180:
  7823   00ACD4  0E00               	movlw	0
  7824   00ACD6                     u22190:
  7825   00ACD6  6F91               	movwf	setOutputPin@state& (0+255),b
  7826   00ACD8  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7827   00ACDA  ECAB  F036         	call	_setOutputPin
  7828   00ACDE  0012               	return	
  7829   00ACE0                     l21633:
  7830   00ACE0  0100               	movlb	0	; () banked
  7831   00ACE2  51A2               	movf	setOutputPosition@type& (0+255),w,b
  7832                           
  7833                           ; Switch size 1, requested type "simple"
  7834                           ; Number of cases is 7, Range of values is 0 to 6
  7835                           ; switch strategies available:
  7836                           ; Name         Instructions Cycles
  7837                           ; simple_byte           22    12 (average)
  7838                           ;	Chosen strategy is simple_byte
  7839   00ACE4  0A00               	xorlw	0	; case 0
  7840   00ACE6  B4D8               	btfsc	status,2,c
  7841   00ACE8  0012               	return	
  7842   00ACEA  0A01               	xorlw	1	; case 1
  7843   00ACEC  B4D8               	btfsc	status,2,c
  7844   00ACEE  D7D8               	goto	l21621
  7845   00ACF0  0A03               	xorlw	3	; case 2
  7846   00ACF2  B4D8               	btfsc	status,2,c
  7847   00ACF4  D7DB               	goto	l21625
  7848   00ACF6  0A01               	xorlw	1	; case 3
  7849   00ACF8  B4D8               	btfsc	status,2,c
  7850   00ACFA  D7D8               	goto	l21625
  7851   00ACFC  0A07               	xorlw	7	; case 4
  7852   00ACFE  B4D8               	btfsc	status,2,c
  7853   00AD00  D7D5               	goto	l21625
  7854   00AD02  0A01               	xorlw	1	; case 5
  7855   00AD04  B4D8               	btfsc	status,2,c
  7856   00AD06  0012               	return	
  7857   00AD08  0A03               	xorlw	3	; case 6
  7858   00AD0A  0012               	return	
  7859   00AD0C                     __end_of_setOutputPosition:
  7860                           	callstack 0
  7861                           
  7862 ;; *************** function _initOutputs *****************
  7863 ;; Defined at:
  7864 ;;		line 86 in file "../digitalOut.c"
  7865 ;; Parameters:    Size  Location     Type
  7866 ;;		None
  7867 ;; Auto vars:     Size  Location     Type
  7868 ;;  io              1   45[BANK0 ] unsigned char 
  7869 ;; Return value:  Size  Location     Type
  7870 ;;                  1    wreg      void 
  7871 ;; Registers used:
  7872 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7873 ;; Tracked objects:
  7874 ;;		On entry : 0/0
  7875 ;;		On exit  : 0/0
  7876 ;;		Unchanged: 0/0
  7877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7879 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7881 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7882 ;;Total ram usage:        1 bytes
  7883 ;; Hardware stack levels used: 1
  7884 ;; Hardware stack levels required when called: 12
  7885 ;; This function calls:
  7886 ;;		Nothing
  7887 ;; This function is called by:
  7888 ;;		_setup
  7889 ;; This function uses a non-reentrant model
  7890 ;;
  7891                           
  7892                           	psect	text5
  7893   00C0DA                     __ptext5:
  7894                           	callstack 0
  7895   00C0DA                     _initOutputs:
  7896                           	callstack 17
  7897                           
  7898                           ;../digitalOut.c: 88:     uint8_t io;;../digitalOut.c: 89:     for (io=0; io<16; io++) {
  7899                           
  7900                           ;incstack = 0
  7901   00C0DA  0E00               	movlw	0
  7902   00C0DC  0100               	movlb	0	; () banked
  7903   00C0DE  6F8D               	movwf	initOutputs@io& (0+255),b
  7904   00C0E0                     l15645:
  7905                           
  7906                           ; BSR set to: 0
  7907                           ;../digitalOut.c: 90:        pulseDelays[io] = 0;
  7908   00C0E0  0EA4               	movlw	low _pulseDelays
  7909   00C0E2  258D               	addwf	initOutputs@io& (0+255),w,b
  7910   00C0E4  6ED9               	movwf	fsr2l,c
  7911   00C0E6  6ADA               	clrf	fsr2h,c
  7912   00C0E8  0E02               	movlw	high _pulseDelays
  7913   00C0EA  22DA               	addwfc	fsr2h,f,c
  7914   00C0EC  6ADF               	clrf	indf2,c
  7915                           
  7916                           ;../digitalOut.c: 91:        flashDelays[io] = 0;
  7917   00C0EE  0E30               	movlw	low _flashDelays
  7918   00C0F0  258D               	addwf	initOutputs@io& (0+255),w,b
  7919   00C0F2  6ED9               	movwf	fsr2l,c
  7920   00C0F4  6ADA               	clrf	fsr2h,c
  7921   00C0F6  0E01               	movlw	high _flashDelays
  7922   00C0F8  22DA               	addwfc	fsr2h,f,c
  7923   00C0FA  6ADF               	clrf	indf2,c
  7924                           
  7925                           ; BSR set to: 0
  7926                           ;../digitalOut.c: 92:     }
  7927   00C0FC  2B8D               	incf	initOutputs@io& (0+255),f,b
  7928                           
  7929                           ; BSR set to: 0
  7930   00C0FE  0E0F               	movlw	15
  7931   00C100  658D               	cpfsgt	initOutputs@io& (0+255),b
  7932   00C102  D7EE               	goto	l15645
  7933   00C104  0012               	return	
  7934   00C106                     __end_of_initOutputs:
  7935                           	callstack 0
  7936                           
  7937 ;; *************** function _initInputScan *****************
  7938 ;; Defined at:
  7939 ;;		line 76 in file "../inputs.c"
  7940 ;; Parameters:    Size  Location     Type
  7941 ;;		None
  7942 ;; Auto vars:     Size  Location     Type
  7943 ;;  input           1   57[BANK0 ] unsigned char 
  7944 ;; Return value:  Size  Location     Type
  7945 ;;                  1    wreg      void 
  7946 ;; Registers used:
  7947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7948 ;; Tracked objects:
  7949 ;;		On entry : 0/0
  7950 ;;		On exit  : 0/0
  7951 ;;		Unchanged: 0/0
  7952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7954 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7955 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7956 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7957 ;;Total ram usage:        3 bytes
  7958 ;; Hardware stack levels used: 1
  7959 ;; Hardware stack levels required when called: 14
  7960 ;; This function calls:
  7961 ;;		_getNV
  7962 ;;		_readInput
  7963 ;;		_readNVM
  7964 ;; This function is called by:
  7965 ;;		_setup
  7966 ;; This function uses a non-reentrant model
  7967 ;;
  7968                           
  7969                           	psect	text6
  7970   0099E8                     __ptext6:
  7971                           	callstack 0
  7972   0099E8                     _initInputScan:
  7973                           	callstack 15
  7974                           
  7975                           ;../inputs.c: 77:     for (io=0; io<16; io++) {
  7976                           
  7977                           ; BSR set to: 0
  7978                           ;incstack = 0
  7979   0099E8  0E00               	movlw	0
  7980   0099EA  0100               	movlb	0	; () banked
  7981   0099EC  6FCE               	movwf	_io@inputs$F849& (0+255),b
  7982   0099EE                     l22747:
  7983                           
  7984                           ; BSR set to: 0
  7985   0099EE  0E0F               	movlw	15
  7986   0099F0  65CE               	cpfsgt	_io@inputs$F849& (0+255),b
  7987   0099F2  D001               	goto	l22751
  7988   0099F4  0012               	return	
  7989   0099F6                     l22751:
  7990                           
  7991                           ; BSR set to: 0
  7992                           ;../inputs.c: 78:         uint8_t input = readInput(io);
  7993   0099F6  51CE               	movf	_io@inputs$F849& (0+255),w,b
  7994   0099F8  ECB0  F03F         	call	_readInput
  7995   0099FC  0100               	movlb	0	; () banked
  7996   0099FE  6F99               	movwf	initInputScan@input& (0+255),b
  7997                           
  7998                           ; BSR set to: 0
  7999                           ;../inputs.c: 79:         inputState[io] = input;
  8000   009A00  0E94               	movlw	low _inputState
  8001   009A02  25CE               	addwf	_io@inputs$F849& (0+255),w,b
  8002   009A04  6ED9               	movwf	fsr2l,c
  8003   009A06  6ADA               	clrf	fsr2h,c
  8004   009A08  0E02               	movlw	high _inputState
  8005   009A0A  22DA               	addwfc	fsr2h,f,c
  8006   009A0C  C099  FFDF         	movff	initInputScan@input,indf2
  8007                           
  8008                           ; BSR set to: 0
  8009                           ;../inputs.c: 80:         if (!(getNV((16 + 7*(io) + 1)) & 0x01)) {
  8010   009A10  51CE               	movf	_io@inputs$F849& (0+255),w,b
  8011   009A12  0D07               	mullw	7
  8012   009A14  50F3               	movf	243,w,c
  8013   009A16  0F11               	addlw	17
  8014   009A18  EC52  F05E         	call	_getNV
  8015   009A1C  0100               	movlb	0	; () banked
  8016   009A1E  B18D               	btfsc	?_getNV& (0+255),0,b
  8017   009A20  D007               	goto	l22759
  8018                           
  8019                           ; BSR set to: 0
  8020                           ;../inputs.c: 81:             input = !input;
  8021   009A22  5199               	movf	initInputScan@input& (0+255),w,b
  8022   009A24  A4D8               	btfss	status,2,c
  8023   009A26  D002               	goto	u23830
  8024   009A28  0E01               	movlw	1
  8025   009A2A  D001               	goto	u23840
  8026   009A2C                     u23830:
  8027   009A2C  0E00               	movlw	0
  8028   009A2E                     u23840:
  8029   009A2E  6F99               	movwf	initInputScan@input& (0+255),b
  8030   009A30                     l22759:
  8031                           
  8032                           ; BSR set to: 0
  8033                           ;../inputs.c: 83:         outputState[io] = input;
  8034   009A30  0EB4               	movlw	low _outputState
  8035   009A32  25CE               	addwf	_io@inputs$F849& (0+255),w,b
  8036   009A34  6ED9               	movwf	fsr2l,c
  8037   009A36  6ADA               	clrf	fsr2h,c
  8038   009A38  0E02               	movlw	high _outputState
  8039   009A3A  22DA               	addwfc	fsr2h,f,c
  8040   009A3C  C099  FFDF         	movff	initInputScan@input,indf2
  8041                           
  8042                           ; BSR set to: 0
  8043                           ;../inputs.c: 84:         if (getNV((16 + 7*(io) + 1)) & 0x10) {
  8044   009A40  51CE               	movf	_io@inputs$F849& (0+255),w,b
  8045   009A42  0D07               	mullw	7
  8046   009A44  50F3               	movf	243,w,c
  8047   009A46  0F11               	addlw	17
  8048   009A48  EC52  F05E         	call	_getNV
  8049   009A4C  0100               	movlb	0	; () banked
  8050   009A4E  A98D               	btfss	?_getNV& (0+255),4,b
  8051   009A50  D017               	goto	l22765
  8052                           
  8053                           ; BSR set to: 0
  8054                           ;../inputs.c: 85:             outputState[io] = (uint8_t)readNVM(EEPROM_NVM_TYPE, ((eepr
      +                          om_address_t)((0x3FF -8))-25)+io);
  8055   009A52  0EDE               	movlw	222
  8056   009A54  25CE               	addwf	_io@inputs$F849& (0+255),w,b
  8057   009A56  6F97               	movwf	??_initInputScan& (0+255),b
  8058   009A58  6B98               	clrf	(??_initInputScan+1)& (0+255),b
  8059   009A5A  0E03               	movlw	3
  8060   009A5C  2398               	addwfc	(??_initInputScan+1)& (0+255),f,b
  8061   009A5E  C097  F091         	movff	??_initInputScan,readNVM@index
  8062   009A62  C098  F092         	movff	??_initInputScan+1,readNVM@index+1
  8063   009A66  6B93               	clrf	(readNVM@index+2)& (0+255),b
  8064   009A68  0E00               	movlw	0
  8065   009A6A  ECD0  F059         	call	_readNVM
  8066   009A6E  0EB4               	movlw	low _outputState
  8067   009A70  0100               	movlb	0	; () banked
  8068   009A72  25CE               	addwf	_io@inputs$F849& (0+255),w,b
  8069   009A74  6ED9               	movwf	fsr2l,c
  8070   009A76  6ADA               	clrf	fsr2h,c
  8071   009A78  0E02               	movlw	high _outputState
  8072   009A7A  22DA               	addwfc	fsr2h,f,c
  8073   009A7C  C091  FFDF         	movff	?_readNVM,indf2
  8074   009A80                     l22765:
  8075                           
  8076                           ; BSR set to: 0
  8077                           ;../inputs.c: 87:         delayCount[io] = 0;
  8078   009A80  0E84               	movlw	low _delayCount
  8079   009A82  25CE               	addwf	_io@inputs$F849& (0+255),w,b
  8080   009A84  6ED9               	movwf	fsr2l,c
  8081   009A86  6ADA               	clrf	fsr2h,c
  8082   009A88  0E02               	movlw	high _delayCount
  8083   009A8A  22DA               	addwfc	fsr2h,f,c
  8084   009A8C  6ADF               	clrf	indf2,c
  8085                           
  8086                           ; BSR set to: 0
  8087                           ;../inputs.c: 88:     }
  8088   009A8E  2BCE               	incf	_io@inputs$F849& (0+255),f,b
  8089   009A90  D7AE               	goto	l22747
  8090   009A92                     __end_of_initInputScan:
  8091                           	callstack 0
  8092                           
  8093 ;; *************** function _powerUp *****************
  8094 ;; Defined at:
  8095 ;;		line 876 in file "../../VLCBlib_PIC/vlcb.c"
  8096 ;; Parameters:    Size  Location     Type
  8097 ;;		None
  8098 ;; Auto vars:     Size  Location     Type
  8099 ;;  i               1   14[BANK1 ] unsigned char 
  8100 ;;  divider         1    0        unsigned char 
  8101 ;; Return value:  Size  Location     Type
  8102 ;;                  1    wreg      void 
  8103 ;; Registers used:
  8104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8105 ;; Tracked objects:
  8106 ;;		On entry : 0/0
  8107 ;;		On exit  : 0/0
  8108 ;;		Unchanged: 0/0
  8109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8111 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8112 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8113 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8114 ;;Total ram usage:        5 bytes
  8115 ;; Hardware stack levels used: 1
  8116 ;; Hardware stack levels required when called: 18
  8117 ;; This function calls:
  8118 ;;		NULL
  8119 ;;		_ackPowerUp
  8120 ;;		_bootPowerUp
  8121 ;;		_canPowerUp
  8122 ;;		_consumer2QPowerUp
  8123 ;;		_initTicker
  8124 ;;		_initTimedResponse
  8125 ;;		_leds_powerUp
  8126 ;;		_mnsPowerUp
  8127 ;;		_nvPowerUp
  8128 ;;		_producerPowerUp
  8129 ;;		_teachPowerUp
  8130 ;; This function is called by:
  8131 ;;		_main
  8132 ;; This function uses a non-reentrant model
  8133 ;;
  8134                           
  8135                           	psect	text7
  8136   0088F0                     __ptext7:
  8137                           	callstack 0
  8138   0088F0                     _powerUp:
  8139                           	callstack 12
  8140                           
  8141                           ;../../VLCBlib_PIC/vlcb.c: 877:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 878:     uint8_
      +                          t divider;;../../VLCBlib_PIC/vlcb.c: 881:     initTicker(0);
  8142                           
  8143                           ; BSR set to: 0
  8144                           ;incstack = 0
  8145   0088F0  0E00               	movlw	0
  8146   0088F2  ECAE  F05D         	call	_initTicker
  8147                           
  8148                           ;../../VLCBlib_PIC/vlcb.c: 882:     initTimedResponse();
  8149   0088F6  EC16  F063         	call	_initTimedResponse	;wreg free
  8150                           
  8151                           ;../../VLCBlib_PIC/vlcb.c: 883:     leds_powerUp();
  8152   0088FA  EC69  F05F         	call	_leds_powerUp	;wreg free
  8153                           
  8154                           ;../../VLCBlib_PIC/vlcb.c: 884:     timedResponseDelay = 5;
  8155   0088FE  0E05               	movlw	5
  8156   008900  0101               	movlb	1	; () banked
  8157   008902  6F64               	movwf	_timedResponseDelay& (0+255),b
  8158                           
  8159                           ; BSR set to: 1
  8160                           ;../../VLCBlib_PIC/vlcb.c: 886:     for (i=0; i<9; i++) {
  8161   008904  0E00               	movlw	0
  8162   008906  6FC8               	movwf	powerUp@i& (0+255),b
  8163   008908                     l24807:
  8164                           
  8165                           ; BSR set to: 1
  8166                           ;../../VLCBlib_PIC/vlcb.c: 887:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >powerUp != ((void*)0))) {
  8167   008908  51C8               	movf	powerUp@i& (0+255),w,b
  8168   00890A  0D02               	mullw	2
  8169   00890C  0E69               	movlw	low _services
  8170   00890E  24F3               	addwf	243,w,c
  8171   008910  6EF6               	movwf	tblptrl,c
  8172   008912  0EEE               	movlw	high _services
  8173   008914  20F4               	addwfc	244,w,c
  8174   008916  6EF7               	movwf	tblptrh,c
  8175   008918                     	if	1	;There are 3 active tblptr bytes
  8176   008918  6AF8               	clrf	tblptru,c
  8177   00891A  0E00               	movlw	low (__mediumconst shr (0+16))
  8178   00891C  22F8               	addwfc	tblptru,f,c
  8179   00891E                     	endif
  8180   00891E  0009               	tblrd		*+
  8181   008920  50F5               	movf	tablat,w,c
  8182   008922  0009               	tblrd		*+
  8183   008924  10F5               	iorwf	tablat,w,c
  8184   008926  B4D8               	btfsc	status,2,c
  8185   008928  D04B               	goto	u26469
  8186                           
  8187                           ; BSR set to: 1
  8188   00892A  51C8               	movf	powerUp@i& (0+255),w,b
  8189   00892C  0D02               	mullw	2
  8190   00892E  0E69               	movlw	low _services
  8191   008930  24F3               	addwf	243,w,c
  8192   008932  6EF6               	movwf	tblptrl,c
  8193   008934  0EEE               	movlw	high _services
  8194   008936  20F4               	addwfc	244,w,c
  8195   008938  6EF7               	movwf	tblptrh,c
  8196   00893A                     	if	1	;There are 3 active tblptr bytes
  8197   00893A  6AF8               	clrf	tblptru,c
  8198   00893C  0E00               	movlw	low (__mediumconst shr (0+16))
  8199   00893E  22F8               	addwfc	tblptru,f,c
  8200   008940                     	endif
  8201   008940  0009               	tblrd		*+
  8202   008942  CFF5 F1C4          	movff	tablat,??_powerUp
  8203   008946  0009               	tblrd		*+
  8204   008948  CFF5 F1C5          	movff	tablat,??_powerUp+1
  8205   00894C  0E04               	movlw	4
  8206   00894E  27C4               	addwf	??_powerUp& (0+255),f,b
  8207   008950  0E00               	movlw	0
  8208   008952  23C5               	addwfc	(??_powerUp+1)& (0+255),f,b
  8209   008954  C1C4  FFF6         	movff	??_powerUp,tblptrl
  8210   008958  C1C5  FFF7         	movff	??_powerUp+1,tblptrh
  8211   00895C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8212   00895C  6AF8               	clrf	tblptru,c
  8213   00895E                     	endif
  8214   00895E                     	if	0	;tblptru may be non-zero
  8215   00895E                     	endif
  8216   00895E  0009               	tblrd		*+
  8217   008960  50F5               	movf	tablat,w,c
  8218   008962  0009               	tblrd		*+
  8219   008964  10F5               	iorwf	tablat,w,c
  8220   008966  B4D8               	btfsc	status,2,c
  8221   008968  D02B               	goto	u26469
  8222                           
  8223                           ; BSR set to: 1
  8224                           ;../../VLCBlib_PIC/vlcb.c: 888:             services[i]->powerUp();
  8225   00896A  51C8               	movf	powerUp@i& (0+255),w,b
  8226   00896C  0D02               	mullw	2
  8227   00896E  0E69               	movlw	low _services
  8228   008970  24F3               	addwf	243,w,c
  8229   008972  6EF6               	movwf	tblptrl,c
  8230   008974  0EEE               	movlw	high _services
  8231   008976  20F4               	addwfc	244,w,c
  8232   008978  6EF7               	movwf	tblptrh,c
  8233   00897A                     	if	1	;There are 3 active tblptr bytes
  8234   00897A  6AF8               	clrf	tblptru,c
  8235   00897C  0E00               	movlw	low (__mediumconst shr (0+16))
  8236   00897E  22F8               	addwfc	tblptru,f,c
  8237   008980                     	endif
  8238   008980  0009               	tblrd		*+
  8239   008982  CFF5 F1C4          	movff	tablat,??_powerUp
  8240   008986  0009               	tblrd		*+
  8241   008988  CFF5 F1C5          	movff	tablat,??_powerUp+1
  8242   00898C  0E04               	movlw	4
  8243   00898E  27C4               	addwf	??_powerUp& (0+255),f,b
  8244   008990  0E00               	movlw	0
  8245   008992  23C5               	addwfc	(??_powerUp+1)& (0+255),f,b
  8246   008994  C1C4  FFF6         	movff	??_powerUp,tblptrl
  8247   008998  C1C5  FFF7         	movff	??_powerUp+1,tblptrh
  8248   00899C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8249   00899C  6AF8               	clrf	tblptru,c
  8250   00899E                     	endif
  8251   00899E                     	if	0	;tblptru may be non-zero
  8252   00899E                     	endif
  8253   00899E  0009               	tblrd		*+
  8254   0089A0  CFF5 F1C6          	movff	tablat,??_powerUp+2
  8255   0089A4  0009               	tblrd		*+
  8256   0089A6  CFF5 F1C7          	movff	tablat,??_powerUp+3
  8257   0089AA  D801               	call	u26468
  8258   0089AC  D009               	goto	u26469
  8259   0089AE                     u26468:
  8260   0089AE  0005               	push	
  8261   0089B0  6EFA               	movwf	pclath,c
  8262   0089B2  51C6               	movf	(??_powerUp+2)& (0+255),w,b
  8263   0089B4  6EFD               	movwf	tosl,c
  8264   0089B6  51C7               	movf	(??_powerUp+3)& (0+255),w,b
  8265   0089B8  6EFE               	movwf	tosh,c
  8266   0089BA  6AFF               	clrf	tosu,c
  8267   0089BC  50FA               	movf	pclath,w,c
  8268   0089BE  0012               	return		;indir
  8269   0089C0                     u26469:
  8270                           
  8271                           ;../../VLCBlib_PIC/vlcb.c: 890:     }
  8272   0089C0  0101               	movlb	1	; () banked
  8273   0089C2  2BC8               	incf	powerUp@i& (0+255),f,b
  8274                           
  8275                           ; BSR set to: 1
  8276   0089C4  0E08               	movlw	8
  8277   0089C6  65C8               	cpfsgt	powerUp@i& (0+255),b
  8278   0089C8  D79F               	goto	l24807
  8279   0089CA  0012               	return	
  8280   0089CC                     __end_of_powerUp:
  8281                           	callstack 0
  8282                           
  8283 ;; *************** function _producerPowerUp *****************
  8284 ;; Defined at:
  8285 ;;		line 108 in file "../../VLCBlib_PIC/event_producer_happening.c"
  8286 ;; Parameters:    Size  Location     Type
  8287 ;;		None
  8288 ;; Auto vars:     Size  Location     Type
  8289 ;;  i               1   45[BANK0 ] unsigned char 
  8290 ;; Return value:  Size  Location     Type
  8291 ;;                  1    wreg      void 
  8292 ;; Registers used:
  8293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8294 ;; Tracked objects:
  8295 ;;		On entry : 0/0
  8296 ;;		On exit  : 0/0
  8297 ;;		Unchanged: 0/0
  8298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8300 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8302 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8303 ;;Total ram usage:        1 bytes
  8304 ;; Hardware stack levels used: 1
  8305 ;; Hardware stack levels required when called: 12
  8306 ;; This function calls:
  8307 ;;		Nothing
  8308 ;; This function is called by:
  8309 ;;		_powerUp
  8310 ;; This function uses a non-reentrant model
  8311 ;;
  8312                           
  8313                           	psect	text8
  8314   00C022                     __ptext8:
  8315                           	callstack 0
  8316   00C022                     _producerPowerUp:
  8317                           	callstack 17
  8318                           
  8319                           ;../../VLCBlib_PIC/event_producer_happening.c: 109:     uint8_t i;;../../VLCBlib_PIC/eve
      +                          nt_producer_happening.c: 110:     for (i=1; i <= 1; i++) {
  8320                           
  8321                           ; BSR set to: 1
  8322                           ;incstack = 0
  8323   00C022  0E01               	movlw	1
  8324   00C024  0100               	movlb	0	; () banked
  8325   00C026  6F8D               	movwf	producerPowerUp@i& (0+255),b
  8326   00C028                     l24651:
  8327                           
  8328                           ; BSR set to: 0
  8329                           ;../../VLCBlib_PIC/event_producer_happening.c: 111:         producerDiagnostics[i].asUin
      +                          t = 0;
  8330   00C028  518D               	movf	producerPowerUp@i& (0+255),w,b
  8331   00C02A  0D02               	mullw	2
  8332   00C02C  0EAA               	movlw	low _producerDiagnostics
  8333   00C02E  24F3               	addwf	243,w,c
  8334   00C030  6ED9               	movwf	fsr2l,c
  8335   00C032  0E01               	movlw	high _producerDiagnostics
  8336   00C034  20F4               	addwfc	prodh,w,c
  8337   00C036  6EDA               	movwf	fsr2h,c
  8338   00C038  6ADE               	clrf	postinc2,c
  8339   00C03A  6ADD               	clrf	postdec2,c
  8340                           
  8341                           ; BSR set to: 0
  8342                           ;../../VLCBlib_PIC/event_producer_happening.c: 112:     }
  8343   00C03C  2B8D               	incf	producerPowerUp@i& (0+255),f,b
  8344                           
  8345                           ; BSR set to: 0
  8346   00C03E  0E01               	movlw	1
  8347   00C040  658D               	cpfsgt	producerPowerUp@i& (0+255),b
  8348   00C042  D7F2               	goto	l24651
  8349                           
  8350                           ; BSR set to: 0
  8351                           ;../../VLCBlib_PIC/event_producer_happening.c: 113:     producerDiagnostics[0].asUint = 
      +                          1;
  8352   00C044  0E00               	movlw	0
  8353   00C046  0101               	movlb	1	; () banked
  8354   00C048  6FAB               	movwf	(_producerDiagnostics+1)& (0+255),b
  8355   00C04A  0E01               	movlw	1
  8356   00C04C  6FAA               	movwf	_producerDiagnostics& (0+255),b
  8357                           
  8358                           ; BSR set to: 1
  8359   00C04E  0012               	return		;funcret
  8360   00C050                     __end_of_producerPowerUp:
  8361                           	callstack 0
  8362                           
  8363 ;; *************** function _canPowerUp *****************
  8364 ;; Defined at:
  8365 ;;		line 217 in file "../../VLCBlib_PIC/can18_ecan.c"
  8366 ;; Parameters:    Size  Location     Type
  8367 ;;		None
  8368 ;; Auto vars:     Size  Location     Type
  8369 ;;  temp            2   56[BANK0 ] int 
  8370 ;; Return value:  Size  Location     Type
  8371 ;;                  1    wreg      void 
  8372 ;; Registers used:
  8373 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8374 ;; Tracked objects:
  8375 ;;		On entry : 0/0
  8376 ;;		On exit  : 0/0
  8377 ;;		Unchanged: 0/0
  8378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8380 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8381 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8382 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8383 ;;Total ram usage:        3 bytes
  8384 ;; Hardware stack levels used: 1
  8385 ;; Hardware stack levels required when called: 14
  8386 ;; This function calls:
  8387 ;;		_readNVM
  8388 ;;		_tickGet
  8389 ;; This function is called by:
  8390 ;;		_powerUp
  8391 ;; This function uses a non-reentrant model
  8392 ;;
  8393                           
  8394                           	psect	text9
  8395   006F14                     __ptext9:
  8396                           	callstack 0
  8397   006F14                     _canPowerUp:
  8398                           	callstack 15
  8399                           
  8400                           ;../../VLCBlib_PIC/can18_ecan.c: 218:     int temp;;../../VLCBlib_PIC/can18_ecan.c: 221:
      +                               rxQueue.readIndex = 0;
  8401                           
  8402                           ; BSR set to: 1
  8403                           ;incstack = 0
  8404   006F14  0E00               	movlw	0
  8405   006F16  6E51               	movwf	(_rxQueue+2)^0,c
  8406                           
  8407                           ;../../VLCBlib_PIC/can18_ecan.c: 222:     rxQueue.writeIndex = 0;
  8408   006F18  0E00               	movlw	0
  8409   006F1A  6E52               	movwf	(_rxQueue+3)^0,c
  8410                           
  8411                           ;../../VLCBlib_PIC/can18_ecan.c: 223:     rxQueue.messages = rxBuffers;
  8412   006F1C  0EC8               	movlw	low _rxBuffers
  8413   006F1E  6E4F               	movwf	_rxQueue^0,c
  8414   006F20  0E07               	movlw	high _rxBuffers
  8415   006F22  6E50               	movwf	(_rxQueue+1)^0,c
  8416                           
  8417                           ;../../VLCBlib_PIC/can18_ecan.c: 224:     rxQueue.size = 32;
  8418   006F24  0E20               	movlw	32
  8419   006F26  6E53               	movwf	(_rxQueue+4)^0,c
  8420                           
  8421                           ;../../VLCBlib_PIC/can18_ecan.c: 226:     txQueue.readIndex = 0;
  8422   006F28  0E00               	movlw	0
  8423   006F2A  6E4C               	movwf	(_txQueue+2)^0,c
  8424                           
  8425                           ;../../VLCBlib_PIC/can18_ecan.c: 227:     txQueue.writeIndex = 0;
  8426   006F2C  0E00               	movlw	0
  8427   006F2E  6E4D               	movwf	(_txQueue+3)^0,c
  8428                           
  8429                           ;../../VLCBlib_PIC/can18_ecan.c: 228:     txQueue.messages = txBuffers;
  8430   006F30  0E00               	movlw	low _txBuffers
  8431   006F32  6E4A               	movwf	_txQueue^0,c
  8432   006F34  0E05               	movlw	high _txBuffers
  8433   006F36  6E4B               	movwf	(_txQueue+1)^0,c
  8434                           
  8435                           ;../../VLCBlib_PIC/can18_ecan.c: 229:     txQueue.size = 8;
  8436   006F38  0E08               	movlw	8
  8437   006F3A  6E4E               	movwf	(_txQueue+4)^0,c
  8438                           
  8439                           ;../../VLCBlib_PIC/can18_ecan.c: 233:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FE);
  8440   006F3C  0EFE               	movlw	254
  8441   006F3E  0100               	movlb	0	; () banked
  8442   006F40  6F91               	movwf	readNVM@index& (0+255),b
  8443   006F42  0E03               	movlw	3
  8444   006F44  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8445   006F46  0E00               	movlw	0
  8446   006F48  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8447   006F4A  0E00               	movlw	0
  8448   006F4C  ECD0  F059         	call	_readNVM
  8449   006F50  C091  F098         	movff	?_readNVM,canPowerUp@temp
  8450   006F54  C092  F099         	movff	?_readNVM+1,canPowerUp@temp+1
  8451                           
  8452                           ;../../VLCBlib_PIC/can18_ecan.c: 234:     if (temp < 0) {
  8453   006F58  0100               	movlb	0	; () banked
  8454   006F5A  AF99               	btfss	(canPowerUp@temp+1)& (0+255),7,b
  8455   006F5C  D003               	goto	l2443
  8456                           
  8457                           ; BSR set to: 0
  8458                           ;../../VLCBlib_PIC/can18_ecan.c: 236:         canId = 0;
  8459   006F5E  0E00               	movlw	0
  8460   006F60  6FC1               	movwf	_canId& (0+255),b
  8461                           
  8462                           ;../../VLCBlib_PIC/can18_ecan.c: 237:     } else {
  8463   006F62  D002               	goto	l24139
  8464   006F64                     l2443:
  8465                           
  8466                           ; BSR set to: 0
  8467                           ;../../VLCBlib_PIC/can18_ecan.c: 238:         canId = (uint8_t)temp;
  8468   006F64  C098  F0C1         	movff	canPowerUp@temp,_canId
  8469   006F68                     l24139:
  8470                           
  8471                           ; BSR set to: 0
  8472                           ;../../VLCBlib_PIC/can18_ecan.c: 242:     for (temp=1; temp <= 18; temp++) {
  8473   006F68  0E00               	movlw	0
  8474   006F6A  6F99               	movwf	(canPowerUp@temp+1)& (0+255),b
  8475   006F6C  0E01               	movlw	1
  8476   006F6E  6F98               	movwf	canPowerUp@temp& (0+255),b
  8477   006F70                     l24145:
  8478                           
  8479                           ; BSR set to: 0
  8480                           ;../../VLCBlib_PIC/can18_ecan.c: 243:         canDiagnostics[temp].asUint = 0;
  8481   006F70  90D8               	bcf	status,0,c
  8482   006F72  3598               	rlcf	canPowerUp@temp& (0+255),w,b
  8483   006F74  6ED9               	movwf	fsr2l,c
  8484   006F76  3599               	rlcf	(canPowerUp@temp+1)& (0+255),w,b
  8485   006F78  6EDA               	movwf	fsr2h,c
  8486   006F7A  0E67               	movlw	low _canDiagnostics
  8487   006F7C  26D9               	addwf	fsr2l,f,c
  8488   006F7E  0E01               	movlw	high _canDiagnostics
  8489   006F80  22DA               	addwfc	fsr2h,f,c
  8490   006F82  6ADE               	clrf	postinc2,c
  8491   006F84  6ADD               	clrf	postdec2,c
  8492                           
  8493                           ; BSR set to: 0
  8494                           ;../../VLCBlib_PIC/can18_ecan.c: 244:     }
  8495   006F86  4B98               	infsnz	canPowerUp@temp& (0+255),f,b
  8496   006F88  2B99               	incf	(canPowerUp@temp+1)& (0+255),f,b
  8497                           
  8498                           ; BSR set to: 0
  8499   006F8A  BF99               	btfsc	(canPowerUp@temp+1)& (0+255),7,b
  8500   006F8C  D7F1               	goto	l24145
  8501   006F8E  5199               	movf	(canPowerUp@temp+1)& (0+255),w,b
  8502   006F90  E104               	bnz	u25710
  8503   006F92  0E13               	movlw	19
  8504   006F94  5D98               	subwf	canPowerUp@temp& (0+255),w,b
  8505   006F96  A0D8               	btfss	status,0,c
  8506   006F98  D7EB               	goto	l24145
  8507   006F9A                     u25710:
  8508                           
  8509                           ; BSR set to: 0
  8510                           ;../../VLCBlib_PIC/can18_ecan.c: 245:     canDiagnostics[0x00].asUint = 18;
  8511   006F9A  0E00               	movlw	0
  8512   006F9C  0101               	movlb	1	; () banked
  8513   006F9E  6F68               	movwf	(_canDiagnostics+1)& (0+255),b
  8514   006FA0  0E12               	movlw	18
  8515   006FA2  6F67               	movwf	_canDiagnostics& (0+255),b
  8516                           
  8517                           ;../../VLCBlib_PIC/can18_ecan.c: 248:     canTransmitFailed=0;
  8518   006FA4  0E00               	movlw	0
  8519   006FA6  0100               	movlb	0	; () banked
  8520   006FA8  6FC0               	movwf	_canTransmitFailed& (0+255),b
  8521                           
  8522                           ;../../VLCBlib_PIC/can18_ecan.c: 249:     IPR5 = 0;
  8523   006FAA  0E00               	movlw	0
  8524   006FAC  6E78               	movwf	120,c	;volatile
  8525                           
  8526                           ;../../VLCBlib_PIC/can18_ecan.c: 252:     CANCON = 0b10000000;
  8527   006FAE  0E80               	movlw	128
  8528   006FB0  6E6F               	movwf	111,c	;volatile
  8529   006FB2                     l2447:
  8530   006FB2  AE6E               	btfss	110,7,c	;volatile
  8531   006FB4  D7FE               	goto	l2447
  8532                           
  8533                           ;../../VLCBlib_PIC/can18_ecan.c: 256:     ECANCON = 0b10110000;
  8534   006FB6  0EB0               	movlw	176
  8535   006FB8  6E72               	movwf	114,c	;volatile
  8536                           
  8537                           ;../../VLCBlib_PIC/can18_ecan.c: 257:     BSEL0 = 0;
  8538   006FBA  0E00               	movlw	0
  8539   006FBC  010E               	movlb	14	; () banked
  8540   006FBE  6F7D               	movwf	125,b	;volatile
  8541                           
  8542                           ;../../VLCBlib_PIC/can18_ecan.c: 281:       BRGCON1 = 0b00001111;
  8543   006FC0  0E0F               	movlw	15
  8544   006FC2  6F43               	movwf	67,b	;volatile
  8545                           
  8546                           ;../../VLCBlib_PIC/can18_ecan.c: 284:     BRGCON2 = 0b10011110;
  8547   006FC4  0E9E               	movlw	158
  8548   006FC6  6F44               	movwf	68,b	;volatile
  8549                           
  8550                           ;../../VLCBlib_PIC/can18_ecan.c: 285:     BRGCON3 = 0b00000011;
  8551   006FC8  0E03               	movlw	3
  8552   006FCA  6F45               	movwf	69,b	;volatile
  8553                           
  8554                           ;../../VLCBlib_PIC/can18_ecan.c: 286:     CIOCON = 0b00100000;
  8555   006FCC  0E20               	movlw	32
  8556   006FCE  6E70               	movwf	112,c	;volatile
  8557                           
  8558                           ;../../VLCBlib_PIC/can18_ecan.c: 290:     RXM0SIDH = 0;
  8559   006FD0  0E00               	movlw	0
  8560   006FD2  6FF8               	movwf	248,b	;volatile
  8561                           
  8562                           ;../../VLCBlib_PIC/can18_ecan.c: 291:     RXM0SIDL = 0x08;
  8563   006FD4  0E08               	movlw	8
  8564   006FD6  6FF9               	movwf	249,b	;volatile
  8565                           
  8566                           ;../../VLCBlib_PIC/can18_ecan.c: 292:     RXM0EIDH = 0;
  8567   006FD8  0E00               	movlw	0
  8568   006FDA  6FFA               	movwf	250,b	;volatile
  8569                           
  8570                           ;../../VLCBlib_PIC/can18_ecan.c: 293:     RXM0EIDL = 0;
  8571   006FDC  0E00               	movlw	0
  8572   006FDE  6FFB               	movwf	251,b	;volatile
  8573                           
  8574                           ;../../VLCBlib_PIC/can18_ecan.c: 295:     RXF0SIDL = 0x00;
  8575   006FE0  0E00               	movlw	0
  8576   006FE2  6FE1               	movwf	225,b	;volatile
  8577                           
  8578                           ;../../VLCBlib_PIC/can18_ecan.c: 297:     RXFBCON0 = 0;
  8579   006FE4  0E00               	movlw	0
  8580   006FE6  6F71               	movwf	113,b	;volatile
  8581                           
  8582                           ;../../VLCBlib_PIC/can18_ecan.c: 299:     MSEL0 = 0;
  8583   006FE8  0E00               	movlw	0
  8584   006FEA  6F79               	movwf	121,b	;volatile
  8585                           
  8586                           ;../../VLCBlib_PIC/can18_ecan.c: 301:     RXFCON0 = 1;
  8587   006FEC  0E01               	movlw	1
  8588   006FEE  6F46               	movwf	70,b	;volatile
  8589                           
  8590                           ;../../VLCBlib_PIC/can18_ecan.c: 308:     RXB0CON = 0x00;
  8591   006FF0  0E00               	movlw	0
  8592   006FF2  6E60               	movwf	96,c	;volatile
  8593                           
  8594                           ;../../VLCBlib_PIC/can18_ecan.c: 309:     RXB1CON = 0x00;
  8595   006FF4  0E00               	movlw	0
  8596   006FF6  010F               	movlb	15	; () banked
  8597   006FF8  6F30               	movwf	48,b	;volatile
  8598                           
  8599                           ;../../VLCBlib_PIC/can18_ecan.c: 310:     B0CON = 0;
  8600   006FFA  0E00               	movlw	0
  8601   006FFC  010E               	movlb	14	; () banked
  8602   006FFE  6F80               	movwf	128,b	;volatile
  8603                           
  8604                           ;../../VLCBlib_PIC/can18_ecan.c: 311:     B1CON = 0;
  8605   007000  0E00               	movlw	0
  8606   007002  6F90               	movwf	144,b	;volatile
  8607                           
  8608                           ;../../VLCBlib_PIC/can18_ecan.c: 312:     B2CON = 0;
  8609   007004  0E00               	movlw	0
  8610   007006  6FA0               	movwf	160,b	;volatile
  8611                           
  8612                           ;../../VLCBlib_PIC/can18_ecan.c: 313:     B3CON = 0;
  8613   007008  0E00               	movlw	0
  8614   00700A  6FB0               	movwf	176,b	;volatile
  8615                           
  8616                           ;../../VLCBlib_PIC/can18_ecan.c: 314:     B4CON = 0;
  8617   00700C  0E00               	movlw	0
  8618   00700E  6FC0               	movwf	192,b	;volatile
  8619                           
  8620                           ;../../VLCBlib_PIC/can18_ecan.c: 315:     B5CON = 0;
  8621   007010  0E00               	movlw	0
  8622   007012  6FD0               	movwf	208,b	;volatile
  8623                           
  8624                           ;../../VLCBlib_PIC/can18_ecan.c: 317:     BIE0 = 0;
  8625   007014  0E00               	movlw	0
  8626   007016  6F7E               	movwf	126,b	;volatile
  8627                           
  8628                           ; BSR set to: 14
  8629                           ;../../VLCBlib_PIC/can18_ecan.c: 318:     TXBIEbits.TXB0IE = 1;
  8630   007018  857F               	bsf	127,2,b	;volatile
  8631                           
  8632                           ; BSR set to: 14
  8633                           ;../../VLCBlib_PIC/can18_ecan.c: 319:     TXBIEbits.TXB1IE = 0;
  8634   00701A  977F               	bcf	127,3,b	;volatile
  8635                           
  8636                           ; BSR set to: 14
  8637                           ;../../VLCBlib_PIC/can18_ecan.c: 320:     TXBIEbits.TXB2IE = 0;
  8638   00701C  997F               	bcf	127,4,b	;volatile
  8639                           
  8640                           ;../../VLCBlib_PIC/can18_ecan.c: 322:     CANCON = 0;
  8641   00701E  0E00               	movlw	0
  8642   007020  6E6F               	movwf	111,c	;volatile
  8643   007022                     l2450:
  8644   007022  BE6E               	btfsc	110,7,c	;volatile
  8645   007024  D7FE               	goto	l2450
  8646                           
  8647                           ;../../VLCBlib_PIC/can18_ecan.c: 327:     TXB0CON = 0;
  8648   007026  0E00               	movlw	0
  8649   007028  010F               	movlb	15	; () banked
  8650   00702A  6F20               	movwf	32,b	;volatile
  8651                           
  8652                           ; BSR set to: 15
  8653                           ;../../VLCBlib_PIC/can18_ecan.c: 328:     TXB0CONbits.TXPRI0 = 0;
  8654   00702C  9120               	bcf	32,0,b	;volatile
  8655                           
  8656                           ; BSR set to: 15
  8657                           ;../../VLCBlib_PIC/can18_ecan.c: 329:     TXB0CONbits.TXPRI1 = 0;
  8658   00702E  9320               	bcf	32,1,b	;volatile
  8659                           
  8660                           ;../../VLCBlib_PIC/can18_ecan.c: 330:     TXB0DLC = 0;
  8661   007030  0E00               	movlw	0
  8662   007032  6F25               	movwf	37,b	;volatile
  8663                           
  8664                           ;../../VLCBlib_PIC/can18_ecan.c: 332:     TXB0SIDH = 0;
  8665   007034  0E00               	movlw	0
  8666   007036  6F21               	movwf	33,b	;volatile
  8667                           
  8668                           ;../../VLCBlib_PIC/can18_ecan.c: 333:     TXB0SIDL = 0;
  8669   007038  0E00               	movlw	0
  8670   00703A  6F22               	movwf	34,b	;volatile
  8671                           
  8672                           ;../../VLCBlib_PIC/can18_ecan.c: 337:     TXB1CON = 0;
  8673   00703C  0E00               	movlw	0
  8674   00703E  6F10               	movwf	16,b	;volatile
  8675                           
  8676                           ; BSR set to: 15
  8677                           ;../../VLCBlib_PIC/can18_ecan.c: 338:     TXB1CONbits.TXPRI0 = 0;
  8678   007040  9110               	bcf	16,0,b	;volatile
  8679                           
  8680                           ; BSR set to: 15
  8681                           ;../../VLCBlib_PIC/can18_ecan.c: 339:     TXB1CONbits.TXPRI1 = 1;
  8682   007042  8310               	bsf	16,1,b	;volatile
  8683                           
  8684                           ;../../VLCBlib_PIC/can18_ecan.c: 340:     TXB1DLC = 0x40;
  8685   007044  0E40               	movlw	64
  8686   007046  6F15               	movwf	21,b	;volatile
  8687                           
  8688                           ; BSR set to: 15
  8689                           ;../../VLCBlib_PIC/can18_ecan.c: 341:     TXB1SIDH = canPri[4] | ((canId & 0x78) >> 3);
  8690   007048  0E8A               	movlw	low (_canPri+4)
  8691   00704A  6EF6               	movwf	tblptrl,c
  8692   00704C  0EEE               	movlw	high (_canPri+4)
  8693   00704E  6EF7               	movwf	tblptrh,c
  8694   007050                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8695   007050  6AF8               	clrf	tblptru,c
  8696   007052                     	endif
  8697   007052                     	if	0	;tblptru may be non-zero
  8698   007052                     	endif
  8699   007052  0008               	tblrd		*
  8700   007054  CFF5 F097          	movff	tablat,??_canPowerUp
  8701   007058  0100               	movlb	0	; () banked
  8702   00705A  39C1               	swapf	_canId& (0+255),w,b
  8703   00705C  46E8               	rlncf	wreg,f,c
  8704   00705E  0B1F               	andlw	31
  8705   007060  0B0F               	andlw	15
  8706   007062  1197               	iorwf	??_canPowerUp& (0+255),w,b
  8707   007064  010F               	movlb	15	; () banked
  8708   007066  6F11               	movwf	17,b	;volatile
  8709                           
  8710                           ; BSR set to: 15
  8711                           ;../../VLCBlib_PIC/can18_ecan.c: 342:     TXB1SIDL = TXB0SIDL;
  8712   007068  CF22 FF12          	movff	3874,3858	;volatile
  8713                           
  8714                           ; BSR set to: 15
  8715                           ;../../VLCBlib_PIC/can18_ecan.c: 346:     TXB2CON = 0;
  8716   00706C  0E00               	movlw	0
  8717   00706E  6F00               	movwf	0,b	;volatile
  8718                           
  8719                           ; BSR set to: 15
  8720                           ;../../VLCBlib_PIC/can18_ecan.c: 347:     TXB2CONbits.TXPRI0 = 1;
  8721   007070  8100               	bsf	0,0,b	;volatile
  8722                           
  8723                           ; BSR set to: 15
  8724                           ;../../VLCBlib_PIC/can18_ecan.c: 348:     TXB2CONbits.TXPRI1 = 1;
  8725   007072  8300               	bsf	0,1,b	;volatile
  8726                           
  8727                           ; BSR set to: 15
  8728                           ;../../VLCBlib_PIC/can18_ecan.c: 349:     TXB2DLC = 0;
  8729   007074  0E00               	movlw	0
  8730   007076  6F05               	movwf	5,b	;volatile
  8731                           
  8732                           ; BSR set to: 15
  8733                           ;../../VLCBlib_PIC/can18_ecan.c: 350:     TXB2SIDH = canPri[4] | ((canId & 0x78) >> 3);
  8734   007078  0E8A               	movlw	low (_canPri+4)
  8735   00707A  6EF6               	movwf	tblptrl,c
  8736   00707C  0EEE               	movlw	high (_canPri+4)
  8737   00707E  6EF7               	movwf	tblptrh,c
  8738   007080                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8739   007080  6AF8               	clrf	tblptru,c
  8740   007082                     	endif
  8741   007082                     	if	0	;tblptru may be non-zero
  8742   007082                     	endif
  8743   007082  0008               	tblrd		*
  8744   007084  CFF5 F097          	movff	tablat,??_canPowerUp
  8745   007088  0100               	movlb	0	; () banked
  8746   00708A  39C1               	swapf	_canId& (0+255),w,b
  8747   00708C  46E8               	rlncf	wreg,f,c
  8748   00708E  0B1F               	andlw	31
  8749   007090  0B0F               	andlw	15
  8750   007092  1197               	iorwf	??_canPowerUp& (0+255),w,b
  8751   007094  010F               	movlb	15	; () banked
  8752   007096  6F01               	movwf	1,b	;volatile
  8753                           
  8754                           ; BSR set to: 15
  8755                           ;../../VLCBlib_PIC/can18_ecan.c: 351:     TXB2SIDL = TXB0SIDL;
  8756   007098  CF22 FF02          	movff	3874,3842	;volatile
  8757                           
  8758                           ;../../VLCBlib_PIC/can18_ecan.c: 355:     enumerationState = NO_ENUMERATION;
  8759   00709C  0E00               	movlw	0
  8760   00709E  0100               	movlb	0	; () banked
  8761   0070A0  6FBF               	movwf	_enumerationState& (0+255),b
  8762                           
  8763                           ; BSR set to: 0
  8764                           ;../../VLCBlib_PIC/can18_ecan.c: 356:     enumerationStartTime.val = tickGet();
  8765   0070A2  ECE4  F05A         	call	_tickGet	;wreg free
  8766   0070A6  C08D  F02B         	movff	?_tickGet,_enumerationStartTime
  8767   0070AA  C08E  F02C         	movff	?_tickGet+1,_enumerationStartTime+1
  8768   0070AE  C08F  F02D         	movff	?_tickGet+2,_enumerationStartTime+2
  8769   0070B2  C090  F02E         	movff	?_tickGet+3,_enumerationStartTime+3
  8770                           
  8771                           ;../../VLCBlib_PIC/can18_ecan.c: 359:     canTransmitTimeout.val = enumerationStartTime.
      +                          val;
  8772   0070B6  C02B  F02F         	movff	_enumerationStartTime,_canTransmitTimeout
  8773   0070BA  C02C  F030         	movff	_enumerationStartTime+1,_canTransmitTimeout+1
  8774   0070BE  C02D  F031         	movff	_enumerationStartTime+2,_canTransmitTimeout+2
  8775   0070C2  C02E  F032         	movff	_enumerationStartTime+3,_canTransmitTimeout+3
  8776                           
  8777                           ;../../VLCBlib_PIC/can18_ecan.c: 361:     PIE5bits.FIFOWMIE = 1;
  8778   0070C6  8076               	bsf	118,0,c	;volatile
  8779                           
  8780                           ;../../VLCBlib_PIC/can18_ecan.c: 362:     PIE5bits.TXBnIE = 1;
  8781   0070C8  8876               	bsf	118,4,c	;volatile
  8782                           
  8783                           ;../../VLCBlib_PIC/can18_ecan.c: 363:     PIE5bits.ERRIE = 1;
  8784   0070CA  8A76               	bsf	118,5,c	;volatile
  8785   0070CC  0012               	return		;funcret
  8786   0070CE                     __end_of_canPowerUp:
  8787                           	callstack 0
  8788                           
  8789 ;; *************** function _nvPowerUp *****************
  8790 ;; Defined at:
  8791 ;;		line 136 in file "../../VLCBlib_PIC/nv.c"
  8792 ;; Parameters:    Size  Location     Type
  8793 ;;		None
  8794 ;; Auto vars:     Size  Location     Type
  8795 ;;  i               1   60[BANK0 ] unsigned char 
  8796 ;; Return value:  Size  Location     Type
  8797 ;;                  1    wreg      void 
  8798 ;; Registers used:
  8799 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8800 ;; Tracked objects:
  8801 ;;		On entry : 0/0
  8802 ;;		On exit  : 0/0
  8803 ;;		Unchanged: 0/0
  8804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8806 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8808 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8809 ;;Total ram usage:        1 bytes
  8810 ;; Hardware stack levels used: 1
  8811 ;; Hardware stack levels required when called: 15
  8812 ;; This function calls:
  8813 ;;		_loadNvCache
  8814 ;; This function is called by:
  8815 ;;		_powerUp
  8816 ;; This function uses a non-reentrant model
  8817 ;;
  8818                           
  8819                           	psect	text10
  8820   00BE3C                     __ptext10:
  8821                           	callstack 0
  8822   00BE3C                     _nvPowerUp:
  8823                           	callstack 14
  8824                           
  8825                           ;../../VLCBlib_PIC/nv.c: 138:     uint8_t i;;../../VLCBlib_PIC/nv.c: 139:     for (i=1; 
      +                          i <= 2; i++) {
  8826                           
  8827                           ;incstack = 0
  8828   00BE3C  0E01               	movlw	1
  8829   00BE3E  0100               	movlb	0	; () banked
  8830   00BE40  6F9C               	movwf	nvPowerUp@i& (0+255),b
  8831   00BE42                     l23887:
  8832                           
  8833                           ; BSR set to: 0
  8834                           ;../../VLCBlib_PIC/nv.c: 140:         nvDiagnostics[i].asUint = 0;
  8835   00BE42  519C               	movf	nvPowerUp@i& (0+255),w,b
  8836   00BE44  0D02               	mullw	2
  8837   00BE46  0EA4               	movlw	low _nvDiagnostics
  8838   00BE48  24F3               	addwf	243,w,c
  8839   00BE4A  6ED9               	movwf	fsr2l,c
  8840   00BE4C  0E01               	movlw	high _nvDiagnostics
  8841   00BE4E  20F4               	addwfc	prodh,w,c
  8842   00BE50  6EDA               	movwf	fsr2h,c
  8843   00BE52  6ADE               	clrf	postinc2,c
  8844   00BE54  6ADD               	clrf	postdec2,c
  8845                           
  8846                           ; BSR set to: 0
  8847                           ;../../VLCBlib_PIC/nv.c: 141:     }
  8848   00BE56  2B9C               	incf	nvPowerUp@i& (0+255),f,b
  8849                           
  8850                           ; BSR set to: 0
  8851   00BE58  0E02               	movlw	2
  8852   00BE5A  659C               	cpfsgt	nvPowerUp@i& (0+255),b
  8853   00BE5C  D7F2               	goto	l23887
  8854                           
  8855                           ; BSR set to: 0
  8856                           ;../../VLCBlib_PIC/nv.c: 142:     nvDiagnostics[0x00].asUint = 2;
  8857   00BE5E  0E00               	movlw	0
  8858   00BE60  0101               	movlb	1	; () banked
  8859   00BE62  6FA5               	movwf	(_nvDiagnostics+1)& (0+255),b
  8860   00BE64  0E02               	movlw	2
  8861   00BE66  6FA4               	movwf	_nvDiagnostics& (0+255),b
  8862                           
  8863                           ; BSR set to: 1
  8864                           ;../../VLCBlib_PIC/nv.c: 145:     loadNvCache();
  8865   00BE68  EC1C  F05D         	call	_loadNvCache	;wreg free
  8866   00BE6C  0012               	return		;funcret
  8867   00BE6E                     __end_of_nvPowerUp:
  8868                           	callstack 0
  8869                           
  8870 ;; *************** function _mnsPowerUp *****************
  8871 ;; Defined at:
  8872 ;;		line 295 in file "../../VLCBlib_PIC/mns.c"
  8873 ;; Parameters:    Size  Location     Type
  8874 ;;		None
  8875 ;; Auto vars:     Size  Location     Type
  8876 ;;  temp            2   56[BANK0 ] int 
  8877 ;;  i               1   55[BANK0 ] unsigned char 
  8878 ;; Return value:  Size  Location     Type
  8879 ;;                  1    wreg      void 
  8880 ;; Registers used:
  8881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8882 ;; Tracked objects:
  8883 ;;		On entry : 0/0
  8884 ;;		On exit  : 0/0
  8885 ;;		Unchanged: 0/0
  8886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8888 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8890 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8891 ;;Total ram usage:        3 bytes
  8892 ;; Hardware stack levels used: 1
  8893 ;; Hardware stack levels required when called: 14
  8894 ;; This function calls:
  8895 ;;		_readNVM
  8896 ;;		_setLEDsByMode
  8897 ;;		_tickGet
  8898 ;; This function is called by:
  8899 ;;		_powerUp
  8900 ;; This function uses a non-reentrant model
  8901 ;;
  8902                           
  8903                           	psect	text11
  8904   007E4A                     __ptext11:
  8905                           	callstack 0
  8906   007E4A                     _mnsPowerUp:
  8907                           	callstack 15
  8908                           
  8909                           ;../../VLCBlib_PIC/mns.c: 296:     int temp;;../../VLCBlib_PIC/mns.c: 297:     uint8_t i
      +                          ;;../../VLCBlib_PIC/mns.c: 299:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FC +1);
  8910                           
  8911                           ;incstack = 0
  8912   007E4A  0EFD               	movlw	253
  8913   007E4C  0100               	movlb	0	; () banked
  8914   007E4E  6F91               	movwf	readNVM@index& (0+255),b
  8915   007E50  0E03               	movlw	3
  8916   007E52  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8917   007E54  0E00               	movlw	0
  8918   007E56  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8919   007E58  0E00               	movlw	0
  8920   007E5A  ECD0  F059         	call	_readNVM
  8921   007E5E  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  8922   007E62  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  8923                           
  8924                           ;../../VLCBlib_PIC/mns.c: 300:     if (temp < 0) {
  8925   007E66  0100               	movlb	0	; () banked
  8926   007E68  AF99               	btfss	(mnsPowerUp@temp+1)& (0+255),7,b
  8927   007E6A  D005               	goto	l1434
  8928   007E6C                     u24870:
  8929                           
  8930                           ; BSR set to: 0
  8931                           ;../../VLCBlib_PIC/mns.c: 301:         nn.bytes.hi = 0;
  8932   007E6C  0E00               	movlw	0
  8933   007E6E  6FBE               	movwf	(_nn+1)& (0+255),b
  8934                           
  8935                           ;../../VLCBlib_PIC/mns.c: 302:         nn.bytes.lo = 0;
  8936   007E70  0E00               	movlw	0
  8937   007E72  6FBD               	movwf	_nn& (0+255),b
  8938                           
  8939                           ;../../VLCBlib_PIC/mns.c: 303:     } else {
  8940   007E74  D014               	goto	l23397
  8941   007E76                     l1434:
  8942                           
  8943                           ; BSR set to: 0
  8944                           ;../../VLCBlib_PIC/mns.c: 304:         nn.bytes.hi = (uint8_t)temp;
  8945   007E76  C098  F0BE         	movff	mnsPowerUp@temp,_nn+1
  8946                           
  8947                           ; BSR set to: 0
  8948                           ;../../VLCBlib_PIC/mns.c: 305:         temp = readNVM(EEPROM_NVM_TYPE, 0x3FC);
  8949   007E7A  0EFC               	movlw	252
  8950   007E7C  6F91               	movwf	readNVM@index& (0+255),b
  8951   007E7E  0E03               	movlw	3
  8952   007E80  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8953   007E82  0E00               	movlw	0
  8954   007E84  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8955   007E86  0E00               	movlw	0
  8956   007E88  ECD0  F059         	call	_readNVM
  8957   007E8C  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  8958   007E90  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  8959                           
  8960                           ;../../VLCBlib_PIC/mns.c: 306:         if (temp < 0) {
  8961   007E94  0100               	movlb	0	; () banked
  8962   007E96  BF99               	btfsc	(mnsPowerUp@temp+1)& (0+255),7,b
  8963   007E98  D7E9               	goto	u24870
  8964                           
  8965                           ; BSR set to: 0
  8966                           ;../../VLCBlib_PIC/mns.c: 310:             nn.bytes.lo = (uint8_t)temp;
  8967   007E9A  C098  F0BD         	movff	mnsPowerUp@temp,_nn
  8968   007E9E                     l23397:
  8969                           
  8970                           ; BSR set to: 0
  8971                           ;../../VLCBlib_PIC/mns.c: 313:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FB);
  8972   007E9E  0EFB               	movlw	251
  8973   007EA0  6F91               	movwf	readNVM@index& (0+255),b
  8974   007EA2  0E03               	movlw	3
  8975   007EA4  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8976   007EA6  0E00               	movlw	0
  8977   007EA8  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8978   007EAA  0E00               	movlw	0
  8979   007EAC  ECD0  F059         	call	_readNVM
  8980   007EB0  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  8981   007EB4  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  8982                           
  8983                           ;../../VLCBlib_PIC/mns.c: 314:     if (temp < 0) {
  8984   007EB8  0100               	movlb	0	; () banked
  8985   007EBA  AF99               	btfss	(mnsPowerUp@temp+1)& (0+255),7,b
  8986   007EBC  D002               	goto	l1438
  8987                           
  8988                           ; BSR set to: 0
  8989                           ;../../VLCBlib_PIC/mns.c: 315:         mode_state = MODE_UNINITIALISED;
  8990   007EBE  69C5               	setf	_mode_state& (0+255),b
  8991                           
  8992                           ;../../VLCBlib_PIC/mns.c: 316:     } else {
  8993   007EC0  D002               	goto	l1439
  8994   007EC2                     l1438:
  8995                           
  8996                           ; BSR set to: 0
  8997                           ;../../VLCBlib_PIC/mns.c: 317:         mode_state = (uint8_t)temp;
  8998   007EC2  C098  F0C5         	movff	mnsPowerUp@temp,_mode_state
  8999   007EC6                     l1439:
  9000                           
  9001                           ; BSR set to: 0
  9002                           ;../../VLCBlib_PIC/mns.c: 319:     setupModePreviousMode = mode_state;
  9003   007EC6  C0C5  F165         	movff	_mode_state,_setupModePreviousMode
  9004                           
  9005                           ; BSR set to: 0
  9006                           ;../../VLCBlib_PIC/mns.c: 320:     temp = readNVM(EEPROM_NVM_TYPE, 0x3F9);
  9007   007ECA  0EF9               	movlw	249
  9008   007ECC  6F91               	movwf	readNVM@index& (0+255),b
  9009   007ECE  0E03               	movlw	3
  9010   007ED0  6F92               	movwf	(readNVM@index+1)& (0+255),b
  9011   007ED2  0E00               	movlw	0
  9012   007ED4  6F93               	movwf	(readNVM@index+2)& (0+255),b
  9013   007ED6  0E00               	movlw	0
  9014   007ED8  ECD0  F059         	call	_readNVM
  9015   007EDC  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  9016   007EE0  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  9017                           
  9018                           ;../../VLCBlib_PIC/mns.c: 321:     if (temp < 0) {
  9019   007EE4  0100               	movlb	0	; () banked
  9020   007EE6  AF99               	btfss	(mnsPowerUp@temp+1)& (0+255),7,b
  9021   007EE8  D004               	goto	l1440
  9022                           
  9023                           ; BSR set to: 0
  9024                           ;../../VLCBlib_PIC/mns.c: 322:         mode_flags = 4;
  9025   007EEA  0E04               	movlw	4
  9026   007EEC  0101               	movlb	1	; () banked
  9027   007EEE  6F66               	movwf	_mode_flags& (0+255),b
  9028                           
  9029                           ;../../VLCBlib_PIC/mns.c: 323:     } else {
  9030   007EF0  D002               	goto	l23409
  9031   007EF2                     l1440:
  9032                           
  9033                           ; BSR set to: 0
  9034                           ;../../VLCBlib_PIC/mns.c: 324:         mode_flags = (uint8_t)temp;
  9035   007EF2  C098  F166         	movff	mnsPowerUp@temp,_mode_flags
  9036   007EF6                     l23409:
  9037                           
  9038                           ;../../VLCBlib_PIC/mns.c: 327:     setLEDsByMode();
  9039   007EF6  EC50  F05F         	call	_setLEDsByMode	;wreg free
  9040                           
  9041                           ;../../VLCBlib_PIC/mns.c: 329:     pbTimer.val = tickGet();
  9042   007EFA  ECE4  F05A         	call	_tickGet	;wreg free
  9043   007EFE  C08D  F033         	movff	?_tickGet,_pbTimer
  9044   007F02  C08E  F034         	movff	?_tickGet+1,_pbTimer+1
  9045   007F06  C08F  F035         	movff	?_tickGet+2,_pbTimer+2
  9046   007F0A  C090  F036         	movff	?_tickGet+3,_pbTimer+3
  9047                           
  9048                           ;../../VLCBlib_PIC/mns.c: 333:     for (i=1; i<= 6; i++) {
  9049   007F0E  0E01               	movlw	1
  9050   007F10  0100               	movlb	0	; () banked
  9051   007F12  6F97               	movwf	mnsPowerUp@i& (0+255),b
  9052   007F14                     l23417:
  9053                           
  9054                           ; BSR set to: 0
  9055                           ;../../VLCBlib_PIC/mns.c: 334:         mnsDiagnostics[i].asInt = 0;
  9056   007F14  5197               	movf	mnsPowerUp@i& (0+255),w,b
  9057   007F16  0D02               	mullw	2
  9058   007F18  0E8D               	movlw	low _mnsDiagnostics
  9059   007F1A  24F3               	addwf	243,w,c
  9060   007F1C  6ED9               	movwf	fsr2l,c
  9061   007F1E  0E01               	movlw	high _mnsDiagnostics
  9062   007F20  20F4               	addwfc	prodh,w,c
  9063   007F22  6EDA               	movwf	fsr2h,c
  9064   007F24  6ADE               	clrf	postinc2,c
  9065   007F26  6ADD               	clrf	postdec2,c
  9066                           
  9067                           ; BSR set to: 0
  9068                           ;../../VLCBlib_PIC/mns.c: 335:     }
  9069   007F28  2B97               	incf	mnsPowerUp@i& (0+255),f,b
  9070                           
  9071                           ; BSR set to: 0
  9072   007F2A  0E06               	movlw	6
  9073   007F2C  6597               	cpfsgt	mnsPowerUp@i& (0+255),b
  9074   007F2E  D7F2               	goto	l23417
  9075                           
  9076                           ; BSR set to: 0
  9077                           ;../../VLCBlib_PIC/mns.c: 336:     mnsDiagnostics[0x00].asInt = 6;
  9078   007F30  0E00               	movlw	0
  9079   007F32  0101               	movlb	1	; () banked
  9080   007F34  6F8E               	movwf	(_mnsDiagnostics+1)& (0+255),b
  9081   007F36  0E06               	movlw	6
  9082   007F38  6F8D               	movwf	_mnsDiagnostics& (0+255),b
  9083                           
  9084                           ;../../VLCBlib_PIC/mns.c: 338:     heartbeatSequence = 0;
  9085   007F3A  0E00               	movlw	0
  9086   007F3C  6E45               	movwf	_heartbeatSequence^0,c
  9087                           
  9088                           ;../../VLCBlib_PIC/mns.c: 339:     heartbeatTimer.val = 0;
  9089   007F3E  0E00               	movlw	0
  9090   007F40  6F50               	movwf	_heartbeatTimer& (0+255),b
  9091   007F42  0E00               	movlw	0
  9092   007F44  6F51               	movwf	(_heartbeatTimer+1)& (0+255),b
  9093   007F46  0E00               	movlw	0
  9094   007F48  6F52               	movwf	(_heartbeatTimer+2)& (0+255),b
  9095   007F4A  0E00               	movlw	0
  9096   007F4C  6F53               	movwf	(_heartbeatTimer+3)& (0+255),b
  9097                           
  9098                           ;../../VLCBlib_PIC/mns.c: 340:     uptimeTimer.val = 0;
  9099   007F4E  0E00               	movlw	0
  9100   007F50  6F4C               	movwf	_uptimeTimer& (0+255),b
  9101   007F52  0E00               	movlw	0
  9102   007F54  6F4D               	movwf	(_uptimeTimer+1)& (0+255),b
  9103   007F56  0E00               	movlw	0
  9104   007F58  6F4E               	movwf	(_uptimeTimer+2)& (0+255),b
  9105   007F5A  0E00               	movlw	0
  9106   007F5C  6F4F               	movwf	(_uptimeTimer+3)& (0+255),b
  9107                           
  9108                           ; BSR set to: 1
  9109   007F5E  0012               	return		;funcret
  9110   007F60                     __end_of_mnsPowerUp:
  9111                           	callstack 0
  9112                           
  9113 ;; *************** function _ackPowerUp *****************
  9114 ;; Defined at:
  9115 ;;		line 97 in file "../../VLCBlib_PIC/event_acknowledge.c"
  9116 ;; Parameters:    Size  Location     Type
  9117 ;;		None
  9118 ;; Auto vars:     Size  Location     Type
  9119 ;;  i               1   45[BANK0 ] unsigned char 
  9120 ;; Return value:  Size  Location     Type
  9121 ;;                  1    wreg      void 
  9122 ;; Registers used:
  9123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9124 ;; Tracked objects:
  9125 ;;		On entry : 0/0
  9126 ;;		On exit  : 0/0
  9127 ;;		Unchanged: 0/0
  9128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9130 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9132 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9133 ;;Total ram usage:        1 bytes
  9134 ;; Hardware stack levels used: 1
  9135 ;; Hardware stack levels required when called: 12
  9136 ;; This function calls:
  9137 ;;		Nothing
  9138 ;; This function is called by:
  9139 ;;		_powerUp
  9140 ;; This function uses a non-reentrant model
  9141 ;;
  9142                           
  9143                           	psect	text12
  9144   00C050                     __ptext12:
  9145                           	callstack 0
  9146   00C050                     _ackPowerUp:
  9147                           	callstack 17
  9148                           
  9149                           ;../../VLCBlib_PIC/event_acknowledge.c: 98:     uint8_t i;;../../VLCBlib_PIC/event_ackno
      +                          wledge.c: 101:     for (i=1; i<= 1; i++) {
  9150                           
  9151                           ; BSR set to: 1
  9152                           ;incstack = 0
  9153   00C050  0E01               	movlw	1
  9154   00C052  0100               	movlb	0	; () banked
  9155   00C054  6F8D               	movwf	ackPowerUp@i& (0+255),b
  9156   00C056                     l23297:
  9157                           
  9158                           ; BSR set to: 0
  9159                           ;../../VLCBlib_PIC/event_acknowledge.c: 102:         ackDiagnostics[i].asUint = 0;
  9160   00C056  518D               	movf	ackPowerUp@i& (0+255),w,b
  9161   00C058  0D02               	mullw	2
  9162   00C05A  0EB2               	movlw	low _ackDiagnostics
  9163   00C05C  24F3               	addwf	243,w,c
  9164   00C05E  6ED9               	movwf	fsr2l,c
  9165   00C060  0E01               	movlw	high _ackDiagnostics
  9166   00C062  20F4               	addwfc	prodh,w,c
  9167   00C064  6EDA               	movwf	fsr2h,c
  9168   00C066  6ADE               	clrf	postinc2,c
  9169   00C068  6ADD               	clrf	postdec2,c
  9170                           
  9171                           ; BSR set to: 0
  9172                           ;../../VLCBlib_PIC/event_acknowledge.c: 103:     }
  9173   00C06A  2B8D               	incf	ackPowerUp@i& (0+255),f,b
  9174                           
  9175                           ; BSR set to: 0
  9176   00C06C  0E01               	movlw	1
  9177   00C06E  658D               	cpfsgt	ackPowerUp@i& (0+255),b
  9178   00C070  D7F2               	goto	l23297
  9179                           
  9180                           ; BSR set to: 0
  9181                           ;../../VLCBlib_PIC/event_acknowledge.c: 104:     ackDiagnostics[0x00].asUint = 1;
  9182   00C072  0E00               	movlw	0
  9183   00C074  0101               	movlb	1	; () banked
  9184   00C076  6FB3               	movwf	(_ackDiagnostics+1)& (0+255),b
  9185   00C078  0E01               	movlw	1
  9186   00C07A  6FB2               	movwf	_ackDiagnostics& (0+255),b
  9187                           
  9188                           ; BSR set to: 1
  9189   00C07C  0012               	return		;funcret
  9190   00C07E                     __end_of_ackPowerUp:
  9191                           	callstack 0
  9192                           
  9193 ;; *************** function _bootPowerUp *****************
  9194 ;; Defined at:
  9195 ;;		line 195 in file "../../VLCBlib_PIC/boot.c"
  9196 ;; Parameters:    Size  Location     Type
  9197 ;;		None
  9198 ;; Auto vars:     Size  Location     Type
  9199 ;;  a               3   58[BANK0 ] unsigned um
  9200 ;;  i               1   57[BANK0 ] unsigned char 
  9201 ;;  found           1   56[BANK0 ] unsigned char 
  9202 ;;  b               1   55[BANK0 ] unsigned char 
  9203 ;; Return value:  Size  Location     Type
  9204 ;;                  1    wreg      void 
  9205 ;; Registers used:
  9206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9207 ;; Tracked objects:
  9208 ;;		On entry : 0/0
  9209 ;;		On exit  : 0/0
  9210 ;;		Unchanged: 0/0
  9211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9213 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9215 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9216 ;;Total ram usage:        6 bytes
  9217 ;; Hardware stack levels used: 1
  9218 ;; Hardware stack levels required when called: 14
  9219 ;; This function calls:
  9220 ;;		_readNVM
  9221 ;; This function is called by:
  9222 ;;		_powerUp
  9223 ;; This function uses a non-reentrant model
  9224 ;;
  9225                           
  9226                           	psect	text13
  9227   00912C                     __ptext13:
  9228                           	callstack 0
  9229   00912C                     _bootPowerUp:
  9230                           	callstack 15
  9231                           
  9232                           ;../../VLCBlib_PIC/boot.c: 196:     uint24_t a;;../../VLCBlib_PIC/boot.c: 197:     uint8
      +                          _t i;;../../VLCBlib_PIC/boot.c: 198:     uint8_t b;;../../VLCBlib_PIC/boot.c: 199:     u
      +                          int8_t found;;../../VLCBlib_PIC/boot.c: 201:     bootloaderType = 0;
  9233                           
  9234                           ; BSR set to: 1
  9235                           ;incstack = 0
  9236   00912C  0E00               	movlw	0
  9237   00912E  0100               	movlb	0	; () banked
  9238   009130  6FC8               	movwf	_bootloaderType& (0+255),b
  9239                           
  9240                           ;../../VLCBlib_PIC/boot.c: 202:     bootloaderVersion = 0;
  9241   009132  0E00               	movlw	0
  9242   009134  6E48               	movwf	_bootloaderVersion^0,c
  9243                           
  9244                           ;../../VLCBlib_PIC/boot.c: 205:     for (a=0; a<0x7FF; a++) {
  9245   009136  0E00               	movlw	0
  9246   009138  6F9A               	movwf	bootPowerUp@a& (0+255),b
  9247   00913A  0E00               	movlw	0
  9248   00913C  6F9B               	movwf	(bootPowerUp@a+1)& (0+255),b
  9249   00913E  0E00               	movlw	0
  9250   009140  6F9C               	movwf	(bootPowerUp@a+2)& (0+255),b
  9251   009142                     l23229:
  9252                           
  9253                           ; BSR set to: 0
  9254                           ;../../VLCBlib_PIC/boot.c: 206:         found = 1;
  9255   009142  0E01               	movlw	1
  9256   009144  6F98               	movwf	bootPowerUp@found& (0+255),b
  9257                           
  9258                           ;../../VLCBlib_PIC/boot.c: 207:         for (i=0; i<11; i++) {
  9259   009146  0E00               	movlw	0
  9260   009148  6F99               	movwf	bootPowerUp@i& (0+255),b
  9261   00914A                     l23235:
  9262                           
  9263                           ; BSR set to: 0
  9264                           ;../../VLCBlib_PIC/boot.c: 208:             b = (uint8_t)readNVM(FLASH_NVM_TYPE, a+i);
  9265   00914A  5199               	movf	bootPowerUp@i& (0+255),w,b
  9266   00914C  259A               	addwf	bootPowerUp@a& (0+255),w,b
  9267   00914E  6F91               	movwf	readNVM@index& (0+255),b
  9268   009150  0E00               	movlw	0
  9269   009152  219B               	addwfc	(bootPowerUp@a+1)& (0+255),w,b
  9270   009154  6F92               	movwf	(readNVM@index+1)& (0+255),b
  9271   009156  0E00               	movlw	0
  9272   009158  219C               	addwfc	(bootPowerUp@a+2)& (0+255),w,b
  9273   00915A  6F93               	movwf	(readNVM@index+2)& (0+255),b
  9274   00915C  0E01               	movlw	1
  9275   00915E  ECD0  F059         	call	_readNVM
  9276   009162  0100               	movlb	0	; () banked
  9277   009164  5191               	movf	?_readNVM& (0+255),w,b
  9278   009166  6F97               	movwf	bootPowerUp@b& (0+255),b
  9279                           
  9280                           ; BSR set to: 0
  9281                           ;../../VLCBlib_PIC/boot.c: 209:             if (b != bl_version[i]) {
  9282   009168  0E7B               	movlw	low _bl_version
  9283   00916A  2599               	addwf	bootPowerUp@i& (0+255),w,b
  9284   00916C  6EF6               	movwf	tblptrl,c
  9285   00916E  6AF7               	clrf	tblptrh,c
  9286   009170  0EEE               	movlw	high _bl_version
  9287   009172  22F7               	addwfc	tblptrh,f,c
  9288   009174                     	if	1	;There are 3 active tblptr bytes
  9289   009174  6AF8               	clrf	tblptru,c
  9290   009176  0E00               	movlw	low (__mediumconst shr (0+16))
  9291   009178  22F8               	addwfc	tblptru,f,c
  9292   00917A                     	endif
  9293   00917A  0008               	tblrd		*
  9294   00917C  50F5               	movf	tablat,w,c
  9295   00917E  1997               	xorwf	bootPowerUp@b& (0+255),w,b
  9296   009180  B4D8               	btfsc	status,2,c
  9297   009182  D003               	goto	l23241
  9298                           
  9299                           ; BSR set to: 0
  9300                           ;../../VLCBlib_PIC/boot.c: 210:                 found = 0;
  9301   009184  0E00               	movlw	0
  9302   009186  6F98               	movwf	bootPowerUp@found& (0+255),b
  9303                           
  9304                           ;../../VLCBlib_PIC/boot.c: 211:                 break;
  9305   009188  D004               	goto	u24690
  9306   00918A                     l23241:
  9307                           
  9308                           ; BSR set to: 0
  9309                           ;../../VLCBlib_PIC/boot.c: 213:         }
  9310   00918A  2B99               	incf	bootPowerUp@i& (0+255),f,b
  9311                           
  9312                           ; BSR set to: 0
  9313   00918C  0E0A               	movlw	10
  9314   00918E  6599               	cpfsgt	bootPowerUp@i& (0+255),b
  9315   009190  D7DC               	goto	l23235
  9316   009192                     u24690:
  9317                           
  9318                           ; BSR set to: 0
  9319                           ;../../VLCBlib_PIC/boot.c: 214:         if (found) {
  9320   009192  5198               	movf	bootPowerUp@found& (0+255),w,b
  9321   009194  B4D8               	btfsc	status,2,c
  9322   009196  D01F               	goto	l1255
  9323                           
  9324                           ; BSR set to: 0
  9325                           ;../../VLCBlib_PIC/boot.c: 215:             bootloaderType = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, a+11);
  9326   009198  0E0B               	movlw	11
  9327   00919A  259A               	addwf	bootPowerUp@a& (0+255),w,b
  9328   00919C  6F91               	movwf	readNVM@index& (0+255),b
  9329   00919E  0E00               	movlw	0
  9330   0091A0  219B               	addwfc	(bootPowerUp@a+1)& (0+255),w,b
  9331   0091A2  6F92               	movwf	(readNVM@index+1)& (0+255),b
  9332   0091A4  0E00               	movlw	0
  9333   0091A6  219C               	addwfc	(bootPowerUp@a+2)& (0+255),w,b
  9334   0091A8  6F93               	movwf	(readNVM@index+2)& (0+255),b
  9335   0091AA  0E01               	movlw	1
  9336   0091AC  ECD0  F059         	call	_readNVM
  9337   0091B0  0100               	movlb	0	; () banked
  9338   0091B2  5191               	movf	?_readNVM& (0+255),w,b
  9339   0091B4  6FC8               	movwf	_bootloaderType& (0+255),b
  9340                           
  9341                           ;../../VLCBlib_PIC/boot.c: 216:             bootloaderVersion = (uint8_t)readNVM(FLASH_N
      +                          VM_TYPE, a+12);
  9342   0091B6  0E0C               	movlw	12
  9343   0091B8  259A               	addwf	bootPowerUp@a& (0+255),w,b
  9344   0091BA  6F91               	movwf	readNVM@index& (0+255),b
  9345   0091BC  0E00               	movlw	0
  9346   0091BE  219B               	addwfc	(bootPowerUp@a+1)& (0+255),w,b
  9347   0091C0  6F92               	movwf	(readNVM@index+1)& (0+255),b
  9348   0091C2  0E00               	movlw	0
  9349   0091C4  219C               	addwfc	(bootPowerUp@a+2)& (0+255),w,b
  9350   0091C6  6F93               	movwf	(readNVM@index+2)& (0+255),b
  9351   0091C8  0E01               	movlw	1
  9352   0091CA  ECD0  F059         	call	_readNVM
  9353   0091CE  0100               	movlb	0	; () banked
  9354   0091D0  5191               	movf	?_readNVM& (0+255),w,b
  9355   0091D2  6E48               	movwf	_bootloaderVersion^0,c
  9356   0091D4  0012               	return	
  9357   0091D6                     l1255:
  9358                           
  9359                           ; BSR set to: 0
  9360                           ;../../VLCBlib_PIC/boot.c: 219:     }
  9361   0091D6  0E01               	movlw	1
  9362   0091D8  279A               	addwf	bootPowerUp@a& (0+255),f,b
  9363   0091DA  0E00               	movlw	0
  9364   0091DC  239B               	addwfc	(bootPowerUp@a+1)& (0+255),f,b
  9365   0091DE  0E00               	movlw	0
  9366   0091E0  239C               	addwfc	(bootPowerUp@a+2)& (0+255),f,b
  9367                           
  9368                           ; BSR set to: 0
  9369   0091E2  519C               	movf	(bootPowerUp@a+2)& (0+255),w,b
  9370   0091E4  E106               	bnz	u24710
  9371   0091E6  299A               	incf	bootPowerUp@a& (0+255),w,b
  9372   0091E8  0E07               	movlw	7
  9373   0091EA  599B               	subwfb	(bootPowerUp@a+1)& (0+255),w,b
  9374   0091EC  B0D8               	btfsc	status,0,c
  9375   0091EE  0012               	return	
  9376   0091F0  D7A8               	goto	l23229
  9377   0091F2                     u24710:
  9378                           
  9379                           ; BSR set to: 0
  9380   0091F2  0012               	return		;funcret
  9381   0091F4                     __end_of_bootPowerUp:
  9382                           	callstack 0
  9383                           
  9384 ;; *************** function _consumer2QPowerUp *****************
  9385 ;; Defined at:
  9386 ;;		line 109 in file "../event_consumerDualActionQueue.c"
  9387 ;; Parameters:    Size  Location     Type
  9388 ;;		None
  9389 ;; Auto vars:     Size  Location     Type
  9390 ;;		None
  9391 ;; Return value:  Size  Location     Type
  9392 ;;                  1    wreg      void 
  9393 ;; Registers used:
  9394 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9395 ;; Tracked objects:
  9396 ;;		On entry : 0/0
  9397 ;;		On exit  : 0/0
  9398 ;;		Unchanged: 0/0
  9399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9404 ;;Total ram usage:        0 bytes
  9405 ;; Hardware stack levels used: 1
  9406 ;; Hardware stack levels required when called: 12
  9407 ;; This function calls:
  9408 ;;		Nothing
  9409 ;; This function is called by:
  9410 ;;		_powerUp
  9411 ;; This function uses a non-reentrant model
  9412 ;;
  9413                           
  9414                           	psect	text14
  9415   00BACC                     __ptext14:
  9416                           	callstack 0
  9417   00BACC                     _consumer2QPowerUp:
  9418                           	callstack 17
  9419                           
  9420                           ;../event_consumerDualActionQueue.c: 110:     for (normalReadIndex=1; normalReadIndex <=
      +                           1; normalReadIndex++) {
  9421                           
  9422                           ; BSR set to: 0
  9423                           ;incstack = 0
  9424   00BACC  0E01               	movlw	1
  9425   00BACE  0100               	movlb	0	; () banked
  9426   00BAD0  6FCD               	movwf	_normalReadIndex& (0+255),b
  9427   00BAD2                     l23031:
  9428                           
  9429                           ; BSR set to: 0
  9430   00BAD2  0E01               	movlw	1
  9431   00BAD4  65CD               	cpfsgt	_normalReadIndex& (0+255),b
  9432   00BAD6  D001               	goto	l23035
  9433   00BAD8  D00C               	goto	l23041
  9434   00BADA                     l23035:
  9435                           
  9436                           ; BSR set to: 0
  9437                           ;../event_consumerDualActionQueue.c: 111:         consumer2QDiagnostics[normalReadIndex]
      +                          .asUint = 0;
  9438   00BADA  51CD               	movf	_normalReadIndex& (0+255),w,b
  9439   00BADC  0D02               	mullw	2
  9440   00BADE  0EB6               	movlw	low _consumer2QDiagnostics
  9441   00BAE0  24F3               	addwf	243,w,c
  9442   00BAE2  6ED9               	movwf	fsr2l,c
  9443   00BAE4  0E01               	movlw	high _consumer2QDiagnostics
  9444   00BAE6  20F4               	addwfc	prodh,w,c
  9445   00BAE8  6EDA               	movwf	fsr2h,c
  9446   00BAEA  6ADE               	clrf	postinc2,c
  9447   00BAEC  6ADD               	clrf	postdec2,c
  9448                           
  9449                           ; BSR set to: 0
  9450                           ;../event_consumerDualActionQueue.c: 112:     }
  9451   00BAEE  2BCD               	incf	_normalReadIndex& (0+255),f,b
  9452   00BAF0  D7F0               	goto	l23031
  9453   00BAF2                     l23041:
  9454                           
  9455                           ; BSR set to: 0
  9456                           ;../event_consumerDualActionQueue.c: 113:     consumer2QDiagnostics[0].asUint = 1;
  9457   00BAF2  0E00               	movlw	0
  9458   00BAF4  0101               	movlb	1	; () banked
  9459   00BAF6  6FB7               	movwf	(_consumer2QDiagnostics+1)& (0+255),b
  9460   00BAF8  0E01               	movlw	1
  9461   00BAFA  6FB6               	movwf	_consumer2QDiagnostics& (0+255),b
  9462                           
  9463                           ;../event_consumerDualActionQueue.c: 115:     normalReadIndex = 0;
  9464   00BAFC  0E00               	movlw	0
  9465   00BAFE  0100               	movlb	0	; () banked
  9466   00BB00  6FCD               	movwf	_normalReadIndex& (0+255),b
  9467                           
  9468                           ;../event_consumerDualActionQueue.c: 116:     normalWriteIndex = 0;
  9469   00BB02  0E00               	movlw	0
  9470   00BB04  6FCC               	movwf	_normalWriteIndex& (0+255),b
  9471                           
  9472                           ;../event_consumerDualActionQueue.c: 117:     expeditedReadIndex = 0;
  9473   00BB06  0E00               	movlw	0
  9474   00BB08  6FCB               	movwf	_expeditedReadIndex& (0+255),b
  9475                           
  9476                           ;../event_consumerDualActionQueue.c: 118:     expeditedWriteIndex = 0;
  9477   00BB0A  0E00               	movlw	0
  9478   00BB0C  6FCA               	movwf	_expeditedWriteIndex& (0+255),b
  9479                           
  9480                           ;../event_consumerDualActionQueue.c: 120:     expedited = FALSE;
  9481   00BB0E  0E00               	movlw	0
  9482   00BB10  6E49               	movwf	_expedited^0,c
  9483                           
  9484                           ; BSR set to: 0
  9485   00BB12  0012               	return		;funcret
  9486   00BB14                     __end_of_consumer2QPowerUp:
  9487                           	callstack 0
  9488                           
  9489 ;; *************** function _teachPowerUp *****************
  9490 ;; Defined at:
  9491 ;;		line 359 in file "../../VLCBlib_PIC/event_teach_large.c"
  9492 ;; Parameters:    Size  Location     Type
  9493 ;;		None
  9494 ;; Auto vars:     Size  Location     Type
  9495 ;;  i               1    9[BANK1 ] unsigned char 
  9496 ;; Return value:  Size  Location     Type
  9497 ;;                  1    wreg      void 
  9498 ;; Registers used:
  9499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9500 ;; Tracked objects:
  9501 ;;		On entry : 0/0
  9502 ;;		On exit  : 0/0
  9503 ;;		Unchanged: 0/0
  9504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9506 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9508 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9509 ;;Total ram usage:        1 bytes
  9510 ;; Hardware stack levels used: 1
  9511 ;; Hardware stack levels required when called: 17
  9512 ;; This function calls:
  9513 ;;		_rebuildHashtable
  9514 ;; This function is called by:
  9515 ;;		_powerUp
  9516 ;; This function uses a non-reentrant model
  9517 ;;
  9518                           
  9519                           	psect	text15
  9520   00BE6E                     __ptext15:
  9521                           	callstack 0
  9522   00BE6E                     _teachPowerUp:
  9523                           	callstack 12
  9524                           
  9525                           ;../../VLCBlib_PIC/event_teach_large.c: 360:     uint8_t i;;../../VLCBlib_PIC/event_teac
      +                          h_large.c: 362:     rebuildHashtable();
  9526                           
  9527                           ; BSR set to: 0
  9528                           ;incstack = 0
  9529   00BE6E  EC93  F03E         	call	_rebuildHashtable	;wreg free
  9530                           
  9531                           ;../../VLCBlib_PIC/event_teach_large.c: 366:     for (i=1; i<= 1; i++) {
  9532   00BE72  0E01               	movlw	1
  9533   00BE74  0101               	movlb	1	; () banked
  9534   00BE76  6FC3               	movwf	teachPowerUp@i& (0+255),b
  9535   00BE78                     l24355:
  9536                           
  9537                           ; BSR set to: 1
  9538                           ;../../VLCBlib_PIC/event_teach_large.c: 367:         teachDiagnostics[i].asUint = 0;
  9539   00BE78  51C3               	movf	teachPowerUp@i& (0+255),w,b
  9540   00BE7A  0D02               	mullw	2
  9541   00BE7C  0EAE               	movlw	low _teachDiagnostics
  9542   00BE7E  24F3               	addwf	243,w,c
  9543   00BE80  6ED9               	movwf	fsr2l,c
  9544   00BE82  0E01               	movlw	high _teachDiagnostics
  9545   00BE84  20F4               	addwfc	prodh,w,c
  9546   00BE86  6EDA               	movwf	fsr2h,c
  9547   00BE88  6ADE               	clrf	postinc2,c
  9548   00BE8A  6ADD               	clrf	postdec2,c
  9549                           
  9550                           ; BSR set to: 1
  9551                           ;../../VLCBlib_PIC/event_teach_large.c: 368:     }
  9552   00BE8C  2BC3               	incf	teachPowerUp@i& (0+255),f,b
  9553                           
  9554                           ; BSR set to: 1
  9555   00BE8E  0E01               	movlw	1
  9556   00BE90  65C3               	cpfsgt	teachPowerUp@i& (0+255),b
  9557   00BE92  D7F2               	goto	l24355
  9558                           
  9559                           ; BSR set to: 1
  9560                           ;../../VLCBlib_PIC/event_teach_large.c: 369:     teachDiagnostics[0x00].asUint = 1;
  9561   00BE94  0E00               	movlw	0
  9562   00BE96  6FAF               	movwf	(_teachDiagnostics+1)& (0+255),b
  9563   00BE98  0E01               	movlw	1
  9564   00BE9A  6FAE               	movwf	_teachDiagnostics& (0+255),b
  9565                           
  9566                           ; BSR set to: 1
  9567                           ;../../VLCBlib_PIC/event_teach_large.c: 371:     mode_flags &= ~1;
  9568   00BE9C  9166               	bcf	_mode_flags& (0+255),0,b
  9569                           
  9570                           ; BSR set to: 1
  9571   00BE9E  0012               	return		;funcret
  9572   00BEA0                     __end_of_teachPowerUp:
  9573                           	callstack 0
  9574                           
  9575 ;; *************** function _leds_powerUp *****************
  9576 ;; Defined at:
  9577 ;;		line 77 in file "../../VLCBlib_PIC/statusLeds2.c"
  9578 ;; Parameters:    Size  Location     Type
  9579 ;;		None
  9580 ;; Auto vars:     Size  Location     Type
  9581 ;;		None
  9582 ;; Return value:  Size  Location     Type
  9583 ;;                  1    wreg      void 
  9584 ;; Registers used:
  9585 ;;		wreg, status,2, status,0, cstack
  9586 ;; Tracked objects:
  9587 ;;		On entry : 0/0
  9588 ;;		On exit  : 0/0
  9589 ;;		Unchanged: 0/0
  9590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9595 ;;Total ram usage:        0 bytes
  9596 ;; Hardware stack levels used: 1
  9597 ;; Hardware stack levels required when called: 13
  9598 ;; This function calls:
  9599 ;;		_tickGet
  9600 ;; This function is called by:
  9601 ;;		_powerUp
  9602 ;; This function uses a non-reentrant model
  9603 ;;
  9604                           
  9605                           	psect	text16
  9606   00BED2                     __ptext16:
  9607                           	callstack 0
  9608   00BED2                     _leds_powerUp:
  9609                           	callstack 16
  9610                           
  9611                           ;../../VLCBlib_PIC/statusLeds2.c: 79:     {ANCON0=ANCON1=0; TRISBbits.TRISB6=TRISBbits.T
      +                          RISB7=0,TRISAbits.TRISA2=1;};
  9612                           
  9613                           ; BSR set to: 1
  9614                           ;incstack = 0
  9615   00BED2  0E00               	movlw	0
  9616   00BED4  010F               	movlb	15	; () banked
  9617   00BED6  6F5C               	movwf	92,b	;volatile
  9618   00BED8  CF5C FF5D          	movff	3932,3933	;volatile
  9619                           
  9620                           ; BSR set to: 15
  9621   00BEDC  9E93               	bcf	147,7,c	;volatile
  9622   00BEDE  9C93               	bcf	147,6,c	;volatile
  9623                           
  9624                           ; BSR set to: 15
  9625   00BEE0  8492               	bsf	146,2,c	;volatile
  9626                           
  9627                           ;../../VLCBlib_PIC/statusLeds2.c: 80:     flashCounter[0] = 0;
  9628   00BEE2  0E00               	movlw	0
  9629   00BEE4  0100               	movlb	0	; () banked
  9630   00BEE6  6FB9               	movwf	_flashCounter& (0+255),b
  9631                           
  9632                           ;../../VLCBlib_PIC/statusLeds2.c: 81:     flashCounter[1] = 0;
  9633   00BEE8  0E00               	movlw	0
  9634   00BEEA  6FBA               	movwf	(_flashCounter+1)& (0+255),b
  9635                           
  9636                           ; BSR set to: 0
  9637                           ;../../VLCBlib_PIC/statusLeds2.c: 82:     ledTimer.val = tickGet();
  9638   00BEEC  ECE4  F05A         	call	_tickGet	;wreg free
  9639   00BEF0  C08D  F148         	movff	?_tickGet,_ledTimer
  9640   00BEF4  C08E  F149         	movff	?_tickGet+1,_ledTimer+1
  9641   00BEF8  C08F  F14A         	movff	?_tickGet+2,_ledTimer+2
  9642   00BEFC  C090  F14B         	movff	?_tickGet+3,_ledTimer+3
  9643   00BF00  0012               	return		;funcret
  9644   00BF02                     __end_of_leds_powerUp:
  9645                           	callstack 0
  9646                           
  9647 ;; *************** function _initTimedResponse *****************
  9648 ;; Defined at:
  9649 ;;		line 74 in file "../../VLCBlib_PIC/timedResponse.c"
  9650 ;; Parameters:    Size  Location     Type
  9651 ;;		None
  9652 ;; Auto vars:     Size  Location     Type
  9653 ;;		None
  9654 ;; Return value:  Size  Location     Type
  9655 ;;                  1    wreg      void 
  9656 ;; Registers used:
  9657 ;;		None
  9658 ;; Tracked objects:
  9659 ;;		On entry : 0/0
  9660 ;;		On exit  : 0/0
  9661 ;;		Unchanged: 0/0
  9662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9667 ;;Total ram usage:        0 bytes
  9668 ;; Hardware stack levels used: 1
  9669 ;; Hardware stack levels required when called: 12
  9670 ;; This function calls:
  9671 ;;		Nothing
  9672 ;; This function is called by:
  9673 ;;		_powerUp
  9674 ;; This function uses a non-reentrant model
  9675 ;;
  9676                           
  9677                           	psect	text17
  9678   00C62C                     __ptext17:
  9679                           	callstack 0
  9680   00C62C                     _initTimedResponse:
  9681                           	callstack 17
  9682                           
  9683                           ;../../VLCBlib_PIC/timedResponse.c: 75:     timedResponseType = 0xFF;
  9684                           
  9685                           ;incstack = 0
  9686   00C62C  0100               	movlb	0	; () banked
  9687   00C62E  69C3               	setf	_timedResponseType& (0+255),b
  9688                           
  9689                           ; BSR set to: 0
  9690   00C630  0012               	return		;funcret
  9691   00C632                     __end_of_initTimedResponse:
  9692                           	callstack 0
  9693                           
  9694 ;; *************** function _initTicker *****************
  9695 ;; Defined at:
  9696 ;;		line 101 in file "../../VLCBlib_PIC/ticktime.c"
  9697 ;; Parameters:    Size  Location     Type
  9698 ;;  priority        1    wreg     unsigned char 
  9699 ;; Auto vars:     Size  Location     Type
  9700 ;;  priority        1   45[BANK0 ] unsigned char 
  9701 ;;  i               1   47[BANK0 ] unsigned char 
  9702 ;;  divider         1   46[BANK0 ] unsigned char 
  9703 ;; Return value:  Size  Location     Type
  9704 ;;                  1    wreg      void 
  9705 ;; Registers used:
  9706 ;;		wreg, status,2, status,0
  9707 ;; Tracked objects:
  9708 ;;		On entry : 0/0
  9709 ;;		On exit  : 0/0
  9710 ;;		Unchanged: 0/0
  9711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9713 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9715 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9716 ;;Total ram usage:        3 bytes
  9717 ;; Hardware stack levels used: 1
  9718 ;; Hardware stack levels required when called: 12
  9719 ;; This function calls:
  9720 ;;		Nothing
  9721 ;; This function is called by:
  9722 ;;		_powerUp
  9723 ;; This function uses a non-reentrant model
  9724 ;;
  9725                           
  9726                           	psect	text18
  9727   00BB5C                     __ptext18:
  9728                           	callstack 0
  9729   00BB5C                     _initTicker:
  9730                           	callstack 17
  9731                           
  9732                           ; BSR set to: 0
  9733                           ;incstack = 0
  9734                           ;initTicker@priority stored from wreg
  9735   00BB5C  0100               	movlb	0	; () banked
  9736   00BB5E  6F8D               	movwf	initTicker@priority& (0+255),b
  9737                           
  9738                           ;../../VLCBlib_PIC/ticktime.c: 102:     uint8_t divider, i;;../../VLCBlib_PIC/ticktime.c
      +                          : 104:     divider = 0;
  9739   00BB60  0E00               	movlw	0
  9740   00BB62  0100               	movlb	0	; () banked
  9741   00BB64  6F8E               	movwf	initTicker@divider& (0+255),b
  9742                           
  9743                           ;../../VLCBlib_PIC/ticktime.c: 105:     for (i=64;i>0;i>>=1)
  9744   00BB66  0E40               	movlw	64
  9745   00BB68  6F8F               	movwf	initTicker@i& (0+255),b
  9746   00BB6A                     l24047:
  9747                           
  9748                           ; BSR set to: 0
  9749                           ;../../VLCBlib_PIC/ticktime.c: 106:         divider++;
  9750   00BB6A  2B8E               	incf	initTicker@divider& (0+255),f,b
  9751                           
  9752                           ; BSR set to: 0
  9753   00BB6C  90D8               	bcf	status,0,c
  9754   00BB6E  338F               	rrcf	initTicker@i& (0+255),f,b
  9755                           
  9756                           ; BSR set to: 0
  9757   00BB70  518F               	movf	initTicker@i& (0+255),w,b
  9758   00BB72  A4D8               	btfss	status,2,c
  9759   00BB74  D7FA               	goto	l24047
  9760                           
  9761                           ; BSR set to: 0
  9762                           ;../../VLCBlib_PIC/ticktime.c: 109:     T0CON = (uint8_t)(0b00000000 | divider);
  9763   00BB76  C08E  FFD5         	movff	initTicker@divider,4053	;volatile
  9764                           
  9765                           ;../../VLCBlib_PIC/ticktime.c: 110:     T0CONbits.T08BIT = 0;
  9766   00BB7A  9CD5               	bcf	213,6,c	;volatile
  9767                           
  9768                           ;../../VLCBlib_PIC/ticktime.c: 111:     T0CONbits.T0CS = 0;
  9769   00BB7C  9AD5               	bcf	213,5,c	;volatile
  9770                           
  9771                           ; BSR set to: 0
  9772                           ;../../VLCBlib_PIC/ticktime.c: 112:     TMR0H = 0;
  9773   00BB7E  0E00               	movlw	0
  9774   00BB80  6ED7               	movwf	215,c	;volatile
  9775                           
  9776                           ;../../VLCBlib_PIC/ticktime.c: 113:     TMR0L = 0;
  9777   00BB82  0E00               	movlw	0
  9778   00BB84  6ED6               	movwf	214,c	;volatile
  9779                           
  9780                           ; BSR set to: 0
  9781                           ;../../VLCBlib_PIC/ticktime.c: 114:     INTCON2bits.TMR0IP = priority;
  9782   00BB86  B18D               	btfsc	initTicker@priority& (0+255),0,b
  9783   00BB88  D002               	bra	u25605
  9784   00BB8A  94F1               	bcf	241,2,c	;volatile
  9785   00BB8C  D001               	bra	u25606
  9786   00BB8E                     u25605:
  9787   00BB8E  84F1               	bsf	241,2,c	;volatile
  9788   00BB90                     u25606:
  9789                           
  9790                           ;../../VLCBlib_PIC/ticktime.c: 115:     INTCONbits.TMR0IF = 0;
  9791   00BB90  94F2               	bcf	242,2,c	;volatile
  9792                           
  9793                           ;../../VLCBlib_PIC/ticktime.c: 116:     INTCONbits.TMR0IE = 1;
  9794   00BB92  8AF2               	bsf	242,5,c	;volatile
  9795                           
  9796                           ;../../VLCBlib_PIC/ticktime.c: 117:     T0CONbits.TMR0ON = 1;
  9797   00BB94  8ED5               	bsf	213,7,c	;volatile
  9798                           
  9799                           ;../../VLCBlib_PIC/ticktime.c: 119:     timerExtension1 = 0;
  9800   00BB96  0E00               	movlw	0
  9801   00BB98  0100               	movlb	0	; () banked
  9802   00BB9A  6FC7               	movwf	_timerExtension1& (0+255),b	;volatile
  9803                           
  9804                           ;../../VLCBlib_PIC/ticktime.c: 120:     timerExtension2 = 0;
  9805   00BB9C  0E00               	movlw	0
  9806   00BB9E  6FC6               	movwf	_timerExtension2& (0+255),b	;volatile
  9807                           
  9808                           ; BSR set to: 0
  9809   00BBA0  0012               	return		;funcret
  9810   00BBA2                     __end_of_initTicker:
  9811                           	callstack 0
  9812                           
  9813 ;; *************** function _poll *****************
  9814 ;; Defined at:
  9815 ;;		line 993 in file "../../VLCBlib_PIC/vlcb.c"
  9816 ;; Parameters:    Size  Location     Type
  9817 ;;		None
  9818 ;; Auto vars:     Size  Location     Type
  9819 ;;  m               9   36[BANK2 ] struct Message
  9820 ;;  i               1   35[BANK2 ] unsigned char 
  9821 ;;  handled         1   34[BANK2 ] enum E12793
  9822 ;; Return value:  Size  Location     Type
  9823 ;;                  1    wreg      void 
  9824 ;; Registers used:
  9825 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9826 ;; Tracked objects:
  9827 ;;		On entry : 0/0
  9828 ;;		On exit  : 0/0
  9829 ;;		Unchanged: 0/0
  9830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9832 ;;      Locals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9833 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9834 ;;      Totals:         0       0       0      15       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9835 ;;Total ram usage:       15 bytes
  9836 ;; Hardware stack levels used: 1
  9837 ;; Hardware stack levels required when called: 28
  9838 ;; This function calls:
  9839 ;;		NULL
  9840 ;;		_APP_postProcessMessage
  9841 ;;		_APP_preProcessMessage
  9842 ;;		___lmul
  9843 ;;		_ackEventProcessMessage
  9844 ;;		_bootProcessMessage
  9845 ;;		_canProcessMessage
  9846 ;;		_canReceiveMessage
  9847 ;;		_consumer2QProcessMessage
  9848 ;;		_flushFlashBlock
  9849 ;;		_leds_poll
  9850 ;;		_mnsPoll
  9851 ;;		_mnsProcessMessage
  9852 ;;		_nvProcessMessage
  9853 ;;		_pollTimedResponse
  9854 ;;		_producerProcessMessage
  9855 ;;		_showStatus
  9856 ;;		_teachProcessMessage
  9857 ;;		_tickGet
  9858 ;; This function is called by:
  9859 ;;		_main
  9860 ;; This function uses a non-reentrant model
  9861 ;;
  9862                           
  9863                           	psect	text19
  9864   00390C                     __ptext19:
  9865                           	callstack 0
  9866   00390C                     _poll:
  9867                           	callstack 2
  9868                           
  9869                           ;../../VLCBlib_PIC/vlcb.c: 994:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 995:     Messag
      +                          e m;;../../VLCBlib_PIC/vlcb.c: 996:     Processed handled;;../../VLCBlib_PIC/vlcb.c: 999
      +                          :     if ((tickGet() - timedResponseTime.val) > (long)timedResponseDelay*(62500/1000)) {
  9870                           
  9871                           ; BSR set to: 0
  9872                           ;incstack = 0
  9873   00390C  ECE4  F05A         	call	_tickGet	;wreg free
  9874   003910  0101               	movlb	1	; () banked
  9875   003912  5144               	movf	_timedResponseTime& (0+255),w,b
  9876   003914  0100               	movlb	0	; () banked
  9877   003916  5D8D               	subwf	?_tickGet& (0+255),w,b
  9878   003918  0102               	movlb	2	; () banked
  9879   00391A  6FEA               	movwf	??_poll& (0+255),b
  9880   00391C  0101               	movlb	1	; () banked
  9881   00391E  5145               	movf	(_timedResponseTime+1)& (0+255),w,b
  9882   003920  0100               	movlb	0	; () banked
  9883   003922  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
  9884   003924  0102               	movlb	2	; () banked
  9885   003926  6FEB               	movwf	(??_poll+1)& (0+255),b
  9886   003928  0101               	movlb	1	; () banked
  9887   00392A  5146               	movf	(_timedResponseTime+2)& (0+255),w,b
  9888   00392C  0100               	movlb	0	; () banked
  9889   00392E  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
  9890   003930  0102               	movlb	2	; () banked
  9891   003932  6FEC               	movwf	(??_poll+2)& (0+255),b
  9892   003934  0101               	movlb	1	; () banked
  9893   003936  5147               	movf	(_timedResponseTime+3)& (0+255),w,b
  9894   003938  0100               	movlb	0	; () banked
  9895   00393A  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
  9896   00393C  0102               	movlb	2	; () banked
  9897   00393E  6FED               	movwf	(??_poll+3)& (0+255),b
  9898   003940  0101               	movlb	1	; () banked
  9899   003942  5164               	movf	_timedResponseDelay& (0+255),w,b
  9900   003944  0100               	movlb	0	; () banked
  9901   003946  6F91               	movwf	___lmul@multiplier& (0+255),b
  9902   003948  6B92               	clrf	(___lmul@multiplier+1)& (0+255),b
  9903   00394A  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
  9904   00394C  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
  9905   00394E  0E3E               	movlw	62
  9906   003950  6F95               	movwf	___lmul@multiplicand& (0+255),b
  9907   003952  0E00               	movlw	0
  9908   003954  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9909   003956  0E00               	movlw	0
  9910   003958  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9911   00395A  0E00               	movlw	0
  9912   00395C  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9913   00395E  EC10  F05B         	call	___lmul	;wreg free
  9914   003962  0102               	movlb	2	; () banked
  9915   003964  51EA               	movf	??_poll& (0+255),w,b
  9916   003966  0100               	movlb	0	; () banked
  9917   003968  5D91               	subwf	?___lmul& (0+255),w,b
  9918   00396A  0102               	movlb	2	; () banked
  9919   00396C  51EB               	movf	(??_poll+1)& (0+255),w,b
  9920   00396E  0100               	movlb	0	; () banked
  9921   003970  5992               	subwfb	(?___lmul+1)& (0+255),w,b
  9922   003972  0102               	movlb	2	; () banked
  9923   003974  51EC               	movf	(??_poll+2)& (0+255),w,b
  9924   003976  0100               	movlb	0	; () banked
  9925   003978  5993               	subwfb	(?___lmul+2)& (0+255),w,b
  9926   00397A  0102               	movlb	2	; () banked
  9927   00397C  51ED               	movf	(??_poll+3)& (0+255),w,b
  9928   00397E  0100               	movlb	0	; () banked
  9929   003980  5994               	subwfb	(?___lmul+3)& (0+255),w,b
  9930   003982  B0D8               	btfsc	status,0,c
  9931   003984  D00C               	goto	l24855
  9932                           
  9933                           ; BSR set to: 0
  9934                           ;../../VLCBlib_PIC/vlcb.c: 1000:         pollTimedResponse();
  9935   003986  ECE2  F054         	call	_pollTimedResponse	;wreg free
  9936                           
  9937                           ;../../VLCBlib_PIC/vlcb.c: 1001:         timedResponseTime.val = tickGet();
  9938   00398A  ECE4  F05A         	call	_tickGet	;wreg free
  9939   00398E  C08D  F144         	movff	?_tickGet,_timedResponseTime
  9940   003992  C08E  F145         	movff	?_tickGet+1,_timedResponseTime+1
  9941   003996  C08F  F146         	movff	?_tickGet+2,_timedResponseTime+2
  9942   00399A  C090  F147         	movff	?_tickGet+3,_timedResponseTime+3
  9943   00399E                     l24855:
  9944                           
  9945                           ;../../VLCBlib_PIC/vlcb.c: 1003:     if ((tickGet() - flashFlushTime.val) > 62500) {
  9946   00399E  ECE4  F05A         	call	_tickGet	;wreg free
  9947   0039A2  0101               	movlb	1	; () banked
  9948   0039A4  5140               	movf	_flashFlushTime& (0+255),w,b
  9949   0039A6  0100               	movlb	0	; () banked
  9950   0039A8  5D8D               	subwf	?_tickGet& (0+255),w,b
  9951   0039AA  0102               	movlb	2	; () banked
  9952   0039AC  6FEA               	movwf	??_poll& (0+255),b
  9953   0039AE  0101               	movlb	1	; () banked
  9954   0039B0  5141               	movf	(_flashFlushTime+1)& (0+255),w,b
  9955   0039B2  0100               	movlb	0	; () banked
  9956   0039B4  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
  9957   0039B6  0102               	movlb	2	; () banked
  9958   0039B8  6FEB               	movwf	(??_poll+1)& (0+255),b
  9959   0039BA  0101               	movlb	1	; () banked
  9960   0039BC  5142               	movf	(_flashFlushTime+2)& (0+255),w,b
  9961   0039BE  0100               	movlb	0	; () banked
  9962   0039C0  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
  9963   0039C2  0102               	movlb	2	; () banked
  9964   0039C4  6FEC               	movwf	(??_poll+2)& (0+255),b
  9965   0039C6  0101               	movlb	1	; () banked
  9966   0039C8  5143               	movf	(_flashFlushTime+3)& (0+255),w,b
  9967   0039CA  0100               	movlb	0	; () banked
  9968   0039CC  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
  9969   0039CE  0102               	movlb	2	; () banked
  9970   0039D0  6FED               	movwf	(??_poll+3)& (0+255),b
  9971   0039D2  51ED               	movf	(??_poll+3)& (0+255),w,b
  9972   0039D4  11EC               	iorwf	(??_poll+2)& (0+255),w,b
  9973   0039D6  E106               	bnz	u26570
  9974   0039D8  0E25               	movlw	37
  9975   0039DA  5DEA               	subwf	??_poll& (0+255),w,b
  9976   0039DC  0EF4               	movlw	244
  9977   0039DE  59EB               	subwfb	(??_poll+1)& (0+255),w,b
  9978   0039E0  A0D8               	btfss	status,0,c
  9979   0039E2  D00C               	goto	l24861
  9980   0039E4                     u26570:
  9981                           
  9982                           ; BSR set to: 2
  9983                           ;../../VLCBlib_PIC/vlcb.c: 1004:         flushFlashBlock();
  9984   0039E4  EC5F  F053         	call	_flushFlashBlock	;wreg free
  9985                           
  9986                           ;../../VLCBlib_PIC/vlcb.c: 1005:         flashFlushTime.val = tickGet();
  9987   0039E8  ECE4  F05A         	call	_tickGet	;wreg free
  9988   0039EC  C08D  F140         	movff	?_tickGet,_flashFlushTime
  9989   0039F0  C08E  F141         	movff	?_tickGet+1,_flashFlushTime+1
  9990   0039F4  C08F  F142         	movff	?_tickGet+2,_flashFlushTime+2
  9991   0039F8  C090  F143         	movff	?_tickGet+3,_flashFlushTime+3
  9992   0039FC                     l24861:
  9993                           
  9994                           ;../../VLCBlib_PIC/vlcb.c: 1008:     for (i=0; i<9; i++) {
  9995   0039FC  0E00               	movlw	0
  9996   0039FE  0102               	movlb	2	; () banked
  9997   003A00  6FEF               	movwf	poll@i& (0+255),b
  9998   003A02                     l24867:
  9999                           
 10000                           ; BSR set to: 2
 10001                           ;../../VLCBlib_PIC/vlcb.c: 1009:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->poll != ((void*)0))) {
 10002   003A02  51EF               	movf	poll@i& (0+255),w,b
 10003   003A04  0D02               	mullw	2
 10004   003A06  0E69               	movlw	low _services
 10005   003A08  24F3               	addwf	243,w,c
 10006   003A0A  6EF6               	movwf	tblptrl,c
 10007   003A0C  0EEE               	movlw	high _services
 10008   003A0E  20F4               	addwfc	244,w,c
 10009   003A10  6EF7               	movwf	tblptrh,c
 10010   003A12                     	if	1	;There are 3 active tblptr bytes
 10011   003A12  6AF8               	clrf	tblptru,c
 10012   003A14  0E00               	movlw	low (__mediumconst shr (0+16))
 10013   003A16  22F8               	addwfc	tblptru,f,c
 10014   003A18                     	endif
 10015   003A18  0009               	tblrd		*+
 10016   003A1A  50F5               	movf	tablat,w,c
 10017   003A1C  0009               	tblrd		*+
 10018   003A1E  10F5               	iorwf	tablat,w,c
 10019   003A20  B4D8               	btfsc	status,2,c
 10020   003A22  D04B               	goto	u26609
 10021                           
 10022                           ; BSR set to: 2
 10023   003A24  51EF               	movf	poll@i& (0+255),w,b
 10024   003A26  0D02               	mullw	2
 10025   003A28  0E69               	movlw	low _services
 10026   003A2A  24F3               	addwf	243,w,c
 10027   003A2C  6EF6               	movwf	tblptrl,c
 10028   003A2E  0EEE               	movlw	high _services
 10029   003A30  20F4               	addwfc	244,w,c
 10030   003A32  6EF7               	movwf	tblptrh,c
 10031   003A34                     	if	1	;There are 3 active tblptr bytes
 10032   003A34  6AF8               	clrf	tblptru,c
 10033   003A36  0E00               	movlw	low (__mediumconst shr (0+16))
 10034   003A38  22F8               	addwfc	tblptru,f,c
 10035   003A3A                     	endif
 10036   003A3A  0009               	tblrd		*+
 10037   003A3C  CFF5 F2EA          	movff	tablat,??_poll
 10038   003A40  0009               	tblrd		*+
 10039   003A42  CFF5 F2EB          	movff	tablat,??_poll+1
 10040   003A46  0E08               	movlw	8
 10041   003A48  27EA               	addwf	??_poll& (0+255),f,b
 10042   003A4A  0E00               	movlw	0
 10043   003A4C  23EB               	addwfc	(??_poll+1)& (0+255),f,b
 10044   003A4E  C2EA  FFF6         	movff	??_poll,tblptrl
 10045   003A52  C2EB  FFF7         	movff	??_poll+1,tblptrh
 10046   003A56                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10047   003A56  6AF8               	clrf	tblptru,c
 10048   003A58                     	endif
 10049   003A58                     	if	0	;tblptru may be non-zero
 10050   003A58                     	endif
 10051   003A58  0009               	tblrd		*+
 10052   003A5A  50F5               	movf	tablat,w,c
 10053   003A5C  0009               	tblrd		*+
 10054   003A5E  10F5               	iorwf	tablat,w,c
 10055   003A60  B4D8               	btfsc	status,2,c
 10056   003A62  D02B               	goto	u26609
 10057                           
 10058                           ; BSR set to: 2
 10059                           ;../../VLCBlib_PIC/vlcb.c: 1010:             services[i]->poll();
 10060   003A64  51EF               	movf	poll@i& (0+255),w,b
 10061   003A66  0D02               	mullw	2
 10062   003A68  0E69               	movlw	low _services
 10063   003A6A  24F3               	addwf	243,w,c
 10064   003A6C  6EF6               	movwf	tblptrl,c
 10065   003A6E  0EEE               	movlw	high _services
 10066   003A70  20F4               	addwfc	244,w,c
 10067   003A72  6EF7               	movwf	tblptrh,c
 10068   003A74                     	if	1	;There are 3 active tblptr bytes
 10069   003A74  6AF8               	clrf	tblptru,c
 10070   003A76  0E00               	movlw	low (__mediumconst shr (0+16))
 10071   003A78  22F8               	addwfc	tblptru,f,c
 10072   003A7A                     	endif
 10073   003A7A  0009               	tblrd		*+
 10074   003A7C  CFF5 F2EA          	movff	tablat,??_poll
 10075   003A80  0009               	tblrd		*+
 10076   003A82  CFF5 F2EB          	movff	tablat,??_poll+1
 10077   003A86  0E08               	movlw	8
 10078   003A88  27EA               	addwf	??_poll& (0+255),f,b
 10079   003A8A  0E00               	movlw	0
 10080   003A8C  23EB               	addwfc	(??_poll+1)& (0+255),f,b
 10081   003A8E  C2EA  FFF6         	movff	??_poll,tblptrl
 10082   003A92  C2EB  FFF7         	movff	??_poll+1,tblptrh
 10083   003A96                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10084   003A96  6AF8               	clrf	tblptru,c
 10085   003A98                     	endif
 10086   003A98                     	if	0	;tblptru may be non-zero
 10087   003A98                     	endif
 10088   003A98  0009               	tblrd		*+
 10089   003A9A  CFF5 F2EC          	movff	tablat,??_poll+2
 10090   003A9E  0009               	tblrd		*+
 10091   003AA0  CFF5 F2ED          	movff	tablat,??_poll+3
 10092   003AA4  D801               	call	u26608
 10093   003AA6  D009               	goto	u26609
 10094   003AA8                     u26608:
 10095   003AA8  0005               	push	
 10096   003AAA  6EFA               	movwf	pclath,c
 10097   003AAC  51EC               	movf	(??_poll+2)& (0+255),w,b
 10098   003AAE  6EFD               	movwf	tosl,c
 10099   003AB0  51ED               	movf	(??_poll+3)& (0+255),w,b
 10100   003AB2  6EFE               	movwf	tosh,c
 10101   003AB4  6AFF               	clrf	tosu,c
 10102   003AB6  50FA               	movf	pclath,w,c
 10103   003AB8  0012               	return		;indir
 10104   003ABA                     u26609:
 10105                           
 10106                           ;../../VLCBlib_PIC/vlcb.c: 1012:     }
 10107   003ABA  0102               	movlb	2	; () banked
 10108   003ABC  2BEF               	incf	poll@i& (0+255),f,b
 10109                           
 10110                           ; BSR set to: 2
 10111   003ABE  0E08               	movlw	8
 10112   003AC0  65EF               	cpfsgt	poll@i& (0+255),b
 10113   003AC2  D79F               	goto	l24867
 10114                           
 10115                           ; BSR set to: 2
 10116                           ;../../VLCBlib_PIC/vlcb.c: 1014:     leds_poll();
 10117   003AC4  EC6E  F02E         	call	_leds_poll	;wreg free
 10118                           
 10119                           ;../../VLCBlib_PIC/vlcb.c: 1017:     handled = NOT_PROCESSED;
 10120   003AC8  0E00               	movlw	0
 10121   003ACA  0102               	movlb	2	; () banked
 10122   003ACC  6FEE               	movwf	poll@handled& (0+255),b
 10123                           
 10124                           ; BSR set to: 2
 10125                           ;../../VLCBlib_PIC/vlcb.c: 1018:     if (transport != ((void*)0)) {
 10126   003ACE  0101               	movlb	1	; () banked
 10127   003AD0  5162               	movf	_transport& (0+255),w,b
 10128   003AD2  1163               	iorwf	(_transport+1)& (0+255),w,b
 10129   003AD4  B4D8               	btfsc	status,2,c
 10130   003AD6  D0CA               	goto	l2016
 10131                           
 10132                           ; BSR set to: 1
 10133                           ;../../VLCBlib_PIC/vlcb.c: 1019:         if (transport->receiveMessage != ((void*)0)) {
 10134   003AD8  0E02               	movlw	2
 10135   003ADA  2562               	addwf	_transport& (0+255),w,b
 10136   003ADC  0102               	movlb	2	; () banked
 10137   003ADE  6FEA               	movwf	??_poll& (0+255),b
 10138   003AE0  0E00               	movlw	0
 10139   003AE2  0101               	movlb	1	; () banked
 10140   003AE4  2163               	addwfc	(_transport+1)& (0+255),w,b
 10141   003AE6  0102               	movlb	2	; () banked
 10142   003AE8  6FEB               	movwf	(??_poll+1)& (0+255),b
 10143   003AEA  C2EA  FFF6         	movff	??_poll,tblptrl
 10144   003AEE  C2EB  FFF7         	movff	??_poll+1,tblptrh
 10145   003AF2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10146   003AF2  6AF8               	clrf	tblptru,c
 10147   003AF4                     	endif
 10148   003AF4                     	if	0	;tblptru may be non-zero
 10149   003AF4                     	endif
 10150   003AF4  0009               	tblrd		*+
 10151   003AF6  50F5               	movf	tablat,w,c
 10152   003AF8  0009               	tblrd		*+
 10153   003AFA  10F5               	iorwf	tablat,w,c
 10154   003AFC  B4D8               	btfsc	status,2,c
 10155   003AFE  D0B6               	goto	l2016
 10156                           
 10157                           ; BSR set to: 2
 10158                           ;../../VLCBlib_PIC/vlcb.c: 1020:             if (transport->receiveMessage(&m)) {
 10159   003B00  0EF0               	movlw	low poll@m
 10160   003B02  0101               	movlb	1	; () banked
 10161   003B04  6FC4               	movwf	canReceiveMessage@m& (0+255),b
 10162   003B06  0E02               	movlw	high poll@m
 10163   003B08  6FC5               	movwf	(canReceiveMessage@m+1)& (0+255),b
 10164   003B0A  0E02               	movlw	2
 10165   003B0C  2562               	addwf	_transport& (0+255),w,b
 10166   003B0E  0102               	movlb	2	; () banked
 10167   003B10  6FEA               	movwf	??_poll& (0+255),b
 10168   003B12  0E00               	movlw	0
 10169   003B14  0101               	movlb	1	; () banked
 10170   003B16  2163               	addwfc	(_transport+1)& (0+255),w,b
 10171   003B18  0102               	movlb	2	; () banked
 10172   003B1A  6FEB               	movwf	(??_poll+1)& (0+255),b
 10173   003B1C  C2EA  FFF6         	movff	??_poll,tblptrl
 10174   003B20  C2EB  FFF7         	movff	??_poll+1,tblptrh
 10175   003B24                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10176   003B24  6AF8               	clrf	tblptru,c
 10177   003B26                     	endif
 10178   003B26                     	if	0	;tblptru may be non-zero
 10179   003B26                     	endif
 10180   003B26  0009               	tblrd		*+
 10181   003B28  CFF5 F2EC          	movff	tablat,??_poll+2
 10182   003B2C  0009               	tblrd		*+
 10183   003B2E  CFF5 F2ED          	movff	tablat,??_poll+3
 10184   003B32  D801               	call	u26648
 10185   003B34  D009               	goto	u26649
 10186   003B36                     u26648:
 10187   003B36  0005               	push	
 10188   003B38  6EFA               	movwf	pclath,c
 10189   003B3A  51EC               	movf	(??_poll+2)& (0+255),w,b
 10190   003B3C  6EFD               	movwf	tosl,c
 10191   003B3E  51ED               	movf	(??_poll+3)& (0+255),w,b
 10192   003B40  6EFE               	movwf	tosh,c
 10193   003B42  6AFF               	clrf	tosu,c
 10194   003B44  50FA               	movf	pclath,w,c
 10195   003B46  0012               	return		;indir
 10196   003B48                     u26649:
 10197   003B48  0900               	iorlw	0
 10198   003B4A  B4D8               	btfsc	status,2,c
 10199   003B4C  D08F               	goto	l2016
 10200                           
 10201                           ;../../VLCBlib_PIC/vlcb.c: 1021:                 if (m.len > 0) {
 10202   003B4E  0102               	movlb	2	; () banked
 10203   003B50  51F0               	movf	poll@m& (0+255),w,b
 10204   003B52  B4D8               	btfsc	status,2,c
 10205   003B54  D08B               	goto	l2016
 10206                           
 10207                           ; BSR set to: 2
 10208                           ;../../VLCBlib_PIC/vlcb.c: 1022:                     showStatus(STATUS_MESSAGE_RECEIVED)
      +                          ;
 10209   003B56  0E07               	movlw	7
 10210   003B58  EC96  F043         	call	_showStatus
 10211                           
 10212                           ;../../VLCBlib_PIC/vlcb.c: 1023:                     handled = APP_preProcessMessage(&m)
      +                          ;
 10213   003B5C  0EF0               	movlw	low poll@m
 10214   003B5E  0100               	movlb	0	; () banked
 10215   003B60  6F8D               	movwf	APP_preProcessMessage@m& (0+255),b
 10216   003B62  0E02               	movlw	high poll@m
 10217   003B64  6F8E               	movwf	(APP_preProcessMessage@m+1)& (0+255),b
 10218   003B66  EC25  F063         	call	_APP_preProcessMessage	;wreg free
 10219   003B6A  0102               	movlb	2	; () banked
 10220   003B6C  6FEE               	movwf	poll@handled& (0+255),b
 10221                           
 10222                           ; BSR set to: 2
 10223                           ;../../VLCBlib_PIC/vlcb.c: 1024:                     if (handled == NOT_PROCESSED) {
 10224   003B6E  51EE               	movf	poll@handled& (0+255),w,b
 10225   003B70  A4D8               	btfss	status,2,c
 10226   003B72  D07C               	goto	l2016
 10227                           
 10228                           ; BSR set to: 2
 10229                           ;../../VLCBlib_PIC/vlcb.c: 1025:                         for (i=0; i<9; i++) {
 10230   003B74  0E00               	movlw	0
 10231   003B76  6FEF               	movwf	poll@i& (0+255),b
 10232   003B78                     l24899:
 10233                           
 10234                           ; BSR set to: 2
 10235                           ;../../VLCBlib_PIC/vlcb.c: 1026:                             if ((services[i] != ((void*
      +                          )0)) && (services[i]->processMessage != ((void*)0))) {
 10236   003B78  51EF               	movf	poll@i& (0+255),w,b
 10237   003B7A  0D02               	mullw	2
 10238   003B7C  0E69               	movlw	low _services
 10239   003B7E  24F3               	addwf	243,w,c
 10240   003B80  6EF6               	movwf	tblptrl,c
 10241   003B82  0EEE               	movlw	high _services
 10242   003B84  20F4               	addwfc	244,w,c
 10243   003B86  6EF7               	movwf	tblptrh,c
 10244   003B88                     	if	1	;There are 3 active tblptr bytes
 10245   003B88  6AF8               	clrf	tblptru,c
 10246   003B8A  0E00               	movlw	low (__mediumconst shr (0+16))
 10247   003B8C  22F8               	addwfc	tblptru,f,c
 10248   003B8E                     	endif
 10249   003B8E  0009               	tblrd		*+
 10250   003B90  50F5               	movf	tablat,w,c
 10251   003B92  0009               	tblrd		*+
 10252   003B94  10F5               	iorwf	tablat,w,c
 10253   003B96  B4D8               	btfsc	status,2,c
 10254   003B98  D058               	goto	l24907
 10255                           
 10256                           ; BSR set to: 2
 10257   003B9A  51EF               	movf	poll@i& (0+255),w,b
 10258   003B9C  0D02               	mullw	2
 10259   003B9E  0E69               	movlw	low _services
 10260   003BA0  24F3               	addwf	243,w,c
 10261   003BA2  6EF6               	movwf	tblptrl,c
 10262   003BA4  0EEE               	movlw	high _services
 10263   003BA6  20F4               	addwfc	244,w,c
 10264   003BA8  6EF7               	movwf	tblptrh,c
 10265   003BAA                     	if	1	;There are 3 active tblptr bytes
 10266   003BAA  6AF8               	clrf	tblptru,c
 10267   003BAC  0E00               	movlw	low (__mediumconst shr (0+16))
 10268   003BAE  22F8               	addwfc	tblptru,f,c
 10269   003BB0                     	endif
 10270   003BB0  0009               	tblrd		*+
 10271   003BB2  CFF5 F2EA          	movff	tablat,??_poll
 10272   003BB6  0009               	tblrd		*+
 10273   003BB8  CFF5 F2EB          	movff	tablat,??_poll+1
 10274   003BBC  0E06               	movlw	6
 10275   003BBE  27EA               	addwf	??_poll& (0+255),f,b
 10276   003BC0  0E00               	movlw	0
 10277   003BC2  23EB               	addwfc	(??_poll+1)& (0+255),f,b
 10278   003BC4  C2EA  FFF6         	movff	??_poll,tblptrl
 10279   003BC8  C2EB  FFF7         	movff	??_poll+1,tblptrh
 10280   003BCC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10281   003BCC  6AF8               	clrf	tblptru,c
 10282   003BCE                     	endif
 10283   003BCE                     	if	0	;tblptru may be non-zero
 10284   003BCE                     	endif
 10285   003BCE  0009               	tblrd		*+
 10286   003BD0  50F5               	movf	tablat,w,c
 10287   003BD2  0009               	tblrd		*+
 10288   003BD4  10F5               	iorwf	tablat,w,c
 10289   003BD6  B4D8               	btfsc	status,2,c
 10290   003BD8  D038               	goto	l24907
 10291                           
 10292                           ; BSR set to: 2
 10293                           ;../../VLCBlib_PIC/vlcb.c: 1027:                                 if (services[i]->proces
      +                          sMessage(&m) == PROCESSED) {
 10294   003BDA  0EF0               	movlw	low poll@m
 10295   003BDC  0101               	movlb	1	; () banked
 10296   003BDE  6FF9               	movwf	producerProcessMessage@m& (0+255),b
 10297   003BE0  0E02               	movlw	high poll@m
 10298   003BE2  6FFA               	movwf	(producerProcessMessage@m+1)& (0+255),b
 10299   003BE4  0102               	movlb	2	; () banked
 10300   003BE6  51EF               	movf	poll@i& (0+255),w,b
 10301   003BE8  0D02               	mullw	2
 10302   003BEA  0E69               	movlw	low _services
 10303   003BEC  24F3               	addwf	243,w,c
 10304   003BEE  6EF6               	movwf	tblptrl,c
 10305   003BF0  0EEE               	movlw	high _services
 10306   003BF2  20F4               	addwfc	244,w,c
 10307   003BF4  6EF7               	movwf	tblptrh,c
 10308   003BF6                     	if	1	;There are 3 active tblptr bytes
 10309   003BF6  6AF8               	clrf	tblptru,c
 10310   003BF8  0E00               	movlw	low (__mediumconst shr (0+16))
 10311   003BFA  22F8               	addwfc	tblptru,f,c
 10312   003BFC                     	endif
 10313   003BFC  0009               	tblrd		*+
 10314   003BFE  CFF5 F2EA          	movff	tablat,??_poll
 10315   003C02  0009               	tblrd		*+
 10316   003C04  CFF5 F2EB          	movff	tablat,??_poll+1
 10317   003C08  0E06               	movlw	6
 10318   003C0A  27EA               	addwf	??_poll& (0+255),f,b
 10319   003C0C  0E00               	movlw	0
 10320   003C0E  23EB               	addwfc	(??_poll+1)& (0+255),f,b
 10321   003C10  C2EA  FFF6         	movff	??_poll,tblptrl
 10322   003C14  C2EB  FFF7         	movff	??_poll+1,tblptrh
 10323   003C18                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10324   003C18  6AF8               	clrf	tblptru,c
 10325   003C1A                     	endif
 10326   003C1A                     	if	0	;tblptru may be non-zero
 10327   003C1A                     	endif
 10328   003C1A  0009               	tblrd		*+
 10329   003C1C  CFF5 F2EC          	movff	tablat,??_poll+2
 10330   003C20  0009               	tblrd		*+
 10331   003C22  CFF5 F2ED          	movff	tablat,??_poll+3
 10332   003C26  D801               	call	u26708
 10333   003C28  D009               	goto	u26709
 10334   003C2A                     u26708:
 10335   003C2A  0005               	push	
 10336   003C2C  6EFA               	movwf	pclath,c
 10337   003C2E  51EC               	movf	(??_poll+2)& (0+255),w,b
 10338   003C30  6EFD               	movwf	tosl,c
 10339   003C32  51ED               	movf	(??_poll+3)& (0+255),w,b
 10340   003C34  6EFE               	movwf	tosh,c
 10341   003C36  6AFF               	clrf	tosu,c
 10342   003C38  50FA               	movf	pclath,w,c
 10343   003C3A  0012               	return		;indir
 10344   003C3C                     u26709:
 10345   003C3C  06E8               	decf	wreg,f,c
 10346   003C3E  A4D8               	btfss	status,2,c
 10347   003C40  D004               	goto	l24907
 10348                           
 10349                           ;../../VLCBlib_PIC/vlcb.c: 1028:                                     handled = PROCESSED
      +                          ;
 10350   003C42  0E01               	movlw	1
 10351   003C44  0102               	movlb	2	; () banked
 10352   003C46  6FEE               	movwf	poll@handled& (0+255),b
 10353                           
 10354                           ;../../VLCBlib_PIC/vlcb.c: 1029:                                     break;
 10355   003C48  D005               	goto	u26720
 10356   003C4A                     l24907:
 10357                           
 10358                           ;../../VLCBlib_PIC/vlcb.c: 1032:                         }
 10359   003C4A  0102               	movlb	2	; () banked
 10360   003C4C  2BEF               	incf	poll@i& (0+255),f,b
 10361                           
 10362                           ; BSR set to: 2
 10363   003C4E  0E08               	movlw	8
 10364   003C50  65EF               	cpfsgt	poll@i& (0+255),b
 10365   003C52  D792               	goto	l24899
 10366   003C54                     u26720:
 10367                           
 10368                           ; BSR set to: 2
 10369                           ;../../VLCBlib_PIC/vlcb.c: 1033:                         if (handled == NOT_PROCESSED) {
 10370   003C54  51EE               	movf	poll@handled& (0+255),w,b
 10371   003C56  A4D8               	btfss	status,2,c
 10372   003C58  D009               	goto	l2016
 10373                           
 10374                           ; BSR set to: 2
 10375                           ;../../VLCBlib_PIC/vlcb.c: 1034:                             handled = APP_postProcessMe
      +                          ssage(&m);
 10376   003C5A  0EF0               	movlw	low poll@m
 10377   003C5C  0100               	movlb	0	; () banked
 10378   003C5E  6F8D               	movwf	APP_postProcessMessage@m& (0+255),b
 10379   003C60  0E02               	movlw	high poll@m
 10380   003C62  6F8E               	movwf	(APP_postProcessMessage@m+1)& (0+255),b
 10381   003C64  EC27  F063         	call	_APP_postProcessMessage	;wreg free
 10382   003C68  0102               	movlb	2	; () banked
 10383   003C6A  6FEE               	movwf	poll@handled& (0+255),b
 10384   003C6C                     l2016:
 10385                           
 10386                           ;../../VLCBlib_PIC/vlcb.c: 1041:     if (handled) {
 10387                           
 10388                           ; BSR set to: 2
 10389   003C6C  0102               	movlb	2	; () banked
 10390   003C6E  51EE               	movf	poll@handled& (0+255),w,b
 10391   003C70  B4D8               	btfsc	status,2,c
 10392   003C72  0012               	return	
 10393                           
 10394                           ; BSR set to: 2
 10395                           ;../../VLCBlib_PIC/vlcb.c: 1042:         mnsDiagnostics[0x06].asUint++;
 10396   003C74  0101               	movlb	1	; () banked
 10397   003C76  4B99               	infsnz	(_mnsDiagnostics+12)& (0+255),f,b
 10398   003C78  2B9A               	incf	(_mnsDiagnostics+13)& (0+255),f,b
 10399                           
 10400                           ; BSR set to: 1
 10401                           ;../../VLCBlib_PIC/vlcb.c: 1043:         showStatus(STATUS_MESSAGE_ACTED);
 10402   003C7A  0E08               	movlw	8
 10403   003C7C  EC96  F043         	call	_showStatus
 10404   003C80  0012               	return		;funcret
 10405   003C82                     __end_of_poll:
 10406                           	callstack 0
 10407                           
 10408 ;; *************** function _producerProcessMessage *****************
 10409 ;; Defined at:
 10410 ;;		line 124 in file "../../VLCBlib_PIC/event_producer_happening.c"
 10411 ;; Parameters:    Size  Location     Type
 10412 ;;  m               2   63[BANK1 ] PTR struct Message
 10413 ;;		 -> poll@m(9), 
 10414 ;; Auto vars:     Size  Location     Type
 10415 ;;  ev              2   65[BANK1 ] short 
 10416 ;;  index           1   68[BANK1 ] unsigned char 
 10417 ;;  h               1   67[BANK1 ] unsigned char 
 10418 ;; Return value:  Size  Location     Type
 10419 ;;                  1    wreg      enum E12743
 10420 ;; Registers used:
 10421 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10422 ;; Tracked objects:
 10423 ;;		On entry : 0/0
 10424 ;;		On exit  : 0/0
 10425 ;;		Unchanged: 0/0
 10426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10427 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10428 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10429 ;;      Temps:          0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10430 ;;      Totals:         0       0       6       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10431 ;;Total ram usage:       12 bytes
 10432 ;; Hardware stack levels used: 1
 10433 ;; Hardware stack levels required when called: 17
 10434 ;; This function calls:
 10435 ;;		_APP_GetEventState
 10436 ;;		_findEvent
 10437 ;;		_getEv
 10438 ;;		_sendMessage3
 10439 ;;		_sendMessage4
 10440 ;; This function is called by:
 10441 ;;		_poll
 10442 ;; This function uses a non-reentrant model
 10443 ;;
 10444                           
 10445                           	psect	text20
 10446   005F4A                     __ptext20:
 10447                           	callstack 0
 10448   005F4A                     _producerProcessMessage:
 10449                           	callstack 12
 10450                           
 10451                           ;../../VLCBlib_PIC/event_producer_happening.c: 125:     uint8_t index;;../../VLCBlib_PIC
      +                          /event_producer_happening.c: 126:     Happening h;;../../VLCBlib_PIC/event_producer_happ
      +                          ening.c: 127:     int16_t ev;;../../VLCBlib_PIC/event_producer_happening.c: 129:     swi
      +                          tch (m->opc) {
 10452                           
 10453                           ;incstack = 0
 10454   005F4A  D11B               	goto	l24709
 10455   005F4C                     l24661:
 10456                           
 10457                           ; BSR set to: 2
 10458                           ;../../VLCBlib_PIC/event_producer_happening.c: 132:             if (m->len < 5) {
 10459   005F4C  C1F9  FFD9         	movff	producerProcessMessage@m,fsr2l
 10460   005F50  C1FA  FFDA         	movff	producerProcessMessage@m+1,fsr2h
 10461   005F54  0E05               	movlw	5
 10462   005F56  60DF               	cpfslt	indf2,c
 10463   005F58  D00C               	goto	l24669
 10464                           
 10465                           ; BSR set to: 2
 10466                           ;../../VLCBlib_PIC/event_producer_happening.c: 133:                 sendMessage3(OPC_CMD
      +                          ERR, nn.bytes.hi, nn.bytes.lo, CMDERR_INV_CMD);
 10467   005F5A  C0BE  F0A6         	movff	_nn+1,sendMessage3@data1
 10468   005F5E  C0BD  F0A7         	movff	_nn,sendMessage3@data2
 10469   005F62  0E01               	movlw	1
 10470   005F64  0100               	movlb	0	; () banked
 10471   005F66  6FA8               	movwf	sendMessage3@data3& (0+255),b
 10472   005F68  0E6F               	movlw	111
 10473   005F6A  EC3F  F060         	call	_sendMessage3
 10474   005F6E                     l24665:
 10475                           
 10476                           ;../../VLCBlib_PIC/event_producer_happening.c: 134:                 return PROCESSED;
 10477   005F6E  0E01               	movlw	1
 10478   005F70  0012               	return	
 10479   005F72                     l24669:
 10480                           
 10481                           ; BSR set to: 2
 10482                           ;../../VLCBlib_PIC/event_producer_happening.c: 136:             if (m->opc == OPC_AREQ) 
      +                          {
 10483   005F72  0101               	movlb	1	; () banked
 10484   005F74  EE20 F001          	lfsr	2,1
 10485   005F78  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10486   005F7A  26D9               	addwf	fsr2l,f,c
 10487   005F7C  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10488   005F7E  22DA               	addwfc	fsr2h,f,c
 10489   005F80  0E92               	movlw	146
 10490   005F82  18DE               	xorwf	postinc2,w,c
 10491   005F84  A4D8               	btfss	status,2,c
 10492   005F86  D033               	goto	l24673
 10493                           
 10494                           ; BSR set to: 1
 10495                           ;../../VLCBlib_PIC/event_producer_happening.c: 137:                 index = findEvent((u
      +                          int16_t)((m->bytes[0]<<8)|(m->bytes[1])), (uint16_t)((m->bytes[2]<<8)|(m->bytes[3])));
 10496   005F88  EE20 F003          	lfsr	2,3
 10497   005F8C  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10498   005F8E  26D9               	addwf	fsr2l,f,c
 10499   005F90  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10500   005F92  22DA               	addwfc	fsr2h,f,c
 10501   005F94  50DF               	movf	indf2,w,c
 10502   005F96  0102               	movlb	2	; () banked
 10503   005F98  6FCC               	movwf	??_producerProcessMessage& (0+255),b
 10504   005F9A  0101               	movlb	1	; () banked
 10505   005F9C  EE20 F002          	lfsr	2,2
 10506   005FA0  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10507   005FA2  26D9               	addwf	fsr2l,f,c
 10508   005FA4  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10509   005FA6  22DA               	addwfc	fsr2h,f,c
 10510   005FA8  50DF               	movf	indf2,w,c
 10511   005FAA  0102               	movlb	2	; () banked
 10512   005FAC  6FCD               	movwf	(??_producerProcessMessage+1)& (0+255),b
 10513   005FAE  51CC               	movf	??_producerProcessMessage& (0+255),w,b
 10514   005FB0  0101               	movlb	1	; () banked
 10515   005FB2  6FBA               	movwf	findEvent@nodeNumber& (0+255),b
 10516   005FB4  C2CD  F1BB         	movff	??_producerProcessMessage+1,findEvent@nodeNumber+1
 10517   005FB8  EE20 F005          	lfsr	2,5
 10518   005FBC  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10519   005FBE  26D9               	addwf	fsr2l,f,c
 10520   005FC0  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10521   005FC2  22DA               	addwfc	fsr2h,f,c
 10522   005FC4  50DF               	movf	indf2,w,c
 10523   005FC6  0102               	movlb	2	; () banked
 10524   005FC8  6FCF               	movwf	(??_producerProcessMessage+3)& (0+255),b
 10525   005FCA  0101               	movlb	1	; () banked
 10526   005FCC  EE20 F004          	lfsr	2,4
 10527   005FD0  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10528   005FD2  26D9               	addwf	fsr2l,f,c
 10529   005FD4  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10530   005FD6  22DA               	addwfc	fsr2h,f,c
 10531   005FD8  50DF               	movf	indf2,w,c
 10532   005FDA  0102               	movlb	2	; () banked
 10533   005FDC  6FD0               	movwf	(??_producerProcessMessage+4)& (0+255),b
 10534   005FDE  51CF               	movf	(??_producerProcessMessage+3)& (0+255),w,b
 10535   005FE0  0101               	movlb	1	; () banked
 10536   005FE2  6FBC               	movwf	findEvent@eventNumber& (0+255),b
 10537   005FE4  C2D0  F1BD         	movff	??_producerProcessMessage+4,findEvent@eventNumber+1
 10538   005FE8  ECBB  F051         	call	_findEvent	;wreg free
 10539   005FEC  D01E               	goto	L1
 10540   005FEE                     l24673:
 10541                           
 10542                           ; BSR set to: 1
 10543                           ;../../VLCBlib_PIC/event_producer_happening.c: 139:                 index = findEvent(0,
      +                           (uint16_t)((m->bytes[2]<<8)|(m->bytes[3])));
 10544   005FEE  0E00               	movlw	0
 10545   005FF0  6FBB               	movwf	(findEvent@nodeNumber+1)& (0+255),b
 10546   005FF2  0E00               	movlw	0
 10547   005FF4  6FBA               	movwf	findEvent@nodeNumber& (0+255),b
 10548   005FF6  EE20 F005          	lfsr	2,5
 10549   005FFA  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10550   005FFC  26D9               	addwf	fsr2l,f,c
 10551   005FFE  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10552   006000  22DA               	addwfc	fsr2h,f,c
 10553   006002  50DF               	movf	indf2,w,c
 10554   006004  0102               	movlb	2	; () banked
 10555   006006  6FCC               	movwf	??_producerProcessMessage& (0+255),b
 10556   006008  0101               	movlb	1	; () banked
 10557   00600A  EE20 F004          	lfsr	2,4
 10558   00600E  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10559   006010  26D9               	addwf	fsr2l,f,c
 10560   006012  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10561   006014  22DA               	addwfc	fsr2h,f,c
 10562   006016  50DF               	movf	indf2,w,c
 10563   006018  0102               	movlb	2	; () banked
 10564   00601A  6FCD               	movwf	(??_producerProcessMessage+1)& (0+255),b
 10565   00601C  51CC               	movf	??_producerProcessMessage& (0+255),w,b
 10566   00601E  0101               	movlb	1	; () banked
 10567   006020  6FBC               	movwf	findEvent@eventNumber& (0+255),b
 10568   006022  C2CD  F1BD         	movff	??_producerProcessMessage+1,findEvent@eventNumber+1
 10569   006026  ECBB  F051         	call	_findEvent	;wreg free
 10570   00602A                     L1:
 10571   00602A  0101               	movlb	1	; () banked
 10572   00602C  6FFE               	movwf	producerProcessMessage@index& (0+255),b
 10573                           
 10574                           ; BSR set to: 1
 10575                           ;../../VLCBlib_PIC/event_producer_happening.c: 141:             if (index == 0xff) retur
      +                          n PROCESSED;
 10576   00602E  29FE               	incf	producerProcessMessage@index& (0+255),w,b
 10577   006030  B4D8               	btfsc	status,2,c
 10578   006032  D79D               	goto	l24665
 10579                           
 10580                           ; BSR set to: 1
 10581                           ;../../VLCBlib_PIC/event_producer_happening.c: 143:             ev = getEv(index, 0);
 10582   006034  0E00               	movlw	0
 10583   006036  0100               	movlb	0	; () banked
 10584   006038  6F9D               	movwf	getEv@evNum& (0+255),b
 10585   00603A  0101               	movlb	1	; () banked
 10586   00603C  51FE               	movf	producerProcessMessage@index& (0+255),w,b
 10587   00603E  EC0A  F03C         	call	_getEv
 10588   006042  C09D  F1FB         	movff	?_getEv,producerProcessMessage@ev
 10589   006046  C09E  F1FC         	movff	?_getEv+1,producerProcessMessage@ev+1
 10590                           
 10591                           ;../../VLCBlib_PIC/event_producer_happening.c: 144:             if (ev <= 0) return PROC
      +                          ESSED;
 10592   00604A  0101               	movlb	1	; () banked
 10593   00604C  BFFC               	btfsc	(producerProcessMessage@ev+1)& (0+255),7,b
 10594   00604E  D78F               	goto	l24665
 10595   006050  51FC               	movf	(producerProcessMessage@ev+1)& (0+255),w,b
 10596   006052  E103               	bnz	l3055
 10597   006054  05FB               	decf	producerProcessMessage@ev& (0+255),w,b
 10598   006056  A0D8               	btfss	status,0,c
 10599   006058  D78A               	goto	l24665
 10600   00605A                     l3055:
 10601                           
 10602                           ; BSR set to: 1
 10603                           ;../../VLCBlib_PIC/event_producer_happening.c: 146:             h = (uint8_t)ev;
 10604   00605A  C1FB  F1FD         	movff	producerProcessMessage@ev,producerProcessMessage@h
 10605                           
 10606                           ; BSR set to: 1
 10607                           ;../../VLCBlib_PIC/event_producer_happening.c: 154:             if (m->opc == OPC_AREQ) 
      +                          {
 10608   00605E  EE20 F001          	lfsr	2,1
 10609   006062  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10610   006064  26D9               	addwf	fsr2l,f,c
 10611   006066  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10612   006068  22DA               	addwfc	fsr2h,f,c
 10613   00606A  0E92               	movlw	146
 10614   00606C  18DE               	xorwf	postinc2,w,c
 10615   00606E  A4D8               	btfss	status,2,c
 10616   006070  D050               	goto	l24697
 10617                           
 10618                           ; BSR set to: 1
 10619                           ;../../VLCBlib_PIC/event_producer_happening.c: 155:                 if (APP_GetEventStat
      +                          e(h) == EVENT_ON) {
 10620   006072  51FD               	movf	producerProcessMessage@h& (0+255),w,b
 10621   006074  EC41  F01E         	call	_APP_GetEventState
 10622   006078  06E8               	decf	wreg,f,c
 10623   00607A  A4D8               	btfss	status,2,c
 10624   00607C  D025               	goto	l24695
 10625                           
 10626                           ;../../VLCBlib_PIC/event_producer_happening.c: 156:                     sendMessage4(OPC
      +                          _ARON, m->bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]);
 10627   00607E  0101               	movlb	1	; () banked
 10628   006080  EE20 F002          	lfsr	2,2
 10629   006084  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10630   006086  26D9               	addwf	fsr2l,f,c
 10631   006088  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10632   00608A  22DA               	addwfc	fsr2h,f,c
 10633   00608C  50DF               	movf	indf2,w,c
 10634   00608E  6FC2               	movwf	sendMessage4@data1& (0+255),b
 10635   006090  EE20 F003          	lfsr	2,3
 10636   006094  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10637   006096  26D9               	addwf	fsr2l,f,c
 10638   006098  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10639   00609A  22DA               	addwfc	fsr2h,f,c
 10640   00609C  50DF               	movf	indf2,w,c
 10641   00609E  6FC3               	movwf	sendMessage4@data2& (0+255),b
 10642   0060A0  EE20 F004          	lfsr	2,4
 10643   0060A4  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10644   0060A6  26D9               	addwf	fsr2l,f,c
 10645   0060A8  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10646   0060AA  22DA               	addwfc	fsr2h,f,c
 10647   0060AC  50DF               	movf	indf2,w,c
 10648   0060AE  6FC4               	movwf	sendMessage4@data3& (0+255),b
 10649   0060B0  EE20 F005          	lfsr	2,5
 10650   0060B4  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10651   0060B6  26D9               	addwf	fsr2l,f,c
 10652   0060B8  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10653   0060BA  22DA               	addwfc	fsr2h,f,c
 10654   0060BC  50DF               	movf	indf2,w,c
 10655   0060BE  6FC5               	movwf	sendMessage4@data4& (0+255),b
 10656   0060C0  0E93               	movlw	147
 10657   0060C2  ECF9  F05F         	call	_sendMessage4
 10658                           
 10659                           ;../../VLCBlib_PIC/event_producer_happening.c: 157:                 } else {
 10660   0060C6  D753               	goto	l24665
 10661   0060C8                     l24695:
 10662                           
 10663                           ;../../VLCBlib_PIC/event_producer_happening.c: 158:                     sendMessage4(OPC
      +                          _AROF, m->bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]);
 10664   0060C8  0101               	movlb	1	; () banked
 10665   0060CA  EE20 F002          	lfsr	2,2
 10666   0060CE  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10667   0060D0  26D9               	addwf	fsr2l,f,c
 10668   0060D2  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10669   0060D4  22DA               	addwfc	fsr2h,f,c
 10670   0060D6  50DF               	movf	indf2,w,c
 10671   0060D8  6FC2               	movwf	sendMessage4@data1& (0+255),b
 10672   0060DA  EE20 F003          	lfsr	2,3
 10673   0060DE  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10674   0060E0  26D9               	addwf	fsr2l,f,c
 10675   0060E2  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10676   0060E4  22DA               	addwfc	fsr2h,f,c
 10677   0060E6  50DF               	movf	indf2,w,c
 10678   0060E8  6FC3               	movwf	sendMessage4@data2& (0+255),b
 10679   0060EA  EE20 F004          	lfsr	2,4
 10680   0060EE  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10681   0060F0  26D9               	addwf	fsr2l,f,c
 10682   0060F2  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10683   0060F4  22DA               	addwfc	fsr2h,f,c
 10684   0060F6  50DF               	movf	indf2,w,c
 10685   0060F8  6FC4               	movwf	sendMessage4@data3& (0+255),b
 10686   0060FA  EE20 F005          	lfsr	2,5
 10687   0060FE  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10688   006100  26D9               	addwf	fsr2l,f,c
 10689   006102  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10690   006104  22DA               	addwfc	fsr2h,f,c
 10691   006106  50DF               	movf	indf2,w,c
 10692   006108  6FC5               	movwf	sendMessage4@data4& (0+255),b
 10693   00610A  0E94               	movlw	148
 10694   00610C  ECF9  F05F         	call	_sendMessage4
 10695   006110  D72E               	goto	l24665
 10696   006112                     l24697:
 10697                           
 10698                           ; BSR set to: 1
 10699                           ;../../VLCBlib_PIC/event_producer_happening.c: 161:                 if (APP_GetEventStat
      +                          e(h) == EVENT_ON) {
 10700   006112  51FD               	movf	producerProcessMessage@h& (0+255),w,b
 10701   006114  EC41  F01E         	call	_APP_GetEventState
 10702   006118  06E8               	decf	wreg,f,c
 10703   00611A  A4D8               	btfss	status,2,c
 10704   00611C  D019               	goto	l24701
 10705                           
 10706                           ;../../VLCBlib_PIC/event_producer_happening.c: 162:                     sendMessage4(OPC
      +                          _ARSON, nn.bytes.hi, nn.bytes.lo, m->bytes[2], m->bytes[3]);
 10707   00611E  C0BE  F1C2         	movff	_nn+1,sendMessage4@data1
 10708   006122  C0BD  F1C3         	movff	_nn,sendMessage4@data2
 10709   006126  0101               	movlb	1	; () banked
 10710   006128  EE20 F004          	lfsr	2,4
 10711   00612C  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10712   00612E  26D9               	addwf	fsr2l,f,c
 10713   006130  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10714   006132  22DA               	addwfc	fsr2h,f,c
 10715   006134  50DF               	movf	indf2,w,c
 10716   006136  6FC4               	movwf	sendMessage4@data3& (0+255),b
 10717   006138  EE20 F005          	lfsr	2,5
 10718   00613C  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10719   00613E  26D9               	addwf	fsr2l,f,c
 10720   006140  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10721   006142  22DA               	addwfc	fsr2h,f,c
 10722   006144  50DF               	movf	indf2,w,c
 10723   006146  6FC5               	movwf	sendMessage4@data4& (0+255),b
 10724   006148  0E9D               	movlw	157
 10725   00614A  ECF9  F05F         	call	_sendMessage4
 10726                           
 10727                           ;../../VLCBlib_PIC/event_producer_happening.c: 163:                 } else {
 10728   00614E  D70F               	goto	l24665
 10729   006150                     l24701:
 10730                           
 10731                           ;../../VLCBlib_PIC/event_producer_happening.c: 164:                     sendMessage4(OPC
      +                          _ARSOF, nn.bytes.hi, nn.bytes.lo, m->bytes[2], m->bytes[3]);
 10732   006150  C0BE  F1C2         	movff	_nn+1,sendMessage4@data1
 10733   006154  C0BD  F1C3         	movff	_nn,sendMessage4@data2
 10734   006158  0101               	movlb	1	; () banked
 10735   00615A  EE20 F004          	lfsr	2,4
 10736   00615E  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10737   006160  26D9               	addwf	fsr2l,f,c
 10738   006162  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10739   006164  22DA               	addwfc	fsr2h,f,c
 10740   006166  50DF               	movf	indf2,w,c
 10741   006168  6FC4               	movwf	sendMessage4@data3& (0+255),b
 10742   00616A  EE20 F005          	lfsr	2,5
 10743   00616E  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10744   006170  26D9               	addwf	fsr2l,f,c
 10745   006172  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10746   006174  22DA               	addwfc	fsr2h,f,c
 10747   006176  50DF               	movf	indf2,w,c
 10748   006178  6FC5               	movwf	sendMessage4@data4& (0+255),b
 10749   00617A  0E9E               	movlw	158
 10750   00617C  ECF9  F05F         	call	_sendMessage4
 10751   006180  D6F6               	goto	l24665
 10752   006182                     l24709:
 10753   006182  0101               	movlb	1	; () banked
 10754   006184  EE20 F001          	lfsr	2,1
 10755   006188  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10756   00618A  26D9               	addwf	fsr2l,f,c
 10757   00618C  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10758   00618E  22DA               	addwfc	fsr2h,f,c
 10759   006190  50DF               	movf	indf2,w,c
 10760   006192  0102               	movlb	2	; () banked
 10761   006194  6FCC               	movwf	??_producerProcessMessage& (0+255),b
 10762   006196  6BCD               	clrf	(??_producerProcessMessage+1)& (0+255),b
 10763                           
 10764                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10765                           ; Switch size 1, requested type "simple"
 10766                           ; Number of cases is 1, Range of values is 0 to 0
 10767                           ; switch strategies available:
 10768                           ; Name         Instructions Cycles
 10769                           ; simple_byte            4     3 (average)
 10770                           ;	Chosen strategy is simple_byte
 10771   006198  51CD               	movf	(??_producerProcessMessage+1)& (0+255),w,b
 10772   00619A  0A00               	xorlw	0	; case 0
 10773   00619C  A4D8               	btfss	status,2,c
 10774   00619E  D007               	goto	l24711
 10775                           
 10776                           ; BSR set to: 2
 10777                           ; Switch size 1, requested type "simple"
 10778                           ; Number of cases is 2, Range of values is 146 to 154
 10779                           ; switch strategies available:
 10780                           ; Name         Instructions Cycles
 10781                           ; simple_byte            7     4 (average)
 10782                           ;	Chosen strategy is simple_byte
 10783   0061A0  51CC               	movf	??_producerProcessMessage& (0+255),w,b
 10784   0061A2  0A92               	xorlw	146	; case 146
 10785   0061A4  B4D8               	btfsc	status,2,c
 10786   0061A6  D6D2               	goto	l24661
 10787   0061A8  0A08               	xorlw	8	; case 154
 10788   0061AA  B4D8               	btfsc	status,2,c
 10789   0061AC  D6CF               	goto	l24661
 10790   0061AE                     l24711:
 10791                           
 10792                           ; BSR set to: 2
 10793                           ;../../VLCBlib_PIC/event_producer_happening.c: 171:     return NOT_PROCESSED;
 10794   0061AE  0E00               	movlw	0
 10795   0061B0  0012               	return		;funcret
 10796   0061B2                     __end_of_producerProcessMessage:
 10797                           	callstack 0
 10798                           
 10799 ;; *************** function _canProcessMessage *****************
 10800 ;; Defined at:
 10801 ;;		line 373 in file "../../VLCBlib_PIC/can18_ecan.c"
 10802 ;; Parameters:    Size  Location     Type
 10803 ;;  m               2   63[BANK1 ] PTR struct Message
 10804 ;;		 -> poll@m(9), 
 10805 ;; Auto vars:     Size  Location     Type
 10806 ;;		None
 10807 ;; Return value:  Size  Location     Type
 10808 ;;                  1    wreg      enum E12960
 10809 ;; Registers used:
 10810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10811 ;; Tracked objects:
 10812 ;;		On entry : 0/0
 10813 ;;		On exit  : 0/0
 10814 ;;		Unchanged: 0/0
 10815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10816 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10818 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10819 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10820 ;;Total ram usage:        4 bytes
 10821 ;; Hardware stack levels used: 1
 10822 ;; Hardware stack levels required when called: 17
 10823 ;; This function calls:
 10824 ;;		_sendMessage5
 10825 ;; This function is called by:
 10826 ;;		_poll
 10827 ;; This function uses a non-reentrant model
 10828 ;;
 10829                           
 10830                           	psect	text21
 10831   009B38                     __ptext21:
 10832                           	callstack 0
 10833   009B38                     _canProcessMessage:
 10834                           	callstack 12
 10835                           
 10836                           ;../../VLCBlib_PIC/can18_ecan.c: 375:     if (m->len < 3) return NOT_PROCESSED;
 10837                           
 10838                           ;incstack = 0
 10839   009B38  C1F9  FFD9         	movff	canProcessMessage@m,fsr2l
 10840   009B3C  C1FA  FFDA         	movff	canProcessMessage@m+1,fsr2h
 10841   009B40  0E03               	movlw	3
 10842   009B42  60DF               	cpfslt	indf2,c
 10843   009B44  D002               	goto	l24203
 10844   009B46                     u25740:
 10845   009B46  0E00               	movlw	0
 10846   009B48  0012               	return	
 10847   009B4A                     l24203:
 10848                           
 10849                           ;../../VLCBlib_PIC/can18_ecan.c: 376:     if (m->bytes[0] != nn.bytes.hi) return NOT_PRO
      +                          CESSED;
 10850   009B4A  0101               	movlb	1	; () banked
 10851   009B4C  EE20 F002          	lfsr	2,2
 10852   009B50  51F9               	movf	canProcessMessage@m& (0+255),w,b
 10853   009B52  26D9               	addwf	fsr2l,f,c
 10854   009B54  51FA               	movf	(canProcessMessage@m+1)& (0+255),w,b
 10855   009B56  22DA               	addwfc	fsr2h,f,c
 10856   009B58  50DE               	movf	postinc2,w,c
 10857   009B5A  0100               	movlb	0	; () banked
 10858   009B5C  19BE               	xorwf	(_nn+1)& (0+255),w,b
 10859   009B5E  A4D8               	btfss	status,2,c
 10860   009B60  D7F2               	goto	u25740
 10861                           
 10862                           ; BSR set to: 0
 10863                           ;../../VLCBlib_PIC/can18_ecan.c: 377:     if (m->bytes[1] != nn.bytes.lo) return NOT_PRO
      +                          CESSED;
 10864   009B62  0101               	movlb	1	; () banked
 10865   009B64  EE20 F003          	lfsr	2,3
 10866   009B68  51F9               	movf	canProcessMessage@m& (0+255),w,b
 10867   009B6A  26D9               	addwf	fsr2l,f,c
 10868   009B6C  51FA               	movf	(canProcessMessage@m+1)& (0+255),w,b
 10869   009B6E  22DA               	addwfc	fsr2h,f,c
 10870   009B70  0100               	movlb	0	; () banked
 10871   009B72  51BD               	movf	_nn& (0+255),w,b
 10872   009B74  18DE               	xorwf	postinc2,w,c
 10873   009B76  A4D8               	btfss	status,2,c
 10874   009B78  D7E6               	goto	u25740
 10875   009B7A  D017               	goto	l24233
 10876   009B7C                     l24215:
 10877                           
 10878                           ;../../VLCBlib_PIC/can18_ecan.c: 383:             return PROCESSED;
 10879   009B7C  0E01               	movlw	1
 10880   009B7E  0012               	return	
 10881   009B80                     l24219:
 10882                           
 10883                           ; BSR set to: 1
 10884                           ;../../VLCBlib_PIC/can18_ecan.c: 385:             if (m->len < 4) {
 10885   009B80  C1F9  FFD9         	movff	canProcessMessage@m,fsr2l
 10886   009B84  C1FA  FFDA         	movff	canProcessMessage@m+1,fsr2h
 10887   009B88  0E04               	movlw	4
 10888   009B8A  60DF               	cpfslt	indf2,c
 10889   009B8C  D7F7               	goto	l24215
 10890                           
 10891                           ; BSR set to: 1
 10892                           ;../../VLCBlib_PIC/can18_ecan.c: 387:                 sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_CANID, SERVICE_ID_MNS, CMDERR_INV_CMD);
 10893   009B8E  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 10894   009B92  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 10895   009B96  0E75               	movlw	117
 10896   009B98  6FC4               	movwf	sendMessage5@data3& (0+255),b
 10897   009B9A  0E01               	movlw	1
 10898   009B9C  6FC5               	movwf	sendMessage5@data4& (0+255),b
 10899   009B9E  0E01               	movlw	1
 10900   009BA0  6FC6               	movwf	sendMessage5@data5& (0+255),b
 10901   009BA2  0EAF               	movlw	175
 10902   009BA4  ECE1  F05F         	call	_sendMessage5
 10903   009BA8  D7E9               	goto	l24215
 10904   009BAA                     l24233:
 10905                           
 10906                           ; BSR set to: 0
 10907   009BAA  0101               	movlb	1	; () banked
 10908   009BAC  EE20 F001          	lfsr	2,1
 10909   009BB0  51F9               	movf	canProcessMessage@m& (0+255),w,b
 10910   009BB2  26D9               	addwf	fsr2l,f,c
 10911   009BB4  51FA               	movf	(canProcessMessage@m+1)& (0+255),w,b
 10912   009BB6  22DA               	addwfc	fsr2h,f,c
 10913   009BB8  50DF               	movf	indf2,w,c
 10914   009BBA  6FFB               	movwf	??_canProcessMessage& (0+255),b
 10915   009BBC  6BFC               	clrf	(??_canProcessMessage+1)& (0+255),b
 10916                           
 10917                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10918                           ; Switch size 1, requested type "simple"
 10919                           ; Number of cases is 1, Range of values is 0 to 0
 10920                           ; switch strategies available:
 10921                           ; Name         Instructions Cycles
 10922                           ; simple_byte            4     3 (average)
 10923                           ;	Chosen strategy is simple_byte
 10924   009BBE  51FC               	movf	(??_canProcessMessage+1)& (0+255),w,b
 10925   009BC0  0A00               	xorlw	0	; case 0
 10926   009BC2  A4D8               	btfss	status,2,c
 10927   009BC4  D7C0               	goto	u25740
 10928                           
 10929                           ; BSR set to: 1
 10930                           ; Switch size 1, requested type "simple"
 10931                           ; Number of cases is 2, Range of values is 93 to 117
 10932                           ; switch strategies available:
 10933                           ; Name         Instructions Cycles
 10934                           ; simple_byte            7     4 (average)
 10935                           ;	Chosen strategy is simple_byte
 10936   009BC6  51FB               	movf	??_canProcessMessage& (0+255),w,b
 10937   009BC8  0A5D               	xorlw	93	; case 93
 10938   009BCA  B4D8               	btfsc	status,2,c
 10939   009BCC  D7D7               	goto	l24215
 10940   009BCE  0A28               	xorlw	40	; case 117
 10941   009BD0  B4D8               	btfsc	status,2,c
 10942   009BD2  D7D6               	goto	l24219
 10943   009BD4  D7B8               	goto	u25740
 10944   009BD6                     __end_of_canProcessMessage:
 10945                           	callstack 0
 10946                           
 10947 ;; *************** function _nvProcessMessage *****************
 10948 ;; Defined at:
 10949 ;;		line 240 in file "../../VLCBlib_PIC/nv.c"
 10950 ;; Parameters:    Size  Location     Type
 10951 ;;  m               2   63[BANK1 ] PTR struct Message
 10952 ;;		 -> poll@m(9), 
 10953 ;; Auto vars:     Size  Location     Type
 10954 ;;  valueOrError    2   67[BANK1 ] short 
 10955 ;; Return value:  Size  Location     Type
 10956 ;;                  1    wreg      enum E12793
 10957 ;; Registers used:
 10958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10959 ;; Tracked objects:
 10960 ;;		On entry : 0/0
 10961 ;;		On exit  : 0/0
 10962 ;;		Unchanged: 0/0
 10963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10964 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10965 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10966 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10967 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10968 ;;Total ram usage:        6 bytes
 10969 ;; Hardware stack levels used: 1
 10970 ;; Hardware stack levels required when called: 27
 10971 ;; This function calls:
 10972 ;;		_findServiceIndex
 10973 ;;		_getNV
 10974 ;;		_sendMessage2
 10975 ;;		_sendMessage3
 10976 ;;		_sendMessage4
 10977 ;;		_sendMessage5
 10978 ;;		_setNV
 10979 ;;		_startTimedResponse
 10980 ;; This function is called by:
 10981 ;;		_poll
 10982 ;; This function uses a non-reentrant model
 10983 ;;
 10984                           
 10985                           	psect	text22
 10986   00468C                     __ptext22:
 10987                           	callstack 0
 10988   00468C                     _nvProcessMessage:
 10989                           	callstack 2
 10990                           
 10991                           ;../../VLCBlib_PIC/nv.c: 241:     int16_t valueOrError;;../../VLCBlib_PIC/nv.c: 243:    
      +                           if (m->len < 3) {
 10992                           
 10993                           ;incstack = 0
 10994   00468C  C1F9  FFD9         	movff	nvProcessMessage@m,fsr2l
 10995   004690  C1FA  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 10996   004694  0E03               	movlw	3
 10997   004696  60DF               	cpfslt	indf2,c
 10998   004698  D002               	goto	l23903
 10999   00469A                     u25480:
 11000                           
 11001                           ;../../VLCBlib_PIC/nv.c: 244:         return NOT_PROCESSED;
 11002   00469A  0E00               	movlw	0
 11003   00469C  0012               	return	
 11004   00469E                     l23903:
 11005                           
 11006                           ;../../VLCBlib_PIC/nv.c: 247:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED;
 11007   00469E  0101               	movlb	1	; () banked
 11008   0046A0  EE20 F002          	lfsr	2,2
 11009   0046A4  51F9               	movf	nvProcessMessage@m& (0+255),w,b
 11010   0046A6  26D9               	addwf	fsr2l,f,c
 11011   0046A8  51FA               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11012   0046AA  22DA               	addwfc	fsr2h,f,c
 11013   0046AC  50DE               	movf	postinc2,w,c
 11014   0046AE  0100               	movlb	0	; () banked
 11015   0046B0  19BE               	xorwf	(_nn+1)& (0+255),w,b
 11016   0046B2  A4D8               	btfss	status,2,c
 11017   0046B4  D7F2               	goto	u25480
 11018                           
 11019                           ; BSR set to: 0
 11020                           ;../../VLCBlib_PIC/nv.c: 248:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED;
 11021   0046B6  0101               	movlb	1	; () banked
 11022   0046B8  EE20 F003          	lfsr	2,3
 11023   0046BC  51F9               	movf	nvProcessMessage@m& (0+255),w,b
 11024   0046BE  26D9               	addwf	fsr2l,f,c
 11025   0046C0  51FA               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11026   0046C2  22DA               	addwfc	fsr2h,f,c
 11027   0046C4  0100               	movlb	0	; () banked
 11028   0046C6  51BD               	movf	_nn& (0+255),w,b
 11029   0046C8  18DE               	xorwf	postinc2,w,c
 11030   0046CA  A4D8               	btfss	status,2,c
 11031   0046CC  D7E6               	goto	u25480
 11032   0046CE  D155               	goto	l24025
 11033   0046D0                     l23915:
 11034                           
 11035                           ; BSR set to: 1
 11036                           ;../../VLCBlib_PIC/nv.c: 252:             if (m->len < 4) {
 11037   0046D0  C1F9  FFD9         	movff	nvProcessMessage@m,fsr2l
 11038   0046D4  C1FA  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 11039   0046D8  0E04               	movlw	4
 11040   0046DA  60DF               	cpfslt	indf2,c
 11041   0046DC  D01D               	goto	l23925
 11042                           
 11043                           ; BSR set to: 1
 11044                           ;../../VLCBlib_PIC/nv.c: 253:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, CMDERR_INV_CMD);
 11045   0046DE  C0BE  F0A6         	movff	_nn+1,sendMessage3@data1
 11046   0046E2  C0BD  F0A7         	movff	_nn,sendMessage3@data2
 11047   0046E6  0E01               	movlw	1
 11048   0046E8  0100               	movlb	0	; () banked
 11049   0046EA  6FA8               	movwf	sendMessage3@data3& (0+255),b
 11050   0046EC  0E6F               	movlw	111
 11051   0046EE  EC3F  F060         	call	_sendMessage3
 11052                           
 11053                           ;../../VLCBlib_PIC/nv.c: 255:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11054   0046F2  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 11055   0046F6  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 11056   0046FA  0E71               	movlw	113
 11057   0046FC  0101               	movlb	1	; () banked
 11058   0046FE  6FC4               	movwf	sendMessage5@data3& (0+255),b
 11059   004700  0E01               	movlw	1
 11060   004702  6FC5               	movwf	sendMessage5@data4& (0+255),b
 11061   004704  0E01               	movlw	1
 11062   004706  6FC6               	movwf	sendMessage5@data5& (0+255),b
 11063   004708  0EAF               	movlw	175
 11064   00470A  ECE1  F05F         	call	_sendMessage5
 11065   00470E                     l23919:
 11066                           
 11067                           ;../../VLCBlib_PIC/nv.c: 258:                 nvDiagnostics[0x02].asUint++;
 11068   00470E  0101               	movlb	1	; () banked
 11069   004710  4BA8               	infsnz	(_nvDiagnostics+4)& (0+255),f,b
 11070   004712  2BA9               	incf	(_nvDiagnostics+5)& (0+255),f,b
 11071   004714                     l23921:
 11072                           
 11073                           ;../../VLCBlib_PIC/nv.c: 260:                 return PROCESSED;
 11074   004714  0E01               	movlw	1
 11075   004716  0012               	return	
 11076   004718                     l23925:
 11077                           
 11078                           ; BSR set to: 1
 11079                           ;../../VLCBlib_PIC/nv.c: 262:             valueOrError = getNV(m->bytes[2]);
 11080   004718  EE20 F004          	lfsr	2,4
 11081   00471C  51F9               	movf	nvProcessMessage@m& (0+255),w,b
 11082   00471E  26D9               	addwf	fsr2l,f,c
 11083   004720  51FA               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11084   004722  22DA               	addwfc	fsr2h,f,c
 11085   004724  50DF               	movf	indf2,w,c
 11086   004726  EC52  F05E         	call	_getNV
 11087   00472A  C08D  F1FD         	movff	?_getNV,nvProcessMessage@valueOrError
 11088   00472E  C08E  F1FE         	movff	?_getNV+1,nvProcessMessage@valueOrError+1
 11089                           
 11090                           ;../../VLCBlib_PIC/nv.c: 263:             if (valueOrError < 0) {
 11091   004732  0101               	movlb	1	; () banked
 11092   004734  AFFE               	btfss	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 11093   004736  D01B               	goto	l23937
 11094                           
 11095                           ; BSR set to: 1
 11096                           ;../../VLCBlib_PIC/nv.c: 264:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(-valueOrError));
 11097   004738  C0BE  F0A6         	movff	_nn+1,sendMessage3@data1
 11098   00473C  C0BD  F0A7         	movff	_nn,sendMessage3@data2
 11099   004740  51FD               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 11100   004742  0800               	sublw	0
 11101   004744  0100               	movlb	0	; () banked
 11102   004746  6FA8               	movwf	sendMessage3@data3& (0+255),b
 11103   004748  0E6F               	movlw	111
 11104   00474A  EC3F  F060         	call	_sendMessage3
 11105                           
 11106                           ;../../VLCBlib_PIC/nv.c: 266:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVRD, SERVICE_ID_MNS, (uint8_t)(-valueOrError));
 11107   00474E  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 11108   004752  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 11109   004756  0E71               	movlw	113
 11110   004758  0101               	movlb	1	; () banked
 11111   00475A  6FC4               	movwf	sendMessage5@data3& (0+255),b
 11112   00475C  0E01               	movlw	1
 11113   00475E  6FC5               	movwf	sendMessage5@data4& (0+255),b
 11114   004760  51FD               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 11115   004762  0800               	sublw	0
 11116   004764  6FC6               	movwf	sendMessage5@data5& (0+255),b
 11117   004766  0EAF               	movlw	175
 11118   004768  ECE1  F05F         	call	_sendMessage5
 11119   00476C  D7D0               	goto	l23919
 11120   00476E                     l23937:
 11121                           
 11122                           ; BSR set to: 1
 11123                           ;../../VLCBlib_PIC/nv.c: 274:             nvDiagnostics[0x01].asUint++;
 11124   00476E  4BA6               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 11125   004770  2BA7               	incf	(_nvDiagnostics+3)& (0+255),f,b
 11126                           
 11127                           ; BSR set to: 1
 11128                           ;../../VLCBlib_PIC/nv.c: 276:             sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.
      +                          lo, m->bytes[2], (uint8_t)(valueOrError));
 11129   004772  C0BE  F1C2         	movff	_nn+1,sendMessage4@data1
 11130   004776  C0BD  F1C3         	movff	_nn,sendMessage4@data2
 11131   00477A  EE20 F004          	lfsr	2,4
 11132   00477E  51F9               	movf	nvProcessMessage@m& (0+255),w,b
 11133   004780  26D9               	addwf	fsr2l,f,c
 11134   004782  51FA               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11135   004784  22DA               	addwfc	fsr2h,f,c
 11136   004786  50DF               	movf	indf2,w,c
 11137   004788  6FC4               	movwf	sendMessage4@data3& (0+255),b
 11138   00478A  C1FD  F1C5         	movff	nvProcessMessage@valueOrError,sendMessage4@data4
 11139   00478E  0E97               	movlw	151
 11140   004790  ECF9  F05F         	call	_sendMessage4
 11141                           
 11142                           ;../../VLCBlib_PIC/nv.c: 278:             if (m->bytes[2] == 0) {
 11143   004794  0101               	movlb	1	; () banked
 11144   004796  EE20 F004          	lfsr	2,4
 11145   00479A  51F9               	movf	nvProcessMessage@m& (0+255),w,b
 11146   00479C  26D9               	addwf	fsr2l,f,c
 11147   00479E  51FA               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11148   0047A0  22DA               	addwfc	fsr2h,f,c
 11149   0047A2  50DF               	movf	indf2,w,c
 11150   0047A4  A4D8               	btfss	status,2,c
 11151   0047A6  D7B6               	goto	l23921
 11152                           
 11153                           ; BSR set to: 1
 11154                           ;../../VLCBlib_PIC/nv.c: 280:                 startTimedResponse(6, findServiceIndex(SER
      +                          VICE_ID_NV), nvTRnvrdCallback);
 11155   0047A8  0E02               	movlw	2
 11156   0047AA  ECBF  F056         	call	_findServiceIndex
 11157   0047AE  0100               	movlb	0	; () banked
 11158   0047B0  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 11159   0047B2  0EE8               	movlw	low _nvTRnvrdCallback
 11160   0047B4  6F92               	movwf	startTimedResponse@callback& (0+255),b
 11161   0047B6  0EBB               	movlw	high _nvTRnvrdCallback
 11162   0047B8  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 11163   0047BA  0E06               	movlw	6
 11164   0047BC  EC14  F05E         	call	_startTimedResponse
 11165   0047C0  D7A9               	goto	l23921
 11166   0047C2                     l23949:
 11167                           
 11168                           ; BSR set to: 1
 11169                           ;../../VLCBlib_PIC/nv.c: 285:             if (m->len < 5) {
 11170   0047C2  C1F9  FFD9         	movff	nvProcessMessage@m,fsr2l
 11171   0047C6  C1FA  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 11172   0047CA  0E05               	movlw	5
 11173   0047CC  60DF               	cpfslt	indf2,c
 11174   0047CE  D00E               	goto	l23959
 11175                           
 11176                           ; BSR set to: 1
 11177                           ;../../VLCBlib_PIC/nv.c: 288:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSET, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11178   0047D0  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 11179   0047D4  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 11180   0047D8  0E96               	movlw	150
 11181   0047DA  6FC4               	movwf	sendMessage5@data3& (0+255),b
 11182   0047DC  0E01               	movlw	1
 11183   0047DE  6FC5               	movwf	sendMessage5@data4& (0+255),b
 11184   0047E0  0E01               	movlw	1
 11185   0047E2  6FC6               	movwf	sendMessage5@data5& (0+255),b
 11186   0047E4  0EAF               	movlw	175
 11187   0047E6  ECE1  F05F         	call	_sendMessage5
 11188   0047EA  D791               	goto	l23919
 11189   0047EC                     l23959:
 11190                           
 11191                           ; BSR set to: 1
 11192                           ;../../VLCBlib_PIC/nv.c: 295:             valueOrError = setNV(m->bytes[2], m->bytes[3])
      +                          ;
 11193   0047EC  EE20 F005          	lfsr	2,5
 11194   0047F0  51F9               	movf	nvProcessMessage@m& (0+255),w,b
 11195   0047F2  26D9               	addwf	fsr2l,f,c
 11196   0047F4  51FA               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11197   0047F6  22DA               	addwfc	fsr2h,f,c
 11198   0047F8  50DF               	movf	indf2,w,c
 11199   0047FA  6FF4               	movwf	setNV@value& (0+255),b
 11200   0047FC  EE20 F004          	lfsr	2,4
 11201   004800  51F9               	movf	nvProcessMessage@m& (0+255),w,b
 11202   004802  26D9               	addwf	fsr2l,f,c
 11203   004804  51FA               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11204   004806  22DA               	addwfc	fsr2h,f,c
 11205   004808  50DF               	movf	indf2,w,c
 11206   00480A  EC20  F055         	call	_setNV
 11207   00480E  0101               	movlb	1	; () banked
 11208   004810  6FFB               	movwf	??_nvProcessMessage& (0+255),b
 11209   004812  51FB               	movf	??_nvProcessMessage& (0+255),w,b
 11210   004814  6FFD               	movwf	nvProcessMessage@valueOrError& (0+255),b
 11211   004816  6BFE               	clrf	(nvProcessMessage@valueOrError+1)& (0+255),b
 11212                           
 11213                           ; BSR set to: 1
 11214                           ;../../VLCBlib_PIC/nv.c: 296:             if (valueOrError >0) {
 11215   004818  BFFE               	btfsc	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 11216   00481A  D00F               	goto	l23971
 11217   00481C  51FE               	movf	(nvProcessMessage@valueOrError+1)& (0+255),w,b
 11218   00481E  E103               	bnz	u25550
 11219   004820  05FD               	decf	nvProcessMessage@valueOrError& (0+255),w,b
 11220   004822  A0D8               	btfss	status,0,c
 11221   004824  D00A               	goto	l23971
 11222   004826                     u25550:
 11223                           
 11224                           ; BSR set to: 1
 11225                           ;../../VLCBlib_PIC/nv.c: 297:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(valueOrError));
 11226   004826  C0BE  F0A6         	movff	_nn+1,sendMessage3@data1
 11227   00482A  C0BD  F0A7         	movff	_nn,sendMessage3@data2
 11228   00482E  C1FD  F0A8         	movff	nvProcessMessage@valueOrError,sendMessage3@data3
 11229   004832  0E6F               	movlw	111
 11230   004834  EC3F  F060         	call	_sendMessage3
 11231   004838  D76A               	goto	l23919
 11232   00483A                     l23971:
 11233                           
 11234                           ; BSR set to: 1
 11235                           ;../../VLCBlib_PIC/nv.c: 304:             sendMessage2(OPC_WRACK, nn.bytes.hi, nn.bytes.
      +                          lo);
 11236   00483A  C0BE  F0A6         	movff	_nn+1,sendMessage2@data1
 11237   00483E  C0BD  F0A7         	movff	_nn,sendMessage2@data2
 11238   004842  0E59               	movlw	89
 11239   004844  ECB1  F05F         	call	_sendMessage2
 11240                           
 11241                           ;../../VLCBlib_PIC/nv.c: 306:             sendMessage5(OPC_GRSP, nn.bytes.hi, nn.bytes.l
      +                          o, OPC_NVSET, SERVICE_ID_MNS, GRSP_OK);
 11242   004848  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 11243   00484C  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 11244   004850  0E96               	movlw	150
 11245   004852  0101               	movlb	1	; () banked
 11246   004854  6FC4               	movwf	sendMessage5@data3& (0+255),b
 11247   004856  0E01               	movlw	1
 11248   004858  6FC5               	movwf	sendMessage5@data4& (0+255),b
 11249   00485A  0E00               	movlw	0
 11250   00485C  6FC6               	movwf	sendMessage5@data5& (0+255),b
 11251   00485E  0EAF               	movlw	175
 11252   004860  ECE1  F05F         	call	_sendMessage5
 11253   004864  D757               	goto	l23921
 11254   004866                     l23977:
 11255                           
 11256                           ; BSR set to: 1
 11257                           ;../../VLCBlib_PIC/nv.c: 311:             if (m->len < 5) {
 11258   004866  C1F9  FFD9         	movff	nvProcessMessage@m,fsr2l
 11259   00486A  C1FA  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 11260   00486E  0E05               	movlw	5
 11261   004870  60DF               	cpfslt	indf2,c
 11262   004872  D00E               	goto	l23987
 11263                           
 11264                           ; BSR set to: 1
 11265                           ;../../VLCBlib_PIC/nv.c: 313:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11266   004874  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 11267   004878  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 11268   00487C  0E8E               	movlw	142
 11269   00487E  6FC4               	movwf	sendMessage5@data3& (0+255),b
 11270   004880  0E01               	movlw	1
 11271   004882  6FC5               	movwf	sendMessage5@data4& (0+255),b
 11272   004884  0E01               	movlw	1
 11273   004886  6FC6               	movwf	sendMessage5@data5& (0+255),b
 11274   004888  0EAF               	movlw	175
 11275   00488A  ECE1  F05F         	call	_sendMessage5
 11276   00488E  D73F               	goto	l23919
 11277   004890                     l23987:
 11278                           
 11279                           ; BSR set to: 1
 11280                           ;../../VLCBlib_PIC/nv.c: 319:             valueOrError = setNV(m->bytes[2], m->bytes[3])
      +                          ;
 11281   004890  EE20 F005          	lfsr	2,5
 11282   004894  51F9               	movf	nvProcessMessage@m& (0+255),w,b
 11283   004896  26D9               	addwf	fsr2l,f,c
 11284   004898  51FA               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11285   00489A  22DA               	addwfc	fsr2h,f,c
 11286   00489C  50DF               	movf	indf2,w,c
 11287   00489E  6FF4               	movwf	setNV@value& (0+255),b
 11288   0048A0  EE20 F004          	lfsr	2,4
 11289   0048A4  51F9               	movf	nvProcessMessage@m& (0+255),w,b
 11290   0048A6  26D9               	addwf	fsr2l,f,c
 11291   0048A8  51FA               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11292   0048AA  22DA               	addwfc	fsr2h,f,c
 11293   0048AC  50DF               	movf	indf2,w,c
 11294   0048AE  EC20  F055         	call	_setNV
 11295   0048B2  0101               	movlb	1	; () banked
 11296   0048B4  6FFB               	movwf	??_nvProcessMessage& (0+255),b
 11297   0048B6  51FB               	movf	??_nvProcessMessage& (0+255),w,b
 11298   0048B8  6FFD               	movwf	nvProcessMessage@valueOrError& (0+255),b
 11299   0048BA  6BFE               	clrf	(nvProcessMessage@valueOrError+1)& (0+255),b
 11300                           
 11301                           ; BSR set to: 1
 11302                           ;../../VLCBlib_PIC/nv.c: 320:             if (valueOrError >0) {
 11303   0048BC  BFFE               	btfsc	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 11304   0048BE  D01D               	goto	l23999
 11305   0048C0  51FE               	movf	(nvProcessMessage@valueOrError+1)& (0+255),w,b
 11306   0048C2  E103               	bnz	u25570
 11307   0048C4  05FD               	decf	nvProcessMessage@valueOrError& (0+255),w,b
 11308   0048C6  A0D8               	btfss	status,0,c
 11309   0048C8  D018               	goto	l23999
 11310   0048CA                     u25570:
 11311                           
 11312                           ; BSR set to: 1
 11313                           ;../../VLCBlib_PIC/nv.c: 321:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(valueOrError));
 11314   0048CA  C0BE  F0A6         	movff	_nn+1,sendMessage3@data1
 11315   0048CE  C0BD  F0A7         	movff	_nn,sendMessage3@data2
 11316   0048D2  C1FD  F0A8         	movff	nvProcessMessage@valueOrError,sendMessage3@data3
 11317   0048D6  0E6F               	movlw	111
 11318   0048D8  EC3F  F060         	call	_sendMessage3
 11319                           
 11320                           ;../../VLCBlib_PIC/nv.c: 322:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, (uint8_t)(valueOrError));
 11321   0048DC  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 11322   0048E0  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 11323   0048E4  0E8E               	movlw	142
 11324   0048E6  0101               	movlb	1	; () banked
 11325   0048E8  6FC4               	movwf	sendMessage5@data3& (0+255),b
 11326   0048EA  0E01               	movlw	1
 11327   0048EC  6FC5               	movwf	sendMessage5@data4& (0+255),b
 11328   0048EE  C1FD  F1C6         	movff	nvProcessMessage@valueOrError,sendMessage5@data5
 11329   0048F2  0EAF               	movlw	175
 11330   0048F4  ECE1  F05F         	call	_sendMessage5
 11331   0048F8  D70A               	goto	l23919
 11332   0048FA                     l23999:
 11333                           
 11334                           ; BSR set to: 1
 11335                           ;../../VLCBlib_PIC/nv.c: 328:             valueOrError = getNV(m->bytes[2]);
 11336   0048FA  EE20 F004          	lfsr	2,4
 11337   0048FE  51F9               	movf	nvProcessMessage@m& (0+255),w,b
 11338   004900  26D9               	addwf	fsr2l,f,c
 11339   004902  51FA               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11340   004904  22DA               	addwfc	fsr2h,f,c
 11341   004906  50DF               	movf	indf2,w,c
 11342   004908  EC52  F05E         	call	_getNV
 11343   00490C  C08D  F1FD         	movff	?_getNV,nvProcessMessage@valueOrError
 11344   004910  C08E  F1FE         	movff	?_getNV+1,nvProcessMessage@valueOrError+1
 11345                           
 11346                           ;../../VLCBlib_PIC/nv.c: 329:             if (valueOrError < 0) {
 11347   004914  0101               	movlb	1	; () banked
 11348   004916  AFFE               	btfss	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 11349   004918  D01B               	goto	l24011
 11350                           
 11351                           ; BSR set to: 1
 11352                           ;../../VLCBlib_PIC/nv.c: 330:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(-valueOrError));
 11353   00491A  C0BE  F0A6         	movff	_nn+1,sendMessage3@data1
 11354   00491E  C0BD  F0A7         	movff	_nn,sendMessage3@data2
 11355   004922  51FD               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 11356   004924  0800               	sublw	0
 11357   004926  0100               	movlb	0	; () banked
 11358   004928  6FA8               	movwf	sendMessage3@data3& (0+255),b
 11359   00492A  0E6F               	movlw	111
 11360   00492C  EC3F  F060         	call	_sendMessage3
 11361                           
 11362                           ;../../VLCBlib_PIC/nv.c: 331:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, (uint8_t)(-valueOrError));
 11363   004930  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 11364   004934  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 11365   004938  0E8E               	movlw	142
 11366   00493A  0101               	movlb	1	; () banked
 11367   00493C  6FC4               	movwf	sendMessage5@data3& (0+255),b
 11368   00493E  0E01               	movlw	1
 11369   004940  6FC5               	movwf	sendMessage5@data4& (0+255),b
 11370   004942  51FD               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 11371   004944  0800               	sublw	0
 11372   004946  6FC6               	movwf	sendMessage5@data5& (0+255),b
 11373   004948  0EAF               	movlw	175
 11374   00494A  ECE1  F05F         	call	_sendMessage5
 11375   00494E  D6DF               	goto	l23919
 11376   004950                     l24011:
 11377                           
 11378                           ; BSR set to: 1
 11379                           ;../../VLCBlib_PIC/nv.c: 337:             sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.
      +                          lo, m->bytes[2], (uint8_t)(valueOrError));
 11380   004950  C0BE  F1C2         	movff	_nn+1,sendMessage4@data1
 11381   004954  C0BD  F1C3         	movff	_nn,sendMessage4@data2
 11382   004958  EE20 F004          	lfsr	2,4
 11383   00495C  51F9               	movf	nvProcessMessage@m& (0+255),w,b
 11384   00495E  26D9               	addwf	fsr2l,f,c
 11385   004960  51FA               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11386   004962  22DA               	addwfc	fsr2h,f,c
 11387   004964  50DF               	movf	indf2,w,c
 11388   004966  6FC4               	movwf	sendMessage4@data3& (0+255),b
 11389   004968  C1FD  F1C5         	movff	nvProcessMessage@valueOrError,sendMessage4@data4
 11390   00496C  0E97               	movlw	151
 11391   00496E  ECF9  F05F         	call	_sendMessage4
 11392                           
 11393                           ;../../VLCBlib_PIC/nv.c: 339:             nvDiagnostics[0x01].asUint++;
 11394   004972  0101               	movlb	1	; () banked
 11395   004974  4BA6               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 11396   004976  2BA7               	incf	(_nvDiagnostics+3)& (0+255),f,b
 11397   004978  D6CD               	goto	l23921
 11398   00497A                     l24025:
 11399                           
 11400                           ; BSR set to: 0
 11401   00497A  0101               	movlb	1	; () banked
 11402   00497C  EE20 F001          	lfsr	2,1
 11403   004980  51F9               	movf	nvProcessMessage@m& (0+255),w,b
 11404   004982  26D9               	addwf	fsr2l,f,c
 11405   004984  51FA               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11406   004986  22DA               	addwfc	fsr2h,f,c
 11407   004988  50DF               	movf	indf2,w,c
 11408   00498A  6FFB               	movwf	??_nvProcessMessage& (0+255),b
 11409   00498C  6BFC               	clrf	(??_nvProcessMessage+1)& (0+255),b
 11410                           
 11411                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11412                           ; Switch size 1, requested type "simple"
 11413                           ; Number of cases is 1, Range of values is 0 to 0
 11414                           ; switch strategies available:
 11415                           ; Name         Instructions Cycles
 11416                           ; simple_byte            4     3 (average)
 11417                           ;	Chosen strategy is simple_byte
 11418   00498E  51FC               	movf	(??_nvProcessMessage+1)& (0+255),w,b
 11419   004990  0A00               	xorlw	0	; case 0
 11420   004992  A4D8               	btfss	status,2,c
 11421   004994  D682               	goto	u25480
 11422                           
 11423                           ; BSR set to: 1
 11424                           ; Switch size 1, requested type "simple"
 11425                           ; Number of cases is 3, Range of values is 113 to 150
 11426                           ; switch strategies available:
 11427                           ; Name         Instructions Cycles
 11428                           ; simple_byte           10     6 (average)
 11429                           ;	Chosen strategy is simple_byte
 11430   004996  51FB               	movf	??_nvProcessMessage& (0+255),w,b
 11431   004998  0A71               	xorlw	113	; case 113
 11432   00499A  B4D8               	btfsc	status,2,c
 11433   00499C  D699               	goto	l23915
 11434   00499E  0AFF               	xorlw	255	; case 142
 11435   0049A0  B4D8               	btfsc	status,2,c
 11436   0049A2  D761               	goto	l23977
 11437   0049A4  0A18               	xorlw	24	; case 150
 11438   0049A6  B4D8               	btfsc	status,2,c
 11439   0049A8  D70C               	goto	l23949
 11440   0049AA  D677               	goto	u25480
 11441   0049AC                     __end_of_nvProcessMessage:
 11442                           	callstack 0
 11443                           
 11444 ;; *************** function _mnsProcessMessage *****************
 11445 ;; Defined at:
 11446 ;;		line 351 in file "../../VLCBlib_PIC/mns.c"
 11447 ;; Parameters:    Size  Location     Type
 11448 ;;  m               2   63[BANK1 ] PTR struct Message
 11449 ;;		 -> poll@m(9), 
 11450 ;; Auto vars:     Size  Location     Type
 11451 ;;  d               2   66[BANK1 ] PTR struct DiagnosticVal
 11452 ;;		 -> producerDiagnostics(4), teachDiagnostics(4), canDiagnostics(38), nvDiagnostics(6), 
 11453 ;;		 -> mnsDiagnostics(14), ackDiagnostics(4), consumer2QDiagnostics(4), NULL(0), 
 11454 ;;  newMode         1   68[BANK1 ] unsigned char 
 11455 ;;  i               1   65[BANK1 ] unsigned char 
 11456 ;;  flags           1    0        unsigned char 
 11457 ;; Return value:  Size  Location     Type
 11458 ;;                  1    wreg      enum E12793
 11459 ;; Registers used:
 11460 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 11461 ;; Tracked objects:
 11462 ;;		On entry : 0/0
 11463 ;;		On exit  : 0/0
 11464 ;;		Unchanged: 0/0
 11465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11466 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11467 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11468 ;;      Temps:          0       0       0      30       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11469 ;;      Totals:         0       0       6      30       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11470 ;;Total ram usage:       36 bytes
 11471 ;; Hardware stack levels used: 1
 11472 ;; Hardware stack levels required when called: 27
 11473 ;; This function calls:
 11474 ;;		NULL
 11475 ;;		_ackGetDiagnostic
 11476 ;;		_bootEsdData
 11477 ;;		_canEsdData
 11478 ;;		_canGetDiagnostic
 11479 ;;		_consumer2QEsdData
 11480 ;;		_consumer2QGetDiagnostic
 11481 ;;		_factoryReset
 11482 ;;		_findServiceIndex
 11483 ;;		_getParameter
 11484 ;;		_getParameterFlags
 11485 ;;		_mnsGetDiagnostic
 11486 ;;		_nvGetDiagnostic
 11487 ;;		_nvGetESDdata
 11488 ;;		_producerEsdData
 11489 ;;		_producerGetDiagnostic
 11490 ;;		_rebuildHashtable
 11491 ;;		_sendMessage2
 11492 ;;		_sendMessage3
 11493 ;;		_sendMessage4
 11494 ;;		_sendMessage5
 11495 ;;		_sendMessage6
 11496 ;;		_sendMessage7
 11497 ;;		_setLEDsByMode
 11498 ;;		_startTimedResponse
 11499 ;;		_teachGetDiagnostic
 11500 ;;		_teachGetESDdata
 11501 ;;		_writeNVM
 11502 ;; This function is called by:
 11503 ;;		_poll
 11504 ;; This function uses a non-reentrant model
 11505 ;;
 11506                           
 11507                           	psect	text23
 11508   0016CE                     __ptext23:
 11509                           	callstack 0
 11510   0016CE                     _mnsProcessMessage:
 11511                           	callstack 2
 11512                           
 11513                           ;../../VLCBlib_PIC/mns.c: 352:     uint8_t i;;../../VLCBlib_PIC/mns.c: 353:     uint8_t 
      +                          flags;;../../VLCBlib_PIC/mns.c: 355:     uint8_t newMode;;../../VLCBlib_PIC/mns.c: 360: 
      +                              if (mode_state == MODE_SETUP) {
 11514                           
 11515                           ;incstack = 0
 11516   0016CE  0100               	movlb	0	; () banked
 11517   0016D0  51C5               	movf	_mode_state& (0+255),w,b
 11518   0016D2  B4D8               	btfsc	status,2,c
 11519   0016D4  D0BC               	goto	l23473
 11520   0016D6  D127               	goto	l23519
 11521   0016D8                     l23429:
 11522                           
 11523                           ; BSR set to: 2
 11524                           ;../../VLCBlib_PIC/mns.c: 363:                 if (m->len < 3) {
 11525   0016D8  C1F9  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11526   0016DC  C1FA  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11527   0016E0  0E03               	movlw	3
 11528   0016E2  60DF               	cpfslt	indf2,c
 11529   0016E4  D00F               	goto	l23433
 11530                           
 11531                           ; BSR set to: 2
 11532                           ;../../VLCBlib_PIC/mns.c: 365:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_SNN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11533   0016E6  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 11534   0016EA  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 11535   0016EE  0E42               	movlw	66
 11536   0016F0  0101               	movlb	1	; () banked
 11537   0016F2  6FC4               	movwf	sendMessage5@data3& (0+255),b
 11538   0016F4  0E01               	movlw	1
 11539   0016F6  6FC5               	movwf	sendMessage5@data4& (0+255),b
 11540   0016F8  0E01               	movlw	1
 11541   0016FA  6FC6               	movwf	sendMessage5@data5& (0+255),b
 11542   0016FC  0EAF               	movlw	175
 11543   0016FE  ECE1  F05F         	call	_sendMessage5
 11544                           
 11545                           ;../../VLCBlib_PIC/mns.c: 367:                 } else {
 11546   001702  D03C               	goto	l23449
 11547   001704                     l23433:
 11548                           
 11549                           ; BSR set to: 2
 11550                           ;../../VLCBlib_PIC/mns.c: 368:                     nn.bytes.hi = m->bytes[0];
 11551   001704  0101               	movlb	1	; () banked
 11552   001706  EE20 F002          	lfsr	2,2
 11553   00170A  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 11554   00170C  26D9               	addwf	fsr2l,f,c
 11555   00170E  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11556   001710  22DA               	addwfc	fsr2h,f,c
 11557   001712  50DF               	movf	indf2,w,c
 11558   001714  0100               	movlb	0	; () banked
 11559   001716  6FBE               	movwf	(_nn+1)& (0+255),b
 11560                           
 11561                           ;../../VLCBlib_PIC/mns.c: 369:                     nn.bytes.lo = m->bytes[1];
 11562   001718  0101               	movlb	1	; () banked
 11563   00171A  EE20 F003          	lfsr	2,3
 11564   00171E  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 11565   001720  26D9               	addwf	fsr2l,f,c
 11566   001722  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11567   001724  22DA               	addwfc	fsr2h,f,c
 11568   001726  50DF               	movf	indf2,w,c
 11569   001728  0100               	movlb	0	; () banked
 11570   00172A  6FBD               	movwf	_nn& (0+255),b
 11571                           
 11572                           ; BSR set to: 0
 11573                           ;../../VLCBlib_PIC/mns.c: 370:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC +1, n
      +                          n.bytes.hi);
 11574   00172C  0EFD               	movlw	253
 11575   00172E  6FA4               	movwf	writeNVM@index& (0+255),b
 11576   001730  0E03               	movlw	3
 11577   001732  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 11578   001734  0E00               	movlw	0
 11579   001736  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 11580   001738  C0BE  F0A7         	movff	_nn+1,writeNVM@value
 11581   00173C  0E00               	movlw	0
 11582   00173E  EC60  F05C         	call	_writeNVM
 11583                           
 11584                           ;../../VLCBlib_PIC/mns.c: 371:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC, nn.b
      +                          ytes.lo);
 11585   001742  0EFC               	movlw	252
 11586   001744  0100               	movlb	0	; () banked
 11587   001746  6FA4               	movwf	writeNVM@index& (0+255),b
 11588   001748  0E03               	movlw	3
 11589   00174A  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 11590   00174C  0E00               	movlw	0
 11591   00174E  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 11592   001750  C0BD  F0A7         	movff	_nn,writeNVM@value
 11593   001754  0E00               	movlw	0
 11594   001756  EC60  F05C         	call	_writeNVM
 11595                           
 11596                           ;../../VLCBlib_PIC/mns.c: 373:                     mode_state = MODE_NORMAL;
 11597   00175A  0E01               	movlw	1
 11598   00175C  0100               	movlb	0	; () banked
 11599   00175E  6FC5               	movwf	_mode_state& (0+255),b
 11600                           
 11601                           ; BSR set to: 0
 11602                           ;../../VLCBlib_PIC/mns.c: 376:                     rebuildHashtable();
 11603   001760  EC93  F03E         	call	_rebuildHashtable	;wreg free
 11604                           
 11605                           ;../../VLCBlib_PIC/mns.c: 379:                     sendMessage2(OPC_NNACK, nn.bytes.hi, 
      +                          nn.bytes.lo);
 11606   001764  C0BE  F0A6         	movff	_nn+1,sendMessage2@data1
 11607   001768  C0BD  F0A7         	movff	_nn,sendMessage2@data2
 11608   00176C  0E52               	movlw	82
 11609   00176E  ECB1  F05F         	call	_sendMessage2
 11610                           
 11611                           ;../../VLCBlib_PIC/mns.c: 381:                     mnsDiagnostics[0x05].asUint++;
 11612   001772  0101               	movlb	1	; () banked
 11613   001774  4B97               	infsnz	(_mnsDiagnostics+10)& (0+255),f,b
 11614   001776  2B98               	incf	(_mnsDiagnostics+11)& (0+255),f,b
 11615   001778                     l23447:
 11616                           
 11617                           ;../../VLCBlib_PIC/mns.c: 384:                     setLEDsByMode();
 11618   001778  EC50  F05F         	call	_setLEDsByMode	;wreg free
 11619   00177C                     l23449:
 11620                           
 11621                           ;../../VLCBlib_PIC/mns.c: 386:                 return PROCESSED;
 11622   00177C  0E01               	movlw	1
 11623   00177E  0012               	return	
 11624   001780                     l23453:
 11625                           
 11626                           ; BSR set to: 2
 11627                           ;../../VLCBlib_PIC/mns.c: 388:                 sendMessage7(OPC_PARAMS, MANU_MERG, 'a',
 11628   001780  0EA5               	movlw	165
 11629   001782  0101               	movlb	1	; () banked
 11630   001784  6FC2               	movwf	sendMessage7@data1& (0+255),b
 11631   001786  0E61               	movlw	97
 11632   001788  6FC3               	movwf	sendMessage7@data2& (0+255),b
 11633   00178A  0E20               	movlw	32
 11634   00178C  6FC4               	movwf	sendMessage7@data3& (0+255),b
 11635   00178E  0EFF               	movlw	255
 11636   001790  6FC5               	movwf	sendMessage7@data4& (0+255),b
 11637   001792  0E14               	movlw	20
 11638   001794  6FC6               	movwf	sendMessage7@data5& (0+255),b
 11639   001796  0E7F               	movlw	127
 11640   001798  6FC7               	movwf	sendMessage7@data6& (0+255),b
 11641   00179A  0E04               	movlw	4
 11642   00179C  6FC8               	movwf	sendMessage7@data7& (0+255),b
 11643   00179E  0EEF               	movlw	239
 11644   0017A0  ECC9  F05F         	call	_sendMessage7
 11645   0017A4  D7EB               	goto	l23449
 11646   0017A6                     l23459:
 11647                           
 11648                           ; BSR set to: 2
 11649                           ;../../VLCBlib_PIC/mns.c: 393:                 sendMessage7(OPC_NAME, name[0], name[1], 
      +                          name[2], name[3],
 11650   0017A6  0E48               	movlw	72
 11651   0017A8  6EF6               	movwf	tblptrl,c
 11652   0017AA                     	if	1	;There is more than 1 active tblptr byte
 11653   0017AA  0E08               	movlw	8
 11654   0017AC  6EF7               	movwf	tblptrh,c
 11655   0017AE                     	endif
 11656   0017AE                     	if	1	;There are 3 active tblptr bytes
 11657   0017AE  0E00               	movlw	0
 11658   0017B0  6EF8               	movwf	tblptru,c
 11659   0017B2                     	endif
 11660   0017B2  0008               	tblrd		*
 11661   0017B4  CFF5 F1C2          	movff	tablat,sendMessage7@data1
 11662   0017B8  0E49               	movlw	73
 11663   0017BA  6EF6               	movwf	tblptrl,c
 11664   0017BC  0E08               	movlw	8
 11665   0017BE  6EF7               	movwf	tblptrh,c
 11666   0017C0  0E00               	movlw	0
 11667   0017C2  6EF8               	movwf	tblptru,c
 11668   0017C4  0008               	tblrd		*
 11669   0017C6  CFF5 F1C3          	movff	tablat,sendMessage7@data2
 11670   0017CA  0E4A               	movlw	74
 11671   0017CC  6EF6               	movwf	tblptrl,c
 11672   0017CE  0E08               	movlw	8
 11673   0017D0  6EF7               	movwf	tblptrh,c
 11674   0017D2  0E00               	movlw	0
 11675   0017D4  6EF8               	movwf	tblptru,c
 11676   0017D6  0008               	tblrd		*
 11677   0017D8  CFF5 F1C4          	movff	tablat,sendMessage7@data3
 11678   0017DC  0E4B               	movlw	75
 11679   0017DE  6EF6               	movwf	tblptrl,c
 11680   0017E0  0E08               	movlw	8
 11681   0017E2  6EF7               	movwf	tblptrh,c
 11682   0017E4  0E00               	movlw	0
 11683   0017E6  6EF8               	movwf	tblptru,c
 11684   0017E8  0008               	tblrd		*
 11685   0017EA  CFF5 F1C5          	movff	tablat,sendMessage7@data4
 11686   0017EE  0E4C               	movlw	76
 11687   0017F0  6EF6               	movwf	tblptrl,c
 11688   0017F2  0E08               	movlw	8
 11689   0017F4  6EF7               	movwf	tblptrh,c
 11690   0017F6  0E00               	movlw	0
 11691   0017F8  6EF8               	movwf	tblptru,c
 11692   0017FA  0008               	tblrd		*
 11693   0017FC  CFF5 F1C6          	movff	tablat,sendMessage7@data5
 11694   001800  0E4D               	movlw	77
 11695   001802  6EF6               	movwf	tblptrl,c
 11696   001804  0E08               	movlw	8
 11697   001806  6EF7               	movwf	tblptrh,c
 11698   001808  0E00               	movlw	0
 11699   00180A  6EF8               	movwf	tblptru,c
 11700   00180C  0008               	tblrd		*
 11701   00180E  CFF5 F1C7          	movff	tablat,sendMessage7@data6
 11702   001812  0E4E               	movlw	78
 11703   001814  6EF6               	movwf	tblptrl,c
 11704   001816  0E08               	movlw	8
 11705   001818  6EF7               	movwf	tblptrh,c
 11706   00181A  0E00               	movlw	0
 11707   00181C  6EF8               	movwf	tblptru,c
 11708   00181E  0008               	tblrd		*
 11709   001820  CFF5 F1C8          	movff	tablat,sendMessage7@data7
 11710   001824  0EE2               	movlw	226
 11711   001826  ECC9  F05F         	call	_sendMessage7
 11712   00182A  D7A8               	goto	l23449
 11713   00182C                     l23465:
 11714                           
 11715                           ; BSR set to: 2
 11716                           ;../../VLCBlib_PIC/mns.c: 397:                 sendMessage5(OPC_PNN, 0,0, MANU_MERG, MTY
      +                          P_CANMIO, getParameterFlags());
 11717   00182C  0E00               	movlw	0
 11718   00182E  0101               	movlb	1	; () banked
 11719   001830  6FC2               	movwf	sendMessage5@data1& (0+255),b
 11720   001832  0E00               	movlw	0
 11721   001834  6FC3               	movwf	sendMessage5@data2& (0+255),b
 11722   001836  0EA5               	movlw	165
 11723   001838  6FC4               	movwf	sendMessage5@data3& (0+255),b
 11724   00183A  0E20               	movlw	32
 11725   00183C  6FC5               	movwf	sendMessage5@data4& (0+255),b
 11726   00183E  ECB8  F05A         	call	_getParameterFlags	;wreg free
 11727   001842  0101               	movlb	1	; () banked
 11728   001844  6FC6               	movwf	sendMessage5@data5& (0+255),b
 11729   001846  0EB6               	movlw	182
 11730   001848  ECE1  F05F         	call	_sendMessage5
 11731   00184C  D797               	goto	l23449
 11732   00184E                     l23473:
 11733                           
 11734                           ; BSR set to: 0
 11735   00184E  0101               	movlb	1	; () banked
 11736   001850  EE20 F001          	lfsr	2,1
 11737   001854  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 11738   001856  26D9               	addwf	fsr2l,f,c
 11739   001858  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11740   00185A  22DA               	addwfc	fsr2h,f,c
 11741   00185C  50DF               	movf	indf2,w,c
 11742   00185E  0102               	movlb	2	; () banked
 11743   001860  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 11744   001862  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11745                           
 11746                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11747                           ; Switch size 1, requested type "simple"
 11748                           ; Number of cases is 1, Range of values is 0 to 0
 11749                           ; switch strategies available:
 11750                           ; Name         Instructions Cycles
 11751                           ; simple_byte            4     3 (average)
 11752                           ;	Chosen strategy is simple_byte
 11753   001864  51CD               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 11754   001866  0A00               	xorlw	0	; case 0
 11755   001868  A4D8               	btfss	status,2,c
 11756   00186A  D00D               	goto	l23475
 11757                           
 11758                           ; BSR set to: 2
 11759                           ; Switch size 1, requested type "simple"
 11760                           ; Number of cases is 4, Range of values is 13 to 66
 11761                           ; switch strategies available:
 11762                           ; Name         Instructions Cycles
 11763                           ; simple_byte           13     7 (average)
 11764                           ;	Chosen strategy is simple_byte
 11765   00186C  51CC               	movf	??_mnsProcessMessage& (0+255),w,b
 11766   00186E  0A0D               	xorlw	13	; case 13
 11767   001870  B4D8               	btfsc	status,2,c
 11768   001872  D7DC               	goto	l23465
 11769   001874  0A1D               	xorlw	29	; case 16
 11770   001876  B4D8               	btfsc	status,2,c
 11771   001878  D783               	goto	l23453
 11772   00187A  0A01               	xorlw	1	; case 17
 11773   00187C  B4D8               	btfsc	status,2,c
 11774   00187E  D793               	goto	l23459
 11775   001880  0A53               	xorlw	83	; case 66
 11776   001882  B4D8               	btfsc	status,2,c
 11777   001884  D729               	goto	l23429
 11778   001886                     l23475:
 11779                           
 11780                           ;../../VLCBlib_PIC/mns.c: 402:         return NOT_PROCESSED;
 11781   001886  0E00               	movlw	0
 11782   001888  0012               	return	
 11783   00188A                     l23479:
 11784                           
 11785                           ; BSR set to: 2
 11786                           ;../../VLCBlib_PIC/mns.c: 407:             sendMessage5(OPC_PNN, nn.bytes.hi,nn.bytes.lo
      +                          , MANU_MERG, MTYP_CANMIO, getParameterFlags());
 11787   00188A  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 11788   00188E  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 11789   001892  0EA5               	movlw	165
 11790   001894  0101               	movlb	1	; () banked
 11791   001896  6FC4               	movwf	sendMessage5@data3& (0+255),b
 11792   001898  0E20               	movlw	32
 11793   00189A  6FC5               	movwf	sendMessage5@data4& (0+255),b
 11794   00189C  ECB8  F05A         	call	_getParameterFlags	;wreg free
 11795   0018A0  0101               	movlb	1	; () banked
 11796   0018A2  6FC6               	movwf	sendMessage5@data5& (0+255),b
 11797   0018A4  0EB6               	movlw	182
 11798   0018A6  ECE1  F05F         	call	_sendMessage5
 11799   0018AA  D768               	goto	l23449
 11800   0018AC                     l23485:
 11801                           
 11802                           ; BSR set to: 2
 11803                           ;../../VLCBlib_PIC/mns.c: 411:             if (m->len < 4) {
 11804   0018AC  C1F9  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11805   0018B0  C1FA  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11806   0018B4  0E04               	movlw	4
 11807   0018B6  60DF               	cpfslt	indf2,c
 11808   0018B8  D00F               	goto	l23493
 11809                           
 11810                           ; BSR set to: 2
 11811                           ;../../VLCBlib_PIC/mns.c: 412:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11812   0018BA  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 11813   0018BE  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 11814   0018C2  0E76               	movlw	118
 11815   0018C4  0101               	movlb	1	; () banked
 11816   0018C6  6FC4               	movwf	sendMessage5@data3& (0+255),b
 11817   0018C8  0E01               	movlw	1
 11818   0018CA  6FC5               	movwf	sendMessage5@data4& (0+255),b
 11819   0018CC  0E01               	movlw	1
 11820   0018CE  6FC6               	movwf	sendMessage5@data5& (0+255),b
 11821   0018D0  0EAF               	movlw	175
 11822   0018D2  ECE1  F05F         	call	_sendMessage5
 11823   0018D6  D752               	goto	l23449
 11824   0018D8                     l23493:
 11825                           
 11826                           ; BSR set to: 2
 11827                           ;../../VLCBlib_PIC/mns.c: 415:             if ((m->bytes[0] == 0) && (m->bytes[1] == 0))
      +                           {
 11828   0018D8  0101               	movlb	1	; () banked
 11829   0018DA  EE20 F002          	lfsr	2,2
 11830   0018DE  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 11831   0018E0  26D9               	addwf	fsr2l,f,c
 11832   0018E2  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11833   0018E4  22DA               	addwfc	fsr2h,f,c
 11834   0018E6  50DF               	movf	indf2,w,c
 11835   0018E8  A4D8               	btfss	status,2,c
 11836   0018EA  D033               	goto	l23521
 11837                           
 11838                           ; BSR set to: 1
 11839   0018EC  EE20 F003          	lfsr	2,3
 11840   0018F0  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 11841   0018F2  26D9               	addwf	fsr2l,f,c
 11842   0018F4  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11843   0018F6  22DA               	addwfc	fsr2h,f,c
 11844   0018F8  50DF               	movf	indf2,w,c
 11845   0018FA  A4D8               	btfss	status,2,c
 11846   0018FC  D02A               	goto	l23521
 11847                           
 11848                           ; BSR set to: 1
 11849                           ;../../VLCBlib_PIC/mns.c: 416:                 newMode = m->bytes[2];
 11850   0018FE  EE20 F004          	lfsr	2,4
 11851   001902  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 11852   001904  26D9               	addwf	fsr2l,f,c
 11853   001906  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11854   001908  22DA               	addwfc	fsr2h,f,c
 11855   00190A  50DF               	movf	indf2,w,c
 11856   00190C  6FFE               	movwf	mnsProcessMessage@newMode& (0+255),b
 11857                           
 11858                           ; BSR set to: 1
 11859                           ;../../VLCBlib_PIC/mns.c: 418:                 if (newMode == MODE_HEARTBEAT_ON) {
 11860   00190E  0E0C               	movlw	12
 11861   001910  19FE               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 11862   001912  A4D8               	btfss	status,2,c
 11863   001914  D002               	goto	l23509
 11864                           
 11865                           ; BSR set to: 1
 11866                           ;../../VLCBlib_PIC/mns.c: 419:                     mode_flags |= 4;
 11867   001916  8566               	bsf	_mode_flags& (0+255),2,b
 11868   001918  D731               	goto	l23449
 11869   00191A                     l23509:
 11870                           
 11871                           ; BSR set to: 1
 11872   00191A  0E0D               	movlw	13
 11873   00191C  19FE               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 11874   00191E  A4D8               	btfss	status,2,c
 11875   001920  D018               	goto	l23521
 11876                           
 11877                           ; BSR set to: 1
 11878                           ;../../VLCBlib_PIC/mns.c: 423:                     mode_flags &= ~4;
 11879   001922  9566               	bcf	_mode_flags& (0+255),2,b
 11880   001924  D72B               	goto	l23449
 11881   001926                     l23519:
 11882                           
 11883                           ; BSR set to: 0
 11884   001926  0101               	movlb	1	; () banked
 11885   001928  EE20 F001          	lfsr	2,1
 11886   00192C  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 11887   00192E  26D9               	addwf	fsr2l,f,c
 11888   001930  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11889   001932  22DA               	addwfc	fsr2h,f,c
 11890   001934  50DF               	movf	indf2,w,c
 11891   001936  0102               	movlb	2	; () banked
 11892   001938  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 11893   00193A  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11894                           
 11895                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11896                           ; Switch size 1, requested type "simple"
 11897                           ; Number of cases is 1, Range of values is 0 to 0
 11898                           ; switch strategies available:
 11899                           ; Name         Instructions Cycles
 11900                           ; simple_byte            4     3 (average)
 11901                           ;	Chosen strategy is simple_byte
 11902   00193C  51CD               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 11903   00193E  0A00               	xorlw	0	; case 0
 11904   001940  A4D8               	btfss	status,2,c
 11905   001942  D007               	goto	l23521
 11906                           
 11907                           ; BSR set to: 2
 11908                           ; Switch size 1, requested type "simple"
 11909                           ; Number of cases is 2, Range of values is 13 to 118
 11910                           ; switch strategies available:
 11911                           ; Name         Instructions Cycles
 11912                           ; simple_byte            7     4 (average)
 11913                           ;	Chosen strategy is simple_byte
 11914   001944  51CC               	movf	??_mnsProcessMessage& (0+255),w,b
 11915   001946  0A0D               	xorlw	13	; case 13
 11916   001948  B4D8               	btfsc	status,2,c
 11917   00194A  D79F               	goto	l23479
 11918   00194C  0A7B               	xorlw	123	; case 118
 11919   00194E  B4D8               	btfsc	status,2,c
 11920   001950  D7AD               	goto	l23485
 11921   001952                     l23521:
 11922                           
 11923                           ;../../VLCBlib_PIC/mns.c: 433:     if (m->len < 3) {
 11924   001952  C1F9  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11925   001956  C1FA  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11926   00195A  0E03               	movlw	3
 11927   00195C  60DF               	cpfslt	indf2,c
 11928   00195E  D001               	goto	l23527
 11929   001960  D792               	goto	l23475
 11930   001962                     l23527:
 11931                           
 11932                           ;../../VLCBlib_PIC/mns.c: 437:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED;
 11933   001962  0101               	movlb	1	; () banked
 11934   001964  EE20 F002          	lfsr	2,2
 11935   001968  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 11936   00196A  26D9               	addwf	fsr2l,f,c
 11937   00196C  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11938   00196E  22DA               	addwfc	fsr2h,f,c
 11939   001970  50DE               	movf	postinc2,w,c
 11940   001972  0100               	movlb	0	; () banked
 11941   001974  19BE               	xorwf	(_nn+1)& (0+255),w,b
 11942   001976  A4D8               	btfss	status,2,c
 11943   001978  D786               	goto	l23475
 11944                           
 11945                           ; BSR set to: 0
 11946                           ;../../VLCBlib_PIC/mns.c: 438:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED;
 11947   00197A  0101               	movlb	1	; () banked
 11948   00197C  EE20 F003          	lfsr	2,3
 11949   001980  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 11950   001982  26D9               	addwf	fsr2l,f,c
 11951   001984  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11952   001986  22DA               	addwfc	fsr2h,f,c
 11953   001988  0100               	movlb	0	; () banked
 11954   00198A  51BD               	movf	_nn& (0+255),w,b
 11955   00198C  18DE               	xorwf	postinc2,w,c
 11956   00198E  A4D8               	btfss	status,2,c
 11957   001990  D77A               	goto	l23475
 11958   001992  EFDF  F010         	goto	l23737
 11959   001996                     l23539:
 11960                           
 11961                           ; BSR set to: 2
 11962                           ;../../VLCBlib_PIC/mns.c: 442:             if (m->len < 4) {
 11963   001996  C1F9  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11964   00199A  C1FA  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11965   00199E  0E04               	movlw	4
 11966   0019A0  60DF               	cpfslt	indf2,c
 11967   0019A2  D00F               	goto	l23547
 11968                           
 11969                           ; BSR set to: 2
 11970                           ;../../VLCBlib_PIC/mns.c: 444:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQNPN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11971   0019A4  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 11972   0019A8  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 11973   0019AC  0E73               	movlw	115
 11974   0019AE  0101               	movlb	1	; () banked
 11975   0019B0  6FC4               	movwf	sendMessage5@data3& (0+255),b
 11976   0019B2  0E01               	movlw	1
 11977   0019B4  6FC5               	movwf	sendMessage5@data4& (0+255),b
 11978   0019B6  0E01               	movlw	1
 11979   0019B8  6FC6               	movwf	sendMessage5@data5& (0+255),b
 11980   0019BA  0EAF               	movlw	175
 11981   0019BC  ECE1  F05F         	call	_sendMessage5
 11982   0019C0  D6DD               	goto	l23449
 11983   0019C2                     l23547:
 11984                           
 11985                           ; BSR set to: 2
 11986                           ;../../VLCBlib_PIC/mns.c: 448:             if (m->bytes[2] > 20) {
 11987   0019C2  0101               	movlb	1	; () banked
 11988   0019C4  EE20 F004          	lfsr	2,4
 11989   0019C8  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 11990   0019CA  26D9               	addwf	fsr2l,f,c
 11991   0019CC  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11992   0019CE  22DA               	addwfc	fsr2h,f,c
 11993   0019D0  0E14               	movlw	20
 11994   0019D2  64DF               	cpfsgt	indf2,c
 11995   0019D4  D019               	goto	l23555
 11996                           
 11997                           ; BSR set to: 1
 11998                           ;../../VLCBlib_PIC/mns.c: 449:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, CMDERR_INV_PARAM_IDX);
 11999   0019D6  C0BE  F0A6         	movff	_nn+1,sendMessage3@data1
 12000   0019DA  C0BD  F0A7         	movff	_nn,sendMessage3@data2
 12001   0019DE  0E09               	movlw	9
 12002   0019E0  0100               	movlb	0	; () banked
 12003   0019E2  6FA8               	movwf	sendMessage3@data3& (0+255),b
 12004   0019E4  0E6F               	movlw	111
 12005   0019E6  EC3F  F060         	call	_sendMessage3
 12006                           
 12007                           ;../../VLCBlib_PIC/mns.c: 451:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQNPN, SERVICE_ID_MNS, CMDERR_INV_PARAM_IDX);
 12008   0019EA  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 12009   0019EE  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 12010   0019F2  0E73               	movlw	115
 12011   0019F4  0101               	movlb	1	; () banked
 12012   0019F6  6FC4               	movwf	sendMessage5@data3& (0+255),b
 12013   0019F8  0E01               	movlw	1
 12014   0019FA  6FC5               	movwf	sendMessage5@data4& (0+255),b
 12015   0019FC  0E09               	movlw	9
 12016   0019FE  6FC6               	movwf	sendMessage5@data5& (0+255),b
 12017   001A00  0EAF               	movlw	175
 12018   001A02  ECE1  F05F         	call	_sendMessage5
 12019   001A06  D6BA               	goto	l23449
 12020   001A08                     l23555:
 12021                           
 12022                           ; BSR set to: 1
 12023                           ;../../VLCBlib_PIC/mns.c: 455:             i = getParameter(m->bytes[2]);
 12024   001A08  EE20 F004          	lfsr	2,4
 12025   001A0C  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12026   001A0E  26D9               	addwf	fsr2l,f,c
 12027   001A10  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12028   001A12  22DA               	addwfc	fsr2h,f,c
 12029   001A14  50DF               	movf	indf2,w,c
 12030   001A16  EC24  F043         	call	_getParameter
 12031   001A1A  0101               	movlb	1	; () banked
 12032   001A1C  6FFB               	movwf	mnsProcessMessage@i& (0+255),b
 12033                           
 12034                           ; BSR set to: 1
 12035                           ;../../VLCBlib_PIC/mns.c: 456:             sendMessage4(OPC_PARAN, nn.bytes.hi, nn.bytes
      +                          .lo, m->bytes[2], i);
 12036   001A1E  C0BE  F1C2         	movff	_nn+1,sendMessage4@data1
 12037   001A22  C0BD  F1C3         	movff	_nn,sendMessage4@data2
 12038   001A26  EE20 F004          	lfsr	2,4
 12039   001A2A  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12040   001A2C  26D9               	addwf	fsr2l,f,c
 12041   001A2E  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12042   001A30  22DA               	addwfc	fsr2h,f,c
 12043   001A32  50DF               	movf	indf2,w,c
 12044   001A34  6FC4               	movwf	sendMessage4@data3& (0+255),b
 12045   001A36  C1FB  F1C5         	movff	mnsProcessMessage@i,sendMessage4@data4
 12046   001A3A  0E9B               	movlw	155
 12047   001A3C  ECF9  F05F         	call	_sendMessage4
 12048                           
 12049                           ;../../VLCBlib_PIC/mns.c: 458:             if (m->bytes[2] == 0) {
 12050   001A40  0101               	movlb	1	; () banked
 12051   001A42  EE20 F004          	lfsr	2,4
 12052   001A46  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12053   001A48  26D9               	addwf	fsr2l,f,c
 12054   001A4A  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12055   001A4C  22DA               	addwfc	fsr2h,f,c
 12056   001A4E  50DF               	movf	indf2,w,c
 12057   001A50  A4D8               	btfss	status,2,c
 12058   001A52  D694               	goto	l23449
 12059                           
 12060                           ; BSR set to: 1
 12061                           ;../../VLCBlib_PIC/mns.c: 459:                 startTimedResponse(7, findServiceIndex(SE
      +                          RVICE_ID_MNS), mnsTRrqnpnCallback);
 12062   001A54  0E01               	movlw	1
 12063   001A56  ECBF  F056         	call	_findServiceIndex
 12064   001A5A  0100               	movlb	0	; () banked
 12065   001A5C  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 12066   001A5E  0E06               	movlw	low _mnsTRrqnpnCallback
 12067   001A60  6F92               	movwf	startTimedResponse@callback& (0+255),b
 12068   001A62  0EC1               	movlw	high _mnsTRrqnpnCallback
 12069   001A64  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 12070   001A66  0E07               	movlw	7
 12071   001A68  EC14  F05E         	call	_startTimedResponse
 12072   001A6C  D687               	goto	l23449
 12073   001A6E                     l1476:
 12074                           
 12075                           ; BSR set to: 2
 12076                           ;../../VLCBlib_PIC/mns.c: 464:             previousNN.word = nn.word;
 12077   001A6E  C0BD  F160         	movff	_nn,_previousNN
 12078   001A72  C0BE  F161         	movff	_nn+1,_previousNN+1
 12079                           
 12080                           ; BSR set to: 2
 12081                           ;../../VLCBlib_PIC/mns.c: 465:             factoryReset();
 12082   001A76  ECB1  F042         	call	_factoryReset	;wreg free
 12083                           
 12084                           ;../../VLCBlib_PIC/mns.c: 466:             if (previousNN.word != 0) {
 12085   001A7A  0101               	movlb	1	; () banked
 12086   001A7C  5160               	movf	_previousNN& (0+255),w,b
 12087   001A7E  1161               	iorwf	(_previousNN+1)& (0+255),w,b
 12088   001A80  B4D8               	btfsc	status,2,c
 12089   001A82  D007               	goto	l1477
 12090                           
 12091                           ; BSR set to: 1
 12092                           ;../../VLCBlib_PIC/mns.c: 467:                 sendMessage2(OPC_NNREL, previousNN.bytes.
      +                          hi, previousNN.bytes.lo);
 12093   001A84  C161  F0A6         	movff	_previousNN+1,sendMessage2@data1
 12094   001A88  C160  F0A7         	movff	_previousNN,sendMessage2@data2
 12095   001A8C  0E51               	movlw	81
 12096   001A8E  ECB1  F05F         	call	_sendMessage2
 12097   001A92                     l1477:
 12098   001A92  00FF               	reset		;# 
 12099   001A94                     l23573:
 12100                           
 12101                           ;../../VLCBlib_PIC/mns.c: 472:             if (m->len < 5) {
 12102   001A94  C1F9  FFD9         	movff	mnsProcessMessage@m,fsr2l
 12103   001A98  C1FA  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 12104   001A9C  0E05               	movlw	5
 12105   001A9E  60DF               	cpfslt	indf2,c
 12106   001AA0  D00F               	goto	l23581
 12107                           
 12108                           ;../../VLCBlib_PIC/mns.c: 473:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RDGN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 12109   001AA2  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 12110   001AA6  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 12111   001AAA  0E87               	movlw	135
 12112   001AAC  0101               	movlb	1	; () banked
 12113   001AAE  6FC4               	movwf	sendMessage5@data3& (0+255),b
 12114   001AB0  0E01               	movlw	1
 12115   001AB2  6FC5               	movwf	sendMessage5@data4& (0+255),b
 12116   001AB4  0E01               	movlw	1
 12117   001AB6  6FC6               	movwf	sendMessage5@data5& (0+255),b
 12118   001AB8  0EAF               	movlw	175
 12119   001ABA  ECE1  F05F         	call	_sendMessage5
 12120   001ABE  D65E               	goto	l23449
 12121   001AC0                     l23581:
 12122                           
 12123                           ;../../VLCBlib_PIC/mns.c: 476:             if (m->bytes[2] == 0) {
 12124   001AC0  0101               	movlb	1	; () banked
 12125   001AC2  EE20 F004          	lfsr	2,4
 12126   001AC6  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12127   001AC8  26D9               	addwf	fsr2l,f,c
 12128   001ACA  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12129   001ACC  22DA               	addwfc	fsr2h,f,c
 12130   001ACE  50DF               	movf	indf2,w,c
 12131   001AD0  A4D8               	btfss	status,2,c
 12132   001AD2  D00B               	goto	l23585
 12133                           
 12134                           ; BSR set to: 1
 12135                           ;../../VLCBlib_PIC/mns.c: 478:                 startTimedResponse(4, 0, mnsTRallDiagnost
      +                          icsCallback);
 12136   001AD4  0E00               	movlw	0
 12137   001AD6  0100               	movlb	0	; () banked
 12138   001AD8  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 12139   001ADA  0E70               	movlw	low _mnsTRallDiagnosticsCallback
 12140   001ADC  6F92               	movwf	startTimedResponse@callback& (0+255),b
 12141   001ADE  0E81               	movlw	high _mnsTRallDiagnosticsCallback
 12142   001AE0  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 12143   001AE2  0E04               	movlw	4
 12144   001AE4  EC14  F05E         	call	_startTimedResponse
 12145                           
 12146                           ;../../VLCBlib_PIC/mns.c: 479:             } else {
 12147   001AE8  D649               	goto	l23449
 12148   001AEA                     l23585:
 12149                           
 12150                           ; BSR set to: 1
 12151                           ;../../VLCBlib_PIC/mns.c: 481:                 if (m->bytes[2] > 9) {
 12152   001AEA  EE20 F004          	lfsr	2,4
 12153   001AEE  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12154   001AF0  26D9               	addwf	fsr2l,f,c
 12155   001AF2  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12156   001AF4  22DA               	addwfc	fsr2h,f,c
 12157   001AF6  0E09               	movlw	9
 12158   001AF8  64DF               	cpfsgt	indf2,c
 12159   001AFA  D00E               	goto	l23593
 12160                           
 12161                           ; BSR set to: 1
 12162                           ;../../VLCBlib_PIC/mns.c: 482:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_SERVICE);
 12163   001AFC  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 12164   001B00  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 12165   001B04  0E87               	movlw	135
 12166   001B06  6FC4               	movwf	sendMessage5@data3& (0+255),b
 12167   001B08  0E01               	movlw	1
 12168   001B0A  6FC5               	movwf	sendMessage5@data4& (0+255),b
 12169   001B0C  0EFC               	movlw	252
 12170   001B0E  6FC6               	movwf	sendMessage5@data5& (0+255),b
 12171   001B10  0EAF               	movlw	175
 12172   001B12  ECE1  F05F         	call	_sendMessage5
 12173   001B16  D632               	goto	l23449
 12174   001B18                     l23593:
 12175                           
 12176                           ; BSR set to: 1
 12177                           ;../../VLCBlib_PIC/mns.c: 485:                 if (services[m->bytes[2]-1]->getDiagnosti
      +                          c == ((void*)0)) {
 12178   001B18  EE20 F004          	lfsr	2,4
 12179   001B1C  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12180   001B1E  26D9               	addwf	fsr2l,f,c
 12181   001B20  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12182   001B22  22DA               	addwfc	fsr2h,f,c
 12183   001B24  50DF               	movf	indf2,w,c
 12184   001B26  0102               	movlb	2	; () banked
 12185   001B28  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 12186   001B2A  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 12187   001B2C  90D8               	bcf	status,0,c
 12188   001B2E  37CC               	rlcf	??_mnsProcessMessage& (0+255),f,b
 12189   001B30  37CD               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 12190   001B32  0EFE               	movlw	254
 12191   001B34  25CC               	addwf	??_mnsProcessMessage& (0+255),w,b
 12192   001B36  6FCE               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 12193   001B38  0EFF               	movlw	255
 12194   001B3A  21CD               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 12195   001B3C  6FCF               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 12196   001B3E  0E69               	movlw	low _services
 12197   001B40  25CE               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 12198   001B42  6EF6               	movwf	tblptrl,c
 12199   001B44  0EEE               	movlw	high _services
 12200   001B46  21CF               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 12201   001B48  6EF7               	movwf	tblptrh,c
 12202   001B4A                     	if	1	;There are 3 active tblptr bytes
 12203   001B4A  6AF8               	clrf	tblptru,c
 12204   001B4C  0E00               	movlw	low (__mediumconst shr (0+16))
 12205   001B4E  22F8               	addwfc	tblptru,f,c
 12206   001B50                     	endif
 12207   001B50  0009               	tblrd		*+
 12208   001B52  CFF5 F2D0          	movff	tablat,??_mnsProcessMessage+4
 12209   001B56  0009               	tblrd		*+
 12210   001B58  CFF5 F2D1          	movff	tablat,??_mnsProcessMessage+5
 12211   001B5C  0E10               	movlw	16
 12212   001B5E  27D0               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 12213   001B60  0E00               	movlw	0
 12214   001B62  23D1               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 12215   001B64  C2D0  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 12216   001B68  C2D1  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 12217   001B6C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12218   001B6C  6AF8               	clrf	tblptru,c
 12219   001B6E                     	endif
 12220   001B6E                     	if	0	;tblptru may be non-zero
 12221   001B6E                     	endif
 12222   001B6E  0009               	tblrd		*+
 12223   001B70  50F5               	movf	tablat,w,c
 12224   001B72  0009               	tblrd		*+
 12225   001B74  10F5               	iorwf	tablat,w,c
 12226   001B76  A4D8               	btfss	status,2,c
 12227   001B78  D014               	goto	l23597
 12228                           
 12229                           ; BSR set to: 2
 12230                           ;../../VLCBlib_PIC/mns.c: 487:                     sendMessage5(OPC_DGN, nn.bytes.hi, nn
      +                          .bytes.lo, OPC_RDGN, m->bytes[2], 0);
 12231   001B7A  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 12232   001B7E  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 12233   001B82  0E87               	movlw	135
 12234   001B84  0101               	movlb	1	; () banked
 12235   001B86  6FC4               	movwf	sendMessage5@data3& (0+255),b
 12236   001B88  EE20 F004          	lfsr	2,4
 12237   001B8C  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12238   001B8E  26D9               	addwf	fsr2l,f,c
 12239   001B90  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12240   001B92  22DA               	addwfc	fsr2h,f,c
 12241   001B94  50DF               	movf	indf2,w,c
 12242   001B96  6FC5               	movwf	sendMessage5@data4& (0+255),b
 12243   001B98  0E00               	movlw	0
 12244   001B9A  6FC6               	movwf	sendMessage5@data5& (0+255),b
 12245   001B9C  0EC7               	movlw	199
 12246   001B9E  ECE1  F05F         	call	_sendMessage5
 12247   001BA2                     l23597:
 12248                           
 12249                           ;../../VLCBlib_PIC/mns.c: 489:                 if (m->bytes[3] == 0) {
 12250   001BA2  0101               	movlb	1	; () banked
 12251   001BA4  EE20 F005          	lfsr	2,5
 12252   001BA8  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12253   001BAA  26D9               	addwf	fsr2l,f,c
 12254   001BAC  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12255   001BAE  22DA               	addwfc	fsr2h,f,c
 12256   001BB0  50DF               	movf	indf2,w,c
 12257   001BB2  A4D8               	btfss	status,2,c
 12258   001BB4  D011               	goto	l23607
 12259                           
 12260                           ; BSR set to: 1
 12261                           ;../../VLCBlib_PIC/mns.c: 491:                     startTimedResponse(4, m->bytes[2], mn
      +                          sTRallDiagnosticsCallback);
 12262   001BB6  EE20 F004          	lfsr	2,4
 12263   001BBA  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12264   001BBC  26D9               	addwf	fsr2l,f,c
 12265   001BBE  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12266   001BC0  22DA               	addwfc	fsr2h,f,c
 12267   001BC2  50DF               	movf	indf2,w,c
 12268   001BC4  0100               	movlb	0	; () banked
 12269   001BC6  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 12270   001BC8  0E70               	movlw	low _mnsTRallDiagnosticsCallback
 12271   001BCA  6F92               	movwf	startTimedResponse@callback& (0+255),b
 12272   001BCC  0E81               	movlw	high _mnsTRallDiagnosticsCallback
 12273   001BCE  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 12274   001BD0  0E04               	movlw	4
 12275   001BD2  EC14  F05E         	call	_startTimedResponse
 12276   001BD6  D5D2               	goto	l23449
 12277   001BD8                     l23607:
 12278                           
 12279                           ; BSR set to: 1
 12280                           ;../../VLCBlib_PIC/mns.c: 494:                     DiagnosticVal * d = services[m->bytes
      +                          [2]-1]->getDiagnostic(m->bytes[3]);
 12281   001BD8  EE20 F004          	lfsr	2,4
 12282   001BDC  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12283   001BDE  26D9               	addwf	fsr2l,f,c
 12284   001BE0  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12285   001BE2  22DA               	addwfc	fsr2h,f,c
 12286   001BE4  50DF               	movf	indf2,w,c
 12287   001BE6  0102               	movlb	2	; () banked
 12288   001BE8  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 12289   001BEA  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 12290   001BEC  90D8               	bcf	status,0,c
 12291   001BEE  37CC               	rlcf	??_mnsProcessMessage& (0+255),f,b
 12292   001BF0  37CD               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 12293   001BF2  0EFE               	movlw	254
 12294   001BF4  25CC               	addwf	??_mnsProcessMessage& (0+255),w,b
 12295   001BF6  6FCE               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 12296   001BF8  0EFF               	movlw	255
 12297   001BFA  21CD               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 12298   001BFC  6FCF               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 12299   001BFE  0E69               	movlw	low _services
 12300   001C00  25CE               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 12301   001C02  6EF6               	movwf	tblptrl,c
 12302   001C04  0EEE               	movlw	high _services
 12303   001C06  21CF               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 12304   001C08  6EF7               	movwf	tblptrh,c
 12305   001C0A                     	if	1	;There are 3 active tblptr bytes
 12306   001C0A  6AF8               	clrf	tblptru,c
 12307   001C0C  0E00               	movlw	low (__mediumconst shr (0+16))
 12308   001C0E  22F8               	addwfc	tblptru,f,c
 12309   001C10                     	endif
 12310   001C10  0009               	tblrd		*+
 12311   001C12  CFF5 F2D0          	movff	tablat,??_mnsProcessMessage+4
 12312   001C16  0009               	tblrd		*+
 12313   001C18  CFF5 F2D1          	movff	tablat,??_mnsProcessMessage+5
 12314   001C1C  0E10               	movlw	16
 12315   001C1E  27D0               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 12316   001C20  0E00               	movlw	0
 12317   001C22  23D1               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 12318   001C24  C2D0  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 12319   001C28  C2D1  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 12320   001C2C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12321   001C2C  6AF8               	clrf	tblptru,c
 12322   001C2E                     	endif
 12323   001C2E                     	if	0	;tblptru may be non-zero
 12324   001C2E                     	endif
 12325   001C2E  0009               	tblrd		*+
 12326   001C30  CFF5 F2D2          	movff	tablat,??_mnsProcessMessage+6
 12327   001C34  0009               	tblrd		*+
 12328   001C36  CFF5 F2D3          	movff	tablat,??_mnsProcessMessage+7
 12329   001C3A  D801               	call	u25118
 12330   001C3C  D011               	goto	u25119
 12331   001C3E                     u25118:
 12332   001C3E  0005               	push	
 12333   001C40  6EFA               	movwf	pclath,c
 12334   001C42  51D2               	movf	(??_mnsProcessMessage+6)& (0+255),w,b
 12335   001C44  6EFD               	movwf	tosl,c
 12336   001C46  51D3               	movf	(??_mnsProcessMessage+7)& (0+255),w,b
 12337   001C48  6EFE               	movwf	tosh,c
 12338   001C4A  6AFF               	clrf	tosu,c
 12339   001C4C  50FA               	movf	pclath,w,c
 12340   001C4E  0101               	movlb	1	; () banked
 12341   001C50  EE20 F005          	lfsr	2,5
 12342   001C54  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12343   001C56  26D9               	addwf	fsr2l,f,c
 12344   001C58  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12345   001C5A  22DA               	addwfc	fsr2h,f,c
 12346   001C5C  50DF               	movf	indf2,w,c
 12347   001C5E  0012               	return		;indir
 12348   001C60                     u25119:
 12349   001C60  C096  F1FC         	movff	?_producerGetDiagnostic,mnsProcessMessage@d
 12350   001C64  C097  F1FD         	movff	?_producerGetDiagnostic+1,mnsProcessMessage@d+1
 12351                           
 12352                           ;../../VLCBlib_PIC/mns.c: 495:                     if (d == ((void*)0)) {
 12353   001C68  0101               	movlb	1	; () banked
 12354   001C6A  51FC               	movf	mnsProcessMessage@d& (0+255),w,b
 12355   001C6C  11FD               	iorwf	(mnsProcessMessage@d+1)& (0+255),w,b
 12356   001C6E  A4D8               	btfss	status,2,c
 12357   001C70  D00E               	goto	l23613
 12358                           
 12359                           ; BSR set to: 1
 12360                           ;../../VLCBlib_PIC/mns.c: 497:                         sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_DIAGNOSTIC);
 12361   001C72  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 12362   001C76  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 12363   001C7A  0E87               	movlw	135
 12364   001C7C  6FC4               	movwf	sendMessage5@data3& (0+255),b
 12365   001C7E  0E01               	movlw	1
 12366   001C80  6FC5               	movwf	sendMessage5@data4& (0+255),b
 12367   001C82  0EFD               	movlw	253
 12368   001C84  6FC6               	movwf	sendMessage5@data5& (0+255),b
 12369   001C86  0EAF               	movlw	175
 12370   001C88  ECE1  F05F         	call	_sendMessage5
 12371                           
 12372                           ;../../VLCBlib_PIC/mns.c: 498:                     } else {
 12373   001C8C  D577               	goto	l23449
 12374   001C8E                     l23613:
 12375                           
 12376                           ; BSR set to: 1
 12377                           ;../../VLCBlib_PIC/mns.c: 500:                         sendMessage6(OPC_DGN, nn.bytes.hi
      +                          , nn.bytes.lo, m->bytes[2], m->bytes[3],d->asBytes.hi, d->asBytes.lo);
 12378   001C8E  C0BE  F1C2         	movff	_nn+1,sendMessage6@data1
 12379   001C92  C0BD  F1C3         	movff	_nn,sendMessage6@data2
 12380   001C96  EE20 F004          	lfsr	2,4
 12381   001C9A  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12382   001C9C  26D9               	addwf	fsr2l,f,c
 12383   001C9E  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12384   001CA0  22DA               	addwfc	fsr2h,f,c
 12385   001CA2  50DF               	movf	indf2,w,c
 12386   001CA4  6FC4               	movwf	sendMessage6@data3& (0+255),b
 12387   001CA6  EE20 F005          	lfsr	2,5
 12388   001CAA  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12389   001CAC  26D9               	addwf	fsr2l,f,c
 12390   001CAE  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12391   001CB0  22DA               	addwfc	fsr2h,f,c
 12392   001CB2  50DF               	movf	indf2,w,c
 12393   001CB4  6FC5               	movwf	sendMessage6@data4& (0+255),b
 12394   001CB6  EE20 F001          	lfsr	2,1
 12395   001CBA  51FC               	movf	mnsProcessMessage@d& (0+255),w,b
 12396   001CBC  26D9               	addwf	fsr2l,f,c
 12397   001CBE  51FD               	movf	(mnsProcessMessage@d+1)& (0+255),w,b
 12398   001CC0  22DA               	addwfc	fsr2h,f,c
 12399   001CC2  50DF               	movf	indf2,w,c
 12400   001CC4  6FC6               	movwf	sendMessage6@data5& (0+255),b
 12401   001CC6  C1FC  FFD9         	movff	mnsProcessMessage@d,fsr2l
 12402   001CCA  C1FD  FFDA         	movff	mnsProcessMessage@d+1,fsr2h
 12403   001CCE  50DF               	movf	indf2,w,c
 12404   001CD0  6FC7               	movwf	sendMessage6@data6& (0+255),b
 12405   001CD2  0EC7               	movlw	199
 12406   001CD4  EC99  F05F         	call	_sendMessage6
 12407   001CD8  D551               	goto	l23449
 12408   001CDA                     l23619:
 12409                           
 12410                           ; BSR set to: 2
 12411                           ;../../VLCBlib_PIC/mns.c: 508:             if (m->len < 4) {
 12412   001CDA  C1F9  FFD9         	movff	mnsProcessMessage@m,fsr2l
 12413   001CDE  C1FA  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 12414   001CE2  0E04               	movlw	4
 12415   001CE4  60DF               	cpfslt	indf2,c
 12416   001CE6  D00F               	goto	l23627
 12417                           
 12418                           ; BSR set to: 2
 12419                           ;../../VLCBlib_PIC/mns.c: 509:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQSD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 12420   001CE8  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 12421   001CEC  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 12422   001CF0  0E78               	movlw	120
 12423   001CF2  0101               	movlb	1	; () banked
 12424   001CF4  6FC4               	movwf	sendMessage5@data3& (0+255),b
 12425   001CF6  0E01               	movlw	1
 12426   001CF8  6FC5               	movwf	sendMessage5@data4& (0+255),b
 12427   001CFA  0E01               	movlw	1
 12428   001CFC  6FC6               	movwf	sendMessage5@data5& (0+255),b
 12429   001CFE  0EAF               	movlw	175
 12430   001D00  ECE1  F05F         	call	_sendMessage5
 12431   001D04  D53B               	goto	l23449
 12432   001D06                     l23627:
 12433                           
 12434                           ; BSR set to: 2
 12435                           ;../../VLCBlib_PIC/mns.c: 512:             if (m->bytes[2] == 0) {
 12436   001D06  0101               	movlb	1	; () banked
 12437   001D08  EE20 F004          	lfsr	2,4
 12438   001D0C  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12439   001D0E  26D9               	addwf	fsr2l,f,c
 12440   001D10  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12441   001D12  22DA               	addwfc	fsr2h,f,c
 12442   001D14  50DF               	movf	indf2,w,c
 12443   001D16  A4D8               	btfss	status,2,c
 12444   001D18  D018               	goto	l23633
 12445                           
 12446                           ; BSR set to: 1
 12447                           ;../../VLCBlib_PIC/mns.c: 514:                 sendMessage5(OPC_SD, nn.bytes.hi, nn.byte
      +                          s.lo, 0, 0, 9);
 12448   001D1A  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 12449   001D1E  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 12450   001D22  0E00               	movlw	0
 12451   001D24  6FC4               	movwf	sendMessage5@data3& (0+255),b
 12452   001D26  0E00               	movlw	0
 12453   001D28  6FC5               	movwf	sendMessage5@data4& (0+255),b
 12454   001D2A  0E09               	movlw	9
 12455   001D2C  6FC6               	movwf	sendMessage5@data5& (0+255),b
 12456   001D2E  0EAC               	movlw	172
 12457   001D30  ECE1  F05F         	call	_sendMessage5
 12458                           
 12459                           ;../../VLCBlib_PIC/mns.c: 516:                 startTimedResponse(3, SERVICE_ID_MNS, mns
      +                          TRserviceDiscoveryCallback);
 12460   001D34  0E01               	movlw	1
 12461   001D36  0100               	movlb	0	; () banked
 12462   001D38  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 12463   001D3A  0E06               	movlw	low _mnsTRserviceDiscoveryCallback
 12464   001D3C  6F92               	movwf	startTimedResponse@callback& (0+255),b
 12465   001D3E  0EA4               	movlw	high _mnsTRserviceDiscoveryCallback
 12466   001D40  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 12467   001D42  0E03               	movlw	3
 12468   001D44  EC14  F05E         	call	_startTimedResponse
 12469                           
 12470                           ;../../VLCBlib_PIC/mns.c: 517:             } else if (m->bytes[2] > 9) {
 12471   001D48  D519               	goto	l23449
 12472   001D4A                     l23633:
 12473                           
 12474                           ; BSR set to: 1
 12475   001D4A  EE20 F004          	lfsr	2,4
 12476   001D4E  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12477   001D50  26D9               	addwf	fsr2l,f,c
 12478   001D52  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12479   001D54  22DA               	addwfc	fsr2h,f,c
 12480   001D56  0E09               	movlw	9
 12481   001D58  64DF               	cpfsgt	indf2,c
 12482   001D5A  D00E               	goto	l23643
 12483                           
 12484                           ; BSR set to: 1
 12485                           ;../../VLCBlib_PIC/mns.c: 518:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQSD, SERVICE_ID_MNS, GRSP_INVALID_SERVICE);
 12486   001D5C  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 12487   001D60  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 12488   001D64  0E78               	movlw	120
 12489   001D66  6FC4               	movwf	sendMessage5@data3& (0+255),b
 12490   001D68  0E01               	movlw	1
 12491   001D6A  6FC5               	movwf	sendMessage5@data4& (0+255),b
 12492   001D6C  0EFC               	movlw	252
 12493   001D6E  6FC6               	movwf	sendMessage5@data5& (0+255),b
 12494   001D70  0EAF               	movlw	175
 12495   001D72  ECE1  F05F         	call	_sendMessage5
 12496   001D76  D502               	goto	l23449
 12497   001D78                     l23643:
 12498                           
 12499                           ; BSR set to: 1
 12500                           ;../../VLCBlib_PIC/mns.c: 522:                 if (services[m->bytes[2]-1]->getESDdata =
      +                          = ((void*)0)) {
 12501   001D78  EE20 F004          	lfsr	2,4
 12502   001D7C  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12503   001D7E  26D9               	addwf	fsr2l,f,c
 12504   001D80  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12505   001D82  22DA               	addwfc	fsr2h,f,c
 12506   001D84  50DF               	movf	indf2,w,c
 12507   001D86  0102               	movlb	2	; () banked
 12508   001D88  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 12509   001D8A  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 12510   001D8C  90D8               	bcf	status,0,c
 12511   001D8E  37CC               	rlcf	??_mnsProcessMessage& (0+255),f,b
 12512   001D90  37CD               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 12513   001D92  0EFE               	movlw	254
 12514   001D94  25CC               	addwf	??_mnsProcessMessage& (0+255),w,b
 12515   001D96  6FCE               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 12516   001D98  0EFF               	movlw	255
 12517   001D9A  21CD               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 12518   001D9C  6FCF               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 12519   001D9E  0E69               	movlw	low _services
 12520   001DA0  25CE               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 12521   001DA2  6EF6               	movwf	tblptrl,c
 12522   001DA4  0EEE               	movlw	high _services
 12523   001DA6  21CF               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 12524   001DA8  6EF7               	movwf	tblptrh,c
 12525   001DAA                     	if	1	;There are 3 active tblptr bytes
 12526   001DAA  6AF8               	clrf	tblptru,c
 12527   001DAC  0E00               	movlw	low (__mediumconst shr (0+16))
 12528   001DAE  22F8               	addwfc	tblptru,f,c
 12529   001DB0                     	endif
 12530   001DB0  0009               	tblrd		*+
 12531   001DB2  CFF5 F2D0          	movff	tablat,??_mnsProcessMessage+4
 12532   001DB6  0009               	tblrd		*+
 12533   001DB8  CFF5 F2D1          	movff	tablat,??_mnsProcessMessage+5
 12534   001DBC  0E0E               	movlw	14
 12535   001DBE  27D0               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 12536   001DC0  0E00               	movlw	0
 12537   001DC2  23D1               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 12538   001DC4  C2D0  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 12539   001DC8  C2D1  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 12540   001DCC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12541   001DCC  6AF8               	clrf	tblptru,c
 12542   001DCE                     	endif
 12543   001DCE                     	if	0	;tblptru may be non-zero
 12544   001DCE                     	endif
 12545   001DCE  0009               	tblrd		*+
 12546   001DD0  50F5               	movf	tablat,w,c
 12547   001DD2  0009               	tblrd		*+
 12548   001DD4  10F5               	iorwf	tablat,w,c
 12549   001DD6  A4D8               	btfss	status,2,c
 12550   001DD8  D042               	goto	l23647
 12551                           
 12552                           ; BSR set to: 2
 12553                           ;../../VLCBlib_PIC/mns.c: 523:                     sendMessage7(OPC_ESD, nn.bytes.hi, nn
      +                          .bytes.lo, m->bytes[2], services[m->bytes[2]-1]->serviceNo, 0,0,0);
 12554   001DDA  C0BE  F1C2         	movff	_nn+1,sendMessage7@data1
 12555   001DDE  C0BD  F1C3         	movff	_nn,sendMessage7@data2
 12556   001DE2  0101               	movlb	1	; () banked
 12557   001DE4  EE20 F004          	lfsr	2,4
 12558   001DE8  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12559   001DEA  26D9               	addwf	fsr2l,f,c
 12560   001DEC  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12561   001DEE  22DA               	addwfc	fsr2h,f,c
 12562   001DF0  50DF               	movf	indf2,w,c
 12563   001DF2  6FC4               	movwf	sendMessage7@data3& (0+255),b
 12564   001DF4  EE20 F004          	lfsr	2,4
 12565   001DF8  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12566   001DFA  26D9               	addwf	fsr2l,f,c
 12567   001DFC  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12568   001DFE  22DA               	addwfc	fsr2h,f,c
 12569   001E00  50DF               	movf	indf2,w,c
 12570   001E02  0102               	movlb	2	; () banked
 12571   001E04  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 12572   001E06  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 12573   001E08  90D8               	bcf	status,0,c
 12574   001E0A  37CC               	rlcf	??_mnsProcessMessage& (0+255),f,b
 12575   001E0C  37CD               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 12576   001E0E  0EFE               	movlw	254
 12577   001E10  25CC               	addwf	??_mnsProcessMessage& (0+255),w,b
 12578   001E12  6FCE               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 12579   001E14  0EFF               	movlw	255
 12580   001E16  21CD               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 12581   001E18  6FCF               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 12582   001E1A  0E69               	movlw	low _services
 12583   001E1C  25CE               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 12584   001E1E  6EF6               	movwf	tblptrl,c
 12585   001E20  0EEE               	movlw	high _services
 12586   001E22  21CF               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 12587   001E24  6EF7               	movwf	tblptrh,c
 12588   001E26                     	if	1	;There are 3 active tblptr bytes
 12589   001E26  6AF8               	clrf	tblptru,c
 12590   001E28  0E00               	movlw	low (__mediumconst shr (0+16))
 12591   001E2A  22F8               	addwfc	tblptru,f,c
 12592   001E2C                     	endif
 12593   001E2C  0009               	tblrd		*+
 12594   001E2E  CFF5 F2D0          	movff	tablat,??_mnsProcessMessage+4
 12595   001E32  0009               	tblrd		*+
 12596   001E34  CFF5 F2D1          	movff	tablat,??_mnsProcessMessage+5
 12597   001E38  C2D0  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 12598   001E3C  C2D1  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 12599   001E40                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12600   001E40  6AF8               	clrf	tblptru,c
 12601   001E42                     	endif
 12602   001E42                     	if	0	;tblptru may be non-zero
 12603   001E42                     	endif
 12604   001E42  0008               	tblrd		*
 12605   001E44  CFF5 F1C5          	movff	tablat,sendMessage7@data4
 12606   001E48  0E00               	movlw	0
 12607   001E4A  0101               	movlb	1	; () banked
 12608   001E4C  6FC6               	movwf	sendMessage7@data5& (0+255),b
 12609   001E4E  0E00               	movlw	0
 12610   001E50  6FC7               	movwf	sendMessage7@data6& (0+255),b
 12611   001E52  0E00               	movlw	0
 12612   001E54  6FC8               	movwf	sendMessage7@data7& (0+255),b
 12613   001E56  0EE7               	movlw	231
 12614   001E58  ECC9  F05F         	call	_sendMessage7
 12615                           
 12616                           ;../../VLCBlib_PIC/mns.c: 524:                 } else {
 12617   001E5C  D48F               	goto	l23449
 12618   001E5E                     l23647:
 12619                           
 12620                           ; BSR set to: 2
 12621                           ;../../VLCBlib_PIC/mns.c: 525:                     sendMessage7(OPC_ESD, nn.bytes.hi, nn
      +                          .bytes.lo, m->bytes[2], services[m->bytes[2]-1]->serviceNo,
 12622   001E5E  C0BE  F1C2         	movff	_nn+1,sendMessage7@data1
 12623   001E62  C0BD  F1C3         	movff	_nn,sendMessage7@data2
 12624   001E66  0101               	movlb	1	; () banked
 12625   001E68  EE20 F004          	lfsr	2,4
 12626   001E6C  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12627   001E6E  26D9               	addwf	fsr2l,f,c
 12628   001E70  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12629   001E72  22DA               	addwfc	fsr2h,f,c
 12630   001E74  50DF               	movf	indf2,w,c
 12631   001E76  6FC4               	movwf	sendMessage7@data3& (0+255),b
 12632   001E78  EE20 F004          	lfsr	2,4
 12633   001E7C  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12634   001E7E  26D9               	addwf	fsr2l,f,c
 12635   001E80  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12636   001E82  22DA               	addwfc	fsr2h,f,c
 12637   001E84  50DF               	movf	indf2,w,c
 12638   001E86  0102               	movlb	2	; () banked
 12639   001E88  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 12640   001E8A  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 12641   001E8C  90D8               	bcf	status,0,c
 12642   001E8E  37CC               	rlcf	??_mnsProcessMessage& (0+255),f,b
 12643   001E90  37CD               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 12644   001E92  0EFE               	movlw	254
 12645   001E94  25CC               	addwf	??_mnsProcessMessage& (0+255),w,b
 12646   001E96  6FCE               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 12647   001E98  0EFF               	movlw	255
 12648   001E9A  21CD               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 12649   001E9C  6FCF               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 12650   001E9E  0E69               	movlw	low _services
 12651   001EA0  25CE               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 12652   001EA2  6EF6               	movwf	tblptrl,c
 12653   001EA4  0EEE               	movlw	high _services
 12654   001EA6  21CF               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 12655   001EA8  6EF7               	movwf	tblptrh,c
 12656   001EAA                     	if	1	;There are 3 active tblptr bytes
 12657   001EAA  6AF8               	clrf	tblptru,c
 12658   001EAC  0E00               	movlw	low (__mediumconst shr (0+16))
 12659   001EAE  22F8               	addwfc	tblptru,f,c
 12660   001EB0                     	endif
 12661   001EB0  0009               	tblrd		*+
 12662   001EB2  CFF5 F2D0          	movff	tablat,??_mnsProcessMessage+4
 12663   001EB6  0009               	tblrd		*+
 12664   001EB8  CFF5 F2D1          	movff	tablat,??_mnsProcessMessage+5
 12665   001EBC  C2D0  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 12666   001EC0  C2D1  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 12667   001EC4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12668   001EC4  6AF8               	clrf	tblptru,c
 12669   001EC6                     	endif
 12670   001EC6                     	if	0	;tblptru may be non-zero
 12671   001EC6                     	endif
 12672   001EC6  0008               	tblrd		*
 12673   001EC8  CFF5 F1C5          	movff	tablat,sendMessage7@data4
 12674   001ECC  0101               	movlb	1	; () banked
 12675   001ECE  EE20 F004          	lfsr	2,4
 12676   001ED2  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12677   001ED4  26D9               	addwf	fsr2l,f,c
 12678   001ED6  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12679   001ED8  22DA               	addwfc	fsr2h,f,c
 12680   001EDA  50DF               	movf	indf2,w,c
 12681   001EDC  0102               	movlb	2	; () banked
 12682   001EDE  6FD2               	movwf	(??_mnsProcessMessage+6)& (0+255),b
 12683   001EE0  6BD3               	clrf	(??_mnsProcessMessage+7)& (0+255),b
 12684   001EE2  90D8               	bcf	status,0,c
 12685   001EE4  37D2               	rlcf	(??_mnsProcessMessage+6)& (0+255),f,b
 12686   001EE6  37D3               	rlcf	(??_mnsProcessMessage+7)& (0+255),f,b
 12687   001EE8  0EFE               	movlw	254
 12688   001EEA  25D2               	addwf	(??_mnsProcessMessage+6)& (0+255),w,b
 12689   001EEC  6FD4               	movwf	(??_mnsProcessMessage+8)& (0+255),b
 12690   001EEE  0EFF               	movlw	255
 12691   001EF0  21D3               	addwfc	(??_mnsProcessMessage+7)& (0+255),w,b
 12692   001EF2  6FD5               	movwf	(??_mnsProcessMessage+9)& (0+255),b
 12693   001EF4  0E69               	movlw	low _services
 12694   001EF6  25D4               	addwf	(??_mnsProcessMessage+8)& (0+255),w,b
 12695   001EF8  6EF6               	movwf	tblptrl,c
 12696   001EFA  0EEE               	movlw	high _services
 12697   001EFC  21D5               	addwfc	(??_mnsProcessMessage+9)& (0+255),w,b
 12698   001EFE  6EF7               	movwf	tblptrh,c
 12699   001F00                     	if	1	;There are 3 active tblptr bytes
 12700   001F00  6AF8               	clrf	tblptru,c
 12701   001F02  0E00               	movlw	low (__mediumconst shr (0+16))
 12702   001F04  22F8               	addwfc	tblptru,f,c
 12703   001F06                     	endif
 12704   001F06  0009               	tblrd		*+
 12705   001F08  CFF5 F2D6          	movff	tablat,??_mnsProcessMessage+10
 12706   001F0C  0009               	tblrd		*+
 12707   001F0E  CFF5 F2D7          	movff	tablat,??_mnsProcessMessage+11
 12708   001F12  0E0E               	movlw	14
 12709   001F14  27D6               	addwf	(??_mnsProcessMessage+10)& (0+255),f,b
 12710   001F16  0E00               	movlw	0
 12711   001F18  23D7               	addwfc	(??_mnsProcessMessage+11)& (0+255),f,b
 12712   001F1A  C2D6  FFF6         	movff	??_mnsProcessMessage+10,tblptrl
 12713   001F1E  C2D7  FFF7         	movff	??_mnsProcessMessage+11,tblptrh
 12714   001F22                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12715   001F22  6AF8               	clrf	tblptru,c
 12716   001F24                     	endif
 12717   001F24                     	if	0	;tblptru may be non-zero
 12718   001F24                     	endif
 12719   001F24  0009               	tblrd		*+
 12720   001F26  CFF5 F2D8          	movff	tablat,??_mnsProcessMessage+12
 12721   001F2A  0009               	tblrd		*+
 12722   001F2C  CFF5 F2D9          	movff	tablat,??_mnsProcessMessage+13
 12723   001F30  D801               	call	u25178
 12724   001F32  D00A               	goto	u25179
 12725   001F34                     u25178:
 12726   001F34  0005               	push	
 12727   001F36  6EFA               	movwf	pclath,c
 12728   001F38  51D8               	movf	(??_mnsProcessMessage+12)& (0+255),w,b
 12729   001F3A  6EFD               	movwf	tosl,c
 12730   001F3C  51D9               	movf	(??_mnsProcessMessage+13)& (0+255),w,b
 12731   001F3E  6EFE               	movwf	tosh,c
 12732   001F40  6AFF               	clrf	tosu,c
 12733   001F42  50FA               	movf	pclath,w,c
 12734   001F44  0E01               	movlw	1
 12735   001F46  0012               	return		;indir
 12736   001F48                     u25179:
 12737   001F48  0101               	movlb	1	; () banked
 12738   001F4A  6FC6               	movwf	sendMessage7@data5& (0+255),b
 12739   001F4C  EE20 F004          	lfsr	2,4
 12740   001F50  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12741   001F52  26D9               	addwf	fsr2l,f,c
 12742   001F54  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12743   001F56  22DA               	addwfc	fsr2h,f,c
 12744   001F58  50DF               	movf	indf2,w,c
 12745   001F5A  0102               	movlb	2	; () banked
 12746   001F5C  6FDA               	movwf	(??_mnsProcessMessage+14)& (0+255),b
 12747   001F5E  6BDB               	clrf	(??_mnsProcessMessage+15)& (0+255),b
 12748   001F60  90D8               	bcf	status,0,c
 12749   001F62  37DA               	rlcf	(??_mnsProcessMessage+14)& (0+255),f,b
 12750   001F64  37DB               	rlcf	(??_mnsProcessMessage+15)& (0+255),f,b
 12751   001F66  0EFE               	movlw	254
 12752   001F68  25DA               	addwf	(??_mnsProcessMessage+14)& (0+255),w,b
 12753   001F6A  6FDC               	movwf	(??_mnsProcessMessage+16)& (0+255),b
 12754   001F6C  0EFF               	movlw	255
 12755   001F6E  21DB               	addwfc	(??_mnsProcessMessage+15)& (0+255),w,b
 12756   001F70  6FDD               	movwf	(??_mnsProcessMessage+17)& (0+255),b
 12757   001F72  0E69               	movlw	low _services
 12758   001F74  25DC               	addwf	(??_mnsProcessMessage+16)& (0+255),w,b
 12759   001F76  6EF6               	movwf	tblptrl,c
 12760   001F78  0EEE               	movlw	high _services
 12761   001F7A  21DD               	addwfc	(??_mnsProcessMessage+17)& (0+255),w,b
 12762   001F7C  6EF7               	movwf	tblptrh,c
 12763   001F7E                     	if	1	;There are 3 active tblptr bytes
 12764   001F7E  6AF8               	clrf	tblptru,c
 12765   001F80  0E00               	movlw	low (__mediumconst shr (0+16))
 12766   001F82  22F8               	addwfc	tblptru,f,c
 12767   001F84                     	endif
 12768   001F84  0009               	tblrd		*+
 12769   001F86  CFF5 F2DE          	movff	tablat,??_mnsProcessMessage+18
 12770   001F8A  0009               	tblrd		*+
 12771   001F8C  CFF5 F2DF          	movff	tablat,??_mnsProcessMessage+19
 12772   001F90  0E0E               	movlw	14
 12773   001F92  27DE               	addwf	(??_mnsProcessMessage+18)& (0+255),f,b
 12774   001F94  0E00               	movlw	0
 12775   001F96  23DF               	addwfc	(??_mnsProcessMessage+19)& (0+255),f,b
 12776   001F98  C2DE  FFF6         	movff	??_mnsProcessMessage+18,tblptrl
 12777   001F9C  C2DF  FFF7         	movff	??_mnsProcessMessage+19,tblptrh
 12778   001FA0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12779   001FA0  6AF8               	clrf	tblptru,c
 12780   001FA2                     	endif
 12781   001FA2                     	if	0	;tblptru may be non-zero
 12782   001FA2                     	endif
 12783   001FA2  0009               	tblrd		*+
 12784   001FA4  CFF5 F2E0          	movff	tablat,??_mnsProcessMessage+20
 12785   001FA8  0009               	tblrd		*+
 12786   001FAA  CFF5 F2E1          	movff	tablat,??_mnsProcessMessage+21
 12787   001FAE  D801               	call	u25188
 12788   001FB0  D00A               	goto	u25189
 12789   001FB2                     u25188:
 12790   001FB2  0005               	push	
 12791   001FB4  6EFA               	movwf	pclath,c
 12792   001FB6  51E0               	movf	(??_mnsProcessMessage+20)& (0+255),w,b
 12793   001FB8  6EFD               	movwf	tosl,c
 12794   001FBA  51E1               	movf	(??_mnsProcessMessage+21)& (0+255),w,b
 12795   001FBC  6EFE               	movwf	tosh,c
 12796   001FBE  6AFF               	clrf	tosu,c
 12797   001FC0  50FA               	movf	pclath,w,c
 12798   001FC2  0E02               	movlw	2
 12799   001FC4  0012               	return		;indir
 12800   001FC6                     u25189:
 12801   001FC6  0101               	movlb	1	; () banked
 12802   001FC8  6FC7               	movwf	sendMessage7@data6& (0+255),b
 12803   001FCA  EE20 F004          	lfsr	2,4
 12804   001FCE  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12805   001FD0  26D9               	addwf	fsr2l,f,c
 12806   001FD2  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12807   001FD4  22DA               	addwfc	fsr2h,f,c
 12808   001FD6  50DF               	movf	indf2,w,c
 12809   001FD8  0102               	movlb	2	; () banked
 12810   001FDA  6FE2               	movwf	(??_mnsProcessMessage+22)& (0+255),b
 12811   001FDC  6BE3               	clrf	(??_mnsProcessMessage+23)& (0+255),b
 12812   001FDE  90D8               	bcf	status,0,c
 12813   001FE0  37E2               	rlcf	(??_mnsProcessMessage+22)& (0+255),f,b
 12814   001FE2  37E3               	rlcf	(??_mnsProcessMessage+23)& (0+255),f,b
 12815   001FE4  0EFE               	movlw	254
 12816   001FE6  25E2               	addwf	(??_mnsProcessMessage+22)& (0+255),w,b
 12817   001FE8  6FE4               	movwf	(??_mnsProcessMessage+24)& (0+255),b
 12818   001FEA  0EFF               	movlw	255
 12819   001FEC  21E3               	addwfc	(??_mnsProcessMessage+23)& (0+255),w,b
 12820   001FEE  6FE5               	movwf	(??_mnsProcessMessage+25)& (0+255),b
 12821   001FF0  0E69               	movlw	low _services
 12822   001FF2  25E4               	addwf	(??_mnsProcessMessage+24)& (0+255),w,b
 12823   001FF4  6EF6               	movwf	tblptrl,c
 12824   001FF6  0EEE               	movlw	high _services
 12825   001FF8  21E5               	addwfc	(??_mnsProcessMessage+25)& (0+255),w,b
 12826   001FFA  6EF7               	movwf	tblptrh,c
 12827   001FFC                     	if	1	;There are 3 active tblptr bytes
 12828   001FFC  6AF8               	clrf	tblptru,c
 12829   001FFE  0E00               	movlw	low (__mediumconst shr (0+16))
 12830   002000  22F8               	addwfc	tblptru,f,c
 12831   002002                     	endif
 12832   002002  0009               	tblrd		*+
 12833   002004  CFF5 F2E6          	movff	tablat,??_mnsProcessMessage+26
 12834   002008  0009               	tblrd		*+
 12835   00200A  CFF5 F2E7          	movff	tablat,??_mnsProcessMessage+27
 12836   00200E  0E0E               	movlw	14
 12837   002010  27E6               	addwf	(??_mnsProcessMessage+26)& (0+255),f,b
 12838   002012  0E00               	movlw	0
 12839   002014  23E7               	addwfc	(??_mnsProcessMessage+27)& (0+255),f,b
 12840   002016  C2E6  FFF6         	movff	??_mnsProcessMessage+26,tblptrl
 12841   00201A  C2E7  FFF7         	movff	??_mnsProcessMessage+27,tblptrh
 12842   00201E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12843   00201E  6AF8               	clrf	tblptru,c
 12844   002020                     	endif
 12845   002020                     	if	0	;tblptru may be non-zero
 12846   002020                     	endif
 12847   002020  0009               	tblrd		*+
 12848   002022  CFF5 F2E8          	movff	tablat,??_mnsProcessMessage+28
 12849   002026  0009               	tblrd		*+
 12850   002028  CFF5 F2E9          	movff	tablat,??_mnsProcessMessage+29
 12851   00202C  D801               	call	u25198
 12852   00202E  D00A               	goto	u25199
 12853   002030                     u25198:
 12854   002030  0005               	push	
 12855   002032  6EFA               	movwf	pclath,c
 12856   002034  51E8               	movf	(??_mnsProcessMessage+28)& (0+255),w,b
 12857   002036  6EFD               	movwf	tosl,c
 12858   002038  51E9               	movf	(??_mnsProcessMessage+29)& (0+255),w,b
 12859   00203A  6EFE               	movwf	tosh,c
 12860   00203C  6AFF               	clrf	tosu,c
 12861   00203E  50FA               	movf	pclath,w,c
 12862   002040  0E03               	movlw	3
 12863   002042  0012               	return		;indir
 12864   002044                     u25199:
 12865   002044  0101               	movlb	1	; () banked
 12866   002046  6FC8               	movwf	sendMessage7@data7& (0+255),b
 12867   002048  0EE7               	movlw	231
 12868   00204A  ECC9  F05F         	call	_sendMessage7
 12869   00204E  EFBE  F00B         	goto	l23449
 12870   002052                     l23653:
 12871                           
 12872                           ; BSR set to: 2
 12873                           ;../../VLCBlib_PIC/mns.c: 535:             if (m->len < 4) {
 12874   002052  C1F9  FFD9         	movff	mnsProcessMessage@m,fsr2l
 12875   002056  C1FA  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 12876   00205A  0E04               	movlw	4
 12877   00205C  60DF               	cpfslt	indf2,c
 12878   00205E  D010               	goto	l23661
 12879                           
 12880                           ; BSR set to: 2
 12881                           ;../../VLCBlib_PIC/mns.c: 536:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, CMDERR_INV_CMD);
 12882   002060  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 12883   002064  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 12884   002068  0E76               	movlw	118
 12885   00206A  0101               	movlb	1	; () banked
 12886   00206C  6FC4               	movwf	sendMessage5@data3& (0+255),b
 12887   00206E  0E01               	movlw	1
 12888   002070  6FC5               	movwf	sendMessage5@data4& (0+255),b
 12889   002072  0E01               	movlw	1
 12890   002074  6FC6               	movwf	sendMessage5@data5& (0+255),b
 12891   002076  0EAF               	movlw	175
 12892   002078  ECE1  F05F         	call	_sendMessage5
 12893   00207C  EFBE  F00B         	goto	l23449
 12894   002080                     l23661:
 12895                           
 12896                           ; BSR set to: 2
 12897                           ;../../VLCBlib_PIC/mns.c: 539:             newMode = m->bytes[2];
 12898   002080  0101               	movlb	1	; () banked
 12899   002082  EE20 F004          	lfsr	2,4
 12900   002086  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12901   002088  26D9               	addwf	fsr2l,f,c
 12902   00208A  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12903   00208C  22DA               	addwfc	fsr2h,f,c
 12904   00208E  50DF               	movf	indf2,w,c
 12905   002090  6FFE               	movwf	mnsProcessMessage@newMode& (0+255),b
 12906                           
 12907                           ; BSR set to: 1
 12908                           ;../../VLCBlib_PIC/mns.c: 540:             previousNN.word = nn.word;
 12909   002092  C0BD  F160         	movff	_nn,_previousNN
 12910   002096  C0BE  F161         	movff	_nn+1,_previousNN+1
 12911                           
 12912                           ;../../VLCBlib_PIC/mns.c: 542:             switch (mode_state) {
 12913   00209A  D05B               	goto	l23703
 12914   00209C                     l23665:
 12915                           
 12916                           ; BSR set to: 0
 12917                           ;../../VLCBlib_PIC/mns.c: 544:                     if (newMode == MODE_SETUP) {
 12918   00209C  0101               	movlb	1	; () banked
 12919   00209E  51FE               	movf	mnsProcessMessage@newMode& (0+255),w,b
 12920   0020A0  A4D8               	btfss	status,2,c
 12921   0020A2  D060               	goto	l23705
 12922                           
 12923                           ; BSR set to: 1
 12924                           ;../../VLCBlib_PIC/mns.c: 545:                         mode_state = MODE_SETUP;
 12925   0020A4  0E00               	movlw	0
 12926   0020A6  0100               	movlb	0	; () banked
 12927   0020A8  6FC5               	movwf	_mode_state& (0+255),b
 12928                           
 12929                           ; BSR set to: 0
 12930                           ;../../VLCBlib_PIC/mns.c: 546:                         setupModePreviousMode = MODE_UNIN
      +                          ITIALISED;
 12931   0020AA  0101               	movlb	1	; () banked
 12932   0020AC  6965               	setf	_setupModePreviousMode& (0+255),b
 12933                           
 12934                           ; BSR set to: 1
 12935                           ;../../VLCBlib_PIC/mns.c: 547:                         sendMessage5(OPC_GRSP, previousNN
      +                          .bytes.hi, previousNN.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 12936   0020AE  C161  F1C2         	movff	_previousNN+1,sendMessage5@data1
 12937   0020B2  C160  F1C3         	movff	_previousNN,sendMessage5@data2
 12938   0020B6  0E76               	movlw	118
 12939   0020B8  6FC4               	movwf	sendMessage5@data3& (0+255),b
 12940   0020BA  0E01               	movlw	1
 12941   0020BC  6FC5               	movwf	sendMessage5@data4& (0+255),b
 12942   0020BE  0E00               	movlw	0
 12943   0020C0  6FC6               	movwf	sendMessage5@data5& (0+255),b
 12944   0020C2  0EAF               	movlw	175
 12945   0020C4  ECE1  F05F         	call	_sendMessage5
 12946                           
 12947                           ;../../VLCBlib_PIC/mns.c: 549:                         sendMessage2(OPC_RQNN, nn.bytes.h
      +                          i, nn.bytes.lo);
 12948   0020C8  C0BE  F0A6         	movff	_nn+1,sendMessage2@data1
 12949   0020CC  C0BD  F0A7         	movff	_nn,sendMessage2@data2
 12950   0020D0  0E50               	movlw	80
 12951   0020D2  ECB1  F05F         	call	_sendMessage2
 12952   0020D6  EFBC  F00B         	goto	l23447
 12953   0020DA                     l23681:
 12954                           
 12955                           ; BSR set to: 0
 12956                           ;../../VLCBlib_PIC/mns.c: 558:                     if (newMode == MODE_SETUP) {
 12957   0020DA  0101               	movlb	1	; () banked
 12958   0020DC  51FE               	movf	mnsProcessMessage@newMode& (0+255),w,b
 12959   0020DE  A4D8               	btfss	status,2,c
 12960   0020E0  D041               	goto	l23705
 12961                           
 12962                           ; BSR set to: 1
 12963                           ;../../VLCBlib_PIC/mns.c: 559:                         sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 12964   0020E2  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 12965   0020E6  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 12966   0020EA  0E76               	movlw	118
 12967   0020EC  6FC4               	movwf	sendMessage5@data3& (0+255),b
 12968   0020EE  0E01               	movlw	1
 12969   0020F0  6FC5               	movwf	sendMessage5@data4& (0+255),b
 12970   0020F2  0E00               	movlw	0
 12971   0020F4  6FC6               	movwf	sendMessage5@data5& (0+255),b
 12972   0020F6  0EAF               	movlw	175
 12973   0020F8  ECE1  F05F         	call	_sendMessage5
 12974                           
 12975                           ;../../VLCBlib_PIC/mns.c: 562:                         sendMessage2(OPC_RQNN, nn.bytes.h
      +                          i, nn.bytes.lo);
 12976   0020FC  C0BE  F0A6         	movff	_nn+1,sendMessage2@data1
 12977   002100  C0BD  F0A7         	movff	_nn,sendMessage2@data2
 12978   002104  0E50               	movlw	80
 12979   002106  ECB1  F05F         	call	_sendMessage2
 12980                           
 12981                           ;../../VLCBlib_PIC/mns.c: 564:                         nn.bytes.lo = nn.bytes.hi = 0;
 12982   00210A  0E00               	movlw	0
 12983   00210C  0100               	movlb	0	; () banked
 12984   00210E  6FBE               	movwf	(_nn+1)& (0+255),b
 12985   002110  C0BE  F0BD         	movff	_nn+1,_nn
 12986                           
 12987                           ; BSR set to: 0
 12988                           ;../../VLCBlib_PIC/mns.c: 565:                         writeNVM(EEPROM_NVM_TYPE, 0x3FC +
      +                          1, nn.bytes.hi);
 12989   002114  0EFD               	movlw	253
 12990   002116  6FA4               	movwf	writeNVM@index& (0+255),b
 12991   002118  0E03               	movlw	3
 12992   00211A  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 12993   00211C  0E00               	movlw	0
 12994   00211E  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 12995   002120  C0BE  F0A7         	movff	_nn+1,writeNVM@value
 12996   002124  0E00               	movlw	0
 12997   002126  EC60  F05C         	call	_writeNVM
 12998                           
 12999                           ;../../VLCBlib_PIC/mns.c: 566:                         writeNVM(EEPROM_NVM_TYPE, 0x3FC, 
      +                          nn.bytes.lo);
 13000   00212A  0EFC               	movlw	252
 13001   00212C  0100               	movlb	0	; () banked
 13002   00212E  6FA4               	movwf	writeNVM@index& (0+255),b
 13003   002130  0E03               	movlw	3
 13004   002132  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 13005   002134  0E00               	movlw	0
 13006   002136  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 13007   002138  C0BD  F0A7         	movff	_nn,writeNVM@value
 13008   00213C  0E00               	movlw	0
 13009   00213E  EC60  F05C         	call	_writeNVM
 13010                           
 13011                           ;../../VLCBlib_PIC/mns.c: 568:                         mode_state = MODE_SETUP;
 13012   002142  0E00               	movlw	0
 13013   002144  0100               	movlb	0	; () banked
 13014   002146  6FC5               	movwf	_mode_state& (0+255),b
 13015                           
 13016                           ; BSR set to: 0
 13017                           ;../../VLCBlib_PIC/mns.c: 569:                         setupModePreviousMode = MODE_NORM
      +                          AL;
 13018   002148  0E01               	movlw	1
 13019   00214A  0101               	movlb	1	; () banked
 13020   00214C  6F65               	movwf	_setupModePreviousMode& (0+255),b
 13021   00214E  EFBC  F00B         	goto	l23447
 13022   002152                     l23703:
 13023                           
 13024                           ; BSR set to: 1
 13025   002152  0100               	movlb	0	; () banked
 13026   002154  51C5               	movf	_mode_state& (0+255),w,b
 13027                           
 13028                           ; Switch size 1, requested type "simple"
 13029                           ; Number of cases is 2, Range of values is 0 to 255
 13030                           ; switch strategies available:
 13031                           ; Name         Instructions Cycles
 13032                           ; simple_byte            7     4 (average)
 13033                           ;	Chosen strategy is simple_byte
 13034   002156  0A00               	xorlw	0	; case 0
 13035   002158  B4D8               	btfsc	status,2,c
 13036   00215A  D004               	goto	l23705
 13037   00215C  0AFF               	xorlw	255	; case 255
 13038   00215E  B4D8               	btfsc	status,2,c
 13039   002160  D79D               	goto	l23665
 13040   002162  D7BB               	goto	l23681
 13041   002164                     l23705:
 13042                           
 13043                           ;../../VLCBlib_PIC/mns.c: 578:             if (newMode == MODE_HEARTBEAT_ON) {
 13044   002164  0E0C               	movlw	12
 13045   002166  0101               	movlb	1	; () banked
 13046   002168  19FE               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 13047   00216A  A4D8               	btfss	status,2,c
 13048   00216C  D010               	goto	l23717
 13049                           
 13050                           ; BSR set to: 1
 13051                           ;../../VLCBlib_PIC/mns.c: 579:                 mode_flags |= 4;
 13052   00216E  8566               	bsf	_mode_flags& (0+255),2,b
 13053                           
 13054                           ; BSR set to: 1
 13055                           ;../../VLCBlib_PIC/mns.c: 580:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 13056   002170  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 13057   002174  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 13058   002178  0E76               	movlw	118
 13059   00217A  6FC4               	movwf	sendMessage5@data3& (0+255),b
 13060   00217C  0E01               	movlw	1
 13061   00217E  6FC5               	movwf	sendMessage5@data4& (0+255),b
 13062   002180  0E00               	movlw	0
 13063   002182  6FC6               	movwf	sendMessage5@data5& (0+255),b
 13064   002184  0EAF               	movlw	175
 13065   002186  ECE1  F05F         	call	_sendMessage5
 13066   00218A  EFBE  F00B         	goto	l23449
 13067   00218E                     l23717:
 13068                           
 13069                           ; BSR set to: 1
 13070   00218E  0E0D               	movlw	13
 13071   002190  19FE               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 13072   002192  A4D8               	btfss	status,2,c
 13073   002194  EF43  F00C         	goto	l23475
 13074                           
 13075                           ; BSR set to: 1
 13076                           ;../../VLCBlib_PIC/mns.c: 583:                 mode_flags &= ~4;
 13077   002198  9566               	bcf	_mode_flags& (0+255),2,b
 13078                           
 13079                           ; BSR set to: 1
 13080                           ;../../VLCBlib_PIC/mns.c: 584:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 13081   00219A  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 13082   00219E  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 13083   0021A2  0E76               	movlw	118
 13084   0021A4  6FC4               	movwf	sendMessage5@data3& (0+255),b
 13085   0021A6  0E01               	movlw	1
 13086   0021A8  6FC5               	movwf	sendMessage5@data4& (0+255),b
 13087   0021AA  0E00               	movlw	0
 13088   0021AC  6FC6               	movwf	sendMessage5@data5& (0+255),b
 13089   0021AE  0EAF               	movlw	175
 13090   0021B0  ECE1  F05F         	call	_sendMessage5
 13091   0021B4  EFBE  F00B         	goto	l23449
 13092   0021B8                     l1508:
 13093                           
 13094                           ; BSR set to: 2
 13095   0021B8  00FF               	reset		;# 
 13096   0021BA  EFBE  F00B         	goto	l23449
 13097   0021BE                     l23737:
 13098                           
 13099                           ; BSR set to: 0
 13100   0021BE  0101               	movlb	1	; () banked
 13101   0021C0  EE20 F001          	lfsr	2,1
 13102   0021C4  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 13103   0021C6  26D9               	addwf	fsr2l,f,c
 13104   0021C8  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 13105   0021CA  22DA               	addwfc	fsr2h,f,c
 13106   0021CC  50DF               	movf	indf2,w,c
 13107   0021CE  0102               	movlb	2	; () banked
 13108   0021D0  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 13109   0021D2  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 13110                           
 13111                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13112                           ; Switch size 1, requested type "simple"
 13113                           ; Number of cases is 1, Range of values is 0 to 0
 13114                           ; switch strategies available:
 13115                           ; Name         Instructions Cycles
 13116                           ; simple_byte            4     3 (average)
 13117                           ;	Chosen strategy is simple_byte
 13118   0021D4  51CD               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 13119   0021D6  0A00               	xorlw	0	; case 0
 13120   0021D8  A4D8               	btfss	status,2,c
 13121   0021DA  EF43  F00C         	goto	l23475
 13122                           
 13123                           ; BSR set to: 2
 13124                           ; Switch size 1, requested type "simple"
 13125                           ; Number of cases is 6, Range of values is 79 to 135
 13126                           ; switch strategies available:
 13127                           ; Name         Instructions Cycles
 13128                           ; simple_byte           19    10 (average)
 13129                           ;	Chosen strategy is simple_byte
 13130   0021DE  51CC               	movf	??_mnsProcessMessage& (0+255),w,b
 13131   0021E0  0A4F               	xorlw	79	; case 79
 13132   0021E2  B4D8               	btfsc	status,2,c
 13133   0021E4  D444               	goto	l1476
 13134   0021E6  0A11               	xorlw	17	; case 94
 13135   0021E8  B4D8               	btfsc	status,2,c
 13136   0021EA  D7E6               	goto	l1508
 13137   0021EC  0A2D               	xorlw	45	; case 115
 13138   0021EE  B4D8               	btfsc	status,2,c
 13139   0021F0  EFCB  F00C         	goto	l23539
 13140   0021F4  0A05               	xorlw	5	; case 118
 13141   0021F6  B4D8               	btfsc	status,2,c
 13142   0021F8  D72C               	goto	l23653
 13143   0021FA  0A0E               	xorlw	14	; case 120
 13144   0021FC  B4D8               	btfsc	status,2,c
 13145   0021FE  D56D               	goto	l23619
 13146   002200  0AFF               	xorlw	255	; case 135
 13147   002202  B4D8               	btfsc	status,2,c
 13148   002204  D447               	goto	l23573
 13149   002206  EF43  F00C         	goto	l23475
 13150   00220A                     __end_of_mnsProcessMessage:
 13151                           	callstack 0
 13152                           
 13153 ;; *************** function _ackEventProcessMessage *****************
 13154 ;; Defined at:
 13155 ;;		line 111 in file "../../VLCBlib_PIC/event_acknowledge.c"
 13156 ;; Parameters:    Size  Location     Type
 13157 ;;  m               2   63[BANK1 ] PTR struct Message
 13158 ;;		 -> poll@m(9), 
 13159 ;; Auto vars:     Size  Location     Type
 13160 ;;  eventNN         2    3[BANK2 ] struct Word
 13161 ;;  eventEN         2    0[BANK2 ] struct Word
 13162 ;;  ev              2    0        short 
 13163 ;;  eventIndex      1    2[BANK2 ] unsigned char 
 13164 ;; Return value:  Size  Location     Type
 13165 ;;                  1    wreg      enum E12793
 13166 ;; Registers used:
 13167 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 13168 ;; Tracked objects:
 13169 ;;		On entry : 0/0
 13170 ;;		On exit  : 0/0
 13171 ;;		Unchanged: 0/0
 13172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13173 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13174 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13175 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13176 ;;      Totals:         0       0       4       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13177 ;;Total ram usage:        9 bytes
 13178 ;; Hardware stack levels used: 1
 13179 ;; Hardware stack levels required when called: 19
 13180 ;; This function calls:
 13181 ;;		_ackEventCheckLen
 13182 ;;		_findEvent
 13183 ;;		_findService
 13184 ;;		_isConsumedEvent
 13185 ;;		_sendMessage7
 13186 ;; This function is called by:
 13187 ;;		_poll
 13188 ;; This function uses a non-reentrant model
 13189 ;;
 13190                           
 13191                           	psect	text24
 13192   0065EE                     __ptext24:
 13193                           	callstack 0
 13194   0065EE                     _ackEventProcessMessage:
 13195                           	callstack 10
 13196                           
 13197                           ;../../VLCBlib_PIC/event_acknowledge.c: 112:     Word eventNN, eventEN;;../../VLCBlib_PI
      +                          C/event_acknowledge.c: 113:     uint8_t eventIndex;;../../VLCBlib_PIC/event_acknowledge.
      +                          c: 114:     int16_t ev;;../../VLCBlib_PIC/event_acknowledge.c: 117:     if (m->opc == OP
      +                          C_MODE) {
 13198                           
 13199                           ;incstack = 0
 13200   0065EE  0101               	movlb	1	; () banked
 13201   0065F0  EE20 F001          	lfsr	2,1
 13202   0065F4  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13203   0065F6  26D9               	addwf	fsr2l,f,c
 13204   0065F8  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13205   0065FA  22DA               	addwfc	fsr2h,f,c
 13206   0065FC  0E76               	movlw	118
 13207   0065FE  18DE               	xorwf	postinc2,w,c
 13208   006600  A4D8               	btfss	status,2,c
 13209   006602  D040               	goto	l1309
 13210                           
 13211                           ; BSR set to: 1
 13212                           ;../../VLCBlib_PIC/event_acknowledge.c: 118:         if (ackEventCheckLen(m, 4) == PROCE
      +                          SSED) return PROCESSED;
 13213   006604  C1F9  F1CB         	movff	ackEventProcessMessage@m,ackEventCheckLen@m
 13214   006608  C1FA  F1CC         	movff	ackEventProcessMessage@m+1,ackEventCheckLen@m+1
 13215   00660C  0E04               	movlw	4
 13216   00660E  6FCD               	movwf	ackEventCheckLen@needed& (0+255),b
 13217   006610  EC96  F062         	call	_ackEventCheckLen	;wreg free
 13218   006614  06E8               	decf	wreg,f,c
 13219   006616  A4D8               	btfss	status,2,c
 13220   006618  D002               	goto	l23313
 13221   00661A                     u24770:
 13222   00661A  0E01               	movlw	1
 13223   00661C  0012               	return	
 13224   00661E                     l23313:
 13225                           
 13226                           ;../../VLCBlib_PIC/event_acknowledge.c: 119:         if ((m->bytes[0] == nn.bytes.hi) &&
      +                           (m->bytes[1] == nn.bytes.lo)) {
 13227   00661E  0101               	movlb	1	; () banked
 13228   006620  EE20 F002          	lfsr	2,2
 13229   006624  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13230   006626  26D9               	addwf	fsr2l,f,c
 13231   006628  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13232   00662A  22DA               	addwfc	fsr2h,f,c
 13233   00662C  50DE               	movf	postinc2,w,c
 13234   00662E  0100               	movlb	0	; () banked
 13235   006630  19BE               	xorwf	(_nn+1)& (0+255),w,b
 13236   006632  A4D8               	btfss	status,2,c
 13237   006634  D025               	goto	l23335
 13238                           
 13239                           ; BSR set to: 0
 13240   006636  0101               	movlb	1	; () banked
 13241   006638  EE20 F003          	lfsr	2,3
 13242   00663C  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13243   00663E  26D9               	addwf	fsr2l,f,c
 13244   006640  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13245   006642  22DA               	addwfc	fsr2h,f,c
 13246   006644  0100               	movlb	0	; () banked
 13247   006646  51BD               	movf	_nn& (0+255),w,b
 13248   006648  18DE               	xorwf	postinc2,w,c
 13249   00664A  A4D8               	btfss	status,2,c
 13250   00664C  D019               	goto	l23335
 13251                           
 13252                           ; BSR set to: 0
 13253                           ;../../VLCBlib_PIC/event_acknowledge.c: 120:             if (m->bytes[2] == MODE_EVENT_A
      +                          CK_ON) {
 13254   00664E  0101               	movlb	1	; () banked
 13255   006650  EE20 F004          	lfsr	2,4
 13256   006654  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13257   006656  26D9               	addwf	fsr2l,f,c
 13258   006658  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13259   00665A  22DA               	addwfc	fsr2h,f,c
 13260   00665C  0E0A               	movlw	10
 13261   00665E  18DE               	xorwf	postinc2,w,c
 13262   006660  A4D8               	btfss	status,2,c
 13263   006662  D002               	goto	l23327
 13264                           
 13265                           ; BSR set to: 1
 13266                           ;../../VLCBlib_PIC/event_acknowledge.c: 122:                 mode_flags |= 1;
 13267   006664  8166               	bsf	_mode_flags& (0+255),0,b
 13268   006666  D7D9               	goto	u24770
 13269   006668                     l23327:
 13270                           
 13271                           ; BSR set to: 1
 13272   006668  EE20 F004          	lfsr	2,4
 13273   00666C  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13274   00666E  26D9               	addwf	fsr2l,f,c
 13275   006670  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13276   006672  22DA               	addwfc	fsr2h,f,c
 13277   006674  0E0B               	movlw	11
 13278   006676  18DE               	xorwf	postinc2,w,c
 13279   006678  A4D8               	btfss	status,2,c
 13280   00667A  D002               	goto	l23335
 13281                           
 13282                           ; BSR set to: 1
 13283                           ;../../VLCBlib_PIC/event_acknowledge.c: 126:                 mode_flags &= ~1;
 13284   00667C  9166               	bcf	_mode_flags& (0+255),0,b
 13285   00667E  D7CD               	goto	u24770
 13286   006680                     l23335:
 13287                           
 13288                           ;../../VLCBlib_PIC/event_acknowledge.c: 130:         return NOT_PROCESSED;
 13289   006680  0E00               	movlw	0
 13290   006682  0012               	return	
 13291   006684                     l1309:
 13292                           
 13293                           ; BSR set to: 1
 13294                           ;../../VLCBlib_PIC/event_acknowledge.c: 135:     if (! (mode_flags & 2)) {
 13295   006684  A366               	btfss	_mode_flags& (0+255),1,b
 13296   006686  D7FC               	goto	l23335
 13297                           
 13298                           ; BSR set to: 1
 13299                           ;../../VLCBlib_PIC/event_acknowledge.c: 139:     if (findService(SERVICE_ID_CONSUMER) ==
      +                           ((void*)0)) {
 13300   006688  0E06               	movlw	6
 13301   00668A  ECD3  F04E         	call	_findService
 13302   00668E  0100               	movlb	0	; () banked
 13303   006690  518D               	movf	?_findService& (0+255),w,b
 13304   006692  118E               	iorwf	(?_findService+1)& (0+255),w,b
 13305   006694  B4D8               	btfsc	status,2,c
 13306   006696  D7F4               	goto	l23335
 13307                           
 13308                           ; BSR set to: 0
 13309                           ;../../VLCBlib_PIC/event_acknowledge.c: 142:     if (m->len < 5) {
 13310   006698  C1F9  FFD9         	movff	ackEventProcessMessage@m,fsr2l
 13311   00669C  C1FA  FFDA         	movff	ackEventProcessMessage@m+1,fsr2h
 13312   0066A0  0E05               	movlw	5
 13313   0066A2  60DF               	cpfslt	indf2,c
 13314   0066A4  D001               	goto	l23355
 13315   0066A6  D7EC               	goto	l23335
 13316   0066A8                     l23355:
 13317                           
 13318                           ; BSR set to: 0
 13319                           ;../../VLCBlib_PIC/event_acknowledge.c: 145:     eventNN.bytes.hi = m->bytes[0];
 13320   0066A8  0101               	movlb	1	; () banked
 13321   0066AA  EE20 F002          	lfsr	2,2
 13322   0066AE  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13323   0066B0  26D9               	addwf	fsr2l,f,c
 13324   0066B2  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13325   0066B4  22DA               	addwfc	fsr2h,f,c
 13326   0066B6  50DF               	movf	indf2,w,c
 13327   0066B8  0102               	movlb	2	; () banked
 13328   0066BA  6FD0               	movwf	(ackEventProcessMessage@eventNN+1)& (0+255),b
 13329                           
 13330                           ;../../VLCBlib_PIC/event_acknowledge.c: 146:     eventNN.bytes.lo = m->bytes[1];
 13331   0066BC  0101               	movlb	1	; () banked
 13332   0066BE  EE20 F003          	lfsr	2,3
 13333   0066C2  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13334   0066C4  26D9               	addwf	fsr2l,f,c
 13335   0066C6  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13336   0066C8  22DA               	addwfc	fsr2h,f,c
 13337   0066CA  50DF               	movf	indf2,w,c
 13338   0066CC  0102               	movlb	2	; () banked
 13339   0066CE  6FCF               	movwf	ackEventProcessMessage@eventNN& (0+255),b
 13340                           
 13341                           ;../../VLCBlib_PIC/event_acknowledge.c: 147:     eventEN.bytes.hi = m->bytes[2];
 13342   0066D0  0101               	movlb	1	; () banked
 13343   0066D2  EE20 F004          	lfsr	2,4
 13344   0066D6  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13345   0066D8  26D9               	addwf	fsr2l,f,c
 13346   0066DA  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13347   0066DC  22DA               	addwfc	fsr2h,f,c
 13348   0066DE  50DF               	movf	indf2,w,c
 13349   0066E0  0102               	movlb	2	; () banked
 13350   0066E2  6FCD               	movwf	(ackEventProcessMessage@eventEN+1)& (0+255),b
 13351                           
 13352                           ;../../VLCBlib_PIC/event_acknowledge.c: 148:     eventEN.bytes.lo = m->bytes[3];
 13353   0066E4  0101               	movlb	1	; () banked
 13354   0066E6  EE20 F005          	lfsr	2,5
 13355   0066EA  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13356   0066EC  26D9               	addwf	fsr2l,f,c
 13357   0066EE  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13358   0066F0  22DA               	addwfc	fsr2h,f,c
 13359   0066F2  50DF               	movf	indf2,w,c
 13360   0066F4  0102               	movlb	2	; () banked
 13361   0066F6  6FCC               	movwf	ackEventProcessMessage@eventEN& (0+255),b
 13362                           
 13363                           ;../../VLCBlib_PIC/event_acknowledge.c: 150:     switch (m->opc) {
 13364   0066F8  D018               	goto	l23367
 13365   0066FA                     l23357:
 13366                           
 13367                           ; BSR set to: 1
 13368                           ;../../VLCBlib_PIC/event_acknowledge.c: 154:             eventIndex = findEvent(eventNN.
      +                          word, eventNN.word);
 13369   0066FA  C2CF  F1BA         	movff	ackEventProcessMessage@eventNN,findEvent@nodeNumber
 13370   0066FE  C2D0  F1BB         	movff	ackEventProcessMessage@eventNN+1,findEvent@nodeNumber+1
 13371   006702  C2CF  F1BC         	movff	ackEventProcessMessage@eventNN,findEvent@eventNumber
 13372   006706  C2D0  F1BD         	movff	ackEventProcessMessage@eventNN+1,findEvent@eventNumber+1
 13373   00670A  ECBB  F051         	call	_findEvent	;wreg free
 13374   00670E  D00A               	goto	L2
 13375   006710                     l23359:
 13376                           
 13377                           ; BSR set to: 1
 13378                           ;../../VLCBlib_PIC/event_acknowledge.c: 159:             eventIndex = findEvent(0, event
      +                          NN.word);
 13379   006710  0E00               	movlw	0
 13380   006712  6FBB               	movwf	(findEvent@nodeNumber+1)& (0+255),b
 13381   006714  0E00               	movlw	0
 13382   006716  6FBA               	movwf	findEvent@nodeNumber& (0+255),b
 13383   006718  C2CF  F1BC         	movff	ackEventProcessMessage@eventNN,findEvent@eventNumber
 13384   00671C  C2D0  F1BD         	movff	ackEventProcessMessage@eventNN+1,findEvent@eventNumber+1
 13385   006720  ECBB  F051         	call	_findEvent	;wreg free
 13386   006724                     L2:
 13387   006724  0102               	movlb	2	; () banked
 13388   006726  6FCE               	movwf	ackEventProcessMessage@eventIndex& (0+255),b
 13389                           
 13390                           ;../../VLCBlib_PIC/event_acknowledge.c: 160:             break;
 13391   006728  D01C               	goto	l23369
 13392   00672A                     l23367:
 13393                           
 13394                           ; BSR set to: 2
 13395   00672A  0101               	movlb	1	; () banked
 13396   00672C  EE20 F001          	lfsr	2,1
 13397   006730  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13398   006732  26D9               	addwf	fsr2l,f,c
 13399   006734  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13400   006736  22DA               	addwfc	fsr2h,f,c
 13401   006738  50DF               	movf	indf2,w,c
 13402   00673A  6FFB               	movwf	??_ackEventProcessMessage& (0+255),b
 13403   00673C  6BFC               	clrf	(??_ackEventProcessMessage+1)& (0+255),b
 13404                           
 13405                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13406                           ; Switch size 1, requested type "simple"
 13407                           ; Number of cases is 1, Range of values is 0 to 0
 13408                           ; switch strategies available:
 13409                           ; Name         Instructions Cycles
 13410                           ; simple_byte            4     3 (average)
 13411                           ;	Chosen strategy is simple_byte
 13412   00673E  51FC               	movf	(??_ackEventProcessMessage+1)& (0+255),w,b
 13413   006740  0A00               	xorlw	0	; case 0
 13414   006742  A4D8               	btfss	status,2,c
 13415   006744  D79D               	goto	l23335
 13416                           
 13417                           ; BSR set to: 1
 13418                           ; Switch size 1, requested type "simple"
 13419                           ; Number of cases is 4, Range of values is 144 to 153
 13420                           ; switch strategies available:
 13421                           ; Name         Instructions Cycles
 13422                           ; simple_byte           13     7 (average)
 13423                           ;	Chosen strategy is simple_byte
 13424   006746  51FB               	movf	??_ackEventProcessMessage& (0+255),w,b
 13425   006748  0A90               	xorlw	144	; case 144
 13426   00674A  B4D8               	btfsc	status,2,c
 13427   00674C  D7D6               	goto	l23357
 13428   00674E  0A01               	xorlw	1	; case 145
 13429   006750  B4D8               	btfsc	status,2,c
 13430   006752  D7D3               	goto	l23357
 13431   006754  0A09               	xorlw	9	; case 152
 13432   006756  B4D8               	btfsc	status,2,c
 13433   006758  D7DB               	goto	l23359
 13434   00675A  0A01               	xorlw	1	; case 153
 13435   00675C  B4D8               	btfsc	status,2,c
 13436   00675E  D7D8               	goto	l23359
 13437   006760  D78F               	goto	l23335
 13438   006762                     l23369:
 13439                           
 13440                           ; BSR set to: 2
 13441                           ;../../VLCBlib_PIC/event_acknowledge.c: 164:     if (eventIndex != 0xff) {
 13442   006762  29CE               	incf	ackEventProcessMessage@eventIndex& (0+255),w,b
 13443   006764  B4D8               	btfsc	status,2,c
 13444   006766  D78C               	goto	l23335
 13445                           
 13446                           ; BSR set to: 2
 13447                           ;../../VLCBlib_PIC/event_acknowledge.c: 167:         if (isConsumedEvent(eventIndex)) {
 13448   006768  51CE               	movf	ackEventProcessMessage@eventIndex& (0+255),w,b
 13449   00676A  ECAD  F061         	call	_isConsumedEvent
 13450   00676E  0900               	iorlw	0
 13451   006770  B4D8               	btfsc	status,2,c
 13452   006772  D786               	goto	l23335
 13453                           
 13454                           ;../../VLCBlib_PIC/event_acknowledge.c: 169:             sendMessage7(OPC_ENACK, nn.byte
      +                          s.hi, nn.bytes.lo, m->opc, m->bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]);
 13455   006774  C0BE  F1C2         	movff	_nn+1,sendMessage7@data1
 13456   006778  C0BD  F1C3         	movff	_nn,sendMessage7@data2
 13457   00677C  0101               	movlb	1	; () banked
 13458   00677E  EE20 F001          	lfsr	2,1
 13459   006782  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13460   006784  26D9               	addwf	fsr2l,f,c
 13461   006786  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13462   006788  22DA               	addwfc	fsr2h,f,c
 13463   00678A  50DF               	movf	indf2,w,c
 13464   00678C  6FC4               	movwf	sendMessage7@data3& (0+255),b
 13465   00678E  EE20 F002          	lfsr	2,2
 13466   006792  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13467   006794  26D9               	addwf	fsr2l,f,c
 13468   006796  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13469   006798  22DA               	addwfc	fsr2h,f,c
 13470   00679A  50DF               	movf	indf2,w,c
 13471   00679C  6FC5               	movwf	sendMessage7@data4& (0+255),b
 13472   00679E  EE20 F003          	lfsr	2,3
 13473   0067A2  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13474   0067A4  26D9               	addwf	fsr2l,f,c
 13475   0067A6  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13476   0067A8  22DA               	addwfc	fsr2h,f,c
 13477   0067AA  50DF               	movf	indf2,w,c
 13478   0067AC  6FC6               	movwf	sendMessage7@data5& (0+255),b
 13479   0067AE  EE20 F004          	lfsr	2,4
 13480   0067B2  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13481   0067B4  26D9               	addwf	fsr2l,f,c
 13482   0067B6  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13483   0067B8  22DA               	addwfc	fsr2h,f,c
 13484   0067BA  50DF               	movf	indf2,w,c
 13485   0067BC  6FC7               	movwf	sendMessage7@data6& (0+255),b
 13486   0067BE  EE20 F005          	lfsr	2,5
 13487   0067C2  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13488   0067C4  26D9               	addwf	fsr2l,f,c
 13489   0067C6  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13490   0067C8  22DA               	addwfc	fsr2h,f,c
 13491   0067CA  50DF               	movf	indf2,w,c
 13492   0067CC  6FC8               	movwf	sendMessage7@data7& (0+255),b
 13493   0067CE  0EE6               	movlw	230
 13494   0067D0  ECC9  F05F         	call	_sendMessage7
 13495                           
 13496                           ;../../VLCBlib_PIC/event_acknowledge.c: 171:             ackDiagnostics[0x01].asInt++;
 13497   0067D4  0101               	movlb	1	; () banked
 13498   0067D6  4BB4               	infsnz	(_ackDiagnostics+2)& (0+255),f,b
 13499   0067D8  2BB5               	incf	(_ackDiagnostics+3)& (0+255),f,b
 13500   0067DA  D752               	goto	l23335
 13501   0067DC                     __end_of_ackEventProcessMessage:
 13502                           	callstack 0
 13503                           
 13504 ;; *************** function _bootProcessMessage *****************
 13505 ;; Defined at:
 13506 ;;		line 227 in file "../../VLCBlib_PIC/boot.c"
 13507 ;; Parameters:    Size  Location     Type
 13508 ;;  m               2   63[BANK1 ] PTR struct Message
 13509 ;;		 -> poll@m(9), 
 13510 ;; Auto vars:     Size  Location     Type
 13511 ;;		None
 13512 ;; Return value:  Size  Location     Type
 13513 ;;                  1    wreg      enum E12793
 13514 ;; Registers used:
 13515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13516 ;; Tracked objects:
 13517 ;;		On entry : 0/0
 13518 ;;		On exit  : 0/0
 13519 ;;		Unchanged: 0/0
 13520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13521 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13523 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13524 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13525 ;;Total ram usage:        4 bytes
 13526 ;; Hardware stack levels used: 1
 13527 ;; Hardware stack levels required when called: 18
 13528 ;; This function calls:
 13529 ;;		_writeNVM
 13530 ;; This function is called by:
 13531 ;;		_poll
 13532 ;; This function uses a non-reentrant model
 13533 ;;
 13534                           
 13535                           	psect	text25
 13536   00A098                     __ptext25:
 13537                           	callstack 0
 13538   00A098                     _bootProcessMessage:
 13539                           	callstack 11
 13540                           
 13541                           ;../../VLCBlib_PIC/boot.c: 229:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED
      +                          ;
 13542                           
 13543                           ;incstack = 0
 13544   00A098  0101               	movlb	1	; () banked
 13545   00A09A  EE20 F002          	lfsr	2,2
 13546   00A09E  51F9               	movf	bootProcessMessage@m& (0+255),w,b
 13547   00A0A0  26D9               	addwf	fsr2l,f,c
 13548   00A0A2  51FA               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13549   00A0A4  22DA               	addwfc	fsr2h,f,c
 13550   00A0A6  50DE               	movf	postinc2,w,c
 13551   00A0A8  0100               	movlb	0	; () banked
 13552   00A0AA  19BE               	xorwf	(_nn+1)& (0+255),w,b
 13553   00A0AC  B4D8               	btfsc	status,2,c
 13554   00A0AE  D002               	goto	l23259
 13555   00A0B0                     u24720:
 13556   00A0B0  0E00               	movlw	0
 13557   00A0B2  0012               	return	
 13558   00A0B4                     l23259:
 13559                           
 13560                           ; BSR set to: 0
 13561                           ;../../VLCBlib_PIC/boot.c: 230:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED
      +                          ;
 13562   00A0B4  0101               	movlb	1	; () banked
 13563   00A0B6  EE20 F003          	lfsr	2,3
 13564   00A0BA  51F9               	movf	bootProcessMessage@m& (0+255),w,b
 13565   00A0BC  26D9               	addwf	fsr2l,f,c
 13566   00A0BE  51FA               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13567   00A0C0  22DA               	addwfc	fsr2h,f,c
 13568   00A0C2  0100               	movlb	0	; () banked
 13569   00A0C4  51BD               	movf	_nn& (0+255),w,b
 13570   00A0C6  18DE               	xorwf	postinc2,w,c
 13571   00A0C8  A4D8               	btfss	status,2,c
 13572   00A0CA  D7F2               	goto	u24720
 13573   00A0CC  D019               	goto	l23283
 13574   00A0CE                     l23265:
 13575                           
 13576                           ; BSR set to: 1
 13577                           ;../../VLCBlib_PIC/boot.c: 235:             if (m->bytes[2] != MODE_BOOT) return NOT_PRO
      +                          CESSED;
 13578   00A0CE  EE20 F004          	lfsr	2,4
 13579   00A0D2  51F9               	movf	bootProcessMessage@m& (0+255),w,b
 13580   00A0D4  26D9               	addwf	fsr2l,f,c
 13581   00A0D6  51FA               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13582   00A0D8  22DA               	addwfc	fsr2h,f,c
 13583   00A0DA  0E0E               	movlw	14
 13584   00A0DC  18DE               	xorwf	postinc2,w,c
 13585   00A0DE  A4D8               	btfss	status,2,c
 13586   00A0E0  D7E7               	goto	u24720
 13587   00A0E2                     l23271:
 13588                           
 13589                           ; BSR set to: 1
 13590                           ;../../VLCBlib_PIC/boot.c: 240:             writeNVM(EEPROM_NVM_TYPE, 0x3FF, 0xFF);
 13591   00A0E2  0EFF               	movlw	255
 13592   00A0E4  0100               	movlb	0	; () banked
 13593   00A0E6  6FA4               	movwf	writeNVM@index& (0+255),b
 13594   00A0E8  0E03               	movlw	3
 13595   00A0EA  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 13596   00A0EC  0E00               	movlw	0
 13597   00A0EE  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 13598   00A0F0  0EFF               	movlw	255
 13599   00A0F2  6FA7               	movwf	writeNVM@value& (0+255),b
 13600   00A0F4  0E00               	movlw	0
 13601   00A0F6  EC60  F05C         	call	_writeNVM
 13602   00A0FA  00FF               	reset		;# 
 13603                           
 13604                           ;../../VLCBlib_PIC/boot.c: 242:             return PROCESSED;
 13605   00A0FC  0E01               	movlw	1
 13606   00A0FE  0012               	return	
 13607   00A100                     l23283:
 13608                           
 13609                           ; BSR set to: 0
 13610   00A100  0101               	movlb	1	; () banked
 13611   00A102  EE20 F001          	lfsr	2,1
 13612   00A106  51F9               	movf	bootProcessMessage@m& (0+255),w,b
 13613   00A108  26D9               	addwf	fsr2l,f,c
 13614   00A10A  51FA               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13615   00A10C  22DA               	addwfc	fsr2h,f,c
 13616   00A10E  50DF               	movf	indf2,w,c
 13617   00A110  6FFB               	movwf	??_bootProcessMessage& (0+255),b
 13618   00A112  6BFC               	clrf	(??_bootProcessMessage+1)& (0+255),b
 13619                           
 13620                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13621                           ; Switch size 1, requested type "simple"
 13622                           ; Number of cases is 1, Range of values is 0 to 0
 13623                           ; switch strategies available:
 13624                           ; Name         Instructions Cycles
 13625                           ; simple_byte            4     3 (average)
 13626                           ;	Chosen strategy is simple_byte
 13627   00A114  51FC               	movf	(??_bootProcessMessage+1)& (0+255),w,b
 13628   00A116  0A00               	xorlw	0	; case 0
 13629   00A118  A4D8               	btfss	status,2,c
 13630   00A11A  D7CA               	goto	u24720
 13631                           
 13632                           ; BSR set to: 1
 13633                           ; Switch size 1, requested type "simple"
 13634                           ; Number of cases is 2, Range of values is 92 to 118
 13635                           ; switch strategies available:
 13636                           ; Name         Instructions Cycles
 13637                           ; simple_byte            7     4 (average)
 13638                           ;	Chosen strategy is simple_byte
 13639   00A11C  51FB               	movf	??_bootProcessMessage& (0+255),w,b
 13640   00A11E  0A5C               	xorlw	92	; case 92
 13641   00A120  B4D8               	btfsc	status,2,c
 13642   00A122  D7DF               	goto	l23271
 13643   00A124  0A2A               	xorlw	42	; case 118
 13644   00A126  B4D8               	btfsc	status,2,c
 13645   00A128  D7D2               	goto	l23265
 13646   00A12A  D7C2               	goto	u24720
 13647   00A12C                     __end_of_bootProcessMessage:
 13648                           	callstack 0
 13649                           
 13650 ;; *************** function _consumer2QProcessMessage *****************
 13651 ;; Defined at:
 13652 ;;		line 142 in file "../event_consumerDualActionQueue.c"
 13653 ;; Parameters:    Size  Location     Type
 13654 ;;  m               2   63[BANK1 ] PTR struct Message
 13655 ;;		 -> poll@m(9), 
 13656 ;; Auto vars:     Size  Location     Type
 13657 ;;  nextSimultan    1    8[BANK2 ] unsigned char 
 13658 ;;  firstAction     1    7[BANK2 ] unsigned char 
 13659 ;;  nextAction      1    6[BANK2 ] unsigned char 
 13660 ;;  enn             2    3[BANK2 ] unsigned short 
 13661 ;;  action          1   13[BANK2 ] unsigned char 
 13662 ;;  e               1   12[BANK2 ] unsigned char 
 13663 ;;  ca              1   11[BANK2 ] unsigned char 
 13664 ;;  masked_actio    1   10[BANK2 ] unsigned char 
 13665 ;;  io              1    9[BANK2 ] unsigned char 
 13666 ;;  tableIndex      1    5[BANK2 ] unsigned char 
 13667 ;;  opc             1    2[BANK2 ] unsigned char 
 13668 ;;  change          1    1[BANK2 ] char 
 13669 ;;  end             1    0[BANK2 ] unsigned char 
 13670 ;;  start           1    0        unsigned char 
 13671 ;; Return value:  Size  Location     Type
 13672 ;;                  1    wreg      enum E12793
 13673 ;; Registers used:
 13674 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13675 ;; Tracked objects:
 13676 ;;		On entry : 0/0
 13677 ;;		On exit  : 0/0
 13678 ;;		Unchanged: 0/0
 13679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13680 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13681 ;;      Locals:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13682 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13683 ;;      Totals:         0       0       5      14       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13684 ;;Total ram usage:       19 bytes
 13685 ;; Hardware stack levels used: 1
 13686 ;; Hardware stack levels required when called: 16
 13687 ;; This function calls:
 13688 ;;		___awdiv
 13689 ;;		___awmod
 13690 ;;		_findEvent
 13691 ;;		_getEVs
 13692 ;;		_getNV
 13693 ;;		_pushTwoAction
 13694 ;;		_setExpeditedActions
 13695 ;;		_setNormalActions
 13696 ;; This function is called by:
 13697 ;;		_poll
 13698 ;; This function uses a non-reentrant model
 13699 ;;
 13700                           
 13701                           	psect	text26
 13702   003582                     __ptext26:
 13703                           	callstack 0
 13704   003582                     _consumer2QProcessMessage:
 13705                           	callstack 13
 13706                           
 13707                           ;../event_consumerDualActionQueue.c: 143:     uint8_t start, end;;../event_consumerDualA
      +                          ctionQueue.c: 144:     uint8_t tableIndex;;../event_consumerDualActionQueue.c: 145:     
      +                          int8_t change;;../event_consumerDualActionQueue.c: 146:     uint8_t e;;../event_consumer
      +                          DualActionQueue.c: 147:     uint8_t action;;../event_consumerDualActionQueue.c: 148:    
      +                           uint8_t masked_action;;../event_consumerDualActionQueue.c: 149:     uint8_t ca;;../even
      +                          t_consumerDualActionQueue.c: 150:     uint8_t io;;../event_consumerDualActionQueue.c: 15
      +                          1:     uint16_t enn;
 13708                           
 13709                           ;incstack = 0
 13710   003582  C1F9  FFD9         	movff	consumer2QProcessMessage@m,fsr2l
 13711   003586  C1FA  FFDA         	movff	consumer2QProcessMessage@m+1,fsr2h
 13712   00358A  0E05               	movlw	5
 13713   00358C  60DF               	cpfslt	indf2,c
 13714   00358E  D002               	goto	l23049
 13715   003590                     u24450:
 13716   003590  0E00               	movlw	0
 13717   003592  0012               	return	
 13718   003594                     l23049:
 13719                           
 13720                           ;../event_consumerDualActionQueue.c: 155:     enn = ((uint16_t)m->bytes[0])*256+m->bytes
      +                          [1];
 13721   003594  0101               	movlb	1	; () banked
 13722   003596  EE20 F003          	lfsr	2,3
 13723   00359A  51F9               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13724   00359C  26D9               	addwf	fsr2l,f,c
 13725   00359E  51FA               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13726   0035A0  22DA               	addwfc	fsr2h,f,c
 13727   0035A2  50DF               	movf	indf2,w,c
 13728   0035A4  6FFB               	movwf	??_consumer2QProcessMessage& (0+255),b
 13729   0035A6  EE20 F002          	lfsr	2,2
 13730   0035AA  51F9               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13731   0035AC  26D9               	addwf	fsr2l,f,c
 13732   0035AE  51FA               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13733   0035B0  22DA               	addwfc	fsr2h,f,c
 13734   0035B2  50DF               	movf	indf2,w,c
 13735   0035B4  6FFC               	movwf	(??_consumer2QProcessMessage+1)& (0+255),b
 13736   0035B6  51FB               	movf	??_consumer2QProcessMessage& (0+255),w,b
 13737   0035B8  0102               	movlb	2	; () banked
 13738   0035BA  6FCF               	movwf	consumer2QProcessMessage@enn& (0+255),b
 13739   0035BC  C1FC  F2D0         	movff	??_consumer2QProcessMessage+1,consumer2QProcessMessage@enn+1
 13740                           
 13741                           ;../event_consumerDualActionQueue.c: 157:     switch (m->opc) {
 13742   0035C0  D014               	goto	l23063
 13743   0035C2                     l448:
 13744                           
 13745                           ; BSR set to: 1
 13746                           ;../event_consumerDualActionQueue.c: 164:             enn = 0;
 13747                           
 13748                           ; BSR set to: 1
 13749   0035C2  0E00               	movlw	0
 13750   0035C4  0102               	movlb	2	; () banked
 13751   0035C6  6FD0               	movwf	(consumer2QProcessMessage@enn+1)& (0+255),b
 13752   0035C8  0E00               	movlw	0
 13753   0035CA  6FCF               	movwf	consumer2QProcessMessage@enn& (0+255),b
 13754   0035CC                     l453:
 13755                           
 13756                           ;../event_consumerDualActionQueue.c: 173:             end = 20;
 13757   0035CC  0E14               	movlw	20
 13758   0035CE  0102               	movlb	2	; () banked
 13759   0035D0  6FCC               	movwf	consumer2QProcessMessage@end& (0+255),b
 13760                           
 13761                           ;../event_consumerDualActionQueue.c: 174:             change = 1;
 13762   0035D2  0E01               	movlw	1
 13763   0035D4  6FCD               	movwf	consumer2QProcessMessage@change& (0+255),b
 13764                           
 13765                           ;../event_consumerDualActionQueue.c: 175:             break;
 13766   0035D6  D049               	goto	l23065
 13767   0035D8                     l457:
 13768                           
 13769                           ; BSR set to: 1
 13770                           ;../event_consumerDualActionQueue.c: 182:             enn = 0;
 13771                           
 13772                           ; BSR set to: 1
 13773   0035D8  0E00               	movlw	0
 13774   0035DA  0102               	movlb	2	; () banked
 13775   0035DC  6FD0               	movwf	(consumer2QProcessMessage@enn+1)& (0+255),b
 13776   0035DE  0E00               	movlw	0
 13777   0035E0  6FCF               	movwf	consumer2QProcessMessage@enn& (0+255),b
 13778   0035E2                     l462:
 13779                           
 13780                           ;../event_consumerDualActionQueue.c: 191:             end = 1 -1;
 13781   0035E2  0E00               	movlw	0
 13782   0035E4  0102               	movlb	2	; () banked
 13783   0035E6  6FCC               	movwf	consumer2QProcessMessage@end& (0+255),b
 13784                           
 13785                           ; BSR set to: 2
 13786                           ;../event_consumerDualActionQueue.c: 193:             break;
 13787   0035E8  D040               	goto	l23065
 13788   0035EA                     l23063:
 13789                           
 13790                           ; BSR set to: 2
 13791   0035EA  0101               	movlb	1	; () banked
 13792   0035EC  EE20 F001          	lfsr	2,1
 13793   0035F0  51F9               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13794   0035F2  26D9               	addwf	fsr2l,f,c
 13795   0035F4  51FA               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13796   0035F6  22DA               	addwfc	fsr2h,f,c
 13797   0035F8  50DF               	movf	indf2,w,c
 13798   0035FA  6FFB               	movwf	??_consumer2QProcessMessage& (0+255),b
 13799   0035FC  6BFC               	clrf	(??_consumer2QProcessMessage+1)& (0+255),b
 13800                           
 13801                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13802                           ; Switch size 1, requested type "simple"
 13803                           ; Number of cases is 1, Range of values is 0 to 0
 13804                           ; switch strategies available:
 13805                           ; Name         Instructions Cycles
 13806                           ; simple_byte            4     3 (average)
 13807                           ;	Chosen strategy is simple_byte
 13808   0035FE  51FC               	movf	(??_consumer2QProcessMessage+1)& (0+255),w,b
 13809   003600  0A00               	xorlw	0	; case 0
 13810   003602  A4D8               	btfss	status,2,c
 13811   003604  D7C5               	goto	u24450
 13812                           
 13813                           ; BSR set to: 1
 13814                           ; Switch size 1, requested type "simple"
 13815                           ; Number of cases is 16, Range of values is 144 to 249
 13816                           ; switch strategies available:
 13817                           ; Name         Instructions Cycles
 13818                           ; simple_byte           49    25 (average)
 13819                           ;	Chosen strategy is simple_byte
 13820   003606  51FB               	movf	??_consumer2QProcessMessage& (0+255),w,b
 13821   003608  0A90               	xorlw	144	; case 144
 13822   00360A  B4D8               	btfsc	status,2,c
 13823   00360C  D7DF               	goto	l453
 13824   00360E  0A01               	xorlw	1	; case 145
 13825   003610  B4D8               	btfsc	status,2,c
 13826   003612  D7E7               	goto	l462
 13827   003614  0A09               	xorlw	9	; case 152
 13828   003616  B4D8               	btfsc	status,2,c
 13829   003618  D7D4               	goto	l448
 13830   00361A  0A01               	xorlw	1	; case 153
 13831   00361C  B4D8               	btfsc	status,2,c
 13832   00361E  D7DC               	goto	l457
 13833   003620  0A29               	xorlw	41	; case 176
 13834   003622  B4D8               	btfsc	status,2,c
 13835   003624  D7D3               	goto	l453
 13836   003626  0A01               	xorlw	1	; case 177
 13837   003628  B4D8               	btfsc	status,2,c
 13838   00362A  D7DB               	goto	l462
 13839   00362C  0A09               	xorlw	9	; case 184
 13840   00362E  B4D8               	btfsc	status,2,c
 13841   003630  D7C8               	goto	l448
 13842   003632  0A01               	xorlw	1	; case 185
 13843   003634  B4D8               	btfsc	status,2,c
 13844   003636  D7D0               	goto	l457
 13845   003638  0A69               	xorlw	105	; case 208
 13846   00363A  B4D8               	btfsc	status,2,c
 13847   00363C  D7C7               	goto	l453
 13848   00363E  0A01               	xorlw	1	; case 209
 13849   003640  B4D8               	btfsc	status,2,c
 13850   003642  D7CF               	goto	l462
 13851   003644  0A09               	xorlw	9	; case 216
 13852   003646  B4D8               	btfsc	status,2,c
 13853   003648  D7BC               	goto	l448
 13854   00364A  0A01               	xorlw	1	; case 217
 13855   00364C  B4D8               	btfsc	status,2,c
 13856   00364E  D7C4               	goto	l457
 13857   003650  0A29               	xorlw	41	; case 240
 13858   003652  B4D8               	btfsc	status,2,c
 13859   003654  D7BB               	goto	l453
 13860   003656  0A01               	xorlw	1	; case 241
 13861   003658  B4D8               	btfsc	status,2,c
 13862   00365A  D7C3               	goto	l462
 13863   00365C  0A09               	xorlw	9	; case 248
 13864   00365E  B4D8               	btfsc	status,2,c
 13865   003660  D7B0               	goto	l448
 13866   003662  0A01               	xorlw	1	; case 249
 13867   003664  B4D8               	btfsc	status,2,c
 13868   003666  D7B8               	goto	l457
 13869   003668  D793               	goto	u24450
 13870   00366A                     l23065:
 13871                           
 13872                           ; BSR set to: 2
 13873                           ;../event_consumerDualActionQueue.c: 199:     tableIndex = findEvent(enn, ((uint16_t)m->
      +                          bytes[2])*256+m->bytes[3]);
 13874   00366A  C2CF  F1BA         	movff	consumer2QProcessMessage@enn,findEvent@nodeNumber
 13875   00366E  C2D0  F1BB         	movff	consumer2QProcessMessage@enn+1,findEvent@nodeNumber+1
 13876   003672  0101               	movlb	1	; () banked
 13877   003674  EE20 F005          	lfsr	2,5
 13878   003678  51F9               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13879   00367A  26D9               	addwf	fsr2l,f,c
 13880   00367C  51FA               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13881   00367E  22DA               	addwfc	fsr2h,f,c
 13882   003680  50DF               	movf	indf2,w,c
 13883   003682  6FFB               	movwf	??_consumer2QProcessMessage& (0+255),b
 13884   003684  EE20 F004          	lfsr	2,4
 13885   003688  51F9               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13886   00368A  26D9               	addwf	fsr2l,f,c
 13887   00368C  51FA               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13888   00368E  22DA               	addwfc	fsr2h,f,c
 13889   003690  50DF               	movf	indf2,w,c
 13890   003692  6FFC               	movwf	(??_consumer2QProcessMessage+1)& (0+255),b
 13891   003694  51FB               	movf	??_consumer2QProcessMessage& (0+255),w,b
 13892   003696  6FBC               	movwf	findEvent@eventNumber& (0+255),b
 13893   003698  C1FC  F1BD         	movff	??_consumer2QProcessMessage+1,findEvent@eventNumber+1
 13894   00369C  ECBB  F051         	call	_findEvent	;wreg free
 13895   0036A0  0102               	movlb	2	; () banked
 13896   0036A2  6FD1               	movwf	consumer2QProcessMessage@tableIndex& (0+255),b
 13897                           
 13898                           ; BSR set to: 2
 13899                           ;../event_consumerDualActionQueue.c: 200:     if (tableIndex == 0xff) return NOT_PROCESS
      +                          ED;
 13900   0036A4  29D1               	incf	consumer2QProcessMessage@tableIndex& (0+255),w,b
 13901   0036A6  B4D8               	btfsc	status,2,c
 13902   0036A8  D773               	goto	u24450
 13903                           
 13904                           ; BSR set to: 2
 13905   0036AA  51D1               	movf	consumer2QProcessMessage@tableIndex& (0+255),w,b
 13906   0036AC  EC3A  F041         	call	_getEVs
 13907                           
 13908                           ;../event_consumerDualActionQueue.c: 208:     opc=m->opc;
 13909   0036B0  0101               	movlb	1	; () banked
 13910   0036B2  EE20 F001          	lfsr	2,1
 13911   0036B6  51F9               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13912   0036B8  26D9               	addwf	fsr2l,f,c
 13913   0036BA  51FA               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13914   0036BC  22DA               	addwfc	fsr2h,f,c
 13915   0036BE  50DF               	movf	indf2,w,c
 13916   0036C0  0102               	movlb	2	; () banked
 13917   0036C2  6FCE               	movwf	consumer2QProcessMessage@opc& (0+255),b
 13918                           
 13919                           ; BSR set to: 2
 13920                           ;../event_consumerDualActionQueue.c: 210:     if ( ! (opc&0b00000001)) {
 13921   0036C4  B1CE               	btfsc	consumer2QProcessMessage@opc& (0+255),0,b
 13922   0036C6  D07F               	goto	l465
 13923                           
 13924                           ; BSR set to: 2
 13925                           ;../event_consumerDualActionQueue.c: 214:         for (e=1; e<20 ;e++) {
 13926   0036C8  0E01               	movlw	1
 13927   0036CA  6FD8               	movwf	consumer2QProcessMessage@e& (0+255),b
 13928   0036CC                     l23085:
 13929                           
 13930                           ; BSR set to: 2
 13931                           ;../event_consumerDualActionQueue.c: 215:             action = evs[e];
 13932   0036CC  0E20               	movlw	low _evs
 13933   0036CE  25D8               	addwf	consumer2QProcessMessage@e& (0+255),w,b
 13934   0036D0  6ED9               	movwf	fsr2l,c
 13935   0036D2  6ADA               	clrf	fsr2h,c
 13936   0036D4  0E02               	movlw	high _evs
 13937   0036D6  22DA               	addwfc	fsr2h,f,c
 13938   0036D8  50DF               	movf	indf2,w,c
 13939   0036DA  6FD9               	movwf	consumer2QProcessMessage@action& (0+255),b
 13940                           
 13941                           ; BSR set to: 2
 13942                           ;../event_consumerDualActionQueue.c: 216:             if (action != 0) {
 13943   0036DC  51D9               	movf	consumer2QProcessMessage@action& (0+255),w,b
 13944   0036DE  B4D8               	btfsc	status,2,c
 13945   0036E0  D06C               	goto	l469
 13946                           
 13947                           ; BSR set to: 2
 13948                           ;../event_consumerDualActionQueue.c: 218:                 masked_action = action&0x7F;
 13949   0036E2  51D9               	movf	consumer2QProcessMessage@action& (0+255),w,b
 13950   0036E4  0B7F               	andlw	127
 13951   0036E6  6FD6               	movwf	consumer2QProcessMessage@masked_action& (0+255),b
 13952                           
 13953                           ;../event_consumerDualActionQueue.c: 219:                 if ((masked_action) <= (8 + 5 
      +                          * 16)) {
 13954   0036E8  0E59               	movlw	89
 13955   0036EA  61D6               	cpfslt	consumer2QProcessMessage@masked_action& (0+255),b
 13956   0036EC  D066               	goto	l469
 13957                           
 13958                           ; BSR set to: 2
 13959                           ;../event_consumerDualActionQueue.c: 221:                     if ((masked_action) == 7) 
      +                          {
 13960   0036EE  0E07               	movlw	7
 13961   0036F0  19D6               	xorwf	consumer2QProcessMessage@masked_action& (0+255),w,b
 13962   0036F2  B4D8               	btfsc	status,2,c
 13963   0036F4  D106               	goto	u24670
 13964                           
 13965                           ; BSR set to: 2
 13966                           ;../event_consumerDualActionQueue.c: 224:                     if ((masked_action) < 8) {
 13967   0036F6  0E08               	movlw	8
 13968   0036F8  61D6               	cpfslt	consumer2QProcessMessage@masked_action& (0+255),b
 13969   0036FA  D004               	goto	l23099
 13970                           
 13971                           ; BSR set to: 2
 13972                           ;../event_consumerDualActionQueue.c: 225:                         pushTwoAction(action);
 13973   0036FC  51D9               	movf	consumer2QProcessMessage@action& (0+255),w,b
 13974   0036FE  EC00  F05A         	call	_pushTwoAction
 13975                           
 13976                           ;../event_consumerDualActionQueue.c: 226:                     } else {
 13977   003702  D05B               	goto	l469
 13978   003704                     l23099:
 13979                           
 13980                           ; BSR set to: 2
 13981                           ;../event_consumerDualActionQueue.c: 227:                         io = (((masked_action)
      +                          -8)/5);
 13982   003704  0EF8               	movlw	248
 13983   003706  25D6               	addwf	consumer2QProcessMessage@masked_action& (0+255),w,b
 13984   003708  0100               	movlb	0	; () banked
 13985   00370A  6F97               	movwf	___awdiv@dividend& (0+255),b
 13986   00370C  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 13987   00370E  0EFF               	movlw	255
 13988   003710  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 13989   003712  0E00               	movlw	0
 13990   003714  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 13991   003716  0E05               	movlw	5
 13992   003718  6F99               	movwf	___awdiv@divisor& (0+255),b
 13993   00371A  EC1C  F053         	call	___awdiv	;wreg free
 13994   00371E  0100               	movlb	0	; () banked
 13995   003720  5197               	movf	?___awdiv& (0+255),w,b
 13996   003722  0102               	movlb	2	; () banked
 13997   003724  6FD5               	movwf	consumer2QProcessMessage@io& (0+255),b
 13998                           
 13999                           ;../event_consumerDualActionQueue.c: 228:                         ca = (((masked_action)
      +                          -8)%5);
 14000   003726  0EF8               	movlw	248
 14001   003728  25D6               	addwf	consumer2QProcessMessage@masked_action& (0+255),w,b
 14002   00372A  0100               	movlb	0	; () banked
 14003   00372C  6F8D               	movwf	___awmod@dividend& (0+255),b
 14004   00372E  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 14005   003730  0EFF               	movlw	255
 14006   003732  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 14007   003734  0E00               	movlw	0
 14008   003736  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 14009   003738  0E05               	movlw	5
 14010   00373A  6F8F               	movwf	___awmod@divisor& (0+255),b
 14011   00373C  EC31  F057         	call	___awmod	;wreg free
 14012   003740  0100               	movlb	0	; () banked
 14013   003742  518D               	movf	?___awmod& (0+255),w,b
 14014   003744  0102               	movlb	2	; () banked
 14015   003746  6FD7               	movwf	consumer2QProcessMessage@ca& (0+255),b
 14016                           
 14017                           ;../event_consumerDualActionQueue.c: 229:                         switch (getNV((16 + 7*
      +                          (io) + 0))) {
 14018   003748  D020               	goto	l23121
 14019   00374A                     l23101:
 14020                           
 14021                           ; BSR set to: 0
 14022                           ;../event_consumerDualActionQueue.c: 234:                                 if (getNV((16 
      +                          + 7*(io) + 1)) & 0x80) {
 14023   00374A  0102               	movlb	2	; () banked
 14024   00374C  51D5               	movf	consumer2QProcessMessage@io& (0+255),w,b
 14025   00374E  0D07               	mullw	7
 14026   003750  50F3               	movf	243,w,c
 14027   003752  0F11               	addlw	17
 14028   003754  EC52  F05E         	call	_getNV
 14029   003758  0100               	movlb	0	; () banked
 14030   00375A  BF8D               	btfsc	?_getNV& (0+255),7,b
 14031                           
 14032                           ; BSR set to: 0
 14033                           ;../event_consumerDualActionQueue.c: 235:                                     setExpedit
      +                          edActions();
 14034   00375C  EC1C  F063         	call	_setExpeditedActions	;wreg free
 14035   003760                     l23105:
 14036                           
 14037                           ;../event_consumerDualActionQueue.c: 240:                                 if (ca == 0) {
 14038   003760  0102               	movlb	2	; () banked
 14039   003762  51D7               	movf	consumer2QProcessMessage@ca& (0+255),w,b
 14040   003764  B4D8               	btfsc	status,2,c
 14041                           
 14042                           ; BSR set to: 2
 14043                           ;../event_consumerDualActionQueue.c: 242:                                     action++;
 14044   003766  2BD9               	incf	consumer2QProcessMessage@action& (0+255),f,b
 14045                           
 14046                           ; BSR set to: 2
 14047                           ;../event_consumerDualActionQueue.c: 244:                                 if (ca == 4) {
 14048   003768  0E04               	movlw	4
 14049   00376A  19D7               	xorwf	consumer2QProcessMessage@ca& (0+255),w,b
 14050   00376C  A4D8               	btfss	status,2,c
 14051   00376E  D002               	goto	l23113
 14052                           
 14053                           ; BSR set to: 2
 14054                           ;../event_consumerDualActionQueue.c: 246:                                     action-=2;
 14055   003770  0E02               	movlw	2
 14056   003772  5FD9               	subwf	consumer2QProcessMessage@action& (0+255),f,b
 14057   003774                     l23113:
 14058                           
 14059                           ; BSR set to: 2
 14060                           ;../event_consumerDualActionQueue.c: 248:                                 pushTwoAction(
      +                          action);
 14061   003774  51D9               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14062   003776  EC00  F05A         	call	_pushTwoAction
 14063                           
 14064                           ;../event_consumerDualActionQueue.c: 249:                                 setNormalActio
      +                          ns();
 14065   00377A  EC19  F063         	call	_setNormalActions	;wreg free
 14066                           
 14067                           ;../event_consumerDualActionQueue.c: 250:                                 break;
 14068   00377E  D01D               	goto	l469
 14069   003780                     l23117:
 14070                           
 14071                           ; BSR set to: 0
 14072                           ;../event_consumerDualActionQueue.c: 252:                                 pushTwoAction(
      +                          action);
 14073   003780  0102               	movlb	2	; () banked
 14074   003782  51D9               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14075   003784  EC00  F05A         	call	_pushTwoAction
 14076                           
 14077                           ;../event_consumerDualActionQueue.c: 253:                                 break;
 14078   003788  D018               	goto	l469
 14079   00378A                     l23121:
 14080                           
 14081                           ; BSR set to: 2
 14082   00378A  51D5               	movf	consumer2QProcessMessage@io& (0+255),w,b
 14083   00378C  0D07               	mullw	7
 14084   00378E  50F3               	movf	243,w,c
 14085   003790  0F10               	addlw	16
 14086   003792  EC52  F05E         	call	_getNV
 14087                           
 14088                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14089                           ; Switch size 1, requested type "simple"
 14090                           ; Number of cases is 1, Range of values is 0 to 0
 14091                           ; switch strategies available:
 14092                           ; Name         Instructions Cycles
 14093                           ; simple_byte            4     3 (average)
 14094                           ;	Chosen strategy is simple_byte
 14095   003796  0100               	movlb	0	; () banked
 14096   003798  518E               	movf	(?_getNV+1)& (0+255),w,b
 14097   00379A  0A00               	xorlw	0	; case 0
 14098   00379C  A4D8               	btfss	status,2,c
 14099   00379E  D00D               	goto	l469
 14100                           
 14101                           ; BSR set to: 0
 14102                           ; Switch size 1, requested type "simple"
 14103                           ; Number of cases is 4, Range of values is 1 to 4
 14104                           ; switch strategies available:
 14105                           ; Name         Instructions Cycles
 14106                           ; simple_byte           13     7 (average)
 14107                           ;	Chosen strategy is simple_byte
 14108   0037A0  518D               	movf	?_getNV& (0+255),w,b
 14109   0037A2  0A01               	xorlw	1	; case 1
 14110   0037A4  B4D8               	btfsc	status,2,c
 14111   0037A6  D7D1               	goto	l23101
 14112   0037A8  0A03               	xorlw	3	; case 2
 14113   0037AA  B4D8               	btfsc	status,2,c
 14114   0037AC  D7D9               	goto	l23105
 14115   0037AE  0A01               	xorlw	1	; case 3
 14116   0037B0  B4D8               	btfsc	status,2,c
 14117   0037B2  D7D6               	goto	l23105
 14118   0037B4  0A07               	xorlw	7	; case 4
 14119   0037B6  B4D8               	btfsc	status,2,c
 14120   0037B8  D7E3               	goto	l23117
 14121   0037BA                     l469:
 14122                           
 14123                           ;../event_consumerDualActionQueue.c: 261:         }
 14124                           
 14125                           ; BSR set to: 0
 14126   0037BA  0102               	movlb	2	; () banked
 14127   0037BC  2BD8               	incf	consumer2QProcessMessage@e& (0+255),f,b
 14128                           
 14129                           ; BSR set to: 2
 14130   0037BE  0E13               	movlw	19
 14131   0037C0  65D8               	cpfsgt	consumer2QProcessMessage@e& (0+255),b
 14132   0037C2  D784               	goto	l23085
 14133   0037C4  D09E               	goto	u24670
 14134   0037C6                     l465:
 14135                           
 14136                           ; BSR set to: 2
 14137                           ;../event_consumerDualActionQueue.c: 265:         uint8_t nextAction = evs[20 -1];
 14138   0037C6  C233  F2D2         	movff	_evs+19,consumer2QProcessMessage@nextAction
 14139                           
 14140                           ; BSR set to: 2
 14141                           ;../event_consumerDualActionQueue.c: 267:         for (e=20 -1; e>=1 ;e--) {
 14142   0037CA  0E13               	movlw	19
 14143   0037CC  6FD8               	movwf	consumer2QProcessMessage@e& (0+255),b
 14144   0037CE                     l23131:
 14145                           
 14146                           ; BSR set to: 2
 14147                           ;../event_consumerDualActionQueue.c: 268:             uint8_t nextSimultaneous;;../event
      +                          _consumerDualActionQueue.c: 269:             uint8_t firstAction = 0;
 14148   0037CE  0E00               	movlw	0
 14149   0037D0  6FD3               	movwf	consumer2QProcessMessage@firstAction& (0+255),b
 14150                           
 14151                           ; BSR set to: 2
 14152                           ;../event_consumerDualActionQueue.c: 270:             action = nextAction;
 14153   0037D2  C2D2  F2D9         	movff	consumer2QProcessMessage@nextAction,consumer2QProcessMessage@action
 14154                           
 14155                           ; BSR set to: 2
 14156                           ;../event_consumerDualActionQueue.c: 274:             if (e > 1) {
 14157   0037D6  0E01               	movlw	1
 14158   0037D8  65D8               	cpfsgt	consumer2QProcessMessage@e& (0+255),b
 14159   0037DA  D00A               	goto	l23141
 14160                           
 14161                           ; BSR set to: 2
 14162                           ;../event_consumerDualActionQueue.c: 275:                 nextAction = evs[e-1];
 14163   0037DC  0E1F               	movlw	low (_evs+65535)
 14164   0037DE  25D8               	addwf	consumer2QProcessMessage@e& (0+255),w,b
 14165   0037E0  6ED9               	movwf	fsr2l,c
 14166   0037E2  6ADA               	clrf	fsr2h,c
 14167   0037E4  0E02               	movlw	high (_evs+65535)
 14168   0037E6  22DA               	addwfc	fsr2h,f,c
 14169   0037E8  50DF               	movf	indf2,w,c
 14170   0037EA  6FD2               	movwf	consumer2QProcessMessage@nextAction& (0+255),b
 14171                           
 14172                           ; BSR set to: 2
 14173                           ;../event_consumerDualActionQueue.c: 276:                 nextSimultaneous = nextAction 
      +                          & 0x80;
 14174   0037EC  51D2               	movf	consumer2QProcessMessage@nextAction& (0+255),w,b
 14175   0037EE  D001               	goto	L3
 14176   0037F0                     l23141:
 14177                           
 14178                           ; BSR set to: 2
 14179                           ;../event_consumerDualActionQueue.c: 278:                 nextSimultaneous = firstAction
      +                           & 0x80;
 14180   0037F0  51D3               	movf	consumer2QProcessMessage@firstAction& (0+255),w,b
 14181   0037F2                     L3:
 14182   0037F2  0B80               	andlw	128
 14183   0037F4  6FD4               	movwf	consumer2QProcessMessage@nextSimultaneous& (0+255),b
 14184                           
 14185                           ; BSR set to: 2
 14186                           ;../event_consumerDualActionQueue.c: 280:             if (action != 0) {
 14187   0037F6  51D9               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14188   0037F8  B4D8               	btfsc	status,2,c
 14189   0037FA  D07E               	goto	l490
 14190                           
 14191                           ; BSR set to: 2
 14192                           ;../event_consumerDualActionQueue.c: 282:                 if (firstAction == 0) {
 14193   0037FC  51D3               	movf	consumer2QProcessMessage@firstAction& (0+255),w,b
 14194   0037FE  B4D8               	btfsc	status,2,c
 14195                           
 14196                           ; BSR set to: 2
 14197                           ;../event_consumerDualActionQueue.c: 283:                     firstAction = action;
 14198   003800  C2D9  F2D3         	movff	consumer2QProcessMessage@action,consumer2QProcessMessage@firstAction
 14199                           
 14200                           ; BSR set to: 2
 14201                           ;../event_consumerDualActionQueue.c: 285:                 action &= 0x7F;
 14202   003804  9FD9               	bcf	consumer2QProcessMessage@action& (0+255),7,b
 14203                           
 14204                           ; BSR set to: 2
 14205                           ;../event_consumerDualActionQueue.c: 286:                 if (action <= (8 + 5 * 16)) {
 14206   003806  0E59               	movlw	89
 14207   003808  61D9               	cpfslt	consumer2QProcessMessage@action& (0+255),b
 14208   00380A  D076               	goto	l490
 14209                           
 14210                           ; BSR set to: 2
 14211                           ;../event_consumerDualActionQueue.c: 288:                     if ((action) == 7) {
 14212   00380C  0E07               	movlw	7
 14213   00380E  19D9               	xorwf	consumer2QProcessMessage@action& (0+255),w,b
 14214   003810  B4D8               	btfsc	status,2,c
 14215   003812  D077               	goto	u24670
 14216                           
 14217                           ; BSR set to: 2
 14218                           ;../event_consumerDualActionQueue.c: 291:                     if ((action < 8) && (actio
      +                          n != 1)) {
 14219   003814  0E08               	movlw	8
 14220   003816  61D9               	cpfslt	consumer2QProcessMessage@action& (0+255),b
 14221   003818  D009               	goto	l23165
 14222                           
 14223                           ; BSR set to: 2
 14224   00381A  05D9               	decf	consumer2QProcessMessage@action& (0+255),w,b
 14225   00381C  B4D8               	btfsc	status,2,c
 14226   00381E  D006               	goto	l23165
 14227                           
 14228                           ; BSR set to: 2
 14229                           ;../event_consumerDualActionQueue.c: 292:                         action |= nextSimultan
      +                          eous;
 14230   003820  51D4               	movf	consumer2QProcessMessage@nextSimultaneous& (0+255),w,b
 14231   003822  13D9               	iorwf	consumer2QProcessMessage@action& (0+255),f,b
 14232                           
 14233                           ; BSR set to: 2
 14234                           ;../event_consumerDualActionQueue.c: 293:                         pushTwoAction(action);
 14235   003824  51D9               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14236   003826  EC00  F05A         	call	_pushTwoAction
 14237                           
 14238                           ;../event_consumerDualActionQueue.c: 294:                     } else {
 14239   00382A  D066               	goto	l490
 14240   00382C                     l23165:
 14241                           
 14242                           ; BSR set to: 2
 14243                           ;../event_consumerDualActionQueue.c: 295:                         io = (((action)-8)/5);
 14244   00382C  0EF8               	movlw	248
 14245   00382E  25D9               	addwf	consumer2QProcessMessage@action& (0+255),w,b
 14246   003830  0100               	movlb	0	; () banked
 14247   003832  6F97               	movwf	___awdiv@dividend& (0+255),b
 14248   003834  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 14249   003836  0EFF               	movlw	255
 14250   003838  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 14251   00383A  0E00               	movlw	0
 14252   00383C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 14253   00383E  0E05               	movlw	5
 14254   003840  6F99               	movwf	___awdiv@divisor& (0+255),b
 14255   003842  EC1C  F053         	call	___awdiv	;wreg free
 14256   003846  0100               	movlb	0	; () banked
 14257   003848  5197               	movf	?___awdiv& (0+255),w,b
 14258   00384A  0102               	movlb	2	; () banked
 14259   00384C  6FD5               	movwf	consumer2QProcessMessage@io& (0+255),b
 14260                           
 14261                           ;../event_consumerDualActionQueue.c: 296:                         ca = (((action)-8)%5);
 14262   00384E  0EF8               	movlw	248
 14263   003850  25D9               	addwf	consumer2QProcessMessage@action& (0+255),w,b
 14264   003852  0100               	movlb	0	; () banked
 14265   003854  6F8D               	movwf	___awmod@dividend& (0+255),b
 14266   003856  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 14267   003858  0EFF               	movlw	255
 14268   00385A  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 14269   00385C  0E00               	movlw	0
 14270   00385E  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 14271   003860  0E05               	movlw	5
 14272   003862  6F8F               	movwf	___awmod@divisor& (0+255),b
 14273   003864  EC31  F057         	call	___awmod	;wreg free
 14274   003868  0100               	movlb	0	; () banked
 14275   00386A  518D               	movf	?___awmod& (0+255),w,b
 14276   00386C  0102               	movlb	2	; () banked
 14277   00386E  6FD7               	movwf	consumer2QProcessMessage@ca& (0+255),b
 14278                           
 14279                           ;../event_consumerDualActionQueue.c: 297:                         switch (getNV((16 + 7*
      +                          (io) + 0))) {
 14280   003870  D02B               	goto	l23193
 14281   003872                     l23167:
 14282                           
 14283                           ; BSR set to: 0
 14284                           ;../event_consumerDualActionQueue.c: 302:                                 if (getNV((16 
      +                          + 7*(io) + 1)) & 0x80) {
 14285   003872  0102               	movlb	2	; () banked
 14286   003874  51D5               	movf	consumer2QProcessMessage@io& (0+255),w,b
 14287   003876  0D07               	mullw	7
 14288   003878  50F3               	movf	243,w,c
 14289   00387A  0F11               	addlw	17
 14290   00387C  EC52  F05E         	call	_getNV
 14291   003880  0100               	movlb	0	; () banked
 14292   003882  BF8D               	btfsc	?_getNV& (0+255),7,b
 14293                           
 14294                           ; BSR set to: 0
 14295                           ;../event_consumerDualActionQueue.c: 303:                                     setExpedit
      +                          edActions();
 14296   003884  EC1C  F063         	call	_setExpeditedActions	;wreg free
 14297                           
 14298                           ;../event_consumerDualActionQueue.c: 305:                                 if (ca == 3) {
 14299   003888  0E03               	movlw	3
 14300   00388A  0102               	movlb	2	; () banked
 14301   00388C  19D7               	xorwf	consumer2QProcessMessage@ca& (0+255),w,b
 14302   00388E  B4D8               	btfsc	status,2,c
 14303                           
 14304                           ; BSR set to: 2
 14305                           ;../event_consumerDualActionQueue.c: 307:                                     action--;
 14306   003890  07D9               	decf	consumer2QProcessMessage@action& (0+255),f,b
 14307   003892                     l23175:
 14308                           
 14309                           ;../event_consumerDualActionQueue.c: 312:                                 if (ca == 0) {
 14310   003892  0102               	movlb	2	; () banked
 14311   003894  51D7               	movf	consumer2QProcessMessage@ca& (0+255),w,b
 14312   003896  A4D8               	btfss	status,2,c
 14313   003898  D002               	goto	l500
 14314                           
 14315                           ; BSR set to: 2
 14316                           ;../event_consumerDualActionQueue.c: 314:                                     action += 
      +                          2;
 14317   00389A  0E02               	movlw	2
 14318   00389C  27D9               	addwf	consumer2QProcessMessage@action& (0+255),f,b
 14319   00389E                     l500:
 14320                           
 14321                           ; BSR set to: 2
 14322                           ;../event_consumerDualActionQueue.c: 316:                                 if (ca == 4) {
 14323   00389E  0E04               	movlw	4
 14324   0038A0  19D7               	xorwf	consumer2QProcessMessage@ca& (0+255),w,b
 14325   0038A2  A4D8               	btfss	status,2,c
 14326   0038A4  D002               	goto	l501
 14327                           
 14328                           ; BSR set to: 2
 14329                           ;../event_consumerDualActionQueue.c: 318:                                     action -= 
      +                          3;
 14330   0038A6  0E03               	movlw	3
 14331   0038A8  5FD9               	subwf	consumer2QProcessMessage@action& (0+255),f,b
 14332   0038AA                     l501:
 14333                           
 14334                           ; BSR set to: 2
 14335                           ;../event_consumerDualActionQueue.c: 320:                                 action |= next
      +                          Simultaneous;
 14336   0038AA  51D4               	movf	consumer2QProcessMessage@nextSimultaneous& (0+255),w,b
 14337   0038AC  13D9               	iorwf	consumer2QProcessMessage@action& (0+255),f,b
 14338                           
 14339                           ; BSR set to: 2
 14340                           ;../event_consumerDualActionQueue.c: 321:                                 pushTwoAction(
      +                          action);
 14341   0038AE  51D9               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14342   0038B0  EC00  F05A         	call	_pushTwoAction
 14343   0038B4                     l23183:
 14344                           
 14345                           ;../event_consumerDualActionQueue.c: 322:                                 setNormalActio
      +                          ns();
 14346   0038B4  EC19  F063         	call	_setNormalActions	;wreg free
 14347                           
 14348                           ;../event_consumerDualActionQueue.c: 323:                                 break;
 14349   0038B8  D01F               	goto	l490
 14350   0038BA                     l23185:
 14351                           
 14352                           ; BSR set to: 0
 14353                           ;../event_consumerDualActionQueue.c: 325:                                 action |= next
      +                          Simultaneous;
 14354   0038BA  0102               	movlb	2	; () banked
 14355   0038BC  51D4               	movf	consumer2QProcessMessage@nextSimultaneous& (0+255),w,b
 14356   0038BE  13D9               	iorwf	consumer2QProcessMessage@action& (0+255),f,b
 14357                           
 14358                           ; BSR set to: 2
 14359                           ;../event_consumerDualActionQueue.c: 326:                                 pushTwoAction(
      +                          action);
 14360   0038C0  51D9               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14361   0038C2  EC00  F05A         	call	_pushTwoAction
 14362   0038C6  D7F6               	goto	l23183
 14363   0038C8                     l23193:
 14364                           
 14365                           ; BSR set to: 2
 14366   0038C8  51D5               	movf	consumer2QProcessMessage@io& (0+255),w,b
 14367   0038CA  0D07               	mullw	7
 14368   0038CC  50F3               	movf	243,w,c
 14369   0038CE  0F10               	addlw	16
 14370   0038D0  EC52  F05E         	call	_getNV
 14371                           
 14372                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14373                           ; Switch size 1, requested type "simple"
 14374                           ; Number of cases is 1, Range of values is 0 to 0
 14375                           ; switch strategies available:
 14376                           ; Name         Instructions Cycles
 14377                           ; simple_byte            4     3 (average)
 14378                           ;	Chosen strategy is simple_byte
 14379   0038D4  0100               	movlb	0	; () banked
 14380   0038D6  518E               	movf	(?_getNV+1)& (0+255),w,b
 14381   0038D8  0A00               	xorlw	0	; case 0
 14382   0038DA  A4D8               	btfss	status,2,c
 14383   0038DC  D00D               	goto	l490
 14384                           
 14385                           ; BSR set to: 0
 14386                           ; Switch size 1, requested type "simple"
 14387                           ; Number of cases is 4, Range of values is 1 to 4
 14388                           ; switch strategies available:
 14389                           ; Name         Instructions Cycles
 14390                           ; simple_byte           13     7 (average)
 14391                           ;	Chosen strategy is simple_byte
 14392   0038DE  518D               	movf	?_getNV& (0+255),w,b
 14393   0038E0  0A01               	xorlw	1	; case 1
 14394   0038E2  B4D8               	btfsc	status,2,c
 14395   0038E4  D7C6               	goto	l23167
 14396   0038E6  0A03               	xorlw	3	; case 2
 14397   0038E8  B4D8               	btfsc	status,2,c
 14398   0038EA  D7D3               	goto	l23175
 14399   0038EC  0A01               	xorlw	1	; case 3
 14400   0038EE  B4D8               	btfsc	status,2,c
 14401   0038F0  D7D0               	goto	l23175
 14402   0038F2  0A07               	xorlw	7	; case 4
 14403   0038F4  B4D8               	btfsc	status,2,c
 14404   0038F6  D7E1               	goto	l23185
 14405   0038F8                     l490:
 14406                           
 14407                           ;../event_consumerDualActionQueue.c: 336:         }
 14408                           
 14409                           ; BSR set to: 0
 14410   0038F8  0102               	movlb	2	; () banked
 14411   0038FA  07D8               	decf	consumer2QProcessMessage@e& (0+255),f,b
 14412                           
 14413                           ; BSR set to: 2
 14414   0038FC  51D8               	movf	consumer2QProcessMessage@e& (0+255),w,b
 14415   0038FE  A4D8               	btfss	status,2,c
 14416   003900  D766               	goto	l23131
 14417   003902                     u24670:
 14418                           
 14419                           ; BSR set to: 2
 14420                           ;../event_consumerDualActionQueue.c: 339:     consumer2QDiagnostics[1].asUint++;
 14421   003902  0101               	movlb	1	; () banked
 14422   003904  4BB8               	infsnz	(_consumer2QDiagnostics+2)& (0+255),f,b
 14423   003906  2BB9               	incf	(_consumer2QDiagnostics+3)& (0+255),f,b
 14424                           
 14425                           ; BSR set to: 1
 14426                           ;../event_consumerDualActionQueue.c: 341:     return PROCESSED;
 14427   003908  0E01               	movlw	1
 14428   00390A  0012               	return		;funcret
 14429   00390C                     __end_of_consumer2QProcessMessage:
 14430                           	callstack 0
 14431                           
 14432 ;; *************** function _teachProcessMessage *****************
 14433 ;; Defined at:
 14434 ;;		line 381 in file "../../VLCBlib_PIC/event_teach_large.c"
 14435 ;; Parameters:    Size  Location     Type
 14436 ;;  m               2   63[BANK1 ] PTR struct Message
 14437 ;;		 -> poll@m(9), 
 14438 ;; Auto vars:     Size  Location     Type
 14439 ;;		None
 14440 ;; Return value:  Size  Location     Type
 14441 ;;                  1    wreg      enum E12793
 14442 ;; Registers used:
 14443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 14444 ;; Tracked objects:
 14445 ;;		On entry : 0/0
 14446 ;;		On exit  : 0/0
 14447 ;;		Unchanged: 0/0
 14448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14449 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14451 ;;      Temps:          0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14452 ;;      Totals:         0       0       2       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14453 ;;Total ram usage:        8 bytes
 14454 ;; Hardware stack levels used: 1
 14455 ;; Hardware stack levels required when called: 24
 14456 ;; This function calls:
 14457 ;;		_doEvlrn
 14458 ;;		_doEvuln
 14459 ;;		_doNenrd
 14460 ;;		_doNerd
 14461 ;;		_doNnclr
 14462 ;;		_doNnevn
 14463 ;;		_doReqev
 14464 ;;		_doReval
 14465 ;;		_doRqevn
 14466 ;;		_sendMessage3
 14467 ;;		_sendMessage5
 14468 ;;		_teachCheckLen
 14469 ;; This function is called by:
 14470 ;;		_poll
 14471 ;; This function uses a non-reentrant model
 14472 ;;
 14473                           
 14474                           	psect	text27
 14475   00220A                     __ptext27:
 14476                           	callstack 0
 14477   00220A                     _teachProcessMessage:
 14478                           	callstack 5
 14479                           
 14480                           ;../../VLCBlib_PIC/event_teach_large.c: 382:     switch(m->opc) {
 14481                           
 14482                           ;incstack = 0
 14483   00220A  D318               	goto	l24633
 14484   00220C                     l24367:
 14485                           
 14486                           ; BSR set to: 2
 14487                           ;../../VLCBlib_PIC/event_teach_large.c: 385:             if (teachCheckLen(m, 3, 0) == P
      +                          ROCESSED) return PROCESSED;
 14488   00220C  C1F9  F1CB         	movff	teachProcessMessage@m,teachCheckLen@m
 14489   002210  C1FA  F1CC         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14490   002214  0E03               	movlw	3
 14491   002216  0101               	movlb	1	; () banked
 14492   002218  6FCD               	movwf	teachCheckLen@needed& (0+255),b
 14493   00221A  0E00               	movlw	0
 14494   00221C  6FCE               	movwf	teachCheckLen@learn& (0+255),b
 14495   00221E  EC70  F059         	call	_teachCheckLen	;wreg free
 14496   002222  06E8               	decf	wreg,f,c
 14497   002224  A4D8               	btfss	status,2,c
 14498   002226  D002               	goto	l24373
 14499   002228                     u25900:
 14500   002228  0E01               	movlw	1
 14501   00222A  0012               	return	
 14502   00222C                     l24373:
 14503                           
 14504                           ;../../VLCBlib_PIC/event_teach_large.c: 386:             if ((m->bytes[0] == nn.bytes.hi
      +                          ) && (m->bytes[1] == nn.bytes.lo)) {
 14505   00222C  0101               	movlb	1	; () banked
 14506   00222E  EE20 F002          	lfsr	2,2
 14507   002232  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14508   002234  26D9               	addwf	fsr2l,f,c
 14509   002236  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14510   002238  22DA               	addwfc	fsr2h,f,c
 14511   00223A  50DE               	movf	postinc2,w,c
 14512   00223C  0100               	movlb	0	; () banked
 14513   00223E  19BE               	xorwf	(_nn+1)& (0+255),w,b
 14514   002240  A4D8               	btfss	status,2,c
 14515   002242  D00F               	goto	l24379
 14516                           
 14517                           ; BSR set to: 0
 14518   002244  0101               	movlb	1	; () banked
 14519   002246  EE20 F003          	lfsr	2,3
 14520   00224A  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14521   00224C  26D9               	addwf	fsr2l,f,c
 14522   00224E  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14523   002250  22DA               	addwfc	fsr2h,f,c
 14524   002252  0100               	movlb	0	; () banked
 14525   002254  51BD               	movf	_nn& (0+255),w,b
 14526   002256  18DE               	xorwf	postinc2,w,c
 14527   002258  A4D8               	btfss	status,2,c
 14528   00225A  D003               	goto	l24379
 14529   00225C                     u25920:
 14530                           
 14531                           ;../../VLCBlib_PIC/event_teach_large.c: 387:                 mode_flags |= 1;
 14532   00225C  0101               	movlb	1	; () banked
 14533   00225E  8166               	bsf	_mode_flags& (0+255),0,b
 14534                           
 14535                           ;../../VLCBlib_PIC/event_teach_large.c: 388:             } else {
 14536   002260  D7E3               	goto	u25900
 14537   002262                     l24379:
 14538                           
 14539                           ;../../VLCBlib_PIC/event_teach_large.c: 389:                 mode_flags &= ~1;
 14540   002262  0101               	movlb	1	; () banked
 14541   002264  9166               	bcf	_mode_flags& (0+255),0,b
 14542   002266  D7E0               	goto	u25900
 14543   002268                     l24385:
 14544                           
 14545                           ; BSR set to: 2
 14546                           ;../../VLCBlib_PIC/event_teach_large.c: 394:             if (teachCheckLen(m, 4, 0) == P
      +                          ROCESSED) return PROCESSED;
 14547   002268  C1F9  F1CB         	movff	teachProcessMessage@m,teachCheckLen@m
 14548   00226C  C1FA  F1CC         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14549   002270  0E04               	movlw	4
 14550   002272  0101               	movlb	1	; () banked
 14551   002274  6FCD               	movwf	teachCheckLen@needed& (0+255),b
 14552   002276  0E00               	movlw	0
 14553   002278  6FCE               	movwf	teachCheckLen@learn& (0+255),b
 14554   00227A  EC70  F059         	call	_teachCheckLen	;wreg free
 14555   00227E  06E8               	decf	wreg,f,c
 14556   002280  B4D8               	btfsc	status,2,c
 14557   002282  D7D2               	goto	u25900
 14558                           
 14559                           ;../../VLCBlib_PIC/event_teach_large.c: 395:             if ((m->bytes[0] == nn.bytes.hi
      +                          ) && (m->bytes[1] == nn.bytes.lo)) {
 14560   002284  0101               	movlb	1	; () banked
 14561   002286  EE20 F002          	lfsr	2,2
 14562   00228A  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14563   00228C  26D9               	addwf	fsr2l,f,c
 14564   00228E  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14565   002290  22DA               	addwfc	fsr2h,f,c
 14566   002292  50DE               	movf	postinc2,w,c
 14567   002294  0100               	movlb	0	; () banked
 14568   002296  19BE               	xorwf	(_nn+1)& (0+255),w,b
 14569   002298  A4D8               	btfss	status,2,c
 14570   00229A  D022               	goto	l24413
 14571                           
 14572                           ; BSR set to: 0
 14573   00229C  0101               	movlb	1	; () banked
 14574   00229E  EE20 F003          	lfsr	2,3
 14575   0022A2  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14576   0022A4  26D9               	addwf	fsr2l,f,c
 14577   0022A6  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14578   0022A8  22DA               	addwfc	fsr2h,f,c
 14579   0022AA  0100               	movlb	0	; () banked
 14580   0022AC  51BD               	movf	_nn& (0+255),w,b
 14581   0022AE  18DE               	xorwf	postinc2,w,c
 14582   0022B0  A4D8               	btfss	status,2,c
 14583   0022B2  D016               	goto	l24413
 14584                           
 14585                           ; BSR set to: 0
 14586                           ;../../VLCBlib_PIC/event_teach_large.c: 396:                 if (m->bytes[2] == MODE_LEA
      +                          RN_ON) {
 14587   0022B4  0101               	movlb	1	; () banked
 14588   0022B6  EE20 F004          	lfsr	2,4
 14589   0022BA  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14590   0022BC  26D9               	addwf	fsr2l,f,c
 14591   0022BE  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14592   0022C0  22DA               	addwfc	fsr2h,f,c
 14593   0022C2  0E08               	movlw	8
 14594   0022C4  18DE               	xorwf	postinc2,w,c
 14595   0022C6  B4D8               	btfsc	status,2,c
 14596   0022C8  D7C9               	goto	u25920
 14597                           
 14598                           ; BSR set to: 1
 14599   0022CA  EE20 F004          	lfsr	2,4
 14600   0022CE  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14601   0022D0  26D9               	addwf	fsr2l,f,c
 14602   0022D2  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14603   0022D4  22DA               	addwfc	fsr2h,f,c
 14604   0022D6  0E09               	movlw	9
 14605   0022D8  18DE               	xorwf	postinc2,w,c
 14606   0022DA  B4D8               	btfsc	status,2,c
 14607   0022DC  D7C2               	goto	l24379
 14608   0022DE  D002               	goto	l24415
 14609   0022E0                     l24413:
 14610                           
 14611                           ; BSR set to: 0
 14612                           ;../../VLCBlib_PIC/event_teach_large.c: 407:                 mode_flags &= ~1;
 14613   0022E0  0101               	movlb	1	; () banked
 14614   0022E2  9166               	bcf	_mode_flags& (0+255),0,b
 14615   0022E4                     l24415:
 14616                           
 14617                           ;../../VLCBlib_PIC/event_teach_large.c: 409:             return NOT_PROCESSED;
 14618   0022E4  0E00               	movlw	0
 14619   0022E6  0012               	return	
 14620   0022E8                     l24419:
 14621                           
 14622                           ; BSR set to: 2
 14623                           ;../../VLCBlib_PIC/event_teach_large.c: 413:             if (teachCheckLen(m, 7, 1) == P
      +                          ROCESSED) {
 14624   0022E8  C1F9  F1CB         	movff	teachProcessMessage@m,teachCheckLen@m
 14625   0022EC  C1FA  F1CC         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14626   0022F0  0E07               	movlw	7
 14627   0022F2  0101               	movlb	1	; () banked
 14628   0022F4  6FCD               	movwf	teachCheckLen@needed& (0+255),b
 14629   0022F6  0E01               	movlw	1
 14630   0022F8  6FCE               	movwf	teachCheckLen@learn& (0+255),b
 14631   0022FA  EC70  F059         	call	_teachCheckLen	;wreg free
 14632   0022FE  06E8               	decf	wreg,f,c
 14633   002300  A4D8               	btfss	status,2,c
 14634   002302  D00B               	goto	l2736
 14635                           
 14636                           ;../../VLCBlib_PIC/event_teach_large.c: 414:                 sendMessage3(OPC_CMDERR, nn
      +                          .bytes.hi, nn.bytes.lo, CMDERR_INV_CMD);
 14637   002304  C0BE  F0A6         	movff	_nn+1,sendMessage3@data1
 14638   002308  C0BD  F0A7         	movff	_nn,sendMessage3@data2
 14639   00230C  0E01               	movlw	1
 14640   00230E  0100               	movlb	0	; () banked
 14641   002310  6FA8               	movwf	sendMessage3@data3& (0+255),b
 14642   002312  0E6F               	movlw	111
 14643   002314  EC3F  F060         	call	_sendMessage3
 14644   002318  D787               	goto	u25900
 14645   00231A                     l2736:
 14646                           
 14647                           ;../../VLCBlib_PIC/event_teach_large.c: 418:             if (! (mode_flags & 1)) return 
      +                          PROCESSED;
 14648   00231A  0101               	movlb	1	; () banked
 14649   00231C  A166               	btfss	_mode_flags& (0+255),0,b
 14650   00231E  D784               	goto	u25900
 14651                           
 14652                           ; BSR set to: 1
 14653                           ;../../VLCBlib_PIC/event_teach_large.c: 420:             doEvlrn((uint16_t)(m->bytes[0]<
      +                          <8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[4], m->bytes[5
      +                          ]);
 14654   002320  EE20 F003          	lfsr	2,3
 14655   002324  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14656   002326  26D9               	addwf	fsr2l,f,c
 14657   002328  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14658   00232A  22DA               	addwfc	fsr2h,f,c
 14659   00232C  50DF               	movf	indf2,w,c
 14660   00232E  0102               	movlb	2	; () banked
 14661   002330  6FCC               	movwf	??_teachProcessMessage& (0+255),b
 14662   002332  0101               	movlb	1	; () banked
 14663   002334  EE20 F002          	lfsr	2,2
 14664   002338  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14665   00233A  26D9               	addwf	fsr2l,f,c
 14666   00233C  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14667   00233E  22DA               	addwfc	fsr2h,f,c
 14668   002340  50DF               	movf	indf2,w,c
 14669   002342  0102               	movlb	2	; () banked
 14670   002344  6FCD               	movwf	(??_teachProcessMessage+1)& (0+255),b
 14671   002346  51CC               	movf	??_teachProcessMessage& (0+255),w,b
 14672   002348  0101               	movlb	1	; () banked
 14673   00234A  6FEE               	movwf	doEvlrn@nodeNumber& (0+255),b
 14674   00234C  C2CD  F1EF         	movff	??_teachProcessMessage+1,doEvlrn@nodeNumber+1
 14675   002350  EE20 F005          	lfsr	2,5
 14676   002354  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14677   002356  26D9               	addwf	fsr2l,f,c
 14678   002358  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14679   00235A  22DA               	addwfc	fsr2h,f,c
 14680   00235C  50DF               	movf	indf2,w,c
 14681   00235E  0102               	movlb	2	; () banked
 14682   002360  6FCF               	movwf	(??_teachProcessMessage+3)& (0+255),b
 14683   002362  0101               	movlb	1	; () banked
 14684   002364  EE20 F004          	lfsr	2,4
 14685   002368  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14686   00236A  26D9               	addwf	fsr2l,f,c
 14687   00236C  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14688   00236E  22DA               	addwfc	fsr2h,f,c
 14689   002370  50DF               	movf	indf2,w,c
 14690   002372  0102               	movlb	2	; () banked
 14691   002374  6FD0               	movwf	(??_teachProcessMessage+4)& (0+255),b
 14692   002376  51CF               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 14693   002378  0101               	movlb	1	; () banked
 14694   00237A  6FF0               	movwf	doEvlrn@eventNumber& (0+255),b
 14695   00237C  C2D0  F1F1         	movff	??_teachProcessMessage+4,doEvlrn@eventNumber+1
 14696   002380  EE20 F006          	lfsr	2,6
 14697   002384  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14698   002386  26D9               	addwf	fsr2l,f,c
 14699   002388  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14700   00238A  22DA               	addwfc	fsr2h,f,c
 14701   00238C  50DF               	movf	indf2,w,c
 14702   00238E  6FF2               	movwf	doEvlrn@evNum& (0+255),b
 14703   002390  EE20 F007          	lfsr	2,7
 14704   002394  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14705   002396  26D9               	addwf	fsr2l,f,c
 14706   002398  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14707   00239A  22DA               	addwfc	fsr2h,f,c
 14708   00239C  50DF               	movf	indf2,w,c
 14709   00239E  6FF3               	movwf	doEvlrn@evVal& (0+255),b
 14710   0023A0  ECFA  F048         	call	_doEvlrn	;wreg free
 14711   0023A4  D741               	goto	u25900
 14712   0023A6                     l24437:
 14713                           
 14714                           ; BSR set to: 2
 14715                           ;../../VLCBlib_PIC/event_teach_large.c: 423:             if (teachCheckLen(m, 5, 1) == P
      +                          ROCESSED) return PROCESSED;
 14716   0023A6  C1F9  F1CB         	movff	teachProcessMessage@m,teachCheckLen@m
 14717   0023AA  C1FA  F1CC         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14718   0023AE  0E05               	movlw	5
 14719   0023B0  0101               	movlb	1	; () banked
 14720   0023B2  6FCD               	movwf	teachCheckLen@needed& (0+255),b
 14721   0023B4  0E01               	movlw	1
 14722   0023B6  6FCE               	movwf	teachCheckLen@learn& (0+255),b
 14723   0023B8  EC70  F059         	call	_teachCheckLen	;wreg free
 14724   0023BC  06E8               	decf	wreg,f,c
 14725   0023BE  B4D8               	btfsc	status,2,c
 14726   0023C0  D733               	goto	u25900
 14727                           
 14728                           ;../../VLCBlib_PIC/event_teach_large.c: 424:             if (! (mode_flags & 1)) return 
      +                          PROCESSED;
 14729   0023C2  0101               	movlb	1	; () banked
 14730   0023C4  A166               	btfss	_mode_flags& (0+255),0,b
 14731   0023C6  D730               	goto	u25900
 14732                           
 14733                           ; BSR set to: 1
 14734                           ;../../VLCBlib_PIC/event_teach_large.c: 426:             doEvuln((uint16_t)(m->bytes[0]<
      +                          <8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]));
 14735   0023C8  EE20 F003          	lfsr	2,3
 14736   0023CC  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14737   0023CE  26D9               	addwf	fsr2l,f,c
 14738   0023D0  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14739   0023D2  22DA               	addwfc	fsr2h,f,c
 14740   0023D4  50DF               	movf	indf2,w,c
 14741   0023D6  0102               	movlb	2	; () banked
 14742   0023D8  6FCC               	movwf	??_teachProcessMessage& (0+255),b
 14743   0023DA  0101               	movlb	1	; () banked
 14744   0023DC  EE20 F002          	lfsr	2,2
 14745   0023E0  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14746   0023E2  26D9               	addwf	fsr2l,f,c
 14747   0023E4  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14748   0023E6  22DA               	addwfc	fsr2h,f,c
 14749   0023E8  50DF               	movf	indf2,w,c
 14750   0023EA  0102               	movlb	2	; () banked
 14751   0023EC  6FCD               	movwf	(??_teachProcessMessage+1)& (0+255),b
 14752   0023EE  51CC               	movf	??_teachProcessMessage& (0+255),w,b
 14753   0023F0  0101               	movlb	1	; () banked
 14754   0023F2  6FCE               	movwf	doEvuln@nodeNumber& (0+255),b
 14755   0023F4  C2CD  F1CF         	movff	??_teachProcessMessage+1,doEvuln@nodeNumber+1
 14756   0023F8  EE20 F005          	lfsr	2,5
 14757   0023FC  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14758   0023FE  26D9               	addwf	fsr2l,f,c
 14759   002400  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14760   002402  22DA               	addwfc	fsr2h,f,c
 14761   002404  50DF               	movf	indf2,w,c
 14762   002406  0102               	movlb	2	; () banked
 14763   002408  6FCF               	movwf	(??_teachProcessMessage+3)& (0+255),b
 14764   00240A  0101               	movlb	1	; () banked
 14765   00240C  EE20 F004          	lfsr	2,4
 14766   002410  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14767   002412  26D9               	addwf	fsr2l,f,c
 14768   002414  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14769   002416  22DA               	addwfc	fsr2h,f,c
 14770   002418  50DF               	movf	indf2,w,c
 14771   00241A  0102               	movlb	2	; () banked
 14772   00241C  6FD0               	movwf	(??_teachProcessMessage+4)& (0+255),b
 14773   00241E  51CF               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 14774   002420  0101               	movlb	1	; () banked
 14775   002422  6FD0               	movwf	doEvuln@eventNumber& (0+255),b
 14776   002424  C2D0  F1D1         	movff	??_teachProcessMessage+4,doEvuln@eventNumber+1
 14777   002428  EC5E  F055         	call	_doEvuln	;wreg free
 14778   00242C  D6FD               	goto	u25900
 14779   00242E                     l24453:
 14780                           
 14781                           ; BSR set to: 2
 14782                           ;../../VLCBlib_PIC/event_teach_large.c: 429:             if (teachCheckLen(m, 6, 1) == P
      +                          ROCESSED) return PROCESSED;
 14783   00242E  C1F9  F1CB         	movff	teachProcessMessage@m,teachCheckLen@m
 14784   002432  C1FA  F1CC         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14785   002436  0E06               	movlw	6
 14786   002438  0101               	movlb	1	; () banked
 14787   00243A  6FCD               	movwf	teachCheckLen@needed& (0+255),b
 14788   00243C  0E01               	movlw	1
 14789   00243E  6FCE               	movwf	teachCheckLen@learn& (0+255),b
 14790   002440  EC70  F059         	call	_teachCheckLen	;wreg free
 14791   002444  06E8               	decf	wreg,f,c
 14792   002446  B4D8               	btfsc	status,2,c
 14793   002448  D6EF               	goto	u25900
 14794                           
 14795                           ;../../VLCBlib_PIC/event_teach_large.c: 430:             if (! (mode_flags & 1)) return 
      +                          PROCESSED;
 14796   00244A  0101               	movlb	1	; () banked
 14797   00244C  A166               	btfss	_mode_flags& (0+255),0,b
 14798   00244E  D6EC               	goto	u25900
 14799                           
 14800                           ; BSR set to: 1
 14801                           ;../../VLCBlib_PIC/event_teach_large.c: 432:             doReqev((uint16_t)(m->bytes[0]<
      +                          <8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[4]);
 14802   002450  EE20 F003          	lfsr	2,3
 14803   002454  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14804   002456  26D9               	addwf	fsr2l,f,c
 14805   002458  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14806   00245A  22DA               	addwfc	fsr2h,f,c
 14807   00245C  50DF               	movf	indf2,w,c
 14808   00245E  0102               	movlb	2	; () banked
 14809   002460  6FCC               	movwf	??_teachProcessMessage& (0+255),b
 14810   002462  0101               	movlb	1	; () banked
 14811   002464  EE20 F002          	lfsr	2,2
 14812   002468  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14813   00246A  26D9               	addwf	fsr2l,f,c
 14814   00246C  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14815   00246E  22DA               	addwfc	fsr2h,f,c
 14816   002470  50DF               	movf	indf2,w,c
 14817   002472  0102               	movlb	2	; () banked
 14818   002474  6FCD               	movwf	(??_teachProcessMessage+1)& (0+255),b
 14819   002476  51CC               	movf	??_teachProcessMessage& (0+255),w,b
 14820   002478  0101               	movlb	1	; () banked
 14821   00247A  6FC8               	movwf	doReqev@nodeNumber& (0+255),b
 14822   00247C  C2CD  F1C9         	movff	??_teachProcessMessage+1,doReqev@nodeNumber+1
 14823   002480  EE20 F005          	lfsr	2,5
 14824   002484  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14825   002486  26D9               	addwf	fsr2l,f,c
 14826   002488  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14827   00248A  22DA               	addwfc	fsr2h,f,c
 14828   00248C  50DF               	movf	indf2,w,c
 14829   00248E  0102               	movlb	2	; () banked
 14830   002490  6FCF               	movwf	(??_teachProcessMessage+3)& (0+255),b
 14831   002492  0101               	movlb	1	; () banked
 14832   002494  EE20 F004          	lfsr	2,4
 14833   002498  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14834   00249A  26D9               	addwf	fsr2l,f,c
 14835   00249C  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14836   00249E  22DA               	addwfc	fsr2h,f,c
 14837   0024A0  50DF               	movf	indf2,w,c
 14838   0024A2  0102               	movlb	2	; () banked
 14839   0024A4  6FD0               	movwf	(??_teachProcessMessage+4)& (0+255),b
 14840   0024A6  51CF               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 14841   0024A8  0101               	movlb	1	; () banked
 14842   0024AA  6FCA               	movwf	doReqev@eventNumber& (0+255),b
 14843   0024AC  C2D0  F1CB         	movff	??_teachProcessMessage+4,doReqev@eventNumber+1
 14844   0024B0  EE20 F006          	lfsr	2,6
 14845   0024B4  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14846   0024B6  26D9               	addwf	fsr2l,f,c
 14847   0024B8  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14848   0024BA  22DA               	addwfc	fsr2h,f,c
 14849   0024BC  50DF               	movf	indf2,w,c
 14850   0024BE  6FCC               	movwf	doReqev@evNum& (0+255),b
 14851   0024C0  EC5F  F03D         	call	_doReqev	;wreg free
 14852   0024C4  D6B1               	goto	u25900
 14853   0024C6                     l24469:
 14854                           
 14855                           ; BSR set to: 2
 14856                           ;../../VLCBlib_PIC/event_teach_large.c: 436:             if (teachCheckLen(m, 3, 0) == P
      +                          ROCESSED) return PROCESSED;
 14857   0024C6  C1F9  F1CB         	movff	teachProcessMessage@m,teachCheckLen@m
 14858   0024CA  C1FA  F1CC         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14859   0024CE  0E03               	movlw	3
 14860   0024D0  0101               	movlb	1	; () banked
 14861   0024D2  6FCD               	movwf	teachCheckLen@needed& (0+255),b
 14862   0024D4  0E00               	movlw	0
 14863   0024D6  6FCE               	movwf	teachCheckLen@learn& (0+255),b
 14864   0024D8  EC70  F059         	call	_teachCheckLen	;wreg free
 14865   0024DC  06E8               	decf	wreg,f,c
 14866   0024DE  B4D8               	btfsc	status,2,c
 14867   0024E0  D6A3               	goto	u25900
 14868                           
 14869                           ;../../VLCBlib_PIC/event_teach_large.c: 437:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14870   0024E2  0101               	movlb	1	; () banked
 14871   0024E4  EE20 F002          	lfsr	2,2
 14872   0024E8  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14873   0024EA  26D9               	addwf	fsr2l,f,c
 14874   0024EC  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14875   0024EE  22DA               	addwfc	fsr2h,f,c
 14876   0024F0  50DE               	movf	postinc2,w,c
 14877   0024F2  0100               	movlb	0	; () banked
 14878   0024F4  19BE               	xorwf	(_nn+1)& (0+255),w,b
 14879   0024F6  A4D8               	btfss	status,2,c
 14880   0024F8  D697               	goto	u25900
 14881                           
 14882                           ; BSR set to: 0
 14883   0024FA  0101               	movlb	1	; () banked
 14884   0024FC  EE20 F003          	lfsr	2,3
 14885   002500  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14886   002502  26D9               	addwf	fsr2l,f,c
 14887   002504  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14888   002506  22DA               	addwfc	fsr2h,f,c
 14889   002508  0100               	movlb	0	; () banked
 14890   00250A  51BD               	movf	_nn& (0+255),w,b
 14891   00250C  18DE               	xorwf	postinc2,w,c
 14892   00250E  A4D8               	btfss	status,2,c
 14893   002510  D68B               	goto	u25900
 14894   002512  D6A7               	goto	l24379
 14895   002514                     l24489:
 14896                           
 14897                           ; BSR set to: 2
 14898                           ;../../VLCBlib_PIC/event_teach_large.c: 442:             if (teachCheckLen(m, 3, 1) == P
      +                          ROCESSED) return PROCESSED;
 14899   002514  C1F9  F1CB         	movff	teachProcessMessage@m,teachCheckLen@m
 14900   002518  C1FA  F1CC         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14901   00251C  0E03               	movlw	3
 14902   00251E  0101               	movlb	1	; () banked
 14903   002520  6FCD               	movwf	teachCheckLen@needed& (0+255),b
 14904   002522  0E01               	movlw	1
 14905   002524  6FCE               	movwf	teachCheckLen@learn& (0+255),b
 14906   002526  EC70  F059         	call	_teachCheckLen	;wreg free
 14907   00252A  06E8               	decf	wreg,f,c
 14908   00252C  B4D8               	btfsc	status,2,c
 14909   00252E  D67C               	goto	u25900
 14910                           
 14911                           ;../../VLCBlib_PIC/event_teach_large.c: 443:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14912   002530  0101               	movlb	1	; () banked
 14913   002532  EE20 F002          	lfsr	2,2
 14914   002536  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14915   002538  26D9               	addwf	fsr2l,f,c
 14916   00253A  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14917   00253C  22DA               	addwfc	fsr2h,f,c
 14918   00253E  50DE               	movf	postinc2,w,c
 14919   002540  0100               	movlb	0	; () banked
 14920   002542  19BE               	xorwf	(_nn+1)& (0+255),w,b
 14921   002544  A4D8               	btfss	status,2,c
 14922   002546  D670               	goto	u25900
 14923                           
 14924                           ; BSR set to: 0
 14925   002548  0101               	movlb	1	; () banked
 14926   00254A  EE20 F003          	lfsr	2,3
 14927   00254E  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14928   002550  26D9               	addwf	fsr2l,f,c
 14929   002552  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14930   002554  22DA               	addwfc	fsr2h,f,c
 14931   002556  0100               	movlb	0	; () banked
 14932   002558  51BD               	movf	_nn& (0+255),w,b
 14933   00255A  18DE               	xorwf	postinc2,w,c
 14934   00255C  A4D8               	btfss	status,2,c
 14935   00255E  D664               	goto	u25900
 14936                           
 14937                           ; BSR set to: 0
 14938                           ;../../VLCBlib_PIC/event_teach_large.c: 445:             if (! (mode_flags & 1)) {
 14939   002560  0101               	movlb	1	; () banked
 14940   002562  B166               	btfsc	_mode_flags& (0+255),0,b
 14941   002564  D019               	goto	l24509
 14942                           
 14943                           ; BSR set to: 1
 14944                           ;../../VLCBlib_PIC/event_teach_large.c: 446:                 sendMessage3(OPC_CMDERR, nn
      +                          .bytes.hi, nn.bytes.lo, CMDERR_NOT_LRN);
 14945   002566  C0BE  F0A6         	movff	_nn+1,sendMessage3@data1
 14946   00256A  C0BD  F0A7         	movff	_nn,sendMessage3@data2
 14947   00256E  0E02               	movlw	2
 14948   002570  0100               	movlb	0	; () banked
 14949   002572  6FA8               	movwf	sendMessage3@data3& (0+255),b
 14950   002574  0E6F               	movlw	111
 14951   002576  EC3F  F060         	call	_sendMessage3
 14952                           
 14953                           ;../../VLCBlib_PIC/event_teach_large.c: 448:                 sendMessage5(OPC_GRSP, nn.b
      +                          ytes.hi, nn.bytes.lo, OPC_NNCLR, SERVICE_ID_OLD_TEACH, CMDERR_NOT_LRN);
 14954   00257A  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 14955   00257E  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 14956   002582  0E55               	movlw	85
 14957   002584  0101               	movlb	1	; () banked
 14958   002586  6FC4               	movwf	sendMessage5@data3& (0+255),b
 14959   002588  0E04               	movlw	4
 14960   00258A  6FC5               	movwf	sendMessage5@data4& (0+255),b
 14961   00258C  0E02               	movlw	2
 14962   00258E  6FC6               	movwf	sendMessage5@data5& (0+255),b
 14963   002590  0EAF               	movlw	175
 14964   002592  ECE1  F05F         	call	_sendMessage5
 14965   002596  D648               	goto	u25900
 14966   002598                     l24509:
 14967                           
 14968                           ; BSR set to: 1
 14969                           ;../../VLCBlib_PIC/event_teach_large.c: 453:             doNnclr();
 14970   002598  EC81  F05F         	call	_doNnclr	;wreg free
 14971                           
 14972                           ;../../VLCBlib_PIC/event_teach_large.c: 454:             break;
 14973   00259C  D6A3               	goto	l24415
 14974   00259E                     l24511:
 14975                           
 14976                           ; BSR set to: 2
 14977                           ;../../VLCBlib_PIC/event_teach_large.c: 456:             if (teachCheckLen(m, 3, 0) == P
      +                          ROCESSED) return PROCESSED;
 14978   00259E  C1F9  F1CB         	movff	teachProcessMessage@m,teachCheckLen@m
 14979   0025A2  C1FA  F1CC         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14980   0025A6  0E03               	movlw	3
 14981   0025A8  0101               	movlb	1	; () banked
 14982   0025AA  6FCD               	movwf	teachCheckLen@needed& (0+255),b
 14983   0025AC  0E00               	movlw	0
 14984   0025AE  6FCE               	movwf	teachCheckLen@learn& (0+255),b
 14985   0025B0  EC70  F059         	call	_teachCheckLen	;wreg free
 14986   0025B4  06E8               	decf	wreg,f,c
 14987   0025B6  B4D8               	btfsc	status,2,c
 14988   0025B8  D637               	goto	u25900
 14989                           
 14990                           ;../../VLCBlib_PIC/event_teach_large.c: 457:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14991   0025BA  0101               	movlb	1	; () banked
 14992   0025BC  EE20 F002          	lfsr	2,2
 14993   0025C0  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14994   0025C2  26D9               	addwf	fsr2l,f,c
 14995   0025C4  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14996   0025C6  22DA               	addwfc	fsr2h,f,c
 14997   0025C8  50DE               	movf	postinc2,w,c
 14998   0025CA  0100               	movlb	0	; () banked
 14999   0025CC  19BE               	xorwf	(_nn+1)& (0+255),w,b
 15000   0025CE  A4D8               	btfss	status,2,c
 15001   0025D0  D62B               	goto	u25900
 15002                           
 15003                           ; BSR set to: 0
 15004   0025D2  0101               	movlb	1	; () banked
 15005   0025D4  EE20 F003          	lfsr	2,3
 15006   0025D8  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15007   0025DA  26D9               	addwf	fsr2l,f,c
 15008   0025DC  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15009   0025DE  22DA               	addwfc	fsr2h,f,c
 15010   0025E0  0100               	movlb	0	; () banked
 15011   0025E2  51BD               	movf	_nn& (0+255),w,b
 15012   0025E4  18DE               	xorwf	postinc2,w,c
 15013   0025E6  A4D8               	btfss	status,2,c
 15014   0025E8  D61F               	goto	u25900
 15015                           
 15016                           ; BSR set to: 0
 15017                           ;../../VLCBlib_PIC/event_teach_large.c: 459:             doNerd();
 15018   0025EA  EC62  F062         	call	_doNerd	;wreg free
 15019   0025EE  D61C               	goto	u25900
 15020   0025F0                     l24531:
 15021                           
 15022                           ; BSR set to: 2
 15023                           ;../../VLCBlib_PIC/event_teach_large.c: 462:             if (teachCheckLen(m, 3, 0) == P
      +                          ROCESSED) return PROCESSED;
 15024   0025F0  C1F9  F1CB         	movff	teachProcessMessage@m,teachCheckLen@m
 15025   0025F4  C1FA  F1CC         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 15026   0025F8  0E03               	movlw	3
 15027   0025FA  0101               	movlb	1	; () banked
 15028   0025FC  6FCD               	movwf	teachCheckLen@needed& (0+255),b
 15029   0025FE  0E00               	movlw	0
 15030   002600  6FCE               	movwf	teachCheckLen@learn& (0+255),b
 15031   002602  EC70  F059         	call	_teachCheckLen	;wreg free
 15032   002606  06E8               	decf	wreg,f,c
 15033   002608  B4D8               	btfsc	status,2,c
 15034   00260A  D60E               	goto	u25900
 15035                           
 15036                           ;../../VLCBlib_PIC/event_teach_large.c: 463:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 15037   00260C  0101               	movlb	1	; () banked
 15038   00260E  EE20 F002          	lfsr	2,2
 15039   002612  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15040   002614  26D9               	addwf	fsr2l,f,c
 15041   002616  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15042   002618  22DA               	addwfc	fsr2h,f,c
 15043   00261A  50DE               	movf	postinc2,w,c
 15044   00261C  0100               	movlb	0	; () banked
 15045   00261E  19BE               	xorwf	(_nn+1)& (0+255),w,b
 15046   002620  A4D8               	btfss	status,2,c
 15047   002622  D602               	goto	u25900
 15048                           
 15049                           ; BSR set to: 0
 15050   002624  0101               	movlb	1	; () banked
 15051   002626  EE20 F003          	lfsr	2,3
 15052   00262A  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15053   00262C  26D9               	addwf	fsr2l,f,c
 15054   00262E  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15055   002630  22DA               	addwfc	fsr2h,f,c
 15056   002632  0100               	movlb	0	; () banked
 15057   002634  51BD               	movf	_nn& (0+255),w,b
 15058   002636  18DE               	xorwf	postinc2,w,c
 15059   002638  A4D8               	btfss	status,2,c
 15060   00263A  D5F6               	goto	u25900
 15061                           
 15062                           ; BSR set to: 0
 15063                           ;../../VLCBlib_PIC/event_teach_large.c: 465:             doNnevn();
 15064   00263C  EC0E  F058         	call	_doNnevn	;wreg free
 15065   002640  D5F3               	goto	u25900
 15066   002642                     l24551:
 15067                           
 15068                           ; BSR set to: 2
 15069                           ;../../VLCBlib_PIC/event_teach_large.c: 468:             if (teachCheckLen(m, 3, 0) == P
      +                          ROCESSED) return PROCESSED;
 15070   002642  C1F9  F1CB         	movff	teachProcessMessage@m,teachCheckLen@m
 15071   002646  C1FA  F1CC         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 15072   00264A  0E03               	movlw	3
 15073   00264C  0101               	movlb	1	; () banked
 15074   00264E  6FCD               	movwf	teachCheckLen@needed& (0+255),b
 15075   002650  0E00               	movlw	0
 15076   002652  6FCE               	movwf	teachCheckLen@learn& (0+255),b
 15077   002654  EC70  F059         	call	_teachCheckLen	;wreg free
 15078   002658  06E8               	decf	wreg,f,c
 15079   00265A  B4D8               	btfsc	status,2,c
 15080   00265C  D5E5               	goto	u25900
 15081                           
 15082                           ;../../VLCBlib_PIC/event_teach_large.c: 469:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 15083   00265E  0101               	movlb	1	; () banked
 15084   002660  EE20 F002          	lfsr	2,2
 15085   002664  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15086   002666  26D9               	addwf	fsr2l,f,c
 15087   002668  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15088   00266A  22DA               	addwfc	fsr2h,f,c
 15089   00266C  50DE               	movf	postinc2,w,c
 15090   00266E  0100               	movlb	0	; () banked
 15091   002670  19BE               	xorwf	(_nn+1)& (0+255),w,b
 15092   002672  A4D8               	btfss	status,2,c
 15093   002674  D5D9               	goto	u25900
 15094                           
 15095                           ; BSR set to: 0
 15096   002676  0101               	movlb	1	; () banked
 15097   002678  EE20 F003          	lfsr	2,3
 15098   00267C  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15099   00267E  26D9               	addwf	fsr2l,f,c
 15100   002680  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15101   002682  22DA               	addwfc	fsr2h,f,c
 15102   002684  0100               	movlb	0	; () banked
 15103   002686  51BD               	movf	_nn& (0+255),w,b
 15104   002688  18DE               	xorwf	postinc2,w,c
 15105   00268A  A4D8               	btfss	status,2,c
 15106   00268C  D5CD               	goto	u25900
 15107                           
 15108                           ; BSR set to: 0
 15109                           ;../../VLCBlib_PIC/event_teach_large.c: 471:             doRqevn();
 15110   00268E  ECE6  F05E         	call	_doRqevn	;wreg free
 15111   002692  D5CA               	goto	u25900
 15112   002694                     l24571:
 15113                           
 15114                           ; BSR set to: 2
 15115                           ;../../VLCBlib_PIC/event_teach_large.c: 474:             if (teachCheckLen(m, 4, 0) == P
      +                          ROCESSED) return PROCESSED;
 15116   002694  C1F9  F1CB         	movff	teachProcessMessage@m,teachCheckLen@m
 15117   002698  C1FA  F1CC         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 15118   00269C  0E04               	movlw	4
 15119   00269E  0101               	movlb	1	; () banked
 15120   0026A0  6FCD               	movwf	teachCheckLen@needed& (0+255),b
 15121   0026A2  0E00               	movlw	0
 15122   0026A4  6FCE               	movwf	teachCheckLen@learn& (0+255),b
 15123   0026A6  EC70  F059         	call	_teachCheckLen	;wreg free
 15124   0026AA  06E8               	decf	wreg,f,c
 15125   0026AC  B4D8               	btfsc	status,2,c
 15126   0026AE  D5BC               	goto	u25900
 15127                           
 15128                           ;../../VLCBlib_PIC/event_teach_large.c: 475:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 15129   0026B0  0101               	movlb	1	; () banked
 15130   0026B2  EE20 F002          	lfsr	2,2
 15131   0026B6  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15132   0026B8  26D9               	addwf	fsr2l,f,c
 15133   0026BA  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15134   0026BC  22DA               	addwfc	fsr2h,f,c
 15135   0026BE  50DE               	movf	postinc2,w,c
 15136   0026C0  0100               	movlb	0	; () banked
 15137   0026C2  19BE               	xorwf	(_nn+1)& (0+255),w,b
 15138   0026C4  A4D8               	btfss	status,2,c
 15139   0026C6  D5B0               	goto	u25900
 15140                           
 15141                           ; BSR set to: 0
 15142   0026C8  0101               	movlb	1	; () banked
 15143   0026CA  EE20 F003          	lfsr	2,3
 15144   0026CE  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15145   0026D0  26D9               	addwf	fsr2l,f,c
 15146   0026D2  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15147   0026D4  22DA               	addwfc	fsr2h,f,c
 15148   0026D6  0100               	movlb	0	; () banked
 15149   0026D8  51BD               	movf	_nn& (0+255),w,b
 15150   0026DA  18DE               	xorwf	postinc2,w,c
 15151   0026DC  A4D8               	btfss	status,2,c
 15152   0026DE  D5A4               	goto	u25900
 15153                           
 15154                           ; BSR set to: 0
 15155                           ;../../VLCBlib_PIC/event_teach_large.c: 477:             doNenrd(m->bytes[2]);
 15156   0026E0  0101               	movlb	1	; () banked
 15157   0026E2  EE20 F004          	lfsr	2,4
 15158   0026E6  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15159   0026E8  26D9               	addwf	fsr2l,f,c
 15160   0026EA  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15161   0026EC  22DA               	addwfc	fsr2h,f,c
 15162   0026EE  50DF               	movf	indf2,w,c
 15163   0026F0  EC6A  F057         	call	_doNenrd
 15164   0026F4  D599               	goto	u25900
 15165   0026F6                     l24591:
 15166                           
 15167                           ; BSR set to: 2
 15168                           ;../../VLCBlib_PIC/event_teach_large.c: 480:             if (teachCheckLen(m, 5, 0) == P
      +                          ROCESSED) return PROCESSED;
 15169   0026F6  C1F9  F1CB         	movff	teachProcessMessage@m,teachCheckLen@m
 15170   0026FA  C1FA  F1CC         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 15171   0026FE  0E05               	movlw	5
 15172   002700  0101               	movlb	1	; () banked
 15173   002702  6FCD               	movwf	teachCheckLen@needed& (0+255),b
 15174   002704  0E00               	movlw	0
 15175   002706  6FCE               	movwf	teachCheckLen@learn& (0+255),b
 15176   002708  EC70  F059         	call	_teachCheckLen	;wreg free
 15177   00270C  06E8               	decf	wreg,f,c
 15178   00270E  B4D8               	btfsc	status,2,c
 15179   002710  D58B               	goto	u25900
 15180                           
 15181                           ;../../VLCBlib_PIC/event_teach_large.c: 481:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 15182   002712  0101               	movlb	1	; () banked
 15183   002714  EE20 F002          	lfsr	2,2
 15184   002718  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15185   00271A  26D9               	addwf	fsr2l,f,c
 15186   00271C  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15187   00271E  22DA               	addwfc	fsr2h,f,c
 15188   002720  50DE               	movf	postinc2,w,c
 15189   002722  0100               	movlb	0	; () banked
 15190   002724  19BE               	xorwf	(_nn+1)& (0+255),w,b
 15191   002726  A4D8               	btfss	status,2,c
 15192   002728  D57F               	goto	u25900
 15193                           
 15194                           ; BSR set to: 0
 15195   00272A  0101               	movlb	1	; () banked
 15196   00272C  EE20 F003          	lfsr	2,3
 15197   002730  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15198   002732  26D9               	addwf	fsr2l,f,c
 15199   002734  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15200   002736  22DA               	addwfc	fsr2h,f,c
 15201   002738  0100               	movlb	0	; () banked
 15202   00273A  51BD               	movf	_nn& (0+255),w,b
 15203   00273C  18DE               	xorwf	postinc2,w,c
 15204   00273E  A4D8               	btfss	status,2,c
 15205   002740  D573               	goto	u25900
 15206                           
 15207                           ; BSR set to: 0
 15208                           ;../../VLCBlib_PIC/event_teach_large.c: 483:             doReval(m->bytes[2], m->bytes[3
      +                          ]);
 15209   002742  0101               	movlb	1	; () banked
 15210   002744  EE20 F005          	lfsr	2,5
 15211   002748  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15212   00274A  26D9               	addwf	fsr2l,f,c
 15213   00274C  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15214   00274E  22DA               	addwfc	fsr2h,f,c
 15215   002750  50DF               	movf	indf2,w,c
 15216   002752  6FC7               	movwf	doReval@evNum& (0+255),b
 15217   002754  EE20 F004          	lfsr	2,4
 15218   002758  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15219   00275A  26D9               	addwf	fsr2l,f,c
 15220   00275C  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15221   00275E  22DA               	addwfc	fsr2h,f,c
 15222   002760  50DF               	movf	indf2,w,c
 15223   002762  EC20  F04A         	call	_doReval
 15224   002766  D560               	goto	u25900
 15225   002768                     l24611:
 15226                           
 15227                           ; BSR set to: 2
 15228                           ;../../VLCBlib_PIC/event_teach_large.c: 486:             if (teachCheckLen(m, 8, 1) == P
      +                          ROCESSED) return PROCESSED;
 15229   002768  C1F9  F1CB         	movff	teachProcessMessage@m,teachCheckLen@m
 15230   00276C  C1FA  F1CC         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 15231   002770  0E08               	movlw	8
 15232   002772  0101               	movlb	1	; () banked
 15233   002774  6FCD               	movwf	teachCheckLen@needed& (0+255),b
 15234   002776  0E01               	movlw	1
 15235   002778  6FCE               	movwf	teachCheckLen@learn& (0+255),b
 15236   00277A  EC70  F059         	call	_teachCheckLen	;wreg free
 15237   00277E  06E8               	decf	wreg,f,c
 15238   002780  B4D8               	btfsc	status,2,c
 15239   002782  D552               	goto	u25900
 15240                           
 15241                           ;../../VLCBlib_PIC/event_teach_large.c: 487:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 15242   002784  0101               	movlb	1	; () banked
 15243   002786  EE20 F002          	lfsr	2,2
 15244   00278A  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15245   00278C  26D9               	addwf	fsr2l,f,c
 15246   00278E  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15247   002790  22DA               	addwfc	fsr2h,f,c
 15248   002792  50DE               	movf	postinc2,w,c
 15249   002794  0100               	movlb	0	; () banked
 15250   002796  19BE               	xorwf	(_nn+1)& (0+255),w,b
 15251   002798  A4D8               	btfss	status,2,c
 15252   00279A  D546               	goto	u25900
 15253                           
 15254                           ; BSR set to: 0
 15255   00279C  0101               	movlb	1	; () banked
 15256   00279E  EE20 F003          	lfsr	2,3
 15257   0027A2  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15258   0027A4  26D9               	addwf	fsr2l,f,c
 15259   0027A6  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15260   0027A8  22DA               	addwfc	fsr2h,f,c
 15261   0027AA  0100               	movlb	0	; () banked
 15262   0027AC  51BD               	movf	_nn& (0+255),w,b
 15263   0027AE  18DE               	xorwf	postinc2,w,c
 15264   0027B0  A4D8               	btfss	status,2,c
 15265   0027B2  D53A               	goto	u25900
 15266                           
 15267                           ; BSR set to: 0
 15268                           ;../../VLCBlib_PIC/event_teach_large.c: 489:             doEvlrn((uint16_t)(m->bytes[0]<
      +                          <8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[5], m->bytes[6
      +                          ]);
 15269   0027B4  0101               	movlb	1	; () banked
 15270   0027B6  EE20 F003          	lfsr	2,3
 15271   0027BA  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15272   0027BC  26D9               	addwf	fsr2l,f,c
 15273   0027BE  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15274   0027C0  22DA               	addwfc	fsr2h,f,c
 15275   0027C2  50DF               	movf	indf2,w,c
 15276   0027C4  0102               	movlb	2	; () banked
 15277   0027C6  6FCC               	movwf	??_teachProcessMessage& (0+255),b
 15278   0027C8  0101               	movlb	1	; () banked
 15279   0027CA  EE20 F002          	lfsr	2,2
 15280   0027CE  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15281   0027D0  26D9               	addwf	fsr2l,f,c
 15282   0027D2  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15283   0027D4  22DA               	addwfc	fsr2h,f,c
 15284   0027D6  50DF               	movf	indf2,w,c
 15285   0027D8  0102               	movlb	2	; () banked
 15286   0027DA  6FCD               	movwf	(??_teachProcessMessage+1)& (0+255),b
 15287   0027DC  51CC               	movf	??_teachProcessMessage& (0+255),w,b
 15288   0027DE  0101               	movlb	1	; () banked
 15289   0027E0  6FEE               	movwf	doEvlrn@nodeNumber& (0+255),b
 15290   0027E2  C2CD  F1EF         	movff	??_teachProcessMessage+1,doEvlrn@nodeNumber+1
 15291   0027E6  EE20 F005          	lfsr	2,5
 15292   0027EA  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15293   0027EC  26D9               	addwf	fsr2l,f,c
 15294   0027EE  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15295   0027F0  22DA               	addwfc	fsr2h,f,c
 15296   0027F2  50DF               	movf	indf2,w,c
 15297   0027F4  0102               	movlb	2	; () banked
 15298   0027F6  6FCF               	movwf	(??_teachProcessMessage+3)& (0+255),b
 15299   0027F8  0101               	movlb	1	; () banked
 15300   0027FA  EE20 F004          	lfsr	2,4
 15301   0027FE  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15302   002800  26D9               	addwf	fsr2l,f,c
 15303   002802  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15304   002804  22DA               	addwfc	fsr2h,f,c
 15305   002806  50DF               	movf	indf2,w,c
 15306   002808  0102               	movlb	2	; () banked
 15307   00280A  6FD0               	movwf	(??_teachProcessMessage+4)& (0+255),b
 15308   00280C  51CF               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 15309   00280E  0101               	movlb	1	; () banked
 15310   002810  6FF0               	movwf	doEvlrn@eventNumber& (0+255),b
 15311   002812  C2D0  F1F1         	movff	??_teachProcessMessage+4,doEvlrn@eventNumber+1
 15312   002816  EE20 F007          	lfsr	2,7
 15313   00281A  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15314   00281C  26D9               	addwf	fsr2l,f,c
 15315   00281E  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15316   002820  22DA               	addwfc	fsr2h,f,c
 15317   002822  50DF               	movf	indf2,w,c
 15318   002824  6FF2               	movwf	doEvlrn@evNum& (0+255),b
 15319   002826  EE20 F008          	lfsr	2,8
 15320   00282A  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15321   00282C  26D9               	addwf	fsr2l,f,c
 15322   00282E  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15323   002830  22DA               	addwfc	fsr2h,f,c
 15324   002832  50DF               	movf	indf2,w,c
 15325   002834  6FF3               	movwf	doEvlrn@evVal& (0+255),b
 15326   002836  ECFA  F048         	call	_doEvlrn	;wreg free
 15327   00283A  D4F6               	goto	u25900
 15328   00283C                     l24633:
 15329   00283C  0101               	movlb	1	; () banked
 15330   00283E  EE20 F001          	lfsr	2,1
 15331   002842  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15332   002844  26D9               	addwf	fsr2l,f,c
 15333   002846  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15334   002848  22DA               	addwfc	fsr2h,f,c
 15335   00284A  50DF               	movf	indf2,w,c
 15336   00284C  0102               	movlb	2	; () banked
 15337   00284E  6FCC               	movwf	??_teachProcessMessage& (0+255),b
 15338   002850  6BCD               	clrf	(??_teachProcessMessage+1)& (0+255),b
 15339                           
 15340                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15341                           ; Switch size 1, requested type "simple"
 15342                           ; Number of cases is 1, Range of values is 0 to 0
 15343                           ; switch strategies available:
 15344                           ; Name         Instructions Cycles
 15345                           ; simple_byte            4     3 (average)
 15346                           ;	Chosen strategy is simple_byte
 15347   002852  51CD               	movf	(??_teachProcessMessage+1)& (0+255),w,b
 15348   002854  0A00               	xorlw	0	; case 0
 15349   002856  A4D8               	btfss	status,2,c
 15350   002858  D545               	goto	l24415
 15351                           
 15352                           ; BSR set to: 2
 15353                           ; Switch size 1, requested type "simple"
 15354                           ; Number of cases is 13, Range of values is 83 to 245
 15355                           ; switch strategies available:
 15356                           ; Name         Instructions Cycles
 15357                           ; simple_byte           40    21 (average)
 15358                           ;	Chosen strategy is simple_byte
 15359   00285A  51CC               	movf	??_teachProcessMessage& (0+255),w,b
 15360   00285C  0A53               	xorlw	83	; case 83
 15361   00285E  B4D8               	btfsc	status,2,c
 15362   002860  D4D5               	goto	l24367
 15363   002862  0A07               	xorlw	7	; case 84
 15364   002864  B4D8               	btfsc	status,2,c
 15365   002866  D62F               	goto	l24469
 15366   002868  0A01               	xorlw	1	; case 85
 15367   00286A  B4D8               	btfsc	status,2,c
 15368   00286C  D653               	goto	l24489
 15369   00286E  0A03               	xorlw	3	; case 86
 15370   002870  B4D8               	btfsc	status,2,c
 15371   002872  D6BE               	goto	l24531
 15372   002874  0A01               	xorlw	1	; case 87
 15373   002876  B4D8               	btfsc	status,2,c
 15374   002878  D692               	goto	l24511
 15375   00287A  0A0F               	xorlw	15	; case 88
 15376   00287C  B4D8               	btfsc	status,2,c
 15377   00287E  D6E1               	goto	l24551
 15378   002880  0A2A               	xorlw	42	; case 114
 15379   002882  B4D8               	btfsc	status,2,c
 15380   002884  D707               	goto	l24571
 15381   002886  0A04               	xorlw	4	; case 118
 15382   002888  B4D8               	btfsc	status,2,c
 15383   00288A  D4EE               	goto	l24385
 15384   00288C  0AE3               	xorlw	227	; case 149
 15385   00288E  B4D8               	btfsc	status,2,c
 15386   002890  D58A               	goto	l24437
 15387   002892  0A09               	xorlw	9	; case 156
 15388   002894  B4D8               	btfsc	status,2,c
 15389   002896  D72F               	goto	l24591
 15390   002898  0A2E               	xorlw	46	; case 178
 15391   00289A  B4D8               	btfsc	status,2,c
 15392   00289C  D5C8               	goto	l24453
 15393   00289E  0A60               	xorlw	96	; case 210
 15394   0028A0  B4D8               	btfsc	status,2,c
 15395   0028A2  D522               	goto	l24419
 15396   0028A4  0A27               	xorlw	39	; case 245
 15397   0028A6  B4D8               	btfsc	status,2,c
 15398   0028A8  D75F               	goto	l24611
 15399   0028AA  D51C               	goto	l24415
 15400   0028AC                     __end_of_teachProcessMessage:
 15401                           	callstack 0
 15402                           
 15403 ;; *************** function _teachCheckLen *****************
 15404 ;; Defined at:
 15405 ;;		line 504 in file "../../VLCBlib_PIC/event_teach_large.c"
 15406 ;; Parameters:    Size  Location     Type
 15407 ;;  m               2   17[BANK1 ] PTR struct Message
 15408 ;;		 -> poll@m(9), 
 15409 ;;  needed          1   19[BANK1 ] unsigned char 
 15410 ;;  learn           1   20[BANK1 ] unsigned char 
 15411 ;; Auto vars:     Size  Location     Type
 15412 ;;		None
 15413 ;; Return value:  Size  Location     Type
 15414 ;;                  1    wreg      enum E12793
 15415 ;; Registers used:
 15416 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15417 ;; Tracked objects:
 15418 ;;		On entry : 0/0
 15419 ;;		On exit  : 0/0
 15420 ;;		Unchanged: 0/0
 15421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15422 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15424 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15425 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15426 ;;Total ram usage:        5 bytes
 15427 ;; Hardware stack levels used: 1
 15428 ;; Hardware stack levels required when called: 18
 15429 ;; This function calls:
 15430 ;;		_checkLen
 15431 ;;		_sendMessage5
 15432 ;; This function is called by:
 15433 ;;		_teachProcessMessage
 15434 ;; This function uses a non-reentrant model
 15435 ;;
 15436                           
 15437                           	psect	text28
 15438   00B2E0                     __ptext28:
 15439                           	callstack 0
 15440   00B2E0                     _teachCheckLen:
 15441                           	callstack 10
 15442                           
 15443                           ;../../VLCBlib_PIC/event_teach_large.c: 505:     if (learn) {
 15444                           
 15445                           ;incstack = 0
 15446   00B2E0  0101               	movlb	1	; () banked
 15447   00B2E2  51CE               	movf	teachCheckLen@learn& (0+255),w,b
 15448   00B2E4  B4D8               	btfsc	status,2,c
 15449   00B2E6  D021               	goto	l22473
 15450                           
 15451                           ; BSR set to: 1
 15452                           ;../../VLCBlib_PIC/event_teach_large.c: 507:         if (m->len < needed) {
 15453   00B2E8  C1CB  FFD9         	movff	teachCheckLen@m,fsr2l
 15454   00B2EC  C1CC  FFDA         	movff	teachCheckLen@m+1,fsr2h
 15455   00B2F0  51CD               	movf	teachCheckLen@needed& (0+255),w,b
 15456   00B2F2  5CDE               	subwf	postinc2,w,c
 15457   00B2F4  B0D8               	btfsc	status,0,c
 15458   00B2F6  D017               	goto	l22469
 15459                           
 15460                           ; BSR set to: 1
 15461                           ;../../VLCBlib_PIC/event_teach_large.c: 509:             if (mode_flags & 1) {
 15462   00B2F8  A166               	btfss	_mode_flags& (0+255),0,b
 15463   00B2FA  D013               	goto	l22465
 15464                           
 15465                           ; BSR set to: 1
 15466                           ;../../VLCBlib_PIC/event_teach_large.c: 512:                 sendMessage5(OPC_GRSP, nn.b
      +                          ytes.hi, nn.bytes.lo, m->opc, SERVICE_ID_OLD_TEACH, CMDERR_INV_CMD);
 15467   00B2FC  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 15468   00B300  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 15469   00B304  EE20 F001          	lfsr	2,1
 15470   00B308  51CB               	movf	teachCheckLen@m& (0+255),w,b
 15471   00B30A  26D9               	addwf	fsr2l,f,c
 15472   00B30C  51CC               	movf	(teachCheckLen@m+1)& (0+255),w,b
 15473   00B30E  22DA               	addwfc	fsr2h,f,c
 15474   00B310  50DF               	movf	indf2,w,c
 15475   00B312  6FC4               	movwf	sendMessage5@data3& (0+255),b
 15476   00B314  0E04               	movlw	4
 15477   00B316  6FC5               	movwf	sendMessage5@data4& (0+255),b
 15478   00B318  0E01               	movlw	1
 15479   00B31A  6FC6               	movwf	sendMessage5@data5& (0+255),b
 15480   00B31C  0EAF               	movlw	175
 15481   00B31E  ECE1  F05F         	call	_sendMessage5
 15482   00B322                     l22465:
 15483                           
 15484                           ;../../VLCBlib_PIC/event_teach_large.c: 515:             return PROCESSED;
 15485   00B322  0E01               	movlw	1
 15486   00B324  0012               	return	
 15487   00B326                     l22469:
 15488                           
 15489                           ; BSR set to: 1
 15490                           ;../../VLCBlib_PIC/event_teach_large.c: 517:         return NOT_PROCESSED;
 15491   00B326  0E00               	movlw	0
 15492   00B328  0012               	return	
 15493   00B32A                     l22473:
 15494                           
 15495                           ; BSR set to: 1
 15496                           ;../../VLCBlib_PIC/event_teach_large.c: 519:     return checkLen(m, needed, SERVICE_ID_O
      +                          LD_TEACH);
 15497   00B32A  C1CB  F1C7         	movff	teachCheckLen@m,checkLen@m
 15498   00B32E  C1CC  F1C8         	movff	teachCheckLen@m+1,checkLen@m+1
 15499   00B332  C1CD  F1C9         	movff	teachCheckLen@needed,checkLen@needed
 15500   00B336  0E04               	movlw	4
 15501   00B338  6FCA               	movwf	checkLen@service& (0+255),b
 15502   00B33A  EC25  F054         	call	_checkLen	;wreg free
 15503   00B33E  0012               	return		;funcret
 15504   00B340                     __end_of_teachCheckLen:
 15505                           	callstack 0
 15506                           
 15507 ;; *************** function _doRqevn *****************
 15508 ;; Defined at:
 15509 ;;		line 649 in file "../../VLCBlib_PIC/event_teach_large.c"
 15510 ;; Parameters:    Size  Location     Type
 15511 ;;		None
 15512 ;; Auto vars:     Size  Location     Type
 15513 ;;  i               1   10[BANK1 ] unsigned char 
 15514 ;;  count           1    9[BANK1 ] unsigned char 
 15515 ;; Return value:  Size  Location     Type
 15516 ;;                  1    wreg      void 
 15517 ;; Registers used:
 15518 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15519 ;; Tracked objects:
 15520 ;;		On entry : 0/0
 15521 ;;		On exit  : 0/0
 15522 ;;		Unchanged: 0/0
 15523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15525 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15527 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15528 ;;Total ram usage:        2 bytes
 15529 ;; Hardware stack levels used: 1
 15530 ;; Hardware stack levels required when called: 17
 15531 ;; This function calls:
 15532 ;;		_sendMessage3
 15533 ;;		_validStart
 15534 ;; This function is called by:
 15535 ;;		_teachProcessMessage
 15536 ;; This function uses a non-reentrant model
 15537 ;;
 15538                           
 15539                           	psect	text29
 15540   00BDCC                     __ptext29:
 15541                           	callstack 0
 15542   00BDCC                     _doRqevn:
 15543                           	callstack 11
 15544                           
 15545                           ;../../VLCBlib_PIC/event_teach_large.c: 651:     uint8_t count = 0;
 15546                           
 15547                           ;incstack = 0
 15548   00BDCC  0E00               	movlw	0
 15549   00BDCE  0101               	movlb	1	; () banked
 15550   00BDD0  6FC3               	movwf	doRqevn@count& (0+255),b
 15551                           
 15552                           ;../../VLCBlib_PIC/event_teach_large.c: 652:     uint8_t i;;../../VLCBlib_PIC/event_teac
      +                          h_large.c: 653:     for (i=0; i<255; i++) {
 15553   00BDD2  0E00               	movlw	0
 15554   00BDD4  6FC4               	movwf	doRqevn@i& (0+255),b
 15555   00BDD6                     l22577:
 15556                           
 15557                           ; BSR set to: 1
 15558                           ;../../VLCBlib_PIC/event_teach_large.c: 654:         if (validStart(i)) {
 15559   00BDD6  51C4               	movf	doRqevn@i& (0+255),w,b
 15560   00BDD8  EC39  F05C         	call	_validStart
 15561   00BDDC  0900               	iorlw	0
 15562   00BDDE  B4D8               	btfsc	status,2,c
 15563   00BDE0  D002               	goto	l2832
 15564                           
 15565                           ;../../VLCBlib_PIC/event_teach_large.c: 655:             count++;
 15566   00BDE2  0101               	movlb	1	; () banked
 15567   00BDE4  2BC3               	incf	doRqevn@count& (0+255),f,b
 15568   00BDE6                     l2832:
 15569                           
 15570                           ;../../VLCBlib_PIC/event_teach_large.c: 657:     }
 15571   00BDE6  0101               	movlb	1	; () banked
 15572   00BDE8  2BC4               	incf	doRqevn@i& (0+255),f,b
 15573                           
 15574                           ; BSR set to: 1
 15575   00BDEA  29C4               	incf	doRqevn@i& (0+255),w,b
 15576   00BDEC  A4D8               	btfss	status,2,c
 15577   00BDEE  D7F3               	goto	l22577
 15578                           
 15579                           ; BSR set to: 1
 15580                           ;../../VLCBlib_PIC/event_teach_large.c: 658:     sendMessage3(OPC_NUMEV, nn.bytes.hi, nn
      +                          .bytes.lo, count);
 15581   00BDF0  C0BE  F0A6         	movff	_nn+1,sendMessage3@data1
 15582   00BDF4  C0BD  F0A7         	movff	_nn,sendMessage3@data2
 15583   00BDF8  C1C3  F0A8         	movff	doRqevn@count,sendMessage3@data3
 15584   00BDFC  0E74               	movlw	116
 15585   00BDFE  EC3F  F060         	call	_sendMessage3
 15586   00BE02  0012               	return		;funcret
 15587   00BE04                     __end_of_doRqevn:
 15588                           	callstack 0
 15589                           
 15590 ;; *************** function _doReval *****************
 15591 ;; Defined at:
 15592 ;;		line 719 in file "../../VLCBlib_PIC/event_teach_large.c"
 15593 ;; Parameters:    Size  Location     Type
 15594 ;;  enNum           1    wreg     unsigned char 
 15595 ;;  evNum           1   13[BANK1 ] unsigned char 
 15596 ;; Auto vars:     Size  Location     Type
 15597 ;;  enNum           1   16[BANK1 ] unsigned char 
 15598 ;;  evVal           2   17[BANK1 ] int 
 15599 ;;  tableIndex      1   19[BANK1 ] unsigned char 
 15600 ;;  evIndex         1   15[BANK1 ] unsigned char 
 15601 ;; Return value:  Size  Location     Type
 15602 ;;                  1    wreg      void 
 15603 ;; Registers used:
 15604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15605 ;; Tracked objects:
 15606 ;;		On entry : 0/0
 15607 ;;		On exit  : 0/0
 15608 ;;		Unchanged: 0/0
 15609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15610 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15611 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15612 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15613 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15614 ;;Total ram usage:        7 bytes
 15615 ;; Hardware stack levels used: 1
 15616 ;; Hardware stack levels required when called: 17
 15617 ;; This function calls:
 15618 ;;		_evtIdxToTableIndex
 15619 ;;		_getEv
 15620 ;;		_numEv
 15621 ;;		_sendMessage3
 15622 ;;		_sendMessage5
 15623 ;;		_validStart
 15624 ;; This function is called by:
 15625 ;;		_teachProcessMessage
 15626 ;; This function uses a non-reentrant model
 15627 ;;
 15628                           
 15629                           	psect	text30
 15630   009440                     __ptext30:
 15631                           	callstack 0
 15632   009440                     _doReval:
 15633                           	callstack 11
 15634                           
 15635                           ;incstack = 0
 15636                           ;doReval@enNum stored from wreg
 15637   009440  0101               	movlb	1	; () banked
 15638   009442  6FCA               	movwf	doReval@enNum& (0+255),b
 15639                           
 15640                           ;../../VLCBlib_PIC/event_teach_large.c: 722:     uint8_t evIndex;;../../VLCBlib_PIC/even
      +                          t_teach_large.c: 723:     uint8_t tableIndex = evtIdxToTableIndex(enNum);
 15641   009444  0101               	movlb	1	; () banked
 15642   009446  51CA               	movf	doReval@enNum& (0+255),w,b
 15643   009448  ECFF  F062         	call	_evtIdxToTableIndex
 15644   00944C  0101               	movlb	1	; () banked
 15645   00944E  6FCD               	movwf	doReval@tableIndex& (0+255),b
 15646                           
 15647                           ; BSR set to: 1
 15648                           ;../../VLCBlib_PIC/event_teach_large.c: 725:     if (evNum > 20) {
 15649   009450  0E14               	movlw	20
 15650   009452  65C7               	cpfsgt	doReval@evNum& (0+255),b
 15651   009454  D00B               	goto	l22605
 15652                           
 15653                           ; BSR set to: 1
 15654                           ;../../VLCBlib_PIC/event_teach_large.c: 726:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, CMDERR_INV_EV_IDX);
 15655   009456  C0BE  F0A6         	movff	_nn+1,sendMessage3@data1
 15656   00945A  C0BD  F0A7         	movff	_nn,sendMessage3@data2
 15657   00945E  0E06               	movlw	6
 15658   009460  0100               	movlb	0	; () banked
 15659   009462  6FA8               	movwf	sendMessage3@data3& (0+255),b
 15660   009464  0E6F               	movlw	111
 15661   009466  EC3F  F060         	call	_sendMessage3
 15662   00946A  0012               	return	
 15663   00946C                     l22605:
 15664                           
 15665                           ; BSR set to: 1
 15666                           ;../../VLCBlib_PIC/event_teach_large.c: 730:     evIndex = evNum-1U;
 15667   00946C  05C7               	decf	doReval@evNum& (0+255),w,b
 15668   00946E  6FC9               	movwf	doReval@evIndex& (0+255),b
 15669                           
 15670                           ;../../VLCBlib_PIC/event_teach_large.c: 733:     if (tableIndex < 255) {
 15671   009470  29CD               	incf	doReval@tableIndex& (0+255),w,b
 15672   009472  B4D8               	btfsc	status,2,c
 15673   009474  D039               	goto	l22625
 15674                           
 15675                           ; BSR set to: 1
 15676                           ;../../VLCBlib_PIC/event_teach_large.c: 734:         if (validStart(tableIndex)) {
 15677   009476  51CD               	movf	doReval@tableIndex& (0+255),w,b
 15678   009478  EC39  F05C         	call	_validStart
 15679   00947C  0900               	iorlw	0
 15680   00947E  B4D8               	btfsc	status,2,c
 15681   009480  D033               	goto	l22625
 15682                           
 15683                           ;../../VLCBlib_PIC/event_teach_large.c: 735:             int evVal;;../../VLCBlib_PIC/ev
      +                          ent_teach_large.c: 736:             if (evNum == 0) {
 15684   009482  0101               	movlb	1	; () banked
 15685   009484  51C7               	movf	doReval@evNum& (0+255),w,b
 15686   009486  A4D8               	btfss	status,2,c
 15687   009488  D009               	goto	l22613
 15688                           
 15689                           ; BSR set to: 1
 15690                           ;../../VLCBlib_PIC/event_teach_large.c: 737:                 evVal = numEv(tableIndex);
 15691   00948A  51CD               	movf	doReval@tableIndex& (0+255),w,b
 15692   00948C  EC54  F045         	call	_numEv
 15693   009490  0101               	movlb	1	; () banked
 15694   009492  6FC8               	movwf	??_doReval& (0+255),b
 15695   009494  51C8               	movf	??_doReval& (0+255),w,b
 15696   009496  6FCB               	movwf	doReval@evVal& (0+255),b
 15697   009498  6BCC               	clrf	(doReval@evVal+1)& (0+255),b
 15698                           
 15699                           ;../../VLCBlib_PIC/event_teach_large.c: 738:             } else {
 15700   00949A  D009               	goto	l22615
 15701   00949C                     l22613:
 15702                           
 15703                           ; BSR set to: 1
 15704                           ;../../VLCBlib_PIC/event_teach_large.c: 739:                 evVal = getEv(tableIndex, e
      +                          vIndex);
 15705   00949C  C1C9  F09D         	movff	doReval@evIndex,getEv@evNum
 15706   0094A0  51CD               	movf	doReval@tableIndex& (0+255),w,b
 15707   0094A2  EC0A  F03C         	call	_getEv
 15708   0094A6  C09D  F1CB         	movff	?_getEv,doReval@evVal
 15709   0094AA  C09E  F1CC         	movff	?_getEv+1,doReval@evVal+1
 15710   0094AE                     l22615:
 15711                           
 15712                           ;../../VLCBlib_PIC/event_teach_large.c: 741:             if (evVal >= 0) {
 15713   0094AE  0101               	movlb	1	; () banked
 15714   0094B0  BFCC               	btfsc	(doReval@evVal+1)& (0+255),7,b
 15715   0094B2  D00E               	goto	l22621
 15716                           
 15717                           ; BSR set to: 1
 15718                           ;../../VLCBlib_PIC/event_teach_large.c: 742:                 sendMessage5(OPC_NEVAL, nn.
      +                          bytes.hi, nn.bytes.lo, enNum, evNum, (uint8_t)evVal);
 15719   0094B4  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 15720   0094B8  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 15721   0094BC  C1CA  F1C4         	movff	doReval@enNum,sendMessage5@data3
 15722   0094C0  C1C7  F1C5         	movff	doReval@evNum,sendMessage5@data4
 15723   0094C4  C1CB  F1C6         	movff	doReval@evVal,sendMessage5@data5
 15724   0094C8  0EB5               	movlw	181
 15725   0094CA  ECE1  F05F         	call	_sendMessage5
 15726   0094CE  0012               	return	
 15727   0094D0                     l22621:
 15728                           
 15729                           ; BSR set to: 1
 15730                           ;../../VLCBlib_PIC/event_teach_large.c: 746:             sendMessage3(OPC_CMDERR, nn.byt
      +                          es.hi, nn.bytes.lo, (uint8_t)(-evVal));
 15731   0094D0  C0BE  F0A6         	movff	_nn+1,sendMessage3@data1
 15732   0094D4  C0BD  F0A7         	movff	_nn,sendMessage3@data2
 15733   0094D8  51CB               	movf	doReval@evVal& (0+255),w,b
 15734   0094DA  0800               	sublw	0
 15735   0094DC  0100               	movlb	0	; () banked
 15736   0094DE  6FA8               	movwf	sendMessage3@data3& (0+255),b
 15737   0094E0  0E6F               	movlw	111
 15738   0094E2  EC3F  F060         	call	_sendMessage3
 15739   0094E6  0012               	return	
 15740   0094E8                     l22625:
 15741                           
 15742                           ;../../VLCBlib_PIC/event_teach_large.c: 750:     sendMessage3(OPC_CMDERR, nn.bytes.hi, n
      +                          n.bytes.lo, CMDERR_INVALID_EVENT);
 15743   0094E8  C0BE  F0A6         	movff	_nn+1,sendMessage3@data1
 15744   0094EC  C0BD  F0A7         	movff	_nn,sendMessage3@data2
 15745   0094F0  0E07               	movlw	7
 15746   0094F2  0100               	movlb	0	; () banked
 15747   0094F4  6FA8               	movwf	sendMessage3@data3& (0+255),b
 15748   0094F6  0E6F               	movlw	111
 15749   0094F8  EC3F  F060         	call	_sendMessage3
 15750   0094FC  0012               	return		;funcret
 15751   0094FE                     __end_of_doReval:
 15752                           	callstack 0
 15753                           
 15754 ;; *************** function _doReqev *****************
 15755 ;; Defined at:
 15756 ;;		line 781 in file "../../VLCBlib_PIC/event_teach_large.c"
 15757 ;; Parameters:    Size  Location     Type
 15758 ;;  nodeNumber      2   14[BANK1 ] unsigned short 
 15759 ;;  eventNumber     2   16[BANK1 ] unsigned short 
 15760 ;;  evNum           1   18[BANK1 ] unsigned char 
 15761 ;; Auto vars:     Size  Location     Type
 15762 ;;  evVal           2   19[BANK1 ] short 
 15763 ;;  tableIndex      1   21[BANK1 ] unsigned char 
 15764 ;; Return value:  Size  Location     Type
 15765 ;;                  1    wreg      void 
 15766 ;; Registers used:
 15767 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15768 ;; Tracked objects:
 15769 ;;		On entry : 0/0
 15770 ;;		On exit  : 0/0
 15771 ;;		Unchanged: 0/0
 15772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15773 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15774 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15776 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15777 ;;Total ram usage:        8 bytes
 15778 ;; Hardware stack levels used: 1
 15779 ;; Hardware stack levels required when called: 17
 15780 ;; This function calls:
 15781 ;;		_findEvent
 15782 ;;		_findServiceIndex
 15783 ;;		_getEv
 15784 ;;		_numEv
 15785 ;;		_sendMessage3
 15786 ;;		_sendMessage5
 15787 ;;		_sendMessage6
 15788 ;;		_startTimedResponse
 15789 ;; This function is called by:
 15790 ;;		_teachProcessMessage
 15791 ;; This function uses a non-reentrant model
 15792 ;;
 15793                           
 15794                           	psect	text31
 15795   007ABE                     __ptext31:
 15796                           	callstack 0
 15797   007ABE                     _doReqev:
 15798                           	callstack 11
 15799                           
 15800                           ;../../VLCBlib_PIC/event_teach_large.c: 782:     int16_t evVal;;../../VLCBlib_PIC/event_
      +                          teach_large.c: 784:     uint8_t tableIndex = findEvent(nodeNumber, eventNumber);
 15801                           
 15802                           ;incstack = 0
 15803   007ABE  C1C8  F1BA         	movff	doReqev@nodeNumber,findEvent@nodeNumber
 15804   007AC2  C1C9  F1BB         	movff	doReqev@nodeNumber+1,findEvent@nodeNumber+1
 15805   007AC6  C1CA  F1BC         	movff	doReqev@eventNumber,findEvent@eventNumber
 15806   007ACA  C1CB  F1BD         	movff	doReqev@eventNumber+1,findEvent@eventNumber+1
 15807   007ACE  ECBB  F051         	call	_findEvent	;wreg free
 15808   007AD2  0101               	movlb	1	; () banked
 15809   007AD4  6FCF               	movwf	doReqev@tableIndex& (0+255),b
 15810                           
 15811                           ; BSR set to: 1
 15812                           ;../../VLCBlib_PIC/event_teach_large.c: 785:     if (tableIndex == 0xff) {
 15813   007AD6  29CF               	incf	doReqev@tableIndex& (0+255),w,b
 15814   007AD8  A4D8               	btfss	status,2,c
 15815   007ADA  D019               	goto	l22519
 15816                           
 15817                           ; BSR set to: 1
 15818                           ;../../VLCBlib_PIC/event_teach_large.c: 786:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, CMDERR_INVALID_EVENT);
 15819   007ADC  C0BE  F0A6         	movff	_nn+1,sendMessage3@data1
 15820   007AE0  C0BD  F0A7         	movff	_nn,sendMessage3@data2
 15821   007AE4  0E07               	movlw	7
 15822   007AE6  0100               	movlb	0	; () banked
 15823   007AE8  6FA8               	movwf	sendMessage3@data3& (0+255),b
 15824   007AEA  0E6F               	movlw	111
 15825   007AEC  EC3F  F060         	call	_sendMessage3
 15826                           
 15827                           ;../../VLCBlib_PIC/event_teach_large.c: 788:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, CMDERR_INVALID_EVENT);
 15828   007AF0  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 15829   007AF4  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 15830   007AF8  0EB2               	movlw	178
 15831   007AFA  0101               	movlb	1	; () banked
 15832   007AFC  6FC4               	movwf	sendMessage5@data3& (0+255),b
 15833   007AFE  0E04               	movlw	4
 15834   007B00  6FC5               	movwf	sendMessage5@data4& (0+255),b
 15835   007B02  0E07               	movlw	7
 15836   007B04  6FC6               	movwf	sendMessage5@data5& (0+255),b
 15837   007B06  0EAF               	movlw	175
 15838   007B08  ECE1  F05F         	call	_sendMessage5
 15839   007B0C  0012               	return	
 15840   007B0E                     l22519:
 15841                           
 15842                           ; BSR set to: 1
 15843                           ;../../VLCBlib_PIC/event_teach_large.c: 792:     if (evNum > 20) {
 15844   007B0E  0E14               	movlw	20
 15845   007B10  65CC               	cpfsgt	doReqev@evNum& (0+255),b
 15846   007B12  D019               	goto	l22525
 15847                           
 15848                           ; BSR set to: 1
 15849                           ;../../VLCBlib_PIC/event_teach_large.c: 793:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, CMDERR_INV_EV_IDX);
 15850   007B14  C0BE  F0A6         	movff	_nn+1,sendMessage3@data1
 15851   007B18  C0BD  F0A7         	movff	_nn,sendMessage3@data2
 15852   007B1C  0E06               	movlw	6
 15853   007B1E  0100               	movlb	0	; () banked
 15854   007B20  6FA8               	movwf	sendMessage3@data3& (0+255),b
 15855   007B22  0E6F               	movlw	111
 15856   007B24  EC3F  F060         	call	_sendMessage3
 15857                           
 15858                           ;../../VLCBlib_PIC/event_teach_large.c: 795:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, CMDERR_INV_EV_IDX);
 15859   007B28  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 15860   007B2C  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 15861   007B30  0EB2               	movlw	178
 15862   007B32  0101               	movlb	1	; () banked
 15863   007B34  6FC4               	movwf	sendMessage5@data3& (0+255),b
 15864   007B36  0E04               	movlw	4
 15865   007B38  6FC5               	movwf	sendMessage5@data4& (0+255),b
 15866   007B3A  0E06               	movlw	6
 15867   007B3C  6FC6               	movwf	sendMessage5@data5& (0+255),b
 15868   007B3E  0EAF               	movlw	175
 15869   007B40  ECE1  F05F         	call	_sendMessage5
 15870   007B44  0012               	return	
 15871   007B46                     l22525:
 15872                           
 15873                           ; BSR set to: 1
 15874                           ;../../VLCBlib_PIC/event_teach_large.c: 799:     if (evNum == 0) {
 15875   007B46  51CC               	movf	doReqev@evNum& (0+255),w,b
 15876   007B48  A4D8               	btfss	status,2,c
 15877   007B4A  D020               	goto	l22535
 15878                           
 15879                           ; BSR set to: 1
 15880                           ;../../VLCBlib_PIC/event_teach_large.c: 801:         sendMessage6(OPC_EVANS, nodeNumber>
      +                          >8, nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, 0, numEv(tableIndex));
 15881   007B4C  51C9               	movf	(doReqev@nodeNumber+1)& (0+255),w,b
 15882   007B4E  6FC2               	movwf	sendMessage6@data1& (0+255),b
 15883   007B50  C1C8  F1C3         	movff	doReqev@nodeNumber,sendMessage6@data2
 15884   007B54  51CB               	movf	(doReqev@eventNumber+1)& (0+255),w,b
 15885   007B56  6FC4               	movwf	sendMessage6@data3& (0+255),b
 15886   007B58  C1CA  F1C5         	movff	doReqev@eventNumber,sendMessage6@data4
 15887   007B5C  0E00               	movlw	0
 15888   007B5E  6FC6               	movwf	sendMessage6@data5& (0+255),b
 15889   007B60  51CF               	movf	doReqev@tableIndex& (0+255),w,b
 15890   007B62  EC54  F045         	call	_numEv
 15891   007B66  0101               	movlb	1	; () banked
 15892   007B68  6FC7               	movwf	sendMessage6@data6& (0+255),b
 15893   007B6A  0ED3               	movlw	211
 15894   007B6C  EC99  F05F         	call	_sendMessage6
 15895                           
 15896                           ;../../VLCBlib_PIC/event_teach_large.c: 804:         startTimedResponse(tableIndex, find
      +                          ServiceIndex(SERVICE_ID_OLD_TEACH), reqevCallback);
 15897   007B70  0E04               	movlw	4
 15898   007B72  ECBF  F056         	call	_findServiceIndex
 15899   007B76  0100               	movlb	0	; () banked
 15900   007B78  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 15901   007B7A  0ED6               	movlw	low _reqevCallback
 15902   007B7C  6F92               	movwf	startTimedResponse@callback& (0+255),b
 15903   007B7E  0E9E               	movlw	high _reqevCallback
 15904   007B80  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 15905   007B82  0101               	movlb	1	; () banked
 15906   007B84  51CF               	movf	doReqev@tableIndex& (0+255),w,b
 15907   007B86  EC14  F05E         	call	_startTimedResponse
 15908   007B8A  0012               	return	
 15909   007B8C                     l22535:
 15910                           
 15911                           ; BSR set to: 1
 15912                           ;../../VLCBlib_PIC/event_teach_large.c: 811:         evVal = getEv(tableIndex, evNum-1);
 15913   007B8C  05CC               	decf	doReqev@evNum& (0+255),w,b
 15914   007B8E  0100               	movlb	0	; () banked
 15915   007B90  6F9D               	movwf	getEv@evNum& (0+255),b
 15916   007B92  0101               	movlb	1	; () banked
 15917   007B94  51CF               	movf	doReqev@tableIndex& (0+255),w,b
 15918   007B96  EC0A  F03C         	call	_getEv
 15919   007B9A  C09D  F1CD         	movff	?_getEv,doReqev@evVal
 15920   007B9E  C09E  F1CE         	movff	?_getEv+1,doReqev@evVal+1
 15921                           
 15922                           ;../../VLCBlib_PIC/event_teach_large.c: 813:     if (evVal < 0) {
 15923   007BA2  0101               	movlb	1	; () banked
 15924   007BA4  AFCE               	btfss	(doReqev@evVal+1)& (0+255),7,b
 15925   007BA6  D01B               	goto	l22543
 15926                           
 15927                           ; BSR set to: 1
 15928                           ;../../VLCBlib_PIC/event_teach_large.c: 815:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, (uint8_t)(-evVal));
 15929   007BA8  C0BE  F0A6         	movff	_nn+1,sendMessage3@data1
 15930   007BAC  C0BD  F0A7         	movff	_nn,sendMessage3@data2
 15931   007BB0  51CD               	movf	doReqev@evVal& (0+255),w,b
 15932   007BB2  0800               	sublw	0
 15933   007BB4  0100               	movlb	0	; () banked
 15934   007BB6  6FA8               	movwf	sendMessage3@data3& (0+255),b
 15935   007BB8  0E6F               	movlw	111
 15936   007BBA  EC3F  F060         	call	_sendMessage3
 15937                           
 15938                           ;../../VLCBlib_PIC/event_teach_large.c: 817:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, (uint8_t)(-evVal));
 15939   007BBE  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 15940   007BC2  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 15941   007BC6  0EB2               	movlw	178
 15942   007BC8  0101               	movlb	1	; () banked
 15943   007BCA  6FC4               	movwf	sendMessage5@data3& (0+255),b
 15944   007BCC  0E04               	movlw	4
 15945   007BCE  6FC5               	movwf	sendMessage5@data4& (0+255),b
 15946   007BD0  51CD               	movf	doReqev@evVal& (0+255),w,b
 15947   007BD2  0800               	sublw	0
 15948   007BD4  6FC6               	movwf	sendMessage5@data5& (0+255),b
 15949   007BD6  0EAF               	movlw	175
 15950   007BD8  ECE1  F05F         	call	_sendMessage5
 15951   007BDC  0012               	return	
 15952   007BDE                     l22543:
 15953                           
 15954                           ; BSR set to: 1
 15955                           ;../../VLCBlib_PIC/event_teach_large.c: 822:     sendMessage6(OPC_EVANS, nodeNumber>>8, 
      +                          nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, evNum, (uint8_t)evVal);
 15956   007BDE  51C9               	movf	(doReqev@nodeNumber+1)& (0+255),w,b
 15957   007BE0  6FC2               	movwf	sendMessage6@data1& (0+255),b
 15958   007BE2  C1C8  F1C3         	movff	doReqev@nodeNumber,sendMessage6@data2
 15959   007BE6  51CB               	movf	(doReqev@eventNumber+1)& (0+255),w,b
 15960   007BE8  6FC4               	movwf	sendMessage6@data3& (0+255),b
 15961   007BEA  C1CA  F1C5         	movff	doReqev@eventNumber,sendMessage6@data4
 15962   007BEE  C1CC  F1C6         	movff	doReqev@evNum,sendMessage6@data5
 15963   007BF2  C1CD  F1C7         	movff	doReqev@evVal,sendMessage6@data6
 15964   007BF6  0ED3               	movlw	211
 15965   007BF8  EC99  F05F         	call	_sendMessage6
 15966   007BFC  0012               	return		;funcret
 15967   007BFE                     __end_of_doReqev:
 15968                           	callstack 0
 15969                           
 15970 ;; *************** function _doNnevn *****************
 15971 ;; Defined at:
 15972 ;;		line 574 in file "../../VLCBlib_PIC/event_teach_large.c"
 15973 ;; Parameters:    Size  Location     Type
 15974 ;;		None
 15975 ;; Auto vars:     Size  Location     Type
 15976 ;;  f               1   13[BANK1 ] struct .
 15977 ;;  i               1   15[BANK1 ] unsigned char 
 15978 ;;  count           1   14[BANK1 ] unsigned char 
 15979 ;; Return value:  Size  Location     Type
 15980 ;;                  1    wreg      void 
 15981 ;; Registers used:
 15982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15983 ;; Tracked objects:
 15984 ;;		On entry : 0/0
 15985 ;;		On exit  : 0/0
 15986 ;;		Unchanged: 0/0
 15987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15989 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15990 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15991 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15992 ;;Total ram usage:        7 bytes
 15993 ;; Hardware stack levels used: 1
 15994 ;; Hardware stack levels required when called: 17
 15995 ;; This function calls:
 15996 ;;		_readNVM
 15997 ;;		_sendMessage3
 15998 ;; This function is called by:
 15999 ;;		_teachProcessMessage
 16000 ;; This function uses a non-reentrant model
 16001 ;;
 16002                           
 16003                           	psect	text32
 16004   00B01C                     __ptext32:
 16005                           	callstack 0
 16006   00B01C                     _doNnevn:
 16007                           	callstack 11
 16008                           
 16009                           ;../../VLCBlib_PIC/event_teach_large.c: 576:     uint8_t count = 0;
 16010                           
 16011                           ;incstack = 0
 16012   00B01C  0E00               	movlw	0
 16013   00B01E  0101               	movlb	1	; () banked
 16014   00B020  6FC8               	movwf	doNnevn@count& (0+255),b
 16015                           
 16016                           ;../../VLCBlib_PIC/event_teach_large.c: 577:     uint8_t i;;../../VLCBlib_PIC/event_teac
      +                          h_large.c: 578:     for (i=0; i<255; i++) {
 16017   00B022  0E00               	movlw	0
 16018   00B024  6FC9               	movwf	doNnevn@i& (0+255),b
 16019   00B026                     l22561:
 16020                           
 16021                           ; BSR set to: 1
 16022                           ;../../VLCBlib_PIC/event_teach_large.c: 579:         EventTableFlags f;;../../VLCBlib_PI
      +                          C/event_teach_large.c: 580:         f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80 +
      +                           16*i+0);
 16023   00B026  51C9               	movf	doNnevn@i& (0+255),w,b
 16024   00B028  6FC3               	movwf	??_doNnevn& (0+255),b
 16025   00B02A  6BC4               	clrf	(??_doNnevn+1)& (0+255),b
 16026   00B02C  3BC3               	swapf	??_doNnevn& (0+255),f,b
 16027   00B02E  3BC4               	swapf	(??_doNnevn+1)& (0+255),f,b
 16028   00B030  0EF0               	movlw	240
 16029   00B032  17C4               	andwf	(??_doNnevn+1)& (0+255),f,b
 16030   00B034  51C3               	movf	??_doNnevn& (0+255),w,b
 16031   00B036  0B0F               	andlw	15
 16032   00B038  13C4               	iorwf	(??_doNnevn+1)& (0+255),f,b
 16033   00B03A  0EF0               	movlw	240
 16034   00B03C  17C3               	andwf	??_doNnevn& (0+255),f,b
 16035   00B03E  0E80               	movlw	128
 16036   00B040  25C3               	addwf	??_doNnevn& (0+255),w,b
 16037   00B042  6FC5               	movwf	(??_doNnevn+2)& (0+255),b
 16038   00B044  0EEF               	movlw	239
 16039   00B046  21C4               	addwfc	(??_doNnevn+1)& (0+255),w,b
 16040   00B048  6FC6               	movwf	(??_doNnevn+3)& (0+255),b
 16041   00B04A  C1C5  F091         	movff	??_doNnevn+2,readNVM@index
 16042   00B04E  C1C6  F092         	movff	??_doNnevn+3,readNVM@index+1
 16043   00B052  0100               	movlb	0	; () banked
 16044   00B054  6B93               	clrf	(readNVM@index+2)& (0+255),b
 16045   00B056  0E01               	movlw	1
 16046   00B058  ECD0  F059         	call	_readNVM
 16047   00B05C  0100               	movlb	0	; () banked
 16048   00B05E  5191               	movf	?_readNVM& (0+255),w,b
 16049   00B060  0101               	movlb	1	; () banked
 16050   00B062  6FC7               	movwf	doNnevn@f& (0+255),b
 16051                           
 16052                           ; BSR set to: 1
 16053                           ;../../VLCBlib_PIC/event_teach_large.c: 581:         if (f.freeEntry) {
 16054   00B064  BFC7               	btfsc	doNnevn@f& (0+255),7,b
 16055                           
 16056                           ; BSR set to: 1
 16057                           ;../../VLCBlib_PIC/event_teach_large.c: 582:             count++;
 16058   00B066  2BC8               	incf	doNnevn@count& (0+255),f,b
 16059                           
 16060                           ; BSR set to: 1
 16061                           ;../../VLCBlib_PIC/event_teach_large.c: 584:     }
 16062                           
 16063                           ;../../VLCBlib_PIC/event_teach_large.c: 583:         }
 16064   00B068  2BC9               	incf	doNnevn@i& (0+255),f,b
 16065                           
 16066                           ; BSR set to: 1
 16067   00B06A  29C9               	incf	doNnevn@i& (0+255),w,b
 16068   00B06C  A4D8               	btfss	status,2,c
 16069   00B06E  D7DB               	goto	l22561
 16070                           
 16071                           ; BSR set to: 1
 16072                           ;../../VLCBlib_PIC/event_teach_large.c: 585:     sendMessage3(OPC_EVNLF, nn.bytes.hi, nn
      +                          .bytes.lo, count);
 16073   00B070  C0BE  F0A6         	movff	_nn+1,sendMessage3@data1
 16074   00B074  C0BD  F0A7         	movff	_nn,sendMessage3@data2
 16075   00B078  C1C8  F0A8         	movff	doNnevn@count,sendMessage3@data3
 16076   00B07C  0E70               	movlw	112
 16077   00B07E  EC3F  F060         	call	_sendMessage3
 16078   00B082  0012               	return		;funcret
 16079   00B084                     __end_of_doNnevn:
 16080                           	callstack 0
 16081                           
 16082 ;; *************** function _doNnclr *****************
 16083 ;; Defined at:
 16084 ;;		line 664 in file "../../VLCBlib_PIC/event_teach_large.c"
 16085 ;; Parameters:    Size  Location     Type
 16086 ;;		None
 16087 ;; Auto vars:     Size  Location     Type
 16088 ;;		None
 16089 ;; Return value:  Size  Location     Type
 16090 ;;                  1    wreg      void 
 16091 ;; Registers used:
 16092 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16093 ;; Tracked objects:
 16094 ;;		On entry : 0/0
 16095 ;;		On exit  : 0/0
 16096 ;;		Unchanged: 0/0
 16097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16102 ;;Total ram usage:        0 bytes
 16103 ;; Hardware stack levels used: 1
 16104 ;; Hardware stack levels required when called: 19
 16105 ;; This function calls:
 16106 ;;		_clearAllEvents
 16107 ;;		_sendMessage2
 16108 ;;		_sendMessage5
 16109 ;; This function is called by:
 16110 ;;		_teachProcessMessage
 16111 ;; This function uses a non-reentrant model
 16112 ;;
 16113                           
 16114                           	psect	text33
 16115   00BF02                     __ptext33:
 16116                           	callstack 0
 16117   00BF02                     _doNnclr:
 16118                           	callstack 9
 16119                           
 16120                           ;../../VLCBlib_PIC/event_teach_large.c: 665:     clearAllEvents();
 16121                           
 16122                           ;incstack = 0
 16123   00BF02  EC93  F05B         	call	_clearAllEvents	;wreg free
 16124                           
 16125                           ;../../VLCBlib_PIC/event_teach_large.c: 666:     sendMessage2(OPC_WRACK, nn.bytes.hi, nn
      +                          .bytes.lo);
 16126   00BF06  C0BE  F0A6         	movff	_nn+1,sendMessage2@data1
 16127   00BF0A  C0BD  F0A7         	movff	_nn,sendMessage2@data2
 16128   00BF0E  0E59               	movlw	89
 16129   00BF10  ECB1  F05F         	call	_sendMessage2
 16130                           
 16131                           ;../../VLCBlib_PIC/event_teach_large.c: 668:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, OPC_NNCLR, SERVICE_ID_OLD_TEACH, GRSP_OK);
 16132   00BF14  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 16133   00BF18  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 16134   00BF1C  0E55               	movlw	85
 16135   00BF1E  0101               	movlb	1	; () banked
 16136   00BF20  6FC4               	movwf	sendMessage5@data3& (0+255),b
 16137   00BF22  0E04               	movlw	4
 16138   00BF24  6FC5               	movwf	sendMessage5@data4& (0+255),b
 16139   00BF26  0E00               	movlw	0
 16140   00BF28  6FC6               	movwf	sendMessage5@data5& (0+255),b
 16141   00BF2A  0EAF               	movlw	175
 16142   00BF2C  ECE1  F05F         	call	_sendMessage5
 16143   00BF30  0012               	return		;funcret
 16144   00BF32                     __end_of_doNnclr:
 16145                           	callstack 0
 16146                           
 16147 ;; *************** function _doNerd *****************
 16148 ;; Defined at:
 16149 ;;		line 593 in file "../../VLCBlib_PIC/event_teach_large.c"
 16150 ;; Parameters:    Size  Location     Type
 16151 ;;		None
 16152 ;; Auto vars:     Size  Location     Type
 16153 ;;		None
 16154 ;; Return value:  Size  Location     Type
 16155 ;;                  1    wreg      void 
 16156 ;; Registers used:
 16157 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16158 ;; Tracked objects:
 16159 ;;		On entry : 0/0
 16160 ;;		On exit  : 0/0
 16161 ;;		Unchanged: 0/0
 16162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16167 ;;Total ram usage:        0 bytes
 16168 ;; Hardware stack levels used: 1
 16169 ;; Hardware stack levels required when called: 13
 16170 ;; This function calls:
 16171 ;;		_findServiceIndex
 16172 ;;		_startTimedResponse
 16173 ;; This function is called by:
 16174 ;;		_teachProcessMessage
 16175 ;; This function uses a non-reentrant model
 16176 ;;
 16177                           
 16178                           	psect	text34
 16179   00C4C4                     __ptext34:
 16180                           	callstack 0
 16181   00C4C4                     _doNerd:
 16182                           	callstack 15
 16183                           
 16184                           ;../../VLCBlib_PIC/event_teach_large.c: 594:     startTimedResponse(2, findServiceIndex(
      +                          SERVICE_ID_OLD_TEACH), nerdCallback);
 16185                           
 16186                           ;incstack = 0
 16187   00C4C4  0E04               	movlw	4
 16188   00C4C6  ECBF  F056         	call	_findServiceIndex
 16189   00C4CA  0100               	movlb	0	; () banked
 16190   00C4CC  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 16191   00C4CE  0EEC               	movlw	low _nerdCallback
 16192   00C4D0  6F92               	movwf	startTimedResponse@callback& (0+255),b
 16193   00C4D2  0EB0               	movlw	high _nerdCallback
 16194   00C4D4  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 16195   00C4D6  0E02               	movlw	2
 16196   00C4D8  EC14  F05E         	call	_startTimedResponse
 16197   00C4DC  0012               	return		;funcret
 16198   00C4DE                     __end_of_doNerd:
 16199                           	callstack 0
 16200                           
 16201 ;; *************** function _doNenrd *****************
 16202 ;; Defined at:
 16203 ;;		line 625 in file "../../VLCBlib_PIC/event_teach_large.c"
 16204 ;; Parameters:    Size  Location     Type
 16205 ;;  index           1    wreg     unsigned char 
 16206 ;; Auto vars:     Size  Location     Type
 16207 ;;  index           1   13[BANK1 ] unsigned char 
 16208 ;;  eventNumber     2   16[BANK1 ] unsigned short 
 16209 ;;  nodeNumber      2   14[BANK1 ] unsigned short 
 16210 ;;  tableIndex      1   18[BANK1 ] unsigned char 
 16211 ;; Return value:  Size  Location     Type
 16212 ;;                  1    wreg      void 
 16213 ;; Registers used:
 16214 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16215 ;; Tracked objects:
 16216 ;;		On entry : 0/0
 16217 ;;		On exit  : 0/0
 16218 ;;		Unchanged: 0/0
 16219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16221 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16223 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16224 ;;Total ram usage:        6 bytes
 16225 ;; Hardware stack levels used: 1
 16226 ;; Hardware stack levels required when called: 17
 16227 ;; This function calls:
 16228 ;;		_evtIdxToTableIndex
 16229 ;;		_getEN
 16230 ;;		_getNN
 16231 ;;		_sendMessage3
 16232 ;;		_sendMessage5
 16233 ;;		_validStart
 16234 ;; This function is called by:
 16235 ;;		_teachProcessMessage
 16236 ;; This function uses a non-reentrant model
 16237 ;;
 16238                           
 16239                           	psect	text35
 16240   00AED4                     __ptext35:
 16241                           	callstack 0
 16242   00AED4                     _doNenrd:
 16243                           	callstack 11
 16244                           
 16245                           ;incstack = 0
 16246                           ;doNenrd@index stored from wreg
 16247   00AED4  0101               	movlb	1	; () banked
 16248   00AED6  6FC7               	movwf	doNenrd@index& (0+255),b
 16249                           
 16250                           ;../../VLCBlib_PIC/event_teach_large.c: 626:     uint8_t tableIndex;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 627:     uint16_t nodeNumber, eventNumber;;../../VLCBlib_PIC/event_t
      +                          each_large.c: 629:     tableIndex = evtIdxToTableIndex(index);
 16251   00AED8  0101               	movlb	1	; () banked
 16252   00AEDA  51C7               	movf	doNenrd@index& (0+255),w,b
 16253   00AEDC  ECFF  F062         	call	_evtIdxToTableIndex
 16254   00AEE0  0101               	movlb	1	; () banked
 16255   00AEE2  6FCC               	movwf	doNenrd@tableIndex& (0+255),b
 16256                           
 16257                           ; BSR set to: 1
 16258                           ;../../VLCBlib_PIC/event_teach_large.c: 631:     if ( ! validStart(tableIndex)) {
 16259   00AEE4  51CC               	movf	doNenrd@tableIndex& (0+255),w,b
 16260   00AEE6  EC39  F05C         	call	_validStart
 16261   00AEEA  0900               	iorlw	0
 16262   00AEEC  A4D8               	btfss	status,2,c
 16263   00AEEE  D00B               	goto	l22593
 16264                           
 16265                           ;../../VLCBlib_PIC/event_teach_large.c: 632:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, CMDERR_INV_EN_IDX);
 16266   00AEF0  C0BE  F0A6         	movff	_nn+1,sendMessage3@data1
 16267   00AEF4  C0BD  F0A7         	movff	_nn,sendMessage3@data2
 16268   00AEF8  0E08               	movlw	8
 16269   00AEFA  0100               	movlb	0	; () banked
 16270   00AEFC  6FA8               	movwf	sendMessage3@data3& (0+255),b
 16271   00AEFE  0E6F               	movlw	111
 16272   00AF00  EC3F  F060         	call	_sendMessage3
 16273   00AF04  0012               	return	
 16274   00AF06                     l22593:
 16275                           
 16276                           ;../../VLCBlib_PIC/event_teach_large.c: 638:     nodeNumber = getNN(tableIndex);
 16277   00AF06  0101               	movlb	1	; () banked
 16278   00AF08  51CC               	movf	doNenrd@tableIndex& (0+255),w,b
 16279   00AF0A  ECBF  F049         	call	_getNN
 16280   00AF0E  C097  F1C8         	movff	?_getNN,doNenrd@nodeNumber
 16281   00AF12  C098  F1C9         	movff	?_getNN+1,doNenrd@nodeNumber+1
 16282                           
 16283                           ;../../VLCBlib_PIC/event_teach_large.c: 639:     eventNumber = getEN(tableIndex);
 16284   00AF16  0101               	movlb	1	; () banked
 16285   00AF18  51CC               	movf	doNenrd@tableIndex& (0+255),w,b
 16286   00AF1A  EC9B  F055         	call	_getEN
 16287   00AF1E  C097  F1CA         	movff	?_getEN,doNenrd@eventNumber
 16288   00AF22  C098  F1CB         	movff	?_getEN+1,doNenrd@eventNumber+1
 16289                           
 16290                           ;../../VLCBlib_PIC/event_teach_large.c: 640:     sendMessage5(OPC_ENRSP, nodeNumber>>8, 
      +                          nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, index);
 16291   00AF26  0101               	movlb	1	; () banked
 16292   00AF28  51C9               	movf	(doNenrd@nodeNumber+1)& (0+255),w,b
 16293   00AF2A  6FC2               	movwf	sendMessage5@data1& (0+255),b
 16294   00AF2C  C1C8  F1C3         	movff	doNenrd@nodeNumber,sendMessage5@data2
 16295   00AF30  51CB               	movf	(doNenrd@eventNumber+1)& (0+255),w,b
 16296   00AF32  6FC4               	movwf	sendMessage5@data3& (0+255),b
 16297   00AF34  C1CA  F1C5         	movff	doNenrd@eventNumber,sendMessage5@data4
 16298   00AF38  C1C7  F1C6         	movff	doNenrd@index,sendMessage5@data5
 16299   00AF3C  0EF2               	movlw	242
 16300   00AF3E  ECE1  F05F         	call	_sendMessage5
 16301   00AF42  0012               	return		;funcret
 16302   00AF44                     __end_of_doNenrd:
 16303                           	callstack 0
 16304                           
 16305 ;; *************** function _evtIdxToTableIndex *****************
 16306 ;; Defined at:
 16307 ;;		line 1263 in file "../../VLCBlib_PIC/event_teach_large.c"
 16308 ;; Parameters:    Size  Location     Type
 16309 ;;  evtIdx          1    wreg     unsigned char 
 16310 ;; Auto vars:     Size  Location     Type
 16311 ;;  evtIdx          1   45[BANK0 ] unsigned char 
 16312 ;; Return value:  Size  Location     Type
 16313 ;;                  1    wreg      unsigned char 
 16314 ;; Registers used:
 16315 ;;		wreg, status,2, status,0
 16316 ;; Tracked objects:
 16317 ;;		On entry : 0/0
 16318 ;;		On exit  : 0/0
 16319 ;;		Unchanged: 0/0
 16320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16322 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16324 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16325 ;;Total ram usage:        1 bytes
 16326 ;; Hardware stack levels used: 1
 16327 ;; Hardware stack levels required when called: 12
 16328 ;; This function calls:
 16329 ;;		Nothing
 16330 ;; This function is called by:
 16331 ;;		_doNenrd
 16332 ;;		_doReval
 16333 ;; This function uses a non-reentrant model
 16334 ;;
 16335                           
 16336                           	psect	text36
 16337   00C5FE                     __ptext36:
 16338                           	callstack 0
 16339   00C5FE                     _evtIdxToTableIndex:
 16340                           	callstack 15
 16341                           
 16342                           ;incstack = 0
 16343                           ;evtIdxToTableIndex@evtIdx stored from wreg
 16344   00C5FE  0100               	movlb	0	; () banked
 16345   00C600  6F8D               	movwf	evtIdxToTableIndex@evtIdx& (0+255),b
 16346                           
 16347                           ;../../VLCBlib_PIC/event_teach_large.c: 1264:     return evtIdx - 1;
 16348   00C602  0100               	movlb	0	; () banked
 16349   00C604  058D               	decf	evtIdxToTableIndex@evtIdx& (0+255),w,b
 16350                           
 16351                           ; BSR set to: 0
 16352   00C606  0012               	return		;funcret
 16353   00C608                     __end_of_evtIdxToTableIndex:
 16354                           	callstack 0
 16355                           
 16356 ;; *************** function _doEvuln *****************
 16357 ;; Defined at:
 16358 ;;		line 758 in file "../../VLCBlib_PIC/event_teach_large.c"
 16359 ;; Parameters:    Size  Location     Type
 16360 ;;  nodeNumber      2   20[BANK1 ] unsigned short 
 16361 ;;  eventNumber     2   22[BANK1 ] unsigned short 
 16362 ;; Auto vars:     Size  Location     Type
 16363 ;;  result          1   24[BANK1 ] unsigned char 
 16364 ;; Return value:  Size  Location     Type
 16365 ;;                  1    wreg      void 
 16366 ;; Registers used:
 16367 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16368 ;; Tracked objects:
 16369 ;;		On entry : 0/0
 16370 ;;		On exit  : 0/0
 16371 ;;		Unchanged: 0/0
 16372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16373 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16374 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16376 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16377 ;;Total ram usage:        5 bytes
 16378 ;; Hardware stack levels used: 1
 16379 ;; Hardware stack levels required when called: 20
 16380 ;; This function calls:
 16381 ;;		_removeEvent
 16382 ;;		_sendMessage2
 16383 ;;		_sendMessage3
 16384 ;;		_sendMessage5
 16385 ;; This function is called by:
 16386 ;;		_teachProcessMessage
 16387 ;; This function uses a non-reentrant model
 16388 ;;
 16389                           
 16390                           	psect	text37
 16391   00AABC                     __ptext37:
 16392                           	callstack 0
 16393   00AABC                     _doEvuln:
 16394                           	callstack 8
 16395                           
 16396                           ;../../VLCBlib_PIC/event_teach_large.c: 759:     uint8_t result;;../../VLCBlib_PIC/event
      +                          _teach_large.c: 760:     result = removeEvent(nodeNumber, eventNumber);
 16397                           
 16398                           ; BSR set to: 0
 16399                           ;incstack = 0
 16400   00AABC  C1CE  F1C9         	movff	doEvuln@nodeNumber,removeEvent@nodeNumber
 16401   00AAC0  C1CF  F1CA         	movff	doEvuln@nodeNumber+1,removeEvent@nodeNumber+1
 16402   00AAC4  C1D0  F1CB         	movff	doEvuln@eventNumber,removeEvent@eventNumber
 16403   00AAC8  C1D1  F1CC         	movff	doEvuln@eventNumber+1,removeEvent@eventNumber+1
 16404   00AACC  EC99  F060         	call	_removeEvent	;wreg free
 16405   00AAD0  0101               	movlb	1	; () banked
 16406   00AAD2  6FD2               	movwf	doEvuln@result& (0+255),b
 16407                           
 16408                           ; BSR set to: 1
 16409                           ;../../VLCBlib_PIC/event_teach_large.c: 761:     if (result) {
 16410   00AAD4  51D2               	movf	doEvuln@result& (0+255),w,b
 16411   00AAD6  B4D8               	btfsc	status,2,c
 16412   00AAD8  D018               	goto	l22509
 16413                           
 16414                           ; BSR set to: 1
 16415                           ;../../VLCBlib_PIC/event_teach_large.c: 762:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, result);
 16416   00AADA  C0BE  F0A6         	movff	_nn+1,sendMessage3@data1
 16417   00AADE  C0BD  F0A7         	movff	_nn,sendMessage3@data2
 16418   00AAE2  C1D2  F0A8         	movff	doEvuln@result,sendMessage3@data3
 16419   00AAE6  0E6F               	movlw	111
 16420   00AAE8  EC3F  F060         	call	_sendMessage3
 16421                           
 16422                           ;../../VLCBlib_PIC/event_teach_large.c: 764:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_EVULN, SERVICE_ID_OLD_TEACH, result);
 16423   00AAEC  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 16424   00AAF0  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 16425   00AAF4  0E95               	movlw	149
 16426   00AAF6  0101               	movlb	1	; () banked
 16427   00AAF8  6FC4               	movwf	sendMessage5@data3& (0+255),b
 16428   00AAFA  0E04               	movlw	4
 16429   00AAFC  6FC5               	movwf	sendMessage5@data4& (0+255),b
 16430   00AAFE  C1D2  F1C6         	movff	doEvuln@result,sendMessage5@data5
 16431   00AB02  0EAF               	movlw	175
 16432   00AB04  ECE1  F05F         	call	_sendMessage5
 16433   00AB08  0012               	return	
 16434   00AB0A                     l22509:
 16435                           
 16436                           ; BSR set to: 1
 16437                           ;../../VLCBlib_PIC/event_teach_large.c: 769:     sendMessage2(OPC_WRACK, nn.bytes.hi, nn
      +                          .bytes.lo);
 16438   00AB0A  C0BE  F0A6         	movff	_nn+1,sendMessage2@data1
 16439   00AB0E  C0BD  F0A7         	movff	_nn,sendMessage2@data2
 16440   00AB12  0E59               	movlw	89
 16441   00AB14  ECB1  F05F         	call	_sendMessage2
 16442                           
 16443                           ;../../VLCBlib_PIC/event_teach_large.c: 771:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, OPC_EVULN, SERVICE_ID_OLD_TEACH, GRSP_OK);
 16444   00AB18  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 16445   00AB1C  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 16446   00AB20  0E95               	movlw	149
 16447   00AB22  0101               	movlb	1	; () banked
 16448   00AB24  6FC4               	movwf	sendMessage5@data3& (0+255),b
 16449   00AB26  0E04               	movlw	4
 16450   00AB28  6FC5               	movwf	sendMessage5@data4& (0+255),b
 16451   00AB2A  0E00               	movlw	0
 16452   00AB2C  6FC6               	movwf	sendMessage5@data5& (0+255),b
 16453   00AB2E  0EAF               	movlw	175
 16454   00AB30  ECE1  F05F         	call	_sendMessage5
 16455   00AB34  0012               	return		;funcret
 16456   00AB36                     __end_of_doEvuln:
 16457                           	callstack 0
 16458                           
 16459 ;; *************** function _removeEvent *****************
 16460 ;; Defined at:
 16461 ;;		line 859 in file "../../VLCBlib_PIC/event_teach_large.c"
 16462 ;; Parameters:    Size  Location     Type
 16463 ;;  nodeNumber      2   15[BANK1 ] unsigned short 
 16464 ;;  eventNumber     2   17[BANK1 ] unsigned short 
 16465 ;; Auto vars:     Size  Location     Type
 16466 ;;  tableIndex      1   19[BANK1 ] unsigned char 
 16467 ;; Return value:  Size  Location     Type
 16468 ;;                  1    wreg      unsigned char 
 16469 ;; Registers used:
 16470 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16471 ;; Tracked objects:
 16472 ;;		On entry : 0/0
 16473 ;;		On exit  : 0/0
 16474 ;;		Unchanged: 0/0
 16475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16476 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16477 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16479 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16480 ;;Total ram usage:        5 bytes
 16481 ;; Hardware stack levels used: 1
 16482 ;; Hardware stack levels required when called: 19
 16483 ;; This function calls:
 16484 ;;		_findEvent
 16485 ;;		_removeTableEntry
 16486 ;; This function is called by:
 16487 ;;		_doEvuln
 16488 ;; This function uses a non-reentrant model
 16489 ;;
 16490                           
 16491                           	psect	text38
 16492   00C132                     __ptext38:
 16493                           	callstack 0
 16494   00C132                     _removeEvent:
 16495                           	callstack 8
 16496                           
 16497                           ;../../VLCBlib_PIC/event_teach_large.c: 861:     uint8_t tableIndex = findEvent(nodeNumb
      +                          er, eventNumber);
 16498                           
 16499                           ;incstack = 0
 16500   00C132  C1C9  F1BA         	movff	removeEvent@nodeNumber,findEvent@nodeNumber
 16501   00C136  C1CA  F1BB         	movff	removeEvent@nodeNumber+1,findEvent@nodeNumber+1
 16502   00C13A  C1CB  F1BC         	movff	removeEvent@eventNumber,findEvent@eventNumber
 16503   00C13E  C1CC  F1BD         	movff	removeEvent@eventNumber+1,findEvent@eventNumber+1
 16504   00C142  ECBB  F051         	call	_findEvent	;wreg free
 16505   00C146  0101               	movlb	1	; () banked
 16506   00C148  6FCD               	movwf	removeEvent@tableIndex& (0+255),b
 16507                           
 16508                           ; BSR set to: 1
 16509                           ;../../VLCBlib_PIC/event_teach_large.c: 862:     if (tableIndex == 0xff) return CMDERR_I
      +                          NVALID_EVENT;
 16510   00C14A  29CD               	incf	removeEvent@tableIndex& (0+255),w,b
 16511   00C14C  A4D8               	btfss	status,2,c
 16512   00C14E  D002               	goto	l21261
 16513                           
 16514                           ; BSR set to: 1
 16515   00C150  0E07               	movlw	7
 16516   00C152  0012               	return	
 16517   00C154                     l21261:
 16518                           
 16519                           ; BSR set to: 1
 16520                           ;../../VLCBlib_PIC/event_teach_large.c: 864:     return removeTableEntry(tableIndex);
 16521   00C154  51CD               	movf	removeEvent@tableIndex& (0+255),w,b
 16522   00C156  ECB5  F03C         	call	_removeTableEntry
 16523   00C15A  0012               	return		;funcret
 16524   00C15C                     __end_of_removeEvent:
 16525                           	callstack 0
 16526                           
 16527 ;; *************** function _doEvlrn *****************
 16528 ;; Defined at:
 16529 ;;		line 681 in file "../../VLCBlib_PIC/event_teach_large.c"
 16530 ;; Parameters:    Size  Location     Type
 16531 ;;  nodeNumber      2   52[BANK1 ] unsigned short 
 16532 ;;  eventNumber     2   54[BANK1 ] unsigned short 
 16533 ;;  evNum           1   56[BANK1 ] unsigned char 
 16534 ;;  evVal           1   57[BANK1 ] unsigned char 
 16535 ;; Auto vars:     Size  Location     Type
 16536 ;;  error           1   58[BANK1 ] unsigned char 
 16537 ;; Return value:  Size  Location     Type
 16538 ;;                  1    wreg      void 
 16539 ;; Registers used:
 16540 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16541 ;; Tracked objects:
 16542 ;;		On entry : 0/0
 16543 ;;		On exit  : 0/0
 16544 ;;		Unchanged: 0/0
 16545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16546 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16547 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16549 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16550 ;;Total ram usage:        7 bytes
 16551 ;; Hardware stack levels used: 1
 16552 ;; Hardware stack levels required when called: 23
 16553 ;; This function calls:
 16554 ;;		_APP_addEvent
 16555 ;;		_sendMessage2
 16556 ;;		_sendMessage3
 16557 ;;		_sendMessage5
 16558 ;; This function is called by:
 16559 ;;		_teachProcessMessage
 16560 ;; This function uses a non-reentrant model
 16561 ;;
 16562                           
 16563                           	psect	text39
 16564   0091F4                     __ptext39:
 16565                           	callstack 0
 16566   0091F4                     _doEvlrn:
 16567                           	callstack 5
 16568                           
 16569                           ;../../VLCBlib_PIC/event_teach_large.c: 682:     uint8_t error;;../../VLCBlib_PIC/event_
      +                          teach_large.c: 683:     evNum--;
 16570                           
 16571                           ;incstack = 0
 16572   0091F4  0101               	movlb	1	; () banked
 16573   0091F6  07F2               	decf	doEvlrn@evNum& (0+255),f,b
 16574                           
 16575                           ; BSR set to: 1
 16576                           ;../../VLCBlib_PIC/event_teach_large.c: 684:     if (evNum >= 20) {
 16577   0091F8  0E13               	movlw	19
 16578   0091FA  65F2               	cpfsgt	doEvlrn@evNum& (0+255),b
 16579   0091FC  D019               	goto	l22485
 16580                           
 16581                           ; BSR set to: 1
 16582                           ;../../VLCBlib_PIC/event_teach_large.c: 685:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, CMDERR_INV_EV_IDX);
 16583   0091FE  C0BE  F0A6         	movff	_nn+1,sendMessage3@data1
 16584   009202  C0BD  F0A7         	movff	_nn,sendMessage3@data2
 16585   009206  0E06               	movlw	6
 16586   009208  0100               	movlb	0	; () banked
 16587   00920A  6FA8               	movwf	sendMessage3@data3& (0+255),b
 16588   00920C  0E6F               	movlw	111
 16589   00920E  EC3F  F060         	call	_sendMessage3
 16590                           
 16591                           ;../../VLCBlib_PIC/event_teach_large.c: 687:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, CMDERR_INV_EV_IDX);
 16592   009212  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 16593   009216  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 16594   00921A  0ED2               	movlw	210
 16595   00921C  0101               	movlb	1	; () banked
 16596   00921E  6FC4               	movwf	sendMessage5@data3& (0+255),b
 16597   009220  0E04               	movlw	4
 16598   009222  6FC5               	movwf	sendMessage5@data4& (0+255),b
 16599   009224  0E06               	movlw	6
 16600   009226  6FC6               	movwf	sendMessage5@data5& (0+255),b
 16601   009228  0EAF               	movlw	175
 16602   00922A  ECE1  F05F         	call	_sendMessage5
 16603   00922E  0012               	return	
 16604   009230                     l22485:
 16605                           
 16606                           ; BSR set to: 1
 16607                           ;../../VLCBlib_PIC/event_teach_large.c: 694:     error = APP_addEvent(nodeNumber, eventN
      +                          umber, evNum, evVal, FALSE);
 16608   009230  C1EE  F1E6         	movff	doEvlrn@nodeNumber,APP_addEvent@nodeNumber
 16609   009234  C1EF  F1E7         	movff	doEvlrn@nodeNumber+1,APP_addEvent@nodeNumber+1
 16610   009238  C1F0  F1E8         	movff	doEvlrn@eventNumber,APP_addEvent@eventNumber
 16611   00923C  C1F1  F1E9         	movff	doEvlrn@eventNumber+1,APP_addEvent@eventNumber+1
 16612   009240  C1F2  F1EA         	movff	doEvlrn@evNum,APP_addEvent@evNum
 16613   009244  C1F3  F1EB         	movff	doEvlrn@evVal,APP_addEvent@evVal
 16614   009248  0E00               	movlw	0
 16615   00924A  6FEC               	movwf	APP_addEvent@forceOwnNN& (0+255),b
 16616   00924C  ECA2  F057         	call	_APP_addEvent	;wreg free
 16617   009250  0101               	movlb	1	; () banked
 16618   009252  6FF4               	movwf	doEvlrn@error& (0+255),b
 16619                           
 16620                           ; BSR set to: 1
 16621                           ;../../VLCBlib_PIC/event_teach_large.c: 695:     if (error) {
 16622   009254  51F4               	movf	doEvlrn@error& (0+255),w,b
 16623   009256  B4D8               	btfsc	status,2,c
 16624   009258  D018               	goto	l22493
 16625                           
 16626                           ; BSR set to: 1
 16627                           ;../../VLCBlib_PIC/event_teach_large.c: 697:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, error);
 16628   00925A  C0BE  F0A6         	movff	_nn+1,sendMessage3@data1
 16629   00925E  C0BD  F0A7         	movff	_nn,sendMessage3@data2
 16630   009262  C1F4  F0A8         	movff	doEvlrn@error,sendMessage3@data3
 16631   009266  0E6F               	movlw	111
 16632   009268  EC3F  F060         	call	_sendMessage3
 16633                           
 16634                           ;../../VLCBlib_PIC/event_teach_large.c: 699:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, error);
 16635   00926C  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 16636   009270  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 16637   009274  0ED2               	movlw	210
 16638   009276  0101               	movlb	1	; () banked
 16639   009278  6FC4               	movwf	sendMessage5@data3& (0+255),b
 16640   00927A  0E04               	movlw	4
 16641   00927C  6FC5               	movwf	sendMessage5@data4& (0+255),b
 16642   00927E  C1F4  F1C6         	movff	doEvlrn@error,sendMessage5@data5
 16643   009282  0EAF               	movlw	175
 16644   009284  ECE1  F05F         	call	_sendMessage5
 16645   009288  0012               	return	
 16646   00928A                     l22493:
 16647                           
 16648                           ; BSR set to: 1
 16649                           ;../../VLCBlib_PIC/event_teach_large.c: 704:     teachDiagnostics[0x01].asUint++;
 16650   00928A  4BB0               	infsnz	(_teachDiagnostics+2)& (0+255),f,b
 16651   00928C  2BB1               	incf	(_teachDiagnostics+3)& (0+255),f,b
 16652                           
 16653                           ; BSR set to: 1
 16654                           ;../../VLCBlib_PIC/event_teach_large.c: 706:     sendMessage2(OPC_WRACK, nn.bytes.hi, nn
      +                          .bytes.lo);
 16655   00928E  C0BE  F0A6         	movff	_nn+1,sendMessage2@data1
 16656   009292  C0BD  F0A7         	movff	_nn,sendMessage2@data2
 16657   009296  0E59               	movlw	89
 16658   009298  ECB1  F05F         	call	_sendMessage2
 16659                           
 16660                           ;../../VLCBlib_PIC/event_teach_large.c: 708:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, GRSP_OK);
 16661   00929C  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 16662   0092A0  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 16663   0092A4  0ED2               	movlw	210
 16664   0092A6  0101               	movlb	1	; () banked
 16665   0092A8  6FC4               	movwf	sendMessage5@data3& (0+255),b
 16666   0092AA  0E04               	movlw	4
 16667   0092AC  6FC5               	movwf	sendMessage5@data4& (0+255),b
 16668   0092AE  0E00               	movlw	0
 16669   0092B0  6FC6               	movwf	sendMessage5@data5& (0+255),b
 16670   0092B2  0EAF               	movlw	175
 16671   0092B4  ECE1  F05F         	call	_sendMessage5
 16672   0092B8  0012               	return		;funcret
 16673   0092BA                     __end_of_doEvlrn:
 16674                           	callstack 0
 16675                           
 16676 ;; *************** function _APP_addEvent *****************
 16677 ;; Defined at:
 16678 ;;		line 195 in file "../universalEvents.c"
 16679 ;; Parameters:    Size  Location     Type
 16680 ;;  nodeNumber      2   44[BANK1 ] unsigned short 
 16681 ;;  eventNumber     2   46[BANK1 ] unsigned short 
 16682 ;;  evNum           1   48[BANK1 ] unsigned char 
 16683 ;;  evVal           1   49[BANK1 ] unsigned char 
 16684 ;;  forceOwnNN      1   50[BANK1 ] enum E12761
 16685 ;; Auto vars:     Size  Location     Type
 16686 ;;  tableIndex      1   51[BANK1 ] unsigned char 
 16687 ;; Return value:  Size  Location     Type
 16688 ;;                  1    wreg      unsigned char 
 16689 ;; Registers used:
 16690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16691 ;; Tracked objects:
 16692 ;;		On entry : 0/0
 16693 ;;		On exit  : 0/0
 16694 ;;		Unchanged: 0/0
 16695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16696 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16697 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16699 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16700 ;;Total ram usage:        8 bytes
 16701 ;; Hardware stack levels used: 1
 16702 ;; Hardware stack levels required when called: 22
 16703 ;; This function calls:
 16704 ;;		_addEvent
 16705 ;;		_checkRemoveTableEntry
 16706 ;;		_rebuildHashtable
 16707 ;;		_writeEv
 16708 ;; This function is called by:
 16709 ;;		_doEvlrn
 16710 ;; This function uses a non-reentrant model
 16711 ;;
 16712                           
 16713                           	psect	text40
 16714   00AF44                     __ptext40:
 16715                           	callstack 0
 16716   00AF44                     _APP_addEvent:
 16717                           	callstack 5
 16718                           
 16719                           ;../universalEvents.c: 197:     if ((evNum == 0) && (evVal != 0))
 16720                           
 16721                           ;incstack = 0
 16722   00AF44  0101               	movlb	1	; () banked
 16723   00AF46  51EA               	movf	APP_addEvent@evNum& (0+255),w,b
 16724   00AF48  A4D8               	btfss	status,2,c
 16725   00AF4A  D021               	goto	l653
 16726                           
 16727                           ; BSR set to: 1
 16728   00AF4C  51EB               	movf	APP_addEvent@evVal& (0+255),w,b
 16729   00AF4E  B4D8               	btfsc	status,2,c
 16730   00AF50  D01E               	goto	l653
 16731                           
 16732                           ; BSR set to: 1
 16733                           ;../universalEvents.c: 198:     {;../universalEvents.c: 200:         if ((evVal >= 1) &&
      +                           (evVal <= (7+16*4))) {
 16734   00AF52  51EB               	movf	APP_addEvent@evVal& (0+255),w,b
 16735   00AF54  B4D8               	btfsc	status,2,c
 16736   00AF56  D01B               	goto	l653
 16737                           
 16738                           ; BSR set to: 1
 16739   00AF58  0E48               	movlw	72
 16740   00AF5A  61EB               	cpfslt	APP_addEvent@evVal& (0+255),b
 16741   00AF5C  D018               	goto	l653
 16742                           
 16743                           ; BSR set to: 1
 16744                           ;../universalEvents.c: 201:             uint8_t tableIndex = happening2Event[evVal-1];
 16745   00AF5E  0EFF               	movlw	low (_happening2Event+65535)
 16746   00AF60  25EB               	addwf	APP_addEvent@evVal& (0+255),w,b
 16747   00AF62  6ED9               	movwf	fsr2l,c
 16748   00AF64  6ADA               	clrf	fsr2h,c
 16749   00AF66  0E02               	movlw	high (_happening2Event+65535)
 16750   00AF68  22DA               	addwfc	fsr2h,f,c
 16751   00AF6A  50DF               	movf	indf2,w,c
 16752   00AF6C  6FED               	movwf	APP_addEvent@tableIndex& (0+255),b
 16753                           
 16754                           ; BSR set to: 1
 16755                           ;../universalEvents.c: 202:             if (tableIndex != 0xff) {
 16756   00AF6E  29ED               	incf	APP_addEvent@tableIndex& (0+255),w,b
 16757   00AF70  B4D8               	btfsc	status,2,c
 16758   00AF72  D00D               	goto	l653
 16759                           
 16760                           ; BSR set to: 1
 16761                           ;../universalEvents.c: 205:                 writeEv(tableIndex, 0, 0);
 16762   00AF74  0E00               	movlw	0
 16763   00AF76  6FCB               	movwf	writeEv@evNum& (0+255),b
 16764   00AF78  0E00               	movlw	0
 16765   00AF7A  6FCC               	movwf	writeEv@evVal& (0+255),b
 16766   00AF7C  51ED               	movf	APP_addEvent@tableIndex& (0+255),w,b
 16767   00AF7E  ECF7  F018         	call	_writeEv
 16768                           
 16769                           ;../universalEvents.c: 206:                 checkRemoveTableEntry(tableIndex);
 16770   00AF82  0101               	movlb	1	; () banked
 16771   00AF84  51ED               	movf	APP_addEvent@tableIndex& (0+255),w,b
 16772   00AF86  EC8A  F05D         	call	_checkRemoveTableEntry
 16773                           
 16774                           ;../universalEvents.c: 208:                 rebuildHashtable();
 16775   00AF8A  EC93  F03E         	call	_rebuildHashtable	;wreg free
 16776   00AF8E                     l653:
 16777                           
 16778                           ;../universalEvents.c: 213:     return addEvent(nodeNumber, eventNumber, evNum, evVal, f
      +                          orceOwnNN);
 16779   00AF8E  C1E6  F1D7         	movff	APP_addEvent@nodeNumber,addEvent@nodeNumber
 16780   00AF92  C1E7  F1D8         	movff	APP_addEvent@nodeNumber+1,addEvent@nodeNumber+1
 16781   00AF96  C1E8  F1D9         	movff	APP_addEvent@eventNumber,addEvent@eventNumber
 16782   00AF9A  C1E9  F1DA         	movff	APP_addEvent@eventNumber+1,addEvent@eventNumber+1
 16783   00AF9E  C1EA  F1DB         	movff	APP_addEvent@evNum,addEvent@evNum
 16784   00AFA2  C1EB  F1DC         	movff	APP_addEvent@evVal,addEvent@evVal
 16785   00AFA6  C1EC  F1DD         	movff	APP_addEvent@forceOwnNN,addEvent@forceOwnNN
 16786   00AFAA  ECF5  F031         	call	_addEvent	;wreg free
 16787   00AFAE  0012               	return		;funcret
 16788   00AFB0                     __end_of_APP_addEvent:
 16789                           	callstack 0
 16790                           
 16791 ;; *************** function _pollTimedResponse *****************
 16792 ;; Defined at:
 16793 ;;		line 108 in file "../../VLCBlib_PIC/timedResponse.c"
 16794 ;; Parameters:    Size  Location     Type
 16795 ;;		None
 16796 ;; Auto vars:     Size  Location     Type
 16797 ;;  result          1   43[BANK1 ] enum E12922
 16798 ;; Return value:  Size  Location     Type
 16799 ;;                  1    wreg      void 
 16800 ;; Registers used:
 16801 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16802 ;; Tracked objects:
 16803 ;;		On entry : 0/0
 16804 ;;		On exit  : 0/0
 16805 ;;		Unchanged: 0/0
 16806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16808 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16809 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16810 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16811 ;;Total ram usage:        3 bytes
 16812 ;; Hardware stack levels used: 1
 16813 ;; Hardware stack levels required when called: 20
 16814 ;; This function calls:
 16815 ;;		NULL
 16816 ;;		_mnsTRallDiagnosticsCallback
 16817 ;;		_mnsTRrqnpnCallback
 16818 ;;		_mnsTRserviceDiscoveryCallback
 16819 ;;		_nerdCallback
 16820 ;;		_nvTRnvrdCallback
 16821 ;;		_reqevCallback
 16822 ;;		_sodTRCallback
 16823 ;; This function is called by:
 16824 ;;		_poll
 16825 ;; This function uses a non-reentrant model
 16826 ;;
 16827                           
 16828                           	psect	text41
 16829   00A9C4                     __ptext41:
 16830                           	callstack 0
 16831   00A9C4                     _pollTimedResponse:
 16832                           	callstack 9
 16833                           
 16834                           ;../../VLCBlib_PIC/timedResponse.c: 109:     TimedResponseResult result;;../../VLCBlib_P
      +                          IC/timedResponse.c: 111:     if (timedResponseType == 0xFF) {
 16835                           
 16836                           ;incstack = 0
 16837   00A9C4  0100               	movlb	0	; () banked
 16838   00A9C6  29C3               	incf	_timedResponseType& (0+255),w,b
 16839   00A9C8  B4D8               	btfsc	status,2,c
 16840   00A9CA  0012               	return	
 16841                           
 16842                           ; BSR set to: 0
 16843                           ;../../VLCBlib_PIC/timedResponse.c: 115:     if (timedResponseCallback == ((void*)0)) {
 16844   00A9CC  503F               	movf	_timedResponseCallback^0,w,c
 16845   00A9CE  1040               	iorwf	(_timedResponseCallback+1)^0,w,c
 16846   00A9D0  A4D8               	btfss	status,2,c
 16847   00A9D2  D003               	goto	l24073
 16848   00A9D4                     u25620:
 16849                           
 16850                           ;../../VLCBlib_PIC/timedResponse.c: 117:         timedResponseType = 0xFF;
 16851   00A9D4  0100               	movlb	0	; () banked
 16852   00A9D6  69C3               	setf	_timedResponseType& (0+255),b
 16853                           
 16854                           ;../../VLCBlib_PIC/timedResponse.c: 118:         return;
 16855   00A9D8  0012               	return	
 16856   00A9DA                     l24073:
 16857                           
 16858                           ; BSR set to: 0
 16859                           ;../../VLCBlib_PIC/timedResponse.c: 122:     result = (*timedResponseCallback)(timedResp
      +                          onseType, timedResponseServiceIndex, timedResponseStep);
 16860   00A9DA  D801               	call	u25638
 16861   00A9DC  D00E               	goto	u25639
 16862   00A9DE                     u25638:
 16863   00A9DE  0005               	push	
 16864   00A9E0  6EFA               	movwf	pclath,c
 16865   00A9E2  503F               	movf	_timedResponseCallback^0,w,c
 16866   00A9E4  6EFD               	movwf	tosl,c
 16867   00A9E6  5040               	movf	(_timedResponseCallback+1)^0,w,c
 16868   00A9E8  6EFE               	movwf	tosh,c
 16869   00A9EA  6AFF               	clrf	tosu,c
 16870   00A9EC  50FA               	movf	pclath,w,c
 16871   00A9EE  C0C4  F1D4         	movff	_timedResponseServiceIndex,reqevCallback@serviceIndex
 16872   00A9F2  C043  F1D5         	movff	_timedResponseStep,reqevCallback@step
 16873   00A9F6  51C3               	movf	_timedResponseType& (0+255),w,b
 16874   00A9F8  0012               	return		;indir
 16875   00A9FA                     u25639:
 16876   00A9FA  0101               	movlb	1	; () banked
 16877   00A9FC  6FE5               	movwf	pollTimedResponse@result& (0+255),b
 16878                           
 16879                           ;../../VLCBlib_PIC/timedResponse.c: 123:     switch (result) {
 16880   00A9FE  D00E               	goto	l24089
 16881   00AA00                     l24075:
 16882                           
 16883                           ; BSR set to: 1
 16884                           ;../../VLCBlib_PIC/timedResponse.c: 127:             if (timedResponseAllServicesFlag) {
 16885   00AA00  5044               	movf	_timedResponseAllServicesFlag^0,w,c
 16886   00AA02  B4D8               	btfsc	status,2,c
 16887   00AA04  D7E7               	goto	u25620
 16888                           
 16889                           ; BSR set to: 1
 16890                           ;../../VLCBlib_PIC/timedResponse.c: 129:                 timedResponseServiceIndex++;
 16891   00AA06  0100               	movlb	0	; () banked
 16892   00AA08  2BC4               	incf	_timedResponseServiceIndex& (0+255),f,b
 16893                           
 16894                           ; BSR set to: 0
 16895                           ;../../VLCBlib_PIC/timedResponse.c: 130:                 if (timedResponseServiceIndex >
      +                          = 9) {
 16896   00AA0A  0E08               	movlw	8
 16897   00AA0C  65C4               	cpfsgt	_timedResponseServiceIndex& (0+255),b
 16898   00AA0E  D001               	goto	l24083
 16899   00AA10  D7E1               	goto	u25620
 16900   00AA12                     l24083:
 16901                           
 16902                           ; BSR set to: 0
 16903                           ;../../VLCBlib_PIC/timedResponse.c: 134:                     timedResponseStep = 0;
 16904   00AA12  0E00               	movlw	0
 16905   00AA14  6E43               	movwf	_timedResponseStep^0,c
 16906   00AA16  0012               	return	
 16907   00AA18                     l24085:
 16908                           
 16909                           ; BSR set to: 1
 16910                           ;../../VLCBlib_PIC/timedResponse.c: 143:             timedResponseStep++;
 16911   00AA18  2A43               	incf	_timedResponseStep^0,f,c
 16912                           
 16913                           ;../../VLCBlib_PIC/timedResponse.c: 144:             break;
 16914   00AA1A  0012               	return	
 16915   00AA1C                     l24089:
 16916                           
 16917                           ; BSR set to: 1
 16918   00AA1C  51E5               	movf	pollTimedResponse@result& (0+255),w,b
 16919   00AA1E  6FE3               	movwf	??_pollTimedResponse& (0+255),b
 16920   00AA20  6BE4               	clrf	(??_pollTimedResponse+1)& (0+255),b
 16921                           
 16922                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16923                           ; Switch size 1, requested type "simple"
 16924                           ; Number of cases is 1, Range of values is 0 to 0
 16925                           ; switch strategies available:
 16926                           ; Name         Instructions Cycles
 16927                           ; simple_byte            4     3 (average)
 16928                           ;	Chosen strategy is simple_byte
 16929   00AA22  51E4               	movf	(??_pollTimedResponse+1)& (0+255),w,b
 16930   00AA24  0A00               	xorlw	0	; case 0
 16931   00AA26  A4D8               	btfss	status,2,c
 16932   00AA28  0012               	return	
 16933                           
 16934                           ; BSR set to: 1
 16935                           ; Switch size 1, requested type "simple"
 16936                           ; Number of cases is 3, Range of values is 0 to 2
 16937                           ; switch strategies available:
 16938                           ; Name         Instructions Cycles
 16939                           ; simple_byte           10     6 (average)
 16940                           ;	Chosen strategy is simple_byte
 16941   00AA2A  51E3               	movf	??_pollTimedResponse& (0+255),w,b
 16942   00AA2C  0A00               	xorlw	0	; case 0
 16943   00AA2E  B4D8               	btfsc	status,2,c
 16944   00AA30  D7E7               	goto	l24075
 16945   00AA32  0A01               	xorlw	1	; case 1
 16946   00AA34  B4D8               	btfsc	status,2,c
 16947   00AA36  0012               	return	
 16948   00AA38  0A03               	xorlw	3	; case 2
 16949   00AA3A  A4D8               	btfss	status,2,c
 16950   00AA3C  0012               	return	
 16951   00AA3E  D7EC               	goto	l24085
 16952   00AA40                     __end_of_pollTimedResponse:
 16953                           	callstack 0
 16954                           
 16955 ;; *************** function _reqevCallback *****************
 16956 ;; Defined at:
 16957 ;;		line 832 in file "../../VLCBlib_PIC/event_teach_large.c"
 16958 ;; Parameters:    Size  Location     Type
 16959 ;;  tableIndex      1    wreg     unsigned char 
 16960 ;;  serviceIndex    1   26[BANK1 ] unsigned char 
 16961 ;;  step            1   27[BANK1 ] unsigned char 
 16962 ;; Auto vars:     Size  Location     Type
 16963 ;;  tableIndex      1   40[BANK1 ] unsigned char 
 16964 ;;  eventNumber     2   38[BANK1 ] struct Word
 16965 ;;  nodeNumber      2   36[BANK1 ] struct Word
 16966 ;;  ev              2   34[BANK1 ] short 
 16967 ;;  nEv             1   33[BANK1 ] unsigned char 
 16968 ;; Return value:  Size  Location     Type
 16969 ;;                  1    wreg      enum E12929
 16970 ;; Registers used:
 16971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16972 ;; Tracked objects:
 16973 ;;		On entry : 0/0
 16974 ;;		On exit  : 0/0
 16975 ;;		Unchanged: 0/0
 16976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16977 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16978 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16979 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16980 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16981 ;;Total ram usage:       15 bytes
 16982 ;; Hardware stack levels used: 1
 16983 ;; Hardware stack levels required when called: 17
 16984 ;; This function calls:
 16985 ;;		_getEN
 16986 ;;		_getEv
 16987 ;;		_getNN
 16988 ;;		_numEv
 16989 ;;		_sendMessage6
 16990 ;; This function is called by:
 16991 ;;		_doReqev
 16992 ;;		_pollTimedResponse
 16993 ;; This function uses a non-reentrant model
 16994 ;;
 16995                           
 16996                           	psect	text42
 16997   009ED6                     __ptext42:
 16998                           	callstack 0
 16999   009ED6                     _reqevCallback:
 17000                           	callstack 11
 17001                           
 17002                           ;incstack = 0
 17003                           ;reqevCallback@tableIndex stored from wreg
 17004   009ED6  0101               	movlb	1	; () banked
 17005   009ED8  6FE2               	movwf	reqevCallback@tableIndex& (0+255),b
 17006                           
 17007                           ;../../VLCBlib_PIC/event_teach_large.c: 833:     Word nodeNumber, eventNumber;;../../VLC
      +                          Blib_PIC/event_teach_large.c: 835:     uint8_t nEv = numEv(tableIndex);
 17008   009EDA  0101               	movlb	1	; () banked
 17009   009EDC  51E2               	movf	reqevCallback@tableIndex& (0+255),w,b
 17010   009EDE  EC54  F045         	call	_numEv
 17011   009EE2  0101               	movlb	1	; () banked
 17012   009EE4  6FDB               	movwf	reqevCallback@nEv& (0+255),b
 17013                           
 17014                           ; BSR set to: 1
 17015                           ;../../VLCBlib_PIC/event_teach_large.c: 836:     int16_t ev;;../../VLCBlib_PIC/event_tea
      +                          ch_large.c: 838:     if (step+1 > nEv) {
 17016   009EE6  51D5               	movf	reqevCallback@step& (0+255),w,b
 17017   009EE8  6FD6               	movwf	??_reqevCallback& (0+255),b
 17018   009EEA  6BD7               	clrf	(??_reqevCallback+1)& (0+255),b
 17019   009EEC  0E01               	movlw	1
 17020   009EEE  27D6               	addwf	??_reqevCallback& (0+255),f,b
 17021   009EF0  0E00               	movlw	0
 17022   009EF2  23D7               	addwfc	(??_reqevCallback+1)& (0+255),f,b
 17023   009EF4  51DB               	movf	reqevCallback@nEv& (0+255),w,b
 17024   009EF6  6FD8               	movwf	(??_reqevCallback+2)& (0+255),b
 17025   009EF8  6BD9               	clrf	(??_reqevCallback+3)& (0+255),b
 17026   009EFA  51D6               	movf	??_reqevCallback& (0+255),w,b
 17027   009EFC  5DD8               	subwf	(??_reqevCallback+2)& (0+255),w,b
 17028   009EFE  51D9               	movf	(??_reqevCallback+3)& (0+255),w,b
 17029   009F00  0A80               	xorlw	128
 17030   009F02  6FDA               	movwf	(??_reqevCallback+4)& (0+255),b
 17031   009F04  51D7               	movf	(??_reqevCallback+1)& (0+255),w,b
 17032   009F06  0A80               	xorlw	128
 17033   009F08  59DA               	subwfb	(??_reqevCallback+4)& (0+255),w,b
 17034   009F0A  B0D8               	btfsc	status,0,c
 17035   009F0C  D002               	goto	l22669
 17036                           
 17037                           ; BSR set to: 1
 17038                           ;../../VLCBlib_PIC/event_teach_large.c: 839:         return TIMED_RESPONSE_RESULT_FINISH
      +                          ED;
 17039   009F0E  0E00               	movlw	0
 17040   009F10  0012               	return	
 17041   009F12                     l22669:
 17042                           
 17043                           ; BSR set to: 1
 17044                           ;../../VLCBlib_PIC/event_teach_large.c: 842:     nodeNumber.word = getNN(tableIndex);
 17045   009F12  51E2               	movf	reqevCallback@tableIndex& (0+255),w,b
 17046   009F14  ECBF  F049         	call	_getNN
 17047   009F18  C097  F1DE         	movff	?_getNN,reqevCallback@nodeNumber
 17048   009F1C  C098  F1DF         	movff	?_getNN+1,reqevCallback@nodeNumber+1
 17049                           
 17050                           ;../../VLCBlib_PIC/event_teach_large.c: 843:     eventNumber.word = getEN(tableIndex);
 17051   009F20  0101               	movlb	1	; () banked
 17052   009F22  51E2               	movf	reqevCallback@tableIndex& (0+255),w,b
 17053   009F24  EC9B  F055         	call	_getEN
 17054   009F28  C097  F1E0         	movff	?_getEN,reqevCallback@eventNumber
 17055   009F2C  C098  F1E1         	movff	?_getEN+1,reqevCallback@eventNumber+1
 17056                           
 17057                           ;../../VLCBlib_PIC/event_teach_large.c: 844:     ev = getEv(tableIndex, step);
 17058   009F30  C1D5  F09D         	movff	reqevCallback@step,getEv@evNum
 17059   009F34  0101               	movlb	1	; () banked
 17060   009F36  51E2               	movf	reqevCallback@tableIndex& (0+255),w,b
 17061   009F38  EC0A  F03C         	call	_getEv
 17062   009F3C  C09D  F1DC         	movff	?_getEv,reqevCallback@ev
 17063   009F40  C09E  F1DD         	movff	?_getEv+1,reqevCallback@ev+1
 17064                           
 17065                           ;../../VLCBlib_PIC/event_teach_large.c: 845:     if (ev >= 0) {
 17066   009F44  0101               	movlb	1	; () banked
 17067   009F46  BFDD               	btfsc	(reqevCallback@ev+1)& (0+255),7,b
 17068   009F48  D00F               	goto	l22675
 17069                           
 17070                           ; BSR set to: 1
 17071                           ;../../VLCBlib_PIC/event_teach_large.c: 846:         sendMessage6(OPC_EVANS, nodeNumber.
      +                          bytes.hi, nodeNumber.bytes.lo, eventNumber.bytes.hi, eventNumber.bytes.lo, step+1, (uint
      +                          8_t)ev);
 17072   009F4A  C1DF  F1C2         	movff	reqevCallback@nodeNumber+1,sendMessage6@data1
 17073   009F4E  C1DE  F1C3         	movff	reqevCallback@nodeNumber,sendMessage6@data2
 17074   009F52  C1E1  F1C4         	movff	reqevCallback@eventNumber+1,sendMessage6@data3
 17075   009F56  C1E0  F1C5         	movff	reqevCallback@eventNumber,sendMessage6@data4
 17076   009F5A  29D5               	incf	reqevCallback@step& (0+255),w,b
 17077   009F5C  6FC6               	movwf	sendMessage6@data5& (0+255),b
 17078   009F5E  C1DC  F1C7         	movff	reqevCallback@ev,sendMessage6@data6
 17079   009F62  0ED3               	movlw	211
 17080   009F64  EC99  F05F         	call	_sendMessage6
 17081   009F68                     l22675:
 17082                           
 17083                           ;../../VLCBlib_PIC/event_teach_large.c: 848:     return TIMED_RESPONSE_RESULT_NEXT;
 17084   009F68  0E02               	movlw	2
 17085   009F6A  0012               	return		;funcret
 17086   009F6C                     __end_of_reqevCallback:
 17087                           	callstack 0
 17088                           
 17089 ;; *************** function _nerdCallback *****************
 17090 ;; Defined at:
 17091 ;;		line 604 in file "../../VLCBlib_PIC/event_teach_large.c"
 17092 ;; Parameters:    Size  Location     Type
 17093 ;;  type            1    wreg     unsigned char 
 17094 ;;  serviceIndex    1   26[BANK1 ] unsigned char 
 17095 ;;  step            1   27[BANK1 ] unsigned char 
 17096 ;; Auto vars:     Size  Location     Type
 17097 ;;  type            1    0[COMRAM] unsigned char 
 17098 ;;  eventNumber     2   30[BANK1 ] struct Word
 17099 ;;  nodeNumber      2   28[BANK1 ] struct Word
 17100 ;; Return value:  Size  Location     Type
 17101 ;;                  1    wreg      enum E12929
 17102 ;; Registers used:
 17103 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17104 ;; Tracked objects:
 17105 ;;		On entry : 0/0
 17106 ;;		On exit  : 0/0
 17107 ;;		Unchanged: 0/0
 17108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17109 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17110 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17112 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17113 ;;Total ram usage:        6 bytes
 17114 ;; Hardware stack levels used: 1
 17115 ;; Hardware stack levels required when called: 17
 17116 ;; This function calls:
 17117 ;;		_getEN
 17118 ;;		_getNN
 17119 ;;		_sendMessage7
 17120 ;;		_tableIndexToEvtIdx
 17121 ;;		_validStart
 17122 ;; This function is called by:
 17123 ;;		_doNerd
 17124 ;;		_pollTimedResponse
 17125 ;; This function uses a non-reentrant model
 17126 ;;
 17127                           
 17128                           	psect	text43
 17129   00B0EC                     __ptext43:
 17130                           	callstack 0
 17131   00B0EC                     _nerdCallback:
 17132                           	callstack 11
 17133                           
 17134                           ;../../VLCBlib_PIC/event_teach_large.c: 605:     Word nodeNumber, eventNumber;;../../VLC
      +                          Blib_PIC/event_teach_large.c: 607:     if (step >= 255) {
 17135                           
 17136                           ;incstack = 0
 17137   00B0EC  0101               	movlb	1	; () banked
 17138   00B0EE  29D5               	incf	nerdCallback@step& (0+255),w,b
 17139   00B0F0  A4D8               	btfss	status,2,c
 17140   00B0F2  D002               	goto	l22651
 17141                           
 17142                           ; BSR set to: 1
 17143                           ;../../VLCBlib_PIC/event_teach_large.c: 608:         return TIMED_RESPONSE_RESULT_FINISH
      +                          ED;
 17144   00B0F4  0E00               	movlw	0
 17145   00B0F6  0012               	return	
 17146   00B0F8                     l22651:
 17147                           
 17148                           ; BSR set to: 1
 17149                           ;../../VLCBlib_PIC/event_teach_large.c: 611:     if (validStart(step)) {
 17150   00B0F8  51D5               	movf	nerdCallback@step& (0+255),w,b
 17151   00B0FA  EC39  F05C         	call	_validStart
 17152   00B0FE  0900               	iorlw	0
 17153   00B100  B4D8               	btfsc	status,2,c
 17154   00B102  D025               	goto	l22657
 17155                           
 17156                           ;../../VLCBlib_PIC/event_teach_large.c: 612:         nodeNumber.word = getNN(step);
 17157   00B104  0101               	movlb	1	; () banked
 17158   00B106  51D5               	movf	nerdCallback@step& (0+255),w,b
 17159   00B108  ECBF  F049         	call	_getNN
 17160   00B10C  C097  F1D6         	movff	?_getNN,nerdCallback@nodeNumber
 17161   00B110  C098  F1D7         	movff	?_getNN+1,nerdCallback@nodeNumber+1
 17162                           
 17163                           ;../../VLCBlib_PIC/event_teach_large.c: 613:         eventNumber.word = getEN(step);
 17164   00B114  0101               	movlb	1	; () banked
 17165   00B116  51D5               	movf	nerdCallback@step& (0+255),w,b
 17166   00B118  EC9B  F055         	call	_getEN
 17167   00B11C  C097  F1D8         	movff	?_getEN,nerdCallback@eventNumber
 17168   00B120  C098  F1D9         	movff	?_getEN+1,nerdCallback@eventNumber+1
 17169                           
 17170                           ;../../VLCBlib_PIC/event_teach_large.c: 614:         sendMessage7(OPC_ENRSP, nn.bytes.hi
      +                          , nn.bytes.lo, nodeNumber.bytes.hi, nodeNumber.bytes.lo, eventNumber.bytes.hi, eventNumb
      +                          er.bytes.lo, tableIndexToEvtIdx(step));
 17171   00B124  C0BE  F1C2         	movff	_nn+1,sendMessage7@data1
 17172   00B128  C0BD  F1C3         	movff	_nn,sendMessage7@data2
 17173   00B12C  C1D7  F1C4         	movff	nerdCallback@nodeNumber+1,sendMessage7@data3
 17174   00B130  C1D6  F1C5         	movff	nerdCallback@nodeNumber,sendMessage7@data4
 17175   00B134  C1D9  F1C6         	movff	nerdCallback@eventNumber+1,sendMessage7@data5
 17176   00B138  C1D8  F1C7         	movff	nerdCallback@eventNumber,sendMessage7@data6
 17177   00B13C  0101               	movlb	1	; () banked
 17178   00B13E  51D5               	movf	nerdCallback@step& (0+255),w,b
 17179   00B140  EC04  F063         	call	_tableIndexToEvtIdx
 17180   00B144  0101               	movlb	1	; () banked
 17181   00B146  6FC8               	movwf	sendMessage7@data7& (0+255),b
 17182   00B148  0EF2               	movlw	242
 17183   00B14A  ECC9  F05F         	call	_sendMessage7
 17184   00B14E                     l22657:
 17185                           
 17186                           ;../../VLCBlib_PIC/event_teach_large.c: 616:     return TIMED_RESPONSE_RESULT_NEXT;
 17187   00B14E  0E02               	movlw	2
 17188   00B150  0012               	return		;funcret
 17189   00B152                     __end_of_nerdCallback:
 17190                           	callstack 0
 17191                           
 17192 ;; *************** function _nvTRnvrdCallback *****************
 17193 ;; Defined at:
 17194 ;;		line 371 in file "../../VLCBlib_PIC/nv.c"
 17195 ;; Parameters:    Size  Location     Type
 17196 ;;  type            1    wreg     unsigned char 
 17197 ;;  serviceIndex    1   26[BANK1 ] unsigned char 
 17198 ;;  step            1   27[BANK1 ] unsigned char 
 17199 ;; Auto vars:     Size  Location     Type
 17200 ;;  type            1    0[COMRAM] unsigned char 
 17201 ;;  valueOrError    2   28[BANK1 ] short 
 17202 ;; Return value:  Size  Location     Type
 17203 ;;                  1    wreg      enum E12946
 17204 ;; Registers used:
 17205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17206 ;; Tracked objects:
 17207 ;;		On entry : 0/0
 17208 ;;		On exit  : 0/0
 17209 ;;		Unchanged: 0/0
 17210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17211 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17212 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17214 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17215 ;;Total ram usage:        4 bytes
 17216 ;; Hardware stack levels used: 1
 17217 ;; Hardware stack levels required when called: 17
 17218 ;; This function calls:
 17219 ;;		_getNV
 17220 ;;		_sendMessage4
 17221 ;; This function is called by:
 17222 ;;		_nvProcessMessage
 17223 ;;		_pollTimedResponse
 17224 ;; This function uses a non-reentrant model
 17225 ;;
 17226                           
 17227                           	psect	text44
 17228   00BBE8                     __ptext44:
 17229                           	callstack 0
 17230   00BBE8                     _nvTRnvrdCallback:
 17231                           	callstack 11
 17232                           
 17233                           ;../../VLCBlib_PIC/nv.c: 372:     int16_t valueOrError;;../../VLCBlib_PIC/nv.c: 373:    
      +                           if (step > (15+7*16)) {
 17234                           
 17235                           ;incstack = 0
 17236   00BBE8  0E7F               	movlw	127
 17237   00BBEA  0101               	movlb	1	; () banked
 17238   00BBEC  65D5               	cpfsgt	nvTRnvrdCallback@step& (0+255),b
 17239   00BBEE  D002               	goto	l22103
 17240   00BBF0                     u23030:
 17241                           
 17242                           ; BSR set to: 1
 17243                           ;../../VLCBlib_PIC/nv.c: 374:         return TIMED_RESPONSE_RESULT_FINISHED;
 17244   00BBF0  0E00               	movlw	0
 17245   00BBF2  0012               	return	
 17246   00BBF4                     l22103:
 17247                           
 17248                           ; BSR set to: 1
 17249                           ;../../VLCBlib_PIC/nv.c: 376:     valueOrError = getNV(step+1);
 17250   00BBF4  29D5               	incf	nvTRnvrdCallback@step& (0+255),w,b
 17251   00BBF6  EC52  F05E         	call	_getNV
 17252   00BBFA  C08D  F1D6         	movff	?_getNV,nvTRnvrdCallback@valueOrError
 17253   00BBFE  C08E  F1D7         	movff	?_getNV+1,nvTRnvrdCallback@valueOrError+1
 17254                           
 17255                           ;../../VLCBlib_PIC/nv.c: 377:     if (valueOrError < 0) {
 17256   00BC02  0101               	movlb	1	; () banked
 17257   00BC04  BFD7               	btfsc	(nvTRnvrdCallback@valueOrError+1)& (0+255),7,b
 17258   00BC06  D7F4               	goto	u23030
 17259                           
 17260                           ; BSR set to: 1
 17261                           ;../../VLCBlib_PIC/nv.c: 380:     sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.lo, step
      +                          +1, (uint8_t)(valueOrError));
 17262   00BC08  C0BE  F1C2         	movff	_nn+1,sendMessage4@data1
 17263   00BC0C  C0BD  F1C3         	movff	_nn,sendMessage4@data2
 17264   00BC10  29D5               	incf	nvTRnvrdCallback@step& (0+255),w,b
 17265   00BC12  6FC4               	movwf	sendMessage4@data3& (0+255),b
 17266   00BC14  C1D6  F1C5         	movff	nvTRnvrdCallback@valueOrError,sendMessage4@data4
 17267   00BC18  0E97               	movlw	151
 17268   00BC1A  ECF9  F05F         	call	_sendMessage4
 17269                           
 17270                           ;../../VLCBlib_PIC/nv.c: 382:     nvDiagnostics[0x01].asUint++;
 17271   00BC1E  0101               	movlb	1	; () banked
 17272   00BC20  4BA6               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 17273   00BC22  2BA7               	incf	(_nvDiagnostics+3)& (0+255),f,b
 17274                           
 17275                           ; BSR set to: 1
 17276                           ;../../VLCBlib_PIC/nv.c: 384:     return TIMED_RESPONSE_RESULT_NEXT;
 17277   00BC24  0E02               	movlw	2
 17278                           
 17279                           ; BSR set to: 1
 17280   00BC26  0012               	return		;funcret
 17281   00BC28                     __end_of_nvTRnvrdCallback:
 17282                           	callstack 0
 17283                           
 17284 ;; *************** function _mnsTRserviceDiscoveryCallback *****************
 17285 ;; Defined at:
 17286 ;;		line 896 in file "../../VLCBlib_PIC/mns.c"
 17287 ;; Parameters:    Size  Location     Type
 17288 ;;  type            1    wreg     unsigned char 
 17289 ;;  serviceIndex    1   26[BANK1 ] unsigned char 
 17290 ;;  step            1   27[BANK1 ] unsigned char 
 17291 ;; Auto vars:     Size  Location     Type
 17292 ;;  type            1    0[COMRAM] unsigned char 
 17293 ;; Return value:  Size  Location     Type
 17294 ;;                  1    wreg      enum E12929
 17295 ;; Registers used:
 17296 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17297 ;; Tracked objects:
 17298 ;;		On entry : 0/0
 17299 ;;		On exit  : 0/0
 17300 ;;		Unchanged: 0/0
 17301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17302 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17304 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17305 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17306 ;;Total ram usage:        6 bytes
 17307 ;; Hardware stack levels used: 1
 17308 ;; Hardware stack levels required when called: 17
 17309 ;; This function calls:
 17310 ;;		_sendMessage5
 17311 ;; This function is called by:
 17312 ;;		_mnsProcessMessage
 17313 ;;		_pollTimedResponse
 17314 ;; This function uses a non-reentrant model
 17315 ;;
 17316                           
 17317                           	psect	text45
 17318   00A406                     __ptext45:
 17319                           	callstack 0
 17320   00A406                     _mnsTRserviceDiscoveryCallback:
 17321                           	callstack 11
 17322                           
 17323                           ;../../VLCBlib_PIC/mns.c: 897:     if (step >= 9) {
 17324                           
 17325                           ; BSR set to: 1
 17326                           ;incstack = 0
 17327   00A406  0E08               	movlw	8
 17328   00A408  0101               	movlb	1	; () banked
 17329   00A40A  65D5               	cpfsgt	mnsTRserviceDiscoveryCallback@step& (0+255),b
 17330   00A40C  D002               	goto	l22021
 17331                           
 17332                           ; BSR set to: 1
 17333                           ;../../VLCBlib_PIC/mns.c: 898:         return TIMED_RESPONSE_RESULT_FINISHED;
 17334   00A40E  0E00               	movlw	0
 17335   00A410  0012               	return	
 17336   00A412                     l22021:
 17337                           
 17338                           ; BSR set to: 1
 17339                           ;../../VLCBlib_PIC/mns.c: 901:         sendMessage5(OPC_SD, nn.bytes.hi, nn.bytes.lo, st
      +                          ep+1, services[step]->serviceNo, services[step]->version);
 17340   00A412  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 17341   00A416  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 17342   00A41A  29D5               	incf	mnsTRserviceDiscoveryCallback@step& (0+255),w,b
 17343   00A41C  6FC4               	movwf	sendMessage5@data3& (0+255),b
 17344   00A41E  51D5               	movf	mnsTRserviceDiscoveryCallback@step& (0+255),w,b
 17345   00A420  0D02               	mullw	2
 17346   00A422  0E69               	movlw	low _services
 17347   00A424  24F3               	addwf	243,w,c
 17348   00A426  6EF6               	movwf	tblptrl,c
 17349   00A428  0EEE               	movlw	high _services
 17350   00A42A  20F4               	addwfc	244,w,c
 17351   00A42C  6EF7               	movwf	tblptrh,c
 17352   00A42E                     	if	1	;There are 3 active tblptr bytes
 17353   00A42E  6AF8               	clrf	tblptru,c
 17354   00A430  0E00               	movlw	low (__mediumconst shr (0+16))
 17355   00A432  22F8               	addwfc	tblptru,f,c
 17356   00A434                     	endif
 17357   00A434  0009               	tblrd		*+
 17358   00A436  CFF5 F1D6          	movff	tablat,??_mnsTRserviceDiscoveryCallback
 17359   00A43A  0009               	tblrd		*+
 17360   00A43C  CFF5 F1D7          	movff	tablat,??_mnsTRserviceDiscoveryCallback+1
 17361   00A440  C1D6  FFF6         	movff	??_mnsTRserviceDiscoveryCallback,tblptrl
 17362   00A444  C1D7  FFF7         	movff	??_mnsTRserviceDiscoveryCallback+1,tblptrh
 17363   00A448                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17364   00A448  6AF8               	clrf	tblptru,c
 17365   00A44A                     	endif
 17366   00A44A                     	if	0	;tblptru may be non-zero
 17367   00A44A                     	endif
 17368   00A44A  0008               	tblrd		*
 17369   00A44C  CFF5 F1C5          	movff	tablat,sendMessage5@data4
 17370   00A450  51D5               	movf	mnsTRserviceDiscoveryCallback@step& (0+255),w,b
 17371   00A452  0D02               	mullw	2
 17372   00A454  0E69               	movlw	low _services
 17373   00A456  24F3               	addwf	243,w,c
 17374   00A458  6EF6               	movwf	tblptrl,c
 17375   00A45A  0EEE               	movlw	high _services
 17376   00A45C  20F4               	addwfc	244,w,c
 17377   00A45E  6EF7               	movwf	tblptrh,c
 17378   00A460                     	if	1	;There are 3 active tblptr bytes
 17379   00A460  6AF8               	clrf	tblptru,c
 17380   00A462  0E00               	movlw	low (__mediumconst shr (0+16))
 17381   00A464  22F8               	addwfc	tblptru,f,c
 17382   00A466                     	endif
 17383   00A466  0009               	tblrd		*+
 17384   00A468  CFF5 F1D8          	movff	tablat,??_mnsTRserviceDiscoveryCallback+2
 17385   00A46C  0009               	tblrd		*+
 17386   00A46E  CFF5 F1D9          	movff	tablat,??_mnsTRserviceDiscoveryCallback+3
 17387   00A472  0E01               	movlw	1
 17388   00A474  27D8               	addwf	(??_mnsTRserviceDiscoveryCallback+2)& (0+255),f,b
 17389   00A476  0E00               	movlw	0
 17390   00A478  23D9               	addwfc	(??_mnsTRserviceDiscoveryCallback+3)& (0+255),f,b
 17391   00A47A  C1D8  FFF6         	movff	??_mnsTRserviceDiscoveryCallback+2,tblptrl
 17392   00A47E  C1D9  FFF7         	movff	??_mnsTRserviceDiscoveryCallback+3,tblptrh
 17393   00A482                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17394   00A482  6AF8               	clrf	tblptru,c
 17395   00A484                     	endif
 17396   00A484                     	if	0	;tblptru may be non-zero
 17397   00A484                     	endif
 17398   00A484  0008               	tblrd		*
 17399   00A486  CFF5 F1C6          	movff	tablat,sendMessage5@data5
 17400   00A48A  0EAC               	movlw	172
 17401   00A48C  ECE1  F05F         	call	_sendMessage5
 17402                           
 17403                           ;../../VLCBlib_PIC/mns.c: 903:     return TIMED_RESPONSE_RESULT_NEXT;
 17404   00A490  0E02               	movlw	2
 17405   00A492  0012               	return		;funcret
 17406   00A494                     __end_of_mnsTRserviceDiscoveryCallback:
 17407                           	callstack 0
 17408                           
 17409 ;; *************** function _mnsTRallDiagnosticsCallback *****************
 17410 ;; Defined at:
 17411 ;;		line 915 in file "../../VLCBlib_PIC/mns.c"
 17412 ;; Parameters:    Size  Location     Type
 17413 ;;  type            1    wreg     unsigned char 
 17414 ;;  serviceIndex    1   26[BANK1 ] unsigned char 
 17415 ;;  step            1   27[BANK1 ] unsigned char 
 17416 ;; Auto vars:     Size  Location     Type
 17417 ;;  type            1    0[COMRAM] unsigned char 
 17418 ;;  d               2   32[BANK1 ] PTR struct DiagnosticVal
 17419 ;;		 -> producerDiagnostics(4), teachDiagnostics(4), canDiagnostics(38), nvDiagnostics(6), 
 17420 ;;		 -> mnsDiagnostics(14), ackDiagnostics(4), consumer2QDiagnostics(4), NULL(0), 
 17421 ;; Return value:  Size  Location     Type
 17422 ;;                  1    wreg      enum E12929
 17423 ;; Registers used:
 17424 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17425 ;; Tracked objects:
 17426 ;;		On entry : 0/0
 17427 ;;		On exit  : 0/0
 17428 ;;		Unchanged: 0/0
 17429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17430 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17431 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17432 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17433 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17434 ;;Total ram usage:        8 bytes
 17435 ;; Hardware stack levels used: 1
 17436 ;; Hardware stack levels required when called: 17
 17437 ;; This function calls:
 17438 ;;		NULL
 17439 ;;		_ackGetDiagnostic
 17440 ;;		_canGetDiagnostic
 17441 ;;		_consumer2QGetDiagnostic
 17442 ;;		_mnsGetDiagnostic
 17443 ;;		_nvGetDiagnostic
 17444 ;;		_producerGetDiagnostic
 17445 ;;		_sendMessage6
 17446 ;;		_teachGetDiagnostic
 17447 ;; This function is called by:
 17448 ;;		_mnsProcessMessage
 17449 ;;		_pollTimedResponse
 17450 ;; This function uses a non-reentrant model
 17451 ;;
 17452                           
 17453                           	psect	text46
 17454   008170                     __ptext46:
 17455                           	callstack 0
 17456   008170                     _mnsTRallDiagnosticsCallback:
 17457                           	callstack 11
 17458                           
 17459                           ;../../VLCBlib_PIC/mns.c: 916:     if (services[serviceIndex]->getDiagnostic == ((void*)
      +                          0)) {
 17460                           
 17461                           ;incstack = 0
 17462   008170  0101               	movlb	1	; () banked
 17463   008172  51D4               	movf	mnsTRallDiagnosticsCallback@serviceIndex& (0+255),w,b
 17464   008174  0D02               	mullw	2
 17465   008176  0E69               	movlw	low _services
 17466   008178  24F3               	addwf	243,w,c
 17467   00817A  6EF6               	movwf	tblptrl,c
 17468   00817C  0EEE               	movlw	high _services
 17469   00817E  20F4               	addwfc	244,w,c
 17470   008180  6EF7               	movwf	tblptrh,c
 17471   008182                     	if	1	;There are 3 active tblptr bytes
 17472   008182  6AF8               	clrf	tblptru,c
 17473   008184  0E00               	movlw	low (__mediumconst shr (0+16))
 17474   008186  22F8               	addwfc	tblptru,f,c
 17475   008188                     	endif
 17476   008188  0009               	tblrd		*+
 17477   00818A  CFF5 F1D6          	movff	tablat,??_mnsTRallDiagnosticsCallback
 17478   00818E  0009               	tblrd		*+
 17479   008190  CFF5 F1D7          	movff	tablat,??_mnsTRallDiagnosticsCallback+1
 17480   008194  0E10               	movlw	16
 17481   008196  27D6               	addwf	??_mnsTRallDiagnosticsCallback& (0+255),f,b
 17482   008198  0E00               	movlw	0
 17483   00819A  23D7               	addwfc	(??_mnsTRallDiagnosticsCallback+1)& (0+255),f,b
 17484   00819C  C1D6  FFF6         	movff	??_mnsTRallDiagnosticsCallback,tblptrl
 17485   0081A0  C1D7  FFF7         	movff	??_mnsTRallDiagnosticsCallback+1,tblptrh
 17486   0081A4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17487   0081A4  6AF8               	clrf	tblptru,c
 17488   0081A6                     	endif
 17489   0081A6                     	if	0	;tblptru may be non-zero
 17490   0081A6                     	endif
 17491   0081A6  0009               	tblrd		*+
 17492   0081A8  50F5               	movf	tablat,w,c
 17493   0081AA  0009               	tblrd		*+
 17494   0081AC  10F5               	iorwf	tablat,w,c
 17495   0081AE  A4D8               	btfss	status,2,c
 17496   0081B0  D011               	goto	l22035
 17497                           
 17498                           ; BSR set to: 1
 17499                           ;../../VLCBlib_PIC/mns.c: 917:         sendMessage6(OPC_DGN, nn.bytes.hi, nn.bytes.lo, s
      +                          erviceIndex+1, 0, 0, 0);
 17500   0081B2  C0BE  F1C2         	movff	_nn+1,sendMessage6@data1
 17501   0081B6  C0BD  F1C3         	movff	_nn,sendMessage6@data2
 17502   0081BA  29D4               	incf	mnsTRallDiagnosticsCallback@serviceIndex& (0+255),w,b
 17503   0081BC  6FC4               	movwf	sendMessage6@data3& (0+255),b
 17504   0081BE  0E00               	movlw	0
 17505   0081C0  6FC5               	movwf	sendMessage6@data4& (0+255),b
 17506   0081C2  0E00               	movlw	0
 17507   0081C4  6FC6               	movwf	sendMessage6@data5& (0+255),b
 17508   0081C6  0E00               	movlw	0
 17509   0081C8  6FC7               	movwf	sendMessage6@data6& (0+255),b
 17510   0081CA  0EC7               	movlw	199
 17511   0081CC  EC99  F05F         	call	_sendMessage6
 17512   0081D0                     l22031:
 17513                           
 17514                           ;../../VLCBlib_PIC/mns.c: 918:         return TIMED_RESPONSE_RESULT_FINISHED;
 17515   0081D0  0E00               	movlw	0
 17516   0081D2  0012               	return	
 17517   0081D4                     l22035:
 17518                           
 17519                           ; BSR set to: 1
 17520                           ;../../VLCBlib_PIC/mns.c: 920:     DiagnosticVal * d = services[serviceIndex]->getDiagno
      +                          stic(step);
 17521   0081D4  51D4               	movf	mnsTRallDiagnosticsCallback@serviceIndex& (0+255),w,b
 17522   0081D6  0D02               	mullw	2
 17523   0081D8  0E69               	movlw	low _services
 17524   0081DA  24F3               	addwf	243,w,c
 17525   0081DC  6EF6               	movwf	tblptrl,c
 17526   0081DE  0EEE               	movlw	high _services
 17527   0081E0  20F4               	addwfc	244,w,c
 17528   0081E2  6EF7               	movwf	tblptrh,c
 17529   0081E4                     	if	1	;There are 3 active tblptr bytes
 17530   0081E4  6AF8               	clrf	tblptru,c
 17531   0081E6  0E00               	movlw	low (__mediumconst shr (0+16))
 17532   0081E8  22F8               	addwfc	tblptru,f,c
 17533   0081EA                     	endif
 17534   0081EA  0009               	tblrd		*+
 17535   0081EC  CFF5 F1D6          	movff	tablat,??_mnsTRallDiagnosticsCallback
 17536   0081F0  0009               	tblrd		*+
 17537   0081F2  CFF5 F1D7          	movff	tablat,??_mnsTRallDiagnosticsCallback+1
 17538   0081F6  0E10               	movlw	16
 17539   0081F8  27D6               	addwf	??_mnsTRallDiagnosticsCallback& (0+255),f,b
 17540   0081FA  0E00               	movlw	0
 17541   0081FC  23D7               	addwfc	(??_mnsTRallDiagnosticsCallback+1)& (0+255),f,b
 17542   0081FE  C1D6  FFF6         	movff	??_mnsTRallDiagnosticsCallback,tblptrl
 17543   008202  C1D7  FFF7         	movff	??_mnsTRallDiagnosticsCallback+1,tblptrh
 17544   008206                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17545   008206  6AF8               	clrf	tblptru,c
 17546   008208                     	endif
 17547   008208                     	if	0	;tblptru may be non-zero
 17548   008208                     	endif
 17549   008208  0009               	tblrd		*+
 17550   00820A  CFF5 F1D8          	movff	tablat,??_mnsTRallDiagnosticsCallback+2
 17551   00820E  0009               	tblrd		*+
 17552   008210  CFF5 F1D9          	movff	tablat,??_mnsTRallDiagnosticsCallback+3
 17553   008214  D801               	call	u22988
 17554   008216  D00A               	goto	u22989
 17555   008218                     u22988:
 17556   008218  0005               	push	
 17557   00821A  6EFA               	movwf	pclath,c
 17558   00821C  51D8               	movf	(??_mnsTRallDiagnosticsCallback+2)& (0+255),w,b
 17559   00821E  6EFD               	movwf	tosl,c
 17560   008220  51D9               	movf	(??_mnsTRallDiagnosticsCallback+3)& (0+255),w,b
 17561   008222  6EFE               	movwf	tosh,c
 17562   008224  6AFF               	clrf	tosu,c
 17563   008226  50FA               	movf	pclath,w,c
 17564   008228  51D5               	movf	mnsTRallDiagnosticsCallback@step& (0+255),w,b
 17565   00822A  0012               	return		;indir
 17566   00822C                     u22989:
 17567   00822C  C096  F1DA         	movff	?_producerGetDiagnostic,mnsTRallDiagnosticsCallback@d
 17568   008230  C097  F1DB         	movff	?_producerGetDiagnostic+1,mnsTRallDiagnosticsCallback@d+1
 17569                           
 17570                           ;../../VLCBlib_PIC/mns.c: 921:     if (d == ((void*)0)) {
 17571   008234  0101               	movlb	1	; () banked
 17572   008236  51DA               	movf	mnsTRallDiagnosticsCallback@d& (0+255),w,b
 17573   008238  11DB               	iorwf	(mnsTRallDiagnosticsCallback@d+1)& (0+255),w,b
 17574   00823A  B4D8               	btfsc	status,2,c
 17575   00823C  D7C9               	goto	l22031
 17576                           
 17577                           ; BSR set to: 1
 17578                           ;../../VLCBlib_PIC/mns.c: 926:     sendMessage6(OPC_DGN, nn.bytes.hi, nn.bytes.lo, servi
      +                          ceIndex+1, step, d->asBytes.hi, d->asBytes.lo);
 17579   00823E  C0BE  F1C2         	movff	_nn+1,sendMessage6@data1
 17580   008242  C0BD  F1C3         	movff	_nn,sendMessage6@data2
 17581   008246  29D4               	incf	mnsTRallDiagnosticsCallback@serviceIndex& (0+255),w,b
 17582   008248  6FC4               	movwf	sendMessage6@data3& (0+255),b
 17583   00824A  C1D5  F1C5         	movff	mnsTRallDiagnosticsCallback@step,sendMessage6@data4
 17584   00824E  EE20 F001          	lfsr	2,1
 17585   008252  51DA               	movf	mnsTRallDiagnosticsCallback@d& (0+255),w,b
 17586   008254  26D9               	addwf	fsr2l,f,c
 17587   008256  51DB               	movf	(mnsTRallDiagnosticsCallback@d+1)& (0+255),w,b
 17588   008258  22DA               	addwfc	fsr2h,f,c
 17589   00825A  50DF               	movf	indf2,w,c
 17590   00825C  6FC6               	movwf	sendMessage6@data5& (0+255),b
 17591   00825E  C1DA  FFD9         	movff	mnsTRallDiagnosticsCallback@d,fsr2l
 17592   008262  C1DB  FFDA         	movff	mnsTRallDiagnosticsCallback@d+1,fsr2h
 17593   008266  50DF               	movf	indf2,w,c
 17594   008268  6FC7               	movwf	sendMessage6@data6& (0+255),b
 17595   00826A  0EC7               	movlw	199
 17596   00826C  EC99  F05F         	call	_sendMessage6
 17597                           
 17598                           ;../../VLCBlib_PIC/mns.c: 927:     return TIMED_RESPONSE_RESULT_NEXT;
 17599   008270  0E02               	movlw	2
 17600   008272  0012               	return		;funcret
 17601   008274                     __end_of_mnsTRallDiagnosticsCallback:
 17602                           	callstack 0
 17603                           
 17604 ;; *************** function _mnsTRrqnpnCallback *****************
 17605 ;; Defined at:
 17606 ;;		line 939 in file "../../VLCBlib_PIC/mns.c"
 17607 ;; Parameters:    Size  Location     Type
 17608 ;;  type            1    wreg     unsigned char 
 17609 ;;  serviceIndex    1   26[BANK1 ] unsigned char 
 17610 ;;  step            1   27[BANK1 ] unsigned char 
 17611 ;; Auto vars:     Size  Location     Type
 17612 ;;  type            1    0[COMRAM] unsigned char 
 17613 ;; Return value:  Size  Location     Type
 17614 ;;                  1    wreg      enum E12929
 17615 ;; Registers used:
 17616 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17617 ;; Tracked objects:
 17618 ;;		On entry : 0/0
 17619 ;;		On exit  : 0/0
 17620 ;;		Unchanged: 0/0
 17621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17622 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17625 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17626 ;;Total ram usage:        2 bytes
 17627 ;; Hardware stack levels used: 1
 17628 ;; Hardware stack levels required when called: 17
 17629 ;; This function calls:
 17630 ;;		_getParameter
 17631 ;;		_sendMessage4
 17632 ;; This function is called by:
 17633 ;;		_mnsProcessMessage
 17634 ;;		_pollTimedResponse
 17635 ;; This function uses a non-reentrant model
 17636 ;;
 17637                           
 17638                           	psect	text47
 17639   00C106                     __ptext47:
 17640                           	callstack 0
 17641   00C106                     _mnsTRrqnpnCallback:
 17642                           	callstack 11
 17643                           
 17644                           ;../../VLCBlib_PIC/mns.c: 940:     if (step >= 20) {
 17645                           
 17646                           ;incstack = 0
 17647   00C106  0E13               	movlw	19
 17648   00C108  0101               	movlb	1	; () banked
 17649   00C10A  65D5               	cpfsgt	mnsTRrqnpnCallback@step& (0+255),b
 17650   00C10C  D002               	goto	l22055
 17651                           
 17652                           ; BSR set to: 1
 17653                           ;../../VLCBlib_PIC/mns.c: 941:         return TIMED_RESPONSE_RESULT_FINISHED;
 17654   00C10E  0E00               	movlw	0
 17655   00C110  0012               	return	
 17656   00C112                     l22055:
 17657                           
 17658                           ; BSR set to: 1
 17659                           ;../../VLCBlib_PIC/mns.c: 943:     sendMessage4(OPC_PARAN, nn.bytes.hi, nn.bytes.lo, ste
      +                          p+1, getParameter(step+1));
 17660   00C112  C0BE  F1C2         	movff	_nn+1,sendMessage4@data1
 17661   00C116  C0BD  F1C3         	movff	_nn,sendMessage4@data2
 17662   00C11A  29D5               	incf	mnsTRrqnpnCallback@step& (0+255),w,b
 17663   00C11C  6FC4               	movwf	sendMessage4@data3& (0+255),b
 17664   00C11E  29D5               	incf	mnsTRrqnpnCallback@step& (0+255),w,b
 17665   00C120  EC24  F043         	call	_getParameter
 17666   00C124  0101               	movlb	1	; () banked
 17667   00C126  6FC5               	movwf	sendMessage4@data4& (0+255),b
 17668   00C128  0E9B               	movlw	155
 17669   00C12A  ECF9  F05F         	call	_sendMessage4
 17670                           
 17671                           ;../../VLCBlib_PIC/mns.c: 944:     return TIMED_RESPONSE_RESULT_NEXT;
 17672   00C12E  0E02               	movlw	2
 17673   00C130  0012               	return		;funcret
 17674   00C132                     __end_of_mnsTRrqnpnCallback:
 17675                           	callstack 0
 17676                           
 17677 ;; *************** function _sodTRCallback *****************
 17678 ;; Defined at:
 17679 ;;		line 403 in file "../universalEvents.c"
 17680 ;; Parameters:    Size  Location     Type
 17681 ;;  type            1    wreg     unsigned char 
 17682 ;;  serviceIndex    1   26[BANK1 ] unsigned char 
 17683 ;;  step            1   27[BANK1 ] unsigned char 
 17684 ;; Auto vars:     Size  Location     Type
 17685 ;;  type            1    0[COMRAM] unsigned char 
 17686 ;;  io              1   38[BANK1 ] unsigned char 
 17687 ;;  flags           1   37[BANK1 ] unsigned char 
 17688 ;;  event_invert    1   36[BANK1 ] enum E12761
 17689 ;;  value           1   35[BANK1 ] enum E12781
 17690 ;;  disable_off     1   34[BANK1 ] enum E12761
 17691 ;;  happeningInd    1   33[BANK1 ] unsigned char 
 17692 ;;  send_off_ok     1   30[BANK1 ] enum E12761
 17693 ;;  send_on_ok      1   29[BANK1 ] enum E12761
 17694 ;;  disable_SOD_    1   28[BANK1 ] enum E12761
 17695 ;; Return value:  Size  Location     Type
 17696 ;;                  1    wreg      enum E13016
 17697 ;; Registers used:
 17698 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17699 ;; Tracked objects:
 17700 ;;		On entry : 0/0
 17701 ;;		On exit  : 0/0
 17702 ;;		Unchanged: 0/0
 17703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17704 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17705 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17707 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17708 ;;Total ram usage:       13 bytes
 17709 ;; Hardware stack levels used: 1
 17710 ;; Hardware stack levels required when called: 19
 17711 ;; This function calls:
 17712 ;;		_APP_GetEventState
 17713 ;;		___awdiv
 17714 ;;		_getNV
 17715 ;;		_sendInvertedProducedEvent
 17716 ;; This function is called by:
 17717 ;;		_doSOD
 17718 ;;		_pollTimedResponse
 17719 ;; This function uses a non-reentrant model
 17720 ;;
 17721                           
 17722                           	psect	text48
 17723   008378                     __ptext48:
 17724                           	callstack 0
 17725   008378                     _sodTRCallback:
 17726                           	callstack 9
 17727                           
 17728                           ;../universalEvents.c: 404:     uint8_t io;;../universalEvents.c: 405:     uint8_t happe
      +                          ningIndex;;../universalEvents.c: 406:     Boolean disable_off;;../universalEvents.c: 407
      +                          :  Boolean send_on_ok;;../universalEvents.c: 408:  Boolean send_off_ok;;../universalEven
      +                          ts.c: 409:  Boolean event_inverted;;../universalEvents.c: 410:     Boolean disable_SOD_r
      +                          esponse;;../universalEvents.c: 411:     uint8_t flags;;../universalEvents.c: 412:     Ev
      +                          entState value;;../universalEvents.c: 415:     io = step/4;
 17729                           
 17730                           ;incstack = 0
 17731   008378  C1D5  F097         	movff	sodTRCallback@step,___awdiv@dividend
 17732   00837C  0100               	movlb	0	; () banked
 17733   00837E  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 17734   008380  0E00               	movlw	0
 17735   008382  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 17736   008384  0E04               	movlw	4
 17737   008386  6F99               	movwf	___awdiv@divisor& (0+255),b
 17738   008388  EC1C  F053         	call	___awdiv	;wreg free
 17739   00838C  0100               	movlb	0	; () banked
 17740   00838E  5197               	movf	?___awdiv& (0+255),w,b
 17741   008390  0101               	movlb	1	; () banked
 17742   008392  6FE0               	movwf	sodTRCallback@io& (0+255),b
 17743                           
 17744                           ; BSR set to: 1
 17745                           ;../universalEvents.c: 416:     if (io >= 16) {
 17746   008394  0E0F               	movlw	15
 17747   008396  65E0               	cpfsgt	sodTRCallback@io& (0+255),b
 17748   008398  D002               	goto	l21571
 17749                           
 17750                           ; BSR set to: 1
 17751                           ;../universalEvents.c: 417:         return TIMED_RESPONSE_RESULT_FINISHED;
 17752   00839A  0E00               	movlw	0
 17753   00839C  0012               	return	
 17754   00839E                     l21571:
 17755                           
 17756                           ; BSR set to: 1
 17757                           ;../universalEvents.c: 419:     happeningIndex = step%4;
 17758   00839E  51D5               	movf	sodTRCallback@step& (0+255),w,b
 17759   0083A0  0B03               	andlw	3
 17760   0083A2  6FDB               	movwf	sodTRCallback@happeningIndex& (0+255),b
 17761                           
 17762                           ; BSR set to: 1
 17763                           ;../universalEvents.c: 420:     flags = (uint8_t)getNV((16 + 7*(io) + 1));;
 17764   0083A4  51E0               	movf	sodTRCallback@io& (0+255),w,b
 17765   0083A6  0D07               	mullw	7
 17766   0083A8  50F3               	movf	243,w,c
 17767   0083AA  0F11               	addlw	17
 17768   0083AC  EC52  F05E         	call	_getNV
 17769   0083B0  0100               	movlb	0	; () banked
 17770   0083B2  518D               	movf	?_getNV& (0+255),w,b
 17771   0083B4  0101               	movlb	1	; () banked
 17772   0083B6  6FDF               	movwf	sodTRCallback@flags& (0+255),b
 17773                           
 17774                           ; BSR set to: 1
 17775                           ;../universalEvents.c: 421:     disable_SOD_response = flags & 0x20;
 17776   0083B8  51DF               	movf	sodTRCallback@flags& (0+255),w,b
 17777   0083BA  0B20               	andlw	32
 17778   0083BC  6FD6               	movwf	sodTRCallback@disable_SOD_response& (0+255),b
 17779                           
 17780                           ; BSR set to: 1
 17781                           ;../universalEvents.c: 423:     event_inverted = flags & 0x40;
 17782   0083BE  51DF               	movf	sodTRCallback@flags& (0+255),w,b
 17783   0083C0  0B40               	andlw	64
 17784   0083C2  6FDE               	movwf	sodTRCallback@event_inverted& (0+255),b
 17785                           
 17786                           ; BSR set to: 1
 17787                           ;../universalEvents.c: 424:     disable_off = flags & 0x08;
 17788   0083C4  51DF               	movf	sodTRCallback@flags& (0+255),w,b
 17789   0083C6  0B08               	andlw	8
 17790   0083C8  6FDC               	movwf	sodTRCallback@disable_off& (0+255),b
 17791                           
 17792                           ; BSR set to: 1
 17793                           ;../universalEvents.c: 425:     send_on_ok = !( disable_off && event_inverted );
 17794   0083CA  0E01               	movlw	1
 17795   0083CC  6FD9               	movwf	_sodTRCallback$1424& (0+255),b
 17796                           
 17797                           ; BSR set to: 1
 17798   0083CE  51DC               	movf	sodTRCallback@disable_off& (0+255),w,b
 17799   0083D0  B4D8               	btfsc	status,2,c
 17800   0083D2  D005               	goto	l21589
 17801                           
 17802                           ; BSR set to: 1
 17803   0083D4  51DE               	movf	sodTRCallback@event_inverted& (0+255),w,b
 17804   0083D6  B4D8               	btfsc	status,2,c
 17805   0083D8  D002               	goto	l21589
 17806                           
 17807                           ; BSR set to: 1
 17808   0083DA  0E00               	movlw	0
 17809   0083DC  6FD9               	movwf	_sodTRCallback$1424& (0+255),b
 17810   0083DE                     l21589:
 17811                           
 17812                           ; BSR set to: 1
 17813   0083DE  C1D9  F1D7         	movff	_sodTRCallback$1424,sodTRCallback@send_on_ok
 17814                           
 17815                           ;../universalEvents.c: 426:     send_off_ok = !( disable_off && !event_inverted);
 17816   0083E2  0E01               	movlw	1
 17817   0083E4  6FDA               	movwf	_sodTRCallback$1425& (0+255),b
 17818   0083E6  51DC               	movf	sodTRCallback@disable_off& (0+255),w,b
 17819   0083E8  B4D8               	btfsc	status,2,c
 17820   0083EA  D005               	goto	l21595
 17821                           
 17822                           ; BSR set to: 1
 17823   0083EC  51DE               	movf	sodTRCallback@event_inverted& (0+255),w,b
 17824   0083EE  A4D8               	btfss	status,2,c
 17825   0083F0  D002               	goto	l21595
 17826                           
 17827                           ; BSR set to: 1
 17828   0083F2  0E00               	movlw	0
 17829   0083F4  6FDA               	movwf	_sodTRCallback$1425& (0+255),b
 17830   0083F6                     l21595:
 17831                           
 17832                           ; BSR set to: 1
 17833   0083F6  C1DA  F1D8         	movff	_sodTRCallback$1425,sodTRCallback@send_off_ok
 17834                           
 17835                           ; BSR set to: 1
 17836                           ;../universalEvents.c: 428:     value = APP_GetEventState((8 + 4*(io))+happeningIndex);
 17837   0083FA  51E0               	movf	sodTRCallback@io& (0+255),w,b
 17838   0083FC  0D04               	mullw	4
 17839   0083FE  50F3               	movf	243,w,c
 17840   008400  25DB               	addwf	sodTRCallback@happeningIndex& (0+255),w,b
 17841   008402  0F08               	addlw	8
 17842   008404  EC41  F01E         	call	_APP_GetEventState
 17843   008408  0101               	movlb	1	; () banked
 17844   00840A  6FDD               	movwf	sodTRCallback@value& (0+255),b
 17845                           
 17846                           ;../universalEvents.c: 430:     switch((uint8_t)getNV((16 + 7*(io) + 0))) {
 17847   00840C  D00C               	goto	l21609
 17848   00840E                     l21599:
 17849                           
 17850                           ; BSR set to: 0
 17851                           ;../universalEvents.c: 436:             if (disable_SOD_response) {
 17852   00840E  0101               	movlb	1	; () banked
 17853   008410  51D6               	movf	sodTRCallback@disable_SOD_response& (0+255),w,b
 17854   008412  B4D8               	btfsc	status,2,c
 17855   008414  D01C               	goto	l21611
 17856   008416                     u22160:
 17857                           
 17858                           ;../universalEvents.c: 437:                 return TIMED_RESPONSE_RESULT_NEXT;
 17859   008416  0E02               	movlw	2
 17860   008418  0012               	return	
 17861   00841A                     l21605:
 17862                           
 17863                           ; BSR set to: 0
 17864                           ;../universalEvents.c: 448:             send_on_ok = TRUE;
 17865   00841A  0E01               	movlw	1
 17866   00841C  0101               	movlb	1	; () banked
 17867   00841E  6FD7               	movwf	sodTRCallback@send_on_ok& (0+255),b
 17868                           
 17869                           ;../universalEvents.c: 449:             send_off_ok = TRUE;
 17870   008420  0E01               	movlw	1
 17871   008422  6FD8               	movwf	sodTRCallback@send_off_ok& (0+255),b
 17872                           
 17873                           ;../universalEvents.c: 450:             break;
 17874   008424  D014               	goto	l21611
 17875   008426                     l21609:
 17876                           
 17877                           ; BSR set to: 1
 17878   008426  51E0               	movf	sodTRCallback@io& (0+255),w,b
 17879   008428  0D07               	mullw	7
 17880   00842A  50F3               	movf	243,w,c
 17881   00842C  0F10               	addlw	16
 17882   00842E  EC52  F05E         	call	_getNV
 17883   008432  0100               	movlb	0	; () banked
 17884   008434  518D               	movf	?_getNV& (0+255),w,b
 17885                           
 17886                           ; Switch size 1, requested type "simple"
 17887                           ; Number of cases is 4, Range of values is 0 to 4
 17888                           ; switch strategies available:
 17889                           ; Name         Instructions Cycles
 17890                           ; simple_byte           13     7 (average)
 17891                           ;	Chosen strategy is simple_byte
 17892   008436  0A00               	xorlw	0	; case 0
 17893   008438  B4D8               	btfsc	status,2,c
 17894   00843A  D7E9               	goto	l21599
 17895   00843C  0A02               	xorlw	2	; case 2
 17896   00843E  B4D8               	btfsc	status,2,c
 17897   008440  D7EC               	goto	l21605
 17898   008442  0A01               	xorlw	1	; case 3
 17899   008444  B4D8               	btfsc	status,2,c
 17900   008446  D7E9               	goto	l21605
 17901   008448  0A07               	xorlw	7	; case 4
 17902   00844A  B4D8               	btfsc	status,2,c
 17903   00844C  D7E6               	goto	l21605
 17904   00844E                     l21611:
 17905                           
 17906                           ;../universalEvents.c: 453:     if (value != EVENT_UNKNOWN) {
 17907   00844E  0101               	movlb	1	; () banked
 17908   008450  29DD               	incf	sodTRCallback@value& (0+255),w,b
 17909   008452  B4D8               	btfsc	status,2,c
 17910   008454  D7E0               	goto	u22160
 17911                           
 17912                           ; BSR set to: 1
 17913                           ;../universalEvents.c: 454:         sendInvertedProducedEvent((8 + 4*(io))+happeningInde
      +                          x, value, event_inverted, send_on_ok, send_off_ok);
 17914   008456  C1DD  F1CC         	movff	sodTRCallback@value,sendInvertedProducedEvent@state
 17915   00845A  C1DE  F1CD         	movff	sodTRCallback@event_inverted,sendInvertedProducedEvent@invert
 17916   00845E  C1D7  F1CE         	movff	sodTRCallback@send_on_ok,sendInvertedProducedEvent@can_send_on
 17917   008462  C1D8  F1CF         	movff	sodTRCallback@send_off_ok,sendInvertedProducedEvent@can_send_off
 17918   008466  51E0               	movf	sodTRCallback@io& (0+255),w,b
 17919   008468  0D04               	mullw	4
 17920   00846A  50F3               	movf	243,w,c
 17921   00846C  25DB               	addwf	sodTRCallback@happeningIndex& (0+255),w,b
 17922   00846E  0F08               	addlw	8
 17923   008470  ECF7  F05C         	call	_sendInvertedProducedEvent
 17924   008474  D7D0               	goto	u22160
 17925   008476                     __end_of_sodTRCallback:
 17926                           	callstack 0
 17927                           
 17928 ;; *************** function _APP_GetEventState *****************
 17929 ;; Defined at:
 17930 ;;		line 427 in file "../main.c"
 17931 ;; Parameters:    Size  Location     Type
 17932 ;;  h               1    wreg     unsigned char 
 17933 ;; Auto vars:     Size  Location     Type
 17934 ;;  h               1    2[BANK1 ] unsigned char 
 17935 ;;  happeningInd    1    3[BANK1 ] unsigned char 
 17936 ;;  disable_off     1    1[BANK1 ] enum E12710
 17937 ;;  flags           1    0[BANK1 ] unsigned char 
 17938 ;; Return value:  Size  Location     Type
 17939 ;;                  1    wreg      enum E12730
 17940 ;; Registers used:
 17941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17942 ;; Tracked objects:
 17943 ;;		On entry : 0/0
 17944 ;;		On exit  : 0/0
 17945 ;;		Unchanged: 0/0
 17946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17948 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17949 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17950 ;;      Totals:         0       7       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17951 ;;Total ram usage:       11 bytes
 17952 ;; Hardware stack levels used: 1
 17953 ;; Hardware stack levels required when called: 14
 17954 ;; This function calls:
 17955 ;;		___awdiv
 17956 ;;		_getNV
 17957 ;;		_readNVM
 17958 ;; This function is called by:
 17959 ;;		_sodTRCallback
 17960 ;;		_producerProcessMessage
 17961 ;; This function uses a non-reentrant model
 17962 ;;
 17963                           
 17964                           	psect	text49
 17965   003C82                     __ptext49:
 17966                           	callstack 0
 17967   003C82                     _APP_GetEventState:
 17968                           	callstack 14
 17969                           
 17970                           ;incstack = 0
 17971                           ;APP_GetEventState@h stored from wreg
 17972   003C82  0101               	movlb	1	; () banked
 17973   003C84  6FBC               	movwf	APP_GetEventState@h& (0+255),b
 17974                           
 17975                           ;../main.c: 428:     uint8_t flags;;../main.c: 429:     uint8_t happeningIndex;;../main.
      +                          c: 430:     Boolean disable_off;;../main.c: 432:     io = (((h)-8)/4);
 17976   003C86  0EF8               	movlw	248
 17977   003C88  0101               	movlb	1	; () banked
 17978   003C8A  25BC               	addwf	APP_GetEventState@h& (0+255),w,b
 17979   003C8C  0100               	movlb	0	; () banked
 17980   003C8E  6F97               	movwf	___awdiv@dividend& (0+255),b
 17981   003C90  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 17982   003C92  0EFF               	movlw	255
 17983   003C94  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 17984   003C96  0E00               	movlw	0
 17985   003C98  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 17986   003C9A  0E04               	movlw	4
 17987   003C9C  6F99               	movwf	___awdiv@divisor& (0+255),b
 17988   003C9E  EC1C  F053         	call	___awdiv	;wreg free
 17989   003CA2  0100               	movlb	0	; () banked
 17990   003CA4  5197               	movf	?___awdiv& (0+255),w,b
 17991   003CA6  6FCF               	movwf	_io& (0+255),b
 17992                           
 17993                           ; BSR set to: 0
 17994                           ;../main.c: 433:     if (io >= 16) {
 17995   003CA8  0E0F               	movlw	15
 17996   003CAA  65CF               	cpfsgt	_io& (0+255),b
 17997   003CAC  D002               	goto	l20395
 17998   003CAE                     u20410:
 17999                           
 18000                           ;../main.c: 434:         return EVENT_UNKNOWN;
 18001   003CAE  0EFF               	movlw	255
 18002   003CB0  0012               	return	
 18003   003CB2                     l20395:
 18004                           
 18005                           ; BSR set to: 0
 18006                           ;../main.c: 436:     happeningIndex = (((h)-8)%4);
 18007   003CB2  0101               	movlb	1	; () banked
 18008   003CB4  51BC               	movf	APP_GetEventState@h& (0+255),w,b
 18009   003CB6  0FF8               	addlw	248
 18010   003CB8  0B03               	andlw	3
 18011   003CBA  6FBD               	movwf	APP_GetEventState@happeningIndex& (0+255),b
 18012                           
 18013                           ; BSR set to: 1
 18014                           ;../main.c: 437:     flags = (uint8_t)getNV((16 + 7*(io) + 1));
 18015   003CBC  0100               	movlb	0	; () banked
 18016   003CBE  51CF               	movf	_io& (0+255),w,b
 18017   003CC0  0D07               	mullw	7
 18018   003CC2  50F3               	movf	243,w,c
 18019   003CC4  0F11               	addlw	17
 18020   003CC6  EC52  F05E         	call	_getNV
 18021   003CCA  0100               	movlb	0	; () banked
 18022   003CCC  518D               	movf	?_getNV& (0+255),w,b
 18023   003CCE  0101               	movlb	1	; () banked
 18024   003CD0  6FBA               	movwf	APP_GetEventState@flags& (0+255),b
 18025                           
 18026                           ; BSR set to: 1
 18027                           ;../main.c: 438:     disable_off = flags & 0x08;
 18028   003CD2  51BA               	movf	APP_GetEventState@flags& (0+255),w,b
 18029   003CD4  0B08               	andlw	8
 18030   003CD6  6FBB               	movwf	APP_GetEventState@disable_off& (0+255),b
 18031                           
 18032                           ;../main.c: 440:     switch((uint8_t)getNV((16 + 7*(io) + 0))) {
 18033   003CD8  D16B               	goto	l20473
 18034   003CDA                     l20401:
 18035                           
 18036                           ; BSR set to: 1
 18037                           ;../main.c: 445:                     return outputState[io]?EVENT_ON:EVENT_OFF;
 18038   003CDA  0EB4               	movlw	low _outputState
 18039   003CDC  0100               	movlb	0	; () banked
 18040   003CDE  25CF               	addwf	_io& (0+255),w,b
 18041   003CE0  6ED9               	movwf	fsr2l,c
 18042   003CE2  6ADA               	clrf	fsr2h,c
 18043   003CE4  0E02               	movlw	high _outputState
 18044   003CE6  22DA               	addwfc	fsr2h,f,c
 18045   003CE8  50DF               	movf	indf2,w,c
 18046   003CEA  B4D8               	btfsc	status,2,c
 18047   003CEC  D002               	goto	u20420
 18048   003CEE  0E01               	movlw	1
 18049   003CF0  0012               	return	
 18050   003CF2                     u20420:
 18051   003CF2  0E00               	movlw	0
 18052   003CF4  0012               	return	
 18053   003CF6                     l20405:
 18054                           
 18055                           ; BSR set to: 1
 18056                           ;../main.c: 448:                     if (disable_off) {
 18057   003CF6  51BB               	movf	APP_GetEventState@disable_off& (0+255),w,b
 18058   003CF8  B4D8               	btfsc	status,2,c
 18059   003CFA  D7D9               	goto	u20410
 18060                           
 18061                           ; BSR set to: 1
 18062                           ;../main.c: 449:                         return (outputState[io]==0)?EVENT_ON:EVENT_OFF;
 18063   003CFC  0EB4               	movlw	low _outputState
 18064   003CFE  0100               	movlb	0	; () banked
 18065   003D00  25CF               	addwf	_io& (0+255),w,b
 18066   003D02  6ED9               	movwf	fsr2l,c
 18067   003D04  6ADA               	clrf	fsr2h,c
 18068   003D06  0E02               	movlw	high _outputState
 18069   003D08  22DA               	addwfc	fsr2h,f,c
 18070   003D0A  50DF               	movf	indf2,w,c
 18071   003D0C  A4D8               	btfss	status,2,c
 18072   003D0E  D002               	goto	u20450
 18073   003D10  0E01               	movlw	1
 18074   003D12  0012               	return	
 18075   003D14                     u20450:
 18076   003D14  0E00               	movlw	0
 18077   003D16  0012               	return	
 18078   003D18                     l20413:
 18079                           
 18080                           ; BSR set to: 0
 18081   003D18  0101               	movlb	1	; () banked
 18082   003D1A  51BD               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 18083                           
 18084                           ; Switch size 1, requested type "simple"
 18085                           ; Number of cases is 2, Range of values is 0 to 1
 18086                           ; switch strategies available:
 18087                           ; Name         Instructions Cycles
 18088                           ; simple_byte            7     4 (average)
 18089                           ;	Chosen strategy is simple_byte
 18090   003D1C  0A00               	xorlw	0	; case 0
 18091   003D1E  B4D8               	btfsc	status,2,c
 18092   003D20  D7DC               	goto	l20401
 18093   003D22  0A01               	xorlw	1	; case 1
 18094   003D24  B4D8               	btfsc	status,2,c
 18095   003D26  D7E7               	goto	l20405
 18096   003D28  D7C2               	goto	u20410
 18097   003D2A                     l20415:
 18098                           
 18099                           ; BSR set to: 1
 18100                           ;../main.c: 460:                     return (readNVM(EEPROM_NVM_TYPE, ((eeprom_address_t
      +                          )((0x3FF -8))-25)+io)!=2)?EVENT_ON:EVENT_OFF;
 18101   003D2A  0EDE               	movlw	222
 18102   003D2C  0100               	movlb	0	; () banked
 18103   003D2E  25CF               	addwf	_io& (0+255),w,b
 18104   003D30  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 18105   003D32  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 18106   003D34  0E03               	movlw	3
 18107   003D36  23A0               	addwfc	(??_APP_GetEventState+1)& (0+255),f,b
 18108   003D38  C09F  F091         	movff	??_APP_GetEventState,readNVM@index
 18109   003D3C  C0A0  F092         	movff	??_APP_GetEventState+1,readNVM@index+1
 18110   003D40  6B93               	clrf	(readNVM@index+2)& (0+255),b
 18111   003D42  0E00               	movlw	0
 18112   003D44  ECD0  F059         	call	_readNVM
 18113   003D48  0E02               	movlw	2
 18114   003D4A  0100               	movlb	0	; () banked
 18115   003D4C  1991               	xorwf	?_readNVM& (0+255),w,b
 18116   003D4E  1192               	iorwf	(?_readNVM+1)& (0+255),w,b
 18117   003D50  B4D8               	btfsc	status,2,c
 18118   003D52  D002               	goto	u20470
 18119   003D54  0E01               	movlw	1
 18120   003D56  0012               	return	
 18121   003D58                     u20470:
 18122   003D58  0E00               	movlw	0
 18123   003D5A  0012               	return	
 18124   003D5C                     l20421:
 18125                           
 18126                           ; BSR set to: 0
 18127   003D5C  0101               	movlb	1	; () banked
 18128   003D5E  51BD               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 18129                           
 18130                           ; Switch size 1, requested type "simple"
 18131                           ; Number of cases is 1, Range of values is 0 to 0
 18132                           ; switch strategies available:
 18133                           ; Name         Instructions Cycles
 18134                           ; simple_byte            4     3 (average)
 18135                           ;	Chosen strategy is simple_byte
 18136   003D60  0A00               	xorlw	0	; case 0
 18137   003D62  B4D8               	btfsc	status,2,c
 18138   003D64  D7E2               	goto	l20415
 18139   003D66  D7A3               	goto	u20410
 18140   003D68                     l20423:
 18141                           
 18142                           ; BSR set to: 1
 18143                           ;../main.c: 467:                     return (currentPos[io] == (uint8_t)getNV((16 + 7*(i
      +                          o) + 2)))?EVENT_ON:EVENT_OFF;
 18144   003D68  0100               	movlb	0	; () banked
 18145   003D6A  51CF               	movf	_io& (0+255),w,b
 18146   003D6C  0D07               	mullw	7
 18147   003D6E  50F3               	movf	243,w,c
 18148   003D70  0F12               	addlw	18
 18149   003D72  EC52  F05E         	call	_getNV
 18150   003D76  0100               	movlb	0	; () banked
 18151   003D78  51CF               	movf	_io& (0+255),w,b
 18152   003D7A  0FA9               	addlw	low _currentPos
 18153   003D7C  6ED9               	movwf	fsr2l,c
 18154   003D7E  6ADA               	clrf	fsr2h,c
 18155   003D80  50DE               	movf	postinc2,w,c
 18156   003D82  198D               	xorwf	?_getNV& (0+255),w,b
 18157   003D84  A4D8               	btfss	status,2,c
 18158   003D86  D002               	goto	u20490
 18159   003D88  0E01               	movlw	1
 18160   003D8A  0012               	return	
 18161   003D8C                     u20490:
 18162   003D8C  0E00               	movlw	0
 18163   003D8E  0012               	return	
 18164   003D90                     l20427:
 18165                           
 18166                           ; BSR set to: 1
 18167                           ;../main.c: 469:                     return (currentPos[io] == (uint8_t)getNV((16 + 7*(i
      +                          o) + 3)))?EVENT_ON:EVENT_OFF;
 18168   003D90  0100               	movlb	0	; () banked
 18169   003D92  51CF               	movf	_io& (0+255),w,b
 18170   003D94  0D07               	mullw	7
 18171   003D96  50F3               	movf	243,w,c
 18172   003D98  0F13               	addlw	19
 18173   003D9A  EC52  F05E         	call	_getNV
 18174   003D9E  0100               	movlb	0	; () banked
 18175   003DA0  51CF               	movf	_io& (0+255),w,b
 18176   003DA2  0FA9               	addlw	low _currentPos
 18177   003DA4  6ED9               	movwf	fsr2l,c
 18178   003DA6  6ADA               	clrf	fsr2h,c
 18179   003DA8  50DE               	movf	postinc2,w,c
 18180   003DAA  198D               	xorwf	?_getNV& (0+255),w,b
 18181   003DAC  A4D8               	btfss	status,2,c
 18182   003DAE  D002               	goto	u20510
 18183   003DB0  0E01               	movlw	1
 18184   003DB2  0012               	return	
 18185   003DB4                     u20510:
 18186   003DB4  0E00               	movlw	0
 18187   003DB6  0012               	return	
 18188   003DB8                     l20431:
 18189                           
 18190                           ; BSR set to: 1
 18191                           ;../main.c: 472:                     return (currentPos[io] >= ((uint8_t)getNV((16 + 7*(
      +                          io) + 3)))/2 +
 18192   003DB8  0100               	movlb	0	; () banked
 18193   003DBA  51CF               	movf	_io& (0+255),w,b
 18194   003DBC  0D07               	mullw	7
 18195   003DBE  50F3               	movf	243,w,c
 18196   003DC0  0F13               	addlw	19
 18197   003DC2  EC52  F05E         	call	_getNV
 18198   003DC6  0100               	movlb	0	; () banked
 18199   003DC8  518D               	movf	?_getNV& (0+255),w,b
 18200   003DCA  6F97               	movwf	___awdiv@dividend& (0+255),b
 18201   003DCC  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 18202   003DCE  0E00               	movlw	0
 18203   003DD0  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18204   003DD2  0E02               	movlw	2
 18205   003DD4  6F99               	movwf	___awdiv@divisor& (0+255),b
 18206   003DD6  EC1C  F053         	call	___awdiv	;wreg free
 18207   003DDA  C097  F09F         	movff	?___awdiv,??_APP_GetEventState
 18208   003DDE  C098  F0A0         	movff	?___awdiv+1,??_APP_GetEventState+1
 18209   003DE2  0100               	movlb	0	; () banked
 18210   003DE4  51CF               	movf	_io& (0+255),w,b
 18211   003DE6  0D07               	mullw	7
 18212   003DE8  50F3               	movf	243,w,c
 18213   003DEA  0F12               	addlw	18
 18214   003DEC  EC52  F05E         	call	_getNV
 18215   003DF0  0100               	movlb	0	; () banked
 18216   003DF2  518D               	movf	?_getNV& (0+255),w,b
 18217   003DF4  6F97               	movwf	___awdiv@dividend& (0+255),b
 18218   003DF6  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 18219   003DF8  0E00               	movlw	0
 18220   003DFA  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18221   003DFC  0E02               	movlw	2
 18222   003DFE  6F99               	movwf	___awdiv@divisor& (0+255),b
 18223   003E00  EC1C  F053         	call	___awdiv	;wreg free
 18224   003E04  0100               	movlb	0	; () banked
 18225   003E06  5197               	movf	?___awdiv& (0+255),w,b
 18226   003E08  259F               	addwf	??_APP_GetEventState& (0+255),w,b
 18227   003E0A  6FA1               	movwf	(??_APP_GetEventState+2)& (0+255),b
 18228   003E0C  5198               	movf	(?___awdiv+1)& (0+255),w,b
 18229   003E0E  21A0               	addwfc	(??_APP_GetEventState+1)& (0+255),w,b
 18230   003E10  6FA2               	movwf	(??_APP_GetEventState+3)& (0+255),b
 18231   003E12  51CF               	movf	_io& (0+255),w,b
 18232   003E14  0FA9               	addlw	low _currentPos
 18233   003E16  6ED9               	movwf	fsr2l,c
 18234   003E18  6ADA               	clrf	fsr2h,c
 18235   003E1A  50DF               	movf	indf2,w,c
 18236   003E1C  6FA3               	movwf	(??_APP_GetEventState+4)& (0+255),b
 18237   003E1E  6BA4               	clrf	(??_APP_GetEventState+5)& (0+255),b
 18238   003E20  51A1               	movf	(??_APP_GetEventState+2)& (0+255),w,b
 18239   003E22  5DA3               	subwf	(??_APP_GetEventState+4)& (0+255),w,b
 18240   003E24  51A4               	movf	(??_APP_GetEventState+5)& (0+255),w,b
 18241   003E26  0A80               	xorlw	128
 18242   003E28  6FA5               	movwf	(??_APP_GetEventState+6)& (0+255),b
 18243   003E2A  51A2               	movf	(??_APP_GetEventState+3)& (0+255),w,b
 18244   003E2C  0A80               	xorlw	128
 18245   003E2E  59A5               	subwfb	(??_APP_GetEventState+6)& (0+255),w,b
 18246   003E30  A0D8               	btfss	status,0,c
 18247   003E32  D002               	goto	u20530
 18248   003E34  0E01               	movlw	1
 18249   003E36  0012               	return	
 18250   003E38                     u20530:
 18251   003E38  0E00               	movlw	0
 18252   003E3A  0012               	return	
 18253   003E3C                     l20437:
 18254                           
 18255                           ; BSR set to: 0
 18256   003E3C  0101               	movlb	1	; () banked
 18257   003E3E  51BD               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 18258                           
 18259                           ; Switch size 1, requested type "simple"
 18260                           ; Number of cases is 3, Range of values is 0 to 2
 18261                           ; switch strategies available:
 18262                           ; Name         Instructions Cycles
 18263                           ; simple_byte           10     6 (average)
 18264                           ;	Chosen strategy is simple_byte
 18265   003E40  0A00               	xorlw	0	; case 0
 18266   003E42  B4D8               	btfsc	status,2,c
 18267   003E44  D791               	goto	l20423
 18268   003E46  0A01               	xorlw	1	; case 1
 18269   003E48  B4D8               	btfsc	status,2,c
 18270   003E4A  D7B6               	goto	l20431
 18271   003E4C  0A03               	xorlw	3	; case 2
 18272   003E4E  B4D8               	btfsc	status,2,c
 18273   003E50  D79F               	goto	l20427
 18274   003E52  D72D               	goto	u20410
 18275   003E54                     l20439:
 18276                           
 18277                           ; BSR set to: 1
 18278                           ;../main.c: 480:                     return ((uint8_t)readNVM(EEPROM_NVM_TYPE, ((eeprom_
      +                          address_t)((0x3FF -8))-25)+io))?EVENT_ON:EVENT_OFF;
 18279   003E54  0EDE               	movlw	222
 18280   003E56  0100               	movlb	0	; () banked
 18281   003E58  25CF               	addwf	_io& (0+255),w,b
 18282   003E5A  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 18283   003E5C  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 18284   003E5E  0E03               	movlw	3
 18285   003E60  23A0               	addwfc	(??_APP_GetEventState+1)& (0+255),f,b
 18286   003E62  C09F  F091         	movff	??_APP_GetEventState,readNVM@index
 18287   003E66  C0A0  F092         	movff	??_APP_GetEventState+1,readNVM@index+1
 18288   003E6A  6B93               	clrf	(readNVM@index+2)& (0+255),b
 18289   003E6C  0E00               	movlw	0
 18290   003E6E  ECD0  F059         	call	_readNVM
 18291   003E72  0100               	movlb	0	; () banked
 18292   003E74  6791               	tstfsz	?_readNVM& (0+255),b
 18293   003E76  0E01               	movlw	1
 18294   003E78  0012               	return	
 18295   003E7A                     l20445:
 18296                           
 18297                           ; BSR set to: 0
 18298   003E7A  0101               	movlb	1	; () banked
 18299   003E7C  51BD               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 18300                           
 18301                           ; Switch size 1, requested type "simple"
 18302                           ; Number of cases is 1, Range of values is 0 to 0
 18303                           ; switch strategies available:
 18304                           ; Name         Instructions Cycles
 18305                           ; simple_byte            4     3 (average)
 18306                           ;	Chosen strategy is simple_byte
 18307   003E7E  0A00               	xorlw	0	; case 0
 18308   003E80  B4D8               	btfsc	status,2,c
 18309   003E82  D7E8               	goto	l20439
 18310   003E84  D714               	goto	u20410
 18311   003E86                     l20447:
 18312                           
 18313                           ; BSR set to: 1
 18314                           ;../main.c: 488:                     return (currentPos[io] == getNV((16 + 7*(io) + 3)))
      +                          ?EVENT_ON:EVENT_OFF;
 18315   003E86  0100               	movlb	0	; () banked
 18316   003E88  51CF               	movf	_io& (0+255),w,b
 18317   003E8A  0D07               	mullw	7
 18318   003E8C  50F3               	movf	243,w,c
 18319   003E8E  0F13               	addlw	19
 18320   003E90  EC52  F05E         	call	_getNV
 18321   003E94  0100               	movlb	0	; () banked
 18322   003E96  51CF               	movf	_io& (0+255),w,b
 18323   003E98  0FA9               	addlw	low _currentPos
 18324   003E9A  6ED9               	movwf	fsr2l,c
 18325   003E9C  6ADA               	clrf	fsr2h,c
 18326   003E9E  50DF               	movf	indf2,w,c
 18327   003EA0  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 18328   003EA2  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 18329   003EA4  518D               	movf	?_getNV& (0+255),w,b
 18330   003EA6  199F               	xorwf	??_APP_GetEventState& (0+255),w,b
 18331   003EA8  E106               	bnz	u20570
 18332   003EAA  518E               	movf	(?_getNV+1)& (0+255),w,b
 18333   003EAC  19A0               	xorwf	(??_APP_GetEventState+1)& (0+255),w,b
 18334   003EAE  A4D8               	btfss	status,2,c
 18335   003EB0  D002               	goto	u20570
 18336   003EB2  0E01               	movlw	1
 18337   003EB4  0012               	return	
 18338   003EB6                     u20570:
 18339   003EB6  0E00               	movlw	0
 18340   003EB8  0012               	return	
 18341   003EBA                     l20451:
 18342                           
 18343                           ; BSR set to: 1
 18344                           ;../main.c: 490:                     return (currentPos[io] == getNV((16 + 7*(io) + 4)))
      +                          ?EVENT_ON:EVENT_OFF;
 18345   003EBA  0100               	movlb	0	; () banked
 18346   003EBC  51CF               	movf	_io& (0+255),w,b
 18347   003EBE  0D07               	mullw	7
 18348   003EC0  50F3               	movf	243,w,c
 18349   003EC2  0F14               	addlw	20
 18350   003EC4  EC52  F05E         	call	_getNV
 18351   003EC8  0100               	movlb	0	; () banked
 18352   003ECA  51CF               	movf	_io& (0+255),w,b
 18353   003ECC  0FA9               	addlw	low _currentPos
 18354   003ECE  6ED9               	movwf	fsr2l,c
 18355   003ED0  6ADA               	clrf	fsr2h,c
 18356   003ED2  50DF               	movf	indf2,w,c
 18357   003ED4  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 18358   003ED6  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 18359   003ED8  518D               	movf	?_getNV& (0+255),w,b
 18360   003EDA  199F               	xorwf	??_APP_GetEventState& (0+255),w,b
 18361   003EDC  E106               	bnz	u20590
 18362   003EDE  518E               	movf	(?_getNV+1)& (0+255),w,b
 18363   003EE0  19A0               	xorwf	(??_APP_GetEventState+1)& (0+255),w,b
 18364   003EE2  A4D8               	btfss	status,2,c
 18365   003EE4  D002               	goto	u20590
 18366   003EE6  0E01               	movlw	1
 18367   003EE8  0012               	return	
 18368   003EEA                     u20590:
 18369   003EEA  0E00               	movlw	0
 18370   003EEC  0012               	return	
 18371   003EEE                     l20455:
 18372                           
 18373                           ; BSR set to: 1
 18374                           ;../main.c: 493:                     if (getNV((16 + 7*(io) + 2)) > 2) {
 18375   003EEE  0100               	movlb	0	; () banked
 18376   003EF0  51CF               	movf	_io& (0+255),w,b
 18377   003EF2  0D07               	mullw	7
 18378   003EF4  50F3               	movf	243,w,c
 18379   003EF6  0F12               	addlw	18
 18380   003EF8  EC52  F05E         	call	_getNV
 18381   003EFC  0100               	movlb	0	; () banked
 18382   003EFE  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 18383   003F00  D6D6               	goto	u20410
 18384   003F02  518E               	movf	(?_getNV+1)& (0+255),w,b
 18385   003F04  E104               	bnz	u20610
 18386   003F06  0E03               	movlw	3
 18387   003F08  5D8D               	subwf	?_getNV& (0+255),w,b
 18388   003F0A  A0D8               	btfss	status,0,c
 18389   003F0C  D6D0               	goto	u20410
 18390   003F0E                     u20610:
 18391                           
 18392                           ; BSR set to: 0
 18393                           ;../main.c: 494:                         return (currentPos[io] == getNV((16 + 7*(io) + 
      +                          5)))?EVENT_ON:EVENT_OFF;
 18394   003F0E  51CF               	movf	_io& (0+255),w,b
 18395   003F10  0D07               	mullw	7
 18396   003F12  50F3               	movf	243,w,c
 18397   003F14  0F15               	addlw	21
 18398   003F16  EC52  F05E         	call	_getNV
 18399   003F1A  0100               	movlb	0	; () banked
 18400   003F1C  51CF               	movf	_io& (0+255),w,b
 18401   003F1E  0FA9               	addlw	low _currentPos
 18402   003F20  6ED9               	movwf	fsr2l,c
 18403   003F22  6ADA               	clrf	fsr2h,c
 18404   003F24  50DF               	movf	indf2,w,c
 18405   003F26  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 18406   003F28  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 18407   003F2A  518D               	movf	?_getNV& (0+255),w,b
 18408   003F2C  199F               	xorwf	??_APP_GetEventState& (0+255),w,b
 18409   003F2E  E106               	bnz	u20620
 18410   003F30  518E               	movf	(?_getNV+1)& (0+255),w,b
 18411   003F32  19A0               	xorwf	(??_APP_GetEventState+1)& (0+255),w,b
 18412   003F34  A4D8               	btfss	status,2,c
 18413   003F36  D002               	goto	u20620
 18414   003F38  0E01               	movlw	1
 18415   003F3A  0012               	return	
 18416   003F3C                     u20620:
 18417   003F3C  0E00               	movlw	0
 18418   003F3E  0012               	return	
 18419   003F40                     l20461:
 18420                           
 18421                           ; BSR set to: 1
 18422                           ;../main.c: 498:                     if (getNV((16 + 7*(io) + 2)) > 3) {
 18423   003F40  0100               	movlb	0	; () banked
 18424   003F42  51CF               	movf	_io& (0+255),w,b
 18425   003F44  0D07               	mullw	7
 18426   003F46  50F3               	movf	243,w,c
 18427   003F48  0F12               	addlw	18
 18428   003F4A  EC52  F05E         	call	_getNV
 18429   003F4E  0100               	movlb	0	; () banked
 18430   003F50  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 18431   003F52  D6AD               	goto	u20410
 18432   003F54  518E               	movf	(?_getNV+1)& (0+255),w,b
 18433   003F56  E104               	bnz	u20640
 18434   003F58  0E04               	movlw	4
 18435   003F5A  5D8D               	subwf	?_getNV& (0+255),w,b
 18436   003F5C  A0D8               	btfss	status,0,c
 18437   003F5E  D6A7               	goto	u20410
 18438   003F60                     u20640:
 18439                           
 18440                           ; BSR set to: 0
 18441                           ;../main.c: 499:                         return (currentPos[io] == getNV((16 + 7*(io) + 
      +                          6)))?EVENT_ON:EVENT_OFF;
 18442   003F60  51CF               	movf	_io& (0+255),w,b
 18443   003F62  0D07               	mullw	7
 18444   003F64  50F3               	movf	243,w,c
 18445   003F66  0F16               	addlw	22
 18446   003F68  EC52  F05E         	call	_getNV
 18447   003F6C  0100               	movlb	0	; () banked
 18448   003F6E  51CF               	movf	_io& (0+255),w,b
 18449   003F70  0FA9               	addlw	low _currentPos
 18450   003F72  6ED9               	movwf	fsr2l,c
 18451   003F74  6ADA               	clrf	fsr2h,c
 18452   003F76  50DF               	movf	indf2,w,c
 18453   003F78  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 18454   003F7A  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 18455   003F7C  518D               	movf	?_getNV& (0+255),w,b
 18456   003F7E  199F               	xorwf	??_APP_GetEventState& (0+255),w,b
 18457   003F80  E106               	bnz	u20650
 18458   003F82  518E               	movf	(?_getNV+1)& (0+255),w,b
 18459   003F84  19A0               	xorwf	(??_APP_GetEventState+1)& (0+255),w,b
 18460   003F86  A4D8               	btfss	status,2,c
 18461   003F88  D002               	goto	u20650
 18462   003F8A  0E01               	movlw	1
 18463   003F8C  0012               	return	
 18464   003F8E                     u20650:
 18465   003F8E  0E00               	movlw	0
 18466   003F90  0012               	return	
 18467   003F92                     l20469:
 18468                           
 18469                           ; BSR set to: 0
 18470   003F92  0101               	movlb	1	; () banked
 18471   003F94  51BD               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 18472                           
 18473                           ; Switch size 1, requested type "simple"
 18474                           ; Number of cases is 4, Range of values is 0 to 3
 18475                           ; switch strategies available:
 18476                           ; Name         Instructions Cycles
 18477                           ; simple_byte           13     7 (average)
 18478                           ;	Chosen strategy is simple_byte
 18479   003F96  0A00               	xorlw	0	; case 0
 18480   003F98  B4D8               	btfsc	status,2,c
 18481   003F9A  D775               	goto	l20447
 18482   003F9C  0A01               	xorlw	1	; case 1
 18483   003F9E  B4D8               	btfsc	status,2,c
 18484   003FA0  D78C               	goto	l20451
 18485   003FA2  0A03               	xorlw	3	; case 2
 18486   003FA4  B4D8               	btfsc	status,2,c
 18487   003FA6  D7A3               	goto	l20455
 18488   003FA8  0A01               	xorlw	1	; case 3
 18489   003FAA  B4D8               	btfsc	status,2,c
 18490   003FAC  D7C9               	goto	l20461
 18491   003FAE  D67F               	goto	u20410
 18492   003FB0                     l20473:
 18493                           
 18494                           ; BSR set to: 1
 18495   003FB0  0100               	movlb	0	; () banked
 18496   003FB2  51CF               	movf	_io& (0+255),w,b
 18497   003FB4  0D07               	mullw	7
 18498   003FB6  50F3               	movf	243,w,c
 18499   003FB8  0F10               	addlw	16
 18500   003FBA  EC52  F05E         	call	_getNV
 18501   003FBE  0100               	movlb	0	; () banked
 18502   003FC0  518D               	movf	?_getNV& (0+255),w,b
 18503                           
 18504                           ; Switch size 1, requested type "simple"
 18505                           ; Number of cases is 5, Range of values is 0 to 4
 18506                           ; switch strategies available:
 18507                           ; Name         Instructions Cycles
 18508                           ; simple_byte           16     9 (average)
 18509                           ;	Chosen strategy is simple_byte
 18510   003FC2  0A00               	xorlw	0	; case 0
 18511   003FC4  B4D8               	btfsc	status,2,c
 18512   003FC6  D6A8               	goto	l20413
 18513   003FC8  0A01               	xorlw	1	; case 1
 18514   003FCA  B4D8               	btfsc	status,2,c
 18515   003FCC  D6C7               	goto	l20421
 18516   003FCE  0A03               	xorlw	3	; case 2
 18517   003FD0  B4D8               	btfsc	status,2,c
 18518   003FD2  D734               	goto	l20437
 18519   003FD4  0A01               	xorlw	1	; case 3
 18520   003FD6  B4D8               	btfsc	status,2,c
 18521   003FD8  D750               	goto	l20445
 18522   003FDA  0A07               	xorlw	7	; case 4
 18523   003FDC  B4D8               	btfsc	status,2,c
 18524   003FDE  D7D9               	goto	l20469
 18525   003FE0  D666               	goto	u20410
 18526   003FE2                     __end_of_APP_GetEventState:
 18527                           	callstack 0
 18528                           
 18529 ;; *************** function _numEv *****************
 18530 ;; Defined at:
 18531 ;;		line 1154 in file "../../VLCBlib_PIC/event_teach_large.c"
 18532 ;; Parameters:    Size  Location     Type
 18533 ;;  tableIndex      1    wreg     unsigned char 
 18534 ;; Auto vars:     Size  Location     Type
 18535 ;;  tableIndex      1   67[BANK0 ] unsigned char 
 18536 ;;  f               1   66[BANK0 ] struct .
 18537 ;;  num             1   65[BANK0 ] unsigned char 
 18538 ;; Return value:  Size  Location     Type
 18539 ;;                  1    wreg      unsigned char 
 18540 ;; Registers used:
 18541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18542 ;; Tracked objects:
 18543 ;;		On entry : 0/0
 18544 ;;		On exit  : 0/0
 18545 ;;		Unchanged: 0/0
 18546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18548 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18549 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18550 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18551 ;;Total ram usage:        7 bytes
 18552 ;; Hardware stack levels used: 1
 18553 ;; Hardware stack levels required when called: 15
 18554 ;; This function calls:
 18555 ;;		_readNVM
 18556 ;;		_validStart
 18557 ;; This function is called by:
 18558 ;;		_doReval
 18559 ;;		_doReqev
 18560 ;;		_reqevCallback
 18561 ;; This function uses a non-reentrant model
 18562 ;;
 18563                           
 18564                           	psect	text50
 18565   008AA8                     __ptext50:
 18566                           	callstack 0
 18567   008AA8                     _numEv:
 18568                           	callstack 12
 18569                           
 18570                           ;incstack = 0
 18571                           ;numEv@tableIndex stored from wreg
 18572   008AA8  0100               	movlb	0	; () banked
 18573   008AAA  6FA3               	movwf	numEv@tableIndex& (0+255),b
 18574                           
 18575                           ;../../VLCBlib_PIC/event_teach_large.c: 1155:     EventTableFlags f;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1156:     uint8_t num=0;
 18576   008AAC  0E00               	movlw	0
 18577   008AAE  0100               	movlb	0	; () banked
 18578   008AB0  6FA1               	movwf	numEv@num& (0+255),b
 18579                           
 18580                           ; BSR set to: 0
 18581                           ;../../VLCBlib_PIC/event_teach_large.c: 1157:     if ( ! validStart(tableIndex)) {
 18582   008AB2  51A3               	movf	numEv@tableIndex& (0+255),w,b
 18583   008AB4  EC39  F05C         	call	_validStart
 18584   008AB8  0900               	iorlw	0
 18585   008ABA  A4D8               	btfss	status,2,c
 18586   008ABC  D002               	goto	l21231
 18587   008ABE                     u21740:
 18588                           
 18589                           ;../../VLCBlib_PIC/event_teach_large.c: 1159:         return 0;
 18590   008ABE  0E00               	movlw	0
 18591   008AC0  0012               	return	
 18592   008AC2                     l21231:
 18593                           
 18594                           ;../../VLCBlib_PIC/event_teach_large.c: 1161:     f.asByte = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, 0xEF80 + 16*tableIndex+0);
 18595   008AC2  0100               	movlb	0	; () banked
 18596   008AC4  51A3               	movf	numEv@tableIndex& (0+255),w,b
 18597   008AC6  6F9D               	movwf	??_numEv& (0+255),b
 18598   008AC8  6B9E               	clrf	(??_numEv+1)& (0+255),b
 18599   008ACA  3B9D               	swapf	??_numEv& (0+255),f,b
 18600   008ACC  3B9E               	swapf	(??_numEv+1)& (0+255),f,b
 18601   008ACE  0EF0               	movlw	240
 18602   008AD0  179E               	andwf	(??_numEv+1)& (0+255),f,b
 18603   008AD2  519D               	movf	??_numEv& (0+255),w,b
 18604   008AD4  0B0F               	andlw	15
 18605   008AD6  139E               	iorwf	(??_numEv+1)& (0+255),f,b
 18606   008AD8  0EF0               	movlw	240
 18607   008ADA  179D               	andwf	??_numEv& (0+255),f,b
 18608   008ADC  0E80               	movlw	128
 18609   008ADE  259D               	addwf	??_numEv& (0+255),w,b
 18610   008AE0  6F9F               	movwf	(??_numEv+2)& (0+255),b
 18611   008AE2  0EEF               	movlw	239
 18612   008AE4  219E               	addwfc	(??_numEv+1)& (0+255),w,b
 18613   008AE6  6FA0               	movwf	(??_numEv+3)& (0+255),b
 18614   008AE8  C09F  F091         	movff	??_numEv+2,readNVM@index
 18615   008AEC  C0A0  F092         	movff	??_numEv+3,readNVM@index+1
 18616   008AF0  6B93               	clrf	(readNVM@index+2)& (0+255),b
 18617   008AF2  0E01               	movlw	1
 18618   008AF4  ECD0  F059         	call	_readNVM
 18619   008AF8  0100               	movlb	0	; () banked
 18620   008AFA  5191               	movf	?_readNVM& (0+255),w,b
 18621   008AFC  6FA2               	movwf	numEv@f& (0+255),b
 18622                           
 18623                           ;../../VLCBlib_PIC/event_teach_large.c: 1162:     while (f.continued) {
 18624   008AFE  D039               	goto	l21245
 18625   008B00                     l21233:
 18626                           
 18627                           ; BSR set to: 0
 18628                           ;../../VLCBlib_PIC/event_teach_large.c: 1163:         tableIndex = (uint8_t)readNVM(FLAS
      +                          H_NVM_TYPE, 0xEF80 + 16*tableIndex+1);
 18629   008B00  51A3               	movf	numEv@tableIndex& (0+255),w,b
 18630   008B02  0D10               	mullw	16
 18631   008B04  CFF3 F09D          	movff	prodl,??_numEv
 18632   008B08  CFF4 F09E          	movff	prodh,??_numEv+1
 18633   008B0C  0E81               	movlw	129
 18634   008B0E  259D               	addwf	??_numEv& (0+255),w,b
 18635   008B10  6F9F               	movwf	(??_numEv+2)& (0+255),b
 18636   008B12  0EEF               	movlw	239
 18637   008B14  219E               	addwfc	(??_numEv+1)& (0+255),w,b
 18638   008B16  6FA0               	movwf	(??_numEv+3)& (0+255),b
 18639   008B18  C09F  F091         	movff	??_numEv+2,readNVM@index
 18640   008B1C  C0A0  F092         	movff	??_numEv+3,readNVM@index+1
 18641   008B20  6B93               	clrf	(readNVM@index+2)& (0+255),b
 18642   008B22  0E01               	movlw	1
 18643   008B24  ECD0  F059         	call	_readNVM
 18644   008B28  0100               	movlb	0	; () banked
 18645   008B2A  5191               	movf	?_readNVM& (0+255),w,b
 18646   008B2C  6FA3               	movwf	numEv@tableIndex& (0+255),b
 18647                           
 18648                           ; BSR set to: 0
 18649                           ;../../VLCBlib_PIC/event_teach_large.c: 1164:         if (tableIndex == 0xff) {
 18650   008B2E  29A3               	incf	numEv@tableIndex& (0+255),w,b
 18651   008B30  B4D8               	btfsc	status,2,c
 18652   008B32  D7C5               	goto	u21740
 18653                           
 18654                           ; BSR set to: 0
 18655                           ;../../VLCBlib_PIC/event_teach_large.c: 1167:         f.asByte = (uint8_t)readNVM(FLASH_
      +                          NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 18656   008B34  51A3               	movf	numEv@tableIndex& (0+255),w,b
 18657   008B36  6F9D               	movwf	??_numEv& (0+255),b
 18658   008B38  6B9E               	clrf	(??_numEv+1)& (0+255),b
 18659   008B3A  3B9D               	swapf	??_numEv& (0+255),f,b
 18660   008B3C  3B9E               	swapf	(??_numEv+1)& (0+255),f,b
 18661   008B3E  0EF0               	movlw	240
 18662   008B40  179E               	andwf	(??_numEv+1)& (0+255),f,b
 18663   008B42  519D               	movf	??_numEv& (0+255),w,b
 18664   008B44  0B0F               	andlw	15
 18665   008B46  139E               	iorwf	(??_numEv+1)& (0+255),f,b
 18666   008B48  0EF0               	movlw	240
 18667   008B4A  179D               	andwf	??_numEv& (0+255),f,b
 18668   008B4C  0E80               	movlw	128
 18669   008B4E  259D               	addwf	??_numEv& (0+255),w,b
 18670   008B50  6F9F               	movwf	(??_numEv+2)& (0+255),b
 18671   008B52  0EEF               	movlw	239
 18672   008B54  219E               	addwfc	(??_numEv+1)& (0+255),w,b
 18673   008B56  6FA0               	movwf	(??_numEv+3)& (0+255),b
 18674   008B58  C09F  F091         	movff	??_numEv+2,readNVM@index
 18675   008B5C  C0A0  F092         	movff	??_numEv+3,readNVM@index+1
 18676   008B60  6B93               	clrf	(readNVM@index+2)& (0+255),b
 18677   008B62  0E01               	movlw	1
 18678   008B64  ECD0  F059         	call	_readNVM
 18679   008B68  0100               	movlb	0	; () banked
 18680   008B6A  5191               	movf	?_readNVM& (0+255),w,b
 18681   008B6C  6FA2               	movwf	numEv@f& (0+255),b
 18682                           
 18683                           ; BSR set to: 0
 18684                           ;../../VLCBlib_PIC/event_teach_large.c: 1168:         num += 10;
 18685   008B6E  0E0A               	movlw	10
 18686   008B70  27A1               	addwf	numEv@num& (0+255),f,b
 18687   008B72                     l21245:
 18688                           
 18689                           ; BSR set to: 0
 18690                           ;../../VLCBlib_PIC/event_teach_large.c: 1162:     while (f.continued) {
 18691   008B72  B9A2               	btfsc	numEv@f& (0+255),4,b
 18692   008B74  D7C5               	goto	l21233
 18693                           
 18694                           ; BSR set to: 0
 18695                           ;../../VLCBlib_PIC/event_teach_large.c: 1170:     num += f.eVsUsed;
 18696   008B76  51A2               	movf	numEv@f& (0+255),w,b
 18697   008B78  0B0F               	andlw	15
 18698   008B7A  27A1               	addwf	numEv@num& (0+255),f,b
 18699                           
 18700                           ; BSR set to: 0
 18701                           ;../../VLCBlib_PIC/event_teach_large.c: 1171:     return num;
 18702   008B7C  51A1               	movf	numEv@num& (0+255),w,b
 18703   008B7E  0012               	return		;funcret
 18704   008B80                     __end_of_numEv:
 18705                           	callstack 0
 18706                           
 18707 ;; *************** function _tableIndexToEvtIdx *****************
 18708 ;; Defined at:
 18709 ;;		line 1273 in file "../../VLCBlib_PIC/event_teach_large.c"
 18710 ;; Parameters:    Size  Location     Type
 18711 ;;  tableIndex      1    wreg     unsigned char 
 18712 ;; Auto vars:     Size  Location     Type
 18713 ;;  tableIndex      1   45[BANK0 ] unsigned char 
 18714 ;; Return value:  Size  Location     Type
 18715 ;;                  1    wreg      unsigned char 
 18716 ;; Registers used:
 18717 ;;		wreg, status,2, status,0
 18718 ;; Tracked objects:
 18719 ;;		On entry : 0/0
 18720 ;;		On exit  : 0/0
 18721 ;;		Unchanged: 0/0
 18722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18724 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18726 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18727 ;;Total ram usage:        1 bytes
 18728 ;; Hardware stack levels used: 1
 18729 ;; Hardware stack levels required when called: 12
 18730 ;; This function calls:
 18731 ;;		Nothing
 18732 ;; This function is called by:
 18733 ;;		_nerdCallback
 18734 ;; This function uses a non-reentrant model
 18735 ;;
 18736                           
 18737                           	psect	text51
 18738   00C608                     __ptext51:
 18739                           	callstack 0
 18740   00C608                     _tableIndexToEvtIdx:
 18741                           	callstack 15
 18742                           
 18743                           ;incstack = 0
 18744                           ;tableIndexToEvtIdx@tableIndex stored from wreg
 18745   00C608  0100               	movlb	0	; () banked
 18746   00C60A  6F8D               	movwf	tableIndexToEvtIdx@tableIndex& (0+255),b
 18747                           
 18748                           ;../../VLCBlib_PIC/event_teach_large.c: 1274:     return tableIndex + 1;
 18749   00C60C  0100               	movlb	0	; () banked
 18750   00C60E  298D               	incf	tableIndexToEvtIdx@tableIndex& (0+255),w,b
 18751                           
 18752                           ; BSR set to: 0
 18753   00C610  0012               	return		;funcret
 18754   00C612                     __end_of_tableIndexToEvtIdx:
 18755                           	callstack 0
 18756                           
 18757 ;; *************** function _setNV *****************
 18758 ;; Defined at:
 18759 ;;		line 218 in file "../../VLCBlib_PIC/nv.c"
 18760 ;; Parameters:    Size  Location     Type
 18761 ;;  index           1    wreg     unsigned char 
 18762 ;;  value           1   58[BANK1 ] unsigned char 
 18763 ;; Auto vars:     Size  Location     Type
 18764 ;;  index           1   62[BANK1 ] unsigned char 
 18765 ;;  oldValue        1   61[BANK1 ] unsigned char 
 18766 ;; Return value:  Size  Location     Type
 18767 ;;                  1    wreg      unsigned char 
 18768 ;; Registers used:
 18769 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18770 ;; Tracked objects:
 18771 ;;		On entry : 0/0
 18772 ;;		On exit  : 0/0
 18773 ;;		Unchanged: 0/0
 18774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18775 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18776 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18777 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18778 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18779 ;;Total ram usage:        5 bytes
 18780 ;; Hardware stack levels used: 1
 18781 ;; Hardware stack levels required when called: 26
 18782 ;; This function calls:
 18783 ;;		_APP_nvValidate
 18784 ;;		_APP_nvValueChanged
 18785 ;;		_writeNVM
 18786 ;; This function is called by:
 18787 ;;		_nvProcessMessage
 18788 ;; This function uses a non-reentrant model
 18789 ;;
 18790                           
 18791                           	psect	text52
 18792   00AA40                     __ptext52:
 18793                           	callstack 0
 18794   00AA40                     _setNV:
 18795                           	callstack 2
 18796                           
 18797                           ; BSR set to: 0
 18798                           ;incstack = 0
 18799                           ;setNV@index stored from wreg
 18800   00AA40  0101               	movlb	1	; () banked
 18801   00AA42  6FF8               	movwf	setNV@index& (0+255),b
 18802                           
 18803                           ;../../VLCBlib_PIC/nv.c: 219:     uint8_t oldValue;;../../VLCBlib_PIC/nv.c: 221:     if 
      +                          (index > (15+7*16)) return CMDERR_INV_NV_IDX;
 18804   00AA44  0E7F               	movlw	127
 18805   00AA46  0101               	movlb	1	; () banked
 18806   00AA48  65F8               	cpfsgt	setNV@index& (0+255),b
 18807   00AA4A  D002               	goto	l22067
 18808                           
 18809                           ; BSR set to: 1
 18810   00AA4C  0E0A               	movlw	10
 18811   00AA4E  0012               	return	
 18812   00AA50                     l22067:
 18813                           
 18814                           ; BSR set to: 1
 18815                           ;../../VLCBlib_PIC/nv.c: 222:     if (APP_nvValidate(index, value) == INVALID) return CM
      +                          DERR_INV_NV_VALUE;
 18816   00AA50  C1F4  F09F         	movff	setNV@value,APP_nvValidate@value
 18817   00AA54  51F8               	movf	setNV@index& (0+255),w,b
 18818   00AA56  EC86  F056         	call	_APP_nvValidate
 18819   00AA5A  0900               	iorlw	0
 18820   00AA5C  A4D8               	btfss	status,2,c
 18821   00AA5E  D002               	goto	l22073
 18822   00AA60  0E0C               	movlw	12
 18823   00AA62  0012               	return	
 18824   00AA64                     l22073:
 18825                           
 18826                           ;../../VLCBlib_PIC/nv.c: 224:     oldValue = nvCache[index];
 18827   00AA64  0E00               	movlw	low _nvCache
 18828   00AA66  0101               	movlb	1	; () banked
 18829   00AA68  25F8               	addwf	setNV@index& (0+255),w,b
 18830   00AA6A  6ED9               	movwf	fsr2l,c
 18831   00AA6C  6ADA               	clrf	fsr2h,c
 18832   00AA6E  0E04               	movlw	high _nvCache
 18833   00AA70  22DA               	addwfc	fsr2h,f,c
 18834   00AA72  50DF               	movf	indf2,w,c
 18835   00AA74  6FF7               	movwf	setNV@oldValue& (0+255),b
 18836                           
 18837                           ;../../VLCBlib_PIC/nv.c: 225:     nvCache[index] = value;
 18838   00AA76  0E00               	movlw	low _nvCache
 18839   00AA78  25F8               	addwf	setNV@index& (0+255),w,b
 18840   00AA7A  6ED9               	movwf	fsr2l,c
 18841   00AA7C  6ADA               	clrf	fsr2h,c
 18842   00AA7E  0E04               	movlw	high _nvCache
 18843   00AA80  22DA               	addwfc	fsr2h,f,c
 18844   00AA82  C1F4  FFDF         	movff	setNV@value,indf2
 18845                           
 18846                           ; BSR set to: 1
 18847                           ;../../VLCBlib_PIC/nv.c: 226:     writeNVM(FLASH_NVM_TYPE, 0xFF80 +index, value);
 18848   00AA86  0E80               	movlw	128
 18849   00AA88  25F8               	addwf	setNV@index& (0+255),w,b
 18850   00AA8A  6FF5               	movwf	??_setNV& (0+255),b
 18851   00AA8C  6BF6               	clrf	(??_setNV+1)& (0+255),b
 18852   00AA8E  0EFF               	movlw	255
 18853   00AA90  23F6               	addwfc	(??_setNV+1)& (0+255),f,b
 18854   00AA92  C1F5  F0A4         	movff	??_setNV,writeNVM@index
 18855   00AA96  C1F6  F0A5         	movff	??_setNV+1,writeNVM@index+1
 18856   00AA9A  0100               	movlb	0	; () banked
 18857   00AA9C  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 18858   00AA9E  C1F4  F0A7         	movff	setNV@value,writeNVM@value
 18859   00AAA2  0E01               	movlw	1
 18860   00AAA4  EC60  F05C         	call	_writeNVM
 18861                           
 18862                           ;../../VLCBlib_PIC/nv.c: 231:     APP_nvValueChanged(index, value, oldValue);
 18863   00AAA8  C1F4  F1ED         	movff	setNV@value,APP_nvValueChanged@value
 18864   00AAAC  C1F7  F1EE         	movff	setNV@oldValue,APP_nvValueChanged@oldValue
 18865   00AAB0  0101               	movlb	1	; () banked
 18866   00AAB2  51F8               	movf	setNV@index& (0+255),w,b
 18867   00AAB4  ECB0  F016         	call	_APP_nvValueChanged
 18868                           
 18869                           ;../../VLCBlib_PIC/nv.c: 232:     return 0;
 18870   00AAB8  0E00               	movlw	0
 18871   00AABA  0012               	return		;funcret
 18872   00AABC                     __end_of_setNV:
 18873                           	callstack 0
 18874                           
 18875 ;; *************** function _APP_nvValueChanged *****************
 18876 ;; Defined at:
 18877 ;;		line 104 in file "../universalNv.c"
 18878 ;; Parameters:    Size  Location     Type
 18879 ;;  index           1    wreg     unsigned char 
 18880 ;;  value           1   51[BANK1 ] unsigned char 
 18881 ;;  oldValue        1   52[BANK1 ] unsigned char 
 18882 ;; Auto vars:     Size  Location     Type
 18883 ;;  index           1   56[BANK1 ] unsigned char 
 18884 ;;  io              1   57[BANK1 ] unsigned char 
 18885 ;;  nv              1    0        unsigned char 
 18886 ;; Return value:  Size  Location     Type
 18887 ;;                  1    wreg      void 
 18888 ;; Registers used:
 18889 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18890 ;; Tracked objects:
 18891 ;;		On entry : 0/0
 18892 ;;		On exit  : 0/0
 18893 ;;		Unchanged: 0/0
 18894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18895 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18896 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18897 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18898 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18899 ;;Total ram usage:        7 bytes
 18900 ;; Hardware stack levels used: 1
 18901 ;; Hardware stack levels required when called: 25
 18902 ;; This function calls:
 18903 ;;		___awdiv
 18904 ;;		___awmod
 18905 ;;		_getNV
 18906 ;;		_setBounceState
 18907 ;;		_setMultiState
 18908 ;;		_setServoPosition
 18909 ;;		_setServoState
 18910 ;;		_setTimedResponseDelay
 18911 ;;		_setType
 18912 ;;		_startBounceOutput
 18913 ;;		_startMultiOutput
 18914 ;;		_startServoOutput
 18915 ;; This function is called by:
 18916 ;;		_setNV
 18917 ;; This function uses a non-reentrant model
 18918 ;;
 18919                           
 18920                           	psect	text53
 18921   002D60                     __ptext53:
 18922                           	callstack 0
 18923   002D60                     _APP_nvValueChanged:
 18924                           	callstack 2
 18925                           
 18926                           ;incstack = 0
 18927                           ;APP_nvValueChanged@index stored from wreg
 18928   002D60  0101               	movlb	1	; () banked
 18929   002D62  6FF2               	movwf	APP_nvValueChanged@index& (0+255),b
 18930                           
 18931                           ;../universalNv.c: 105:     uint8_t nv;;../universalNv.c: 106:     uint8_t io;;../univer
      +                          salNv.c: 108:     if ((((index-16) % 7) == 0)) {
 18932   002D64  0EF0               	movlw	240
 18933   002D66  0101               	movlb	1	; () banked
 18934   002D68  25F2               	addwf	APP_nvValueChanged@index& (0+255),w,b
 18935   002D6A  0100               	movlb	0	; () banked
 18936   002D6C  6F8D               	movwf	___awmod@dividend& (0+255),b
 18937   002D6E  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 18938   002D70  0EFF               	movlw	255
 18939   002D72  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 18940   002D74  0E00               	movlw	0
 18941   002D76  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 18942   002D78  0E07               	movlw	7
 18943   002D7A  6F8F               	movwf	___awmod@divisor& (0+255),b
 18944   002D7C  EC31  F057         	call	___awmod	;wreg free
 18945   002D80  0100               	movlb	0	; () banked
 18946   002D82  518D               	movf	?___awmod& (0+255),w,b
 18947   002D84  118E               	iorwf	(?___awmod+1)& (0+255),w,b
 18948   002D86  A4D8               	btfss	status,2,c
 18949   002D88  D01B               	goto	l20663
 18950                           
 18951                           ; BSR set to: 0
 18952                           ;../universalNv.c: 110:         io = index-16;
 18953   002D8A  0101               	movlb	1	; () banked
 18954   002D8C  51F2               	movf	APP_nvValueChanged@index& (0+255),w,b
 18955   002D8E  0FF0               	addlw	240
 18956   002D90  6FF3               	movwf	APP_nvValueChanged@io& (0+255),b
 18957                           
 18958                           ; BSR set to: 1
 18959                           ;../universalNv.c: 111:         io /= 7;
 18960   002D92  C1F3  F097         	movff	APP_nvValueChanged@io,___awdiv@dividend
 18961   002D96  0100               	movlb	0	; () banked
 18962   002D98  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 18963   002D9A  0E00               	movlw	0
 18964   002D9C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18965   002D9E  0E07               	movlw	7
 18966   002DA0  6F99               	movwf	___awdiv@divisor& (0+255),b
 18967   002DA2  EC1C  F053         	call	___awdiv	;wreg free
 18968   002DA6  0100               	movlb	0	; () banked
 18969   002DA8  5197               	movf	?___awdiv& (0+255),w,b
 18970   002DAA  0101               	movlb	1	; () banked
 18971   002DAC  6FF3               	movwf	APP_nvValueChanged@io& (0+255),b
 18972                           
 18973                           ; BSR set to: 1
 18974                           ;../universalNv.c: 112:         if (oldValue != value) {
 18975   002DAE  51ED               	movf	APP_nvValueChanged@value& (0+255),w,b
 18976   002DB0  19EE               	xorwf	APP_nvValueChanged@oldValue& (0+255),w,b
 18977   002DB2  B4D8               	btfsc	status,2,c
 18978   002DB4  D005               	goto	l20663
 18979                           
 18980                           ; BSR set to: 1
 18981                           ;../universalNv.c: 113:             setType(io, value);
 18982   002DB6  C1ED  F1EA         	movff	APP_nvValueChanged@value,setType@type
 18983   002DBA  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 18984   002DBC  ECA0  F059         	call	_setType
 18985   002DC0                     l20663:
 18986                           
 18987                           ;../universalNv.c: 116:     if (index == 5) {
 18988   002DC0  0E05               	movlw	5
 18989   002DC2  0101               	movlb	1	; () banked
 18990   002DC4  19F2               	xorwf	APP_nvValueChanged@index& (0+255),w,b
 18991   002DC6  A4D8               	btfss	status,2,c
 18992   002DC8  D003               	goto	l20667
 18993                           
 18994                           ; BSR set to: 1
 18995                           ;../universalNv.c: 117:         setTimedResponseDelay(value);
 18996   002DCA  51ED               	movf	APP_nvValueChanged@value& (0+255),w,b
 18997   002DCC  EC09  F063         	call	_setTimedResponseDelay
 18998   002DD0                     l20667:
 18999                           
 19000                           ;../universalNv.c: 121:     if (index == 4) {
 19001   002DD0  0E04               	movlw	4
 19002   002DD2  0101               	movlb	1	; () banked
 19003   002DD4  19F2               	xorwf	APP_nvValueChanged@index& (0+255),w,b
 19004   002DD6  B4D8               	btfsc	status,2,c
 19005                           
 19006                           ; BSR set to: 1
 19007                           ;../universalNv.c: 122:         WPUB = value;
 19008   002DD8  C1ED  FF5B         	movff	APP_nvValueChanged@value,3931	;volatile
 19009                           
 19010                           ; BSR set to: 1
 19011                           ;../universalNv.c: 215:     if (index >= 16) {
 19012   002DDC  0E0F               	movlw	15
 19013   002DDE  65F2               	cpfsgt	APP_nvValueChanged@index& (0+255),b
 19014   002DE0  0012               	return	
 19015                           
 19016                           ; BSR set to: 1
 19017                           ;../universalNv.c: 216:         io = ((uint8_t)((index-16)/7));
 19018   002DE2  0EF0               	movlw	240
 19019   002DE4  25F2               	addwf	APP_nvValueChanged@index& (0+255),w,b
 19020   002DE6  0100               	movlb	0	; () banked
 19021   002DE8  6F97               	movwf	___awdiv@dividend& (0+255),b
 19022   002DEA  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 19023   002DEC  0EFF               	movlw	255
 19024   002DEE  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 19025   002DF0  0E00               	movlw	0
 19026   002DF2  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19027   002DF4  0E07               	movlw	7
 19028   002DF6  6F99               	movwf	___awdiv@divisor& (0+255),b
 19029   002DF8  EC1C  F053         	call	___awdiv	;wreg free
 19030   002DFC  0100               	movlb	0	; () banked
 19031   002DFE  5197               	movf	?___awdiv& (0+255),w,b
 19032   002E00  0101               	movlb	1	; () banked
 19033   002E02  6FF3               	movwf	APP_nvValueChanged@io& (0+255),b
 19034   002E04  0EF0               	movlw	240
 19035   002E06  25F2               	addwf	APP_nvValueChanged@index& (0+255),w,b
 19036   002E08  0100               	movlb	0	; () banked
 19037   002E0A  6F8D               	movwf	___awmod@dividend& (0+255),b
 19038   002E0C  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 19039   002E0E  0EFF               	movlw	255
 19040   002E10  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 19041   002E12  0E00               	movlw	0
 19042   002E14  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 19043   002E16  0E07               	movlw	7
 19044   002E18  6F8F               	movwf	___awmod@divisor& (0+255),b
 19045   002E1A  EC31  F057         	call	___awmod	;wreg free
 19046                           
 19047                           ;../universalNv.c: 218:         switch(getNV((16 + 7*(io) + 0))) {
 19048   002E1E  D1CF               	goto	l20745
 19049   002E20                     l20675:
 19050                           
 19051                           ; BSR set to: 0
 19052                           ;../universalNv.c: 232:                 if (index == (16 + 7*(io) + 2)) {
 19053   002E20  0101               	movlb	1	; () banked
 19054   002E22  51F2               	movf	APP_nvValueChanged@index& (0+255),w,b
 19055   002E24  6FEF               	movwf	??_APP_nvValueChanged& (0+255),b
 19056   002E26  6BF0               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19057   002E28  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19058   002E2A  0D07               	mullw	7
 19059   002E2C  0E12               	movlw	18
 19060   002E2E  26F3               	addwf	243,f,c
 19061   002E30  0E00               	movlw	0
 19062   002E32  22F4               	addwfc	244,f,c
 19063   002E34  51EF               	movf	??_APP_nvValueChanged& (0+255),w,b
 19064   002E36  18F3               	xorwf	243,w,c
 19065   002E38  E113               	bnz	l20681
 19066   002E3A  51F0               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19067   002E3C  18F4               	xorwf	244,w,c
 19068   002E3E  A4D8               	btfss	status,2,c
 19069   002E40  D00F               	goto	l20681
 19070                           
 19071                           ; BSR set to: 1
 19072                           ;../universalNv.c: 233:                     setServoState(io, 2);
 19073   002E42  0E02               	movlw	2
 19074   002E44  0100               	movlb	0	; () banked
 19075   002E46  6F91               	movwf	setServoState@action& (0+255),b
 19076   002E48  0101               	movlb	1	; () banked
 19077   002E4A  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19078   002E4C  EC7F  F04A         	call	_setServoState
 19079                           
 19080                           ;../universalNv.c: 234:                     startServoOutput(io, 2);
 19081   002E50  0E02               	movlw	2
 19082   002E52  0100               	movlb	0	; () banked
 19083   002E54  6F91               	movwf	startServoOutput@action& (0+255),b
 19084   002E56  0101               	movlb	1	; () banked
 19085   002E58  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19086   002E5A  EC5D  F049         	call	_startServoOutput
 19087                           
 19088                           ;../universalNv.c: 235:                 } else if (index == (16 + 7*(io) + 3)) {
 19089   002E5E  0012               	return	
 19090   002E60                     l20681:
 19091                           
 19092                           ; BSR set to: 1
 19093   002E60  51F2               	movf	APP_nvValueChanged@index& (0+255),w,b
 19094   002E62  6FEF               	movwf	??_APP_nvValueChanged& (0+255),b
 19095   002E64  6BF0               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19096   002E66  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19097   002E68  0D07               	mullw	7
 19098   002E6A  0E13               	movlw	19
 19099   002E6C  26F3               	addwf	243,f,c
 19100   002E6E  0E00               	movlw	0
 19101   002E70  22F4               	addwfc	244,f,c
 19102   002E72  51EF               	movf	??_APP_nvValueChanged& (0+255),w,b
 19103   002E74  18F3               	xorwf	243,w,c
 19104   002E76  E113               	bnz	l20687
 19105   002E78  51F0               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19106   002E7A  18F4               	xorwf	244,w,c
 19107   002E7C  A4D8               	btfss	status,2,c
 19108   002E7E  D00F               	goto	l20687
 19109                           
 19110                           ; BSR set to: 1
 19111                           ;../universalNv.c: 236:                     setServoState(io, 1);
 19112   002E80  0E01               	movlw	1
 19113   002E82  0100               	movlb	0	; () banked
 19114   002E84  6F91               	movwf	setServoState@action& (0+255),b
 19115   002E86  0101               	movlb	1	; () banked
 19116   002E88  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19117   002E8A  EC7F  F04A         	call	_setServoState
 19118                           
 19119                           ;../universalNv.c: 237:                     startServoOutput(io, 1);
 19120   002E8E  0E01               	movlw	1
 19121   002E90  0100               	movlb	0	; () banked
 19122   002E92  6F91               	movwf	startServoOutput@action& (0+255),b
 19123   002E94  0101               	movlb	1	; () banked
 19124   002E96  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19125   002E98  EC5D  F049         	call	_startServoOutput
 19126                           
 19127                           ;../universalNv.c: 238:                 } else if (index == (16 + 7*(io) + 1)) {
 19128   002E9C  0012               	return	
 19129   002E9E                     l20687:
 19130                           
 19131                           ; BSR set to: 1
 19132   002E9E  51F2               	movf	APP_nvValueChanged@index& (0+255),w,b
 19133   002EA0  6FEF               	movwf	??_APP_nvValueChanged& (0+255),b
 19134   002EA2  6BF0               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19135   002EA4  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19136   002EA6  0D07               	mullw	7
 19137   002EA8  0E11               	movlw	17
 19138   002EAA  26F3               	addwf	243,f,c
 19139   002EAC  0E00               	movlw	0
 19140   002EAE  22F4               	addwfc	244,f,c
 19141   002EB0  51EF               	movf	??_APP_nvValueChanged& (0+255),w,b
 19142   002EB2  18F3               	xorwf	243,w,c
 19143   002EB4  E103               	bnz	u21171
 19144   002EB6  51F0               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19145   002EB8  18F4               	xorwf	244,w,c
 19146   002EBA  A4D8               	btfss	status,2,c
 19147   002EBC                     u21171:
 19148   002EBC  0012               	return	
 19149                           
 19150                           ; BSR set to: 1
 19151                           ;../universalNv.c: 239:                     if (((value & 0x80) == 0x80) &&
 19152   002EBE  AFED               	btfss	APP_nvValueChanged@value& (0+255),7,b
 19153   002EC0  0012               	return	
 19154                           
 19155                           ; BSR set to: 1
 19156   002EC2  BFEE               	btfsc	APP_nvValueChanged@oldValue& (0+255),7,b
 19157   002EC4  0012               	return	
 19158                           
 19159                           ; BSR set to: 1
 19160                           ;../universalNv.c: 240:                             (oldValue & 0x80) == 0) {;../univers
      +                          alNv.c: 243:                         setServoPosition(io, (uint8_t)(getNV((16 + 7*(io) +
      +                           3))/2 + getNV((16 + 7*(io) + 2))/2));
 19161   002EC6  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19162   002EC8  0D07               	mullw	7
 19163   002ECA  50F3               	movf	243,w,c
 19164   002ECC  0F12               	addlw	18
 19165   002ECE  EC52  F05E         	call	_getNV
 19166   002ED2  C08D  F097         	movff	?_getNV,___awdiv@dividend
 19167   002ED6  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 19168   002EDA  0E00               	movlw	0
 19169   002EDC  0100               	movlb	0	; () banked
 19170   002EDE  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19171   002EE0  0E02               	movlw	2
 19172   002EE2  6F99               	movwf	___awdiv@divisor& (0+255),b
 19173   002EE4  EC1C  F053         	call	___awdiv	;wreg free
 19174   002EE8  C097  F1EF         	movff	?___awdiv,??_APP_nvValueChanged
 19175   002EEC  C098  F1F0         	movff	?___awdiv+1,??_APP_nvValueChanged+1
 19176   002EF0  0101               	movlb	1	; () banked
 19177   002EF2  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19178   002EF4  0D07               	mullw	7
 19179   002EF6  50F3               	movf	243,w,c
 19180   002EF8  0F13               	addlw	19
 19181   002EFA  EC52  F05E         	call	_getNV
 19182   002EFE  C08D  F097         	movff	?_getNV,___awdiv@dividend
 19183   002F02  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 19184   002F06  0E00               	movlw	0
 19185   002F08  0100               	movlb	0	; () banked
 19186   002F0A  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19187   002F0C  0E02               	movlw	2
 19188   002F0E  6F99               	movwf	___awdiv@divisor& (0+255),b
 19189   002F10  EC1C  F053         	call	___awdiv	;wreg free
 19190   002F14  0100               	movlb	0	; () banked
 19191   002F16  5197               	movf	?___awdiv& (0+255),w,b
 19192   002F18  0101               	movlb	1	; () banked
 19193   002F1A  25EF               	addwf	??_APP_nvValueChanged& (0+255),w,b
 19194   002F1C  0100               	movlb	0	; () banked
 19195   002F1E  6F9F               	movwf	setServoPosition@pos& (0+255),b
 19196   002F20  0101               	movlb	1	; () banked
 19197   002F22  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19198   002F24  EC77  F061         	call	_setServoPosition
 19199                           
 19200                           ; BSR set to: 1
 19201                           
 19202                           ;../universalNv.c: 245:                 }
 19203   002F28  0012               	return	
 19204   002F2A                     l20695:
 19205                           
 19206                           ; BSR set to: 0
 19207                           ;../universalNv.c: 250:                 if (index == (16 + 7*(io) + 3)) {
 19208   002F2A  0101               	movlb	1	; () banked
 19209   002F2C  51F2               	movf	APP_nvValueChanged@index& (0+255),w,b
 19210   002F2E  6FEF               	movwf	??_APP_nvValueChanged& (0+255),b
 19211   002F30  6BF0               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19212   002F32  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19213   002F34  0D07               	mullw	7
 19214   002F36  0E13               	movlw	19
 19215   002F38  26F3               	addwf	243,f,c
 19216   002F3A  0E00               	movlw	0
 19217   002F3C  22F4               	addwfc	244,f,c
 19218   002F3E  51EF               	movf	??_APP_nvValueChanged& (0+255),w,b
 19219   002F40  18F3               	xorwf	243,w,c
 19220   002F42  E113               	bnz	l20699
 19221   002F44  51F0               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19222   002F46  18F4               	xorwf	244,w,c
 19223   002F48  A4D8               	btfss	status,2,c
 19224   002F4A  D00F               	goto	l20699
 19225                           
 19226                           ; BSR set to: 1
 19227                           ;../universalNv.c: 251:                     setBounceState(io, 2);
 19228   002F4C  0E02               	movlw	2
 19229   002F4E  0100               	movlb	0	; () banked
 19230   002F50  6F91               	movwf	setBounceState@action& (0+255),b
 19231   002F52  0101               	movlb	1	; () banked
 19232   002F54  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19233   002F56  ECDD  F04A         	call	_setBounceState
 19234                           
 19235                           ;../universalNv.c: 252:                     startBounceOutput(io, 2);
 19236   002F5A  0E02               	movlw	2
 19237   002F5C  0100               	movlb	0	; () banked
 19238   002F5E  6F8D               	movwf	startBounceOutput@action& (0+255),b
 19239   002F60  0101               	movlb	1	; () banked
 19240   002F62  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19241   002F64  ECA9  F058         	call	_startBounceOutput
 19242                           
 19243                           ;../universalNv.c: 253:                 } else if (index == (16 + 7*(io) + 2)) {
 19244   002F68  0012               	return	
 19245   002F6A                     l20699:
 19246                           
 19247                           ; BSR set to: 1
 19248   002F6A  51F2               	movf	APP_nvValueChanged@index& (0+255),w,b
 19249   002F6C  6FEF               	movwf	??_APP_nvValueChanged& (0+255),b
 19250   002F6E  6BF0               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19251   002F70  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19252   002F72  0D07               	mullw	7
 19253   002F74  0E12               	movlw	18
 19254   002F76  26F3               	addwf	243,f,c
 19255   002F78  0E00               	movlw	0
 19256   002F7A  22F4               	addwfc	244,f,c
 19257   002F7C  51EF               	movf	??_APP_nvValueChanged& (0+255),w,b
 19258   002F7E  18F3               	xorwf	243,w,c
 19259   002F80  E113               	bnz	l20703
 19260   002F82  51F0               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19261   002F84  18F4               	xorwf	244,w,c
 19262   002F86  A4D8               	btfss	status,2,c
 19263   002F88  D00F               	goto	l20703
 19264                           
 19265                           ; BSR set to: 1
 19266                           ;../universalNv.c: 254:                     setBounceState(io, 1);
 19267   002F8A  0E01               	movlw	1
 19268   002F8C  0100               	movlb	0	; () banked
 19269   002F8E  6F91               	movwf	setBounceState@action& (0+255),b
 19270   002F90  0101               	movlb	1	; () banked
 19271   002F92  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19272   002F94  ECDD  F04A         	call	_setBounceState
 19273                           
 19274                           ;../universalNv.c: 255:                     startBounceOutput(io, 1);
 19275   002F98  0E01               	movlw	1
 19276   002F9A  0100               	movlb	0	; () banked
 19277   002F9C  6F8D               	movwf	startBounceOutput@action& (0+255),b
 19278   002F9E  0101               	movlb	1	; () banked
 19279   002FA0  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19280   002FA2  ECA9  F058         	call	_startBounceOutput
 19281                           
 19282                           ;../universalNv.c: 256:                 } else if (index == (16 + 7*(io) + 1)) {
 19283   002FA6  0012               	return	
 19284   002FA8                     l20703:
 19285                           
 19286                           ; BSR set to: 1
 19287   002FA8  51F2               	movf	APP_nvValueChanged@index& (0+255),w,b
 19288   002FAA  6FEF               	movwf	??_APP_nvValueChanged& (0+255),b
 19289   002FAC  6BF0               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19290   002FAE  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19291   002FB0  0D07               	mullw	7
 19292   002FB2  0E11               	movlw	17
 19293   002FB4  26F3               	addwf	243,f,c
 19294   002FB6  0E00               	movlw	0
 19295   002FB8  22F4               	addwfc	244,f,c
 19296   002FBA  51EF               	movf	??_APP_nvValueChanged& (0+255),w,b
 19297   002FBC  18F3               	xorwf	243,w,c
 19298   002FBE  E103               	bnz	u21221
 19299   002FC0  51F0               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19300   002FC2  18F4               	xorwf	244,w,c
 19301   002FC4  A4D8               	btfss	status,2,c
 19302   002FC6                     u21221:
 19303   002FC6  0012               	return	
 19304                           
 19305                           ; BSR set to: 1
 19306                           ;../universalNv.c: 257:                     if (((value & 0x80) == 0x80) &&
 19307   002FC8  AFED               	btfss	APP_nvValueChanged@value& (0+255),7,b
 19308   002FCA  0012               	return	
 19309                           
 19310                           ; BSR set to: 1
 19311   002FCC  BFEE               	btfsc	APP_nvValueChanged@oldValue& (0+255),7,b
 19312   002FCE  0012               	return	
 19313                           
 19314                           ; BSR set to: 1
 19315                           ;../universalNv.c: 258:                             (oldValue & 0x80) == 0) {;../univers
      +                          alNv.c: 261:                         currentPos[io] = (uint8_t)(getNV((16 + 7*(io) + 3))
      +                          /2 + getNV((16 + 7*(io) + 2))/2);
 19316   002FD0  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19317   002FD2  0D07               	mullw	7
 19318   002FD4  50F3               	movf	243,w,c
 19319   002FD6  0F12               	addlw	18
 19320   002FD8  EC52  F05E         	call	_getNV
 19321   002FDC  C08D  F097         	movff	?_getNV,___awdiv@dividend
 19322   002FE0  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 19323   002FE4  0E00               	movlw	0
 19324   002FE6  0100               	movlb	0	; () banked
 19325   002FE8  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19326   002FEA  0E02               	movlw	2
 19327   002FEC  6F99               	movwf	___awdiv@divisor& (0+255),b
 19328   002FEE  EC1C  F053         	call	___awdiv	;wreg free
 19329   002FF2  C097  F1EF         	movff	?___awdiv,??_APP_nvValueChanged
 19330   002FF6  C098  F1F0         	movff	?___awdiv+1,??_APP_nvValueChanged+1
 19331   002FFA  0101               	movlb	1	; () banked
 19332   002FFC  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19333   002FFE  0D07               	mullw	7
 19334   003000  50F3               	movf	243,w,c
 19335   003002  0F13               	addlw	19
 19336   003004  EC52  F05E         	call	_getNV
 19337   003008  C08D  F097         	movff	?_getNV,___awdiv@dividend
 19338   00300C  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 19339   003010  0E00               	movlw	0
 19340   003012  0100               	movlb	0	; () banked
 19341   003014  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19342   003016  0E02               	movlw	2
 19343   003018  6F99               	movwf	___awdiv@divisor& (0+255),b
 19344   00301A  EC1C  F053         	call	___awdiv	;wreg free
 19345   00301E  0100               	movlb	0	; () banked
 19346   003020  5197               	movf	?___awdiv& (0+255),w,b
 19347   003022  0101               	movlb	1	; () banked
 19348   003024  25EF               	addwf	??_APP_nvValueChanged& (0+255),w,b
 19349   003026  6FF1               	movwf	(??_APP_nvValueChanged+2)& (0+255),b
 19350   003028  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19351   00302A  0FA9               	addlw	low _currentPos
 19352   00302C  6ED9               	movwf	fsr2l,c
 19353   00302E  6ADA               	clrf	fsr2h,c
 19354   003030  C1F1  FFDF         	movff	??_APP_nvValueChanged+2,indf2
 19355   003034  0012               	return	
 19356   003036                     l20711:
 19357                           
 19358                           ; BSR set to: 0
 19359                           ;../universalNv.c: 268:                 if (index == (16 + 7*(io) + 3)) {
 19360   003036  0101               	movlb	1	; () banked
 19361   003038  51F2               	movf	APP_nvValueChanged@index& (0+255),w,b
 19362   00303A  6FEF               	movwf	??_APP_nvValueChanged& (0+255),b
 19363   00303C  6BF0               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19364   00303E  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19365   003040  0D07               	mullw	7
 19366   003042  0E13               	movlw	19
 19367   003044  26F3               	addwf	243,f,c
 19368   003046  0E00               	movlw	0
 19369   003048  22F4               	addwfc	244,f,c
 19370   00304A  51EF               	movf	??_APP_nvValueChanged& (0+255),w,b
 19371   00304C  18F3               	xorwf	243,w,c
 19372   00304E  E113               	bnz	l20717
 19373   003050  51F0               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19374   003052  18F4               	xorwf	244,w,c
 19375   003054  A4D8               	btfss	status,2,c
 19376   003056  D00F               	goto	l20717
 19377                           
 19378                           ; BSR set to: 1
 19379                           ;../universalNv.c: 269:                     setMultiState(io, 0);
 19380   003058  0E00               	movlw	0
 19381   00305A  0100               	movlb	0	; () banked
 19382   00305C  6F91               	movwf	setMultiState@action& (0+255),b
 19383   00305E  0101               	movlb	1	; () banked
 19384   003060  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19385   003062  EC08  F044         	call	_setMultiState
 19386                           
 19387                           ;../universalNv.c: 270:                     startMultiOutput(io, 0);
 19388   003066  0E00               	movlw	0
 19389   003068  0100               	movlb	0	; () banked
 19390   00306A  6F91               	movwf	startMultiOutput@action& (0+255),b
 19391   00306C  0101               	movlb	1	; () banked
 19392   00306E  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19393   003070  ECEB  F04D         	call	_startMultiOutput
 19394                           
 19395                           ;../universalNv.c: 271:                 } else if (index == (16 + 7*(io) + 4)) {
 19396   003074  0012               	return	
 19397   003076                     l20717:
 19398                           
 19399                           ; BSR set to: 1
 19400   003076  51F2               	movf	APP_nvValueChanged@index& (0+255),w,b
 19401   003078  6FEF               	movwf	??_APP_nvValueChanged& (0+255),b
 19402   00307A  6BF0               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19403   00307C  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19404   00307E  0D07               	mullw	7
 19405   003080  0E14               	movlw	20
 19406   003082  26F3               	addwf	243,f,c
 19407   003084  0E00               	movlw	0
 19408   003086  22F4               	addwfc	244,f,c
 19409   003088  51EF               	movf	??_APP_nvValueChanged& (0+255),w,b
 19410   00308A  18F3               	xorwf	243,w,c
 19411   00308C  E113               	bnz	l20723
 19412   00308E  51F0               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19413   003090  18F4               	xorwf	244,w,c
 19414   003092  A4D8               	btfss	status,2,c
 19415   003094  D00F               	goto	l20723
 19416                           
 19417                           ; BSR set to: 1
 19418                           ;../universalNv.c: 272:                     setMultiState(io, 1);
 19419   003096  0E01               	movlw	1
 19420   003098  0100               	movlb	0	; () banked
 19421   00309A  6F91               	movwf	setMultiState@action& (0+255),b
 19422   00309C  0101               	movlb	1	; () banked
 19423   00309E  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19424   0030A0  EC08  F044         	call	_setMultiState
 19425                           
 19426                           ;../universalNv.c: 273:                     startMultiOutput(io, 1);
 19427   0030A4  0E01               	movlw	1
 19428   0030A6  0100               	movlb	0	; () banked
 19429   0030A8  6F91               	movwf	startMultiOutput@action& (0+255),b
 19430   0030AA  0101               	movlb	1	; () banked
 19431   0030AC  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19432   0030AE  ECEB  F04D         	call	_startMultiOutput
 19433                           
 19434                           ;../universalNv.c: 274:                 } else if (index == (16 + 7*(io) + 5)) {
 19435   0030B2  0012               	return	
 19436   0030B4                     l20723:
 19437                           
 19438                           ; BSR set to: 1
 19439   0030B4  51F2               	movf	APP_nvValueChanged@index& (0+255),w,b
 19440   0030B6  6FEF               	movwf	??_APP_nvValueChanged& (0+255),b
 19441   0030B8  6BF0               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19442   0030BA  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19443   0030BC  0D07               	mullw	7
 19444   0030BE  0E15               	movlw	21
 19445   0030C0  26F3               	addwf	243,f,c
 19446   0030C2  0E00               	movlw	0
 19447   0030C4  22F4               	addwfc	244,f,c
 19448   0030C6  51EF               	movf	??_APP_nvValueChanged& (0+255),w,b
 19449   0030C8  18F3               	xorwf	243,w,c
 19450   0030CA  E113               	bnz	l20729
 19451   0030CC  51F0               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19452   0030CE  18F4               	xorwf	244,w,c
 19453   0030D0  A4D8               	btfss	status,2,c
 19454   0030D2  D00F               	goto	l20729
 19455                           
 19456                           ; BSR set to: 1
 19457                           ;../universalNv.c: 275:                     setMultiState(io, 2);
 19458   0030D4  0E02               	movlw	2
 19459   0030D6  0100               	movlb	0	; () banked
 19460   0030D8  6F91               	movwf	setMultiState@action& (0+255),b
 19461   0030DA  0101               	movlb	1	; () banked
 19462   0030DC  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19463   0030DE  EC08  F044         	call	_setMultiState
 19464                           
 19465                           ;../universalNv.c: 276:                     startMultiOutput(io, 2);
 19466   0030E2  0E02               	movlw	2
 19467   0030E4  0100               	movlb	0	; () banked
 19468   0030E6  6F91               	movwf	startMultiOutput@action& (0+255),b
 19469   0030E8  0101               	movlb	1	; () banked
 19470   0030EA  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19471   0030EC  ECEB  F04D         	call	_startMultiOutput
 19472                           
 19473                           ;../universalNv.c: 277:                 } else if (index == (16 + 7*(io) + 6)) {
 19474   0030F0  0012               	return	
 19475   0030F2                     l20729:
 19476                           
 19477                           ; BSR set to: 1
 19478   0030F2  51F2               	movf	APP_nvValueChanged@index& (0+255),w,b
 19479   0030F4  6FEF               	movwf	??_APP_nvValueChanged& (0+255),b
 19480   0030F6  6BF0               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19481   0030F8  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19482   0030FA  0D07               	mullw	7
 19483   0030FC  0E16               	movlw	22
 19484   0030FE  26F3               	addwf	243,f,c
 19485   003100  0E00               	movlw	0
 19486   003102  22F4               	addwfc	244,f,c
 19487   003104  51EF               	movf	??_APP_nvValueChanged& (0+255),w,b
 19488   003106  18F3               	xorwf	243,w,c
 19489   003108  E113               	bnz	l20735
 19490   00310A  51F0               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19491   00310C  18F4               	xorwf	244,w,c
 19492   00310E  A4D8               	btfss	status,2,c
 19493   003110  D00F               	goto	l20735
 19494                           
 19495                           ; BSR set to: 1
 19496                           ;../universalNv.c: 278:                     setMultiState(io, 3);
 19497   003112  0E03               	movlw	3
 19498   003114  0100               	movlb	0	; () banked
 19499   003116  6F91               	movwf	setMultiState@action& (0+255),b
 19500   003118  0101               	movlb	1	; () banked
 19501   00311A  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19502   00311C  EC08  F044         	call	_setMultiState
 19503                           
 19504                           ;../universalNv.c: 279:                     startMultiOutput(io, 3);
 19505   003120  0E03               	movlw	3
 19506   003122  0100               	movlb	0	; () banked
 19507   003124  6F91               	movwf	startMultiOutput@action& (0+255),b
 19508   003126  0101               	movlb	1	; () banked
 19509   003128  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19510   00312A  ECEB  F04D         	call	_startMultiOutput
 19511                           
 19512                           ;../universalNv.c: 280:                 } else if (index == (16 + 7*(io) + 1)) {
 19513   00312E  0012               	return	
 19514   003130                     l20735:
 19515                           
 19516                           ; BSR set to: 1
 19517   003130  51F2               	movf	APP_nvValueChanged@index& (0+255),w,b
 19518   003132  6FEF               	movwf	??_APP_nvValueChanged& (0+255),b
 19519   003134  6BF0               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19520   003136  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19521   003138  0D07               	mullw	7
 19522   00313A  0E11               	movlw	17
 19523   00313C  26F3               	addwf	243,f,c
 19524   00313E  0E00               	movlw	0
 19525   003140  22F4               	addwfc	244,f,c
 19526   003142  51EF               	movf	??_APP_nvValueChanged& (0+255),w,b
 19527   003144  18F3               	xorwf	243,w,c
 19528   003146  E152               	bnz	l813
 19529   003148  51F0               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19530   00314A  18F4               	xorwf	244,w,c
 19531   00314C  A4D8               	btfss	status,2,c
 19532   00314E  0012               	return	
 19533                           
 19534                           ; BSR set to: 1
 19535                           ;../universalNv.c: 281:                     if (((value & 0x80) == 0x80) &&
 19536   003150  AFED               	btfss	APP_nvValueChanged@value& (0+255),7,b
 19537   003152  0012               	return	
 19538                           
 19539                           ; BSR set to: 1
 19540   003154  BFEE               	btfsc	APP_nvValueChanged@oldValue& (0+255),7,b
 19541   003156  0012               	return	
 19542                           
 19543                           ; BSR set to: 1
 19544                           ;../universalNv.c: 282:                             ((oldValue & 0x80) == 0)) {;../unive
      +                          rsalNv.c: 285:                         currentPos[io] = (uint8_t)(getNV((16 + 7*(io) + 3
      +                          ))/2 + getNV((16 + 7*(io) + 2))/2);
 19545   003158  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19546   00315A  0D07               	mullw	7
 19547   00315C  50F3               	movf	243,w,c
 19548   00315E  0F12               	addlw	18
 19549   003160  EC52  F05E         	call	_getNV
 19550   003164  C08D  F097         	movff	?_getNV,___awdiv@dividend
 19551   003168  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 19552   00316C  0E00               	movlw	0
 19553   00316E  0100               	movlb	0	; () banked
 19554   003170  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19555   003172  0E02               	movlw	2
 19556   003174  6F99               	movwf	___awdiv@divisor& (0+255),b
 19557   003176  EC1C  F053         	call	___awdiv	;wreg free
 19558   00317A  C097  F1EF         	movff	?___awdiv,??_APP_nvValueChanged
 19559   00317E  C098  F1F0         	movff	?___awdiv+1,??_APP_nvValueChanged+1
 19560   003182  0101               	movlb	1	; () banked
 19561   003184  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19562   003186  0D07               	mullw	7
 19563   003188  50F3               	movf	243,w,c
 19564   00318A  0F13               	addlw	19
 19565   00318C  EC52  F05E         	call	_getNV
 19566   003190  C08D  F097         	movff	?_getNV,___awdiv@dividend
 19567   003194  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 19568   003198  0E00               	movlw	0
 19569   00319A  0100               	movlb	0	; () banked
 19570   00319C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19571   00319E  0E02               	movlw	2
 19572   0031A0  6F99               	movwf	___awdiv@divisor& (0+255),b
 19573   0031A2  EC1C  F053         	call	___awdiv	;wreg free
 19574   0031A6  0100               	movlb	0	; () banked
 19575   0031A8  5197               	movf	?___awdiv& (0+255),w,b
 19576   0031AA  0101               	movlb	1	; () banked
 19577   0031AC  25EF               	addwf	??_APP_nvValueChanged& (0+255),w,b
 19578   0031AE  6FF1               	movwf	(??_APP_nvValueChanged+2)& (0+255),b
 19579   0031B0  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19580   0031B2  0FA9               	addlw	low _currentPos
 19581   0031B4  6ED9               	movwf	fsr2l,c
 19582   0031B6  6ADA               	clrf	fsr2h,c
 19583   0031B8  C1F1  FFDF         	movff	??_APP_nvValueChanged+2,indf2
 19584   0031BC  0012               	return	
 19585   0031BE                     l20745:
 19586   0031BE  0101               	movlb	1	; () banked
 19587   0031C0  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19588   0031C2  0D07               	mullw	7
 19589   0031C4  50F3               	movf	243,w,c
 19590   0031C6  0F10               	addlw	16
 19591   0031C8  EC52  F05E         	call	_getNV
 19592                           
 19593                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19594                           ; Switch size 1, requested type "simple"
 19595                           ; Number of cases is 1, Range of values is 0 to 0
 19596                           ; switch strategies available:
 19597                           ; Name         Instructions Cycles
 19598                           ; simple_byte            4     3 (average)
 19599                           ;	Chosen strategy is simple_byte
 19600   0031CC  0100               	movlb	0	; () banked
 19601   0031CE  518E               	movf	(?_getNV+1)& (0+255),w,b
 19602   0031D0  0A00               	xorlw	0	; case 0
 19603   0031D2  A4D8               	btfss	status,2,c
 19604   0031D4  0012               	return	
 19605                           
 19606                           ; BSR set to: 0
 19607                           ; Switch size 1, requested type "simple"
 19608                           ; Number of cases is 3, Range of values is 2 to 4
 19609                           ; switch strategies available:
 19610                           ; Name         Instructions Cycles
 19611                           ; simple_byte           10     6 (average)
 19612                           ;	Chosen strategy is simple_byte
 19613   0031D6  518D               	movf	?_getNV& (0+255),w,b
 19614   0031D8  0A02               	xorlw	2	; case 2
 19615   0031DA  B4D8               	btfsc	status,2,c
 19616   0031DC  D621               	goto	l20675
 19617   0031DE  0A01               	xorlw	1	; case 3
 19618   0031E0  B4D8               	btfsc	status,2,c
 19619   0031E2  D6A3               	goto	l20695
 19620   0031E4  0A07               	xorlw	7	; case 4
 19621   0031E6  A4D8               	btfss	status,2,c
 19622   0031E8  0012               	return	
 19623   0031EA  D725               	goto	l20711
 19624   0031EC                     l813:
 19625   0031EC  0012               	return		;funcret
 19626   0031EE                     __end_of_APP_nvValueChanged:
 19627                           	callstack 0
 19628                           
 19629 ;; *************** function _setTimedResponseDelay *****************
 19630 ;; Defined at:
 19631 ;;		line 901 in file "../../VLCBlib_PIC/vlcb.c"
 19632 ;; Parameters:    Size  Location     Type
 19633 ;;  delay           1    wreg     unsigned char 
 19634 ;; Auto vars:     Size  Location     Type
 19635 ;;  delay           1   45[BANK0 ] unsigned char 
 19636 ;; Return value:  Size  Location     Type
 19637 ;;                  1    wreg      void 
 19638 ;; Registers used:
 19639 ;;		wreg
 19640 ;; Tracked objects:
 19641 ;;		On entry : 0/0
 19642 ;;		On exit  : 0/0
 19643 ;;		Unchanged: 0/0
 19644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19646 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19648 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19649 ;;Total ram usage:        1 bytes
 19650 ;; Hardware stack levels used: 1
 19651 ;; Hardware stack levels required when called: 12
 19652 ;; This function calls:
 19653 ;;		Nothing
 19654 ;; This function is called by:
 19655 ;;		_setup
 19656 ;;		_APP_nvValueChanged
 19657 ;; This function uses a non-reentrant model
 19658 ;;
 19659                           
 19660                           	psect	text54
 19661   00C612                     __ptext54:
 19662                           	callstack 0
 19663   00C612                     _setTimedResponseDelay:
 19664                           	callstack 17
 19665                           
 19666                           ;incstack = 0
 19667                           ;setTimedResponseDelay@delay stored from wreg
 19668   00C612  0100               	movlb	0	; () banked
 19669   00C614  6F8D               	movwf	setTimedResponseDelay@delay& (0+255),b
 19670                           
 19671                           ;../../VLCBlib_PIC/vlcb.c: 902:     timedResponseDelay = delay;
 19672   00C616  C08D  F164         	movff	setTimedResponseDelay@delay,_timedResponseDelay
 19673   00C61A  0012               	return		;funcret
 19674   00C61C                     __end_of_setTimedResponseDelay:
 19675                           	callstack 0
 19676                           
 19677 ;; *************** function _setServoPosition *****************
 19678 ;; Defined at:
 19679 ;;		line 683 in file "../servo.c"
 19680 ;; Parameters:    Size  Location     Type
 19681 ;;  io              1    wreg     unsigned char 
 19682 ;;  pos             1   63[BANK0 ] unsigned char 
 19683 ;; Auto vars:     Size  Location     Type
 19684 ;;  io              1   64[BANK0 ] unsigned char 
 19685 ;; Return value:  Size  Location     Type
 19686 ;;                  1    wreg      void 
 19687 ;; Registers used:
 19688 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19689 ;; Tracked objects:
 19690 ;;		On entry : 0/0
 19691 ;;		On exit  : 0/0
 19692 ;;		Unchanged: 0/0
 19693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19694 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19695 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19697 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19698 ;;Total ram usage:        2 bytes
 19699 ;; Hardware stack levels used: 1
 19700 ;; Hardware stack levels required when called: 12
 19701 ;; This function calls:
 19702 ;;		Nothing
 19703 ;; This function is called by:
 19704 ;;		_APP_nvValueChanged
 19705 ;;		_setOutputPosition
 19706 ;; This function uses a non-reentrant model
 19707 ;;
 19708                           
 19709                           	psect	text55
 19710   00C2EE                     __ptext55:
 19711                           	callstack 0
 19712   00C2EE                     _setServoPosition:
 19713                           	callstack 15
 19714                           
 19715                           ;incstack = 0
 19716                           ;setServoPosition@io stored from wreg
 19717   00C2EE  0100               	movlb	0	; () banked
 19718   00C2F0  6FA0               	movwf	setServoPosition@io& (0+255),b
 19719                           
 19720                           ;../servo.c: 684:     targetPos[io] = pos;
 19721   00C2F2  0E20               	movlw	low _targetPos
 19722   00C2F4  0100               	movlb	0	; () banked
 19723   00C2F6  25A0               	addwf	setServoPosition@io& (0+255),w,b
 19724   00C2F8  6ED9               	movwf	fsr2l,c
 19725   00C2FA  6ADA               	clrf	fsr2h,c
 19726   00C2FC  0E01               	movlw	high _targetPos
 19727   00C2FE  22DA               	addwfc	fsr2h,f,c
 19728   00C300  C09F  FFDF         	movff	setServoPosition@pos,indf2
 19729                           
 19730                           ;../servo.c: 685:     currentPos[io] = pos;
 19731   00C304  51A0               	movf	setServoPosition@io& (0+255),w,b
 19732   00C306  0FA9               	addlw	low _currentPos
 19733   00C308  6ED9               	movwf	fsr2l,c
 19734   00C30A  6ADA               	clrf	fsr2h,c
 19735   00C30C  C09F  FFDF         	movff	setServoPosition@pos,indf2
 19736                           
 19737                           ; BSR set to: 0
 19738   00C310  0012               	return		;funcret
 19739   00C312                     __end_of_setServoPosition:
 19740                           	callstack 0
 19741                           
 19742 ;; *************** function _APP_nvValidate *****************
 19743 ;; Defined at:
 19744 ;;		line 299 in file "../universalNv.c"
 19745 ;; Parameters:    Size  Location     Type
 19746 ;;  index           1    wreg     unsigned char 
 19747 ;;  value           1   63[BANK0 ] unsigned char 
 19748 ;; Auto vars:     Size  Location     Type
 19749 ;;  index           1   64[BANK0 ] unsigned char 
 19750 ;;  io              1    0        unsigned char 
 19751 ;; Return value:  Size  Location     Type
 19752 ;;                  1    wreg      enum E12923
 19753 ;; Registers used:
 19754 ;;		wreg, status,2, status,0, cstack
 19755 ;; Tracked objects:
 19756 ;;		On entry : 0/0
 19757 ;;		On exit  : 0/0
 19758 ;;		Unchanged: 0/0
 19759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19760 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19761 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19763 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19764 ;;Total ram usage:        2 bytes
 19765 ;; Hardware stack levels used: 1
 19766 ;; Hardware stack levels required when called: 13
 19767 ;; This function calls:
 19768 ;;		___awdiv
 19769 ;;		___awmod
 19770 ;; This function is called by:
 19771 ;;		_setNV
 19772 ;; This function uses a non-reentrant model
 19773 ;;
 19774                           
 19775                           	psect	text56
 19776   00AD0C                     __ptext56:
 19777                           	callstack 0
 19778   00AD0C                     _APP_nvValidate:
 19779                           	callstack 14
 19780                           
 19781                           ; BSR set to: 0
 19782                           ;incstack = 0
 19783                           ;APP_nvValidate@index stored from wreg
 19784   00AD0C  0100               	movlb	0	; () banked
 19785   00AD0E  6FA0               	movwf	APP_nvValidate@index& (0+255),b
 19786                           
 19787                           ;../universalNv.c: 300:     uint8_t io;;../universalNv.c: 301:     if ((index >= 16) && 
      +                          (((index-16) % 7) == 0)) {
 19788   00AD10  0E0F               	movlw	15
 19789   00AD12  0100               	movlb	0	; () banked
 19790   00AD14  65A0               	cpfsgt	APP_nvValidate@index& (0+255),b
 19791   00AD16  D031               	goto	l819
 19792                           
 19793                           ; BSR set to: 0
 19794   00AD18  0EF0               	movlw	240
 19795   00AD1A  25A0               	addwf	APP_nvValidate@index& (0+255),w,b
 19796   00AD1C  6F8D               	movwf	___awmod@dividend& (0+255),b
 19797   00AD1E  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 19798   00AD20  0EFF               	movlw	255
 19799   00AD22  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 19800   00AD24  0E00               	movlw	0
 19801   00AD26  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 19802   00AD28  0E07               	movlw	7
 19803   00AD2A  6F8F               	movwf	___awmod@divisor& (0+255),b
 19804   00AD2C  EC31  F057         	call	___awmod	;wreg free
 19805   00AD30  0100               	movlb	0	; () banked
 19806   00AD32  518D               	movf	?___awmod& (0+255),w,b
 19807   00AD34  118E               	iorwf	(?___awmod+1)& (0+255),w,b
 19808   00AD36  A4D8               	btfss	status,2,c
 19809   00AD38  D020               	goto	l819
 19810                           
 19811                           ; BSR set to: 0
 19812   00AD3A  0EF0               	movlw	240
 19813   00AD3C  25A0               	addwf	APP_nvValidate@index& (0+255),w,b
 19814   00AD3E  6F97               	movwf	___awdiv@dividend& (0+255),b
 19815   00AD40  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 19816   00AD42  0EFF               	movlw	255
 19817   00AD44  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 19818   00AD46  0E00               	movlw	0
 19819   00AD48  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19820   00AD4A  0E07               	movlw	7
 19821   00AD4C  6F99               	movwf	___awdiv@divisor& (0+255),b
 19822   00AD4E  EC1C  F053         	call	___awdiv	;wreg free
 19823                           
 19824                           ;../universalNv.c: 308:         switch (value) {
 19825   00AD52  D002               	goto	l20765
 19826   00AD54                     l20759:
 19827                           
 19828                           ; BSR set to: 0
 19829                           ;../universalNv.c: 331:                 return INVALID;
 19830   00AD54  0E00               	movlw	0
 19831   00AD56  0012               	return	
 19832   00AD58                     l20765:
 19833   00AD58  0100               	movlb	0	; () banked
 19834   00AD5A  519F               	movf	APP_nvValidate@value& (0+255),w,b
 19835                           
 19836                           ; Switch size 1, requested type "simple"
 19837                           ; Number of cases is 5, Range of values is 0 to 4
 19838                           ; switch strategies available:
 19839                           ; Name         Instructions Cycles
 19840                           ; simple_byte           16     9 (average)
 19841                           ;	Chosen strategy is simple_byte
 19842   00AD5C  0A00               	xorlw	0	; case 0
 19843   00AD5E  B4D8               	btfsc	status,2,c
 19844   00AD60  D00C               	goto	l819
 19845   00AD62  0A01               	xorlw	1	; case 1
 19846   00AD64  B4D8               	btfsc	status,2,c
 19847   00AD66  D009               	goto	l819
 19848   00AD68  0A03               	xorlw	3	; case 2
 19849   00AD6A  B4D8               	btfsc	status,2,c
 19850   00AD6C  D006               	goto	l819
 19851   00AD6E  0A01               	xorlw	1	; case 3
 19852   00AD70  B4D8               	btfsc	status,2,c
 19853   00AD72  D003               	goto	l819
 19854   00AD74  0A07               	xorlw	7	; case 4
 19855   00AD76  A4D8               	btfss	status,2,c
 19856   00AD78  D7ED               	goto	l20759
 19857   00AD7A                     l819:
 19858                           
 19859                           ; BSR set to: 0
 19860                           ;../universalNv.c: 334:     return VALID;
 19861                           
 19862                           ; BSR set to: 0
 19863   00AD7A  0E01               	movlw	1
 19864                           
 19865                           ; BSR set to: 0
 19866   00AD7C  0012               	return		;funcret
 19867   00AD7E                     __end_of_APP_nvValidate:
 19868                           	callstack 0
 19869                           
 19870 ;; *************** function _producerEsdData *****************
 19871 ;; Defined at:
 19872 ;;		line 194 in file "../../VLCBlib_PIC/event_producer_happening.c"
 19873 ;; Parameters:    Size  Location     Type
 19874 ;;  index           1    wreg     unsigned char 
 19875 ;; Auto vars:     Size  Location     Type
 19876 ;;  index           1   45[BANK0 ] unsigned char 
 19877 ;; Return value:  Size  Location     Type
 19878 ;;                  1    wreg      unsigned char 
 19879 ;; Registers used:
 19880 ;;		wreg, status,2, status,0
 19881 ;; Tracked objects:
 19882 ;;		On entry : 0/0
 19883 ;;		On exit  : 0/0
 19884 ;;		Unchanged: 0/0
 19885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19887 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19889 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19890 ;;Total ram usage:        1 bytes
 19891 ;; Hardware stack levels used: 1
 19892 ;; Hardware stack levels required when called: 12
 19893 ;; This function calls:
 19894 ;;		Nothing
 19895 ;; This function is called by:
 19896 ;;		_mnsProcessMessage
 19897 ;; This function uses a non-reentrant model
 19898 ;;
 19899                           
 19900                           	psect	text57
 19901   00C3E8                     __ptext57:
 19902                           	callstack 0
 19903   00C3E8                     _producerEsdData:
 19904                           	callstack 16
 19905                           
 19906                           ; BSR set to: 0
 19907                           ;incstack = 0
 19908                           ;producerEsdData@index stored from wreg
 19909   00C3E8  0100               	movlb	0	; () banked
 19910   00C3EA  6F8D               	movwf	producerEsdData@index& (0+255),b
 19911                           
 19912                           ;../../VLCBlib_PIC/event_producer_happening.c: 195:     switch (index){
 19913   00C3EC  D004               	goto	l22695
 19914   00C3EE                     l22681:
 19915                           
 19916                           ; BSR set to: 0
 19917                           ;../../VLCBlib_PIC/event_producer_happening.c: 197:             return PRODUCER_EV_HAPPE
      +                          NING;
 19918   00C3EE  0E01               	movlw	1
 19919   00C3F0  0012               	return	
 19920   00C3F2                     l22689:
 19921                           
 19922                           ; BSR set to: 0
 19923                           ;../../VLCBlib_PIC/event_producer_happening.c: 201:             return 0;
 19924   00C3F2  0E00               	movlw	0
 19925   00C3F4  0012               	return	
 19926   00C3F6                     l22695:
 19927   00C3F6  0100               	movlb	0	; () banked
 19928   00C3F8  518D               	movf	producerEsdData@index& (0+255),w,b
 19929                           
 19930                           ; Switch size 1, requested type "simple"
 19931                           ; Number of cases is 2, Range of values is 0 to 1
 19932                           ; switch strategies available:
 19933                           ; Name         Instructions Cycles
 19934                           ; simple_byte            7     4 (average)
 19935                           ;	Chosen strategy is simple_byte
 19936   00C3FA  0A00               	xorlw	0	; case 0
 19937   00C3FC  B4D8               	btfsc	status,2,c
 19938   00C3FE  D7F7               	goto	l22681
 19939   00C400  0A01               	xorlw	1	; case 1
 19940   00C402  B4D8               	btfsc	status,2,c
 19941   00C404  D7F4               	goto	l22681
 19942   00C406  D7F5               	goto	l22689
 19943   00C408                     __end_of_producerEsdData:
 19944                           	callstack 0
 19945                           
 19946 ;; *************** function _canEsdData *****************
 19947 ;; Defined at:
 19948 ;;		line 422 in file "../../VLCBlib_PIC/can18_ecan.c"
 19949 ;; Parameters:    Size  Location     Type
 19950 ;;  id              1    wreg     unsigned char 
 19951 ;; Auto vars:     Size  Location     Type
 19952 ;;  id              1   45[BANK0 ] unsigned char 
 19953 ;; Return value:  Size  Location     Type
 19954 ;;                  1    wreg      unsigned char 
 19955 ;; Registers used:
 19956 ;;		wreg, status,2, status,0
 19957 ;; Tracked objects:
 19958 ;;		On entry : 0/0
 19959 ;;		On exit  : 0/0
 19960 ;;		Unchanged: 0/0
 19961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19963 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19965 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19966 ;;Total ram usage:        1 bytes
 19967 ;; Hardware stack levels used: 1
 19968 ;; Hardware stack levels required when called: 12
 19969 ;; This function calls:
 19970 ;;		Nothing
 19971 ;; This function is called by:
 19972 ;;		_mnsProcessMessage
 19973 ;; This function uses a non-reentrant model
 19974 ;;
 19975                           
 19976                           	psect	text58
 19977   00C4DE                     __ptext58:
 19978                           	callstack 0
 19979   00C4DE                     _canEsdData:
 19980                           	callstack 16
 19981                           
 19982                           ; BSR set to: 0
 19983                           ;incstack = 0
 19984                           ;canEsdData@id stored from wreg
 19985   00C4DE  0100               	movlb	0	; () banked
 19986   00C4E0  6F8D               	movwf	canEsdData@id& (0+255),b
 19987                           
 19988                           ;../../VLCBlib_PIC/can18_ecan.c: 423:     switch(id) {
 19989   00C4E2  D004               	goto	l22341
 19990   00C4E4                     l22331:
 19991                           
 19992                           ; BSR set to: 0
 19993                           ;../../VLCBlib_PIC/can18_ecan.c: 425:             return CAN_HW_PIC_ECAN;
 19994   00C4E4  0E01               	movlw	1
 19995   00C4E6  0012               	return	
 19996   00C4E8                     l22335:
 19997                           
 19998                           ; BSR set to: 0
 19999                           ;../../VLCBlib_PIC/can18_ecan.c: 427:             return 0;
 20000   00C4E8  0E00               	movlw	0
 20001   00C4EA  0012               	return	
 20002   00C4EC                     l22341:
 20003   00C4EC  0100               	movlb	0	; () banked
 20004   00C4EE  518D               	movf	canEsdData@id& (0+255),w,b
 20005                           
 20006                           ; Switch size 1, requested type "simple"
 20007                           ; Number of cases is 1, Range of values is 0 to 0
 20008                           ; switch strategies available:
 20009                           ; Name         Instructions Cycles
 20010                           ; simple_byte            4     3 (average)
 20011                           ;	Chosen strategy is simple_byte
 20012   00C4F0  0A00               	xorlw	0	; case 0
 20013   00C4F2  B4D8               	btfsc	status,2,c
 20014   00C4F4  D7F7               	goto	l22331
 20015   00C4F6  D7F8               	goto	l22335
 20016   00C4F8                     __end_of_canEsdData:
 20017                           	callstack 0
 20018                           
 20019 ;; *************** function _nvGetESDdata *****************
 20020 ;; Defined at:
 20021 ;;		line 355 in file "../../VLCBlib_PIC/nv.c"
 20022 ;; Parameters:    Size  Location     Type
 20023 ;;  id              1    wreg     unsigned char 
 20024 ;; Auto vars:     Size  Location     Type
 20025 ;;  id              1   45[BANK0 ] unsigned char 
 20026 ;; Return value:  Size  Location     Type
 20027 ;;                  1    wreg      unsigned char 
 20028 ;; Registers used:
 20029 ;;		wreg, status,2, status,0
 20030 ;; Tracked objects:
 20031 ;;		On entry : 0/0
 20032 ;;		On exit  : 0/0
 20033 ;;		Unchanged: 0/0
 20034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20036 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20038 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20039 ;;Total ram usage:        1 bytes
 20040 ;; Hardware stack levels used: 1
 20041 ;; Hardware stack levels required when called: 12
 20042 ;; This function calls:
 20043 ;;		Nothing
 20044 ;; This function is called by:
 20045 ;;		_mnsProcessMessage
 20046 ;; This function uses a non-reentrant model
 20047 ;;
 20048                           
 20049                           	psect	text59
 20050   00C4F8                     __ptext59:
 20051                           	callstack 0
 20052   00C4F8                     _nvGetESDdata:
 20053                           	callstack 16
 20054                           
 20055                           ; BSR set to: 0
 20056                           ;incstack = 0
 20057                           ;nvGetESDdata@id stored from wreg
 20058   00C4F8  0100               	movlb	0	; () banked
 20059   00C4FA  6F8D               	movwf	nvGetESDdata@id& (0+255),b
 20060                           
 20061                           ;../../VLCBlib_PIC/nv.c: 356:     switch (id) {
 20062   00C4FC  D004               	goto	l22095
 20063   00C4FE                     l22085:
 20064                           
 20065                           ; BSR set to: 0
 20066   00C4FE  0E7F               	movlw	127
 20067   00C500  0012               	return	
 20068   00C502                     l22089:
 20069                           
 20070                           ; BSR set to: 0
 20071   00C502  0E00               	movlw	0
 20072   00C504  0012               	return	
 20073   00C506                     l22095:
 20074   00C506  0100               	movlb	0	; () banked
 20075   00C508  518D               	movf	nvGetESDdata@id& (0+255),w,b
 20076                           
 20077                           ; Switch size 1, requested type "simple"
 20078                           ; Number of cases is 1, Range of values is 1 to 1
 20079                           ; switch strategies available:
 20080                           ; Name         Instructions Cycles
 20081                           ; simple_byte            4     3 (average)
 20082                           ;	Chosen strategy is simple_byte
 20083   00C50A  0A01               	xorlw	1	; case 1
 20084   00C50C  B4D8               	btfsc	status,2,c
 20085   00C50E  D7F7               	goto	l22085
 20086   00C510  D7F8               	goto	l22089
 20087   00C512                     __end_of_nvGetESDdata:
 20088                           	callstack 0
 20089                           
 20090 ;; *************** function _bootEsdData *****************
 20091 ;; Defined at:
 20092 ;;		line 250 in file "../../VLCBlib_PIC/boot.c"
 20093 ;; Parameters:    Size  Location     Type
 20094 ;;  id              1    wreg     unsigned char 
 20095 ;; Auto vars:     Size  Location     Type
 20096 ;;  id              1   45[BANK0 ] unsigned char 
 20097 ;; Return value:  Size  Location     Type
 20098 ;;                  1    wreg      unsigned char 
 20099 ;; Registers used:
 20100 ;;		wreg, status,2, status,0
 20101 ;; Tracked objects:
 20102 ;;		On entry : 0/0
 20103 ;;		On exit  : 0/0
 20104 ;;		Unchanged: 0/0
 20105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20107 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20109 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20110 ;;Total ram usage:        1 bytes
 20111 ;; Hardware stack levels used: 1
 20112 ;; Hardware stack levels required when called: 12
 20113 ;; This function calls:
 20114 ;;		Nothing
 20115 ;; This function is called by:
 20116 ;;		_mnsProcessMessage
 20117 ;; This function uses a non-reentrant model
 20118 ;;
 20119                           
 20120                           	psect	text60
 20121   00C312                     __ptext60:
 20122                           	callstack 0
 20123   00C312                     _bootEsdData:
 20124                           	callstack 16
 20125                           
 20126                           ; BSR set to: 0
 20127                           ;incstack = 0
 20128                           ;bootEsdData@id stored from wreg
 20129   00C312  0100               	movlb	0	; () banked
 20130   00C314  6F8D               	movwf	bootEsdData@id& (0+255),b
 20131                           
 20132                           ;../../VLCBlib_PIC/boot.c: 251:     switch (id) {
 20133   00C316  D006               	goto	l21955
 20134   00C318                     l1271:
 20135                           
 20136                           ; BSR set to: 0
 20137                           ;../../VLCBlib_PIC/boot.c: 254:             return bootloaderType;
 20138   00C318  51C8               	movf	_bootloaderType& (0+255),w,b
 20139   00C31A  0012               	return	
 20140   00C31C                     l1273:
 20141                           
 20142                           ; BSR set to: 0
 20143                           ;../../VLCBlib_PIC/boot.c: 257:             return bootloaderVersion;
 20144   00C31C  5048               	movf	_bootloaderVersion^0,w,c
 20145   00C31E  0012               	return	
 20146   00C320                     l21949:
 20147                           
 20148                           ; BSR set to: 0
 20149                           ;../../VLCBlib_PIC/boot.c: 259:             return 0;
 20150   00C320  0E00               	movlw	0
 20151   00C322  0012               	return	
 20152   00C324                     l21955:
 20153   00C324  0100               	movlb	0	; () banked
 20154   00C326  518D               	movf	bootEsdData@id& (0+255),w,b
 20155                           
 20156                           ; Switch size 1, requested type "simple"
 20157                           ; Number of cases is 2, Range of values is 1 to 2
 20158                           ; switch strategies available:
 20159                           ; Name         Instructions Cycles
 20160                           ; simple_byte            7     4 (average)
 20161                           ;	Chosen strategy is simple_byte
 20162   00C328  0A01               	xorlw	1	; case 1
 20163   00C32A  B4D8               	btfsc	status,2,c
 20164   00C32C  D7F5               	goto	l1271
 20165   00C32E  0A03               	xorlw	3	; case 2
 20166   00C330  B4D8               	btfsc	status,2,c
 20167   00C332  D7F4               	goto	l1273
 20168   00C334  D7F5               	goto	l21949
 20169   00C336                     __end_of_bootEsdData:
 20170                           	callstack 0
 20171                           
 20172 ;; *************** function _consumer2QEsdData *****************
 20173 ;; Defined at:
 20174 ;;		line 364 in file "../event_consumerDualActionQueue.c"
 20175 ;; Parameters:    Size  Location     Type
 20176 ;;  index           1    wreg     unsigned char 
 20177 ;; Auto vars:     Size  Location     Type
 20178 ;;  index           1   45[BANK0 ] unsigned char 
 20179 ;; Return value:  Size  Location     Type
 20180 ;;                  1    wreg      unsigned char 
 20181 ;; Registers used:
 20182 ;;		wreg, status,2, status,0
 20183 ;; Tracked objects:
 20184 ;;		On entry : 0/0
 20185 ;;		On exit  : 0/0
 20186 ;;		Unchanged: 0/0
 20187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20189 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20191 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20192 ;;Total ram usage:        1 bytes
 20193 ;; Hardware stack levels used: 1
 20194 ;; Hardware stack levels required when called: 12
 20195 ;; This function calls:
 20196 ;;		Nothing
 20197 ;; This function is called by:
 20198 ;;		_mnsProcessMessage
 20199 ;; This function uses a non-reentrant model
 20200 ;;
 20201                           
 20202                           	psect	text61
 20203   00C408                     __ptext61:
 20204                           	callstack 0
 20205   00C408                     _consumer2QEsdData:
 20206                           	callstack 16
 20207                           
 20208                           ; BSR set to: 0
 20209                           ;incstack = 0
 20210                           ;consumer2QEsdData@index stored from wreg
 20211   00C408  0100               	movlb	0	; () banked
 20212   00C40A  6F8D               	movwf	consumer2QEsdData@index& (0+255),b
 20213                           
 20214                           ;../event_consumerDualActionQueue.c: 365:     switch (index){
 20215   00C40C  D004               	goto	l21401
 20216   00C40E                     l21387:
 20217                           
 20218                           ; BSR set to: 0
 20219                           ;../event_consumerDualActionQueue.c: 367:             return CONSUMER_EV_ACTIONS;
 20220   00C40E  0E01               	movlw	1
 20221   00C410  0012               	return	
 20222   00C412                     l21395:
 20223                           
 20224                           ; BSR set to: 0
 20225                           ;../event_consumerDualActionQueue.c: 371:             return 0;
 20226   00C412  0E00               	movlw	0
 20227   00C414  0012               	return	
 20228   00C416                     l21401:
 20229   00C416  0100               	movlb	0	; () banked
 20230   00C418  518D               	movf	consumer2QEsdData@index& (0+255),w,b
 20231                           
 20232                           ; Switch size 1, requested type "simple"
 20233                           ; Number of cases is 2, Range of values is 0 to 1
 20234                           ; switch strategies available:
 20235                           ; Name         Instructions Cycles
 20236                           ; simple_byte            7     4 (average)
 20237                           ;	Chosen strategy is simple_byte
 20238   00C41A  0A00               	xorlw	0	; case 0
 20239   00C41C  B4D8               	btfsc	status,2,c
 20240   00C41E  D7F7               	goto	l21387
 20241   00C420  0A01               	xorlw	1	; case 1
 20242   00C422  B4D8               	btfsc	status,2,c
 20243   00C424  D7F4               	goto	l21387
 20244   00C426  D7F5               	goto	l21395
 20245   00C428                     __end_of_consumer2QEsdData:
 20246                           	callstack 0
 20247                           
 20248 ;; *************** function _teachGetESDdata *****************
 20249 ;; Defined at:
 20250 ;;		line 528 in file "../../VLCBlib_PIC/event_teach_large.c"
 20251 ;; Parameters:    Size  Location     Type
 20252 ;;  id              1    wreg     unsigned char 
 20253 ;; Auto vars:     Size  Location     Type
 20254 ;;  id              1   45[BANK0 ] unsigned char 
 20255 ;; Return value:  Size  Location     Type
 20256 ;;                  1    wreg      unsigned char 
 20257 ;; Registers used:
 20258 ;;		wreg, status,2, status,0
 20259 ;; Tracked objects:
 20260 ;;		On entry : 0/0
 20261 ;;		On exit  : 0/0
 20262 ;;		Unchanged: 0/0
 20263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20265 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20267 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20268 ;;Total ram usage:        1 bytes
 20269 ;; Hardware stack levels used: 1
 20270 ;; Hardware stack levels required when called: 12
 20271 ;; This function calls:
 20272 ;;		Nothing
 20273 ;; This function is called by:
 20274 ;;		_mnsProcessMessage
 20275 ;; This function uses a non-reentrant model
 20276 ;;
 20277                           
 20278                           	psect	text62
 20279   00C336                     __ptext62:
 20280                           	callstack 0
 20281   00C336                     _teachGetESDdata:
 20282                           	callstack 16
 20283                           
 20284                           ; BSR set to: 0
 20285                           ;incstack = 0
 20286                           ;teachGetESDdata@id stored from wreg
 20287   00C336  0100               	movlb	0	; () banked
 20288   00C338  6F8D               	movwf	teachGetESDdata@id& (0+255),b
 20289                           
 20290                           ;../../VLCBlib_PIC/event_teach_large.c: 529:     switch (id) {
 20291   00C33A  D006               	goto	l22643
 20292   00C33C                     l22629:
 20293                           
 20294                           ; BSR set to: 0
 20295   00C33C  0EFF               	movlw	255
 20296   00C33E  0012               	return	
 20297   00C340                     l22633:
 20298                           
 20299                           ; BSR set to: 0
 20300   00C340  0E14               	movlw	20
 20301   00C342  0012               	return	
 20302   00C344                     l22637:
 20303                           
 20304                           ; BSR set to: 0
 20305   00C344  0E00               	movlw	0
 20306   00C346  0012               	return	
 20307   00C348                     l22643:
 20308   00C348  0100               	movlb	0	; () banked
 20309   00C34A  518D               	movf	teachGetESDdata@id& (0+255),w,b
 20310                           
 20311                           ; Switch size 1, requested type "simple"
 20312                           ; Number of cases is 2, Range of values is 1 to 2
 20313                           ; switch strategies available:
 20314                           ; Name         Instructions Cycles
 20315                           ; simple_byte            7     4 (average)
 20316                           ;	Chosen strategy is simple_byte
 20317   00C34C  0A01               	xorlw	1	; case 1
 20318   00C34E  B4D8               	btfsc	status,2,c
 20319   00C350  D7F5               	goto	l22629
 20320   00C352  0A03               	xorlw	3	; case 2
 20321   00C354  B4D8               	btfsc	status,2,c
 20322   00C356  D7F4               	goto	l22633
 20323   00C358  D7F5               	goto	l22637
 20324   00C35A                     __end_of_teachGetESDdata:
 20325                           	callstack 0
 20326                           
 20327 ;; *************** function _producerGetDiagnostic *****************
 20328 ;; Defined at:
 20329 ;;		line 180 in file "../../VLCBlib_PIC/event_producer_happening.c"
 20330 ;; Parameters:    Size  Location     Type
 20331 ;;  index           1    wreg     unsigned char 
 20332 ;; Auto vars:     Size  Location     Type
 20333 ;;  index           1   56[BANK0 ] unsigned char 
 20334 ;; Return value:  Size  Location     Type
 20335 ;;                  2   54[BANK0 ] PTR struct DiagnosticVal
 20336 ;; Registers used:
 20337 ;;		wreg, status,2, status,0, prodl, prodh
 20338 ;; Tracked objects:
 20339 ;;		On entry : 0/0
 20340 ;;		On exit  : 0/0
 20341 ;;		Unchanged: 0/0
 20342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20343 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20344 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20346 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20347 ;;Total ram usage:        3 bytes
 20348 ;; Hardware stack levels used: 1
 20349 ;; Hardware stack levels required when called: 12
 20350 ;; This function calls:
 20351 ;;		Nothing
 20352 ;; This function is called by:
 20353 ;;		_mnsTRallDiagnosticsCallback
 20354 ;;		_mnsProcessMessage
 20355 ;; This function uses a non-reentrant model
 20356 ;;
 20357                           
 20358                           	psect	text63
 20359   00C186                     __ptext63:
 20360                           	callstack 0
 20361   00C186                     _producerGetDiagnostic:
 20362                           	callstack 15
 20363                           
 20364                           ; BSR set to: 0
 20365                           ;incstack = 0
 20366                           ;producerGetDiagnostic@index stored from wreg
 20367   00C186  0100               	movlb	0	; () banked
 20368   00C188  6F98               	movwf	producerGetDiagnostic@index& (0+255),b
 20369                           
 20370                           ;../../VLCBlib_PIC/event_producer_happening.c: 181:     if (index > 1) {
 20371   00C18A  0E01               	movlw	1
 20372   00C18C  0100               	movlb	0	; () banked
 20373   00C18E  6598               	cpfsgt	producerGetDiagnostic@index& (0+255),b
 20374   00C190  D005               	goto	l21271
 20375                           
 20376                           ; BSR set to: 0
 20377                           ;../../VLCBlib_PIC/event_producer_happening.c: 182:         return ((void*)0);
 20378   00C192  0E00               	movlw	0
 20379   00C194  6F96               	movwf	?_producerGetDiagnostic& (0+255),b
 20380   00C196  0E00               	movlw	0
 20381   00C198  6F97               	movwf	(?_producerGetDiagnostic+1)& (0+255),b
 20382   00C19A  0012               	return	
 20383   00C19C                     l21271:
 20384                           
 20385                           ; BSR set to: 0
 20386                           ;../../VLCBlib_PIC/event_producer_happening.c: 184:     return &(producerDiagnostics[ind
      +                          ex]);
 20387   00C19C  5198               	movf	producerGetDiagnostic@index& (0+255),w,b
 20388   00C19E  0D02               	mullw	2
 20389   00C1A0  0EAA               	movlw	low _producerDiagnostics
 20390   00C1A2  24F3               	addwf	243,w,c
 20391   00C1A4  6F96               	movwf	?_producerGetDiagnostic& (0+255),b
 20392   00C1A6  0E01               	movlw	high _producerDiagnostics
 20393   00C1A8  20F4               	addwfc	prodh,w,c
 20394   00C1AA  6F97               	movwf	(?_producerGetDiagnostic+1)& (0+255),b
 20395                           
 20396                           ; BSR set to: 0
 20397   00C1AC  0012               	return		;funcret
 20398   00C1AE                     __end_of_producerGetDiagnostic:
 20399                           	callstack 0
 20400                           
 20401 ;; *************** function _canGetDiagnostic *****************
 20402 ;; Defined at:
 20403 ;;		line 438 in file "../../VLCBlib_PIC/can18_ecan.c"
 20404 ;; Parameters:    Size  Location     Type
 20405 ;;  index           1    wreg     unsigned char 
 20406 ;; Auto vars:     Size  Location     Type
 20407 ;;  index           1   57[BANK0 ] unsigned char 
 20408 ;; Return value:  Size  Location     Type
 20409 ;;                  2   54[BANK0 ] PTR struct DiagnosticVal
 20410 ;; Registers used:
 20411 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20412 ;; Tracked objects:
 20413 ;;		On entry : 0/0
 20414 ;;		On exit  : 0/0
 20415 ;;		Unchanged: 0/0
 20416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20417 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20418 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20419 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20420 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20421 ;;Total ram usage:        4 bytes
 20422 ;; Hardware stack levels used: 1
 20423 ;; Hardware stack levels required when called: 14
 20424 ;; This function calls:
 20425 ;;		_getNumRxBuffersInUse
 20426 ;;		_getNumTxBuffersInUse
 20427 ;; This function is called by:
 20428 ;;		_mnsTRallDiagnosticsCallback
 20429 ;;		_mnsProcessMessage
 20430 ;; This function uses a non-reentrant model
 20431 ;;
 20432                           
 20433                           	psect	text64
 20434   00AFB0                     __ptext64:
 20435                           	callstack 0
 20436   00AFB0                     _canGetDiagnostic:
 20437                           	callstack 13
 20438                           
 20439                           ; BSR set to: 0
 20440                           ;incstack = 0
 20441                           ;canGetDiagnostic@index stored from wreg
 20442   00AFB0  0100               	movlb	0	; () banked
 20443   00AFB2  6F99               	movwf	canGetDiagnostic@index& (0+255),b
 20444                           
 20445                           ;../../VLCBlib_PIC/can18_ecan.c: 439:     if (index > 18) {
 20446   00AFB4  0E12               	movlw	18
 20447   00AFB6  0100               	movlb	0	; () banked
 20448   00AFB8  6599               	cpfsgt	canGetDiagnostic@index& (0+255),b
 20449   00AFBA  D01C               	goto	l21177
 20450                           
 20451                           ; BSR set to: 0
 20452                           ;../../VLCBlib_PIC/can18_ecan.c: 440:         return ((void*)0);
 20453   00AFBC  0E00               	movlw	0
 20454   00AFBE  6F96               	movwf	?_canGetDiagnostic& (0+255),b
 20455   00AFC0  0E00               	movlw	0
 20456   00AFC2  6F97               	movwf	(?_canGetDiagnostic+1)& (0+255),b
 20457   00AFC4  0012               	return	
 20458   00AFC6                     l2484:
 20459                           
 20460                           ; BSR set to: 0
 20461                           ;../../VLCBlib_PIC/can18_ecan.c: 444:             canDiagnostics[0x03].asUint = COMSTAT;
 20462   00AFC6  CF71 F16D          	movff	3953,_canDiagnostics+6	;volatile
 20463   00AFCA  0101               	movlb	1	; () banked
 20464   00AFCC  6B6E               	clrf	(_canDiagnostics+7)& (0+255),b
 20465                           
 20466                           ;../../VLCBlib_PIC/can18_ecan.c: 445:             break;
 20467   00AFCE  D01C               	goto	l21179
 20468   00AFD0                     l21171:
 20469                           
 20470                           ; BSR set to: 0
 20471                           ;../../VLCBlib_PIC/can18_ecan.c: 447:             canDiagnostics[0x04].asUint = getNumTx
      +                          BuffersInUse();
 20472   00AFD0  ECE7  F062         	call	_getNumTxBuffersInUse	;wreg free
 20473   00AFD4  0100               	movlb	0	; () banked
 20474   00AFD6  6F98               	movwf	??_canGetDiagnostic& (0+255),b
 20475   00AFD8  5198               	movf	??_canGetDiagnostic& (0+255),w,b
 20476   00AFDA  0101               	movlb	1	; () banked
 20477   00AFDC  6F6F               	movwf	(_canDiagnostics+8)& (0+255),b
 20478   00AFDE  6B70               	clrf	(_canDiagnostics+9)& (0+255),b
 20479                           
 20480                           ;../../VLCBlib_PIC/can18_ecan.c: 448:             break;
 20481   00AFE0  D013               	goto	l21179
 20482   00AFE2                     l21173:
 20483                           
 20484                           ; BSR set to: 0
 20485                           ;../../VLCBlib_PIC/can18_ecan.c: 450:             canDiagnostics[0x07].asUint = getNumRx
      +                          BuffersInUse();
 20486   00AFE2  EC8F  F05E         	call	_getNumRxBuffersInUse	;wreg free
 20487   00AFE6  0100               	movlb	0	; () banked
 20488   00AFE8  6F98               	movwf	??_canGetDiagnostic& (0+255),b
 20489   00AFEA  5198               	movf	??_canGetDiagnostic& (0+255),w,b
 20490   00AFEC  0101               	movlb	1	; () banked
 20491   00AFEE  6F75               	movwf	(_canDiagnostics+14)& (0+255),b
 20492   00AFF0  6B76               	clrf	(_canDiagnostics+15)& (0+255),b
 20493                           
 20494                           ;../../VLCBlib_PIC/can18_ecan.c: 451:             break;
 20495   00AFF2  D00A               	goto	l21179
 20496   00AFF4                     l21177:
 20497                           
 20498                           ; BSR set to: 0
 20499   00AFF4  5199               	movf	canGetDiagnostic@index& (0+255),w,b
 20500                           
 20501                           ; Switch size 1, requested type "simple"
 20502                           ; Number of cases is 3, Range of values is 3 to 7
 20503                           ; switch strategies available:
 20504                           ; Name         Instructions Cycles
 20505                           ; simple_byte           10     6 (average)
 20506                           ;	Chosen strategy is simple_byte
 20507   00AFF6  0A03               	xorlw	3	; case 3
 20508   00AFF8  B4D8               	btfsc	status,2,c
 20509   00AFFA  D7E5               	goto	l2484
 20510   00AFFC  0A07               	xorlw	7	; case 4
 20511   00AFFE  B4D8               	btfsc	status,2,c
 20512   00B000  D7E7               	goto	l21171
 20513   00B002  0A03               	xorlw	3	; case 7
 20514   00B004  B4D8               	btfsc	status,2,c
 20515   00B006  D7ED               	goto	l21173
 20516   00B008                     l21179:
 20517                           
 20518                           ;../../VLCBlib_PIC/can18_ecan.c: 453:     return &(canDiagnostics[index]);
 20519   00B008  0100               	movlb	0	; () banked
 20520   00B00A  5199               	movf	canGetDiagnostic@index& (0+255),w,b
 20521   00B00C  0D02               	mullw	2
 20522   00B00E  0E67               	movlw	low _canDiagnostics
 20523   00B010  24F3               	addwf	243,w,c
 20524   00B012  6F96               	movwf	?_canGetDiagnostic& (0+255),b
 20525   00B014  0E01               	movlw	high _canDiagnostics
 20526   00B016  20F4               	addwfc	prodh,w,c
 20527   00B018  6F97               	movwf	(?_canGetDiagnostic+1)& (0+255),b
 20528                           
 20529                           ; BSR set to: 0
 20530   00B01A  0012               	return		;funcret
 20531   00B01C                     __end_of_canGetDiagnostic:
 20532                           	callstack 0
 20533                           
 20534 ;; *************** function _nvGetDiagnostic *****************
 20535 ;; Defined at:
 20536 ;;		line 150 in file "../../VLCBlib_PIC/nv.c"
 20537 ;; Parameters:    Size  Location     Type
 20538 ;;  index           1    wreg     unsigned char 
 20539 ;; Auto vars:     Size  Location     Type
 20540 ;;  index           1   56[BANK0 ] unsigned char 
 20541 ;; Return value:  Size  Location     Type
 20542 ;;                  2   54[BANK0 ] PTR struct DiagnosticVal
 20543 ;; Registers used:
 20544 ;;		wreg, status,2, status,0, prodl, prodh
 20545 ;; Tracked objects:
 20546 ;;		On entry : 0/0
 20547 ;;		On exit  : 0/0
 20548 ;;		Unchanged: 0/0
 20549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20550 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20551 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20553 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20554 ;;Total ram usage:        3 bytes
 20555 ;; Hardware stack levels used: 1
 20556 ;; Hardware stack levels required when called: 12
 20557 ;; This function calls:
 20558 ;;		Nothing
 20559 ;; This function is called by:
 20560 ;;		_mnsTRallDiagnosticsCallback
 20561 ;;		_mnsProcessMessage
 20562 ;; This function uses a non-reentrant model
 20563 ;;
 20564                           
 20565                           	psect	text65
 20566   00C1AE                     __ptext65:
 20567                           	callstack 0
 20568   00C1AE                     _nvGetDiagnostic:
 20569                           	callstack 15
 20570                           
 20571                           ; BSR set to: 0
 20572                           ;incstack = 0
 20573                           ;nvGetDiagnostic@index stored from wreg
 20574   00C1AE  0100               	movlb	0	; () banked
 20575   00C1B0  6F98               	movwf	nvGetDiagnostic@index& (0+255),b
 20576                           
 20577                           ;../../VLCBlib_PIC/nv.c: 151:     if (index > 2) {
 20578   00C1B2  0E02               	movlw	2
 20579   00C1B4  0100               	movlb	0	; () banked
 20580   00C1B6  6598               	cpfsgt	nvGetDiagnostic@index& (0+255),b
 20581   00C1B8  D005               	goto	l21085
 20582                           
 20583                           ; BSR set to: 0
 20584                           ;../../VLCBlib_PIC/nv.c: 152:         return ((void*)0);
 20585   00C1BA  0E00               	movlw	0
 20586   00C1BC  6F96               	movwf	?_nvGetDiagnostic& (0+255),b
 20587   00C1BE  0E00               	movlw	0
 20588   00C1C0  6F97               	movwf	(?_nvGetDiagnostic+1)& (0+255),b
 20589   00C1C2  0012               	return	
 20590   00C1C4                     l21085:
 20591                           
 20592                           ; BSR set to: 0
 20593                           ;../../VLCBlib_PIC/nv.c: 154:     return &(nvDiagnostics[index]);
 20594   00C1C4  5198               	movf	nvGetDiagnostic@index& (0+255),w,b
 20595   00C1C6  0D02               	mullw	2
 20596   00C1C8  0EA4               	movlw	low _nvDiagnostics
 20597   00C1CA  24F3               	addwf	243,w,c
 20598   00C1CC  6F96               	movwf	?_nvGetDiagnostic& (0+255),b
 20599   00C1CE  0E01               	movlw	high _nvDiagnostics
 20600   00C1D0  20F4               	addwfc	prodh,w,c
 20601   00C1D2  6F97               	movwf	(?_nvGetDiagnostic+1)& (0+255),b
 20602                           
 20603                           ; BSR set to: 0
 20604   00C1D4  0012               	return		;funcret
 20605   00C1D6                     __end_of_nvGetDiagnostic:
 20606                           	callstack 0
 20607                           
 20608 ;; *************** function _mnsGetDiagnostic *****************
 20609 ;; Defined at:
 20610 ;;		line 802 in file "../../VLCBlib_PIC/mns.c"
 20611 ;; Parameters:    Size  Location     Type
 20612 ;;  index           1    wreg     unsigned char 
 20613 ;; Auto vars:     Size  Location     Type
 20614 ;;  index           1   56[BANK0 ] unsigned char 
 20615 ;; Return value:  Size  Location     Type
 20616 ;;                  2   54[BANK0 ] PTR struct DiagnosticVal
 20617 ;; Registers used:
 20618 ;;		wreg, status,2, status,0, prodl, prodh
 20619 ;; Tracked objects:
 20620 ;;		On entry : 0/0
 20621 ;;		On exit  : 0/0
 20622 ;;		Unchanged: 0/0
 20623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20624 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20625 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20627 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20628 ;;Total ram usage:        3 bytes
 20629 ;; Hardware stack levels used: 1
 20630 ;; Hardware stack levels required when called: 12
 20631 ;; This function calls:
 20632 ;;		Nothing
 20633 ;; This function is called by:
 20634 ;;		_mnsTRallDiagnosticsCallback
 20635 ;;		_mnsProcessMessage
 20636 ;; This function uses a non-reentrant model
 20637 ;;
 20638                           
 20639                           	psect	text66
 20640   00C1D6                     __ptext66:
 20641                           	callstack 0
 20642   00C1D6                     _mnsGetDiagnostic:
 20643                           	callstack 15
 20644                           
 20645                           ; BSR set to: 0
 20646                           ;incstack = 0
 20647                           ;mnsGetDiagnostic@index stored from wreg
 20648   00C1D6  0100               	movlb	0	; () banked
 20649   00C1D8  6F98               	movwf	mnsGetDiagnostic@index& (0+255),b
 20650                           
 20651                           ;../../VLCBlib_PIC/mns.c: 803:     if (index > 6) {
 20652   00C1DA  0E06               	movlw	6
 20653   00C1DC  0100               	movlb	0	; () banked
 20654   00C1DE  6598               	cpfsgt	mnsGetDiagnostic@index& (0+255),b
 20655   00C1E0  D005               	goto	l21023
 20656                           
 20657                           ; BSR set to: 0
 20658                           ;../../VLCBlib_PIC/mns.c: 804:         return ((void*)0);
 20659   00C1E2  0E00               	movlw	0
 20660   00C1E4  6F96               	movwf	?_mnsGetDiagnostic& (0+255),b
 20661   00C1E6  0E00               	movlw	0
 20662   00C1E8  6F97               	movwf	(?_mnsGetDiagnostic+1)& (0+255),b
 20663   00C1EA  0012               	return	
 20664   00C1EC                     l21023:
 20665                           
 20666                           ; BSR set to: 0
 20667                           ;../../VLCBlib_PIC/mns.c: 806:     return &(mnsDiagnostics[index]);
 20668   00C1EC  5198               	movf	mnsGetDiagnostic@index& (0+255),w,b
 20669   00C1EE  0D02               	mullw	2
 20670   00C1F0  0E8D               	movlw	low _mnsDiagnostics
 20671   00C1F2  24F3               	addwf	243,w,c
 20672   00C1F4  6F96               	movwf	?_mnsGetDiagnostic& (0+255),b
 20673   00C1F6  0E01               	movlw	high _mnsDiagnostics
 20674   00C1F8  20F4               	addwfc	prodh,w,c
 20675   00C1FA  6F97               	movwf	(?_mnsGetDiagnostic+1)& (0+255),b
 20676                           
 20677                           ; BSR set to: 0
 20678   00C1FC  0012               	return		;funcret
 20679   00C1FE                     __end_of_mnsGetDiagnostic:
 20680                           	callstack 0
 20681                           
 20682 ;; *************** function _ackGetDiagnostic *****************
 20683 ;; Defined at:
 20684 ;;		line 194 in file "../../VLCBlib_PIC/event_acknowledge.c"
 20685 ;; Parameters:    Size  Location     Type
 20686 ;;  index           1    wreg     unsigned char 
 20687 ;; Auto vars:     Size  Location     Type
 20688 ;;  index           1   56[BANK0 ] unsigned char 
 20689 ;; Return value:  Size  Location     Type
 20690 ;;                  2   54[BANK0 ] PTR struct DiagnosticVal
 20691 ;; Registers used:
 20692 ;;		wreg, status,2, status,0, prodl, prodh
 20693 ;; Tracked objects:
 20694 ;;		On entry : 0/0
 20695 ;;		On exit  : 0/0
 20696 ;;		Unchanged: 0/0
 20697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20698 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20699 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20701 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20702 ;;Total ram usage:        3 bytes
 20703 ;; Hardware stack levels used: 1
 20704 ;; Hardware stack levels required when called: 12
 20705 ;; This function calls:
 20706 ;;		Nothing
 20707 ;; This function is called by:
 20708 ;;		_mnsTRallDiagnosticsCallback
 20709 ;;		_mnsProcessMessage
 20710 ;; This function uses a non-reentrant model
 20711 ;;
 20712                           
 20713                           	psect	text67
 20714   00C1FE                     __ptext67:
 20715                           	callstack 0
 20716   00C1FE                     _ackGetDiagnostic:
 20717                           	callstack 15
 20718                           
 20719                           ; BSR set to: 0
 20720                           ;incstack = 0
 20721                           ;ackGetDiagnostic@index stored from wreg
 20722   00C1FE  0100               	movlb	0	; () banked
 20723   00C200  6F98               	movwf	ackGetDiagnostic@index& (0+255),b
 20724                           
 20725                           ;../../VLCBlib_PIC/event_acknowledge.c: 195:     if (index > 1) {
 20726   00C202  0E01               	movlw	1
 20727   00C204  0100               	movlb	0	; () banked
 20728   00C206  6598               	cpfsgt	ackGetDiagnostic@index& (0+255),b
 20729   00C208  D005               	goto	l20903
 20730                           
 20731                           ; BSR set to: 0
 20732                           ;../../VLCBlib_PIC/event_acknowledge.c: 196:         return ((void*)0);
 20733   00C20A  0E00               	movlw	0
 20734   00C20C  6F96               	movwf	?_ackGetDiagnostic& (0+255),b
 20735   00C20E  0E00               	movlw	0
 20736   00C210  6F97               	movwf	(?_ackGetDiagnostic+1)& (0+255),b
 20737   00C212  0012               	return	
 20738   00C214                     l20903:
 20739                           
 20740                           ; BSR set to: 0
 20741                           ;../../VLCBlib_PIC/event_acknowledge.c: 198:     return &(ackDiagnostics[index]);
 20742   00C214  5198               	movf	ackGetDiagnostic@index& (0+255),w,b
 20743   00C216  0D02               	mullw	2
 20744   00C218  0EB2               	movlw	low _ackDiagnostics
 20745   00C21A  24F3               	addwf	243,w,c
 20746   00C21C  6F96               	movwf	?_ackGetDiagnostic& (0+255),b
 20747   00C21E  0E01               	movlw	high _ackDiagnostics
 20748   00C220  20F4               	addwfc	prodh,w,c
 20749   00C222  6F97               	movwf	(?_ackGetDiagnostic+1)& (0+255),b
 20750                           
 20751                           ; BSR set to: 0
 20752   00C224  0012               	return		;funcret
 20753   00C226                     __end_of_ackGetDiagnostic:
 20754                           	callstack 0
 20755                           
 20756 ;; *************** function _consumer2QGetDiagnostic *****************
 20757 ;; Defined at:
 20758 ;;		line 350 in file "../event_consumerDualActionQueue.c"
 20759 ;; Parameters:    Size  Location     Type
 20760 ;;  index           1    wreg     unsigned char 
 20761 ;; Auto vars:     Size  Location     Type
 20762 ;;  index           1   56[BANK0 ] unsigned char 
 20763 ;; Return value:  Size  Location     Type
 20764 ;;                  2   54[BANK0 ] PTR struct DiagnosticVal
 20765 ;; Registers used:
 20766 ;;		wreg, status,2, status,0, prodl, prodh
 20767 ;; Tracked objects:
 20768 ;;		On entry : 0/0
 20769 ;;		On exit  : 0/0
 20770 ;;		Unchanged: 0/0
 20771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20772 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20773 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20775 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20776 ;;Total ram usage:        3 bytes
 20777 ;; Hardware stack levels used: 1
 20778 ;; Hardware stack levels required when called: 12
 20779 ;; This function calls:
 20780 ;;		Nothing
 20781 ;; This function is called by:
 20782 ;;		_mnsTRallDiagnosticsCallback
 20783 ;;		_mnsProcessMessage
 20784 ;; This function uses a non-reentrant model
 20785 ;;
 20786                           
 20787                           	psect	text68
 20788   00C226                     __ptext68:
 20789                           	callstack 0
 20790   00C226                     _consumer2QGetDiagnostic:
 20791                           	callstack 15
 20792                           
 20793                           ; BSR set to: 0
 20794                           ;incstack = 0
 20795                           ;consumer2QGetDiagnostic@index stored from wreg
 20796   00C226  0100               	movlb	0	; () banked
 20797   00C228  6F98               	movwf	consumer2QGetDiagnostic@index& (0+255),b
 20798                           
 20799                           ;../event_consumerDualActionQueue.c: 351:     if (index > 1) {
 20800   00C22A  0E01               	movlw	1
 20801   00C22C  0100               	movlb	0	; () banked
 20802   00C22E  6598               	cpfsgt	consumer2QGetDiagnostic@index& (0+255),b
 20803   00C230  D005               	goto	l20549
 20804                           
 20805                           ; BSR set to: 0
 20806                           ;../event_consumerDualActionQueue.c: 352:         return ((void*)0);
 20807   00C232  0E00               	movlw	0
 20808   00C234  6F96               	movwf	?_consumer2QGetDiagnostic& (0+255),b
 20809   00C236  0E00               	movlw	0
 20810   00C238  6F97               	movwf	(?_consumer2QGetDiagnostic+1)& (0+255),b
 20811   00C23A  0012               	return	
 20812   00C23C                     l20549:
 20813                           
 20814                           ; BSR set to: 0
 20815                           ;../event_consumerDualActionQueue.c: 354:     return &(consumer2QDiagnostics[index]);
 20816   00C23C  5198               	movf	consumer2QGetDiagnostic@index& (0+255),w,b
 20817   00C23E  0D02               	mullw	2
 20818   00C240  0EB6               	movlw	low _consumer2QDiagnostics
 20819   00C242  24F3               	addwf	243,w,c
 20820   00C244  6F96               	movwf	?_consumer2QGetDiagnostic& (0+255),b
 20821   00C246  0E01               	movlw	high _consumer2QDiagnostics
 20822   00C248  20F4               	addwfc	prodh,w,c
 20823   00C24A  6F97               	movwf	(?_consumer2QGetDiagnostic+1)& (0+255),b
 20824                           
 20825                           ; BSR set to: 0
 20826   00C24C  0012               	return		;funcret
 20827   00C24E                     __end_of_consumer2QGetDiagnostic:
 20828                           	callstack 0
 20829                           
 20830 ;; *************** function _teachGetDiagnostic *****************
 20831 ;; Defined at:
 20832 ;;		line 543 in file "../../VLCBlib_PIC/event_teach_large.c"
 20833 ;; Parameters:    Size  Location     Type
 20834 ;;  index           1    wreg     unsigned char 
 20835 ;; Auto vars:     Size  Location     Type
 20836 ;;  index           1   56[BANK0 ] unsigned char 
 20837 ;; Return value:  Size  Location     Type
 20838 ;;                  2   54[BANK0 ] PTR struct DiagnosticVal
 20839 ;; Registers used:
 20840 ;;		wreg, status,2, status,0, prodl, prodh
 20841 ;; Tracked objects:
 20842 ;;		On entry : 0/0
 20843 ;;		On exit  : 0/0
 20844 ;;		Unchanged: 0/0
 20845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20846 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20847 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20849 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20850 ;;Total ram usage:        3 bytes
 20851 ;; Hardware stack levels used: 1
 20852 ;; Hardware stack levels required when called: 12
 20853 ;; This function calls:
 20854 ;;		Nothing
 20855 ;; This function is called by:
 20856 ;;		_mnsTRallDiagnosticsCallback
 20857 ;;		_mnsProcessMessage
 20858 ;; This function uses a non-reentrant model
 20859 ;;
 20860                           
 20861                           	psect	text69
 20862   00C24E                     __ptext69:
 20863                           	callstack 0
 20864   00C24E                     _teachGetDiagnostic:
 20865                           	callstack 15
 20866                           
 20867                           ; BSR set to: 0
 20868                           ;incstack = 0
 20869                           ;teachGetDiagnostic@index stored from wreg
 20870   00C24E  0100               	movlb	0	; () banked
 20871   00C250  6F98               	movwf	teachGetDiagnostic@index& (0+255),b
 20872                           
 20873                           ;../../VLCBlib_PIC/event_teach_large.c: 544:     if (index > 1) {
 20874   00C252  0E01               	movlw	1
 20875   00C254  0100               	movlb	0	; () banked
 20876   00C256  6598               	cpfsgt	teachGetDiagnostic@index& (0+255),b
 20877   00C258  D005               	goto	l21211
 20878                           
 20879                           ; BSR set to: 0
 20880                           ;../../VLCBlib_PIC/event_teach_large.c: 545:         return ((void*)0);
 20881   00C25A  0E00               	movlw	0
 20882   00C25C  6F96               	movwf	?_teachGetDiagnostic& (0+255),b
 20883   00C25E  0E00               	movlw	0
 20884   00C260  6F97               	movwf	(?_teachGetDiagnostic+1)& (0+255),b
 20885   00C262  0012               	return	
 20886   00C264                     l21211:
 20887                           
 20888                           ; BSR set to: 0
 20889                           ;../../VLCBlib_PIC/event_teach_large.c: 547:     return &(teachDiagnostics[index]);
 20890   00C264  5198               	movf	teachGetDiagnostic@index& (0+255),w,b
 20891   00C266  0D02               	mullw	2
 20892   00C268  0EAE               	movlw	low _teachDiagnostics
 20893   00C26A  24F3               	addwf	243,w,c
 20894   00C26C  6F96               	movwf	?_teachGetDiagnostic& (0+255),b
 20895   00C26E  0E01               	movlw	high _teachDiagnostics
 20896   00C270  20F4               	addwfc	prodh,w,c
 20897   00C272  6F97               	movwf	(?_teachGetDiagnostic+1)& (0+255),b
 20898                           
 20899                           ; BSR set to: 0
 20900   00C274  0012               	return		;funcret
 20901   00C276                     __end_of_teachGetDiagnostic:
 20902                           	callstack 0
 20903                           
 20904 ;; *************** function _sendMessage6 *****************
 20905 ;; Defined at:
 20906 ;;		line 1195 in file "../../VLCBlib_PIC/vlcb.c"
 20907 ;; Parameters:    Size  Location     Type
 20908 ;;  opc             1    wreg     enum E12392
 20909 ;;  data1           1    8[BANK1 ] unsigned char 
 20910 ;;  data2           1    9[BANK1 ] unsigned char 
 20911 ;;  data3           1   10[BANK1 ] unsigned char 
 20912 ;;  data4           1   11[BANK1 ] unsigned char 
 20913 ;;  data5           1   12[BANK1 ] unsigned char 
 20914 ;;  data6           1   13[BANK1 ] unsigned char 
 20915 ;; Auto vars:     Size  Location     Type
 20916 ;;  opc             1   70[BANK0 ] enum E12392
 20917 ;; Return value:  Size  Location     Type
 20918 ;;                  1    wreg      void 
 20919 ;; Registers used:
 20920 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 20921 ;; Tracked objects:
 20922 ;;		On entry : 0/0
 20923 ;;		On exit  : 0/0
 20924 ;;		Unchanged: 0/0
 20925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20926 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20927 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20929 ;;      Totals:         0       1       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20930 ;;Total ram usage:        7 bytes
 20931 ;; Hardware stack levels used: 1
 20932 ;; Hardware stack levels required when called: 16
 20933 ;; This function calls:
 20934 ;;		_sendMessage
 20935 ;; This function is called by:
 20936 ;;		_mnsProcessMessage
 20937 ;;		_mnsTRallDiagnosticsCallback
 20938 ;;		_doReqev
 20939 ;;		_reqevCallback
 20940 ;; This function uses a non-reentrant model
 20941 ;;
 20942                           
 20943                           	psect	text70
 20944   00BF32                     __ptext70:
 20945                           	callstack 0
 20946   00BF32                     _sendMessage6:
 20947                           	callstack 11
 20948                           
 20949                           ; BSR set to: 0
 20950                           ;incstack = 0
 20951                           ;sendMessage6@opc stored from wreg
 20952   00BF32  0100               	movlb	0	; () banked
 20953   00BF34  6FA6               	movwf	sendMessage6@opc& (0+255),b
 20954                           
 20955                           ;../../VLCBlib_PIC/vlcb.c: 1196:     sendMessage(opc, 7, data1, data2, data3, data4, dat
      +                          a5, data6,0);
 20956   00BF36  0E07               	movlw	7
 20957   00BF38  0101               	movlb	1	; () banked
 20958   00BF3A  6FBA               	movwf	sendMessage@len& (0+255),b
 20959   00BF3C  C1C2  F1BB         	movff	sendMessage6@data1,sendMessage@data1
 20960   00BF40  C1C3  F1BC         	movff	sendMessage6@data2,sendMessage@data2
 20961   00BF44  C1C4  F1BD         	movff	sendMessage6@data3,sendMessage@data3
 20962   00BF48  C1C5  F1BE         	movff	sendMessage6@data4,sendMessage@data4
 20963   00BF4C  C1C6  F1BF         	movff	sendMessage6@data5,sendMessage@data5
 20964   00BF50  C1C7  F1C0         	movff	sendMessage6@data6,sendMessage@data6
 20965   00BF54  0E00               	movlw	0
 20966   00BF56  6FC1               	movwf	sendMessage@data7& (0+255),b
 20967   00BF58  0100               	movlb	0	; () banked
 20968   00BF5A  51A6               	movf	sendMessage6@opc& (0+255),w,b
 20969   00BF5C  ECA3  F054         	call	_sendMessage
 20970   00BF60  0012               	return		;funcret
 20971   00BF62                     __end_of_sendMessage6:
 20972                           	callstack 0
 20973                           
 20974 ;; *************** function _sendMessage3 *****************
 20975 ;; Defined at:
 20976 ;;		line 1156 in file "../../VLCBlib_PIC/vlcb.c"
 20977 ;; Parameters:    Size  Location     Type
 20978 ;;  opc             1    wreg     enum E12392
 20979 ;;  data1           1   70[BANK0 ] unsigned char 
 20980 ;;  data2           1   71[BANK0 ] unsigned char 
 20981 ;;  data3           1   72[BANK0 ] unsigned char 
 20982 ;; Auto vars:     Size  Location     Type
 20983 ;;  opc             1    8[BANK1 ] enum E12392
 20984 ;; Return value:  Size  Location     Type
 20985 ;;                  1    wreg      void 
 20986 ;; Registers used:
 20987 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 20988 ;; Tracked objects:
 20989 ;;		On entry : 0/0
 20990 ;;		On exit  : 0/0
 20991 ;;		Unchanged: 0/0
 20992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20993 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20994 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20996 ;;      Totals:         0       3       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20997 ;;Total ram usage:        4 bytes
 20998 ;; Hardware stack levels used: 1
 20999 ;; Hardware stack levels required when called: 16
 21000 ;; This function calls:
 21001 ;;		_sendMessage
 21002 ;; This function is called by:
 21003 ;;		_mnsProcessMessage
 21004 ;;		_nvProcessMessage
 21005 ;;		_teachProcessMessage
 21006 ;;		_doNnevn
 21007 ;;		_doNenrd
 21008 ;;		_doRqevn
 21009 ;;		_doEvlrn
 21010 ;;		_doReval
 21011 ;;		_doEvuln
 21012 ;;		_doReqev
 21013 ;;		_producerProcessMessage
 21014 ;; This function uses a non-reentrant model
 21015 ;;
 21016                           
 21017                           	psect	text71
 21018   00C07E                     __ptext71:
 21019                           	callstack 0
 21020   00C07E                     _sendMessage3:
 21021                           	callstack 12
 21022                           
 21023                           ;incstack = 0
 21024                           ;sendMessage3@opc stored from wreg
 21025   00C07E  0101               	movlb	1	; () banked
 21026   00C080  6FC2               	movwf	sendMessage3@opc& (0+255),b
 21027                           
 21028                           ;../../VLCBlib_PIC/vlcb.c: 1157:     sendMessage(opc, 4, data1, data2, data3, 0,0,0,0);
 21029   00C082  0E04               	movlw	4
 21030   00C084  0101               	movlb	1	; () banked
 21031   00C086  6FBA               	movwf	sendMessage@len& (0+255),b
 21032   00C088  C0A6  F1BB         	movff	sendMessage3@data1,sendMessage@data1
 21033   00C08C  C0A7  F1BC         	movff	sendMessage3@data2,sendMessage@data2
 21034   00C090  C0A8  F1BD         	movff	sendMessage3@data3,sendMessage@data3
 21035   00C094  0E00               	movlw	0
 21036   00C096  6FBE               	movwf	sendMessage@data4& (0+255),b
 21037   00C098  0E00               	movlw	0
 21038   00C09A  6FBF               	movwf	sendMessage@data5& (0+255),b
 21039   00C09C  0E00               	movlw	0
 21040   00C09E  6FC0               	movwf	sendMessage@data6& (0+255),b
 21041   00C0A0  0E00               	movlw	0
 21042   00C0A2  6FC1               	movwf	sendMessage@data7& (0+255),b
 21043   00C0A4  51C2               	movf	sendMessage3@opc& (0+255),w,b
 21044   00C0A6  ECA3  F054         	call	_sendMessage
 21045   00C0AA  0012               	return		;funcret
 21046   00C0AC                     __end_of_sendMessage3:
 21047                           	callstack 0
 21048                           
 21049 ;; *************** function _getParameter *****************
 21050 ;; Defined at:
 21051 ;;		line 833 in file "../../VLCBlib_PIC/mns.c"
 21052 ;; Parameters:    Size  Location     Type
 21053 ;;  idx             1    wreg     unsigned char 
 21054 ;; Auto vars:     Size  Location     Type
 21055 ;;  idx             1   50[BANK0 ] unsigned char 
 21056 ;;  i               1    0        unsigned char 
 21057 ;; Return value:  Size  Location     Type
 21058 ;;                  1    wreg      unsigned char 
 21059 ;; Registers used:
 21060 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21061 ;; Tracked objects:
 21062 ;;		On entry : 0/0
 21063 ;;		On exit  : 0/0
 21064 ;;		Unchanged: 0/0
 21065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21067 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21069 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21070 ;;Total ram usage:        1 bytes
 21071 ;; Hardware stack levels used: 1
 21072 ;; Hardware stack levels required when called: 14
 21073 ;; This function calls:
 21074 ;;		_getParameterFlags
 21075 ;;		_have
 21076 ;; This function is called by:
 21077 ;;		_mnsProcessMessage
 21078 ;;		_mnsTRrqnpnCallback
 21079 ;; This function uses a non-reentrant model
 21080 ;;
 21081                           
 21082                           	psect	text72
 21083   008648                     __ptext72:
 21084                           	callstack 0
 21085   008648                     _getParameter:
 21086                           	callstack 13
 21087                           
 21088                           ;incstack = 0
 21089                           ;getParameter@idx stored from wreg
 21090   008648  0100               	movlb	0	; () banked
 21091   00864A  6F92               	movwf	getParameter@idx& (0+255),b
 21092                           
 21093                           ;../../VLCBlib_PIC/mns.c: 834:     uint8_t i;;../../VLCBlib_PIC/mns.c: 835:     switch(i
      +                          dx) {
 21094   00864C  D033               	goto	l21013
 21095   00864E                     l20925:
 21096                           
 21097                           ; BSR set to: 0
 21098                           ;../../VLCBlib_PIC/mns.c: 837:         return 20;
 21099   00864E  0E14               	movlw	20
 21100   008650  0012               	return	
 21101   008652                     l20929:
 21102                           
 21103                           ; BSR set to: 0
 21104                           ;../../VLCBlib_PIC/mns.c: 839:         return MANU_MERG;
 21105   008652  0EA5               	movlw	165
 21106   008654  0012               	return	
 21107   008656                     l20933:
 21108                           
 21109                           ; BSR set to: 0
 21110                           ;../../VLCBlib_PIC/mns.c: 841:         return 'a';
 21111   008656  0E61               	movlw	97
 21112   008658  0012               	return	
 21113   00865A                     l20937:
 21114                           
 21115                           ; BSR set to: 0
 21116                           ;../../VLCBlib_PIC/mns.c: 843:         return MTYP_CANMIO;
 21117   00865A  0E20               	movlw	32
 21118   00865C  0012               	return	
 21119   00865E                     l20941:
 21120                           
 21121                           ; BSR set to: 0
 21122                           ;../../VLCBlib_PIC/mns.c: 845:         return 255;
 21123   00865E  0EFF               	movlw	255
 21124   008660  0012               	return	
 21125   008662                     l20949:
 21126                           
 21127                           ; BSR set to: 0
 21128                           ;../../VLCBlib_PIC/mns.c: 849:         return (15+7*16);
 21129   008662  0E7F               	movlw	127
 21130   008664  0012               	return	
 21131   008666                     l20953:
 21132                           
 21133                           ; BSR set to: 0
 21134                           ;../../VLCBlib_PIC/mns.c: 851:         return 4;
 21135   008666  0E04               	movlw	4
 21136   008668  0012               	return	
 21137   00866A                     l20957:
 21138                           
 21139                           ; BSR set to: 0
 21140                           ;../../VLCBlib_PIC/mns.c: 853:         return getParameterFlags();
 21141   00866A  ECB8  F05A         	call	_getParameterFlags	;wreg free
 21142   00866E  0012               	return	
 21143   008670                     l20961:
 21144                           
 21145                           ; BSR set to: 0
 21146                           ;../../VLCBlib_PIC/mns.c: 855:         return P18F26K80;
 21147   008670  0E0F               	movlw	15
 21148   008672  0012               	return	
 21149   008674                     l20965:
 21150                           
 21151                           ; BSR set to: 0
 21152                           ;../../VLCBlib_PIC/mns.c: 857:         if (have(SERVICE_ID_CAN)) {
 21153   008674  0E03               	movlw	3
 21154   008676  ECF8  F056         	call	_have
 21155   00867A  0900               	iorlw	0
 21156   00867C  B4D8               	btfsc	status,2,c
 21157   00867E  D002               	goto	l20971
 21158   008680                     u21570:
 21159                           
 21160                           ;../../VLCBlib_PIC/mns.c: 858:             return PB_CAN;
 21161   008680  0E01               	movlw	1
 21162   008682  0012               	return	
 21163   008684                     l20971:
 21164                           
 21165                           ;../../VLCBlib_PIC/mns.c: 860:         return 0;
 21166   008684  0E00               	movlw	0
 21167   008686  0012               	return	
 21168   008688                     l20979:
 21169                           
 21170                           ; BSR set to: 0
 21171                           ;../../VLCBlib_PIC/mns.c: 864:         return 0x08;
 21172   008688  0E08               	movlw	8
 21173   00868A  0012               	return	
 21174   00868C                     l20991:
 21175                           
 21176                           ; BSR set to: 0
 21177                           ;../../VLCBlib_PIC/mns.c: 876:         return *(const uint8_t*)0x3FFFFE;
 21178   00868C  0EFE               	movlw	254
 21179   00868E  6EF6               	movwf	tblptrl,c
 21180   008690                     	if	1	;There is more than 1 active tblptr byte
 21181   008690  0EFF               	movlw	255
 21182   008692  6EF7               	movwf	tblptrh,c
 21183   008694                     	endif
 21184   008694                     	if	1	;There are 3 active tblptr bytes
 21185   008694  0E3F               	movlw	63
 21186   008696  6EF8               	movwf	tblptru,c
 21187   008698                     	endif
 21188   008698  0008               	tblrd		*
 21189   00869A  50F5               	movf	tablat,w,c
 21190   00869C  0012               	return	
 21191   00869E                     l20995:
 21192                           
 21193                           ; BSR set to: 0
 21194                           ;../../VLCBlib_PIC/mns.c: 878:         return *(const uint8_t*)0x3FFFFF;
 21195   00869E  0EFF               	movlw	255
 21196   0086A0  6EF6               	movwf	tblptrl,c
 21197   0086A2                     	if	1	;There is more than 1 active tblptr byte
 21198   0086A2  0EFF               	movlw	255
 21199   0086A4  6EF7               	movwf	tblptrh,c
 21200   0086A6                     	endif
 21201   0086A6                     	if	1	;There are 3 active tblptr bytes
 21202   0086A6  0E3F               	movlw	63
 21203   0086A8  6EF8               	movwf	tblptru,c
 21204   0086AA                     	endif
 21205   0086AA  0008               	tblrd		*
 21206   0086AC  50F5               	movf	tablat,w,c
 21207   0086AE  0012               	return	
 21208   0086B0                     l21003:
 21209                           
 21210                           ; BSR set to: 0
 21211                           ;../../VLCBlib_PIC/mns.c: 882:         return 5;
 21212   0086B0  0E05               	movlw	5
 21213   0086B2  0012               	return	
 21214   0086B4                     l21013:
 21215   0086B4  0100               	movlb	0	; () banked
 21216   0086B6  5192               	movf	getParameter@idx& (0+255),w,b
 21217                           
 21218                           ; Switch size 1, requested type "simple"
 21219                           ; Number of cases is 19, Range of values is 0 to 20
 21220                           ; switch strategies available:
 21221                           ; Name         Instructions Cycles
 21222                           ; simple_byte           58    30 (average)
 21223                           ;	Chosen strategy is simple_byte
 21224   0086B8  0A00               	xorlw	0	; case 0
 21225   0086BA  B4D8               	btfsc	status,2,c
 21226   0086BC  D7C8               	goto	l20925
 21227   0086BE  0A01               	xorlw	1	; case 1
 21228   0086C0  B4D8               	btfsc	status,2,c
 21229   0086C2  D7C7               	goto	l20929
 21230   0086C4  0A03               	xorlw	3	; case 2
 21231   0086C6  B4D8               	btfsc	status,2,c
 21232   0086C8  D7C6               	goto	l20933
 21233   0086CA  0A01               	xorlw	1	; case 3
 21234   0086CC  B4D8               	btfsc	status,2,c
 21235   0086CE  D7C5               	goto	l20937
 21236   0086D0  0A07               	xorlw	7	; case 4
 21237   0086D2  B4D8               	btfsc	status,2,c
 21238   0086D4  D7C4               	goto	l20941
 21239   0086D6  0A01               	xorlw	1	; case 5
 21240   0086D8  B4D8               	btfsc	status,2,c
 21241   0086DA  D7B9               	goto	l20925
 21242   0086DC  0A03               	xorlw	3	; case 6
 21243   0086DE  B4D8               	btfsc	status,2,c
 21244   0086E0  D7C0               	goto	l20949
 21245   0086E2  0A01               	xorlw	1	; case 7
 21246   0086E4  B4D8               	btfsc	status,2,c
 21247   0086E6  D7BF               	goto	l20953
 21248   0086E8  0A0F               	xorlw	15	; case 8
 21249   0086EA  B4D8               	btfsc	status,2,c
 21250   0086EC  D7BE               	goto	l20957
 21251   0086EE  0A01               	xorlw	1	; case 9
 21252   0086F0  B4D8               	btfsc	status,2,c
 21253   0086F2  D7BE               	goto	l20961
 21254   0086F4  0A03               	xorlw	3	; case 10
 21255   0086F6  B4D8               	btfsc	status,2,c
 21256   0086F8  D7BD               	goto	l20965
 21257   0086FA  0A01               	xorlw	1	; case 11
 21258   0086FC  B4D8               	btfsc	status,2,c
 21259   0086FE  D7C2               	goto	l20971
 21260   008700  0A07               	xorlw	7	; case 12
 21261   008702  B4D8               	btfsc	status,2,c
 21262   008704  D7C1               	goto	l20979
 21263   008706  0A01               	xorlw	1	; case 13
 21264   008708  B4D8               	btfsc	status,2,c
 21265   00870A  D7BC               	goto	l20971
 21266   00870C  0A03               	xorlw	3	; case 14
 21267   00870E  B4D8               	btfsc	status,2,c
 21268   008710  D7B9               	goto	l20971
 21269   008712  0A1F               	xorlw	31	; case 17
 21270   008714  B4D8               	btfsc	status,2,c
 21271   008716  D7BA               	goto	l20991
 21272   008718  0A03               	xorlw	3	; case 18
 21273   00871A  B4D8               	btfsc	status,2,c
 21274   00871C  D7C0               	goto	l20995
 21275   00871E  0A01               	xorlw	1	; case 19
 21276   008720  B4D8               	btfsc	status,2,c
 21277   008722  D7AE               	goto	u21570
 21278   008724  0A07               	xorlw	7	; case 20
 21279   008726  B4D8               	btfsc	status,2,c
 21280   008728  D7C3               	goto	l21003
 21281   00872A  D7AC               	goto	l20971
 21282   00872C                     __end_of_getParameter:
 21283                           	callstack 0
 21284                           
 21285 ;; *************** function _getParameterFlags *****************
 21286 ;; Defined at:
 21287 ;;		line 602 in file "../../VLCBlib_PIC/mns.c"
 21288 ;; Parameters:    Size  Location     Type
 21289 ;;		None
 21290 ;; Auto vars:     Size  Location     Type
 21291 ;;  flags           1   49[BANK0 ] unsigned char 
 21292 ;; Return value:  Size  Location     Type
 21293 ;;                  1    wreg      unsigned char 
 21294 ;; Registers used:
 21295 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21296 ;; Tracked objects:
 21297 ;;		On entry : 0/0
 21298 ;;		On exit  : 0/0
 21299 ;;		Unchanged: 0/0
 21300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21302 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21304 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21305 ;;Total ram usage:        1 bytes
 21306 ;; Hardware stack levels used: 1
 21307 ;; Hardware stack levels required when called: 13
 21308 ;; This function calls:
 21309 ;;		_have
 21310 ;; This function is called by:
 21311 ;;		_mnsProcessMessage
 21312 ;;		_getParameter
 21313 ;; This function uses a non-reentrant model
 21314 ;;
 21315                           
 21316                           	psect	text73
 21317   00B570                     __ptext73:
 21318                           	callstack 0
 21319   00B570                     _getParameterFlags:
 21320                           	callstack 13
 21321                           
 21322                           ;../../VLCBlib_PIC/mns.c: 603:     uint8_t flags;;../../VLCBlib_PIC/mns.c: 604:     flag
      +                          s = 0;
 21323                           
 21324                           ;incstack = 0
 21325   00B570  0E00               	movlw	0
 21326   00B572  0100               	movlb	0	; () banked
 21327   00B574  6F91               	movwf	getParameterFlags@flags& (0+255),b
 21328                           
 21329                           ; BSR set to: 0
 21330                           ;../../VLCBlib_PIC/mns.c: 605:     if (have(SERVICE_ID_CONSUMER)) {
 21331   00B576  0E06               	movlw	6
 21332   00B578  ECF8  F056         	call	_have
 21333   00B57C  0900               	iorlw	0
 21334   00B57E  B4D8               	btfsc	status,2,c
 21335   00B580  D002               	goto	l20189
 21336                           
 21337                           ;../../VLCBlib_PIC/mns.c: 606:         flags |= 1;
 21338   00B582  0100               	movlb	0	; () banked
 21339   00B584  8191               	bsf	getParameterFlags@flags& (0+255),0,b
 21340   00B586                     l20189:
 21341                           
 21342                           ;../../VLCBlib_PIC/mns.c: 608:     if (have(SERVICE_ID_PRODUCER)) {
 21343   00B586  0E05               	movlw	5
 21344   00B588  ECF8  F056         	call	_have
 21345   00B58C  0900               	iorlw	0
 21346   00B58E  B4D8               	btfsc	status,2,c
 21347   00B590  D002               	goto	l20193
 21348                           
 21349                           ;../../VLCBlib_PIC/mns.c: 609:         flags |= 2;
 21350   00B592  0100               	movlb	0	; () banked
 21351   00B594  8391               	bsf	getParameterFlags@flags& (0+255),1,b
 21352   00B596                     l20193:
 21353                           
 21354                           ;../../VLCBlib_PIC/mns.c: 611:     if (flags == (2 | 1)) flags |= 16;
 21355   00B596  0E03               	movlw	3
 21356   00B598  0100               	movlb	0	; () banked
 21357   00B59A  1991               	xorwf	getParameterFlags@flags& (0+255),w,b
 21358   00B59C  B4D8               	btfsc	status,2,c
 21359                           
 21360                           ; BSR set to: 0
 21361   00B59E  8991               	bsf	getParameterFlags@flags& (0+255),4,b
 21362                           
 21363                           ; BSR set to: 0
 21364                           ;../../VLCBlib_PIC/mns.c: 612:     if (have(SERVICE_ID_BOOT)) {
 21365   00B5A0  0E0A               	movlw	10
 21366   00B5A2  ECF8  F056         	call	_have
 21367   00B5A6  0900               	iorlw	0
 21368   00B5A8  B4D8               	btfsc	status,2,c
 21369   00B5AA  D002               	goto	l20201
 21370                           
 21371                           ;../../VLCBlib_PIC/mns.c: 613:         flags |= 8;
 21372   00B5AC  0100               	movlb	0	; () banked
 21373   00B5AE  8791               	bsf	getParameterFlags@flags& (0+255),3,b
 21374   00B5B0                     l20201:
 21375                           
 21376                           ;../../VLCBlib_PIC/mns.c: 615:     if (mode_flags & 1) {
 21377   00B5B0  0101               	movlb	1	; () banked
 21378   00B5B2  A166               	btfss	_mode_flags& (0+255),0,b
 21379   00B5B4  D002               	goto	l20205
 21380                           
 21381                           ; BSR set to: 1
 21382                           ;../../VLCBlib_PIC/mns.c: 616:         flags |= 32;
 21383   00B5B6  0100               	movlb	0	; () banked
 21384   00B5B8  8B91               	bsf	getParameterFlags@flags& (0+255),5,b
 21385   00B5BA                     l20205:
 21386                           
 21387                           ;../../VLCBlib_PIC/mns.c: 618:     if (mode_state == MODE_NORMAL) {
 21388   00B5BA  0100               	movlb	0	; () banked
 21389   00B5BC  05C5               	decf	_mode_state& (0+255),w,b
 21390   00B5BE  B4D8               	btfsc	status,2,c
 21391                           
 21392                           ; BSR set to: 0
 21393                           ;../../VLCBlib_PIC/mns.c: 619:         flags |= 4;
 21394   00B5C0  8591               	bsf	getParameterFlags@flags& (0+255),2,b
 21395                           
 21396                           ; BSR set to: 0
 21397                           ;../../VLCBlib_PIC/mns.c: 622:     flags |= 64;
 21398                           
 21399                           ;../../VLCBlib_PIC/mns.c: 620:     }
 21400   00B5C2  8D91               	bsf	getParameterFlags@flags& (0+255),6,b
 21401                           
 21402                           ; BSR set to: 0
 21403                           ;../../VLCBlib_PIC/mns.c: 624:     return flags;
 21404   00B5C4  5191               	movf	getParameterFlags@flags& (0+255),w,b
 21405                           
 21406                           ; BSR set to: 0
 21407   00B5C6  0012               	return		;funcret
 21408   00B5C8                     __end_of_getParameterFlags:
 21409                           	callstack 0
 21410                           
 21411 ;; *************** function _mnsPoll *****************
 21412 ;; Defined at:
 21413 ;;		line 643 in file "../../VLCBlib_PIC/mns.c"
 21414 ;; Parameters:    Size  Location     Type
 21415 ;;		None
 21416 ;; Auto vars:     Size  Location     Type
 21417 ;;		None
 21418 ;; Return value:  Size  Location     Type
 21419 ;;                  1    wreg      void 
 21420 ;; Registers used:
 21421 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 21422 ;; Tracked objects:
 21423 ;;		On entry : 0/0
 21424 ;;		On exit  : 0/0
 21425 ;;		Unchanged: 0/0
 21426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21429 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21430 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21431 ;;Total ram usage:        4 bytes
 21432 ;; Hardware stack levels used: 1
 21433 ;; Hardware stack levels required when called: 18
 21434 ;; This function calls:
 21435 ;;		_sendMessage2
 21436 ;;		_sendMessage5
 21437 ;;		_setLEDsByMode
 21438 ;;		_tickGet
 21439 ;;		_writeNVM
 21440 ;; This function is called by:
 21441 ;;		_poll
 21442 ;; This function uses a non-reentrant model
 21443 ;;
 21444                           
 21445                           	psect	text74
 21446   00433C                     __ptext74:
 21447                           	callstack 0
 21448   00433C                     _mnsPoll:
 21449                           	callstack 11
 21450                           
 21451                           ;../../VLCBlib_PIC/mns.c: 646:     if (mode_state == MODE_NORMAL) {
 21452                           
 21453                           ; BSR set to: 0
 21454                           ;incstack = 0
 21455   00433C  0100               	movlb	0	; () banked
 21456   00433E  05C5               	decf	_mode_state& (0+255),w,b
 21457   004340  A4D8               	btfss	status,2,c
 21458   004342  D03F               	goto	l23777
 21459                           
 21460                           ; BSR set to: 0
 21461                           ;../../VLCBlib_PIC/mns.c: 647:         if ((tickGet() - heartbeatTimer.val) > 5*62500) {
 21462   004344  ECE4  F05A         	call	_tickGet	;wreg free
 21463   004348  0101               	movlb	1	; () banked
 21464   00434A  5150               	movf	_heartbeatTimer& (0+255),w,b
 21465   00434C  0100               	movlb	0	; () banked
 21466   00434E  5D8D               	subwf	?_tickGet& (0+255),w,b
 21467   004350  0101               	movlb	1	; () banked
 21468   004352  6FC7               	movwf	??_mnsPoll& (0+255),b
 21469   004354  5151               	movf	(_heartbeatTimer+1)& (0+255),w,b
 21470   004356  0100               	movlb	0	; () banked
 21471   004358  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21472   00435A  0101               	movlb	1	; () banked
 21473   00435C  6FC8               	movwf	(??_mnsPoll+1)& (0+255),b
 21474   00435E  5152               	movf	(_heartbeatTimer+2)& (0+255),w,b
 21475   004360  0100               	movlb	0	; () banked
 21476   004362  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21477   004364  0101               	movlb	1	; () banked
 21478   004366  6FC9               	movwf	(??_mnsPoll+2)& (0+255),b
 21479   004368  5153               	movf	(_heartbeatTimer+3)& (0+255),w,b
 21480   00436A  0100               	movlb	0	; () banked
 21481   00436C  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21482   00436E  0101               	movlb	1	; () banked
 21483   004370  6FCA               	movwf	(??_mnsPoll+3)& (0+255),b
 21484   004372  51CA               	movf	(??_mnsPoll+3)& (0+255),w,b
 21485   004374  E108               	bnz	u25260
 21486   004376  0EB5               	movlw	181
 21487   004378  5DC7               	subwf	??_mnsPoll& (0+255),w,b
 21488   00437A  0EC4               	movlw	196
 21489   00437C  59C8               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21490   00437E  0E04               	movlw	4
 21491   004380  59C9               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 21492   004382  A0D8               	btfss	status,0,c
 21493   004384  D01E               	goto	l23777
 21494   004386                     u25260:
 21495                           
 21496                           ; BSR set to: 1
 21497                           ;../../VLCBlib_PIC/mns.c: 648:             if (mode_flags & 4) {
 21498   004386  A566               	btfss	_mode_flags& (0+255),2,b
 21499   004388  D00E               	goto	l23771
 21500                           
 21501                           ; BSR set to: 1
 21502                           ;../../VLCBlib_PIC/mns.c: 649:                 sendMessage5(OPC_HEARTB, nn.bytes.hi,nn.b
      +                          ytes.lo,heartbeatSequence++,mnsDiagnostics[0x01].asBytes.lo,0);
 21503   00438A  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 21504   00438E  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 21505   004392  C045  F1C4         	movff	_heartbeatSequence,sendMessage5@data3
 21506   004396  C18F  F1C5         	movff	_mnsDiagnostics+2,sendMessage5@data4
 21507   00439A  0E00               	movlw	0
 21508   00439C  6FC6               	movwf	sendMessage5@data5& (0+255),b
 21509   00439E  0EAB               	movlw	171
 21510   0043A0  ECE1  F05F         	call	_sendMessage5
 21511   0043A4  2A45               	incf	_heartbeatSequence^0,f,c
 21512   0043A6                     l23771:
 21513                           
 21514                           ;../../VLCBlib_PIC/mns.c: 651:             heartbeatTimer.val = tickGet();
 21515   0043A6  ECE4  F05A         	call	_tickGet	;wreg free
 21516   0043AA  C08D  F150         	movff	?_tickGet,_heartbeatTimer
 21517   0043AE  C08E  F151         	movff	?_tickGet+1,_heartbeatTimer+1
 21518   0043B2  C08F  F152         	movff	?_tickGet+2,_heartbeatTimer+2
 21519   0043B6  C090  F153         	movff	?_tickGet+3,_heartbeatTimer+3
 21520                           
 21521                           ;../../VLCBlib_PIC/mns.c: 652:             if (mnsDiagnostics[0x01].asBytes.lo > 0) {
 21522   0043BA  0101               	movlb	1	; () banked
 21523   0043BC  518F               	movf	(_mnsDiagnostics+2)& (0+255),w,b
 21524   0043BE  A4D8               	btfss	status,2,c
 21525                           
 21526                           ; BSR set to: 1
 21527                           ;../../VLCBlib_PIC/mns.c: 653:                 mnsDiagnostics[0x01].asBytes.lo--;
 21528   0043C0  078F               	decf	(_mnsDiagnostics+2)& (0+255),f,b
 21529   0043C2                     l23777:
 21530                           
 21531                           ;../../VLCBlib_PIC/mns.c: 660:     if (mode_flags != last_mode_flags) {
 21532   0043C2  5046               	movf	_last_mode_flags^0,w,c
 21533   0043C4  0101               	movlb	1	; () banked
 21534   0043C6  1966               	xorwf	_mode_flags& (0+255),w,b
 21535   0043C8  B4D8               	btfsc	status,2,c
 21536   0043CA  D00E               	goto	l23783
 21537                           
 21538                           ; BSR set to: 1
 21539                           ;../../VLCBlib_PIC/mns.c: 661:         writeNVM(EEPROM_NVM_TYPE, 0x3F9, mode_flags);
 21540   0043CC  0EF9               	movlw	249
 21541   0043CE  0100               	movlb	0	; () banked
 21542   0043D0  6FA4               	movwf	writeNVM@index& (0+255),b
 21543   0043D2  0E03               	movlw	3
 21544   0043D4  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 21545   0043D6  0E00               	movlw	0
 21546   0043D8  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 21547   0043DA  C166  F0A7         	movff	_mode_flags,writeNVM@value
 21548   0043DE  0E00               	movlw	0
 21549   0043E0  EC60  F05C         	call	_writeNVM
 21550                           
 21551                           ;../../VLCBlib_PIC/mns.c: 662:         last_mode_flags = mode_flags;
 21552   0043E4  C166  F046         	movff	_mode_flags,_last_mode_flags
 21553   0043E8                     l23783:
 21554                           
 21555                           ;../../VLCBlib_PIC/mns.c: 664:     if (mode_state != last_mode_state) {
 21556   0043E8  5047               	movf	_last_mode_state^0,w,c
 21557   0043EA  0100               	movlb	0	; () banked
 21558   0043EC  19C5               	xorwf	_mode_state& (0+255),w,b
 21559   0043EE  B4D8               	btfsc	status,2,c
 21560   0043F0  D013               	goto	l23793
 21561                           
 21562                           ; BSR set to: 0
 21563                           ;../../VLCBlib_PIC/mns.c: 666:         if ((mode_state == MODE_UNINITIALISED) || (mode_s
      +                          tate == MODE_NORMAL)) {
 21564   0043F2  29C5               	incf	_mode_state& (0+255),w,b
 21565   0043F4  B4D8               	btfsc	status,2,c
 21566   0043F6  D003               	goto	u25320
 21567                           
 21568                           ; BSR set to: 0
 21569   0043F8  05C5               	decf	_mode_state& (0+255),w,b
 21570   0043FA  A4D8               	btfss	status,2,c
 21571   0043FC  D00B               	goto	l23791
 21572   0043FE                     u25320:
 21573                           
 21574                           ; BSR set to: 0
 21575                           ;../../VLCBlib_PIC/mns.c: 667:             writeNVM(EEPROM_NVM_TYPE, 0x3FB, mode_state);
 21576   0043FE  0EFB               	movlw	251
 21577   004400  6FA4               	movwf	writeNVM@index& (0+255),b
 21578   004402  0E03               	movlw	3
 21579   004404  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 21580   004406  0E00               	movlw	0
 21581   004408  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 21582   00440A  C0C5  F0A7         	movff	_mode_state,writeNVM@value
 21583   00440E  0E00               	movlw	0
 21584   004410  EC60  F05C         	call	_writeNVM
 21585   004414                     l23791:
 21586                           
 21587                           ;../../VLCBlib_PIC/mns.c: 669:         last_mode_state = mode_state;
 21588   004414  C0C5  F047         	movff	_mode_state,_last_mode_state
 21589   004418                     l23793:
 21590                           
 21591                           ;../../VLCBlib_PIC/mns.c: 673:     if ((tickGet() - uptimeTimer.val) > 62500) {
 21592   004418  ECE4  F05A         	call	_tickGet	;wreg free
 21593   00441C  0101               	movlb	1	; () banked
 21594   00441E  514C               	movf	_uptimeTimer& (0+255),w,b
 21595   004420  0100               	movlb	0	; () banked
 21596   004422  5D8D               	subwf	?_tickGet& (0+255),w,b
 21597   004424  0101               	movlb	1	; () banked
 21598   004426  6FC7               	movwf	??_mnsPoll& (0+255),b
 21599   004428  514D               	movf	(_uptimeTimer+1)& (0+255),w,b
 21600   00442A  0100               	movlb	0	; () banked
 21601   00442C  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21602   00442E  0101               	movlb	1	; () banked
 21603   004430  6FC8               	movwf	(??_mnsPoll+1)& (0+255),b
 21604   004432  514E               	movf	(_uptimeTimer+2)& (0+255),w,b
 21605   004434  0100               	movlb	0	; () banked
 21606   004436  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21607   004438  0101               	movlb	1	; () banked
 21608   00443A  6FC9               	movwf	(??_mnsPoll+2)& (0+255),b
 21609   00443C  514F               	movf	(_uptimeTimer+3)& (0+255),w,b
 21610   00443E  0100               	movlb	0	; () banked
 21611   004440  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21612   004442  0101               	movlb	1	; () banked
 21613   004444  6FCA               	movwf	(??_mnsPoll+3)& (0+255),b
 21614   004446  51CA               	movf	(??_mnsPoll+3)& (0+255),w,b
 21615   004448  11C9               	iorwf	(??_mnsPoll+2)& (0+255),w,b
 21616   00444A  E106               	bnz	u25330
 21617   00444C  0E25               	movlw	37
 21618   00444E  5DC7               	subwf	??_mnsPoll& (0+255),w,b
 21619   004450  0EF4               	movlw	244
 21620   004452  59C8               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21621   004454  A0D8               	btfss	status,0,c
 21622   004456  D10E               	goto	l23867
 21623   004458                     u25330:
 21624                           
 21625                           ; BSR set to: 1
 21626                           ;../../VLCBlib_PIC/mns.c: 674:         uptimeTimer.val = tickGet();
 21627   004458  ECE4  F05A         	call	_tickGet	;wreg free
 21628   00445C  C08D  F14C         	movff	?_tickGet,_uptimeTimer
 21629   004460  C08E  F14D         	movff	?_tickGet+1,_uptimeTimer+1
 21630   004464  C08F  F14E         	movff	?_tickGet+2,_uptimeTimer+2
 21631   004468  C090  F14F         	movff	?_tickGet+3,_uptimeTimer+3
 21632                           
 21633                           ;../../VLCBlib_PIC/mns.c: 675:         mnsDiagnostics[0x03].asUint++;
 21634   00446C  0101               	movlb	1	; () banked
 21635   00446E  4B93               	infsnz	(_mnsDiagnostics+6)& (0+255),f,b
 21636   004470  2B94               	incf	(_mnsDiagnostics+7)& (0+255),f,b
 21637                           
 21638                           ; BSR set to: 1
 21639                           ;../../VLCBlib_PIC/mns.c: 676:         if (mnsDiagnostics[0x03].asUint == 0) {
 21640   004472  5193               	movf	(_mnsDiagnostics+6)& (0+255),w,b
 21641   004474  1194               	iorwf	(_mnsDiagnostics+7)& (0+255),w,b
 21642   004476  A4D8               	btfss	status,2,c
 21643   004478  D0FD               	goto	l23867
 21644                           
 21645                           ; BSR set to: 1
 21646                           ;../../VLCBlib_PIC/mns.c: 677:             mnsDiagnostics[0x02].asUint++;
 21647   00447A  4B91               	infsnz	(_mnsDiagnostics+4)& (0+255),f,b
 21648   00447C  2B92               	incf	(_mnsDiagnostics+5)& (0+255),f,b
 21649   00447E  D0FA               	goto	l23867
 21650   004480                     l1538:
 21651                           
 21652                           ; BSR set to: 0
 21653                           ;../../VLCBlib_PIC/mns.c: 686:             if ((!(PORTAbits.RA2)) == 0) {
 21654   004480  A480               	btfss	128,2,c	;volatile
 21655   004482  D00B               	goto	l23805
 21656   004484                     u25350:
 21657                           
 21658                           ;../../VLCBlib_PIC/mns.c: 688:                 pbTimer.val = tickGet();
 21659   004484  ECE4  F05A         	call	_tickGet	;wreg free
 21660   004488  C08D  F033         	movff	?_tickGet,_pbTimer
 21661   00448C  C08E  F034         	movff	?_tickGet+1,_pbTimer+1
 21662   004490  C08F  F035         	movff	?_tickGet+2,_pbTimer+2
 21663   004494  C090  F036         	movff	?_tickGet+3,_pbTimer+3
 21664                           
 21665                           ;../../VLCBlib_PIC/mns.c: 689:             } else {
 21666   004498  0012               	return	
 21667   00449A                     l23805:
 21668                           
 21669                           ; BSR set to: 0
 21670                           ;../../VLCBlib_PIC/mns.c: 691:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 21671   00449A  ECE4  F05A         	call	_tickGet	;wreg free
 21672   00449E  5033               	movf	_pbTimer^0,w,c
 21673   0044A0  0100               	movlb	0	; () banked
 21674   0044A2  5D8D               	subwf	?_tickGet& (0+255),w,b
 21675   0044A4  0101               	movlb	1	; () banked
 21676   0044A6  6FC7               	movwf	??_mnsPoll& (0+255),b
 21677   0044A8  5034               	movf	(_pbTimer+1)^0,w,c
 21678   0044AA  0100               	movlb	0	; () banked
 21679   0044AC  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21680   0044AE  0101               	movlb	1	; () banked
 21681   0044B0  6FC8               	movwf	(??_mnsPoll+1)& (0+255),b
 21682   0044B2  5035               	movf	(_pbTimer+2)^0,w,c
 21683   0044B4  0100               	movlb	0	; () banked
 21684   0044B6  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21685   0044B8  0101               	movlb	1	; () banked
 21686   0044BA  6FC9               	movwf	(??_mnsPoll+2)& (0+255),b
 21687   0044BC  5036               	movf	(_pbTimer+3)^0,w,c
 21688   0044BE  0100               	movlb	0	; () banked
 21689   0044C0  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21690   0044C2  0101               	movlb	1	; () banked
 21691   0044C4  6FCA               	movwf	(??_mnsPoll+3)& (0+255),b
 21692   0044C6  51CA               	movf	(??_mnsPoll+3)& (0+255),w,b
 21693   0044C8  E108               	bnz	u25360
 21694   0044CA  0E91               	movlw	145
 21695   0044CC  5DC7               	subwf	??_mnsPoll& (0+255),w,b
 21696   0044CE  0ED0               	movlw	208
 21697   0044D0  59C8               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21698   0044D2  0E03               	movlw	3
 21699   0044D4  59C9               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 21700   0044D6  A0D8               	btfss	status,0,c
 21701   0044D8  0012               	return	
 21702   0044DA                     u25360:
 21703                           
 21704                           ; BSR set to: 1
 21705                           ;../../VLCBlib_PIC/mns.c: 693:                     mode_state = 0xFD;
 21706   0044DA  0EFD               	movlw	253
 21707   0044DC  0100               	movlb	0	; () banked
 21708   0044DE  6FC5               	movwf	_mode_state& (0+255),b
 21709                           
 21710                           ; BSR set to: 0
 21711                           ;../../VLCBlib_PIC/mns.c: 694:                     setupModePreviousMode = MODE_UNINITIA
      +                          LISED;
 21712   0044E0  0101               	movlb	1	; () banked
 21713   0044E2  6965               	setf	_setupModePreviousMode& (0+255),b
 21714                           
 21715                           ; BSR set to: 1
 21716                           ;../../VLCBlib_PIC/mns.c: 695:                     setLEDsByMode();
 21717   0044E4  EC50  F05F         	call	_setLEDsByMode	;wreg free
 21718   0044E8  0012               	return	
 21719   0044EA                     l1543:
 21720                           
 21721                           ; BSR set to: 0
 21722                           ;../../VLCBlib_PIC/mns.c: 700:             if ((!(PORTAbits.RA2)) == 0) {
 21723   0044EA  A480               	btfss	128,2,c	;volatile
 21724   0044EC  D7CB               	goto	u25350
 21725                           
 21726                           ; BSR set to: 0
 21727                           ;../../VLCBlib_PIC/mns.c: 704:                 mode_state = MODE_SETUP;
 21728   0044EE  0E00               	movlw	0
 21729   0044F0  6FC5               	movwf	_mode_state& (0+255),b
 21730                           
 21731                           ; BSR set to: 0
 21732                           ;../../VLCBlib_PIC/mns.c: 705:                 setupModePreviousMode = MODE_UNINITIALISE
      +                          D;
 21733   0044F2  0101               	movlb	1	; () banked
 21734   0044F4  6965               	setf	_setupModePreviousMode& (0+255),b
 21735                           
 21736                           ; BSR set to: 1
 21737                           ;../../VLCBlib_PIC/mns.c: 706:                 pbTimer.val = tickGet();
 21738   0044F6  ECE4  F05A         	call	_tickGet	;wreg free
 21739   0044FA  C08D  F033         	movff	?_tickGet,_pbTimer
 21740   0044FE  C08E  F034         	movff	?_tickGet+1,_pbTimer+1
 21741   004502  C08F  F035         	movff	?_tickGet+2,_pbTimer+2
 21742   004506  C090  F036         	movff	?_tickGet+3,_pbTimer+3
 21743                           
 21744                           ;../../VLCBlib_PIC/mns.c: 708:                 sendMessage2(OPC_RQNN, nn.bytes.hi, nn.by
      +                          tes.lo);
 21745   00450A  C0BE  F0A6         	movff	_nn+1,sendMessage2@data1
 21746   00450E  C0BD  F0A7         	movff	_nn,sendMessage2@data2
 21747   004512  0E50               	movlw	80
 21748   004514  ECB1  F05F         	call	_sendMessage2
 21749   004518                     l23821:
 21750                           
 21751                           ;../../VLCBlib_PIC/mns.c: 709:                 setLEDsByMode();
 21752   004518  EC50  F05F         	call	_setLEDsByMode	;wreg free
 21753   00451C  D7B3               	goto	u25350
 21754   00451E                     l1545:
 21755                           
 21756                           ; BSR set to: 0
 21757                           ;../../VLCBlib_PIC/mns.c: 727:             if ((!(PORTAbits.RA2)) == 0) {
 21758   00451E  A480               	btfss	128,2,c	;volatile
 21759   004520  0012               	return	
 21760                           
 21761                           ; BSR set to: 0
 21762                           ;../../VLCBlib_PIC/mns.c: 730:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 21763   004522  ECE4  F05A         	call	_tickGet	;wreg free
 21764   004526  5033               	movf	_pbTimer^0,w,c
 21765   004528  0100               	movlb	0	; () banked
 21766   00452A  5D8D               	subwf	?_tickGet& (0+255),w,b
 21767   00452C  0101               	movlb	1	; () banked
 21768   00452E  6FC7               	movwf	??_mnsPoll& (0+255),b
 21769   004530  5034               	movf	(_pbTimer+1)^0,w,c
 21770   004532  0100               	movlb	0	; () banked
 21771   004534  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21772   004536  0101               	movlb	1	; () banked
 21773   004538  6FC8               	movwf	(??_mnsPoll+1)& (0+255),b
 21774   00453A  5035               	movf	(_pbTimer+2)^0,w,c
 21775   00453C  0100               	movlb	0	; () banked
 21776   00453E  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21777   004540  0101               	movlb	1	; () banked
 21778   004542  6FC9               	movwf	(??_mnsPoll+2)& (0+255),b
 21779   004544  5036               	movf	(_pbTimer+3)^0,w,c
 21780   004546  0100               	movlb	0	; () banked
 21781   004548  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21782   00454A  0101               	movlb	1	; () banked
 21783   00454C  6FCA               	movwf	(??_mnsPoll+3)& (0+255),b
 21784   00454E  51CA               	movf	(??_mnsPoll+3)& (0+255),w,b
 21785   004550  E108               	bnz	u25390
 21786   004552  0E91               	movlw	145
 21787   004554  5DC7               	subwf	??_mnsPoll& (0+255),w,b
 21788   004556  0ED0               	movlw	208
 21789   004558  59C8               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21790   00455A  0E03               	movlw	3
 21791   00455C  59C9               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 21792   00455E  A0D8               	btfss	status,0,c
 21793   004560  D015               	goto	l23839
 21794   004562                     u25390:
 21795                           
 21796                           ; BSR set to: 1
 21797                           ;../../VLCBlib_PIC/mns.c: 733:                     mode_state = setupModePreviousMode;
 21798   004562  C165  F0C5         	movff	_setupModePreviousMode,_mode_state
 21799                           
 21800                           ; BSR set to: 1
 21801                           ;../../VLCBlib_PIC/mns.c: 734:                     if (mode_state == MODE_NORMAL) {
 21802   004566  0100               	movlb	0	; () banked
 21803   004568  05C5               	decf	_mode_state& (0+255),w,b
 21804   00456A  A4D8               	btfss	status,2,c
 21805   00456C  D7D5               	goto	l23821
 21806                           
 21807                           ; BSR set to: 0
 21808                           ;../../VLCBlib_PIC/mns.c: 735:                         nn.word = previousNN.word;
 21809   00456E  C160  F0BD         	movff	_previousNN,_nn
 21810   004572  C161  F0BE         	movff	_previousNN+1,_nn+1
 21811                           
 21812                           ; BSR set to: 0
 21813                           ;../../VLCBlib_PIC/mns.c: 736:                         sendMessage2(OPC_NNACK, nn.bytes.
      +                          hi, nn.bytes.lo);
 21814   004576  C0BE  F0A6         	movff	_nn+1,sendMessage2@data1
 21815   00457A  C0BD  F0A7         	movff	_nn,sendMessage2@data2
 21816   00457E  0E52               	movlw	82
 21817   004580  ECB1  F05F         	call	_sendMessage2
 21818                           
 21819                           ;../../VLCBlib_PIC/mns.c: 738:                         mnsDiagnostics[0x05].asUint++;
 21820   004584  0101               	movlb	1	; () banked
 21821   004586  4B97               	infsnz	(_mnsDiagnostics+10)& (0+255),f,b
 21822   004588  2B98               	incf	(_mnsDiagnostics+11)& (0+255),f,b
 21823   00458A  D7C6               	goto	l23821
 21824   00458C                     l23839:
 21825                           
 21826                           ; BSR set to: 1
 21827   00458C  ECE4  F05A         	call	_tickGet	;wreg free
 21828   004590  5033               	movf	_pbTimer^0,w,c
 21829   004592  0100               	movlb	0	; () banked
 21830   004594  5D8D               	subwf	?_tickGet& (0+255),w,b
 21831   004596  0101               	movlb	1	; () banked
 21832   004598  6FC7               	movwf	??_mnsPoll& (0+255),b
 21833   00459A  5034               	movf	(_pbTimer+1)^0,w,c
 21834   00459C  0100               	movlb	0	; () banked
 21835   00459E  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21836   0045A0  0101               	movlb	1	; () banked
 21837   0045A2  6FC8               	movwf	(??_mnsPoll+1)& (0+255),b
 21838   0045A4  5035               	movf	(_pbTimer+2)^0,w,c
 21839   0045A6  0100               	movlb	0	; () banked
 21840   0045A8  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21841   0045AA  0101               	movlb	1	; () banked
 21842   0045AC  6FC9               	movwf	(??_mnsPoll+2)& (0+255),b
 21843   0045AE  5036               	movf	(_pbTimer+3)^0,w,c
 21844   0045B0  0100               	movlb	0	; () banked
 21845   0045B2  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21846   0045B4  0101               	movlb	1	; () banked
 21847   0045B6  6FCA               	movwf	(??_mnsPoll+3)& (0+255),b
 21848   0045B8  51CA               	movf	(??_mnsPoll+3)& (0+255),w,b
 21849   0045BA  11C9               	iorwf	(??_mnsPoll+2)& (0+255),w,b
 21850   0045BC  E106               	bnz	u25410
 21851   0045BE  0E25               	movlw	37
 21852   0045C0  5DC7               	subwf	??_mnsPoll& (0+255),w,b
 21853   0045C2  0EF4               	movlw	244
 21854   0045C4  59C8               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21855   0045C6  A0D8               	btfss	status,0,c
 21856   0045C8  D75D               	goto	u25350
 21857   0045CA                     u25410:
 21858                           
 21859                           ; BSR set to: 1
 21860                           ;../../VLCBlib_PIC/mns.c: 744:                     if (nn.word != 0) {
 21861   0045CA  0100               	movlb	0	; () banked
 21862   0045CC  51BD               	movf	_nn& (0+255),w,b
 21863   0045CE  11BE               	iorwf	(_nn+1)& (0+255),w,b
 21864   0045D0  B4D8               	btfsc	status,2,c
 21865   0045D2  D007               	goto	l23845
 21866                           
 21867                           ; BSR set to: 0
 21868                           ;../../VLCBlib_PIC/mns.c: 745:                         sendMessage2(OPC_NNREL, nn.bytes.
      +                          hi, nn.bytes.lo);
 21869   0045D4  C0BE  F0A6         	movff	_nn+1,sendMessage2@data1
 21870   0045D8  C0BD  F0A7         	movff	_nn,sendMessage2@data2
 21871   0045DC  0E51               	movlw	81
 21872   0045DE  ECB1  F05F         	call	_sendMessage2
 21873   0045E2                     l23845:
 21874                           
 21875                           ;../../VLCBlib_PIC/mns.c: 747:                     nn.word = 0;
 21876   0045E2  0E00               	movlw	0
 21877   0045E4  0100               	movlb	0	; () banked
 21878   0045E6  6FBE               	movwf	(_nn+1)& (0+255),b
 21879   0045E8  0E00               	movlw	0
 21880   0045EA  6FBD               	movwf	_nn& (0+255),b
 21881                           
 21882                           ; BSR set to: 0
 21883                           ;../../VLCBlib_PIC/mns.c: 748:                     mode_state = MODE_UNINITIALISED;
 21884   0045EC  69C5               	setf	_mode_state& (0+255),b
 21885   0045EE  D794               	goto	l23821
 21886   0045F0                     l1552:
 21887                           
 21888                           ; BSR set to: 0
 21889                           ;../../VLCBlib_PIC/mns.c: 756:             if ((!(PORTAbits.RA2)) == 0) {
 21890   0045F0  A480               	btfss	128,2,c	;volatile
 21891   0045F2  0012               	return	
 21892                           
 21893                           ; BSR set to: 0
 21894                           ;../../VLCBlib_PIC/mns.c: 758:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 21895   0045F4  ECE4  F05A         	call	_tickGet	;wreg free
 21896   0045F8  5033               	movf	_pbTimer^0,w,c
 21897   0045FA  0100               	movlb	0	; () banked
 21898   0045FC  5D8D               	subwf	?_tickGet& (0+255),w,b
 21899   0045FE  0101               	movlb	1	; () banked
 21900   004600  6FC7               	movwf	??_mnsPoll& (0+255),b
 21901   004602  5034               	movf	(_pbTimer+1)^0,w,c
 21902   004604  0100               	movlb	0	; () banked
 21903   004606  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21904   004608  0101               	movlb	1	; () banked
 21905   00460A  6FC8               	movwf	(??_mnsPoll+1)& (0+255),b
 21906   00460C  5035               	movf	(_pbTimer+2)^0,w,c
 21907   00460E  0100               	movlb	0	; () banked
 21908   004610  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21909   004612  0101               	movlb	1	; () banked
 21910   004614  6FC9               	movwf	(??_mnsPoll+2)& (0+255),b
 21911   004616  5036               	movf	(_pbTimer+3)^0,w,c
 21912   004618  0100               	movlb	0	; () banked
 21913   00461A  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21914   00461C  0101               	movlb	1	; () banked
 21915   00461E  6FCA               	movwf	(??_mnsPoll+3)& (0+255),b
 21916   004620  51CA               	movf	(??_mnsPoll+3)& (0+255),w,b
 21917   004622  E108               	bnz	u25440
 21918   004624  0E91               	movlw	145
 21919   004626  5DC7               	subwf	??_mnsPoll& (0+255),w,b
 21920   004628  0ED0               	movlw	208
 21921   00462A  59C8               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21922   00462C  0E03               	movlw	3
 21923   00462E  59C9               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 21924   004630  A0D8               	btfss	status,0,c
 21925   004632  D728               	goto	u25350
 21926   004634                     u25440:
 21927                           
 21928                           ; BSR set to: 1
 21929                           ;../../VLCBlib_PIC/mns.c: 761:                     previousNN.word = nn.word;
 21930   004634  C0BD  F160         	movff	_nn,_previousNN
 21931   004638  C0BE  F161         	movff	_nn+1,_previousNN+1
 21932                           
 21933                           ; BSR set to: 1
 21934                           ;../../VLCBlib_PIC/mns.c: 762:                     nn.bytes.lo = nn.bytes.hi = 0;
 21935   00463C  0E00               	movlw	0
 21936   00463E  0100               	movlb	0	; () banked
 21937   004640  6FBE               	movwf	(_nn+1)& (0+255),b
 21938   004642  C0BE  F0BD         	movff	_nn+1,_nn
 21939                           
 21940                           ;../../VLCBlib_PIC/mns.c: 764:                     mode_state = MODE_SETUP;
 21941   004646  0E00               	movlw	0
 21942   004648  6FC5               	movwf	_mode_state& (0+255),b
 21943                           
 21944                           ;../../VLCBlib_PIC/mns.c: 765:                     setupModePreviousMode = MODE_NORMAL;
 21945   00464A  0E01               	movlw	1
 21946   00464C  0101               	movlb	1	; () banked
 21947   00464E  6F65               	movwf	_setupModePreviousMode& (0+255),b
 21948                           
 21949                           ; BSR set to: 1
 21950                           ;../../VLCBlib_PIC/mns.c: 766:                     pbTimer.val = tickGet();
 21951   004650  ECE4  F05A         	call	_tickGet	;wreg free
 21952   004654  C08D  F033         	movff	?_tickGet,_pbTimer
 21953   004658  C08E  F034         	movff	?_tickGet+1,_pbTimer+1
 21954   00465C  C08F  F035         	movff	?_tickGet+2,_pbTimer+2
 21955   004660  C090  F036         	movff	?_tickGet+3,_pbTimer+3
 21956                           
 21957                           ;../../VLCBlib_PIC/mns.c: 768:                     sendMessage2(OPC_RQNN, previousNN.byt
      +                          es.hi, previousNN.bytes.lo);
 21958   004664  C161  F0A6         	movff	_previousNN+1,sendMessage2@data1
 21959   004668  C160  F0A7         	movff	_previousNN,sendMessage2@data2
 21960   00466C  0E50               	movlw	80
 21961   00466E  ECB1  F05F         	call	_sendMessage2
 21962   004672  D752               	goto	l23821
 21963   004674                     l23867:
 21964                           
 21965                           ; BSR set to: 1
 21966   004674  0100               	movlb	0	; () banked
 21967   004676  51C5               	movf	_mode_state& (0+255),w,b
 21968                           
 21969                           ; Switch size 1, requested type "simple"
 21970                           ; Number of cases is 3, Range of values is 0 to 255
 21971                           ; switch strategies available:
 21972                           ; Name         Instructions Cycles
 21973                           ; simple_byte           10     6 (average)
 21974                           ;	Chosen strategy is simple_byte
 21975   004678  0A00               	xorlw	0	; case 0
 21976   00467A  B4D8               	btfsc	status,2,c
 21977   00467C  D750               	goto	l1545
 21978   00467E  0AFD               	xorlw	253	; case 253
 21979   004680  B4D8               	btfsc	status,2,c
 21980   004682  D733               	goto	l1543
 21981   004684  0A02               	xorlw	2	; case 255
 21982   004686  B4D8               	btfsc	status,2,c
 21983   004688  D6FB               	goto	l1538
 21984   00468A  D7B2               	goto	l1552
 21985   00468C                     __end_of_mnsPoll:
 21986                           	callstack 0
 21987                           
 21988 ;; *************** function _setLEDsByMode *****************
 21989 ;; Defined at:
 21990 ;;		line 813 in file "../../VLCBlib_PIC/mns.c"
 21991 ;; Parameters:    Size  Location     Type
 21992 ;;		None
 21993 ;; Auto vars:     Size  Location     Type
 21994 ;;		None
 21995 ;; Return value:  Size  Location     Type
 21996 ;;                  1    wreg      void 
 21997 ;; Registers used:
 21998 ;;		wreg, status,2, status,0, cstack
 21999 ;; Tracked objects:
 22000 ;;		On entry : 0/0
 22001 ;;		On exit  : 0/0
 22002 ;;		Unchanged: 0/0
 22003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22008 ;;Total ram usage:        0 bytes
 22009 ;; Hardware stack levels used: 1
 22010 ;; Hardware stack levels required when called: 13
 22011 ;; This function calls:
 22012 ;;		_showStatus
 22013 ;; This function is called by:
 22014 ;;		_mnsPowerUp
 22015 ;;		_mnsProcessMessage
 22016 ;;		_mnsPoll
 22017 ;; This function uses a non-reentrant model
 22018 ;;
 22019                           
 22020                           	psect	text75
 22021   00BEA0                     __ptext75:
 22022                           	callstack 0
 22023   00BEA0                     _setLEDsByMode:
 22024                           	callstack 15
 22025                           
 22026                           ;../../VLCBlib_PIC/mns.c: 814:        switch (mode_state) {
 22027                           
 22028                           ;incstack = 0
 22029   00BEA0  D00C               	goto	l21993
 22030   00BEA2                     l21985:
 22031                           
 22032                           ; BSR set to: 0
 22033                           ;../../VLCBlib_PIC/mns.c: 816:             showStatus(STATUS_UNINITIALISED);
 22034   00BEA2  0E01               	movlw	1
 22035   00BEA4  EC96  F043         	call	_showStatus
 22036                           
 22037                           ;../../VLCBlib_PIC/mns.c: 817:             break;
 22038   00BEA8  0012               	return	
 22039   00BEAA                     l21987:
 22040                           
 22041                           ; BSR set to: 0
 22042                           ;../../VLCBlib_PIC/mns.c: 820:             showStatus(STATUS_SETUP);
 22043   00BEAA  0E02               	movlw	2
 22044   00BEAC  EC96  F043         	call	_showStatus
 22045                           
 22046                           ;../../VLCBlib_PIC/mns.c: 821:             break;
 22047   00BEB0  0012               	return	
 22048   00BEB2                     l21989:
 22049                           
 22050                           ; BSR set to: 0
 22051                           ;../../VLCBlib_PIC/mns.c: 823:             showStatus(STATUS_NORMAL);
 22052   00BEB2  0E03               	movlw	3
 22053   00BEB4  EC96  F043         	call	_showStatus
 22054                           
 22055                           ;../../VLCBlib_PIC/mns.c: 824:             break;
 22056   00BEB8  0012               	return	
 22057   00BEBA                     l21993:
 22058   00BEBA  0100               	movlb	0	; () banked
 22059   00BEBC  51C5               	movf	_mode_state& (0+255),w,b
 22060                           
 22061                           ; Switch size 1, requested type "simple"
 22062                           ; Number of cases is 3, Range of values is 0 to 255
 22063                           ; switch strategies available:
 22064                           ; Name         Instructions Cycles
 22065                           ; simple_byte           10     6 (average)
 22066                           ;	Chosen strategy is simple_byte
 22067   00BEBE  0A00               	xorlw	0	; case 0
 22068   00BEC0  B4D8               	btfsc	status,2,c
 22069   00BEC2  D7F3               	goto	l21987
 22070   00BEC4  0AFD               	xorlw	253	; case 253
 22071   00BEC6  B4D8               	btfsc	status,2,c
 22072   00BEC8  D7F0               	goto	l21987
 22073   00BECA  0A02               	xorlw	2	; case 255
 22074   00BECC  B4D8               	btfsc	status,2,c
 22075   00BECE  D7E9               	goto	l21985
 22076   00BED0  D7F0               	goto	l21989
 22077   00BED2                     __end_of_setLEDsByMode:
 22078                           	callstack 0
 22079                           
 22080 ;; *************** function _sendMessage2 *****************
 22081 ;; Defined at:
 22082 ;;		line 1145 in file "../../VLCBlib_PIC/vlcb.c"
 22083 ;; Parameters:    Size  Location     Type
 22084 ;;  opc             1    wreg     enum E12392
 22085 ;;  data1           1   70[BANK0 ] unsigned char 
 22086 ;;  data2           1   71[BANK0 ] unsigned char 
 22087 ;; Auto vars:     Size  Location     Type
 22088 ;;  opc             1   72[BANK0 ] enum E12392
 22089 ;; Return value:  Size  Location     Type
 22090 ;;                  1    wreg      void 
 22091 ;; Registers used:
 22092 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 22093 ;; Tracked objects:
 22094 ;;		On entry : 0/0
 22095 ;;		On exit  : 0/0
 22096 ;;		Unchanged: 0/0
 22097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22098 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22099 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22101 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22102 ;;Total ram usage:        3 bytes
 22103 ;; Hardware stack levels used: 1
 22104 ;; Hardware stack levels required when called: 16
 22105 ;; This function calls:
 22106 ;;		_sendMessage
 22107 ;; This function is called by:
 22108 ;;		_mnsProcessMessage
 22109 ;;		_mnsPoll
 22110 ;;		_nvProcessMessage
 22111 ;;		_doNnclr
 22112 ;;		_doEvlrn
 22113 ;;		_doEvuln
 22114 ;; This function uses a non-reentrant model
 22115 ;;
 22116                           
 22117                           	psect	text76
 22118   00BF62                     __ptext76:
 22119                           	callstack 0
 22120   00BF62                     _sendMessage2:
 22121                           	callstack 11
 22122                           
 22123                           ;incstack = 0
 22124                           ;sendMessage2@opc stored from wreg
 22125   00BF62  0100               	movlb	0	; () banked
 22126   00BF64  6FA8               	movwf	sendMessage2@opc& (0+255),b
 22127                           
 22128                           ;../../VLCBlib_PIC/vlcb.c: 1146:     sendMessage(opc, 3, data1, data2, 0,0,0,0,0);
 22129   00BF66  0E03               	movlw	3
 22130   00BF68  0101               	movlb	1	; () banked
 22131   00BF6A  6FBA               	movwf	sendMessage@len& (0+255),b
 22132   00BF6C  C0A6  F1BB         	movff	sendMessage2@data1,sendMessage@data1
 22133   00BF70  C0A7  F1BC         	movff	sendMessage2@data2,sendMessage@data2
 22134   00BF74  0E00               	movlw	0
 22135   00BF76  6FBD               	movwf	sendMessage@data3& (0+255),b
 22136   00BF78  0E00               	movlw	0
 22137   00BF7A  6FBE               	movwf	sendMessage@data4& (0+255),b
 22138   00BF7C  0E00               	movlw	0
 22139   00BF7E  6FBF               	movwf	sendMessage@data5& (0+255),b
 22140   00BF80  0E00               	movlw	0
 22141   00BF82  6FC0               	movwf	sendMessage@data6& (0+255),b
 22142   00BF84  0E00               	movlw	0
 22143   00BF86  6FC1               	movwf	sendMessage@data7& (0+255),b
 22144   00BF88  0100               	movlb	0	; () banked
 22145   00BF8A  51A8               	movf	sendMessage2@opc& (0+255),w,b
 22146   00BF8C  ECA3  F054         	call	_sendMessage
 22147   00BF90  0012               	return		;funcret
 22148   00BF92                     __end_of_sendMessage2:
 22149                           	callstack 0
 22150                           
 22151 ;; *************** function _setNormalActions *****************
 22152 ;; Defined at:
 22153 ;;		line 519 in file "../event_consumerDualActionQueue.c"
 22154 ;; Parameters:    Size  Location     Type
 22155 ;;		None
 22156 ;; Auto vars:     Size  Location     Type
 22157 ;;		None
 22158 ;; Return value:  Size  Location     Type
 22159 ;;                  1    wreg      void 
 22160 ;; Registers used:
 22161 ;;		wreg, status,2
 22162 ;; Tracked objects:
 22163 ;;		On entry : 0/0
 22164 ;;		On exit  : 0/0
 22165 ;;		Unchanged: 0/0
 22166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22171 ;;Total ram usage:        0 bytes
 22172 ;; Hardware stack levels used: 1
 22173 ;; Hardware stack levels required when called: 12
 22174 ;; This function calls:
 22175 ;;		Nothing
 22176 ;; This function is called by:
 22177 ;;		_consumer2QProcessMessage
 22178 ;; This function uses a non-reentrant model
 22179 ;;
 22180                           
 22181                           	psect	text77
 22182   00C632                     __ptext77:
 22183                           	callstack 0
 22184   00C632                     _setNormalActions:
 22185                           	callstack 16
 22186                           
 22187                           ;../event_consumerDualActionQueue.c: 520:     expedited = FALSE;
 22188                           
 22189                           ;incstack = 0
 22190   00C632  0E00               	movlw	0
 22191   00C634  6E49               	movwf	_expedited^0,c
 22192   00C636  0012               	return		;funcret
 22193   00C638                     __end_of_setNormalActions:
 22194                           	callstack 0
 22195                           
 22196 ;; *************** function _setExpeditedActions *****************
 22197 ;; Defined at:
 22198 ;;		line 512 in file "../event_consumerDualActionQueue.c"
 22199 ;; Parameters:    Size  Location     Type
 22200 ;;		None
 22201 ;; Auto vars:     Size  Location     Type
 22202 ;;		None
 22203 ;; Return value:  Size  Location     Type
 22204 ;;                  1    wreg      void 
 22205 ;; Registers used:
 22206 ;;		wreg, status,2
 22207 ;; Tracked objects:
 22208 ;;		On entry : 0/0
 22209 ;;		On exit  : 0/0
 22210 ;;		Unchanged: 0/0
 22211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22216 ;;Total ram usage:        0 bytes
 22217 ;; Hardware stack levels used: 1
 22218 ;; Hardware stack levels required when called: 12
 22219 ;; This function calls:
 22220 ;;		Nothing
 22221 ;; This function is called by:
 22222 ;;		_consumer2QProcessMessage
 22223 ;; This function uses a non-reentrant model
 22224 ;;
 22225                           
 22226                           	psect	text78
 22227   00C638                     __ptext78:
 22228                           	callstack 0
 22229   00C638                     _setExpeditedActions:
 22230                           	callstack 16
 22231                           
 22232                           ;../event_consumerDualActionQueue.c: 513:     expedited = TRUE;
 22233                           
 22234                           ;incstack = 0
 22235   00C638  0E01               	movlw	1
 22236   00C63A  6E49               	movwf	_expedited^0,c
 22237   00C63C  0012               	return		;funcret
 22238   00C63E                     __end_of_setExpeditedActions:
 22239                           	callstack 0
 22240                           
 22241 ;; *************** function _pushTwoAction *****************
 22242 ;; Defined at:
 22243 ;;		line 393 in file "../event_consumerDualActionQueue.c"
 22244 ;; Parameters:    Size  Location     Type
 22245 ;;  a               1    wreg     unsigned char 
 22246 ;; Auto vars:     Size  Location     Type
 22247 ;;  a               1   45[BANK0 ] unsigned char 
 22248 ;; Return value:  Size  Location     Type
 22249 ;;                  1    wreg      enum E12760
 22250 ;; Registers used:
 22251 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22252 ;; Tracked objects:
 22253 ;;		On entry : 0/0
 22254 ;;		On exit  : 0/0
 22255 ;;		Unchanged: 0/0
 22256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22258 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22260 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22261 ;;Total ram usage:        1 bytes
 22262 ;; Hardware stack levels used: 1
 22263 ;; Hardware stack levels required when called: 12
 22264 ;; This function calls:
 22265 ;;		Nothing
 22266 ;; This function is called by:
 22267 ;;		_consumer2QProcessMessage
 22268 ;; This function uses a non-reentrant model
 22269 ;;
 22270                           
 22271                           	psect	text79
 22272   00B400                     __ptext79:
 22273                           	callstack 0
 22274   00B400                     _pushTwoAction:
 22275                           	callstack 16
 22276                           
 22277                           ;incstack = 0
 22278                           ;pushTwoAction@a stored from wreg
 22279   00B400  0100               	movlb	0	; () banked
 22280   00B402  6F8D               	movwf	pushTwoAction@a& (0+255),b
 22281                           
 22282                           ;../event_consumerDualActionQueue.c: 394:     if (expedited) {
 22283   00B404  5049               	movf	_expedited^0,w,c
 22284   00B406  B4D8               	btfsc	status,2,c
 22285   00B408  D015               	goto	l21367
 22286                           
 22287                           ;../event_consumerDualActionQueue.c: 395:         if (((expeditedWriteIndex+1)&(8 -1)) =
      +                          = expeditedReadIndex)
 22288   00B40A  0100               	movlb	0	; () banked
 22289   00B40C  29CA               	incf	_expeditedWriteIndex& (0+255),w,b
 22290   00B40E  0B07               	andlw	7
 22291   00B410  19CB               	xorwf	_expeditedReadIndex& (0+255),w,b
 22292   00B412  B4D8               	btfsc	status,2,c
 22293   00B414  0012               	return	
 22294                           
 22295                           ; BSR set to: 0
 22296                           ;../event_consumerDualActionQueue.c: 397:         expeditedQueueBuf[expeditedWriteIndex+
      +                          +] = a;
 22297   00B416  0EC4               	movlw	low _expeditedQueueBuf
 22298   00B418  25CA               	addwf	_expeditedWriteIndex& (0+255),w,b
 22299   00B41A  6ED9               	movwf	fsr2l,c
 22300   00B41C  6ADA               	clrf	fsr2h,c
 22301   00B41E  0E02               	movlw	high _expeditedQueueBuf
 22302   00B420  22DA               	addwfc	fsr2h,f,c
 22303   00B422  C08D  FFDF         	movff	pushTwoAction@a,indf2
 22304                           
 22305                           ; BSR set to: 0
 22306   00B426  2BCA               	incf	_expeditedWriteIndex& (0+255),f,b
 22307                           
 22308                           ; BSR set to: 0
 22309                           ;../event_consumerDualActionQueue.c: 398:         if (expeditedWriteIndex >= 8) expedite
      +                          dWriteIndex = 0;
 22310   00B428  0E07               	movlw	7
 22311   00B42A  65CA               	cpfsgt	_expeditedWriteIndex& (0+255),b
 22312   00B42C  0012               	return	
 22313                           
 22314                           ; BSR set to: 0
 22315   00B42E  0E00               	movlw	0
 22316   00B430  6FCA               	movwf	_expeditedWriteIndex& (0+255),b
 22317   00B432  0012               	return	
 22318   00B434                     l21367:
 22319                           
 22320                           ;../event_consumerDualActionQueue.c: 401:     if (((normalWriteIndex+1)&(64 -1)) == norm
      +                          alReadIndex)
 22321   00B434  0100               	movlb	0	; () banked
 22322   00B436  29CC               	incf	_normalWriteIndex& (0+255),w,b
 22323   00B438  0B3F               	andlw	63
 22324   00B43A  19CD               	xorwf	_normalReadIndex& (0+255),w,b
 22325   00B43C  B4D8               	btfsc	status,2,c
 22326   00B43E  0012               	return	
 22327                           
 22328                           ; BSR set to: 0
 22329                           ;../event_consumerDualActionQueue.c: 403:     normalQueueBuf[normalWriteIndex++] = a;
 22330   00B440  0E80               	movlw	low _normalQueueBuf
 22331   00B442  25CC               	addwf	_normalWriteIndex& (0+255),w,b
 22332   00B444  6ED9               	movwf	fsr2l,c
 22333   00B446  6ADA               	clrf	fsr2h,c
 22334   00B448  0E04               	movlw	high _normalQueueBuf
 22335   00B44A  22DA               	addwfc	fsr2h,f,c
 22336   00B44C  C08D  FFDF         	movff	pushTwoAction@a,indf2
 22337                           
 22338                           ; BSR set to: 0
 22339   00B450  2BCC               	incf	_normalWriteIndex& (0+255),f,b
 22340                           
 22341                           ; BSR set to: 0
 22342                           ;../event_consumerDualActionQueue.c: 404:     if (normalWriteIndex >= 64) normalWriteInd
      +                          ex = 0;
 22343   00B452  0E3F               	movlw	63
 22344   00B454  65CC               	cpfsgt	_normalWriteIndex& (0+255),b
 22345   00B456  0012               	return	
 22346                           
 22347                           ; BSR set to: 0
 22348   00B458  0E00               	movlw	0
 22349   00B45A  6FCC               	movwf	_normalWriteIndex& (0+255),b
 22350                           
 22351                           ; BSR set to: 0
 22352   00B45C  0012               	return		;funcret
 22353   00B45E                     __end_of_pushTwoAction:
 22354                           	callstack 0
 22355                           
 22356 ;; *************** function _canReceiveMessage *****************
 22357 ;; Defined at:
 22358 ;;		line 589 in file "../../VLCBlib_PIC/can18_ecan.c"
 22359 ;; Parameters:    Size  Location     Type
 22360 ;;  m               2   10[BANK1 ] PTR struct Message
 22361 ;;		 -> poll@m(9), 
 22362 ;; Auto vars:     Size  Location     Type
 22363 ;;  p               2   17[BANK1 ] PTR unsigned char 
 22364 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 22365 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 22366 ;;		 -> NULL(0), 
 22367 ;;  mp              2   14[BANK1 ] PTR struct Message
 22368 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 22369 ;;  no              1   16[BANK1 ] unsigned char 
 22370 ;;  messageAvail    1   13[BANK1 ] enum E13071
 22371 ;;  incomingCanI    1    0        unsigned char 
 22372 ;; Return value:  Size  Location     Type
 22373 ;;                  1    wreg      enum E13071
 22374 ;; Registers used:
 22375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22376 ;; Tracked objects:
 22377 ;;		On entry : 0/0
 22378 ;;		On exit  : 0/0
 22379 ;;		Unchanged: 0/0
 22380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22381 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22382 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22383 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22384 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22385 ;;Total ram usage:        9 bytes
 22386 ;; Hardware stack levels used: 1
 22387 ;; Hardware stack levels required when called: 20
 22388 ;; This function calls:
 22389 ;;		_getBufferPointer
 22390 ;;		_getNumRxBuffersInUse
 22391 ;;		_handleSelfEnumeration
 22392 ;;		_memcpy
 22393 ;;		_pop
 22394 ;;		_processEnumeration
 22395 ;; This function is called by:
 22396 ;;		_poll
 22397 ;; This function uses a non-reentrant model
 22398 ;;
 22399                           
 22400                           	psect	text80
 22401   0067DC                     __ptext80:
 22402                           	callstack 0
 22403   0067DC                     _canReceiveMessage:
 22404                           	callstack 9
 22405                           
 22406                           ;../../VLCBlib_PIC/can18_ecan.c: 590:     Message * mp;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          591:     uint8_t * p;;../../VLCBlib_PIC/can18_ecan.c: 592:     MessageReceived messageAv
      +                          ailable;;../../VLCBlib_PIC/can18_ecan.c: 593:     uint8_t incomingCanId;;../../VLCBlib_P
      +                          IC/can18_ecan.c: 595:     uint8_t no;;../../VLCBlib_PIC/can18_ecan.c: 598:     PIE5bits.
      +                          FIFOWMIE = 0;
 22407                           
 22408                           ; BSR set to: 0
 22409                           ;incstack = 0
 22410   0067DC  9076               	bcf	118,0,c	;volatile
 22411                           
 22412                           ;../../VLCBlib_PIC/can18_ecan.c: 599:     processEnumeration();
 22413   0067DE  EC5D  F03B         	call	_processEnumeration	;wreg free
 22414                           
 22415                           ;../../VLCBlib_PIC/can18_ecan.c: 603:     no = getNumRxBuffersInUse();
 22416   0067E2  EC8F  F05E         	call	_getNumRxBuffersInUse	;wreg free
 22417   0067E6  0101               	movlb	1	; () banked
 22418   0067E8  6FCA               	movwf	canReceiveMessage@no& (0+255),b
 22419                           
 22420                           ; BSR set to: 1
 22421                           ;../../VLCBlib_PIC/can18_ecan.c: 604:     if (canDiagnostics[0x12].asUint < no) {
 22422   0067EA  51CA               	movf	canReceiveMessage@no& (0+255),w,b
 22423   0067EC  5D8B               	subwf	(_canDiagnostics+36)& (0+255),w,b
 22424   0067EE  0E00               	movlw	0
 22425   0067F0  598C               	subwfb	(_canDiagnostics+37)& (0+255),w,b
 22426   0067F2  B0D8               	btfsc	status,0,c
 22427   0067F4  D003               	goto	l24269
 22428                           
 22429                           ; BSR set to: 1
 22430                           ;../../VLCBlib_PIC/can18_ecan.c: 605:         canDiagnostics[0x12].asUint = no;
 22431   0067F6  C1CA  F18B         	movff	canReceiveMessage@no,_canDiagnostics+36
 22432   0067FA  6B8C               	clrf	(_canDiagnostics+37)& (0+255),b
 22433   0067FC                     l24269:
 22434                           
 22435                           ; BSR set to: 1
 22436                           ;../../VLCBlib_PIC/can18_ecan.c: 608:     mp = pop(&rxQueue);
 22437   0067FC  0E4F               	movlw	low _rxQueue
 22438   0067FE  0100               	movlb	0	; () banked
 22439   006800  6F8D               	movwf	pop@q& (0+255),b
 22440   006802  EC39  F04E         	call	_pop	;wreg free
 22441   006806  C08D  F1C8         	movff	?_pop,canReceiveMessage@mp
 22442   00680A  C08E  F1C9         	movff	?_pop+1,canReceiveMessage@mp+1
 22443                           
 22444                           ;../../VLCBlib_PIC/can18_ecan.c: 609:     if (mp != ((void*)0)) {
 22445   00680E  0101               	movlb	1	; () banked
 22446   006810  51C8               	movf	canReceiveMessage@mp& (0+255),w,b
 22447   006812  11C9               	iorwf	(canReceiveMessage@mp+1)& (0+255),w,b
 22448   006814  B4D8               	btfsc	status,2,c
 22449   006816  D012               	goto	l2513
 22450                           
 22451                           ; BSR set to: 1
 22452                           ;../../VLCBlib_PIC/can18_ecan.c: 610:         memcpy(m, mp, sizeof(Message));
 22453   006818  C1C4  F08D         	movff	canReceiveMessage@m,memcpy@d1
 22454   00681C  C1C5  F08E         	movff	canReceiveMessage@m+1,memcpy@d1+1
 22455   006820  C1C8  F08F         	movff	canReceiveMessage@mp,memcpy@s1
 22456   006824  C1C9  F090         	movff	canReceiveMessage@mp+1,memcpy@s1+1
 22457   006828  0E00               	movlw	0
 22458   00682A  0100               	movlb	0	; () banked
 22459   00682C  6F92               	movwf	(memcpy@n+1)& (0+255),b
 22460   00682E  0E09               	movlw	9
 22461   006830  6F91               	movwf	memcpy@n& (0+255),b
 22462   006832  ECD1  F05D         	call	_memcpy	;wreg free
 22463                           
 22464                           ;../../VLCBlib_PIC/can18_ecan.c: 611:         PIE5bits.FIFOWMIE = 1;
 22465   006836  8076               	bsf	118,0,c	;volatile
 22466                           
 22467                           ;../../VLCBlib_PIC/can18_ecan.c: 612:         return RECEIVED;
 22468   006838  0E01               	movlw	1
 22469   00683A  0012               	return	
 22470   00683C                     l2513:
 22471                           
 22472                           ; BSR set to: 1
 22473                           ;../../VLCBlib_PIC/can18_ecan.c: 614:         if (COMSTATbits.NOT_FIFOEMPTY) {
 22474   00683C  AE71               	btfss	113,7,c	;volatile
 22475   00683E  D00D               	goto	u25840
 22476                           
 22477                           ; BSR set to: 1
 22478                           ;../../VLCBlib_PIC/can18_ecan.c: 615:             p = getBufferPointer(CANCON & 0x07);
 22479   006840  506F               	movf	111,w,c	;volatile
 22480   006842  0B07               	andlw	7
 22481   006844  ECB6  F04F         	call	_getBufferPointer
 22482   006848  C08D  F1CB         	movff	?_getBufferPointer,canReceiveMessage@p
 22483   00684C  C08E  F1CC         	movff	?_getBufferPointer+1,canReceiveMessage@p+1
 22484                           
 22485                           ;../../VLCBlib_PIC/can18_ecan.c: 616:             if (p == ((void*)0)) {
 22486   006850  0101               	movlb	1	; () banked
 22487   006852  51CB               	movf	canReceiveMessage@p& (0+255),w,b
 22488   006854  11CC               	iorwf	(canReceiveMessage@p+1)& (0+255),w,b
 22489   006856  A4D8               	btfss	status,2,c
 22490   006858  D003               	goto	l2517
 22491   00685A                     u25840:
 22492                           
 22493                           ; BSR set to: 1
 22494                           ;../../VLCBlib_PIC/can18_ecan.c: 618:                 PIE5bits.FIFOWMIE = 1;
 22495   00685A  8076               	bsf	118,0,c	;volatile
 22496   00685C                     l24289:
 22497                           
 22498                           ; BSR set to: 1
 22499                           ;../../VLCBlib_PIC/can18_ecan.c: 619:                 return NOT_RECEIVED;
 22500   00685C  0E00               	movlw	0
 22501   00685E  0012               	return	
 22502   006860                     l2517:
 22503                           
 22504                           ; BSR set to: 1
 22505                           ;../../VLCBlib_PIC/can18_ecan.c: 621:             PIR5bits.RXBnIF = 0;
 22506   006860  9277               	bcf	119,1,c	;volatile
 22507                           
 22508                           ; BSR set to: 1
 22509                           ;../../VLCBlib_PIC/can18_ecan.c: 623:             if (p[2] & 0x08) return NOT_RECEIVED;
 22510   006862  EE20 F002          	lfsr	2,2
 22511   006866  51CB               	movf	canReceiveMessage@p& (0+255),w,b
 22512   006868  26D9               	addwf	fsr2l,f,c
 22513   00686A  51CC               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22514   00686C  22DA               	addwfc	fsr2h,f,c
 22515   00686E  B6DF               	btfsc	indf2,3,c
 22516   006870  D7F5               	goto	l24289
 22517                           
 22518                           ; BSR set to: 1
 22519                           ;../../VLCBlib_PIC/can18_ecan.c: 625:             if (handleSelfEnumeration(p) == RECEIV
      +                          ED) {
 22520   006872  C1CB  F097         	movff	canReceiveMessage@p,handleSelfEnumeration@p
 22521   006876  C1CC  F098         	movff	canReceiveMessage@p+1,handleSelfEnumeration@p+1
 22522   00687A  EC35  F040         	call	_handleSelfEnumeration	;wreg free
 22523   00687E  06E8               	decf	wreg,f,c
 22524   006880  A4D8               	btfss	status,2,c
 22525   006882  D08F               	goto	l24327
 22526                           
 22527                           ;../../VLCBlib_PIC/can18_ecan.c: 628:                 canDiagnostics[0x09].asUint++;
 22528   006884  0101               	movlb	1	; () banked
 22529   006886  4B79               	infsnz	(_canDiagnostics+18)& (0+255),f,b
 22530   006888  2B7A               	incf	(_canDiagnostics+19)& (0+255),f,b
 22531                           
 22532                           ; BSR set to: 1
 22533                           ;../../VLCBlib_PIC/can18_ecan.c: 633:                     m->opc = p[6];
 22534   00688A  EE20 F006          	lfsr	2,6
 22535   00688E  51CB               	movf	canReceiveMessage@p& (0+255),w,b
 22536   006890  26D9               	addwf	fsr2l,f,c
 22537   006892  51CC               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22538   006894  22DA               	addwfc	fsr2h,f,c
 22539   006896  EE10 F001          	lfsr	1,1
 22540   00689A  51C4               	movf	canReceiveMessage@m& (0+255),w,b
 22541   00689C  26E1               	addwf	fsr1l,f,c
 22542   00689E  51C5               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22543   0068A0  22E2               	addwfc	fsr1h,f,c
 22544   0068A2  CFDF FFE7          	movff	indf2,indf1
 22545                           
 22546                           ; BSR set to: 1
 22547                           ;../../VLCBlib_PIC/can18_ecan.c: 634:                     m->len = p[5] & 0xF;
 22548   0068A6  EE20 F005          	lfsr	2,5
 22549   0068AA  51CB               	movf	canReceiveMessage@p& (0+255),w,b
 22550   0068AC  26D9               	addwf	fsr2l,f,c
 22551   0068AE  51CC               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22552   0068B0  22DA               	addwfc	fsr2h,f,c
 22553   0068B2  50DF               	movf	indf2,w,c
 22554   0068B4  0B0F               	andlw	15
 22555   0068B6  C1C4  FFD9         	movff	canReceiveMessage@m,fsr2l
 22556   0068BA  C1C5  FFDA         	movff	canReceiveMessage@m+1,fsr2h
 22557   0068BE  6EDF               	movwf	indf2,c
 22558                           
 22559                           ; BSR set to: 1
 22560                           ;../../VLCBlib_PIC/can18_ecan.c: 635:                     if (m->len > 8) {
 22561   0068C0  C1C4  FFD9         	movff	canReceiveMessage@m,fsr2l
 22562   0068C4  C1C5  FFDA         	movff	canReceiveMessage@m+1,fsr2h
 22563   0068C8  0E08               	movlw	8
 22564   0068CA  64DF               	cpfsgt	indf2,c
 22565   0068CC  D006               	goto	l24311
 22566                           
 22567                           ; BSR set to: 1
 22568                           ;../../VLCBlib_PIC/can18_ecan.c: 636:                         m->len = 8;
 22569   0068CE  C1C4  FFD9         	movff	canReceiveMessage@m,fsr2l
 22570   0068D2  C1C5  FFDA         	movff	canReceiveMessage@m+1,fsr2h
 22571   0068D6  0E08               	movlw	8
 22572   0068D8  6EDF               	movwf	indf2,c
 22573   0068DA                     l24311:
 22574                           
 22575                           ; BSR set to: 1
 22576                           ;../../VLCBlib_PIC/can18_ecan.c: 638:                     m->bytes[0] = p[7];
 22577   0068DA  EE20 F007          	lfsr	2,7
 22578   0068DE  51CB               	movf	canReceiveMessage@p& (0+255),w,b
 22579   0068E0  26D9               	addwf	fsr2l,f,c
 22580   0068E2  51CC               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22581   0068E4  22DA               	addwfc	fsr2h,f,c
 22582   0068E6  EE10 F002          	lfsr	1,2
 22583   0068EA  51C4               	movf	canReceiveMessage@m& (0+255),w,b
 22584   0068EC  26E1               	addwf	fsr1l,f,c
 22585   0068EE  51C5               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22586   0068F0  22E2               	addwfc	fsr1h,f,c
 22587   0068F2  CFDF FFE7          	movff	indf2,indf1
 22588                           
 22589                           ; BSR set to: 1
 22590                           ;../../VLCBlib_PIC/can18_ecan.c: 639:                     m->bytes[1] = p[8];
 22591   0068F6  EE20 F008          	lfsr	2,8
 22592   0068FA  51CB               	movf	canReceiveMessage@p& (0+255),w,b
 22593   0068FC  26D9               	addwf	fsr2l,f,c
 22594   0068FE  51CC               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22595   006900  22DA               	addwfc	fsr2h,f,c
 22596   006902  EE10 F003          	lfsr	1,3
 22597   006906  51C4               	movf	canReceiveMessage@m& (0+255),w,b
 22598   006908  26E1               	addwf	fsr1l,f,c
 22599   00690A  51C5               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22600   00690C  22E2               	addwfc	fsr1h,f,c
 22601   00690E  CFDF FFE7          	movff	indf2,indf1
 22602                           
 22603                           ; BSR set to: 1
 22604                           ;../../VLCBlib_PIC/can18_ecan.c: 640:                     m->bytes[2] = p[9];
 22605   006912  EE20 F009          	lfsr	2,9
 22606   006916  51CB               	movf	canReceiveMessage@p& (0+255),w,b
 22607   006918  26D9               	addwf	fsr2l,f,c
 22608   00691A  51CC               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22609   00691C  22DA               	addwfc	fsr2h,f,c
 22610   00691E  EE10 F004          	lfsr	1,4
 22611   006922  51C4               	movf	canReceiveMessage@m& (0+255),w,b
 22612   006924  26E1               	addwf	fsr1l,f,c
 22613   006926  51C5               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22614   006928  22E2               	addwfc	fsr1h,f,c
 22615   00692A  CFDF FFE7          	movff	indf2,indf1
 22616                           
 22617                           ; BSR set to: 1
 22618                           ;../../VLCBlib_PIC/can18_ecan.c: 641:                     m->bytes[3] = p[10];
 22619   00692E  EE20 F00A          	lfsr	2,10
 22620   006932  51CB               	movf	canReceiveMessage@p& (0+255),w,b
 22621   006934  26D9               	addwf	fsr2l,f,c
 22622   006936  51CC               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22623   006938  22DA               	addwfc	fsr2h,f,c
 22624   00693A  EE10 F005          	lfsr	1,5
 22625   00693E  51C4               	movf	canReceiveMessage@m& (0+255),w,b
 22626   006940  26E1               	addwf	fsr1l,f,c
 22627   006942  51C5               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22628   006944  22E2               	addwfc	fsr1h,f,c
 22629   006946  CFDF FFE7          	movff	indf2,indf1
 22630                           
 22631                           ; BSR set to: 1
 22632                           ;../../VLCBlib_PIC/can18_ecan.c: 642:                     m->bytes[4] = p[11];
 22633   00694A  EE20 F00B          	lfsr	2,11
 22634   00694E  51CB               	movf	canReceiveMessage@p& (0+255),w,b
 22635   006950  26D9               	addwf	fsr2l,f,c
 22636   006952  51CC               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22637   006954  22DA               	addwfc	fsr2h,f,c
 22638   006956  EE10 F006          	lfsr	1,6
 22639   00695A  51C4               	movf	canReceiveMessage@m& (0+255),w,b
 22640   00695C  26E1               	addwf	fsr1l,f,c
 22641   00695E  51C5               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22642   006960  22E2               	addwfc	fsr1h,f,c
 22643   006962  CFDF FFE7          	movff	indf2,indf1
 22644                           
 22645                           ; BSR set to: 1
 22646                           ;../../VLCBlib_PIC/can18_ecan.c: 643:                     m->bytes[5] = p[12];
 22647   006966  EE20 F00C          	lfsr	2,12
 22648   00696A  51CB               	movf	canReceiveMessage@p& (0+255),w,b
 22649   00696C  26D9               	addwf	fsr2l,f,c
 22650   00696E  51CC               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22651   006970  22DA               	addwfc	fsr2h,f,c
 22652   006972  EE10 F007          	lfsr	1,7
 22653   006976  51C4               	movf	canReceiveMessage@m& (0+255),w,b
 22654   006978  26E1               	addwf	fsr1l,f,c
 22655   00697A  51C5               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22656   00697C  22E2               	addwfc	fsr1h,f,c
 22657   00697E  CFDF FFE7          	movff	indf2,indf1
 22658                           
 22659                           ; BSR set to: 1
 22660                           ;../../VLCBlib_PIC/can18_ecan.c: 644:                     m->bytes[6] = p[13];
 22661   006982  EE20 F00D          	lfsr	2,13
 22662   006986  51CB               	movf	canReceiveMessage@p& (0+255),w,b
 22663   006988  26D9               	addwf	fsr2l,f,c
 22664   00698A  51CC               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22665   00698C  22DA               	addwfc	fsr2h,f,c
 22666   00698E  EE10 F008          	lfsr	1,8
 22667   006992  51C4               	movf	canReceiveMessage@m& (0+255),w,b
 22668   006994  26E1               	addwf	fsr1l,f,c
 22669   006996  51C5               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22670   006998  22E2               	addwfc	fsr1h,f,c
 22671   00699A  CFDF FFE7          	movff	indf2,indf1
 22672                           
 22673                           ; BSR set to: 1
 22674                           ;../../VLCBlib_PIC/can18_ecan.c: 645:                     messageAvailable = RECEIVED;
 22675   00699E  0E01               	movlw	1
 22676   0069A0  6FC7               	movwf	canReceiveMessage@messageAvailable& (0+255),b
 22677   0069A2                     l24327:
 22678                           
 22679                           ;../../VLCBlib_PIC/can18_ecan.c: 648:             if (PIR5bits.IRXIF) {
 22680   0069A2  AE77               	btfss	119,7,c	;volatile
 22681   0069A4  D004               	goto	l24333
 22682                           
 22683                           ;../../VLCBlib_PIC/can18_ecan.c: 649:                 canDiagnostics[0x01].asUint++;
 22684   0069A6  0101               	movlb	1	; () banked
 22685   0069A8  4B69               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 22686   0069AA  2B6A               	incf	(_canDiagnostics+3)& (0+255),f,b
 22687                           
 22688                           ; BSR set to: 1
 22689                           ;../../VLCBlib_PIC/can18_ecan.c: 650:                 PIR5bits.IRXIF = 0;
 22690   0069AC  9E77               	bcf	119,7,c	;volatile
 22691   0069AE                     l24333:
 22692                           
 22693                           ;../../VLCBlib_PIC/can18_ecan.c: 653:             p[0] &= 0x7f;
 22694   0069AE  C1CB  FFD9         	movff	canReceiveMessage@p,fsr2l
 22695   0069B2  C1CC  FFDA         	movff	canReceiveMessage@p+1,fsr2h
 22696   0069B6  0E7F               	movlw	127
 22697   0069B8  16DF               	andwf	indf2,f,c
 22698                           
 22699                           ;../../VLCBlib_PIC/can18_ecan.c: 654:             PIE5bits.FIFOWMIE = 1;
 22700   0069BA  8076               	bsf	118,0,c	;volatile
 22701                           
 22702                           ;../../VLCBlib_PIC/can18_ecan.c: 655:             return messageAvailable;
 22703   0069BC  0101               	movlb	1	; () banked
 22704   0069BE  51C7               	movf	canReceiveMessage@messageAvailable& (0+255),w,b
 22705   0069C0  0012               	return	
 22706   0069C2                     __end_of_canReceiveMessage:
 22707                           	callstack 0
 22708                           
 22709 ;; *************** function _processEnumeration *****************
 22710 ;; Defined at:
 22711 ;;		line 903 in file "../../VLCBlib_PIC/can18_ecan.c"
 22712 ;; Parameters:    Size  Location     Type
 22713 ;;		None
 22714 ;; Auto vars:     Size  Location     Type
 22715 ;;  i               1    9[BANK1 ] unsigned char 
 22716 ;;  newCanId        1    8[BANK1 ] unsigned char 
 22717 ;;  enumResult      1    7[BANK1 ] unsigned char 
 22718 ;; Return value:  Size  Location     Type
 22719 ;;                  1    wreg      void 
 22720 ;; Registers used:
 22721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22722 ;; Tracked objects:
 22723 ;;		On entry : 0/0
 22724 ;;		On exit  : 0/0
 22725 ;;		Unchanged: 0/0
 22726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22728 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22729 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22730 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22731 ;;Total ram usage:        7 bytes
 22732 ;; Hardware stack levels used: 1
 22733 ;; Hardware stack levels required when called: 19
 22734 ;; This function calls:
 22735 ;;		_setNewCanId
 22736 ;;		_tickGet
 22737 ;;		_updateModuleErrorStatus
 22738 ;; This function is called by:
 22739 ;;		_canReceiveMessage
 22740 ;; This function uses a non-reentrant model
 22741 ;;
 22742                           
 22743                           	psect	text81
 22744   0076BA                     __ptext81:
 22745                           	callstack 0
 22746   0076BA                     _processEnumeration:
 22747                           	callstack 9
 22748                           
 22749                           ;../../VLCBlib_PIC/can18_ecan.c: 904:     uint8_t i, newCanId, enumResult;;../../VLCBlib
      +                          _PIC/can18_ecan.c: 906:     switch (enumerationState) {
 22750                           
 22751                           ;incstack = 0
 22752   0076BA  D09B               	goto	l22407
 22753   0076BC                     l22345:
 22754                           
 22755                           ; BSR set to: 1
 22756                           ;../../VLCBlib_PIC/can18_ecan.c: 908:             if (((tickGet() - enumerationStartTime
      +                          .val) > 2 * (62500/10) )) {
 22757   0076BC  ECE4  F05A         	call	_tickGet	;wreg free
 22758   0076C0  502B               	movf	_enumerationStartTime^0,w,c
 22759   0076C2  0100               	movlb	0	; () banked
 22760   0076C4  5D8D               	subwf	?_tickGet& (0+255),w,b
 22761   0076C6  0101               	movlb	1	; () banked
 22762   0076C8  6FBD               	movwf	??_processEnumeration& (0+255),b
 22763   0076CA  502C               	movf	(_enumerationStartTime+1)^0,w,c
 22764   0076CC  0100               	movlb	0	; () banked
 22765   0076CE  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 22766   0076D0  0101               	movlb	1	; () banked
 22767   0076D2  6FBE               	movwf	(??_processEnumeration+1)& (0+255),b
 22768   0076D4  502D               	movf	(_enumerationStartTime+2)^0,w,c
 22769   0076D6  0100               	movlb	0	; () banked
 22770   0076D8  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 22771   0076DA  0101               	movlb	1	; () banked
 22772   0076DC  6FBF               	movwf	(??_processEnumeration+2)& (0+255),b
 22773   0076DE  502E               	movf	(_enumerationStartTime+3)^0,w,c
 22774   0076E0  0100               	movlb	0	; () banked
 22775   0076E2  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 22776   0076E4  0101               	movlb	1	; () banked
 22777   0076E6  6FC0               	movwf	(??_processEnumeration+3)& (0+255),b
 22778   0076E8  51C0               	movf	(??_processEnumeration+3)& (0+255),w,b
 22779   0076EA  11BF               	iorwf	(??_processEnumeration+2)& (0+255),w,b
 22780   0076EC  E106               	bnz	u23350
 22781   0076EE  0ED5               	movlw	213
 22782   0076F0  5DBD               	subwf	??_processEnumeration& (0+255),w,b
 22783   0076F2  0E30               	movlw	48
 22784   0076F4  59BE               	subwfb	(??_processEnumeration+1)& (0+255),w,b
 22785   0076F6  A0D8               	btfss	status,0,c
 22786   0076F8  0012               	return	
 22787   0076FA                     u23350:
 22788                           
 22789                           ; BSR set to: 1
 22790                           ;../../VLCBlib_PIC/can18_ecan.c: 910:                 for (i=1; i< (0x7F/8)+1; i++) {
 22791   0076FA  0E01               	movlw	1
 22792   0076FC  6FC3               	movwf	processEnumeration@i& (0+255),b
 22793   0076FE                     l22353:
 22794                           
 22795                           ; BSR set to: 1
 22796                           ;../../VLCBlib_PIC/can18_ecan.c: 911:                     enumerationResults[i] = 0;
 22797   0076FE  0E34               	movlw	low _enumerationResults
 22798   007700  25C3               	addwf	processEnumeration@i& (0+255),w,b
 22799   007702  6ED9               	movwf	fsr2l,c
 22800   007704  6ADA               	clrf	fsr2h,c
 22801   007706  0E02               	movlw	high _enumerationResults
 22802   007708  22DA               	addwfc	fsr2h,f,c
 22803   00770A  6ADF               	clrf	indf2,c
 22804                           
 22805                           ; BSR set to: 1
 22806                           ;../../VLCBlib_PIC/can18_ecan.c: 912:                 }
 22807   00770C  2BC3               	incf	processEnumeration@i& (0+255),f,b
 22808                           
 22809                           ; BSR set to: 1
 22810   00770E  0E0F               	movlw	15
 22811   007710  65C3               	cpfsgt	processEnumeration@i& (0+255),b
 22812   007712  D7F5               	goto	l22353
 22813                           
 22814                           ; BSR set to: 1
 22815                           ;../../VLCBlib_PIC/can18_ecan.c: 913:                 enumerationResults[0] = 1;
 22816   007714  0E01               	movlw	1
 22817   007716  0102               	movlb	2	; () banked
 22818   007718  6F34               	movwf	_enumerationResults& (0+255),b
 22819                           
 22820                           ;../../VLCBlib_PIC/can18_ecan.c: 915:                 enumerationState = ENUMERATION_IN_
      +                          PROGRESS;
 22821   00771A  0E02               	movlw	2
 22822   00771C  0100               	movlb	0	; () banked
 22823   00771E  6FBF               	movwf	_enumerationState& (0+255),b
 22824                           
 22825                           ; BSR set to: 0
 22826                           ;../../VLCBlib_PIC/can18_ecan.c: 916:                 enumerationStartTime.val = tickGet
      +                          ();
 22827   007720  ECE4  F05A         	call	_tickGet	;wreg free
 22828   007724  C08D  F02B         	movff	?_tickGet,_enumerationStartTime
 22829   007728  C08E  F02C         	movff	?_tickGet+1,_enumerationStartTime+1
 22830   00772C  C08F  F02D         	movff	?_tickGet+2,_enumerationStartTime+2
 22831   007730  C090  F02E         	movff	?_tickGet+3,_enumerationStartTime+3
 22832                           
 22833                           ;../../VLCBlib_PIC/can18_ecan.c: 918:                 canDiagnostics[0x0D].asUint++;
 22834   007734  0101               	movlb	1	; () banked
 22835   007736  4B81               	infsnz	(_canDiagnostics+26)& (0+255),f,b
 22836   007738  2B82               	incf	(_canDiagnostics+27)& (0+255),f,b
 22837                           
 22838                           ; BSR set to: 1
 22839                           ;../../VLCBlib_PIC/can18_ecan.c: 920:                 TXB1CONbits.TXREQ = 1;
 22840   00773A  010F               	movlb	15	; () banked
 22841   00773C  8710               	bsf	16,3,b	;volatile
 22842   00773E  0012               	return	
 22843   007740                     l22367:
 22844                           
 22845                           ; BSR set to: 1
 22846                           ;../../VLCBlib_PIC/can18_ecan.c: 924:             if ((tickGet() - enumerationStartTime.
      +                          val) > (62500/10) ) {
 22847   007740  ECE4  F05A         	call	_tickGet	;wreg free
 22848   007744  502B               	movf	_enumerationStartTime^0,w,c
 22849   007746  0100               	movlb	0	; () banked
 22850   007748  5D8D               	subwf	?_tickGet& (0+255),w,b
 22851   00774A  0101               	movlb	1	; () banked
 22852   00774C  6FBD               	movwf	??_processEnumeration& (0+255),b
 22853   00774E  502C               	movf	(_enumerationStartTime+1)^0,w,c
 22854   007750  0100               	movlb	0	; () banked
 22855   007752  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 22856   007754  0101               	movlb	1	; () banked
 22857   007756  6FBE               	movwf	(??_processEnumeration+1)& (0+255),b
 22858   007758  502D               	movf	(_enumerationStartTime+2)^0,w,c
 22859   00775A  0100               	movlb	0	; () banked
 22860   00775C  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 22861   00775E  0101               	movlb	1	; () banked
 22862   007760  6FBF               	movwf	(??_processEnumeration+2)& (0+255),b
 22863   007762  502E               	movf	(_enumerationStartTime+3)^0,w,c
 22864   007764  0100               	movlb	0	; () banked
 22865   007766  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 22866   007768  0101               	movlb	1	; () banked
 22867   00776A  6FC0               	movwf	(??_processEnumeration+3)& (0+255),b
 22868   00776C  51C0               	movf	(??_processEnumeration+3)& (0+255),w,b
 22869   00776E  11BF               	iorwf	(??_processEnumeration+2)& (0+255),w,b
 22870   007770  E106               	bnz	u23370
 22871   007772  0E6B               	movlw	107
 22872   007774  5DBD               	subwf	??_processEnumeration& (0+255),w,b
 22873   007776  0E18               	movlw	24
 22874   007778  59BE               	subwfb	(??_processEnumeration+1)& (0+255),w,b
 22875   00777A  A0D8               	btfss	status,0,c
 22876   00777C  0012               	return	
 22877   00777E                     u23370:
 22878                           
 22879                           ; BSR set to: 1
 22880                           ;../../VLCBlib_PIC/can18_ecan.c: 928:                 for (i=0; (enumerationResults[i] =
      +                          = 0xFF) && (i < (0x7F/8)+1); i++) {
 22881   00777E  0E00               	movlw	0
 22882   007780  6FC3               	movwf	processEnumeration@i& (0+255),b
 22883   007782  D001               	goto	l22373
 22884   007784                     l22371:
 22885                           
 22886                           ; BSR set to: 1
 22887                           ;../../VLCBlib_PIC/can18_ecan.c: 930:                 }
 22888   007784  2BC3               	incf	processEnumeration@i& (0+255),f,b
 22889   007786                     l22373:
 22890                           
 22891                           ; BSR set to: 1
 22892   007786  0E34               	movlw	low _enumerationResults
 22893   007788  25C3               	addwf	processEnumeration@i& (0+255),w,b
 22894   00778A  6ED9               	movwf	fsr2l,c
 22895   00778C  6ADA               	clrf	fsr2h,c
 22896   00778E  0E02               	movlw	high _enumerationResults
 22897   007790  22DA               	addwfc	fsr2h,f,c
 22898   007792  28DE               	incf	postinc2,w,c
 22899   007794  A4D8               	btfss	status,2,c
 22900   007796  D003               	goto	u23390
 22901                           
 22902                           ; BSR set to: 1
 22903   007798  0E0F               	movlw	15
 22904   00779A  65C3               	cpfsgt	processEnumeration@i& (0+255),b
 22905   00779C  D7F3               	goto	l22371
 22906   00779E                     u23390:
 22907                           
 22908                           ; BSR set to: 1
 22909                           ;../../VLCBlib_PIC/can18_ecan.c: 931:                 if ((enumResult = enumerationResul
      +                          ts[i]) != 0xFF) {
 22910   00779E  0E34               	movlw	low _enumerationResults
 22911   0077A0  25C3               	addwf	processEnumeration@i& (0+255),w,b
 22912   0077A2  6ED9               	movwf	fsr2l,c
 22913   0077A4  6ADA               	clrf	fsr2h,c
 22914   0077A6  0E02               	movlw	high _enumerationResults
 22915   0077A8  22DA               	addwfc	fsr2h,f,c
 22916   0077AA  50DF               	movf	indf2,w,c
 22917   0077AC  6FC1               	movwf	processEnumeration@enumResult& (0+255),b
 22918   0077AE  29C1               	incf	processEnumeration@enumResult& (0+255),w,b
 22919   0077B0  B4D8               	btfsc	status,2,c
 22920   0077B2  D017               	goto	l22395
 22921                           
 22922                           ; BSR set to: 1
 22923                           ;../../VLCBlib_PIC/can18_ecan.c: 932:                     for (newCanId = i*8; (enumResu
      +                          lt & 0x01); newCanId++) {
 22924   0077B4  51C3               	movf	processEnumeration@i& (0+255),w,b
 22925   0077B6  0D08               	mullw	8
 22926   0077B8  CFF3 F1C2          	movff	prodl,processEnumeration@newCanId
 22927   0077BC  D003               	goto	l22385
 22928   0077BE                     l22381:
 22929                           
 22930                           ; BSR set to: 1
 22931                           ;../../VLCBlib_PIC/can18_ecan.c: 933:                         enumResult >>= 1;
 22932   0077BE  90D8               	bcf	status,0,c
 22933   0077C0  33C1               	rrcf	processEnumeration@enumResult& (0+255),f,b
 22934                           
 22935                           ; BSR set to: 1
 22936                           ;../../VLCBlib_PIC/can18_ecan.c: 934:                     }
 22937   0077C2  2BC2               	incf	processEnumeration@newCanId& (0+255),f,b
 22938   0077C4                     l22385:
 22939                           
 22940                           ; BSR set to: 1
 22941   0077C4  B1C1               	btfsc	processEnumeration@enumResult& (0+255),0,b
 22942   0077C6  D7FB               	goto	l22381
 22943                           
 22944                           ; BSR set to: 1
 22945                           ;../../VLCBlib_PIC/can18_ecan.c: 935:                     if ((newCanId >= 1) && (newCan
      +                          Id <= 99)) {
 22946   0077C8  51C2               	movf	processEnumeration@newCanId& (0+255),w,b
 22947   0077CA  B4D8               	btfsc	status,2,c
 22948   0077CC  D00A               	goto	l22395
 22949                           
 22950                           ; BSR set to: 1
 22951   0077CE  0E64               	movlw	100
 22952   0077D0  61C2               	cpfslt	processEnumeration@newCanId& (0+255),b
 22953   0077D2  D007               	goto	l22395
 22954                           
 22955                           ; BSR set to: 1
 22956                           ;../../VLCBlib_PIC/can18_ecan.c: 936:                         canId = newCanId;
 22957   0077D4  C1C2  F0C1         	movff	processEnumeration@newCanId,_canId
 22958                           
 22959                           ; BSR set to: 1
 22960                           ;../../VLCBlib_PIC/can18_ecan.c: 937:                         setNewCanId(canId);
 22961   0077D8  0100               	movlb	0	; () banked
 22962   0077DA  51C1               	movf	_canId& (0+255),w,b
 22963   0077DC  ECDC  F058         	call	_setNewCanId
 22964                           
 22965                           ;../../VLCBlib_PIC/can18_ecan.c: 938:                     } else {
 22966   0077E0  D004               	goto	l22403
 22967   0077E2                     l22395:
 22968                           
 22969                           ; BSR set to: 1
 22970                           ;../../VLCBlib_PIC/can18_ecan.c: 940:                         canDiagnostics[0x10].asUin
      +                          t++;
 22971   0077E2  4B87               	infsnz	(_canDiagnostics+32)& (0+255),f,b
 22972   0077E4  2B88               	incf	(_canDiagnostics+33)& (0+255),f,b
 22973                           
 22974                           ; BSR set to: 1
 22975                           ;../../VLCBlib_PIC/can18_ecan.c: 941:                         updateModuleErrorStatus();
 22976   0077E6  ECED  F062         	call	_updateModuleErrorStatus	;wreg free
 22977   0077EA                     l22403:
 22978                           
 22979                           ;../../VLCBlib_PIC/can18_ecan.c: 953:                 enumerationState = NO_ENUMERATION;
 22980   0077EA  0E00               	movlw	0
 22981   0077EC  0100               	movlb	0	; () banked
 22982   0077EE  6FBF               	movwf	_enumerationState& (0+255),b
 22983   0077F0  0012               	return	
 22984   0077F2                     l22407:
 22985   0077F2  0100               	movlb	0	; () banked
 22986   0077F4  51BF               	movf	_enumerationState& (0+255),w,b
 22987   0077F6  0101               	movlb	1	; () banked
 22988   0077F8  6FBD               	movwf	??_processEnumeration& (0+255),b
 22989   0077FA  6BBE               	clrf	(??_processEnumeration+1)& (0+255),b
 22990                           
 22991                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22992                           ; Switch size 1, requested type "simple"
 22993                           ; Number of cases is 1, Range of values is 0 to 0
 22994                           ; switch strategies available:
 22995                           ; Name         Instructions Cycles
 22996                           ; simple_byte            4     3 (average)
 22997                           ;	Chosen strategy is simple_byte
 22998   0077FC  51BE               	movf	(??_processEnumeration+1)& (0+255),w,b
 22999   0077FE  0A00               	xorlw	0	; case 0
 23000   007800  A4D8               	btfss	status,2,c
 23001   007802  0012               	return	
 23002                           
 23003                           ; BSR set to: 1
 23004                           ; Switch size 1, requested type "simple"
 23005                           ; Number of cases is 2, Range of values is 1 to 2
 23006                           ; switch strategies available:
 23007                           ; Name         Instructions Cycles
 23008                           ; simple_byte            7     4 (average)
 23009                           ;	Chosen strategy is simple_byte
 23010   007804  51BD               	movf	??_processEnumeration& (0+255),w,b
 23011   007806  0A01               	xorlw	1	; case 1
 23012   007808  B4D8               	btfsc	status,2,c
 23013   00780A  D758               	goto	l22345
 23014   00780C  0A03               	xorlw	3	; case 2
 23015   00780E  A4D8               	btfss	status,2,c
 23016   007810  0012               	return	
 23017   007812  D796               	goto	l22367
 23018   007814                     __end_of_processEnumeration:
 23019                           	callstack 0
 23020                           
 23021 ;; *************** function _setNewCanId *****************
 23022 ;; Defined at:
 23023 ;;		line 966 in file "../../VLCBlib_PIC/can18_ecan.c"
 23024 ;; Parameters:    Size  Location     Type
 23025 ;;  newCanId        1    wreg     unsigned char 
 23026 ;; Auto vars:     Size  Location     Type
 23027 ;;  newCanId        1    2[BANK1 ] unsigned char 
 23028 ;; Return value:  Size  Location     Type
 23029 ;;                  1    wreg      enum E13091
 23030 ;; Registers used:
 23031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23032 ;; Tracked objects:
 23033 ;;		On entry : 0/0
 23034 ;;		On exit  : 0/0
 23035 ;;		Unchanged: 0/0
 23036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23038 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23040 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23041 ;;Total ram usage:        1 bytes
 23042 ;; Hardware stack levels used: 1
 23043 ;; Hardware stack levels required when called: 18
 23044 ;; This function calls:
 23045 ;;		_writeNVM
 23046 ;; This function is called by:
 23047 ;;		_processEnumeration
 23048 ;; This function uses a non-reentrant model
 23049 ;;
 23050                           
 23051                           	psect	text82
 23052   00B1B8                     __ptext82:
 23053                           	callstack 0
 23054   00B1B8                     _setNewCanId:
 23055                           	callstack 9
 23056                           
 23057                           ;incstack = 0
 23058                           ;setNewCanId@newCanId stored from wreg
 23059   00B1B8  0101               	movlb	1	; () banked
 23060   00B1BA  6FBC               	movwf	setNewCanId@newCanId& (0+255),b
 23061                           
 23062                           ;../../VLCBlib_PIC/can18_ecan.c: 967:     if ((newCanId >= 1) && (newCanId <= 99)) {
 23063   00B1BC  0101               	movlb	1	; () banked
 23064   00B1BE  51BC               	movf	setNewCanId@newCanId& (0+255),w,b
 23065   00B1C0  B4D8               	btfsc	status,2,c
 23066   00B1C2  0012               	return	
 23067                           
 23068                           ; BSR set to: 1
 23069   00B1C4  0E64               	movlw	100
 23070   00B1C6  61BC               	cpfslt	setNewCanId@newCanId& (0+255),b
 23071   00B1C8  0012               	return	
 23072                           
 23073                           ; BSR set to: 1
 23074                           ;../../VLCBlib_PIC/can18_ecan.c: 968:         canId = newCanId;
 23075   00B1CA  C1BC  F0C1         	movff	setNewCanId@newCanId,_canId
 23076                           
 23077                           ; BSR set to: 1
 23078                           ;../../VLCBlib_PIC/can18_ecan.c: 971:         TXB1SIDH &= 0b11110000;
 23079   00B1CE  0EF0               	movlw	240
 23080   00B1D0  010F               	movlb	15	; () banked
 23081   00B1D2  1711               	andwf	17,f,b	;volatile
 23082                           
 23083                           ;../../VLCBlib_PIC/can18_ecan.c: 972:         TXB1SIDH |= ((newCanId & 0x78) >>3);
 23084   00B1D4  0101               	movlb	1	; () banked
 23085   00B1D6  39BC               	swapf	setNewCanId@newCanId& (0+255),w,b
 23086   00B1D8  46E8               	rlncf	wreg,f,c
 23087   00B1DA  0B1F               	andlw	31
 23088   00B1DC  0B0F               	andlw	15
 23089   00B1DE  010F               	movlb	15	; () banked
 23090   00B1E0  1311               	iorwf	17,f,b	;volatile
 23091                           
 23092                           ; BSR set to: 15
 23093                           ;../../VLCBlib_PIC/can18_ecan.c: 973:         TXB1SIDL = TXB0SIDL;
 23094   00B1E2  CF22 FF12          	movff	3874,3858	;volatile
 23095                           
 23096                           ;../../VLCBlib_PIC/can18_ecan.c: 975:         TXB2SIDH &= 0b11110000;
 23097   00B1E6  0EF0               	movlw	240
 23098   00B1E8  1701               	andwf	1,f,b	;volatile
 23099                           
 23100                           ;../../VLCBlib_PIC/can18_ecan.c: 976:         TXB2SIDH |= ((newCanId & 0x78) >>3);
 23101   00B1EA  0101               	movlb	1	; () banked
 23102   00B1EC  39BC               	swapf	setNewCanId@newCanId& (0+255),w,b
 23103   00B1EE  46E8               	rlncf	wreg,f,c
 23104   00B1F0  0B1F               	andlw	31
 23105   00B1F2  0B0F               	andlw	15
 23106   00B1F4  010F               	movlb	15	; () banked
 23107   00B1F6  1301               	iorwf	1,f,b	;volatile
 23108                           
 23109                           ; BSR set to: 15
 23110                           ;../../VLCBlib_PIC/can18_ecan.c: 977:         TXB2SIDL = TXB0SIDL;
 23111   00B1F8  CF22 FF02          	movff	3874,3842	;volatile
 23112                           
 23113                           ; BSR set to: 15
 23114                           ;../../VLCBlib_PIC/can18_ecan.c: 979:         writeNVM(EEPROM_NVM_TYPE, 0x3FE, newCanId 
      +                          );
 23115   00B1FC  0EFE               	movlw	254
 23116   00B1FE  0100               	movlb	0	; () banked
 23117   00B200  6FA4               	movwf	writeNVM@index& (0+255),b
 23118   00B202  0E03               	movlw	3
 23119   00B204  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 23120   00B206  0E00               	movlw	0
 23121   00B208  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 23122   00B20A  C1BC  F0A7         	movff	setNewCanId@newCanId,writeNVM@value
 23123   00B20E  0E00               	movlw	0
 23124   00B210  EC60  F05C         	call	_writeNVM
 23125                           
 23126                           ;../../VLCBlib_PIC/can18_ecan.c: 981:         canDiagnostics[0x0F].asUint++;
 23127   00B214  0101               	movlb	1	; () banked
 23128   00B216  4B85               	infsnz	(_canDiagnostics+30)& (0+255),f,b
 23129   00B218  2B86               	incf	(_canDiagnostics+31)& (0+255),f,b
 23130                           
 23131                           ; BSR set to: 1
 23132   00B21A  0012               	return		;funcret
 23133   00B21C                     __end_of_setNewCanId:
 23134                           	callstack 0
 23135                           
 23136 ;; *************** function _pop *****************
 23137 ;; Defined at:
 23138 ;;		line 96 in file "../../VLCBlib_PIC/messageQueue.c"
 23139 ;; Parameters:    Size  Location     Type
 23140 ;;  q               1   45[BANK0 ] PTR struct MessageQueue
 23141 ;;		 -> txQueue(5), rxQueue(5), 
 23142 ;; Auto vars:     Size  Location     Type
 23143 ;;  ret             2   52[BANK0 ] PTR struct Message
 23144 ;;		 -> txBuffers(72), rxBuffers(288), 
 23145 ;; Return value:  Size  Location     Type
 23146 ;;                  2   45[BANK0 ] PTR struct Message
 23147 ;; Registers used:
 23148 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23149 ;; Tracked objects:
 23150 ;;		On entry : 0/0
 23151 ;;		On exit  : 0/0
 23152 ;;		Unchanged: 0/0
 23153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23154 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23155 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23156 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23157 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23158 ;;Total ram usage:        9 bytes
 23159 ;; Hardware stack levels used: 1
 23160 ;; Hardware stack levels required when called: 12
 23161 ;; This function calls:
 23162 ;;		Nothing
 23163 ;; This function is called by:
 23164 ;;		_canReceiveMessage
 23165 ;; This function uses a non-reentrant model
 23166 ;;
 23167                           
 23168                           	psect	text83
 23169   009C72                     __ptext83:
 23170                           	callstack 0
 23171   009C72                     _pop:
 23172                           	callstack 16
 23173                           
 23174                           ;../../VLCBlib_PIC/messageQueue.c: 97:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 98:  if (q->writeIndex == q->readIndex) {
 23175                           
 23176                           ; BSR set to: 1
 23177                           ;incstack = 0
 23178   009C72  0100               	movlb	0	; () banked
 23179   009C74  518D               	movf	pop@q& (0+255),w,b
 23180   009C76  6ED9               	movwf	fsr2l,c
 23181   009C78  6ADA               	clrf	fsr2h,c
 23182   009C7A  0E02               	movlw	2
 23183   009C7C  26D9               	addwf	fsr2l,f,c
 23184   009C7E  518D               	movf	pop@q& (0+255),w,b
 23185   009C80  6EE1               	movwf	fsr1l,c
 23186   009C82  6AE2               	clrf	fsr1h,c
 23187   009C84  0E03               	movlw	3
 23188   009C86  26E1               	addwf	fsr1l,f,c
 23189   009C88  50DE               	movf	postinc2,w,c
 23190   009C8A  18E6               	xorwf	postinc1,w,c
 23191   009C8C  A4D8               	btfss	status,2,c
 23192   009C8E  D005               	goto	l22235
 23193                           
 23194                           ; BSR set to: 0
 23195                           ;../../VLCBlib_PIC/messageQueue.c: 99:         return ((void*)0);
 23196   009C90  0E00               	movlw	0
 23197   009C92  6F8D               	movwf	?_pop& (0+255),b
 23198   009C94  0E00               	movlw	0
 23199   009C96  6F8E               	movwf	(?_pop+1)& (0+255),b
 23200   009C98  0012               	return	
 23201   009C9A                     l22235:
 23202                           
 23203                           ; BSR set to: 0
 23204                           ;../../VLCBlib_PIC/messageQueue.c: 101:  ret = &(q->messages[q->readIndex++]);
 23205   009C9A  518D               	movf	pop@q& (0+255),w,b
 23206   009C9C  6ED9               	movwf	fsr2l,c
 23207   009C9E  6ADA               	clrf	fsr2h,c
 23208   009CA0  0E02               	movlw	2
 23209   009CA2  26D9               	addwf	fsr2l,f,c
 23210   009CA4  50DF               	movf	indf2,w,c
 23211   009CA6  6F8F               	movwf	??_pop& (0+255),b
 23212   009CA8  518F               	movf	??_pop& (0+255),w,b
 23213   009CAA  0D09               	mullw	9
 23214   009CAC  CFF3 F090          	movff	prodl,??_pop+1
 23215   009CB0  CFF4 F091          	movff	prodh,??_pop+2
 23216   009CB4  518D               	movf	pop@q& (0+255),w,b
 23217   009CB6  6ED9               	movwf	fsr2l,c
 23218   009CB8  6ADA               	clrf	fsr2h,c
 23219   009CBA  CFDE F092          	movff	postinc2,??_pop+3
 23220   009CBE  CFDD F093          	movff	postdec2,??_pop+4
 23221   009CC2  5190               	movf	(??_pop+1)& (0+255),w,b
 23222   009CC4  2592               	addwf	(??_pop+3)& (0+255),w,b
 23223   009CC6  6F94               	movwf	pop@ret& (0+255),b
 23224   009CC8  5191               	movf	(??_pop+2)& (0+255),w,b
 23225   009CCA  2193               	addwfc	(??_pop+4)& (0+255),w,b
 23226   009CCC  6F95               	movwf	(pop@ret+1)& (0+255),b
 23227                           
 23228                           ; BSR set to: 0
 23229   009CCE  518D               	movf	pop@q& (0+255),w,b
 23230   009CD0  6ED9               	movwf	fsr2l,c
 23231   009CD2  6ADA               	clrf	fsr2h,c
 23232   009CD4  0E02               	movlw	2
 23233   009CD6  26D9               	addwf	fsr2l,f,c
 23234   009CD8  2ADF               	incf	indf2,f,c
 23235                           
 23236                           ; BSR set to: 0
 23237                           ;../../VLCBlib_PIC/messageQueue.c: 102:  if (q->readIndex >= q->size) q->readIndex = 0;
 23238   009CDA  518D               	movf	pop@q& (0+255),w,b
 23239   009CDC  6ED9               	movwf	fsr2l,c
 23240   009CDE  6ADA               	clrf	fsr2h,c
 23241   009CE0  0E04               	movlw	4
 23242   009CE2  26D9               	addwf	fsr2l,f,c
 23243   009CE4  518D               	movf	pop@q& (0+255),w,b
 23244   009CE6  6EE1               	movwf	fsr1l,c
 23245   009CE8  6AE2               	clrf	fsr1h,c
 23246   009CEA  0E02               	movlw	2
 23247   009CEC  26E1               	addwf	fsr1l,f,c
 23248   009CEE  50DE               	movf	postinc2,w,c
 23249   009CF0  5CE6               	subwf	postinc1,w,c
 23250   009CF2  A0D8               	btfss	status,0,c
 23251   009CF4  D006               	goto	l22243
 23252                           
 23253                           ; BSR set to: 0
 23254   009CF6  518D               	movf	pop@q& (0+255),w,b
 23255   009CF8  6ED9               	movwf	fsr2l,c
 23256   009CFA  6ADA               	clrf	fsr2h,c
 23257   009CFC  0E02               	movlw	2
 23258   009CFE  26D9               	addwf	fsr2l,f,c
 23259   009D00  6ADF               	clrf	indf2,c
 23260   009D02                     l22243:
 23261                           
 23262                           ; BSR set to: 0
 23263                           ;../../VLCBlib_PIC/messageQueue.c: 103:  return ret;
 23264   009D02  C094  F08D         	movff	pop@ret,?_pop
 23265   009D06  C095  F08E         	movff	pop@ret+1,?_pop+1
 23266                           
 23267                           ; BSR set to: 0
 23268   009D0A  0012               	return		;funcret
 23269   009D0C                     __end_of_pop:
 23270                           	callstack 0
 23271                           
 23272 ;; *************** function _memcpy *****************
 23273 ;; Defined at:
 23274 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
 23275 ;; Parameters:    Size  Location     Type
 23276 ;;  d1              2   45[BANK0 ] PTR void 
 23277 ;;		 -> poll@m(9), 
 23278 ;;  s1              2   47[BANK0 ] PTR const void 
 23279 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 23280 ;;  n               2   49[BANK0 ] unsigned int 
 23281 ;; Auto vars:     Size  Location     Type
 23282 ;;  s               2   54[BANK0 ] PTR const unsigned char 
 23283 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 23284 ;;  d               2   52[BANK0 ] PTR unsigned char 
 23285 ;;		 -> poll@m(9), 
 23286 ;;  tmp             1   51[BANK0 ] unsigned char 
 23287 ;; Return value:  Size  Location     Type
 23288 ;;                  2   45[BANK0 ] PTR void 
 23289 ;; Registers used:
 23290 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23291 ;; Tracked objects:
 23292 ;;		On entry : 0/0
 23293 ;;		On exit  : 0/0
 23294 ;;		Unchanged: 0/0
 23295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23296 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23297 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23299 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23300 ;;Total ram usage:       11 bytes
 23301 ;; Hardware stack levels used: 1
 23302 ;; Hardware stack levels required when called: 12
 23303 ;; This function calls:
 23304 ;;		Nothing
 23305 ;; This function is called by:
 23306 ;;		_canReceiveMessage
 23307 ;; This function uses a non-reentrant model
 23308 ;;
 23309                           
 23310                           	psect	text84
 23311   00BBA2                     __ptext84:
 23312                           	callstack 0
 23313   00BBA2                     _memcpy:
 23314                           	callstack 16
 23315                           
 23316                           ; BSR set to: 0
 23317                           ;incstack = 0
 23318   00BBA2  C08F  F096         	movff	memcpy@s1,memcpy@s
 23319   00BBA6  C090  F097         	movff	memcpy@s1+1,memcpy@s+1
 23320   00BBAA  C08D  F094         	movff	memcpy@d1,memcpy@d
 23321   00BBAE  C08E  F095         	movff	memcpy@d1+1,memcpy@d+1
 23322   00BBB2  D010               	goto	l22423
 23323   00BBB4                     l22415:
 23324                           
 23325                           ; BSR set to: 0
 23326   00BBB4  C096  FFD9         	movff	memcpy@s,fsr2l
 23327   00BBB8  C097  FFDA         	movff	memcpy@s+1,fsr2h
 23328   00BBBC  50DF               	movf	indf2,w,c
 23329   00BBBE  6F93               	movwf	memcpy@tmp& (0+255),b
 23330                           
 23331                           ; BSR set to: 0
 23332   00BBC0  4B96               	infsnz	memcpy@s& (0+255),f,b
 23333   00BBC2  2B97               	incf	(memcpy@s+1)& (0+255),f,b
 23334                           
 23335                           ; BSR set to: 0
 23336   00BBC4  C094  FFD9         	movff	memcpy@d,fsr2l
 23337   00BBC8  C095  FFDA         	movff	memcpy@d+1,fsr2h
 23338   00BBCC  C093  FFDF         	movff	memcpy@tmp,indf2
 23339                           
 23340                           ; BSR set to: 0
 23341   00BBD0  4B94               	infsnz	memcpy@d& (0+255),f,b
 23342   00BBD2  2B95               	incf	(memcpy@d+1)& (0+255),f,b
 23343   00BBD4                     l22423:
 23344   00BBD4  0100               	movlb	0	; () banked
 23345   00BBD6  0791               	decf	memcpy@n& (0+255),f,b
 23346   00BBD8  A0D8               	btfss	status,0,c
 23347   00BBDA  0792               	decf	(memcpy@n+1)& (0+255),f,b
 23348   00BBDC  2991               	incf	memcpy@n& (0+255),w,b
 23349   00BBDE  E1EA               	bnz	l22415
 23350   00BBE0  2992               	incf	(memcpy@n+1)& (0+255),w,b
 23351   00BBE2  B4D8               	btfsc	status,2,c
 23352   00BBE4  0012               	return	
 23353   00BBE6  D7E6               	goto	l22415
 23354   00BBE8                     __end_of_memcpy:
 23355                           	callstack 0
 23356                           
 23357 ;; *************** function _handleSelfEnumeration *****************
 23358 ;; Defined at:
 23359 ;;		line 816 in file "../../VLCBlib_PIC/can18_ecan.c"
 23360 ;; Parameters:    Size  Location     Type
 23361 ;;  p               2   55[BANK0 ] PTR unsigned char 
 23362 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 23363 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 23364 ;;		 -> NULL(0), 
 23365 ;; Auto vars:     Size  Location     Type
 23366 ;;  incomingCanI    1   61[BANK0 ] unsigned char 
 23367 ;; Return value:  Size  Location     Type
 23368 ;;                  1    wreg      enum E13071
 23369 ;; Registers used:
 23370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23371 ;; Tracked objects:
 23372 ;;		On entry : 0/0
 23373 ;;		On exit  : 0/0
 23374 ;;		Unchanged: 0/0
 23375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23376 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23377 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23378 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23379 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23380 ;;Total ram usage:        7 bytes
 23381 ;; Hardware stack levels used: 1
 23382 ;; Hardware stack levels required when called: 13
 23383 ;; This function calls:
 23384 ;;		_tickGet
 23385 ;; This function is called by:
 23386 ;;		_canReceiveMessage
 23387 ;; This function uses a non-reentrant model
 23388 ;;
 23389                           
 23390                           	psect	text85
 23391   00806A                     __ptext85:
 23392                           	callstack 0
 23393   00806A                     _handleSelfEnumeration:
 23394                           	callstack 15
 23395                           
 23396                           ;../../VLCBlib_PIC/can18_ecan.c: 817:     uint8_t incomingCanId;;../../VLCBlib_PIC/can18
      +                          _ecan.c: 821:     if (p[5] & 0x40 ) {
 23397                           
 23398                           ; BSR set to: 0
 23399                           ;incstack = 0
 23400   00806A  0100               	movlb	0	; () banked
 23401   00806C  EE20 F005          	lfsr	2,5
 23402   008070  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 23403   008072  26D9               	addwf	fsr2l,f,c
 23404   008074  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 23405   008076  22DA               	addwfc	fsr2h,f,c
 23406   008078  ACDF               	btfss	indf2,6,c
 23407   00807A  D00E               	goto	l22435
 23408                           
 23409                           ; BSR set to: 0
 23410                           ;../../VLCBlib_PIC/can18_ecan.c: 823:         TXB2CONbits.TXREQ = 1;
 23411   00807C  010F               	movlb	15	; () banked
 23412   00807E  8700               	bsf	0,3,b	;volatile
 23413                           
 23414                           ; BSR set to: 15
 23415                           ;../../VLCBlib_PIC/can18_ecan.c: 824:         enumerationStartTime.val = tickGet();
 23416   008080  ECE4  F05A         	call	_tickGet	;wreg free
 23417   008084  C08D  F02B         	movff	?_tickGet,_enumerationStartTime
 23418   008088  C08E  F02C         	movff	?_tickGet+1,_enumerationStartTime+1
 23419   00808C  C08F  F02D         	movff	?_tickGet+2,_enumerationStartTime+2
 23420   008090  C090  F02E         	movff	?_tickGet+3,_enumerationStartTime+3
 23421                           
 23422                           ;../../VLCBlib_PIC/can18_ecan.c: 825:         return NOT_RECEIVED;
 23423   008094  0E00               	movlw	0
 23424   008096  0012               	return	
 23425   008098                     l22435:
 23426                           
 23427                           ; BSR set to: 0
 23428                           ;../../VLCBlib_PIC/can18_ecan.c: 827:     incomingCanId = (p[1] << 3) + (p[2] >> 5) & 0x
      +                          7f;
 23429   008098  EE20 F002          	lfsr	2,2
 23430   00809C  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 23431   00809E  26D9               	addwf	fsr2l,f,c
 23432   0080A0  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 23433   0080A2  22DA               	addwfc	fsr2h,f,c
 23434   0080A4  50DF               	movf	indf2,w,c
 23435   0080A6  6F99               	movwf	??_handleSelfEnumeration& (0+255),b
 23436   0080A8  0E05               	movlw	5
 23437   0080AA  6F9A               	movwf	(??_handleSelfEnumeration+1)& (0+255),b
 23438   0080AC                     u23465:
 23439   0080AC  90D8               	bcf	status,0,c
 23440   0080AE  3399               	rrcf	??_handleSelfEnumeration& (0+255),f,b
 23441   0080B0  2F9A               	decfsz	(??_handleSelfEnumeration+1)& (0+255),f,b
 23442   0080B2  D7FC               	goto	u23465
 23443   0080B4  EE20 F001          	lfsr	2,1
 23444   0080B8  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 23445   0080BA  26D9               	addwf	fsr2l,f,c
 23446   0080BC  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 23447   0080BE  22DA               	addwfc	fsr2h,f,c
 23448   0080C0  50DF               	movf	indf2,w,c
 23449   0080C2  0D08               	mullw	8
 23450   0080C4  50F3               	movf	243,w,c
 23451   0080C6  2599               	addwf	??_handleSelfEnumeration& (0+255),w,b
 23452   0080C8  0B7F               	andlw	127
 23453   0080CA  6F9D               	movwf	handleSelfEnumeration@incomingCanId& (0+255),b
 23454                           
 23455                           ; BSR set to: 0
 23456                           ;../../VLCBlib_PIC/can18_ecan.c: 829:     if ((enumerationState == ENUMERATION_IN_PROGRE
      +                          SS) || ((p[5]&0x0F) == 0)) {
 23457   0080CC  0E02               	movlw	2
 23458   0080CE  19BF               	xorwf	_enumerationState& (0+255),w,b
 23459   0080D0  B4D8               	btfsc	status,2,c
 23460   0080D2  D00C               	goto	u23480
 23461                           
 23462                           ; BSR set to: 0
 23463   0080D4  EE20 F005          	lfsr	2,5
 23464   0080D8  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 23465   0080DA  26D9               	addwf	fsr2l,f,c
 23466   0080DC  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 23467   0080DE  22DA               	addwfc	fsr2h,f,c
 23468   0080E0  50DF               	movf	indf2,w,c
 23469   0080E2  6F99               	movwf	??_handleSelfEnumeration& (0+255),b
 23470   0080E4  0E0F               	movlw	15
 23471   0080E6  1799               	andwf	??_handleSelfEnumeration& (0+255),f,b
 23472   0080E8  A4D8               	btfss	status,2,c
 23473   0080EA  D01B               	goto	l22443
 23474   0080EC                     u23480:
 23475                           
 23476                           ; BSR set to: 0
 23477                           ;../../VLCBlib_PIC/can18_ecan.c: 830:         ( enumerationResults[incomingCanId>>3] |= 
      +                          ( 1<<(incomingCanId & 0x07) ) );
 23478   0080EC  C09D  F099         	movff	handleSelfEnumeration@incomingCanId,??_handleSelfEnumeration
 23479   0080F0  0E07               	movlw	7
 23480   0080F2  1799               	andwf	??_handleSelfEnumeration& (0+255),f,b
 23481   0080F4  0E01               	movlw	1
 23482   0080F6  6F9A               	movwf	(??_handleSelfEnumeration+1)& (0+255),b
 23483   0080F8  2B99               	incf	??_handleSelfEnumeration& (0+255),f,b
 23484   0080FA  D002               	goto	u23494
 23485   0080FC                     u23495:
 23486   0080FC  90D8               	bcf	status,0,c
 23487   0080FE  379A               	rlcf	(??_handleSelfEnumeration+1)& (0+255),f,b
 23488   008100                     u23494:
 23489   008100  2F99               	decfsz	??_handleSelfEnumeration& (0+255),f,b
 23490   008102  D7FC               	goto	u23495
 23491   008104  0100               	movlb	0	; () banked
 23492   008106  399D               	swapf	handleSelfEnumeration@incomingCanId& (0+255),w,b
 23493   008108  46E8               	rlncf	wreg,f,c
 23494   00810A  0B1F               	andlw	31
 23495   00810C  6F9B               	movwf	(??_handleSelfEnumeration+2)& (0+255),b
 23496   00810E  6B9C               	clrf	(??_handleSelfEnumeration+3)& (0+255),b
 23497   008110  0E34               	movlw	low _enumerationResults
 23498   008112  259B               	addwf	(??_handleSelfEnumeration+2)& (0+255),w,b
 23499   008114  6ED9               	movwf	fsr2l,c
 23500   008116  0E02               	movlw	high _enumerationResults
 23501   008118  219C               	addwfc	(??_handleSelfEnumeration+3)& (0+255),w,b
 23502   00811A  6EDA               	movwf	fsr2h,c
 23503   00811C  519A               	movf	(??_handleSelfEnumeration+1)& (0+255),w,b
 23504   00811E  12DF               	iorwf	indf2,f,c
 23505                           
 23506                           ;../../VLCBlib_PIC/can18_ecan.c: 831:     } else {
 23507   008120  D016               	goto	l22453
 23508   008122                     l22443:
 23509                           
 23510                           ; BSR set to: 0
 23511                           ;../../VLCBlib_PIC/can18_ecan.c: 832:         if ((enumerationState == NO_ENUMERATION) &
      +                          & (incomingCanId == canId)) {
 23512   008122  51BF               	movf	_enumerationState& (0+255),w,b
 23513   008124  A4D8               	btfss	status,2,c
 23514   008126  D013               	goto	l22453
 23515                           
 23516                           ; BSR set to: 0
 23517   008128  51C1               	movf	_canId& (0+255),w,b
 23518   00812A  199D               	xorwf	handleSelfEnumeration@incomingCanId& (0+255),w,b
 23519   00812C  A4D8               	btfss	status,2,c
 23520   00812E  D00F               	goto	l22453
 23521                           
 23522                           ; BSR set to: 0
 23523                           ;../../VLCBlib_PIC/can18_ecan.c: 835:             enumerationState = ENUMERATION_REQUIRE
      +                          D;
 23524   008130  0E01               	movlw	1
 23525   008132  6FBF               	movwf	_enumerationState& (0+255),b
 23526                           
 23527                           ; BSR set to: 0
 23528                           ;../../VLCBlib_PIC/can18_ecan.c: 836:             canDiagnostics[0x0E].asUint++;
 23529   008134  0101               	movlb	1	; () banked
 23530   008136  4B83               	infsnz	(_canDiagnostics+28)& (0+255),f,b
 23531   008138  2B84               	incf	(_canDiagnostics+29)& (0+255),f,b
 23532                           
 23533                           ; BSR set to: 1
 23534                           ;../../VLCBlib_PIC/can18_ecan.c: 837:             enumerationStartTime.val = tickGet();
 23535   00813A  ECE4  F05A         	call	_tickGet	;wreg free
 23536   00813E  C08D  F02B         	movff	?_tickGet,_enumerationStartTime
 23537   008142  C08E  F02C         	movff	?_tickGet+1,_enumerationStartTime+1
 23538   008146  C08F  F02D         	movff	?_tickGet+2,_enumerationStartTime+2
 23539   00814A  C090  F02E         	movff	?_tickGet+3,_enumerationStartTime+3
 23540   00814E                     l22453:
 23541                           
 23542                           ;../../VLCBlib_PIC/can18_ecan.c: 841:     return (p[5] & 0x0F) ? RECEIVED:NOT_RECEIVED;
 23543   00814E  0100               	movlb	0	; () banked
 23544   008150  EE20 F005          	lfsr	2,5
 23545   008154  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 23546   008156  26D9               	addwf	fsr2l,f,c
 23547   008158  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 23548   00815A  22DA               	addwfc	fsr2h,f,c
 23549   00815C  50DF               	movf	indf2,w,c
 23550   00815E  6F99               	movwf	??_handleSelfEnumeration& (0+255),b
 23551   008160  0E0F               	movlw	15
 23552   008162  1799               	andwf	??_handleSelfEnumeration& (0+255),f,b
 23553   008164  B4D8               	btfsc	status,2,c
 23554   008166  D002               	goto	u23520
 23555   008168  0E01               	movlw	1
 23556   00816A  0012               	return	
 23557   00816C                     u23520:
 23558   00816C  0E00               	movlw	0
 23559   00816E  0012               	return		;funcret
 23560   008170                     __end_of_handleSelfEnumeration:
 23561                           	callstack 0
 23562                           
 23563 ;; *************** function _getNumRxBuffersInUse *****************
 23564 ;; Defined at:
 23565 ;;		line 470 in file "../../VLCBlib_PIC/can18_ecan.c"
 23566 ;; Parameters:    Size  Location     Type
 23567 ;;		None
 23568 ;; Auto vars:     Size  Location     Type
 23569 ;;  ptr             2   50[BANK0 ] PTR unsigned char 
 23570 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 23571 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 23572 ;;		 -> NULL(0), 
 23573 ;;  i               1   53[BANK0 ] unsigned char 
 23574 ;;  no              1   52[BANK0 ] unsigned char 
 23575 ;; Return value:  Size  Location     Type
 23576 ;;                  1    wreg      unsigned char 
 23577 ;; Registers used:
 23578 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23579 ;; Tracked objects:
 23580 ;;		On entry : 0/0
 23581 ;;		On exit  : 0/0
 23582 ;;		Unchanged: 0/0
 23583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23585 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23587 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23588 ;;Total ram usage:        4 bytes
 23589 ;; Hardware stack levels used: 1
 23590 ;; Hardware stack levels required when called: 13
 23591 ;; This function calls:
 23592 ;;		_getBufferPointer
 23593 ;;		_quantity
 23594 ;; This function is called by:
 23595 ;;		_canGetDiagnostic
 23596 ;;		_canReceiveMessage
 23597 ;; This function uses a non-reentrant model
 23598 ;;
 23599                           
 23600                           	psect	text86
 23601   00BD1E                     __ptext86:
 23602                           	callstack 0
 23603   00BD1E                     _getNumRxBuffersInUse:
 23604                           	callstack 13
 23605                           
 23606                           ;../../VLCBlib_PIC/can18_ecan.c: 471:     uint8_t no;;../../VLCBlib_PIC/can18_ecan.c: 47
      +                          2:     uint8_t i;;../../VLCBlib_PIC/can18_ecan.c: 473:     uint8_t * ptr;;../../VLCBlib_
      +                          PIC/can18_ecan.c: 475:     no = quantity(&rxQueue);
 23607                           
 23608                           ;incstack = 0
 23609   00BD1E  0E4F               	movlw	low _rxQueue
 23610   00BD20  0100               	movlb	0	; () banked
 23611   00BD22  6F8D               	movwf	quantity@q& (0+255),b
 23612   00BD24  EC02  F05F         	call	_quantity	;wreg free
 23613   00BD28  0100               	movlb	0	; () banked
 23614   00BD2A  6F94               	movwf	getNumRxBuffersInUse@no& (0+255),b
 23615                           
 23616                           ; BSR set to: 0
 23617                           ;../../VLCBlib_PIC/can18_ecan.c: 476:     for (i=0; i<8; i++) {
 23618   00BD2C  0E00               	movlw	0
 23619   00BD2E  6F95               	movwf	getNumRxBuffersInUse@i& (0+255),b
 23620   00BD30                     l20221:
 23621                           
 23622                           ; BSR set to: 0
 23623                           ;../../VLCBlib_PIC/can18_ecan.c: 477:         ptr = getBufferPointer(i);
 23624   00BD30  5195               	movf	getNumRxBuffersInUse@i& (0+255),w,b
 23625   00BD32  ECB6  F04F         	call	_getBufferPointer
 23626   00BD36  C08D  F092         	movff	?_getBufferPointer,getNumRxBuffersInUse@ptr
 23627   00BD3A  C08E  F093         	movff	?_getBufferPointer+1,getNumRxBuffersInUse@ptr+1
 23628                           
 23629                           ;../../VLCBlib_PIC/can18_ecan.c: 478:         if (ptr[0] & 0x80) {
 23630   00BD3E  C092  FFD9         	movff	getNumRxBuffersInUse@ptr,fsr2l
 23631   00BD42  C093  FFDA         	movff	getNumRxBuffersInUse@ptr+1,fsr2h
 23632   00BD46  0100               	movlb	0	; () banked
 23633   00BD48  BEDF               	btfsc	indf2,7,c
 23634                           
 23635                           ; BSR set to: 0
 23636                           ;../../VLCBlib_PIC/can18_ecan.c: 479:             no++;
 23637   00BD4A  2B94               	incf	getNumRxBuffersInUse@no& (0+255),f,b
 23638                           
 23639                           ; BSR set to: 0
 23640                           ;../../VLCBlib_PIC/can18_ecan.c: 481:     }
 23641                           
 23642                           ;../../VLCBlib_PIC/can18_ecan.c: 480:         }
 23643   00BD4C  2B95               	incf	getNumRxBuffersInUse@i& (0+255),f,b
 23644                           
 23645                           ; BSR set to: 0
 23646   00BD4E  0E07               	movlw	7
 23647   00BD50  6595               	cpfsgt	getNumRxBuffersInUse@i& (0+255),b
 23648   00BD52  D7EE               	goto	l20221
 23649                           
 23650                           ; BSR set to: 0
 23651                           ;../../VLCBlib_PIC/can18_ecan.c: 482:     return no;
 23652   00BD54  5194               	movf	getNumRxBuffersInUse@no& (0+255),w,b
 23653                           
 23654                           ; BSR set to: 0
 23655   00BD56  0012               	return		;funcret
 23656   00BD58                     __end_of_getNumRxBuffersInUse:
 23657                           	callstack 0
 23658                           
 23659 ;; *************** function _getBufferPointer *****************
 23660 ;; Defined at:
 23661 ;;		line 667 in file "../../VLCBlib_PIC/can18_ecan.c"
 23662 ;; Parameters:    Size  Location     Type
 23663 ;;  b               1    wreg     unsigned char 
 23664 ;; Auto vars:     Size  Location     Type
 23665 ;;  b               1   47[BANK0 ] unsigned char 
 23666 ;; Return value:  Size  Location     Type
 23667 ;;                  2   45[BANK0 ] PTR unsigned char 
 23668 ;; Registers used:
 23669 ;;		wreg, status,2, status,0
 23670 ;; Tracked objects:
 23671 ;;		On entry : 0/0
 23672 ;;		On exit  : 0/0
 23673 ;;		Unchanged: 0/0
 23674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23675 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23676 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23678 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23679 ;;Total ram usage:        3 bytes
 23680 ;; Hardware stack levels used: 1
 23681 ;; Hardware stack levels required when called: 12
 23682 ;; This function calls:
 23683 ;;		Nothing
 23684 ;; This function is called by:
 23685 ;;		_getNumRxBuffersInUse
 23686 ;;		_canReceiveMessage
 23687 ;; This function uses a non-reentrant model
 23688 ;;
 23689                           
 23690                           	psect	text87
 23691   009F6C                     __ptext87:
 23692                           	callstack 0
 23693   009F6C                     _getBufferPointer:
 23694                           	callstack 13
 23695                           
 23696                           ; BSR set to: 0
 23697                           ;incstack = 0
 23698                           ;getBufferPointer@b stored from wreg
 23699   009F6C  0100               	movlb	0	; () banked
 23700   009F6E  6F8F               	movwf	getBufferPointer@b& (0+255),b
 23701                           
 23702                           ;../../VLCBlib_PIC/can18_ecan.c: 668:     switch (b) {
 23703   009F70  D02D               	goto	l19873
 23704   009F72                     l19835:
 23705                           
 23706                           ; BSR set to: 0
 23707                           ;../../VLCBlib_PIC/can18_ecan.c: 670:             return (uint8_t*) & RXB0CON;
 23708   009F72  0E60               	movlw	96
 23709   009F74  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23710   009F76  0E0F               	movlw	15
 23711   009F78  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23712   009F7A  0012               	return	
 23713   009F7C                     l19839:
 23714                           
 23715                           ; BSR set to: 0
 23716                           ;../../VLCBlib_PIC/can18_ecan.c: 672:             return (uint8_t*) & RXB1CON;
 23717   009F7C  0E30               	movlw	48
 23718   009F7E  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23719   009F80  0E0F               	movlw	15
 23720   009F82  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23721   009F84  0012               	return	
 23722   009F86                     l19843:
 23723                           
 23724                           ; BSR set to: 0
 23725                           ;../../VLCBlib_PIC/can18_ecan.c: 674:             return (uint8_t*) & B0CON;
 23726   009F86  0E80               	movlw	128
 23727   009F88  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23728   009F8A  0E0E               	movlw	14
 23729   009F8C  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23730   009F8E  0012               	return	
 23731   009F90                     l19847:
 23732                           
 23733                           ; BSR set to: 0
 23734                           ;../../VLCBlib_PIC/can18_ecan.c: 676:             return (uint8_t*) & B1CON;
 23735   009F90  0E90               	movlw	144
 23736   009F92  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23737   009F94  0E0E               	movlw	14
 23738   009F96  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23739   009F98  0012               	return	
 23740   009F9A                     l19851:
 23741                           
 23742                           ; BSR set to: 0
 23743                           ;../../VLCBlib_PIC/can18_ecan.c: 678:             return (uint8_t*) & B2CON;
 23744   009F9A  0EA0               	movlw	160
 23745   009F9C  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23746   009F9E  0E0E               	movlw	14
 23747   009FA0  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23748   009FA2  0012               	return	
 23749   009FA4                     l19855:
 23750                           
 23751                           ; BSR set to: 0
 23752                           ;../../VLCBlib_PIC/can18_ecan.c: 680:             return (uint8_t*) & B3CON;
 23753   009FA4  0EB0               	movlw	176
 23754   009FA6  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23755   009FA8  0E0E               	movlw	14
 23756   009FAA  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23757   009FAC  0012               	return	
 23758   009FAE                     l19859:
 23759                           
 23760                           ; BSR set to: 0
 23761                           ;../../VLCBlib_PIC/can18_ecan.c: 682:             return (uint8_t*) & B4CON;
 23762   009FAE  0EC0               	movlw	192
 23763   009FB0  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23764   009FB2  0E0E               	movlw	14
 23765   009FB4  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23766   009FB6  0012               	return	
 23767   009FB8                     l19863:
 23768                           
 23769                           ; BSR set to: 0
 23770                           ;../../VLCBlib_PIC/can18_ecan.c: 684:             return (uint8_t*) & B5CON;
 23771   009FB8  0ED0               	movlw	208
 23772   009FBA  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23773   009FBC  0E0E               	movlw	14
 23774   009FBE  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23775   009FC0  0012               	return	
 23776   009FC2                     l19867:
 23777                           
 23778                           ; BSR set to: 0
 23779                           ;../../VLCBlib_PIC/can18_ecan.c: 686:             return ((void*)0);
 23780   009FC2  0E00               	movlw	0
 23781   009FC4  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23782   009FC6  0E00               	movlw	0
 23783   009FC8  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23784   009FCA  0012               	return	
 23785   009FCC                     l19873:
 23786   009FCC  0100               	movlb	0	; () banked
 23787   009FCE  518F               	movf	getBufferPointer@b& (0+255),w,b
 23788                           
 23789                           ; Switch size 1, requested type "simple"
 23790                           ; Number of cases is 8, Range of values is 0 to 7
 23791                           ; switch strategies available:
 23792                           ; Name         Instructions Cycles
 23793                           ; simple_byte           25    13 (average)
 23794                           ;	Chosen strategy is simple_byte
 23795   009FD0  0A00               	xorlw	0	; case 0
 23796   009FD2  B4D8               	btfsc	status,2,c
 23797   009FD4  D7CE               	goto	l19835
 23798   009FD6  0A01               	xorlw	1	; case 1
 23799   009FD8  B4D8               	btfsc	status,2,c
 23800   009FDA  D7D0               	goto	l19839
 23801   009FDC  0A03               	xorlw	3	; case 2
 23802   009FDE  B4D8               	btfsc	status,2,c
 23803   009FE0  D7D2               	goto	l19843
 23804   009FE2  0A01               	xorlw	1	; case 3
 23805   009FE4  B4D8               	btfsc	status,2,c
 23806   009FE6  D7D4               	goto	l19847
 23807   009FE8  0A07               	xorlw	7	; case 4
 23808   009FEA  B4D8               	btfsc	status,2,c
 23809   009FEC  D7D6               	goto	l19851
 23810   009FEE  0A01               	xorlw	1	; case 5
 23811   009FF0  B4D8               	btfsc	status,2,c
 23812   009FF2  D7D8               	goto	l19855
 23813   009FF4  0A03               	xorlw	3	; case 6
 23814   009FF6  B4D8               	btfsc	status,2,c
 23815   009FF8  D7DA               	goto	l19859
 23816   009FFA  0A01               	xorlw	1	; case 7
 23817   009FFC  B4D8               	btfsc	status,2,c
 23818   009FFE  D7DC               	goto	l19863
 23819   00A000  D7E0               	goto	l19867
 23820   00A002                     __end_of_getBufferPointer:
 23821                           	callstack 0
 23822                           
 23823 ;; *************** function _sendMessage7 *****************
 23824 ;; Defined at:
 23825 ;;		line 1210 in file "../../VLCBlib_PIC/vlcb.c"
 23826 ;; Parameters:    Size  Location     Type
 23827 ;;  opc             1    wreg     enum E12392
 23828 ;;  data1           1    8[BANK1 ] unsigned char 
 23829 ;;  data2           1    9[BANK1 ] unsigned char 
 23830 ;;  data3           1   10[BANK1 ] unsigned char 
 23831 ;;  data4           1   11[BANK1 ] unsigned char 
 23832 ;;  data5           1   12[BANK1 ] unsigned char 
 23833 ;;  data6           1   13[BANK1 ] unsigned char 
 23834 ;;  data7           1   14[BANK1 ] unsigned char 
 23835 ;; Auto vars:     Size  Location     Type
 23836 ;;  opc             1   70[BANK0 ] enum E12392
 23837 ;; Return value:  Size  Location     Type
 23838 ;;                  1    wreg      void 
 23839 ;; Registers used:
 23840 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23841 ;; Tracked objects:
 23842 ;;		On entry : 0/0
 23843 ;;		On exit  : 0/0
 23844 ;;		Unchanged: 0/0
 23845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23846 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23847 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23849 ;;      Totals:         0       1       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23850 ;;Total ram usage:        8 bytes
 23851 ;; Hardware stack levels used: 1
 23852 ;; Hardware stack levels required when called: 16
 23853 ;; This function calls:
 23854 ;;		_sendMessage
 23855 ;; This function is called by:
 23856 ;;		_ackEventProcessMessage
 23857 ;;		_mnsProcessMessage
 23858 ;;		_nerdCallback
 23859 ;; This function uses a non-reentrant model
 23860 ;;
 23861                           
 23862                           	psect	text88
 23863   00BF92                     __ptext88:
 23864                           	callstack 0
 23865   00BF92                     _sendMessage7:
 23866                           	callstack 11
 23867                           
 23868                           ; BSR set to: 0
 23869                           ;incstack = 0
 23870                           ;sendMessage7@opc stored from wreg
 23871   00BF92  0100               	movlb	0	; () banked
 23872   00BF94  6FA6               	movwf	sendMessage7@opc& (0+255),b
 23873                           
 23874                           ;../../VLCBlib_PIC/vlcb.c: 1211:     sendMessage(opc, 8, data1, data2, data3, data4, dat
      +                          a5, data6, data7);
 23875   00BF96  0E08               	movlw	8
 23876   00BF98  0101               	movlb	1	; () banked
 23877   00BF9A  6FBA               	movwf	sendMessage@len& (0+255),b
 23878   00BF9C  C1C2  F1BB         	movff	sendMessage7@data1,sendMessage@data1
 23879   00BFA0  C1C3  F1BC         	movff	sendMessage7@data2,sendMessage@data2
 23880   00BFA4  C1C4  F1BD         	movff	sendMessage7@data3,sendMessage@data3
 23881   00BFA8  C1C5  F1BE         	movff	sendMessage7@data4,sendMessage@data4
 23882   00BFAC  C1C6  F1BF         	movff	sendMessage7@data5,sendMessage@data5
 23883   00BFB0  C1C7  F1C0         	movff	sendMessage7@data6,sendMessage@data6
 23884   00BFB4  C1C8  F1C1         	movff	sendMessage7@data7,sendMessage@data7
 23885   00BFB8  0100               	movlb	0	; () banked
 23886   00BFBA  51A6               	movf	sendMessage7@opc& (0+255),w,b
 23887   00BFBC  ECA3  F054         	call	_sendMessage
 23888   00BFC0  0012               	return		;funcret
 23889   00BFC2                     __end_of_sendMessage7:
 23890                           	callstack 0
 23891                           
 23892 ;; *************** function _isConsumedEvent *****************
 23893 ;; Defined at:
 23894 ;;		line 382 in file "../event_consumerDualActionQueue.c"
 23895 ;; Parameters:    Size  Location     Type
 23896 ;;  eventIndex      1    wreg     unsigned char 
 23897 ;; Auto vars:     Size  Location     Type
 23898 ;;  eventIndex      1   70[BANK0 ] unsigned char 
 23899 ;;  ev              1   71[BANK0 ] unsigned char 
 23900 ;; Return value:  Size  Location     Type
 23901 ;;                  1    wreg      unsigned char 
 23902 ;; Registers used:
 23903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23904 ;; Tracked objects:
 23905 ;;		On entry : 0/0
 23906 ;;		On exit  : 0/0
 23907 ;;		Unchanged: 0/0
 23908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23910 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23912 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23913 ;;Total ram usage:        2 bytes
 23914 ;; Hardware stack levels used: 1
 23915 ;; Hardware stack levels required when called: 16
 23916 ;; This function calls:
 23917 ;;		_getEv
 23918 ;; This function is called by:
 23919 ;;		_ackEventProcessMessage
 23920 ;; This function uses a non-reentrant model
 23921 ;;
 23922                           
 23923                           	psect	text89
 23924   00C35A                     __ptext89:
 23925                           	callstack 0
 23926   00C35A                     _isConsumedEvent:
 23927                           	callstack 12
 23928                           
 23929                           ;incstack = 0
 23930                           ;isConsumedEvent@eventIndex stored from wreg
 23931   00C35A  0100               	movlb	0	; () banked
 23932   00C35C  6FA6               	movwf	isConsumedEvent@eventIndex& (0+255),b
 23933                           
 23934                           ;../event_consumerDualActionQueue.c: 383:     uint8_t ev;;../event_consumerDualActionQue
      +                          ue.c: 384:     ev = (uint8_t)getEv(eventIndex, 1);
 23935   00C35E  0E01               	movlw	1
 23936   00C360  0100               	movlb	0	; () banked
 23937   00C362  6F9D               	movwf	getEv@evNum& (0+255),b
 23938   00C364  51A6               	movf	isConsumedEvent@eventIndex& (0+255),w,b
 23939   00C366  EC0A  F03C         	call	_getEv
 23940   00C36A  0100               	movlb	0	; () banked
 23941   00C36C  519D               	movf	?_getEv& (0+255),w,b
 23942   00C36E  6FA7               	movwf	isConsumedEvent@ev& (0+255),b
 23943                           
 23944                           ; BSR set to: 0
 23945                           ;../event_consumerDualActionQueue.c: 385:     return (ev != 0);
 23946   00C370  51A7               	movf	isConsumedEvent@ev& (0+255),w,b
 23947   00C372  B4D8               	btfsc	status,2,c
 23948   00C374  D002               	goto	u21900
 23949   00C376  0E01               	movlw	1
 23950   00C378  0012               	return	
 23951   00C37A                     u21900:
 23952   00C37A  0E00               	movlw	0
 23953                           
 23954                           ; BSR set to: 0
 23955   00C37C  0012               	return		;funcret
 23956   00C37E                     __end_of_isConsumedEvent:
 23957                           	callstack 0
 23958                           
 23959 ;; *************** function _findService *****************
 23960 ;; Defined at:
 23961 ;;		line 808 in file "../../VLCBlib_PIC/vlcb.c"
 23962 ;; Parameters:    Size  Location     Type
 23963 ;;  id              1    wreg     unsigned char 
 23964 ;; Auto vars:     Size  Location     Type
 23965 ;;  id              1   49[BANK0 ] unsigned char 
 23966 ;;  i               1   50[BANK0 ] unsigned char 
 23967 ;; Return value:  Size  Location     Type
 23968 ;;                  2   45[BANK0 ] PTR const struct Service
 23969 ;; Registers used:
 23970 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 23971 ;; Tracked objects:
 23972 ;;		On entry : 0/0
 23973 ;;		On exit  : 0/0
 23974 ;;		Unchanged: 0/0
 23975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23976 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23977 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23978 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23979 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23980 ;;Total ram usage:        6 bytes
 23981 ;; Hardware stack levels used: 1
 23982 ;; Hardware stack levels required when called: 12
 23983 ;; This function calls:
 23984 ;;		Nothing
 23985 ;; This function is called by:
 23986 ;;		_ackEventProcessMessage
 23987 ;; This function uses a non-reentrant model
 23988 ;;
 23989                           
 23990                           	psect	text90
 23991   009DA6                     __ptext90:
 23992                           	callstack 0
 23993   009DA6                     _findService:
 23994                           	callstack 16
 23995                           
 23996                           ; BSR set to: 0
 23997                           ;incstack = 0
 23998                           ;findService@id stored from wreg
 23999   009DA6  0100               	movlb	0	; () banked
 24000   009DA8  6F91               	movwf	findService@id& (0+255),b
 24001                           
 24002                           ;../../VLCBlib_PIC/vlcb.c: 809:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 810:     for (i
      +                          =0; i<9; i++) {
 24003   009DAA  0E00               	movlw	0
 24004   009DAC  0100               	movlb	0	; () banked
 24005   009DAE  6F92               	movwf	findService@i& (0+255),b
 24006   009DB0                     l21967:
 24007                           
 24008                           ; BSR set to: 0
 24009                           ;../../VLCBlib_PIC/vlcb.c: 811:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == id)) {
 24010   009DB0  5192               	movf	findService@i& (0+255),w,b
 24011   009DB2  0D02               	mullw	2
 24012   009DB4  0E69               	movlw	low _services
 24013   009DB6  24F3               	addwf	243,w,c
 24014   009DB8  6EF6               	movwf	tblptrl,c
 24015   009DBA  0EEE               	movlw	high _services
 24016   009DBC  20F4               	addwfc	244,w,c
 24017   009DBE  6EF7               	movwf	tblptrh,c
 24018   009DC0                     	if	1	;There are 3 active tblptr bytes
 24019   009DC0  6AF8               	clrf	tblptru,c
 24020   009DC2  0E00               	movlw	low (__mediumconst shr (0+16))
 24021   009DC4  22F8               	addwfc	tblptru,f,c
 24022   009DC6                     	endif
 24023   009DC6  0009               	tblrd		*+
 24024   009DC8  50F5               	movf	tablat,w,c
 24025   009DCA  0009               	tblrd		*+
 24026   009DCC  10F5               	iorwf	tablat,w,c
 24027   009DCE  B4D8               	btfsc	status,2,c
 24028   009DD0  D02D               	goto	l21975
 24029                           
 24030                           ; BSR set to: 0
 24031   009DD2  5192               	movf	findService@i& (0+255),w,b
 24032   009DD4  0D02               	mullw	2
 24033   009DD6  0E69               	movlw	low _services
 24034   009DD8  24F3               	addwf	243,w,c
 24035   009DDA  6EF6               	movwf	tblptrl,c
 24036   009DDC  0EEE               	movlw	high _services
 24037   009DDE  20F4               	addwfc	244,w,c
 24038   009DE0  6EF7               	movwf	tblptrh,c
 24039   009DE2                     	if	1	;There are 3 active tblptr bytes
 24040   009DE2  6AF8               	clrf	tblptru,c
 24041   009DE4  0E00               	movlw	low (__mediumconst shr (0+16))
 24042   009DE6  22F8               	addwfc	tblptru,f,c
 24043   009DE8                     	endif
 24044   009DE8  0009               	tblrd		*+
 24045   009DEA  CFF5 F08F          	movff	tablat,??_findService
 24046   009DEE  0009               	tblrd		*+
 24047   009DF0  CFF5 F090          	movff	tablat,??_findService+1
 24048   009DF4  C08F  FFF6         	movff	??_findService,tblptrl
 24049   009DF8  C090  FFF7         	movff	??_findService+1,tblptrh
 24050   009DFC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24051   009DFC  6AF8               	clrf	tblptru,c
 24052   009DFE                     	endif
 24053   009DFE                     	if	0	;tblptru may be non-zero
 24054   009DFE                     	endif
 24055   009DFE  0008               	tblrd		*
 24056   009E00  50F5               	movf	tablat,w,c
 24057   009E02  1991               	xorwf	findService@id& (0+255),w,b
 24058   009E04  A4D8               	btfss	status,2,c
 24059   009E06  D012               	goto	l21975
 24060                           
 24061                           ; BSR set to: 0
 24062                           ;../../VLCBlib_PIC/vlcb.c: 812:             return services[i];
 24063   009E08  5192               	movf	findService@i& (0+255),w,b
 24064   009E0A  0D02               	mullw	2
 24065   009E0C  0E69               	movlw	low _services
 24066   009E0E  24F3               	addwf	243,w,c
 24067   009E10  6EF6               	movwf	tblptrl,c
 24068   009E12  0EEE               	movlw	high _services
 24069   009E14  20F4               	addwfc	244,w,c
 24070   009E16  6EF7               	movwf	tblptrh,c
 24071   009E18                     	if	1	;There are 3 active tblptr bytes
 24072   009E18  6AF8               	clrf	tblptru,c
 24073   009E1A  0E00               	movlw	low (__mediumconst shr (0+16))
 24074   009E1C  22F8               	addwfc	tblptru,f,c
 24075   009E1E                     	endif
 24076   009E1E  0009               	tblrd		*+
 24077   009E20  CFF5 F08D          	movff	tablat,?_findService
 24078   009E24  000A               	tblrd		*-
 24079   009E26  CFF5 F08E          	movff	tablat,?_findService+1
 24080   009E2A  0012               	return	
 24081   009E2C                     l21975:
 24082                           
 24083                           ; BSR set to: 0
 24084                           ;../../VLCBlib_PIC/vlcb.c: 814:     }
 24085   009E2C  2B92               	incf	findService@i& (0+255),f,b
 24086                           
 24087                           ; BSR set to: 0
 24088   009E2E  0E08               	movlw	8
 24089   009E30  6592               	cpfsgt	findService@i& (0+255),b
 24090   009E32  D7BE               	goto	l21967
 24091                           
 24092                           ; BSR set to: 0
 24093                           ;../../VLCBlib_PIC/vlcb.c: 815:     return ((void*)0);
 24094   009E34  0E00               	movlw	0
 24095   009E36  6F8D               	movwf	?_findService& (0+255),b
 24096   009E38  0E00               	movlw	0
 24097   009E3A  6F8E               	movwf	(?_findService+1)& (0+255),b
 24098                           
 24099                           ; BSR set to: 0
 24100   009E3C  0012               	return		;funcret
 24101   009E3E                     __end_of_findService:
 24102                           	callstack 0
 24103                           
 24104 ;; *************** function _ackEventCheckLen *****************
 24105 ;; Defined at:
 24106 ;;		line 184 in file "../../VLCBlib_PIC/event_acknowledge.c"
 24107 ;; Parameters:    Size  Location     Type
 24108 ;;  m               2   17[BANK1 ] PTR struct Message
 24109 ;;		 -> poll@m(9), 
 24110 ;;  needed          1   19[BANK1 ] unsigned char 
 24111 ;; Auto vars:     Size  Location     Type
 24112 ;;		None
 24113 ;; Return value:  Size  Location     Type
 24114 ;;                  1    wreg      enum E12793
 24115 ;; Registers used:
 24116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24117 ;; Tracked objects:
 24118 ;;		On entry : 0/0
 24119 ;;		On exit  : 0/0
 24120 ;;		Unchanged: 0/0
 24121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24122 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24125 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24126 ;;Total ram usage:        3 bytes
 24127 ;; Hardware stack levels used: 1
 24128 ;; Hardware stack levels required when called: 18
 24129 ;; This function calls:
 24130 ;;		_checkLen
 24131 ;; This function is called by:
 24132 ;;		_ackEventProcessMessage
 24133 ;; This function uses a non-reentrant model
 24134 ;;
 24135                           
 24136                           	psect	text91
 24137   00C52C                     __ptext91:
 24138                           	callstack 0
 24139   00C52C                     _ackEventCheckLen:
 24140                           	callstack 10
 24141                           
 24142                           ;../../VLCBlib_PIC/event_acknowledge.c: 185:     return checkLen(m, needed, SERVICE_ID_E
      +                          VENTACK);
 24143                           
 24144                           ; BSR set to: 0
 24145                           ;incstack = 0
 24146   00C52C  C1CB  F1C7         	movff	ackEventCheckLen@m,checkLen@m
 24147   00C530  C1CC  F1C8         	movff	ackEventCheckLen@m+1,checkLen@m+1
 24148   00C534  C1CD  F1C9         	movff	ackEventCheckLen@needed,checkLen@needed
 24149   00C538  0E09               	movlw	9
 24150   00C53A  0101               	movlb	1	; () banked
 24151   00C53C  6FCA               	movwf	checkLen@service& (0+255),b
 24152   00C53E  EC25  F054         	call	_checkLen	;wreg free
 24153   00C542  0012               	return		;funcret
 24154   00C544                     __end_of_ackEventCheckLen:
 24155                           	callstack 0
 24156                           
 24157 ;; *************** function _checkLen *****************
 24158 ;; Defined at:
 24159 ;;		line 1096 in file "../../VLCBlib_PIC/vlcb.c"
 24160 ;; Parameters:    Size  Location     Type
 24161 ;;  m               2   13[BANK1 ] PTR struct Message
 24162 ;;		 -> poll@m(9), 
 24163 ;;  needed          1   15[BANK1 ] unsigned char 
 24164 ;;  service         1   16[BANK1 ] unsigned char 
 24165 ;; Auto vars:     Size  Location     Type
 24166 ;;		None
 24167 ;; Return value:  Size  Location     Type
 24168 ;;                  1    wreg      enum E12793
 24169 ;; Registers used:
 24170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24171 ;; Tracked objects:
 24172 ;;		On entry : 0/0
 24173 ;;		On exit  : 0/0
 24174 ;;		Unchanged: 0/0
 24175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24176 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24178 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24179 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24180 ;;Total ram usage:        5 bytes
 24181 ;; Hardware stack levels used: 1
 24182 ;; Hardware stack levels required when called: 17
 24183 ;; This function calls:
 24184 ;;		_sendMessage5
 24185 ;; This function is called by:
 24186 ;;		_ackEventCheckLen
 24187 ;;		_teachCheckLen
 24188 ;; This function uses a non-reentrant model
 24189 ;;
 24190                           
 24191                           	psect	text92
 24192   00A84A                     __ptext92:
 24193                           	callstack 0
 24194   00A84A                     _checkLen:
 24195                           	callstack 10
 24196                           
 24197                           ;../../VLCBlib_PIC/vlcb.c: 1097:     if (m->len < needed) {
 24198                           
 24199                           ;incstack = 0
 24200   00A84A  C1C7  FFD9         	movff	checkLen@m,fsr2l
 24201   00A84E  C1C8  FFDA         	movff	checkLen@m+1,fsr2h
 24202   00A852  0101               	movlb	1	; () banked
 24203   00A854  51C9               	movf	checkLen@needed& (0+255),w,b
 24204   00A856  5CDE               	subwf	postinc2,w,c
 24205   00A858  B0D8               	btfsc	status,0,c
 24206   00A85A  D034               	goto	l20893
 24207                           
 24208                           ; BSR set to: 1
 24209                           ;../../VLCBlib_PIC/vlcb.c: 1099:         if (m->len > 2) {
 24210   00A85C  C1C7  FFD9         	movff	checkLen@m,fsr2l
 24211   00A860  C1C8  FFDA         	movff	checkLen@m+1,fsr2h
 24212   00A864  0E02               	movlw	2
 24213   00A866  64DF               	cpfsgt	indf2,c
 24214   00A868  D02B               	goto	l20889
 24215                           
 24216                           ; BSR set to: 1
 24217                           ;../../VLCBlib_PIC/vlcb.c: 1100:             if ((m->bytes[0] == nn.bytes.hi) && (m->byt
      +                          es[1] == nn.bytes.lo)) {
 24218   00A86A  EE20 F002          	lfsr	2,2
 24219   00A86E  51C7               	movf	checkLen@m& (0+255),w,b
 24220   00A870  26D9               	addwf	fsr2l,f,c
 24221   00A872  51C8               	movf	(checkLen@m+1)& (0+255),w,b
 24222   00A874  22DA               	addwfc	fsr2h,f,c
 24223   00A876  50DE               	movf	postinc2,w,c
 24224   00A878  0100               	movlb	0	; () banked
 24225   00A87A  19BE               	xorwf	(_nn+1)& (0+255),w,b
 24226   00A87C  A4D8               	btfss	status,2,c
 24227   00A87E  D020               	goto	l20889
 24228                           
 24229                           ; BSR set to: 0
 24230   00A880  0101               	movlb	1	; () banked
 24231   00A882  EE20 F003          	lfsr	2,3
 24232   00A886  51C7               	movf	checkLen@m& (0+255),w,b
 24233   00A888  26D9               	addwf	fsr2l,f,c
 24234   00A88A  51C8               	movf	(checkLen@m+1)& (0+255),w,b
 24235   00A88C  22DA               	addwfc	fsr2h,f,c
 24236   00A88E  0100               	movlb	0	; () banked
 24237   00A890  51BD               	movf	_nn& (0+255),w,b
 24238   00A892  18DE               	xorwf	postinc2,w,c
 24239   00A894  A4D8               	btfss	status,2,c
 24240   00A896  D014               	goto	l20889
 24241                           
 24242                           ; BSR set to: 0
 24243                           ;../../VLCBlib_PIC/vlcb.c: 1101:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, m->opc, service, CMDERR_INV_CMD);
 24244   00A898  C0BE  F1C2         	movff	_nn+1,sendMessage5@data1
 24245   00A89C  C0BD  F1C3         	movff	_nn,sendMessage5@data2
 24246   00A8A0  0101               	movlb	1	; () banked
 24247   00A8A2  EE20 F001          	lfsr	2,1
 24248   00A8A6  51C7               	movf	checkLen@m& (0+255),w,b
 24249   00A8A8  26D9               	addwf	fsr2l,f,c
 24250   00A8AA  51C8               	movf	(checkLen@m+1)& (0+255),w,b
 24251   00A8AC  22DA               	addwfc	fsr2h,f,c
 24252   00A8AE  50DF               	movf	indf2,w,c
 24253   00A8B0  6FC4               	movwf	sendMessage5@data3& (0+255),b
 24254   00A8B2  C1CA  F1C5         	movff	checkLen@service,sendMessage5@data4
 24255   00A8B6  0E01               	movlw	1
 24256   00A8B8  6FC6               	movwf	sendMessage5@data5& (0+255),b
 24257   00A8BA  0EAF               	movlw	175
 24258   00A8BC  ECE1  F05F         	call	_sendMessage5
 24259   00A8C0                     l20889:
 24260                           
 24261                           ;../../VLCBlib_PIC/vlcb.c: 1105:         return PROCESSED;
 24262   00A8C0  0E01               	movlw	1
 24263   00A8C2  0012               	return	
 24264   00A8C4                     l20893:
 24265                           
 24266                           ; BSR set to: 1
 24267                           ;../../VLCBlib_PIC/vlcb.c: 1107:     return NOT_PROCESSED;
 24268   00A8C4  0E00               	movlw	0
 24269   00A8C6  0012               	return		;funcret
 24270   00A8C8                     __end_of_checkLen:
 24271                           	callstack 0
 24272                           
 24273 ;; *************** function _sendMessage5 *****************
 24274 ;; Defined at:
 24275 ;;		line 1181 in file "../../VLCBlib_PIC/vlcb.c"
 24276 ;; Parameters:    Size  Location     Type
 24277 ;;  opc             1    wreg     enum E12392
 24278 ;;  data1           1    8[BANK1 ] unsigned char 
 24279 ;;  data2           1    9[BANK1 ] unsigned char 
 24280 ;;  data3           1   10[BANK1 ] unsigned char 
 24281 ;;  data4           1   11[BANK1 ] unsigned char 
 24282 ;;  data5           1   12[BANK1 ] unsigned char 
 24283 ;; Auto vars:     Size  Location     Type
 24284 ;;  opc             1   70[BANK0 ] enum E12392
 24285 ;; Return value:  Size  Location     Type
 24286 ;;                  1    wreg      void 
 24287 ;; Registers used:
 24288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24289 ;; Tracked objects:
 24290 ;;		On entry : 0/0
 24291 ;;		On exit  : 0/0
 24292 ;;		Unchanged: 0/0
 24293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24294 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24295 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24297 ;;      Totals:         0       1       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24298 ;;Total ram usage:        6 bytes
 24299 ;; Hardware stack levels used: 1
 24300 ;; Hardware stack levels required when called: 16
 24301 ;; This function calls:
 24302 ;;		_sendMessage
 24303 ;; This function is called by:
 24304 ;;		_mnsProcessMessage
 24305 ;;		_mnsPoll
 24306 ;;		_mnsTRserviceDiscoveryCallback
 24307 ;;		_nvProcessMessage
 24308 ;;		_checkLen
 24309 ;;		_canProcessMessage
 24310 ;;		_teachProcessMessage
 24311 ;;		_teachCheckLen
 24312 ;;		_doNenrd
 24313 ;;		_doNnclr
 24314 ;;		_doEvlrn
 24315 ;;		_doReval
 24316 ;;		_doEvuln
 24317 ;;		_doReqev
 24318 ;; This function uses a non-reentrant model
 24319 ;;
 24320                           
 24321                           	psect	text93
 24322   00BFC2                     __ptext93:
 24323                           	callstack 0
 24324   00BFC2                     _sendMessage5:
 24325                           	callstack 11
 24326                           
 24327                           ;incstack = 0
 24328                           ;sendMessage5@opc stored from wreg
 24329   00BFC2  0100               	movlb	0	; () banked
 24330   00BFC4  6FA6               	movwf	sendMessage5@opc& (0+255),b
 24331                           
 24332                           ;../../VLCBlib_PIC/vlcb.c: 1182:     sendMessage(opc, 6, data1, data2, data3, data4, dat
      +                          a5, 0,0);
 24333   00BFC6  0E06               	movlw	6
 24334   00BFC8  0101               	movlb	1	; () banked
 24335   00BFCA  6FBA               	movwf	sendMessage@len& (0+255),b
 24336   00BFCC  C1C2  F1BB         	movff	sendMessage5@data1,sendMessage@data1
 24337   00BFD0  C1C3  F1BC         	movff	sendMessage5@data2,sendMessage@data2
 24338   00BFD4  C1C4  F1BD         	movff	sendMessage5@data3,sendMessage@data3
 24339   00BFD8  C1C5  F1BE         	movff	sendMessage5@data4,sendMessage@data4
 24340   00BFDC  C1C6  F1BF         	movff	sendMessage5@data5,sendMessage@data5
 24341   00BFE0  0E00               	movlw	0
 24342   00BFE2  6FC0               	movwf	sendMessage@data6& (0+255),b
 24343   00BFE4  0E00               	movlw	0
 24344   00BFE6  6FC1               	movwf	sendMessage@data7& (0+255),b
 24345   00BFE8  0100               	movlb	0	; () banked
 24346   00BFEA  51A6               	movf	sendMessage5@opc& (0+255),w,b
 24347   00BFEC  ECA3  F054         	call	_sendMessage
 24348   00BFF0  0012               	return		;funcret
 24349   00BFF2                     __end_of_sendMessage5:
 24350                           	callstack 0
 24351                           
 24352 ;; *************** function _APP_preProcessMessage *****************
 24353 ;; Defined at:
 24354 ;;		line 413 in file "../main.c"
 24355 ;; Parameters:    Size  Location     Type
 24356 ;;  m               2   45[BANK0 ] PTR struct Message
 24357 ;;		 -> poll@m(9), 
 24358 ;; Auto vars:     Size  Location     Type
 24359 ;;		None
 24360 ;; Return value:  Size  Location     Type
 24361 ;;                  1    wreg      enum E12743
 24362 ;; Registers used:
 24363 ;;		wreg
 24364 ;; Tracked objects:
 24365 ;;		On entry : 0/0
 24366 ;;		On exit  : 0/0
 24367 ;;		Unchanged: 0/0
 24368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24369 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24372 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24373 ;;Total ram usage:        2 bytes
 24374 ;; Hardware stack levels used: 1
 24375 ;; Hardware stack levels required when called: 12
 24376 ;; This function calls:
 24377 ;;		Nothing
 24378 ;; This function is called by:
 24379 ;;		_poll
 24380 ;; This function uses a non-reentrant model
 24381 ;;
 24382                           
 24383                           	psect	text94
 24384   00C64A                     __ptext94:
 24385                           	callstack 0
 24386   00C64A                     _APP_preProcessMessage:
 24387                           	callstack 17
 24388                           
 24389                           ;../main.c: 414:     return NOT_PROCESSED;
 24390                           
 24391                           ;incstack = 0
 24392   00C64A  0E00               	movlw	0
 24393   00C64C  0012               	return		;funcret
 24394   00C64E                     __end_of_APP_preProcessMessage:
 24395                           	callstack 0
 24396                           
 24397 ;; *************** function _APP_postProcessMessage *****************
 24398 ;; Defined at:
 24399 ;;		line 420 in file "../main.c"
 24400 ;; Parameters:    Size  Location     Type
 24401 ;;  m               2   45[BANK0 ] PTR struct Message
 24402 ;;		 -> poll@m(9), 
 24403 ;; Auto vars:     Size  Location     Type
 24404 ;;		None
 24405 ;; Return value:  Size  Location     Type
 24406 ;;                  1    wreg      enum E12743
 24407 ;; Registers used:
 24408 ;;		wreg
 24409 ;; Tracked objects:
 24410 ;;		On entry : 0/0
 24411 ;;		On exit  : 0/0
 24412 ;;		Unchanged: 0/0
 24413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24414 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24417 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24418 ;;Total ram usage:        2 bytes
 24419 ;; Hardware stack levels used: 1
 24420 ;; Hardware stack levels required when called: 12
 24421 ;; This function calls:
 24422 ;;		Nothing
 24423 ;; This function is called by:
 24424 ;;		_poll
 24425 ;; This function uses a non-reentrant model
 24426 ;;
 24427                           
 24428                           	psect	text95
 24429   00C64E                     __ptext95:
 24430                           	callstack 0
 24431   00C64E                     _APP_postProcessMessage:
 24432                           	callstack 17
 24433                           
 24434                           ;../main.c: 421:     return NOT_PROCESSED;
 24435                           
 24436                           ;incstack = 0
 24437   00C64E  0E00               	movlw	0
 24438   00C650  0012               	return		;funcret
 24439   00C652                     __end_of_APP_postProcessMessage:
 24440                           	callstack 0
 24441                           
 24442 ;; *************** function _loop *****************
 24443 ;; Defined at:
 24444 ;;		line 353 in file "../main.c"
 24445 ;; Parameters:    Size  Location     Type
 24446 ;;		None
 24447 ;; Auto vars:     Size  Location     Type
 24448 ;;		None
 24449 ;; Return value:  Size  Location     Type
 24450 ;;                  1    wreg      void 
 24451 ;; Registers used:
 24452 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24453 ;; Tracked objects:
 24454 ;;		On entry : 0/0
 24455 ;;		On exit  : 0/0
 24456 ;;		Unchanged: 0/0
 24457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24460 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24461 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24462 ;;Total ram usage:        8 bytes
 24463 ;; Hardware stack levels used: 1
 24464 ;; Hardware stack levels required when called: 22
 24465 ;; This function calls:
 24466 ;;		___lmul
 24467 ;;		_getNV
 24468 ;;		_inputScan
 24469 ;;		_processActions
 24470 ;;		_processOutputs
 24471 ;;		_sendProducedEvent
 24472 ;;		_startServos
 24473 ;;		_tickGet
 24474 ;; This function is called by:
 24475 ;;		_main
 24476 ;; This function uses a non-reentrant model
 24477 ;;
 24478                           
 24479                           	psect	text96
 24480   006B94                     __ptext96:
 24481                           	callstack 0
 24482   006B94                     _loop:
 24483                           	callstack 8
 24484                           
 24485                           ;../main.c: 355:     if (!started && ((tickGet() - startTime.val) > (getNV(1) * (62500/1
      +                          0)) + (62500*2))) {
 24486                           
 24487                           ;incstack = 0
 24488   006B94  0100               	movlb	0	; () banked
 24489   006B96  51D0               	movf	_started& (0+255),w,b
 24490   006B98  A4D8               	btfss	status,2,c
 24491   006B9A  D053               	goto	l24773
 24492                           
 24493                           ; BSR set to: 0
 24494   006B9C  ECE4  F05A         	call	_tickGet	;wreg free
 24495   006BA0  503B               	movf	_startTime^0,w,c
 24496   006BA2  0100               	movlb	0	; () banked
 24497   006BA4  5D8D               	subwf	?_tickGet& (0+255),w,b
 24498   006BA6  0101               	movlb	1	; () banked
 24499   006BA8  6FE8               	movwf	??_loop& (0+255),b
 24500   006BAA  503C               	movf	(_startTime+1)^0,w,c
 24501   006BAC  0100               	movlb	0	; () banked
 24502   006BAE  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 24503   006BB0  0101               	movlb	1	; () banked
 24504   006BB2  6FE9               	movwf	(??_loop+1)& (0+255),b
 24505   006BB4  503D               	movf	(_startTime+2)^0,w,c
 24506   006BB6  0100               	movlb	0	; () banked
 24507   006BB8  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 24508   006BBA  0101               	movlb	1	; () banked
 24509   006BBC  6FEA               	movwf	(??_loop+2)& (0+255),b
 24510   006BBE  503E               	movf	(_startTime+3)^0,w,c
 24511   006BC0  0100               	movlb	0	; () banked
 24512   006BC2  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 24513   006BC4  0101               	movlb	1	; () banked
 24514   006BC6  6FEB               	movwf	(??_loop+3)& (0+255),b
 24515   006BC8  0E01               	movlw	1
 24516   006BCA  EC52  F05E         	call	_getNV
 24517   006BCE  0100               	movlb	0	; () banked
 24518   006BD0  C08D  F091         	movff	?_getNV,___lmul@multiplier
 24519   006BD4  C08E  F092         	movff	?_getNV+1,___lmul@multiplier+1
 24520   006BD8  0E00               	movlw	0
 24521   006BDA  BF92               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 24522   006BDC  0EFF               	movlw	-1
 24523   006BDE  6F93               	movwf	(___lmul@multiplier+2)& (0+255),b
 24524   006BE0  6F94               	movwf	(___lmul@multiplier+3)& (0+255),b
 24525   006BE2  0E6A               	movlw	106
 24526   006BE4  6F95               	movwf	___lmul@multiplicand& (0+255),b
 24527   006BE6  0E18               	movlw	24
 24528   006BE8  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 24529   006BEA  0E00               	movlw	0
 24530   006BEC  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 24531   006BEE  0E00               	movlw	0
 24532   006BF0  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 24533   006BF2  EC10  F05B         	call	___lmul	;wreg free
 24534   006BF6  0E48               	movlw	72
 24535   006BF8  0100               	movlb	0	; () banked
 24536   006BFA  2591               	addwf	?___lmul& (0+255),w,b
 24537   006BFC  0101               	movlb	1	; () banked
 24538   006BFE  6FEC               	movwf	(??_loop+4)& (0+255),b
 24539   006C00  0EE8               	movlw	232
 24540   006C02  0100               	movlb	0	; () banked
 24541   006C04  2192               	addwfc	(?___lmul+1)& (0+255),w,b
 24542   006C06  0101               	movlb	1	; () banked
 24543   006C08  6FED               	movwf	(??_loop+5)& (0+255),b
 24544   006C0A  0E01               	movlw	1
 24545   006C0C  0100               	movlb	0	; () banked
 24546   006C0E  2193               	addwfc	(?___lmul+2)& (0+255),w,b
 24547   006C10  0101               	movlb	1	; () banked
 24548   006C12  6FEE               	movwf	(??_loop+6)& (0+255),b
 24549   006C14  0E00               	movlw	0
 24550   006C16  0100               	movlb	0	; () banked
 24551   006C18  2194               	addwfc	(?___lmul+3)& (0+255),w,b
 24552   006C1A  0101               	movlb	1	; () banked
 24553   006C1C  6FEF               	movwf	(??_loop+7)& (0+255),b
 24554   006C1E  51E8               	movf	??_loop& (0+255),w,b
 24555   006C20  5DEC               	subwf	(??_loop+4)& (0+255),w,b
 24556   006C22  51E9               	movf	(??_loop+1)& (0+255),w,b
 24557   006C24  59ED               	subwfb	(??_loop+5)& (0+255),w,b
 24558   006C26  51EA               	movf	(??_loop+2)& (0+255),w,b
 24559   006C28  59EE               	subwfb	(??_loop+6)& (0+255),w,b
 24560   006C2A  51EB               	movf	(??_loop+3)& (0+255),w,b
 24561   006C2C  59EF               	subwfb	(??_loop+7)& (0+255),w,b
 24562   006C2E  B0D8               	btfsc	status,0,c
 24563   006C30  D008               	goto	l24773
 24564                           
 24565                           ; BSR set to: 1
 24566                           ;../main.c: 356:         started = TRUE;
 24567   006C32  0E01               	movlw	1
 24568   006C34  0100               	movlb	0	; () banked
 24569   006C36  6FD0               	movwf	_started& (0+255),b
 24570                           
 24571                           ; BSR set to: 0
 24572                           ;../main.c: 357:         sendProducedEvent(1, EVENT_ON);
 24573   006C38  0E01               	movlw	1
 24574   006C3A  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 24575   006C3C  0E01               	movlw	1
 24576   006C3E  EC3B  F04B         	call	_sendProducedEvent
 24577   006C42                     l24773:
 24578                           
 24579                           ;../main.c: 361:     if ((tickGet() - lastServoStartTime.val) > 5*(62500/2000)) {
 24580   006C42  ECE4  F05A         	call	_tickGet	;wreg free
 24581   006C46  0101               	movlb	1	; () banked
 24582   006C48  515C               	movf	_lastServoStartTime& (0+255),w,b
 24583   006C4A  0100               	movlb	0	; () banked
 24584   006C4C  5D8D               	subwf	?_tickGet& (0+255),w,b
 24585   006C4E  0101               	movlb	1	; () banked
 24586   006C50  6FE8               	movwf	??_loop& (0+255),b
 24587   006C52  515D               	movf	(_lastServoStartTime+1)& (0+255),w,b
 24588   006C54  0100               	movlb	0	; () banked
 24589   006C56  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 24590   006C58  0101               	movlb	1	; () banked
 24591   006C5A  6FE9               	movwf	(??_loop+1)& (0+255),b
 24592   006C5C  515E               	movf	(_lastServoStartTime+2)& (0+255),w,b
 24593   006C5E  0100               	movlb	0	; () banked
 24594   006C60  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 24595   006C62  0101               	movlb	1	; () banked
 24596   006C64  6FEA               	movwf	(??_loop+2)& (0+255),b
 24597   006C66  515F               	movf	(_lastServoStartTime+3)& (0+255),w,b
 24598   006C68  0100               	movlb	0	; () banked
 24599   006C6A  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 24600   006C6C  0101               	movlb	1	; () banked
 24601   006C6E  6FEB               	movwf	(??_loop+3)& (0+255),b
 24602   006C70  51EB               	movf	(??_loop+3)& (0+255),w,b
 24603   006C72  11EA               	iorwf	(??_loop+2)& (0+255),w,b
 24604   006C74  11E9               	iorwf	(??_loop+1)& (0+255),w,b
 24605   006C76  E104               	bnz	u26400
 24606   006C78  0E9C               	movlw	156
 24607   006C7A  5DE8               	subwf	??_loop& (0+255),w,b
 24608   006C7C  A0D8               	btfss	status,0,c
 24609   006C7E  D00C               	goto	l24779
 24610   006C80                     u26400:
 24611                           
 24612                           ; BSR set to: 1
 24613                           ;../main.c: 362:         startServos();
 24614   006C80  EC49  F04D         	call	_startServos	;wreg free
 24615                           
 24616                           ;../main.c: 363:         lastServoStartTime.val = tickGet();
 24617   006C84  ECE4  F05A         	call	_tickGet	;wreg free
 24618   006C88  C08D  F15C         	movff	?_tickGet,_lastServoStartTime
 24619   006C8C  C08E  F15D         	movff	?_tickGet+1,_lastServoStartTime+1
 24620   006C90  C08F  F15E         	movff	?_tickGet+2,_lastServoStartTime+2
 24621   006C94  C090  F15F         	movff	?_tickGet+3,_lastServoStartTime+3
 24622   006C98                     l24779:
 24623                           
 24624                           ;../main.c: 366:     if (started) {
 24625   006C98  0100               	movlb	0	; () banked
 24626   006C9A  51D0               	movf	_started& (0+255),w,b
 24627   006C9C  B4D8               	btfsc	status,2,c
 24628   006C9E  0012               	return	
 24629                           
 24630                           ; BSR set to: 0
 24631                           ;../main.c: 367:         if ((tickGet() - lastInputScanTime.val) > 5*(62500/1000)) {
 24632   006CA0  ECE4  F05A         	call	_tickGet	;wreg free
 24633   006CA4  0101               	movlb	1	; () banked
 24634   006CA6  5158               	movf	_lastInputScanTime& (0+255),w,b
 24635   006CA8  0100               	movlb	0	; () banked
 24636   006CAA  5D8D               	subwf	?_tickGet& (0+255),w,b
 24637   006CAC  0101               	movlb	1	; () banked
 24638   006CAE  6FE8               	movwf	??_loop& (0+255),b
 24639   006CB0  5159               	movf	(_lastInputScanTime+1)& (0+255),w,b
 24640   006CB2  0100               	movlb	0	; () banked
 24641   006CB4  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 24642   006CB6  0101               	movlb	1	; () banked
 24643   006CB8  6FE9               	movwf	(??_loop+1)& (0+255),b
 24644   006CBA  515A               	movf	(_lastInputScanTime+2)& (0+255),w,b
 24645   006CBC  0100               	movlb	0	; () banked
 24646   006CBE  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 24647   006CC0  0101               	movlb	1	; () banked
 24648   006CC2  6FEA               	movwf	(??_loop+2)& (0+255),b
 24649   006CC4  515B               	movf	(_lastInputScanTime+3)& (0+255),w,b
 24650   006CC6  0100               	movlb	0	; () banked
 24651   006CC8  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 24652   006CCA  0101               	movlb	1	; () banked
 24653   006CCC  6FEB               	movwf	(??_loop+3)& (0+255),b
 24654   006CCE  51EB               	movf	(??_loop+3)& (0+255),w,b
 24655   006CD0  11EA               	iorwf	(??_loop+2)& (0+255),w,b
 24656   006CD2  E106               	bnz	u26420
 24657   006CD4  0E37               	movlw	55
 24658   006CD6  5DE8               	subwf	??_loop& (0+255),w,b
 24659   006CD8  0E01               	movlw	1
 24660   006CDA  59E9               	subwfb	(??_loop+1)& (0+255),w,b
 24661   006CDC  A0D8               	btfss	status,0,c
 24662   006CDE  D00C               	goto	l24787
 24663   006CE0                     u26420:
 24664                           
 24665                           ; BSR set to: 1
 24666                           ;../main.c: 368:             inputScan();
 24667   006CE0  ECC3  F027         	call	_inputScan	;wreg free
 24668                           
 24669                           ;../main.c: 369:             lastInputScanTime.val = tickGet();
 24670   006CE4  ECE4  F05A         	call	_tickGet	;wreg free
 24671   006CE8  C08D  F158         	movff	?_tickGet,_lastInputScanTime
 24672   006CEC  C08E  F159         	movff	?_tickGet+1,_lastInputScanTime+1
 24673   006CF0  C08F  F15A         	movff	?_tickGet+2,_lastInputScanTime+2
 24674   006CF4  C090  F15B         	movff	?_tickGet+3,_lastInputScanTime+3
 24675   006CF8                     l24787:
 24676                           
 24677                           ;../main.c: 371:         if ((tickGet() - lastActionPollTime.val) > 100*(62500/1000)) {
 24678   006CF8  ECE4  F05A         	call	_tickGet	;wreg free
 24679   006CFC  0101               	movlb	1	; () banked
 24680   006CFE  5154               	movf	_lastActionPollTime& (0+255),w,b
 24681   006D00  0100               	movlb	0	; () banked
 24682   006D02  5D8D               	subwf	?_tickGet& (0+255),w,b
 24683   006D04  0101               	movlb	1	; () banked
 24684   006D06  6FE8               	movwf	??_loop& (0+255),b
 24685   006D08  5155               	movf	(_lastActionPollTime+1)& (0+255),w,b
 24686   006D0A  0100               	movlb	0	; () banked
 24687   006D0C  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 24688   006D0E  0101               	movlb	1	; () banked
 24689   006D10  6FE9               	movwf	(??_loop+1)& (0+255),b
 24690   006D12  5156               	movf	(_lastActionPollTime+2)& (0+255),w,b
 24691   006D14  0100               	movlb	0	; () banked
 24692   006D16  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 24693   006D18  0101               	movlb	1	; () banked
 24694   006D1A  6FEA               	movwf	(??_loop+2)& (0+255),b
 24695   006D1C  5157               	movf	(_lastActionPollTime+3)& (0+255),w,b
 24696   006D1E  0100               	movlb	0	; () banked
 24697   006D20  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 24698   006D22  0101               	movlb	1	; () banked
 24699   006D24  6FEB               	movwf	(??_loop+3)& (0+255),b
 24700   006D26  51EB               	movf	(??_loop+3)& (0+255),w,b
 24701   006D28  11EA               	iorwf	(??_loop+2)& (0+255),w,b
 24702   006D2A  E106               	bnz	u26430
 24703   006D2C  0E39               	movlw	57
 24704   006D2E  5DE8               	subwf	??_loop& (0+255),w,b
 24705   006D30  0E18               	movlw	24
 24706   006D32  59E9               	subwfb	(??_loop+1)& (0+255),w,b
 24707   006D34  A0D8               	btfss	status,0,c
 24708   006D36  0012               	return	
 24709   006D38                     u26430:
 24710                           
 24711                           ; BSR set to: 1
 24712                           ;../main.c: 372:             processActions();
 24713   006D38  ECD9  F030         	call	_processActions	;wreg free
 24714                           
 24715                           ;../main.c: 373:             processOutputs();
 24716   006D3C  ECE1  F034         	call	_processOutputs	;wreg free
 24717                           
 24718                           ;../main.c: 374:             lastActionPollTime.val = tickGet();
 24719   006D40  ECE4  F05A         	call	_tickGet	;wreg free
 24720   006D44  C08D  F154         	movff	?_tickGet,_lastActionPollTime
 24721   006D48  C08E  F155         	movff	?_tickGet+1,_lastActionPollTime+1
 24722   006D4C  C08F  F156         	movff	?_tickGet+2,_lastActionPollTime+2
 24723   006D50  C090  F157         	movff	?_tickGet+3,_lastActionPollTime+3
 24724   006D54  0012               	return		;funcret
 24725   006D56                     __end_of_loop:
 24726                           	callstack 0
 24727                           
 24728 ;; *************** function _startServos *****************
 24729 ;; Defined at:
 24730 ;;		line 182 in file "../servo.c"
 24731 ;; Parameters:    Size  Location     Type
 24732 ;;		None
 24733 ;; Auto vars:     Size  Location     Type
 24734 ;;  type            1   30[BANK1 ] unsigned char 
 24735 ;; Return value:  Size  Location     Type
 24736 ;;                  1    wreg      void 
 24737 ;; Registers used:
 24738 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24739 ;; Tracked objects:
 24740 ;;		On entry : 0/0
 24741 ;;		On exit  : 0/0
 24742 ;;		Unchanged: 0/0
 24743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24745 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24747 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24748 ;;Total ram usage:        1 bytes
 24749 ;; Hardware stack levels used: 1
 24750 ;; Hardware stack levels required when called: 19
 24751 ;; This function calls:
 24752 ;;		_getNV
 24753 ;;		_pollServos
 24754 ;;		_setupTimer1
 24755 ;;		_setupTimer3
 24756 ;; This function is called by:
 24757 ;;		_loop
 24758 ;; This function uses a non-reentrant model
 24759 ;;
 24760                           
 24761                           	psect	text97
 24762   009A92                     __ptext97:
 24763                           	callstack 0
 24764   009A92                     _startServos:
 24765                           	callstack 10
 24766                           
 24767                           ;../servo.c: 183:     uint8_t type;;../servo.c: 186:     servoInBlock++;
 24768                           
 24769                           ;incstack = 0
 24770   009A92  0100               	movlb	0	; () banked
 24771   009A94  2BC9               	incf	_servoInBlock& (0+255),f,b
 24772                           
 24773                           ; BSR set to: 0
 24774                           ;../servo.c: 187:     if (servoInBlock >= 8) {
 24775   009A96  0E07               	movlw	7
 24776   009A98  65C9               	cpfsgt	_servoInBlock& (0+255),b
 24777   009A9A  D004               	goto	l22779
 24778                           
 24779                           ; BSR set to: 0
 24780                           ;../servo.c: 188:         servoInBlock = 0;
 24781   009A9C  0E00               	movlw	0
 24782   009A9E  6FC9               	movwf	_servoInBlock& (0+255),b
 24783                           
 24784                           ; BSR set to: 0
 24785                           ;../servo.c: 189:         pollServos();
 24786   009AA0  EC28  F004         	call	_pollServos	;wreg free
 24787   009AA4                     l22779:
 24788                           
 24789                           ;../servo.c: 191:     type = (uint8_t)getNV((16 + 7*(servoInBlock) + 0));
 24790   009AA4  0100               	movlb	0	; () banked
 24791   009AA6  51C9               	movf	_servoInBlock& (0+255),w,b
 24792   009AA8  0D07               	mullw	7
 24793   009AAA  50F3               	movf	243,w,c
 24794   009AAC  0F10               	addlw	16
 24795   009AAE  EC52  F05E         	call	_getNV
 24796   009AB2  0100               	movlb	0	; () banked
 24797   009AB4  518D               	movf	?_getNV& (0+255),w,b
 24798   009AB6  0101               	movlb	1	; () banked
 24799   009AB8  6FD8               	movwf	startServos@type& (0+255),b
 24800                           
 24801                           ; BSR set to: 1
 24802                           ;../servo.c: 192:     if ((type == 2) || (type == 3) || (type == 4)) {
 24803   009ABA  0E02               	movlw	2
 24804   009ABC  19D8               	xorwf	startServos@type& (0+255),w,b
 24805   009ABE  B4D8               	btfsc	status,2,c
 24806   009AC0  D008               	goto	u23890
 24807                           
 24808                           ; BSR set to: 1
 24809   009AC2  0E03               	movlw	3
 24810   009AC4  19D8               	xorwf	startServos@type& (0+255),w,b
 24811   009AC6  B4D8               	btfsc	status,2,c
 24812   009AC8  D004               	goto	u23890
 24813                           
 24814                           ; BSR set to: 1
 24815   009ACA  0E04               	movlw	4
 24816   009ACC  19D8               	xorwf	startServos@type& (0+255),w,b
 24817   009ACE  A4D8               	btfss	status,2,c
 24818   009AD0  D00D               	goto	l22791
 24819   009AD2                     u23890:
 24820                           
 24821                           ; BSR set to: 1
 24822                           ;../servo.c: 193:         if (servoState[servoInBlock] != SS_OFF) setupTimer1(servoInBlo
      +                          ck);
 24823   009AD2  0E10               	movlw	low _servoState
 24824   009AD4  0100               	movlb	0	; () banked
 24825   009AD6  25C9               	addwf	_servoInBlock& (0+255),w,b
 24826   009AD8  6ED9               	movwf	fsr2l,c
 24827   009ADA  6ADA               	clrf	fsr2h,c
 24828   009ADC  0E01               	movlw	high _servoState
 24829   009ADE  22DA               	addwfc	fsr2h,f,c
 24830   009AE0  50DF               	movf	indf2,w,c
 24831   009AE2  B4D8               	btfsc	status,2,c
 24832   009AE4  D003               	goto	l22791
 24833                           
 24834                           ; BSR set to: 0
 24835   009AE6  51C9               	movf	_servoInBlock& (0+255),w,b
 24836   009AE8  EC29  F051         	call	_setupTimer1
 24837   009AEC                     l22791:
 24838                           
 24839                           ;../servo.c: 195:     type = (uint8_t)getNV((16 + 7*(servoInBlock+8) + 0));
 24840   009AEC  0100               	movlb	0	; () banked
 24841   009AEE  51C9               	movf	_servoInBlock& (0+255),w,b
 24842   009AF0  0D07               	mullw	7
 24843   009AF2  50F3               	movf	243,w,c
 24844   009AF4  0F48               	addlw	72
 24845   009AF6  EC52  F05E         	call	_getNV
 24846   009AFA  0100               	movlb	0	; () banked
 24847   009AFC  518D               	movf	?_getNV& (0+255),w,b
 24848   009AFE  0101               	movlb	1	; () banked
 24849   009B00  6FD8               	movwf	startServos@type& (0+255),b
 24850                           
 24851                           ; BSR set to: 1
 24852                           ;../servo.c: 196:     if ((type == 2) || (type == 3) || (type == 4)) {
 24853   009B02  0E02               	movlw	2
 24854   009B04  19D8               	xorwf	startServos@type& (0+255),w,b
 24855   009B06  B4D8               	btfsc	status,2,c
 24856   009B08  D008               	goto	u23930
 24857                           
 24858                           ; BSR set to: 1
 24859   009B0A  0E03               	movlw	3
 24860   009B0C  19D8               	xorwf	startServos@type& (0+255),w,b
 24861   009B0E  B4D8               	btfsc	status,2,c
 24862   009B10  D004               	goto	u23930
 24863                           
 24864                           ; BSR set to: 1
 24865   009B12  0E04               	movlw	4
 24866   009B14  19D8               	xorwf	startServos@type& (0+255),w,b
 24867   009B16  A4D8               	btfss	status,2,c
 24868   009B18  0012               	return	
 24869   009B1A                     u23930:
 24870                           
 24871                           ; BSR set to: 1
 24872                           ;../servo.c: 197:         if (servoState[servoInBlock+8] != SS_OFF) setupTimer3(servoInB
      +                          lock+8);
 24873   009B1A  0E18               	movlw	low (_servoState+8)
 24874   009B1C  0100               	movlb	0	; () banked
 24875   009B1E  25C9               	addwf	_servoInBlock& (0+255),w,b
 24876   009B20  6ED9               	movwf	fsr2l,c
 24877   009B22  6ADA               	clrf	fsr2h,c
 24878   009B24  0E01               	movlw	high (_servoState+8)
 24879   009B26  22DA               	addwfc	fsr2h,f,c
 24880   009B28  50DF               	movf	indf2,w,c
 24881   009B2A  B4D8               	btfsc	status,2,c
 24882   009B2C  0012               	return	
 24883                           
 24884                           ; BSR set to: 0
 24885   009B2E  51C9               	movf	_servoInBlock& (0+255),w,b
 24886   009B30  0F08               	addlw	8
 24887   009B32  ECE0  F050         	call	_setupTimer3
 24888   009B36  0012               	return		;funcret
 24889   009B38                     __end_of_startServos:
 24890                           	callstack 0
 24891                           
 24892 ;; *************** function _setupTimer3 *****************
 24893 ;; Defined at:
 24894 ;;		line 217 in file "../servo.c"
 24895 ;; Parameters:    Size  Location     Type
 24896 ;;  io              1    wreg     unsigned char 
 24897 ;; Auto vars:     Size  Location     Type
 24898 ;;  io              1   60[BANK0 ] unsigned char 
 24899 ;;  ticks           2   58[BANK0 ] unsigned short 
 24900 ;; Return value:  Size  Location     Type
 24901 ;;                  1    wreg      void 
 24902 ;; Registers used:
 24903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24904 ;; Tracked objects:
 24905 ;;		On entry : 0/0
 24906 ;;		On exit  : 0/0
 24907 ;;		Unchanged: 0/0
 24908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24910 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24911 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24912 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24913 ;;Total ram usage:        8 bytes
 24914 ;; Hardware stack levels used: 1
 24915 ;; Hardware stack levels required when called: 13
 24916 ;; This function calls:
 24917 ;;		_getNV
 24918 ;;		_setOutputPin
 24919 ;; This function is called by:
 24920 ;;		_startServos
 24921 ;; This function uses a non-reentrant model
 24922 ;;
 24923                           
 24924                           	psect	text98
 24925   00A1C0                     __ptext98:
 24926                           	callstack 0
 24927   00A1C0                     _setupTimer3:
 24928                           	callstack 15
 24929                           
 24930                           ;incstack = 0
 24931                           ;setupTimer3@io stored from wreg
 24932   00A1C0  0100               	movlb	0	; () banked
 24933   00A1C2  6F9C               	movwf	setupTimer3@io& (0+255),b
 24934                           
 24935                           ;../servo.c: 218:     uint16_t ticks = 0xFFFF - ((getNV((16 + 7*(io) + 1)) & 0x80) ?
 24936   00A1C4  0100               	movlb	0	; () banked
 24937   00A1C6  519C               	movf	setupTimer3@io& (0+255),w,b
 24938   00A1C8  0D07               	mullw	7
 24939   00A1CA  50F3               	movf	243,w,c
 24940   00A1CC  0F11               	addlw	17
 24941   00A1CE  EC52  F05E         	call	_getNV
 24942   00A1D2  0100               	movlb	0	; () banked
 24943   00A1D4  BF8D               	btfsc	?_getNV& (0+255),7,b
 24944   00A1D6  D011               	goto	l21935
 24945                           
 24946                           ; BSR set to: 0
 24947   00A1D8  519C               	movf	setupTimer3@io& (0+255),w,b
 24948   00A1DA  0FA9               	addlw	low _currentPos
 24949   00A1DC  6ED9               	movwf	fsr2l,c
 24950   00A1DE  6ADA               	clrf	fsr2h,c
 24951   00A1E0  50DF               	movf	indf2,w,c
 24952   00A1E2  6F95               	movwf	??_setupTimer3& (0+255),b
 24953   00A1E4  5195               	movf	??_setupTimer3& (0+255),w,b
 24954   00A1E6  0D13               	mullw	19
 24955   00A1E8  CFF3 F096          	movff	prodl,??_setupTimer3+1
 24956   00A1EC  CFF4 F097          	movff	prodh,??_setupTimer3+2
 24957   00A1F0  0E10               	movlw	16
 24958   00A1F2  2596               	addwf	(??_setupTimer3+1)& (0+255),w,b
 24959   00A1F4  6F98               	movwf	_setupTimer3$1935& (0+255),b
 24960   00A1F6  0E0E               	movlw	14
 24961   00A1F8  D010               	goto	L4
 24962   00A1FA                     l21935:
 24963                           
 24964                           ; BSR set to: 0
 24965   00A1FA  519C               	movf	setupTimer3@io& (0+255),w,b
 24966   00A1FC  0FA9               	addlw	low _currentPos
 24967   00A1FE  6ED9               	movwf	fsr2l,c
 24968   00A200  6ADA               	clrf	fsr2h,c
 24969   00A202  50DF               	movf	indf2,w,c
 24970   00A204  6F95               	movwf	??_setupTimer3& (0+255),b
 24971   00A206  5195               	movf	??_setupTimer3& (0+255),w,b
 24972   00A208  0D24               	mullw	36
 24973   00A20A  CFF3 F096          	movff	prodl,??_setupTimer3+1
 24974   00A20E  CFF4 F097          	movff	prodh,??_setupTimer3+2
 24975   00A212  0E78               	movlw	120
 24976   00A214  2596               	addwf	(??_setupTimer3+1)& (0+255),w,b
 24977   00A216  6F98               	movwf	_setupTimer3$1935& (0+255),b
 24978   00A218  0E05               	movlw	5
 24979   00A21A                     L4:
 24980   00A21A  2197               	addwfc	(??_setupTimer3+2)& (0+255),w,b
 24981   00A21C  6F99               	movwf	(_setupTimer3$1935+1)& (0+255),b
 24982                           
 24983                           ; BSR set to: 0
 24984   00A21E  1D98               	comf	_setupTimer3$1935& (0+255),w,b
 24985   00A220  6F9A               	movwf	setupTimer3@ticks& (0+255),b
 24986   00A222  1D99               	comf	(_setupTimer3$1935+1)& (0+255),w,b
 24987   00A224  6F9B               	movwf	(setupTimer3@ticks+1)& (0+255),b
 24988                           
 24989                           ; BSR set to: 0
 24990                           ;../servo.c: 221:     TMR3H = ticks >> 8;
 24991   00A226  519B               	movf	(setupTimer3@ticks+1)& (0+255),w,b
 24992   00A228  6EB3               	movwf	179,c	;volatile
 24993                           
 24994                           ; BSR set to: 0
 24995                           ;../servo.c: 222:     TMR3L = ticks & 0xFF;
 24996   00A22A  C09A  FFB2         	movff	setupTimer3@ticks,4018	;volatile
 24997                           
 24998                           ; BSR set to: 0
 24999                           ;../servo.c: 225:     setOutputPin(io, !(getNV((16 + 7*(io) + 1)) & 0x20));
 25000   00A22E  519C               	movf	setupTimer3@io& (0+255),w,b
 25001   00A230  0D07               	mullw	7
 25002   00A232  50F3               	movf	243,w,c
 25003   00A234  0F11               	addlw	17
 25004   00A236  EC52  F05E         	call	_getNV
 25005   00A23A  0100               	movlb	0	; () banked
 25006   00A23C  BB8D               	btfsc	?_getNV& (0+255),5,b
 25007   00A23E  D002               	goto	u22870
 25008   00A240  0E01               	movlw	1
 25009   00A242  D001               	goto	u22880
 25010   00A244                     u22870:
 25011   00A244  0E00               	movlw	0
 25012   00A246                     u22880:
 25013   00A246  6F91               	movwf	setOutputPin@state& (0+255),b
 25014   00A248  519C               	movf	setupTimer3@io& (0+255),w,b
 25015   00A24A  ECAB  F036         	call	_setOutputPin
 25016                           
 25017                           ;../servo.c: 226:     T3CONbits.TMR3ON = 1;
 25018   00A24E  80B1               	bsf	177,0,c	;volatile
 25019   00A250  0012               	return		;funcret
 25020   00A252                     __end_of_setupTimer3:
 25021                           	callstack 0
 25022                           
 25023 ;; *************** function _setupTimer1 *****************
 25024 ;; Defined at:
 25025 ;;		line 206 in file "../servo.c"
 25026 ;; Parameters:    Size  Location     Type
 25027 ;;  io              1    wreg     unsigned char 
 25028 ;; Auto vars:     Size  Location     Type
 25029 ;;  io              1   60[BANK0 ] unsigned char 
 25030 ;;  ticks           2   58[BANK0 ] unsigned short 
 25031 ;; Return value:  Size  Location     Type
 25032 ;;                  1    wreg      void 
 25033 ;; Registers used:
 25034 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25035 ;; Tracked objects:
 25036 ;;		On entry : 0/0
 25037 ;;		On exit  : 0/0
 25038 ;;		Unchanged: 0/0
 25039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25041 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25042 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25043 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25044 ;;Total ram usage:        8 bytes
 25045 ;; Hardware stack levels used: 1
 25046 ;; Hardware stack levels required when called: 13
 25047 ;; This function calls:
 25048 ;;		_getNV
 25049 ;;		_setOutputPin
 25050 ;; This function is called by:
 25051 ;;		_startServos
 25052 ;; This function uses a non-reentrant model
 25053 ;;
 25054                           
 25055                           	psect	text99
 25056   00A252                     __ptext99:
 25057                           	callstack 0
 25058   00A252                     _setupTimer1:
 25059                           	callstack 15
 25060                           
 25061                           ;incstack = 0
 25062                           ;setupTimer1@io stored from wreg
 25063   00A252  0100               	movlb	0	; () banked
 25064   00A254  6F9C               	movwf	setupTimer1@io& (0+255),b
 25065                           
 25066                           ;../servo.c: 207:     uint16_t ticks = 0xFFFF - ((getNV((16 + 7*(io) + 1)) & 0x80) ?
 25067   00A256  0100               	movlb	0	; () banked
 25068   00A258  519C               	movf	setupTimer1@io& (0+255),w,b
 25069   00A25A  0D07               	mullw	7
 25070   00A25C  50F3               	movf	243,w,c
 25071   00A25E  0F11               	addlw	17
 25072   00A260  EC52  F05E         	call	_getNV
 25073   00A264  0100               	movlb	0	; () banked
 25074   00A266  BF8D               	btfsc	?_getNV& (0+255),7,b
 25075   00A268  D011               	goto	l21919
 25076                           
 25077                           ; BSR set to: 0
 25078   00A26A  519C               	movf	setupTimer1@io& (0+255),w,b
 25079   00A26C  0FA9               	addlw	low _currentPos
 25080   00A26E  6ED9               	movwf	fsr2l,c
 25081   00A270  6ADA               	clrf	fsr2h,c
 25082   00A272  50DF               	movf	indf2,w,c
 25083   00A274  6F95               	movwf	??_setupTimer1& (0+255),b
 25084   00A276  5195               	movf	??_setupTimer1& (0+255),w,b
 25085   00A278  0D13               	mullw	19
 25086   00A27A  CFF3 F096          	movff	prodl,??_setupTimer1+1
 25087   00A27E  CFF4 F097          	movff	prodh,??_setupTimer1+2
 25088   00A282  0E10               	movlw	16
 25089   00A284  2596               	addwf	(??_setupTimer1+1)& (0+255),w,b
 25090   00A286  6F98               	movwf	_setupTimer1$1931& (0+255),b
 25091   00A288  0E0E               	movlw	14
 25092   00A28A  D010               	goto	L5
 25093   00A28C                     l21919:
 25094                           
 25095                           ; BSR set to: 0
 25096   00A28C  519C               	movf	setupTimer1@io& (0+255),w,b
 25097   00A28E  0FA9               	addlw	low _currentPos
 25098   00A290  6ED9               	movwf	fsr2l,c
 25099   00A292  6ADA               	clrf	fsr2h,c
 25100   00A294  50DF               	movf	indf2,w,c
 25101   00A296  6F95               	movwf	??_setupTimer1& (0+255),b
 25102   00A298  5195               	movf	??_setupTimer1& (0+255),w,b
 25103   00A29A  0D24               	mullw	36
 25104   00A29C  CFF3 F096          	movff	prodl,??_setupTimer1+1
 25105   00A2A0  CFF4 F097          	movff	prodh,??_setupTimer1+2
 25106   00A2A4  0E78               	movlw	120
 25107   00A2A6  2596               	addwf	(??_setupTimer1+1)& (0+255),w,b
 25108   00A2A8  6F98               	movwf	_setupTimer1$1931& (0+255),b
 25109   00A2AA  0E05               	movlw	5
 25110   00A2AC                     L5:
 25111   00A2AC  2197               	addwfc	(??_setupTimer1+2)& (0+255),w,b
 25112   00A2AE  6F99               	movwf	(_setupTimer1$1931+1)& (0+255),b
 25113                           
 25114                           ; BSR set to: 0
 25115   00A2B0  1D98               	comf	_setupTimer1$1931& (0+255),w,b
 25116   00A2B2  6F9A               	movwf	setupTimer1@ticks& (0+255),b
 25117   00A2B4  1D99               	comf	(_setupTimer1$1931+1)& (0+255),w,b
 25118   00A2B6  6F9B               	movwf	(setupTimer1@ticks+1)& (0+255),b
 25119                           
 25120                           ; BSR set to: 0
 25121                           ;../servo.c: 210:     TMR1H = ticks >> 8;
 25122   00A2B8  519B               	movf	(setupTimer1@ticks+1)& (0+255),w,b
 25123   00A2BA  6ECF               	movwf	207,c	;volatile
 25124                           
 25125                           ; BSR set to: 0
 25126                           ;../servo.c: 211:     TMR1L = ticks & 0xFF;
 25127   00A2BC  C09A  FFCE         	movff	setupTimer1@ticks,4046	;volatile
 25128                           
 25129                           ; BSR set to: 0
 25130                           ;../servo.c: 214:     setOutputPin(io, !(getNV((16 + 7*(io) + 1)) & 0x20));
 25131   00A2C0  519C               	movf	setupTimer1@io& (0+255),w,b
 25132   00A2C2  0D07               	mullw	7
 25133   00A2C4  50F3               	movf	243,w,c
 25134   00A2C6  0F11               	addlw	17
 25135   00A2C8  EC52  F05E         	call	_getNV
 25136   00A2CC  0100               	movlb	0	; () banked
 25137   00A2CE  BB8D               	btfsc	?_getNV& (0+255),5,b
 25138   00A2D0  D002               	goto	u22840
 25139   00A2D2  0E01               	movlw	1
 25140   00A2D4  D001               	goto	u22850
 25141   00A2D6                     u22840:
 25142   00A2D6  0E00               	movlw	0
 25143   00A2D8                     u22850:
 25144   00A2D8  6F91               	movwf	setOutputPin@state& (0+255),b
 25145   00A2DA  519C               	movf	setupTimer1@io& (0+255),w,b
 25146   00A2DC  ECAB  F036         	call	_setOutputPin
 25147                           
 25148                           ;../servo.c: 215:     T1CONbits.TMR1ON = 1;
 25149   00A2E0  80CD               	bsf	205,0,c	;volatile
 25150   00A2E2  0012               	return		;funcret
 25151   00A2E4                     __end_of_setupTimer1:
 25152                           	callstack 0
 25153                           
 25154 ;; *************** function _pollServos *****************
 25155 ;; Defined at:
 25156 ;;		line 284 in file "../servo.c"
 25157 ;; Parameters:    Size  Location     Type
 25158 ;;		None
 25159 ;; Auto vars:     Size  Location     Type
 25160 ;;  io              1   29[BANK1 ] unsigned char 
 25161 ;;  midway          1   28[BANK1 ] unsigned char 
 25162 ;;  beforeMidway    1   27[BANK1 ] enum E12710
 25163 ;;  target          1   26[BANK1 ] unsigned char 
 25164 ;; Return value:  Size  Location     Type
 25165 ;;                  1    wreg      void 
 25166 ;; Registers used:
 25167 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 25168 ;; Tracked objects:
 25169 ;;		On entry : 0/0
 25170 ;;		On exit  : 0/0
 25171 ;;		Unchanged: 0/0
 25172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25174 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25175 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25176 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25177 ;;Total ram usage:       12 bytes
 25178 ;; Hardware stack levels used: 1
 25179 ;; Hardware stack levels required when called: 18
 25180 ;; This function calls:
 25181 ;;		___awdiv
 25182 ;;		_bounceDown
 25183 ;;		_bounceUp
 25184 ;;		_getNV
 25185 ;;		_initBounce
 25186 ;;		_sendProducedEvent
 25187 ;;		_tickGet
 25188 ;;		_writeNVM
 25189 ;; This function is called by:
 25190 ;;		_startServos
 25191 ;; This function uses a non-reentrant model
 25192 ;;
 25193                           
 25194                           	psect	text100
 25195   000850                     __ptext100:
 25196                           	callstack 0
 25197   000850                     _pollServos:
 25198                           	callstack 10
 25199                           
 25200                           ;../servo.c: 285:     uint8_t midway;;../servo.c: 286:     Boolean beforeMidway;;../serv
      +                          o.c: 287:     uint8_t io;;../servo.c: 288:     uint8_t target;;../servo.c: 290:     for 
      +                          (io=0; io<16; io++) {
 25201                           
 25202                           ;incstack = 0
 25203   000850  0E00               	movlw	0
 25204   000852  0101               	movlb	1	; () banked
 25205   000854  6FD7               	movwf	pollServos@io& (0+255),b
 25206   000856  EFF0  F00A         	goto	l21869
 25207   00085A                     l21641:
 25208                           
 25209                           ; BSR set to: 0
 25210                           ;../servo.c: 293:                 midway = ((uint8_t)getNV((16 + 7*(io) + 3)))/2 +
 25211   00085A  0101               	movlb	1	; () banked
 25212   00085C  51D7               	movf	pollServos@io& (0+255),w,b
 25213   00085E  0D07               	mullw	7
 25214   000860  50F3               	movf	243,w,c
 25215   000862  0F12               	addlw	18
 25216   000864  EC52  F05E         	call	_getNV
 25217   000868  0100               	movlb	0	; () banked
 25218   00086A  518D               	movf	?_getNV& (0+255),w,b
 25219   00086C  6F97               	movwf	___awdiv@dividend& (0+255),b
 25220   00086E  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 25221   000870  0E00               	movlw	0
 25222   000872  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 25223   000874  0E02               	movlw	2
 25224   000876  6F99               	movwf	___awdiv@divisor& (0+255),b
 25225   000878  EC1C  F053         	call	___awdiv	;wreg free
 25226   00087C  C097  F1CC         	movff	?___awdiv,??_pollServos
 25227   000880  C098  F1CD         	movff	?___awdiv+1,??_pollServos+1
 25228   000884  0101               	movlb	1	; () banked
 25229   000886  51D7               	movf	pollServos@io& (0+255),w,b
 25230   000888  0D07               	mullw	7
 25231   00088A  50F3               	movf	243,w,c
 25232   00088C  0F13               	addlw	19
 25233   00088E  EC52  F05E         	call	_getNV
 25234   000892  0100               	movlb	0	; () banked
 25235   000894  518D               	movf	?_getNV& (0+255),w,b
 25236   000896  6F97               	movwf	___awdiv@dividend& (0+255),b
 25237   000898  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 25238   00089A  0E00               	movlw	0
 25239   00089C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 25240   00089E  0E02               	movlw	2
 25241   0008A0  6F99               	movwf	___awdiv@divisor& (0+255),b
 25242   0008A2  EC1C  F053         	call	___awdiv	;wreg free
 25243   0008A6  0100               	movlb	0	; () banked
 25244   0008A8  5197               	movf	?___awdiv& (0+255),w,b
 25245   0008AA  0101               	movlb	1	; () banked
 25246   0008AC  25CC               	addwf	??_pollServos& (0+255),w,b
 25247   0008AE  6FD6               	movwf	pollServos@midway& (0+255),b
 25248                           
 25249                           ; BSR set to: 1
 25250                           ;../servo.c: 295:                 beforeMidway=FALSE;
 25251   0008B0  0E00               	movlw	0
 25252   0008B2  6FD5               	movwf	pollServos@beforeMidway& (0+255),b
 25253                           
 25254                           ;../servo.c: 296:                 switch (servoState[io]) {
 25255   0008B4  D239               	goto	l21729
 25256   0008B6                     l21645:
 25257                           
 25258                           ; BSR set to: 1
 25259                           ;../servo.c: 298:                         if (currentPos[io]==getNV((16 + 7*(io) + 2))) 
      +                          {
 25260   0008B6  51D7               	movf	pollServos@io& (0+255),w,b
 25261   0008B8  0D07               	mullw	7
 25262   0008BA  50F3               	movf	243,w,c
 25263   0008BC  0F12               	addlw	18
 25264   0008BE  EC52  F05E         	call	_getNV
 25265   0008C2  0101               	movlb	1	; () banked
 25266   0008C4  51D7               	movf	pollServos@io& (0+255),w,b
 25267   0008C6  0FA9               	addlw	low _currentPos
 25268   0008C8  6ED9               	movwf	fsr2l,c
 25269   0008CA  6ADA               	clrf	fsr2h,c
 25270   0008CC  50DF               	movf	indf2,w,c
 25271   0008CE  6FCC               	movwf	??_pollServos& (0+255),b
 25272   0008D0  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 25273   0008D2  0100               	movlb	0	; () banked
 25274   0008D4  518D               	movf	?_getNV& (0+255),w,b
 25275   0008D6  0101               	movlb	1	; () banked
 25276   0008D8  19CC               	xorwf	??_pollServos& (0+255),w,b
 25277   0008DA  E118               	bnz	l21649
 25278   0008DC  0100               	movlb	0	; () banked
 25279   0008DE  518E               	movf	(?_getNV+1)& (0+255),w,b
 25280   0008E0  0101               	movlb	1	; () banked
 25281   0008E2  19CD               	xorwf	(??_pollServos+1)& (0+255),w,b
 25282   0008E4  A4D8               	btfss	status,2,c
 25283   0008E6  D012               	goto	l21649
 25284                           
 25285                           ; BSR set to: 1
 25286                           ;../servo.c: 299:                             sendProducedEvent(((8 + 4*(io))+0), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 25287   0008E8  51D7               	movf	pollServos@io& (0+255),w,b
 25288   0008EA  0D07               	mullw	7
 25289   0008EC  50F3               	movf	243,w,c
 25290   0008EE  0F11               	addlw	17
 25291   0008F0  EC52  F05E         	call	_getNV
 25292   0008F4  0100               	movlb	0	; () banked
 25293   0008F6  518D               	movf	?_getNV& (0+255),w,b
 25294   0008F8  0B40               	andlw	64
 25295   0008FA  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 25296   0008FC  0101               	movlb	1	; () banked
 25297   0008FE  51D7               	movf	pollServos@io& (0+255),w,b
 25298   000900  0D04               	mullw	4
 25299   000902  50F3               	movf	243,w,c
 25300   000904  0F08               	addlw	8
 25301   000906  EC3B  F04B         	call	_sendProducedEvent
 25302                           
 25303                           ;../servo.c: 300:                         } else {
 25304   00090A  D011               	goto	l21651
 25305   00090C                     l21649:
 25306                           
 25307                           ; BSR set to: 1
 25308                           ;../servo.c: 301:                             sendProducedEvent(((8 + 4*(io))+2), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 25309   00090C  51D7               	movf	pollServos@io& (0+255),w,b
 25310   00090E  0D07               	mullw	7
 25311   000910  50F3               	movf	243,w,c
 25312   000912  0F11               	addlw	17
 25313   000914  EC52  F05E         	call	_getNV
 25314   000918  0100               	movlb	0	; () banked
 25315   00091A  518D               	movf	?_getNV& (0+255),w,b
 25316   00091C  0B40               	andlw	64
 25317   00091E  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 25318   000920  0101               	movlb	1	; () banked
 25319   000922  51D7               	movf	pollServos@io& (0+255),w,b
 25320   000924  0D04               	mullw	4
 25321   000926  50F3               	movf	243,w,c
 25322   000928  0F0A               	addlw	10
 25323   00092A  EC3B  F04B         	call	_sendProducedEvent
 25324   00092E                     l21651:
 25325                           
 25326                           ;../servo.c: 303:                         servoState[io] = SS_MOVING;
 25327   00092E  0E10               	movlw	low _servoState
 25328   000930  0101               	movlb	1	; () banked
 25329   000932  25D7               	addwf	pollServos@io& (0+255),w,b
 25330   000934  6ED9               	movwf	fsr2l,c
 25331   000936  6ADA               	clrf	fsr2h,c
 25332   000938  0E01               	movlw	high _servoState
 25333   00093A  22DA               	addwfc	fsr2h,f,c
 25334   00093C  0E02               	movlw	2
 25335   00093E  6EDF               	movwf	indf2,c
 25336   000940                     l21653:
 25337                           
 25338                           ; BSR set to: 1
 25339                           ;../servo.c: 306:                         if (targetPos[io] > currentPos[io]) {
 25340   000940  0E20               	movlw	low _targetPos
 25341   000942  25D7               	addwf	pollServos@io& (0+255),w,b
 25342   000944  6ED9               	movwf	fsr2l,c
 25343   000946  6ADA               	clrf	fsr2h,c
 25344   000948  0E01               	movlw	high _targetPos
 25345   00094A  22DA               	addwfc	fsr2h,f,c
 25346   00094C  51D7               	movf	pollServos@io& (0+255),w,b
 25347   00094E  0FA9               	addlw	low _currentPos
 25348   000950  6EE1               	movwf	fsr1l,c
 25349   000952  6AE2               	clrf	fsr1h,c
 25350   000954  50DE               	movf	postinc2,w,c
 25351   000956  5CE6               	subwf	postinc1,w,c
 25352   000958  B0D8               	btfsc	status,0,c
 25353   00095A  D0AA               	goto	l21683
 25354                           
 25355                           ; BSR set to: 1
 25356                           ;../servo.c: 307:                             if (currentPos[io] < midway) {
 25357   00095C  51D7               	movf	pollServos@io& (0+255),w,b
 25358   00095E  0FA9               	addlw	low _currentPos
 25359   000960  6ED9               	movwf	fsr2l,c
 25360   000962  6ADA               	clrf	fsr2h,c
 25361   000964  51D6               	movf	pollServos@midway& (0+255),w,b
 25362   000966  5CDE               	subwf	postinc2,w,c
 25363   000968  B0D8               	btfsc	status,0,c
 25364   00096A  D002               	goto	l21659
 25365                           
 25366                           ; BSR set to: 1
 25367                           ;../servo.c: 308:                                 beforeMidway = TRUE;
 25368   00096C  0E01               	movlw	1
 25369   00096E  6FD5               	movwf	pollServos@beforeMidway& (0+255),b
 25370   000970                     l21659:
 25371                           
 25372                           ; BSR set to: 1
 25373                           ;../servo.c: 311:                             if (stepsPerPollSpeed[io]) {
 25374   000970  0E00               	movlw	low _stepsPerPollSpeed
 25375   000972  25D7               	addwf	pollServos@io& (0+255),w,b
 25376   000974  6ED9               	movwf	fsr2l,c
 25377   000976  6ADA               	clrf	fsr2h,c
 25378   000978  0E01               	movlw	high _stepsPerPollSpeed
 25379   00097A  22DA               	addwfc	fsr2h,f,c
 25380   00097C  50DF               	movf	indf2,w,c
 25381   00097E  B4D8               	btfsc	status,2,c
 25382   000980  D03A               	goto	l21667
 25383                           
 25384                           ; BSR set to: 1
 25385                           ;../servo.c: 312:                                 if (currentPos[io] + stepsPerPollSpeed
      +                          [io] < currentPos[io]) {
 25386   000982  51D7               	movf	pollServos@io& (0+255),w,b
 25387   000984  0FA9               	addlw	low _currentPos
 25388   000986  6ED9               	movwf	fsr2l,c
 25389   000988  6ADA               	clrf	fsr2h,c
 25390   00098A  50DF               	movf	indf2,w,c
 25391   00098C  6FCC               	movwf	??_pollServos& (0+255),b
 25392   00098E  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 25393   000990  51D7               	movf	pollServos@io& (0+255),w,b
 25394   000992  0FA9               	addlw	low _currentPos
 25395   000994  6ED9               	movwf	fsr2l,c
 25396   000996  6ADA               	clrf	fsr2h,c
 25397   000998  50DF               	movf	indf2,w,c
 25398   00099A  6FCE               	movwf	(??_pollServos+2)& (0+255),b
 25399   00099C  6BCF               	clrf	(??_pollServos+3)& (0+255),b
 25400   00099E  0E00               	movlw	low _stepsPerPollSpeed
 25401   0009A0  25D7               	addwf	pollServos@io& (0+255),w,b
 25402   0009A2  6ED9               	movwf	fsr2l,c
 25403   0009A4  6ADA               	clrf	fsr2h,c
 25404   0009A6  0E01               	movlw	high _stepsPerPollSpeed
 25405   0009A8  22DA               	addwfc	fsr2h,f,c
 25406   0009AA  50DF               	movf	indf2,w,c
 25407   0009AC  6FD0               	movwf	(??_pollServos+4)& (0+255),b
 25408   0009AE  51D0               	movf	(??_pollServos+4)& (0+255),w,b
 25409   0009B0  27CE               	addwf	(??_pollServos+2)& (0+255),f,b
 25410   0009B2  0E00               	movlw	0
 25411   0009B4  23CF               	addwfc	(??_pollServos+3)& (0+255),f,b
 25412   0009B6  51CC               	movf	??_pollServos& (0+255),w,b
 25413   0009B8  5DCE               	subwf	(??_pollServos+2)& (0+255),w,b
 25414   0009BA  51CF               	movf	(??_pollServos+3)& (0+255),w,b
 25415   0009BC  0A80               	xorlw	128
 25416   0009BE  6FD1               	movwf	(??_pollServos+5)& (0+255),b
 25417   0009C0  51CD               	movf	(??_pollServos+1)& (0+255),w,b
 25418   0009C2  0A80               	xorlw	128
 25419   0009C4  59D1               	subwfb	(??_pollServos+5)& (0+255),w,b
 25420   0009C6  B0D8               	btfsc	status,0,c
 25421   0009C8  D007               	goto	l21665
 25422                           
 25423                           ; BSR set to: 1
 25424                           ;../servo.c: 314:                                     currentPos[io] =255;
 25425   0009CA  51D7               	movf	pollServos@io& (0+255),w,b
 25426   0009CC  0FA9               	addlw	low _currentPos
 25427   0009CE  6ED9               	movwf	fsr2l,c
 25428   0009D0  6ADA               	clrf	fsr2h,c
 25429   0009D2  0EFF               	movlw	255
 25430   0009D4  6EDF               	movwf	indf2,c
 25431                           
 25432                           ;../servo.c: 315:                                 } else {
 25433   0009D6  D032               	goto	l21673
 25434   0009D8                     l21665:
 25435                           
 25436                           ; BSR set to: 1
 25437                           ;../servo.c: 316:                                     currentPos[io] += stepsPerPollSpee
      +                          d[io];
 25438   0009D8  0E00               	movlw	low _stepsPerPollSpeed
 25439   0009DA  25D7               	addwf	pollServos@io& (0+255),w,b
 25440   0009DC  6ED9               	movwf	fsr2l,c
 25441   0009DE  6ADA               	clrf	fsr2h,c
 25442   0009E0  0E01               	movlw	high _stepsPerPollSpeed
 25443   0009E2  22DA               	addwfc	fsr2h,f,c
 25444   0009E4  50DF               	movf	indf2,w,c
 25445   0009E6  6FCC               	movwf	??_pollServos& (0+255),b
 25446   0009E8  51D7               	movf	pollServos@io& (0+255),w,b
 25447   0009EA  0FA9               	addlw	low _currentPos
 25448   0009EC  6ED9               	movwf	fsr2l,c
 25449   0009EE  6ADA               	clrf	fsr2h,c
 25450   0009F0  51CC               	movf	??_pollServos& (0+255),w,b
 25451   0009F2  26DF               	addwf	indf2,f,c
 25452   0009F4  D023               	goto	l21673
 25453   0009F6                     l21667:
 25454                           
 25455                           ; BSR set to: 1
 25456                           ;../servo.c: 319:                                 pollCount[io]--;
 25457   0009F6  0E64               	movlw	low _pollCount
 25458   0009F8  25D7               	addwf	pollServos@io& (0+255),w,b
 25459   0009FA  6ED9               	movwf	fsr2l,c
 25460   0009FC  6ADA               	clrf	fsr2h,c
 25461   0009FE  0E02               	movlw	high _pollCount
 25462   000A00  22DA               	addwfc	fsr2h,f,c
 25463   000A02  06DF               	decf	indf2,f,c
 25464                           
 25465                           ;../servo.c: 320:                                 if (pollCount[io] == 0) {
 25466   000A04  0E64               	movlw	low _pollCount
 25467   000A06  25D7               	addwf	pollServos@io& (0+255),w,b
 25468   000A08  6ED9               	movwf	fsr2l,c
 25469   000A0A  6ADA               	clrf	fsr2h,c
 25470   000A0C  0E02               	movlw	high _pollCount
 25471   000A0E  22DA               	addwfc	fsr2h,f,c
 25472   000A10  50DF               	movf	indf2,w,c
 25473   000A12  A4D8               	btfss	status,2,c
 25474   000A14  D013               	goto	l21673
 25475                           
 25476                           ; BSR set to: 1
 25477                           ;../servo.c: 321:                                     currentPos[io]++;
 25478   000A16  51D7               	movf	pollServos@io& (0+255),w,b
 25479   000A18  0FA9               	addlw	low _currentPos
 25480   000A1A  6ED9               	movwf	fsr2l,c
 25481   000A1C  6ADA               	clrf	fsr2h,c
 25482   000A1E  2ADF               	incf	indf2,f,c
 25483                           
 25484                           ; BSR set to: 1
 25485                           ;../servo.c: 322:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 25486   000A20  0E74               	movlw	low _pollsPerStepSpeed
 25487   000A22  25D7               	addwf	pollServos@io& (0+255),w,b
 25488   000A24  6ED9               	movwf	fsr2l,c
 25489   000A26  6ADA               	clrf	fsr2h,c
 25490   000A28  0E02               	movlw	high _pollsPerStepSpeed
 25491   000A2A  22DA               	addwfc	fsr2h,f,c
 25492   000A2C  0E64               	movlw	low _pollCount
 25493   000A2E  25D7               	addwf	pollServos@io& (0+255),w,b
 25494   000A30  6EE1               	movwf	fsr1l,c
 25495   000A32  6AE2               	clrf	fsr1h,c
 25496   000A34  0E02               	movlw	high _pollCount
 25497   000A36  22E2               	addwfc	fsr1h,f,c
 25498   000A38  CFDF FFE7          	movff	indf2,indf1
 25499   000A3C                     l21673:
 25500                           
 25501                           ; BSR set to: 1
 25502                           ;../servo.c: 326:                             if (currentPos[io] > targetPos[io]) {
 25503   000A3C  51D7               	movf	pollServos@io& (0+255),w,b
 25504   000A3E  0FA9               	addlw	low _currentPos
 25505   000A40  6ED9               	movwf	fsr2l,c
 25506   000A42  6ADA               	clrf	fsr2h,c
 25507   000A44  0E20               	movlw	low _targetPos
 25508   000A46  25D7               	addwf	pollServos@io& (0+255),w,b
 25509   000A48  6EE1               	movwf	fsr1l,c
 25510   000A4A  6AE2               	clrf	fsr1h,c
 25511   000A4C  0E01               	movlw	high _targetPos
 25512   000A4E  22E2               	addwfc	fsr1h,f,c
 25513   000A50  50DE               	movf	postinc2,w,c
 25514   000A52  5CE6               	subwf	postinc1,w,c
 25515   000A54  B0D8               	btfsc	status,0,c
 25516   000A56  D00C               	goto	l21677
 25517                           
 25518                           ; BSR set to: 1
 25519                           ;../servo.c: 327:                                 currentPos[io] = targetPos[io];
 25520   000A58  0E20               	movlw	low _targetPos
 25521   000A5A  25D7               	addwf	pollServos@io& (0+255),w,b
 25522   000A5C  6ED9               	movwf	fsr2l,c
 25523   000A5E  6ADA               	clrf	fsr2h,c
 25524   000A60  0E01               	movlw	high _targetPos
 25525   000A62  22DA               	addwfc	fsr2h,f,c
 25526   000A64  51D7               	movf	pollServos@io& (0+255),w,b
 25527   000A66  0FA9               	addlw	low _currentPos
 25528   000A68  6EE1               	movwf	fsr1l,c
 25529   000A6A  6AE2               	clrf	fsr1h,c
 25530   000A6C  CFDF FFE7          	movff	indf2,indf1
 25531   000A70                     l21677:
 25532                           
 25533                           ; BSR set to: 1
 25534                           ;../servo.c: 329:                             if ((currentPos[io] >= midway) && beforeMi
      +                          dway) {
 25535   000A70  51D7               	movf	pollServos@io& (0+255),w,b
 25536   000A72  0FA9               	addlw	low _currentPos
 25537   000A74  6ED9               	movwf	fsr2l,c
 25538   000A76  6ADA               	clrf	fsr2h,c
 25539   000A78  51D6               	movf	pollServos@midway& (0+255),w,b
 25540   000A7A  5CDE               	subwf	postinc2,w,c
 25541   000A7C  A0D8               	btfss	status,0,c
 25542   000A7E  D0CB               	goto	l21713
 25543                           
 25544                           ; BSR set to: 1
 25545   000A80  51D5               	movf	pollServos@beforeMidway& (0+255),w,b
 25546   000A82  B4D8               	btfsc	status,2,c
 25547   000A84  D0C8               	goto	l21713
 25548                           
 25549                           ; BSR set to: 1
 25550                           ;../servo.c: 333:                                 sendProducedEvent(((8 + 4*(io))+1), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 25551   000A86  51D7               	movf	pollServos@io& (0+255),w,b
 25552   000A88  0D07               	mullw	7
 25553   000A8A  50F3               	movf	243,w,c
 25554   000A8C  0F11               	addlw	17
 25555   000A8E  EC52  F05E         	call	_getNV
 25556   000A92  0100               	movlb	0	; () banked
 25557   000A94  BD8D               	btfsc	?_getNV& (0+255),6,b
 25558   000A96  D002               	goto	u22290
 25559   000A98  0E01               	movlw	1
 25560   000A9A  D001               	goto	u22300
 25561   000A9C                     u22290:
 25562   000A9C  0E00               	movlw	0
 25563   000A9E                     u22300:
 25564   000A9E  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 25565   000AA0  0101               	movlb	1	; () banked
 25566   000AA2  51D7               	movf	pollServos@io& (0+255),w,b
 25567   000AA4  0D04               	mullw	4
 25568   000AA6  50F3               	movf	243,w,c
 25569   000AA8  0F09               	addlw	9
 25570   000AAA  EC3B  F04B         	call	_sendProducedEvent
 25571   000AAE  D0B3               	goto	l21713
 25572   000AB0                     l21683:
 25573                           
 25574                           ; BSR set to: 1
 25575   000AB0  51D7               	movf	pollServos@io& (0+255),w,b
 25576   000AB2  0FA9               	addlw	low _currentPos
 25577   000AB4  6ED9               	movwf	fsr2l,c
 25578   000AB6  6ADA               	clrf	fsr2h,c
 25579   000AB8  0E20               	movlw	low _targetPos
 25580   000ABA  25D7               	addwf	pollServos@io& (0+255),w,b
 25581   000ABC  6EE1               	movwf	fsr1l,c
 25582   000ABE  6AE2               	clrf	fsr1h,c
 25583   000AC0  0E01               	movlw	high _targetPos
 25584   000AC2  22E2               	addwfc	fsr1h,f,c
 25585   000AC4  50DE               	movf	postinc2,w,c
 25586   000AC6  5CE6               	subwf	postinc1,w,c
 25587   000AC8  B0D8               	btfsc	status,0,c
 25588   000ACA  D0A5               	goto	l21713
 25589                           
 25590                           ; BSR set to: 1
 25591                           ;../servo.c: 336:                             if (currentPos[io] > midway) {
 25592   000ACC  51D7               	movf	pollServos@io& (0+255),w,b
 25593   000ACE  0FA9               	addlw	low _currentPos
 25594   000AD0  6ED9               	movwf	fsr2l,c
 25595   000AD2  6ADA               	clrf	fsr2h,c
 25596   000AD4  50DE               	movf	postinc2,w,c
 25597   000AD6  5DD6               	subwf	pollServos@midway& (0+255),w,b
 25598   000AD8  B0D8               	btfsc	status,0,c
 25599   000ADA  D002               	goto	l21689
 25600                           
 25601                           ; BSR set to: 1
 25602                           ;../servo.c: 337:                                 beforeMidway = TRUE;
 25603   000ADC  0E01               	movlw	1
 25604   000ADE  6FD5               	movwf	pollServos@beforeMidway& (0+255),b
 25605   000AE0                     l21689:
 25606                           
 25607                           ; BSR set to: 1
 25608                           ;../servo.c: 340:                             if (stepsPerPollSpeed[io]) {
 25609   000AE0  0E00               	movlw	low _stepsPerPollSpeed
 25610   000AE2  25D7               	addwf	pollServos@io& (0+255),w,b
 25611   000AE4  6ED9               	movwf	fsr2l,c
 25612   000AE6  6ADA               	clrf	fsr2h,c
 25613   000AE8  0E01               	movlw	high _stepsPerPollSpeed
 25614   000AEA  22DA               	addwfc	fsr2h,f,c
 25615   000AEC  50DF               	movf	indf2,w,c
 25616   000AEE  B4D8               	btfsc	status,2,c
 25617   000AF0  D039               	goto	l21697
 25618                           
 25619                           ; BSR set to: 1
 25620                           ;../servo.c: 341:                                 if (currentPos[io] - stepsPerPollSpeed
      +                          [io] > currentPos[io]) {
 25621   000AF2  51D7               	movf	pollServos@io& (0+255),w,b
 25622   000AF4  0FA9               	addlw	low _currentPos
 25623   000AF6  6ED9               	movwf	fsr2l,c
 25624   000AF8  6ADA               	clrf	fsr2h,c
 25625   000AFA  50DF               	movf	indf2,w,c
 25626   000AFC  6FCC               	movwf	??_pollServos& (0+255),b
 25627   000AFE  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 25628   000B00  0E00               	movlw	low _stepsPerPollSpeed
 25629   000B02  25D7               	addwf	pollServos@io& (0+255),w,b
 25630   000B04  6ED9               	movwf	fsr2l,c
 25631   000B06  6ADA               	clrf	fsr2h,c
 25632   000B08  0E01               	movlw	high _stepsPerPollSpeed
 25633   000B0A  22DA               	addwfc	fsr2h,f,c
 25634   000B0C  50DF               	movf	indf2,w,c
 25635   000B0E  6FCE               	movwf	(??_pollServos+2)& (0+255),b
 25636   000B10  51CE               	movf	(??_pollServos+2)& (0+255),w,b
 25637   000B12  5FCC               	subwf	??_pollServos& (0+255),f,b
 25638   000B14  0E00               	movlw	0
 25639   000B16  5BCD               	subwfb	(??_pollServos+1)& (0+255),f,b
 25640   000B18  51D7               	movf	pollServos@io& (0+255),w,b
 25641   000B1A  0FA9               	addlw	low _currentPos
 25642   000B1C  6ED9               	movwf	fsr2l,c
 25643   000B1E  6ADA               	clrf	fsr2h,c
 25644   000B20  50DF               	movf	indf2,w,c
 25645   000B22  6FCF               	movwf	(??_pollServos+3)& (0+255),b
 25646   000B24  6BD0               	clrf	(??_pollServos+4)& (0+255),b
 25647   000B26  51CC               	movf	??_pollServos& (0+255),w,b
 25648   000B28  5DCF               	subwf	(??_pollServos+3)& (0+255),w,b
 25649   000B2A  51D0               	movf	(??_pollServos+4)& (0+255),w,b
 25650   000B2C  0A80               	xorlw	128
 25651   000B2E  6FD1               	movwf	(??_pollServos+5)& (0+255),b
 25652   000B30  51CD               	movf	(??_pollServos+1)& (0+255),w,b
 25653   000B32  0A80               	xorlw	128
 25654   000B34  59D1               	subwfb	(??_pollServos+5)& (0+255),w,b
 25655   000B36  B0D8               	btfsc	status,0,c
 25656   000B38  D006               	goto	l21695
 25657                           
 25658                           ; BSR set to: 1
 25659                           ;../servo.c: 343:                                     currentPos[io] = 0;
 25660   000B3A  51D7               	movf	pollServos@io& (0+255),w,b
 25661   000B3C  0FA9               	addlw	low _currentPos
 25662   000B3E  6ED9               	movwf	fsr2l,c
 25663   000B40  6ADA               	clrf	fsr2h,c
 25664   000B42  6ADF               	clrf	indf2,c
 25665                           
 25666                           ;../servo.c: 344:                                 } else {
 25667   000B44  D032               	goto	l21703
 25668   000B46                     l21695:
 25669                           
 25670                           ; BSR set to: 1
 25671                           ;../servo.c: 345:                                     currentPos[io] -= stepsPerPollSpee
      +                          d[io];
 25672   000B46  0E00               	movlw	low _stepsPerPollSpeed
 25673   000B48  25D7               	addwf	pollServos@io& (0+255),w,b
 25674   000B4A  6ED9               	movwf	fsr2l,c
 25675   000B4C  6ADA               	clrf	fsr2h,c
 25676   000B4E  0E01               	movlw	high _stepsPerPollSpeed
 25677   000B50  22DA               	addwfc	fsr2h,f,c
 25678   000B52  50DF               	movf	indf2,w,c
 25679   000B54  6FCC               	movwf	??_pollServos& (0+255),b
 25680   000B56  51D7               	movf	pollServos@io& (0+255),w,b
 25681   000B58  0FA9               	addlw	low _currentPos
 25682   000B5A  6ED9               	movwf	fsr2l,c
 25683   000B5C  6ADA               	clrf	fsr2h,c
 25684   000B5E  51CC               	movf	??_pollServos& (0+255),w,b
 25685   000B60  5EDF               	subwf	indf2,f,c
 25686   000B62  D023               	goto	l21703
 25687   000B64                     l21697:
 25688                           
 25689                           ; BSR set to: 1
 25690                           ;../servo.c: 348:                                 pollCount[io]--;
 25691   000B64  0E64               	movlw	low _pollCount
 25692   000B66  25D7               	addwf	pollServos@io& (0+255),w,b
 25693   000B68  6ED9               	movwf	fsr2l,c
 25694   000B6A  6ADA               	clrf	fsr2h,c
 25695   000B6C  0E02               	movlw	high _pollCount
 25696   000B6E  22DA               	addwfc	fsr2h,f,c
 25697   000B70  06DF               	decf	indf2,f,c
 25698                           
 25699                           ;../servo.c: 349:                                 if (pollCount[io] == 0) {
 25700   000B72  0E64               	movlw	low _pollCount
 25701   000B74  25D7               	addwf	pollServos@io& (0+255),w,b
 25702   000B76  6ED9               	movwf	fsr2l,c
 25703   000B78  6ADA               	clrf	fsr2h,c
 25704   000B7A  0E02               	movlw	high _pollCount
 25705   000B7C  22DA               	addwfc	fsr2h,f,c
 25706   000B7E  50DF               	movf	indf2,w,c
 25707   000B80  A4D8               	btfss	status,2,c
 25708   000B82  D013               	goto	l21703
 25709                           
 25710                           ; BSR set to: 1
 25711                           ;../servo.c: 350:                                     currentPos[io]--;
 25712   000B84  51D7               	movf	pollServos@io& (0+255),w,b
 25713   000B86  0FA9               	addlw	low _currentPos
 25714   000B88  6ED9               	movwf	fsr2l,c
 25715   000B8A  6ADA               	clrf	fsr2h,c
 25716   000B8C  06DF               	decf	indf2,f,c
 25717                           
 25718                           ; BSR set to: 1
 25719                           ;../servo.c: 351:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 25720   000B8E  0E74               	movlw	low _pollsPerStepSpeed
 25721   000B90  25D7               	addwf	pollServos@io& (0+255),w,b
 25722   000B92  6ED9               	movwf	fsr2l,c
 25723   000B94  6ADA               	clrf	fsr2h,c
 25724   000B96  0E02               	movlw	high _pollsPerStepSpeed
 25725   000B98  22DA               	addwfc	fsr2h,f,c
 25726   000B9A  0E64               	movlw	low _pollCount
 25727   000B9C  25D7               	addwf	pollServos@io& (0+255),w,b
 25728   000B9E  6EE1               	movwf	fsr1l,c
 25729   000BA0  6AE2               	clrf	fsr1h,c
 25730   000BA2  0E02               	movlw	high _pollCount
 25731   000BA4  22E2               	addwfc	fsr1h,f,c
 25732   000BA6  CFDF FFE7          	movff	indf2,indf1
 25733   000BAA                     l21703:
 25734                           
 25735                           ; BSR set to: 1
 25736                           ;../servo.c: 355:                             if (currentPos[io] < targetPos[io]) {
 25737   000BAA  0E20               	movlw	low _targetPos
 25738   000BAC  25D7               	addwf	pollServos@io& (0+255),w,b
 25739   000BAE  6ED9               	movwf	fsr2l,c
 25740   000BB0  6ADA               	clrf	fsr2h,c
 25741   000BB2  0E01               	movlw	high _targetPos
 25742   000BB4  22DA               	addwfc	fsr2h,f,c
 25743   000BB6  51D7               	movf	pollServos@io& (0+255),w,b
 25744   000BB8  0FA9               	addlw	low _currentPos
 25745   000BBA  6EE1               	movwf	fsr1l,c
 25746   000BBC  6AE2               	clrf	fsr1h,c
 25747   000BBE  50DE               	movf	postinc2,w,c
 25748   000BC0  5CE6               	subwf	postinc1,w,c
 25749   000BC2  B0D8               	btfsc	status,0,c
 25750   000BC4  D00C               	goto	l21707
 25751                           
 25752                           ; BSR set to: 1
 25753                           ;../servo.c: 356:                                 currentPos[io] = targetPos[io];
 25754   000BC6  0E20               	movlw	low _targetPos
 25755   000BC8  25D7               	addwf	pollServos@io& (0+255),w,b
 25756   000BCA  6ED9               	movwf	fsr2l,c
 25757   000BCC  6ADA               	clrf	fsr2h,c
 25758   000BCE  0E01               	movlw	high _targetPos
 25759   000BD0  22DA               	addwfc	fsr2h,f,c
 25760   000BD2  51D7               	movf	pollServos@io& (0+255),w,b
 25761   000BD4  0FA9               	addlw	low _currentPos
 25762   000BD6  6EE1               	movwf	fsr1l,c
 25763   000BD8  6AE2               	clrf	fsr1h,c
 25764   000BDA  CFDF FFE7          	movff	indf2,indf1
 25765   000BDE                     l21707:
 25766                           
 25767                           ; BSR set to: 1
 25768                           ;../servo.c: 358:                             if ((currentPos[io] <= midway) && beforeMi
      +                          dway) {
 25769   000BDE  51D7               	movf	pollServos@io& (0+255),w,b
 25770   000BE0  0FA9               	addlw	low _currentPos
 25771   000BE2  6ED9               	movwf	fsr2l,c
 25772   000BE4  6ADA               	clrf	fsr2h,c
 25773   000BE6  50DE               	movf	postinc2,w,c
 25774   000BE8  5DD6               	subwf	pollServos@midway& (0+255),w,b
 25775   000BEA  A0D8               	btfss	status,0,c
 25776   000BEC  D014               	goto	l21713
 25777                           
 25778                           ; BSR set to: 1
 25779   000BEE  51D5               	movf	pollServos@beforeMidway& (0+255),w,b
 25780   000BF0  B4D8               	btfsc	status,2,c
 25781   000BF2  D011               	goto	l21713
 25782                           
 25783                           ; BSR set to: 1
 25784                           ;../servo.c: 360:                                 sendProducedEvent(((8 + 4*(io))+1), ge
      +                          tNV((16 + 7*(io) + 1)) & 0x40);
 25785   000BF4  51D7               	movf	pollServos@io& (0+255),w,b
 25786   000BF6  0D07               	mullw	7
 25787   000BF8  50F3               	movf	243,w,c
 25788   000BFA  0F11               	addlw	17
 25789   000BFC  EC52  F05E         	call	_getNV
 25790   000C00  0100               	movlb	0	; () banked
 25791   000C02  518D               	movf	?_getNV& (0+255),w,b
 25792   000C04  0B40               	andlw	64
 25793   000C06  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 25794   000C08  0101               	movlb	1	; () banked
 25795   000C0A  51D7               	movf	pollServos@io& (0+255),w,b
 25796   000C0C  0D04               	mullw	4
 25797   000C0E  50F3               	movf	243,w,c
 25798   000C10  0F09               	addlw	9
 25799   000C12  EC3B  F04B         	call	_sendProducedEvent
 25800   000C16                     l21713:
 25801                           
 25802                           ;../servo.c: 363:                         if (targetPos[io] == currentPos[io]) {
 25803   000C16  0101               	movlb	1	; () banked
 25804   000C18  51D7               	movf	pollServos@io& (0+255),w,b
 25805   000C1A  0FA9               	addlw	low _currentPos
 25806   000C1C  6ED9               	movwf	fsr2l,c
 25807   000C1E  6ADA               	clrf	fsr2h,c
 25808   000C20  0E20               	movlw	low _targetPos
 25809   000C22  25D7               	addwf	pollServos@io& (0+255),w,b
 25810   000C24  6EE1               	movwf	fsr1l,c
 25811   000C26  6AE2               	clrf	fsr1h,c
 25812   000C28  0E01               	movlw	high _targetPos
 25813   000C2A  22E2               	addwfc	fsr1h,f,c
 25814   000C2C  50DE               	movf	postinc2,w,c
 25815   000C2E  18E6               	xorwf	postinc1,w,c
 25816   000C30  A4D8               	btfss	status,2,c
 25817   000C32  EF49  F00B         	goto	l21879
 25818                           
 25819                           ; BSR set to: 1
 25820                           ;../servo.c: 364:                             servoState[io] = SS_STOPPED;
 25821   000C36  0E10               	movlw	low _servoState
 25822   000C38  25D7               	addwf	pollServos@io& (0+255),w,b
 25823   000C3A  6ED9               	movwf	fsr2l,c
 25824   000C3C  6ADA               	clrf	fsr2h,c
 25825   000C3E  0E01               	movlw	high _servoState
 25826   000C40  22DA               	addwfc	fsr2h,f,c
 25827   000C42  0E01               	movlw	1
 25828   000C44  6EDF               	movwf	indf2,c
 25829                           
 25830                           ; BSR set to: 1
 25831                           ;../servo.c: 365:                             ticksWhenStopped[io].val = tickGet();
 25832   000C46  ECE4  F05A         	call	_tickGet	;wreg free
 25833   000C4A  0101               	movlb	1	; () banked
 25834   000C4C  51D7               	movf	pollServos@io& (0+255),w,b
 25835   000C4E  0D04               	mullw	4
 25836   000C50  0E88               	movlw	low _ticksWhenStopped
 25837   000C52  24F3               	addwf	243,w,c
 25838   000C54  6ED9               	movwf	fsr2l,c
 25839   000C56  0E03               	movlw	high _ticksWhenStopped
 25840   000C58  20F4               	addwfc	prodh,w,c
 25841   000C5A  6EDA               	movwf	fsr2h,c
 25842   000C5C  0100               	movlb	0	; () banked
 25843   000C5E  C08D  FFDE         	movff	?_tickGet,postinc2
 25844   000C62  C08E  FFDE         	movff	?_tickGet+1,postinc2
 25845   000C66  C08F  FFDE         	movff	?_tickGet+2,postinc2
 25846   000C6A  C090  FFDE         	movff	?_tickGet+3,postinc2
 25847                           
 25848                           ; BSR set to: 0
 25849                           ;../servo.c: 367:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           2))) {
 25850   000C6E  0101               	movlb	1	; () banked
 25851   000C70  51D7               	movf	pollServos@io& (0+255),w,b
 25852   000C72  0D07               	mullw	7
 25853   000C74  50F3               	movf	243,w,c
 25854   000C76  0F12               	addlw	18
 25855   000C78  EC52  F05E         	call	_getNV
 25856   000C7C  0101               	movlb	1	; () banked
 25857   000C7E  51D7               	movf	pollServos@io& (0+255),w,b
 25858   000C80  0FA9               	addlw	low _currentPos
 25859   000C82  6ED9               	movwf	fsr2l,c
 25860   000C84  6ADA               	clrf	fsr2h,c
 25861   000C86  50DF               	movf	indf2,w,c
 25862   000C88  6FCC               	movwf	??_pollServos& (0+255),b
 25863   000C8A  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 25864   000C8C  0100               	movlb	0	; () banked
 25865   000C8E  518D               	movf	?_getNV& (0+255),w,b
 25866   000C90  0101               	movlb	1	; () banked
 25867   000C92  19CC               	xorwf	??_pollServos& (0+255),w,b
 25868   000C94  E11B               	bnz	l21723
 25869   000C96  0100               	movlb	0	; () banked
 25870   000C98  518E               	movf	(?_getNV+1)& (0+255),w,b
 25871   000C9A  0101               	movlb	1	; () banked
 25872   000C9C  19CD               	xorwf	(??_pollServos+1)& (0+255),w,b
 25873   000C9E  A4D8               	btfss	status,2,c
 25874   000CA0  D015               	goto	l21723
 25875                           
 25876                           ; BSR set to: 1
 25877                           ;../servo.c: 368:                                 sendProducedEvent(((8 + 4*(io))+0), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 25878   000CA2  51D7               	movf	pollServos@io& (0+255),w,b
 25879   000CA4  0D07               	mullw	7
 25880   000CA6  50F3               	movf	243,w,c
 25881   000CA8  0F11               	addlw	17
 25882   000CAA  EC52  F05E         	call	_getNV
 25883   000CAE  0100               	movlb	0	; () banked
 25884   000CB0  BD8D               	btfsc	?_getNV& (0+255),6,b
 25885   000CB2  D002               	goto	u22410
 25886   000CB4  0E01               	movlw	1
 25887   000CB6  D001               	goto	u22420
 25888   000CB8                     u22410:
 25889   000CB8  0E00               	movlw	0
 25890   000CBA                     u22420:
 25891   000CBA  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 25892   000CBC  0101               	movlb	1	; () banked
 25893   000CBE  51D7               	movf	pollServos@io& (0+255),w,b
 25894   000CC0  0D04               	mullw	4
 25895   000CC2  50F3               	movf	243,w,c
 25896   000CC4  0F08               	addlw	8
 25897   000CC6  EC3B  F04B         	call	_sendProducedEvent
 25898                           
 25899                           ;../servo.c: 369:                             } else {
 25900   000CCA  D014               	goto	l21725
 25901   000CCC                     l21723:
 25902                           
 25903                           ; BSR set to: 1
 25904                           ;../servo.c: 370:                                 sendProducedEvent(((8 + 4*(io))+2), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 25905   000CCC  51D7               	movf	pollServos@io& (0+255),w,b
 25906   000CCE  0D07               	mullw	7
 25907   000CD0  50F3               	movf	243,w,c
 25908   000CD2  0F11               	addlw	17
 25909   000CD4  EC52  F05E         	call	_getNV
 25910   000CD8  0100               	movlb	0	; () banked
 25911   000CDA  BD8D               	btfsc	?_getNV& (0+255),6,b
 25912   000CDC  D002               	goto	u22430
 25913   000CDE  0E01               	movlw	1
 25914   000CE0  D001               	goto	u22440
 25915   000CE2                     u22430:
 25916   000CE2  0E00               	movlw	0
 25917   000CE4                     u22440:
 25918   000CE4  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 25919   000CE6  0101               	movlb	1	; () banked
 25920   000CE8  51D7               	movf	pollServos@io& (0+255),w,b
 25921   000CEA  0D04               	mullw	4
 25922   000CEC  50F3               	movf	243,w,c
 25923   000CEE  0F0A               	addlw	10
 25924   000CF0  EC3B  F04B         	call	_sendProducedEvent
 25925   000CF4                     l21725:
 25926                           
 25927                           ;../servo.c: 372:                             writeNVM(EEPROM_NVM_TYPE, ((eeprom_address
      +                          _t)((0x3FF -8))-25)+io, currentPos[io]);
 25928   000CF4  0EDE               	movlw	222
 25929   000CF6  0101               	movlb	1	; () banked
 25930   000CF8  25D7               	addwf	pollServos@io& (0+255),w,b
 25931   000CFA  6FCC               	movwf	??_pollServos& (0+255),b
 25932   000CFC  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 25933   000CFE  0E03               	movlw	3
 25934   000D00  23CD               	addwfc	(??_pollServos+1)& (0+255),f,b
 25935   000D02  C1CC  F0A4         	movff	??_pollServos,writeNVM@index
 25936   000D06  C1CD  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 25937   000D0A  0100               	movlb	0	; () banked
 25938   000D0C  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 25939   000D0E  0101               	movlb	1	; () banked
 25940   000D10  51D7               	movf	pollServos@io& (0+255),w,b
 25941   000D12  0FA9               	addlw	low _currentPos
 25942   000D14  6ED9               	movwf	fsr2l,c
 25943   000D16  6ADA               	clrf	fsr2h,c
 25944   000D18  50DF               	movf	indf2,w,c
 25945   000D1A  0100               	movlb	0	; () banked
 25946   000D1C  6FA7               	movwf	writeNVM@value& (0+255),b
 25947   000D1E  0E00               	movlw	0
 25948   000D20  EC60  F05C         	call	_writeNVM
 25949   000D24  EF49  F00B         	goto	l21879
 25950   000D28                     l21729:
 25951                           
 25952                           ; BSR set to: 1
 25953   000D28  0E10               	movlw	low _servoState
 25954   000D2A  25D7               	addwf	pollServos@io& (0+255),w,b
 25955   000D2C  6ED9               	movwf	fsr2l,c
 25956   000D2E  6ADA               	clrf	fsr2h,c
 25957   000D30  0E01               	movlw	high _servoState
 25958   000D32  22DA               	addwfc	fsr2h,f,c
 25959   000D34  50DF               	movf	indf2,w,c
 25960   000D36  6FCC               	movwf	??_pollServos& (0+255),b
 25961   000D38  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 25962                           
 25963                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25964                           ; Switch size 1, requested type "simple"
 25965                           ; Number of cases is 1, Range of values is 0 to 0
 25966                           ; switch strategies available:
 25967                           ; Name         Instructions Cycles
 25968                           ; simple_byte            4     3 (average)
 25969                           ;	Chosen strategy is simple_byte
 25970   000D3A  51CD               	movf	(??_pollServos+1)& (0+255),w,b
 25971   000D3C  0A00               	xorlw	0	; case 0
 25972   000D3E  A4D8               	btfss	status,2,c
 25973   000D40  EF49  F00B         	goto	l21879
 25974                           
 25975                           ; BSR set to: 1
 25976                           ; Switch size 1, requested type "simple"
 25977                           ; Number of cases is 4, Range of values is 0 to 3
 25978                           ; switch strategies available:
 25979                           ; Name         Instructions Cycles
 25980                           ; simple_byte           13     7 (average)
 25981                           ;	Chosen strategy is simple_byte
 25982   000D44  51CC               	movf	??_pollServos& (0+255),w,b
 25983   000D46  0A00               	xorlw	0	; case 0
 25984   000D48  B4D8               	btfsc	status,2,c
 25985   000D4A  EF49  F00B         	goto	l21879
 25986   000D4E  0A01               	xorlw	1	; case 1
 25987   000D50  B4D8               	btfsc	status,2,c
 25988   000D52  EF49  F00B         	goto	l21879
 25989   000D56  0A03               	xorlw	3	; case 2
 25990   000D58  B4D8               	btfsc	status,2,c
 25991   000D5A  D5F2               	goto	l21653
 25992   000D5C  0A01               	xorlw	1	; case 3
 25993   000D5E  B4D8               	btfsc	status,2,c
 25994   000D60  D5AA               	goto	l21645
 25995   000D62  EF49  F00B         	goto	l21879
 25996   000D66                     l21731:
 25997                           
 25998                           ; BSR set to: 1
 25999                           ;../servo.c: 383:                         initBounce(io);
 26000   000D66  51D7               	movf	pollServos@io& (0+255),w,b
 26001   000D68  ECAE  F060         	call	_initBounce
 26002                           
 26003                           ;../servo.c: 384:                         servoState[io] = SS_MOVING;
 26004   000D6C  0E10               	movlw	low _servoState
 26005   000D6E  0101               	movlb	1	; () banked
 26006   000D70  25D7               	addwf	pollServos@io& (0+255),w,b
 26007   000D72  6ED9               	movwf	fsr2l,c
 26008   000D74  6ADA               	clrf	fsr2h,c
 26009   000D76  0E01               	movlw	high _servoState
 26010   000D78  22DA               	addwfc	fsr2h,f,c
 26011   000D7A  0E02               	movlw	2
 26012   000D7C  6EDF               	movwf	indf2,c
 26013                           
 26014                           ; BSR set to: 1
 26015                           ;../servo.c: 385:                         loopCount[io] = 0;
 26016   000D7E  0E54               	movlw	low _loopCount
 26017   000D80  25D7               	addwf	pollServos@io& (0+255),w,b
 26018   000D82  6ED9               	movwf	fsr2l,c
 26019   000D84  6ADA               	clrf	fsr2h,c
 26020   000D86  0E02               	movlw	high _loopCount
 26021   000D88  22DA               	addwfc	fsr2h,f,c
 26022   000D8A  6ADF               	clrf	indf2,c
 26023   000D8C                     l21737:
 26024                           
 26025                           ; BSR set to: 1
 26026                           ;../servo.c: 389:                         loopCount[io]++;
 26027   000D8C  0E54               	movlw	low _loopCount
 26028   000D8E  25D7               	addwf	pollServos@io& (0+255),w,b
 26029   000D90  6ED9               	movwf	fsr2l,c
 26030   000D92  6ADA               	clrf	fsr2h,c
 26031   000D94  0E02               	movlw	high _loopCount
 26032   000D96  22DA               	addwfc	fsr2h,f,c
 26033   000D98  2ADF               	incf	indf2,f,c
 26034                           
 26035                           ; BSR set to: 1
 26036                           ;../servo.c: 390:                         if (loopCount[io] >= 255) {
 26037   000D9A  0E54               	movlw	low _loopCount
 26038   000D9C  25D7               	addwf	pollServos@io& (0+255),w,b
 26039   000D9E  6ED9               	movwf	fsr2l,c
 26040   000DA0  6ADA               	clrf	fsr2h,c
 26041   000DA2  0E02               	movlw	high _loopCount
 26042   000DA4  22DA               	addwfc	fsr2h,f,c
 26043   000DA6  28DE               	incf	postinc2,w,c
 26044   000DA8  A4D8               	btfss	status,2,c
 26045   000DAA  D057               	goto	l21751
 26046                           
 26047                           ; BSR set to: 1
 26048                           ;../servo.c: 391:                             servoState[io] = SS_STOPPED;
 26049   000DAC  0E10               	movlw	low _servoState
 26050   000DAE  25D7               	addwf	pollServos@io& (0+255),w,b
 26051   000DB0  6ED9               	movwf	fsr2l,c
 26052   000DB2  6ADA               	clrf	fsr2h,c
 26053   000DB4  0E01               	movlw	high _servoState
 26054   000DB6  22DA               	addwfc	fsr2h,f,c
 26055   000DB8  0E01               	movlw	1
 26056   000DBA  6EDF               	movwf	indf2,c
 26057                           
 26058                           ; BSR set to: 1
 26059                           ;../servo.c: 392:                             ticksWhenStopped[io].val = tickGet();
 26060   000DBC  ECE4  F05A         	call	_tickGet	;wreg free
 26061   000DC0  0101               	movlb	1	; () banked
 26062   000DC2  51D7               	movf	pollServos@io& (0+255),w,b
 26063   000DC4  0D04               	mullw	4
 26064   000DC6  0E88               	movlw	low _ticksWhenStopped
 26065   000DC8  24F3               	addwf	243,w,c
 26066   000DCA  6ED9               	movwf	fsr2l,c
 26067   000DCC  0E03               	movlw	high _ticksWhenStopped
 26068   000DCE  20F4               	addwfc	prodh,w,c
 26069   000DD0  6EDA               	movwf	fsr2h,c
 26070   000DD2  0100               	movlb	0	; () banked
 26071   000DD4  C08D  FFDE         	movff	?_tickGet,postinc2
 26072   000DD8  C08E  FFDE         	movff	?_tickGet+1,postinc2
 26073   000DDC  C08F  FFDE         	movff	?_tickGet+2,postinc2
 26074   000DE0  C090  FFDE         	movff	?_tickGet+3,postinc2
 26075                           
 26076                           ; BSR set to: 0
 26077                           ;../servo.c: 393:                             currentPos[io] = targetPos[io];
 26078   000DE4  0E20               	movlw	low _targetPos
 26079   000DE6  0101               	movlb	1	; () banked
 26080   000DE8  25D7               	addwf	pollServos@io& (0+255),w,b
 26081   000DEA  6ED9               	movwf	fsr2l,c
 26082   000DEC  6ADA               	clrf	fsr2h,c
 26083   000DEE  0E01               	movlw	high _targetPos
 26084   000DF0  22DA               	addwfc	fsr2h,f,c
 26085   000DF2  51D7               	movf	pollServos@io& (0+255),w,b
 26086   000DF4  0FA9               	addlw	low _currentPos
 26087   000DF6  6EE1               	movwf	fsr1l,c
 26088   000DF8  6AE2               	clrf	fsr1h,c
 26089   000DFA  CFDF FFE7          	movff	indf2,indf1
 26090                           
 26091                           ; BSR set to: 1
 26092                           ;../servo.c: 394:                             sendProducedEvent(((8 + 4*(io))+0), !(getN
      +                          V((16 + 7*(io) + 1)) & 0x40));
 26093   000DFE  51D7               	movf	pollServos@io& (0+255),w,b
 26094   000E00  0D07               	mullw	7
 26095   000E02  50F3               	movf	243,w,c
 26096   000E04  0F11               	addlw	17
 26097   000E06  EC52  F05E         	call	_getNV
 26098   000E0A  0100               	movlb	0	; () banked
 26099   000E0C  BD8D               	btfsc	?_getNV& (0+255),6,b
 26100   000E0E  D002               	goto	u22460
 26101   000E10  0E01               	movlw	1
 26102   000E12  D001               	goto	u22470
 26103   000E14                     u22460:
 26104   000E14  0E00               	movlw	0
 26105   000E16                     u22470:
 26106   000E16  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 26107   000E18  0101               	movlb	1	; () banked
 26108   000E1A  51D7               	movf	pollServos@io& (0+255),w,b
 26109   000E1C  0D04               	mullw	4
 26110   000E1E  50F3               	movf	243,w,c
 26111   000E20  0F08               	addlw	8
 26112   000E22  EC3B  F04B         	call	_sendProducedEvent
 26113                           
 26114                           ;../servo.c: 395:                             writeNVM(EEPROM_NVM_TYPE, ((eeprom_address
      +                          _t)((0x3FF -8))-25)+io, currentPos[io]);
 26115   000E26  0EDE               	movlw	222
 26116   000E28  0101               	movlb	1	; () banked
 26117   000E2A  25D7               	addwf	pollServos@io& (0+255),w,b
 26118   000E2C  6FCC               	movwf	??_pollServos& (0+255),b
 26119   000E2E  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 26120   000E30  0E03               	movlw	3
 26121   000E32  23CD               	addwfc	(??_pollServos+1)& (0+255),f,b
 26122   000E34  C1CC  F0A4         	movff	??_pollServos,writeNVM@index
 26123   000E38  C1CD  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 26124   000E3C  0100               	movlb	0	; () banked
 26125   000E3E  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 26126   000E40  0101               	movlb	1	; () banked
 26127   000E42  51D7               	movf	pollServos@io& (0+255),w,b
 26128   000E44  0FA9               	addlw	low _currentPos
 26129   000E46  6ED9               	movwf	fsr2l,c
 26130   000E48  6ADA               	clrf	fsr2h,c
 26131   000E4A  50DF               	movf	indf2,w,c
 26132   000E4C  0100               	movlb	0	; () banked
 26133   000E4E  6FA7               	movwf	writeNVM@value& (0+255),b
 26134   000E50  0E00               	movlw	0
 26135   000E52  EC60  F05C         	call	_writeNVM
 26136                           
 26137                           ;../servo.c: 396:                             break;
 26138   000E56  EF49  F00B         	goto	l21879
 26139   000E5A                     l21751:
 26140                           
 26141                           ; BSR set to: 1
 26142                           ;../servo.c: 399:                         target = (uint8_t)getNV((16 + 7*(io) + 2));
 26143   000E5A  51D7               	movf	pollServos@io& (0+255),w,b
 26144   000E5C  0D07               	mullw	7
 26145   000E5E  50F3               	movf	243,w,c
 26146   000E60  0F12               	addlw	18
 26147   000E62  EC52  F05E         	call	_getNV
 26148   000E66  0100               	movlb	0	; () banked
 26149   000E68  518D               	movf	?_getNV& (0+255),w,b
 26150   000E6A  0101               	movlb	1	; () banked
 26151   000E6C  6FD4               	movwf	pollServos@target& (0+255),b
 26152                           
 26153                           ; BSR set to: 1
 26154                           ;../servo.c: 403:                         if (targetPos[io] == target) {
 26155   000E6E  0E20               	movlw	low _targetPos
 26156   000E70  25D7               	addwf	pollServos@io& (0+255),w,b
 26157   000E72  6ED9               	movwf	fsr2l,c
 26158   000E74  6ADA               	clrf	fsr2h,c
 26159   000E76  0E01               	movlw	high _targetPos
 26160   000E78  22DA               	addwfc	fsr2h,f,c
 26161   000E7A  51D4               	movf	pollServos@target& (0+255),w,b
 26162   000E7C  18DE               	xorwf	postinc2,w,c
 26163   000E7E  A4D8               	btfss	status,2,c
 26164   000E80  D05E               	goto	l21767
 26165                           
 26166                           ; BSR set to: 1
 26167                           ;../servo.c: 404:                             if (bounceUp(io)) {
 26168   000E82  51D7               	movf	pollServos@io& (0+255),w,b
 26169   000E84  EC2C  F02D         	call	_bounceUp
 26170   000E88  0900               	iorlw	0
 26171   000E8A  B4D8               	btfsc	status,2,c
 26172   000E8C  EF49  F00B         	goto	l21879
 26173                           
 26174                           ;../servo.c: 405:                                 servoState[io] = SS_STOPPED;
 26175   000E90  0E10               	movlw	low _servoState
 26176   000E92  0101               	movlb	1	; () banked
 26177   000E94  25D7               	addwf	pollServos@io& (0+255),w,b
 26178   000E96  6ED9               	movwf	fsr2l,c
 26179   000E98  6ADA               	clrf	fsr2h,c
 26180   000E9A  0E01               	movlw	high _servoState
 26181   000E9C  22DA               	addwfc	fsr2h,f,c
 26182   000E9E  0E01               	movlw	1
 26183   000EA0  6EDF               	movwf	indf2,c
 26184                           
 26185                           ; BSR set to: 1
 26186                           ;../servo.c: 406:                                 ticksWhenStopped[io].val = tickGet();
 26187   000EA2  ECE4  F05A         	call	_tickGet	;wreg free
 26188   000EA6  0101               	movlb	1	; () banked
 26189   000EA8  51D7               	movf	pollServos@io& (0+255),w,b
 26190   000EAA  0D04               	mullw	4
 26191   000EAC  0E88               	movlw	low _ticksWhenStopped
 26192   000EAE  24F3               	addwf	243,w,c
 26193   000EB0  6ED9               	movwf	fsr2l,c
 26194   000EB2  0E03               	movlw	high _ticksWhenStopped
 26195   000EB4  20F4               	addwfc	prodh,w,c
 26196   000EB6  6EDA               	movwf	fsr2h,c
 26197   000EB8  0100               	movlb	0	; () banked
 26198   000EBA  C08D  FFDE         	movff	?_tickGet,postinc2
 26199   000EBE  C08E  FFDE         	movff	?_tickGet+1,postinc2
 26200   000EC2  C08F  FFDE         	movff	?_tickGet+2,postinc2
 26201   000EC6  C090  FFDE         	movff	?_tickGet+3,postinc2
 26202                           
 26203                           ; BSR set to: 0
 26204                           ;../servo.c: 407:                                 currentPos[io] = targetPos[io];
 26205   000ECA  0E20               	movlw	low _targetPos
 26206   000ECC  0101               	movlb	1	; () banked
 26207   000ECE  25D7               	addwf	pollServos@io& (0+255),w,b
 26208   000ED0  6ED9               	movwf	fsr2l,c
 26209   000ED2  6ADA               	clrf	fsr2h,c
 26210   000ED4  0E01               	movlw	high _targetPos
 26211   000ED6  22DA               	addwfc	fsr2h,f,c
 26212   000ED8  51D7               	movf	pollServos@io& (0+255),w,b
 26213   000EDA  0FA9               	addlw	low _currentPos
 26214   000EDC  6EE1               	movwf	fsr1l,c
 26215   000EDE  6AE2               	clrf	fsr1h,c
 26216   000EE0  CFDF FFE7          	movff	indf2,indf1
 26217                           
 26218                           ; BSR set to: 1
 26219                           ;../servo.c: 408:                                 sendProducedEvent(((8 + 4*(io))+0), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 26220   000EE4  51D7               	movf	pollServos@io& (0+255),w,b
 26221   000EE6  0D07               	mullw	7
 26222   000EE8  50F3               	movf	243,w,c
 26223   000EEA  0F11               	addlw	17
 26224   000EEC  EC52  F05E         	call	_getNV
 26225   000EF0  0100               	movlb	0	; () banked
 26226   000EF2  BD8D               	btfsc	?_getNV& (0+255),6,b
 26227   000EF4  D002               	goto	u22500
 26228   000EF6  0E01               	movlw	1
 26229   000EF8  D001               	goto	u22510
 26230   000EFA                     u22500:
 26231   000EFA  0E00               	movlw	0
 26232   000EFC                     u22510:
 26233   000EFC  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 26234   000EFE  0101               	movlb	1	; () banked
 26235   000F00  51D7               	movf	pollServos@io& (0+255),w,b
 26236   000F02  0D04               	mullw	4
 26237   000F04  50F3               	movf	243,w,c
 26238   000F06  0F08               	addlw	8
 26239   000F08  EC3B  F04B         	call	_sendProducedEvent
 26240                           
 26241                           ;../servo.c: 409:                                 writeNVM(EEPROM_NVM_TYPE, ((eeprom_add
      +                          ress_t)((0x3FF -8))-25)+io, currentPos[io]);
 26242   000F0C  0EDE               	movlw	222
 26243   000F0E  0101               	movlb	1	; () banked
 26244   000F10  25D7               	addwf	pollServos@io& (0+255),w,b
 26245   000F12  6FCC               	movwf	??_pollServos& (0+255),b
 26246   000F14  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 26247   000F16  0E03               	movlw	3
 26248   000F18  23CD               	addwfc	(??_pollServos+1)& (0+255),f,b
 26249   000F1A  C1CC  F0A4         	movff	??_pollServos,writeNVM@index
 26250   000F1E  C1CD  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 26251   000F22  0100               	movlb	0	; () banked
 26252   000F24  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 26253   000F26  0101               	movlb	1	; () banked
 26254   000F28  51D7               	movf	pollServos@io& (0+255),w,b
 26255   000F2A  0FA9               	addlw	low _currentPos
 26256   000F2C  6ED9               	movwf	fsr2l,c
 26257   000F2E  6ADA               	clrf	fsr2h,c
 26258   000F30  50DF               	movf	indf2,w,c
 26259   000F32  0100               	movlb	0	; () banked
 26260   000F34  6FA7               	movwf	writeNVM@value& (0+255),b
 26261   000F36  0E00               	movlw	0
 26262   000F38  EC60  F05C         	call	_writeNVM
 26263   000F3C  D3AA               	goto	l21879
 26264   000F3E                     l21767:
 26265                           
 26266                           ; BSR set to: 1
 26267                           ;../servo.c: 412:                             if (bounceDown(io)) {
 26268   000F3E  51D7               	movf	pollServos@io& (0+255),w,b
 26269   000F40  EC56  F014         	call	_bounceDown
 26270   000F44  0900               	iorlw	0
 26271   000F46  B4D8               	btfsc	status,2,c
 26272   000F48  D3A4               	goto	l21879
 26273                           
 26274                           ;../servo.c: 413:                                 servoState[io] = SS_STOPPED;
 26275   000F4A  0E10               	movlw	low _servoState
 26276   000F4C  0101               	movlb	1	; () banked
 26277   000F4E  25D7               	addwf	pollServos@io& (0+255),w,b
 26278   000F50  6ED9               	movwf	fsr2l,c
 26279   000F52  6ADA               	clrf	fsr2h,c
 26280   000F54  0E01               	movlw	high _servoState
 26281   000F56  22DA               	addwfc	fsr2h,f,c
 26282   000F58  0E01               	movlw	1
 26283   000F5A  6EDF               	movwf	indf2,c
 26284                           
 26285                           ; BSR set to: 1
 26286                           ;../servo.c: 414:                                 ticksWhenStopped[io].val = tickGet();
 26287   000F5C  ECE4  F05A         	call	_tickGet	;wreg free
 26288   000F60  0101               	movlb	1	; () banked
 26289   000F62  51D7               	movf	pollServos@io& (0+255),w,b
 26290   000F64  0D04               	mullw	4
 26291   000F66  0E88               	movlw	low _ticksWhenStopped
 26292   000F68  24F3               	addwf	243,w,c
 26293   000F6A  6ED9               	movwf	fsr2l,c
 26294   000F6C  0E03               	movlw	high _ticksWhenStopped
 26295   000F6E  20F4               	addwfc	prodh,w,c
 26296   000F70  6EDA               	movwf	fsr2h,c
 26297   000F72  0100               	movlb	0	; () banked
 26298   000F74  C08D  FFDE         	movff	?_tickGet,postinc2
 26299   000F78  C08E  FFDE         	movff	?_tickGet+1,postinc2
 26300   000F7C  C08F  FFDE         	movff	?_tickGet+2,postinc2
 26301   000F80  C090  FFDE         	movff	?_tickGet+3,postinc2
 26302                           
 26303                           ; BSR set to: 0
 26304                           ;../servo.c: 415:                                 currentPos[io] = targetPos[io];
 26305   000F84  0E20               	movlw	low _targetPos
 26306   000F86  0101               	movlb	1	; () banked
 26307   000F88  25D7               	addwf	pollServos@io& (0+255),w,b
 26308   000F8A  6ED9               	movwf	fsr2l,c
 26309   000F8C  6ADA               	clrf	fsr2h,c
 26310   000F8E  0E01               	movlw	high _targetPos
 26311   000F90  22DA               	addwfc	fsr2h,f,c
 26312   000F92  51D7               	movf	pollServos@io& (0+255),w,b
 26313   000F94  0FA9               	addlw	low _currentPos
 26314   000F96  6EE1               	movwf	fsr1l,c
 26315   000F98  6AE2               	clrf	fsr1h,c
 26316   000F9A  CFDF FFE7          	movff	indf2,indf1
 26317                           
 26318                           ; BSR set to: 1
 26319                           ;../servo.c: 416:                                 sendProducedEvent(((8 + 4*(io))+0), ge
      +                          tNV((16 + 7*(io) + 1)) & 0x40);
 26320   000F9E  51D7               	movf	pollServos@io& (0+255),w,b
 26321   000FA0  0D07               	mullw	7
 26322   000FA2  50F3               	movf	243,w,c
 26323   000FA4  0F11               	addlw	17
 26324   000FA6  EC52  F05E         	call	_getNV
 26325   000FAA  0100               	movlb	0	; () banked
 26326   000FAC  518D               	movf	?_getNV& (0+255),w,b
 26327   000FAE  0B40               	andlw	64
 26328   000FB0  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 26329   000FB2  0101               	movlb	1	; () banked
 26330   000FB4  51D7               	movf	pollServos@io& (0+255),w,b
 26331   000FB6  0D04               	mullw	4
 26332   000FB8  50F3               	movf	243,w,c
 26333   000FBA  0F08               	addlw	8
 26334   000FBC  EC3B  F04B         	call	_sendProducedEvent
 26335                           
 26336                           ;../servo.c: 417:                                 writeNVM(EEPROM_NVM_TYPE, ((eeprom_add
      +                          ress_t)((0x3FF -8))-25)+io, currentPos[io]);
 26337   000FC0  0EDE               	movlw	222
 26338   000FC2  0101               	movlb	1	; () banked
 26339   000FC4  25D7               	addwf	pollServos@io& (0+255),w,b
 26340   000FC6  6FCC               	movwf	??_pollServos& (0+255),b
 26341   000FC8  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 26342   000FCA  0E03               	movlw	3
 26343   000FCC  23CD               	addwfc	(??_pollServos+1)& (0+255),f,b
 26344   000FCE  C1CC  F0A4         	movff	??_pollServos,writeNVM@index
 26345   000FD2  C1CD  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 26346   000FD6  0100               	movlb	0	; () banked
 26347   000FD8  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 26348   000FDA  0101               	movlb	1	; () banked
 26349   000FDC  51D7               	movf	pollServos@io& (0+255),w,b
 26350   000FDE  0FA9               	addlw	low _currentPos
 26351   000FE0  6ED9               	movwf	fsr2l,c
 26352   000FE2  6ADA               	clrf	fsr2h,c
 26353   000FE4  50DF               	movf	indf2,w,c
 26354   000FE6  0100               	movlb	0	; () banked
 26355   000FE8  6FA7               	movwf	writeNVM@value& (0+255),b
 26356   000FEA  0E00               	movlw	0
 26357   000FEC  EC60  F05C         	call	_writeNVM
 26358   000FF0  D350               	goto	l21879
 26359   000FF2                     l21781:
 26360                           
 26361                           ; BSR set to: 0
 26362   000FF2  0E10               	movlw	low _servoState
 26363   000FF4  0101               	movlb	1	; () banked
 26364   000FF6  25D7               	addwf	pollServos@io& (0+255),w,b
 26365   000FF8  6ED9               	movwf	fsr2l,c
 26366   000FFA  6ADA               	clrf	fsr2h,c
 26367   000FFC  0E01               	movlw	high _servoState
 26368   000FFE  22DA               	addwfc	fsr2h,f,c
 26369   001000  50DF               	movf	indf2,w,c
 26370   001002  6FCC               	movwf	??_pollServos& (0+255),b
 26371   001004  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 26372                           
 26373                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26374                           ; Switch size 1, requested type "simple"
 26375                           ; Number of cases is 1, Range of values is 0 to 0
 26376                           ; switch strategies available:
 26377                           ; Name         Instructions Cycles
 26378                           ; simple_byte            4     3 (average)
 26379                           ;	Chosen strategy is simple_byte
 26380   001006  51CD               	movf	(??_pollServos+1)& (0+255),w,b
 26381   001008  0A00               	xorlw	0	; case 0
 26382   00100A  A4D8               	btfss	status,2,c
 26383   00100C  D342               	goto	l21879
 26384                           
 26385                           ; BSR set to: 1
 26386                           ; Switch size 1, requested type "simple"
 26387                           ; Number of cases is 4, Range of values is 0 to 3
 26388                           ; switch strategies available:
 26389                           ; Name         Instructions Cycles
 26390                           ; simple_byte           13     7 (average)
 26391                           ;	Chosen strategy is simple_byte
 26392   00100E  51CC               	movf	??_pollServos& (0+255),w,b
 26393   001010  0A00               	xorlw	0	; case 0
 26394   001012  B4D8               	btfsc	status,2,c
 26395   001014  D33E               	goto	l21879
 26396   001016  0A01               	xorlw	1	; case 1
 26397   001018  B4D8               	btfsc	status,2,c
 26398   00101A  D33B               	goto	l21879
 26399   00101C  0A03               	xorlw	3	; case 2
 26400   00101E  B4D8               	btfsc	status,2,c
 26401   001020  D6B5               	goto	l21737
 26402   001022  0A01               	xorlw	1	; case 3
 26403   001024  B4D8               	btfsc	status,2,c
 26404   001026  D69F               	goto	l21731
 26405   001028  D334               	goto	l21879
 26406   00102A                     l21783:
 26407                           
 26408                           ; BSR set to: 1
 26409                           ;../servo.c: 429:                         if (currentPos[io] == getNV((16 + 7*(io) + 3))
      +                          ) {
 26410   00102A  51D7               	movf	pollServos@io& (0+255),w,b
 26411   00102C  0D07               	mullw	7
 26412   00102E  50F3               	movf	243,w,c
 26413   001030  0F13               	addlw	19
 26414   001032  EC52  F05E         	call	_getNV
 26415   001036  0101               	movlb	1	; () banked
 26416   001038  51D7               	movf	pollServos@io& (0+255),w,b
 26417   00103A  0FA9               	addlw	low _currentPos
 26418   00103C  6ED9               	movwf	fsr2l,c
 26419   00103E  6ADA               	clrf	fsr2h,c
 26420   001040  50DF               	movf	indf2,w,c
 26421   001042  6FCC               	movwf	??_pollServos& (0+255),b
 26422   001044  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 26423   001046  0100               	movlb	0	; () banked
 26424   001048  518D               	movf	?_getNV& (0+255),w,b
 26425   00104A  0101               	movlb	1	; () banked
 26426   00104C  19CC               	xorwf	??_pollServos& (0+255),w,b
 26427   00104E  E117               	bnz	l21787
 26428   001050  0100               	movlb	0	; () banked
 26429   001052  518E               	movf	(?_getNV+1)& (0+255),w,b
 26430   001054  0101               	movlb	1	; () banked
 26431   001056  19CD               	xorwf	(??_pollServos+1)& (0+255),w,b
 26432   001058  A4D8               	btfss	status,2,c
 26433   00105A  D011               	goto	l21787
 26434                           
 26435                           ; BSR set to: 1
 26436                           ;../servo.c: 430:                             sendProducedEvent(((8 + 4*(io))+0), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 26437   00105C  51D7               	movf	pollServos@io& (0+255),w,b
 26438   00105E  0D07               	mullw	7
 26439   001060  50F3               	movf	243,w,c
 26440   001062  0F11               	addlw	17
 26441   001064  EC52  F05E         	call	_getNV
 26442   001068  0100               	movlb	0	; () banked
 26443   00106A  518D               	movf	?_getNV& (0+255),w,b
 26444   00106C  0B40               	andlw	64
 26445   00106E  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 26446   001070  0101               	movlb	1	; () banked
 26447   001072  51D7               	movf	pollServos@io& (0+255),w,b
 26448   001074  0D04               	mullw	4
 26449   001076  50F3               	movf	243,w,c
 26450   001078  0F08               	addlw	8
 26451   00107A  EC3B  F04B         	call	_sendProducedEvent
 26452   00107E                     l21787:
 26453                           
 26454                           ;../servo.c: 432:                         if (currentPos[io] == getNV((16 + 7*(io) + 4))
      +                          ) {
 26455   00107E  0101               	movlb	1	; () banked
 26456   001080  51D7               	movf	pollServos@io& (0+255),w,b
 26457   001082  0D07               	mullw	7
 26458   001084  50F3               	movf	243,w,c
 26459   001086  0F14               	addlw	20
 26460   001088  EC52  F05E         	call	_getNV
 26461   00108C  0101               	movlb	1	; () banked
 26462   00108E  51D7               	movf	pollServos@io& (0+255),w,b
 26463   001090  0FA9               	addlw	low _currentPos
 26464   001092  6ED9               	movwf	fsr2l,c
 26465   001094  6ADA               	clrf	fsr2h,c
 26466   001096  50DF               	movf	indf2,w,c
 26467   001098  6FCC               	movwf	??_pollServos& (0+255),b
 26468   00109A  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 26469   00109C  0100               	movlb	0	; () banked
 26470   00109E  518D               	movf	?_getNV& (0+255),w,b
 26471   0010A0  0101               	movlb	1	; () banked
 26472   0010A2  19CC               	xorwf	??_pollServos& (0+255),w,b
 26473   0010A4  E117               	bnz	l21791
 26474   0010A6  0100               	movlb	0	; () banked
 26475   0010A8  518E               	movf	(?_getNV+1)& (0+255),w,b
 26476   0010AA  0101               	movlb	1	; () banked
 26477   0010AC  19CD               	xorwf	(??_pollServos+1)& (0+255),w,b
 26478   0010AE  A4D8               	btfss	status,2,c
 26479   0010B0  D011               	goto	l21791
 26480                           
 26481                           ; BSR set to: 1
 26482                           ;../servo.c: 433:                             sendProducedEvent(((8 + 4*(io))+1), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 26483   0010B2  51D7               	movf	pollServos@io& (0+255),w,b
 26484   0010B4  0D07               	mullw	7
 26485   0010B6  50F3               	movf	243,w,c
 26486   0010B8  0F11               	addlw	17
 26487   0010BA  EC52  F05E         	call	_getNV
 26488   0010BE  0100               	movlb	0	; () banked
 26489   0010C0  518D               	movf	?_getNV& (0+255),w,b
 26490   0010C2  0B40               	andlw	64
 26491   0010C4  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 26492   0010C6  0101               	movlb	1	; () banked
 26493   0010C8  51D7               	movf	pollServos@io& (0+255),w,b
 26494   0010CA  0D04               	mullw	4
 26495   0010CC  50F3               	movf	243,w,c
 26496   0010CE  0F09               	addlw	9
 26497   0010D0  EC3B  F04B         	call	_sendProducedEvent
 26498   0010D4                     l21791:
 26499                           
 26500                           ;../servo.c: 435:                         if (currentPos[io] == getNV((16 + 7*(io) + 5))
      +                          ) {
 26501   0010D4  0101               	movlb	1	; () banked
 26502   0010D6  51D7               	movf	pollServos@io& (0+255),w,b
 26503   0010D8  0D07               	mullw	7
 26504   0010DA  50F3               	movf	243,w,c
 26505   0010DC  0F15               	addlw	21
 26506   0010DE  EC52  F05E         	call	_getNV
 26507   0010E2  0101               	movlb	1	; () banked
 26508   0010E4  51D7               	movf	pollServos@io& (0+255),w,b
 26509   0010E6  0FA9               	addlw	low _currentPos
 26510   0010E8  6ED9               	movwf	fsr2l,c
 26511   0010EA  6ADA               	clrf	fsr2h,c
 26512   0010EC  50DF               	movf	indf2,w,c
 26513   0010EE  6FCC               	movwf	??_pollServos& (0+255),b
 26514   0010F0  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 26515   0010F2  0100               	movlb	0	; () banked
 26516   0010F4  518D               	movf	?_getNV& (0+255),w,b
 26517   0010F6  0101               	movlb	1	; () banked
 26518   0010F8  19CC               	xorwf	??_pollServos& (0+255),w,b
 26519   0010FA  E117               	bnz	l21795
 26520   0010FC  0100               	movlb	0	; () banked
 26521   0010FE  518E               	movf	(?_getNV+1)& (0+255),w,b
 26522   001100  0101               	movlb	1	; () banked
 26523   001102  19CD               	xorwf	(??_pollServos+1)& (0+255),w,b
 26524   001104  A4D8               	btfss	status,2,c
 26525   001106  D011               	goto	l21795
 26526                           
 26527                           ; BSR set to: 1
 26528                           ;../servo.c: 436:                             sendProducedEvent(((8 + 4*(io))+2), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 26529   001108  51D7               	movf	pollServos@io& (0+255),w,b
 26530   00110A  0D07               	mullw	7
 26531   00110C  50F3               	movf	243,w,c
 26532   00110E  0F11               	addlw	17
 26533   001110  EC52  F05E         	call	_getNV
 26534   001114  0100               	movlb	0	; () banked
 26535   001116  518D               	movf	?_getNV& (0+255),w,b
 26536   001118  0B40               	andlw	64
 26537   00111A  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 26538   00111C  0101               	movlb	1	; () banked
 26539   00111E  51D7               	movf	pollServos@io& (0+255),w,b
 26540   001120  0D04               	mullw	4
 26541   001122  50F3               	movf	243,w,c
 26542   001124  0F0A               	addlw	10
 26543   001126  EC3B  F04B         	call	_sendProducedEvent
 26544   00112A                     l21795:
 26545                           
 26546                           ;../servo.c: 438:                         if (currentPos[io] == getNV((16 + 7*(io) + 6))
      +                          ) {
 26547   00112A  0101               	movlb	1	; () banked
 26548   00112C  51D7               	movf	pollServos@io& (0+255),w,b
 26549   00112E  0D07               	mullw	7
 26550   001130  50F3               	movf	243,w,c
 26551   001132  0F16               	addlw	22
 26552   001134  EC52  F05E         	call	_getNV
 26553   001138  0101               	movlb	1	; () banked
 26554   00113A  51D7               	movf	pollServos@io& (0+255),w,b
 26555   00113C  0FA9               	addlw	low _currentPos
 26556   00113E  6ED9               	movwf	fsr2l,c
 26557   001140  6ADA               	clrf	fsr2h,c
 26558   001142  50DF               	movf	indf2,w,c
 26559   001144  6FCC               	movwf	??_pollServos& (0+255),b
 26560   001146  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 26561   001148  0100               	movlb	0	; () banked
 26562   00114A  518D               	movf	?_getNV& (0+255),w,b
 26563   00114C  0101               	movlb	1	; () banked
 26564   00114E  19CC               	xorwf	??_pollServos& (0+255),w,b
 26565   001150  E117               	bnz	l21799
 26566   001152  0100               	movlb	0	; () banked
 26567   001154  518E               	movf	(?_getNV+1)& (0+255),w,b
 26568   001156  0101               	movlb	1	; () banked
 26569   001158  19CD               	xorwf	(??_pollServos+1)& (0+255),w,b
 26570   00115A  A4D8               	btfss	status,2,c
 26571   00115C  D011               	goto	l21799
 26572                           
 26573                           ; BSR set to: 1
 26574                           ;../servo.c: 439:                             sendProducedEvent(((8 + 4*(io))+3), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 26575   00115E  51D7               	movf	pollServos@io& (0+255),w,b
 26576   001160  0D07               	mullw	7
 26577   001162  50F3               	movf	243,w,c
 26578   001164  0F11               	addlw	17
 26579   001166  EC52  F05E         	call	_getNV
 26580   00116A  0100               	movlb	0	; () banked
 26581   00116C  518D               	movf	?_getNV& (0+255),w,b
 26582   00116E  0B40               	andlw	64
 26583   001170  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 26584   001172  0101               	movlb	1	; () banked
 26585   001174  51D7               	movf	pollServos@io& (0+255),w,b
 26586   001176  0D04               	mullw	4
 26587   001178  50F3               	movf	243,w,c
 26588   00117A  0F0B               	addlw	11
 26589   00117C  EC3B  F04B         	call	_sendProducedEvent
 26590   001180                     l21799:
 26591                           
 26592                           ;../servo.c: 441:                         servoState[io] = SS_MOVING;
 26593   001180  0E10               	movlw	low _servoState
 26594   001182  0101               	movlb	1	; () banked
 26595   001184  25D7               	addwf	pollServos@io& (0+255),w,b
 26596   001186  6ED9               	movwf	fsr2l,c
 26597   001188  6ADA               	clrf	fsr2h,c
 26598   00118A  0E01               	movlw	high _servoState
 26599   00118C  22DA               	addwfc	fsr2h,f,c
 26600   00118E  0E02               	movlw	2
 26601   001190  6EDF               	movwf	indf2,c
 26602   001192                     l21801:
 26603                           
 26604                           ; BSR set to: 1
 26605                           ;../servo.c: 444:                         if (targetPos[io] > currentPos[io]) {
 26606   001192  0E20               	movlw	low _targetPos
 26607   001194  25D7               	addwf	pollServos@io& (0+255),w,b
 26608   001196  6ED9               	movwf	fsr2l,c
 26609   001198  6ADA               	clrf	fsr2h,c
 26610   00119A  0E01               	movlw	high _targetPos
 26611   00119C  22DA               	addwfc	fsr2h,f,c
 26612   00119E  51D7               	movf	pollServos@io& (0+255),w,b
 26613   0011A0  0FA9               	addlw	low _currentPos
 26614   0011A2  6EE1               	movwf	fsr1l,c
 26615   0011A4  6AE2               	clrf	fsr1h,c
 26616   0011A6  50DE               	movf	postinc2,w,c
 26617   0011A8  5CE6               	subwf	postinc1,w,c
 26618   0011AA  B0D8               	btfsc	status,0,c
 26619   0011AC  D081               	goto	l21821
 26620                           
 26621                           ; BSR set to: 1
 26622                           ;../servo.c: 445:                             if (stepsPerPollSpeed[io]) {
 26623   0011AE  0E00               	movlw	low _stepsPerPollSpeed
 26624   0011B0  25D7               	addwf	pollServos@io& (0+255),w,b
 26625   0011B2  6ED9               	movwf	fsr2l,c
 26626   0011B4  6ADA               	clrf	fsr2h,c
 26627   0011B6  0E01               	movlw	high _stepsPerPollSpeed
 26628   0011B8  22DA               	addwfc	fsr2h,f,c
 26629   0011BA  50DF               	movf	indf2,w,c
 26630   0011BC  B4D8               	btfsc	status,2,c
 26631   0011BE  D03A               	goto	l21811
 26632                           
 26633                           ; BSR set to: 1
 26634                           ;../servo.c: 446:                                 if (currentPos[io] + stepsPerPollSpeed
      +                          [io] < currentPos[io]) {
 26635   0011C0  51D7               	movf	pollServos@io& (0+255),w,b
 26636   0011C2  0FA9               	addlw	low _currentPos
 26637   0011C4  6ED9               	movwf	fsr2l,c
 26638   0011C6  6ADA               	clrf	fsr2h,c
 26639   0011C8  50DF               	movf	indf2,w,c
 26640   0011CA  6FCC               	movwf	??_pollServos& (0+255),b
 26641   0011CC  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 26642   0011CE  51D7               	movf	pollServos@io& (0+255),w,b
 26643   0011D0  0FA9               	addlw	low _currentPos
 26644   0011D2  6ED9               	movwf	fsr2l,c
 26645   0011D4  6ADA               	clrf	fsr2h,c
 26646   0011D6  50DF               	movf	indf2,w,c
 26647   0011D8  6FCE               	movwf	(??_pollServos+2)& (0+255),b
 26648   0011DA  6BCF               	clrf	(??_pollServos+3)& (0+255),b
 26649   0011DC  0E00               	movlw	low _stepsPerPollSpeed
 26650   0011DE  25D7               	addwf	pollServos@io& (0+255),w,b
 26651   0011E0  6ED9               	movwf	fsr2l,c
 26652   0011E2  6ADA               	clrf	fsr2h,c
 26653   0011E4  0E01               	movlw	high _stepsPerPollSpeed
 26654   0011E6  22DA               	addwfc	fsr2h,f,c
 26655   0011E8  50DF               	movf	indf2,w,c
 26656   0011EA  6FD0               	movwf	(??_pollServos+4)& (0+255),b
 26657   0011EC  51D0               	movf	(??_pollServos+4)& (0+255),w,b
 26658   0011EE  27CE               	addwf	(??_pollServos+2)& (0+255),f,b
 26659   0011F0  0E00               	movlw	0
 26660   0011F2  23CF               	addwfc	(??_pollServos+3)& (0+255),f,b
 26661   0011F4  51CC               	movf	??_pollServos& (0+255),w,b
 26662   0011F6  5DCE               	subwf	(??_pollServos+2)& (0+255),w,b
 26663   0011F8  51CF               	movf	(??_pollServos+3)& (0+255),w,b
 26664   0011FA  0A80               	xorlw	128
 26665   0011FC  6FD1               	movwf	(??_pollServos+5)& (0+255),b
 26666   0011FE  51CD               	movf	(??_pollServos+1)& (0+255),w,b
 26667   001200  0A80               	xorlw	128
 26668   001202  59D1               	subwfb	(??_pollServos+5)& (0+255),w,b
 26669   001204  B0D8               	btfsc	status,0,c
 26670   001206  D007               	goto	l21809
 26671                           
 26672                           ; BSR set to: 1
 26673                           ;../servo.c: 448:                                     currentPos[io] =255;
 26674   001208  51D7               	movf	pollServos@io& (0+255),w,b
 26675   00120A  0FA9               	addlw	low _currentPos
 26676   00120C  6ED9               	movwf	fsr2l,c
 26677   00120E  6ADA               	clrf	fsr2h,c
 26678   001210  0EFF               	movlw	255
 26679   001212  6EDF               	movwf	indf2,c
 26680                           
 26681                           ;../servo.c: 449:                                 } else {
 26682   001214  D032               	goto	l21817
 26683   001216                     l21809:
 26684                           
 26685                           ; BSR set to: 1
 26686                           ;../servo.c: 450:                                     currentPos[io] += stepsPerPollSpee
      +                          d[io];
 26687   001216  0E00               	movlw	low _stepsPerPollSpeed
 26688   001218  25D7               	addwf	pollServos@io& (0+255),w,b
 26689   00121A  6ED9               	movwf	fsr2l,c
 26690   00121C  6ADA               	clrf	fsr2h,c
 26691   00121E  0E01               	movlw	high _stepsPerPollSpeed
 26692   001220  22DA               	addwfc	fsr2h,f,c
 26693   001222  50DF               	movf	indf2,w,c
 26694   001224  6FCC               	movwf	??_pollServos& (0+255),b
 26695   001226  51D7               	movf	pollServos@io& (0+255),w,b
 26696   001228  0FA9               	addlw	low _currentPos
 26697   00122A  6ED9               	movwf	fsr2l,c
 26698   00122C  6ADA               	clrf	fsr2h,c
 26699   00122E  51CC               	movf	??_pollServos& (0+255),w,b
 26700   001230  26DF               	addwf	indf2,f,c
 26701   001232  D023               	goto	l21817
 26702   001234                     l21811:
 26703                           
 26704                           ; BSR set to: 1
 26705                           ;../servo.c: 453:                                 pollCount[io]--;
 26706   001234  0E64               	movlw	low _pollCount
 26707   001236  25D7               	addwf	pollServos@io& (0+255),w,b
 26708   001238  6ED9               	movwf	fsr2l,c
 26709   00123A  6ADA               	clrf	fsr2h,c
 26710   00123C  0E02               	movlw	high _pollCount
 26711   00123E  22DA               	addwfc	fsr2h,f,c
 26712   001240  06DF               	decf	indf2,f,c
 26713                           
 26714                           ;../servo.c: 454:                                 if (pollCount[io] == 0) {
 26715   001242  0E64               	movlw	low _pollCount
 26716   001244  25D7               	addwf	pollServos@io& (0+255),w,b
 26717   001246  6ED9               	movwf	fsr2l,c
 26718   001248  6ADA               	clrf	fsr2h,c
 26719   00124A  0E02               	movlw	high _pollCount
 26720   00124C  22DA               	addwfc	fsr2h,f,c
 26721   00124E  50DF               	movf	indf2,w,c
 26722   001250  A4D8               	btfss	status,2,c
 26723   001252  D013               	goto	l21817
 26724                           
 26725                           ; BSR set to: 1
 26726                           ;../servo.c: 455:                                     currentPos[io]++;
 26727   001254  51D7               	movf	pollServos@io& (0+255),w,b
 26728   001256  0FA9               	addlw	low _currentPos
 26729   001258  6ED9               	movwf	fsr2l,c
 26730   00125A  6ADA               	clrf	fsr2h,c
 26731   00125C  2ADF               	incf	indf2,f,c
 26732                           
 26733                           ; BSR set to: 1
 26734                           ;../servo.c: 456:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 26735   00125E  0E74               	movlw	low _pollsPerStepSpeed
 26736   001260  25D7               	addwf	pollServos@io& (0+255),w,b
 26737   001262  6ED9               	movwf	fsr2l,c
 26738   001264  6ADA               	clrf	fsr2h,c
 26739   001266  0E02               	movlw	high _pollsPerStepSpeed
 26740   001268  22DA               	addwfc	fsr2h,f,c
 26741   00126A  0E64               	movlw	low _pollCount
 26742   00126C  25D7               	addwf	pollServos@io& (0+255),w,b
 26743   00126E  6EE1               	movwf	fsr1l,c
 26744   001270  6AE2               	clrf	fsr1h,c
 26745   001272  0E02               	movlw	high _pollCount
 26746   001274  22E2               	addwfc	fsr1h,f,c
 26747   001276  CFDF FFE7          	movff	indf2,indf1
 26748   00127A                     l21817:
 26749                           
 26750                           ; BSR set to: 1
 26751                           ;../servo.c: 459:                             if (currentPos[io] > targetPos[io]) {
 26752   00127A  51D7               	movf	pollServos@io& (0+255),w,b
 26753   00127C  0FA9               	addlw	low _currentPos
 26754   00127E  6ED9               	movwf	fsr2l,c
 26755   001280  6ADA               	clrf	fsr2h,c
 26756   001282  0E20               	movlw	low _targetPos
 26757   001284  25D7               	addwf	pollServos@io& (0+255),w,b
 26758   001286  6EE1               	movwf	fsr1l,c
 26759   001288  6AE2               	clrf	fsr1h,c
 26760   00128A  0E01               	movlw	high _targetPos
 26761   00128C  22E2               	addwfc	fsr1h,f,c
 26762   00128E  50DE               	movf	postinc2,w,c
 26763   001290  5CE6               	subwf	postinc1,w,c
 26764   001292  B0D8               	btfsc	status,0,c
 26765   001294  D08E               	goto	l1096
 26766   001296                     u22610:
 26767                           
 26768                           ; BSR set to: 1
 26769                           ;../servo.c: 460:                                 currentPos[io] = targetPos[io];
 26770   001296  0E20               	movlw	low _targetPos
 26771   001298  25D7               	addwf	pollServos@io& (0+255),w,b
 26772   00129A  6ED9               	movwf	fsr2l,c
 26773   00129C  6ADA               	clrf	fsr2h,c
 26774   00129E  0E01               	movlw	high _targetPos
 26775   0012A0  22DA               	addwfc	fsr2h,f,c
 26776   0012A2  51D7               	movf	pollServos@io& (0+255),w,b
 26777   0012A4  0FA9               	addlw	low _currentPos
 26778   0012A6  6EE1               	movwf	fsr1l,c
 26779   0012A8  6AE2               	clrf	fsr1h,c
 26780   0012AA  CFDF FFE7          	movff	indf2,indf1
 26781   0012AE  D081               	goto	l1096
 26782   0012B0                     l21821:
 26783                           
 26784                           ; BSR set to: 1
 26785   0012B0  51D7               	movf	pollServos@io& (0+255),w,b
 26786   0012B2  0FA9               	addlw	low _currentPos
 26787   0012B4  6ED9               	movwf	fsr2l,c
 26788   0012B6  6ADA               	clrf	fsr2h,c
 26789   0012B8  0E20               	movlw	low _targetPos
 26790   0012BA  25D7               	addwf	pollServos@io& (0+255),w,b
 26791   0012BC  6EE1               	movwf	fsr1l,c
 26792   0012BE  6AE2               	clrf	fsr1h,c
 26793   0012C0  0E01               	movlw	high _targetPos
 26794   0012C2  22E2               	addwfc	fsr1h,f,c
 26795   0012C4  50DE               	movf	postinc2,w,c
 26796   0012C6  5CE6               	subwf	postinc1,w,c
 26797   0012C8  B0D8               	btfsc	status,0,c
 26798   0012CA  D073               	goto	l1096
 26799                           
 26800                           ; BSR set to: 1
 26801                           ;../servo.c: 464:                             if (stepsPerPollSpeed[io]) {
 26802   0012CC  0E00               	movlw	low _stepsPerPollSpeed
 26803   0012CE  25D7               	addwf	pollServos@io& (0+255),w,b
 26804   0012D0  6ED9               	movwf	fsr2l,c
 26805   0012D2  6ADA               	clrf	fsr2h,c
 26806   0012D4  0E01               	movlw	high _stepsPerPollSpeed
 26807   0012D6  22DA               	addwfc	fsr2h,f,c
 26808   0012D8  50DF               	movf	indf2,w,c
 26809   0012DA  B4D8               	btfsc	status,2,c
 26810   0012DC  D039               	goto	l21831
 26811                           
 26812                           ; BSR set to: 1
 26813                           ;../servo.c: 465:                                 if (currentPos[io] - stepsPerPollSpeed
      +                          [io] > currentPos[io]) {
 26814   0012DE  51D7               	movf	pollServos@io& (0+255),w,b
 26815   0012E0  0FA9               	addlw	low _currentPos
 26816   0012E2  6ED9               	movwf	fsr2l,c
 26817   0012E4  6ADA               	clrf	fsr2h,c
 26818   0012E6  50DF               	movf	indf2,w,c
 26819   0012E8  6FCC               	movwf	??_pollServos& (0+255),b
 26820   0012EA  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 26821   0012EC  0E00               	movlw	low _stepsPerPollSpeed
 26822   0012EE  25D7               	addwf	pollServos@io& (0+255),w,b
 26823   0012F0  6ED9               	movwf	fsr2l,c
 26824   0012F2  6ADA               	clrf	fsr2h,c
 26825   0012F4  0E01               	movlw	high _stepsPerPollSpeed
 26826   0012F6  22DA               	addwfc	fsr2h,f,c
 26827   0012F8  50DF               	movf	indf2,w,c
 26828   0012FA  6FCE               	movwf	(??_pollServos+2)& (0+255),b
 26829   0012FC  51CE               	movf	(??_pollServos+2)& (0+255),w,b
 26830   0012FE  5FCC               	subwf	??_pollServos& (0+255),f,b
 26831   001300  0E00               	movlw	0
 26832   001302  5BCD               	subwfb	(??_pollServos+1)& (0+255),f,b
 26833   001304  51D7               	movf	pollServos@io& (0+255),w,b
 26834   001306  0FA9               	addlw	low _currentPos
 26835   001308  6ED9               	movwf	fsr2l,c
 26836   00130A  6ADA               	clrf	fsr2h,c
 26837   00130C  50DF               	movf	indf2,w,c
 26838   00130E  6FCF               	movwf	(??_pollServos+3)& (0+255),b
 26839   001310  6BD0               	clrf	(??_pollServos+4)& (0+255),b
 26840   001312  51CC               	movf	??_pollServos& (0+255),w,b
 26841   001314  5DCF               	subwf	(??_pollServos+3)& (0+255),w,b
 26842   001316  51D0               	movf	(??_pollServos+4)& (0+255),w,b
 26843   001318  0A80               	xorlw	128
 26844   00131A  6FD1               	movwf	(??_pollServos+5)& (0+255),b
 26845   00131C  51CD               	movf	(??_pollServos+1)& (0+255),w,b
 26846   00131E  0A80               	xorlw	128
 26847   001320  59D1               	subwfb	(??_pollServos+5)& (0+255),w,b
 26848   001322  B0D8               	btfsc	status,0,c
 26849   001324  D006               	goto	l21829
 26850                           
 26851                           ; BSR set to: 1
 26852                           ;../servo.c: 467:                                     currentPos[io] = 0;
 26853   001326  51D7               	movf	pollServos@io& (0+255),w,b
 26854   001328  0FA9               	addlw	low _currentPos
 26855   00132A  6ED9               	movwf	fsr2l,c
 26856   00132C  6ADA               	clrf	fsr2h,c
 26857   00132E  6ADF               	clrf	indf2,c
 26858                           
 26859                           ;../servo.c: 468:                                 } else {
 26860   001330  D032               	goto	l21837
 26861   001332                     l21829:
 26862                           
 26863                           ; BSR set to: 1
 26864                           ;../servo.c: 469:                                     currentPos[io] -= stepsPerPollSpee
      +                          d[io];
 26865   001332  0E00               	movlw	low _stepsPerPollSpeed
 26866   001334  25D7               	addwf	pollServos@io& (0+255),w,b
 26867   001336  6ED9               	movwf	fsr2l,c
 26868   001338  6ADA               	clrf	fsr2h,c
 26869   00133A  0E01               	movlw	high _stepsPerPollSpeed
 26870   00133C  22DA               	addwfc	fsr2h,f,c
 26871   00133E  50DF               	movf	indf2,w,c
 26872   001340  6FCC               	movwf	??_pollServos& (0+255),b
 26873   001342  51D7               	movf	pollServos@io& (0+255),w,b
 26874   001344  0FA9               	addlw	low _currentPos
 26875   001346  6ED9               	movwf	fsr2l,c
 26876   001348  6ADA               	clrf	fsr2h,c
 26877   00134A  51CC               	movf	??_pollServos& (0+255),w,b
 26878   00134C  5EDF               	subwf	indf2,f,c
 26879   00134E  D023               	goto	l21837
 26880   001350                     l21831:
 26881                           
 26882                           ; BSR set to: 1
 26883                           ;../servo.c: 472:                                 pollCount[io]--;
 26884   001350  0E64               	movlw	low _pollCount
 26885   001352  25D7               	addwf	pollServos@io& (0+255),w,b
 26886   001354  6ED9               	movwf	fsr2l,c
 26887   001356  6ADA               	clrf	fsr2h,c
 26888   001358  0E02               	movlw	high _pollCount
 26889   00135A  22DA               	addwfc	fsr2h,f,c
 26890   00135C  06DF               	decf	indf2,f,c
 26891                           
 26892                           ;../servo.c: 473:                                 if (pollCount[io] == 0) {
 26893   00135E  0E64               	movlw	low _pollCount
 26894   001360  25D7               	addwf	pollServos@io& (0+255),w,b
 26895   001362  6ED9               	movwf	fsr2l,c
 26896   001364  6ADA               	clrf	fsr2h,c
 26897   001366  0E02               	movlw	high _pollCount
 26898   001368  22DA               	addwfc	fsr2h,f,c
 26899   00136A  50DF               	movf	indf2,w,c
 26900   00136C  A4D8               	btfss	status,2,c
 26901   00136E  D013               	goto	l21837
 26902                           
 26903                           ; BSR set to: 1
 26904                           ;../servo.c: 474:                                     currentPos[io]--;
 26905   001370  51D7               	movf	pollServos@io& (0+255),w,b
 26906   001372  0FA9               	addlw	low _currentPos
 26907   001374  6ED9               	movwf	fsr2l,c
 26908   001376  6ADA               	clrf	fsr2h,c
 26909   001378  06DF               	decf	indf2,f,c
 26910                           
 26911                           ; BSR set to: 1
 26912                           ;../servo.c: 475:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 26913   00137A  0E74               	movlw	low _pollsPerStepSpeed
 26914   00137C  25D7               	addwf	pollServos@io& (0+255),w,b
 26915   00137E  6ED9               	movwf	fsr2l,c
 26916   001380  6ADA               	clrf	fsr2h,c
 26917   001382  0E02               	movlw	high _pollsPerStepSpeed
 26918   001384  22DA               	addwfc	fsr2h,f,c
 26919   001386  0E64               	movlw	low _pollCount
 26920   001388  25D7               	addwf	pollServos@io& (0+255),w,b
 26921   00138A  6EE1               	movwf	fsr1l,c
 26922   00138C  6AE2               	clrf	fsr1h,c
 26923   00138E  0E02               	movlw	high _pollCount
 26924   001390  22E2               	addwfc	fsr1h,f,c
 26925   001392  CFDF FFE7          	movff	indf2,indf1
 26926   001396                     l21837:
 26927                           
 26928                           ; BSR set to: 1
 26929                           ;../servo.c: 478:                             if (currentPos[io] < targetPos[io]) {
 26930   001396  0E20               	movlw	low _targetPos
 26931   001398  25D7               	addwf	pollServos@io& (0+255),w,b
 26932   00139A  6ED9               	movwf	fsr2l,c
 26933   00139C  6ADA               	clrf	fsr2h,c
 26934   00139E  0E01               	movlw	high _targetPos
 26935   0013A0  22DA               	addwfc	fsr2h,f,c
 26936   0013A2  51D7               	movf	pollServos@io& (0+255),w,b
 26937   0013A4  0FA9               	addlw	low _currentPos
 26938   0013A6  6EE1               	movwf	fsr1l,c
 26939   0013A8  6AE2               	clrf	fsr1h,c
 26940   0013AA  50DE               	movf	postinc2,w,c
 26941   0013AC  5CE6               	subwf	postinc1,w,c
 26942   0013AE  A0D8               	btfss	status,0,c
 26943   0013B0  D772               	goto	u22610
 26944   0013B2                     l1096:
 26945                           
 26946                           ; BSR set to: 1
 26947                           ;../servo.c: 482:                         if (targetPos[io] == currentPos[io]) {
 26948   0013B2  51D7               	movf	pollServos@io& (0+255),w,b
 26949   0013B4  0FA9               	addlw	low _currentPos
 26950   0013B6  6ED9               	movwf	fsr2l,c
 26951   0013B8  6ADA               	clrf	fsr2h,c
 26952   0013BA  0E20               	movlw	low _targetPos
 26953   0013BC  25D7               	addwf	pollServos@io& (0+255),w,b
 26954   0013BE  6EE1               	movwf	fsr1l,c
 26955   0013C0  6AE2               	clrf	fsr1h,c
 26956   0013C2  0E01               	movlw	high _targetPos
 26957   0013C4  22E2               	addwfc	fsr1h,f,c
 26958   0013C6  50DE               	movf	postinc2,w,c
 26959   0013C8  18E6               	xorwf	postinc1,w,c
 26960   0013CA  A4D8               	btfss	status,2,c
 26961   0013CC  D162               	goto	l21879
 26962                           
 26963                           ; BSR set to: 1
 26964                           ;../servo.c: 483:                             servoState[io] = SS_STOPPED;
 26965   0013CE  0E10               	movlw	low _servoState
 26966   0013D0  25D7               	addwf	pollServos@io& (0+255),w,b
 26967   0013D2  6ED9               	movwf	fsr2l,c
 26968   0013D4  6ADA               	clrf	fsr2h,c
 26969   0013D6  0E01               	movlw	high _servoState
 26970   0013D8  22DA               	addwfc	fsr2h,f,c
 26971   0013DA  0E01               	movlw	1
 26972   0013DC  6EDF               	movwf	indf2,c
 26973                           
 26974                           ; BSR set to: 1
 26975                           ;../servo.c: 484:                             ticksWhenStopped[io].val = tickGet();
 26976   0013DE  ECE4  F05A         	call	_tickGet	;wreg free
 26977   0013E2  0101               	movlb	1	; () banked
 26978   0013E4  51D7               	movf	pollServos@io& (0+255),w,b
 26979   0013E6  0D04               	mullw	4
 26980   0013E8  0E88               	movlw	low _ticksWhenStopped
 26981   0013EA  24F3               	addwf	243,w,c
 26982   0013EC  6ED9               	movwf	fsr2l,c
 26983   0013EE  0E03               	movlw	high _ticksWhenStopped
 26984   0013F0  20F4               	addwfc	prodh,w,c
 26985   0013F2  6EDA               	movwf	fsr2h,c
 26986   0013F4  0100               	movlb	0	; () banked
 26987   0013F6  C08D  FFDE         	movff	?_tickGet,postinc2
 26988   0013FA  C08E  FFDE         	movff	?_tickGet+1,postinc2
 26989   0013FE  C08F  FFDE         	movff	?_tickGet+2,postinc2
 26990   001402  C090  FFDE         	movff	?_tickGet+3,postinc2
 26991                           
 26992                           ; BSR set to: 0
 26993                           ;../servo.c: 486:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           3))) {
 26994   001406  0101               	movlb	1	; () banked
 26995   001408  51D7               	movf	pollServos@io& (0+255),w,b
 26996   00140A  0D07               	mullw	7
 26997   00140C  50F3               	movf	243,w,c
 26998   00140E  0F13               	addlw	19
 26999   001410  EC52  F05E         	call	_getNV
 27000   001414  0101               	movlb	1	; () banked
 27001   001416  51D7               	movf	pollServos@io& (0+255),w,b
 27002   001418  0FA9               	addlw	low _currentPos
 27003   00141A  6ED9               	movwf	fsr2l,c
 27004   00141C  6ADA               	clrf	fsr2h,c
 27005   00141E  50DF               	movf	indf2,w,c
 27006   001420  6FCC               	movwf	??_pollServos& (0+255),b
 27007   001422  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 27008   001424  0100               	movlb	0	; () banked
 27009   001426  518D               	movf	?_getNV& (0+255),w,b
 27010   001428  0101               	movlb	1	; () banked
 27011   00142A  19CC               	xorwf	??_pollServos& (0+255),w,b
 27012   00142C  E11A               	bnz	l21849
 27013   00142E  0100               	movlb	0	; () banked
 27014   001430  518E               	movf	(?_getNV+1)& (0+255),w,b
 27015   001432  0101               	movlb	1	; () banked
 27016   001434  19CD               	xorwf	(??_pollServos+1)& (0+255),w,b
 27017   001436  A4D8               	btfss	status,2,c
 27018   001438  D014               	goto	l21849
 27019                           
 27020                           ; BSR set to: 1
 27021                           ;../servo.c: 487:                                 sendProducedEvent(((8 + 4*(io))+0), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 27022   00143A  51D7               	movf	pollServos@io& (0+255),w,b
 27023   00143C  0D07               	mullw	7
 27024   00143E  50F3               	movf	243,w,c
 27025   001440  0F11               	addlw	17
 27026   001442  EC52  F05E         	call	_getNV
 27027   001446  0100               	movlb	0	; () banked
 27028   001448  BD8D               	btfsc	?_getNV& (0+255),6,b
 27029   00144A  D002               	goto	u22690
 27030   00144C  0E01               	movlw	1
 27031   00144E  D001               	goto	u22700
 27032   001450                     u22690:
 27033   001450  0E00               	movlw	0
 27034   001452                     u22700:
 27035   001452  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 27036   001454  0101               	movlb	1	; () banked
 27037   001456  51D7               	movf	pollServos@io& (0+255),w,b
 27038   001458  0D04               	mullw	4
 27039   00145A  50F3               	movf	243,w,c
 27040   00145C  0F08               	addlw	8
 27041   00145E  EC3B  F04B         	call	_sendProducedEvent
 27042   001462                     l21849:
 27043                           
 27044                           ;../servo.c: 489:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           4))) {
 27045   001462  0101               	movlb	1	; () banked
 27046   001464  51D7               	movf	pollServos@io& (0+255),w,b
 27047   001466  0D07               	mullw	7
 27048   001468  50F3               	movf	243,w,c
 27049   00146A  0F14               	addlw	20
 27050   00146C  EC52  F05E         	call	_getNV
 27051   001470  0101               	movlb	1	; () banked
 27052   001472  51D7               	movf	pollServos@io& (0+255),w,b
 27053   001474  0FA9               	addlw	low _currentPos
 27054   001476  6ED9               	movwf	fsr2l,c
 27055   001478  6ADA               	clrf	fsr2h,c
 27056   00147A  50DF               	movf	indf2,w,c
 27057   00147C  6FCC               	movwf	??_pollServos& (0+255),b
 27058   00147E  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 27059   001480  0100               	movlb	0	; () banked
 27060   001482  518D               	movf	?_getNV& (0+255),w,b
 27061   001484  0101               	movlb	1	; () banked
 27062   001486  19CC               	xorwf	??_pollServos& (0+255),w,b
 27063   001488  E11A               	bnz	l21853
 27064   00148A  0100               	movlb	0	; () banked
 27065   00148C  518E               	movf	(?_getNV+1)& (0+255),w,b
 27066   00148E  0101               	movlb	1	; () banked
 27067   001490  19CD               	xorwf	(??_pollServos+1)& (0+255),w,b
 27068   001492  A4D8               	btfss	status,2,c
 27069   001494  D014               	goto	l21853
 27070                           
 27071                           ; BSR set to: 1
 27072                           ;../servo.c: 490:                                 sendProducedEvent(((8 + 4*(io))+1), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 27073   001496  51D7               	movf	pollServos@io& (0+255),w,b
 27074   001498  0D07               	mullw	7
 27075   00149A  50F3               	movf	243,w,c
 27076   00149C  0F11               	addlw	17
 27077   00149E  EC52  F05E         	call	_getNV
 27078   0014A2  0100               	movlb	0	; () banked
 27079   0014A4  BD8D               	btfsc	?_getNV& (0+255),6,b
 27080   0014A6  D002               	goto	u22720
 27081   0014A8  0E01               	movlw	1
 27082   0014AA  D001               	goto	u22730
 27083   0014AC                     u22720:
 27084   0014AC  0E00               	movlw	0
 27085   0014AE                     u22730:
 27086   0014AE  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 27087   0014B0  0101               	movlb	1	; () banked
 27088   0014B2  51D7               	movf	pollServos@io& (0+255),w,b
 27089   0014B4  0D04               	mullw	4
 27090   0014B6  50F3               	movf	243,w,c
 27091   0014B8  0F09               	addlw	9
 27092   0014BA  EC3B  F04B         	call	_sendProducedEvent
 27093   0014BE                     l21853:
 27094                           
 27095                           ;../servo.c: 492:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           5))) {
 27096   0014BE  0101               	movlb	1	; () banked
 27097   0014C0  51D7               	movf	pollServos@io& (0+255),w,b
 27098   0014C2  0D07               	mullw	7
 27099   0014C4  50F3               	movf	243,w,c
 27100   0014C6  0F15               	addlw	21
 27101   0014C8  EC52  F05E         	call	_getNV
 27102   0014CC  0101               	movlb	1	; () banked
 27103   0014CE  51D7               	movf	pollServos@io& (0+255),w,b
 27104   0014D0  0FA9               	addlw	low _currentPos
 27105   0014D2  6ED9               	movwf	fsr2l,c
 27106   0014D4  6ADA               	clrf	fsr2h,c
 27107   0014D6  50DF               	movf	indf2,w,c
 27108   0014D8  6FCC               	movwf	??_pollServos& (0+255),b
 27109   0014DA  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 27110   0014DC  0100               	movlb	0	; () banked
 27111   0014DE  518D               	movf	?_getNV& (0+255),w,b
 27112   0014E0  0101               	movlb	1	; () banked
 27113   0014E2  19CC               	xorwf	??_pollServos& (0+255),w,b
 27114   0014E4  E11A               	bnz	l21857
 27115   0014E6  0100               	movlb	0	; () banked
 27116   0014E8  518E               	movf	(?_getNV+1)& (0+255),w,b
 27117   0014EA  0101               	movlb	1	; () banked
 27118   0014EC  19CD               	xorwf	(??_pollServos+1)& (0+255),w,b
 27119   0014EE  A4D8               	btfss	status,2,c
 27120   0014F0  D014               	goto	l21857
 27121                           
 27122                           ; BSR set to: 1
 27123                           ;../servo.c: 493:                                 sendProducedEvent(((8 + 4*(io))+2), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 27124   0014F2  51D7               	movf	pollServos@io& (0+255),w,b
 27125   0014F4  0D07               	mullw	7
 27126   0014F6  50F3               	movf	243,w,c
 27127   0014F8  0F11               	addlw	17
 27128   0014FA  EC52  F05E         	call	_getNV
 27129   0014FE  0100               	movlb	0	; () banked
 27130   001500  BD8D               	btfsc	?_getNV& (0+255),6,b
 27131   001502  D002               	goto	u22750
 27132   001504  0E01               	movlw	1
 27133   001506  D001               	goto	u22760
 27134   001508                     u22750:
 27135   001508  0E00               	movlw	0
 27136   00150A                     u22760:
 27137   00150A  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 27138   00150C  0101               	movlb	1	; () banked
 27139   00150E  51D7               	movf	pollServos@io& (0+255),w,b
 27140   001510  0D04               	mullw	4
 27141   001512  50F3               	movf	243,w,c
 27142   001514  0F0A               	addlw	10
 27143   001516  EC3B  F04B         	call	_sendProducedEvent
 27144   00151A                     l21857:
 27145                           
 27146                           ;../servo.c: 495:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           6))) {
 27147   00151A  0101               	movlb	1	; () banked
 27148   00151C  51D7               	movf	pollServos@io& (0+255),w,b
 27149   00151E  0D07               	mullw	7
 27150   001520  50F3               	movf	243,w,c
 27151   001522  0F16               	addlw	22
 27152   001524  EC52  F05E         	call	_getNV
 27153   001528  0101               	movlb	1	; () banked
 27154   00152A  51D7               	movf	pollServos@io& (0+255),w,b
 27155   00152C  0FA9               	addlw	low _currentPos
 27156   00152E  6ED9               	movwf	fsr2l,c
 27157   001530  6ADA               	clrf	fsr2h,c
 27158   001532  50DF               	movf	indf2,w,c
 27159   001534  6FCC               	movwf	??_pollServos& (0+255),b
 27160   001536  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 27161   001538  0100               	movlb	0	; () banked
 27162   00153A  518D               	movf	?_getNV& (0+255),w,b
 27163   00153C  0101               	movlb	1	; () banked
 27164   00153E  19CC               	xorwf	??_pollServos& (0+255),w,b
 27165   001540  E11A               	bnz	l21861
 27166   001542  0100               	movlb	0	; () banked
 27167   001544  518E               	movf	(?_getNV+1)& (0+255),w,b
 27168   001546  0101               	movlb	1	; () banked
 27169   001548  19CD               	xorwf	(??_pollServos+1)& (0+255),w,b
 27170   00154A  A4D8               	btfss	status,2,c
 27171   00154C  D014               	goto	l21861
 27172                           
 27173                           ; BSR set to: 1
 27174                           ;../servo.c: 496:                                 sendProducedEvent(((8 + 4*(io))+3), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 27175   00154E  51D7               	movf	pollServos@io& (0+255),w,b
 27176   001550  0D07               	mullw	7
 27177   001552  50F3               	movf	243,w,c
 27178   001554  0F11               	addlw	17
 27179   001556  EC52  F05E         	call	_getNV
 27180   00155A  0100               	movlb	0	; () banked
 27181   00155C  BD8D               	btfsc	?_getNV& (0+255),6,b
 27182   00155E  D002               	goto	u22780
 27183   001560  0E01               	movlw	1
 27184   001562  D001               	goto	u22790
 27185   001564                     u22780:
 27186   001564  0E00               	movlw	0
 27187   001566                     u22790:
 27188   001566  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 27189   001568  0101               	movlb	1	; () banked
 27190   00156A  51D7               	movf	pollServos@io& (0+255),w,b
 27191   00156C  0D04               	mullw	4
 27192   00156E  50F3               	movf	243,w,c
 27193   001570  0F0B               	addlw	11
 27194   001572  EC3B  F04B         	call	_sendProducedEvent
 27195   001576                     l21861:
 27196                           
 27197                           ;../servo.c: 498:                             writeNVM(EEPROM_NVM_TYPE, ((eeprom_address
      +                          _t)((0x3FF -8))-25)+io, currentPos[io]);
 27198   001576  0EDE               	movlw	222
 27199   001578  0101               	movlb	1	; () banked
 27200   00157A  25D7               	addwf	pollServos@io& (0+255),w,b
 27201   00157C  6FCC               	movwf	??_pollServos& (0+255),b
 27202   00157E  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 27203   001580  0E03               	movlw	3
 27204   001582  23CD               	addwfc	(??_pollServos+1)& (0+255),f,b
 27205   001584  C1CC  F0A4         	movff	??_pollServos,writeNVM@index
 27206   001588  C1CD  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 27207   00158C  0100               	movlb	0	; () banked
 27208   00158E  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 27209   001590  0101               	movlb	1	; () banked
 27210   001592  51D7               	movf	pollServos@io& (0+255),w,b
 27211   001594  0FA9               	addlw	low _currentPos
 27212   001596  6ED9               	movwf	fsr2l,c
 27213   001598  6ADA               	clrf	fsr2h,c
 27214   00159A  50DF               	movf	indf2,w,c
 27215   00159C  0100               	movlb	0	; () banked
 27216   00159E  6FA7               	movwf	writeNVM@value& (0+255),b
 27217   0015A0  0E00               	movlw	0
 27218   0015A2  EC60  F05C         	call	_writeNVM
 27219   0015A6  D075               	goto	l21879
 27220   0015A8                     l21865:
 27221                           
 27222                           ; BSR set to: 0
 27223   0015A8  0E10               	movlw	low _servoState
 27224   0015AA  0101               	movlb	1	; () banked
 27225   0015AC  25D7               	addwf	pollServos@io& (0+255),w,b
 27226   0015AE  6ED9               	movwf	fsr2l,c
 27227   0015B0  6ADA               	clrf	fsr2h,c
 27228   0015B2  0E01               	movlw	high _servoState
 27229   0015B4  22DA               	addwfc	fsr2h,f,c
 27230   0015B6  50DF               	movf	indf2,w,c
 27231   0015B8  6FCC               	movwf	??_pollServos& (0+255),b
 27232   0015BA  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 27233                           
 27234                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27235                           ; Switch size 1, requested type "simple"
 27236                           ; Number of cases is 1, Range of values is 0 to 0
 27237                           ; switch strategies available:
 27238                           ; Name         Instructions Cycles
 27239                           ; simple_byte            4     3 (average)
 27240                           ;	Chosen strategy is simple_byte
 27241   0015BC  51CD               	movf	(??_pollServos+1)& (0+255),w,b
 27242   0015BE  0A00               	xorlw	0	; case 0
 27243   0015C0  A4D8               	btfss	status,2,c
 27244   0015C2  D067               	goto	l21879
 27245                           
 27246                           ; BSR set to: 1
 27247                           ; Switch size 1, requested type "simple"
 27248                           ; Number of cases is 4, Range of values is 0 to 3
 27249                           ; switch strategies available:
 27250                           ; Name         Instructions Cycles
 27251                           ; simple_byte           13     7 (average)
 27252                           ;	Chosen strategy is simple_byte
 27253   0015C4  51CC               	movf	??_pollServos& (0+255),w,b
 27254   0015C6  0A00               	xorlw	0	; case 0
 27255   0015C8  B4D8               	btfsc	status,2,c
 27256   0015CA  D063               	goto	l21879
 27257   0015CC  0A01               	xorlw	1	; case 1
 27258   0015CE  B4D8               	btfsc	status,2,c
 27259   0015D0  D060               	goto	l21879
 27260   0015D2  0A03               	xorlw	3	; case 2
 27261   0015D4  B4D8               	btfsc	status,2,c
 27262   0015D6  D5DD               	goto	l21801
 27263   0015D8  0A01               	xorlw	1	; case 3
 27264   0015DA  B4D8               	btfsc	status,2,c
 27265   0015DC  D526               	goto	l21783
 27266   0015DE  D059               	goto	l21879
 27267   0015E0                     l21869:
 27268                           
 27269                           ; BSR set to: 1
 27270   0015E0  51D7               	movf	pollServos@io& (0+255),w,b
 27271   0015E2  0D07               	mullw	7
 27272   0015E4  50F3               	movf	243,w,c
 27273   0015E6  0F10               	addlw	16
 27274   0015E8  EC52  F05E         	call	_getNV
 27275                           
 27276                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27277                           ; Switch size 1, requested type "simple"
 27278                           ; Number of cases is 1, Range of values is 0 to 0
 27279                           ; switch strategies available:
 27280                           ; Name         Instructions Cycles
 27281                           ; simple_byte            4     3 (average)
 27282                           ;	Chosen strategy is simple_byte
 27283   0015EC  0100               	movlb	0	; () banked
 27284   0015EE  518E               	movf	(?_getNV+1)& (0+255),w,b
 27285   0015F0  0A00               	xorlw	0	; case 0
 27286   0015F2  A4D8               	btfss	status,2,c
 27287   0015F4  D04E               	goto	l21879
 27288                           
 27289                           ; BSR set to: 0
 27290                           ; Switch size 1, requested type "simple"
 27291                           ; Number of cases is 3, Range of values is 2 to 4
 27292                           ; switch strategies available:
 27293                           ; Name         Instructions Cycles
 27294                           ; simple_byte           10     6 (average)
 27295                           ;	Chosen strategy is simple_byte
 27296   0015F6  518D               	movf	?_getNV& (0+255),w,b
 27297   0015F8  0A02               	xorlw	2	; case 2
 27298   0015FA  B4D8               	btfsc	status,2,c
 27299   0015FC  EF2D  F004         	goto	l21641
 27300   001600  0A01               	xorlw	1	; case 3
 27301   001602  B4D8               	btfsc	status,2,c
 27302   001604  D4F6               	goto	l21781
 27303   001606  0A07               	xorlw	7	; case 4
 27304   001608  B4D8               	btfsc	status,2,c
 27305   00160A  D7CE               	goto	l21865
 27306                           
 27307                           ; BSR set to: 1
 27308                           ;../servo.c: 507:         switch (servoState[io]) {
 27309   00160C  D042               	goto	l21879
 27310   00160E                     l21871:
 27311                           
 27312                           ; BSR set to: 1
 27313                           ;../servo.c: 514:                 if (getNV((16 + 7*(io) + 1)) & 0x02) {
 27314   00160E  51D7               	movf	pollServos@io& (0+255),w,b
 27315   001610  0D07               	mullw	7
 27316   001612  50F3               	movf	243,w,c
 27317   001614  0F11               	addlw	17
 27318   001616  EC52  F05E         	call	_getNV
 27319   00161A  0100               	movlb	0	; () banked
 27320   00161C  A38D               	btfss	?_getNV& (0+255),1,b
 27321   00161E  D051               	goto	l21881
 27322                           
 27323                           ; BSR set to: 0
 27324                           ;../servo.c: 515:                     if ((tickGet() - ticksWhenStopped[io].val) > 62500
      +                          ) {
 27325   001620  0101               	movlb	1	; () banked
 27326   001622  51D7               	movf	pollServos@io& (0+255),w,b
 27327   001624  0D04               	mullw	4
 27328   001626  0E88               	movlw	low _ticksWhenStopped
 27329   001628  24F3               	addwf	243,w,c
 27330   00162A  6ED9               	movwf	fsr2l,c
 27331   00162C  0E03               	movlw	high _ticksWhenStopped
 27332   00162E  20F4               	addwfc	prodh,w,c
 27333   001630  6EDA               	movwf	fsr2h,c
 27334   001632  CFDE F1CC          	movff	postinc2,??_pollServos
 27335   001636  CFDE F1CD          	movff	postinc2,??_pollServos+1
 27336   00163A  CFDE F1CE          	movff	postinc2,??_pollServos+2
 27337   00163E  CFDE F1CF          	movff	postinc2,??_pollServos+3
 27338   001642  ECE4  F05A         	call	_tickGet	;wreg free
 27339   001646  0101               	movlb	1	; () banked
 27340   001648  51CC               	movf	??_pollServos& (0+255),w,b
 27341   00164A  0100               	movlb	0	; () banked
 27342   00164C  5D8D               	subwf	?_tickGet& (0+255),w,b
 27343   00164E  0101               	movlb	1	; () banked
 27344   001650  6FD0               	movwf	(??_pollServos+4)& (0+255),b
 27345   001652  51CD               	movf	(??_pollServos+1)& (0+255),w,b
 27346   001654  0100               	movlb	0	; () banked
 27347   001656  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 27348   001658  0101               	movlb	1	; () banked
 27349   00165A  6FD1               	movwf	(??_pollServos+5)& (0+255),b
 27350   00165C  51CE               	movf	(??_pollServos+2)& (0+255),w,b
 27351   00165E  0100               	movlb	0	; () banked
 27352   001660  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 27353   001662  0101               	movlb	1	; () banked
 27354   001664  6FD2               	movwf	(??_pollServos+6)& (0+255),b
 27355   001666  51CF               	movf	(??_pollServos+3)& (0+255),w,b
 27356   001668  0100               	movlb	0	; () banked
 27357   00166A  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 27358   00166C  0101               	movlb	1	; () banked
 27359   00166E  6FD3               	movwf	(??_pollServos+7)& (0+255),b
 27360   001670  51D3               	movf	(??_pollServos+7)& (0+255),w,b
 27361   001672  11D2               	iorwf	(??_pollServos+6)& (0+255),w,b
 27362   001674  E106               	bnz	u22810
 27363   001676  0E25               	movlw	37
 27364   001678  5DD0               	subwf	(??_pollServos+4)& (0+255),w,b
 27365   00167A  0EF4               	movlw	244
 27366   00167C  59D1               	subwfb	(??_pollServos+5)& (0+255),w,b
 27367   00167E  A0D8               	btfss	status,0,c
 27368   001680  D020               	goto	l21881
 27369   001682                     u22810:
 27370                           
 27371                           ; BSR set to: 1
 27372                           ;../servo.c: 516:                         servoState[io] = SS_OFF;
 27373   001682  0E10               	movlw	low _servoState
 27374   001684  25D7               	addwf	pollServos@io& (0+255),w,b
 27375   001686  6ED9               	movwf	fsr2l,c
 27376   001688  6ADA               	clrf	fsr2h,c
 27377   00168A  0E01               	movlw	high _servoState
 27378   00168C  22DA               	addwfc	fsr2h,f,c
 27379   00168E  6ADF               	clrf	indf2,c
 27380   001690  D018               	goto	l21881
 27381   001692                     l21879:
 27382   001692  0E10               	movlw	low _servoState
 27383   001694  0101               	movlb	1	; () banked
 27384   001696  25D7               	addwf	pollServos@io& (0+255),w,b
 27385   001698  6ED9               	movwf	fsr2l,c
 27386   00169A  6ADA               	clrf	fsr2h,c
 27387   00169C  0E01               	movlw	high _servoState
 27388   00169E  22DA               	addwfc	fsr2h,f,c
 27389   0016A0  50DF               	movf	indf2,w,c
 27390   0016A2  6FCC               	movwf	??_pollServos& (0+255),b
 27391   0016A4  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 27392                           
 27393                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27394                           ; Switch size 1, requested type "simple"
 27395                           ; Number of cases is 1, Range of values is 0 to 0
 27396                           ; switch strategies available:
 27397                           ; Name         Instructions Cycles
 27398                           ; simple_byte            4     3 (average)
 27399                           ;	Chosen strategy is simple_byte
 27400   0016A6  51CD               	movf	(??_pollServos+1)& (0+255),w,b
 27401   0016A8  0A00               	xorlw	0	; case 0
 27402   0016AA  A4D8               	btfss	status,2,c
 27403   0016AC  D00A               	goto	l21881
 27404                           
 27405                           ; BSR set to: 1
 27406                           ; Switch size 1, requested type "simple"
 27407                           ; Number of cases is 4, Range of values is 0 to 3
 27408                           ; switch strategies available:
 27409                           ; Name         Instructions Cycles
 27410                           ; simple_byte           13     7 (average)
 27411                           ;	Chosen strategy is simple_byte
 27412   0016AE  51CC               	movf	??_pollServos& (0+255),w,b
 27413   0016B0  0A00               	xorlw	0	; case 0
 27414   0016B2  B4D8               	btfsc	status,2,c
 27415   0016B4  D006               	goto	l21881
 27416   0016B6  0A01               	xorlw	1	; case 1
 27417   0016B8  B4D8               	btfsc	status,2,c
 27418   0016BA  D7A9               	goto	l21871
 27419   0016BC  0A03               	xorlw	3	; case 2
 27420   0016BE  A4D8               	btfss	status,2,c
 27421   0016C0  0A01               	xorlw	1	; case 3
 27422   0016C2                     l21881:
 27423                           
 27424                           ;../servo.c: 526:     }
 27425   0016C2  0101               	movlb	1	; () banked
 27426   0016C4  2BD7               	incf	pollServos@io& (0+255),f,b
 27427                           
 27428                           ; BSR set to: 1
 27429   0016C6  0E0F               	movlw	15
 27430   0016C8  65D7               	cpfsgt	pollServos@io& (0+255),b
 27431   0016CA  D78A               	goto	l21869
 27432   0016CC  0012               	return	
 27433   0016CE                     __end_of_pollServos:
 27434                           	callstack 0
 27435                           
 27436 ;; *************** function _initBounce *****************
 27437 ;; Defined at:
 27438 ;;		line 89 in file "../bounce.c"
 27439 ;; Parameters:    Size  Location     Type
 27440 ;;  io              1    wreg     unsigned char 
 27441 ;; Auto vars:     Size  Location     Type
 27442 ;;  io              1   45[BANK0 ] unsigned char 
 27443 ;; Return value:  Size  Location     Type
 27444 ;;                  1    wreg      void 
 27445 ;; Registers used:
 27446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27447 ;; Tracked objects:
 27448 ;;		On entry : 0/0
 27449 ;;		On exit  : 0/0
 27450 ;;		Unchanged: 0/0
 27451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27453 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27455 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27456 ;;Total ram usage:        1 bytes
 27457 ;; Hardware stack levels used: 1
 27458 ;; Hardware stack levels required when called: 12
 27459 ;; This function calls:
 27460 ;;		Nothing
 27461 ;; This function is called by:
 27462 ;;		_pollServos
 27463 ;; This function uses a non-reentrant model
 27464 ;;
 27465                           
 27466                           	psect	text101
 27467   00C15C                     __ptext101:
 27468                           	callstack 0
 27469   00C15C                     _initBounce:
 27470                           	callstack 15
 27471                           
 27472                           ; BSR set to: 1
 27473                           ;incstack = 0
 27474                           ;initBounce@io stored from wreg
 27475   00C15C  0100               	movlb	0	; () banked
 27476   00C15E  6F8D               	movwf	initBounce@io& (0+255),b
 27477                           
 27478                           ;../bounce.c: 90:     bounceState[io] = STATE_FIRST_PULL;
 27479   00C160  0E44               	movlw	low _bounceState
 27480   00C162  0100               	movlb	0	; () banked
 27481   00C164  258D               	addwf	initBounce@io& (0+255),w,b
 27482   00C166  6ED9               	movwf	fsr2l,c
 27483   00C168  6ADA               	clrf	fsr2h,c
 27484   00C16A  0E02               	movlw	high _bounceState
 27485   00C16C  22DA               	addwfc	fsr2h,f,c
 27486   00C16E  6ADF               	clrf	indf2,c
 27487                           
 27488                           ; BSR set to: 0
 27489                           ;../bounce.c: 91:     speed[io] = 0;
 27490   00C170  518D               	movf	initBounce@io& (0+255),w,b
 27491   00C172  0D02               	mullw	2
 27492   00C174  0E00               	movlw	low _speed
 27493   00C176  24F3               	addwf	243,w,c
 27494   00C178  6ED9               	movwf	fsr2l,c
 27495   00C17A  0E02               	movlw	high _speed
 27496   00C17C  20F4               	addwfc	prodh,w,c
 27497   00C17E  6EDA               	movwf	fsr2h,c
 27498   00C180  6ADE               	clrf	postinc2,c
 27499   00C182  6ADD               	clrf	postdec2,c
 27500                           
 27501                           ; BSR set to: 0
 27502   00C184  0012               	return		;funcret
 27503   00C186                     __end_of_initBounce:
 27504                           	callstack 0
 27505                           
 27506 ;; *************** function _bounceUp *****************
 27507 ;; Defined at:
 27508 ;;		line 161 in file "../bounce.c"
 27509 ;; Parameters:    Size  Location     Type
 27510 ;;  io              1    wreg     unsigned char 
 27511 ;; Auto vars:     Size  Location     Type
 27512 ;;  io              1   71[BANK0 ] unsigned char 
 27513 ;;  midway          1   70[BANK0 ] unsigned char 
 27514 ;;  reversed        1   69[BANK0 ] enum E12710
 27515 ;; Return value:  Size  Location     Type
 27516 ;;                  1    wreg      enum E12710
 27517 ;; Registers used:
 27518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27519 ;; Tracked objects:
 27520 ;;		On entry : 0/0
 27521 ;;		On exit  : 0/0
 27522 ;;		Unchanged: 0/0
 27523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27525 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27526 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27527 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27528 ;;Total ram usage:        9 bytes
 27529 ;; Hardware stack levels used: 1
 27530 ;; Hardware stack levels required when called: 13
 27531 ;; This function calls:
 27532 ;;		___awdiv
 27533 ;;		_getNV
 27534 ;; This function is called by:
 27535 ;;		_pollServos
 27536 ;; This function uses a non-reentrant model
 27537 ;;
 27538                           
 27539                           	psect	text102
 27540   005A58                     __ptext102:
 27541                           	callstack 0
 27542   005A58                     _bounceUp:
 27543                           	callstack 14
 27544                           
 27545                           ; BSR set to: 0
 27546                           ;incstack = 0
 27547                           ;bounceUp@io stored from wreg
 27548   005A58  0100               	movlb	0	; () banked
 27549   005A5A  6FA7               	movwf	bounceUp@io& (0+255),b
 27550                           
 27551                           ;../bounce.c: 162:     Boolean reversed = ((uint8_t)getNV((16 + 7*(io) + 3)) > (uint8_t)
      +                          getNV((16 + 7*(io) + 2)));
 27552   005A5C  0100               	movlb	0	; () banked
 27553   005A5E  51A7               	movf	bounceUp@io& (0+255),w,b
 27554   005A60  0D07               	mullw	7
 27555   005A62  50F3               	movf	243,w,c
 27556   005A64  0F12               	addlw	18
 27557   005A66  EC52  F05E         	call	_getNV
 27558   005A6A  C08D  F09F         	movff	?_getNV,??_bounceUp
 27559   005A6E  C08E  F0A0         	movff	?_getNV+1,??_bounceUp+1
 27560   005A72  0100               	movlb	0	; () banked
 27561   005A74  51A7               	movf	bounceUp@io& (0+255),w,b
 27562   005A76  0D07               	mullw	7
 27563   005A78  50F3               	movf	243,w,c
 27564   005A7A  0F13               	addlw	19
 27565   005A7C  EC52  F05E         	call	_getNV
 27566   005A80  0100               	movlb	0	; () banked
 27567   005A82  518D               	movf	?_getNV& (0+255),w,b
 27568   005A84  5D9F               	subwf	??_bounceUp& (0+255),w,b
 27569   005A86  B0D8               	btfsc	status,0,c
 27570   005A88  D002               	goto	u21340
 27571   005A8A  0E01               	movlw	1
 27572   005A8C  D001               	goto	u21350
 27573   005A8E                     u21340:
 27574   005A8E  0E00               	movlw	0
 27575   005A90                     u21350:
 27576   005A90  6FA5               	movwf	bounceUp@reversed& (0+255),b
 27577                           
 27578                           ;../bounce.c: 163:     uint8_t midway;;../bounce.c: 164:     switch(bounceState[io]) {
 27579   005A92  D10A               	goto	l20827
 27580   005A94                     l20777:
 27581                           
 27582                           ; BSR set to: 0
 27583                           ;../bounce.c: 167:         midway = ((uint8_t)getNV((16 + 7*(io) + 3)))/2 +
 27584   005A94  51A7               	movf	bounceUp@io& (0+255),w,b
 27585   005A96  0D07               	mullw	7
 27586   005A98  50F3               	movf	243,w,c
 27587   005A9A  0F12               	addlw	18
 27588   005A9C  EC52  F05E         	call	_getNV
 27589   005AA0  0100               	movlb	0	; () banked
 27590   005AA2  518D               	movf	?_getNV& (0+255),w,b
 27591   005AA4  6F97               	movwf	___awdiv@dividend& (0+255),b
 27592   005AA6  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 27593   005AA8  0E00               	movlw	0
 27594   005AAA  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27595   005AAC  0E02               	movlw	2
 27596   005AAE  6F99               	movwf	___awdiv@divisor& (0+255),b
 27597   005AB0  EC1C  F053         	call	___awdiv	;wreg free
 27598   005AB4  C097  F09F         	movff	?___awdiv,??_bounceUp
 27599   005AB8  C098  F0A0         	movff	?___awdiv+1,??_bounceUp+1
 27600   005ABC  0100               	movlb	0	; () banked
 27601   005ABE  51A7               	movf	bounceUp@io& (0+255),w,b
 27602   005AC0  0D07               	mullw	7
 27603   005AC2  50F3               	movf	243,w,c
 27604   005AC4  0F13               	addlw	19
 27605   005AC6  EC52  F05E         	call	_getNV
 27606   005ACA  0100               	movlb	0	; () banked
 27607   005ACC  518D               	movf	?_getNV& (0+255),w,b
 27608   005ACE  6F97               	movwf	___awdiv@dividend& (0+255),b
 27609   005AD0  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 27610   005AD2  0E00               	movlw	0
 27611   005AD4  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27612   005AD6  0E02               	movlw	2
 27613   005AD8  6F99               	movwf	___awdiv@divisor& (0+255),b
 27614   005ADA  EC1C  F053         	call	___awdiv	;wreg free
 27615   005ADE  0100               	movlb	0	; () banked
 27616   005AE0  5197               	movf	?___awdiv& (0+255),w,b
 27617   005AE2  259F               	addwf	??_bounceUp& (0+255),w,b
 27618   005AE4  6FA6               	movwf	bounceUp@midway& (0+255),b
 27619                           
 27620                           ; BSR set to: 0
 27621                           ;../bounce.c: 169:         if (reversed) {
 27622   005AE6  51A5               	movf	bounceUp@reversed& (0+255),w,b
 27623   005AE8  B4D8               	btfsc	status,2,c
 27624   005AEA  D024               	goto	l20789
 27625                           
 27626                           ; BSR set to: 0
 27627                           ;../bounce.c: 170:             currentPos[io] -= (uint8_t)getNV((16 + 7*(io) + 5));
 27628   005AEC  51A7               	movf	bounceUp@io& (0+255),w,b
 27629   005AEE  0D07               	mullw	7
 27630   005AF0  50F3               	movf	243,w,c
 27631   005AF2  0F15               	addlw	21
 27632   005AF4  EC52  F05E         	call	_getNV
 27633   005AF8  0100               	movlb	0	; () banked
 27634   005AFA  51A7               	movf	bounceUp@io& (0+255),w,b
 27635   005AFC  0FA9               	addlw	low _currentPos
 27636   005AFE  6ED9               	movwf	fsr2l,c
 27637   005B00  6ADA               	clrf	fsr2h,c
 27638   005B02  518D               	movf	?_getNV& (0+255),w,b
 27639   005B04  5EDF               	subwf	indf2,f,c
 27640                           
 27641                           ; BSR set to: 0
 27642                           ;../bounce.c: 171:             if (currentPos[io] <= midway) {
 27643   005B06  51A7               	movf	bounceUp@io& (0+255),w,b
 27644   005B08  0FA9               	addlw	low _currentPos
 27645   005B0A  6ED9               	movwf	fsr2l,c
 27646   005B0C  6ADA               	clrf	fsr2h,c
 27647   005B0E  50DE               	movf	postinc2,w,c
 27648   005B10  5DA6               	subwf	bounceUp@midway& (0+255),w,b
 27649   005B12  A0D8               	btfss	status,0,c
 27650   005B14  D0E1               	goto	l20829
 27651                           
 27652                           ; BSR set to: 0
 27653                           ;../bounce.c: 172:                 bounceState[io] = STATE_PAUSE;
 27654   005B16  0E44               	movlw	low _bounceState
 27655   005B18  25A7               	addwf	bounceUp@io& (0+255),w,b
 27656   005B1A  6ED9               	movwf	fsr2l,c
 27657   005B1C  6ADA               	clrf	fsr2h,c
 27658   005B1E  0E02               	movlw	high _bounceState
 27659   005B20  22DA               	addwfc	fsr2h,f,c
 27660   005B22  0E01               	movlw	1
 27661   005B24  6EDF               	movwf	indf2,c
 27662                           
 27663                           ; BSR set to: 0
 27664                           ;../bounce.c: 173:                 speed[io] = (uint8_t)getNV((16 + 7*(io) + 6));
 27665   005B26  51A7               	movf	bounceUp@io& (0+255),w,b
 27666   005B28  0D07               	mullw	7
 27667   005B2A  50F3               	movf	243,w,c
 27668   005B2C  0F16               	addlw	22
 27669   005B2E  EC52  F05E         	call	_getNV
 27670   005B32  D023               	goto	L6
 27671   005B34                     l20789:
 27672                           
 27673                           ; BSR set to: 0
 27674                           ;../bounce.c: 176:             currentPos[io] += (uint8_t)getNV((16 + 7*(io) + 5));
 27675   005B34  51A7               	movf	bounceUp@io& (0+255),w,b
 27676   005B36  0D07               	mullw	7
 27677   005B38  50F3               	movf	243,w,c
 27678   005B3A  0F15               	addlw	21
 27679   005B3C  EC52  F05E         	call	_getNV
 27680   005B40  0100               	movlb	0	; () banked
 27681   005B42  51A7               	movf	bounceUp@io& (0+255),w,b
 27682   005B44  0FA9               	addlw	low _currentPos
 27683   005B46  6ED9               	movwf	fsr2l,c
 27684   005B48  6ADA               	clrf	fsr2h,c
 27685   005B4A  518D               	movf	?_getNV& (0+255),w,b
 27686   005B4C  26DF               	addwf	indf2,f,c
 27687                           
 27688                           ; BSR set to: 0
 27689                           ;../bounce.c: 177:             if (currentPos[io] >= midway) {
 27690   005B4E  51A7               	movf	bounceUp@io& (0+255),w,b
 27691   005B50  0FA9               	addlw	low _currentPos
 27692   005B52  6ED9               	movwf	fsr2l,c
 27693   005B54  6ADA               	clrf	fsr2h,c
 27694   005B56  51A6               	movf	bounceUp@midway& (0+255),w,b
 27695   005B58  5CDE               	subwf	postinc2,w,c
 27696   005B5A  A0D8               	btfss	status,0,c
 27697   005B5C  D0BD               	goto	l20829
 27698                           
 27699                           ; BSR set to: 0
 27700                           ;../bounce.c: 178:                 bounceState[io] = STATE_PAUSE;
 27701   005B5E  0E44               	movlw	low _bounceState
 27702   005B60  25A7               	addwf	bounceUp@io& (0+255),w,b
 27703   005B62  6ED9               	movwf	fsr2l,c
 27704   005B64  6ADA               	clrf	fsr2h,c
 27705   005B66  0E02               	movlw	high _bounceState
 27706   005B68  22DA               	addwfc	fsr2h,f,c
 27707   005B6A  0E01               	movlw	1
 27708   005B6C  6EDF               	movwf	indf2,c
 27709                           
 27710                           ; BSR set to: 0
 27711                           ;../bounce.c: 179:                 speed[io] = (uint8_t)getNV((16 + 7*(io) + 6));
 27712   005B6E  51A7               	movf	bounceUp@io& (0+255),w,b
 27713   005B70  0D07               	mullw	7
 27714   005B72  50F3               	movf	243,w,c
 27715   005B74  0F16               	addlw	22
 27716   005B76  EC52  F05E         	call	_getNV
 27717   005B7A                     L6:
 27718   005B7A  0100               	movlb	0	; () banked
 27719   005B7C  518D               	movf	?_getNV& (0+255),w,b
 27720   005B7E  6F9F               	movwf	??_bounceUp& (0+255),b
 27721   005B80  6BA0               	clrf	(??_bounceUp+1)& (0+255),b
 27722   005B82  51A7               	movf	bounceUp@io& (0+255),w,b
 27723   005B84  0D02               	mullw	2
 27724   005B86  0E00               	movlw	low _speed
 27725   005B88  24F3               	addwf	243,w,c
 27726   005B8A  6ED9               	movwf	fsr2l,c
 27727   005B8C  0E02               	movlw	high _speed
 27728   005B8E  20F4               	addwfc	prodh,w,c
 27729   005B90  6EDA               	movwf	fsr2h,c
 27730   005B92  C09F  FFDE         	movff	??_bounceUp,postinc2
 27731   005B96  C0A0  FFDD         	movff	??_bounceUp+1,postdec2
 27732   005B9A  D09E               	goto	l20829
 27733   005B9C                     l20797:
 27734                           
 27735                           ; BSR set to: 0
 27736                           ;../bounce.c: 185:         if (speed[io] == 0) bounceState[io] = STATE_SECOND_PULL;
 27737   005B9C  51A7               	movf	bounceUp@io& (0+255),w,b
 27738   005B9E  0D02               	mullw	2
 27739   005BA0  0E00               	movlw	low _speed
 27740   005BA2  24F3               	addwf	243,w,c
 27741   005BA4  6ED9               	movwf	fsr2l,c
 27742   005BA6  0E02               	movlw	high _speed
 27743   005BA8  20F4               	addwfc	prodh,w,c
 27744   005BAA  6EDA               	movwf	fsr2h,c
 27745   005BAC  50DE               	movf	postinc2,w,c
 27746   005BAE  10DE               	iorwf	postinc2,w,c
 27747   005BB0  A4D8               	btfss	status,2,c
 27748   005BB2  D008               	goto	l20801
 27749                           
 27750                           ; BSR set to: 0
 27751   005BB4  0E44               	movlw	low _bounceState
 27752   005BB6  25A7               	addwf	bounceUp@io& (0+255),w,b
 27753   005BB8  6ED9               	movwf	fsr2l,c
 27754   005BBA  6ADA               	clrf	fsr2h,c
 27755   005BBC  0E02               	movlw	high _bounceState
 27756   005BBE  22DA               	addwfc	fsr2h,f,c
 27757   005BC0  0E02               	movlw	2
 27758   005BC2  6EDF               	movwf	indf2,c
 27759   005BC4                     l20801:
 27760                           
 27761                           ; BSR set to: 0
 27762                           ;../bounce.c: 186:         speed[io]--;
 27763   005BC4  51A7               	movf	bounceUp@io& (0+255),w,b
 27764   005BC6  0D02               	mullw	2
 27765   005BC8  0E00               	movlw	low _speed
 27766   005BCA  24F3               	addwf	243,w,c
 27767   005BCC  6ED9               	movwf	fsr2l,c
 27768   005BCE  0E02               	movlw	high _speed
 27769   005BD0  20F4               	addwfc	prodh,w,c
 27770   005BD2  6EDA               	movwf	fsr2h,c
 27771   005BD4  06DE               	decf	postinc2,f,c
 27772   005BD6  0E00               	movlw	0
 27773   005BD8  5ADD               	subwfb	postdec2,f,c
 27774                           
 27775                           ;../bounce.c: 187:         break;
 27776   005BDA  D07E               	goto	l20829
 27777   005BDC                     l20803:
 27778                           
 27779                           ; BSR set to: 0
 27780                           ;../bounce.c: 190:         if (reversed) {
 27781   005BDC  51A5               	movf	bounceUp@reversed& (0+255),w,b
 27782   005BDE  B4D8               	btfsc	status,2,c
 27783   005BE0  D036               	goto	l20815
 27784                           
 27785                           ; BSR set to: 0
 27786                           ;../bounce.c: 191:             currentPos[io] -= (uint8_t)getNV((16 + 7*(io) + 5));
 27787   005BE2  51A7               	movf	bounceUp@io& (0+255),w,b
 27788   005BE4  0D07               	mullw	7
 27789   005BE6  50F3               	movf	243,w,c
 27790   005BE8  0F15               	addlw	21
 27791   005BEA  EC52  F05E         	call	_getNV
 27792   005BEE  0100               	movlb	0	; () banked
 27793   005BF0  51A7               	movf	bounceUp@io& (0+255),w,b
 27794   005BF2  0FA9               	addlw	low _currentPos
 27795   005BF4  6ED9               	movwf	fsr2l,c
 27796   005BF6  6ADA               	clrf	fsr2h,c
 27797   005BF8  518D               	movf	?_getNV& (0+255),w,b
 27798   005BFA  5EDF               	subwf	indf2,f,c
 27799                           
 27800                           ; BSR set to: 0
 27801                           ;../bounce.c: 192:             if (currentPos[io]<=targetPos[io]-3) {
 27802   005BFC  51A7               	movf	bounceUp@io& (0+255),w,b
 27803   005BFE  0FA9               	addlw	low _currentPos
 27804   005C00  6ED9               	movwf	fsr2l,c
 27805   005C02  6ADA               	clrf	fsr2h,c
 27806   005C04  50DF               	movf	indf2,w,c
 27807   005C06  6F9F               	movwf	??_bounceUp& (0+255),b
 27808   005C08  6BA0               	clrf	(??_bounceUp+1)& (0+255),b
 27809   005C0A  0E20               	movlw	low _targetPos
 27810   005C0C  25A7               	addwf	bounceUp@io& (0+255),w,b
 27811   005C0E  6ED9               	movwf	fsr2l,c
 27812   005C10  6ADA               	clrf	fsr2h,c
 27813   005C12  0E01               	movlw	high _targetPos
 27814   005C14  22DA               	addwfc	fsr2h,f,c
 27815   005C16  50DF               	movf	indf2,w,c
 27816   005C18  6FA1               	movwf	(??_bounceUp+2)& (0+255),b
 27817   005C1A  0EFD               	movlw	253
 27818   005C1C  25A1               	addwf	(??_bounceUp+2)& (0+255),w,b
 27819   005C1E  6FA2               	movwf	(??_bounceUp+3)& (0+255),b
 27820   005C20  6BA3               	clrf	(??_bounceUp+4)& (0+255),b
 27821   005C22  0EFF               	movlw	255
 27822   005C24  23A3               	addwfc	(??_bounceUp+4)& (0+255),f,b
 27823   005C26  519F               	movf	??_bounceUp& (0+255),w,b
 27824   005C28  5DA2               	subwf	(??_bounceUp+3)& (0+255),w,b
 27825   005C2A  51A3               	movf	(??_bounceUp+4)& (0+255),w,b
 27826   005C2C  0A80               	xorlw	128
 27827   005C2E  6FA4               	movwf	(??_bounceUp+5)& (0+255),b
 27828   005C30  51A0               	movf	(??_bounceUp+1)& (0+255),w,b
 27829   005C32  0A80               	xorlw	128
 27830   005C34  59A4               	subwfb	(??_bounceUp+5)& (0+255),w,b
 27831   005C36  A0D8               	btfss	status,0,c
 27832   005C38  D04F               	goto	l20829
 27833   005C3A                     u21410:
 27834                           
 27835                           ; BSR set to: 0
 27836                           ;../bounce.c: 193:                 bounceState[io] = STATE_DONE;
 27837   005C3A  0E44               	movlw	low _bounceState
 27838   005C3C  25A7               	addwf	bounceUp@io& (0+255),w,b
 27839   005C3E  6ED9               	movwf	fsr2l,c
 27840   005C40  6ADA               	clrf	fsr2h,c
 27841   005C42  0E02               	movlw	high _bounceState
 27842   005C44  22DA               	addwfc	fsr2h,f,c
 27843   005C46  0E03               	movlw	3
 27844   005C48  6EDF               	movwf	indf2,c
 27845                           
 27846                           ; BSR set to: 0
 27847                           ;../bounce.c: 194:                 return TRUE;
 27848   005C4A  0E01               	movlw	1
 27849   005C4C  0012               	return	
 27850   005C4E                     l20815:
 27851                           
 27852                           ; BSR set to: 0
 27853                           ;../bounce.c: 197:             currentPos[io] += (uint8_t)getNV((16 + 7*(io) + 5));
 27854   005C4E  51A7               	movf	bounceUp@io& (0+255),w,b
 27855   005C50  0D07               	mullw	7
 27856   005C52  50F3               	movf	243,w,c
 27857   005C54  0F15               	addlw	21
 27858   005C56  EC52  F05E         	call	_getNV
 27859   005C5A  0100               	movlb	0	; () banked
 27860   005C5C  51A7               	movf	bounceUp@io& (0+255),w,b
 27861   005C5E  0FA9               	addlw	low _currentPos
 27862   005C60  6ED9               	movwf	fsr2l,c
 27863   005C62  6ADA               	clrf	fsr2h,c
 27864   005C64  518D               	movf	?_getNV& (0+255),w,b
 27865   005C66  26DF               	addwf	indf2,f,c
 27866                           
 27867                           ; BSR set to: 0
 27868                           ;../bounce.c: 198:             if (currentPos[io]>=targetPos[io]-3) {
 27869   005C68  0E20               	movlw	low _targetPos
 27870   005C6A  25A7               	addwf	bounceUp@io& (0+255),w,b
 27871   005C6C  6ED9               	movwf	fsr2l,c
 27872   005C6E  6ADA               	clrf	fsr2h,c
 27873   005C70  0E01               	movlw	high _targetPos
 27874   005C72  22DA               	addwfc	fsr2h,f,c
 27875   005C74  50DF               	movf	indf2,w,c
 27876   005C76  6F9F               	movwf	??_bounceUp& (0+255),b
 27877   005C78  0EFD               	movlw	253
 27878   005C7A  259F               	addwf	??_bounceUp& (0+255),w,b
 27879   005C7C  6FA0               	movwf	(??_bounceUp+1)& (0+255),b
 27880   005C7E  6BA1               	clrf	(??_bounceUp+2)& (0+255),b
 27881   005C80  0EFF               	movlw	255
 27882   005C82  23A1               	addwfc	(??_bounceUp+2)& (0+255),f,b
 27883   005C84  51A7               	movf	bounceUp@io& (0+255),w,b
 27884   005C86  0FA9               	addlw	low _currentPos
 27885   005C88  6ED9               	movwf	fsr2l,c
 27886   005C8A  6ADA               	clrf	fsr2h,c
 27887   005C8C  50DF               	movf	indf2,w,c
 27888   005C8E  6FA2               	movwf	(??_bounceUp+3)& (0+255),b
 27889   005C90  6BA3               	clrf	(??_bounceUp+4)& (0+255),b
 27890   005C92  51A0               	movf	(??_bounceUp+1)& (0+255),w,b
 27891   005C94  5DA2               	subwf	(??_bounceUp+3)& (0+255),w,b
 27892   005C96  51A3               	movf	(??_bounceUp+4)& (0+255),w,b
 27893   005C98  0A80               	xorlw	128
 27894   005C9A  6FA4               	movwf	(??_bounceUp+5)& (0+255),b
 27895   005C9C  51A1               	movf	(??_bounceUp+2)& (0+255),w,b
 27896   005C9E  0A80               	xorlw	128
 27897   005CA0  59A4               	subwfb	(??_bounceUp+5)& (0+255),w,b
 27898   005CA2  B0D8               	btfsc	status,0,c
 27899   005CA4  D7CA               	goto	u21410
 27900   005CA6  D018               	goto	l20829
 27901   005CA8                     l20827:
 27902                           
 27903                           ; BSR set to: 0
 27904   005CA8  0E44               	movlw	low _bounceState
 27905   005CAA  25A7               	addwf	bounceUp@io& (0+255),w,b
 27906   005CAC  6ED9               	movwf	fsr2l,c
 27907   005CAE  6ADA               	clrf	fsr2h,c
 27908   005CB0  0E02               	movlw	high _bounceState
 27909   005CB2  22DA               	addwfc	fsr2h,f,c
 27910   005CB4  50DF               	movf	indf2,w,c
 27911   005CB6  6F9F               	movwf	??_bounceUp& (0+255),b
 27912   005CB8  6BA0               	clrf	(??_bounceUp+1)& (0+255),b
 27913                           
 27914                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27915                           ; Switch size 1, requested type "simple"
 27916                           ; Number of cases is 1, Range of values is 0 to 0
 27917                           ; switch strategies available:
 27918                           ; Name         Instructions Cycles
 27919                           ; simple_byte            4     3 (average)
 27920                           ;	Chosen strategy is simple_byte
 27921   005CBA  51A0               	movf	(??_bounceUp+1)& (0+255),w,b
 27922   005CBC  0A00               	xorlw	0	; case 0
 27923   005CBE  A4D8               	btfss	status,2,c
 27924   005CC0  D00B               	goto	l20829
 27925                           
 27926                           ; BSR set to: 0
 27927                           ; Switch size 1, requested type "simple"
 27928                           ; Number of cases is 4, Range of values is 0 to 3
 27929                           ; switch strategies available:
 27930                           ; Name         Instructions Cycles
 27931                           ; simple_byte           13     7 (average)
 27932                           ;	Chosen strategy is simple_byte
 27933   005CC2  519F               	movf	??_bounceUp& (0+255),w,b
 27934   005CC4  0A00               	xorlw	0	; case 0
 27935   005CC6  B4D8               	btfsc	status,2,c
 27936   005CC8  D6E5               	goto	l20777
 27937   005CCA  0A01               	xorlw	1	; case 1
 27938   005CCC  B4D8               	btfsc	status,2,c
 27939   005CCE  D766               	goto	l20797
 27940   005CD0  0A03               	xorlw	3	; case 2
 27941   005CD2  B4D8               	btfsc	status,2,c
 27942   005CD4  D783               	goto	l20803
 27943   005CD6  0A01               	xorlw	1	; case 3
 27944   005CD8                     l20829:
 27945                           
 27946                           ; BSR set to: 0
 27947                           ;../bounce.c: 207:     return FALSE;
 27948   005CD8  0E00               	movlw	0
 27949                           
 27950                           ; BSR set to: 0
 27951   005CDA  0012               	return		;funcret
 27952   005CDC                     __end_of_bounceUp:
 27953                           	callstack 0
 27954                           
 27955 ;; *************** function _bounceDown *****************
 27956 ;; Defined at:
 27957 ;;		line 103 in file "../bounce.c"
 27958 ;; Parameters:    Size  Location     Type
 27959 ;;  io              1    wreg     unsigned char 
 27960 ;; Auto vars:     Size  Location     Type
 27961 ;;  io              1    3[BANK1 ] unsigned char 
 27962 ;;  tmp             2    1[BANK1 ] int 
 27963 ;;  reversed        1    0[BANK1 ] enum E12710
 27964 ;; Return value:  Size  Location     Type
 27965 ;;                  1    wreg      enum E12710
 27966 ;; Registers used:
 27967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27968 ;; Tracked objects:
 27969 ;;		On entry : 0/0
 27970 ;;		On exit  : 0/0
 27971 ;;		Unchanged: 0/0
 27972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27974 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27975 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27976 ;;      Totals:         0       7       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27977 ;;Total ram usage:       11 bytes
 27978 ;; Hardware stack levels used: 1
 27979 ;; Hardware stack levels required when called: 13
 27980 ;; This function calls:
 27981 ;;		___awdiv
 27982 ;;		___wmul
 27983 ;;		_getNV
 27984 ;; This function is called by:
 27985 ;;		_pollServos
 27986 ;; This function uses a non-reentrant model
 27987 ;;
 27988                           
 27989                           	psect	text103
 27990   0028AC                     __ptext103:
 27991                           	callstack 0
 27992   0028AC                     _bounceDown:
 27993                           	callstack 14
 27994                           
 27995                           ; BSR set to: 0
 27996                           ;incstack = 0
 27997                           ;bounceDown@io stored from wreg
 27998   0028AC  0101               	movlb	1	; () banked
 27999   0028AE  6FBD               	movwf	bounceDown@io& (0+255),b
 28000                           
 28001                           ;../bounce.c: 105:     if ((currentPos[io]>targetPos[io]+3) || (currentPos[io]<targetPos
      +                          [io]-3) || (speed[io]>3) || (speed[io]<-3)) {
 28002   0028B0  0101               	movlb	1	; () banked
 28003   0028B2  51BD               	movf	bounceDown@io& (0+255),w,b
 28004   0028B4  0FA9               	addlw	low _currentPos
 28005   0028B6  6ED9               	movwf	fsr2l,c
 28006   0028B8  6ADA               	clrf	fsr2h,c
 28007   0028BA  50DF               	movf	indf2,w,c
 28008   0028BC  0100               	movlb	0	; () banked
 28009   0028BE  6F9F               	movwf	??_bounceDown& (0+255),b
 28010   0028C0  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 28011   0028C2  0E20               	movlw	low _targetPos
 28012   0028C4  0101               	movlb	1	; () banked
 28013   0028C6  25BD               	addwf	bounceDown@io& (0+255),w,b
 28014   0028C8  6ED9               	movwf	fsr2l,c
 28015   0028CA  6ADA               	clrf	fsr2h,c
 28016   0028CC  0E01               	movlw	high _targetPos
 28017   0028CE  22DA               	addwfc	fsr2h,f,c
 28018   0028D0  50DF               	movf	indf2,w,c
 28019   0028D2  0100               	movlb	0	; () banked
 28020   0028D4  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 28021   0028D6  6BA2               	clrf	(??_bounceDown+3)& (0+255),b
 28022   0028D8  0E03               	movlw	3
 28023   0028DA  27A1               	addwf	(??_bounceDown+2)& (0+255),f,b
 28024   0028DC  0E00               	movlw	0
 28025   0028DE  23A2               	addwfc	(??_bounceDown+3)& (0+255),f,b
 28026   0028E0  519F               	movf	??_bounceDown& (0+255),w,b
 28027   0028E2  5DA1               	subwf	(??_bounceDown+2)& (0+255),w,b
 28028   0028E4  51A2               	movf	(??_bounceDown+3)& (0+255),w,b
 28029   0028E6  0A80               	xorlw	128
 28030   0028E8  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 28031   0028EA  51A0               	movf	(??_bounceDown+1)& (0+255),w,b
 28032   0028EC  0A80               	xorlw	128
 28033   0028EE  59A3               	subwfb	(??_bounceDown+4)& (0+255),w,b
 28034   0028F0  A0D8               	btfss	status,0,c
 28035   0028F2  D047               	goto	u21460
 28036                           
 28037                           ; BSR set to: 0
 28038   0028F4  0E20               	movlw	low _targetPos
 28039   0028F6  0101               	movlb	1	; () banked
 28040   0028F8  25BD               	addwf	bounceDown@io& (0+255),w,b
 28041   0028FA  6ED9               	movwf	fsr2l,c
 28042   0028FC  6ADA               	clrf	fsr2h,c
 28043   0028FE  0E01               	movlw	high _targetPos
 28044   002900  22DA               	addwfc	fsr2h,f,c
 28045   002902  50DF               	movf	indf2,w,c
 28046   002904  0100               	movlb	0	; () banked
 28047   002906  6F9F               	movwf	??_bounceDown& (0+255),b
 28048   002908  0EFD               	movlw	253
 28049   00290A  259F               	addwf	??_bounceDown& (0+255),w,b
 28050   00290C  6FA0               	movwf	(??_bounceDown+1)& (0+255),b
 28051   00290E  6BA1               	clrf	(??_bounceDown+2)& (0+255),b
 28052   002910  0EFF               	movlw	255
 28053   002912  23A1               	addwfc	(??_bounceDown+2)& (0+255),f,b
 28054   002914  0101               	movlb	1	; () banked
 28055   002916  51BD               	movf	bounceDown@io& (0+255),w,b
 28056   002918  0FA9               	addlw	low _currentPos
 28057   00291A  6ED9               	movwf	fsr2l,c
 28058   00291C  6ADA               	clrf	fsr2h,c
 28059   00291E  50DF               	movf	indf2,w,c
 28060   002920  0100               	movlb	0	; () banked
 28061   002922  6FA2               	movwf	(??_bounceDown+3)& (0+255),b
 28062   002924  6BA3               	clrf	(??_bounceDown+4)& (0+255),b
 28063   002926  51A0               	movf	(??_bounceDown+1)& (0+255),w,b
 28064   002928  5DA2               	subwf	(??_bounceDown+3)& (0+255),w,b
 28065   00292A  51A3               	movf	(??_bounceDown+4)& (0+255),w,b
 28066   00292C  0A80               	xorlw	128
 28067   00292E  6FA4               	movwf	(??_bounceDown+5)& (0+255),b
 28068   002930  51A1               	movf	(??_bounceDown+2)& (0+255),w,b
 28069   002932  0A80               	xorlw	128
 28070   002934  59A4               	subwfb	(??_bounceDown+5)& (0+255),w,b
 28071   002936  A0D8               	btfss	status,0,c
 28072   002938  D024               	goto	u21460
 28073                           
 28074                           ; BSR set to: 0
 28075   00293A  0101               	movlb	1	; () banked
 28076   00293C  51BD               	movf	bounceDown@io& (0+255),w,b
 28077   00293E  0D02               	mullw	2
 28078   002940  0E00               	movlw	low _speed
 28079   002942  24F3               	addwf	243,w,c
 28080   002944  6ED9               	movwf	fsr2l,c
 28081   002946  0E02               	movlw	high _speed
 28082   002948  20F4               	addwfc	prodh,w,c
 28083   00294A  6EDA               	movwf	fsr2h,c
 28084   00294C  0E01               	movlw	1
 28085   00294E  BEDB               	btfsc	plusw2,7,c
 28086   002950  D007               	goto	u21450
 28087   002952  0E01               	movlw	1
 28088   002954  50DB               	movf	plusw2,w,c
 28089   002956  E115               	bnz	l20845
 28090   002958  0E04               	movlw	4
 28091   00295A  5CDE               	subwf	postinc2,w,c
 28092   00295C  B0D8               	btfsc	status,0,c
 28093   00295E  D011               	goto	u21460
 28094   002960                     u21450:
 28095                           
 28096                           ; BSR set to: 1
 28097   002960  51BD               	movf	bounceDown@io& (0+255),w,b
 28098   002962  0D02               	mullw	2
 28099   002964  0E00               	movlw	low _speed
 28100   002966  24F3               	addwf	243,w,c
 28101   002968  6ED9               	movwf	fsr2l,c
 28102   00296A  0E02               	movlw	high _speed
 28103   00296C  20F4               	addwfc	prodh,w,c
 28104   00296E  6EDA               	movwf	fsr2h,c
 28105   002970  0E01               	movlw	1
 28106   002972  AEDB               	btfss	plusw2,7,c
 28107   002974  D1F3               	goto	l20873
 28108   002976  0EFD               	movlw	253
 28109   002978  5CDE               	subwf	postinc2,w,c
 28110   00297A  0EFF               	movlw	255
 28111   00297C  58DE               	subwfb	postinc2,w,c
 28112   00297E  B0D8               	btfsc	status,0,c
 28113   002980  D1ED               	goto	l20873
 28114   002982                     u21460:
 28115   002982                     l20845:
 28116                           
 28117                           ;../bounce.c: 106:         Boolean reversed = ((uint8_t)getNV((16 + 7*(io) + 3)) > (uint
      +                          8_t)getNV((16 + 7*(io) + 2)));
 28118   002982  0101               	movlb	1	; () banked
 28119   002984  51BD               	movf	bounceDown@io& (0+255),w,b
 28120   002986  0D07               	mullw	7
 28121   002988  50F3               	movf	243,w,c
 28122   00298A  0F12               	addlw	18
 28123   00298C  EC52  F05E         	call	_getNV
 28124   002990  C08D  F09F         	movff	?_getNV,??_bounceDown
 28125   002994  C08E  F0A0         	movff	?_getNV+1,??_bounceDown+1
 28126   002998  0101               	movlb	1	; () banked
 28127   00299A  51BD               	movf	bounceDown@io& (0+255),w,b
 28128   00299C  0D07               	mullw	7
 28129   00299E  50F3               	movf	243,w,c
 28130   0029A0  0F13               	addlw	19
 28131   0029A2  EC52  F05E         	call	_getNV
 28132   0029A6  0100               	movlb	0	; () banked
 28133   0029A8  518D               	movf	?_getNV& (0+255),w,b
 28134   0029AA  5D9F               	subwf	??_bounceDown& (0+255),w,b
 28135   0029AC  B0D8               	btfsc	status,0,c
 28136   0029AE  D002               	goto	u21470
 28137   0029B0  0E01               	movlw	1
 28138   0029B2  D001               	goto	u21480
 28139   0029B4                     u21470:
 28140   0029B4  0E00               	movlw	0
 28141   0029B6                     u21480:
 28142   0029B6  0101               	movlb	1	; () banked
 28143   0029B8  6FBA               	movwf	bounceDown@reversed& (0+255),b
 28144                           
 28145                           ; BSR set to: 1
 28146                           ;../bounce.c: 107:         int tmp;;../bounce.c: 109:         if (! reversed) {
 28147   0029BA  51BA               	movf	bounceDown@reversed& (0+255),w,b
 28148   0029BC  A4D8               	btfss	status,2,c
 28149   0029BE  D0E8               	goto	l20859
 28150                           
 28151                           ; BSR set to: 1
 28152                           ;../bounce.c: 112:             if (currentPos[io] < (uint8_t)getNV((16 + 7*(io) + 3)) + 
      +                          speed[io]/30) {
 28153   0029C0  51BD               	movf	bounceDown@io& (0+255),w,b
 28154   0029C2  0D02               	mullw	2
 28155   0029C4  0E00               	movlw	low _speed
 28156   0029C6  24F3               	addwf	243,w,c
 28157   0029C8  6ED9               	movwf	fsr2l,c
 28158   0029CA  0E02               	movlw	high _speed
 28159   0029CC  20F4               	addwfc	prodh,w,c
 28160   0029CE  6EDA               	movwf	fsr2h,c
 28161   0029D0  CFDE F097          	movff	postinc2,___awdiv@dividend
 28162   0029D4  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 28163   0029D8  0E00               	movlw	0
 28164   0029DA  0100               	movlb	0	; () banked
 28165   0029DC  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28166   0029DE  0E1E               	movlw	30
 28167   0029E0  6F99               	movwf	___awdiv@divisor& (0+255),b
 28168   0029E2  EC1C  F053         	call	___awdiv	;wreg free
 28169   0029E6  C097  F09F         	movff	?___awdiv,??_bounceDown
 28170   0029EA  C098  F0A0         	movff	?___awdiv+1,??_bounceDown+1
 28171   0029EE  0101               	movlb	1	; () banked
 28172   0029F0  51BD               	movf	bounceDown@io& (0+255),w,b
 28173   0029F2  0D07               	mullw	7
 28174   0029F4  50F3               	movf	243,w,c
 28175   0029F6  0F13               	addlw	19
 28176   0029F8  EC52  F05E         	call	_getNV
 28177   0029FC  0100               	movlb	0	; () banked
 28178   0029FE  518D               	movf	?_getNV& (0+255),w,b
 28179   002A00  259F               	addwf	??_bounceDown& (0+255),w,b
 28180   002A02  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 28181   002A04  0E00               	movlw	0
 28182   002A06  21A0               	addwfc	(??_bounceDown+1)& (0+255),w,b
 28183   002A08  6FA2               	movwf	(??_bounceDown+3)& (0+255),b
 28184   002A0A  0101               	movlb	1	; () banked
 28185   002A0C  51BD               	movf	bounceDown@io& (0+255),w,b
 28186   002A0E  0FA9               	addlw	low _currentPos
 28187   002A10  6ED9               	movwf	fsr2l,c
 28188   002A12  6ADA               	clrf	fsr2h,c
 28189   002A14  50DF               	movf	indf2,w,c
 28190   002A16  0100               	movlb	0	; () banked
 28191   002A18  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 28192   002A1A  6BA4               	clrf	(??_bounceDown+5)& (0+255),b
 28193   002A1C  51A1               	movf	(??_bounceDown+2)& (0+255),w,b
 28194   002A1E  5DA3               	subwf	(??_bounceDown+4)& (0+255),w,b
 28195   002A20  51A4               	movf	(??_bounceDown+5)& (0+255),w,b
 28196   002A22  0A80               	xorlw	128
 28197   002A24  6FA5               	movwf	(??_bounceDown+6)& (0+255),b
 28198   002A26  51A2               	movf	(??_bounceDown+3)& (0+255),w,b
 28199   002A28  0A80               	xorlw	128
 28200   002A2A  59A5               	subwfb	(??_bounceDown+6)& (0+255),w,b
 28201   002A2C  B0D8               	btfsc	status,0,c
 28202   002A2E  D084               	goto	l20855
 28203                           
 28204                           ; BSR set to: 0
 28205                           ;../bounce.c: 115:                 speed[io] = (-speed[io]*getNV((16 + 7*(io) + 4)))/100
      +                          ;
 28206   002A30  0101               	movlb	1	; () banked
 28207   002A32  51BD               	movf	bounceDown@io& (0+255),w,b
 28208   002A34  0D07               	mullw	7
 28209   002A36  50F3               	movf	243,w,c
 28210   002A38  0F14               	addlw	20
 28211   002A3A  EC52  F05E         	call	_getNV
 28212   002A3E  C08D  F091         	movff	?_getNV,___wmul@multiplier
 28213   002A42  C08E  F092         	movff	?_getNV+1,___wmul@multiplier+1
 28214   002A46  0101               	movlb	1	; () banked
 28215   002A48  51BD               	movf	bounceDown@io& (0+255),w,b
 28216   002A4A  0D02               	mullw	2
 28217   002A4C  0E00               	movlw	low _speed
 28218   002A4E  24F3               	addwf	243,w,c
 28219   002A50  6ED9               	movwf	fsr2l,c
 28220   002A52  0E02               	movlw	high _speed
 28221   002A54  20F4               	addwfc	prodh,w,c
 28222   002A56  6EDA               	movwf	fsr2h,c
 28223   002A58  CFDE F09F          	movff	postinc2,??_bounceDown
 28224   002A5C  CFDD F0A0          	movff	postdec2,??_bounceDown+1
 28225   002A60  0100               	movlb	0	; () banked
 28226   002A62  1F9F               	comf	??_bounceDown& (0+255),f,b
 28227   002A64  1FA0               	comf	(??_bounceDown+1)& (0+255),f,b
 28228   002A66  4B9F               	infsnz	??_bounceDown& (0+255),f,b
 28229   002A68  2BA0               	incf	(??_bounceDown+1)& (0+255),f,b
 28230   002A6A  C09F  F093         	movff	??_bounceDown,___wmul@multiplicand
 28231   002A6E  C0A0  F094         	movff	??_bounceDown+1,___wmul@multiplicand+1
 28232   002A72  EC4F  F061         	call	___wmul	;wreg free
 28233   002A76  C091  F097         	movff	?___wmul,___awdiv@dividend
 28234   002A7A  C092  F098         	movff	?___wmul+1,___awdiv@dividend+1
 28235   002A7E  0E00               	movlw	0
 28236   002A80  0100               	movlb	0	; () banked
 28237   002A82  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28238   002A84  0E64               	movlw	100
 28239   002A86  6F99               	movwf	___awdiv@divisor& (0+255),b
 28240   002A88  EC1C  F053         	call	___awdiv	;wreg free
 28241   002A8C  0101               	movlb	1	; () banked
 28242   002A8E  51BD               	movf	bounceDown@io& (0+255),w,b
 28243   002A90  0D02               	mullw	2
 28244   002A92  0E00               	movlw	low _speed
 28245   002A94  24F3               	addwf	243,w,c
 28246   002A96  6ED9               	movwf	fsr2l,c
 28247   002A98  0E02               	movlw	high _speed
 28248   002A9A  20F4               	addwfc	prodh,w,c
 28249   002A9C  6EDA               	movwf	fsr2h,c
 28250   002A9E  0100               	movlb	0	; () banked
 28251   002AA0  C097  FFDE         	movff	?___awdiv,postinc2
 28252   002AA4  C098  FFDD         	movff	?___awdiv+1,postdec2
 28253                           
 28254                           ;../bounce.c: 117:                 tmp = (uint8_t)getNV((16 + 7*(io) + 3)) -
 28255   002AA8  0101               	movlb	1	; () banked
 28256   002AAA  51BD               	movf	bounceDown@io& (0+255),w,b
 28257   002AAC  0D07               	mullw	7
 28258   002AAE  50F3               	movf	243,w,c
 28259   002AB0  0F13               	addlw	19
 28260   002AB2  EC52  F05E         	call	_getNV
 28261   002AB6  0100               	movlb	0	; () banked
 28262   002AB8  518D               	movf	?_getNV& (0+255),w,b
 28263   002ABA  6F9F               	movwf	??_bounceDown& (0+255),b
 28264   002ABC  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 28265   002ABE  0101               	movlb	1	; () banked
 28266   002AC0  51BD               	movf	bounceDown@io& (0+255),w,b
 28267   002AC2  0D07               	mullw	7
 28268   002AC4  50F3               	movf	243,w,c
 28269   002AC6  0F13               	addlw	19
 28270   002AC8  EC52  F05E         	call	_getNV
 28271   002ACC  0100               	movlb	0	; () banked
 28272   002ACE  518D               	movf	?_getNV& (0+255),w,b
 28273   002AD0  279F               	addwf	??_bounceDown& (0+255),f,b
 28274   002AD2  0E00               	movlw	0
 28275   002AD4  23A0               	addwfc	(??_bounceDown+1)& (0+255),f,b
 28276   002AD6  0101               	movlb	1	; () banked
 28277   002AD8  51BD               	movf	bounceDown@io& (0+255),w,b
 28278   002ADA  0FA9               	addlw	low _currentPos
 28279   002ADC  6ED9               	movwf	fsr2l,c
 28280   002ADE  6ADA               	clrf	fsr2h,c
 28281   002AE0  50DF               	movf	indf2,w,c
 28282   002AE2  0100               	movlb	0	; () banked
 28283   002AE4  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 28284   002AE6  51A1               	movf	(??_bounceDown+2)& (0+255),w,b
 28285   002AE8  5F9F               	subwf	??_bounceDown& (0+255),f,b
 28286   002AEA  0E00               	movlw	0
 28287   002AEC  5BA0               	subwfb	(??_bounceDown+1)& (0+255),f,b
 28288   002AEE  0101               	movlb	1	; () banked
 28289   002AF0  51BD               	movf	bounceDown@io& (0+255),w,b
 28290   002AF2  0D02               	mullw	2
 28291   002AF4  0E00               	movlw	low _speed
 28292   002AF6  24F3               	addwf	243,w,c
 28293   002AF8  6ED9               	movwf	fsr2l,c
 28294   002AFA  0E02               	movlw	high _speed
 28295   002AFC  20F4               	addwfc	prodh,w,c
 28296   002AFE  6EDA               	movwf	fsr2h,c
 28297   002B00  CFDE F097          	movff	postinc2,___awdiv@dividend
 28298   002B04  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 28299   002B08  0E00               	movlw	0
 28300   002B0A  0100               	movlb	0	; () banked
 28301   002B0C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28302   002B0E  0E1E               	movlw	30
 28303   002B10  6F99               	movwf	___awdiv@divisor& (0+255),b
 28304   002B12  EC1C  F053         	call	___awdiv	;wreg free
 28305   002B16  0100               	movlb	0	; () banked
 28306   002B18  5197               	movf	?___awdiv& (0+255),w,b
 28307   002B1A  5D9F               	subwf	??_bounceDown& (0+255),w,b
 28308   002B1C  0101               	movlb	1	; () banked
 28309   002B1E  6FBB               	movwf	bounceDown@tmp& (0+255),b
 28310   002B20  0100               	movlb	0	; () banked
 28311   002B22  5198               	movf	(?___awdiv+1)& (0+255),w,b
 28312   002B24  59A0               	subwfb	(??_bounceDown+1)& (0+255),w,b
 28313   002B26  0101               	movlb	1	; () banked
 28314   002B28  6FBC               	movwf	(bounceDown@tmp+1)& (0+255),b
 28315                           
 28316                           ; BSR set to: 1
 28317                           ;../bounce.c: 120:                 currentPos[io] = (uint8_t)tmp;
 28318   002B2A  51BD               	movf	bounceDown@io& (0+255),w,b
 28319   002B2C  0FA9               	addlw	low _currentPos
 28320   002B2E  6ED9               	movwf	fsr2l,c
 28321   002B30  6ADA               	clrf	fsr2h,c
 28322   002B32  C1BB  FFDF         	movff	bounceDown@tmp,indf2
 28323                           
 28324                           ;../bounce.c: 121:             } else {
 28325   002B36  D110               	goto	l20869
 28326   002B38                     l20855:
 28327                           
 28328                           ; BSR set to: 0
 28329                           ;../bounce.c: 124:                 speed[io] += 3;
 28330   002B38  0101               	movlb	1	; () banked
 28331   002B3A  51BD               	movf	bounceDown@io& (0+255),w,b
 28332   002B3C  0D02               	mullw	2
 28333   002B3E  0E00               	movlw	low _speed
 28334   002B40  24F3               	addwf	243,w,c
 28335   002B42  6ED9               	movwf	fsr2l,c
 28336   002B44  0E02               	movlw	high _speed
 28337   002B46  20F4               	addwfc	prodh,w,c
 28338   002B48  6EDA               	movwf	fsr2h,c
 28339   002B4A  0E03               	movlw	3
 28340   002B4C  26DE               	addwf	postinc2,f,c
 28341   002B4E  0E00               	movlw	0
 28342   002B50  22DD               	addwfc	postdec2,f,c
 28343                           
 28344                           ; BSR set to: 1
 28345                           ;../bounce.c: 125:                 currentPos[io] -= ((speed[io]/30)+1);
 28346   002B52  51BD               	movf	bounceDown@io& (0+255),w,b
 28347   002B54  0D02               	mullw	2
 28348   002B56  0E00               	movlw	low _speed
 28349   002B58  24F3               	addwf	243,w,c
 28350   002B5A  6ED9               	movwf	fsr2l,c
 28351   002B5C  0E02               	movlw	high _speed
 28352   002B5E  20F4               	addwfc	prodh,w,c
 28353   002B60  6EDA               	movwf	fsr2h,c
 28354   002B62  CFDE F097          	movff	postinc2,___awdiv@dividend
 28355   002B66  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 28356   002B6A  0E00               	movlw	0
 28357   002B6C  0100               	movlb	0	; () banked
 28358   002B6E  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28359   002B70  0E1E               	movlw	30
 28360   002B72  6F99               	movwf	___awdiv@divisor& (0+255),b
 28361   002B74  EC1C  F053         	call	___awdiv	;wreg free
 28362   002B78  0E01               	movlw	1
 28363   002B7A  0100               	movlb	0	; () banked
 28364   002B7C  2797               	addwf	?___awdiv& (0+255),f,b
 28365   002B7E  0101               	movlb	1	; () banked
 28366   002B80  51BD               	movf	bounceDown@io& (0+255),w,b
 28367   002B82  0FA9               	addlw	low _currentPos
 28368   002B84  6ED9               	movwf	fsr2l,c
 28369   002B86  6ADA               	clrf	fsr2h,c
 28370   002B88  0100               	movlb	0	; () banked
 28371   002B8A  5197               	movf	?___awdiv& (0+255),w,b
 28372   002B8C  5EDF               	subwf	indf2,f,c
 28373   002B8E  D0E4               	goto	l20869
 28374   002B90                     l20859:
 28375                           
 28376                           ; BSR set to: 1
 28377                           ;../bounce.c: 130:             if (currentPos[io] > (uint8_t)getNV((16 + 7*(io) + 3)) - 
      +                          speed[io]/30) {
 28378   002B90  51BD               	movf	bounceDown@io& (0+255),w,b
 28379   002B92  0FA9               	addlw	low _currentPos
 28380   002B94  6ED9               	movwf	fsr2l,c
 28381   002B96  6ADA               	clrf	fsr2h,c
 28382   002B98  50DF               	movf	indf2,w,c
 28383   002B9A  0100               	movlb	0	; () banked
 28384   002B9C  6F9F               	movwf	??_bounceDown& (0+255),b
 28385   002B9E  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 28386   002BA0  0101               	movlb	1	; () banked
 28387   002BA2  51BD               	movf	bounceDown@io& (0+255),w,b
 28388   002BA4  0D07               	mullw	7
 28389   002BA6  50F3               	movf	243,w,c
 28390   002BA8  0F13               	addlw	19
 28391   002BAA  EC52  F05E         	call	_getNV
 28392   002BAE  C08D  F0A1         	movff	?_getNV,??_bounceDown+2
 28393   002BB2  C08E  F0A2         	movff	?_getNV+1,??_bounceDown+3
 28394   002BB6  0101               	movlb	1	; () banked
 28395   002BB8  51BD               	movf	bounceDown@io& (0+255),w,b
 28396   002BBA  0D02               	mullw	2
 28397   002BBC  0E00               	movlw	low _speed
 28398   002BBE  24F3               	addwf	243,w,c
 28399   002BC0  6ED9               	movwf	fsr2l,c
 28400   002BC2  0E02               	movlw	high _speed
 28401   002BC4  20F4               	addwfc	prodh,w,c
 28402   002BC6  6EDA               	movwf	fsr2h,c
 28403   002BC8  CFDE F097          	movff	postinc2,___awdiv@dividend
 28404   002BCC  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 28405   002BD0  0E00               	movlw	0
 28406   002BD2  0100               	movlb	0	; () banked
 28407   002BD4  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28408   002BD6  0E1E               	movlw	30
 28409   002BD8  6F99               	movwf	___awdiv@divisor& (0+255),b
 28410   002BDA  EC1C  F053         	call	___awdiv	;wreg free
 28411   002BDE  0100               	movlb	0	; () banked
 28412   002BE0  5197               	movf	?___awdiv& (0+255),w,b
 28413   002BE2  5DA1               	subwf	(??_bounceDown+2)& (0+255),w,b
 28414   002BE4  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 28415   002BE6  5198               	movf	(?___awdiv+1)& (0+255),w,b
 28416   002BE8  A0D8               	btfss	status,0,c
 28417   002BEA  2998               	incf	(?___awdiv+1)& (0+255),w,b
 28418   002BEC  6BA4               	clrf	(??_bounceDown+5)& (0+255),b
 28419   002BEE  5FA4               	subwf	(??_bounceDown+5)& (0+255),f,b
 28420   002BF0  519F               	movf	??_bounceDown& (0+255),w,b
 28421   002BF2  5DA3               	subwf	(??_bounceDown+4)& (0+255),w,b
 28422   002BF4  51A4               	movf	(??_bounceDown+5)& (0+255),w,b
 28423   002BF6  0A80               	xorlw	128
 28424   002BF8  6FA5               	movwf	(??_bounceDown+6)& (0+255),b
 28425   002BFA  51A0               	movf	(??_bounceDown+1)& (0+255),w,b
 28426   002BFC  0A80               	xorlw	128
 28427   002BFE  59A5               	subwfb	(??_bounceDown+6)& (0+255),w,b
 28428   002C00  B0D8               	btfsc	status,0,c
 28429   002C02  D07F               	goto	l20865
 28430                           
 28431                           ; BSR set to: 0
 28432                           ;../bounce.c: 133:                 speed[io] = (-speed[io]*getNV((16 + 7*(io) + 4)))/100
      +                          ;
 28433   002C04  0101               	movlb	1	; () banked
 28434   002C06  51BD               	movf	bounceDown@io& (0+255),w,b
 28435   002C08  0D07               	mullw	7
 28436   002C0A  50F3               	movf	243,w,c
 28437   002C0C  0F14               	addlw	20
 28438   002C0E  EC52  F05E         	call	_getNV
 28439   002C12  C08D  F091         	movff	?_getNV,___wmul@multiplier
 28440   002C16  C08E  F092         	movff	?_getNV+1,___wmul@multiplier+1
 28441   002C1A  0101               	movlb	1	; () banked
 28442   002C1C  51BD               	movf	bounceDown@io& (0+255),w,b
 28443   002C1E  0D02               	mullw	2
 28444   002C20  0E00               	movlw	low _speed
 28445   002C22  24F3               	addwf	243,w,c
 28446   002C24  6ED9               	movwf	fsr2l,c
 28447   002C26  0E02               	movlw	high _speed
 28448   002C28  20F4               	addwfc	prodh,w,c
 28449   002C2A  6EDA               	movwf	fsr2h,c
 28450   002C2C  CFDE F09F          	movff	postinc2,??_bounceDown
 28451   002C30  CFDD F0A0          	movff	postdec2,??_bounceDown+1
 28452   002C34  0100               	movlb	0	; () banked
 28453   002C36  1F9F               	comf	??_bounceDown& (0+255),f,b
 28454   002C38  1FA0               	comf	(??_bounceDown+1)& (0+255),f,b
 28455   002C3A  4B9F               	infsnz	??_bounceDown& (0+255),f,b
 28456   002C3C  2BA0               	incf	(??_bounceDown+1)& (0+255),f,b
 28457   002C3E  C09F  F093         	movff	??_bounceDown,___wmul@multiplicand
 28458   002C42  C0A0  F094         	movff	??_bounceDown+1,___wmul@multiplicand+1
 28459   002C46  EC4F  F061         	call	___wmul	;wreg free
 28460   002C4A  C091  F097         	movff	?___wmul,___awdiv@dividend
 28461   002C4E  C092  F098         	movff	?___wmul+1,___awdiv@dividend+1
 28462   002C52  0E00               	movlw	0
 28463   002C54  0100               	movlb	0	; () banked
 28464   002C56  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28465   002C58  0E64               	movlw	100
 28466   002C5A  6F99               	movwf	___awdiv@divisor& (0+255),b
 28467   002C5C  EC1C  F053         	call	___awdiv	;wreg free
 28468   002C60  0101               	movlb	1	; () banked
 28469   002C62  51BD               	movf	bounceDown@io& (0+255),w,b
 28470   002C64  0D02               	mullw	2
 28471   002C66  0E00               	movlw	low _speed
 28472   002C68  24F3               	addwf	243,w,c
 28473   002C6A  6ED9               	movwf	fsr2l,c
 28474   002C6C  0E02               	movlw	high _speed
 28475   002C6E  20F4               	addwfc	prodh,w,c
 28476   002C70  6EDA               	movwf	fsr2h,c
 28477   002C72  0100               	movlb	0	; () banked
 28478   002C74  C097  FFDE         	movff	?___awdiv,postinc2
 28479   002C78  C098  FFDD         	movff	?___awdiv+1,postdec2
 28480                           
 28481                           ;../bounce.c: 135:                 tmp = (uint8_t)getNV((16 + 7*(io) + 3)) +
 28482   002C7C  0101               	movlb	1	; () banked
 28483   002C7E  51BD               	movf	bounceDown@io& (0+255),w,b
 28484   002C80  0D07               	mullw	7
 28485   002C82  50F3               	movf	243,w,c
 28486   002C84  0F13               	addlw	19
 28487   002C86  EC52  F05E         	call	_getNV
 28488   002C8A  0100               	movlb	0	; () banked
 28489   002C8C  518D               	movf	?_getNV& (0+255),w,b
 28490   002C8E  6F9F               	movwf	??_bounceDown& (0+255),b
 28491   002C90  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 28492   002C92  0101               	movlb	1	; () banked
 28493   002C94  51BD               	movf	bounceDown@io& (0+255),w,b
 28494   002C96  0D07               	mullw	7
 28495   002C98  50F3               	movf	243,w,c
 28496   002C9A  0F13               	addlw	19
 28497   002C9C  EC52  F05E         	call	_getNV
 28498   002CA0  0100               	movlb	0	; () banked
 28499   002CA2  518D               	movf	?_getNV& (0+255),w,b
 28500   002CA4  279F               	addwf	??_bounceDown& (0+255),f,b
 28501   002CA6  0E00               	movlw	0
 28502   002CA8  23A0               	addwfc	(??_bounceDown+1)& (0+255),f,b
 28503   002CAA  0101               	movlb	1	; () banked
 28504   002CAC  51BD               	movf	bounceDown@io& (0+255),w,b
 28505   002CAE  0D02               	mullw	2
 28506   002CB0  0E00               	movlw	low _speed
 28507   002CB2  24F3               	addwf	243,w,c
 28508   002CB4  6ED9               	movwf	fsr2l,c
 28509   002CB6  0E02               	movlw	high _speed
 28510   002CB8  20F4               	addwfc	prodh,w,c
 28511   002CBA  6EDA               	movwf	fsr2h,c
 28512   002CBC  CFDE F097          	movff	postinc2,___awdiv@dividend
 28513   002CC0  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 28514   002CC4  0E00               	movlw	0
 28515   002CC6  0100               	movlb	0	; () banked
 28516   002CC8  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28517   002CCA  0E1E               	movlw	30
 28518   002CCC  6F99               	movwf	___awdiv@divisor& (0+255),b
 28519   002CCE  EC1C  F053         	call	___awdiv	;wreg free
 28520   002CD2  0100               	movlb	0	; () banked
 28521   002CD4  5197               	movf	?___awdiv& (0+255),w,b
 28522   002CD6  259F               	addwf	??_bounceDown& (0+255),w,b
 28523   002CD8  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 28524   002CDA  5198               	movf	(?___awdiv+1)& (0+255),w,b
 28525   002CDC  21A0               	addwfc	(??_bounceDown+1)& (0+255),w,b
 28526   002CDE  6FA2               	movwf	(??_bounceDown+3)& (0+255),b
 28527   002CE0  0101               	movlb	1	; () banked
 28528   002CE2  51BD               	movf	bounceDown@io& (0+255),w,b
 28529   002CE4  0FA9               	addlw	low _currentPos
 28530   002CE6  6ED9               	movwf	fsr2l,c
 28531   002CE8  6ADA               	clrf	fsr2h,c
 28532   002CEA  50DF               	movf	indf2,w,c
 28533   002CEC  0100               	movlb	0	; () banked
 28534   002CEE  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 28535   002CF0  51A3               	movf	(??_bounceDown+4)& (0+255),w,b
 28536   002CF2  5DA1               	subwf	(??_bounceDown+2)& (0+255),w,b
 28537   002CF4  0101               	movlb	1	; () banked
 28538   002CF6  6FBB               	movwf	bounceDown@tmp& (0+255),b
 28539   002CF8  0100               	movlb	0	; () banked
 28540   002CFA  51A2               	movf	(??_bounceDown+3)& (0+255),w,b
 28541   002CFC  A0D8               	btfss	status,0,c
 28542   002CFE  05A2               	decf	(??_bounceDown+3)& (0+255),w,b
 28543   002D00  D712               	goto	L7
 28544   002D02                     l20865:
 28545                           
 28546                           ; BSR set to: 0
 28547                           ;../bounce.c: 142:                 speed[io] += 3;
 28548   002D02  0101               	movlb	1	; () banked
 28549   002D04  51BD               	movf	bounceDown@io& (0+255),w,b
 28550   002D06  0D02               	mullw	2
 28551   002D08  0E00               	movlw	low _speed
 28552   002D0A  24F3               	addwf	243,w,c
 28553   002D0C  6ED9               	movwf	fsr2l,c
 28554   002D0E  0E02               	movlw	high _speed
 28555   002D10  20F4               	addwfc	prodh,w,c
 28556   002D12  6EDA               	movwf	fsr2h,c
 28557   002D14  0E03               	movlw	3
 28558   002D16  26DE               	addwf	postinc2,f,c
 28559   002D18  0E00               	movlw	0
 28560   002D1A  22DD               	addwfc	postdec2,f,c
 28561                           
 28562                           ; BSR set to: 1
 28563                           ;../bounce.c: 143:                 currentPos[io] += ((speed[io]/30)+1);
 28564   002D1C  51BD               	movf	bounceDown@io& (0+255),w,b
 28565   002D1E  0D02               	mullw	2
 28566   002D20  0E00               	movlw	low _speed
 28567   002D22  24F3               	addwf	243,w,c
 28568   002D24  6ED9               	movwf	fsr2l,c
 28569   002D26  0E02               	movlw	high _speed
 28570   002D28  20F4               	addwfc	prodh,w,c
 28571   002D2A  6EDA               	movwf	fsr2h,c
 28572   002D2C  CFDE F097          	movff	postinc2,___awdiv@dividend
 28573   002D30  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 28574   002D34  0E00               	movlw	0
 28575   002D36  0100               	movlb	0	; () banked
 28576   002D38  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28577   002D3A  0E1E               	movlw	30
 28578   002D3C  6F99               	movwf	___awdiv@divisor& (0+255),b
 28579   002D3E  EC1C  F053         	call	___awdiv	;wreg free
 28580   002D42  0E01               	movlw	1
 28581   002D44  0100               	movlb	0	; () banked
 28582   002D46  2797               	addwf	?___awdiv& (0+255),f,b
 28583   002D48  0101               	movlb	1	; () banked
 28584   002D4A  51BD               	movf	bounceDown@io& (0+255),w,b
 28585   002D4C  0FA9               	addlw	low _currentPos
 28586   002D4E  6ED9               	movwf	fsr2l,c
 28587   002D50  6ADA               	clrf	fsr2h,c
 28588   002D52  0100               	movlb	0	; () banked
 28589   002D54  5197               	movf	?___awdiv& (0+255),w,b
 28590   002D56  26DF               	addwf	indf2,f,c
 28591   002D58                     l20869:
 28592                           
 28593                           ;../bounce.c: 147:         return FALSE;
 28594   002D58  0E00               	movlw	0
 28595   002D5A  0012               	return	
 28596   002D5C                     l20873:
 28597                           
 28598                           ; BSR set to: 1
 28599                           ;../bounce.c: 149:     return TRUE;
 28600   002D5C  0E01               	movlw	1
 28601   002D5E  0012               	return		;funcret
 28602   002D60                     __end_of_bounceDown:
 28603                           	callstack 0
 28604                           
 28605 ;; *************** function _processOutputs *****************
 28606 ;; Defined at:
 28607 ;;		line 178 in file "../digitalOut.c"
 28608 ;; Parameters:    Size  Location     Type
 28609 ;;		None
 28610 ;; Auto vars:     Size  Location     Type
 28611 ;;  io              1   19[BANK1 ] unsigned char 
 28612 ;; Return value:  Size  Location     Type
 28613 ;;                  1    wreg      void 
 28614 ;; Registers used:
 28615 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28616 ;; Tracked objects:
 28617 ;;		On entry : 0/0
 28618 ;;		On exit  : 0/0
 28619 ;;		Unchanged: 0/0
 28620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28622 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28623 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28624 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28625 ;;Total ram usage:        2 bytes
 28626 ;; Hardware stack levels used: 1
 28627 ;; Hardware stack levels required when called: 18
 28628 ;; This function calls:
 28629 ;;		_getNV
 28630 ;;		_sendProducedEvent
 28631 ;;		_setOutputPin
 28632 ;; This function is called by:
 28633 ;;		_loop
 28634 ;; This function uses a non-reentrant model
 28635 ;;
 28636                           
 28637                           	psect	text104
 28638   0069C2                     __ptext104:
 28639                           	callstack 0
 28640   0069C2                     _processOutputs:
 28641                           	callstack 11
 28642                           
 28643                           ;../digitalOut.c: 179:     uint8_t io;;../digitalOut.c: 180:     for (io=0; io<16; io++)
      +                           {
 28644                           
 28645                           ;incstack = 0
 28646   0069C2  0E00               	movlw	0
 28647   0069C4  0101               	movlb	1	; () banked
 28648   0069C6  6FCD               	movwf	processOutputs@io& (0+255),b
 28649   0069C8                     l22981:
 28650                           
 28651                           ; BSR set to: 1
 28652                           ;../digitalOut.c: 181:         if (getNV((16 + 7*(io) + 0)) == 1) {
 28653   0069C8  51CD               	movf	processOutputs@io& (0+255),w,b
 28654   0069CA  0D07               	mullw	7
 28655   0069CC  50F3               	movf	243,w,c
 28656   0069CE  0F10               	addlw	16
 28657   0069D0  EC52  F05E         	call	_getNV
 28658   0069D4  0100               	movlb	0	; () banked
 28659   0069D6  058D               	decf	?_getNV& (0+255),w,b
 28660   0069D8  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 28661   0069DA  A4D8               	btfss	status,2,c
 28662   0069DC  D0D5               	goto	l281
 28663                           
 28664                           ; BSR set to: 0
 28665                           ;../digitalOut.c: 183:             if (flashDelays[io] == 1) {
 28666   0069DE  0E30               	movlw	low _flashDelays
 28667   0069E0  0101               	movlb	1	; () banked
 28668   0069E2  25CD               	addwf	processOutputs@io& (0+255),w,b
 28669   0069E4  6ED9               	movwf	fsr2l,c
 28670   0069E6  6ADA               	clrf	fsr2h,c
 28671   0069E8  0E01               	movlw	high _flashDelays
 28672   0069EA  22DA               	addwfc	fsr2h,f,c
 28673   0069EC  04DE               	decf	postinc2,w,c
 28674   0069EE  A4D8               	btfss	status,2,c
 28675   0069F0  D02F               	goto	l22991
 28676                           
 28677                           ; BSR set to: 1
 28678                           ;../digitalOut.c: 184:                 setOutputPin(io, getNV((16 + 7*(io) + 1)) & 0x20)
      +                          ;
 28679   0069F2  51CD               	movf	processOutputs@io& (0+255),w,b
 28680   0069F4  0D07               	mullw	7
 28681   0069F6  50F3               	movf	243,w,c
 28682   0069F8  0F11               	addlw	17
 28683   0069FA  EC52  F05E         	call	_getNV
 28684   0069FE  0100               	movlb	0	; () banked
 28685   006A00  518D               	movf	?_getNV& (0+255),w,b
 28686   006A02  0B20               	andlw	32
 28687   006A04  6F91               	movwf	setOutputPin@state& (0+255),b
 28688   006A06  0101               	movlb	1	; () banked
 28689   006A08  51CD               	movf	processOutputs@io& (0+255),w,b
 28690   006A0A  ECAB  F036         	call	_setOutputPin
 28691                           
 28692                           ;../digitalOut.c: 185:                 flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3)
      +                          );
 28693   006A0E  0101               	movlb	1	; () banked
 28694   006A10  51CD               	movf	processOutputs@io& (0+255),w,b
 28695   006A12  0D07               	mullw	7
 28696   006A14  50F3               	movf	243,w,c
 28697   006A16  0F13               	addlw	19
 28698   006A18  EC52  F05E         	call	_getNV
 28699   006A1C  0E30               	movlw	low _flashDelays
 28700   006A1E  0101               	movlb	1	; () banked
 28701   006A20  25CD               	addwf	processOutputs@io& (0+255),w,b
 28702   006A22  6ED9               	movwf	fsr2l,c
 28703   006A24  6ADA               	clrf	fsr2h,c
 28704   006A26  0E01               	movlw	high _flashDelays
 28705   006A28  22DA               	addwfc	fsr2h,f,c
 28706   006A2A  0100               	movlb	0	; () banked
 28707   006A2C  C08D  FFDF         	movff	?_getNV,indf2
 28708                           
 28709                           ; BSR set to: 0
 28710                           ;../digitalOut.c: 186:                 flashDelays[io] = - flashDelays[io];
 28711   006A30  0E30               	movlw	low _flashDelays
 28712   006A32  0101               	movlb	1	; () banked
 28713   006A34  25CD               	addwf	processOutputs@io& (0+255),w,b
 28714   006A36  6ED9               	movwf	fsr2l,c
 28715   006A38  6ADA               	clrf	fsr2h,c
 28716   006A3A  0E01               	movlw	high _flashDelays
 28717   006A3C  22DA               	addwfc	fsr2h,f,c
 28718   006A3E  0E30               	movlw	low _flashDelays
 28719   006A40  25CD               	addwf	processOutputs@io& (0+255),w,b
 28720   006A42  6EE1               	movwf	fsr1l,c
 28721   006A44  6AE2               	clrf	fsr1h,c
 28722   006A46  0E01               	movlw	high _flashDelays
 28723   006A48  22E2               	addwfc	fsr1h,f,c
 28724   006A4A  50E7               	movf	indf1,w,c
 28725   006A4C  0800               	sublw	0
 28726   006A4E  6EDF               	movwf	indf2,c
 28727   006A50                     l22991:
 28728                           
 28729                           ; BSR set to: 1
 28730                           ;../digitalOut.c: 188:             if (flashDelays[io] == -1) {
 28731   006A50  0E30               	movlw	low _flashDelays
 28732   006A52  25CD               	addwf	processOutputs@io& (0+255),w,b
 28733   006A54  6ED9               	movwf	fsr2l,c
 28734   006A56  6ADA               	clrf	fsr2h,c
 28735   006A58  0E01               	movlw	high _flashDelays
 28736   006A5A  22DA               	addwfc	fsr2h,f,c
 28737   006A5C  28DE               	incf	postinc2,w,c
 28738   006A5E  A4D8               	btfss	status,2,c
 28739   006A60  D022               	goto	l22997
 28740                           
 28741                           ; BSR set to: 1
 28742                           ;../digitalOut.c: 189:                 setOutputPin(io, ! (getNV((16 + 7*(io) + 1)) & 0x
      +                          20));
 28743   006A62  51CD               	movf	processOutputs@io& (0+255),w,b
 28744   006A64  0D07               	mullw	7
 28745   006A66  50F3               	movf	243,w,c
 28746   006A68  0F11               	addlw	17
 28747   006A6A  EC52  F05E         	call	_getNV
 28748   006A6E  0100               	movlb	0	; () banked
 28749   006A70  BB8D               	btfsc	?_getNV& (0+255),5,b
 28750   006A72  D002               	goto	u24350
 28751   006A74  0E01               	movlw	1
 28752   006A76  D001               	goto	u24360
 28753   006A78                     u24350:
 28754   006A78  0E00               	movlw	0
 28755   006A7A                     u24360:
 28756   006A7A  6F91               	movwf	setOutputPin@state& (0+255),b
 28757   006A7C  0101               	movlb	1	; () banked
 28758   006A7E  51CD               	movf	processOutputs@io& (0+255),w,b
 28759   006A80  ECAB  F036         	call	_setOutputPin
 28760                           
 28761                           ;../digitalOut.c: 190:                 flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3)
      +                          );
 28762   006A84  0101               	movlb	1	; () banked
 28763   006A86  51CD               	movf	processOutputs@io& (0+255),w,b
 28764   006A88  0D07               	mullw	7
 28765   006A8A  50F3               	movf	243,w,c
 28766   006A8C  0F13               	addlw	19
 28767   006A8E  EC52  F05E         	call	_getNV
 28768   006A92  0E30               	movlw	low _flashDelays
 28769   006A94  0101               	movlb	1	; () banked
 28770   006A96  25CD               	addwf	processOutputs@io& (0+255),w,b
 28771   006A98  6ED9               	movwf	fsr2l,c
 28772   006A9A  6ADA               	clrf	fsr2h,c
 28773   006A9C  0E01               	movlw	high _flashDelays
 28774   006A9E  22DA               	addwfc	fsr2h,f,c
 28775   006AA0  0100               	movlb	0	; () banked
 28776   006AA2  C08D  FFDF         	movff	?_getNV,indf2
 28777   006AA6                     l22997:
 28778                           
 28779                           ;../digitalOut.c: 192:             if (flashDelays[io] > 1) {
 28780   006AA6  0E30               	movlw	low _flashDelays
 28781   006AA8  0101               	movlb	1	; () banked
 28782   006AAA  25CD               	addwf	processOutputs@io& (0+255),w,b
 28783   006AAC  6ED9               	movwf	fsr2l,c
 28784   006AAE  6ADA               	clrf	fsr2h,c
 28785   006AB0  0E01               	movlw	high _flashDelays
 28786   006AB2  22DA               	addwfc	fsr2h,f,c
 28787   006AB4  50DF               	movf	indf2,w,c
 28788   006AB6  0A80               	xorlw	128
 28789   006AB8  0F7E               	addlw	-130
 28790   006ABA  A0D8               	btfss	status,0,c
 28791   006ABC  D008               	goto	l23001
 28792                           
 28793                           ; BSR set to: 1
 28794                           ;../digitalOut.c: 193:                 flashDelays[io]--;
 28795   006ABE  0E30               	movlw	low _flashDelays
 28796   006AC0  25CD               	addwf	processOutputs@io& (0+255),w,b
 28797   006AC2  6ED9               	movwf	fsr2l,c
 28798   006AC4  6ADA               	clrf	fsr2h,c
 28799   006AC6  0E01               	movlw	high _flashDelays
 28800   006AC8  22DA               	addwfc	fsr2h,f,c
 28801   006ACA  06DF               	decf	indf2,f,c
 28802                           
 28803                           ;../digitalOut.c: 194:             } else if (flashDelays[io] < -1) {
 28804   006ACC  D012               	goto	l279
 28805   006ACE                     l23001:
 28806                           
 28807                           ; BSR set to: 1
 28808   006ACE  0E30               	movlw	low _flashDelays
 28809   006AD0  25CD               	addwf	processOutputs@io& (0+255),w,b
 28810   006AD2  6ED9               	movwf	fsr2l,c
 28811   006AD4  6ADA               	clrf	fsr2h,c
 28812   006AD6  0E01               	movlw	high _flashDelays
 28813   006AD8  22DA               	addwfc	fsr2h,f,c
 28814   006ADA  50DF               	movf	indf2,w,c
 28815   006ADC  0A80               	xorlw	128
 28816   006ADE  0F81               	addlw	129
 28817   006AE0  B0D8               	btfsc	status,0,c
 28818   006AE2  D007               	goto	l279
 28819                           
 28820                           ; BSR set to: 1
 28821                           ;../digitalOut.c: 195:                 flashDelays[io]++;
 28822   006AE4  0E30               	movlw	low _flashDelays
 28823   006AE6  25CD               	addwf	processOutputs@io& (0+255),w,b
 28824   006AE8  6ED9               	movwf	fsr2l,c
 28825   006AEA  6ADA               	clrf	fsr2h,c
 28826   006AEC  0E01               	movlw	high _flashDelays
 28827   006AEE  22DA               	addwfc	fsr2h,f,c
 28828   006AF0  2ADF               	incf	indf2,f,c
 28829   006AF2                     l279:
 28830                           
 28831                           ; BSR set to: 1
 28832                           ;../digitalOut.c: 198:             if (pulseDelays[io] != 0) {
 28833   006AF2  0EA4               	movlw	low _pulseDelays
 28834   006AF4  25CD               	addwf	processOutputs@io& (0+255),w,b
 28835   006AF6  6ED9               	movwf	fsr2l,c
 28836   006AF8  6ADA               	clrf	fsr2h,c
 28837   006AFA  0E02               	movlw	high _pulseDelays
 28838   006AFC  22DA               	addwfc	fsr2h,f,c
 28839   006AFE  50DF               	movf	indf2,w,c
 28840   006B00  B4D8               	btfsc	status,2,c
 28841   006B02  D042               	goto	l281
 28842                           
 28843                           ; BSR set to: 1
 28844                           ;../digitalOut.c: 199:                 pulseDelays[io]--;
 28845   006B04  0EA4               	movlw	low _pulseDelays
 28846   006B06  25CD               	addwf	processOutputs@io& (0+255),w,b
 28847   006B08  6ED9               	movwf	fsr2l,c
 28848   006B0A  6ADA               	clrf	fsr2h,c
 28849   006B0C  0E02               	movlw	high _pulseDelays
 28850   006B0E  22DA               	addwfc	fsr2h,f,c
 28851   006B10  06DF               	decf	indf2,f,c
 28852                           
 28853                           ;../digitalOut.c: 202:                 if (pulseDelays[io] == 1) {
 28854   006B12  0EA4               	movlw	low _pulseDelays
 28855   006B14  25CD               	addwf	processOutputs@io& (0+255),w,b
 28856   006B16  6ED9               	movwf	fsr2l,c
 28857   006B18  6ADA               	clrf	fsr2h,c
 28858   006B1A  0E02               	movlw	high _pulseDelays
 28859   006B1C  22DA               	addwfc	fsr2h,f,c
 28860   006B1E  04DE               	decf	postinc2,w,c
 28861   006B20  A4D8               	btfss	status,2,c
 28862   006B22  D032               	goto	l281
 28863                           
 28864                           ; BSR set to: 1
 28865                           ;../digitalOut.c: 204:                     if (getNV((16 + 7*(io) + 1)) & 0x20) {
 28866   006B24  51CD               	movf	processOutputs@io& (0+255),w,b
 28867   006B26  0D07               	mullw	7
 28868   006B28  50F3               	movf	243,w,c
 28869   006B2A  0F11               	addlw	17
 28870   006B2C  EC52  F05E         	call	_getNV
 28871   006B30  0100               	movlb	0	; () banked
 28872   006B32  AB8D               	btfss	?_getNV& (0+255),5,b
 28873   006B34  D007               	goto	l23011
 28874                           
 28875                           ; BSR set to: 0
 28876                           ;../digitalOut.c: 205:                         setOutputPin(io, TRUE);
 28877   006B36  0E01               	movlw	1
 28878   006B38  6F91               	movwf	setOutputPin@state& (0+255),b
 28879   006B3A  0101               	movlb	1	; () banked
 28880   006B3C  51CD               	movf	processOutputs@io& (0+255),w,b
 28881   006B3E  ECAB  F036         	call	_setOutputPin
 28882                           
 28883                           ;../digitalOut.c: 206:                     } else {
 28884   006B42  D006               	goto	l23013
 28885   006B44                     l23011:
 28886                           
 28887                           ; BSR set to: 0
 28888                           ;../digitalOut.c: 207:                         setOutputPin(io, FALSE);
 28889   006B44  0E00               	movlw	0
 28890   006B46  6F91               	movwf	setOutputPin@state& (0+255),b
 28891   006B48  0101               	movlb	1	; () banked
 28892   006B4A  51CD               	movf	processOutputs@io& (0+255),w,b
 28893   006B4C  ECAB  F036         	call	_setOutputPin
 28894   006B50                     l23013:
 28895                           
 28896                           ;../digitalOut.c: 210:                     if ( ! (getNV((16 + 7*(io) + 1)) & 0x08)) {
 28897   006B50  0101               	movlb	1	; () banked
 28898   006B52  51CD               	movf	processOutputs@io& (0+255),w,b
 28899   006B54  0D07               	mullw	7
 28900   006B56  50F3               	movf	243,w,c
 28901   006B58  0F11               	addlw	17
 28902   006B5A  EC52  F05E         	call	_getNV
 28903   006B5E  0100               	movlb	0	; () banked
 28904   006B60  B78D               	btfsc	?_getNV& (0+255),3,b
 28905   006B62  D012               	goto	l281
 28906                           
 28907                           ; BSR set to: 0
 28908                           ;../digitalOut.c: 212:                         sendProducedEvent(((8 + 4*(io))+0), getNV
      +                          ((16 + 7*(io) + 1)) & 0x40);
 28909   006B64  0101               	movlb	1	; () banked
 28910   006B66  51CD               	movf	processOutputs@io& (0+255),w,b
 28911   006B68  0D07               	mullw	7
 28912   006B6A  50F3               	movf	243,w,c
 28913   006B6C  0F11               	addlw	17
 28914   006B6E  EC52  F05E         	call	_getNV
 28915   006B72  0100               	movlb	0	; () banked
 28916   006B74  518D               	movf	?_getNV& (0+255),w,b
 28917   006B76  0B40               	andlw	64
 28918   006B78  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 28919   006B7A  0101               	movlb	1	; () banked
 28920   006B7C  51CD               	movf	processOutputs@io& (0+255),w,b
 28921   006B7E  0D04               	mullw	4
 28922   006B80  50F3               	movf	243,w,c
 28923   006B82  0F08               	addlw	8
 28924   006B84  EC3B  F04B         	call	_sendProducedEvent
 28925   006B88                     l281:
 28926                           
 28927                           ;../digitalOut.c: 217:     }
 28928                           
 28929                           ; BSR set to: 0
 28930   006B88  0101               	movlb	1	; () banked
 28931   006B8A  2BCD               	incf	processOutputs@io& (0+255),f,b
 28932                           
 28933                           ; BSR set to: 1
 28934   006B8C  0E0F               	movlw	15
 28935   006B8E  65CD               	cpfsgt	processOutputs@io& (0+255),b
 28936   006B90  D71B               	goto	l22981
 28937   006B92  0012               	return	
 28938   006B94                     __end_of_processOutputs:
 28939                           	callstack 0
 28940                           
 28941 ;; *************** function _processActions *****************
 28942 ;; Defined at:
 28943 ;;		line 233 in file "../universalEvents.c"
 28944 ;; Parameters:    Size  Location     Type
 28945 ;;		None
 28946 ;; Auto vars:     Size  Location     Type
 28947 ;;  nextAction      1   43[BANK1 ] unsigned char 
 28948 ;;  nextIo          1   40[BANK1 ] unsigned char 
 28949 ;;  nextType        1   39[BANK1 ] unsigned char 
 28950 ;;  action          1   45[BANK1 ] unsigned char 
 28951 ;;  io              1   44[BANK1 ] unsigned char 
 28952 ;;  ioAction        1   42[BANK1 ] unsigned char 
 28953 ;;  type            1   41[BANK1 ] unsigned char 
 28954 ;;  peekItem        1   38[BANK1 ] unsigned char 
 28955 ;;  simultaneous    1   37[BANK1 ] unsigned char 
 28956 ;; Return value:  Size  Location     Type
 28957 ;;                  1    wreg      void 
 28958 ;; Registers used:
 28959 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28960 ;; Tracked objects:
 28961 ;;		On entry : 0/0
 28962 ;;		On exit  : 0/0
 28963 ;;		Unchanged: 0/0
 28964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28966 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28968 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28969 ;;Total ram usage:        9 bytes
 28970 ;; Hardware stack levels used: 1
 28971 ;; Hardware stack levels required when called: 21
 28972 ;; This function calls:
 28973 ;;		___awdiv
 28974 ;;		___awmod
 28975 ;;		_completed
 28976 ;;		_deleteTwoActionQueue
 28977 ;;		_doSOD
 28978 ;;		_doWait
 28979 ;;		_doneTwoAction
 28980 ;;		_finaliseOutput
 28981 ;;		_getNV
 28982 ;;		_getTwoAction
 28983 ;;		_needsStarting
 28984 ;;		_peekTwoActionQueue
 28985 ;;		_setOutputState
 28986 ;;		_startOutput
 28987 ;; This function is called by:
 28988 ;;		_loop
 28989 ;; This function uses a non-reentrant model
 28990 ;;
 28991                           
 28992                           	psect	text105
 28993   0061B2                     __ptext105:
 28994                           	callstack 0
 28995   0061B2                     _processActions:
 28996                           	callstack 8
 28997                           
 28998                           ;../universalEvents.c: 242:         action = getTwoAction();
 28999                           
 29000                           ; BSR set to: 1
 29001                           ;incstack = 0
 29002                           ;../universalEvents.c: 234:     uint8_t io;;../universalEvents.c: 235:     uint8_t type;
      +                          ;../universalEvents.c: 236:     uint8_t action;;../universalEvents.c: 237:     uint8_t i
      +                          oAction;;../universalEvents.c: 238:     uint8_t simultaneous;;../universalEvents.c: 239:
      +                               uint8_t peekItem;;../universalEvents.c: 241:     while (1) {
 29003   0061B2  EC0E  F063         	call	_getTwoAction	;wreg free
 29004   0061B6  0101               	movlb	1	; () banked
 29005   0061B8  6FE7               	movwf	processActions@action& (0+255),b
 29006                           
 29007                           ; BSR set to: 1
 29008                           ;../universalEvents.c: 244:         if (action == 0) {
 29009   0061BA  51E7               	movf	processActions@action& (0+255),w,b
 29010   0061BC  A4D8               	btfss	status,2,c
 29011   0061BE  D003               	goto	l22883
 29012   0061C0                     u24170:
 29013                           
 29014                           ;../universalEvents.c: 245:             doneTwoAction();
 29015   0061C0  EC1F  F063         	call	_doneTwoAction	;wreg free
 29016   0061C4  0012               	return	
 29017   0061C6                     l22883:
 29018                           
 29019                           ; BSR set to: 1
 29020                           ;../universalEvents.c: 249:         if (action == 1) {
 29021   0061C6  05E7               	decf	processActions@action& (0+255),w,b
 29022   0061C8  A4D8               	btfss	status,2,c
 29023   0061CA  D003               	goto	l22891
 29024                           
 29025                           ; BSR set to: 1
 29026                           ;../universalEvents.c: 251:             doSOD();
 29027   0061CC  EC89  F062         	call	_doSOD	;wreg free
 29028   0061D0  D7F7               	goto	u24170
 29029   0061D2                     l22891:
 29030                           
 29031                           ; BSR set to: 1
 29032                           ;../universalEvents.c: 255:         if (action == 2) {
 29033   0061D2  0E02               	movlw	2
 29034   0061D4  19E7               	xorwf	processActions@action& (0+255),w,b
 29035   0061D6  A4D8               	btfss	status,2,c
 29036   0061D8  D008               	goto	l22897
 29037                           
 29038                           ; BSR set to: 1
 29039                           ;../universalEvents.c: 256:             doWait(5);
 29040   0061DA  0E00               	movlw	0
 29041   0061DC  0100               	movlb	0	; () banked
 29042   0061DE  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 29043   0061E0  0E05               	movlw	5
 29044   0061E2  6F9D               	movwf	doWait@duration& (0+255),b
 29045   0061E4  EC91  F052         	call	_doWait	;wreg free
 29046   0061E8  0012               	return	
 29047   0061EA                     l22897:
 29048                           
 29049                           ; BSR set to: 1
 29050                           ;../universalEvents.c: 259:         if (action == 3) {
 29051   0061EA  0E03               	movlw	3
 29052   0061EC  19E7               	xorwf	processActions@action& (0+255),w,b
 29053   0061EE  A4D8               	btfss	status,2,c
 29054   0061F0  D008               	goto	l22903
 29055                           
 29056                           ; BSR set to: 1
 29057                           ;../universalEvents.c: 260:             doWait(10);
 29058   0061F2  0E00               	movlw	0
 29059   0061F4  0100               	movlb	0	; () banked
 29060   0061F6  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 29061   0061F8  0E0A               	movlw	10
 29062   0061FA  6F9D               	movwf	doWait@duration& (0+255),b
 29063   0061FC  EC91  F052         	call	_doWait	;wreg free
 29064   006200  0012               	return	
 29065   006202                     l22903:
 29066                           
 29067                           ; BSR set to: 1
 29068                           ;../universalEvents.c: 263:         if (action == 4) {
 29069   006202  0E04               	movlw	4
 29070   006204  19E7               	xorwf	processActions@action& (0+255),w,b
 29071   006206  A4D8               	btfss	status,2,c
 29072   006208  D008               	goto	l22909
 29073                           
 29074                           ; BSR set to: 1
 29075                           ;../universalEvents.c: 264:             doWait(20);
 29076   00620A  0E00               	movlw	0
 29077   00620C  0100               	movlb	0	; () banked
 29078   00620E  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 29079   006210  0E14               	movlw	20
 29080   006212  6F9D               	movwf	doWait@duration& (0+255),b
 29081   006214  EC91  F052         	call	_doWait	;wreg free
 29082   006218  0012               	return	
 29083   00621A                     l22909:
 29084                           
 29085                           ; BSR set to: 1
 29086                           ;../universalEvents.c: 267:         if (action == 5) {
 29087   00621A  0E05               	movlw	5
 29088   00621C  19E7               	xorwf	processActions@action& (0+255),w,b
 29089   00621E  A4D8               	btfss	status,2,c
 29090   006220  D008               	goto	l22915
 29091                           
 29092                           ; BSR set to: 1
 29093                           ;../universalEvents.c: 268:             doWait(50);
 29094   006222  0E00               	movlw	0
 29095   006224  0100               	movlb	0	; () banked
 29096   006226  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 29097   006228  0E32               	movlw	50
 29098   00622A  6F9D               	movwf	doWait@duration& (0+255),b
 29099   00622C  EC91  F052         	call	_doWait	;wreg free
 29100   006230  0012               	return	
 29101   006232                     l22915:
 29102                           
 29103                           ; BSR set to: 1
 29104                           ;../universalEvents.c: 271:         simultaneous = action & 0x80;
 29105   006232  51E7               	movf	processActions@action& (0+255),w,b
 29106   006234  0B80               	andlw	128
 29107   006236  6FDF               	movwf	processActions@simultaneous& (0+255),b
 29108                           
 29109                           ;../universalEvents.c: 272:         ioAction = action&0x7F;
 29110   006238  51E7               	movf	processActions@action& (0+255),w,b
 29111   00623A  0B7F               	andlw	127
 29112   00623C  6FE4               	movwf	processActions@ioAction& (0+255),b
 29113                           
 29114                           ;../universalEvents.c: 273:         if ((ioAction >= 8) && (ioAction < (8 + 5 * 16))) {
 29115   00623E  0E07               	movlw	7
 29116   006240  65E4               	cpfsgt	processActions@ioAction& (0+255),b
 29117   006242  D0D0               	goto	l22973
 29118                           
 29119                           ; BSR set to: 1
 29120   006244  0E58               	movlw	88
 29121   006246  61E4               	cpfslt	processActions@ioAction& (0+255),b
 29122   006248  D0CD               	goto	l22973
 29123                           
 29124                           ; BSR set to: 1
 29125                           ;../universalEvents.c: 276:             io = (((ioAction)-8)/5);
 29126   00624A  0EF8               	movlw	248
 29127   00624C  25E4               	addwf	processActions@ioAction& (0+255),w,b
 29128   00624E  0100               	movlb	0	; () banked
 29129   006250  6F97               	movwf	___awdiv@dividend& (0+255),b
 29130   006252  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 29131   006254  0EFF               	movlw	255
 29132   006256  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 29133   006258  0E00               	movlw	0
 29134   00625A  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 29135   00625C  0E05               	movlw	5
 29136   00625E  6F99               	movwf	___awdiv@divisor& (0+255),b
 29137   006260  EC1C  F053         	call	___awdiv	;wreg free
 29138   006264  0100               	movlb	0	; () banked
 29139   006266  5197               	movf	?___awdiv& (0+255),w,b
 29140   006268  0101               	movlb	1	; () banked
 29141   00626A  6FE6               	movwf	processActions@io& (0+255),b
 29142                           
 29143                           ;../universalEvents.c: 277:             ioAction = (((ioAction)-8)%5);
 29144   00626C  0EF8               	movlw	248
 29145   00626E  25E4               	addwf	processActions@ioAction& (0+255),w,b
 29146   006270  0100               	movlb	0	; () banked
 29147   006272  6F8D               	movwf	___awmod@dividend& (0+255),b
 29148   006274  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 29149   006276  0EFF               	movlw	255
 29150   006278  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 29151   00627A  0E00               	movlw	0
 29152   00627C  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 29153   00627E  0E05               	movlw	5
 29154   006280  6F8F               	movwf	___awmod@divisor& (0+255),b
 29155   006282  EC31  F057         	call	___awmod	;wreg free
 29156   006286  0100               	movlb	0	; () banked
 29157   006288  518D               	movf	?___awmod& (0+255),w,b
 29158   00628A  0101               	movlb	1	; () banked
 29159   00628C  6FE4               	movwf	processActions@ioAction& (0+255),b
 29160                           
 29161                           ; BSR set to: 1
 29162                           ;../universalEvents.c: 278:             type = (uint8_t)getNV((16 + 7*(io) + 0));
 29163   00628E  51E6               	movf	processActions@io& (0+255),w,b
 29164   006290  0D07               	mullw	7
 29165   006292  50F3               	movf	243,w,c
 29166   006294  0F10               	addlw	16
 29167   006296  EC52  F05E         	call	_getNV
 29168   00629A  0100               	movlb	0	; () banked
 29169   00629C  518D               	movf	?_getNV& (0+255),w,b
 29170   00629E  0101               	movlb	1	; () banked
 29171   0062A0  6FE3               	movwf	processActions@type& (0+255),b
 29172                           
 29173                           ; BSR set to: 1
 29174                           ;../universalEvents.c: 280:             setOutputState(io, ioAction, type);
 29175   0062A2  C1E4  F093         	movff	processActions@ioAction,setOutputState@act
 29176   0062A6  C1E3  F094         	movff	processActions@type,setOutputState@type
 29177   0062AA  51E6               	movf	processActions@io& (0+255),w,b
 29178   0062AC  EC68  F05B         	call	_setOutputState
 29179                           
 29180                           ;../universalEvents.c: 281:             if (needsStarting(io, ioAction, type)) {
 29181   0062B0  C1E4  F08D         	movff	processActions@ioAction,needsStarting@act
 29182   0062B4  C1E3  F08E         	movff	processActions@type,needsStarting@type
 29183   0062B8  0101               	movlb	1	; () banked
 29184   0062BA  51E6               	movf	processActions@io& (0+255),w,b
 29185   0062BC  ECE4  F053         	call	_needsStarting
 29186   0062C0  0900               	iorlw	0
 29187   0062C2  B4D8               	btfsc	status,2,c
 29188   0062C4  D008               	goto	l22929
 29189                           
 29190                           ;../universalEvents.c: 282:                 startOutput(io, ioAction, type);
 29191   0062C6  C1E4  F1DC         	movff	processActions@ioAction,startOutput@act
 29192   0062CA  C1E3  F1DD         	movff	processActions@type,startOutput@type
 29193   0062CE  0101               	movlb	1	; () banked
 29194   0062D0  51E6               	movf	processActions@io& (0+255),w,b
 29195   0062D2  EC5E  F05A         	call	_startOutput
 29196   0062D6                     l22929:
 29197                           
 29198                           ;../universalEvents.c: 285:             peekItem = 1;
 29199   0062D6  0E01               	movlw	1
 29200   0062D8  0101               	movlb	1	; () banked
 29201   0062DA  6FE0               	movwf	processActions@peekItem& (0+255),b
 29202                           
 29203                           ;../universalEvents.c: 286:             while (simultaneous) {
 29204   0062DC  D06D               	goto	l22965
 29205   0062DE                     l22931:
 29206                           
 29207                           ; BSR set to: 1
 29208                           ;../universalEvents.c: 287:                 uint8_t nextAction;;../universalEvents.c: 28
      +                          8:                 uint8_t nextIo;;../universalEvents.c: 289:                 uint8_t ne
      +                          xtType;;../universalEvents.c: 291:                 nextAction = peekTwoActionQueue(peekI
      +                          tem);
 29209   0062DE  51E0               	movf	processActions@peekItem& (0+255),w,b
 29210   0062E0  ECD7  F052         	call	_peekTwoActionQueue
 29211   0062E4  0101               	movlb	1	; () banked
 29212   0062E6  6FE5               	movwf	processActions@nextAction& (0+255),b
 29213                           
 29214                           ; BSR set to: 1
 29215                           ;../universalEvents.c: 293:                 if (nextAction == 0) break;
 29216   0062E8  51E5               	movf	processActions@nextAction& (0+255),w,b
 29217   0062EA  B4D8               	btfsc	status,2,c
 29218   0062EC  D068               	goto	u24300
 29219                           
 29220                           ; BSR set to: 1
 29221                           ;../universalEvents.c: 294:                 simultaneous = nextAction & 0x80;
 29222   0062EE  51E5               	movf	processActions@nextAction& (0+255),w,b
 29223   0062F0  0B80               	andlw	128
 29224   0062F2  6FDF               	movwf	processActions@simultaneous& (0+255),b
 29225                           
 29226                           ; BSR set to: 1
 29227                           ;../universalEvents.c: 295:                 nextAction &= 0x7F;
 29228   0062F4  9FE5               	bcf	processActions@nextAction& (0+255),7,b
 29229                           
 29230                           ; BSR set to: 1
 29231                           ;../universalEvents.c: 296:                 nextIo = (((nextAction)-8)/5);
 29232   0062F6  0EF8               	movlw	248
 29233   0062F8  25E5               	addwf	processActions@nextAction& (0+255),w,b
 29234   0062FA  0100               	movlb	0	; () banked
 29235   0062FC  6F97               	movwf	___awdiv@dividend& (0+255),b
 29236   0062FE  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 29237   006300  0EFF               	movlw	255
 29238   006302  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 29239   006304  0E00               	movlw	0
 29240   006306  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 29241   006308  0E05               	movlw	5
 29242   00630A  6F99               	movwf	___awdiv@divisor& (0+255),b
 29243   00630C  EC1C  F053         	call	___awdiv	;wreg free
 29244   006310  0100               	movlb	0	; () banked
 29245   006312  5197               	movf	?___awdiv& (0+255),w,b
 29246   006314  0101               	movlb	1	; () banked
 29247   006316  6FE2               	movwf	processActions@nextIo& (0+255),b
 29248                           
 29249                           ; BSR set to: 1
 29250                           ;../universalEvents.c: 297:                 if (nextIo == io) {
 29251   006318  51E6               	movf	processActions@io& (0+255),w,b
 29252   00631A  19E2               	xorwf	processActions@nextIo& (0+255),w,b
 29253   00631C  B4D8               	btfsc	status,2,c
 29254   00631E  D04F               	goto	u24300
 29255                           
 29256                           ; BSR set to: 1
 29257                           ;../universalEvents.c: 303:                 nextAction = (((nextAction)-8)%5);
 29258   006320  0EF8               	movlw	248
 29259   006322  25E5               	addwf	processActions@nextAction& (0+255),w,b
 29260   006324  0100               	movlb	0	; () banked
 29261   006326  6F8D               	movwf	___awmod@dividend& (0+255),b
 29262   006328  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 29263   00632A  0EFF               	movlw	255
 29264   00632C  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 29265   00632E  0E00               	movlw	0
 29266   006330  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 29267   006332  0E05               	movlw	5
 29268   006334  6F8F               	movwf	___awmod@divisor& (0+255),b
 29269   006336  EC31  F057         	call	___awmod	;wreg free
 29270   00633A  0100               	movlb	0	; () banked
 29271   00633C  518D               	movf	?___awmod& (0+255),w,b
 29272   00633E  0101               	movlb	1	; () banked
 29273   006340  6FE5               	movwf	processActions@nextAction& (0+255),b
 29274                           
 29275                           ; BSR set to: 1
 29276                           ;../universalEvents.c: 304:                 nextType = (uint8_t)getNV((16 + 7*(io) + 0))
      +                          ;
 29277   006342  51E6               	movf	processActions@io& (0+255),w,b
 29278   006344  0D07               	mullw	7
 29279   006346  50F3               	movf	243,w,c
 29280   006348  0F10               	addlw	16
 29281   00634A  EC52  F05E         	call	_getNV
 29282   00634E  0100               	movlb	0	; () banked
 29283   006350  518D               	movf	?_getNV& (0+255),w,b
 29284   006352  0101               	movlb	1	; () banked
 29285   006354  6FE1               	movwf	processActions@nextType& (0+255),b
 29286                           
 29287                           ; BSR set to: 1
 29288                           ;../universalEvents.c: 305:                 setOutputState(nextIo, nextAction, nextType)
      +                          ;
 29289   006356  C1E5  F093         	movff	processActions@nextAction,setOutputState@act
 29290   00635A  C1E1  F094         	movff	processActions@nextType,setOutputState@type
 29291   00635E  51E2               	movf	processActions@nextIo& (0+255),w,b
 29292   006360  EC68  F05B         	call	_setOutputState
 29293                           
 29294                           ;../universalEvents.c: 306:                 if (needsStarting(nextIo, nextAction, nextTy
      +                          pe)) {
 29295   006364  C1E5  F08D         	movff	processActions@nextAction,needsStarting@act
 29296   006368  C1E1  F08E         	movff	processActions@nextType,needsStarting@type
 29297   00636C  0101               	movlb	1	; () banked
 29298   00636E  51E2               	movf	processActions@nextIo& (0+255),w,b
 29299   006370  ECE4  F053         	call	_needsStarting
 29300   006374  0900               	iorlw	0
 29301   006376  B4D8               	btfsc	status,2,c
 29302   006378  D008               	goto	l22957
 29303                           
 29304                           ;../universalEvents.c: 307:                     startOutput(nextIo, nextAction, nextType
      +                          );
 29305   00637A  C1E5  F1DC         	movff	processActions@nextAction,startOutput@act
 29306   00637E  C1E1  F1DD         	movff	processActions@nextType,startOutput@type
 29307   006382  0101               	movlb	1	; () banked
 29308   006384  51E2               	movf	processActions@nextIo& (0+255),w,b
 29309   006386  EC5E  F05A         	call	_startOutput
 29310   00638A                     l22957:
 29311                           
 29312                           ;../universalEvents.c: 309:                 if (completed(nextIo, nextAction, nextType))
      +                           {
 29313   00638A  C1E5  F08D         	movff	processActions@nextAction,completed@action
 29314   00638E  C1E1  F08E         	movff	processActions@nextType,completed@type
 29315   006392  0101               	movlb	1	; () banked
 29316   006394  51E2               	movf	processActions@nextIo& (0+255),w,b
 29317   006396  EC96  F050         	call	_completed
 29318   00639A  0900               	iorlw	0
 29319   00639C  B4D8               	btfsc	status,2,c
 29320   00639E  D00A               	goto	l22963
 29321                           
 29322                           ;../universalEvents.c: 310:                     deleteTwoActionQueue(peekItem);
 29323   0063A0  0101               	movlb	1	; () banked
 29324   0063A2  51E0               	movf	processActions@peekItem& (0+255),w,b
 29325   0063A4  EC64  F054         	call	_deleteTwoActionQueue
 29326                           
 29327                           ;../universalEvents.c: 311:                     finaliseOutput(io, type);
 29328   0063A8  C1E3  F08D         	movff	processActions@type,finaliseOutput@type
 29329   0063AC  0101               	movlb	1	; () banked
 29330   0063AE  51E6               	movf	processActions@io& (0+255),w,b
 29331   0063B0  EC12  F063         	call	_finaliseOutput
 29332   0063B4                     l22963:
 29333                           
 29334                           ;../universalEvents.c: 313:                 peekItem++;
 29335   0063B4  0101               	movlb	1	; () banked
 29336   0063B6  2BE0               	incf	processActions@peekItem& (0+255),f,b
 29337   0063B8                     l22965:
 29338                           
 29339                           ; BSR set to: 1
 29340                           ;../universalEvents.c: 286:             while (simultaneous) {
 29341   0063B8  51DF               	movf	processActions@simultaneous& (0+255),w,b
 29342   0063BA  A4D8               	btfss	status,2,c
 29343   0063BC  D790               	goto	l22931
 29344   0063BE                     u24300:
 29345                           
 29346                           ; BSR set to: 1
 29347                           ;../universalEvents.c: 316:             if (completed(io, action, type)) {
 29348   0063BE  C1E7  F08D         	movff	processActions@action,completed@action
 29349   0063C2  C1E3  F08E         	movff	processActions@type,completed@type
 29350   0063C6  51E6               	movf	processActions@io& (0+255),w,b
 29351   0063C8  EC96  F050         	call	_completed
 29352   0063CC  0900               	iorlw	0
 29353   0063CE  B4D8               	btfsc	status,2,c
 29354   0063D0  0012               	return	
 29355                           
 29356                           ;../universalEvents.c: 317:                 doneTwoAction();
 29357   0063D2  EC1F  F063         	call	_doneTwoAction	;wreg free
 29358                           
 29359                           ;../universalEvents.c: 318:                 finaliseOutput(io, type);
 29360   0063D6  C1E3  F08D         	movff	processActions@type,finaliseOutput@type
 29361   0063DA  0101               	movlb	1	; () banked
 29362   0063DC  51E6               	movf	processActions@io& (0+255),w,b
 29363   0063DE  EC12  F063         	call	_finaliseOutput
 29364                           
 29365                           ;../universalEvents.c: 319:             } else {
 29366   0063E2  D6E7               	goto	__ptext105
 29367   0063E4                     l22973:
 29368                           
 29369                           ; BSR set to: 1
 29370                           ;../universalEvents.c: 327:             doneTwoAction();
 29371   0063E4  EC1F  F063         	call	_doneTwoAction	;wreg free
 29372   0063E8  D6E4               	goto	__ptext105
 29373   0063EA                     __end_of_processActions:
 29374                           	callstack 0
 29375                           
 29376 ;; *************** function _startOutput *****************
 29377 ;; Defined at:
 29378 ;;		line 72 in file "../outputs.c"
 29379 ;; Parameters:    Size  Location     Type
 29380 ;;  io              1    wreg     unsigned char 
 29381 ;;  act             1   34[BANK1 ] unsigned char 
 29382 ;;  type            1   35[BANK1 ] unsigned char 
 29383 ;; Auto vars:     Size  Location     Type
 29384 ;;  io              1   36[BANK1 ] unsigned char 
 29385 ;; Return value:  Size  Location     Type
 29386 ;;                  1    wreg      void 
 29387 ;; Registers used:
 29388 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 29389 ;; Tracked objects:
 29390 ;;		On entry : 0/0
 29391 ;;		On exit  : 0/0
 29392 ;;		Unchanged: 0/0
 29393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29394 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29395 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29397 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29398 ;;Total ram usage:        3 bytes
 29399 ;; Hardware stack levels used: 1
 29400 ;; Hardware stack levels required when called: 20
 29401 ;; This function calls:
 29402 ;;		_startBounceOutput
 29403 ;;		_startDigitalOutput
 29404 ;;		_startMultiOutput
 29405 ;;		_startServoOutput
 29406 ;; This function is called by:
 29407 ;;		_processActions
 29408 ;; This function uses a non-reentrant model
 29409 ;;
 29410                           
 29411                           	psect	text106
 29412   00B4BC                     __ptext106:
 29413                           	callstack 0
 29414   00B4BC                     _startOutput:
 29415                           	callstack 8
 29416                           
 29417                           ;incstack = 0
 29418                           ;startOutput@io stored from wreg
 29419   00B4BC  0101               	movlb	1	; () banked
 29420   00B4BE  6FDE               	movwf	startOutput@io& (0+255),b
 29421                           
 29422                           ;../outputs.c: 73:     switch(type) {
 29423   00B4C0  D018               	goto	l21525
 29424   00B4C2                     l21507:
 29425                           
 29426                           ; BSR set to: 1
 29427                           ;../outputs.c: 78:             startDigitalOutput(io, act);
 29428   00B4C2  C1DC  F1D4         	movff	startOutput@act,startDigitalOutput@state
 29429   00B4C6  51DE               	movf	startOutput@io& (0+255),w,b
 29430   00B4C8  EC88  F02A         	call	_startDigitalOutput
 29431   00B4CC  0012               	return	
 29432   00B4CE                     l21511:
 29433                           
 29434                           ; BSR set to: 1
 29435                           ;../outputs.c: 82:             startBounceOutput(io, act);
 29436   00B4CE  C1DC  F08D         	movff	startOutput@act,startBounceOutput@action
 29437   00B4D2  51DE               	movf	startOutput@io& (0+255),w,b
 29438   00B4D4  ECA9  F058         	call	_startBounceOutput
 29439   00B4D8  0012               	return	
 29440   00B4DA                     l21515:
 29441                           
 29442                           ; BSR set to: 1
 29443                           ;../outputs.c: 87:             startServoOutput(io, act);
 29444   00B4DA  C1DC  F091         	movff	startOutput@act,startServoOutput@action
 29445   00B4DE  51DE               	movf	startOutput@io& (0+255),w,b
 29446   00B4E0  EC5D  F049         	call	_startServoOutput
 29447   00B4E4  0012               	return	
 29448   00B4E6                     l21519:
 29449                           
 29450                           ; BSR set to: 1
 29451                           ;../outputs.c: 92:             startMultiOutput(io, act);
 29452   00B4E6  C1DC  F091         	movff	startOutput@act,startMultiOutput@action
 29453   00B4EA  51DE               	movf	startOutput@io& (0+255),w,b
 29454   00B4EC  ECEB  F04D         	call	_startMultiOutput
 29455   00B4F0  0012               	return	
 29456   00B4F2                     l21525:
 29457   00B4F2  0101               	movlb	1	; () banked
 29458   00B4F4  51DD               	movf	startOutput@type& (0+255),w,b
 29459                           
 29460                           ; Switch size 1, requested type "simple"
 29461                           ; Number of cases is 5, Range of values is 0 to 4
 29462                           ; switch strategies available:
 29463                           ; Name         Instructions Cycles
 29464                           ; simple_byte           16     9 (average)
 29465                           ;	Chosen strategy is simple_byte
 29466   00B4F6  0A00               	xorlw	0	; case 0
 29467   00B4F8  B4D8               	btfsc	status,2,c
 29468   00B4FA  0012               	return	
 29469   00B4FC  0A01               	xorlw	1	; case 1
 29470   00B4FE  B4D8               	btfsc	status,2,c
 29471   00B500  D7E0               	goto	l21507
 29472   00B502  0A03               	xorlw	3	; case 2
 29473   00B504  B4D8               	btfsc	status,2,c
 29474   00B506  D7E9               	goto	l21515
 29475   00B508  0A01               	xorlw	1	; case 3
 29476   00B50A  B4D8               	btfsc	status,2,c
 29477   00B50C  D7E0               	goto	l21511
 29478   00B50E  0A07               	xorlw	7	; case 4
 29479   00B510  A4D8               	btfss	status,2,c
 29480   00B512  0012               	return	
 29481   00B514  D7E8               	goto	l21519
 29482   00B516                     __end_of_startOutput:
 29483                           	callstack 0
 29484                           
 29485 ;; *************** function _startServoOutput *****************
 29486 ;; Defined at:
 29487 ;;		line 538 in file "../servo.c"
 29488 ;; Parameters:    Size  Location     Type
 29489 ;;  io              1    wreg     unsigned char 
 29490 ;;  action          1   49[BANK0 ] unsigned char 
 29491 ;; Auto vars:     Size  Location     Type
 29492 ;;  io              1   51[BANK0 ] unsigned char 
 29493 ;; Return value:  Size  Location     Type
 29494 ;;                  1    wreg      void 
 29495 ;; Registers used:
 29496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29497 ;; Tracked objects:
 29498 ;;		On entry : 0/0
 29499 ;;		On exit  : 0/0
 29500 ;;		Unchanged: 0/0
 29501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29502 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29503 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29504 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29505 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29506 ;;Total ram usage:        3 bytes
 29507 ;; Hardware stack levels used: 1
 29508 ;; Hardware stack levels required when called: 13
 29509 ;; This function calls:
 29510 ;;		_getNV
 29511 ;; This function is called by:
 29512 ;;		_APP_nvValueChanged
 29513 ;;		_startOutput
 29514 ;; This function uses a non-reentrant model
 29515 ;;
 29516                           
 29517                           	psect	text107
 29518   0092BA                     __ptext107:
 29519                           	callstack 0
 29520   0092BA                     _startServoOutput:
 29521                           	callstack 13
 29522                           
 29523                           ;incstack = 0
 29524                           ;startServoOutput@io stored from wreg
 29525   0092BA  0100               	movlb	0	; () banked
 29526   0092BC  6F93               	movwf	startServoOutput@io& (0+255),b
 29527                           
 29528                           ;../servo.c: 539:     switch (action) {
 29529   0092BE  D017               	goto	l20103
 29530   0092C0                     l20097:
 29531                           
 29532                           ; BSR set to: 0
 29533                           ;../servo.c: 541:             stepsPerPollSpeed[io] = (uint8_t)getNV((16 + 7*(io) + 5));
 29534   0092C0  5193               	movf	startServoOutput@io& (0+255),w,b
 29535   0092C2  0D07               	mullw	7
 29536   0092C4  50F3               	movf	243,w,c
 29537   0092C6  0F15               	addlw	21
 29538   0092C8  EC52  F05E         	call	_getNV
 29539   0092CC  D006               	goto	L8
 29540   0092CE                     l20099:
 29541                           
 29542                           ; BSR set to: 0
 29543                           ;../servo.c: 544:             stepsPerPollSpeed[io] = (uint8_t)getNV((16 + 7*(io) + 4));
 29544   0092CE  5193               	movf	startServoOutput@io& (0+255),w,b
 29545   0092D0  0D07               	mullw	7
 29546   0092D2  50F3               	movf	243,w,c
 29547   0092D4  0F14               	addlw	20
 29548   0092D6  EC52  F05E         	call	_getNV
 29549   0092DA                     L8:
 29550   0092DA  0E00               	movlw	low _stepsPerPollSpeed
 29551   0092DC  0100               	movlb	0	; () banked
 29552   0092DE  2593               	addwf	startServoOutput@io& (0+255),w,b
 29553   0092E0  6ED9               	movwf	fsr2l,c
 29554   0092E2  6ADA               	clrf	fsr2h,c
 29555   0092E4  0E01               	movlw	high _stepsPerPollSpeed
 29556   0092E6  22DA               	addwfc	fsr2h,f,c
 29557   0092E8  C08D  FFDF         	movff	?_getNV,indf2
 29558                           
 29559                           ;../servo.c: 545:             break;
 29560   0092EC  D008               	goto	l20105
 29561   0092EE                     l20103:
 29562   0092EE  0100               	movlb	0	; () banked
 29563   0092F0  5191               	movf	startServoOutput@action& (0+255),w,b
 29564                           
 29565                           ; Switch size 1, requested type "simple"
 29566                           ; Number of cases is 2, Range of values is 1 to 2
 29567                           ; switch strategies available:
 29568                           ; Name         Instructions Cycles
 29569                           ; simple_byte            7     4 (average)
 29570                           ;	Chosen strategy is simple_byte
 29571   0092F2  0A01               	xorlw	1	; case 1
 29572   0092F4  B4D8               	btfsc	status,2,c
 29573   0092F6  D7EB               	goto	l20099
 29574   0092F8  0A03               	xorlw	3	; case 2
 29575   0092FA  B4D8               	btfsc	status,2,c
 29576   0092FC  D7E1               	goto	l20097
 29577   0092FE                     l20105:
 29578                           
 29579                           ; BSR set to: 0
 29580                           ;../servo.c: 547:     if (stepsPerPollSpeed[io] > 234) {
 29581   0092FE  0E00               	movlw	low _stepsPerPollSpeed
 29582   009300  2593               	addwf	startServoOutput@io& (0+255),w,b
 29583   009302  6ED9               	movwf	fsr2l,c
 29584   009304  6ADA               	clrf	fsr2h,c
 29585   009306  0E01               	movlw	high _stepsPerPollSpeed
 29586   009308  22DA               	addwfc	fsr2h,f,c
 29587   00930A  0EEA               	movlw	234
 29588   00930C  64DF               	cpfsgt	indf2,c
 29589   00930E  D00E               	goto	l20109
 29590                           
 29591                           ; BSR set to: 0
 29592                           ;../servo.c: 548:         stepsPerPollSpeed[io] -= 234;
 29593   009310  0E00               	movlw	low _stepsPerPollSpeed
 29594   009312  2593               	addwf	startServoOutput@io& (0+255),w,b
 29595   009314  6ED9               	movwf	fsr2l,c
 29596   009316  6ADA               	clrf	fsr2h,c
 29597   009318  0E01               	movlw	high _stepsPerPollSpeed
 29598   00931A  22DA               	addwfc	fsr2h,f,c
 29599   00931C  0EEA               	movlw	234
 29600   00931E  5EDF               	subwf	indf2,f,c
 29601                           
 29602                           ;../servo.c: 549:         pollsPerStepSpeed[io] = 0;
 29603   009320  0E74               	movlw	low _pollsPerStepSpeed
 29604   009322  2593               	addwf	startServoOutput@io& (0+255),w,b
 29605   009324  6ED9               	movwf	fsr2l,c
 29606   009326  6ADA               	clrf	fsr2h,c
 29607   009328  0E02               	movlw	high _pollsPerStepSpeed
 29608   00932A  D01E               	goto	L9
 29609   00932C                     l20109:
 29610                           
 29611                           ; BSR set to: 0
 29612                           ;../servo.c: 551:         pollsPerStepSpeed[io] = 234 - stepsPerPollSpeed[io] +1;
 29613   00932C  0E74               	movlw	low _pollsPerStepSpeed
 29614   00932E  2593               	addwf	startServoOutput@io& (0+255),w,b
 29615   009330  6ED9               	movwf	fsr2l,c
 29616   009332  6ADA               	clrf	fsr2h,c
 29617   009334  0E02               	movlw	high _pollsPerStepSpeed
 29618   009336  22DA               	addwfc	fsr2h,f,c
 29619   009338  0E00               	movlw	low _stepsPerPollSpeed
 29620   00933A  2593               	addwf	startServoOutput@io& (0+255),w,b
 29621   00933C  6EE1               	movwf	fsr1l,c
 29622   00933E  6AE2               	clrf	fsr1h,c
 29623   009340  0E01               	movlw	high _stepsPerPollSpeed
 29624   009342  22E2               	addwfc	fsr1h,f,c
 29625   009344  50E7               	movf	indf1,w,c
 29626   009346  6F92               	movwf	??_startServoOutput& (0+255),b
 29627   009348  5192               	movf	??_startServoOutput& (0+255),w,b
 29628   00934A  08EB               	sublw	235
 29629   00934C  6EDF               	movwf	indf2,c
 29630                           
 29631                           ; BSR set to: 0
 29632                           ;../servo.c: 552:         pollCount[io] = 1;
 29633   00934E  0E64               	movlw	low _pollCount
 29634   009350  2593               	addwf	startServoOutput@io& (0+255),w,b
 29635   009352  6ED9               	movwf	fsr2l,c
 29636   009354  6ADA               	clrf	fsr2h,c
 29637   009356  0E02               	movlw	high _pollCount
 29638   009358  22DA               	addwfc	fsr2h,f,c
 29639   00935A  0E01               	movlw	1
 29640   00935C  6EDF               	movwf	indf2,c
 29641                           
 29642                           ; BSR set to: 0
 29643                           ;../servo.c: 553:         stepsPerPollSpeed[io] = 0;
 29644   00935E  0E00               	movlw	low _stepsPerPollSpeed
 29645   009360  2593               	addwf	startServoOutput@io& (0+255),w,b
 29646   009362  6ED9               	movwf	fsr2l,c
 29647   009364  6ADA               	clrf	fsr2h,c
 29648   009366  0E01               	movlw	high _stepsPerPollSpeed
 29649   009368                     L9:
 29650   009368  22DA               	addwfc	fsr2h,f,c
 29651   00936A  6ADF               	clrf	indf2,c
 29652                           
 29653                           ; BSR set to: 0
 29654                           ;../servo.c: 555:     servoState[io] = SS_STARTING;
 29655   00936C  0E10               	movlw	low _servoState
 29656   00936E  2593               	addwf	startServoOutput@io& (0+255),w,b
 29657   009370  6ED9               	movwf	fsr2l,c
 29658   009372  6ADA               	clrf	fsr2h,c
 29659   009374  0E01               	movlw	high _servoState
 29660   009376  22DA               	addwfc	fsr2h,f,c
 29661   009378  0E03               	movlw	3
 29662   00937A  6EDF               	movwf	indf2,c
 29663                           
 29664                           ; BSR set to: 0
 29665   00937C  0012               	return		;funcret
 29666   00937E                     __end_of_startServoOutput:
 29667                           	callstack 0
 29668                           
 29669 ;; *************** function _startMultiOutput *****************
 29670 ;; Defined at:
 29671 ;;		line 584 in file "../servo.c"
 29672 ;; Parameters:    Size  Location     Type
 29673 ;;  io              1    wreg     unsigned char 
 29674 ;;  action          1   49[BANK0 ] unsigned char 
 29675 ;; Auto vars:     Size  Location     Type
 29676 ;;  io              1   51[BANK0 ] unsigned char 
 29677 ;; Return value:  Size  Location     Type
 29678 ;;                  1    wreg      void 
 29679 ;; Registers used:
 29680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 29681 ;; Tracked objects:
 29682 ;;		On entry : 0/0
 29683 ;;		On exit  : 0/0
 29684 ;;		Unchanged: 0/0
 29685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29686 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29687 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29688 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29689 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29690 ;;Total ram usage:        3 bytes
 29691 ;; Hardware stack levels used: 1
 29692 ;; Hardware stack levels required when called: 13
 29693 ;; This function calls:
 29694 ;;		_getNV
 29695 ;; This function is called by:
 29696 ;;		_APP_nvValueChanged
 29697 ;;		_startOutput
 29698 ;; This function uses a non-reentrant model
 29699 ;;
 29700                           
 29701                           	psect	text108
 29702   009BD6                     __ptext108:
 29703                           	callstack 0
 29704   009BD6                     _startMultiOutput:
 29705                           	callstack 13
 29706                           
 29707                           ; BSR set to: 0
 29708                           ;incstack = 0
 29709                           ;startMultiOutput@io stored from wreg
 29710   009BD6  0100               	movlb	0	; () banked
 29711   009BD8  6F93               	movwf	startMultiOutput@io& (0+255),b
 29712                           
 29713                           ;../servo.c: 586:     stepsPerPollSpeed[io] = (uint8_t)getNV(3);
 29714   009BDA  0E03               	movlw	3
 29715   009BDC  EC52  F05E         	call	_getNV
 29716   009BE0  0E00               	movlw	low _stepsPerPollSpeed
 29717   009BE2  0100               	movlb	0	; () banked
 29718   009BE4  2593               	addwf	startMultiOutput@io& (0+255),w,b
 29719   009BE6  6ED9               	movwf	fsr2l,c
 29720   009BE8  6ADA               	clrf	fsr2h,c
 29721   009BEA  0E01               	movlw	high _stepsPerPollSpeed
 29722   009BEC  22DA               	addwfc	fsr2h,f,c
 29723   009BEE  C08D  FFDF         	movff	?_getNV,indf2
 29724                           
 29725                           ; BSR set to: 0
 29726                           ;../servo.c: 587:     if (stepsPerPollSpeed[io] > 234) {
 29727   009BF2  0E00               	movlw	low _stepsPerPollSpeed
 29728   009BF4  2593               	addwf	startMultiOutput@io& (0+255),w,b
 29729   009BF6  6ED9               	movwf	fsr2l,c
 29730   009BF8  6ADA               	clrf	fsr2h,c
 29731   009BFA  0E01               	movlw	high _stepsPerPollSpeed
 29732   009BFC  22DA               	addwfc	fsr2h,f,c
 29733   009BFE  0EEA               	movlw	234
 29734   009C00  64DF               	cpfsgt	indf2,c
 29735   009C02  D00E               	goto	l20173
 29736                           
 29737                           ; BSR set to: 0
 29738                           ;../servo.c: 588:         stepsPerPollSpeed[io] -= 234;
 29739   009C04  0E00               	movlw	low _stepsPerPollSpeed
 29740   009C06  2593               	addwf	startMultiOutput@io& (0+255),w,b
 29741   009C08  6ED9               	movwf	fsr2l,c
 29742   009C0A  6ADA               	clrf	fsr2h,c
 29743   009C0C  0E01               	movlw	high _stepsPerPollSpeed
 29744   009C0E  22DA               	addwfc	fsr2h,f,c
 29745   009C10  0EEA               	movlw	234
 29746   009C12  5EDF               	subwf	indf2,f,c
 29747                           
 29748                           ;../servo.c: 589:         pollsPerStepSpeed[io] = 0;
 29749   009C14  0E74               	movlw	low _pollsPerStepSpeed
 29750   009C16  2593               	addwf	startMultiOutput@io& (0+255),w,b
 29751   009C18  6ED9               	movwf	fsr2l,c
 29752   009C1A  6ADA               	clrf	fsr2h,c
 29753   009C1C  0E02               	movlw	high _pollsPerStepSpeed
 29754   009C1E  D01E               	goto	L10
 29755   009C20                     l20173:
 29756                           
 29757                           ; BSR set to: 0
 29758                           ;../servo.c: 591:         pollsPerStepSpeed[io] = 234 - stepsPerPollSpeed[io] +1;
 29759   009C20  0E74               	movlw	low _pollsPerStepSpeed
 29760   009C22  2593               	addwf	startMultiOutput@io& (0+255),w,b
 29761   009C24  6ED9               	movwf	fsr2l,c
 29762   009C26  6ADA               	clrf	fsr2h,c
 29763   009C28  0E02               	movlw	high _pollsPerStepSpeed
 29764   009C2A  22DA               	addwfc	fsr2h,f,c
 29765   009C2C  0E00               	movlw	low _stepsPerPollSpeed
 29766   009C2E  2593               	addwf	startMultiOutput@io& (0+255),w,b
 29767   009C30  6EE1               	movwf	fsr1l,c
 29768   009C32  6AE2               	clrf	fsr1h,c
 29769   009C34  0E01               	movlw	high _stepsPerPollSpeed
 29770   009C36  22E2               	addwfc	fsr1h,f,c
 29771   009C38  50E7               	movf	indf1,w,c
 29772   009C3A  6F92               	movwf	??_startMultiOutput& (0+255),b
 29773   009C3C  5192               	movf	??_startMultiOutput& (0+255),w,b
 29774   009C3E  08EB               	sublw	235
 29775   009C40  6EDF               	movwf	indf2,c
 29776                           
 29777                           ; BSR set to: 0
 29778                           ;../servo.c: 592:         pollCount[io] = 1;
 29779   009C42  0E64               	movlw	low _pollCount
 29780   009C44  2593               	addwf	startMultiOutput@io& (0+255),w,b
 29781   009C46  6ED9               	movwf	fsr2l,c
 29782   009C48  6ADA               	clrf	fsr2h,c
 29783   009C4A  0E02               	movlw	high _pollCount
 29784   009C4C  22DA               	addwfc	fsr2h,f,c
 29785   009C4E  0E01               	movlw	1
 29786   009C50  6EDF               	movwf	indf2,c
 29787                           
 29788                           ; BSR set to: 0
 29789                           ;../servo.c: 593:         stepsPerPollSpeed[io] = 0;
 29790   009C52  0E00               	movlw	low _stepsPerPollSpeed
 29791   009C54  2593               	addwf	startMultiOutput@io& (0+255),w,b
 29792   009C56  6ED9               	movwf	fsr2l,c
 29793   009C58  6ADA               	clrf	fsr2h,c
 29794   009C5A  0E01               	movlw	high _stepsPerPollSpeed
 29795   009C5C                     L10:
 29796   009C5C  22DA               	addwfc	fsr2h,f,c
 29797   009C5E  6ADF               	clrf	indf2,c
 29798                           
 29799                           ; BSR set to: 0
 29800                           ;../servo.c: 595:     servoState[io] = SS_STARTING;
 29801   009C60  0E10               	movlw	low _servoState
 29802   009C62  2593               	addwf	startMultiOutput@io& (0+255),w,b
 29803   009C64  6ED9               	movwf	fsr2l,c
 29804   009C66  6ADA               	clrf	fsr2h,c
 29805   009C68  0E01               	movlw	high _servoState
 29806   009C6A  22DA               	addwfc	fsr2h,f,c
 29807   009C6C  0E03               	movlw	3
 29808   009C6E  6EDF               	movwf	indf2,c
 29809                           
 29810                           ; BSR set to: 0
 29811   009C70  0012               	return		;funcret
 29812   009C72                     __end_of_startMultiOutput:
 29813                           	callstack 0
 29814                           
 29815 ;; *************** function _startDigitalOutput *****************
 29816 ;; Defined at:
 29817 ;;		line 107 in file "../digitalOut.c"
 29818 ;; Parameters:    Size  Location     Type
 29819 ;;  io              1    wreg     unsigned char 
 29820 ;;  state           1   26[BANK1 ] unsigned char 
 29821 ;; Auto vars:     Size  Location     Type
 29822 ;;  io              1   33[BANK1 ] unsigned char 
 29823 ;;  actionState     1   32[BANK1 ] enum E12760
 29824 ;;  pinState        1   31[BANK1 ] enum E12760
 29825 ;; Return value:  Size  Location     Type
 29826 ;;                  1    wreg      void 
 29827 ;; Registers used:
 29828 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 29829 ;; Tracked objects:
 29830 ;;		On entry : 0/0
 29831 ;;		On exit  : 0/0
 29832 ;;		Unchanged: 0/0
 29833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29834 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29835 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29836 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29837 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29838 ;;Total ram usage:        8 bytes
 29839 ;; Hardware stack levels used: 1
 29840 ;; Hardware stack levels required when called: 19
 29841 ;; This function calls:
 29842 ;;		_getNV
 29843 ;;		_sendInvertedProducedEvent
 29844 ;;		_setOutputPin
 29845 ;;		_writeNVM
 29846 ;; This function is called by:
 29847 ;;		_startOutput
 29848 ;; This function uses a non-reentrant model
 29849 ;;
 29850                           
 29851                           	psect	text109
 29852   005510                     __ptext109:
 29853                           	callstack 0
 29854   005510                     _startDigitalOutput:
 29855                           	callstack 8
 29856                           
 29857                           ; BSR set to: 0
 29858                           ;incstack = 0
 29859                           ;startDigitalOutput@io stored from wreg
 29860   005510  0101               	movlb	1	; () banked
 29861   005512  6FDB               	movwf	startDigitalOutput@io& (0+255),b
 29862                           
 29863                           ;../digitalOut.c: 108:     Boolean pinState;;../digitalOut.c: 109:     Boolean actionSta
      +                          te;;../digitalOut.c: 116:     if (state == 3) {
 29864   005514  0E03               	movlw	3
 29865   005516  0101               	movlb	1	; () banked
 29866   005518  19D4               	xorwf	startDigitalOutput@state& (0+255),w,b
 29867   00551A  A4D8               	btfss	status,2,c
 29868   00551C  D058               	goto	l20493
 29869                           
 29870                           ; BSR set to: 1
 29871                           ;../digitalOut.c: 117:         flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3));
 29872   00551E  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 29873   005520  0D07               	mullw	7
 29874   005522  50F3               	movf	243,w,c
 29875   005524  0F13               	addlw	19
 29876   005526  EC52  F05E         	call	_getNV
 29877   00552A  0E30               	movlw	low _flashDelays
 29878   00552C  0101               	movlb	1	; () banked
 29879   00552E  25DB               	addwf	startDigitalOutput@io& (0+255),w,b
 29880   005530  6ED9               	movwf	fsr2l,c
 29881   005532  6ADA               	clrf	fsr2h,c
 29882   005534  0E01               	movlw	high _flashDelays
 29883   005536  22DA               	addwfc	fsr2h,f,c
 29884   005538  0100               	movlb	0	; () banked
 29885   00553A  C08D  FFDF         	movff	?_getNV,indf2
 29886                           
 29887                           ; BSR set to: 0
 29888                           ;../digitalOut.c: 118:         pulseDelays[io] = 1;
 29889   00553E  0EA4               	movlw	low _pulseDelays
 29890   005540  0101               	movlb	1	; () banked
 29891   005542  25DB               	addwf	startDigitalOutput@io& (0+255),w,b
 29892   005544  6ED9               	movwf	fsr2l,c
 29893   005546  6ADA               	clrf	fsr2h,c
 29894   005548  0E02               	movlw	high _pulseDelays
 29895   00554A  22DA               	addwfc	fsr2h,f,c
 29896   00554C  0E01               	movlw	1
 29897   00554E  6EDF               	movwf	indf2,c
 29898                           
 29899                           ; BSR set to: 1
 29900                           ;../digitalOut.c: 119:         setOutputPin(io, ! getNV((16 + 7*(io) + 1) & 0x20));
 29901   005550  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 29902   005552  0D07               	mullw	7
 29903   005554  50F3               	movf	243,w,c
 29904   005556  0F11               	addlw	17
 29905   005558  0B20               	andlw	32
 29906   00555A  EC52  F05E         	call	_getNV
 29907   00555E  0100               	movlb	0	; () banked
 29908   005560  518D               	movf	?_getNV& (0+255),w,b
 29909   005562  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 29910   005564  A4D8               	btfss	status,2,c
 29911   005566  D002               	goto	u20680
 29912   005568  0E01               	movlw	1
 29913   00556A  D001               	goto	u20690
 29914   00556C                     u20680:
 29915   00556C  0E00               	movlw	0
 29916   00556E                     u20690:
 29917   00556E  6F91               	movwf	setOutputPin@state& (0+255),b
 29918   005570  0101               	movlb	1	; () banked
 29919   005572  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 29920   005574  ECAB  F036         	call	_setOutputPin
 29921                           
 29922                           ;../digitalOut.c: 120:         writeNVM(EEPROM_NVM_TYPE, (eeprom_address_t)((eeprom_addr
      +                          ess_t)((0x3FF -8))-25)+io, state);
 29923   005578  0EDE               	movlw	222
 29924   00557A  0101               	movlb	1	; () banked
 29925   00557C  25DB               	addwf	startDigitalOutput@io& (0+255),w,b
 29926   00557E  6FD5               	movwf	??_startDigitalOutput& (0+255),b
 29927   005580  6BD6               	clrf	(??_startDigitalOutput+1)& (0+255),b
 29928   005582  0E03               	movlw	3
 29929   005584  23D6               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
 29930   005586  C1D5  F0A4         	movff	??_startDigitalOutput,writeNVM@index
 29931   00558A  C1D6  F0A5         	movff	??_startDigitalOutput+1,writeNVM@index+1
 29932   00558E  0100               	movlb	0	; () banked
 29933   005590  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 29934   005592  C1D4  F0A7         	movff	startDigitalOutput@state,writeNVM@value
 29935   005596  0E00               	movlw	0
 29936   005598  EC60  F05C         	call	_writeNVM
 29937                           
 29938                           ;../digitalOut.c: 121:         sendInvertedProducedEvent(((8 + 4*(io))+0), EVENT_ON,
 29939   00559C  0E01               	movlw	1
 29940   00559E  0101               	movlb	1	; () banked
 29941   0055A0  6FCC               	movwf	sendInvertedProducedEvent@state& (0+255),b
 29942   0055A2  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 29943   0055A4  0D07               	mullw	7
 29944   0055A6  50F3               	movf	243,w,c
 29945   0055A8  0F11               	addlw	17
 29946   0055AA  EC52  F05E         	call	_getNV
 29947   0055AE  0100               	movlb	0	; () banked
 29948   0055B0  518D               	movf	?_getNV& (0+255),w,b
 29949   0055B2  0B40               	andlw	64
 29950   0055B4  0101               	movlb	1	; () banked
 29951   0055B6  6FCD               	movwf	sendInvertedProducedEvent@invert& (0+255),b
 29952   0055B8  0E01               	movlw	1
 29953   0055BA  6FCE               	movwf	sendInvertedProducedEvent@can_send_on& (0+255),b
 29954   0055BC  0E01               	movlw	1
 29955   0055BE  6FCF               	movwf	sendInvertedProducedEvent@can_send_off& (0+255),b
 29956   0055C0  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 29957   0055C2  0D04               	mullw	4
 29958   0055C4  50F3               	movf	243,w,c
 29959   0055C6  0F08               	addlw	8
 29960   0055C8  ECF7  F05C         	call	_sendInvertedProducedEvent
 29961   0055CC  0012               	return	
 29962   0055CE                     l20493:
 29963                           
 29964                           ; BSR set to: 1
 29965                           ;../digitalOut.c: 125:     flashDelays[io] = 0;
 29966   0055CE  0E30               	movlw	low _flashDelays
 29967   0055D0  25DB               	addwf	startDigitalOutput@io& (0+255),w,b
 29968   0055D2  6ED9               	movwf	fsr2l,c
 29969   0055D4  6ADA               	clrf	fsr2h,c
 29970   0055D6  0E01               	movlw	high _flashDelays
 29971   0055D8  22DA               	addwfc	fsr2h,f,c
 29972   0055DA  6ADF               	clrf	indf2,c
 29973                           
 29974                           ; BSR set to: 1
 29975                           ;../digitalOut.c: 127:     actionState = (state == 1);
 29976   0055DC  05D4               	decf	startDigitalOutput@state& (0+255),w,b
 29977   0055DE  A4D8               	btfss	status,2,c
 29978   0055E0  D002               	goto	u20700
 29979   0055E2  0E01               	movlw	1
 29980   0055E4  D001               	goto	u20710
 29981   0055E6                     u20700:
 29982   0055E6  0E00               	movlw	0
 29983   0055E8                     u20710:
 29984   0055E8  6FDA               	movwf	startDigitalOutput@actionState& (0+255),b
 29985                           
 29986                           ; BSR set to: 1
 29987                           ;../digitalOut.c: 130:     if (getNV((16 + 7*(io) + 1)) & 0x01) {
 29988   0055EA  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 29989   0055EC  0D07               	mullw	7
 29990   0055EE  50F3               	movf	243,w,c
 29991   0055F0  0F11               	addlw	17
 29992   0055F2  EC52  F05E         	call	_getNV
 29993   0055F6  0100               	movlb	0	; () banked
 29994   0055F8  A18D               	btfss	?_getNV& (0+255),0,b
 29995   0055FA  D008               	goto	l259
 29996                           
 29997                           ; BSR set to: 0
 29998                           ;../digitalOut.c: 131:         actionState = !actionState;
 29999   0055FC  0101               	movlb	1	; () banked
 30000   0055FE  51DA               	movf	startDigitalOutput@actionState& (0+255),w,b
 30001   005600  A4D8               	btfss	status,2,c
 30002   005602  D002               	goto	u20730
 30003   005604  0E01               	movlw	1
 30004   005606  D001               	goto	u20740
 30005   005608                     u20730:
 30006   005608  0E00               	movlw	0
 30007   00560A                     u20740:
 30008   00560A  6FDA               	movwf	startDigitalOutput@actionState& (0+255),b
 30009   00560C                     l259:
 30010                           
 30011                           ;../digitalOut.c: 135:     if (( ! actionState) && getNV((16 + 7*(io) + 2))) {
 30012   00560C  0101               	movlb	1	; () banked
 30013   00560E  51DA               	movf	startDigitalOutput@actionState& (0+255),w,b
 30014   005610  A4D8               	btfss	status,2,c
 30015   005612  D015               	goto	l20507
 30016                           
 30017                           ; BSR set to: 1
 30018   005614  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 30019   005616  0D07               	mullw	7
 30020   005618  50F3               	movf	243,w,c
 30021   00561A  0F12               	addlw	18
 30022   00561C  EC52  F05E         	call	_getNV
 30023   005620  0100               	movlb	0	; () banked
 30024   005622  518D               	movf	?_getNV& (0+255),w,b
 30025   005624  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 30026   005626  B4D8               	btfsc	status,2,c
 30027   005628  D00A               	goto	l20507
 30028                           
 30029                           ; BSR set to: 0
 30030                           ;../digitalOut.c: 136:         pulseDelays[io] = 1;
 30031   00562A  0EA4               	movlw	low _pulseDelays
 30032   00562C  0101               	movlb	1	; () banked
 30033   00562E  25DB               	addwf	startDigitalOutput@io& (0+255),w,b
 30034   005630  6ED9               	movwf	fsr2l,c
 30035   005632  6ADA               	clrf	fsr2h,c
 30036   005634  0E02               	movlw	high _pulseDelays
 30037   005636  22DA               	addwfc	fsr2h,f,c
 30038   005638  0E01               	movlw	1
 30039   00563A  6EDF               	movwf	indf2,c
 30040   00563C  0012               	return	
 30041   00563E                     l20507:
 30042                           
 30043                           ;../digitalOut.c: 142:     if ((actionState) && getNV((16 + 7*(io) + 2)) && (pulseDelays
      +                          [io] == 0)) {
 30044   00563E  0101               	movlb	1	; () banked
 30045   005640  51DA               	movf	startDigitalOutput@actionState& (0+255),w,b
 30046   005642  B4D8               	btfsc	status,2,c
 30047   005644  D038               	goto	l20517
 30048                           
 30049                           ; BSR set to: 1
 30050   005646  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 30051   005648  0D07               	mullw	7
 30052   00564A  50F3               	movf	243,w,c
 30053   00564C  0F12               	addlw	18
 30054   00564E  EC52  F05E         	call	_getNV
 30055   005652  0100               	movlb	0	; () banked
 30056   005654  518D               	movf	?_getNV& (0+255),w,b
 30057   005656  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 30058   005658  B4D8               	btfsc	status,2,c
 30059   00565A  D02D               	goto	l20517
 30060                           
 30061                           ; BSR set to: 0
 30062   00565C  0EA4               	movlw	low _pulseDelays
 30063   00565E  0101               	movlb	1	; () banked
 30064   005660  25DB               	addwf	startDigitalOutput@io& (0+255),w,b
 30065   005662  6ED9               	movwf	fsr2l,c
 30066   005664  6ADA               	clrf	fsr2h,c
 30067   005666  0E02               	movlw	high _pulseDelays
 30068   005668  22DA               	addwfc	fsr2h,f,c
 30069   00566A  50DF               	movf	indf2,w,c
 30070   00566C  A4D8               	btfss	status,2,c
 30071   00566E  D023               	goto	l20517
 30072                           
 30073                           ; BSR set to: 1
 30074                           ;../digitalOut.c: 143:         pulseDelays[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 30075   005670  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 30076   005672  0D07               	mullw	7
 30077   005674  50F3               	movf	243,w,c
 30078   005676  0F12               	addlw	18
 30079   005678  EC52  F05E         	call	_getNV
 30080   00567C  0EA4               	movlw	low _pulseDelays
 30081   00567E  0101               	movlb	1	; () banked
 30082   005680  25DB               	addwf	startDigitalOutput@io& (0+255),w,b
 30083   005682  6ED9               	movwf	fsr2l,c
 30084   005684  6ADA               	clrf	fsr2h,c
 30085   005686  0E02               	movlw	high _pulseDelays
 30086   005688  22DA               	addwfc	fsr2h,f,c
 30087   00568A  0100               	movlb	0	; () banked
 30088   00568C  C08D  FFDF         	movff	?_getNV,indf2
 30089                           
 30090                           ; BSR set to: 0
 30091                           ;../digitalOut.c: 146:         writeNVM(EEPROM_NVM_TYPE, ((eeprom_address_t)((0x3FF -8))
      +                          -25)+io, 2);
 30092   005690  0EDE               	movlw	222
 30093   005692  0101               	movlb	1	; () banked
 30094   005694  25DB               	addwf	startDigitalOutput@io& (0+255),w,b
 30095   005696  6FD5               	movwf	??_startDigitalOutput& (0+255),b
 30096   005698  6BD6               	clrf	(??_startDigitalOutput+1)& (0+255),b
 30097   00569A  0E03               	movlw	3
 30098   00569C  23D6               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
 30099   00569E  C1D5  F0A4         	movff	??_startDigitalOutput,writeNVM@index
 30100   0056A2  C1D6  F0A5         	movff	??_startDigitalOutput+1,writeNVM@index+1
 30101   0056A6  0100               	movlb	0	; () banked
 30102   0056A8  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 30103   0056AA  0E02               	movlw	2
 30104   0056AC  6FA7               	movwf	writeNVM@value& (0+255),b
 30105   0056AE  0E00               	movlw	0
 30106   0056B0  EC60  F05C         	call	_writeNVM
 30107                           
 30108                           ;../digitalOut.c: 147:     } else {
 30109   0056B4  D025               	goto	l20527
 30110   0056B6                     l20517:
 30111                           
 30112                           ;../digitalOut.c: 148:         pulseDelays[io] = 1;
 30113   0056B6  0EA4               	movlw	low _pulseDelays
 30114   0056B8  0101               	movlb	1	; () banked
 30115   0056BA  25DB               	addwf	startDigitalOutput@io& (0+255),w,b
 30116   0056BC  6ED9               	movwf	fsr2l,c
 30117   0056BE  6ADA               	clrf	fsr2h,c
 30118   0056C0  0E02               	movlw	high _pulseDelays
 30119   0056C2  22DA               	addwfc	fsr2h,f,c
 30120   0056C4  0E01               	movlw	1
 30121   0056C6  6EDF               	movwf	indf2,c
 30122                           
 30123                           ; BSR set to: 1
 30124                           ;../digitalOut.c: 149:         writeNVM(EEPROM_NVM_TYPE, ((eeprom_address_t)((0x3FF -8))
      +                          -25)+io, actionState?1:2);
 30125   0056C8  51DA               	movf	startDigitalOutput@actionState& (0+255),w,b
 30126   0056CA  A4D8               	btfss	status,2,c
 30127   0056CC  D004               	goto	l20523
 30128                           
 30129                           ; BSR set to: 1
 30130   0056CE  0E00               	movlw	0
 30131   0056D0  6FD8               	movwf	(_startDigitalOutput$808+1)& (0+255),b
 30132   0056D2  0E02               	movlw	2
 30133   0056D4  D003               	goto	L11
 30134   0056D6                     l20523:
 30135                           
 30136                           ; BSR set to: 1
 30137   0056D6  0E00               	movlw	0
 30138   0056D8  6FD8               	movwf	(_startDigitalOutput$808+1)& (0+255),b
 30139   0056DA  0E01               	movlw	1
 30140   0056DC                     L11:
 30141   0056DC  6FD7               	movwf	_startDigitalOutput$808& (0+255),b
 30142                           
 30143                           ; BSR set to: 1
 30144   0056DE  0EDE               	movlw	222
 30145   0056E0  25DB               	addwf	startDigitalOutput@io& (0+255),w,b
 30146   0056E2  6FD5               	movwf	??_startDigitalOutput& (0+255),b
 30147   0056E4  6BD6               	clrf	(??_startDigitalOutput+1)& (0+255),b
 30148   0056E6  0E03               	movlw	3
 30149   0056E8  23D6               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
 30150   0056EA  C1D5  F0A4         	movff	??_startDigitalOutput,writeNVM@index
 30151   0056EE  C1D6  F0A5         	movff	??_startDigitalOutput+1,writeNVM@index+1
 30152   0056F2  0100               	movlb	0	; () banked
 30153   0056F4  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 30154   0056F6  C1D7  F0A7         	movff	_startDigitalOutput$808,writeNVM@value
 30155   0056FA  0E00               	movlw	0
 30156   0056FC  EC60  F05C         	call	_writeNVM
 30157   005700                     l20527:
 30158                           
 30159                           ;../digitalOut.c: 152:     pinState = actionState;
 30160   005700  C1DA  F1D9         	movff	startDigitalOutput@actionState,startDigitalOutput@pinState
 30161                           
 30162                           ;../digitalOut.c: 153:     if (getNV((16 + 7*(io) + 1)) & 0x20) {
 30163   005704  0101               	movlb	1	; () banked
 30164   005706  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 30165   005708  0D07               	mullw	7
 30166   00570A  50F3               	movf	243,w,c
 30167   00570C  0F11               	addlw	17
 30168   00570E  EC52  F05E         	call	_getNV
 30169   005712  0100               	movlb	0	; () banked
 30170   005714  AB8D               	btfss	?_getNV& (0+255),5,b
 30171   005716  D008               	goto	l20533
 30172                           
 30173                           ; BSR set to: 0
 30174                           ;../digitalOut.c: 154:         pinState = !pinState;
 30175   005718  0101               	movlb	1	; () banked
 30176   00571A  51D9               	movf	startDigitalOutput@pinState& (0+255),w,b
 30177   00571C  A4D8               	btfss	status,2,c
 30178   00571E  D002               	goto	u20820
 30179   005720  0E01               	movlw	1
 30180   005722  D001               	goto	u20830
 30181   005724                     u20820:
 30182   005724  0E00               	movlw	0
 30183   005726                     u20830:
 30184   005726  6FD9               	movwf	startDigitalOutput@pinState& (0+255),b
 30185   005728                     l20533:
 30186                           
 30187                           ;../digitalOut.c: 156:     setOutputPin(io, pinState);
 30188   005728  C1D9  F091         	movff	startDigitalOutput@pinState,setOutputPin@state
 30189   00572C  0101               	movlb	1	; () banked
 30190   00572E  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 30191   005730  ECAB  F036         	call	_setOutputPin
 30192                           
 30193                           ;../digitalOut.c: 161:     if (getNV((16 + 7*(io) + 1)) & 0x08) {
 30194   005734  0101               	movlb	1	; () banked
 30195   005736  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 30196   005738  0D07               	mullw	7
 30197   00573A  50F3               	movf	243,w,c
 30198   00573C  0F11               	addlw	17
 30199   00573E  EC52  F05E         	call	_getNV
 30200   005742  0100               	movlb	0	; () banked
 30201   005744  A78D               	btfss	?_getNV& (0+255),3,b
 30202   005746  D021               	goto	l20541
 30203                           
 30204                           ; BSR set to: 0
 30205                           ;../digitalOut.c: 162:         if (actionState) {
 30206   005748  0101               	movlb	1	; () banked
 30207   00574A  51DA               	movf	startDigitalOutput@actionState& (0+255),w,b
 30208   00574C  B4D8               	btfsc	status,2,c
 30209   00574E  0012               	return	
 30210                           
 30211                           ; BSR set to: 1
 30212                           ;../digitalOut.c: 165:             sendInvertedProducedEvent(((8 + 4*(io))+0), actionSta
      +                          te?EVENT_ON:EVENT_OFF,
 30213   005750  51DA               	movf	startDigitalOutput@actionState& (0+255),w,b
 30214   005752  B4D8               	btfsc	status,2,c
 30215   005754  D002               	goto	u20860
 30216   005756  0E01               	movlw	1
 30217   005758  D001               	goto	u20870
 30218   00575A                     u20860:
 30219   00575A  0E00               	movlw	0
 30220   00575C                     u20870:
 30221   00575C  6FCC               	movwf	sendInvertedProducedEvent@state& (0+255),b
 30222   00575E  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 30223   005760  0D07               	mullw	7
 30224   005762  50F3               	movf	243,w,c
 30225   005764  0F11               	addlw	17
 30226   005766  EC52  F05E         	call	_getNV
 30227   00576A  0100               	movlb	0	; () banked
 30228   00576C  518D               	movf	?_getNV& (0+255),w,b
 30229   00576E  0B40               	andlw	64
 30230   005770  0101               	movlb	1	; () banked
 30231   005772  6FCD               	movwf	sendInvertedProducedEvent@invert& (0+255),b
 30232   005774  0E01               	movlw	1
 30233   005776  6FCE               	movwf	sendInvertedProducedEvent@can_send_on& (0+255),b
 30234   005778  0E01               	movlw	1
 30235   00577A  6FCF               	movwf	sendInvertedProducedEvent@can_send_off& (0+255),b
 30236   00577C  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 30237   00577E  0D04               	mullw	4
 30238   005780  50F3               	movf	243,w,c
 30239   005782  0F08               	addlw	8
 30240   005784  ECF7  F05C         	call	_sendInvertedProducedEvent
 30241   005788  0012               	return	
 30242   00578A                     l20541:
 30243                           
 30244                           ; BSR set to: 0
 30245                           ;../digitalOut.c: 170:         sendInvertedProducedEvent(((8 + 4*(io))+0), actionState?E
      +                          VENT_ON:EVENT_OFF,
 30246   00578A  0101               	movlb	1	; () banked
 30247   00578C  51DA               	movf	startDigitalOutput@actionState& (0+255),w,b
 30248   00578E  B4D8               	btfsc	status,2,c
 30249   005790  D002               	goto	u20880
 30250   005792  0E01               	movlw	1
 30251   005794  D001               	goto	u20890
 30252   005796                     u20880:
 30253   005796  0E00               	movlw	0
 30254   005798                     u20890:
 30255   005798  6FCC               	movwf	sendInvertedProducedEvent@state& (0+255),b
 30256   00579A  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 30257   00579C  0D07               	mullw	7
 30258   00579E  50F3               	movf	243,w,c
 30259   0057A0  0F11               	addlw	17
 30260   0057A2  EC52  F05E         	call	_getNV
 30261   0057A6  0100               	movlb	0	; () banked
 30262   0057A8  518D               	movf	?_getNV& (0+255),w,b
 30263   0057AA  0B40               	andlw	64
 30264   0057AC  0101               	movlb	1	; () banked
 30265   0057AE  6FCD               	movwf	sendInvertedProducedEvent@invert& (0+255),b
 30266   0057B0  0E01               	movlw	1
 30267   0057B2  6FCE               	movwf	sendInvertedProducedEvent@can_send_on& (0+255),b
 30268   0057B4  0E01               	movlw	1
 30269   0057B6  6FCF               	movwf	sendInvertedProducedEvent@can_send_off& (0+255),b
 30270   0057B8  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 30271   0057BA  0D04               	mullw	4
 30272   0057BC  50F3               	movf	243,w,c
 30273   0057BE  0F08               	addlw	8
 30274   0057C0  ECF7  F05C         	call	_sendInvertedProducedEvent
 30275   0057C4  0012               	return		;funcret
 30276   0057C6                     __end_of_startDigitalOutput:
 30277                           	callstack 0
 30278                           
 30279 ;; *************** function _sendInvertedProducedEvent *****************
 30280 ;; Defined at:
 30281 ;;		line 362 in file "../universalEvents.c"
 30282 ;; Parameters:    Size  Location     Type
 30283 ;;  happening       1    wreg     unsigned char 
 30284 ;;  state           1   18[BANK1 ] enum E12781
 30285 ;;  invert          1   19[BANK1 ] enum E12761
 30286 ;;  can_send_on     1   20[BANK1 ] enum E12761
 30287 ;;  can_send_off    1   21[BANK1 ] enum E12761
 30288 ;; Auto vars:     Size  Location     Type
 30289 ;;  happening       1   22[BANK1 ] unsigned char 
 30290 ;;  state_to_sen    1   25[BANK1 ] enum E12781
 30291 ;; Return value:  Size  Location     Type
 30292 ;;                  1    wreg      enum E12760
 30293 ;; Registers used:
 30294 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30295 ;; Tracked objects:
 30296 ;;		On entry : 0/0
 30297 ;;		On exit  : 0/0
 30298 ;;		Unchanged: 0/0
 30299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30300 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30301 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30303 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30304 ;;Total ram usage:        8 bytes
 30305 ;; Hardware stack levels used: 1
 30306 ;; Hardware stack levels required when called: 18
 30307 ;; This function calls:
 30308 ;;		_sendProducedEvent
 30309 ;; This function is called by:
 30310 ;;		_startDigitalOutput
 30311 ;;		_sodTRCallback
 30312 ;; This function uses a non-reentrant model
 30313 ;;
 30314                           
 30315                           	psect	text110
 30316   00B9EE                     __ptext110:
 30317                           	callstack 0
 30318   00B9EE                     _sendInvertedProducedEvent:
 30319                           	callstack 9
 30320                           
 30321                           ;incstack = 0
 30322                           ;sendInvertedProducedEvent@happening stored from wreg
 30323   00B9EE  0101               	movlb	1	; () banked
 30324   00B9F0  6FD0               	movwf	sendInvertedProducedEvent@happening& (0+255),b
 30325                           
 30326                           ;../universalEvents.c: 363:  EventState state_to_send = invert?!state:state;
 30327   00B9F2  0101               	movlb	1	; () banked
 30328   00B9F4  51CD               	movf	sendInvertedProducedEvent@invert& (0+255),w,b
 30329   00B9F6  A4D8               	btfss	status,2,c
 30330   00B9F8  D003               	goto	l19985
 30331                           
 30332                           ; BSR set to: 1
 30333   00B9FA  C1CC  F1D1         	movff	sendInvertedProducedEvent@state,_sendInvertedProducedEvent$1404
 30334   00B9FE  D007               	goto	L12
 30335   00BA00                     l19985:
 30336                           
 30337                           ; BSR set to: 1
 30338   00BA00  51CC               	movf	sendInvertedProducedEvent@state& (0+255),w,b
 30339   00BA02  A4D8               	btfss	status,2,c
 30340   00BA04  D002               	goto	u19990
 30341   00BA06  0E01               	movlw	1
 30342   00BA08  D001               	goto	u20000
 30343   00BA0A                     u19990:
 30344   00BA0A  0E00               	movlw	0
 30345   00BA0C                     u20000:
 30346   00BA0C  6FD1               	movwf	_sendInvertedProducedEvent$1404& (0+255),b
 30347   00BA0E                     L12:
 30348   00BA0E  6BD2               	clrf	(_sendInvertedProducedEvent$1404+1)& (0+255),b
 30349                           
 30350                           ; BSR set to: 1
 30351   00BA10  C1D1  F1D3         	movff	_sendInvertedProducedEvent$1404,sendInvertedProducedEvent@state_to_send
 30352                           
 30353                           ;../universalEvents.c: 364:  if ((state_to_send && can_send_on) || (!state_to_send && ca
      +                          n_send_off)) {
 30354   00BA14  51D3               	movf	sendInvertedProducedEvent@state_to_send& (0+255),w,b
 30355   00BA16  B4D8               	btfsc	status,2,c
 30356   00BA18  D003               	goto	u20020
 30357                           
 30358                           ; BSR set to: 1
 30359   00BA1A  51CE               	movf	sendInvertedProducedEvent@can_send_on& (0+255),w,b
 30360   00BA1C  A4D8               	btfss	status,2,c
 30361   00BA1E  D006               	goto	u20040
 30362   00BA20                     u20020:
 30363                           
 30364                           ; BSR set to: 1
 30365   00BA20  51D3               	movf	sendInvertedProducedEvent@state_to_send& (0+255),w,b
 30366   00BA22  A4D8               	btfss	status,2,c
 30367   00BA24  0012               	return	
 30368                           
 30369                           ; BSR set to: 1
 30370   00BA26  51CF               	movf	sendInvertedProducedEvent@can_send_off& (0+255),w,b
 30371   00BA28  B4D8               	btfsc	status,2,c
 30372   00BA2A  0012               	return	
 30373   00BA2C                     u20040:
 30374                           
 30375                           ; BSR set to: 1
 30376                           ;../universalEvents.c: 365:   return sendProducedEvent(happening, state_to_send);;	Retur
      +                          n value of _sendInvertedProducedEvent is never used
 30377   00BA2C  C1D3  F0A7         	movff	sendInvertedProducedEvent@state_to_send,sendProducedEvent@onOff
 30378   00BA30  51D0               	movf	sendInvertedProducedEvent@happening& (0+255),w,b
 30379   00BA32  EC3B  F04B         	call	_sendProducedEvent
 30380   00BA36  0012               	return		;funcret
 30381   00BA38                     __end_of_sendInvertedProducedEvent:
 30382                           	callstack 0
 30383                           
 30384 ;; *************** function _startBounceOutput *****************
 30385 ;; Defined at:
 30386 ;;		line 566 in file "../servo.c"
 30387 ;; Parameters:    Size  Location     Type
 30388 ;;  io              1    wreg     unsigned char 
 30389 ;;  action          1   45[BANK0 ] unsigned char 
 30390 ;; Auto vars:     Size  Location     Type
 30391 ;;  io              1   46[BANK0 ] unsigned char 
 30392 ;; Return value:  Size  Location     Type
 30393 ;;                  1    wreg      void 
 30394 ;; Registers used:
 30395 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30396 ;; Tracked objects:
 30397 ;;		On entry : 0/0
 30398 ;;		On exit  : 0/0
 30399 ;;		Unchanged: 0/0
 30400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30401 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30402 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30404 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30405 ;;Total ram usage:        2 bytes
 30406 ;; Hardware stack levels used: 1
 30407 ;; Hardware stack levels required when called: 12
 30408 ;; This function calls:
 30409 ;;		Nothing
 30410 ;; This function is called by:
 30411 ;;		_APP_nvValueChanged
 30412 ;;		_startOutput
 30413 ;; This function uses a non-reentrant model
 30414 ;;
 30415                           
 30416                           	psect	text111
 30417   00B152                     __ptext111:
 30418                           	callstack 0
 30419   00B152                     _startBounceOutput:
 30420                           	callstack 14
 30421                           
 30422                           ;incstack = 0
 30423                           ;startBounceOutput@io stored from wreg
 30424   00B152  0100               	movlb	0	; () banked
 30425   00B154  6F8E               	movwf	startBounceOutput@io& (0+255),b
 30426                           
 30427                           ;../servo.c: 567:     switch (action) {
 30428   00B156  D018               	goto	l20145
 30429   00B158                     l20139:
 30430                           
 30431                           ; BSR set to: 0
 30432                           ;../servo.c: 569:             speed[io] = 0;
 30433   00B158  518E               	movf	startBounceOutput@io& (0+255),w,b
 30434   00B15A  0D02               	mullw	2
 30435   00B15C  0E00               	movlw	low _speed
 30436   00B15E  24F3               	addwf	243,w,c
 30437   00B160  6ED9               	movwf	fsr2l,c
 30438   00B162  0E02               	movlw	high _speed
 30439   00B164  20F4               	addwfc	prodh,w,c
 30440   00B166  6EDA               	movwf	fsr2h,c
 30441   00B168  6ADE               	clrf	postinc2,c
 30442   00B16A  6ADD               	clrf	postdec2,c
 30443                           
 30444                           ;../servo.c: 570:             break;
 30445   00B16C  D015               	goto	l20147
 30446   00B16E                     l20141:
 30447                           
 30448                           ; BSR set to: 0
 30449                           ;../servo.c: 572:             speed[io] = 12;
 30450   00B16E  518E               	movf	startBounceOutput@io& (0+255),w,b
 30451   00B170  0D02               	mullw	2
 30452   00B172  0E00               	movlw	low _speed
 30453   00B174  24F3               	addwf	243,w,c
 30454   00B176  6ED9               	movwf	fsr2l,c
 30455   00B178  0E02               	movlw	high _speed
 30456   00B17A  20F4               	addwfc	prodh,w,c
 30457   00B17C  6EDA               	movwf	fsr2h,c
 30458   00B17E  0E0C               	movlw	12
 30459   00B180  6EDE               	movwf	postinc2,c
 30460   00B182  0E00               	movlw	0
 30461   00B184  6EDD               	movwf	postdec2,c
 30462                           
 30463                           ;../servo.c: 573:             break;
 30464   00B186  D008               	goto	l20147
 30465   00B188                     l20145:
 30466   00B188  0100               	movlb	0	; () banked
 30467   00B18A  518D               	movf	startBounceOutput@action& (0+255),w,b
 30468                           
 30469                           ; Switch size 1, requested type "simple"
 30470                           ; Number of cases is 2, Range of values is 1 to 2
 30471                           ; switch strategies available:
 30472                           ; Name         Instructions Cycles
 30473                           ; simple_byte            7     4 (average)
 30474                           ;	Chosen strategy is simple_byte
 30475   00B18C  0A01               	xorlw	1	; case 1
 30476   00B18E  B4D8               	btfsc	status,2,c
 30477   00B190  D7EE               	goto	l20141
 30478   00B192  0A03               	xorlw	3	; case 2
 30479   00B194  B4D8               	btfsc	status,2,c
 30480   00B196  D7E0               	goto	l20139
 30481   00B198                     l20147:
 30482                           
 30483                           ; BSR set to: 0
 30484                           ;../servo.c: 575:     servoState[io] = SS_STARTING;
 30485   00B198  0E10               	movlw	low _servoState
 30486   00B19A  258E               	addwf	startBounceOutput@io& (0+255),w,b
 30487   00B19C  6ED9               	movwf	fsr2l,c
 30488   00B19E  6ADA               	clrf	fsr2h,c
 30489   00B1A0  0E01               	movlw	high _servoState
 30490   00B1A2  22DA               	addwfc	fsr2h,f,c
 30491   00B1A4  0E03               	movlw	3
 30492   00B1A6  6EDF               	movwf	indf2,c
 30493                           
 30494                           ;../servo.c: 576:     loopCount[io] = 0;
 30495   00B1A8  0E54               	movlw	low _loopCount
 30496   00B1AA  258E               	addwf	startBounceOutput@io& (0+255),w,b
 30497   00B1AC  6ED9               	movwf	fsr2l,c
 30498   00B1AE  6ADA               	clrf	fsr2h,c
 30499   00B1B0  0E02               	movlw	high _loopCount
 30500   00B1B2  22DA               	addwfc	fsr2h,f,c
 30501   00B1B4  6ADF               	clrf	indf2,c
 30502                           
 30503                           ; BSR set to: 0
 30504   00B1B6  0012               	return		;funcret
 30505   00B1B8                     __end_of_startBounceOutput:
 30506                           	callstack 0
 30507                           
 30508 ;; *************** function _setOutputState *****************
 30509 ;; Defined at:
 30510 ;;		line 110 in file "../outputs.c"
 30511 ;; Parameters:    Size  Location     Type
 30512 ;;  io              1    wreg     unsigned char 
 30513 ;;  act             1   51[BANK0 ] unsigned char 
 30514 ;;  type            1   52[BANK0 ] unsigned char 
 30515 ;; Auto vars:     Size  Location     Type
 30516 ;;  io              1   53[BANK0 ] unsigned char 
 30517 ;; Return value:  Size  Location     Type
 30518 ;;                  1    wreg      void 
 30519 ;; Registers used:
 30520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30521 ;; Tracked objects:
 30522 ;;		On entry : 0/0
 30523 ;;		On exit  : 0/0
 30524 ;;		Unchanged: 0/0
 30525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30526 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30527 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30529 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30530 ;;Total ram usage:        3 bytes
 30531 ;; Hardware stack levels used: 1
 30532 ;; Hardware stack levels required when called: 14
 30533 ;; This function calls:
 30534 ;;		_setBounceState
 30535 ;;		_setMultiState
 30536 ;;		_setServoState
 30537 ;; This function is called by:
 30538 ;;		_processActions
 30539 ;; This function uses a non-reentrant model
 30540 ;;
 30541                           
 30542                           	psect	text112
 30543   00B6D0                     __ptext112:
 30544                           	callstack 0
 30545   00B6D0                     _setOutputState:
 30546                           	callstack 14
 30547                           
 30548                           ; BSR set to: 0
 30549                           ;incstack = 0
 30550                           ;setOutputState@io stored from wreg
 30551   00B6D0  0100               	movlb	0	; () banked
 30552   00B6D2  6F95               	movwf	setOutputState@io& (0+255),b
 30553                           
 30554                           ;../outputs.c: 111:     switch(type) {
 30555   00B6D4  D012               	goto	l21475
 30556   00B6D6                     l21461:
 30557                           
 30558                           ; BSR set to: 0
 30559                           ;../outputs.c: 124:             setBounceState(io, act);
 30560   00B6D6  C093  F091         	movff	setOutputState@act,setBounceState@action
 30561   00B6DA  5195               	movf	setOutputState@io& (0+255),w,b
 30562   00B6DC  ECDD  F04A         	call	_setBounceState
 30563   00B6E0  0012               	return	
 30564   00B6E2                     l21465:
 30565                           
 30566                           ; BSR set to: 0
 30567                           ;../outputs.c: 129:             setServoState(io, act);
 30568   00B6E2  C093  F091         	movff	setOutputState@act,setServoState@action
 30569   00B6E6  5195               	movf	setOutputState@io& (0+255),w,b
 30570   00B6E8  EC7F  F04A         	call	_setServoState
 30571   00B6EC  0012               	return	
 30572   00B6EE                     l21469:
 30573                           
 30574                           ; BSR set to: 0
 30575                           ;../outputs.c: 134:             setMultiState(io, act);
 30576   00B6EE  C093  F091         	movff	setOutputState@act,setMultiState@action
 30577   00B6F2  5195               	movf	setOutputState@io& (0+255),w,b
 30578   00B6F4  EC08  F044         	call	_setMultiState
 30579   00B6F8  0012               	return	
 30580   00B6FA                     l21475:
 30581   00B6FA  0100               	movlb	0	; () banked
 30582   00B6FC  5194               	movf	setOutputState@type& (0+255),w,b
 30583                           
 30584                           ; Switch size 1, requested type "simple"
 30585                           ; Number of cases is 7, Range of values is 0 to 6
 30586                           ; switch strategies available:
 30587                           ; Name         Instructions Cycles
 30588                           ; simple_byte           22    12 (average)
 30589                           ;	Chosen strategy is simple_byte
 30590   00B6FE  0A00               	xorlw	0	; case 0
 30591   00B700  B4D8               	btfsc	status,2,c
 30592   00B702  0012               	return	
 30593   00B704  0A01               	xorlw	1	; case 1
 30594   00B706  B4D8               	btfsc	status,2,c
 30595   00B708  0012               	return	
 30596   00B70A  0A03               	xorlw	3	; case 2
 30597   00B70C  B4D8               	btfsc	status,2,c
 30598   00B70E  D7E9               	goto	l21465
 30599   00B710  0A01               	xorlw	1	; case 3
 30600   00B712  B4D8               	btfsc	status,2,c
 30601   00B714  D7E0               	goto	l21461
 30602   00B716  0A07               	xorlw	7	; case 4
 30603   00B718  B4D8               	btfsc	status,2,c
 30604   00B71A  D7E9               	goto	l21469
 30605   00B71C  0A01               	xorlw	1	; case 5
 30606   00B71E  B4D8               	btfsc	status,2,c
 30607   00B720  0012               	return	
 30608   00B722  0A03               	xorlw	3	; case 6
 30609   00B724  0012               	return	
 30610   00B726                     __end_of_setOutputState:
 30611                           	callstack 0
 30612                           
 30613 ;; *************** function _setServoState *****************
 30614 ;; Defined at:
 30615 ;;		line 606 in file "../servo.c"
 30616 ;; Parameters:    Size  Location     Type
 30617 ;;  io              1    wreg     unsigned char 
 30618 ;;  action          1   49[BANK0 ] unsigned char 
 30619 ;; Auto vars:     Size  Location     Type
 30620 ;;  io              1   50[BANK0 ] unsigned char 
 30621 ;; Return value:  Size  Location     Type
 30622 ;;                  1    wreg      void 
 30623 ;; Registers used:
 30624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30625 ;; Tracked objects:
 30626 ;;		On entry : 0/0
 30627 ;;		On exit  : 0/0
 30628 ;;		Unchanged: 0/0
 30629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30630 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30631 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30633 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30634 ;;Total ram usage:        2 bytes
 30635 ;; Hardware stack levels used: 1
 30636 ;; Hardware stack levels required when called: 13
 30637 ;; This function calls:
 30638 ;;		_getNV
 30639 ;; This function is called by:
 30640 ;;		_APP_nvValueChanged
 30641 ;;		_setOutputState
 30642 ;; This function uses a non-reentrant model
 30643 ;;
 30644                           
 30645                           	psect	text113
 30646   0094FE                     __ptext113:
 30647                           	callstack 0
 30648   0094FE                     _setServoState:
 30649                           	callstack 13
 30650                           
 30651                           ;incstack = 0
 30652                           ;setServoState@io stored from wreg
 30653   0094FE  0100               	movlb	0	; () banked
 30654   009500  6F92               	movwf	setServoState@io& (0+255),b
 30655                           
 30656                           ;../servo.c: 607:     switch (action) {
 30657   009502  D052               	goto	l20093
 30658   009504                     l20079:
 30659                           
 30660                           ; BSR set to: 0
 30661                           ;../servo.c: 609:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 30662   009504  5192               	movf	setServoState@io& (0+255),w,b
 30663   009506  0D07               	mullw	7
 30664   009508  50F3               	movf	243,w,c
 30665   00950A  0F11               	addlw	17
 30666   00950C  EC52  F05E         	call	_getNV
 30667   009510  0100               	movlb	0	; () banked
 30668   009512  A18D               	btfss	?_getNV& (0+255),0,b
 30669   009514  D010               	goto	l20083
 30670                           
 30671                           ; BSR set to: 0
 30672                           ;../servo.c: 610:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 30673   009516  5192               	movf	setServoState@io& (0+255),w,b
 30674   009518  0D07               	mullw	7
 30675   00951A  50F3               	movf	243,w,c
 30676   00951C  0F13               	addlw	19
 30677   00951E  EC52  F05E         	call	_getNV
 30678   009522  0E20               	movlw	low _targetPos
 30679   009524  0100               	movlb	0	; () banked
 30680   009526  2592               	addwf	setServoState@io& (0+255),w,b
 30681   009528  6ED9               	movwf	fsr2l,c
 30682   00952A  6ADA               	clrf	fsr2h,c
 30683   00952C  0E01               	movlw	high _targetPos
 30684   00952E  22DA               	addwfc	fsr2h,f,c
 30685   009530  C08D  FFDF         	movff	?_getNV,indf2
 30686                           
 30687                           ;../servo.c: 611:             } else {
 30688   009534  0012               	return	
 30689   009536                     l20083:
 30690                           
 30691                           ; BSR set to: 0
 30692                           ;../servo.c: 612:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 30693   009536  5192               	movf	setServoState@io& (0+255),w,b
 30694   009538  0D07               	mullw	7
 30695   00953A  50F3               	movf	243,w,c
 30696   00953C  0F12               	addlw	18
 30697   00953E  EC52  F05E         	call	_getNV
 30698   009542  0E20               	movlw	low _targetPos
 30699   009544  0100               	movlb	0	; () banked
 30700   009546  2592               	addwf	setServoState@io& (0+255),w,b
 30701   009548  6ED9               	movwf	fsr2l,c
 30702   00954A  6ADA               	clrf	fsr2h,c
 30703   00954C  0E01               	movlw	high _targetPos
 30704   00954E  22DA               	addwfc	fsr2h,f,c
 30705   009550  C08D  FFDF         	movff	?_getNV,indf2
 30706   009554  0012               	return	
 30707   009556                     l20085:
 30708                           
 30709                           ; BSR set to: 0
 30710                           ;../servo.c: 616:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 30711   009556  5192               	movf	setServoState@io& (0+255),w,b
 30712   009558  0D07               	mullw	7
 30713   00955A  50F3               	movf	243,w,c
 30714   00955C  0F11               	addlw	17
 30715   00955E  EC52  F05E         	call	_getNV
 30716   009562  0100               	movlb	0	; () banked
 30717   009564  A18D               	btfss	?_getNV& (0+255),0,b
 30718   009566  D010               	goto	l20089
 30719                           
 30720                           ; BSR set to: 0
 30721                           ;../servo.c: 617:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 30722   009568  5192               	movf	setServoState@io& (0+255),w,b
 30723   00956A  0D07               	mullw	7
 30724   00956C  50F3               	movf	243,w,c
 30725   00956E  0F12               	addlw	18
 30726   009570  EC52  F05E         	call	_getNV
 30727   009574  0E20               	movlw	low _targetPos
 30728   009576  0100               	movlb	0	; () banked
 30729   009578  2592               	addwf	setServoState@io& (0+255),w,b
 30730   00957A  6ED9               	movwf	fsr2l,c
 30731   00957C  6ADA               	clrf	fsr2h,c
 30732   00957E  0E01               	movlw	high _targetPos
 30733   009580  22DA               	addwfc	fsr2h,f,c
 30734   009582  C08D  FFDF         	movff	?_getNV,indf2
 30735                           
 30736                           ;../servo.c: 618:             } else {
 30737   009586  0012               	return	
 30738   009588                     l20089:
 30739                           
 30740                           ; BSR set to: 0
 30741                           ;../servo.c: 619:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 30742   009588  5192               	movf	setServoState@io& (0+255),w,b
 30743   00958A  0D07               	mullw	7
 30744   00958C  50F3               	movf	243,w,c
 30745   00958E  0F13               	addlw	19
 30746   009590  EC52  F05E         	call	_getNV
 30747   009594  0E20               	movlw	low _targetPos
 30748   009596  0100               	movlb	0	; () banked
 30749   009598  2592               	addwf	setServoState@io& (0+255),w,b
 30750   00959A  6ED9               	movwf	fsr2l,c
 30751   00959C  6ADA               	clrf	fsr2h,c
 30752   00959E  0E01               	movlw	high _targetPos
 30753   0095A0  22DA               	addwfc	fsr2h,f,c
 30754   0095A2  C08D  FFDF         	movff	?_getNV,indf2
 30755   0095A6  0012               	return	
 30756   0095A8                     l20093:
 30757   0095A8  0100               	movlb	0	; () banked
 30758   0095AA  5191               	movf	setServoState@action& (0+255),w,b
 30759                           
 30760                           ; Switch size 1, requested type "simple"
 30761                           ; Number of cases is 2, Range of values is 1 to 2
 30762                           ; switch strategies available:
 30763                           ; Name         Instructions Cycles
 30764                           ; simple_byte            7     4 (average)
 30765                           ;	Chosen strategy is simple_byte
 30766   0095AC  0A01               	xorlw	1	; case 1
 30767   0095AE  B4D8               	btfsc	status,2,c
 30768   0095B0  D7D2               	goto	l20085
 30769   0095B2  0A03               	xorlw	3	; case 2
 30770   0095B4  A4D8               	btfss	status,2,c
 30771   0095B6  0012               	return	
 30772   0095B8  D7A5               	goto	l20079
 30773   0095BA                     __end_of_setServoState:
 30774                           	callstack 0
 30775                           
 30776 ;; *************** function _setMultiState *****************
 30777 ;; Defined at:
 30778 ;;		line 657 in file "../servo.c"
 30779 ;; Parameters:    Size  Location     Type
 30780 ;;  io              1    wreg     unsigned char 
 30781 ;;  action          1   49[BANK0 ] unsigned char 
 30782 ;; Auto vars:     Size  Location     Type
 30783 ;;  io              1   50[BANK0 ] unsigned char 
 30784 ;; Return value:  Size  Location     Type
 30785 ;;                  1    wreg      void 
 30786 ;; Registers used:
 30787 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30788 ;; Tracked objects:
 30789 ;;		On entry : 0/0
 30790 ;;		On exit  : 0/0
 30791 ;;		Unchanged: 0/0
 30792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30793 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30794 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30796 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30797 ;;Total ram usage:        2 bytes
 30798 ;; Hardware stack levels used: 1
 30799 ;; Hardware stack levels required when called: 13
 30800 ;; This function calls:
 30801 ;;		_getNV
 30802 ;; This function is called by:
 30803 ;;		_APP_nvValueChanged
 30804 ;;		_setOutputState
 30805 ;; This function uses a non-reentrant model
 30806 ;;
 30807                           
 30808                           	psect	text114
 30809   008810                     __ptext114:
 30810                           	callstack 0
 30811   008810                     _setMultiState:
 30812                           	callstack 13
 30813                           
 30814                           ; BSR set to: 0
 30815                           ;incstack = 0
 30816                           ;setMultiState@io stored from wreg
 30817   008810  0100               	movlb	0	; () banked
 30818   008812  6F92               	movwf	setMultiState@io& (0+255),b
 30819                           
 30820                           ;../servo.c: 658:     switch (action) {
 30821   008814  D05E               	goto	l20165
 30822   008816                     l20151:
 30823                           
 30824                           ; BSR set to: 0
 30825                           ;../servo.c: 660:             targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 30826   008816  5192               	movf	setMultiState@io& (0+255),w,b
 30827   008818  0D07               	mullw	7
 30828   00881A  50F3               	movf	243,w,c
 30829   00881C  0F13               	addlw	19
 30830   00881E  EC52  F05E         	call	_getNV
 30831   008822  0E20               	movlw	low _targetPos
 30832   008824  0100               	movlb	0	; () banked
 30833   008826  2592               	addwf	setMultiState@io& (0+255),w,b
 30834   008828  6ED9               	movwf	fsr2l,c
 30835   00882A  6ADA               	clrf	fsr2h,c
 30836   00882C  0E01               	movlw	high _targetPos
 30837   00882E  22DA               	addwfc	fsr2h,f,c
 30838   008830  C08D  FFDF         	movff	?_getNV,indf2
 30839                           
 30840                           ;../servo.c: 661:             break;
 30841   008834  0012               	return	
 30842   008836                     l20153:
 30843                           
 30844                           ; BSR set to: 0
 30845                           ;../servo.c: 663:             targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 4));
 30846   008836  5192               	movf	setMultiState@io& (0+255),w,b
 30847   008838  0D07               	mullw	7
 30848   00883A  50F3               	movf	243,w,c
 30849   00883C  0F14               	addlw	20
 30850   00883E  EC52  F05E         	call	_getNV
 30851   008842  0E20               	movlw	low _targetPos
 30852   008844  0100               	movlb	0	; () banked
 30853   008846  2592               	addwf	setMultiState@io& (0+255),w,b
 30854   008848  6ED9               	movwf	fsr2l,c
 30855   00884A  6ADA               	clrf	fsr2h,c
 30856   00884C  0E01               	movlw	high _targetPos
 30857   00884E  22DA               	addwfc	fsr2h,f,c
 30858   008850  C08D  FFDF         	movff	?_getNV,indf2
 30859                           
 30860                           ;../servo.c: 664:             break;
 30861   008854  0012               	return	
 30862   008856                     l20155:
 30863                           
 30864                           ; BSR set to: 0
 30865                           ;../servo.c: 666:             if (getNV((16 + 7*(io) + 2)) >= 3) {
 30866   008856  5192               	movf	setMultiState@io& (0+255),w,b
 30867   008858  0D07               	mullw	7
 30868   00885A  50F3               	movf	243,w,c
 30869   00885C  0F12               	addlw	18
 30870   00885E  EC52  F05E         	call	_getNV
 30871   008862  0100               	movlb	0	; () banked
 30872   008864  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 30873   008866  0012               	return	
 30874   008868  518E               	movf	(?_getNV+1)& (0+255),w,b
 30875   00886A  E104               	bnz	u20150
 30876   00886C  0E03               	movlw	3
 30877   00886E  5D8D               	subwf	?_getNV& (0+255),w,b
 30878   008870  A0D8               	btfss	status,0,c
 30879   008872  0012               	return	
 30880   008874                     u20150:
 30881                           
 30882                           ; BSR set to: 0
 30883                           ;../servo.c: 667:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 5));
 30884   008874  5192               	movf	setMultiState@io& (0+255),w,b
 30885   008876  0D07               	mullw	7
 30886   008878  50F3               	movf	243,w,c
 30887   00887A  0F15               	addlw	21
 30888   00887C  EC52  F05E         	call	_getNV
 30889   008880  0E20               	movlw	low _targetPos
 30890   008882  0100               	movlb	0	; () banked
 30891   008884  2592               	addwf	setMultiState@io& (0+255),w,b
 30892   008886  6ED9               	movwf	fsr2l,c
 30893   008888  6ADA               	clrf	fsr2h,c
 30894   00888A  0E01               	movlw	high _targetPos
 30895   00888C  22DA               	addwfc	fsr2h,f,c
 30896   00888E  C08D  FFDF         	movff	?_getNV,indf2
 30897   008892  0012               	return	
 30898   008894                     l20159:
 30899                           
 30900                           ; BSR set to: 0
 30901                           ;../servo.c: 671:             if (getNV((16 + 7*(io) + 2)) >= 4) {
 30902   008894  5192               	movf	setMultiState@io& (0+255),w,b
 30903   008896  0D07               	mullw	7
 30904   008898  50F3               	movf	243,w,c
 30905   00889A  0F12               	addlw	18
 30906   00889C  EC52  F05E         	call	_getNV
 30907   0088A0  0100               	movlb	0	; () banked
 30908   0088A2  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 30909   0088A4  0012               	return	
 30910   0088A6  518E               	movf	(?_getNV+1)& (0+255),w,b
 30911   0088A8  E104               	bnz	u20160
 30912   0088AA  0E04               	movlw	4
 30913   0088AC  5D8D               	subwf	?_getNV& (0+255),w,b
 30914   0088AE  A0D8               	btfss	status,0,c
 30915   0088B0  0012               	return	
 30916   0088B2                     u20160:
 30917                           
 30918                           ; BSR set to: 0
 30919                           ;../servo.c: 672:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 6));
 30920   0088B2  5192               	movf	setMultiState@io& (0+255),w,b
 30921   0088B4  0D07               	mullw	7
 30922   0088B6  50F3               	movf	243,w,c
 30923   0088B8  0F16               	addlw	22
 30924   0088BA  EC52  F05E         	call	_getNV
 30925   0088BE  0E20               	movlw	low _targetPos
 30926   0088C0  0100               	movlb	0	; () banked
 30927   0088C2  2592               	addwf	setMultiState@io& (0+255),w,b
 30928   0088C4  6ED9               	movwf	fsr2l,c
 30929   0088C6  6ADA               	clrf	fsr2h,c
 30930   0088C8  0E01               	movlw	high _targetPos
 30931   0088CA  22DA               	addwfc	fsr2h,f,c
 30932   0088CC  C08D  FFDF         	movff	?_getNV,indf2
 30933   0088D0  0012               	return	
 30934   0088D2                     l20165:
 30935   0088D2  0100               	movlb	0	; () banked
 30936   0088D4  5191               	movf	setMultiState@action& (0+255),w,b
 30937                           
 30938                           ; Switch size 1, requested type "simple"
 30939                           ; Number of cases is 4, Range of values is 0 to 3
 30940                           ; switch strategies available:
 30941                           ; Name         Instructions Cycles
 30942                           ; simple_byte           13     7 (average)
 30943                           ;	Chosen strategy is simple_byte
 30944   0088D6  0A00               	xorlw	0	; case 0
 30945   0088D8  B4D8               	btfsc	status,2,c
 30946   0088DA  D79D               	goto	l20151
 30947   0088DC  0A01               	xorlw	1	; case 1
 30948   0088DE  B4D8               	btfsc	status,2,c
 30949   0088E0  D7AA               	goto	l20153
 30950   0088E2  0A03               	xorlw	3	; case 2
 30951   0088E4  B4D8               	btfsc	status,2,c
 30952   0088E6  D7B7               	goto	l20155
 30953   0088E8  0A01               	xorlw	1	; case 3
 30954   0088EA  A4D8               	btfss	status,2,c
 30955   0088EC  0012               	return	
 30956   0088EE  D7D2               	goto	l20159
 30957   0088F0                     __end_of_setMultiState:
 30958                           	callstack 0
 30959                           
 30960 ;; *************** function _setBounceState *****************
 30961 ;; Defined at:
 30962 ;;		line 633 in file "../servo.c"
 30963 ;; Parameters:    Size  Location     Type
 30964 ;;  io              1    wreg     unsigned char 
 30965 ;;  action          1   49[BANK0 ] unsigned char 
 30966 ;; Auto vars:     Size  Location     Type
 30967 ;;  io              1   50[BANK0 ] unsigned char 
 30968 ;; Return value:  Size  Location     Type
 30969 ;;                  1    wreg      void 
 30970 ;; Registers used:
 30971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30972 ;; Tracked objects:
 30973 ;;		On entry : 0/0
 30974 ;;		On exit  : 0/0
 30975 ;;		Unchanged: 0/0
 30976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30977 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30978 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30980 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30981 ;;Total ram usage:        2 bytes
 30982 ;; Hardware stack levels used: 1
 30983 ;; Hardware stack levels required when called: 13
 30984 ;; This function calls:
 30985 ;;		_getNV
 30986 ;; This function is called by:
 30987 ;;		_APP_nvValueChanged
 30988 ;;		_setOutputState
 30989 ;; This function uses a non-reentrant model
 30990 ;;
 30991                           
 30992                           	psect	text115
 30993   0095BA                     __ptext115:
 30994                           	callstack 0
 30995   0095BA                     _setBounceState:
 30996                           	callstack 13
 30997                           
 30998                           ; BSR set to: 0
 30999                           ;incstack = 0
 31000                           ;setBounceState@io stored from wreg
 31001   0095BA  0100               	movlb	0	; () banked
 31002   0095BC  6F92               	movwf	setBounceState@io& (0+255),b
 31003                           
 31004                           ;../servo.c: 634:     switch (action) {
 31005   0095BE  D052               	goto	l20135
 31006   0095C0                     l20121:
 31007                           
 31008                           ; BSR set to: 0
 31009                           ;../servo.c: 636:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 31010   0095C0  5192               	movf	setBounceState@io& (0+255),w,b
 31011   0095C2  0D07               	mullw	7
 31012   0095C4  50F3               	movf	243,w,c
 31013   0095C6  0F11               	addlw	17
 31014   0095C8  EC52  F05E         	call	_getNV
 31015   0095CC  0100               	movlb	0	; () banked
 31016   0095CE  A18D               	btfss	?_getNV& (0+255),0,b
 31017   0095D0  D010               	goto	l20125
 31018                           
 31019                           ; BSR set to: 0
 31020                           ;../servo.c: 637:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 31021   0095D2  5192               	movf	setBounceState@io& (0+255),w,b
 31022   0095D4  0D07               	mullw	7
 31023   0095D6  50F3               	movf	243,w,c
 31024   0095D8  0F12               	addlw	18
 31025   0095DA  EC52  F05E         	call	_getNV
 31026   0095DE  0E20               	movlw	low _targetPos
 31027   0095E0  0100               	movlb	0	; () banked
 31028   0095E2  2592               	addwf	setBounceState@io& (0+255),w,b
 31029   0095E4  6ED9               	movwf	fsr2l,c
 31030   0095E6  6ADA               	clrf	fsr2h,c
 31031   0095E8  0E01               	movlw	high _targetPos
 31032   0095EA  22DA               	addwfc	fsr2h,f,c
 31033   0095EC  C08D  FFDF         	movff	?_getNV,indf2
 31034                           
 31035                           ;../servo.c: 638:             } else {
 31036   0095F0  0012               	return	
 31037   0095F2                     l20125:
 31038                           
 31039                           ; BSR set to: 0
 31040                           ;../servo.c: 639:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 31041   0095F2  5192               	movf	setBounceState@io& (0+255),w,b
 31042   0095F4  0D07               	mullw	7
 31043   0095F6  50F3               	movf	243,w,c
 31044   0095F8  0F13               	addlw	19
 31045   0095FA  EC52  F05E         	call	_getNV
 31046   0095FE  0E20               	movlw	low _targetPos
 31047   009600  0100               	movlb	0	; () banked
 31048   009602  2592               	addwf	setBounceState@io& (0+255),w,b
 31049   009604  6ED9               	movwf	fsr2l,c
 31050   009606  6ADA               	clrf	fsr2h,c
 31051   009608  0E01               	movlw	high _targetPos
 31052   00960A  22DA               	addwfc	fsr2h,f,c
 31053   00960C  C08D  FFDF         	movff	?_getNV,indf2
 31054   009610  0012               	return	
 31055   009612                     l20127:
 31056                           
 31057                           ; BSR set to: 0
 31058                           ;../servo.c: 643:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 31059   009612  5192               	movf	setBounceState@io& (0+255),w,b
 31060   009614  0D07               	mullw	7
 31061   009616  50F3               	movf	243,w,c
 31062   009618  0F11               	addlw	17
 31063   00961A  EC52  F05E         	call	_getNV
 31064   00961E  0100               	movlb	0	; () banked
 31065   009620  A18D               	btfss	?_getNV& (0+255),0,b
 31066   009622  D010               	goto	l20131
 31067                           
 31068                           ; BSR set to: 0
 31069                           ;../servo.c: 644:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 31070   009624  5192               	movf	setBounceState@io& (0+255),w,b
 31071   009626  0D07               	mullw	7
 31072   009628  50F3               	movf	243,w,c
 31073   00962A  0F13               	addlw	19
 31074   00962C  EC52  F05E         	call	_getNV
 31075   009630  0E20               	movlw	low _targetPos
 31076   009632  0100               	movlb	0	; () banked
 31077   009634  2592               	addwf	setBounceState@io& (0+255),w,b
 31078   009636  6ED9               	movwf	fsr2l,c
 31079   009638  6ADA               	clrf	fsr2h,c
 31080   00963A  0E01               	movlw	high _targetPos
 31081   00963C  22DA               	addwfc	fsr2h,f,c
 31082   00963E  C08D  FFDF         	movff	?_getNV,indf2
 31083                           
 31084                           ;../servo.c: 645:             } else {
 31085   009642  0012               	return	
 31086   009644                     l20131:
 31087                           
 31088                           ; BSR set to: 0
 31089                           ;../servo.c: 646:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 31090   009644  5192               	movf	setBounceState@io& (0+255),w,b
 31091   009646  0D07               	mullw	7
 31092   009648  50F3               	movf	243,w,c
 31093   00964A  0F12               	addlw	18
 31094   00964C  EC52  F05E         	call	_getNV
 31095   009650  0E20               	movlw	low _targetPos
 31096   009652  0100               	movlb	0	; () banked
 31097   009654  2592               	addwf	setBounceState@io& (0+255),w,b
 31098   009656  6ED9               	movwf	fsr2l,c
 31099   009658  6ADA               	clrf	fsr2h,c
 31100   00965A  0E01               	movlw	high _targetPos
 31101   00965C  22DA               	addwfc	fsr2h,f,c
 31102   00965E  C08D  FFDF         	movff	?_getNV,indf2
 31103   009662  0012               	return	
 31104   009664                     l20135:
 31105   009664  0100               	movlb	0	; () banked
 31106   009666  5191               	movf	setBounceState@action& (0+255),w,b
 31107                           
 31108                           ; Switch size 1, requested type "simple"
 31109                           ; Number of cases is 2, Range of values is 1 to 2
 31110                           ; switch strategies available:
 31111                           ; Name         Instructions Cycles
 31112                           ; simple_byte            7     4 (average)
 31113                           ;	Chosen strategy is simple_byte
 31114   009668  0A01               	xorlw	1	; case 1
 31115   00966A  B4D8               	btfsc	status,2,c
 31116   00966C  D7D2               	goto	l20127
 31117   00966E  0A03               	xorlw	3	; case 2
 31118   009670  A4D8               	btfss	status,2,c
 31119   009672  0012               	return	
 31120   009674  D7A5               	goto	l20121
 31121   009676                     __end_of_setBounceState:
 31122                           	callstack 0
 31123                           
 31124 ;; *************** function _needsStarting *****************
 31125 ;; Defined at:
 31126 ;;		line 182 in file "../outputs.c"
 31127 ;; Parameters:    Size  Location     Type
 31128 ;;  io              1    wreg     unsigned char 
 31129 ;;  act             1   45[BANK0 ] unsigned char 
 31130 ;;  type            1   46[BANK0 ] unsigned char 
 31131 ;; Auto vars:     Size  Location     Type
 31132 ;;  io              1   49[BANK0 ] unsigned char 
 31133 ;; Return value:  Size  Location     Type
 31134 ;;                  1    wreg      enum E12761
 31135 ;; Registers used:
 31136 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 31137 ;; Tracked objects:
 31138 ;;		On entry : 0/0
 31139 ;;		On exit  : 0/0
 31140 ;;		Unchanged: 0/0
 31141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31142 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31143 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31144 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31145 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31146 ;;Total ram usage:        5 bytes
 31147 ;; Hardware stack levels used: 1
 31148 ;; Hardware stack levels required when called: 12
 31149 ;; This function calls:
 31150 ;;		Nothing
 31151 ;; This function is called by:
 31152 ;;		_processActions
 31153 ;; This function uses a non-reentrant model
 31154 ;;
 31155                           
 31156                           	psect	text116
 31157   00A7C8                     __ptext116:
 31158                           	callstack 0
 31159   00A7C8                     _needsStarting:
 31160                           	callstack 16
 31161                           
 31162                           ; BSR set to: 0
 31163                           ;incstack = 0
 31164                           ;needsStarting@io stored from wreg
 31165   00A7C8  0100               	movlb	0	; () banked
 31166   00A7CA  6F91               	movwf	needsStarting@io& (0+255),b
 31167                           
 31168                           ;../outputs.c: 183:     switch(type) {
 31169   00A7CC  D02B               	goto	l21499
 31170   00A7CE                     l21479:
 31171                           
 31172                           ; BSR set to: 0
 31173                           ;../outputs.c: 186:             return FALSE;
 31174   00A7CE  0E00               	movlw	0
 31175   00A7D0  0012               	return	
 31176   00A7D2                     l21483:
 31177                           
 31178                           ; BSR set to: 0
 31179                           ;../outputs.c: 195:             return (pulseDelays[io] == 0);
 31180   00A7D2  0EA4               	movlw	low _pulseDelays
 31181   00A7D4  2591               	addwf	needsStarting@io& (0+255),w,b
 31182   00A7D6  6ED9               	movwf	fsr2l,c
 31183   00A7D8  6ADA               	clrf	fsr2h,c
 31184   00A7DA  0E02               	movlw	high _pulseDelays
 31185   00A7DC  22DA               	addwfc	fsr2h,f,c
 31186   00A7DE  50DF               	movf	indf2,w,c
 31187   00A7E0  A4D8               	btfss	status,2,c
 31188   00A7E2  D002               	goto	u22010
 31189   00A7E4  0E01               	movlw	1
 31190   00A7E6  0012               	return	
 31191   00A7E8                     u22010:
 31192   00A7E8  0E00               	movlw	0
 31193   00A7EA  0012               	return	
 31194   00A7EC                     l21487:
 31195                           
 31196                           ; BSR set to: 0
 31197                           ;../outputs.c: 205:             if (targetPos[io] == currentPos[io]) {
 31198   00A7EC  5191               	movf	needsStarting@io& (0+255),w,b
 31199   00A7EE  0FA9               	addlw	low _currentPos
 31200   00A7F0  6ED9               	movwf	fsr2l,c
 31201   00A7F2  6ADA               	clrf	fsr2h,c
 31202   00A7F4  0E20               	movlw	low _targetPos
 31203   00A7F6  2591               	addwf	needsStarting@io& (0+255),w,b
 31204   00A7F8  6EE1               	movwf	fsr1l,c
 31205   00A7FA  6AE2               	clrf	fsr1h,c
 31206   00A7FC  0E01               	movlw	high _targetPos
 31207   00A7FE  22E2               	addwfc	fsr1h,f,c
 31208   00A800  50DE               	movf	postinc2,w,c
 31209   00A802  18E6               	xorwf	postinc1,w,c
 31210   00A804  B4D8               	btfsc	status,2,c
 31211   00A806  D7E3               	goto	l21479
 31212                           
 31213                           ; BSR set to: 0
 31214                           ;../outputs.c: 209:             return (servoState[io] != SS_MOVING);
 31215   00A808  0E10               	movlw	low _servoState
 31216   00A80A  2591               	addwf	needsStarting@io& (0+255),w,b
 31217   00A80C  6ED9               	movwf	fsr2l,c
 31218   00A80E  6ADA               	clrf	fsr2h,c
 31219   00A810  0E01               	movlw	high _servoState
 31220   00A812  22DA               	addwfc	fsr2h,f,c
 31221   00A814  0E02               	movlw	2
 31222   00A816  18DE               	xorwf	postinc2,w,c
 31223   00A818  B4D8               	btfsc	status,2,c
 31224   00A81A  D002               	goto	u22040
 31225   00A81C  0E01               	movlw	1
 31226   00A81E  0012               	return	
 31227   00A820                     u22040:
 31228   00A820  0E00               	movlw	0
 31229   00A822  0012               	return	
 31230   00A824                     l21499:
 31231   00A824  0100               	movlb	0	; () banked
 31232   00A826  518E               	movf	needsStarting@type& (0+255),w,b
 31233                           
 31234                           ; Switch size 1, requested type "simple"
 31235                           ; Number of cases is 5, Range of values is 0 to 4
 31236                           ; switch strategies available:
 31237                           ; Name         Instructions Cycles
 31238                           ; simple_byte           16     9 (average)
 31239                           ;	Chosen strategy is simple_byte
 31240   00A828  0A00               	xorlw	0	; case 0
 31241   00A82A  B4D8               	btfsc	status,2,c
 31242   00A82C  D7D0               	goto	l21479
 31243   00A82E  0A01               	xorlw	1	; case 1
 31244   00A830  B4D8               	btfsc	status,2,c
 31245   00A832  D7CF               	goto	l21483
 31246   00A834  0A03               	xorlw	3	; case 2
 31247   00A836  B4D8               	btfsc	status,2,c
 31248   00A838  D7D9               	goto	l21487
 31249   00A83A  0A01               	xorlw	1	; case 3
 31250   00A83C  B4D8               	btfsc	status,2,c
 31251   00A83E  D7D6               	goto	l21487
 31252   00A840  0A07               	xorlw	7	; case 4
 31253   00A842  B4D8               	btfsc	status,2,c
 31254   00A844  D7D3               	goto	l21487
 31255                           
 31256                           ; BSR set to: 0
 31257                           ;../outputs.c: 212:     return TRUE;
 31258   00A846  0E01               	movlw	1
 31259                           
 31260                           ; BSR set to: 0
 31261   00A848  0012               	return		;funcret
 31262   00A84A                     __end_of_needsStarting:
 31263                           	callstack 0
 31264                           
 31265 ;; *************** function _getTwoAction *****************
 31266 ;; Defined at:
 31267 ;;		line 414 in file "../event_consumerDualActionQueue.c"
 31268 ;; Parameters:    Size  Location     Type
 31269 ;;		None
 31270 ;; Auto vars:     Size  Location     Type
 31271 ;;		None
 31272 ;; Return value:  Size  Location     Type
 31273 ;;                  1    wreg      unsigned char 
 31274 ;; Registers used:
 31275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31276 ;; Tracked objects:
 31277 ;;		On entry : 0/0
 31278 ;;		On exit  : 0/0
 31279 ;;		Unchanged: 0/0
 31280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31285 ;;Total ram usage:        0 bytes
 31286 ;; Hardware stack levels used: 1
 31287 ;; Hardware stack levels required when called: 13
 31288 ;; This function calls:
 31289 ;;		_peekTwoActionQueue
 31290 ;; This function is called by:
 31291 ;;		_processActions
 31292 ;; This function uses a non-reentrant model
 31293 ;;
 31294                           
 31295                           	psect	text117
 31296   00C61C                     __ptext117:
 31297                           	callstack 0
 31298   00C61C                     _getTwoAction:
 31299                           	callstack 15
 31300                           
 31301                           ;../event_consumerDualActionQueue.c: 415:  return peekTwoActionQueue(0);
 31302                           
 31303                           ; BSR set to: 0
 31304                           ;incstack = 0
 31305   00C61C  0E00               	movlw	0
 31306   00C61E  ECD7  F052         	call	_peekTwoActionQueue
 31307   00C622  0012               	return		;funcret
 31308   00C624                     __end_of_getTwoAction:
 31309                           	callstack 0
 31310                           
 31311 ;; *************** function _peekTwoActionQueue *****************
 31312 ;; Defined at:
 31313 ;;		line 453 in file "../event_consumerDualActionQueue.c"
 31314 ;; Parameters:    Size  Location     Type
 31315 ;;  index           1    wreg     unsigned char 
 31316 ;; Auto vars:     Size  Location     Type
 31317 ;;  index           1   46[BANK0 ] unsigned char 
 31318 ;;  qty             1   45[BANK0 ] unsigned char 
 31319 ;; Return value:  Size  Location     Type
 31320 ;;                  1    wreg      unsigned char 
 31321 ;; Registers used:
 31322 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31323 ;; Tracked objects:
 31324 ;;		On entry : 0/0
 31325 ;;		On exit  : 0/0
 31326 ;;		Unchanged: 0/0
 31327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31329 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31331 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31332 ;;Total ram usage:        2 bytes
 31333 ;; Hardware stack levels used: 1
 31334 ;; Hardware stack levels required when called: 12
 31335 ;; This function calls:
 31336 ;;		Nothing
 31337 ;; This function is called by:
 31338 ;;		_getTwoAction
 31339 ;;		_processActions
 31340 ;; This function uses a non-reentrant model
 31341 ;;
 31342                           
 31343                           	psect	text118
 31344   00A5AE                     __ptext118:
 31345                           	callstack 0
 31346   00A5AE                     _peekTwoActionQueue:
 31347                           	callstack 16
 31348                           
 31349                           ;incstack = 0
 31350                           ;peekTwoActionQueue@index stored from wreg
 31351   00A5AE  0100               	movlb	0	; () banked
 31352   00A5B0  6F8E               	movwf	peekTwoActionQueue@index& (0+255),b
 31353                           
 31354                           ;../event_consumerDualActionQueue.c: 454:     uint8_t qty;;../event_consumerDualActionQu
      +                          eue.c: 455:     qty = (expeditedWriteIndex - expeditedReadIndex) & (8 -1);
 31355   00A5B2  0100               	movlb	0	; () banked
 31356   00A5B4  51CB               	movf	_expeditedReadIndex& (0+255),w,b
 31357   00A5B6  5DCA               	subwf	_expeditedWriteIndex& (0+255),w,b
 31358   00A5B8  0B07               	andlw	7
 31359   00A5BA  6F8D               	movwf	peekTwoActionQueue@qty& (0+255),b
 31360                           
 31361                           ;../event_consumerDualActionQueue.c: 456:     if (index < qty) {
 31362   00A5BC  518D               	movf	peekTwoActionQueue@qty& (0+255),w,b
 31363   00A5BE  5D8E               	subwf	peekTwoActionQueue@index& (0+255),w,b
 31364   00A5C0  B0D8               	btfsc	status,0,c
 31365   00A5C2  D019               	goto	l20573
 31366                           
 31367                           ; BSR set to: 0
 31368                           ;../event_consumerDualActionQueue.c: 457:         if (expeditedReadIndex == expeditedWri
      +                          teIndex) return 0;
 31369   00A5C4  51CA               	movf	_expeditedWriteIndex& (0+255),w,b
 31370   00A5C6  19CB               	xorwf	_expeditedReadIndex& (0+255),w,b
 31371   00A5C8  A4D8               	btfss	status,2,c
 31372   00A5CA  D002               	goto	l20561
 31373   00A5CC                     u20920:
 31374                           
 31375                           ; BSR set to: 0
 31376   00A5CC  0E00               	movlw	0
 31377   00A5CE  0012               	return	
 31378   00A5D0                     l20561:
 31379                           
 31380                           ; BSR set to: 0
 31381                           ;../event_consumerDualActionQueue.c: 458:         index += expeditedReadIndex;
 31382   00A5D0  51CB               	movf	_expeditedReadIndex& (0+255),w,b
 31383   00A5D2  278E               	addwf	peekTwoActionQueue@index& (0+255),f,b
 31384                           
 31385                           ;../event_consumerDualActionQueue.c: 459:         if (index >= 8) {
 31386   00A5D4  0E07               	movlw	7
 31387   00A5D6  658E               	cpfsgt	peekTwoActionQueue@index& (0+255),b
 31388   00A5D8  D002               	goto	l546
 31389                           
 31390                           ; BSR set to: 0
 31391                           ;../event_consumerDualActionQueue.c: 460:             index -= 8;
 31392   00A5DA  0E08               	movlw	8
 31393   00A5DC  5F8E               	subwf	peekTwoActionQueue@index& (0+255),f,b
 31394   00A5DE                     l546:
 31395                           
 31396                           ; BSR set to: 0
 31397                           ;../event_consumerDualActionQueue.c: 462:         if (index == expeditedWriteIndex) retu
      +                          rn 0;
 31398   00A5DE  51CA               	movf	_expeditedWriteIndex& (0+255),w,b
 31399   00A5E0  198E               	xorwf	peekTwoActionQueue@index& (0+255),w,b
 31400   00A5E2  B4D8               	btfsc	status,2,c
 31401   00A5E4  D7F3               	goto	u20920
 31402                           
 31403                           ; BSR set to: 0
 31404                           ;../event_consumerDualActionQueue.c: 463:         return expeditedQueueBuf[index];
 31405   00A5E6  0EC4               	movlw	low _expeditedQueueBuf
 31406   00A5E8  258E               	addwf	peekTwoActionQueue@index& (0+255),w,b
 31407   00A5EA  6ED9               	movwf	fsr2l,c
 31408   00A5EC  6ADA               	clrf	fsr2h,c
 31409   00A5EE  0E02               	movlw	high _expeditedQueueBuf
 31410   00A5F0  22DA               	addwfc	fsr2h,f,c
 31411   00A5F2  50DF               	movf	indf2,w,c
 31412   00A5F4  0012               	return	
 31413   00A5F6                     l20573:
 31414                           
 31415                           ; BSR set to: 0
 31416                           ;../event_consumerDualActionQueue.c: 465:     index -= qty;
 31417   00A5F6  518D               	movf	peekTwoActionQueue@qty& (0+255),w,b
 31418   00A5F8  5F8E               	subwf	peekTwoActionQueue@index& (0+255),f,b
 31419                           
 31420                           ;../event_consumerDualActionQueue.c: 466:     qty = (normalWriteIndex - normalReadIndex)
      +                           & (64 -1);
 31421   00A5FA  51CD               	movf	_normalReadIndex& (0+255),w,b
 31422   00A5FC  5DCC               	subwf	_normalWriteIndex& (0+255),w,b
 31423   00A5FE  0B3F               	andlw	63
 31424   00A600  6F8D               	movwf	peekTwoActionQueue@qty& (0+255),b
 31425                           
 31426                           ;../event_consumerDualActionQueue.c: 467:     if (index < qty) {
 31427   00A602  518D               	movf	peekTwoActionQueue@qty& (0+255),w,b
 31428   00A604  5D8E               	subwf	peekTwoActionQueue@index& (0+255),w,b
 31429   00A606  B0D8               	btfsc	status,0,c
 31430   00A608  D7E1               	goto	u20920
 31431                           
 31432                           ; BSR set to: 0
 31433                           ;../event_consumerDualActionQueue.c: 468:         if (normalReadIndex == normalWriteInde
      +                          x) return 0;
 31434   00A60A  51CC               	movf	_normalWriteIndex& (0+255),w,b
 31435   00A60C  19CD               	xorwf	_normalReadIndex& (0+255),w,b
 31436   00A60E  B4D8               	btfsc	status,2,c
 31437   00A610  D7DD               	goto	u20920
 31438                           
 31439                           ; BSR set to: 0
 31440                           ;../event_consumerDualActionQueue.c: 469:         index += normalReadIndex;
 31441   00A612  51CD               	movf	_normalReadIndex& (0+255),w,b
 31442   00A614  278E               	addwf	peekTwoActionQueue@index& (0+255),f,b
 31443                           
 31444                           ;../event_consumerDualActionQueue.c: 470:         if (index >= 64) {
 31445   00A616  0E3F               	movlw	63
 31446   00A618  658E               	cpfsgt	peekTwoActionQueue@index& (0+255),b
 31447   00A61A  D002               	goto	l550
 31448                           
 31449                           ; BSR set to: 0
 31450                           ;../event_consumerDualActionQueue.c: 471:             index -= 64;
 31451   00A61C  0E40               	movlw	64
 31452   00A61E  5F8E               	subwf	peekTwoActionQueue@index& (0+255),f,b
 31453   00A620                     l550:
 31454                           
 31455                           ; BSR set to: 0
 31456                           ;../event_consumerDualActionQueue.c: 473:         if (index == normalWriteIndex) return 
      +                          0;
 31457   00A620  51CC               	movf	_normalWriteIndex& (0+255),w,b
 31458   00A622  198E               	xorwf	peekTwoActionQueue@index& (0+255),w,b
 31459   00A624  B4D8               	btfsc	status,2,c
 31460   00A626  D7D2               	goto	u20920
 31461                           
 31462                           ; BSR set to: 0
 31463                           ;../event_consumerDualActionQueue.c: 474:         return normalQueueBuf[index];
 31464   00A628  0E80               	movlw	low _normalQueueBuf
 31465   00A62A  258E               	addwf	peekTwoActionQueue@index& (0+255),w,b
 31466   00A62C  6ED9               	movwf	fsr2l,c
 31467   00A62E  6ADA               	clrf	fsr2h,c
 31468   00A630  0E04               	movlw	high _normalQueueBuf
 31469   00A632  22DA               	addwfc	fsr2h,f,c
 31470   00A634  50DF               	movf	indf2,w,c
 31471                           
 31472                           ; BSR set to: 0
 31473   00A636  0012               	return		;funcret
 31474   00A638                     __end_of_peekTwoActionQueue:
 31475                           	callstack 0
 31476                           
 31477 ;; *************** function _finaliseOutput *****************
 31478 ;; Defined at:
 31479 ;;		line 253 in file "../outputs.c"
 31480 ;; Parameters:    Size  Location     Type
 31481 ;;  io              1    wreg     unsigned char 
 31482 ;;  type            1   45[BANK0 ] unsigned char 
 31483 ;; Auto vars:     Size  Location     Type
 31484 ;;  io              1    0[COMRAM] unsigned char 
 31485 ;; Return value:  Size  Location     Type
 31486 ;;                  1    wreg      void 
 31487 ;; Registers used:
 31488 ;;		wreg, status,2, status,0
 31489 ;; Tracked objects:
 31490 ;;		On entry : 0/0
 31491 ;;		On exit  : 0/0
 31492 ;;		Unchanged: 0/0
 31493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31494 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31497 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31498 ;;Total ram usage:        1 bytes
 31499 ;; Hardware stack levels used: 1
 31500 ;; Hardware stack levels required when called: 12
 31501 ;; This function calls:
 31502 ;;		Nothing
 31503 ;; This function is called by:
 31504 ;;		_processActions
 31505 ;; This function uses a non-reentrant model
 31506 ;;
 31507                           
 31508                           	psect	text119
 31509   00C624                     __ptext119:
 31510                           	callstack 0
 31511   00C624                     _finaliseOutput:
 31512                           	callstack 16
 31513                           
 31514                           ;../outputs.c: 254:     switch(type) {
 31515                           
 31516                           ; BSR set to: 0
 31517                           ;incstack = 0
 31518   00C624  0100               	movlb	0	; () banked
 31519   00C626  518D               	movf	finaliseOutput@type& (0+255),w,b
 31520                           
 31521                           ; Switch size 1, requested type "simple"
 31522                           ; Number of cases is 1, Range of values is 1 to 1
 31523                           ; switch strategies available:
 31524                           ; Name         Instructions Cycles
 31525                           ; simple_byte            4     3 (average)
 31526                           ;	Chosen strategy is simple_byte
 31527   00C628  0A01               	xorlw	1	; case 1
 31528   00C62A  0012               	return	
 31529   00C62C                     __end_of_finaliseOutput:
 31530                           	callstack 0
 31531                           
 31532 ;; *************** function _doWait *****************
 31533 ;; Defined at:
 31534 ;;		line 337 in file "../universalEvents.c"
 31535 ;; Parameters:    Size  Location     Type
 31536 ;;  duration        2   61[BANK0 ] unsigned short 
 31537 ;; Auto vars:     Size  Location     Type
 31538 ;;		None
 31539 ;; Return value:  Size  Location     Type
 31540 ;;                  1    wreg      void 
 31541 ;; Registers used:
 31542 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31543 ;; Tracked objects:
 31544 ;;		On entry : 0/0
 31545 ;;		On exit  : 0/0
 31546 ;;		Unchanged: 0/0
 31547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31548 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31550 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31551 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31552 ;;Total ram usage:        6 bytes
 31553 ;; Hardware stack levels used: 1
 31554 ;; Hardware stack levels required when called: 14
 31555 ;; This function calls:
 31556 ;;		___lmul
 31557 ;;		_doneTwoAction
 31558 ;;		_tickGet
 31559 ;; This function is called by:
 31560 ;;		_processActions
 31561 ;; This function uses a non-reentrant model
 31562 ;;
 31563                           
 31564                           	psect	text120
 31565   00A522                     __ptext120:
 31566                           	callstack 0
 31567   00A522                     _doWait:
 31568                           	callstack 14
 31569                           
 31570                           ;../universalEvents.c: 339:     if (startWait.val == 0) {
 31571                           
 31572                           ; BSR set to: 0
 31573                           ;incstack = 0
 31574   00A522  5037               	movf	_startWait^0,w,c
 31575   00A524  1038               	iorwf	(_startWait+1)^0,w,c
 31576   00A526  1039               	iorwf	(_startWait+2)^0,w,c
 31577   00A528  103A               	iorwf	(_startWait+3)^0,w,c
 31578   00A52A  A4D8               	btfss	status,2,c
 31579   00A52C  D00B               	goto	l21451
 31580                           
 31581                           ;../universalEvents.c: 340:         startWait.val = tickGet();
 31582   00A52E  ECE4  F05A         	call	_tickGet	;wreg free
 31583   00A532  C08D  F037         	movff	?_tickGet,_startWait
 31584   00A536  C08E  F038         	movff	?_tickGet+1,_startWait+1
 31585   00A53A  C08F  F039         	movff	?_tickGet+2,_startWait+2
 31586   00A53E  C090  F03A         	movff	?_tickGet+3,_startWait+3
 31587   00A542  0012               	return	
 31588   00A544                     l21451:
 31589                           
 31590                           ;../universalEvents.c: 344:         if (((tickGet() - startWait.val) > ((long)duration *
      +                           (long)(62500/10)))) {
 31591   00A544  ECE4  F05A         	call	_tickGet	;wreg free
 31592   00A548  5037               	movf	_startWait^0,w,c
 31593   00A54A  0100               	movlb	0	; () banked
 31594   00A54C  5D8D               	subwf	?_tickGet& (0+255),w,b
 31595   00A54E  6F9F               	movwf	??_doWait& (0+255),b
 31596   00A550  5038               	movf	(_startWait+1)^0,w,c
 31597   00A552  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 31598   00A554  6FA0               	movwf	(??_doWait+1)& (0+255),b
 31599   00A556  5039               	movf	(_startWait+2)^0,w,c
 31600   00A558  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 31601   00A55A  6FA1               	movwf	(??_doWait+2)& (0+255),b
 31602   00A55C  503A               	movf	(_startWait+3)^0,w,c
 31603   00A55E  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 31604   00A560  6FA2               	movwf	(??_doWait+3)& (0+255),b
 31605   00A562  C09D  F091         	movff	doWait@duration,___lmul@multiplier
 31606   00A566  C09E  F092         	movff	doWait@duration+1,___lmul@multiplier+1
 31607   00A56A  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
 31608   00A56C  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
 31609   00A56E  0E6A               	movlw	106
 31610   00A570  6F95               	movwf	___lmul@multiplicand& (0+255),b
 31611   00A572  0E18               	movlw	24
 31612   00A574  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 31613   00A576  0E00               	movlw	0
 31614   00A578  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 31615   00A57A  0E00               	movlw	0
 31616   00A57C  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 31617   00A57E  EC10  F05B         	call	___lmul	;wreg free
 31618   00A582  0100               	movlb	0	; () banked
 31619   00A584  519F               	movf	??_doWait& (0+255),w,b
 31620   00A586  5D91               	subwf	?___lmul& (0+255),w,b
 31621   00A588  51A0               	movf	(??_doWait+1)& (0+255),w,b
 31622   00A58A  5992               	subwfb	(?___lmul+1)& (0+255),w,b
 31623   00A58C  51A1               	movf	(??_doWait+2)& (0+255),w,b
 31624   00A58E  5993               	subwfb	(?___lmul+2)& (0+255),w,b
 31625   00A590  51A2               	movf	(??_doWait+3)& (0+255),w,b
 31626   00A592  5994               	subwfb	(?___lmul+3)& (0+255),w,b
 31627   00A594  B0D8               	btfsc	status,0,c
 31628   00A596  0012               	return	
 31629                           
 31630                           ; BSR set to: 0
 31631                           ;../universalEvents.c: 345:             doneTwoAction();
 31632   00A598  EC1F  F063         	call	_doneTwoAction	;wreg free
 31633                           
 31634                           ;../universalEvents.c: 346:             startWait.val = 0;
 31635   00A59C  0E00               	movlw	0
 31636   00A59E  6E37               	movwf	_startWait^0,c
 31637   00A5A0  0E00               	movlw	0
 31638   00A5A2  6E38               	movwf	(_startWait+1)^0,c
 31639   00A5A4  0E00               	movlw	0
 31640   00A5A6  6E39               	movwf	(_startWait+2)^0,c
 31641   00A5A8  0E00               	movlw	0
 31642   00A5AA  6E3A               	movwf	(_startWait+3)^0,c
 31643   00A5AC  0012               	return		;funcret
 31644   00A5AE                     __end_of_doWait:
 31645                           	callstack 0
 31646                           
 31647 ;; *************** function _doneTwoAction *****************
 31648 ;; Defined at:
 31649 ;;		line 444 in file "../event_consumerDualActionQueue.c"
 31650 ;; Parameters:    Size  Location     Type
 31651 ;;		None
 31652 ;; Auto vars:     Size  Location     Type
 31653 ;;		None
 31654 ;; Return value:  Size  Location     Type
 31655 ;;                  1    wreg      void 
 31656 ;; Registers used:
 31657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31658 ;; Tracked objects:
 31659 ;;		On entry : 0/0
 31660 ;;		On exit  : 0/0
 31661 ;;		Unchanged: 0/0
 31662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31667 ;;Total ram usage:        0 bytes
 31668 ;; Hardware stack levels used: 1
 31669 ;; Hardware stack levels required when called: 13
 31670 ;; This function calls:
 31671 ;;		_popTwoAction
 31672 ;; This function is called by:
 31673 ;;		_processActions
 31674 ;;		_doWait
 31675 ;; This function uses a non-reentrant model
 31676 ;;
 31677                           
 31678                           	psect	text121
 31679   00C63E                     __ptext121:
 31680                           	callstack 0
 31681   00C63E                     _doneTwoAction:
 31682                           	callstack 15
 31683                           
 31684                           ;../event_consumerDualActionQueue.c: 445:  popTwoAction();
 31685                           
 31686                           ;incstack = 0
 31687   00C63E  EC56  F060         	call	_popTwoAction	;wreg free
 31688   00C642  0012               	return		;funcret
 31689   00C644                     __end_of_doneTwoAction:
 31690                           	callstack 0
 31691                           
 31692 ;; *************** function _popTwoAction *****************
 31693 ;; Defined at:
 31694 ;;		line 423 in file "../event_consumerDualActionQueue.c"
 31695 ;; Parameters:    Size  Location     Type
 31696 ;;		None
 31697 ;; Auto vars:     Size  Location     Type
 31698 ;;  ret             1    0        unsigned char 
 31699 ;; Return value:  Size  Location     Type
 31700 ;;                  1    wreg      unsigned char 
 31701 ;; Registers used:
 31702 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31703 ;; Tracked objects:
 31704 ;;		On entry : 0/0
 31705 ;;		On exit  : 0/0
 31706 ;;		Unchanged: 0/0
 31707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31712 ;;Total ram usage:        0 bytes
 31713 ;; Hardware stack levels used: 1
 31714 ;; Hardware stack levels required when called: 12
 31715 ;; This function calls:
 31716 ;;		Nothing
 31717 ;; This function is called by:
 31718 ;;		_doneTwoAction
 31719 ;; This function uses a non-reentrant model
 31720 ;;
 31721                           
 31722                           	psect	text122
 31723   00C0AC                     __ptext122:
 31724                           	callstack 0
 31725   00C0AC                     _popTwoAction:
 31726                           	callstack 15
 31727                           
 31728                           ;../event_consumerDualActionQueue.c: 424:     uint8_t ret;;../event_consumerDualActionQu
      +                          eue.c: 426:  if (expeditedWriteIndex != expeditedReadIndex) {
 31729                           
 31730                           ;incstack = 0
 31731   00C0AC  0100               	movlb	0	; () banked
 31732   00C0AE  51CB               	movf	_expeditedReadIndex& (0+255),w,b
 31733   00C0B0  19CA               	xorwf	_expeditedWriteIndex& (0+255),w,b
 31734   00C0B2  B4D8               	btfsc	status,2,c
 31735   00C0B4  D007               	goto	l20013
 31736                           
 31737                           ; BSR set to: 0
 31738                           
 31739                           ; BSR set to: 0
 31740   00C0B6  2BCB               	incf	_expeditedReadIndex& (0+255),f,b
 31741                           
 31742                           ; BSR set to: 0
 31743                           ;../event_consumerDualActionQueue.c: 429:         if (expeditedReadIndex >= 8) expedited
      +                          ReadIndex = 0;
 31744   00C0B8  0E07               	movlw	7
 31745   00C0BA  65CB               	cpfsgt	_expeditedReadIndex& (0+255),b
 31746   00C0BC  0012               	return	
 31747                           
 31748                           ; BSR set to: 0
 31749   00C0BE  0E00               	movlw	0
 31750   00C0C0  6FCB               	movwf	_expeditedReadIndex& (0+255),b
 31751   00C0C2  0012               	return	
 31752   00C0C4                     l20013:
 31753                           
 31754                           ; BSR set to: 0
 31755                           ;../event_consumerDualActionQueue.c: 433:  if (normalWriteIndex == normalReadIndex) {
 31756   00C0C4  51CD               	movf	_normalReadIndex& (0+255),w,b
 31757   00C0C6  19CC               	xorwf	_normalWriteIndex& (0+255),w,b
 31758   00C0C8  B4D8               	btfsc	status,2,c
 31759   00C0CA  0012               	return	
 31760                           
 31761                           ; BSR set to: 0
 31762                           
 31763                           ; BSR set to: 0
 31764   00C0CC  2BCD               	incf	_normalReadIndex& (0+255),f,b
 31765                           
 31766                           ; BSR set to: 0
 31767                           ;../event_consumerDualActionQueue.c: 437:  if (normalReadIndex >= 64) normalReadIndex = 
      +                          0;
 31768   00C0CE  0E3F               	movlw	63
 31769   00C0D0  65CD               	cpfsgt	_normalReadIndex& (0+255),b
 31770   00C0D2  0012               	return	
 31771                           
 31772                           ; BSR set to: 0
 31773   00C0D4  0E00               	movlw	0
 31774   00C0D6  6FCD               	movwf	_normalReadIndex& (0+255),b
 31775                           
 31776                           ; BSR set to: 0
 31777   00C0D8  0012               	return		;funcret
 31778   00C0DA                     __end_of_popTwoAction:
 31779                           	callstack 0
 31780                           
 31781 ;; *************** function _doSOD *****************
 31782 ;; Defined at:
 31783 ;;		line 387 in file "../universalEvents.c"
 31784 ;; Parameters:    Size  Location     Type
 31785 ;;		None
 31786 ;; Auto vars:     Size  Location     Type
 31787 ;;		None
 31788 ;; Return value:  Size  Location     Type
 31789 ;;                  1    wreg      void 
 31790 ;; Registers used:
 31791 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31792 ;; Tracked objects:
 31793 ;;		On entry : 0/0
 31794 ;;		On exit  : 0/0
 31795 ;;		Unchanged: 0/0
 31796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31801 ;;Total ram usage:        0 bytes
 31802 ;; Hardware stack levels used: 1
 31803 ;; Hardware stack levels required when called: 13
 31804 ;; This function calls:
 31805 ;;		_findServiceIndex
 31806 ;;		_startTimedResponse
 31807 ;; This function is called by:
 31808 ;;		_processActions
 31809 ;; This function uses a non-reentrant model
 31810 ;;
 31811                           
 31812                           	psect	text123
 31813   00C512                     __ptext123:
 31814                           	callstack 0
 31815   00C512                     _doSOD:
 31816                           	callstack 15
 31817                           
 31818                           ;../universalEvents.c: 388:     startTimedResponse(1, findServiceIndex(SERVICE_ID_PRODUC
      +                          ER), sodTRCallback);
 31819                           
 31820                           ; BSR set to: 0
 31821                           ;incstack = 0
 31822   00C512  0E05               	movlw	5
 31823   00C514  ECBF  F056         	call	_findServiceIndex
 31824   00C518  0100               	movlb	0	; () banked
 31825   00C51A  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 31826   00C51C  0E78               	movlw	low _sodTRCallback
 31827   00C51E  6F92               	movwf	startTimedResponse@callback& (0+255),b
 31828   00C520  0E83               	movlw	high _sodTRCallback
 31829   00C522  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 31830   00C524  0E01               	movlw	1
 31831   00C526  EC14  F05E         	call	_startTimedResponse
 31832   00C52A  0012               	return		;funcret
 31833   00C52C                     __end_of_doSOD:
 31834                           	callstack 0
 31835                           
 31836 ;; *************** function _startTimedResponse *****************
 31837 ;; Defined at:
 31838 ;;		line 85 in file "../../VLCBlib_PIC/timedResponse.c"
 31839 ;; Parameters:    Size  Location     Type
 31840 ;;  type            1    wreg     unsigned char 
 31841 ;;  serviceIndex    1   49[BANK0 ] unsigned char 
 31842 ;;  callback        2   50[BANK0 ] PTR FTN(unsigned char ,u
 31843 ;;		 -> reqevCallback(1), nerdCallback(1), nvTRnvrdCallback(1), mnsTRserviceDiscoveryCallback(1), 
 31844 ;;		 -> mnsTRallDiagnosticsCallback(1), mnsTRrqnpnCallback(1), sodTRCallback(1), 
 31845 ;; Auto vars:     Size  Location     Type
 31846 ;;  type            1   52[BANK0 ] unsigned char 
 31847 ;; Return value:  Size  Location     Type
 31848 ;;                  1    wreg      void 
 31849 ;; Registers used:
 31850 ;;		wreg, status,2, status,0
 31851 ;; Tracked objects:
 31852 ;;		On entry : 0/0
 31853 ;;		On exit  : 0/0
 31854 ;;		Unchanged: 0/0
 31855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31856 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31857 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31859 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31860 ;;Total ram usage:        4 bytes
 31861 ;; Hardware stack levels used: 1
 31862 ;; Hardware stack levels required when called: 12
 31863 ;; This function calls:
 31864 ;;		Nothing
 31865 ;; This function is called by:
 31866 ;;		_doSOD
 31867 ;;		_mnsProcessMessage
 31868 ;;		_nvProcessMessage
 31869 ;;		_doNerd
 31870 ;;		_doReqev
 31871 ;; This function uses a non-reentrant model
 31872 ;;
 31873                           
 31874                           	psect	text124
 31875   00BC28                     __ptext124:
 31876                           	callstack 0
 31877   00BC28                     _startTimedResponse:
 31878                           	callstack 15
 31879                           
 31880                           ;incstack = 0
 31881                           ;startTimedResponse@type stored from wreg
 31882   00BC28  0100               	movlb	0	; () banked
 31883   00BC2A  6F94               	movwf	startTimedResponse@type& (0+255),b
 31884                           
 31885                           ;../../VLCBlib_PIC/timedResponse.c: 86:     timedResponseType = type;
 31886   00BC2C  C094  F0C3         	movff	startTimedResponse@type,_timedResponseType
 31887                           
 31888                           ;../../VLCBlib_PIC/timedResponse.c: 87:     if (serviceIndex == 0) {
 31889   00BC30  0100               	movlb	0	; () banked
 31890   00BC32  5191               	movf	startTimedResponse@serviceIndex& (0+255),w,b
 31891   00BC34  A4D8               	btfss	status,2,c
 31892   00BC36  D004               	goto	l20643
 31893                           
 31894                           ; BSR set to: 0
 31895                           ;../../VLCBlib_PIC/timedResponse.c: 89:         timedResponseAllServicesFlag = 1;
 31896   00BC38  0E01               	movlw	1
 31897   00BC3A  6E44               	movwf	_timedResponseAllServicesFlag^0,c
 31898                           
 31899                           ;../../VLCBlib_PIC/timedResponse.c: 90:         timedResponseServiceIndex = 0;
 31900   00BC3C  0E00               	movlw	0
 31901   00BC3E  D00B               	goto	L13
 31902   00BC40                     l20643:
 31903                           
 31904                           ; BSR set to: 0
 31905                           ;../../VLCBlib_PIC/timedResponse.c: 92:         timedResponseAllServicesFlag = 0;
 31906   00BC40  0E00               	movlw	0
 31907   00BC42  6E44               	movwf	_timedResponseAllServicesFlag^0,c
 31908                           
 31909                           ;../../VLCBlib_PIC/timedResponse.c: 93:         if ((serviceIndex < 1) || (serviceIndex 
      +                          > 9)) {
 31910   00BC44  5191               	movf	startTimedResponse@serviceIndex& (0+255),w,b
 31911   00BC46  B4D8               	btfsc	status,2,c
 31912   00BC48  D003               	goto	u21090
 31913                           
 31914                           ; BSR set to: 0
 31915   00BC4A  0E09               	movlw	9
 31916   00BC4C  6591               	cpfsgt	startTimedResponse@serviceIndex& (0+255),b
 31917   00BC4E  D002               	goto	l20647
 31918   00BC50                     u21090:
 31919                           
 31920                           ; BSR set to: 0
 31921                           ;../../VLCBlib_PIC/timedResponse.c: 95:             timedResponseType = 0xFF;
 31922   00BC50  69C3               	setf	_timedResponseType& (0+255),b
 31923                           
 31924                           ;../../VLCBlib_PIC/timedResponse.c: 96:             return;
 31925   00BC52  0012               	return	
 31926   00BC54                     l20647:
 31927                           
 31928                           ; BSR set to: 0
 31929                           ;../../VLCBlib_PIC/timedResponse.c: 98:         timedResponseServiceIndex = (uint8_t)ser
      +                          viceIndex-1;
 31930   00BC54  0591               	decf	startTimedResponse@serviceIndex& (0+255),w,b
 31931   00BC56                     L13:
 31932   00BC56  6FC4               	movwf	_timedResponseServiceIndex& (0+255),b
 31933                           
 31934                           ; BSR set to: 0
 31935                           ;../../VLCBlib_PIC/timedResponse.c: 100:     timedResponseStep = 0;
 31936   00BC58  0E00               	movlw	0
 31937   00BC5A  6E43               	movwf	_timedResponseStep^0,c
 31938                           
 31939                           ; BSR set to: 0
 31940                           ;../../VLCBlib_PIC/timedResponse.c: 101:     timedResponseCallback = callback;
 31941   00BC5C  C092  F03F         	movff	startTimedResponse@callback,_timedResponseCallback
 31942   00BC60  C093  F040         	movff	startTimedResponse@callback+1,_timedResponseCallback+1
 31943                           
 31944                           ; BSR set to: 0
 31945   00BC64  0012               	return		;funcret
 31946   00BC66                     __end_of_startTimedResponse:
 31947                           	callstack 0
 31948                           
 31949 ;; *************** function _findServiceIndex *****************
 31950 ;; Defined at:
 31951 ;;		line 823 in file "../../VLCBlib_PIC/vlcb.c"
 31952 ;; Parameters:    Size  Location     Type
 31953 ;;  serviceType     1    wreg     unsigned char 
 31954 ;; Auto vars:     Size  Location     Type
 31955 ;;  serviceType     1   47[BANK0 ] unsigned char 
 31956 ;;  i               1   48[BANK0 ] unsigned char 
 31957 ;; Return value:  Size  Location     Type
 31958 ;;                  1    wreg      unsigned char 
 31959 ;; Registers used:
 31960 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 31961 ;; Tracked objects:
 31962 ;;		On entry : 0/0
 31963 ;;		On exit  : 0/0
 31964 ;;		Unchanged: 0/0
 31965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31967 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31968 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31969 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31970 ;;Total ram usage:        4 bytes
 31971 ;; Hardware stack levels used: 1
 31972 ;; Hardware stack levels required when called: 12
 31973 ;; This function calls:
 31974 ;;		Nothing
 31975 ;; This function is called by:
 31976 ;;		_doSOD
 31977 ;;		_mnsProcessMessage
 31978 ;;		_nvProcessMessage
 31979 ;;		_doNerd
 31980 ;;		_doReqev
 31981 ;; This function uses a non-reentrant model
 31982 ;;
 31983                           
 31984                           	psect	text125
 31985   00AD7E                     __ptext125:
 31986                           	callstack 0
 31987   00AD7E                     _findServiceIndex:
 31988                           	callstack 15
 31989                           
 31990                           ; BSR set to: 0
 31991                           ;incstack = 0
 31992                           ;findServiceIndex@serviceType stored from wreg
 31993   00AD7E  0100               	movlb	0	; () banked
 31994   00AD80  6F8F               	movwf	findServiceIndex@serviceType& (0+255),b
 31995                           
 31996                           ;../../VLCBlib_PIC/vlcb.c: 824:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 825:     for (i
      +                          =0; i<9; i++) {
 31997   00AD82  0E00               	movlw	0
 31998   00AD84  0100               	movlb	0	; () banked
 31999   00AD86  6F90               	movwf	findServiceIndex@i& (0+255),b
 32000   00AD88                     l20621:
 32001                           
 32002                           ; BSR set to: 0
 32003                           ;../../VLCBlib_PIC/vlcb.c: 826:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == serviceType)) {
 32004   00AD88  5190               	movf	findServiceIndex@i& (0+255),w,b
 32005   00AD8A  0D02               	mullw	2
 32006   00AD8C  0E69               	movlw	low _services
 32007   00AD8E  24F3               	addwf	243,w,c
 32008   00AD90  6EF6               	movwf	tblptrl,c
 32009   00AD92  0EEE               	movlw	high _services
 32010   00AD94  20F4               	addwfc	244,w,c
 32011   00AD96  6EF7               	movwf	tblptrh,c
 32012   00AD98                     	if	1	;There are 3 active tblptr bytes
 32013   00AD98  6AF8               	clrf	tblptru,c
 32014   00AD9A  0E00               	movlw	low (__mediumconst shr (0+16))
 32015   00AD9C  22F8               	addwfc	tblptru,f,c
 32016   00AD9E                     	endif
 32017   00AD9E  0009               	tblrd		*+
 32018   00ADA0  50F5               	movf	tablat,w,c
 32019   00ADA2  0009               	tblrd		*+
 32020   00ADA4  10F5               	iorwf	tablat,w,c
 32021   00ADA6  B4D8               	btfsc	status,2,c
 32022   00ADA8  D01D               	goto	l20629
 32023                           
 32024                           ; BSR set to: 0
 32025   00ADAA  5190               	movf	findServiceIndex@i& (0+255),w,b
 32026   00ADAC  0D02               	mullw	2
 32027   00ADAE  0E69               	movlw	low _services
 32028   00ADB0  24F3               	addwf	243,w,c
 32029   00ADB2  6EF6               	movwf	tblptrl,c
 32030   00ADB4  0EEE               	movlw	high _services
 32031   00ADB6  20F4               	addwfc	244,w,c
 32032   00ADB8  6EF7               	movwf	tblptrh,c
 32033   00ADBA                     	if	1	;There are 3 active tblptr bytes
 32034   00ADBA  6AF8               	clrf	tblptru,c
 32035   00ADBC  0E00               	movlw	low (__mediumconst shr (0+16))
 32036   00ADBE  22F8               	addwfc	tblptru,f,c
 32037   00ADC0                     	endif
 32038   00ADC0  0009               	tblrd		*+
 32039   00ADC2  CFF5 F08D          	movff	tablat,??_findServiceIndex
 32040   00ADC6  0009               	tblrd		*+
 32041   00ADC8  CFF5 F08E          	movff	tablat,??_findServiceIndex+1
 32042   00ADCC  C08D  FFF6         	movff	??_findServiceIndex,tblptrl
 32043   00ADD0  C08E  FFF7         	movff	??_findServiceIndex+1,tblptrh
 32044   00ADD4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 32045   00ADD4  6AF8               	clrf	tblptru,c
 32046   00ADD6                     	endif
 32047   00ADD6                     	if	0	;tblptru may be non-zero
 32048   00ADD6                     	endif
 32049   00ADD6  0008               	tblrd		*
 32050   00ADD8  50F5               	movf	tablat,w,c
 32051   00ADDA  198F               	xorwf	findServiceIndex@serviceType& (0+255),w,b
 32052   00ADDC  A4D8               	btfss	status,2,c
 32053   00ADDE  D002               	goto	l20629
 32054                           
 32055                           ; BSR set to: 0
 32056                           ;../../VLCBlib_PIC/vlcb.c: 827:             return i;
 32057   00ADE0  5190               	movf	findServiceIndex@i& (0+255),w,b
 32058   00ADE2  0012               	return	
 32059   00ADE4                     l20629:
 32060                           
 32061                           ; BSR set to: 0
 32062                           ;../../VLCBlib_PIC/vlcb.c: 829:     }
 32063   00ADE4  2B90               	incf	findServiceIndex@i& (0+255),f,b
 32064                           
 32065                           ; BSR set to: 0
 32066   00ADE6  0E08               	movlw	8
 32067   00ADE8  6590               	cpfsgt	findServiceIndex@i& (0+255),b
 32068   00ADEA  D7CE               	goto	l20621
 32069                           
 32070                           ; BSR set to: 0
 32071                           ;../../VLCBlib_PIC/vlcb.c: 830:     return 0xFF;
 32072   00ADEC  0EFF               	movlw	255
 32073                           
 32074                           ; BSR set to: 0
 32075   00ADEE  0012               	return		;funcret
 32076   00ADF0                     __end_of_findServiceIndex:
 32077                           	callstack 0
 32078                           
 32079 ;; *************** function _deleteTwoActionQueue *****************
 32080 ;; Defined at:
 32081 ;;		line 483 in file "../event_consumerDualActionQueue.c"
 32082 ;; Parameters:    Size  Location     Type
 32083 ;;  index           1    wreg     unsigned char 
 32084 ;; Auto vars:     Size  Location     Type
 32085 ;;  index           1   46[BANK0 ] unsigned char 
 32086 ;;  qty             1   45[BANK0 ] unsigned char 
 32087 ;; Return value:  Size  Location     Type
 32088 ;;                  1    wreg      void 
 32089 ;; Registers used:
 32090 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32091 ;; Tracked objects:
 32092 ;;		On entry : 0/0
 32093 ;;		On exit  : 0/0
 32094 ;;		Unchanged: 0/0
 32095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32097 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32099 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32100 ;;Total ram usage:        2 bytes
 32101 ;; Hardware stack levels used: 1
 32102 ;; Hardware stack levels required when called: 12
 32103 ;; This function calls:
 32104 ;;		Nothing
 32105 ;; This function is called by:
 32106 ;;		_processActions
 32107 ;; This function uses a non-reentrant model
 32108 ;;
 32109                           
 32110                           	psect	text126
 32111   00A8C8                     __ptext126:
 32112                           	callstack 0
 32113   00A8C8                     _deleteTwoActionQueue:
 32114                           	callstack 16
 32115                           
 32116                           ; BSR set to: 0
 32117                           ;incstack = 0
 32118                           ;deleteTwoActionQueue@index stored from wreg
 32119   00A8C8  0100               	movlb	0	; () banked
 32120   00A8CA  6F8E               	movwf	deleteTwoActionQueue@index& (0+255),b
 32121                           
 32122                           ;../event_consumerDualActionQueue.c: 484:     uint8_t qty;;../event_consumerDualActionQu
      +                          eue.c: 485:     qty = (expeditedWriteIndex - expeditedReadIndex) & (8 -1);
 32123   00A8CC  0100               	movlb	0	; () banked
 32124   00A8CE  51CB               	movf	_expeditedReadIndex& (0+255),w,b
 32125   00A8D0  5DCA               	subwf	_expeditedWriteIndex& (0+255),w,b
 32126   00A8D2  0B07               	andlw	7
 32127   00A8D4  6F8D               	movwf	deleteTwoActionQueue@qty& (0+255),b
 32128                           
 32129                           ;../event_consumerDualActionQueue.c: 486:     if (index < qty) {
 32130   00A8D6  518D               	movf	deleteTwoActionQueue@qty& (0+255),w,b
 32131   00A8D8  5D8E               	subwf	deleteTwoActionQueue@index& (0+255),w,b
 32132   00A8DA  B0D8               	btfsc	status,0,c
 32133   00A8DC  D013               	goto	l21425
 32134                           
 32135                           ; BSR set to: 0
 32136                           ;../event_consumerDualActionQueue.c: 487:         index += expeditedReadIndex;
 32137   00A8DE  51CB               	movf	_expeditedReadIndex& (0+255),w,b
 32138   00A8E0  278E               	addwf	deleteTwoActionQueue@index& (0+255),f,b
 32139                           
 32140                           ;../event_consumerDualActionQueue.c: 488:         if (index >= 8) {
 32141   00A8E2  0E07               	movlw	7
 32142   00A8E4  658E               	cpfsgt	deleteTwoActionQueue@index& (0+255),b
 32143   00A8E6  D002               	goto	l555
 32144                           
 32145                           ; BSR set to: 0
 32146                           ;../event_consumerDualActionQueue.c: 489:             index -= 8;
 32147   00A8E8  0E08               	movlw	8
 32148   00A8EA  5F8E               	subwf	deleteTwoActionQueue@index& (0+255),f,b
 32149   00A8EC                     l555:
 32150                           
 32151                           ; BSR set to: 0
 32152                           ;../event_consumerDualActionQueue.c: 491:         if (index == expeditedWriteIndex) retu
      +                          rn;
 32153   00A8EC  51CA               	movf	_expeditedWriteIndex& (0+255),w,b
 32154   00A8EE  198E               	xorwf	deleteTwoActionQueue@index& (0+255),w,b
 32155   00A8F0  B4D8               	btfsc	status,2,c
 32156   00A8F2  0012               	return	
 32157                           
 32158                           ; BSR set to: 0
 32159                           ;../event_consumerDualActionQueue.c: 492:         expeditedQueueBuf[index] = 0;
 32160   00A8F4  0EC4               	movlw	low _expeditedQueueBuf
 32161   00A8F6  258E               	addwf	deleteTwoActionQueue@index& (0+255),w,b
 32162   00A8F8  6ED9               	movwf	fsr2l,c
 32163   00A8FA  6ADA               	clrf	fsr2h,c
 32164   00A8FC  0E02               	movlw	high _expeditedQueueBuf
 32165   00A8FE  22DA               	addwfc	fsr2h,f,c
 32166   00A900  6ADF               	clrf	indf2,c
 32167   00A902  0012               	return	
 32168   00A904                     l21425:
 32169                           
 32170                           ; BSR set to: 0
 32171                           ;../event_consumerDualActionQueue.c: 495:     index -= qty;
 32172   00A904  518D               	movf	deleteTwoActionQueue@qty& (0+255),w,b
 32173   00A906  5F8E               	subwf	deleteTwoActionQueue@index& (0+255),f,b
 32174                           
 32175                           ;../event_consumerDualActionQueue.c: 496:     qty = (normalWriteIndex - normalReadIndex)
      +                           & (64 -1);
 32176   00A908  51CD               	movf	_normalReadIndex& (0+255),w,b
 32177   00A90A  5DCC               	subwf	_normalWriteIndex& (0+255),w,b
 32178   00A90C  0B3F               	andlw	63
 32179   00A90E  6F8D               	movwf	deleteTwoActionQueue@qty& (0+255),b
 32180                           
 32181                           ;../event_consumerDualActionQueue.c: 497:     if (index < qty) {
 32182   00A910  518D               	movf	deleteTwoActionQueue@qty& (0+255),w,b
 32183   00A912  5D8E               	subwf	deleteTwoActionQueue@index& (0+255),w,b
 32184   00A914  B0D8               	btfsc	status,0,c
 32185   00A916  0012               	return	
 32186                           
 32187                           ; BSR set to: 0
 32188                           ;../event_consumerDualActionQueue.c: 498:         if (normalReadIndex == normalWriteInde
      +                          x) return;
 32189   00A918  51CC               	movf	_normalWriteIndex& (0+255),w,b
 32190   00A91A  19CD               	xorwf	_normalReadIndex& (0+255),w,b
 32191   00A91C  B4D8               	btfsc	status,2,c
 32192   00A91E  0012               	return	
 32193                           
 32194                           ; BSR set to: 0
 32195                           ;../event_consumerDualActionQueue.c: 499:         index += normalReadIndex;
 32196   00A920  51CD               	movf	_normalReadIndex& (0+255),w,b
 32197   00A922  278E               	addwf	deleteTwoActionQueue@index& (0+255),f,b
 32198                           
 32199                           ;../event_consumerDualActionQueue.c: 500:         if (index >= 64) {
 32200   00A924  0E3F               	movlw	63
 32201   00A926  658E               	cpfsgt	deleteTwoActionQueue@index& (0+255),b
 32202   00A928  D002               	goto	l560
 32203                           
 32204                           ; BSR set to: 0
 32205                           ;../event_consumerDualActionQueue.c: 501:             index -= 64;
 32206   00A92A  0E40               	movlw	64
 32207   00A92C  5F8E               	subwf	deleteTwoActionQueue@index& (0+255),f,b
 32208   00A92E                     l560:
 32209                           
 32210                           ; BSR set to: 0
 32211                           ;../event_consumerDualActionQueue.c: 503:         if (index == normalWriteIndex) return;
 32212   00A92E  51CC               	movf	_normalWriteIndex& (0+255),w,b
 32213   00A930  198E               	xorwf	deleteTwoActionQueue@index& (0+255),w,b
 32214   00A932  B4D8               	btfsc	status,2,c
 32215   00A934  0012               	return	
 32216                           
 32217                           ; BSR set to: 0
 32218                           ;../event_consumerDualActionQueue.c: 504:         normalQueueBuf[index] = 0;
 32219   00A936  0E80               	movlw	low _normalQueueBuf
 32220   00A938  258E               	addwf	deleteTwoActionQueue@index& (0+255),w,b
 32221   00A93A  6ED9               	movwf	fsr2l,c
 32222   00A93C  6ADA               	clrf	fsr2h,c
 32223   00A93E  0E04               	movlw	high _normalQueueBuf
 32224   00A940  22DA               	addwfc	fsr2h,f,c
 32225   00A942  6ADF               	clrf	indf2,c
 32226                           
 32227                           ; BSR set to: 0
 32228   00A944  0012               	return		;funcret
 32229   00A946                     __end_of_deleteTwoActionQueue:
 32230                           	callstack 0
 32231                           
 32232 ;; *************** function _completed *****************
 32233 ;; Defined at:
 32234 ;;		line 219 in file "../outputs.c"
 32235 ;; Parameters:    Size  Location     Type
 32236 ;;  io              1    wreg     unsigned char 
 32237 ;;  action          1   45[BANK0 ] unsigned char 
 32238 ;;  type            1   46[BANK0 ] unsigned char 
 32239 ;; Auto vars:     Size  Location     Type
 32240 ;;  io              1   50[BANK0 ] unsigned char 
 32241 ;; Return value:  Size  Location     Type
 32242 ;;                  1    wreg      enum E12761
 32243 ;; Registers used:
 32244 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 32245 ;; Tracked objects:
 32246 ;;		On entry : 0/0
 32247 ;;		On exit  : 0/0
 32248 ;;		Unchanged: 0/0
 32249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32250 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32251 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32252 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32253 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32254 ;;Total ram usage:        6 bytes
 32255 ;; Hardware stack levels used: 1
 32256 ;; Hardware stack levels required when called: 12
 32257 ;; This function calls:
 32258 ;;		Nothing
 32259 ;; This function is called by:
 32260 ;;		_processActions
 32261 ;; This function uses a non-reentrant model
 32262 ;;
 32263                           
 32264                           	psect	text127
 32265   00A12C                     __ptext127:
 32266                           	callstack 0
 32267   00A12C                     _completed:
 32268                           	callstack 16
 32269                           
 32270                           ; BSR set to: 0
 32271                           ;incstack = 0
 32272                           ;completed@io stored from wreg
 32273   00A12C  0100               	movlb	0	; () banked
 32274   00A12E  6F92               	movwf	completed@io& (0+255),b
 32275                           
 32276                           ;../outputs.c: 220:     switch(type) {
 32277   00A130  D035               	goto	l21551
 32278   00A132                     l21529:
 32279                           
 32280                           ; BSR set to: 0
 32281                           ;../outputs.c: 223:             return TRUE;
 32282   00A132  0E01               	movlw	1
 32283   00A134  0012               	return	
 32284   00A136                     l21533:
 32285                           
 32286                           ; BSR set to: 0
 32287                           ;../outputs.c: 226:             return pulseDelays[io] == 1;
 32288   00A136  0EA4               	movlw	low _pulseDelays
 32289   00A138  2592               	addwf	completed@io& (0+255),w,b
 32290   00A13A  6ED9               	movwf	fsr2l,c
 32291   00A13C  6ADA               	clrf	fsr2h,c
 32292   00A13E  0E02               	movlw	high _pulseDelays
 32293   00A140  22DA               	addwfc	fsr2h,f,c
 32294   00A142  04DE               	decf	postinc2,w,c
 32295   00A144  A4D8               	btfss	status,2,c
 32296   00A146  D002               	goto	u22060
 32297   00A148  0E01               	movlw	1
 32298   00A14A  0012               	return	
 32299   00A14C                     u22060:
 32300   00A14C  0E00               	movlw	0
 32301   00A14E  0012               	return	
 32302   00A150                     l21537:
 32303                           
 32304                           ; BSR set to: 0
 32305                           ;../outputs.c: 235:             return (targetPos[io] == currentPos[io]) && ((servoState
      +                          [io] == SS_STOPPED) || (servoState[io] == SS_OFF));
 32306   00A150  0E00               	movlw	0
 32307   00A152  6F91               	movwf	_completed$1545& (0+255),b
 32308                           
 32309                           ; BSR set to: 0
 32310   00A154  5192               	movf	completed@io& (0+255),w,b
 32311   00A156  0FA9               	addlw	low _currentPos
 32312   00A158  6ED9               	movwf	fsr2l,c
 32313   00A15A  6ADA               	clrf	fsr2h,c
 32314   00A15C  0E20               	movlw	low _targetPos
 32315   00A15E  2592               	addwf	completed@io& (0+255),w,b
 32316   00A160  6EE1               	movwf	fsr1l,c
 32317   00A162  6AE2               	clrf	fsr1h,c
 32318   00A164  0E01               	movlw	high _targetPos
 32319   00A166  22E2               	addwfc	fsr1h,f,c
 32320   00A168  50DE               	movf	postinc2,w,c
 32321   00A16A  18E6               	xorwf	postinc1,w,c
 32322   00A16C  A4D8               	btfss	status,2,c
 32323   00A16E  D014               	goto	l916
 32324                           
 32325                           ; BSR set to: 0
 32326   00A170  0E10               	movlw	low _servoState
 32327   00A172  2592               	addwf	completed@io& (0+255),w,b
 32328   00A174  6ED9               	movwf	fsr2l,c
 32329   00A176  6ADA               	clrf	fsr2h,c
 32330   00A178  0E01               	movlw	high _servoState
 32331   00A17A  22DA               	addwfc	fsr2h,f,c
 32332   00A17C  04DE               	decf	postinc2,w,c
 32333   00A17E  B4D8               	btfsc	status,2,c
 32334   00A180  D009               	goto	u22100
 32335                           
 32336                           ; BSR set to: 0
 32337   00A182  0E10               	movlw	low _servoState
 32338   00A184  2592               	addwf	completed@io& (0+255),w,b
 32339   00A186  6ED9               	movwf	fsr2l,c
 32340   00A188  6ADA               	clrf	fsr2h,c
 32341   00A18A  0E01               	movlw	high _servoState
 32342   00A18C  22DA               	addwfc	fsr2h,f,c
 32343   00A18E  50DF               	movf	indf2,w,c
 32344   00A190  A4D8               	btfss	status,2,c
 32345   00A192  D002               	goto	l916
 32346   00A194                     u22100:
 32347                           
 32348                           ; BSR set to: 0
 32349   00A194  0E01               	movlw	1
 32350   00A196  6F91               	movwf	_completed$1545& (0+255),b
 32351   00A198                     l916:
 32352                           
 32353                           ; BSR set to: 0
 32354   00A198  5191               	movf	_completed$1545& (0+255),w,b
 32355   00A19A  0012               	return	
 32356   00A19C                     l21551:
 32357   00A19C  0100               	movlb	0	; () banked
 32358   00A19E  518E               	movf	completed@type& (0+255),w,b
 32359                           
 32360                           ; Switch size 1, requested type "simple"
 32361                           ; Number of cases is 5, Range of values is 0 to 4
 32362                           ; switch strategies available:
 32363                           ; Name         Instructions Cycles
 32364                           ; simple_byte           16     9 (average)
 32365                           ;	Chosen strategy is simple_byte
 32366   00A1A0  0A00               	xorlw	0	; case 0
 32367   00A1A2  B4D8               	btfsc	status,2,c
 32368   00A1A4  D7C6               	goto	l21529
 32369   00A1A6  0A01               	xorlw	1	; case 1
 32370   00A1A8  B4D8               	btfsc	status,2,c
 32371   00A1AA  D7C5               	goto	l21533
 32372   00A1AC  0A03               	xorlw	3	; case 2
 32373   00A1AE  B4D8               	btfsc	status,2,c
 32374   00A1B0  D7CF               	goto	l21537
 32375   00A1B2  0A01               	xorlw	1	; case 3
 32376   00A1B4  B4D8               	btfsc	status,2,c
 32377   00A1B6  D7CC               	goto	l21537
 32378   00A1B8  0A07               	xorlw	7	; case 4
 32379   00A1BA  B4D8               	btfsc	status,2,c
 32380   00A1BC  D7C9               	goto	l21537
 32381   00A1BE  D7B9               	goto	l21529
 32382   00A1C0                     __end_of_completed:
 32383                           	callstack 0
 32384                           
 32385 ;; *************** function _inputScan *****************
 32386 ;; Defined at:
 32387 ;;		line 101 in file "../inputs.c"
 32388 ;; Parameters:    Size  Location     Type
 32389 ;;		None
 32390 ;; Auto vars:     Size  Location     Type
 32391 ;;  change          1   20[BANK1 ] enum E12711
 32392 ;;  input           1   21[BANK1 ] unsigned char 
 32393 ;; Return value:  Size  Location     Type
 32394 ;;                  1    wreg      void 
 32395 ;; Registers used:
 32396 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32397 ;; Tracked objects:
 32398 ;;		On entry : 0/0
 32399 ;;		On exit  : 0/0
 32400 ;;		Unchanged: 0/0
 32401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32403 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32404 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32405 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32406 ;;Total ram usage:        4 bytes
 32407 ;; Hardware stack levels used: 1
 32408 ;; Hardware stack levels required when called: 18
 32409 ;; This function calls:
 32410 ;;		_getNV
 32411 ;;		_readInput
 32412 ;;		_sendProducedEvent
 32413 ;;		_writeNVM
 32414 ;; This function is called by:
 32415 ;;		_loop
 32416 ;; This function uses a non-reentrant model
 32417 ;;
 32418                           
 32419                           	psect	text128
 32420   004F86                     __ptext128:
 32421                           	callstack 0
 32422   004F86                     _inputScan:
 32423                           	callstack 11
 32424                           
 32425                           ;../inputs.c: 102:     for (io=0; io< 16; io++) {
 32426                           
 32427                           ; BSR set to: 0
 32428                           ;incstack = 0
 32429   004F86  0E00               	movlw	0
 32430   004F88  0100               	movlb	0	; () banked
 32431   004F8A  6FCE               	movwf	_io@inputs$F849& (0+255),b
 32432   004F8C                     l22805:
 32433                           
 32434                           ; BSR set to: 0
 32435   004F8C  0E0F               	movlw	15
 32436   004F8E  65CE               	cpfsgt	_io@inputs$F849& (0+255),b
 32437   004F90  D001               	goto	l22809
 32438   004F92  0012               	return	
 32439   004F94                     l22809:
 32440                           
 32441                           ; BSR set to: 0
 32442                           ;../inputs.c: 103:         if (getNV((16 + 7*(io) + 0)) == 0) {
 32443   004F94  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32444   004F96  0D07               	mullw	7
 32445   004F98  50F3               	movf	243,w,c
 32446   004F9A  0F10               	addlw	16
 32447   004F9C  EC52  F05E         	call	_getNV
 32448   004FA0  0100               	movlb	0	; () banked
 32449   004FA2  518D               	movf	?_getNV& (0+255),w,b
 32450   004FA4  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 32451   004FA6  A4D8               	btfss	status,2,c
 32452   004FA8  D151               	goto	l22871
 32453                           
 32454                           ; BSR set to: 0
 32455                           ;../inputs.c: 104:             uint8_t input = readInput(io);
 32456   004FAA  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32457   004FAC  ECB0  F03F         	call	_readInput
 32458   004FB0  0101               	movlb	1	; () banked
 32459   004FB2  6FCF               	movwf	inputScan@input& (0+255),b
 32460                           
 32461                           ; BSR set to: 1
 32462                           ;../inputs.c: 105:             if (input != inputState[io]) {
 32463   004FB4  0E94               	movlw	low _inputState
 32464   004FB6  0100               	movlb	0	; () banked
 32465   004FB8  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32466   004FBA  6ED9               	movwf	fsr2l,c
 32467   004FBC  6ADA               	clrf	fsr2h,c
 32468   004FBE  0E02               	movlw	high _inputState
 32469   004FC0  22DA               	addwfc	fsr2h,f,c
 32470   004FC2  0101               	movlb	1	; () banked
 32471   004FC4  51CF               	movf	inputScan@input& (0+255),w,b
 32472   004FC6  18DE               	xorwf	postinc2,w,c
 32473   004FC8  B4D8               	btfsc	status,2,c
 32474   004FCA  D138               	goto	l22869
 32475                           
 32476                           ; BSR set to: 1
 32477                           ;../inputs.c: 106:                 Boolean change = FALSE;
 32478   004FCC  0E00               	movlw	0
 32479   004FCE  6FCE               	movwf	inputScan@change& (0+255),b
 32480                           
 32481                           ; BSR set to: 1
 32482                           ;../inputs.c: 108:                 if (inputState[io] && (delayCount[io] == getNV((16 + 
      +                          7*(io) + 2)))) {
 32483   004FD0  0E94               	movlw	low _inputState
 32484   004FD2  0100               	movlb	0	; () banked
 32485   004FD4  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32486   004FD6  6ED9               	movwf	fsr2l,c
 32487   004FD8  6ADA               	clrf	fsr2h,c
 32488   004FDA  0E02               	movlw	high _inputState
 32489   004FDC  22DA               	addwfc	fsr2h,f,c
 32490   004FDE  50DF               	movf	indf2,w,c
 32491   004FE0  B4D8               	btfsc	status,2,c
 32492   004FE2  D01E               	goto	l22823
 32493                           
 32494                           ; BSR set to: 0
 32495   004FE4  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32496   004FE6  0D07               	mullw	7
 32497   004FE8  50F3               	movf	243,w,c
 32498   004FEA  0F12               	addlw	18
 32499   004FEC  EC52  F05E         	call	_getNV
 32500   004FF0  0E84               	movlw	low _delayCount
 32501   004FF2  0100               	movlb	0	; () banked
 32502   004FF4  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32503   004FF6  6ED9               	movwf	fsr2l,c
 32504   004FF8  6ADA               	clrf	fsr2h,c
 32505   004FFA  0E02               	movlw	high _delayCount
 32506   004FFC  22DA               	addwfc	fsr2h,f,c
 32507   004FFE  50DF               	movf	indf2,w,c
 32508   005000  0101               	movlb	1	; () banked
 32509   005002  6FCC               	movwf	??_inputScan& (0+255),b
 32510   005004  6BCD               	clrf	(??_inputScan+1)& (0+255),b
 32511   005006  0100               	movlb	0	; () banked
 32512   005008  518D               	movf	?_getNV& (0+255),w,b
 32513   00500A  0101               	movlb	1	; () banked
 32514   00500C  19CC               	xorwf	??_inputScan& (0+255),w,b
 32515   00500E  E108               	bnz	l22823
 32516   005010  0100               	movlb	0	; () banked
 32517   005012  518E               	movf	(?_getNV+1)& (0+255),w,b
 32518   005014  0101               	movlb	1	; () banked
 32519   005016  19CD               	xorwf	(??_inputScan+1)& (0+255),w,b
 32520   005018  A4D8               	btfss	status,2,c
 32521   00501A  D002               	goto	l22823
 32522                           
 32523                           ; BSR set to: 1
 32524                           ;../inputs.c: 109:                     change = TRUE;
 32525   00501C  0E01               	movlw	1
 32526   00501E  6FCE               	movwf	inputScan@change& (0+255),b
 32527   005020                     l22823:
 32528                           
 32529                           ;../inputs.c: 111:                 if (!inputState[io] && (delayCount[io] == getNV((16 +
      +                           7*(io) + 3)))) {
 32530   005020  0E94               	movlw	low _inputState
 32531   005022  0100               	movlb	0	; () banked
 32532   005024  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32533   005026  6ED9               	movwf	fsr2l,c
 32534   005028  6ADA               	clrf	fsr2h,c
 32535   00502A  0E02               	movlw	high _inputState
 32536   00502C  22DA               	addwfc	fsr2h,f,c
 32537   00502E  50DF               	movf	indf2,w,c
 32538   005030  A4D8               	btfss	status,2,c
 32539   005032  D01E               	goto	l352
 32540                           
 32541                           ; BSR set to: 0
 32542   005034  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32543   005036  0D07               	mullw	7
 32544   005038  50F3               	movf	243,w,c
 32545   00503A  0F13               	addlw	19
 32546   00503C  EC52  F05E         	call	_getNV
 32547   005040  0E84               	movlw	low _delayCount
 32548   005042  0100               	movlb	0	; () banked
 32549   005044  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32550   005046  6ED9               	movwf	fsr2l,c
 32551   005048  6ADA               	clrf	fsr2h,c
 32552   00504A  0E02               	movlw	high _delayCount
 32553   00504C  22DA               	addwfc	fsr2h,f,c
 32554   00504E  50DF               	movf	indf2,w,c
 32555   005050  0101               	movlb	1	; () banked
 32556   005052  6FCC               	movwf	??_inputScan& (0+255),b
 32557   005054  6BCD               	clrf	(??_inputScan+1)& (0+255),b
 32558   005056  0100               	movlb	0	; () banked
 32559   005058  518D               	movf	?_getNV& (0+255),w,b
 32560   00505A  0101               	movlb	1	; () banked
 32561   00505C  19CC               	xorwf	??_inputScan& (0+255),w,b
 32562   00505E  E108               	bnz	l352
 32563   005060  0100               	movlb	0	; () banked
 32564   005062  518E               	movf	(?_getNV+1)& (0+255),w,b
 32565   005064  0101               	movlb	1	; () banked
 32566   005066  19CD               	xorwf	(??_inputScan+1)& (0+255),w,b
 32567   005068  A4D8               	btfss	status,2,c
 32568   00506A  D002               	goto	l352
 32569                           
 32570                           ; BSR set to: 1
 32571                           ;../inputs.c: 112:                     change = TRUE;
 32572   00506C  0E01               	movlw	1
 32573   00506E  6FCE               	movwf	inputScan@change& (0+255),b
 32574   005070                     l352:
 32575                           
 32576                           ;../inputs.c: 114:                 if (change) {
 32577   005070  0101               	movlb	1	; () banked
 32578   005072  51CE               	movf	inputScan@change& (0+255),w,b
 32579   005074  B4D8               	btfsc	status,2,c
 32580   005076  D0D9               	goto	l22867
 32581                           
 32582                           ; BSR set to: 1
 32583                           ;../inputs.c: 116:                     delayCount[io] = 0;
 32584   005078  0E84               	movlw	low _delayCount
 32585   00507A  0100               	movlb	0	; () banked
 32586   00507C  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32587   00507E  6ED9               	movwf	fsr2l,c
 32588   005080  6ADA               	clrf	fsr2h,c
 32589   005082  0E02               	movlw	high _delayCount
 32590   005084  22DA               	addwfc	fsr2h,f,c
 32591   005086  6ADF               	clrf	indf2,c
 32592                           
 32593                           ;../inputs.c: 117:                     inputState[io] = input;
 32594   005088  0E94               	movlw	low _inputState
 32595   00508A  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32596   00508C  6ED9               	movwf	fsr2l,c
 32597   00508E  6ADA               	clrf	fsr2h,c
 32598   005090  0E02               	movlw	high _inputState
 32599   005092  22DA               	addwfc	fsr2h,f,c
 32600   005094  C1CF  FFDF         	movff	inputScan@input,indf2
 32601                           
 32602                           ; BSR set to: 0
 32603                           ;../inputs.c: 119:                     if (!(getNV((16 + 7*(io) + 1)) & 0x01)) {
 32604   005098  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32605   00509A  0D07               	mullw	7
 32606   00509C  50F3               	movf	243,w,c
 32607   00509E  0F11               	addlw	17
 32608   0050A0  EC52  F05E         	call	_getNV
 32609   0050A4  0100               	movlb	0	; () banked
 32610   0050A6  B18D               	btfsc	?_getNV& (0+255),0,b
 32611   0050A8  D008               	goto	l22835
 32612                           
 32613                           ; BSR set to: 0
 32614                           ;../inputs.c: 120:                         input = !input;
 32615   0050AA  0101               	movlb	1	; () banked
 32616   0050AC  51CF               	movf	inputScan@input& (0+255),w,b
 32617   0050AE  A4D8               	btfss	status,2,c
 32618   0050B0  D002               	goto	u24040
 32619   0050B2  0E01               	movlw	1
 32620   0050B4  D001               	goto	u24050
 32621   0050B6                     u24040:
 32622   0050B6  0E00               	movlw	0
 32623   0050B8                     u24050:
 32624   0050B8  6FCF               	movwf	inputScan@input& (0+255),b
 32625   0050BA                     l22835:
 32626                           
 32627                           ;../inputs.c: 123:                     if (getNV((16 + 7*(io) + 1)) & 0x10) {
 32628   0050BA  0100               	movlb	0	; () banked
 32629   0050BC  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32630   0050BE  0D07               	mullw	7
 32631   0050C0  50F3               	movf	243,w,c
 32632   0050C2  0F11               	addlw	17
 32633   0050C4  EC52  F05E         	call	_getNV
 32634   0050C8  0100               	movlb	0	; () banked
 32635   0050CA  A98D               	btfss	?_getNV& (0+255),4,b
 32636   0050CC  D031               	goto	l22843
 32637                           
 32638                           ; BSR set to: 0
 32639                           ;../inputs.c: 124:                         if (input) {
 32640   0050CE  0101               	movlb	1	; () banked
 32641   0050D0  51CF               	movf	inputScan@input& (0+255),w,b
 32642   0050D2  B4D8               	btfsc	status,2,c
 32643   0050D4  D0BB               	goto	l22871
 32644                           
 32645                           ; BSR set to: 1
 32646                           ;../inputs.c: 125:                             outputState[io] = ! outputState[io];
 32647   0050D6  0EB4               	movlw	low _outputState
 32648   0050D8  0100               	movlb	0	; () banked
 32649   0050DA  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32650   0050DC  6ED9               	movwf	fsr2l,c
 32651   0050DE  6ADA               	clrf	fsr2h,c
 32652   0050E0  0E02               	movlw	high _outputState
 32653   0050E2  22DA               	addwfc	fsr2h,f,c
 32654   0050E4  0EB4               	movlw	low _outputState
 32655   0050E6  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32656   0050E8  6EE1               	movwf	fsr1l,c
 32657   0050EA  6AE2               	clrf	fsr1h,c
 32658   0050EC  0E02               	movlw	high _outputState
 32659   0050EE  22E2               	addwfc	fsr1h,f,c
 32660   0050F0  50E7               	movf	indf1,w,c
 32661   0050F2  A4D8               	btfss	status,2,c
 32662   0050F4  D002               	goto	u24080
 32663   0050F6  0E01               	movlw	1
 32664   0050F8  D001               	goto	u24090
 32665   0050FA                     u24080:
 32666   0050FA  0E00               	movlw	0
 32667   0050FC                     u24090:
 32668   0050FC  6EDF               	movwf	indf2,c
 32669                           
 32670                           ; BSR set to: 0
 32671                           ;../inputs.c: 129:                         writeNVM(EEPROM_NVM_TYPE, ((eeprom_address_t)
      +                          ((0x3FF -8))-25)+io, outputState[io]);
 32672                           
 32673                           ;../inputs.c: 126:                         } else {
 32674   0050FE  0EDE               	movlw	222
 32675   005100  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32676   005102  0101               	movlb	1	; () banked
 32677   005104  6FCC               	movwf	??_inputScan& (0+255),b
 32678   005106  6BCD               	clrf	(??_inputScan+1)& (0+255),b
 32679   005108  0E03               	movlw	3
 32680   00510A  23CD               	addwfc	(??_inputScan+1)& (0+255),f,b
 32681   00510C  C1CC  F0A4         	movff	??_inputScan,writeNVM@index
 32682   005110  C1CD  F0A5         	movff	??_inputScan+1,writeNVM@index+1
 32683   005114  0100               	movlb	0	; () banked
 32684   005116  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 32685   005118  0EB4               	movlw	low _outputState
 32686   00511A  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32687   00511C  6ED9               	movwf	fsr2l,c
 32688   00511E  6ADA               	clrf	fsr2h,c
 32689   005120  0E02               	movlw	high _outputState
 32690   005122  22DA               	addwfc	fsr2h,f,c
 32691   005124  50DF               	movf	indf2,w,c
 32692   005126  6FA7               	movwf	writeNVM@value& (0+255),b
 32693   005128  0E00               	movlw	0
 32694   00512A  EC60  F05C         	call	_writeNVM
 32695                           
 32696                           ;../inputs.c: 130:                      } else {
 32697   00512E  D008               	goto	l22845
 32698   005130                     l22843:
 32699                           
 32700                           ; BSR set to: 0
 32701                           ;../inputs.c: 131:                         outputState[io] = input;
 32702   005130  0EB4               	movlw	low _outputState
 32703   005132  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32704   005134  6ED9               	movwf	fsr2l,c
 32705   005136  6ADA               	clrf	fsr2h,c
 32706   005138  0E02               	movlw	high _outputState
 32707   00513A  22DA               	addwfc	fsr2h,f,c
 32708   00513C  C1CF  FFDF         	movff	inputScan@input,indf2
 32709   005140                     l22845:
 32710                           
 32711                           ;../inputs.c: 135:                     if (getNV((16 + 7*(io) + 1)) & 0x08) {
 32712   005140  0100               	movlb	0	; () banked
 32713   005142  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32714   005144  0D07               	mullw	7
 32715   005146  50F3               	movf	243,w,c
 32716   005148  0F11               	addlw	17
 32717   00514A  EC52  F05E         	call	_getNV
 32718   00514E  0100               	movlb	0	; () banked
 32719   005150  A78D               	btfss	?_getNV& (0+255),3,b
 32720   005152  D03F               	goto	l22861
 32721                           
 32722                           ; BSR set to: 0
 32723                           ;../inputs.c: 136:                         if (outputState[io]) {
 32724   005154  0EB4               	movlw	low _outputState
 32725   005156  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32726   005158  6ED9               	movwf	fsr2l,c
 32727   00515A  6ADA               	clrf	fsr2h,c
 32728   00515C  0E02               	movlw	high _outputState
 32729   00515E  22DA               	addwfc	fsr2h,f,c
 32730   005160  50DF               	movf	indf2,w,c
 32731   005162  B4D8               	btfsc	status,2,c
 32732   005164  D01B               	goto	l22855
 32733                           
 32734                           ; BSR set to: 0
 32735                           ;../inputs.c: 139:                             if (getNV((16 + 7*(io) + 1)) & 0x40) {
 32736   005166  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32737   005168  0D07               	mullw	7
 32738   00516A  50F3               	movf	243,w,c
 32739   00516C  0F11               	addlw	17
 32740   00516E  EC52  F05E         	call	_getNV
 32741   005172  0100               	movlb	0	; () banked
 32742   005174  AD8D               	btfss	?_getNV& (0+255),6,b
 32743   005176  D009               	goto	l22853
 32744                           
 32745                           ; BSR set to: 0
 32746                           ;../inputs.c: 140:                                 sendProducedEvent(((8 + 4*(io))+0), E
      +                          VENT_OFF);
 32747   005178  0E00               	movlw	0
 32748   00517A  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 32749   00517C  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32750   00517E  0D04               	mullw	4
 32751   005180  50F3               	movf	243,w,c
 32752   005182  0F08               	addlw	8
 32753   005184  EC3B  F04B         	call	_sendProducedEvent
 32754                           
 32755                           ;../inputs.c: 141:                             } else {
 32756   005188  D061               	goto	l22871
 32757   00518A                     l22853:
 32758                           
 32759                           ; BSR set to: 0
 32760                           ;../inputs.c: 142:                                 sendProducedEvent(((8 + 4*(io))+0), E
      +                          VENT_ON);
 32761   00518A  0E01               	movlw	1
 32762   00518C  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 32763   00518E  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32764   005190  0D04               	mullw	4
 32765   005192  50F3               	movf	243,w,c
 32766   005194  0F08               	addlw	8
 32767   005196  EC3B  F04B         	call	_sendProducedEvent
 32768   00519A  D058               	goto	l22871
 32769   00519C                     l22855:
 32770                           
 32771                           ; BSR set to: 0
 32772                           ;../inputs.c: 145:                             if (getNV((16 + 7*(io) + 1)) & 0x40) {
 32773   00519C  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32774   00519E  0D07               	mullw	7
 32775   0051A0  50F3               	movf	243,w,c
 32776   0051A2  0F11               	addlw	17
 32777   0051A4  EC52  F05E         	call	_getNV
 32778   0051A8  0100               	movlb	0	; () banked
 32779   0051AA  AD8D               	btfss	?_getNV& (0+255),6,b
 32780   0051AC  D009               	goto	l22859
 32781                           
 32782                           ; BSR set to: 0
 32783                           ;../inputs.c: 146:                                 sendProducedEvent(((8 + 4*(io))+1), E
      +                          VENT_OFF);
 32784   0051AE  0E00               	movlw	0
 32785   0051B0  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 32786   0051B2  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32787   0051B4  0D04               	mullw	4
 32788   0051B6  50F3               	movf	243,w,c
 32789   0051B8  0F09               	addlw	9
 32790   0051BA  EC3B  F04B         	call	_sendProducedEvent
 32791                           
 32792                           ;../inputs.c: 147:                             } else {
 32793   0051BE  D046               	goto	l22871
 32794   0051C0                     l22859:
 32795                           
 32796                           ; BSR set to: 0
 32797                           ;../inputs.c: 148:                                 sendProducedEvent(((8 + 4*(io))+1), E
      +                          VENT_ON);
 32798   0051C0  0E01               	movlw	1
 32799   0051C2  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 32800   0051C4  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32801   0051C6  0D04               	mullw	4
 32802   0051C8  50F3               	movf	243,w,c
 32803   0051CA  0F09               	addlw	9
 32804   0051CC  EC3B  F04B         	call	_sendProducedEvent
 32805   0051D0  D03D               	goto	l22871
 32806   0051D2                     l22861:
 32807                           
 32808                           ; BSR set to: 0
 32809                           ;../inputs.c: 153:                         if (getNV((16 + 7*(io) + 1)) & 0x40) {
 32810   0051D2  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32811   0051D4  0D07               	mullw	7
 32812   0051D6  50F3               	movf	243,w,c
 32813   0051D8  0F11               	addlw	17
 32814   0051DA  EC52  F05E         	call	_getNV
 32815   0051DE  0100               	movlb	0	; () banked
 32816   0051E0  AD8D               	btfss	?_getNV& (0+255),6,b
 32817   0051E2  D014               	goto	l22865
 32818                           
 32819                           ; BSR set to: 0
 32820                           ;../inputs.c: 154:                             sendProducedEvent(((8 + 4*(io))+0), !outp
      +                          utState[io]);
 32821   0051E4  0EB4               	movlw	low _outputState
 32822   0051E6  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32823   0051E8  6ED9               	movwf	fsr2l,c
 32824   0051EA  6ADA               	clrf	fsr2h,c
 32825   0051EC  0E02               	movlw	high _outputState
 32826   0051EE  22DA               	addwfc	fsr2h,f,c
 32827   0051F0  50DF               	movf	indf2,w,c
 32828   0051F2  A4D8               	btfss	status,2,c
 32829   0051F4  D002               	goto	u24150
 32830   0051F6  0E01               	movlw	1
 32831   0051F8  D001               	goto	u24160
 32832   0051FA                     u24150:
 32833   0051FA  0E00               	movlw	0
 32834   0051FC                     u24160:
 32835   0051FC  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 32836   0051FE  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32837   005200  0D04               	mullw	4
 32838   005202  50F3               	movf	243,w,c
 32839   005204  0F08               	addlw	8
 32840   005206  EC3B  F04B         	call	_sendProducedEvent
 32841                           
 32842                           ;../inputs.c: 155:                         } else {
 32843   00520A  D020               	goto	l22871
 32844   00520C                     l22865:
 32845                           
 32846                           ; BSR set to: 0
 32847                           ;../inputs.c: 156:                             sendProducedEvent(((8 + 4*(io))+0), outpu
      +                          tState[io]);
 32848   00520C  0EB4               	movlw	low _outputState
 32849   00520E  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32850   005210  6ED9               	movwf	fsr2l,c
 32851   005212  6ADA               	clrf	fsr2h,c
 32852   005214  0E02               	movlw	high _outputState
 32853   005216  22DA               	addwfc	fsr2h,f,c
 32854   005218  50DF               	movf	indf2,w,c
 32855   00521A  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 32856   00521C  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32857   00521E  0D04               	mullw	4
 32858   005220  50F3               	movf	243,w,c
 32859   005222  0F08               	addlw	8
 32860   005224  EC3B  F04B         	call	_sendProducedEvent
 32861   005228  D011               	goto	l22871
 32862   00522A                     l22867:
 32863                           
 32864                           ; BSR set to: 1
 32865                           ;../inputs.c: 160:                     delayCount[io]++;
 32866   00522A  0E84               	movlw	low _delayCount
 32867   00522C  0100               	movlb	0	; () banked
 32868   00522E  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32869   005230  6ED9               	movwf	fsr2l,c
 32870   005232  6ADA               	clrf	fsr2h,c
 32871   005234  0E02               	movlw	high _delayCount
 32872   005236  22DA               	addwfc	fsr2h,f,c
 32873   005238  2ADF               	incf	indf2,f,c
 32874   00523A  D008               	goto	l22871
 32875   00523C                     l22869:
 32876                           
 32877                           ; BSR set to: 1
 32878                           ;../inputs.c: 163:                 delayCount[io] = 0;
 32879   00523C  0E84               	movlw	low _delayCount
 32880   00523E  0100               	movlb	0	; () banked
 32881   005240  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32882   005242  6ED9               	movwf	fsr2l,c
 32883   005244  6ADA               	clrf	fsr2h,c
 32884   005246  0E02               	movlw	high _delayCount
 32885   005248  22DA               	addwfc	fsr2h,f,c
 32886   00524A  6ADF               	clrf	indf2,c
 32887   00524C                     l22871:
 32888   00524C  0100               	movlb	0	; () banked
 32889   00524E  2BCE               	incf	_io@inputs$F849& (0+255),f,b
 32890   005250  D69D               	goto	l22805
 32891   005252                     __end_of_inputScan:
 32892                           	callstack 0
 32893                           
 32894 ;; *************** function _sendProducedEvent *****************
 32895 ;; Defined at:
 32896 ;;		line 217 in file "../../VLCBlib_PIC/event_producer_happening.c"
 32897 ;; Parameters:    Size  Location     Type
 32898 ;;  happening       1    wreg     unsigned char 
 32899 ;;  onOff           1   71[BANK0 ] enum E12730
 32900 ;; Auto vars:     Size  Location     Type
 32901 ;;  happening       1   17[BANK1 ] unsigned char 
 32902 ;;  producedEven    2   15[BANK1 ] struct Word
 32903 ;;  producedEven    2   13[BANK1 ] struct Word
 32904 ;;  opc             1   12[BANK1 ] unsigned char 
 32905 ;; Return value:  Size  Location     Type
 32906 ;;                  1    wreg      enum E12710
 32907 ;; Registers used:
 32908 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32909 ;; Tracked objects:
 32910 ;;		On entry : 0/0
 32911 ;;		On exit  : 0/0
 32912 ;;		Unchanged: 0/0
 32913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32914 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32915 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32916 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32917 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32918 ;;Total ram usage:        8 bytes
 32919 ;; Hardware stack levels used: 1
 32920 ;; Hardware stack levels required when called: 17
 32921 ;; This function calls:
 32922 ;;		_getEN
 32923 ;;		_getNN
 32924 ;;		_sendMessage4
 32925 ;; This function is called by:
 32926 ;;		_loop
 32927 ;;		_processOutputs
 32928 ;;		_inputScan
 32929 ;;		_sendInvertedProducedEvent
 32930 ;;		_pollServos
 32931 ;;		_alwaysSendInvertedProducedEvent
 32932 ;; This function uses a non-reentrant model
 32933 ;;
 32934                           
 32935                           	psect	text129
 32936   009676                     __ptext129:
 32937                           	callstack 0
 32938   009676                     _sendProducedEvent:
 32939                           	callstack 9
 32940                           
 32941                           ; BSR set to: 0
 32942                           ;incstack = 0
 32943                           ;sendProducedEvent@happening stored from wreg
 32944   009676  0101               	movlb	1	; () banked
 32945   009678  6FCB               	movwf	sendProducedEvent@happening& (0+255),b
 32946                           
 32947                           ;../../VLCBlib_PIC/event_producer_happening.c: 218:     Word producedEventNN;;../../VLCB
      +                          lib_PIC/event_producer_happening.c: 219:     Word producedEventEN;;../../VLCBlib_PIC/eve
      +                          nt_producer_happening.c: 220:     uint8_t opc;;../../VLCBlib_PIC/event_producer_happenin
      +                          g.c: 226:     if ((happening < 1) || (happening > (7+16*4))) return FALSE;
 32948   00967A  0101               	movlb	1	; () banked
 32949   00967C  51CB               	movf	sendProducedEvent@happening& (0+255),w,b
 32950   00967E  B4D8               	btfsc	status,2,c
 32951   009680  D003               	goto	u19770
 32952                           
 32953                           ; BSR set to: 1
 32954   009682  0E47               	movlw	71
 32955   009684  65CB               	cpfsgt	sendProducedEvent@happening& (0+255),b
 32956   009686  D002               	goto	l19769
 32957   009688                     u19770:
 32958                           
 32959                           ; BSR set to: 1
 32960   009688  0E00               	movlw	0
 32961   00968A  0012               	return	
 32962   00968C                     l19769:
 32963                           
 32964                           ; BSR set to: 1
 32965                           ;../../VLCBlib_PIC/event_producer_happening.c: 227:     if (happening2Event[happening-1]
      +                           == 0xff) return FALSE;
 32966   00968C  0EFF               	movlw	low (_happening2Event+65535)
 32967   00968E  25CB               	addwf	sendProducedEvent@happening& (0+255),w,b
 32968   009690  6ED9               	movwf	fsr2l,c
 32969   009692  6ADA               	clrf	fsr2h,c
 32970   009694  0E02               	movlw	high (_happening2Event+65535)
 32971   009696  22DA               	addwfc	fsr2h,f,c
 32972   009698  28DE               	incf	postinc2,w,c
 32973   00969A  B4D8               	btfsc	status,2,c
 32974   00969C  D7F5               	goto	u19770
 32975                           
 32976                           ; BSR set to: 1
 32977                           ;../../VLCBlib_PIC/event_producer_happening.c: 228:     producedEventNN.word = getNN(hap
      +                          pening2Event[happening-1]);
 32978   00969E  0EFF               	movlw	low (_happening2Event+65535)
 32979   0096A0  25CB               	addwf	sendProducedEvent@happening& (0+255),w,b
 32980   0096A2  6ED9               	movwf	fsr2l,c
 32981   0096A4  6ADA               	clrf	fsr2h,c
 32982   0096A6  0E02               	movlw	high (_happening2Event+65535)
 32983   0096A8  22DA               	addwfc	fsr2h,f,c
 32984   0096AA  50DF               	movf	indf2,w,c
 32985   0096AC  ECBF  F049         	call	_getNN
 32986   0096B0  C097  F1C9         	movff	?_getNN,sendProducedEvent@producedEventNN
 32987   0096B4  C098  F1CA         	movff	?_getNN+1,sendProducedEvent@producedEventNN+1
 32988                           
 32989                           ;../../VLCBlib_PIC/event_producer_happening.c: 229:     producedEventEN.word = getEN(hap
      +                          pening2Event[happening-1]);
 32990   0096B8  0EFF               	movlw	low (_happening2Event+65535)
 32991   0096BA  0101               	movlb	1	; () banked
 32992   0096BC  25CB               	addwf	sendProducedEvent@happening& (0+255),w,b
 32993   0096BE  6ED9               	movwf	fsr2l,c
 32994   0096C0  6ADA               	clrf	fsr2h,c
 32995   0096C2  0E02               	movlw	high (_happening2Event+65535)
 32996   0096C4  22DA               	addwfc	fsr2h,f,c
 32997   0096C6  50DF               	movf	indf2,w,c
 32998   0096C8  EC9B  F055         	call	_getEN
 32999   0096CC  C097  F1C7         	movff	?_getEN,sendProducedEvent@producedEventEN
 33000   0096D0  C098  F1C8         	movff	?_getEN+1,sendProducedEvent@producedEventEN+1
 33001                           
 33002                           ;../../VLCBlib_PIC/event_producer_happening.c: 253:                 if (producedEventNN.
      +                          word == 0) {
 33003   0096D4  0101               	movlb	1	; () banked
 33004   0096D6  51C9               	movf	sendProducedEvent@producedEventNN& (0+255),w,b
 33005   0096D8  11CA               	iorwf	(sendProducedEvent@producedEventNN+1)& (0+255),w,b
 33006   0096DA  A4D8               	btfss	status,2,c
 33007   0096DC  D00E               	goto	l19787
 33008                           
 33009                           ; BSR set to: 1
 33010                           ;../../VLCBlib_PIC/event_producer_happening.c: 255:                     if (onOff == EVE
      +                          NT_ON) {
 33011   0096DE  0100               	movlb	0	; () banked
 33012   0096E0  05A7               	decf	sendProducedEvent@onOff& (0+255),w,b
 33013   0096E2  A4D8               	btfss	status,2,c
 33014   0096E4  D002               	goto	l19783
 33015                           
 33016                           ; BSR set to: 0
 33017                           ;../../VLCBlib_PIC/event_producer_happening.c: 256:                         opc = OPC_AS
      +                          ON;
 33018   0096E6  0E98               	movlw	152
 33019   0096E8  D001               	goto	L14
 33020   0096EA                     l19783:
 33021                           
 33022                           ; BSR set to: 0
 33023                           ;../../VLCBlib_PIC/event_producer_happening.c: 258:                         opc = OPC_AS
      +                          OF;
 33024   0096EA  0E99               	movlw	153
 33025   0096EC                     L14:
 33026   0096EC  0101               	movlb	1	; () banked
 33027   0096EE  6FC6               	movwf	sendProducedEvent@opc& (0+255),b
 33028                           
 33029                           ; BSR set to: 1
 33030                           ;../../VLCBlib_PIC/event_producer_happening.c: 260:                     producedEventNN.
      +                          word = nn.word;
 33031   0096F0  C0BD  F1C9         	movff	_nn,sendProducedEvent@producedEventNN
 33032   0096F4  C0BE  F1CA         	movff	_nn+1,sendProducedEvent@producedEventNN+1
 33033                           
 33034                           ;../../VLCBlib_PIC/event_producer_happening.c: 261:                 } else {
 33035   0096F8  D009               	goto	l19793
 33036   0096FA                     l19787:
 33037                           
 33038                           ; BSR set to: 1
 33039                           ;../../VLCBlib_PIC/event_producer_happening.c: 263:                     if (onOff == EVE
      +                          NT_ON) {
 33040   0096FA  0100               	movlb	0	; () banked
 33041   0096FC  05A7               	decf	sendProducedEvent@onOff& (0+255),w,b
 33042   0096FE  A4D8               	btfss	status,2,c
 33043   009700  D002               	goto	l19791
 33044                           
 33045                           ; BSR set to: 0
 33046                           ;../../VLCBlib_PIC/event_producer_happening.c: 264:                         opc = OPC_AC
      +                          ON;
 33047   009702  0E90               	movlw	144
 33048   009704  D001               	goto	L15
 33049   009706                     l19791:
 33050                           
 33051                           ; BSR set to: 0
 33052                           ;../../VLCBlib_PIC/event_producer_happening.c: 266:                         opc = OPC_AC
      +                          OF;
 33053   009706  0E91               	movlw	145
 33054   009708                     L15:
 33055   009708  0101               	movlb	1	; () banked
 33056   00970A  6FC6               	movwf	sendProducedEvent@opc& (0+255),b
 33057   00970C                     l19793:
 33058                           
 33059                           ; BSR set to: 1
 33060                           ;../../VLCBlib_PIC/event_producer_happening.c: 269:                 sendMessage4(opc, pr
      +                          oducedEventNN.bytes.hi, producedEventNN.bytes.lo, producedEventEN.bytes.hi, producedEven
      +                          tEN.bytes.lo);
 33061   00970C  C1CA  F1C2         	movff	sendProducedEvent@producedEventNN+1,sendMessage4@data1
 33062   009710  C1C9  F1C3         	movff	sendProducedEvent@producedEventNN,sendMessage4@data2
 33063   009714  C1C8  F1C4         	movff	sendProducedEvent@producedEventEN+1,sendMessage4@data3
 33064   009718  C1C7  F1C5         	movff	sendProducedEvent@producedEventEN,sendMessage4@data4
 33065   00971C  51C6               	movf	sendProducedEvent@opc& (0+255),w,b
 33066   00971E  ECF9  F05F         	call	_sendMessage4
 33067                           
 33068                           ;../../VLCBlib_PIC/event_producer_happening.c: 271:                 producerDiagnostics[
      +                          1].asUint++;
 33069   009722  0101               	movlb	1	; () banked
 33070   009724  4BAC               	infsnz	(_producerDiagnostics+2)& (0+255),f,b
 33071   009726  2BAD               	incf	(_producerDiagnostics+3)& (0+255),f,b
 33072                           
 33073                           ; BSR set to: 1
 33074                           ;../../VLCBlib_PIC/event_producer_happening.c: 273:                 return TRUE;
 33075   009728  0E01               	movlw	1
 33076                           
 33077                           ; BSR set to: 1
 33078   00972A  0012               	return		;funcret
 33079   00972C                     __end_of_sendProducedEvent:
 33080                           	callstack 0
 33081                           
 33082 ;; *************** function _sendMessage4 *****************
 33083 ;; Defined at:
 33084 ;;		line 1168 in file "../../VLCBlib_PIC/vlcb.c"
 33085 ;; Parameters:    Size  Location     Type
 33086 ;;  opc             1    wreg     enum E12392
 33087 ;;  data1           1    8[BANK1 ] unsigned char 
 33088 ;;  data2           1    9[BANK1 ] unsigned char 
 33089 ;;  data3           1   10[BANK1 ] unsigned char 
 33090 ;;  data4           1   11[BANK1 ] unsigned char 
 33091 ;; Auto vars:     Size  Location     Type
 33092 ;;  opc             1   70[BANK0 ] enum E12392
 33093 ;; Return value:  Size  Location     Type
 33094 ;;                  1    wreg      void 
 33095 ;; Registers used:
 33096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 33097 ;; Tracked objects:
 33098 ;;		On entry : 0/0
 33099 ;;		On exit  : 0/0
 33100 ;;		Unchanged: 0/0
 33101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33102 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33103 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33105 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33106 ;;Total ram usage:        5 bytes
 33107 ;; Hardware stack levels used: 1
 33108 ;; Hardware stack levels required when called: 16
 33109 ;; This function calls:
 33110 ;;		_sendMessage
 33111 ;; This function is called by:
 33112 ;;		_mnsProcessMessage
 33113 ;;		_mnsTRrqnpnCallback
 33114 ;;		_nvProcessMessage
 33115 ;;		_nvTRnvrdCallback
 33116 ;;		_producerProcessMessage
 33117 ;;		_sendProducedEvent
 33118 ;; This function uses a non-reentrant model
 33119 ;;
 33120                           
 33121                           	psect	text130
 33122   00BFF2                     __ptext130:
 33123                           	callstack 0
 33124   00BFF2                     _sendMessage4:
 33125                           	callstack 12
 33126                           
 33127                           ; BSR set to: 1
 33128                           ;incstack = 0
 33129                           ;sendMessage4@opc stored from wreg
 33130   00BFF2  0100               	movlb	0	; () banked
 33131   00BFF4  6FA6               	movwf	sendMessage4@opc& (0+255),b
 33132                           
 33133                           ;../../VLCBlib_PIC/vlcb.c: 1169:     sendMessage(opc, 5, data1, data2, data3, data4, 0,0
      +                          ,0);
 33134   00BFF6  0E05               	movlw	5
 33135   00BFF8  0101               	movlb	1	; () banked
 33136   00BFFA  6FBA               	movwf	sendMessage@len& (0+255),b
 33137   00BFFC  C1C2  F1BB         	movff	sendMessage4@data1,sendMessage@data1
 33138   00C000  C1C3  F1BC         	movff	sendMessage4@data2,sendMessage@data2
 33139   00C004  C1C4  F1BD         	movff	sendMessage4@data3,sendMessage@data3
 33140   00C008  C1C5  F1BE         	movff	sendMessage4@data4,sendMessage@data4
 33141   00C00C  0E00               	movlw	0
 33142   00C00E  6FBF               	movwf	sendMessage@data5& (0+255),b
 33143   00C010  0E00               	movlw	0
 33144   00C012  6FC0               	movwf	sendMessage@data6& (0+255),b
 33145   00C014  0E00               	movlw	0
 33146   00C016  6FC1               	movwf	sendMessage@data7& (0+255),b
 33147   00C018  0100               	movlb	0	; () banked
 33148   00C01A  51A6               	movf	sendMessage4@opc& (0+255),w,b
 33149   00C01C  ECA3  F054         	call	_sendMessage
 33150   00C020  0012               	return		;funcret
 33151   00C022                     __end_of_sendMessage4:
 33152                           	callstack 0
 33153                           
 33154 ;; *************** function _sendMessage *****************
 33155 ;; Defined at:
 33156 ;;		line 1226 in file "../../VLCBlib_PIC/vlcb.c"
 33157 ;; Parameters:    Size  Location     Type
 33158 ;;  opc             1    wreg     enum E12392
 33159 ;;  len             1    0[BANK1 ] unsigned char 
 33160 ;;  data1           1    1[BANK1 ] unsigned char 
 33161 ;;  data2           1    2[BANK1 ] unsigned char 
 33162 ;;  data3           1    3[BANK1 ] unsigned char 
 33163 ;;  data4           1    4[BANK1 ] unsigned char 
 33164 ;;  data5           1    5[BANK1 ] unsigned char 
 33165 ;;  data6           1    6[BANK1 ] unsigned char 
 33166 ;;  data7           1    7[BANK1 ] unsigned char 
 33167 ;; Auto vars:     Size  Location     Type
 33168 ;;  opc             1   69[BANK0 ] enum E12392
 33169 ;; Return value:  Size  Location     Type
 33170 ;;                  1    wreg      void 
 33171 ;; Registers used:
 33172 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 33173 ;; Tracked objects:
 33174 ;;		On entry : 0/0
 33175 ;;		On exit  : 0/0
 33176 ;;		Unchanged: 0/0
 33177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33178 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33179 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33180 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33181 ;;      Totals:         0       3       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33182 ;;Total ram usage:       11 bytes
 33183 ;; Hardware stack levels used: 1
 33184 ;; Hardware stack levels required when called: 15
 33185 ;; This function calls:
 33186 ;;		_canSendMessage
 33187 ;; This function is called by:
 33188 ;;		_sendMessage2
 33189 ;;		_sendMessage3
 33190 ;;		_sendMessage4
 33191 ;;		_sendMessage5
 33192 ;;		_sendMessage6
 33193 ;;		_sendMessage7
 33194 ;;		_sendMessage0
 33195 ;;		_sendMessage1
 33196 ;; This function uses a non-reentrant model
 33197 ;;
 33198                           
 33199                           	psect	text131
 33200   00A946                     __ptext131:
 33201                           	callstack 0
 33202   00A946                     _sendMessage:
 33203                           	callstack 11
 33204                           
 33205                           ;incstack = 0
 33206                           ;sendMessage@opc stored from wreg
 33207   00A946  0100               	movlb	0	; () banked
 33208   00A948  6FA5               	movwf	sendMessage@opc& (0+255),b
 33209                           
 33210                           ;../../VLCBlib_PIC/vlcb.c: 1227:     tmpMessage.opc = opc;
 33211   00A94A  C0A5  F19C         	movff	sendMessage@opc,_tmpMessage+1
 33212                           
 33213                           ;../../VLCBlib_PIC/vlcb.c: 1228:     tmpMessage.len = len;
 33214   00A94E  C1BA  F19B         	movff	sendMessage@len,_tmpMessage
 33215                           
 33216                           ;../../VLCBlib_PIC/vlcb.c: 1229:     tmpMessage.bytes[0] = data1;
 33217   00A952  C1BB  F19D         	movff	sendMessage@data1,_tmpMessage+2
 33218                           
 33219                           ;../../VLCBlib_PIC/vlcb.c: 1230:     tmpMessage.bytes[1] = data2;
 33220   00A956  C1BC  F19E         	movff	sendMessage@data2,_tmpMessage+3
 33221                           
 33222                           ;../../VLCBlib_PIC/vlcb.c: 1231:     tmpMessage.bytes[2] = data3;
 33223   00A95A  C1BD  F19F         	movff	sendMessage@data3,_tmpMessage+4
 33224                           
 33225                           ;../../VLCBlib_PIC/vlcb.c: 1232:     tmpMessage.bytes[3] = data4;
 33226   00A95E  C1BE  F1A0         	movff	sendMessage@data4,_tmpMessage+5
 33227                           
 33228                           ;../../VLCBlib_PIC/vlcb.c: 1233:     tmpMessage.bytes[4] = data5;
 33229   00A962  C1BF  F1A1         	movff	sendMessage@data5,_tmpMessage+6
 33230                           
 33231                           ;../../VLCBlib_PIC/vlcb.c: 1234:     tmpMessage.bytes[5] = data6;
 33232   00A966  C1C0  F1A2         	movff	sendMessage@data6,_tmpMessage+7
 33233                           
 33234                           ;../../VLCBlib_PIC/vlcb.c: 1235:     tmpMessage.bytes[6] = data7;
 33235   00A96A  C1C1  F1A3         	movff	sendMessage@data7,_tmpMessage+8
 33236                           
 33237                           ;../../VLCBlib_PIC/vlcb.c: 1236:     if (transport != ((void*)0)) {
 33238   00A96E  0101               	movlb	1	; () banked
 33239   00A970  5162               	movf	_transport& (0+255),w,b
 33240   00A972  1163               	iorwf	(_transport+1)& (0+255),w,b
 33241   00A974  B4D8               	btfsc	status,2,c
 33242   00A976  0012               	return	
 33243                           
 33244                           ; BSR set to: 1
 33245                           ;../../VLCBlib_PIC/vlcb.c: 1237:         if (transport->sendMessage != ((void*)0)) {
 33246   00A978  C162  FFF6         	movff	_transport,tblptrl
 33247   00A97C  C163  FFF7         	movff	_transport+1,tblptrh
 33248   00A980                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 33249   00A980  6AF8               	clrf	tblptru,c
 33250   00A982                     	endif
 33251   00A982                     	if	0	;tblptru may be non-zero
 33252   00A982                     	endif
 33253   00A982  0009               	tblrd		*+
 33254   00A984  50F5               	movf	tablat,w,c
 33255   00A986  0009               	tblrd		*+
 33256   00A988  10F5               	iorwf	tablat,w,c
 33257   00A98A  B4D8               	btfsc	status,2,c
 33258   00A98C  0012               	return	
 33259                           
 33260                           ; BSR set to: 1
 33261                           ;../../VLCBlib_PIC/vlcb.c: 1238:             transport->sendMessage(&tmpMessage);
 33262   00A98E  0E9B               	movlw	low _tmpMessage
 33263   00A990  0100               	movlb	0	; () banked
 33264   00A992  6F99               	movwf	canSendMessage@mp& (0+255),b
 33265   00A994  0E01               	movlw	high _tmpMessage
 33266   00A996  6F9A               	movwf	(canSendMessage@mp+1)& (0+255),b
 33267   00A998  C162  FFF6         	movff	_transport,tblptrl
 33268   00A99C  C163  FFF7         	movff	_transport+1,tblptrh
 33269   00A9A0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 33270   00A9A0  6AF8               	clrf	tblptru,c
 33271   00A9A2                     	endif
 33272   00A9A2                     	if	0	;tblptru may be non-zero
 33273   00A9A2                     	endif
 33274   00A9A2  0009               	tblrd		*+
 33275   00A9A4  CFF5 F0A3          	movff	tablat,??_sendMessage
 33276   00A9A8  0009               	tblrd		*+
 33277   00A9AA  CFF5 F0A4          	movff	tablat,??_sendMessage+1
 33278   00A9AE  D801               	call	u19428
 33279   00A9B0  0012               	return	
 33280   00A9B2                     u19428:
 33281   00A9B2  0005               	push	
 33282   00A9B4  6EFA               	movwf	pclath,c
 33283   00A9B6  51A3               	movf	??_sendMessage& (0+255),w,b
 33284   00A9B8  6EFD               	movwf	tosl,c
 33285   00A9BA  51A4               	movf	(??_sendMessage+1)& (0+255),w,b
 33286   00A9BC  6EFE               	movwf	tosh,c
 33287   00A9BE  6AFF               	clrf	tosu,c
 33288   00A9C0  50FA               	movf	pclath,w,c
 33289   00A9C2  0012               	return		;indir
 33290   00A9C4                     __end_of_sendMessage:
 33291                           	callstack 0
 33292                           
 33293 ;; *************** function _canSendMessage *****************
 33294 ;; Defined at:
 33295 ;;		line 493 in file "../../VLCBlib_PIC/can18_ecan.c"
 33296 ;; Parameters:    Size  Location     Type
 33297 ;;  mp              2   57[BANK0 ] PTR struct Message
 33298 ;;		 -> tmpMessage(9), 
 33299 ;; Auto vars:     Size  Location     Type
 33300 ;;  m               2   65[BANK0 ] PTR struct Message
 33301 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 33302 ;;  no              1   64[BANK0 ] unsigned char 
 33303 ;; Return value:  Size  Location     Type
 33304 ;;                  1    wreg      enum E13075
 33305 ;; Registers used:
 33306 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33307 ;; Tracked objects:
 33308 ;;		On entry : 0/0
 33309 ;;		On exit  : 0/0
 33310 ;;		Unchanged: 0/0
 33311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33312 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33313 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33314 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33315 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33316 ;;Total ram usage:       10 bytes
 33317 ;; Hardware stack levels used: 1
 33318 ;; Hardware stack levels required when called: 14
 33319 ;; This function calls:
 33320 ;;		_getNextWriteMessage
 33321 ;;		_getNumTxBuffersInUse
 33322 ;;		_have
 33323 ;;		_isEvent
 33324 ;;		_push
 33325 ;;		_quantity
 33326 ;;		_updateModuleErrorStatus
 33327 ;; This function is called by:
 33328 ;;		_sendMessage
 33329 ;; This function uses a non-reentrant model
 33330 ;;
 33331                           
 33332                           	psect	text132
 33333   0049AC                     __ptext132:
 33334                           	callstack 0
 33335   0049AC                     _canSendMessage:
 33336                           	callstack 11
 33337                           
 33338                           ;../../VLCBlib_PIC/can18_ecan.c: 495:     Message * m;;../../VLCBlib_PIC/can18_ecan.c: 4
      +                          98:     uint8_t no;;../../VLCBlib_PIC/can18_ecan.c: 502:     PIE5bits.TXBnIE = 0;
 33339                           
 33340                           ;incstack = 0
 33341   0049AC  9876               	bcf	118,4,c	;volatile
 33342                           
 33343                           ;../../VLCBlib_PIC/can18_ecan.c: 503:     if (quantity(&txQueue) == 0) {
 33344   0049AE  0E4A               	movlw	low _txQueue
 33345   0049B0  0100               	movlb	0	; () banked
 33346   0049B2  6F8D               	movwf	quantity@q& (0+255),b
 33347   0049B4  EC02  F05F         	call	_quantity	;wreg free
 33348   0049B8  0900               	iorlw	0
 33349   0049BA  A4D8               	btfss	status,2,c
 33350   0049BC  D150               	goto	l19401
 33351                           
 33352                           ;../../VLCBlib_PIC/can18_ecan.c: 505:         if (TXB0CONbits.TXREQ == 0) {
 33353   0049BE  010F               	movlb	15	; () banked
 33354   0049C0  B720               	btfsc	32,3,b	;volatile
 33355   0049C2  D14D               	goto	l19401
 33356                           
 33357                           ; BSR set to: 15
 33358                           ;../../VLCBlib_PIC/can18_ecan.c: 507:             if ((canId == 0) && (enumerationState 
      +                          == NO_ENUMERATION)) {
 33359   0049C4  0100               	movlb	0	; () banked
 33360   0049C6  51C1               	movf	_canId& (0+255),w,b
 33361   0049C8  A4D8               	btfss	status,2,c
 33362   0049CA  D007               	goto	l19337
 33363                           
 33364                           ; BSR set to: 0
 33365   0049CC  51BF               	movf	_enumerationState& (0+255),w,b
 33366   0049CE  A4D8               	btfss	status,2,c
 33367   0049D0  D004               	goto	l19337
 33368                           
 33369                           ; BSR set to: 0
 33370                           ;../../VLCBlib_PIC/can18_ecan.c: 508:                 enumerationState = ENUMERATION_REQ
      +                          UIRED;
 33371   0049D2  0E01               	movlw	1
 33372   0049D4  6FBF               	movwf	_enumerationState& (0+255),b
 33373                           
 33374                           ;../../VLCBlib_PIC/can18_ecan.c: 509:                 canId = 1;
 33375   0049D6  0E01               	movlw	1
 33376   0049D8  6FC1               	movwf	_canId& (0+255),b
 33377   0049DA                     l19337:
 33378                           
 33379                           ; BSR set to: 0
 33380                           ;../../VLCBlib_PIC/can18_ecan.c: 511:             PIE5bits.TXBnIE = 1;
 33381   0049DA  8876               	bsf	118,4,c	;volatile
 33382                           
 33383                           ; BSR set to: 0
 33384                           ;../../VLCBlib_PIC/can18_ecan.c: 513:             if (mp->len >8) mp->len = 8;
 33385   0049DC  C099  FFD9         	movff	canSendMessage@mp,fsr2l
 33386   0049E0  C09A  FFDA         	movff	canSendMessage@mp+1,fsr2h
 33387   0049E4  0E08               	movlw	8
 33388   0049E6  64DF               	cpfsgt	indf2,c
 33389   0049E8  D006               	goto	l19343
 33390                           
 33391                           ; BSR set to: 0
 33392   0049EA  C099  FFD9         	movff	canSendMessage@mp,fsr2l
 33393   0049EE  C09A  FFDA         	movff	canSendMessage@mp+1,fsr2h
 33394   0049F2  0E08               	movlw	8
 33395   0049F4  6EDF               	movwf	indf2,c
 33396   0049F6                     l19343:
 33397                           
 33398                           ; BSR set to: 0
 33399                           ;../../VLCBlib_PIC/can18_ecan.c: 515:             TXB0SIDH = canPri[priorities[mp->opc]]
      +                           | ((canId & 0x78) >> 3);
 33400   0049F6  EE20 F001          	lfsr	2,1
 33401   0049FA  5199               	movf	canSendMessage@mp& (0+255),w,b
 33402   0049FC  26D9               	addwf	fsr2l,f,c
 33403   0049FE  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33404   004A00  22DA               	addwfc	fsr2h,f,c
 33405   004A02  50DF               	movf	indf2,w,c
 33406   004A04  6F9B               	movwf	??_canSendMessage& (0+255),b
 33407   004A06  6B9C               	clrf	(??_canSendMessage+1)& (0+255),b
 33408   004A08  0E29               	movlw	low _priorities
 33409   004A0A  259B               	addwf	??_canSendMessage& (0+255),w,b
 33410   004A0C  6EF6               	movwf	tblptrl,c
 33411   004A0E  0EED               	movlw	high _priorities
 33412   004A10  219C               	addwfc	(??_canSendMessage+1)& (0+255),w,b
 33413   004A12  6EF7               	movwf	tblptrh,c
 33414   004A14                     	if	1	;There are 3 active tblptr bytes
 33415   004A14  6AF8               	clrf	tblptru,c
 33416   004A16  0E00               	movlw	low (__mediumconst shr (0+16))
 33417   004A18  22F8               	addwfc	tblptru,f,c
 33418   004A1A                     	endif
 33419   004A1A  0008               	tblrd		*
 33420   004A1C  50F5               	movf	tablat,w,c
 33421   004A1E  6F9D               	movwf	(??_canSendMessage+2)& (0+255),b
 33422   004A20  6B9E               	clrf	(??_canSendMessage+3)& (0+255),b
 33423   004A22  0E86               	movlw	low _canPri
 33424   004A24  259D               	addwf	(??_canSendMessage+2)& (0+255),w,b
 33425   004A26  6EF6               	movwf	tblptrl,c
 33426   004A28  0EEE               	movlw	high _canPri
 33427   004A2A  219E               	addwfc	(??_canSendMessage+3)& (0+255),w,b
 33428   004A2C  6EF7               	movwf	tblptrh,c
 33429   004A2E                     	if	1	;There are 3 active tblptr bytes
 33430   004A2E  6AF8               	clrf	tblptru,c
 33431   004A30  0E00               	movlw	low (__mediumconst shr (0+16))
 33432   004A32  22F8               	addwfc	tblptru,f,c
 33433   004A34                     	endif
 33434   004A34  0008               	tblrd		*
 33435   004A36  CFF5 F09F          	movff	tablat,??_canSendMessage+4
 33436   004A3A  39C1               	swapf	_canId& (0+255),w,b
 33437   004A3C  46E8               	rlncf	wreg,f,c
 33438   004A3E  0B1F               	andlw	31
 33439   004A40  0B0F               	andlw	15
 33440   004A42  119F               	iorwf	(??_canSendMessage+4)& (0+255),w,b
 33441   004A44  010F               	movlb	15	; () banked
 33442   004A46  6F21               	movwf	33,b	;volatile
 33443                           
 33444                           ; BSR set to: 15
 33445                           ;../../VLCBlib_PIC/can18_ecan.c: 516:             TXB0SIDL = (uint8_t)((canId & 0x07) <<
      +                           5);
 33446   004A48  C0C1  F09B         	movff	_canId,??_canSendMessage
 33447   004A4C  0E07               	movlw	7
 33448   004A4E  0100               	movlb	0	; () banked
 33449   004A50  179B               	andwf	??_canSendMessage& (0+255),f,b
 33450   004A52  0E05               	movlw	5
 33451   004A54  6F9C               	movwf	(??_canSendMessage+1)& (0+255),b
 33452   004A56                     u19085:
 33453   004A56  90D8               	bcf	status,0,c
 33454   004A58  379B               	rlcf	??_canSendMessage& (0+255),f,b
 33455   004A5A  2F9C               	decfsz	(??_canSendMessage+1)& (0+255),f,b
 33456   004A5C  D7FC               	goto	u19085
 33457   004A5E  519B               	movf	??_canSendMessage& (0+255),w,b
 33458   004A60  010F               	movlb	15	; () banked
 33459   004A62  6F22               	movwf	34,b	;volatile
 33460                           
 33461                           ; BSR set to: 15
 33462                           ;../../VLCBlib_PIC/can18_ecan.c: 517:             TXB0D0 = mp->opc;
 33463   004A64  0100               	movlb	0	; () banked
 33464   004A66  EE20 F001          	lfsr	2,1
 33465   004A6A  5199               	movf	canSendMessage@mp& (0+255),w,b
 33466   004A6C  26D9               	addwf	fsr2l,f,c
 33467   004A6E  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33468   004A70  22DA               	addwfc	fsr2h,f,c
 33469   004A72  50DF               	movf	indf2,w,c
 33470   004A74  010F               	movlb	15	; () banked
 33471   004A76  6F26               	movwf	38,b	;volatile
 33472                           
 33473                           ; BSR set to: 15
 33474                           ;../../VLCBlib_PIC/can18_ecan.c: 518:             TXB0D1 = mp->bytes[0];
 33475   004A78  0100               	movlb	0	; () banked
 33476   004A7A  EE20 F002          	lfsr	2,2
 33477   004A7E  5199               	movf	canSendMessage@mp& (0+255),w,b
 33478   004A80  26D9               	addwf	fsr2l,f,c
 33479   004A82  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33480   004A84  22DA               	addwfc	fsr2h,f,c
 33481   004A86  50DF               	movf	indf2,w,c
 33482   004A88  010F               	movlb	15	; () banked
 33483   004A8A  6F27               	movwf	39,b	;volatile
 33484                           
 33485                           ; BSR set to: 15
 33486                           ;../../VLCBlib_PIC/can18_ecan.c: 519:             TXB0D2 = mp->bytes[1];
 33487   004A8C  0100               	movlb	0	; () banked
 33488   004A8E  EE20 F003          	lfsr	2,3
 33489   004A92  5199               	movf	canSendMessage@mp& (0+255),w,b
 33490   004A94  26D9               	addwf	fsr2l,f,c
 33491   004A96  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33492   004A98  22DA               	addwfc	fsr2h,f,c
 33493   004A9A  50DF               	movf	indf2,w,c
 33494   004A9C  010F               	movlb	15	; () banked
 33495   004A9E  6F28               	movwf	40,b	;volatile
 33496                           
 33497                           ; BSR set to: 15
 33498                           ;../../VLCBlib_PIC/can18_ecan.c: 520:             TXB0D3 = mp->bytes[2];
 33499   004AA0  0100               	movlb	0	; () banked
 33500   004AA2  EE20 F004          	lfsr	2,4
 33501   004AA6  5199               	movf	canSendMessage@mp& (0+255),w,b
 33502   004AA8  26D9               	addwf	fsr2l,f,c
 33503   004AAA  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33504   004AAC  22DA               	addwfc	fsr2h,f,c
 33505   004AAE  50DF               	movf	indf2,w,c
 33506   004AB0  010F               	movlb	15	; () banked
 33507   004AB2  6F29               	movwf	41,b	;volatile
 33508                           
 33509                           ; BSR set to: 15
 33510                           ;../../VLCBlib_PIC/can18_ecan.c: 521:             TXB0D4 = mp->bytes[3];
 33511   004AB4  0100               	movlb	0	; () banked
 33512   004AB6  EE20 F005          	lfsr	2,5
 33513   004ABA  5199               	movf	canSendMessage@mp& (0+255),w,b
 33514   004ABC  26D9               	addwf	fsr2l,f,c
 33515   004ABE  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33516   004AC0  22DA               	addwfc	fsr2h,f,c
 33517   004AC2  50DF               	movf	indf2,w,c
 33518   004AC4  010F               	movlb	15	; () banked
 33519   004AC6  6F2A               	movwf	42,b	;volatile
 33520                           
 33521                           ; BSR set to: 15
 33522                           ;../../VLCBlib_PIC/can18_ecan.c: 522:             TXB0D5 = mp->bytes[4];
 33523   004AC8  0100               	movlb	0	; () banked
 33524   004ACA  EE20 F006          	lfsr	2,6
 33525   004ACE  5199               	movf	canSendMessage@mp& (0+255),w,b
 33526   004AD0  26D9               	addwf	fsr2l,f,c
 33527   004AD2  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33528   004AD4  22DA               	addwfc	fsr2h,f,c
 33529   004AD6  50DF               	movf	indf2,w,c
 33530   004AD8  010F               	movlb	15	; () banked
 33531   004ADA  6F2B               	movwf	43,b	;volatile
 33532                           
 33533                           ; BSR set to: 15
 33534                           ;../../VLCBlib_PIC/can18_ecan.c: 523:             TXB0D6 = mp->bytes[5];
 33535   004ADC  0100               	movlb	0	; () banked
 33536   004ADE  EE20 F007          	lfsr	2,7
 33537   004AE2  5199               	movf	canSendMessage@mp& (0+255),w,b
 33538   004AE4  26D9               	addwf	fsr2l,f,c
 33539   004AE6  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33540   004AE8  22DA               	addwfc	fsr2h,f,c
 33541   004AEA  50DF               	movf	indf2,w,c
 33542   004AEC  010F               	movlb	15	; () banked
 33543   004AEE  6F2C               	movwf	44,b	;volatile
 33544                           
 33545                           ; BSR set to: 15
 33546                           ;../../VLCBlib_PIC/can18_ecan.c: 524:             TXB0D7 = mp->bytes[6];
 33547   004AF0  0100               	movlb	0	; () banked
 33548   004AF2  EE20 F008          	lfsr	2,8
 33549   004AF6  5199               	movf	canSendMessage@mp& (0+255),w,b
 33550   004AF8  26D9               	addwf	fsr2l,f,c
 33551   004AFA  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33552   004AFC  22DA               	addwfc	fsr2h,f,c
 33553   004AFE  50DF               	movf	indf2,w,c
 33554   004B00  010F               	movlb	15	; () banked
 33555   004B02  6F2D               	movwf	45,b	;volatile
 33556                           
 33557                           ; BSR set to: 15
 33558                           ;../../VLCBlib_PIC/can18_ecan.c: 525:             TXB0DLC = mp->len & 0x0F;
 33559   004B04  C099  FFD9         	movff	canSendMessage@mp,fsr2l
 33560   004B08  C09A  FFDA         	movff	canSendMessage@mp+1,fsr2h
 33561   004B0C  50DF               	movf	indf2,w,c
 33562   004B0E  0B0F               	andlw	15
 33563   004B10  6F25               	movwf	37,b	;volatile
 33564                           
 33565                           ; BSR set to: 15
 33566                           ;../../VLCBlib_PIC/can18_ecan.c: 527:             TXB0CONbits.TXREQ = 1;
 33567   004B12  8720               	bsf	32,3,b	;volatile
 33568                           
 33569                           ; BSR set to: 15
 33570                           ;../../VLCBlib_PIC/can18_ecan.c: 529:             canDiagnostics[0x06].asUint++;
 33571   004B14  0101               	movlb	1	; () banked
 33572   004B16  4B73               	infsnz	(_canDiagnostics+12)& (0+255),f,b
 33573   004B18  2B74               	incf	(_canDiagnostics+13)& (0+255),f,b
 33574                           
 33575                           ; BSR set to: 1
 33576                           ;../../VLCBlib_PIC/can18_ecan.c: 534:             if (isEvent(mp->opc)) {
 33577   004B1A  0100               	movlb	0	; () banked
 33578   004B1C  EE20 F001          	lfsr	2,1
 33579   004B20  5199               	movf	canSendMessage@mp& (0+255),w,b
 33580   004B22  26D9               	addwf	fsr2l,f,c
 33581   004B24  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33582   004B26  22DA               	addwfc	fsr2h,f,c
 33583   004B28  50DF               	movf	indf2,w,c
 33584   004B2A  EC3B  F061         	call	_isEvent
 33585   004B2E  0900               	iorlw	0
 33586   004B30  B4D8               	btfsc	status,2,c
 33587   004B32  0012               	return	
 33588                           
 33589                           ;../../VLCBlib_PIC/can18_ecan.c: 535:                 if (have(SERVICE_ID_CONSUME_OWN_EV
      +                          ENTS)) {
 33590   004B34  0E08               	movlw	8
 33591   004B36  ECF8  F056         	call	_have
 33592   004B3A  0900               	iorlw	0
 33593   004B3C  B4D8               	btfsc	status,2,c
 33594   004B3E  0012               	return	
 33595                           
 33596                           ;../../VLCBlib_PIC/can18_ecan.c: 537:                     m = getNextWriteMessage(&rxQue
      +                          ue);
 33597   004B40  0E4F               	movlw	low _rxQueue
 33598   004B42  0100               	movlb	0	; () banked
 33599   004B44  6F8D               	movwf	getNextWriteMessage@q& (0+255),b
 33600   004B46  ECC0  F045         	call	_getNextWriteMessage	;wreg free
 33601   004B4A  C08D  F0A1         	movff	?_getNextWriteMessage,canSendMessage@m
 33602   004B4E  C08E  F0A2         	movff	?_getNextWriteMessage+1,canSendMessage@m+1
 33603                           
 33604                           ;../../VLCBlib_PIC/can18_ecan.c: 538:                     if (m == ((void*)0)) {
 33605   004B52  0100               	movlb	0	; () banked
 33606   004B54  51A1               	movf	canSendMessage@m& (0+255),w,b
 33607   004B56  11A2               	iorwf	(canSendMessage@m+1)& (0+255),w,b
 33608   004B58  A4D8               	btfss	status,2,c
 33609   004B5A  D006               	goto	l19381
 33610                           
 33611                           ; BSR set to: 0
 33612                           ;../../VLCBlib_PIC/can18_ecan.c: 540:                         canDiagnostics[0x08].asUin
      +                          t++;
 33613   004B5C  0101               	movlb	1	; () banked
 33614   004B5E  4B77               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 33615   004B60  2B78               	incf	(_canDiagnostics+17)& (0+255),f,b
 33616                           
 33617                           ; BSR set to: 1
 33618                           ;../../VLCBlib_PIC/can18_ecan.c: 541:                         updateModuleErrorStatus();
 33619   004B62  ECED  F062         	call	_updateModuleErrorStatus	;wreg free
 33620                           
 33621                           ;../../VLCBlib_PIC/can18_ecan.c: 543:                     } else {
 33622   004B66  0012               	return	
 33623   004B68                     l19381:
 33624                           
 33625                           ; BSR set to: 0
 33626                           ;../../VLCBlib_PIC/can18_ecan.c: 545:                         m->opc = mp->opc;
 33627   004B68  EE20 F001          	lfsr	2,1
 33628   004B6C  5199               	movf	canSendMessage@mp& (0+255),w,b
 33629   004B6E  26D9               	addwf	fsr2l,f,c
 33630   004B70  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33631   004B72  22DA               	addwfc	fsr2h,f,c
 33632   004B74  EE10 F001          	lfsr	1,1
 33633   004B78  51A1               	movf	canSendMessage@m& (0+255),w,b
 33634   004B7A  26E1               	addwf	fsr1l,f,c
 33635   004B7C  51A2               	movf	(canSendMessage@m+1)& (0+255),w,b
 33636   004B7E  22E2               	addwfc	fsr1h,f,c
 33637   004B80  CFDF FFE7          	movff	indf2,indf1
 33638                           
 33639                           ; BSR set to: 0
 33640                           ;../../VLCBlib_PIC/can18_ecan.c: 546:                         m->len = mp->len;
 33641   004B84  C099  FFD9         	movff	canSendMessage@mp,fsr2l
 33642   004B88  C09A  FFDA         	movff	canSendMessage@mp+1,fsr2h
 33643   004B8C  C0A1  FFE1         	movff	canSendMessage@m,fsr1l
 33644   004B90  C0A2  FFE2         	movff	canSendMessage@m+1,fsr1h
 33645   004B94  CFDF FFE7          	movff	indf2,indf1
 33646                           
 33647                           ; BSR set to: 0
 33648                           ;../../VLCBlib_PIC/can18_ecan.c: 547:                         m->bytes[0] = mp->bytes[0]
      +                          ;
 33649   004B98  EE20 F002          	lfsr	2,2
 33650   004B9C  5199               	movf	canSendMessage@mp& (0+255),w,b
 33651   004B9E  26D9               	addwf	fsr2l,f,c
 33652   004BA0  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33653   004BA2  22DA               	addwfc	fsr2h,f,c
 33654   004BA4  EE10 F002          	lfsr	1,2
 33655   004BA8  51A1               	movf	canSendMessage@m& (0+255),w,b
 33656   004BAA  26E1               	addwf	fsr1l,f,c
 33657   004BAC  51A2               	movf	(canSendMessage@m+1)& (0+255),w,b
 33658   004BAE  22E2               	addwfc	fsr1h,f,c
 33659   004BB0  CFDF FFE7          	movff	indf2,indf1
 33660                           
 33661                           ; BSR set to: 0
 33662                           ;../../VLCBlib_PIC/can18_ecan.c: 548:                         m->bytes[1] = mp->bytes[1]
      +                          ;
 33663   004BB4  EE20 F003          	lfsr	2,3
 33664   004BB8  5199               	movf	canSendMessage@mp& (0+255),w,b
 33665   004BBA  26D9               	addwf	fsr2l,f,c
 33666   004BBC  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33667   004BBE  22DA               	addwfc	fsr2h,f,c
 33668   004BC0  EE10 F003          	lfsr	1,3
 33669   004BC4  51A1               	movf	canSendMessage@m& (0+255),w,b
 33670   004BC6  26E1               	addwf	fsr1l,f,c
 33671   004BC8  51A2               	movf	(canSendMessage@m+1)& (0+255),w,b
 33672   004BCA  22E2               	addwfc	fsr1h,f,c
 33673   004BCC  CFDF FFE7          	movff	indf2,indf1
 33674                           
 33675                           ; BSR set to: 0
 33676                           ;../../VLCBlib_PIC/can18_ecan.c: 549:                         m->bytes[2] = mp->bytes[2]
      +                          ;
 33677   004BD0  EE20 F004          	lfsr	2,4
 33678   004BD4  5199               	movf	canSendMessage@mp& (0+255),w,b
 33679   004BD6  26D9               	addwf	fsr2l,f,c
 33680   004BD8  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33681   004BDA  22DA               	addwfc	fsr2h,f,c
 33682   004BDC  EE10 F004          	lfsr	1,4
 33683   004BE0  51A1               	movf	canSendMessage@m& (0+255),w,b
 33684   004BE2  26E1               	addwf	fsr1l,f,c
 33685   004BE4  51A2               	movf	(canSendMessage@m+1)& (0+255),w,b
 33686   004BE6  22E2               	addwfc	fsr1h,f,c
 33687   004BE8  CFDF FFE7          	movff	indf2,indf1
 33688                           
 33689                           ; BSR set to: 0
 33690                           ;../../VLCBlib_PIC/can18_ecan.c: 550:                         m->bytes[3] = mp->bytes[3]
      +                          ;
 33691   004BEC  EE20 F005          	lfsr	2,5
 33692   004BF0  5199               	movf	canSendMessage@mp& (0+255),w,b
 33693   004BF2  26D9               	addwf	fsr2l,f,c
 33694   004BF4  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33695   004BF6  22DA               	addwfc	fsr2h,f,c
 33696   004BF8  EE10 F005          	lfsr	1,5
 33697   004BFC  51A1               	movf	canSendMessage@m& (0+255),w,b
 33698   004BFE  26E1               	addwf	fsr1l,f,c
 33699   004C00  51A2               	movf	(canSendMessage@m+1)& (0+255),w,b
 33700   004C02  22E2               	addwfc	fsr1h,f,c
 33701   004C04  CFDF FFE7          	movff	indf2,indf1
 33702                           
 33703                           ; BSR set to: 0
 33704                           ;../../VLCBlib_PIC/can18_ecan.c: 551:                         m->bytes[4] = mp->bytes[4]
      +                          ;
 33705   004C08  EE20 F006          	lfsr	2,6
 33706   004C0C  5199               	movf	canSendMessage@mp& (0+255),w,b
 33707   004C0E  26D9               	addwf	fsr2l,f,c
 33708   004C10  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33709   004C12  22DA               	addwfc	fsr2h,f,c
 33710   004C14  EE10 F006          	lfsr	1,6
 33711   004C18  51A1               	movf	canSendMessage@m& (0+255),w,b
 33712   004C1A  26E1               	addwf	fsr1l,f,c
 33713   004C1C  51A2               	movf	(canSendMessage@m+1)& (0+255),w,b
 33714   004C1E  22E2               	addwfc	fsr1h,f,c
 33715   004C20  CFDF FFE7          	movff	indf2,indf1
 33716                           
 33717                           ; BSR set to: 0
 33718                           ;../../VLCBlib_PIC/can18_ecan.c: 552:                         m->bytes[5] = mp->bytes[5]
      +                          ;
 33719   004C24  EE20 F007          	lfsr	2,7
 33720   004C28  5199               	movf	canSendMessage@mp& (0+255),w,b
 33721   004C2A  26D9               	addwf	fsr2l,f,c
 33722   004C2C  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33723   004C2E  22DA               	addwfc	fsr2h,f,c
 33724   004C30  EE10 F007          	lfsr	1,7
 33725   004C34  51A1               	movf	canSendMessage@m& (0+255),w,b
 33726   004C36  26E1               	addwf	fsr1l,f,c
 33727   004C38  51A2               	movf	(canSendMessage@m+1)& (0+255),w,b
 33728   004C3A  22E2               	addwfc	fsr1h,f,c
 33729   004C3C  CFDF FFE7          	movff	indf2,indf1
 33730                           
 33731                           ; BSR set to: 0
 33732                           ;../../VLCBlib_PIC/can18_ecan.c: 553:                         m->bytes[6] = mp->bytes[6]
      +                          ;
 33733   004C40  EE20 F008          	lfsr	2,8
 33734   004C44  5199               	movf	canSendMessage@mp& (0+255),w,b
 33735   004C46  26D9               	addwf	fsr2l,f,c
 33736   004C48  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33737   004C4A  22DA               	addwfc	fsr2h,f,c
 33738   004C4C  EE10 F008          	lfsr	1,8
 33739   004C50  51A1               	movf	canSendMessage@m& (0+255),w,b
 33740   004C52  26E1               	addwf	fsr1l,f,c
 33741   004C54  51A2               	movf	(canSendMessage@m+1)& (0+255),w,b
 33742   004C56  22E2               	addwfc	fsr1h,f,c
 33743   004C58  CFDF FFE7          	movff	indf2,indf1
 33744   004C5C  0012               	return	
 33745   004C5E                     l19401:
 33746                           
 33747                           ;../../VLCBlib_PIC/can18_ecan.c: 562:     if (push(&txQueue, mp) == QUEUE_FAIL) {
 33748   004C5E  0E4A               	movlw	low _txQueue
 33749   004C60  0100               	movlb	0	; () banked
 33750   004C62  6F8D               	movwf	push@q& (0+255),b
 33751   004C64  C099  F08E         	movff	canSendMessage@mp,push@m
 33752   004C68  C09A  F08F         	movff	canSendMessage@mp+1,push@m+1
 33753   004C6C  ECF1  F01F         	call	_push	;wreg free
 33754   004C70  0900               	iorlw	0
 33755   004C72  A4D8               	btfss	status,2,c
 33756   004C74  D007               	goto	l19411
 33757                           
 33758                           ;../../VLCBlib_PIC/can18_ecan.c: 564:         canDiagnostics[0x05].asUint++;
 33759   004C76  0101               	movlb	1	; () banked
 33760   004C78  4B71               	infsnz	(_canDiagnostics+10)& (0+255),f,b
 33761   004C7A  2B72               	incf	(_canDiagnostics+11)& (0+255),f,b
 33762                           
 33763                           ; BSR set to: 1
 33764                           ;../../VLCBlib_PIC/can18_ecan.c: 565:         updateModuleErrorStatus();
 33765   004C7C  ECED  F062         	call	_updateModuleErrorStatus	;wreg free
 33766                           
 33767                           ;../../VLCBlib_PIC/can18_ecan.c: 567:         PIE5bits.TXBnIE = 1;
 33768   004C80  8876               	bsf	118,4,c	;volatile
 33769   004C82  0012               	return	
 33770   004C84                     l19411:
 33771                           
 33772                           ;../../VLCBlib_PIC/can18_ecan.c: 571:     no = getNumTxBuffersInUse();
 33773   004C84  ECE7  F062         	call	_getNumTxBuffersInUse	;wreg free
 33774   004C88  0100               	movlb	0	; () banked
 33775   004C8A  6FA0               	movwf	canSendMessage@no& (0+255),b
 33776                           
 33777                           ; BSR set to: 0
 33778                           ;../../VLCBlib_PIC/can18_ecan.c: 572:     if (canDiagnostics[0x11].asUint < no) {
 33779   004C8C  51A0               	movf	canSendMessage@no& (0+255),w,b
 33780   004C8E  0101               	movlb	1	; () banked
 33781   004C90  5D89               	subwf	(_canDiagnostics+34)& (0+255),w,b
 33782   004C92  0E00               	movlw	0
 33783   004C94  598A               	subwfb	(_canDiagnostics+35)& (0+255),w,b
 33784   004C96  B0D8               	btfsc	status,0,c
 33785   004C98  D003               	goto	l2509
 33786                           
 33787                           ; BSR set to: 1
 33788                           ;../../VLCBlib_PIC/can18_ecan.c: 573:         canDiagnostics[0x11].asUint = no;
 33789   004C9A  C0A0  F189         	movff	canSendMessage@no,_canDiagnostics+34
 33790   004C9E  6B8A               	clrf	(_canDiagnostics+35)& (0+255),b
 33791   004CA0                     l2509:
 33792                           
 33793                           ; BSR set to: 1
 33794                           ;../../VLCBlib_PIC/can18_ecan.c: 576:     PIE5bits.TXBnIE = 1;
 33795   004CA0  8876               	bsf	118,4,c	;volatile
 33796                           
 33797                           ;../../VLCBlib_PIC/can18_ecan.c: 577:     return SEND_OK;;	Return value of _canSendMessa
      +                          ge is never used
 33798   004CA2  0012               	return		;funcret
 33799   004CA4                     __end_of_canSendMessage:
 33800                           	callstack 0
 33801                           
 33802 ;; *************** function _push *****************
 33803 ;; Defined at:
 33804 ;;		line 58 in file "../../VLCBlib_PIC/messageQueue.c"
 33805 ;; Parameters:    Size  Location     Type
 33806 ;;  q               1   45[BANK0 ] PTR struct MessageQueue
 33807 ;;		 -> txQueue(5), 
 33808 ;;  m               2   46[BANK0 ] PTR struct Message
 33809 ;;		 -> tmpMessage(9), 
 33810 ;; Auto vars:     Size  Location     Type
 33811 ;;		None
 33812 ;; Return value:  Size  Location     Type
 33813 ;;                  1    wreg      enum E12928
 33814 ;; Registers used:
 33815 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33816 ;; Tracked objects:
 33817 ;;		On entry : 0/0
 33818 ;;		On exit  : 0/0
 33819 ;;		Unchanged: 0/0
 33820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33821 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33823 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33824 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33825 ;;Total ram usage:       12 bytes
 33826 ;; Hardware stack levels used: 1
 33827 ;; Hardware stack levels required when called: 12
 33828 ;; This function calls:
 33829 ;;		Nothing
 33830 ;; This function is called by:
 33831 ;;		_canSendMessage
 33832 ;; This function uses a non-reentrant model
 33833 ;;
 33834                           
 33835                           	psect	text133
 33836   003FE2                     __ptext133:
 33837                           	callstack 0
 33838   003FE2                     _push:
 33839                           	callstack 12
 33840                           
 33841                           ;incstack = 0
 33842   003FE2  0100               	movlb	0	; () banked
 33843   003FE4  518D               	movf	push@q& (0+255),w,b
 33844   003FE6  6ED9               	movwf	fsr2l,c
 33845   003FE8  6ADA               	clrf	fsr2h,c
 33846   003FEA  0E02               	movlw	2
 33847   003FEC  26D9               	addwf	fsr2l,f,c
 33848   003FEE  50DF               	movf	indf2,w,c
 33849   003FF0  6F90               	movwf	??_push& (0+255),b
 33850   003FF2  6B91               	clrf	(??_push+1)& (0+255),b
 33851   003FF4  518D               	movf	push@q& (0+255),w,b
 33852   003FF6  6ED9               	movwf	fsr2l,c
 33853   003FF8  6ADA               	clrf	fsr2h,c
 33854   003FFA  0E04               	movlw	4
 33855   003FFC  26D9               	addwf	fsr2l,f,c
 33856   003FFE  50DF               	movf	indf2,w,c
 33857   004000  6F92               	movwf	(??_push+2)& (0+255),b
 33858   004002  0EFF               	movlw	255
 33859   004004  2592               	addwf	(??_push+2)& (0+255),w,b
 33860   004006  6F93               	movwf	(??_push+3)& (0+255),b
 33861   004008  6B94               	clrf	(??_push+4)& (0+255),b
 33862   00400A  0EFF               	movlw	255
 33863   00400C  2394               	addwfc	(??_push+4)& (0+255),f,b
 33864   00400E  518D               	movf	push@q& (0+255),w,b
 33865   004010  6ED9               	movwf	fsr2l,c
 33866   004012  6ADA               	clrf	fsr2h,c
 33867   004014  0E03               	movlw	3
 33868   004016  26D9               	addwf	fsr2l,f,c
 33869   004018  50DF               	movf	indf2,w,c
 33870   00401A  6F95               	movwf	(??_push+5)& (0+255),b
 33871   00401C  6B96               	clrf	(??_push+6)& (0+255),b
 33872   00401E  0E01               	movlw	1
 33873   004020  2795               	addwf	(??_push+5)& (0+255),f,b
 33874   004022  0E00               	movlw	0
 33875   004024  2396               	addwfc	(??_push+6)& (0+255),f,b
 33876   004026  5193               	movf	(??_push+3)& (0+255),w,b
 33877   004028  1595               	andwf	(??_push+5)& (0+255),w,b
 33878   00402A  6F97               	movwf	(??_push+7)& (0+255),b
 33879   00402C  5194               	movf	(??_push+4)& (0+255),w,b
 33880   00402E  1596               	andwf	(??_push+6)& (0+255),w,b
 33881   004030  6F98               	movwf	(??_push+8)& (0+255),b
 33882   004032  5190               	movf	??_push& (0+255),w,b
 33883   004034  1997               	xorwf	(??_push+7)& (0+255),w,b
 33884   004036  E106               	bnz	l19203
 33885   004038  5191               	movf	(??_push+1)& (0+255),w,b
 33886   00403A  1998               	xorwf	(??_push+8)& (0+255),w,b
 33887   00403C  A4D8               	btfss	status,2,c
 33888   00403E  D002               	goto	l19203
 33889                           
 33890                           ; BSR set to: 0
 33891   004040  0E00               	movlw	0
 33892   004042  0012               	return	
 33893   004044                     l19203:
 33894                           
 33895                           ; BSR set to: 0
 33896   004044  EE20 F001          	lfsr	2,1
 33897   004048  518E               	movf	push@m& (0+255),w,b
 33898   00404A  26D9               	addwf	fsr2l,f,c
 33899   00404C  518F               	movf	(push@m+1)& (0+255),w,b
 33900   00404E  22DA               	addwfc	fsr2h,f,c
 33901   004050  518D               	movf	push@q& (0+255),w,b
 33902   004052  6EE1               	movwf	fsr1l,c
 33903   004054  6AE2               	clrf	fsr1h,c
 33904   004056  0E03               	movlw	3
 33905   004058  26E1               	addwf	fsr1l,f,c
 33906   00405A  50E7               	movf	indf1,w,c
 33907   00405C  6F90               	movwf	??_push& (0+255),b
 33908   00405E  5190               	movf	??_push& (0+255),w,b
 33909   004060  0D09               	mullw	9
 33910   004062  CFF3 F091          	movff	prodl,??_push+1
 33911   004066  CFF4 F092          	movff	prodh,??_push+2
 33912   00406A  518D               	movf	push@q& (0+255),w,b
 33913   00406C  6EE1               	movwf	fsr1l,c
 33914   00406E  6AE2               	clrf	fsr1h,c
 33915   004070  CFE6 F093          	movff	postinc1,??_push+3
 33916   004074  CFE5 F094          	movff	postdec1,??_push+4
 33917   004078  5191               	movf	(??_push+1)& (0+255),w,b
 33918   00407A  2593               	addwf	(??_push+3)& (0+255),w,b
 33919   00407C  6F95               	movwf	(??_push+5)& (0+255),b
 33920   00407E  5192               	movf	(??_push+2)& (0+255),w,b
 33921   004080  2194               	addwfc	(??_push+4)& (0+255),w,b
 33922   004082  6F96               	movwf	(??_push+6)& (0+255),b
 33923   004084  0E01               	movlw	1
 33924   004086  2595               	addwf	(??_push+5)& (0+255),w,b
 33925   004088  6EE1               	movwf	fsr1l,c
 33926   00408A  0E00               	movlw	0
 33927   00408C  2196               	addwfc	(??_push+6)& (0+255),w,b
 33928   00408E  6EE2               	movwf	fsr1h,c
 33929   004090  CFDF FFE7          	movff	indf2,indf1
 33930   004094  EE20 F002          	lfsr	2,2
 33931   004098  518E               	movf	push@m& (0+255),w,b
 33932   00409A  26D9               	addwf	fsr2l,f,c
 33933   00409C  518F               	movf	(push@m+1)& (0+255),w,b
 33934   00409E  22DA               	addwfc	fsr2h,f,c
 33935   0040A0  518D               	movf	push@q& (0+255),w,b
 33936   0040A2  6EE1               	movwf	fsr1l,c
 33937   0040A4  6AE2               	clrf	fsr1h,c
 33938   0040A6  0E03               	movlw	3
 33939   0040A8  26E1               	addwf	fsr1l,f,c
 33940   0040AA  50E7               	movf	indf1,w,c
 33941   0040AC  6F90               	movwf	??_push& (0+255),b
 33942   0040AE  5190               	movf	??_push& (0+255),w,b
 33943   0040B0  0D09               	mullw	9
 33944   0040B2  CFF3 F091          	movff	prodl,??_push+1
 33945   0040B6  CFF4 F092          	movff	prodh,??_push+2
 33946   0040BA  518D               	movf	push@q& (0+255),w,b
 33947   0040BC  6EE1               	movwf	fsr1l,c
 33948   0040BE  6AE2               	clrf	fsr1h,c
 33949   0040C0  CFE6 F093          	movff	postinc1,??_push+3
 33950   0040C4  CFE5 F094          	movff	postdec1,??_push+4
 33951   0040C8  5191               	movf	(??_push+1)& (0+255),w,b
 33952   0040CA  2593               	addwf	(??_push+3)& (0+255),w,b
 33953   0040CC  6F95               	movwf	(??_push+5)& (0+255),b
 33954   0040CE  5192               	movf	(??_push+2)& (0+255),w,b
 33955   0040D0  2194               	addwfc	(??_push+4)& (0+255),w,b
 33956   0040D2  6F96               	movwf	(??_push+6)& (0+255),b
 33957   0040D4  0E02               	movlw	2
 33958   0040D6  2595               	addwf	(??_push+5)& (0+255),w,b
 33959   0040D8  6EE1               	movwf	fsr1l,c
 33960   0040DA  0E00               	movlw	0
 33961   0040DC  2196               	addwfc	(??_push+6)& (0+255),w,b
 33962   0040DE  6EE2               	movwf	fsr1h,c
 33963   0040E0  CFDF FFE7          	movff	indf2,indf1
 33964   0040E4  EE20 F003          	lfsr	2,3
 33965   0040E8  518E               	movf	push@m& (0+255),w,b
 33966   0040EA  26D9               	addwf	fsr2l,f,c
 33967   0040EC  518F               	movf	(push@m+1)& (0+255),w,b
 33968   0040EE  22DA               	addwfc	fsr2h,f,c
 33969   0040F0  518D               	movf	push@q& (0+255),w,b
 33970   0040F2  6EE1               	movwf	fsr1l,c
 33971   0040F4  6AE2               	clrf	fsr1h,c
 33972   0040F6  0E03               	movlw	3
 33973   0040F8  26E1               	addwf	fsr1l,f,c
 33974   0040FA  50E7               	movf	indf1,w,c
 33975   0040FC  6F90               	movwf	??_push& (0+255),b
 33976   0040FE  5190               	movf	??_push& (0+255),w,b
 33977   004100  0D09               	mullw	9
 33978   004102  CFF3 F091          	movff	prodl,??_push+1
 33979   004106  CFF4 F092          	movff	prodh,??_push+2
 33980   00410A  518D               	movf	push@q& (0+255),w,b
 33981   00410C  6EE1               	movwf	fsr1l,c
 33982   00410E  6AE2               	clrf	fsr1h,c
 33983   004110  CFE6 F093          	movff	postinc1,??_push+3
 33984   004114  CFE5 F094          	movff	postdec1,??_push+4
 33985   004118  5191               	movf	(??_push+1)& (0+255),w,b
 33986   00411A  2593               	addwf	(??_push+3)& (0+255),w,b
 33987   00411C  6F95               	movwf	(??_push+5)& (0+255),b
 33988   00411E  5192               	movf	(??_push+2)& (0+255),w,b
 33989   004120  2194               	addwfc	(??_push+4)& (0+255),w,b
 33990   004122  6F96               	movwf	(??_push+6)& (0+255),b
 33991   004124  0E03               	movlw	3
 33992   004126  2595               	addwf	(??_push+5)& (0+255),w,b
 33993   004128  6EE1               	movwf	fsr1l,c
 33994   00412A  0E00               	movlw	0
 33995   00412C  2196               	addwfc	(??_push+6)& (0+255),w,b
 33996   00412E  6EE2               	movwf	fsr1h,c
 33997   004130  CFDF FFE7          	movff	indf2,indf1
 33998   004134  EE20 F004          	lfsr	2,4
 33999   004138  518E               	movf	push@m& (0+255),w,b
 34000   00413A  26D9               	addwf	fsr2l,f,c
 34001   00413C  518F               	movf	(push@m+1)& (0+255),w,b
 34002   00413E  22DA               	addwfc	fsr2h,f,c
 34003   004140  518D               	movf	push@q& (0+255),w,b
 34004   004142  6EE1               	movwf	fsr1l,c
 34005   004144  6AE2               	clrf	fsr1h,c
 34006   004146  0E03               	movlw	3
 34007   004148  26E1               	addwf	fsr1l,f,c
 34008   00414A  50E7               	movf	indf1,w,c
 34009   00414C  6F90               	movwf	??_push& (0+255),b
 34010   00414E  5190               	movf	??_push& (0+255),w,b
 34011   004150  0D09               	mullw	9
 34012   004152  CFF3 F091          	movff	prodl,??_push+1
 34013   004156  CFF4 F092          	movff	prodh,??_push+2
 34014   00415A  518D               	movf	push@q& (0+255),w,b
 34015   00415C  6EE1               	movwf	fsr1l,c
 34016   00415E  6AE2               	clrf	fsr1h,c
 34017   004160  CFE6 F093          	movff	postinc1,??_push+3
 34018   004164  CFE5 F094          	movff	postdec1,??_push+4
 34019   004168  5191               	movf	(??_push+1)& (0+255),w,b
 34020   00416A  2593               	addwf	(??_push+3)& (0+255),w,b
 34021   00416C  6F95               	movwf	(??_push+5)& (0+255),b
 34022   00416E  5192               	movf	(??_push+2)& (0+255),w,b
 34023   004170  2194               	addwfc	(??_push+4)& (0+255),w,b
 34024   004172  6F96               	movwf	(??_push+6)& (0+255),b
 34025   004174  0E04               	movlw	4
 34026   004176  2595               	addwf	(??_push+5)& (0+255),w,b
 34027   004178  6EE1               	movwf	fsr1l,c
 34028   00417A  0E00               	movlw	0
 34029   00417C  2196               	addwfc	(??_push+6)& (0+255),w,b
 34030   00417E  6EE2               	movwf	fsr1h,c
 34031   004180  CFDF FFE7          	movff	indf2,indf1
 34032   004184  EE20 F005          	lfsr	2,5
 34033   004188  518E               	movf	push@m& (0+255),w,b
 34034   00418A  26D9               	addwf	fsr2l,f,c
 34035   00418C  518F               	movf	(push@m+1)& (0+255),w,b
 34036   00418E  22DA               	addwfc	fsr2h,f,c
 34037   004190  518D               	movf	push@q& (0+255),w,b
 34038   004192  6EE1               	movwf	fsr1l,c
 34039   004194  6AE2               	clrf	fsr1h,c
 34040   004196  0E03               	movlw	3
 34041   004198  26E1               	addwf	fsr1l,f,c
 34042   00419A  50E7               	movf	indf1,w,c
 34043   00419C  6F90               	movwf	??_push& (0+255),b
 34044   00419E  5190               	movf	??_push& (0+255),w,b
 34045   0041A0  0D09               	mullw	9
 34046   0041A2  CFF3 F091          	movff	prodl,??_push+1
 34047   0041A6  CFF4 F092          	movff	prodh,??_push+2
 34048   0041AA  518D               	movf	push@q& (0+255),w,b
 34049   0041AC  6EE1               	movwf	fsr1l,c
 34050   0041AE  6AE2               	clrf	fsr1h,c
 34051   0041B0  CFE6 F093          	movff	postinc1,??_push+3
 34052   0041B4  CFE5 F094          	movff	postdec1,??_push+4
 34053   0041B8  5191               	movf	(??_push+1)& (0+255),w,b
 34054   0041BA  2593               	addwf	(??_push+3)& (0+255),w,b
 34055   0041BC  6F95               	movwf	(??_push+5)& (0+255),b
 34056   0041BE  5192               	movf	(??_push+2)& (0+255),w,b
 34057   0041C0  2194               	addwfc	(??_push+4)& (0+255),w,b
 34058   0041C2  6F96               	movwf	(??_push+6)& (0+255),b
 34059   0041C4  0E05               	movlw	5
 34060   0041C6  2595               	addwf	(??_push+5)& (0+255),w,b
 34061   0041C8  6EE1               	movwf	fsr1l,c
 34062   0041CA  0E00               	movlw	0
 34063   0041CC  2196               	addwfc	(??_push+6)& (0+255),w,b
 34064   0041CE  6EE2               	movwf	fsr1h,c
 34065   0041D0  CFDF FFE7          	movff	indf2,indf1
 34066   0041D4  EE20 F006          	lfsr	2,6
 34067   0041D8  518E               	movf	push@m& (0+255),w,b
 34068   0041DA  26D9               	addwf	fsr2l,f,c
 34069   0041DC  518F               	movf	(push@m+1)& (0+255),w,b
 34070   0041DE  22DA               	addwfc	fsr2h,f,c
 34071   0041E0  518D               	movf	push@q& (0+255),w,b
 34072   0041E2  6EE1               	movwf	fsr1l,c
 34073   0041E4  6AE2               	clrf	fsr1h,c
 34074   0041E6  0E03               	movlw	3
 34075   0041E8  26E1               	addwf	fsr1l,f,c
 34076   0041EA  50E7               	movf	indf1,w,c
 34077   0041EC  6F90               	movwf	??_push& (0+255),b
 34078   0041EE  5190               	movf	??_push& (0+255),w,b
 34079   0041F0  0D09               	mullw	9
 34080   0041F2  CFF3 F091          	movff	prodl,??_push+1
 34081   0041F6  CFF4 F092          	movff	prodh,??_push+2
 34082   0041FA  518D               	movf	push@q& (0+255),w,b
 34083   0041FC  6EE1               	movwf	fsr1l,c
 34084   0041FE  6AE2               	clrf	fsr1h,c
 34085   004200  CFE6 F093          	movff	postinc1,??_push+3
 34086   004204  CFE5 F094          	movff	postdec1,??_push+4
 34087   004208  5191               	movf	(??_push+1)& (0+255),w,b
 34088   00420A  2593               	addwf	(??_push+3)& (0+255),w,b
 34089   00420C  6F95               	movwf	(??_push+5)& (0+255),b
 34090   00420E  5192               	movf	(??_push+2)& (0+255),w,b
 34091   004210  2194               	addwfc	(??_push+4)& (0+255),w,b
 34092   004212  6F96               	movwf	(??_push+6)& (0+255),b
 34093   004214  0E06               	movlw	6
 34094   004216  2595               	addwf	(??_push+5)& (0+255),w,b
 34095   004218  6EE1               	movwf	fsr1l,c
 34096   00421A  0E00               	movlw	0
 34097   00421C  2196               	addwfc	(??_push+6)& (0+255),w,b
 34098   00421E  6EE2               	movwf	fsr1h,c
 34099   004220  CFDF FFE7          	movff	indf2,indf1
 34100   004224  EE20 F007          	lfsr	2,7
 34101   004228  518E               	movf	push@m& (0+255),w,b
 34102   00422A  26D9               	addwf	fsr2l,f,c
 34103   00422C  518F               	movf	(push@m+1)& (0+255),w,b
 34104   00422E  22DA               	addwfc	fsr2h,f,c
 34105   004230  518D               	movf	push@q& (0+255),w,b
 34106   004232  6EE1               	movwf	fsr1l,c
 34107   004234  6AE2               	clrf	fsr1h,c
 34108   004236  0E03               	movlw	3
 34109   004238  26E1               	addwf	fsr1l,f,c
 34110   00423A  50E7               	movf	indf1,w,c
 34111   00423C  6F90               	movwf	??_push& (0+255),b
 34112   00423E  5190               	movf	??_push& (0+255),w,b
 34113   004240  0D09               	mullw	9
 34114   004242  CFF3 F091          	movff	prodl,??_push+1
 34115   004246  CFF4 F092          	movff	prodh,??_push+2
 34116   00424A  518D               	movf	push@q& (0+255),w,b
 34117   00424C  6EE1               	movwf	fsr1l,c
 34118   00424E  6AE2               	clrf	fsr1h,c
 34119   004250  CFE6 F093          	movff	postinc1,??_push+3
 34120   004254  CFE5 F094          	movff	postdec1,??_push+4
 34121   004258  5191               	movf	(??_push+1)& (0+255),w,b
 34122   00425A  2593               	addwf	(??_push+3)& (0+255),w,b
 34123   00425C  6F95               	movwf	(??_push+5)& (0+255),b
 34124   00425E  5192               	movf	(??_push+2)& (0+255),w,b
 34125   004260  2194               	addwfc	(??_push+4)& (0+255),w,b
 34126   004262  6F96               	movwf	(??_push+6)& (0+255),b
 34127   004264  0E07               	movlw	7
 34128   004266  2595               	addwf	(??_push+5)& (0+255),w,b
 34129   004268  6EE1               	movwf	fsr1l,c
 34130   00426A  0E00               	movlw	0
 34131   00426C  2196               	addwfc	(??_push+6)& (0+255),w,b
 34132   00426E  6EE2               	movwf	fsr1h,c
 34133   004270  CFDF FFE7          	movff	indf2,indf1
 34134   004274  EE20 F008          	lfsr	2,8
 34135   004278  518E               	movf	push@m& (0+255),w,b
 34136   00427A  26D9               	addwf	fsr2l,f,c
 34137   00427C  518F               	movf	(push@m+1)& (0+255),w,b
 34138   00427E  22DA               	addwfc	fsr2h,f,c
 34139   004280  518D               	movf	push@q& (0+255),w,b
 34140   004282  6EE1               	movwf	fsr1l,c
 34141   004284  6AE2               	clrf	fsr1h,c
 34142   004286  0E03               	movlw	3
 34143   004288  26E1               	addwf	fsr1l,f,c
 34144   00428A  50E7               	movf	indf1,w,c
 34145   00428C  6F90               	movwf	??_push& (0+255),b
 34146   00428E  5190               	movf	??_push& (0+255),w,b
 34147   004290  0D09               	mullw	9
 34148   004292  CFF3 F091          	movff	prodl,??_push+1
 34149   004296  CFF4 F092          	movff	prodh,??_push+2
 34150   00429A  518D               	movf	push@q& (0+255),w,b
 34151   00429C  6EE1               	movwf	fsr1l,c
 34152   00429E  6AE2               	clrf	fsr1h,c
 34153   0042A0  CFE6 F093          	movff	postinc1,??_push+3
 34154   0042A4  CFE5 F094          	movff	postdec1,??_push+4
 34155   0042A8  5191               	movf	(??_push+1)& (0+255),w,b
 34156   0042AA  2593               	addwf	(??_push+3)& (0+255),w,b
 34157   0042AC  6F95               	movwf	(??_push+5)& (0+255),b
 34158   0042AE  5192               	movf	(??_push+2)& (0+255),w,b
 34159   0042B0  2194               	addwfc	(??_push+4)& (0+255),w,b
 34160   0042B2  6F96               	movwf	(??_push+6)& (0+255),b
 34161   0042B4  0E08               	movlw	8
 34162   0042B6  2595               	addwf	(??_push+5)& (0+255),w,b
 34163   0042B8  6EE1               	movwf	fsr1l,c
 34164   0042BA  0E00               	movlw	0
 34165   0042BC  2196               	addwfc	(??_push+6)& (0+255),w,b
 34166   0042BE  6EE2               	movwf	fsr1h,c
 34167   0042C0  CFDF FFE7          	movff	indf2,indf1
 34168   0042C4  C08E  FFD9         	movff	push@m,fsr2l
 34169   0042C8  C08F  FFDA         	movff	push@m+1,fsr2h
 34170   0042CC  518D               	movf	push@q& (0+255),w,b
 34171   0042CE  6EE1               	movwf	fsr1l,c
 34172   0042D0  6AE2               	clrf	fsr1h,c
 34173   0042D2  0E03               	movlw	3
 34174   0042D4  26E1               	addwf	fsr1l,f,c
 34175   0042D6  50E7               	movf	indf1,w,c
 34176   0042D8  6F90               	movwf	??_push& (0+255),b
 34177   0042DA  5190               	movf	??_push& (0+255),w,b
 34178   0042DC  0D09               	mullw	9
 34179   0042DE  CFF3 F091          	movff	prodl,??_push+1
 34180   0042E2  CFF4 F092          	movff	prodh,??_push+2
 34181   0042E6  518D               	movf	push@q& (0+255),w,b
 34182   0042E8  6EE1               	movwf	fsr1l,c
 34183   0042EA  6AE2               	clrf	fsr1h,c
 34184   0042EC  CFE6 F093          	movff	postinc1,??_push+3
 34185   0042F0  CFE5 F094          	movff	postdec1,??_push+4
 34186   0042F4  5191               	movf	(??_push+1)& (0+255),w,b
 34187   0042F6  2593               	addwf	(??_push+3)& (0+255),w,b
 34188   0042F8  6EE1               	movwf	fsr1l,c
 34189   0042FA  5192               	movf	(??_push+2)& (0+255),w,b
 34190   0042FC  2194               	addwfc	(??_push+4)& (0+255),w,b
 34191   0042FE  6EE2               	movwf	fsr1h,c
 34192   004300  CFDF FFE7          	movff	indf2,indf1
 34193                           
 34194                           ; BSR set to: 0
 34195   004304  518D               	movf	push@q& (0+255),w,b
 34196   004306  6ED9               	movwf	fsr2l,c
 34197   004308  6ADA               	clrf	fsr2h,c
 34198   00430A  0E03               	movlw	3
 34199   00430C  26D9               	addwf	fsr2l,f,c
 34200   00430E  2ADF               	incf	indf2,f,c
 34201                           
 34202                           ; BSR set to: 0
 34203   004310  518D               	movf	push@q& (0+255),w,b
 34204   004312  6ED9               	movwf	fsr2l,c
 34205   004314  6ADA               	clrf	fsr2h,c
 34206   004316  0E04               	movlw	4
 34207   004318  26D9               	addwf	fsr2l,f,c
 34208   00431A  518D               	movf	push@q& (0+255),w,b
 34209   00431C  6EE1               	movwf	fsr1l,c
 34210   00431E  6AE2               	clrf	fsr1h,c
 34211   004320  0E03               	movlw	3
 34212   004322  26E1               	addwf	fsr1l,f,c
 34213   004324  50DE               	movf	postinc2,w,c
 34214   004326  5CE6               	subwf	postinc1,w,c
 34215   004328  A0D8               	btfss	status,0,c
 34216   00432A  D006               	goto	l19211
 34217                           
 34218                           ; BSR set to: 0
 34219   00432C  518D               	movf	push@q& (0+255),w,b
 34220   00432E  6ED9               	movwf	fsr2l,c
 34221   004330  6ADA               	clrf	fsr2h,c
 34222   004332  0E03               	movlw	3
 34223   004334  26D9               	addwf	fsr2l,f,c
 34224   004336  6ADF               	clrf	indf2,c
 34225   004338                     l19211:
 34226                           
 34227                           ; BSR set to: 0
 34228   004338  0E01               	movlw	1
 34229                           
 34230                           ; BSR set to: 0
 34231   00433A  0012               	return		;funcret
 34232   00433C                     __end_of_push:
 34233                           	callstack 0
 34234                           
 34235 ;; *************** function _isEvent *****************
 34236 ;; Defined at:
 34237 ;;		line 1118 in file "../../VLCBlib_PIC/vlcb.c"
 34238 ;; Parameters:    Size  Location     Type
 34239 ;;  opc             1    wreg     unsigned char 
 34240 ;; Auto vars:     Size  Location     Type
 34241 ;;  opc             1   46[BANK0 ] unsigned char 
 34242 ;; Return value:  Size  Location     Type
 34243 ;;                  1    wreg      enum E12760
 34244 ;; Registers used:
 34245 ;;		wreg, status,2, status,0
 34246 ;; Tracked objects:
 34247 ;;		On entry : 0/0
 34248 ;;		On exit  : 0/0
 34249 ;;		Unchanged: 0/0
 34250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34252 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34254 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34255 ;;Total ram usage:        2 bytes
 34256 ;; Hardware stack levels used: 1
 34257 ;; Hardware stack levels required when called: 12
 34258 ;; This function calls:
 34259 ;;		Nothing
 34260 ;; This function is called by:
 34261 ;;		_canSendMessage
 34262 ;; This function uses a non-reentrant model
 34263 ;;
 34264                           
 34265                           	psect	text134
 34266   00C276                     __ptext134:
 34267                           	callstack 0
 34268   00C276                     _isEvent:
 34269                           	callstack 12
 34270                           
 34271                           ; BSR set to: 0
 34272                           ;incstack = 0
 34273                           ;isEvent@opc stored from wreg
 34274   00C276  0100               	movlb	0	; () banked
 34275   00C278  6F8E               	movwf	isEvent@opc& (0+255),b
 34276                           
 34277                           ;../../VLCBlib_PIC/vlcb.c: 1119:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 34278   00C27A  0E00               	movlw	0
 34279   00C27C  0100               	movlb	0	; () banked
 34280   00C27E  6F8D               	movwf	_isEvent$4885& (0+255),b
 34281                           
 34282                           ; BSR set to: 0
 34283   00C280  518E               	movf	isEvent@opc& (0+255),w,b
 34284   00C282  0B90               	andlw	144
 34285   00C284  0A90               	xorlw	144
 34286   00C286  A4D8               	btfss	status,2,c
 34287   00C288  D008               	goto	l2047
 34288                           
 34289                           ; BSR set to: 0
 34290   00C28A  518E               	movf	isEvent@opc& (0+255),w,b
 34291   00C28C  0AFF               	xorlw	255
 34292   00C28E  0B06               	andlw	6
 34293   00C290  0A06               	xorlw	6
 34294   00C292  A4D8               	btfss	status,2,c
 34295   00C294  D002               	goto	l2047
 34296                           
 34297                           ; BSR set to: 0
 34298   00C296  0E01               	movlw	1
 34299   00C298  6F8D               	movwf	_isEvent$4885& (0+255),b
 34300   00C29A                     l2047:
 34301                           
 34302                           ; BSR set to: 0
 34303   00C29A  518D               	movf	_isEvent$4885& (0+255),w,b
 34304                           
 34305                           ; BSR set to: 0
 34306   00C29C  0012               	return		;funcret
 34307   00C29E                     __end_of_isEvent:
 34308                           	callstack 0
 34309                           
 34310 ;; *************** function _have *****************
 34311 ;; Defined at:
 34312 ;;		line 838 in file "../../VLCBlib_PIC/vlcb.c"
 34313 ;; Parameters:    Size  Location     Type
 34314 ;;  id              1    wreg     unsigned char 
 34315 ;; Auto vars:     Size  Location     Type
 34316 ;;  id              1   47[BANK0 ] unsigned char 
 34317 ;;  i               1   48[BANK0 ] unsigned char 
 34318 ;; Return value:  Size  Location     Type
 34319 ;;                  1    wreg      enum E12891
 34320 ;; Registers used:
 34321 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 34322 ;; Tracked objects:
 34323 ;;		On entry : 0/0
 34324 ;;		On exit  : 0/0
 34325 ;;		Unchanged: 0/0
 34326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34328 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34329 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34330 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34331 ;;Total ram usage:        4 bytes
 34332 ;; Hardware stack levels used: 1
 34333 ;; Hardware stack levels required when called: 12
 34334 ;; This function calls:
 34335 ;;		Nothing
 34336 ;; This function is called by:
 34337 ;;		_getParameterFlags
 34338 ;;		_getParameter
 34339 ;;		_canSendMessage
 34340 ;; This function uses a non-reentrant model
 34341 ;;
 34342                           
 34343                           	psect	text135
 34344   00ADF0                     __ptext135:
 34345                           	callstack 0
 34346   00ADF0                     _have:
 34347                           	callstack 12
 34348                           
 34349                           ; BSR set to: 0
 34350                           ;incstack = 0
 34351                           ;have@id stored from wreg
 34352   00ADF0  0100               	movlb	0	; () banked
 34353   00ADF2  6F8F               	movwf	have@id& (0+255),b
 34354                           
 34355                           ;../../VLCBlib_PIC/vlcb.c: 839:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 840:     for (i
      +                          =0; i<9; i++) {
 34356   00ADF4  0E00               	movlw	0
 34357   00ADF6  0100               	movlb	0	; () banked
 34358   00ADF8  6F90               	movwf	have@i& (0+255),b
 34359   00ADFA                     l19171:
 34360                           
 34361                           ; BSR set to: 0
 34362                           ;../../VLCBlib_PIC/vlcb.c: 841:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == id)) {
 34363   00ADFA  5190               	movf	have@i& (0+255),w,b
 34364   00ADFC  0D02               	mullw	2
 34365   00ADFE  0E69               	movlw	low _services
 34366   00AE00  24F3               	addwf	243,w,c
 34367   00AE02  6EF6               	movwf	tblptrl,c
 34368   00AE04  0EEE               	movlw	high _services
 34369   00AE06  20F4               	addwfc	244,w,c
 34370   00AE08  6EF7               	movwf	tblptrh,c
 34371   00AE0A                     	if	1	;There are 3 active tblptr bytes
 34372   00AE0A  6AF8               	clrf	tblptru,c
 34373   00AE0C  0E00               	movlw	low (__mediumconst shr (0+16))
 34374   00AE0E  22F8               	addwfc	tblptru,f,c
 34375   00AE10                     	endif
 34376   00AE10  0009               	tblrd		*+
 34377   00AE12  50F5               	movf	tablat,w,c
 34378   00AE14  0009               	tblrd		*+
 34379   00AE16  10F5               	iorwf	tablat,w,c
 34380   00AE18  B4D8               	btfsc	status,2,c
 34381   00AE1A  D01D               	goto	l19179
 34382                           
 34383                           ; BSR set to: 0
 34384   00AE1C  5190               	movf	have@i& (0+255),w,b
 34385   00AE1E  0D02               	mullw	2
 34386   00AE20  0E69               	movlw	low _services
 34387   00AE22  24F3               	addwf	243,w,c
 34388   00AE24  6EF6               	movwf	tblptrl,c
 34389   00AE26  0EEE               	movlw	high _services
 34390   00AE28  20F4               	addwfc	244,w,c
 34391   00AE2A  6EF7               	movwf	tblptrh,c
 34392   00AE2C                     	if	1	;There are 3 active tblptr bytes
 34393   00AE2C  6AF8               	clrf	tblptru,c
 34394   00AE2E  0E00               	movlw	low (__mediumconst shr (0+16))
 34395   00AE30  22F8               	addwfc	tblptru,f,c
 34396   00AE32                     	endif
 34397   00AE32  0009               	tblrd		*+
 34398   00AE34  CFF5 F08D          	movff	tablat,??_have
 34399   00AE38  0009               	tblrd		*+
 34400   00AE3A  CFF5 F08E          	movff	tablat,??_have+1
 34401   00AE3E  C08D  FFF6         	movff	??_have,tblptrl
 34402   00AE42  C08E  FFF7         	movff	??_have+1,tblptrh
 34403   00AE46                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 34404   00AE46  6AF8               	clrf	tblptru,c
 34405   00AE48                     	endif
 34406   00AE48                     	if	0	;tblptru may be non-zero
 34407   00AE48                     	endif
 34408   00AE48  0008               	tblrd		*
 34409   00AE4A  50F5               	movf	tablat,w,c
 34410   00AE4C  198F               	xorwf	have@id& (0+255),w,b
 34411   00AE4E  A4D8               	btfss	status,2,c
 34412   00AE50  D002               	goto	l19179
 34413                           
 34414                           ; BSR set to: 0
 34415                           ;../../VLCBlib_PIC/vlcb.c: 842:             return PRESENT;
 34416   00AE52  0E01               	movlw	1
 34417   00AE54  0012               	return	
 34418   00AE56                     l19179:
 34419                           
 34420                           ; BSR set to: 0
 34421                           ;../../VLCBlib_PIC/vlcb.c: 844:     }
 34422   00AE56  2B90               	incf	have@i& (0+255),f,b
 34423                           
 34424                           ; BSR set to: 0
 34425   00AE58  0E08               	movlw	8
 34426   00AE5A  6590               	cpfsgt	have@i& (0+255),b
 34427   00AE5C  D7CE               	goto	l19171
 34428                           
 34429                           ; BSR set to: 0
 34430                           ;../../VLCBlib_PIC/vlcb.c: 845:     return NOT_PRESENT;
 34431   00AE5E  0E00               	movlw	0
 34432                           
 34433                           ; BSR set to: 0
 34434   00AE60  0012               	return		;funcret
 34435   00AE62                     __end_of_have:
 34436                           	callstack 0
 34437                           
 34438 ;; *************** function _getNumTxBuffersInUse *****************
 34439 ;; Defined at:
 34440 ;;		line 461 in file "../../VLCBlib_PIC/can18_ecan.c"
 34441 ;; Parameters:    Size  Location     Type
 34442 ;;		None
 34443 ;; Auto vars:     Size  Location     Type
 34444 ;;		None
 34445 ;; Return value:  Size  Location     Type
 34446 ;;                  1    wreg      unsigned char 
 34447 ;; Registers used:
 34448 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34449 ;; Tracked objects:
 34450 ;;		On entry : 0/0
 34451 ;;		On exit  : 0/0
 34452 ;;		Unchanged: 0/0
 34453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34458 ;;Total ram usage:        0 bytes
 34459 ;; Hardware stack levels used: 1
 34460 ;; Hardware stack levels required when called: 13
 34461 ;; This function calls:
 34462 ;;		_quantity
 34463 ;; This function is called by:
 34464 ;;		_canGetDiagnostic
 34465 ;;		_canSendMessage
 34466 ;; This function uses a non-reentrant model
 34467 ;;
 34468                           
 34469                           	psect	text136
 34470   00C5CE                     __ptext136:
 34471                           	callstack 0
 34472   00C5CE                     _getNumTxBuffersInUse:
 34473                           	callstack 11
 34474                           
 34475                           ;../../VLCBlib_PIC/can18_ecan.c: 462:     return quantity(&txQueue);
 34476                           
 34477                           ; BSR set to: 0
 34478                           ;incstack = 0
 34479   00C5CE  0E4A               	movlw	low _txQueue
 34480   00C5D0  0100               	movlb	0	; () banked
 34481   00C5D2  6F8D               	movwf	quantity@q& (0+255),b
 34482   00C5D4  EC02  F05F         	call	_quantity	;wreg free
 34483   00C5D8  0012               	return		;funcret
 34484   00C5DA                     __end_of_getNumTxBuffersInUse:
 34485                           	callstack 0
 34486                           
 34487 ;; *************** function _quantity *****************
 34488 ;; Defined at:
 34489 ;;		line 130 in file "../../VLCBlib_PIC/messageQueue.c"
 34490 ;; Parameters:    Size  Location     Type
 34491 ;;  q               1   45[BANK0 ] PTR struct MessageQueue
 34492 ;;		 -> txQueue(5), rxQueue(5), 
 34493 ;; Auto vars:     Size  Location     Type
 34494 ;;		None
 34495 ;; Return value:  Size  Location     Type
 34496 ;;                  1    wreg      unsigned char 
 34497 ;; Registers used:
 34498 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34499 ;; Tracked objects:
 34500 ;;		On entry : 0/0
 34501 ;;		On exit  : 0/0
 34502 ;;		Unchanged: 0/0
 34503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34504 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34506 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34507 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34508 ;;Total ram usage:        5 bytes
 34509 ;; Hardware stack levels used: 1
 34510 ;; Hardware stack levels required when called: 12
 34511 ;; This function calls:
 34512 ;;		Nothing
 34513 ;; This function is called by:
 34514 ;;		_getNumTxBuffersInUse
 34515 ;;		_getNumRxBuffersInUse
 34516 ;;		_canSendMessage
 34517 ;; This function uses a non-reentrant model
 34518 ;;
 34519                           
 34520                           	psect	text137
 34521   00BE04                     __ptext137:
 34522                           	callstack 0
 34523   00BE04                     _quantity:
 34524                           	callstack 12
 34525                           
 34526                           ;../../VLCBlib_PIC/messageQueue.c: 131:     return (q->writeIndex - q->readIndex) & (q->
      +                          size -1);
 34527                           
 34528                           ;incstack = 0
 34529   00BE04  0100               	movlb	0	; () banked
 34530   00BE06  518D               	movf	quantity@q& (0+255),w,b
 34531   00BE08  6ED9               	movwf	fsr2l,c
 34532   00BE0A  6ADA               	clrf	fsr2h,c
 34533   00BE0C  0E02               	movlw	2
 34534   00BE0E  26D9               	addwf	fsr2l,f,c
 34535   00BE10  50DF               	movf	indf2,w,c
 34536   00BE12  6F8E               	movwf	??_quantity& (0+255),b
 34537   00BE14  518D               	movf	quantity@q& (0+255),w,b
 34538   00BE16  6ED9               	movwf	fsr2l,c
 34539   00BE18  6ADA               	clrf	fsr2h,c
 34540   00BE1A  0E03               	movlw	3
 34541   00BE1C  26D9               	addwf	fsr2l,f,c
 34542   00BE1E  50DF               	movf	indf2,w,c
 34543   00BE20  6F8F               	movwf	(??_quantity+1)& (0+255),b
 34544   00BE22  518E               	movf	??_quantity& (0+255),w,b
 34545   00BE24  5D8F               	subwf	(??_quantity+1)& (0+255),w,b
 34546   00BE26  6F90               	movwf	(??_quantity+2)& (0+255),b
 34547   00BE28  518D               	movf	quantity@q& (0+255),w,b
 34548   00BE2A  6ED9               	movwf	fsr2l,c
 34549   00BE2C  6ADA               	clrf	fsr2h,c
 34550   00BE2E  0E04               	movlw	4
 34551   00BE30  26D9               	addwf	fsr2l,f,c
 34552   00BE32  50DF               	movf	indf2,w,c
 34553   00BE34  6F91               	movwf	(??_quantity+3)& (0+255),b
 34554   00BE36  0591               	decf	(??_quantity+3)& (0+255),w,b
 34555   00BE38  1590               	andwf	(??_quantity+2)& (0+255),w,b
 34556                           
 34557                           ; BSR set to: 0
 34558   00BE3A  0012               	return		;funcret
 34559   00BE3C                     __end_of_quantity:
 34560                           	callstack 0
 34561                           
 34562 ;; *************** function _getNextWriteMessage *****************
 34563 ;; Defined at:
 34564 ;;		line 80 in file "../../VLCBlib_PIC/messageQueue.c"
 34565 ;; Parameters:    Size  Location     Type
 34566 ;;  q               1   45[BANK0 ] PTR struct MessageQueue
 34567 ;;		 -> rxQueue(5), 
 34568 ;; Auto vars:     Size  Location     Type
 34569 ;;  wr              1   56[BANK0 ] unsigned char 
 34570 ;; Return value:  Size  Location     Type
 34571 ;;                  2   45[BANK0 ] PTR struct Message
 34572 ;; Registers used:
 34573 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34574 ;; Tracked objects:
 34575 ;;		On entry : 0/0
 34576 ;;		On exit  : 0/0
 34577 ;;		Unchanged: 0/0
 34578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34579 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34580 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34581 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34582 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34583 ;;Total ram usage:       12 bytes
 34584 ;; Hardware stack levels used: 1
 34585 ;; Hardware stack levels required when called: 12
 34586 ;; This function calls:
 34587 ;;		Nothing
 34588 ;; This function is called by:
 34589 ;;		_canSendMessage
 34590 ;; This function uses a non-reentrant model
 34591 ;;
 34592                           
 34593                           	psect	text138
 34594   008B80                     __ptext138:
 34595                           	callstack 0
 34596   008B80                     _getNextWriteMessage:
 34597                           	callstack 12
 34598                           
 34599                           ; BSR set to: 0
 34600                           ;incstack = 0
 34601   008B80  0100               	movlb	0	; () banked
 34602   008B82  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 34603   008B84  6ED9               	movwf	fsr2l,c
 34604   008B86  6ADA               	clrf	fsr2h,c
 34605   008B88  0E02               	movlw	2
 34606   008B8A  26D9               	addwf	fsr2l,f,c
 34607   008B8C  50DF               	movf	indf2,w,c
 34608   008B8E  6F8F               	movwf	??_getNextWriteMessage& (0+255),b
 34609   008B90  6B90               	clrf	(??_getNextWriteMessage+1)& (0+255),b
 34610   008B92  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 34611   008B94  6ED9               	movwf	fsr2l,c
 34612   008B96  6ADA               	clrf	fsr2h,c
 34613   008B98  0E04               	movlw	4
 34614   008B9A  26D9               	addwf	fsr2l,f,c
 34615   008B9C  50DF               	movf	indf2,w,c
 34616   008B9E  6F91               	movwf	(??_getNextWriteMessage+2)& (0+255),b
 34617   008BA0  0EFF               	movlw	255
 34618   008BA2  2591               	addwf	(??_getNextWriteMessage+2)& (0+255),w,b
 34619   008BA4  6F92               	movwf	(??_getNextWriteMessage+3)& (0+255),b
 34620   008BA6  6B93               	clrf	(??_getNextWriteMessage+4)& (0+255),b
 34621   008BA8  0EFF               	movlw	255
 34622   008BAA  2393               	addwfc	(??_getNextWriteMessage+4)& (0+255),f,b
 34623   008BAC  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 34624   008BAE  6ED9               	movwf	fsr2l,c
 34625   008BB0  6ADA               	clrf	fsr2h,c
 34626   008BB2  0E03               	movlw	3
 34627   008BB4  26D9               	addwf	fsr2l,f,c
 34628   008BB6  50DF               	movf	indf2,w,c
 34629   008BB8  6F94               	movwf	(??_getNextWriteMessage+5)& (0+255),b
 34630   008BBA  6B95               	clrf	(??_getNextWriteMessage+6)& (0+255),b
 34631   008BBC  0E01               	movlw	1
 34632   008BBE  2794               	addwf	(??_getNextWriteMessage+5)& (0+255),f,b
 34633   008BC0  0E00               	movlw	0
 34634   008BC2  2395               	addwfc	(??_getNextWriteMessage+6)& (0+255),f,b
 34635   008BC4  5192               	movf	(??_getNextWriteMessage+3)& (0+255),w,b
 34636   008BC6  1594               	andwf	(??_getNextWriteMessage+5)& (0+255),w,b
 34637   008BC8  6F96               	movwf	(??_getNextWriteMessage+7)& (0+255),b
 34638   008BCA  5193               	movf	(??_getNextWriteMessage+4)& (0+255),w,b
 34639   008BCC  1595               	andwf	(??_getNextWriteMessage+6)& (0+255),w,b
 34640   008BCE  6F97               	movwf	(??_getNextWriteMessage+8)& (0+255),b
 34641   008BD0  518F               	movf	??_getNextWriteMessage& (0+255),w,b
 34642   008BD2  1996               	xorwf	(??_getNextWriteMessage+7)& (0+255),w,b
 34643   008BD4  E109               	bnz	l19221
 34644   008BD6  5190               	movf	(??_getNextWriteMessage+1)& (0+255),w,b
 34645   008BD8  1997               	xorwf	(??_getNextWriteMessage+8)& (0+255),w,b
 34646   008BDA  A4D8               	btfss	status,2,c
 34647   008BDC  D005               	goto	l19221
 34648                           
 34649                           ; BSR set to: 0
 34650   008BDE  0E00               	movlw	0
 34651   008BE0  6F8D               	movwf	?_getNextWriteMessage& (0+255),b
 34652   008BE2  0E00               	movlw	0
 34653   008BE4  6F8E               	movwf	(?_getNextWriteMessage+1)& (0+255),b
 34654   008BE6  0012               	return	
 34655   008BE8                     l19221:
 34656                           
 34657                           ; BSR set to: 0
 34658   008BE8  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 34659   008BEA  6ED9               	movwf	fsr2l,c
 34660   008BEC  6ADA               	clrf	fsr2h,c
 34661   008BEE  0E03               	movlw	3
 34662   008BF0  26D9               	addwf	fsr2l,f,c
 34663   008BF2  50DF               	movf	indf2,w,c
 34664   008BF4  6F98               	movwf	getNextWriteMessage@wr& (0+255),b
 34665   008BF6  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 34666   008BF8  6ED9               	movwf	fsr2l,c
 34667   008BFA  6ADA               	clrf	fsr2h,c
 34668   008BFC  0E03               	movlw	3
 34669   008BFE  26D9               	addwf	fsr2l,f,c
 34670   008C00  2ADF               	incf	indf2,f,c
 34671                           
 34672                           ; BSR set to: 0
 34673   008C02  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 34674   008C04  6ED9               	movwf	fsr2l,c
 34675   008C06  6ADA               	clrf	fsr2h,c
 34676   008C08  0E04               	movlw	4
 34677   008C0A  26D9               	addwf	fsr2l,f,c
 34678   008C0C  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 34679   008C0E  6EE1               	movwf	fsr1l,c
 34680   008C10  6AE2               	clrf	fsr1h,c
 34681   008C12  0E03               	movlw	3
 34682   008C14  26E1               	addwf	fsr1l,f,c
 34683   008C16  50DE               	movf	postinc2,w,c
 34684   008C18  5CE6               	subwf	postinc1,w,c
 34685   008C1A  A0D8               	btfss	status,0,c
 34686   008C1C  D006               	goto	l19227
 34687                           
 34688                           ; BSR set to: 0
 34689   008C1E  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 34690   008C20  6ED9               	movwf	fsr2l,c
 34691   008C22  6ADA               	clrf	fsr2h,c
 34692   008C24  0E03               	movlw	3
 34693   008C26  26D9               	addwf	fsr2l,f,c
 34694   008C28  6ADF               	clrf	indf2,c
 34695   008C2A                     l19227:
 34696                           
 34697                           ; BSR set to: 0
 34698   008C2A  5198               	movf	getNextWriteMessage@wr& (0+255),w,b
 34699   008C2C  0D09               	mullw	9
 34700   008C2E  CFF3 F08F          	movff	prodl,??_getNextWriteMessage
 34701   008C32  CFF4 F090          	movff	prodh,??_getNextWriteMessage+1
 34702   008C36  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 34703   008C38  6ED9               	movwf	fsr2l,c
 34704   008C3A  6ADA               	clrf	fsr2h,c
 34705   008C3C  CFDE F091          	movff	postinc2,??_getNextWriteMessage+2
 34706   008C40  CFDD F092          	movff	postdec2,??_getNextWriteMessage+3
 34707   008C44  518F               	movf	??_getNextWriteMessage& (0+255),w,b
 34708   008C46  2591               	addwf	(??_getNextWriteMessage+2)& (0+255),w,b
 34709   008C48  6F8D               	movwf	?_getNextWriteMessage& (0+255),b
 34710   008C4A  5190               	movf	(??_getNextWriteMessage+1)& (0+255),w,b
 34711   008C4C  2192               	addwfc	(??_getNextWriteMessage+3)& (0+255),w,b
 34712   008C4E  6F8E               	movwf	(?_getNextWriteMessage+1)& (0+255),b
 34713                           
 34714                           ; BSR set to: 0
 34715   008C50  0012               	return		;funcret
 34716   008C52                     __end_of_getNextWriteMessage:
 34717                           	callstack 0
 34718                           
 34719 ;; *************** function _readInput *****************
 34720 ;; Defined at:
 34721 ;;		line 174 in file "../inputs.c"
 34722 ;; Parameters:    Size  Location     Type
 34723 ;;  io              1    wreg     unsigned char 
 34724 ;; Auto vars:     Size  Location     Type
 34725 ;;  io              1   51[BANK0 ] unsigned char 
 34726 ;; Return value:  Size  Location     Type
 34727 ;;                  1    wreg      enum E12711
 34728 ;; Registers used:
 34729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34730 ;; Tracked objects:
 34731 ;;		On entry : 0/0
 34732 ;;		On exit  : 0/0
 34733 ;;		Unchanged: 0/0
 34734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34736 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34737 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34738 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34739 ;;Total ram usage:        3 bytes
 34740 ;; Hardware stack levels used: 1
 34741 ;; Hardware stack levels required when called: 13
 34742 ;; This function calls:
 34743 ;;		_getNV
 34744 ;; This function is called by:
 34745 ;;		_initInputScan
 34746 ;;		_inputScan
 34747 ;; This function uses a non-reentrant model
 34748 ;;
 34749                           
 34750                           	psect	text139
 34751   007F60                     __ptext139:
 34752                           	callstack 0
 34753   007F60                     _readInput:
 34754                           	callstack 15
 34755                           
 34756                           ; BSR set to: 0
 34757                           ;incstack = 0
 34758                           ;readInput@io stored from wreg
 34759   007F60  0100               	movlb	0	; () banked
 34760   007F62  6F93               	movwf	readInput@io& (0+255),b
 34761                           
 34762                           ;../inputs.c: 175:     if (getNV((16 + 7*(io) + 0)) == 0) {
 34763   007F64  0100               	movlb	0	; () banked
 34764   007F66  5193               	movf	readInput@io& (0+255),w,b
 34765   007F68  0D07               	mullw	7
 34766   007F6A  50F3               	movf	243,w,c
 34767   007F6C  0F10               	addlw	16
 34768   007F6E  EC52  F05E         	call	_getNV
 34769   007F72  0100               	movlb	0	; () banked
 34770   007F74  518D               	movf	?_getNV& (0+255),w,b
 34771   007F76  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 34772   007F78  B4D8               	btfsc	status,2,c
 34773   007F7A  D05B               	goto	l21345
 34774   007F7C  D074               	goto	l21347
 34775   007F7E                     l21331:
 34776                           
 34777                           ; BSR set to: 0
 34778                           ;../inputs.c: 178:                 return PORTA & (1<<configs[io].no);
 34779   007F7E  5193               	movf	readInput@io& (0+255),w,b
 34780   007F80  0D04               	mullw	4
 34781   007F82  0E02               	movlw	2
 34782   007F84  26F3               	addwf	243,f,c
 34783   007F86  0E00               	movlw	0
 34784   007F88  22F4               	addwfc	244,f,c
 34785   007F8A  0E29               	movlw	low _configs
 34786   007F8C  24F3               	addwf	243,w,c
 34787   007F8E  6EF6               	movwf	tblptrl,c
 34788   007F90  0EEE               	movlw	high _configs
 34789   007F92  20F4               	addwfc	244,w,c
 34790   007F94  6EF7               	movwf	tblptrh,c
 34791   007F96                     	if	1	;There are 3 active tblptr bytes
 34792   007F96  6AF8               	clrf	tblptru,c
 34793   007F98  0E00               	movlw	low (__mediumconst shr (0+16))
 34794   007F9A  22F8               	addwfc	tblptru,f,c
 34795   007F9C                     	endif
 34796   007F9C  0008               	tblrd		*
 34797   007F9E  CFF5 F091          	movff	tablat,??_readInput
 34798   007FA2  0E01               	movlw	1
 34799   007FA4  6F92               	movwf	(??_readInput+1)& (0+255),b
 34800   007FA6  2B91               	incf	??_readInput& (0+255),f,b
 34801   007FA8  D002               	goto	u21824
 34802   007FAA                     u21825:
 34803   007FAA  90D8               	bcf	status,0,c
 34804   007FAC  3792               	rlcf	(??_readInput+1)& (0+255),f,b
 34805   007FAE                     u21824:
 34806   007FAE  2F91               	decfsz	??_readInput& (0+255),f,b
 34807   007FB0  D7FC               	goto	u21825
 34808   007FB2  0100               	movlb	0	; () banked
 34809   007FB4  5192               	movf	(??_readInput+1)& (0+255),w,b
 34810   007FB6  1480               	andwf	128,w,c	;volatile
 34811   007FB8  0012               	return	
 34812   007FBA                     l21335:
 34813                           
 34814                           ; BSR set to: 0
 34815                           ;../inputs.c: 180:                 return PORTB & (1<<configs[io].no);
 34816   007FBA  5193               	movf	readInput@io& (0+255),w,b
 34817   007FBC  0D04               	mullw	4
 34818   007FBE  0E02               	movlw	2
 34819   007FC0  26F3               	addwf	243,f,c
 34820   007FC2  0E00               	movlw	0
 34821   007FC4  22F4               	addwfc	244,f,c
 34822   007FC6  0E29               	movlw	low _configs
 34823   007FC8  24F3               	addwf	243,w,c
 34824   007FCA  6EF6               	movwf	tblptrl,c
 34825   007FCC  0EEE               	movlw	high _configs
 34826   007FCE  20F4               	addwfc	244,w,c
 34827   007FD0  6EF7               	movwf	tblptrh,c
 34828   007FD2                     	if	1	;There are 3 active tblptr bytes
 34829   007FD2  6AF8               	clrf	tblptru,c
 34830   007FD4  0E00               	movlw	low (__mediumconst shr (0+16))
 34831   007FD6  22F8               	addwfc	tblptru,f,c
 34832   007FD8                     	endif
 34833   007FD8  0008               	tblrd		*
 34834   007FDA  CFF5 F091          	movff	tablat,??_readInput
 34835   007FDE  0E01               	movlw	1
 34836   007FE0  6F92               	movwf	(??_readInput+1)& (0+255),b
 34837   007FE2  2B91               	incf	??_readInput& (0+255),f,b
 34838   007FE4  D002               	goto	u21834
 34839   007FE6                     u21835:
 34840   007FE6  90D8               	bcf	status,0,c
 34841   007FE8  3792               	rlcf	(??_readInput+1)& (0+255),f,b
 34842   007FEA                     u21834:
 34843   007FEA  2F91               	decfsz	??_readInput& (0+255),f,b
 34844   007FEC  D7FC               	goto	u21835
 34845   007FEE  0100               	movlb	0	; () banked
 34846   007FF0  5192               	movf	(??_readInput+1)& (0+255),w,b
 34847   007FF2  1481               	andwf	129,w,c	;volatile
 34848   007FF4  0012               	return	
 34849   007FF6                     l21339:
 34850                           
 34851                           ; BSR set to: 0
 34852                           ;../inputs.c: 182:                 return PORTC & (1<<configs[io].no);
 34853   007FF6  5193               	movf	readInput@io& (0+255),w,b
 34854   007FF8  0D04               	mullw	4
 34855   007FFA  0E02               	movlw	2
 34856   007FFC  26F3               	addwf	243,f,c
 34857   007FFE  0E00               	movlw	0
 34858   008000  22F4               	addwfc	244,f,c
 34859   008002  0E29               	movlw	low _configs
 34860   008004  24F3               	addwf	243,w,c
 34861   008006  6EF6               	movwf	tblptrl,c
 34862   008008  0EEE               	movlw	high _configs
 34863   00800A  20F4               	addwfc	244,w,c
 34864   00800C  6EF7               	movwf	tblptrh,c
 34865   00800E                     	if	1	;There are 3 active tblptr bytes
 34866   00800E  6AF8               	clrf	tblptru,c
 34867   008010  0E00               	movlw	low (__mediumconst shr (0+16))
 34868   008012  22F8               	addwfc	tblptru,f,c
 34869   008014                     	endif
 34870   008014  0008               	tblrd		*
 34871   008016  CFF5 F091          	movff	tablat,??_readInput
 34872   00801A  0E01               	movlw	1
 34873   00801C  6F92               	movwf	(??_readInput+1)& (0+255),b
 34874   00801E  2B91               	incf	??_readInput& (0+255),f,b
 34875   008020  D002               	goto	u21844
 34876   008022                     u21845:
 34877   008022  90D8               	bcf	status,0,c
 34878   008024  3792               	rlcf	(??_readInput+1)& (0+255),f,b
 34879   008026                     u21844:
 34880   008026  2F91               	decfsz	??_readInput& (0+255),f,b
 34881   008028  D7FC               	goto	u21845
 34882   00802A  0100               	movlb	0	; () banked
 34883   00802C  5192               	movf	(??_readInput+1)& (0+255),w,b
 34884   00802E  1482               	andwf	130,w,c	;volatile
 34885   008030  0012               	return	
 34886   008032                     l21345:
 34887                           
 34888                           ; BSR set to: 0
 34889   008032  5193               	movf	readInput@io& (0+255),w,b
 34890   008034  0D04               	mullw	4
 34891   008036  0E01               	movlw	1
 34892   008038  26F3               	addwf	243,f,c
 34893   00803A  0E00               	movlw	0
 34894   00803C  22F4               	addwfc	244,f,c
 34895   00803E  0E29               	movlw	low _configs
 34896   008040  24F3               	addwf	243,w,c
 34897   008042  6EF6               	movwf	tblptrl,c
 34898   008044  0EEE               	movlw	high _configs
 34899   008046  20F4               	addwfc	244,w,c
 34900   008048  6EF7               	movwf	tblptrh,c
 34901   00804A                     	if	1	;There are 3 active tblptr bytes
 34902   00804A  6AF8               	clrf	tblptru,c
 34903   00804C  0E00               	movlw	low (__mediumconst shr (0+16))
 34904   00804E  22F8               	addwfc	tblptru,f,c
 34905   008050                     	endif
 34906   008050  0008               	tblrd		*
 34907   008052  50F5               	movf	tablat,w,c
 34908                           
 34909                           ; Switch size 1, requested type "simple"
 34910                           ; Number of cases is 3, Range of values is 65 to 67
 34911                           ; switch strategies available:
 34912                           ; Name         Instructions Cycles
 34913                           ; simple_byte           10     6 (average)
 34914                           ;	Chosen strategy is simple_byte
 34915   008054  0A41               	xorlw	65	; case 65
 34916   008056  B4D8               	btfsc	status,2,c
 34917   008058  D792               	goto	l21331
 34918   00805A  0A03               	xorlw	3	; case 66
 34919   00805C  B4D8               	btfsc	status,2,c
 34920   00805E  D7AD               	goto	l21335
 34921   008060  0A01               	xorlw	1	; case 67
 34922   008062  B4D8               	btfsc	status,2,c
 34923   008064  D7C8               	goto	l21339
 34924   008066                     l21347:
 34925                           
 34926                           ; BSR set to: 0
 34927                           ;../inputs.c: 191:     return FALSE;
 34928   008066  0E00               	movlw	0
 34929                           
 34930                           ; BSR set to: 0
 34931   008068  0012               	return		;funcret
 34932   00806A                     __end_of_readInput:
 34933                           	callstack 0
 34934                           
 34935 ;; *************** function _initRomOps *****************
 34936 ;; Defined at:
 34937 ;;		line 156 in file "../../VLCBlib_PIC/nvm.c"
 34938 ;; Parameters:    Size  Location     Type
 34939 ;;		None
 34940 ;; Auto vars:     Size  Location     Type
 34941 ;;		None
 34942 ;; Return value:  Size  Location     Type
 34943 ;;                  1    wreg      void 
 34944 ;; Registers used:
 34945 ;;		wreg, status,2
 34946 ;; Tracked objects:
 34947 ;;		On entry : 0/0
 34948 ;;		On exit  : 0/0
 34949 ;;		Unchanged: 0/0
 34950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34955 ;;Total ram usage:        0 bytes
 34956 ;; Hardware stack levels used: 1
 34957 ;; Hardware stack levels required when called: 12
 34958 ;; This function calls:
 34959 ;;		Nothing
 34960 ;; This function is called by:
 34961 ;;		_main
 34962 ;; This function uses a non-reentrant model
 34963 ;;
 34964                           
 34965                           	psect	text140
 34966   00C572                     __ptext140:
 34967                           	callstack 0
 34968   00C572                     _initRomOps:
 34969                           	callstack 18
 34970                           
 34971                           ;../../VLCBlib_PIC/nvm.c: 157:     flashFlags.asByte = 0;
 34972                           
 34973                           ; BSR set to: 0
 34974                           ;incstack = 0
 34975   00C572  0E00               	movlw	0
 34976   00C574  0100               	movlb	0	; () banked
 34977   00C576  6FC2               	movwf	_flashFlags& (0+255),b
 34978                           
 34979                           ;../../VLCBlib_PIC/nvm.c: 158:     flashBlock = 0x0700;
 34980   00C578  0E07               	movlw	7
 34981   00C57A  6FD2               	movwf	(_flashBlock+1)& (0+255),b
 34982   00C57C  0E00               	movlw	0
 34983   00C57E  6FD1               	movwf	_flashBlock& (0+255),b
 34984                           
 34985                           ;../../VLCBlib_PIC/nvm.c: 160:     TBLPTRU = 0;
 34986   00C580  0E00               	movlw	0
 34987   00C582  6EF8               	movwf	248,c	;volatile
 34988                           
 34989                           ; BSR set to: 0
 34990   00C584  0012               	return		;funcret
 34991   00C586                     __end_of_initRomOps:
 34992                           	callstack 0
 34993                           
 34994 ;; *************** function _checkPowerOnPb *****************
 34995 ;; Defined at:
 34996 ;;		line 954 in file "../../VLCBlib_PIC/vlcb.c"
 34997 ;; Parameters:    Size  Location     Type
 34998 ;;		None
 34999 ;; Auto vars:     Size  Location     Type
 35000 ;;  i               1   57[BANK1 ] unsigned char 
 35001 ;; Return value:  Size  Location     Type
 35002 ;;                  1    wreg      void 
 35003 ;; Registers used:
 35004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35005 ;; Tracked objects:
 35006 ;;		On entry : 0/0
 35007 ;;		On exit  : 0/0
 35008 ;;		Unchanged: 0/0
 35009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35011 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35013 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35014 ;;Total ram usage:        1 bytes
 35015 ;; Hardware stack levels used: 1
 35016 ;; Hardware stack levels required when called: 27
 35017 ;; This function calls:
 35018 ;;		_APP_testMode
 35019 ;;		_factoryReset
 35020 ;;		_pbDownTimer
 35021 ;;		_pbUpTimer
 35022 ;;		_showStatus
 35023 ;; This function is called by:
 35024 ;;		_main
 35025 ;; This function uses a non-reentrant model
 35026 ;;
 35027                           
 35028                           	psect	text141
 35029   00B45E                     __ptext141:
 35030                           	callstack 0
 35031   00B45E                     _checkPowerOnPb:
 35032                           	callstack 3
 35033                           
 35034                           ;../../VLCBlib_PIC/vlcb.c: 955:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 958:     if ((!
      +                          (PORTAbits.RA2))) {
 35035                           
 35036                           ; BSR set to: 0
 35037                           ;incstack = 0
 35038   00B45E  B480               	btfsc	128,2,c	;volatile
 35039   00B460  0012               	return	
 35040                           
 35041                           ;../../VLCBlib_PIC/vlcb.c: 960:         i = pbDownTimer(30);
 35042   00B462  0E1E               	movlw	30
 35043   00B464  EC47  F04C         	call	_pbDownTimer
 35044   00B468  0101               	movlb	1	; () banked
 35045   00B46A  6FF3               	movwf	checkPowerOnPb@i& (0+255),b
 35046                           
 35047                           ; BSR set to: 1
 35048                           ;../../VLCBlib_PIC/vlcb.c: 961:         if (i == 0) {
 35049   00B46C  51F3               	movf	checkPowerOnPb@i& (0+255),w,b
 35050   00B46E  B4D8               	btfsc	status,2,c
 35051   00B470  0012               	return	
 35052                           
 35053                           ; BSR set to: 1
 35054                           
 35055                           ; BSR set to: 1
 35056                           ;../../VLCBlib_PIC/vlcb.c: 963:             return;
 35057   00B472  0E01               	movlw	1
 35058   00B474  65F3               	cpfsgt	checkPowerOnPb@i& (0+255),b
 35059   00B476  D006               	goto	l24833
 35060                           
 35061                           ; BSR set to: 1
 35062   00B478  0E06               	movlw	6
 35063   00B47A  61F3               	cpfslt	checkPowerOnPb@i& (0+255),b
 35064   00B47C  D003               	goto	l24833
 35065                           
 35066                           ; BSR set to: 1
 35067                           ;../../VLCBlib_PIC/vlcb.c: 965:             APP_testMode();
 35068   00B47E  EC2A  F063         	call	_APP_testMode	;wreg free
 35069                           
 35070                           ;../../VLCBlib_PIC/vlcb.c: 966:         } else if (i >= 10) {
 35071   00B482  0012               	return	
 35072   00B484                     l24833:
 35073                           
 35074                           ; BSR set to: 1
 35075   00B484  0E09               	movlw	9
 35076   00B486  65F3               	cpfsgt	checkPowerOnPb@i& (0+255),b
 35077   00B488  0012               	return	
 35078                           
 35079                           ; BSR set to: 1
 35080                           ;../../VLCBlib_PIC/vlcb.c: 967:             showStatus(STATUS_RESET_WARNING);
 35081   00B48A  0E04               	movlw	4
 35082   00B48C  EC96  F043         	call	_showStatus
 35083                           
 35084                           ;../../VLCBlib_PIC/vlcb.c: 969:             i = pbUpTimer(5);
 35085   00B490  0E05               	movlw	5
 35086   00B492  ECEF  F04B         	call	_pbUpTimer
 35087   00B496  0101               	movlb	1	; () banked
 35088   00B498  6FF3               	movwf	checkPowerOnPb@i& (0+255),b
 35089                           
 35090                           ; BSR set to: 1
 35091                           ;../../VLCBlib_PIC/vlcb.c: 970:             if (i == 0) {
 35092   00B49A  51F3               	movf	checkPowerOnPb@i& (0+255),w,b
 35093   00B49C  B4D8               	btfsc	status,2,c
 35094   00B49E  0012               	return	
 35095                           
 35096                           ; BSR set to: 1
 35097                           ;../../VLCBlib_PIC/vlcb.c: 974:             i = pbDownTimer(5);
 35098   00B4A0  0E05               	movlw	5
 35099   00B4A2  EC47  F04C         	call	_pbDownTimer
 35100   00B4A6  0101               	movlb	1	; () banked
 35101   00B4A8  6FF3               	movwf	checkPowerOnPb@i& (0+255),b
 35102                           
 35103                           ; BSR set to: 1
 35104                           ;../../VLCBlib_PIC/vlcb.c: 975:             if ((i>=2) && (i < 4)) {
 35105   00B4AA  0E01               	movlw	1
 35106   00B4AC  65F3               	cpfsgt	checkPowerOnPb@i& (0+255),b
 35107   00B4AE  0012               	return	
 35108                           
 35109                           ; BSR set to: 1
 35110   00B4B0  0E04               	movlw	4
 35111   00B4B2  61F3               	cpfslt	checkPowerOnPb@i& (0+255),b
 35112   00B4B4  0012               	return	
 35113                           
 35114                           ; BSR set to: 1
 35115                           ;../../VLCBlib_PIC/vlcb.c: 976:                 factoryReset();
 35116   00B4B6  ECB1  F042         	call	_factoryReset	;wreg free
 35117   00B4BA  0012               	return		;funcret
 35118   00B4BC                     __end_of_checkPowerOnPb:
 35119                           	callstack 0
 35120                           
 35121 ;; *************** function _showStatus *****************
 35122 ;; Defined at:
 35123 ;;		line 235 in file "../../VLCBlib_PIC/statusLeds2.c"
 35124 ;; Parameters:    Size  Location     Type
 35125 ;;  s               1    wreg     enum E12891
 35126 ;; Auto vars:     Size  Location     Type
 35127 ;;  s               1   47[BANK0 ] enum E12891
 35128 ;; Return value:  Size  Location     Type
 35129 ;;                  1    wreg      void 
 35130 ;; Registers used:
 35131 ;;		wreg, status,2, status,0
 35132 ;; Tracked objects:
 35133 ;;		On entry : 0/0
 35134 ;;		On exit  : 0/0
 35135 ;;		Unchanged: 0/0
 35136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35138 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35139 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35140 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35141 ;;Total ram usage:        3 bytes
 35142 ;; Hardware stack levels used: 1
 35143 ;; Hardware stack levels required when called: 12
 35144 ;; This function calls:
 35145 ;;		Nothing
 35146 ;; This function is called by:
 35147 ;;		_setLEDsByMode
 35148 ;;		_checkPowerOnPb
 35149 ;;		_poll
 35150 ;; This function uses a non-reentrant model
 35151 ;;
 35152                           
 35153                           	psect	text142
 35154   00872C                     __ptext142:
 35155                           	callstack 0
 35156   00872C                     _showStatus:
 35157                           	callstack 15
 35158                           
 35159                           ;incstack = 0
 35160                           ;showStatus@s stored from wreg
 35161   00872C  0100               	movlb	0	; () banked
 35162   00872E  6F8F               	movwf	showStatus@s& (0+255),b
 35163                           
 35164                           ;../../VLCBlib_PIC/statusLeds2.c: 236:     switch (s) {
 35165   008730  D03E               	goto	l21059
 35166   008732                     l21029:
 35167                           
 35168                           ; BSR set to: 0
 35169                           ;../../VLCBlib_PIC/statusLeds2.c: 238:             ledState[0] = LED_OFF;
 35170   008732  0E00               	movlw	0
 35171   008734  6FBB               	movwf	_ledState& (0+255),b
 35172                           
 35173                           ;../../VLCBlib_PIC/statusLeds2.c: 239:             ledState[1] = LED_OFF;
 35174   008736  0E00               	movlw	0
 35175   008738  6FBC               	movwf	(_ledState+1)& (0+255),b
 35176                           
 35177                           ;../../VLCBlib_PIC/statusLeds2.c: 240:             break;
 35178   00873A  0012               	return	
 35179   00873C                     l21031:
 35180                           
 35181                           ; BSR set to: 0
 35182                           ;../../VLCBlib_PIC/statusLeds2.c: 242:             ledState[0] = LED_ON;
 35183   00873C  0E01               	movlw	1
 35184   00873E  6FBB               	movwf	_ledState& (0+255),b
 35185                           
 35186                           ;../../VLCBlib_PIC/statusLeds2.c: 243:             ledState[1] = LED_OFF;
 35187   008740  0E00               	movlw	0
 35188   008742  6FBC               	movwf	(_ledState+1)& (0+255),b
 35189                           
 35190                           ;../../VLCBlib_PIC/statusLeds2.c: 244:             break;
 35191   008744  0012               	return	
 35192   008746                     l21033:
 35193                           
 35194                           ; BSR set to: 0
 35195                           ;../../VLCBlib_PIC/statusLeds2.c: 246:             ledState[0] = LED_OFF;
 35196   008746  0E00               	movlw	0
 35197   008748  6FBB               	movwf	_ledState& (0+255),b
 35198                           
 35199                           ;../../VLCBlib_PIC/statusLeds2.c: 247:             ledState[1] = LED_FLASH_50_1HZ;
 35200   00874A  0E03               	movlw	3
 35201   00874C  6FBC               	movwf	(_ledState+1)& (0+255),b
 35202                           
 35203                           ;../../VLCBlib_PIC/statusLeds2.c: 248:             break;
 35204   00874E  0012               	return	
 35205   008750                     l1800:
 35206                           
 35207                           ; BSR set to: 0
 35208                           ;../../VLCBlib_PIC/statusLeds2.c: 254:             ledState[0] = LED_OFF;
 35209                           
 35210                           ; BSR set to: 0
 35211   008750  0E00               	movlw	0
 35212   008752  6FBB               	movwf	_ledState& (0+255),b
 35213                           
 35214                           ;../../VLCBlib_PIC/statusLeds2.c: 255:             ledState[1] = LED_ON;
 35215   008754  0E01               	movlw	1
 35216   008756  6FBC               	movwf	(_ledState+1)& (0+255),b
 35217                           
 35218                           ;../../VLCBlib_PIC/statusLeds2.c: 256:             break;
 35219   008758  0012               	return	
 35220   00875A                     l21037:
 35221                           
 35222                           ; BSR set to: 0
 35223                           ;../../VLCBlib_PIC/statusLeds2.c: 258:             flashCounter[1] = 0;
 35224   00875A  0E00               	movlw	0
 35225   00875C  6FBA               	movwf	(_flashCounter+1)& (0+255),b
 35226                           
 35227                           ;../../VLCBlib_PIC/statusLeds2.c: 259:             flashCounter[0] = 25;
 35228   00875E  0E19               	movlw	25
 35229   008760  6FB9               	movwf	_flashCounter& (0+255),b
 35230                           
 35231                           ;../../VLCBlib_PIC/statusLeds2.c: 260:             ledState[0] = LED_FLASH_50_2HZ;
 35232   008762  0E02               	movlw	2
 35233   008764  6FBB               	movwf	_ledState& (0+255),b
 35234                           
 35235                           ;../../VLCBlib_PIC/statusLeds2.c: 261:             ledState[1] = LED_FLASH_50_2HZ;
 35236   008766  0E02               	movlw	2
 35237   008768  6FBC               	movwf	(_ledState+1)& (0+255),b
 35238                           
 35239                           ;../../VLCBlib_PIC/statusLeds2.c: 262:             break;
 35240   00876A  0012               	return	
 35241   00876C                     l21039:
 35242                           
 35243                           ; BSR set to: 0
 35244                           ;../../VLCBlib_PIC/statusLeds2.c: 264:             if (mode_state == MODE_UNINITIALISED)
      +                           {
 35245   00876C  29C5               	incf	_mode_state& (0+255),w,b
 35246   00876E  A4D8               	btfss	status,2,c
 35247   008770  D003               	goto	l21043
 35248                           
 35249                           ; BSR set to: 0
 35250                           ;../../VLCBlib_PIC/statusLeds2.c: 265:                 ledState[1] = LED_SINGLE_FLICKER_
      +                          ON;
 35251   008772  0E06               	movlw	6
 35252   008774  6FBC               	movwf	(_ledState+1)& (0+255),b
 35253                           
 35254                           ;../../VLCBlib_PIC/statusLeds2.c: 266:             } else if (mode_state == MODE_NORMAL)
      +                           {
 35255   008776  0012               	return	
 35256   008778                     l21043:
 35257                           
 35258                           ; BSR set to: 0
 35259   008778  05C5               	decf	_mode_state& (0+255),w,b
 35260   00877A  A4D8               	btfss	status,2,c
 35261   00877C  0012               	return	
 35262                           
 35263                           ; BSR set to: 0
 35264                           ;../../VLCBlib_PIC/statusLeds2.c: 267:                 ledState[0] = LED_SINGLE_FLICKER_
      +                          ON;
 35265   00877E  0E06               	movlw	6
 35266   008780  6FBB               	movwf	_ledState& (0+255),b
 35267   008782  0012               	return	
 35268   008784                     l21047:
 35269                           
 35270                           ; BSR set to: 0
 35271                           ;../../VLCBlib_PIC/statusLeds2.c: 271:             if (mode_state == MODE_UNINITIALISED)
      +                           {
 35272   008784  29C5               	incf	_mode_state& (0+255),w,b
 35273   008786  A4D8               	btfss	status,2,c
 35274   008788  D003               	goto	l21051
 35275                           
 35276                           ; BSR set to: 0
 35277                           ;../../VLCBlib_PIC/statusLeds2.c: 272:                 ledState[1] = LED_LONG_FLICKER_ON
      +                          ;
 35278   00878A  0E08               	movlw	8
 35279   00878C  6FBC               	movwf	(_ledState+1)& (0+255),b
 35280                           
 35281                           ;../../VLCBlib_PIC/statusLeds2.c: 273:             } else if (mode_state == MODE_NORMAL)
      +                           {
 35282   00878E  0012               	return	
 35283   008790                     l21051:
 35284                           
 35285                           ; BSR set to: 0
 35286   008790  05C5               	decf	_mode_state& (0+255),w,b
 35287   008792  A4D8               	btfss	status,2,c
 35288   008794  0012               	return	
 35289                           
 35290                           ; BSR set to: 0
 35291                           ;../../VLCBlib_PIC/statusLeds2.c: 274:                 ledState[0] = LED_LONG_FLICKER_ON
      +                          ;
 35292   008796  0E08               	movlw	8
 35293   008798  6FBB               	movwf	_ledState& (0+255),b
 35294   00879A  0012               	return	
 35295   00879C                     l21055:
 35296                           
 35297                           ; BSR set to: 0
 35298                           ;../../VLCBlib_PIC/statusLeds2.c: 279:             flashCounter[1] = 0;
 35299   00879C  0E00               	movlw	0
 35300   00879E  6FBA               	movwf	(_flashCounter+1)& (0+255),b
 35301                           
 35302                           ;../../VLCBlib_PIC/statusLeds2.c: 280:             flashCounter[0] = 0;
 35303   0087A0  0E00               	movlw	0
 35304   0087A2  6FB9               	movwf	_flashCounter& (0+255),b
 35305                           
 35306                           ;../../VLCBlib_PIC/statusLeds2.c: 281:             ledState[0] = LED_FLASH_50_2HZ;
 35307   0087A4  0E02               	movlw	2
 35308   0087A6  6FBB               	movwf	_ledState& (0+255),b
 35309                           
 35310                           ;../../VLCBlib_PIC/statusLeds2.c: 282:             ledState[1] = LED_FLASH_50_2HZ;
 35311   0087A8  0E02               	movlw	2
 35312   0087AA  6FBC               	movwf	(_ledState+1)& (0+255),b
 35313                           
 35314                           ;../../VLCBlib_PIC/statusLeds2.c: 283:             break;
 35315   0087AC  0012               	return	
 35316   0087AE                     l21059:
 35317   0087AE  0100               	movlb	0	; () banked
 35318   0087B0  518F               	movf	showStatus@s& (0+255),w,b
 35319   0087B2  6F8D               	movwf	??_showStatus& (0+255),b
 35320   0087B4  6B8E               	clrf	(??_showStatus+1)& (0+255),b
 35321                           
 35322                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35323                           ; Switch size 1, requested type "simple"
 35324                           ; Number of cases is 1, Range of values is 0 to 0
 35325                           ; switch strategies available:
 35326                           ; Name         Instructions Cycles
 35327                           ; simple_byte            4     3 (average)
 35328                           ;	Chosen strategy is simple_byte
 35329   0087B6  518E               	movf	(??_showStatus+1)& (0+255),w,b
 35330   0087B8  0A00               	xorlw	0	; case 0
 35331   0087BA  A4D8               	btfss	status,2,c
 35332   0087BC  0012               	return	
 35333                           
 35334                           ; BSR set to: 0
 35335                           ; Switch size 1, requested type "simple"
 35336                           ; Number of cases is 13, Range of values is 0 to 12
 35337                           ; switch strategies available:
 35338                           ; Name         Instructions Cycles
 35339                           ; simple_byte           40    21 (average)
 35340                           ;	Chosen strategy is simple_byte
 35341   0087BE  518D               	movf	??_showStatus& (0+255),w,b
 35342   0087C0  0A00               	xorlw	0	; case 0
 35343   0087C2  B4D8               	btfsc	status,2,c
 35344   0087C4  D7B6               	goto	l21029
 35345   0087C6  0A01               	xorlw	1	; case 1
 35346   0087C8  B4D8               	btfsc	status,2,c
 35347   0087CA  D7B8               	goto	l21031
 35348   0087CC  0A03               	xorlw	3	; case 2
 35349   0087CE  B4D8               	btfsc	status,2,c
 35350   0087D0  D7BA               	goto	l21033
 35351   0087D2  0A01               	xorlw	1	; case 3
 35352   0087D4  B4D8               	btfsc	status,2,c
 35353   0087D6  D7BC               	goto	l1800
 35354   0087D8  0A07               	xorlw	7	; case 4
 35355   0087DA  B4D8               	btfsc	status,2,c
 35356   0087DC  D7BE               	goto	l21037
 35357   0087DE  0A01               	xorlw	1	; case 5
 35358   0087E0  B4D8               	btfsc	status,2,c
 35359   0087E2  D7B6               	goto	l1800
 35360   0087E4  0A03               	xorlw	3	; case 6
 35361   0087E6  B4D8               	btfsc	status,2,c
 35362   0087E8  D7B3               	goto	l1800
 35363   0087EA  0A01               	xorlw	1	; case 7
 35364   0087EC  B4D8               	btfsc	status,2,c
 35365   0087EE  D7BE               	goto	l21039
 35366   0087F0  0A0F               	xorlw	15	; case 8
 35367   0087F2  B4D8               	btfsc	status,2,c
 35368   0087F4  D7C7               	goto	l21047
 35369   0087F6  0A01               	xorlw	1	; case 9
 35370   0087F8  B4D8               	btfsc	status,2,c
 35371   0087FA  D7AA               	goto	l1800
 35372   0087FC  0A03               	xorlw	3	; case 10
 35373   0087FE  B4D8               	btfsc	status,2,c
 35374   008800  D7A7               	goto	l1800
 35375   008802  0A01               	xorlw	1	; case 11
 35376   008804  B4D8               	btfsc	status,2,c
 35377   008806  D7CA               	goto	l21055
 35378   008808  0A07               	xorlw	7	; case 12
 35379   00880A  A4D8               	btfss	status,2,c
 35380   00880C  0012               	return	
 35381   00880E  D7C6               	goto	l21055
 35382   008810                     __end_of_showStatus:
 35383                           	callstack 0
 35384                           
 35385 ;; *************** function _pbUpTimer *****************
 35386 ;; Defined at:
 35387 ;;		line 931 in file "../../VLCBlib_PIC/vlcb.c"
 35388 ;; Parameters:    Size  Location     Type
 35389 ;;  timeout         1    wreg     unsigned char 
 35390 ;; Auto vars:     Size  Location     Type
 35391 ;;  timeout         1   72[BANK0 ] unsigned char 
 35392 ;; Return value:  Size  Location     Type
 35393 ;;                  1    wreg      unsigned char 
 35394 ;; Registers used:
 35395 ;;		wreg, status,2, status,0, cstack
 35396 ;; Tracked objects:
 35397 ;;		On entry : 0/0
 35398 ;;		On exit  : 0/0
 35399 ;;		Unchanged: 0/0
 35400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35402 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35403 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35404 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35405 ;;Total ram usage:        5 bytes
 35406 ;; Hardware stack levels used: 1
 35407 ;; Hardware stack levels required when called: 14
 35408 ;; This function calls:
 35409 ;;		___lldiv
 35410 ;;		___lmul
 35411 ;;		_leds_poll
 35412 ;;		_tickGet
 35413 ;; This function is called by:
 35414 ;;		_checkPowerOnPb
 35415 ;; This function uses a non-reentrant model
 35416 ;;
 35417                           
 35418                           	psect	text143
 35419   0097DE                     __ptext143:
 35420                           	callstack 0
 35421   0097DE                     _pbUpTimer:
 35422                           	callstack 15
 35423                           
 35424                           ; BSR set to: 0
 35425                           ;incstack = 0
 35426                           ;pbUpTimer@timeout stored from wreg
 35427   0097DE  0100               	movlb	0	; () banked
 35428   0097E0  6FA8               	movwf	pbUpTimer@timeout& (0+255),b
 35429                           
 35430                           ;../../VLCBlib_PIC/vlcb.c: 933:     pbTimer.val = tickGet();
 35431   0097E2  ECE4  F05A         	call	_tickGet	;wreg free
 35432   0097E6  C08D  F033         	movff	?_tickGet,_pbTimer
 35433   0097EA  C08E  F034         	movff	?_tickGet+1,_pbTimer+1
 35434   0097EE  C08F  F035         	movff	?_tickGet+2,_pbTimer+2
 35435   0097F2  C090  F036         	movff	?_tickGet+3,_pbTimer+3
 35436                           
 35437                           ;../../VLCBlib_PIC/vlcb.c: 934:     while (! ((!(PORTAbits.RA2)))) {
 35438   0097F6  D02D               	goto	l1991
 35439   0097F8                     l24111:
 35440                           
 35441                           ;../../VLCBlib_PIC/vlcb.c: 935:         leds_poll();
 35442   0097F8  EC6E  F02E         	call	_leds_poll	;wreg free
 35443                           
 35444                           ;../../VLCBlib_PIC/vlcb.c: 936:         if ((tickGet() - pbTimer.val) > timeout*62500) {
 35445   0097FC  ECE4  F05A         	call	_tickGet	;wreg free
 35446   009800  5033               	movf	_pbTimer^0,w,c
 35447   009802  0100               	movlb	0	; () banked
 35448   009804  5D8D               	subwf	?_tickGet& (0+255),w,b
 35449   009806  6FA4               	movwf	??_pbUpTimer& (0+255),b
 35450   009808  5034               	movf	(_pbTimer+1)^0,w,c
 35451   00980A  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 35452   00980C  6FA5               	movwf	(??_pbUpTimer+1)& (0+255),b
 35453   00980E  5035               	movf	(_pbTimer+2)^0,w,c
 35454   009810  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 35455   009812  6FA6               	movwf	(??_pbUpTimer+2)& (0+255),b
 35456   009814  5036               	movf	(_pbTimer+3)^0,w,c
 35457   009816  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 35458   009818  6FA7               	movwf	(??_pbUpTimer+3)& (0+255),b
 35459   00981A  51A8               	movf	pbUpTimer@timeout& (0+255),w,b
 35460   00981C  6F91               	movwf	___lmul@multiplier& (0+255),b
 35461   00981E  6B92               	clrf	(___lmul@multiplier+1)& (0+255),b
 35462   009820  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
 35463   009822  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
 35464   009824  0E24               	movlw	36
 35465   009826  6F95               	movwf	___lmul@multiplicand& (0+255),b
 35466   009828  0EF4               	movlw	244
 35467   00982A  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 35468   00982C  0E00               	movlw	0
 35469   00982E  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 35470   009830  0E00               	movlw	0
 35471   009832  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 35472   009834  EC10  F05B         	call	___lmul	;wreg free
 35473   009838  0100               	movlb	0	; () banked
 35474   00983A  51A4               	movf	??_pbUpTimer& (0+255),w,b
 35475   00983C  5D91               	subwf	?___lmul& (0+255),w,b
 35476   00983E  51A5               	movf	(??_pbUpTimer+1)& (0+255),w,b
 35477   009840  5992               	subwfb	(?___lmul+1)& (0+255),w,b
 35478   009842  51A6               	movf	(??_pbUpTimer+2)& (0+255),w,b
 35479   009844  5993               	subwfb	(?___lmul+2)& (0+255),w,b
 35480   009846  51A7               	movf	(??_pbUpTimer+3)& (0+255),w,b
 35481   009848  5994               	subwfb	(?___lmul+3)& (0+255),w,b
 35482   00984A  B0D8               	btfsc	status,0,c
 35483   00984C  D002               	goto	l1991
 35484                           
 35485                           ; BSR set to: 0
 35486                           ;../../VLCBlib_PIC/vlcb.c: 937:             return 0;
 35487   00984E  0E00               	movlw	0
 35488   009850  0012               	return	
 35489   009852                     l1991:
 35490                           
 35491                           ;../../VLCBlib_PIC/vlcb.c: 934:     while (! ((!(PORTAbits.RA2)))) {
 35492   009852  B480               	btfsc	128,2,c	;volatile
 35493   009854  D7D1               	goto	l24111
 35494                           
 35495                           ;../../VLCBlib_PIC/vlcb.c: 941:     return (uint8_t)((tickGet() - pbTimer.val)/62500);
 35496   009856  ECE4  F05A         	call	_tickGet	;wreg free
 35497   00985A  5033               	movf	_pbTimer^0,w,c
 35498   00985C  0100               	movlb	0	; () banked
 35499   00985E  5D8D               	subwf	?_tickGet& (0+255),w,b
 35500   009860  6F97               	movwf	___lldiv@dividend& (0+255),b
 35501   009862  5034               	movf	(_pbTimer+1)^0,w,c
 35502   009864  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 35503   009866  6F98               	movwf	(___lldiv@dividend+1)& (0+255),b
 35504   009868  5035               	movf	(_pbTimer+2)^0,w,c
 35505   00986A  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 35506   00986C  6F99               	movwf	(___lldiv@dividend+2)& (0+255),b
 35507   00986E  5036               	movf	(_pbTimer+3)^0,w,c
 35508   009870  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 35509   009872  6F9A               	movwf	(___lldiv@dividend+3)& (0+255),b
 35510   009874  0E24               	movlw	36
 35511   009876  6F9B               	movwf	___lldiv@divisor& (0+255),b
 35512   009878  0EF4               	movlw	244
 35513   00987A  6F9C               	movwf	(___lldiv@divisor+1)& (0+255),b
 35514   00987C  0E00               	movlw	0
 35515   00987E  6F9D               	movwf	(___lldiv@divisor+2)& (0+255),b
 35516   009880  0E00               	movlw	0
 35517   009882  6F9E               	movwf	(___lldiv@divisor+3)& (0+255),b
 35518   009884  ECA2  F053         	call	___lldiv	;wreg free
 35519   009888  0100               	movlb	0	; () banked
 35520   00988A  5197               	movf	?___lldiv& (0+255),w,b
 35521                           
 35522                           ; BSR set to: 0
 35523   00988C  0012               	return		;funcret
 35524   00988E                     __end_of_pbUpTimer:
 35525                           	callstack 0
 35526                           
 35527 ;; *************** function _pbDownTimer *****************
 35528 ;; Defined at:
 35529 ;;		line 912 in file "../../VLCBlib_PIC/vlcb.c"
 35530 ;; Parameters:    Size  Location     Type
 35531 ;;  timeout         1    wreg     unsigned char 
 35532 ;; Auto vars:     Size  Location     Type
 35533 ;;  timeout         1   72[BANK0 ] unsigned char 
 35534 ;; Return value:  Size  Location     Type
 35535 ;;                  1    wreg      unsigned char 
 35536 ;; Registers used:
 35537 ;;		wreg, status,2, status,0, cstack
 35538 ;; Tracked objects:
 35539 ;;		On entry : 0/0
 35540 ;;		On exit  : 0/0
 35541 ;;		Unchanged: 0/0
 35542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35544 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35545 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35546 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35547 ;;Total ram usage:        5 bytes
 35548 ;; Hardware stack levels used: 1
 35549 ;; Hardware stack levels required when called: 14
 35550 ;; This function calls:
 35551 ;;		___lldiv
 35552 ;;		___lmul
 35553 ;;		_leds_poll
 35554 ;;		_tickGet
 35555 ;; This function is called by:
 35556 ;;		_checkPowerOnPb
 35557 ;; This function uses a non-reentrant model
 35558 ;;
 35559                           
 35560                           	psect	text144
 35561   00988E                     __ptext144:
 35562                           	callstack 0
 35563   00988E                     _pbDownTimer:
 35564                           	callstack 15
 35565                           
 35566                           ; BSR set to: 0
 35567                           ;incstack = 0
 35568                           ;pbDownTimer@timeout stored from wreg
 35569   00988E  0100               	movlb	0	; () banked
 35570   009890  6FA8               	movwf	pbDownTimer@timeout& (0+255),b
 35571                           
 35572                           ;../../VLCBlib_PIC/vlcb.c: 914:     pbTimer.val = tickGet();
 35573   009892  ECE4  F05A         	call	_tickGet	;wreg free
 35574   009896  C08D  F033         	movff	?_tickGet,_pbTimer
 35575   00989A  C08E  F034         	movff	?_tickGet+1,_pbTimer+1
 35576   00989E  C08F  F035         	movff	?_tickGet+2,_pbTimer+2
 35577   0098A2  C090  F036         	movff	?_tickGet+3,_pbTimer+3
 35578                           
 35579                           ;../../VLCBlib_PIC/vlcb.c: 915:     while ((!(PORTAbits.RA2))) {
 35580   0098A6  D02D               	goto	l1984
 35581   0098A8                     l24099:
 35582                           
 35583                           ;../../VLCBlib_PIC/vlcb.c: 916:         leds_poll();
 35584   0098A8  EC6E  F02E         	call	_leds_poll	;wreg free
 35585                           
 35586                           ;../../VLCBlib_PIC/vlcb.c: 917:         if ((tickGet() - pbTimer.val) > timeout*62500) {
 35587   0098AC  ECE4  F05A         	call	_tickGet	;wreg free
 35588   0098B0  5033               	movf	_pbTimer^0,w,c
 35589   0098B2  0100               	movlb	0	; () banked
 35590   0098B4  5D8D               	subwf	?_tickGet& (0+255),w,b
 35591   0098B6  6FA4               	movwf	??_pbDownTimer& (0+255),b
 35592   0098B8  5034               	movf	(_pbTimer+1)^0,w,c
 35593   0098BA  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 35594   0098BC  6FA5               	movwf	(??_pbDownTimer+1)& (0+255),b
 35595   0098BE  5035               	movf	(_pbTimer+2)^0,w,c
 35596   0098C0  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 35597   0098C2  6FA6               	movwf	(??_pbDownTimer+2)& (0+255),b
 35598   0098C4  5036               	movf	(_pbTimer+3)^0,w,c
 35599   0098C6  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 35600   0098C8  6FA7               	movwf	(??_pbDownTimer+3)& (0+255),b
 35601   0098CA  51A8               	movf	pbDownTimer@timeout& (0+255),w,b
 35602   0098CC  6F91               	movwf	___lmul@multiplier& (0+255),b
 35603   0098CE  6B92               	clrf	(___lmul@multiplier+1)& (0+255),b
 35604   0098D0  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
 35605   0098D2  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
 35606   0098D4  0E24               	movlw	36
 35607   0098D6  6F95               	movwf	___lmul@multiplicand& (0+255),b
 35608   0098D8  0EF4               	movlw	244
 35609   0098DA  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 35610   0098DC  0E00               	movlw	0
 35611   0098DE  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 35612   0098E0  0E00               	movlw	0
 35613   0098E2  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 35614   0098E4  EC10  F05B         	call	___lmul	;wreg free
 35615   0098E8  0100               	movlb	0	; () banked
 35616   0098EA  51A4               	movf	??_pbDownTimer& (0+255),w,b
 35617   0098EC  5D91               	subwf	?___lmul& (0+255),w,b
 35618   0098EE  51A5               	movf	(??_pbDownTimer+1)& (0+255),w,b
 35619   0098F0  5992               	subwfb	(?___lmul+1)& (0+255),w,b
 35620   0098F2  51A6               	movf	(??_pbDownTimer+2)& (0+255),w,b
 35621   0098F4  5993               	subwfb	(?___lmul+2)& (0+255),w,b
 35622   0098F6  51A7               	movf	(??_pbDownTimer+3)& (0+255),w,b
 35623   0098F8  5994               	subwfb	(?___lmul+3)& (0+255),w,b
 35624   0098FA  B0D8               	btfsc	status,0,c
 35625   0098FC  D002               	goto	l1984
 35626                           
 35627                           ; BSR set to: 0
 35628                           ;../../VLCBlib_PIC/vlcb.c: 918:             return 0;
 35629   0098FE  0E00               	movlw	0
 35630   009900  0012               	return	
 35631   009902                     l1984:
 35632                           
 35633                           ;../../VLCBlib_PIC/vlcb.c: 915:     while ((!(PORTAbits.RA2))) {
 35634   009902  A480               	btfss	128,2,c	;volatile
 35635   009904  D7D1               	goto	l24099
 35636                           
 35637                           ;../../VLCBlib_PIC/vlcb.c: 922:     return (uint8_t)((tickGet() - pbTimer.val)/62500);
 35638   009906  ECE4  F05A         	call	_tickGet	;wreg free
 35639   00990A  5033               	movf	_pbTimer^0,w,c
 35640   00990C  0100               	movlb	0	; () banked
 35641   00990E  5D8D               	subwf	?_tickGet& (0+255),w,b
 35642   009910  6F97               	movwf	___lldiv@dividend& (0+255),b
 35643   009912  5034               	movf	(_pbTimer+1)^0,w,c
 35644   009914  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 35645   009916  6F98               	movwf	(___lldiv@dividend+1)& (0+255),b
 35646   009918  5035               	movf	(_pbTimer+2)^0,w,c
 35647   00991A  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 35648   00991C  6F99               	movwf	(___lldiv@dividend+2)& (0+255),b
 35649   00991E  5036               	movf	(_pbTimer+3)^0,w,c
 35650   009920  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 35651   009922  6F9A               	movwf	(___lldiv@dividend+3)& (0+255),b
 35652   009924  0E24               	movlw	36
 35653   009926  6F9B               	movwf	___lldiv@divisor& (0+255),b
 35654   009928  0EF4               	movlw	244
 35655   00992A  6F9C               	movwf	(___lldiv@divisor+1)& (0+255),b
 35656   00992C  0E00               	movlw	0
 35657   00992E  6F9D               	movwf	(___lldiv@divisor+2)& (0+255),b
 35658   009930  0E00               	movlw	0
 35659   009932  6F9E               	movwf	(___lldiv@divisor+3)& (0+255),b
 35660   009934  ECA2  F053         	call	___lldiv	;wreg free
 35661   009938  0100               	movlb	0	; () banked
 35662   00993A  5197               	movf	?___lldiv& (0+255),w,b
 35663                           
 35664                           ; BSR set to: 0
 35665   00993C  0012               	return		;funcret
 35666   00993E                     __end_of_pbDownTimer:
 35667                           	callstack 0
 35668                           
 35669 ;; *************** function _leds_poll *****************
 35670 ;; Defined at:
 35671 ;;		line 89 in file "../../VLCBlib_PIC/statusLeds2.c"
 35672 ;; Parameters:    Size  Location     Type
 35673 ;;		None
 35674 ;; Auto vars:     Size  Location     Type
 35675 ;;		None
 35676 ;; Return value:  Size  Location     Type
 35677 ;;                  1    wreg      void 
 35678 ;; Registers used:
 35679 ;;		wreg, status,2, status,0, cstack
 35680 ;; Tracked objects:
 35681 ;;		On entry : 0/0
 35682 ;;		On exit  : 0/0
 35683 ;;		Unchanged: 0/0
 35684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35687 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35688 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35689 ;;Total ram usage:        4 bytes
 35690 ;; Hardware stack levels used: 1
 35691 ;; Hardware stack levels required when called: 13
 35692 ;; This function calls:
 35693 ;;		___awdiv
 35694 ;;		_tickGet
 35695 ;; This function is called by:
 35696 ;;		_pbDownTimer
 35697 ;;		_pbUpTimer
 35698 ;;		_poll
 35699 ;; This function uses a non-reentrant model
 35700 ;;
 35701                           
 35702                           	psect	text145
 35703   005CDC                     __ptext145:
 35704                           	callstack 0
 35705   005CDC                     _leds_poll:
 35706                           	callstack 16
 35707                           
 35708                           ;../../VLCBlib_PIC/statusLeds2.c: 90:     if ((tickGet() - ledTimer.val) > (62500/100)) 
      +                          {
 35709                           
 35710                           ; BSR set to: 0
 35711                           ;incstack = 0
 35712   005CDC  ECE4  F05A         	call	_tickGet	;wreg free
 35713   005CE0  0101               	movlb	1	; () banked
 35714   005CE2  5148               	movf	_ledTimer& (0+255),w,b
 35715   005CE4  0100               	movlb	0	; () banked
 35716   005CE6  5D8D               	subwf	?_tickGet& (0+255),w,b
 35717   005CE8  6F9F               	movwf	??_leds_poll& (0+255),b
 35718   005CEA  0101               	movlb	1	; () banked
 35719   005CEC  5149               	movf	(_ledTimer+1)& (0+255),w,b
 35720   005CEE  0100               	movlb	0	; () banked
 35721   005CF0  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 35722   005CF2  6FA0               	movwf	(??_leds_poll+1)& (0+255),b
 35723   005CF4  0101               	movlb	1	; () banked
 35724   005CF6  514A               	movf	(_ledTimer+2)& (0+255),w,b
 35725   005CF8  0100               	movlb	0	; () banked
 35726   005CFA  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 35727   005CFC  6FA1               	movwf	(??_leds_poll+2)& (0+255),b
 35728   005CFE  0101               	movlb	1	; () banked
 35729   005D00  514B               	movf	(_ledTimer+3)& (0+255),w,b
 35730   005D02  0100               	movlb	0	; () banked
 35731   005D04  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 35732   005D06  6FA2               	movwf	(??_leds_poll+3)& (0+255),b
 35733   005D08  51A2               	movf	(??_leds_poll+3)& (0+255),w,b
 35734   005D0A  11A1               	iorwf	(??_leds_poll+2)& (0+255),w,b
 35735   005D0C  E106               	bnz	u23050
 35736   005D0E  0E72               	movlw	114
 35737   005D10  5D9F               	subwf	??_leds_poll& (0+255),w,b
 35738   005D12  0E02               	movlw	2
 35739   005D14  59A0               	subwfb	(??_leds_poll+1)& (0+255),w,b
 35740   005D16  A0D8               	btfss	status,0,c
 35741   005D18  D06B               	goto	l22169
 35742   005D1A                     u23050:
 35743                           
 35744                           ; BSR set to: 0
 35745                           ;../../VLCBlib_PIC/statusLeds2.c: 91:         flashCounter[0]++;
 35746   005D1A  2BB9               	incf	_flashCounter& (0+255),f,b
 35747                           
 35748                           ;../../VLCBlib_PIC/statusLeds2.c: 92:         flashCounter[1]++;
 35749   005D1C  2BBA               	incf	(_flashCounter+1)& (0+255),f,b
 35750                           
 35751                           ; BSR set to: 0
 35752                           ;../../VLCBlib_PIC/statusLeds2.c: 93:         ledTimer.val = tickGet();
 35753   005D1E  ECE4  F05A         	call	_tickGet	;wreg free
 35754   005D22  C08D  F148         	movff	?_tickGet,_ledTimer
 35755   005D26  C08E  F149         	movff	?_tickGet+1,_ledTimer+1
 35756   005D2A  C08F  F14A         	movff	?_tickGet+2,_ledTimer+2
 35757   005D2E  C090  F14B         	movff	?_tickGet+3,_ledTimer+3
 35758   005D32  D05E               	goto	l22169
 35759   005D34                     l1750:
 35760                           
 35761                           ; BSR set to: 0
 35762                           ;../../VLCBlib_PIC/statusLeds2.c: 98:             (LATBbits.LATB6=1);
 35763   005D34  8C8A               	bsf	138,6,c	;volatile
 35764   005D36                     l22125:
 35765                           
 35766                           ; BSR set to: 0
 35767                           ;../../VLCBlib_PIC/statusLeds2.c: 99:             flashCounter[1] = 0;
 35768   005D36  0E00               	movlw	0
 35769   005D38  6FBA               	movwf	(_flashCounter+1)& (0+255),b
 35770                           
 35771                           ;../../VLCBlib_PIC/statusLeds2.c: 100:             break;
 35772   005D3A  D0E0               	goto	l22215
 35773   005D3C                     l1752:
 35774                           
 35775                           ; BSR set to: 0
 35776                           ;../../VLCBlib_PIC/statusLeds2.c: 102:             (LATBbits.LATB6=0);
 35777   005D3C  9C8A               	bcf	138,6,c	;volatile
 35778   005D3E  D7FB               	goto	l22125
 35779   005D40                     l22129:
 35780                           
 35781                           ; BSR set to: 0
 35782                           ;../../VLCBlib_PIC/statusLeds2.c: 107:             (LATBbits.LATB6=flashCounter[1]/25);
 35783   005D40  C0BA  F097         	movff	_flashCounter+1,___awdiv@dividend
 35784   005D44  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 35785   005D46  0E00               	movlw	0
 35786   005D48  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 35787   005D4A  0E19               	movlw	25
 35788   005D4C  6F99               	movwf	___awdiv@divisor& (0+255),b
 35789   005D4E  EC1C  F053         	call	___awdiv	;wreg free
 35790   005D52  0100               	movlb	0	; () banked
 35791   005D54  3B97               	swapf	?___awdiv& (0+255),f,b
 35792   005D56  4797               	rlncf	?___awdiv& (0+255),f,b
 35793   005D58  4797               	rlncf	?___awdiv& (0+255),f,b
 35794   005D5A  508A               	movf	138,w,c	;volatile
 35795   005D5C  1997               	xorwf	?___awdiv& (0+255),w,b
 35796   005D5E  0BBF               	andlw	-65
 35797   005D60  1997               	xorwf	?___awdiv& (0+255),w,b
 35798   005D62  6E8A               	movwf	138,c	;volatile
 35799                           
 35800                           ; BSR set to: 0
 35801                           ;../../VLCBlib_PIC/statusLeds2.c: 108:             if (flashCounter[1] >= 50) {
 35802   005D64  0E31               	movlw	49
 35803   005D66                     L16:
 35804   005D66  65BA               	cpfsgt	(_flashCounter+1)& (0+255),b
 35805   005D68  D0C9               	goto	l22215
 35806   005D6A  D7E5               	goto	l22125
 35807   005D6C                     l22135:
 35808                           
 35809                           ; BSR set to: 0
 35810                           ;../../VLCBlib_PIC/statusLeds2.c: 114:             (LATBbits.LATB6=flashCounter[1]/50);
 35811   005D6C  C0BA  F097         	movff	_flashCounter+1,___awdiv@dividend
 35812   005D70  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 35813   005D72  0E00               	movlw	0
 35814   005D74  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 35815   005D76  0E32               	movlw	50
 35816   005D78  6F99               	movwf	___awdiv@divisor& (0+255),b
 35817   005D7A  EC1C  F053         	call	___awdiv	;wreg free
 35818   005D7E  0100               	movlb	0	; () banked
 35819   005D80  3B97               	swapf	?___awdiv& (0+255),f,b
 35820   005D82  4797               	rlncf	?___awdiv& (0+255),f,b
 35821   005D84  4797               	rlncf	?___awdiv& (0+255),f,b
 35822   005D86  508A               	movf	138,w,c	;volatile
 35823   005D88  1997               	xorwf	?___awdiv& (0+255),w,b
 35824   005D8A  0BBF               	andlw	-65
 35825   005D8C  1997               	xorwf	?___awdiv& (0+255),w,b
 35826   005D8E  6E8A               	movwf	138,c	;volatile
 35827                           
 35828                           ; BSR set to: 0
 35829                           ;../../VLCBlib_PIC/statusLeds2.c: 115:             if (flashCounter[1] >= 100) {
 35830   005D90  0E63               	movlw	99
 35831   005D92  D7E9               	goto	L16
 35832   005D94                     l22141:
 35833                           
 35834                           ; BSR set to: 0
 35835                           ;../../VLCBlib_PIC/statusLeds2.c: 120:             (LATBbits.LATB6=flashCounter[1]/100);
 35836   005D94  C0BA  F097         	movff	_flashCounter+1,___awdiv@dividend
 35837   005D98  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 35838   005D9A  0E00               	movlw	0
 35839   005D9C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 35840   005D9E  0E64               	movlw	100
 35841   005DA0  6F99               	movwf	___awdiv@divisor& (0+255),b
 35842   005DA2  EC1C  F053         	call	___awdiv	;wreg free
 35843   005DA6  0100               	movlb	0	; () banked
 35844   005DA8  3B97               	swapf	?___awdiv& (0+255),f,b
 35845   005DAA  4797               	rlncf	?___awdiv& (0+255),f,b
 35846   005DAC  4797               	rlncf	?___awdiv& (0+255),f,b
 35847   005DAE  508A               	movf	138,w,c	;volatile
 35848   005DB0  1997               	xorwf	?___awdiv& (0+255),w,b
 35849   005DB2  0BBF               	andlw	-65
 35850   005DB4  1997               	xorwf	?___awdiv& (0+255),w,b
 35851   005DB6  6E8A               	movwf	138,c	;volatile
 35852                           
 35853                           ; BSR set to: 0
 35854                           ;../../VLCBlib_PIC/statusLeds2.c: 121:             if (flashCounter[1] >= 200) {
 35855   005DB8  0EC7               	movlw	199
 35856   005DBA  D7D5               	goto	L16
 35857   005DBC                     l1759:
 35858                           
 35859                           ; BSR set to: 0
 35860                           ;../../VLCBlib_PIC/statusLeds2.c: 126:             (LATBbits.LATB6=1);
 35861   005DBC  8C8A               	bsf	138,6,c	;volatile
 35862                           
 35863                           ; BSR set to: 0
 35864                           ;../../VLCBlib_PIC/statusLeds2.c: 127:             if (flashCounter[1] >= 25) {
 35865   005DBE  0E18               	movlw	24
 35866   005DC0  65BA               	cpfsgt	(_flashCounter+1)& (0+255),b
 35867   005DC2  D09C               	goto	l22215
 35868                           
 35869                           ; BSR set to: 0
 35870                           ;../../VLCBlib_PIC/statusLeds2.c: 128:                 flashCounter[1] = 0;
 35871   005DC4  0E00               	movlw	0
 35872   005DC6  6FBA               	movwf	(_flashCounter+1)& (0+255),b
 35873                           
 35874                           ;../../VLCBlib_PIC/statusLeds2.c: 129:                 ledState[1] = LED_OFF;
 35875   005DC8  0E00               	movlw	0
 35876   005DCA  D007               	goto	L17
 35877   005DCC                     l1761:
 35878                           
 35879                           ; BSR set to: 0
 35880                           ;../../VLCBlib_PIC/statusLeds2.c: 133:             (LATBbits.LATB6=0);
 35881   005DCC  9C8A               	bcf	138,6,c	;volatile
 35882                           
 35883                           ; BSR set to: 0
 35884                           ;../../VLCBlib_PIC/statusLeds2.c: 134:             if (flashCounter[1] >= 25) {
 35885   005DCE  0E18               	movlw	24
 35886   005DD0  65BA               	cpfsgt	(_flashCounter+1)& (0+255),b
 35887   005DD2  D094               	goto	l22215
 35888                           
 35889                           ; BSR set to: 0
 35890                           ;../../VLCBlib_PIC/statusLeds2.c: 135:                 flashCounter[1] = 0;
 35891   005DD4  0E00               	movlw	0
 35892   005DD6  6FBA               	movwf	(_flashCounter+1)& (0+255),b
 35893                           
 35894                           ;../../VLCBlib_PIC/statusLeds2.c: 136:                 ledState[1] = LED_ON;
 35895   005DD8  0E01               	movlw	1
 35896   005DDA                     L17:
 35897   005DDA  6FBC               	movwf	(_ledState+1)& (0+255),b
 35898   005DDC  D08F               	goto	l22215
 35899   005DDE                     l1763:
 35900                           
 35901                           ; BSR set to: 0
 35902                           ;../../VLCBlib_PIC/statusLeds2.c: 140:             (LATBbits.LATB6=1);
 35903   005DDE  8C8A               	bsf	138,6,c	;volatile
 35904                           
 35905                           ; BSR set to: 0
 35906                           ;../../VLCBlib_PIC/statusLeds2.c: 141:             if (flashCounter[1] >= 50) {
 35907   005DE0  0E31               	movlw	49
 35908   005DE2  D7EE               	goto	L20
 35909   005DE4                     l1765:
 35910                           
 35911                           ; BSR set to: 0
 35912                           ;../../VLCBlib_PIC/statusLeds2.c: 147:             (LATBbits.LATB6=0);
 35913   005DE4  9C8A               	bcf	138,6,c	;volatile
 35914                           
 35915                           ; BSR set to: 0
 35916                           ;../../VLCBlib_PIC/statusLeds2.c: 148:             if (flashCounter[1] >= 50) {
 35917   005DE6  0E31               	movlw	49
 35918   005DE8  D7F3               	goto	L21
 35919   005DEA                     l1767:
 35920                           
 35921                           ; BSR set to: 0
 35922                           ;../../VLCBlib_PIC/statusLeds2.c: 154:             (LATBbits.LATB6=0);
 35923   005DEA  9C8A               	bcf	138,6,c	;volatile
 35924                           
 35925                           ; BSR set to: 0
 35926                           ;../../VLCBlib_PIC/statusLeds2.c: 155:             if (flashCounter[1] >= 100) {
 35927   005DEC  0E63               	movlw	99
 35928   005DEE  D7F0               	goto	L21
 35929   005DF0                     l22169:
 35930   005DF0  0100               	movlb	0	; () banked
 35931   005DF2  51BC               	movf	(_ledState+1)& (0+255),w,b
 35932   005DF4  6F9F               	movwf	??_leds_poll& (0+255),b
 35933   005DF6  6BA0               	clrf	(??_leds_poll+1)& (0+255),b
 35934                           
 35935                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35936                           ; Switch size 1, requested type "simple"
 35937                           ; Number of cases is 1, Range of values is 0 to 0
 35938                           ; switch strategies available:
 35939                           ; Name         Instructions Cycles
 35940                           ; simple_byte            4     3 (average)
 35941                           ;	Chosen strategy is simple_byte
 35942   005DF8  51A0               	movf	(??_leds_poll+1)& (0+255),w,b
 35943   005DFA  0A00               	xorlw	0	; case 0
 35944   005DFC  A4D8               	btfss	status,2,c
 35945   005DFE  D07E               	goto	l22215
 35946                           
 35947                           ; BSR set to: 0
 35948                           ; Switch size 1, requested type "simple"
 35949                           ; Number of cases is 10, Range of values is 0 to 9
 35950                           ; switch strategies available:
 35951                           ; Name         Instructions Cycles
 35952                           ; simple_byte           31    16 (average)
 35953                           ;	Chosen strategy is simple_byte
 35954   005E00  519F               	movf	??_leds_poll& (0+255),w,b
 35955   005E02  0A00               	xorlw	0	; case 0
 35956   005E04  B4D8               	btfsc	status,2,c
 35957   005E06  D79A               	goto	l1752
 35958   005E08  0A01               	xorlw	1	; case 1
 35959   005E0A  B4D8               	btfsc	status,2,c
 35960   005E0C  D793               	goto	l1750
 35961   005E0E  0A03               	xorlw	3	; case 2
 35962   005E10  B4D8               	btfsc	status,2,c
 35963   005E12  D796               	goto	l22129
 35964   005E14  0A01               	xorlw	1	; case 3
 35965   005E16  B4D8               	btfsc	status,2,c
 35966   005E18  D7A9               	goto	l22135
 35967   005E1A  0A07               	xorlw	7	; case 4
 35968   005E1C  B4D8               	btfsc	status,2,c
 35969   005E1E  D7BA               	goto	l22141
 35970   005E20  0A01               	xorlw	1	; case 5
 35971   005E22  B4D8               	btfsc	status,2,c
 35972   005E24  D7D3               	goto	l1761
 35973   005E26  0A03               	xorlw	3	; case 6
 35974   005E28  B4D8               	btfsc	status,2,c
 35975   005E2A  D7C8               	goto	l1759
 35976   005E2C  0A01               	xorlw	1	; case 7
 35977   005E2E  B4D8               	btfsc	status,2,c
 35978   005E30  D7D9               	goto	l1765
 35979   005E32  0A0F               	xorlw	15	; case 8
 35980   005E34  B4D8               	btfsc	status,2,c
 35981   005E36  D7D3               	goto	l1763
 35982   005E38  0A01               	xorlw	1	; case 9
 35983   005E3A  B4D8               	btfsc	status,2,c
 35984   005E3C  D7D6               	goto	l1767
 35985   005E3E  D05E               	goto	l22215
 35986   005E40                     l1770:
 35987                           
 35988                           ; BSR set to: 0
 35989                           ;../../VLCBlib_PIC/statusLeds2.c: 164:             (LATBbits.LATB7=1);
 35990   005E40  8E8A               	bsf	138,7,c	;volatile
 35991   005E42                     l22171:
 35992                           
 35993                           ; BSR set to: 0
 35994                           ;../../VLCBlib_PIC/statusLeds2.c: 165:             flashCounter[0] = 0;
 35995   005E42  0E00               	movlw	0
 35996   005E44  6FB9               	movwf	_flashCounter& (0+255),b
 35997                           
 35998                           ;../../VLCBlib_PIC/statusLeds2.c: 166:             break;
 35999   005E46  0012               	return	
 36000   005E48                     l1772:
 36001                           
 36002                           ; BSR set to: 0
 36003                           ;../../VLCBlib_PIC/statusLeds2.c: 168:             (LATBbits.LATB7=0);
 36004   005E48  9E8A               	bcf	138,7,c	;volatile
 36005   005E4A  D7FB               	goto	l22171
 36006   005E4C                     l22175:
 36007                           
 36008                           ; BSR set to: 0
 36009                           ;../../VLCBlib_PIC/statusLeds2.c: 173:             (LATBbits.LATB7=flashCounter[0]/25);
 36010   005E4C  C0B9  F097         	movff	_flashCounter,___awdiv@dividend
 36011   005E50  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 36012   005E52  0E00               	movlw	0
 36013   005E54  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 36014   005E56  0E19               	movlw	25
 36015   005E58  6F99               	movwf	___awdiv@divisor& (0+255),b
 36016   005E5A  EC1C  F053         	call	___awdiv	;wreg free
 36017   005E5E  0100               	movlb	0	; () banked
 36018   005E60  3397               	rrcf	?___awdiv& (0+255),f,b
 36019   005E62  3397               	rrcf	?___awdiv& (0+255),f,b
 36020   005E64  508A               	movf	138,w,c	;volatile
 36021   005E66  1997               	xorwf	?___awdiv& (0+255),w,b
 36022   005E68  0B7F               	andlw	-129
 36023   005E6A  1997               	xorwf	?___awdiv& (0+255),w,b
 36024   005E6C  6E8A               	movwf	138,c	;volatile
 36025                           
 36026                           ; BSR set to: 0
 36027                           ;../../VLCBlib_PIC/statusLeds2.c: 174:             if (flashCounter[0] >= 50) {
 36028   005E6E  0E31               	movlw	49
 36029   005E70                     L19:
 36030   005E70  65B9               	cpfsgt	_flashCounter& (0+255),b
 36031   005E72  0012               	return	
 36032   005E74  D7E6               	goto	l22171
 36033   005E76                     l22181:
 36034                           
 36035                           ; BSR set to: 0
 36036                           ;../../VLCBlib_PIC/statusLeds2.c: 180:             (LATBbits.LATB7=flashCounter[0]/50);
 36037   005E76  C0B9  F097         	movff	_flashCounter,___awdiv@dividend
 36038   005E7A  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 36039   005E7C  0E00               	movlw	0
 36040   005E7E  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 36041   005E80  0E32               	movlw	50
 36042   005E82  6F99               	movwf	___awdiv@divisor& (0+255),b
 36043   005E84  EC1C  F053         	call	___awdiv	;wreg free
 36044   005E88  0100               	movlb	0	; () banked
 36045   005E8A  3397               	rrcf	?___awdiv& (0+255),f,b
 36046   005E8C  3397               	rrcf	?___awdiv& (0+255),f,b
 36047   005E8E  508A               	movf	138,w,c	;volatile
 36048   005E90  1997               	xorwf	?___awdiv& (0+255),w,b
 36049   005E92  0B7F               	andlw	-129
 36050   005E94  1997               	xorwf	?___awdiv& (0+255),w,b
 36051   005E96  6E8A               	movwf	138,c	;volatile
 36052                           
 36053                           ; BSR set to: 0
 36054                           ;../../VLCBlib_PIC/statusLeds2.c: 181:             if (flashCounter[0] >= 100) {
 36055   005E98  0E63               	movlw	99
 36056   005E9A  D7EA               	goto	L19
 36057   005E9C                     l22187:
 36058                           
 36059                           ; BSR set to: 0
 36060                           ;../../VLCBlib_PIC/statusLeds2.c: 186:             (LATBbits.LATB7=flashCounter[0]/100);
 36061   005E9C  C0B9  F097         	movff	_flashCounter,___awdiv@dividend
 36062   005EA0  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 36063   005EA2  0E00               	movlw	0
 36064   005EA4  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 36065   005EA6  0E64               	movlw	100
 36066   005EA8  6F99               	movwf	___awdiv@divisor& (0+255),b
 36067   005EAA  EC1C  F053         	call	___awdiv	;wreg free
 36068   005EAE  0100               	movlb	0	; () banked
 36069   005EB0  3397               	rrcf	?___awdiv& (0+255),f,b
 36070   005EB2  3397               	rrcf	?___awdiv& (0+255),f,b
 36071   005EB4  508A               	movf	138,w,c	;volatile
 36072   005EB6  1997               	xorwf	?___awdiv& (0+255),w,b
 36073   005EB8  0B7F               	andlw	-129
 36074   005EBA  1997               	xorwf	?___awdiv& (0+255),w,b
 36075   005EBC  6E8A               	movwf	138,c	;volatile
 36076                           
 36077                           ; BSR set to: 0
 36078                           ;../../VLCBlib_PIC/statusLeds2.c: 187:             if (flashCounter[0] >= 200) {
 36079   005EBE  0EC7               	movlw	199
 36080   005EC0  D7D7               	goto	L19
 36081   005EC2                     l1779:
 36082                           
 36083                           ; BSR set to: 0
 36084                           ;../../VLCBlib_PIC/statusLeds2.c: 192:             (LATBbits.LATB7=1);
 36085   005EC2  8E8A               	bsf	138,7,c	;volatile
 36086                           
 36087                           ; BSR set to: 0
 36088                           ;../../VLCBlib_PIC/statusLeds2.c: 193:             if (flashCounter[0] >= 25) {
 36089   005EC4  0E18               	movlw	24
 36090   005EC6  D00F               	goto	L23
 36091   005EC8                     u23170:
 36092                           
 36093                           ; BSR set to: 0
 36094                           ;../../VLCBlib_PIC/statusLeds2.c: 194:                 flashCounter[0] = 0;
 36095   005EC8  0E00               	movlw	0
 36096   005ECA  6FB9               	movwf	_flashCounter& (0+255),b
 36097                           
 36098                           ;../../VLCBlib_PIC/statusLeds2.c: 195:                 ledState[0] = LED_OFF;
 36099   005ECC  0E00               	movlw	0
 36100   005ECE  6FBB               	movwf	_ledState& (0+255),b
 36101   005ED0  0012               	return	
 36102   005ED2                     l1781:
 36103                           
 36104                           ; BSR set to: 0
 36105                           ;../../VLCBlib_PIC/statusLeds2.c: 199:             (LATBbits.LATB7=0);
 36106   005ED2  9E8A               	bcf	138,7,c	;volatile
 36107                           
 36108                           ; BSR set to: 0
 36109                           ;../../VLCBlib_PIC/statusLeds2.c: 200:             if (flashCounter[0] >= 25) {
 36110   005ED4  0E18               	movlw	24
 36111   005ED6  D00C               	goto	L22
 36112   005ED8                     u23180:
 36113                           
 36114                           ; BSR set to: 0
 36115                           ;../../VLCBlib_PIC/statusLeds2.c: 201:                 flashCounter[0] = 0;
 36116   005ED8  0E00               	movlw	0
 36117   005EDA  6FB9               	movwf	_flashCounter& (0+255),b
 36118                           
 36119                           ;../../VLCBlib_PIC/statusLeds2.c: 202:                 ledState[0] = LED_ON;
 36120   005EDC  0E01               	movlw	1
 36121   005EDE  6FBB               	movwf	_ledState& (0+255),b
 36122   005EE0  0012               	return	
 36123   005EE2                     l1783:
 36124                           
 36125                           ; BSR set to: 0
 36126                           ;../../VLCBlib_PIC/statusLeds2.c: 206:             (LATBbits.LATB7=1);
 36127   005EE2  8E8A               	bsf	138,7,c	;volatile
 36128                           
 36129                           ; BSR set to: 0
 36130                           ;../../VLCBlib_PIC/statusLeds2.c: 207:             if (flashCounter[0] >= 50) {
 36131   005EE4  0E31               	movlw	49
 36132   005EE6                     L23:
 36133   005EE6  65B9               	cpfsgt	_flashCounter& (0+255),b
 36134   005EE8  0012               	return	
 36135   005EEA  D7EE               	goto	u23170
 36136   005EEC                     l1785:
 36137                           
 36138                           ; BSR set to: 0
 36139                           ;../../VLCBlib_PIC/statusLeds2.c: 213:             (LATBbits.LATB7=0);
 36140   005EEC  9E8A               	bcf	138,7,c	;volatile
 36141                           
 36142                           ; BSR set to: 0
 36143                           ;../../VLCBlib_PIC/statusLeds2.c: 214:             if (flashCounter[0] >= 50) {
 36144   005EEE  0E31               	movlw	49
 36145   005EF0                     L22:
 36146   005EF0  65B9               	cpfsgt	_flashCounter& (0+255),b
 36147   005EF2  0012               	return	
 36148   005EF4  D7F1               	goto	u23180
 36149   005EF6                     l1787:
 36150                           
 36151                           ; BSR set to: 0
 36152                           ;../../VLCBlib_PIC/statusLeds2.c: 220:             (LATBbits.LATB7=0);
 36153   005EF6  9E8A               	bcf	138,7,c	;volatile
 36154                           
 36155                           ; BSR set to: 0
 36156                           ;../../VLCBlib_PIC/statusLeds2.c: 221:             if (flashCounter[0] >= 100) {
 36157   005EF8  0E63               	movlw	99
 36158   005EFA  D7FA               	goto	L22
 36159   005EFC                     l22215:
 36160                           
 36161                           ; BSR set to: 0
 36162   005EFC  51BB               	movf	_ledState& (0+255),w,b
 36163   005EFE  6F9F               	movwf	??_leds_poll& (0+255),b
 36164   005F00  6BA0               	clrf	(??_leds_poll+1)& (0+255),b
 36165                           
 36166                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 36167                           ; Switch size 1, requested type "simple"
 36168                           ; Number of cases is 1, Range of values is 0 to 0
 36169                           ; switch strategies available:
 36170                           ; Name         Instructions Cycles
 36171                           ; simple_byte            4     3 (average)
 36172                           ;	Chosen strategy is simple_byte
 36173   005F02  51A0               	movf	(??_leds_poll+1)& (0+255),w,b
 36174   005F04  0A00               	xorlw	0	; case 0
 36175   005F06  A4D8               	btfss	status,2,c
 36176   005F08  0012               	return	
 36177                           
 36178                           ; BSR set to: 0
 36179                           ; Switch size 1, requested type "simple"
 36180                           ; Number of cases is 10, Range of values is 0 to 9
 36181                           ; switch strategies available:
 36182                           ; Name         Instructions Cycles
 36183                           ; simple_byte           31    16 (average)
 36184                           ;	Chosen strategy is simple_byte
 36185   005F0A  519F               	movf	??_leds_poll& (0+255),w,b
 36186   005F0C  0A00               	xorlw	0	; case 0
 36187   005F0E  B4D8               	btfsc	status,2,c
 36188   005F10  D79B               	goto	l1772
 36189   005F12  0A01               	xorlw	1	; case 1
 36190   005F14  B4D8               	btfsc	status,2,c
 36191   005F16  D794               	goto	l1770
 36192   005F18  0A03               	xorlw	3	; case 2
 36193   005F1A  B4D8               	btfsc	status,2,c
 36194   005F1C  D797               	goto	l22175
 36195   005F1E  0A01               	xorlw	1	; case 3
 36196   005F20  B4D8               	btfsc	status,2,c
 36197   005F22  D7A9               	goto	l22181
 36198   005F24  0A07               	xorlw	7	; case 4
 36199   005F26  B4D8               	btfsc	status,2,c
 36200   005F28  D7B9               	goto	l22187
 36201   005F2A  0A01               	xorlw	1	; case 5
 36202   005F2C  B4D8               	btfsc	status,2,c
 36203   005F2E  D7D1               	goto	l1781
 36204   005F30  0A03               	xorlw	3	; case 6
 36205   005F32  B4D8               	btfsc	status,2,c
 36206   005F34  D7C6               	goto	l1779
 36207   005F36  0A01               	xorlw	1	; case 7
 36208   005F38  B4D8               	btfsc	status,2,c
 36209   005F3A  D7D8               	goto	l1785
 36210   005F3C  0A0F               	xorlw	15	; case 8
 36211   005F3E  B4D8               	btfsc	status,2,c
 36212   005F40  D7D0               	goto	l1783
 36213   005F42  0A01               	xorlw	1	; case 9
 36214   005F44  A4D8               	btfss	status,2,c
 36215   005F46  0012               	return	
 36216   005F48  D7D6               	goto	l1787
 36217   005F4A                     __end_of_leds_poll:
 36218                           	callstack 0
 36219                           
 36220 ;; *************** function _tickGet *****************
 36221 ;; Defined at:
 36222 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 36223 ;; Parameters:    Size  Location     Type
 36224 ;;		None
 36225 ;; Auto vars:     Size  Location     Type
 36226 ;;  currentTime     4   51[BANK0 ] struct _TickValue
 36227 ;;  IntFlag1        1   50[BANK0 ] unsigned char 
 36228 ;;  IntFlag2        1   49[BANK0 ] unsigned char 
 36229 ;; Return value:  Size  Location     Type
 36230 ;;                  4   45[BANK0 ] unsigned long 
 36231 ;; Registers used:
 36232 ;;		wreg, status,2, status,0
 36233 ;; Tracked objects:
 36234 ;;		On entry : 0/0
 36235 ;;		On exit  : 0/0
 36236 ;;		Unchanged: 0/0
 36237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36238 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36239 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36241 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36242 ;;Total ram usage:       10 bytes
 36243 ;; Hardware stack levels used: 1
 36244 ;; Hardware stack levels required when called: 12
 36245 ;; This function calls:
 36246 ;;		Nothing
 36247 ;; This function is called by:
 36248 ;;		_setup
 36249 ;;		_loop
 36250 ;;		_doWait
 36251 ;;		_initServos
 36252 ;;		_pollServos
 36253 ;;		_mnsPowerUp
 36254 ;;		_mnsPoll
 36255 ;;		_leds_powerUp
 36256 ;;		_leds_poll
 36257 ;;		_pbDownTimer
 36258 ;;		_pbUpTimer
 36259 ;;		_poll
 36260 ;;		_canPowerUp
 36261 ;;		_handleSelfEnumeration
 36262 ;;		_processEnumeration
 36263 ;; This function uses a non-reentrant model
 36264 ;;
 36265                           
 36266                           	psect	text146
 36267   00B5C8                     __ptext146:
 36268                           	callstack 0
 36269   00B5C8                     _tickGet:
 36270                           	callstack 17
 36271                           
 36272                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 36273                           
 36274                           ; BSR set to: 0
 36275                           ;incstack = 0
 36276   00B5C8  0E00               	movlw	0
 36277   00B5CA  0100               	movlb	0	; () banked
 36278   00B5CC  6F95               	movwf	(tickGet@currentTime+2)& (0+255),b
 36279                           
 36280                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 36281   00B5CE  0E00               	movlw	0
 36282   00B5D0  6F96               	movwf	(tickGet@currentTime+3)& (0+255),b
 36283                           
 36284                           ; BSR set to: 0
 36285                           ;../../VLCBlib_PIC/ticktime.c: 169:     INTCONbits.TMR0IE = 0;
 36286   00B5D2  9AF2               	bcf	242,5,c	;volatile
 36287   00B5D4                     l20357:
 36288                           
 36289                           ; BSR set to: 0
 36290                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = INTCONbits.TMR0IF;
 36291   00B5D4  0E00               	movlw	0
 36292   00B5D6  B4F2               	btfsc	242,2,c	;volatile
 36293   00B5D8  0E01               	movlw	1
 36294   00B5DA  6F92               	movwf	tickGet@IntFlag1& (0+255),b
 36295                           
 36296                           ; BSR set to: 0
 36297                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 36298   00B5DC  CFD6 F093          	movff	4054,tickGet@currentTime	;volatile
 36299                           
 36300                           ; BSR set to: 0
 36301                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 36302   00B5E0  CFD7 F094          	movff	4055,tickGet@currentTime+1	;volatile
 36303                           
 36304                           ; BSR set to: 0
 36305                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = INTCONbits.TMR0IF;
 36306   00B5E4  0E00               	movlw	0
 36307   00B5E6  B4F2               	btfsc	242,2,c	;volatile
 36308   00B5E8  0E01               	movlw	1
 36309   00B5EA  6F91               	movwf	tickGet@IntFlag2& (0+255),b
 36310                           
 36311                           ; BSR set to: 0
 36312                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 36313   00B5EC  5191               	movf	tickGet@IntFlag2& (0+255),w,b
 36314   00B5EE  1992               	xorwf	tickGet@IntFlag1& (0+255),w,b
 36315   00B5F0  A4D8               	btfss	status,2,c
 36316   00B5F2  D7F0               	goto	l20357
 36317                           
 36318                           ; BSR set to: 0
 36319                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 36320   00B5F4  5192               	movf	tickGet@IntFlag1& (0+255),w,b
 36321   00B5F6  B4D8               	btfsc	status,2,c
 36322   00B5F8  D005               	goto	l20377
 36323                           
 36324                           ; BSR set to: 0
 36325                           ;../../VLCBlib_PIC/ticktime.c: 178:         INTCONbits.TMR0IF = 0;
 36326   00B5FA  94F2               	bcf	242,2,c	;volatile
 36327                           
 36328                           ; BSR set to: 0
 36329                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 36330   00B5FC  2BC7               	incf	_timerExtension1& (0+255),f,b	;volatile
 36331                           
 36332                           ; BSR set to: 0
 36333                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 36334   00B5FE  51C7               	movf	_timerExtension1& (0+255),w,b	;volatile
 36335   00B600  B4D8               	btfsc	status,2,c
 36336                           
 36337                           ; BSR set to: 0
 36338                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 36339   00B602  2BC6               	incf	_timerExtension2& (0+255),f,b	;volatile
 36340   00B604                     l20377:
 36341                           
 36342                           ; BSR set to: 0
 36343                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 36344   00B604  51C7               	movf	_timerExtension1& (0+255),w,b	;volatile
 36345   00B606  2795               	addwf	(tickGet@currentTime+2)& (0+255),f,b
 36346                           
 36347                           ; BSR set to: 0
 36348                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 36349   00B608  51C6               	movf	_timerExtension2& (0+255),w,b	;volatile
 36350   00B60A  2796               	addwf	(tickGet@currentTime+3)& (0+255),f,b
 36351                           
 36352                           ; BSR set to: 0
 36353                           ;../../VLCBlib_PIC/ticktime.c: 191:     INTCONbits.TMR0IE = 1;
 36354   00B60C  8AF2               	bsf	242,5,c	;volatile
 36355                           
 36356                           ; BSR set to: 0
 36357                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 36358   00B60E  C093  F08D         	movff	tickGet@currentTime,?_tickGet
 36359   00B612  C094  F08E         	movff	tickGet@currentTime+1,?_tickGet+1
 36360   00B616  C095  F08F         	movff	tickGet@currentTime+2,?_tickGet+2
 36361   00B61A  C096  F090         	movff	tickGet@currentTime+3,?_tickGet+3
 36362                           
 36363                           ; BSR set to: 0
 36364   00B61E  0012               	return		;funcret
 36365   00B620                     __end_of_tickGet:
 36366                           	callstack 0
 36367                           
 36368 ;; *************** function ___lmul *****************
 36369 ;; Defined at:
 36370 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul32.c"
 36371 ;; Parameters:    Size  Location     Type
 36372 ;;  multiplier      4   49[BANK0 ] unsigned long 
 36373 ;;  multiplicand    4   53[BANK0 ] unsigned long 
 36374 ;; Auto vars:     Size  Location     Type
 36375 ;;  product         4   57[BANK0 ] unsigned long 
 36376 ;; Return value:  Size  Location     Type
 36377 ;;                  4   49[BANK0 ] unsigned long 
 36378 ;; Registers used:
 36379 ;;		wreg, status,2, status,0
 36380 ;; Tracked objects:
 36381 ;;		On entry : 0/0
 36382 ;;		On exit  : 0/0
 36383 ;;		Unchanged: 0/0
 36384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36385 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36386 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36388 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36389 ;;Total ram usage:       12 bytes
 36390 ;; Hardware stack levels used: 1
 36391 ;; Hardware stack levels required when called: 12
 36392 ;; This function calls:
 36393 ;;		Nothing
 36394 ;; This function is called by:
 36395 ;;		_loop
 36396 ;;		_doWait
 36397 ;;		_pbDownTimer
 36398 ;;		_pbUpTimer
 36399 ;;		_poll
 36400 ;; This function uses a non-reentrant model
 36401 ;;
 36402                           
 36403                           	psect	text147
 36404   00B620                     __ptext147:
 36405                           	callstack 0
 36406   00B620                     ___lmul:
 36407                           	callstack 17
 36408                           
 36409                           ; BSR set to: 0
 36410                           ;incstack = 0
 36411   00B620  0E00               	movlw	0
 36412   00B622  0100               	movlb	0	; () banked
 36413   00B624  6F99               	movwf	___lmul@product& (0+255),b
 36414   00B626  0E00               	movlw	0
 36415   00B628  6F9A               	movwf	(___lmul@product+1)& (0+255),b
 36416   00B62A  0E00               	movlw	0
 36417   00B62C  6F9B               	movwf	(___lmul@product+2)& (0+255),b
 36418   00B62E  0E00               	movlw	0
 36419   00B630  6F9C               	movwf	(___lmul@product+3)& (0+255),b
 36420   00B632                     l21277:
 36421                           
 36422                           ; BSR set to: 0
 36423   00B632  A191               	btfss	___lmul@multiplier& (0+255),0,b
 36424   00B634  D008               	goto	l21281
 36425                           
 36426                           ; BSR set to: 0
 36427   00B636  5195               	movf	___lmul@multiplicand& (0+255),w,b
 36428   00B638  2799               	addwf	___lmul@product& (0+255),f,b
 36429   00B63A  5196               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 36430   00B63C  239A               	addwfc	(___lmul@product+1)& (0+255),f,b
 36431   00B63E  5197               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 36432   00B640  239B               	addwfc	(___lmul@product+2)& (0+255),f,b
 36433   00B642  5198               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 36434   00B644  239C               	addwfc	(___lmul@product+3)& (0+255),f,b
 36435   00B646                     l21281:
 36436                           
 36437                           ; BSR set to: 0
 36438   00B646  90D8               	bcf	status,0,c
 36439   00B648  3795               	rlcf	___lmul@multiplicand& (0+255),f,b
 36440   00B64A  3796               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 36441   00B64C  3797               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 36442   00B64E  3798               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 36443                           
 36444                           ; BSR set to: 0
 36445   00B650  90D8               	bcf	status,0,c
 36446   00B652  3394               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 36447   00B654  3393               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 36448   00B656  3392               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 36449   00B658  3391               	rrcf	___lmul@multiplier& (0+255),f,b
 36450   00B65A  5191               	movf	___lmul@multiplier& (0+255),w,b
 36451   00B65C  1192               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 36452   00B65E  1193               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 36453   00B660  1194               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 36454   00B662  A4D8               	btfss	status,2,c
 36455   00B664  D7E6               	goto	l21277
 36456                           
 36457                           ; BSR set to: 0
 36458   00B666  C099  F091         	movff	___lmul@product,?___lmul
 36459   00B66A  C09A  F092         	movff	___lmul@product+1,?___lmul+1
 36460   00B66E  C09B  F093         	movff	___lmul@product+2,?___lmul+2
 36461   00B672  C09C  F094         	movff	___lmul@product+3,?___lmul+3
 36462                           
 36463                           ; BSR set to: 0
 36464   00B676  0012               	return		;funcret
 36465   00B678                     __end_of___lmul:
 36466                           	callstack 0
 36467                           
 36468 ;; *************** function ___lldiv *****************
 36469 ;; Defined at:
 36470 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__lldiv.c"
 36471 ;; Parameters:    Size  Location     Type
 36472 ;;  dividend        4   55[BANK0 ] unsigned long 
 36473 ;;  divisor         4   59[BANK0 ] unsigned long 
 36474 ;; Auto vars:     Size  Location     Type
 36475 ;;  quotient        4   63[BANK0 ] unsigned long 
 36476 ;;  counter         1   67[BANK0 ] unsigned char 
 36477 ;; Return value:  Size  Location     Type
 36478 ;;                  4   55[BANK0 ] unsigned long 
 36479 ;; Registers used:
 36480 ;;		wreg, status,2, status,0
 36481 ;; Tracked objects:
 36482 ;;		On entry : 0/0
 36483 ;;		On exit  : 0/0
 36484 ;;		Unchanged: 0/0
 36485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36486 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36487 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36489 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36490 ;;Total ram usage:       13 bytes
 36491 ;; Hardware stack levels used: 1
 36492 ;; Hardware stack levels required when called: 12
 36493 ;; This function calls:
 36494 ;;		Nothing
 36495 ;; This function is called by:
 36496 ;;		_pbDownTimer
 36497 ;;		_pbUpTimer
 36498 ;; This function uses a non-reentrant model
 36499 ;;
 36500                           
 36501                           	psect	text148
 36502   00A744                     __ptext148:
 36503                           	callstack 0
 36504   00A744                     ___lldiv:
 36505                           	callstack 16
 36506                           
 36507                           ; BSR set to: 0
 36508                           ;incstack = 0
 36509   00A744  0E00               	movlw	0
 36510   00A746  0100               	movlb	0	; () banked
 36511   00A748  6F9F               	movwf	___lldiv@quotient& (0+255),b
 36512   00A74A  0E00               	movlw	0
 36513   00A74C  6FA0               	movwf	(___lldiv@quotient+1)& (0+255),b
 36514   00A74E  0E00               	movlw	0
 36515   00A750  6FA1               	movwf	(___lldiv@quotient+2)& (0+255),b
 36516   00A752  0E00               	movlw	0
 36517   00A754  6FA2               	movwf	(___lldiv@quotient+3)& (0+255),b
 36518                           
 36519                           ; BSR set to: 0
 36520   00A756  519B               	movf	___lldiv@divisor& (0+255),w,b
 36521   00A758  119C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 36522   00A75A  119D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 36523   00A75C  119E               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 36524   00A75E  B4D8               	btfsc	status,2,c
 36525   00A760  D02A               	goto	l3125
 36526                           
 36527                           ; BSR set to: 0
 36528   00A762  0E01               	movlw	1
 36529   00A764  6FA3               	movwf	___lldiv@counter& (0+255),b
 36530   00A766  D006               	goto	l15493
 36531   00A768                     l15491:
 36532                           
 36533                           ; BSR set to: 0
 36534   00A768  90D8               	bcf	status,0,c
 36535   00A76A  379B               	rlcf	___lldiv@divisor& (0+255),f,b
 36536   00A76C  379C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 36537   00A76E  379D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 36538   00A770  379E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 36539   00A772  2BA3               	incf	___lldiv@counter& (0+255),f,b
 36540   00A774                     l15493:
 36541                           
 36542                           ; BSR set to: 0
 36543   00A774  AF9E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 36544   00A776  D7F8               	goto	l15491
 36545   00A778                     u14950:
 36546                           
 36547                           ; BSR set to: 0
 36548   00A778  90D8               	bcf	status,0,c
 36549   00A77A  379F               	rlcf	___lldiv@quotient& (0+255),f,b
 36550   00A77C  37A0               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 36551   00A77E  37A1               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 36552   00A780  37A2               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 36553                           
 36554                           ; BSR set to: 0
 36555   00A782  519B               	movf	___lldiv@divisor& (0+255),w,b
 36556   00A784  5D97               	subwf	___lldiv@dividend& (0+255),w,b
 36557   00A786  519C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 36558   00A788  5998               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 36559   00A78A  519D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 36560   00A78C  5999               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 36561   00A78E  519E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 36562   00A790  599A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 36563   00A792  A0D8               	btfss	status,0,c
 36564   00A794  D009               	goto	l15503
 36565                           
 36566                           ; BSR set to: 0
 36567   00A796  519B               	movf	___lldiv@divisor& (0+255),w,b
 36568   00A798  5F97               	subwf	___lldiv@dividend& (0+255),f,b
 36569   00A79A  519C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 36570   00A79C  5B98               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 36571   00A79E  519D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 36572   00A7A0  5B99               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 36573   00A7A2  519E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 36574   00A7A4  5B9A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 36575                           
 36576                           ; BSR set to: 0
 36577   00A7A6  819F               	bsf	___lldiv@quotient& (0+255),0,b
 36578   00A7A8                     l15503:
 36579                           
 36580                           ; BSR set to: 0
 36581   00A7A8  90D8               	bcf	status,0,c
 36582   00A7AA  339E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 36583   00A7AC  339D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 36584   00A7AE  339C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 36585   00A7B0  339B               	rrcf	___lldiv@divisor& (0+255),f,b
 36586                           
 36587                           ; BSR set to: 0
 36588   00A7B2  2FA3               	decfsz	___lldiv@counter& (0+255),f,b
 36589   00A7B4  D7E1               	goto	u14950
 36590   00A7B6                     l3125:
 36591                           
 36592                           ; BSR set to: 0
 36593   00A7B6  C09F  F097         	movff	___lldiv@quotient,?___lldiv
 36594   00A7BA  C0A0  F098         	movff	___lldiv@quotient+1,?___lldiv+1
 36595   00A7BE  C0A1  F099         	movff	___lldiv@quotient+2,?___lldiv+2
 36596   00A7C2  C0A2  F09A         	movff	___lldiv@quotient+3,?___lldiv+3
 36597                           
 36598                           ; BSR set to: 0
 36599   00A7C6  0012               	return		;funcret
 36600   00A7C8                     __end_of___lldiv:
 36601                           	callstack 0
 36602                           
 36603 ;; *************** function _factoryReset *****************
 36604 ;; Defined at:
 36605 ;;		line 857 in file "../../VLCBlib_PIC/vlcb.c"
 36606 ;; Parameters:    Size  Location     Type
 36607 ;;		None
 36608 ;; Auto vars:     Size  Location     Type
 36609 ;;  i               1   56[BANK1 ] unsigned char 
 36610 ;; Return value:  Size  Location     Type
 36611 ;;                  1    wreg      void 
 36612 ;; Registers used:
 36613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36614 ;; Tracked objects:
 36615 ;;		On entry : 0/0
 36616 ;;		On exit  : 0/0
 36617 ;;		Unchanged: 0/0
 36618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36620 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36621 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36622 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36623 ;;Total ram usage:        5 bytes
 36624 ;; Hardware stack levels used: 1
 36625 ;; Hardware stack levels required when called: 26
 36626 ;; This function calls:
 36627 ;;		NULL
 36628 ;;		_APP_factoryReset
 36629 ;;		_canFactoryReset
 36630 ;;		_mnsFactoryReset
 36631 ;;		_nvFactoryReset
 36632 ;;		_teachFactoryReset
 36633 ;;		_writeNVM
 36634 ;; This function is called by:
 36635 ;;		_mnsProcessMessage
 36636 ;;		_checkPowerOnPb
 36637 ;;		_main
 36638 ;; This function uses a non-reentrant model
 36639 ;;
 36640                           
 36641                           	psect	text149
 36642   008562                     __ptext149:
 36643                           	callstack 0
 36644   008562                     _factoryReset:
 36645                           	callstack 2
 36646                           
 36647                           ;../../VLCBlib_PIC/vlcb.c: 858:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 860:     for (i
      +                          =0; i<9; i++) {
 36648                           
 36649                           ; BSR set to: 0
 36650                           ;incstack = 0
 36651   008562  0E00               	movlw	0
 36652   008564  0101               	movlb	1	; () banked
 36653   008566  6FF2               	movwf	factoryReset@i& (0+255),b
 36654   008568                     l22001:
 36655                           
 36656                           ; BSR set to: 1
 36657                           ;../../VLCBlib_PIC/vlcb.c: 861:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >factoryReset != ((void*)0))) {
 36658   008568  51F2               	movf	factoryReset@i& (0+255),w,b
 36659   00856A  0D02               	mullw	2
 36660   00856C  0E69               	movlw	low _services
 36661   00856E  24F3               	addwf	243,w,c
 36662   008570  6EF6               	movwf	tblptrl,c
 36663   008572  0EEE               	movlw	high _services
 36664   008574  20F4               	addwfc	244,w,c
 36665   008576  6EF7               	movwf	tblptrh,c
 36666   008578                     	if	1	;There are 3 active tblptr bytes
 36667   008578  6AF8               	clrf	tblptru,c
 36668   00857A  0E00               	movlw	low (__mediumconst shr (0+16))
 36669   00857C  22F8               	addwfc	tblptru,f,c
 36670   00857E                     	endif
 36671   00857E  0009               	tblrd		*+
 36672   008580  50F5               	movf	tablat,w,c
 36673   008582  0009               	tblrd		*+
 36674   008584  10F5               	iorwf	tablat,w,c
 36675   008586  B4D8               	btfsc	status,2,c
 36676   008588  D04B               	goto	u22949
 36677                           
 36678                           ; BSR set to: 1
 36679   00858A  51F2               	movf	factoryReset@i& (0+255),w,b
 36680   00858C  0D02               	mullw	2
 36681   00858E  0E69               	movlw	low _services
 36682   008590  24F3               	addwf	243,w,c
 36683   008592  6EF6               	movwf	tblptrl,c
 36684   008594  0EEE               	movlw	high _services
 36685   008596  20F4               	addwfc	244,w,c
 36686   008598  6EF7               	movwf	tblptrh,c
 36687   00859A                     	if	1	;There are 3 active tblptr bytes
 36688   00859A  6AF8               	clrf	tblptru,c
 36689   00859C  0E00               	movlw	low (__mediumconst shr (0+16))
 36690   00859E  22F8               	addwfc	tblptru,f,c
 36691   0085A0                     	endif
 36692   0085A0  0009               	tblrd		*+
 36693   0085A2  CFF5 F1EE          	movff	tablat,??_factoryReset
 36694   0085A6  0009               	tblrd		*+
 36695   0085A8  CFF5 F1EF          	movff	tablat,??_factoryReset+1
 36696   0085AC  0E02               	movlw	2
 36697   0085AE  27EE               	addwf	??_factoryReset& (0+255),f,b
 36698   0085B0  0E00               	movlw	0
 36699   0085B2  23EF               	addwfc	(??_factoryReset+1)& (0+255),f,b
 36700   0085B4  C1EE  FFF6         	movff	??_factoryReset,tblptrl
 36701   0085B8  C1EF  FFF7         	movff	??_factoryReset+1,tblptrh
 36702   0085BC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 36703   0085BC  6AF8               	clrf	tblptru,c
 36704   0085BE                     	endif
 36705   0085BE                     	if	0	;tblptru may be non-zero
 36706   0085BE                     	endif
 36707   0085BE  0009               	tblrd		*+
 36708   0085C0  50F5               	movf	tablat,w,c
 36709   0085C2  0009               	tblrd		*+
 36710   0085C4  10F5               	iorwf	tablat,w,c
 36711   0085C6  B4D8               	btfsc	status,2,c
 36712   0085C8  D02B               	goto	u22949
 36713                           
 36714                           ; BSR set to: 1
 36715                           ;../../VLCBlib_PIC/vlcb.c: 862:             services[i]->factoryReset();
 36716   0085CA  51F2               	movf	factoryReset@i& (0+255),w,b
 36717   0085CC  0D02               	mullw	2
 36718   0085CE  0E69               	movlw	low _services
 36719   0085D0  24F3               	addwf	243,w,c
 36720   0085D2  6EF6               	movwf	tblptrl,c
 36721   0085D4  0EEE               	movlw	high _services
 36722   0085D6  20F4               	addwfc	244,w,c
 36723   0085D8  6EF7               	movwf	tblptrh,c
 36724   0085DA                     	if	1	;There are 3 active tblptr bytes
 36725   0085DA  6AF8               	clrf	tblptru,c
 36726   0085DC  0E00               	movlw	low (__mediumconst shr (0+16))
 36727   0085DE  22F8               	addwfc	tblptru,f,c
 36728   0085E0                     	endif
 36729   0085E0  0009               	tblrd		*+
 36730   0085E2  CFF5 F1EE          	movff	tablat,??_factoryReset
 36731   0085E6  0009               	tblrd		*+
 36732   0085E8  CFF5 F1EF          	movff	tablat,??_factoryReset+1
 36733   0085EC  0E02               	movlw	2
 36734   0085EE  27EE               	addwf	??_factoryReset& (0+255),f,b
 36735   0085F0  0E00               	movlw	0
 36736   0085F2  23EF               	addwfc	(??_factoryReset+1)& (0+255),f,b
 36737   0085F4  C1EE  FFF6         	movff	??_factoryReset,tblptrl
 36738   0085F8  C1EF  FFF7         	movff	??_factoryReset+1,tblptrh
 36739   0085FC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 36740   0085FC  6AF8               	clrf	tblptru,c
 36741   0085FE                     	endif
 36742   0085FE                     	if	0	;tblptru may be non-zero
 36743   0085FE                     	endif
 36744   0085FE  0009               	tblrd		*+
 36745   008600  CFF5 F1F0          	movff	tablat,??_factoryReset+2
 36746   008604  0009               	tblrd		*+
 36747   008606  CFF5 F1F1          	movff	tablat,??_factoryReset+3
 36748   00860A  D801               	call	u22948
 36749   00860C  D009               	goto	u22949
 36750   00860E                     u22948:
 36751   00860E  0005               	push	
 36752   008610  6EFA               	movwf	pclath,c
 36753   008612  51F0               	movf	(??_factoryReset+2)& (0+255),w,b
 36754   008614  6EFD               	movwf	tosl,c
 36755   008616  51F1               	movf	(??_factoryReset+3)& (0+255),w,b
 36756   008618  6EFE               	movwf	tosh,c
 36757   00861A  6AFF               	clrf	tosu,c
 36758   00861C  50FA               	movf	pclath,w,c
 36759   00861E  0012               	return		;indir
 36760   008620                     u22949:
 36761                           
 36762                           ;../../VLCBlib_PIC/vlcb.c: 864:     }
 36763   008620  0101               	movlb	1	; () banked
 36764   008622  2BF2               	incf	factoryReset@i& (0+255),f,b
 36765                           
 36766                           ; BSR set to: 1
 36767   008624  0E08               	movlw	8
 36768   008626  65F2               	cpfsgt	factoryReset@i& (0+255),b
 36769   008628  D79F               	goto	l22001
 36770                           
 36771                           ; BSR set to: 1
 36772                           ;../../VLCBlib_PIC/vlcb.c: 866:     writeNVM(EEPROM_NVM_TYPE, 0x3FA, 1);
 36773   00862A  0EFA               	movlw	250
 36774   00862C  0100               	movlb	0	; () banked
 36775   00862E  6FA4               	movwf	writeNVM@index& (0+255),b
 36776   008630  0E03               	movlw	3
 36777   008632  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 36778   008634  0E00               	movlw	0
 36779   008636  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 36780   008638  0E01               	movlw	1
 36781   00863A  6FA7               	movwf	writeNVM@value& (0+255),b
 36782   00863C  0E00               	movlw	0
 36783   00863E  EC60  F05C         	call	_writeNVM
 36784                           
 36785                           ;../../VLCBlib_PIC/vlcb.c: 868:     APP_factoryReset();
 36786   008642  ECBF  F061         	call	_APP_factoryReset	;wreg free
 36787   008646  0012               	return		;funcret
 36788   008648                     __end_of_factoryReset:
 36789                           	callstack 0
 36790                           
 36791 ;; *************** function _canFactoryReset *****************
 36792 ;; Defined at:
 36793 ;;		line 204 in file "../../VLCBlib_PIC/can18_ecan.c"
 36794 ;; Parameters:    Size  Location     Type
 36795 ;;		None
 36796 ;; Auto vars:     Size  Location     Type
 36797 ;;		None
 36798 ;; Return value:  Size  Location     Type
 36799 ;;                  1    wreg      void 
 36800 ;; Registers used:
 36801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36802 ;; Tracked objects:
 36803 ;;		On entry : 0/0
 36804 ;;		On exit  : 0/0
 36805 ;;		Unchanged: 0/0
 36806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36811 ;;Total ram usage:        0 bytes
 36812 ;; Hardware stack levels used: 1
 36813 ;; Hardware stack levels required when called: 18
 36814 ;; This function calls:
 36815 ;;		_writeNVM
 36816 ;; This function is called by:
 36817 ;;		_factoryReset
 36818 ;; This function uses a non-reentrant model
 36819 ;;
 36820                           
 36821                           	psect	text150
 36822   00C488                     __ptext150:
 36823                           	callstack 0
 36824   00C488                     _canFactoryReset:
 36825                           	callstack 9
 36826                           
 36827                           ;../../VLCBlib_PIC/can18_ecan.c: 205:     canId = 0;
 36828                           
 36829                           ;incstack = 0
 36830   00C488  0E00               	movlw	0
 36831   00C48A  0100               	movlb	0	; () banked
 36832   00C48C  6FC1               	movwf	_canId& (0+255),b
 36833                           
 36834                           ; BSR set to: 0
 36835                           ;../../VLCBlib_PIC/can18_ecan.c: 206:     writeNVM(EEPROM_NVM_TYPE, 0x3FE, canId);
 36836   00C48E  0EFE               	movlw	254
 36837   00C490  6FA4               	movwf	writeNVM@index& (0+255),b
 36838   00C492  0E03               	movlw	3
 36839   00C494  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 36840   00C496  0E00               	movlw	0
 36841   00C498  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 36842   00C49A  C0C1  F0A7         	movff	_canId,writeNVM@value
 36843   00C49E  0E00               	movlw	0
 36844   00C4A0  EC60  F05C         	call	_writeNVM
 36845   00C4A4  0012               	return		;funcret
 36846   00C4A6                     __end_of_canFactoryReset:
 36847                           	callstack 0
 36848                           
 36849 ;; *************** function _nvFactoryReset *****************
 36850 ;; Defined at:
 36851 ;;		line 126 in file "../../VLCBlib_PIC/nv.c"
 36852 ;; Parameters:    Size  Location     Type
 36853 ;;		None
 36854 ;; Auto vars:     Size  Location     Type
 36855 ;;  i               1    4[BANK1 ] unsigned char 
 36856 ;; Return value:  Size  Location     Type
 36857 ;;                  1    wreg      void 
 36858 ;; Registers used:
 36859 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36860 ;; Tracked objects:
 36861 ;;		On entry : 0/0
 36862 ;;		On exit  : 0/0
 36863 ;;		Unchanged: 0/0
 36864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36866 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36867 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36868 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36869 ;;Total ram usage:        3 bytes
 36870 ;; Hardware stack levels used: 1
 36871 ;; Hardware stack levels required when called: 18
 36872 ;; This function calls:
 36873 ;;		_APP_nvDefault
 36874 ;;		_writeNVM
 36875 ;; This function is called by:
 36876 ;;		_factoryReset
 36877 ;; This function uses a non-reentrant model
 36878 ;;
 36879                           
 36880                           	psect	text151
 36881   00BCE2                     __ptext151:
 36882                           	callstack 0
 36883   00BCE2                     _nvFactoryReset:
 36884                           	callstack 9
 36885                           
 36886                           ;../../VLCBlib_PIC/nv.c: 127:     uint8_t i;;../../VLCBlib_PIC/nv.c: 128:     for (i=1; 
      +                          i<= (15+7*16); i++) {
 36887                           
 36888                           ;incstack = 0
 36889   00BCE2  0E01               	movlw	1
 36890   00BCE4  0101               	movlb	1	; () banked
 36891   00BCE6  6FBE               	movwf	nvFactoryReset@i& (0+255),b
 36892   00BCE8                     l21073:
 36893                           
 36894                           ; BSR set to: 1
 36895                           ;../../VLCBlib_PIC/nv.c: 129:         writeNVM(FLASH_NVM_TYPE, 0xFF80 +i, APP_nvDefault(
      +                          i));
 36896   00BCE8  0E80               	movlw	128
 36897   00BCEA  25BE               	addwf	nvFactoryReset@i& (0+255),w,b
 36898   00BCEC  6FBC               	movwf	??_nvFactoryReset& (0+255),b
 36899   00BCEE  6BBD               	clrf	(??_nvFactoryReset+1)& (0+255),b
 36900   00BCF0  0EFF               	movlw	255
 36901   00BCF2  23BD               	addwfc	(??_nvFactoryReset+1)& (0+255),f,b
 36902   00BCF4  C1BC  F0A4         	movff	??_nvFactoryReset,writeNVM@index
 36903   00BCF8  C1BD  F0A5         	movff	??_nvFactoryReset+1,writeNVM@index+1
 36904   00BCFC  0100               	movlb	0	; () banked
 36905   00BCFE  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 36906   00BD00  0101               	movlb	1	; () banked
 36907   00BD02  51BE               	movf	nvFactoryReset@i& (0+255),w,b
 36908   00BD04  EC29  F046         	call	_APP_nvDefault
 36909   00BD08  0100               	movlb	0	; () banked
 36910   00BD0A  6FA7               	movwf	writeNVM@value& (0+255),b
 36911   00BD0C  0E01               	movlw	1
 36912   00BD0E  EC60  F05C         	call	_writeNVM
 36913                           
 36914                           ;../../VLCBlib_PIC/nv.c: 130:     }
 36915   00BD12  0101               	movlb	1	; () banked
 36916   00BD14  2BBE               	incf	nvFactoryReset@i& (0+255),f,b
 36917                           
 36918                           ; BSR set to: 1
 36919   00BD16  0E7F               	movlw	127
 36920   00BD18  65BE               	cpfsgt	nvFactoryReset@i& (0+255),b
 36921   00BD1A  D7E6               	goto	l21073
 36922   00BD1C  0012               	return	
 36923   00BD1E                     __end_of_nvFactoryReset:
 36924                           	callstack 0
 36925                           
 36926 ;; *************** function _mnsFactoryReset *****************
 36927 ;; Defined at:
 36928 ;;		line 276 in file "../../VLCBlib_PIC/mns.c"
 36929 ;; Parameters:    Size  Location     Type
 36930 ;;		None
 36931 ;; Auto vars:     Size  Location     Type
 36932 ;;		None
 36933 ;; Return value:  Size  Location     Type
 36934 ;;                  1    wreg      void 
 36935 ;; Registers used:
 36936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36937 ;; Tracked objects:
 36938 ;;		On entry : 0/0
 36939 ;;		On exit  : 0/0
 36940 ;;		Unchanged: 0/0
 36941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36946 ;;Total ram usage:        0 bytes
 36947 ;; Hardware stack levels used: 1
 36948 ;; Hardware stack levels required when called: 18
 36949 ;; This function calls:
 36950 ;;		_writeNVM
 36951 ;; This function is called by:
 36952 ;;		_factoryReset
 36953 ;; This function uses a non-reentrant model
 36954 ;;
 36955                           
 36956                           	psect	text152
 36957   00ABB0                     __ptext152:
 36958                           	callstack 0
 36959   00ABB0                     _mnsFactoryReset:
 36960                           	callstack 9
 36961                           
 36962                           ;../../VLCBlib_PIC/mns.c: 277:     nn.bytes.hi = 0;
 36963                           
 36964                           ; BSR set to: 1
 36965                           ;incstack = 0
 36966   00ABB0  0E00               	movlw	0
 36967   00ABB2  0100               	movlb	0	; () banked
 36968   00ABB4  6FBE               	movwf	(_nn+1)& (0+255),b
 36969                           
 36970                           ;../../VLCBlib_PIC/mns.c: 278:     nn.bytes.lo = 0;
 36971   00ABB6  0E00               	movlw	0
 36972   00ABB8  6FBD               	movwf	_nn& (0+255),b
 36973                           
 36974                           ; BSR set to: 0
 36975                           ;../../VLCBlib_PIC/mns.c: 279:     writeNVM(EEPROM_NVM_TYPE, 0x3FC +1, nn.bytes.hi);
 36976   00ABBA  0EFD               	movlw	253
 36977   00ABBC  6FA4               	movwf	writeNVM@index& (0+255),b
 36978   00ABBE  0E03               	movlw	3
 36979   00ABC0  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 36980   00ABC2  0E00               	movlw	0
 36981   00ABC4  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 36982   00ABC6  C0BE  F0A7         	movff	_nn+1,writeNVM@value
 36983   00ABCA  0E00               	movlw	0
 36984   00ABCC  EC60  F05C         	call	_writeNVM
 36985                           
 36986                           ;../../VLCBlib_PIC/mns.c: 280:     writeNVM(EEPROM_NVM_TYPE, 0x3FC, nn.bytes.lo);
 36987   00ABD0  0EFC               	movlw	252
 36988   00ABD2  0100               	movlb	0	; () banked
 36989   00ABD4  6FA4               	movwf	writeNVM@index& (0+255),b
 36990   00ABD6  0E03               	movlw	3
 36991   00ABD8  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 36992   00ABDA  0E00               	movlw	0
 36993   00ABDC  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 36994   00ABDE  C0BD  F0A7         	movff	_nn,writeNVM@value
 36995   00ABE2  0E00               	movlw	0
 36996   00ABE4  EC60  F05C         	call	_writeNVM
 36997                           
 36998                           ;../../VLCBlib_PIC/mns.c: 282:     last_mode_state = mode_state = MODE_UNINITIALISED;
 36999   00ABE8  0100               	movlb	0	; () banked
 37000   00ABEA  69C5               	setf	_mode_state& (0+255),b
 37001   00ABEC  6847               	setf	_last_mode_state^0,c
 37002                           
 37003                           ; BSR set to: 0
 37004                           ;../../VLCBlib_PIC/mns.c: 283:     writeNVM(EEPROM_NVM_TYPE, 0x3FB, mode_state);
 37005   00ABEE  0EFB               	movlw	251
 37006   00ABF0  6FA4               	movwf	writeNVM@index& (0+255),b
 37007   00ABF2  0E03               	movlw	3
 37008   00ABF4  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 37009   00ABF6  0E00               	movlw	0
 37010   00ABF8  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 37011   00ABFA  C0C5  F0A7         	movff	_mode_state,writeNVM@value
 37012   00ABFE  0E00               	movlw	0
 37013   00AC00  EC60  F05C         	call	_writeNVM
 37014                           
 37015                           ;../../VLCBlib_PIC/mns.c: 286:     last_mode_flags = mode_flags = 0;
 37016   00AC04  0E00               	movlw	0
 37017   00AC06  0101               	movlb	1	; () banked
 37018   00AC08  6F66               	movwf	_mode_flags& (0+255),b
 37019   00AC0A  C166  F046         	movff	_mode_flags,_last_mode_flags
 37020                           
 37021                           ;../../VLCBlib_PIC/mns.c: 287:     writeNVM(EEPROM_NVM_TYPE, 0x3F9, mode_flags);
 37022   00AC0E  0EF9               	movlw	249
 37023   00AC10  0100               	movlb	0	; () banked
 37024   00AC12  6FA4               	movwf	writeNVM@index& (0+255),b
 37025   00AC14  0E03               	movlw	3
 37026   00AC16  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 37027   00AC18  0E00               	movlw	0
 37028   00AC1A  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 37029   00AC1C  C166  F0A7         	movff	_mode_flags,writeNVM@value
 37030   00AC20  0E00               	movlw	0
 37031   00AC22  EC60  F05C         	call	_writeNVM
 37032   00AC26  0012               	return		;funcret
 37033   00AC28                     __end_of_mnsFactoryReset:
 37034                           	callstack 0
 37035                           
 37036 ;; *************** function _teachFactoryReset *****************
 37037 ;; Defined at:
 37038 ;;		line 352 in file "../../VLCBlib_PIC/event_teach_large.c"
 37039 ;; Parameters:    Size  Location     Type
 37040 ;;		None
 37041 ;; Auto vars:     Size  Location     Type
 37042 ;;		None
 37043 ;; Return value:  Size  Location     Type
 37044 ;;                  1    wreg      void 
 37045 ;; Registers used:
 37046 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37047 ;; Tracked objects:
 37048 ;;		On entry : 0/0
 37049 ;;		On exit  : 0/0
 37050 ;;		Unchanged: 0/0
 37051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37056 ;;Total ram usage:        0 bytes
 37057 ;; Hardware stack levels used: 1
 37058 ;; Hardware stack levels required when called: 19
 37059 ;; This function calls:
 37060 ;;		_clearAllEvents
 37061 ;; This function is called by:
 37062 ;;		_factoryReset
 37063 ;; This function uses a non-reentrant model
 37064 ;;
 37065                           
 37066                           	psect	text153
 37067   00C644                     __ptext153:
 37068                           	callstack 0
 37069   00C644                     _teachFactoryReset:
 37070                           	callstack 8
 37071                           
 37072                           ;../../VLCBlib_PIC/event_teach_large.c: 353:     clearAllEvents();
 37073                           
 37074                           ;incstack = 0
 37075   00C644  EC93  F05B         	call	_clearAllEvents	;wreg free
 37076   00C648  0012               	return		;funcret
 37077   00C64A                     __end_of_teachFactoryReset:
 37078                           	callstack 0
 37079                           
 37080 ;; *************** function _clearAllEvents *****************
 37081 ;; Defined at:
 37082 ;;		line 558 in file "../../VLCBlib_PIC/event_teach_large.c"
 37083 ;; Parameters:    Size  Location     Type
 37084 ;;		None
 37085 ;; Auto vars:     Size  Location     Type
 37086 ;;  tableIndex      1   13[BANK1 ] unsigned char 
 37087 ;; Return value:  Size  Location     Type
 37088 ;;                  1    wreg      void 
 37089 ;; Registers used:
 37090 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37091 ;; Tracked objects:
 37092 ;;		On entry : 0/0
 37093 ;;		On exit  : 0/0
 37094 ;;		Unchanged: 0/0
 37095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37097 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37098 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37099 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37100 ;;Total ram usage:        5 bytes
 37101 ;; Hardware stack levels used: 1
 37102 ;; Hardware stack levels required when called: 18
 37103 ;; This function calls:
 37104 ;;		_flushFlashBlock
 37105 ;;		_rebuildHashtable
 37106 ;;		_writeNVM
 37107 ;; This function is called by:
 37108 ;;		_teachFactoryReset
 37109 ;;		_doNnclr
 37110 ;; This function uses a non-reentrant model
 37111 ;;
 37112                           
 37113                           	psect	text154
 37114   00B726                     __ptext154:
 37115                           	callstack 0
 37116   00B726                     _clearAllEvents:
 37117                           	callstack 9
 37118                           
 37119                           ;../../VLCBlib_PIC/event_teach_large.c: 559:     uint8_t tableIndex;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 560:     for (tableIndex=0; tableIndex<255; tableIndex++) {
 37120                           
 37121                           ;incstack = 0
 37122   00B726  0E00               	movlw	0
 37123   00B728  0101               	movlb	1	; () banked
 37124   00B72A  6FC7               	movwf	clearAllEvents@tableIndex& (0+255),b
 37125   00B72C                     l20239:
 37126                           
 37127                           ; BSR set to: 1
 37128                           ;../../VLCBlib_PIC/event_teach_large.c: 562:         writeNVM(FLASH_NVM_TYPE, 0xEF80 + 1
      +                          6*tableIndex + 0, 0xff);
 37129   00B72C  51C7               	movf	clearAllEvents@tableIndex& (0+255),w,b
 37130   00B72E  6FC3               	movwf	??_clearAllEvents& (0+255),b
 37131   00B730  6BC4               	clrf	(??_clearAllEvents+1)& (0+255),b
 37132   00B732  3BC3               	swapf	??_clearAllEvents& (0+255),f,b
 37133   00B734  3BC4               	swapf	(??_clearAllEvents+1)& (0+255),f,b
 37134   00B736  0EF0               	movlw	240
 37135   00B738  17C4               	andwf	(??_clearAllEvents+1)& (0+255),f,b
 37136   00B73A  51C3               	movf	??_clearAllEvents& (0+255),w,b
 37137   00B73C  0B0F               	andlw	15
 37138   00B73E  13C4               	iorwf	(??_clearAllEvents+1)& (0+255),f,b
 37139   00B740  0EF0               	movlw	240
 37140   00B742  17C3               	andwf	??_clearAllEvents& (0+255),f,b
 37141   00B744  0E80               	movlw	128
 37142   00B746  25C3               	addwf	??_clearAllEvents& (0+255),w,b
 37143   00B748  6FC5               	movwf	(??_clearAllEvents+2)& (0+255),b
 37144   00B74A  0EEF               	movlw	239
 37145   00B74C  21C4               	addwfc	(??_clearAllEvents+1)& (0+255),w,b
 37146   00B74E  6FC6               	movwf	(??_clearAllEvents+3)& (0+255),b
 37147   00B750  C1C5  F0A4         	movff	??_clearAllEvents+2,writeNVM@index
 37148   00B754  C1C6  F0A5         	movff	??_clearAllEvents+3,writeNVM@index+1
 37149   00B758  0100               	movlb	0	; () banked
 37150   00B75A  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 37151   00B75C  0EFF               	movlw	255
 37152   00B75E  6FA7               	movwf	writeNVM@value& (0+255),b
 37153   00B760  0E01               	movlw	1
 37154   00B762  EC60  F05C         	call	_writeNVM
 37155                           
 37156                           ;../../VLCBlib_PIC/event_teach_large.c: 563:     }
 37157   00B766  0101               	movlb	1	; () banked
 37158   00B768  2BC7               	incf	clearAllEvents@tableIndex& (0+255),f,b
 37159                           
 37160                           ; BSR set to: 1
 37161   00B76A  29C7               	incf	clearAllEvents@tableIndex& (0+255),w,b
 37162   00B76C  A4D8               	btfss	status,2,c
 37163   00B76E  D7DE               	goto	l20239
 37164                           
 37165                           ; BSR set to: 1
 37166                           ;../../VLCBlib_PIC/event_teach_large.c: 564:     flushFlashBlock();
 37167   00B770  EC5F  F053         	call	_flushFlashBlock	;wreg free
 37168                           
 37169                           ;../../VLCBlib_PIC/event_teach_large.c: 566:     rebuildHashtable();
 37170   00B774  EC93  F03E         	call	_rebuildHashtable	;wreg free
 37171   00B778  0012               	return		;funcret
 37172   00B77A                     __end_of_clearAllEvents:
 37173                           	callstack 0
 37174                           
 37175 ;; *************** function _APP_nvDefault *****************
 37176 ;; Defined at:
 37177 ;;		line 73 in file "../universalNv.c"
 37178 ;; Parameters:    Size  Location     Type
 37179 ;;  index           1    wreg     unsigned char 
 37180 ;; Auto vars:     Size  Location     Type
 37181 ;;  index           1   67[BANK0 ] unsigned char 
 37182 ;; Return value:  Size  Location     Type
 37183 ;;                  1    wreg      unsigned char 
 37184 ;; Registers used:
 37185 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37186 ;; Tracked objects:
 37187 ;;		On entry : 0/0
 37188 ;;		On exit  : 0/0
 37189 ;;		Unchanged: 0/0
 37190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37192 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37193 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37194 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37195 ;;Total ram usage:        5 bytes
 37196 ;; Hardware stack levels used: 1
 37197 ;; Hardware stack levels required when called: 13
 37198 ;; This function calls:
 37199 ;;		___awdiv
 37200 ;;		___awmod
 37201 ;;		___wmul
 37202 ;; This function is called by:
 37203 ;;		_nvFactoryReset
 37204 ;; This function uses a non-reentrant model
 37205 ;;
 37206                           
 37207                           	psect	text155
 37208   008C52                     __ptext155:
 37209                           	callstack 0
 37210   008C52                     _APP_nvDefault:
 37211                           	callstack 13
 37212                           
 37213                           ;incstack = 0
 37214                           ;APP_nvDefault@index stored from wreg
 37215   008C52  0100               	movlb	0	; () banked
 37216   008C54  6FA3               	movwf	APP_nvDefault@index& (0+255),b
 37217                           
 37218                           ;../universalNv.c: 74:     if (index < 16) {
 37219   008C56  0E10               	movlw	16
 37220   008C58  0100               	movlb	0	; () banked
 37221   008C5A  61A3               	cpfslt	APP_nvDefault@index& (0+255),b
 37222   008C5C  D02A               	goto	l20067
 37223   008C5E  D00C               	goto	l20065
 37224   008C60                     l20031:
 37225                           
 37226                           ; BSR set to: 0
 37227                           ;../universalNv.c: 78:                 return 0;
 37228   008C60  0E00               	movlw	0
 37229   008C62  0012               	return	
 37230   008C64                     l20039:
 37231                           
 37232                           ; BSR set to: 0
 37233                           ;../universalNv.c: 82:                 return 234;
 37234   008C64  0EEA               	movlw	234
 37235   008C66  0012               	return	
 37236   008C68                     l20043:
 37237                           
 37238                           ; BSR set to: 0
 37239                           ;../universalNv.c: 84:                 return 0x33;
 37240   008C68  0E33               	movlw	51
 37241   008C6A  0012               	return	
 37242   008C6C                     l20047:
 37243                           
 37244                           ; BSR set to: 0
 37245                           ;../universalNv.c: 86:                 return 2;
 37246   008C6C  0E02               	movlw	2
 37247   008C6E  0012               	return	
 37248   008C70                     l20051:
 37249                           
 37250                           ; BSR set to: 0
 37251                           ;../universalNv.c: 90:                 return 0xFF;
 37252   008C70  0EFF               	movlw	255
 37253   008C72  0012               	return	
 37254   008C74                     l20055:
 37255                           
 37256                           ; BSR set to: 0
 37257                           ;../universalNv.c: 92:                 return 20;
 37258   008C74  0E14               	movlw	20
 37259   008C76  0012               	return	
 37260   008C78                     l20065:
 37261                           
 37262                           ; BSR set to: 0
 37263   008C78  51A3               	movf	APP_nvDefault@index& (0+255),w,b
 37264                           
 37265                           ; Switch size 1, requested type "simple"
 37266                           ; Number of cases is 9, Range of values is 1 to 9
 37267                           ; switch strategies available:
 37268                           ; Name         Instructions Cycles
 37269                           ; simple_byte           28    15 (average)
 37270                           ;	Chosen strategy is simple_byte
 37271   008C7A  0A01               	xorlw	1	; case 1
 37272   008C7C  B4D8               	btfsc	status,2,c
 37273   008C7E  D7F0               	goto	l20031
 37274   008C80  0A03               	xorlw	3	; case 2
 37275   008C82  B4D8               	btfsc	status,2,c
 37276   008C84  D7ED               	goto	l20031
 37277   008C86  0A01               	xorlw	1	; case 3
 37278   008C88  B4D8               	btfsc	status,2,c
 37279   008C8A  D7EC               	goto	l20039
 37280   008C8C  0A07               	xorlw	7	; case 4
 37281   008C8E  B4D8               	btfsc	status,2,c
 37282   008C90  D7EB               	goto	l20043
 37283   008C92  0A01               	xorlw	1	; case 5
 37284   008C94  B4D8               	btfsc	status,2,c
 37285   008C96  D7EA               	goto	l20047
 37286   008C98  0A03               	xorlw	3	; case 6
 37287   008C9A  B4D8               	btfsc	status,2,c
 37288   008C9C  D7E9               	goto	l20051
 37289   008C9E  0A01               	xorlw	1	; case 7
 37290   008CA0  B4D8               	btfsc	status,2,c
 37291   008CA2  D7E6               	goto	l20051
 37292   008CA4  0A0F               	xorlw	15	; case 8
 37293   008CA6  B4D8               	btfsc	status,2,c
 37294   008CA8  D7E3               	goto	l20051
 37295   008CAA  0A01               	xorlw	1	; case 9
 37296   008CAC  B4D8               	btfsc	status,2,c
 37297   008CAE  D7E2               	goto	l20055
 37298   008CB0  D7D7               	goto	l20031
 37299   008CB2                     l20067:
 37300                           
 37301                           ; BSR set to: 0
 37302                           ;../universalNv.c: 98:     return channelDefaultNVs[(((uint8_t)((index-16)/7)) < 8) ? 0 
      +                          : 0][(index-16) % 7];
 37303   008CB2  0EF0               	movlw	240
 37304   008CB4  25A3               	addwf	APP_nvDefault@index& (0+255),w,b
 37305   008CB6  6F97               	movwf	___awdiv@dividend& (0+255),b
 37306   008CB8  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 37307   008CBA  0EFF               	movlw	255
 37308   008CBC  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 37309   008CBE  0E00               	movlw	0
 37310   008CC0  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 37311   008CC2  0E07               	movlw	7
 37312   008CC4  6F99               	movwf	___awdiv@divisor& (0+255),b
 37313   008CC6  EC1C  F053         	call	___awdiv	;wreg free
 37314   008CCA  0E00               	movlw	0
 37315   008CCC  0100               	movlb	0	; () banked
 37316   008CCE  6F92               	movwf	(___wmul@multiplier+1)& (0+255),b
 37317   008CD0  0E00               	movlw	0
 37318   008CD2  6F91               	movwf	___wmul@multiplier& (0+255),b
 37319   008CD4  0E00               	movlw	0
 37320   008CD6  6F94               	movwf	(___wmul@multiplicand+1)& (0+255),b
 37321   008CD8  0E07               	movlw	7
 37322   008CDA  6F93               	movwf	___wmul@multiplicand& (0+255),b
 37323   008CDC  EC4F  F061         	call	___wmul	;wreg free
 37324   008CE0  0E8B               	movlw	low _channelDefaultNVs
 37325   008CE2  0100               	movlb	0	; () banked
 37326   008CE4  2591               	addwf	?___wmul& (0+255),w,b
 37327   008CE6  6F9F               	movwf	??_APP_nvDefault& (0+255),b
 37328   008CE8  0EEE               	movlw	high _channelDefaultNVs
 37329   008CEA  2192               	addwfc	(?___wmul+1)& (0+255),w,b
 37330   008CEC  6FA0               	movwf	(??_APP_nvDefault+1)& (0+255),b
 37331   008CEE  0EF0               	movlw	240
 37332   008CF0  25A3               	addwf	APP_nvDefault@index& (0+255),w,b
 37333   008CF2  6F8D               	movwf	___awmod@dividend& (0+255),b
 37334   008CF4  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 37335   008CF6  0EFF               	movlw	255
 37336   008CF8  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 37337   008CFA  0E00               	movlw	0
 37338   008CFC  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 37339   008CFE  0E07               	movlw	7
 37340   008D00  6F8F               	movwf	___awmod@divisor& (0+255),b
 37341   008D02  EC31  F057         	call	___awmod	;wreg free
 37342   008D06  0100               	movlb	0	; () banked
 37343   008D08  518D               	movf	?___awmod& (0+255),w,b
 37344   008D0A  259F               	addwf	??_APP_nvDefault& (0+255),w,b
 37345   008D0C  6FA1               	movwf	(??_APP_nvDefault+2)& (0+255),b
 37346   008D0E  518E               	movf	(?___awmod+1)& (0+255),w,b
 37347   008D10  21A0               	addwfc	(??_APP_nvDefault+1)& (0+255),w,b
 37348   008D12  6FA2               	movwf	(??_APP_nvDefault+3)& (0+255),b
 37349   008D14  C0A1  FFF6         	movff	??_APP_nvDefault+2,tblptrl
 37350   008D18  C0A2  FFF7         	movff	??_APP_nvDefault+3,tblptrh
 37351   008D1C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37352   008D1C  6AF8               	clrf	tblptru,c
 37353   008D1E                     	endif
 37354   008D1E                     	if	0	;tblptru may be non-zero
 37355   008D1E                     	endif
 37356   008D1E  0008               	tblrd		*
 37357   008D20  50F5               	movf	tablat,w,c
 37358                           
 37359                           ; BSR set to: 0
 37360   008D22  0012               	return		;funcret
 37361   008D24                     __end_of_APP_nvDefault:
 37362                           	callstack 0
 37363                           
 37364 ;; *************** function ___wmul *****************
 37365 ;; Defined at:
 37366 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
 37367 ;; Parameters:    Size  Location     Type
 37368 ;;  multiplier      2   49[BANK0 ] unsigned int 
 37369 ;;  multiplicand    2   51[BANK0 ] unsigned int 
 37370 ;; Auto vars:     Size  Location     Type
 37371 ;;  product         2   53[BANK0 ] unsigned int 
 37372 ;; Return value:  Size  Location     Type
 37373 ;;                  2   49[BANK0 ] unsigned int 
 37374 ;; Registers used:
 37375 ;;		wreg, status,2, status,0, prodl, prodh
 37376 ;; Tracked objects:
 37377 ;;		On entry : 0/0
 37378 ;;		On exit  : 0/0
 37379 ;;		Unchanged: 0/0
 37380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37381 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37382 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37384 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37385 ;;Total ram usage:        6 bytes
 37386 ;; Hardware stack levels used: 1
 37387 ;; Hardware stack levels required when called: 12
 37388 ;; This function calls:
 37389 ;;		Nothing
 37390 ;; This function is called by:
 37391 ;;		_APP_nvDefault
 37392 ;;		_bounceDown
 37393 ;; This function uses a non-reentrant model
 37394 ;;
 37395                           
 37396                           	psect	text156
 37397   00C29E                     __ptext156:
 37398                           	callstack 0
 37399   00C29E                     ___wmul:
 37400                           	callstack 13
 37401                           
 37402                           ; BSR set to: 0
 37403                           ;incstack = 0
 37404   00C29E  0100               	movlb	0	; () banked
 37405   00C2A0  5191               	movf	___wmul@multiplier& (0+255),w,b
 37406   00C2A2  0393               	mulwf	___wmul@multiplicand& (0+255),b
 37407   00C2A4  CFF3 F095          	movff	prodl,___wmul@product
 37408   00C2A8  CFF4 F096          	movff	prodh,___wmul@product+1
 37409   00C2AC  5191               	movf	___wmul@multiplier& (0+255),w,b
 37410   00C2AE  0394               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 37411   00C2B0  50F3               	movf	243,w,c
 37412   00C2B2  2796               	addwf	(___wmul@product+1)& (0+255),f,b
 37413   00C2B4  5192               	movf	(___wmul@multiplier+1)& (0+255),w,b
 37414   00C2B6  0393               	mulwf	___wmul@multiplicand& (0+255),b
 37415   00C2B8  50F3               	movf	243,w,c
 37416   00C2BA  2796               	addwf	(___wmul@product+1)& (0+255),f,b
 37417                           
 37418                           ; BSR set to: 0
 37419   00C2BC  C095  F091         	movff	___wmul@product,?___wmul
 37420   00C2C0  C096  F092         	movff	___wmul@product+1,?___wmul+1
 37421                           
 37422                           ; BSR set to: 0
 37423   00C2C4  0012               	return		;funcret
 37424   00C2C6                     __end_of___wmul:
 37425                           	callstack 0
 37426                           
 37427 ;; *************** function ___awmod *****************
 37428 ;; Defined at:
 37429 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
 37430 ;; Parameters:    Size  Location     Type
 37431 ;;  dividend        2   45[BANK0 ] int 
 37432 ;;  divisor         2   47[BANK0 ] int 
 37433 ;; Auto vars:     Size  Location     Type
 37434 ;;  sign            1   50[BANK0 ] unsigned char 
 37435 ;;  counter         1   49[BANK0 ] unsigned char 
 37436 ;; Return value:  Size  Location     Type
 37437 ;;                  2   45[BANK0 ] int 
 37438 ;; Registers used:
 37439 ;;		wreg, status,2, status,0
 37440 ;; Tracked objects:
 37441 ;;		On entry : 0/0
 37442 ;;		On exit  : 0/0
 37443 ;;		Unchanged: 0/0
 37444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37445 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37446 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37448 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37449 ;;Total ram usage:        6 bytes
 37450 ;; Hardware stack levels used: 1
 37451 ;; Hardware stack levels required when called: 12
 37452 ;; This function calls:
 37453 ;;		Nothing
 37454 ;; This function is called by:
 37455 ;;		_consumer2QProcessMessage
 37456 ;;		_processActions
 37457 ;;		_APP_nvDefault
 37458 ;;		_APP_nvValueChanged
 37459 ;;		_APP_nvValidate
 37460 ;; This function uses a non-reentrant model
 37461 ;;
 37462                           
 37463                           	psect	text157
 37464   00AE62                     __ptext157:
 37465                           	callstack 0
 37466   00AE62                     ___awmod:
 37467                           	callstack 14
 37468                           
 37469                           ; BSR set to: 0
 37470                           ;incstack = 0
 37471   00AE62  0E00               	movlw	0
 37472   00AE64  0100               	movlb	0	; () banked
 37473   00AE66  6F92               	movwf	___awmod@sign& (0+255),b
 37474                           
 37475                           ; BSR set to: 0
 37476   00AE68  AF8E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 37477   00AE6A  D006               	goto	l19933
 37478                           
 37479                           ; BSR set to: 0
 37480   00AE6C  6D8D               	negf	___awmod@dividend& (0+255),b
 37481   00AE6E  1F8E               	comf	(___awmod@dividend+1)& (0+255),f,b
 37482   00AE70  B0D8               	btfsc	status,0,c
 37483   00AE72  2B8E               	incf	(___awmod@dividend+1)& (0+255),f,b
 37484                           
 37485                           ; BSR set to: 0
 37486   00AE74  0E01               	movlw	1
 37487   00AE76  6F92               	movwf	___awmod@sign& (0+255),b
 37488   00AE78                     l19933:
 37489                           
 37490                           ; BSR set to: 0
 37491   00AE78  AF90               	btfss	(___awmod@divisor+1)& (0+255),7,b
 37492   00AE7A  D004               	goto	l19937
 37493                           
 37494                           ; BSR set to: 0
 37495   00AE7C  6D8F               	negf	___awmod@divisor& (0+255),b
 37496   00AE7E  1F90               	comf	(___awmod@divisor+1)& (0+255),f,b
 37497   00AE80  B0D8               	btfsc	status,0,c
 37498   00AE82  2B90               	incf	(___awmod@divisor+1)& (0+255),f,b
 37499   00AE84                     l19937:
 37500                           
 37501                           ; BSR set to: 0
 37502   00AE84  518F               	movf	___awmod@divisor& (0+255),w,b
 37503   00AE86  1190               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 37504   00AE88  B4D8               	btfsc	status,2,c
 37505   00AE8A  D018               	goto	l19953
 37506                           
 37507                           ; BSR set to: 0
 37508   00AE8C  0E01               	movlw	1
 37509   00AE8E  6F91               	movwf	___awmod@counter& (0+255),b
 37510   00AE90  D004               	goto	l19943
 37511   00AE92                     l19941:
 37512                           
 37513                           ; BSR set to: 0
 37514   00AE92  90D8               	bcf	status,0,c
 37515   00AE94  378F               	rlcf	___awmod@divisor& (0+255),f,b
 37516   00AE96  3790               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 37517   00AE98  2B91               	incf	___awmod@counter& (0+255),f,b
 37518   00AE9A                     l19943:
 37519                           
 37520                           ; BSR set to: 0
 37521   00AE9A  AF90               	btfss	(___awmod@divisor+1)& (0+255),7,b
 37522   00AE9C  D7FA               	goto	l19941
 37523   00AE9E                     u19920:
 37524                           
 37525                           ; BSR set to: 0
 37526   00AE9E  518F               	movf	___awmod@divisor& (0+255),w,b
 37527   00AEA0  5D8D               	subwf	___awmod@dividend& (0+255),w,b
 37528   00AEA2  5190               	movf	(___awmod@divisor+1)& (0+255),w,b
 37529   00AEA4  598E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 37530   00AEA6  A0D8               	btfss	status,0,c
 37531   00AEA8  D004               	goto	l19949
 37532                           
 37533                           ; BSR set to: 0
 37534   00AEAA  518F               	movf	___awmod@divisor& (0+255),w,b
 37535   00AEAC  5F8D               	subwf	___awmod@dividend& (0+255),f,b
 37536   00AEAE  5190               	movf	(___awmod@divisor+1)& (0+255),w,b
 37537   00AEB0  5B8E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 37538   00AEB2                     l19949:
 37539                           
 37540                           ; BSR set to: 0
 37541   00AEB2  90D8               	bcf	status,0,c
 37542   00AEB4  3390               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 37543   00AEB6  338F               	rrcf	___awmod@divisor& (0+255),f,b
 37544                           
 37545                           ; BSR set to: 0
 37546   00AEB8  2F91               	decfsz	___awmod@counter& (0+255),f,b
 37547   00AEBA  D7F1               	goto	u19920
 37548   00AEBC                     l19953:
 37549                           
 37550                           ; BSR set to: 0
 37551   00AEBC  5192               	movf	___awmod@sign& (0+255),w,b
 37552   00AEBE  B4D8               	btfsc	status,2,c
 37553   00AEC0  D004               	goto	l19957
 37554                           
 37555                           ; BSR set to: 0
 37556   00AEC2  6D8D               	negf	___awmod@dividend& (0+255),b
 37557   00AEC4  1F8E               	comf	(___awmod@dividend+1)& (0+255),f,b
 37558   00AEC6  B0D8               	btfsc	status,0,c
 37559   00AEC8  2B8E               	incf	(___awmod@dividend+1)& (0+255),f,b
 37560   00AECA                     l19957:
 37561                           
 37562                           ; BSR set to: 0
 37563   00AECA  C08D  F08D         	movff	___awmod@dividend,?___awmod
 37564   00AECE  C08E  F08E         	movff	___awmod@dividend+1,?___awmod+1
 37565                           
 37566                           ; BSR set to: 0
 37567   00AED2  0012               	return		;funcret
 37568   00AED4                     __end_of___awmod:
 37569                           	callstack 0
 37570                           
 37571 ;; *************** function ___awdiv *****************
 37572 ;; Defined at:
 37573 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
 37574 ;; Parameters:    Size  Location     Type
 37575 ;;  dividend        2   55[BANK0 ] int 
 37576 ;;  divisor         2   57[BANK0 ] int 
 37577 ;; Auto vars:     Size  Location     Type
 37578 ;;  quotient        2   61[BANK0 ] int 
 37579 ;;  sign            1   60[BANK0 ] unsigned char 
 37580 ;;  counter         1   59[BANK0 ] unsigned char 
 37581 ;; Return value:  Size  Location     Type
 37582 ;;                  2   55[BANK0 ] int 
 37583 ;; Registers used:
 37584 ;;		wreg, status,2, status,0
 37585 ;; Tracked objects:
 37586 ;;		On entry : 0/0
 37587 ;;		On exit  : 0/0
 37588 ;;		Unchanged: 0/0
 37589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37590 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37591 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37593 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37594 ;;Total ram usage:        8 bytes
 37595 ;; Hardware stack levels used: 1
 37596 ;; Hardware stack levels required when called: 12
 37597 ;; This function calls:
 37598 ;;		Nothing
 37599 ;; This function is called by:
 37600 ;;		_APP_GetEventState
 37601 ;;		_consumer2QProcessMessage
 37602 ;;		_processActions
 37603 ;;		_sodTRCallback
 37604 ;;		_APP_nvDefault
 37605 ;;		_APP_nvValueChanged
 37606 ;;		_APP_nvValidate
 37607 ;;		_pollServos
 37608 ;;		_bounceDown
 37609 ;;		_bounceUp
 37610 ;;		_leds_poll
 37611 ;; This function uses a non-reentrant model
 37612 ;;
 37613                           
 37614                           	psect	text158
 37615   00A638                     __ptext158:
 37616                           	callstack 0
 37617   00A638                     ___awdiv:
 37618                           	callstack 15
 37619                           
 37620                           ; BSR set to: 0
 37621                           ;incstack = 0
 37622   00A638  0E00               	movlw	0
 37623   00A63A  0100               	movlb	0	; () banked
 37624   00A63C  6F9C               	movwf	___awdiv@sign& (0+255),b
 37625                           
 37626                           ; BSR set to: 0
 37627   00A63E  AF9A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 37628   00A640  D006               	goto	l19889
 37629                           
 37630                           ; BSR set to: 0
 37631   00A642  6D99               	negf	___awdiv@divisor& (0+255),b
 37632   00A644  1F9A               	comf	(___awdiv@divisor+1)& (0+255),f,b
 37633   00A646  B0D8               	btfsc	status,0,c
 37634   00A648  2B9A               	incf	(___awdiv@divisor+1)& (0+255),f,b
 37635                           
 37636                           ; BSR set to: 0
 37637   00A64A  0E01               	movlw	1
 37638   00A64C  6F9C               	movwf	___awdiv@sign& (0+255),b
 37639   00A64E                     l19889:
 37640                           
 37641                           ; BSR set to: 0
 37642   00A64E  AF98               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 37643   00A650  D006               	goto	l19895
 37644                           
 37645                           ; BSR set to: 0
 37646   00A652  6D97               	negf	___awdiv@dividend& (0+255),b
 37647   00A654  1F98               	comf	(___awdiv@dividend+1)& (0+255),f,b
 37648   00A656  B0D8               	btfsc	status,0,c
 37649   00A658  2B98               	incf	(___awdiv@dividend+1)& (0+255),f,b
 37650                           
 37651                           ; BSR set to: 0
 37652   00A65A  0E01               	movlw	1
 37653   00A65C  1B9C               	xorwf	___awdiv@sign& (0+255),f,b
 37654   00A65E                     l19895:
 37655                           
 37656                           ; BSR set to: 0
 37657   00A65E  0E00               	movlw	0
 37658   00A660  6F9E               	movwf	(___awdiv@quotient+1)& (0+255),b
 37659   00A662  0E00               	movlw	0
 37660   00A664  6F9D               	movwf	___awdiv@quotient& (0+255),b
 37661                           
 37662                           ; BSR set to: 0
 37663   00A666  5199               	movf	___awdiv@divisor& (0+255),w,b
 37664   00A668  119A               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 37665   00A66A  B4D8               	btfsc	status,2,c
 37666   00A66C  D01C               	goto	l19917
 37667                           
 37668                           ; BSR set to: 0
 37669   00A66E  0E01               	movlw	1
 37670   00A670  6F9B               	movwf	___awdiv@counter& (0+255),b
 37671   00A672  D004               	goto	l19903
 37672   00A674                     l19901:
 37673                           
 37674                           ; BSR set to: 0
 37675   00A674  90D8               	bcf	status,0,c
 37676   00A676  3799               	rlcf	___awdiv@divisor& (0+255),f,b
 37677   00A678  379A               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 37678   00A67A  2B9B               	incf	___awdiv@counter& (0+255),f,b
 37679   00A67C                     l19903:
 37680                           
 37681                           ; BSR set to: 0
 37682   00A67C  AF9A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 37683   00A67E  D7FA               	goto	l19901
 37684   00A680                     u19860:
 37685                           
 37686                           ; BSR set to: 0
 37687   00A680  90D8               	bcf	status,0,c
 37688   00A682  379D               	rlcf	___awdiv@quotient& (0+255),f,b
 37689   00A684  379E               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 37690                           
 37691                           ; BSR set to: 0
 37692   00A686  5199               	movf	___awdiv@divisor& (0+255),w,b
 37693   00A688  5D97               	subwf	___awdiv@dividend& (0+255),w,b
 37694   00A68A  519A               	movf	(___awdiv@divisor+1)& (0+255),w,b
 37695   00A68C  5998               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 37696   00A68E  A0D8               	btfss	status,0,c
 37697   00A690  D005               	goto	l19913
 37698                           
 37699                           ; BSR set to: 0
 37700   00A692  5199               	movf	___awdiv@divisor& (0+255),w,b
 37701   00A694  5F97               	subwf	___awdiv@dividend& (0+255),f,b
 37702   00A696  519A               	movf	(___awdiv@divisor+1)& (0+255),w,b
 37703   00A698  5B98               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 37704                           
 37705                           ; BSR set to: 0
 37706   00A69A  819D               	bsf	___awdiv@quotient& (0+255),0,b
 37707   00A69C                     l19913:
 37708                           
 37709                           ; BSR set to: 0
 37710   00A69C  90D8               	bcf	status,0,c
 37711   00A69E  339A               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 37712   00A6A0  3399               	rrcf	___awdiv@divisor& (0+255),f,b
 37713                           
 37714                           ; BSR set to: 0
 37715   00A6A2  2F9B               	decfsz	___awdiv@counter& (0+255),f,b
 37716   00A6A4  D7ED               	goto	u19860
 37717   00A6A6                     l19917:
 37718                           
 37719                           ; BSR set to: 0
 37720   00A6A6  519C               	movf	___awdiv@sign& (0+255),w,b
 37721   00A6A8  B4D8               	btfsc	status,2,c
 37722   00A6AA  D004               	goto	l19921
 37723                           
 37724                           ; BSR set to: 0
 37725   00A6AC  6D9D               	negf	___awdiv@quotient& (0+255),b
 37726   00A6AE  1F9E               	comf	(___awdiv@quotient+1)& (0+255),f,b
 37727   00A6B0  B0D8               	btfsc	status,0,c
 37728   00A6B2  2B9E               	incf	(___awdiv@quotient+1)& (0+255),f,b
 37729   00A6B4                     l19921:
 37730                           
 37731                           ; BSR set to: 0
 37732   00A6B4  C09D  F097         	movff	___awdiv@quotient,?___awdiv
 37733   00A6B8  C09E  F098         	movff	___awdiv@quotient+1,?___awdiv+1
 37734                           
 37735                           ; BSR set to: 0
 37736   00A6BC  0012               	return		;funcret
 37737   00A6BE                     __end_of___awdiv:
 37738                           	callstack 0
 37739                           
 37740 ;; *************** function _APP_factoryReset *****************
 37741 ;; Defined at:
 37742 ;;		line 214 in file "../main.c"
 37743 ;; Parameters:    Size  Location     Type
 37744 ;;		None
 37745 ;; Auto vars:     Size  Location     Type
 37746 ;;  io              1   51[BANK1 ] unsigned char 
 37747 ;; Return value:  Size  Location     Type
 37748 ;;                  1    wreg      void 
 37749 ;; Registers used:
 37750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37751 ;; Tracked objects:
 37752 ;;		On entry : 0/0
 37753 ;;		On exit  : 0/0
 37754 ;;		Unchanged: 0/0
 37755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37757 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37759 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37760 ;;Total ram usage:        1 bytes
 37761 ;; Hardware stack levels used: 1
 37762 ;; Hardware stack levels required when called: 25
 37763 ;; This function calls:
 37764 ;;		_factoryResetGlobalEvents
 37765 ;;		_flushFlashBlock
 37766 ;;		_setType
 37767 ;; This function is called by:
 37768 ;;		_factoryReset
 37769 ;; This function uses a non-reentrant model
 37770 ;;
 37771                           
 37772                           	psect	text159
 37773   00C37E                     __ptext159:
 37774                           	callstack 0
 37775   00C37E                     _APP_factoryReset:
 37776                           	callstack 2
 37777                           
 37778                           ;../main.c: 215:     uint8_t io;;../main.c: 217:     factoryResetGlobalEvents();
 37779                           
 37780                           ; BSR set to: 0
 37781                           ;incstack = 0
 37782   00C37E  EC29  F063         	call	_factoryResetGlobalEvents	;wreg free
 37783                           
 37784                           ;../main.c: 219:     for (io=0; io<16; io++) {
 37785   00C382  0E00               	movlw	0
 37786   00C384  0101               	movlb	1	; () banked
 37787   00C386  6FED               	movwf	APP_factoryReset@io& (0+255),b
 37788   00C388                     l20339:
 37789                           
 37790                           ; BSR set to: 1
 37791                           
 37792                           ; BSR set to: 1
 37793                           
 37794                           ; BSR set to: 1
 37795   00C388  0E00               	movlw	0
 37796   00C38A  6FEA               	movwf	setType@type& (0+255),b
 37797   00C38C  51ED               	movf	APP_factoryReset@io& (0+255),w,b
 37798   00C38E  ECA0  F059         	call	_setType
 37799                           
 37800                           ;../main.c: 221:     }
 37801   00C392  0101               	movlb	1	; () banked
 37802   00C394  2BED               	incf	APP_factoryReset@io& (0+255),f,b
 37803                           
 37804                           ; BSR set to: 1
 37805   00C396  0E0F               	movlw	15
 37806   00C398  65ED               	cpfsgt	APP_factoryReset@io& (0+255),b
 37807   00C39A  D7F6               	goto	l20339
 37808                           
 37809                           ; BSR set to: 1
 37810                           ;../main.c: 222:     flushFlashBlock();
 37811   00C39C  EC5F  F053         	call	_flushFlashBlock	;wreg free
 37812   00C3A0  0012               	return		;funcret
 37813   00C3A2                     __end_of_APP_factoryReset:
 37814                           	callstack 0
 37815                           
 37816 ;; *************** function _setType *****************
 37817 ;; Defined at:
 37818 ;;		line 527 in file "../main.c"
 37819 ;; Parameters:    Size  Location     Type
 37820 ;;  io              1    wreg     unsigned char 
 37821 ;;  type            1   48[BANK1 ] unsigned char 
 37822 ;; Auto vars:     Size  Location     Type
 37823 ;;  io              1   50[BANK1 ] unsigned char 
 37824 ;;  index           1   49[BANK1 ] unsigned char 
 37825 ;; Return value:  Size  Location     Type
 37826 ;;                  1    wreg      void 
 37827 ;; Registers used:
 37828 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37829 ;; Tracked objects:
 37830 ;;		On entry : 0/0
 37831 ;;		On exit  : 0/0
 37832 ;;		Unchanged: 0/0
 37833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37834 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37835 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37837 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37838 ;;Total ram usage:        3 bytes
 37839 ;; Hardware stack levels used: 1
 37840 ;; Hardware stack levels required when called: 24
 37841 ;; This function calls:
 37842 ;;		_configIO
 37843 ;;		_defaultEvents
 37844 ;;		_defaultNVs
 37845 ;;		_saveNV
 37846 ;; This function is called by:
 37847 ;;		_APP_factoryReset
 37848 ;;		_APP_nvValueChanged
 37849 ;; This function uses a non-reentrant model
 37850 ;;
 37851                           
 37852                           	psect	text160
 37853   00B340                     __ptext160:
 37854                           	callstack 0
 37855   00B340                     _setType:
 37856                           	callstack 2
 37857                           
 37858                           ;incstack = 0
 37859                           ;setType@io stored from wreg
 37860   00B340  0101               	movlb	1	; () banked
 37861   00B342  6FEC               	movwf	setType@io& (0+255),b
 37862                           
 37863                           ;../main.c: 528:     uint8_t index;;../main.c: 530:     index = (16 + 7*(io) + 0);
 37864   00B344  0101               	movlb	1	; () banked
 37865   00B346  51EC               	movf	setType@io& (0+255),w,b
 37866   00B348  0D07               	mullw	7
 37867   00B34A  50F3               	movf	243,w,c
 37868   00B34C  0F10               	addlw	16
 37869   00B34E  6FEB               	movwf	setType@index& (0+255),b
 37870                           
 37871                           ; BSR set to: 1
 37872                           ;../main.c: 531:     saveNV((uint8_t)index, type);
 37873   00B350  C1EA  F1BC         	movff	setType@type,saveNV@value
 37874   00B354  51EB               	movf	setType@index& (0+255),w,b
 37875   00B356  ECAC  F05E         	call	_saveNV
 37876                           
 37877                           ;../main.c: 534:     defaultNVs(io, type);
 37878   00B35A  C1EA  F1C0         	movff	setType@type,defaultNVs@type
 37879   00B35E  0101               	movlb	1	; () banked
 37880   00B360  51EC               	movf	setType@io& (0+255),w,b
 37881   00B362  EC11  F05C         	call	_defaultNVs
 37882                           
 37883                           ;../main.c: 537:     configIO(io);
 37884   00B366  0101               	movlb	1	; () banked
 37885   00B368  51EC               	movf	setType@io& (0+255),w,b
 37886   00B36A  EC52  F026         	call	_configIO
 37887                           
 37888                           ;../main.c: 539:     if ((type == 2) || (type== 3) || (type == 4)) {
 37889   00B36E  0E02               	movlw	2
 37890   00B370  0101               	movlb	1	; () banked
 37891   00B372  19EA               	xorwf	setType@type& (0+255),w,b
 37892   00B374  B4D8               	btfsc	status,2,c
 37893   00B376  D008               	goto	u19970
 37894                           
 37895                           ; BSR set to: 1
 37896   00B378  0E03               	movlw	3
 37897   00B37A  19EA               	xorwf	setType@type& (0+255),w,b
 37898   00B37C  B4D8               	btfsc	status,2,c
 37899   00B37E  D004               	goto	u19970
 37900                           
 37901                           ; BSR set to: 1
 37902   00B380  0E04               	movlw	4
 37903   00B382  19EA               	xorwf	setType@type& (0+255),w,b
 37904   00B384  A4D8               	btfss	status,2,c
 37905   00B386  D006               	goto	l19977
 37906   00B388                     u19970:
 37907                           
 37908                           ; BSR set to: 1
 37909                           ;../main.c: 540:         currentPos[io] = 128;
 37910   00B388  51EC               	movf	setType@io& (0+255),w,b
 37911   00B38A  0FA9               	addlw	low _currentPos
 37912   00B38C  6ED9               	movwf	fsr2l,c
 37913   00B38E  6ADA               	clrf	fsr2h,c
 37914   00B390  0E80               	movlw	128
 37915   00B392  6EDF               	movwf	indf2,c
 37916   00B394                     l19977:
 37917                           
 37918                           ; BSR set to: 1
 37919                           ;../main.c: 544:     defaultEvents(io, type);
 37920   00B394  C1EA  F1E6         	movff	setType@type,defaultEvents@type
 37921   00B398  51EC               	movf	setType@io& (0+255),w,b
 37922   00B39A  ECAC  F03A         	call	_defaultEvents
 37923   00B39E  0012               	return		;funcret
 37924   00B3A0                     __end_of_setType:
 37925                           	callstack 0
 37926                           
 37927 ;; *************** function _defaultNVs *****************
 37928 ;; Defined at:
 37929 ;;		line 342 in file "../universalNv.c"
 37930 ;; Parameters:    Size  Location     Type
 37931 ;;  io              1    wreg     unsigned char 
 37932 ;;  type            1    6[BANK1 ] unsigned char 
 37933 ;; Auto vars:     Size  Location     Type
 37934 ;;  io              1    9[BANK1 ] unsigned char 
 37935 ;;  i               1   10[BANK1 ] unsigned char 
 37936 ;; Return value:  Size  Location     Type
 37937 ;;                  1    wreg      void 
 37938 ;; Registers used:
 37939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37940 ;; Tracked objects:
 37941 ;;		On entry : 0/0
 37942 ;;		On exit  : 0/0
 37943 ;;		Unchanged: 0/0
 37944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37945 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37946 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37947 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37948 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37949 ;;Total ram usage:        5 bytes
 37950 ;; Hardware stack levels used: 1
 37951 ;; Hardware stack levels required when called: 19
 37952 ;; This function calls:
 37953 ;;		_loadNvCache
 37954 ;;		_saveNV
 37955 ;; This function is called by:
 37956 ;;		_setType
 37957 ;; This function uses a non-reentrant model
 37958 ;;
 37959                           
 37960                           	psect	text161
 37961   00B822                     __ptext161:
 37962                           	callstack 0
 37963   00B822                     _defaultNVs:
 37964                           	callstack 6
 37965                           
 37966                           ;incstack = 0
 37967                           ;defaultNVs@io stored from wreg
 37968   00B822  0101               	movlb	1	; () banked
 37969   00B824  6FC3               	movwf	defaultNVs@io& (0+255),b
 37970                           
 37971                           ;../universalNv.c: 343:     uint8_t i;;../universalNv.c: 345:     for (i=1; i<7; i++) {
 37972   00B826  0E01               	movlw	1
 37973   00B828  0101               	movlb	1	; () banked
 37974   00B82A  6FC4               	movwf	defaultNVs@i& (0+255),b
 37975   00B82C                     l19811:
 37976                           
 37977                           ; BSR set to: 1
 37978                           ;../universalNv.c: 346:         saveNV((16 + 7*(io) + 0)+i , channelDefaultNVs[type][i])
      +                          ;
 37979   00B82C  51C0               	movf	defaultNVs@type& (0+255),w,b
 37980   00B82E  0D07               	mullw	7
 37981   00B830  0E8B               	movlw	low _channelDefaultNVs
 37982   00B832  24F3               	addwf	243,w,c
 37983   00B834  6FC1               	movwf	??_defaultNVs& (0+255),b
 37984   00B836  0EEE               	movlw	high _channelDefaultNVs
 37985   00B838  20F4               	addwfc	prodh,w,c
 37986   00B83A  6FC2               	movwf	(??_defaultNVs+1)& (0+255),b
 37987   00B83C  51C4               	movf	defaultNVs@i& (0+255),w,b
 37988   00B83E  27C1               	addwf	??_defaultNVs& (0+255),f,b
 37989   00B840  0E00               	movlw	0
 37990   00B842  23C2               	addwfc	(??_defaultNVs+1)& (0+255),f,b
 37991   00B844  C1C1  FFF6         	movff	??_defaultNVs,tblptrl
 37992   00B848  C1C2  FFF7         	movff	??_defaultNVs+1,tblptrh
 37993   00B84C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37994   00B84C  6AF8               	clrf	tblptru,c
 37995   00B84E                     	endif
 37996   00B84E                     	if	0	;tblptru may be non-zero
 37997   00B84E                     	endif
 37998   00B84E  0008               	tblrd		*
 37999   00B850  CFF5 F1BC          	movff	tablat,saveNV@value
 38000   00B854  51C3               	movf	defaultNVs@io& (0+255),w,b
 38001   00B856  0D07               	mullw	7
 38002   00B858  50F3               	movf	243,w,c
 38003   00B85A  25C4               	addwf	defaultNVs@i& (0+255),w,b
 38004   00B85C  0F10               	addlw	16
 38005   00B85E  ECAC  F05E         	call	_saveNV
 38006                           
 38007                           ;../universalNv.c: 347:     }
 38008   00B862  0101               	movlb	1	; () banked
 38009   00B864  2BC4               	incf	defaultNVs@i& (0+255),f,b
 38010                           
 38011                           ; BSR set to: 1
 38012   00B866  0E06               	movlw	6
 38013   00B868  65C4               	cpfsgt	defaultNVs@i& (0+255),b
 38014   00B86A  D7E0               	goto	l19811
 38015                           
 38016                           ; BSR set to: 1
 38017                           ;../universalNv.c: 348:     loadNvCache();
 38018   00B86C  EC1C  F05D         	call	_loadNvCache	;wreg free
 38019   00B870  0012               	return		;funcret
 38020   00B872                     __end_of_defaultNVs:
 38021                           	callstack 0
 38022                           
 38023 ;; *************** function _saveNV *****************
 38024 ;; Defined at:
 38025 ;;		line 199 in file "../../VLCBlib_PIC/nv.c"
 38026 ;; Parameters:    Size  Location     Type
 38027 ;;  index           1    wreg     unsigned char 
 38028 ;;  value           1    2[BANK1 ] unsigned char 
 38029 ;; Auto vars:     Size  Location     Type
 38030 ;;  index           1    5[BANK1 ] unsigned char 
 38031 ;; Return value:  Size  Location     Type
 38032 ;;                  1    wreg      void 
 38033 ;; Registers used:
 38034 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 38035 ;; Tracked objects:
 38036 ;;		On entry : 0/0
 38037 ;;		On exit  : 0/0
 38038 ;;		Unchanged: 0/0
 38039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38040 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38041 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38042 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38043 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38044 ;;Total ram usage:        4 bytes
 38045 ;; Hardware stack levels used: 1
 38046 ;; Hardware stack levels required when called: 18
 38047 ;; This function calls:
 38048 ;;		_writeNVM
 38049 ;; This function is called by:
 38050 ;;		_setType
 38051 ;;		_defaultNVs
 38052 ;; This function uses a non-reentrant model
 38053 ;;
 38054                           
 38055                           	psect	text162
 38056   00BD58                     __ptext162:
 38057                           	callstack 0
 38058   00BD58                     _saveNV:
 38059                           	callstack 7
 38060                           
 38061                           ;incstack = 0
 38062                           ;saveNV@index stored from wreg
 38063   00BD58  0101               	movlb	1	; () banked
 38064   00BD5A  6FBF               	movwf	saveNV@index& (0+255),b
 38065                           
 38066                           ;../../VLCBlib_PIC/nv.c: 201:     nvCache[index] = value;
 38067   00BD5C  0E00               	movlw	low _nvCache
 38068   00BD5E  0101               	movlb	1	; () banked
 38069   00BD60  25BF               	addwf	saveNV@index& (0+255),w,b
 38070   00BD62  6ED9               	movwf	fsr2l,c
 38071   00BD64  6ADA               	clrf	fsr2h,c
 38072   00BD66  0E04               	movlw	high _nvCache
 38073   00BD68  22DA               	addwfc	fsr2h,f,c
 38074   00BD6A  C1BC  FFDF         	movff	saveNV@value,indf2
 38075                           
 38076                           ; BSR set to: 1
 38077                           ;../../VLCBlib_PIC/nv.c: 203:     writeNVM(FLASH_NVM_TYPE, 0xFF80 +index, value);
 38078   00BD6E  0E80               	movlw	128
 38079   00BD70  25BF               	addwf	saveNV@index& (0+255),w,b
 38080   00BD72  6FBD               	movwf	??_saveNV& (0+255),b
 38081   00BD74  6BBE               	clrf	(??_saveNV+1)& (0+255),b
 38082   00BD76  0EFF               	movlw	255
 38083   00BD78  23BE               	addwfc	(??_saveNV+1)& (0+255),f,b
 38084   00BD7A  C1BD  F0A4         	movff	??_saveNV,writeNVM@index
 38085   00BD7E  C1BE  F0A5         	movff	??_saveNV+1,writeNVM@index+1
 38086   00BD82  0100               	movlb	0	; () banked
 38087   00BD84  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38088   00BD86  C1BC  F0A7         	movff	saveNV@value,writeNVM@value
 38089   00BD8A  0E01               	movlw	1
 38090   00BD8C  EC60  F05C         	call	_writeNVM
 38091   00BD90  0012               	return		;funcret
 38092   00BD92                     __end_of_saveNV:
 38093                           	callstack 0
 38094                           
 38095 ;; *************** function _loadNvCache *****************
 38096 ;; Defined at:
 38097 ;;		line 162 in file "../../VLCBlib_PIC/nv.c"
 38098 ;; Parameters:    Size  Location     Type
 38099 ;;		None
 38100 ;; Auto vars:     Size  Location     Type
 38101 ;;  temp            2   57[BANK0 ] short 
 38102 ;;  i               1   59[BANK0 ] unsigned char 
 38103 ;; Return value:  Size  Location     Type
 38104 ;;                  1    wreg      void 
 38105 ;; Registers used:
 38106 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 38107 ;; Tracked objects:
 38108 ;;		On entry : 0/0
 38109 ;;		On exit  : 0/0
 38110 ;;		Unchanged: 0/0
 38111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38113 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38114 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38115 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38116 ;;Total ram usage:        5 bytes
 38117 ;; Hardware stack levels used: 1
 38118 ;; Hardware stack levels required when called: 14
 38119 ;; This function calls:
 38120 ;;		_readNVM
 38121 ;; This function is called by:
 38122 ;;		_defaultNVs
 38123 ;;		_nvPowerUp
 38124 ;; This function uses a non-reentrant model
 38125 ;;
 38126                           
 38127                           	psect	text163
 38128   00BA38                     __ptext163:
 38129                           	callstack 0
 38130   00BA38                     _loadNvCache:
 38131                           	callstack 14
 38132                           
 38133                           ;../../VLCBlib_PIC/nv.c: 163:     uint8_t i;;../../VLCBlib_PIC/nv.c: 164:     int16_t te
      +                          mp;;../../VLCBlib_PIC/nv.c: 166:     for (i=1; i<= (15+7*16); i++) {
 38134                           
 38135                           ;incstack = 0
 38136   00BA38  0E01               	movlw	1
 38137   00BA3A  0100               	movlb	0	; () banked
 38138   00BA3C  6F9B               	movwf	loadNvCache@i& (0+255),b
 38139   00BA3E                     l19683:
 38140                           
 38141                           ; BSR set to: 0
 38142                           ;../../VLCBlib_PIC/nv.c: 167:         temp = readNVM(FLASH_NVM_TYPE, 0xFF80 +i);
 38143   00BA3E  0E80               	movlw	128
 38144   00BA40  259B               	addwf	loadNvCache@i& (0+255),w,b
 38145   00BA42  6F97               	movwf	??_loadNvCache& (0+255),b
 38146   00BA44  6B98               	clrf	(??_loadNvCache+1)& (0+255),b
 38147   00BA46  0EFF               	movlw	255
 38148   00BA48  2398               	addwfc	(??_loadNvCache+1)& (0+255),f,b
 38149   00BA4A  C097  F091         	movff	??_loadNvCache,readNVM@index
 38150   00BA4E  C098  F092         	movff	??_loadNvCache+1,readNVM@index+1
 38151   00BA52  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38152   00BA54  0E01               	movlw	1
 38153   00BA56  ECD0  F059         	call	_readNVM
 38154   00BA5A  C091  F099         	movff	?_readNVM,loadNvCache@temp
 38155   00BA5E  C092  F09A         	movff	?_readNVM+1,loadNvCache@temp+1
 38156                           
 38157                           ;../../VLCBlib_PIC/nv.c: 168:         if (temp < 0) {
 38158   00BA62  0100               	movlb	0	; () banked
 38159   00BA64  BF9A               	btfsc	(loadNvCache@temp+1)& (0+255),7,b
 38160   00BA66  D008               	goto	l19691
 38161                           
 38162                           ; BSR set to: 0
 38163                           ;../../VLCBlib_PIC/nv.c: 171:             nvCache[i] = (uint8_t)temp;
 38164   00BA68  0E00               	movlw	low _nvCache
 38165   00BA6A  259B               	addwf	loadNvCache@i& (0+255),w,b
 38166   00BA6C  6ED9               	movwf	fsr2l,c
 38167   00BA6E  6ADA               	clrf	fsr2h,c
 38168   00BA70  0E04               	movlw	high _nvCache
 38169   00BA72  22DA               	addwfc	fsr2h,f,c
 38170   00BA74  C099  FFDF         	movff	loadNvCache@temp,indf2
 38171   00BA78                     l19691:
 38172                           
 38173                           ; BSR set to: 0
 38174                           ;../../VLCBlib_PIC/nv.c: 173:     }
 38175   00BA78  2B9B               	incf	loadNvCache@i& (0+255),f,b
 38176                           
 38177                           ; BSR set to: 0
 38178   00BA7A  0E7F               	movlw	127
 38179   00BA7C  659B               	cpfsgt	loadNvCache@i& (0+255),b
 38180   00BA7E  D7DF               	goto	l19683
 38181   00BA80  0012               	return	
 38182   00BA82                     __end_of_loadNvCache:
 38183                           	callstack 0
 38184                           
 38185 ;; *************** function _defaultEvents *****************
 38186 ;; Defined at:
 38187 ;;		line 110 in file "../universalEvents.c"
 38188 ;; Parameters:    Size  Location     Type
 38189 ;;  io              1    wreg     unsigned char 
 38190 ;;  type            1   44[BANK1 ] unsigned char 
 38191 ;; Auto vars:     Size  Location     Type
 38192 ;;  io              1   47[BANK1 ] unsigned char 
 38193 ;;  en              2   45[BANK1 ] unsigned short 
 38194 ;;  b               1    0        unsigned char 
 38195 ;; Return value:  Size  Location     Type
 38196 ;;                  1    wreg      void 
 38197 ;; Registers used:
 38198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38199 ;; Tracked objects:
 38200 ;;		On entry : 0/0
 38201 ;;		On exit  : 0/0
 38202 ;;		Unchanged: 0/0
 38203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38204 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38205 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38207 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38208 ;;Total ram usage:        4 bytes
 38209 ;; Hardware stack levels used: 1
 38210 ;; Hardware stack levels required when called: 23
 38211 ;; This function calls:
 38212 ;;		_addEvent
 38213 ;;		_clearEvents
 38214 ;; This function is called by:
 38215 ;;		_setType
 38216 ;; This function uses a non-reentrant model
 38217 ;;
 38218                           
 38219                           	psect	text164
 38220   007558                     __ptext164:
 38221                           	callstack 0
 38222   007558                     _defaultEvents:
 38223                           	callstack 2
 38224                           
 38225                           ; BSR set to: 0
 38226                           ;incstack = 0
 38227                           ;defaultEvents@io stored from wreg
 38228   007558  0101               	movlb	1	; () banked
 38229   00755A  6FE9               	movwf	defaultEvents@io& (0+255),b
 38230                           
 38231                           ;../universalEvents.c: 111:     uint16_t en = io+1;
 38232   00755C  0E01               	movlw	1
 38233   00755E  0101               	movlb	1	; () banked
 38234   007560  25E9               	addwf	defaultEvents@io& (0+255),w,b
 38235   007562  6FE7               	movwf	defaultEvents@en& (0+255),b
 38236   007564  6BE8               	clrf	(defaultEvents@en+1)& (0+255),b
 38237   007566  0E00               	movlw	0
 38238   007568  23E8               	addwfc	(defaultEvents@en+1)& (0+255),f,b
 38239                           
 38240                           ; BSR set to: 1
 38241                           ;../universalEvents.c: 112:     uint8_t b;;../universalEvents.c: 120:         clearEvent
      +                          s(io);
 38242   00756A  51E9               	movf	defaultEvents@io& (0+255),w,b
 38243   00756C  EC33  F05E         	call	_clearEvents
 38244                           
 38245                           ;../universalEvents.c: 125:     switch(type) {
 38246   007570  D094               	goto	l19831
 38247   007572                     l19823:
 38248                           
 38249                           ; BSR set to: 1
 38250                           ;../universalEvents.c: 129:              addEvent(nn.word, 100+en, 0, ((8 + 4*(io))+0), 
      +                          TRUE);
 38251   007572  C0BD  F1D7         	movff	_nn,addEvent@nodeNumber
 38252   007576  C0BE  F1D8         	movff	_nn+1,addEvent@nodeNumber+1
 38253   00757A  0E64               	movlw	100
 38254   00757C  25E7               	addwf	defaultEvents@en& (0+255),w,b
 38255   00757E  6FD9               	movwf	addEvent@eventNumber& (0+255),b
 38256   007580  0E00               	movlw	0
 38257   007582  21E8               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 38258   007584  6FDA               	movwf	(addEvent@eventNumber+1)& (0+255),b
 38259   007586  0E00               	movlw	0
 38260   007588  6FDB               	movwf	addEvent@evNum& (0+255),b
 38261   00758A  51E9               	movf	defaultEvents@io& (0+255),w,b
 38262   00758C  0D04               	mullw	4
 38263   00758E  50F3               	movf	243,w,c
 38264   007590  0F08               	addlw	8
 38265   007592  6FDC               	movwf	addEvent@evVal& (0+255),b
 38266   007594  0E01               	movlw	1
 38267   007596  6FDD               	movwf	addEvent@forceOwnNN& (0+255),b
 38268   007598  ECF5  F031         	call	_addEvent	;wreg free
 38269   00759C                     l645:
 38270                           
 38271                           ;../universalEvents.c: 134:             addEvent(nn.word, en, 1, ((8 + 5*(io))+0), TRUE)
      +                          ;
 38272   00759C  C0BD  F1D7         	movff	_nn,addEvent@nodeNumber
 38273   0075A0  C0BE  F1D8         	movff	_nn+1,addEvent@nodeNumber+1
 38274   0075A4  C1E7  F1D9         	movff	defaultEvents@en,addEvent@eventNumber
 38275   0075A8  C1E8  F1DA         	movff	defaultEvents@en+1,addEvent@eventNumber+1
 38276   0075AC  0E01               	movlw	1
 38277   0075AE  0101               	movlb	1	; () banked
 38278   0075B0  6FDB               	movwf	addEvent@evNum& (0+255),b
 38279   0075B2  51E9               	movf	defaultEvents@io& (0+255),w,b
 38280   0075B4  0D05               	mullw	5
 38281   0075B6  50F3               	movf	243,w,c
 38282   0075B8  0F08               	addlw	8
 38283   0075BA  6FDC               	movwf	addEvent@evVal& (0+255),b
 38284   0075BC  0E01               	movlw	1
 38285   0075BE  6FDD               	movwf	addEvent@forceOwnNN& (0+255),b
 38286   0075C0  ECF5  F031         	call	_addEvent	;wreg free
 38287                           
 38288                           ;../universalEvents.c: 137:             break;
 38289   0075C4  0012               	return	
 38290   0075C6                     l19825:
 38291                           
 38292                           ; BSR set to: 1
 38293                           ;../universalEvents.c: 140:             addEvent(nn.word, en, 0, ((8 + 4*(io))+0), TRUE)
      +                          ;
 38294   0075C6  C0BD  F1D7         	movff	_nn,addEvent@nodeNumber
 38295   0075CA  C0BE  F1D8         	movff	_nn+1,addEvent@nodeNumber+1
 38296   0075CE  C1E7  F1D9         	movff	defaultEvents@en,addEvent@eventNumber
 38297   0075D2  C1E8  F1DA         	movff	defaultEvents@en+1,addEvent@eventNumber+1
 38298   0075D6  0E00               	movlw	0
 38299   0075D8  6FDB               	movwf	addEvent@evNum& (0+255),b
 38300   0075DA  51E9               	movf	defaultEvents@io& (0+255),w,b
 38301   0075DC  0D04               	mullw	4
 38302   0075DE  50F3               	movf	243,w,c
 38303   0075E0  0F08               	addlw	8
 38304   0075E2  6FDC               	movwf	addEvent@evVal& (0+255),b
 38305   0075E4  0E01               	movlw	1
 38306   0075E6  6FDD               	movwf	addEvent@forceOwnNN& (0+255),b
 38307   0075E8  ECF5  F031         	call	_addEvent	;wreg free
 38308                           
 38309                           ;../universalEvents.c: 141:             break;
 38310   0075EC  0012               	return	
 38311   0075EE                     l19827:
 38312                           
 38313                           ; BSR set to: 1
 38314                           ;../universalEvents.c: 145:             addEvent(nn.word, 100+en, 0, ((8 + 4*(io))+0), T
      +                          RUE);
 38315   0075EE  C0BD  F1D7         	movff	_nn,addEvent@nodeNumber
 38316   0075F2  C0BE  F1D8         	movff	_nn+1,addEvent@nodeNumber+1
 38317   0075F6  0E64               	movlw	100
 38318   0075F8  25E7               	addwf	defaultEvents@en& (0+255),w,b
 38319   0075FA  6FD9               	movwf	addEvent@eventNumber& (0+255),b
 38320   0075FC  0E00               	movlw	0
 38321   0075FE  21E8               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 38322   007600  6FDA               	movwf	(addEvent@eventNumber+1)& (0+255),b
 38323   007602  0E00               	movlw	0
 38324   007604  6FDB               	movwf	addEvent@evNum& (0+255),b
 38325   007606  51E9               	movf	defaultEvents@io& (0+255),w,b
 38326   007608  0D04               	mullw	4
 38327   00760A  50F3               	movf	243,w,c
 38328   00760C  0F08               	addlw	8
 38329   00760E  6FDC               	movwf	addEvent@evVal& (0+255),b
 38330   007610  0E01               	movlw	1
 38331   007612  6FDD               	movwf	addEvent@forceOwnNN& (0+255),b
 38332   007614  ECF5  F031         	call	_addEvent	;wreg free
 38333                           
 38334                           ;../universalEvents.c: 146:             addEvent(nn.word, 300+en, 0, ((8 + 4*(io))+1), T
      +                          RUE);
 38335   007618  C0BD  F1D7         	movff	_nn,addEvent@nodeNumber
 38336   00761C  C0BE  F1D8         	movff	_nn+1,addEvent@nodeNumber+1
 38337   007620  0E2C               	movlw	44
 38338   007622  0101               	movlb	1	; () banked
 38339   007624  25E7               	addwf	defaultEvents@en& (0+255),w,b
 38340   007626  6FD9               	movwf	addEvent@eventNumber& (0+255),b
 38341   007628  0E01               	movlw	1
 38342   00762A  21E8               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 38343   00762C  6FDA               	movwf	(addEvent@eventNumber+1)& (0+255),b
 38344   00762E  0E00               	movlw	0
 38345   007630  6FDB               	movwf	addEvent@evNum& (0+255),b
 38346   007632  51E9               	movf	defaultEvents@io& (0+255),w,b
 38347   007634  0D04               	mullw	4
 38348   007636  50F3               	movf	243,w,c
 38349   007638  0F09               	addlw	9
 38350   00763A  6FDC               	movwf	addEvent@evVal& (0+255),b
 38351   00763C  0E01               	movlw	1
 38352   00763E  6FDD               	movwf	addEvent@forceOwnNN& (0+255),b
 38353   007640  ECF5  F031         	call	_addEvent	;wreg free
 38354                           
 38355                           ;../universalEvents.c: 147:             addEvent(nn.word, 200+en, 0, ((8 + 4*(io))+2), T
      +                          RUE);
 38356   007644  C0BD  F1D7         	movff	_nn,addEvent@nodeNumber
 38357   007648  C0BE  F1D8         	movff	_nn+1,addEvent@nodeNumber+1
 38358   00764C  0EC8               	movlw	200
 38359   00764E  0101               	movlb	1	; () banked
 38360   007650  25E7               	addwf	defaultEvents@en& (0+255),w,b
 38361   007652  6FD9               	movwf	addEvent@eventNumber& (0+255),b
 38362   007654  0E00               	movlw	0
 38363   007656  21E8               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 38364   007658  6FDA               	movwf	(addEvent@eventNumber+1)& (0+255),b
 38365   00765A  0E00               	movlw	0
 38366   00765C  6FDB               	movwf	addEvent@evNum& (0+255),b
 38367   00765E  51E9               	movf	defaultEvents@io& (0+255),w,b
 38368   007660  0D04               	mullw	4
 38369   007662  50F3               	movf	243,w,c
 38370   007664  0F0A               	addlw	10
 38371   007666  6FDC               	movwf	addEvent@evVal& (0+255),b
 38372   007668  0E01               	movlw	1
 38373   00766A  6FDD               	movwf	addEvent@forceOwnNN& (0+255),b
 38374   00766C  ECF5  F031         	call	_addEvent	;wreg free
 38375                           
 38376                           ;../universalEvents.c: 149:             addEvent(nn.word, en, 1, ((8 + 5*(io))+0), TRUE)
      +                          ;
 38377   007670  C0BD  F1D7         	movff	_nn,addEvent@nodeNumber
 38378   007674  C0BE  F1D8         	movff	_nn+1,addEvent@nodeNumber+1
 38379   007678  C1E7  F1D9         	movff	defaultEvents@en,addEvent@eventNumber
 38380   00767C  C1E8  F1DA         	movff	defaultEvents@en+1,addEvent@eventNumber+1
 38381   007680  0E01               	movlw	1
 38382   007682  0101               	movlb	1	; () banked
 38383   007684  6FDB               	movwf	addEvent@evNum& (0+255),b
 38384   007686  51E9               	movf	defaultEvents@io& (0+255),w,b
 38385   007688  0D05               	mullw	5
 38386   00768A  50F3               	movf	243,w,c
 38387   00768C  0F08               	addlw	8
 38388   00768E  6FDC               	movwf	addEvent@evVal& (0+255),b
 38389   007690  0E01               	movlw	1
 38390   007692  6FDD               	movwf	addEvent@forceOwnNN& (0+255),b
 38391   007694  ECF5  F031         	call	_addEvent	;wreg free
 38392                           
 38393                           ;../universalEvents.c: 150:             break;
 38394   007698  0012               	return	
 38395   00769A                     l19831:
 38396   00769A  0101               	movlb	1	; () banked
 38397   00769C  51E6               	movf	defaultEvents@type& (0+255),w,b
 38398                           
 38399                           ; Switch size 1, requested type "simple"
 38400                           ; Number of cases is 5, Range of values is 0 to 4
 38401                           ; switch strategies available:
 38402                           ; Name         Instructions Cycles
 38403                           ; simple_byte           16     9 (average)
 38404                           ;	Chosen strategy is simple_byte
 38405   00769E  0A00               	xorlw	0	; case 0
 38406   0076A0  B4D8               	btfsc	status,2,c
 38407   0076A2  D791               	goto	l19825
 38408   0076A4  0A01               	xorlw	1	; case 1
 38409   0076A6  B4D8               	btfsc	status,2,c
 38410   0076A8  D779               	goto	l645
 38411   0076AA  0A03               	xorlw	3	; case 2
 38412   0076AC  B4D8               	btfsc	status,2,c
 38413   0076AE  D79F               	goto	l19827
 38414   0076B0  0A01               	xorlw	1	; case 3
 38415   0076B2  B4D8               	btfsc	status,2,c
 38416   0076B4  D75E               	goto	l19823
 38417   0076B6  0A07               	xorlw	7	; case 4
 38418   0076B8  0012               	return	
 38419   0076BA                     __end_of_defaultEvents:
 38420                           	callstack 0
 38421                           
 38422 ;; *************** function _clearEvents *****************
 38423 ;; Defined at:
 38424 ;;		line 222 in file "../universalEvents.c"
 38425 ;; Parameters:    Size  Location     Type
 38426 ;;  io              1    wreg     unsigned char 
 38427 ;; Auto vars:     Size  Location     Type
 38428 ;;  io              1   39[BANK1 ] unsigned char 
 38429 ;; Return value:  Size  Location     Type
 38430 ;;                  1    wreg      void 
 38431 ;; Registers used:
 38432 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38433 ;; Tracked objects:
 38434 ;;		On entry : 0/0
 38435 ;;		On exit  : 0/0
 38436 ;;		Unchanged: 0/0
 38437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38439 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38441 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38442 ;;Total ram usage:        1 bytes
 38443 ;; Hardware stack levels used: 1
 38444 ;; Hardware stack levels required when called: 22
 38445 ;; This function calls:
 38446 ;;		_deleteActionRange
 38447 ;;		_deleteHappeningRange
 38448 ;; This function is called by:
 38449 ;;		_defaultEvents
 38450 ;; This function uses a non-reentrant model
 38451 ;;
 38452                           
 38453                           	psect	text165
 38454   00BC66                     __ptext165:
 38455                           	callstack 0
 38456   00BC66                     _clearEvents:
 38457                           	callstack 2
 38458                           
 38459                           ;incstack = 0
 38460                           ;clearEvents@io stored from wreg
 38461   00BC66  0101               	movlb	1	; () banked
 38462   00BC68  6FE1               	movwf	clearEvents@io& (0+255),b
 38463                           
 38464                           ;../universalEvents.c: 223:     deleteActionRange((uint8_t)(uint8_t)(8 + 5*(io)), 5);
 38465   00BC6A  0E05               	movlw	5
 38466   00BC6C  0101               	movlb	1	; () banked
 38467   00BC6E  6FD7               	movwf	deleteActionRange@number& (0+255),b
 38468   00BC70  51E1               	movf	clearEvents@io& (0+255),w,b
 38469   00BC72  0D05               	mullw	5
 38470   00BC74  50F3               	movf	243,w,c
 38471   00BC76  0F08               	addlw	8
 38472   00BC78  EC96  F04B         	call	_deleteActionRange
 38473                           
 38474                           ;../universalEvents.c: 224:     deleteActionRange((uint8_t)(uint8_t)((8 + 5*(io)) | 0x80
      +                          ), 5);
 38475   00BC7C  0E05               	movlw	5
 38476   00BC7E  0101               	movlb	1	; () banked
 38477   00BC80  6FD7               	movwf	deleteActionRange@number& (0+255),b
 38478   00BC82  51E1               	movf	clearEvents@io& (0+255),w,b
 38479   00BC84  0D05               	mullw	5
 38480   00BC86  50F3               	movf	243,w,c
 38481   00BC88  0F08               	addlw	8
 38482   00BC8A  0980               	iorlw	128
 38483   00BC8C  EC96  F04B         	call	_deleteActionRange
 38484                           
 38485                           ;../universalEvents.c: 225:     deleteHappeningRange((8 + 4*(io)), 4);
 38486   00BC90  0E04               	movlw	4
 38487   00BC92  0101               	movlb	1	; () banked
 38488   00BC94  6FD7               	movwf	deleteHappeningRange@number& (0+255),b
 38489   00BC96  51E1               	movf	clearEvents@io& (0+255),w,b
 38490   00BC98  0D04               	mullw	4
 38491   00BC9A  50F3               	movf	243,w,c
 38492   00BC9C  0F08               	addlw	8
 38493   00BC9E  ECE6  F044         	call	_deleteHappeningRange
 38494   00BCA2  0012               	return		;funcret
 38495   00BCA4                     __end_of_clearEvents:
 38496                           	callstack 0
 38497                           
 38498 ;; *************** function _deleteHappeningRange *****************
 38499 ;; Defined at:
 38500 ;;		line 287 in file "../../VLCBlib_PIC/event_producer_happening.c"
 38501 ;; Parameters:    Size  Location     Type
 38502 ;;  happening       1    wreg     unsigned char 
 38503 ;;  number          1   29[BANK1 ] unsigned char 
 38504 ;; Auto vars:     Size  Location     Type
 38505 ;;  happening       1   35[BANK1 ] unsigned char 
 38506 ;;  h               1   36[BANK1 ] unsigned char 
 38507 ;;  f               1    0        struct .
 38508 ;;  tableIndex      1   37[BANK1 ] unsigned char 
 38509 ;; Return value:  Size  Location     Type
 38510 ;;                  1    wreg      void 
 38511 ;; Registers used:
 38512 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38513 ;; Tracked objects:
 38514 ;;		On entry : 0/0
 38515 ;;		On exit  : 0/0
 38516 ;;		Unchanged: 0/0
 38517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38518 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38519 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38520 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38521 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38522 ;;Total ram usage:        9 bytes
 38523 ;; Hardware stack levels used: 1
 38524 ;; Hardware stack levels required when called: 21
 38525 ;; This function calls:
 38526 ;;		_checkRemoveTableEntry
 38527 ;;		_flushFlashBlock
 38528 ;;		_readNVM
 38529 ;;		_rebuildHashtable
 38530 ;;		_validStart
 38531 ;;		_writeEv
 38532 ;; This function is called by:
 38533 ;;		_clearEvents
 38534 ;; This function uses a non-reentrant model
 38535 ;;
 38536                           
 38537                           	psect	text166
 38538   0089CC                     __ptext166:
 38539                           	callstack 0
 38540   0089CC                     _deleteHappeningRange:
 38541                           	callstack 2
 38542                           
 38543                           ;incstack = 0
 38544                           ;deleteHappeningRange@happening stored from wreg
 38545   0089CC  0101               	movlb	1	; () banked
 38546   0089CE  6FDD               	movwf	deleteHappeningRange@happening& (0+255),b
 38547                           
 38548                           ;../../VLCBlib_PIC/event_producer_happening.c: 288:     uint8_t tableIndex;;../../VLCBli
      +                          b_PIC/event_producer_happening.c: 289:     for (tableIndex=0; tableIndex < 255; tableInd
      +                          ex++) {
 38549   0089D0  0E00               	movlw	0
 38550   0089D2  0101               	movlb	1	; () banked
 38551   0089D4  6FDF               	movwf	deleteHappeningRange@tableIndex& (0+255),b
 38552   0089D6                     l19541:
 38553                           
 38554                           ; BSR set to: 1
 38555                           ;../../VLCBlib_PIC/event_producer_happening.c: 290:         if ( validStart(tableIndex))
      +                           {
 38556   0089D6  51DF               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 38557   0089D8  EC39  F05C         	call	_validStart
 38558   0089DC  0900               	iorlw	0
 38559   0089DE  B4D8               	btfsc	status,2,c
 38560   0089E0  D059               	goto	l19553
 38561   0089E2  0101               	movlb	1	; () banked
 38562   0089E4  51DF               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 38563   0089E6  6FD8               	movwf	??_deleteHappeningRange& (0+255),b
 38564   0089E8  6BD9               	clrf	(??_deleteHappeningRange+1)& (0+255),b
 38565   0089EA  3BD8               	swapf	??_deleteHappeningRange& (0+255),f,b
 38566   0089EC  3BD9               	swapf	(??_deleteHappeningRange+1)& (0+255),f,b
 38567   0089EE  0EF0               	movlw	240
 38568   0089F0  17D9               	andwf	(??_deleteHappeningRange+1)& (0+255),f,b
 38569   0089F2  51D8               	movf	??_deleteHappeningRange& (0+255),w,b
 38570   0089F4  0B0F               	andlw	15
 38571   0089F6  13D9               	iorwf	(??_deleteHappeningRange+1)& (0+255),f,b
 38572   0089F8  0EF0               	movlw	240
 38573   0089FA  17D8               	andwf	??_deleteHappeningRange& (0+255),f,b
 38574   0089FC  0E80               	movlw	128
 38575   0089FE  25D8               	addwf	??_deleteHappeningRange& (0+255),w,b
 38576   008A00  6FDA               	movwf	(??_deleteHappeningRange+2)& (0+255),b
 38577   008A02  0EEF               	movlw	239
 38578   008A04  21D9               	addwfc	(??_deleteHappeningRange+1)& (0+255),w,b
 38579   008A06  6FDB               	movwf	(??_deleteHappeningRange+3)& (0+255),b
 38580   008A08  C1DA  F091         	movff	??_deleteHappeningRange+2,readNVM@index
 38581   008A0C  C1DB  F092         	movff	??_deleteHappeningRange+3,readNVM@index+1
 38582   008A10  0100               	movlb	0	; () banked
 38583   008A12  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38584   008A14  0E01               	movlw	1
 38585   008A16  ECD0  F059         	call	_readNVM
 38586                           
 38587                           ;../../VLCBlib_PIC/event_producer_happening.c: 295:             h = (Happening)readNVM(F
      +                          LASH_NVM_TYPE,
 38588   008A1A  0101               	movlb	1	; () banked
 38589   008A1C  51DF               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 38590   008A1E  0D10               	mullw	16
 38591   008A20  CFF3 F1D8          	movff	prodl,??_deleteHappeningRange
 38592   008A24  CFF4 F1D9          	movff	prodh,??_deleteHappeningRange+1
 38593   008A28  0E86               	movlw	134
 38594   008A2A  25D8               	addwf	??_deleteHappeningRange& (0+255),w,b
 38595   008A2C  6FDA               	movwf	(??_deleteHappeningRange+2)& (0+255),b
 38596   008A2E  0EEF               	movlw	239
 38597   008A30  21D9               	addwfc	(??_deleteHappeningRange+1)& (0+255),w,b
 38598   008A32  6FDB               	movwf	(??_deleteHappeningRange+3)& (0+255),b
 38599   008A34  C1DA  F091         	movff	??_deleteHappeningRange+2,readNVM@index
 38600   008A38  C1DB  F092         	movff	??_deleteHappeningRange+3,readNVM@index+1
 38601   008A3C  0100               	movlb	0	; () banked
 38602   008A3E  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38603   008A40  0E01               	movlw	1
 38604   008A42  ECD0  F059         	call	_readNVM
 38605   008A46  0100               	movlb	0	; () banked
 38606   008A48  5191               	movf	?_readNVM& (0+255),w,b
 38607   008A4A  0101               	movlb	1	; () banked
 38608   008A4C  6FDE               	movwf	deleteHappeningRange@h& (0+255),b
 38609                           
 38610                           ; BSR set to: 1
 38611                           ;../../VLCBlib_PIC/event_producer_happening.c: 297:             if ((h >= happening) && 
      +                          (h < happening+number)) {
 38612   008A4E  51DD               	movf	deleteHappeningRange@happening& (0+255),w,b
 38613   008A50  5DDE               	subwf	deleteHappeningRange@h& (0+255),w,b
 38614   008A52  A0D8               	btfss	status,0,c
 38615   008A54  D01F               	goto	l19553
 38616                           
 38617                           ; BSR set to: 1
 38618   008A56  51D7               	movf	deleteHappeningRange@number& (0+255),w,b
 38619   008A58  C1DD  F1D8         	movff	deleteHappeningRange@happening,??_deleteHappeningRange
 38620   008A5C  6BD9               	clrf	(??_deleteHappeningRange+1)& (0+255),b
 38621   008A5E  27D8               	addwf	??_deleteHappeningRange& (0+255),f,b
 38622   008A60  0E00               	movlw	0
 38623   008A62  23D9               	addwfc	(??_deleteHappeningRange+1)& (0+255),f,b
 38624   008A64  51DE               	movf	deleteHappeningRange@h& (0+255),w,b
 38625   008A66  6FDA               	movwf	(??_deleteHappeningRange+2)& (0+255),b
 38626   008A68  6BDB               	clrf	(??_deleteHappeningRange+3)& (0+255),b
 38627   008A6A  51D8               	movf	??_deleteHappeningRange& (0+255),w,b
 38628   008A6C  5DDA               	subwf	(??_deleteHappeningRange+2)& (0+255),w,b
 38629   008A6E  51DB               	movf	(??_deleteHappeningRange+3)& (0+255),w,b
 38630   008A70  0A80               	xorlw	128
 38631   008A72  6FDC               	movwf	(??_deleteHappeningRange+4)& (0+255),b
 38632   008A74  51D9               	movf	(??_deleteHappeningRange+1)& (0+255),w,b
 38633   008A76  0A80               	xorlw	128
 38634   008A78  59DC               	subwfb	(??_deleteHappeningRange+4)& (0+255),w,b
 38635   008A7A  B0D8               	btfsc	status,0,c
 38636   008A7C  D00B               	goto	l19553
 38637                           
 38638                           ; BSR set to: 1
 38639                           ;../../VLCBlib_PIC/event_producer_happening.c: 298:                 writeEv(tableIndex, 
      +                          0, 0);
 38640   008A7E  0E00               	movlw	0
 38641   008A80  6FCB               	movwf	writeEv@evNum& (0+255),b
 38642   008A82  0E00               	movlw	0
 38643   008A84  6FCC               	movwf	writeEv@evVal& (0+255),b
 38644   008A86  51DF               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 38645   008A88  ECF7  F018         	call	_writeEv
 38646                           
 38647                           ;../../VLCBlib_PIC/event_producer_happening.c: 299:                 checkRemoveTableEntr
      +                          y(tableIndex);
 38648   008A8C  0101               	movlb	1	; () banked
 38649   008A8E  51DF               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 38650   008A90  EC8A  F05D         	call	_checkRemoveTableEntry
 38651   008A94                     l19553:
 38652                           
 38653                           ;../../VLCBlib_PIC/event_producer_happening.c: 302:     }
 38654   008A94  0101               	movlb	1	; () banked
 38655   008A96  2BDF               	incf	deleteHappeningRange@tableIndex& (0+255),f,b
 38656                           
 38657                           ; BSR set to: 1
 38658   008A98  29DF               	incf	deleteHappeningRange@tableIndex& (0+255),w,b
 38659   008A9A  A4D8               	btfss	status,2,c
 38660   008A9C  D79C               	goto	l19541
 38661                           
 38662                           ; BSR set to: 1
 38663                           ;../../VLCBlib_PIC/event_producer_happening.c: 303:     flushFlashBlock();
 38664   008A9E  EC5F  F053         	call	_flushFlashBlock	;wreg free
 38665                           
 38666                           ;../../VLCBlib_PIC/event_producer_happening.c: 304:     rebuildHashtable();
 38667   008AA2  EC93  F03E         	call	_rebuildHashtable	;wreg free
 38668   008AA6  0012               	return		;funcret
 38669   008AA8                     __end_of_deleteHappeningRange:
 38670                           	callstack 0
 38671                           
 38672 ;; *************** function _deleteActionRange *****************
 38673 ;; Defined at:
 38674 ;;		line 529 in file "../event_consumerDualActionQueue.c"
 38675 ;; Parameters:    Size  Location     Type
 38676 ;;  action          1    wreg     unsigned char 
 38677 ;;  number          1   29[BANK1 ] unsigned char 
 38678 ;; Auto vars:     Size  Location     Type
 38679 ;;  action          1   36[BANK1 ] unsigned char 
 38680 ;;  e               1   37[BANK1 ] unsigned char 
 38681 ;;  updated         1   35[BANK1 ] enum E12760
 38682 ;;  tableIndex      1   38[BANK1 ] unsigned char 
 38683 ;; Return value:  Size  Location     Type
 38684 ;;                  1    wreg      void 
 38685 ;; Registers used:
 38686 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38687 ;; Tracked objects:
 38688 ;;		On entry : 0/0
 38689 ;;		On exit  : 0/0
 38690 ;;		Unchanged: 0/0
 38691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38692 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38693 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38694 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38695 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38696 ;;Total ram usage:       10 bytes
 38697 ;; Hardware stack levels used: 1
 38698 ;; Hardware stack levels required when called: 21
 38699 ;; This function calls:
 38700 ;;		_checkRemoveTableEntry
 38701 ;;		_flushFlashBlock
 38702 ;;		_getEVs
 38703 ;;		_rebuildHashtable
 38704 ;;		_validStart
 38705 ;;		_writeEv
 38706 ;; This function is called by:
 38707 ;;		_clearEvents
 38708 ;; This function uses a non-reentrant model
 38709 ;;
 38710                           
 38711                           	psect	text167
 38712   00972C                     __ptext167:
 38713                           	callstack 0
 38714   00972C                     _deleteActionRange:
 38715                           	callstack 2
 38716                           
 38717                           ;incstack = 0
 38718                           ;deleteActionRange@action stored from wreg
 38719   00972C  0101               	movlb	1	; () banked
 38720   00972E  6FDE               	movwf	deleteActionRange@action& (0+255),b
 38721                           
 38722                           ;../event_consumerDualActionQueue.c: 530:     uint8_t tableIndex;;../event_consumerDualA
      +                          ctionQueue.c: 531:     for (tableIndex=0; tableIndex < 255; tableIndex++) {
 38723   009730  0E00               	movlw	0
 38724   009732  0101               	movlb	1	; () banked
 38725   009734  6FE0               	movwf	deleteActionRange@tableIndex& (0+255),b
 38726   009736                     l19497:
 38727                           
 38728                           ; BSR set to: 1
 38729                           ;../event_consumerDualActionQueue.c: 532:         if (validStart(tableIndex)) {
 38730   009736  51E0               	movf	deleteActionRange@tableIndex& (0+255),w,b
 38731   009738  EC39  F05C         	call	_validStart
 38732   00973C  0900               	iorlw	0
 38733   00973E  B4D8               	btfsc	status,2,c
 38734   009740  D044               	goto	l19527
 38735                           
 38736                           ;../event_consumerDualActionQueue.c: 533:             Boolean updated = FALSE;
 38737   009742  0E00               	movlw	0
 38738   009744  0101               	movlb	1	; () banked
 38739   009746  6FDD               	movwf	deleteActionRange@updated& (0+255),b
 38740                           
 38741                           ; BSR set to: 1
 38742                           ;../event_consumerDualActionQueue.c: 534:             uint8_t e;;../event_consumerDualAc
      +                          tionQueue.c: 535:             if (getEVs(tableIndex)) {
 38743   009748  51E0               	movf	deleteActionRange@tableIndex& (0+255),w,b
 38744   00974A  EC3A  F041         	call	_getEVs
 38745   00974E  0900               	iorlw	0
 38746   009750  A4D8               	btfss	status,2,c
 38747   009752  0012               	return	
 38748                           
 38749                           ;../event_consumerDualActionQueue.c: 539:             for (e=1; e<20; e++) {
 38750   009754  0E01               	movlw	1
 38751   009756  0101               	movlb	1	; () banked
 38752   009758  6FDF               	movwf	deleteActionRange@e& (0+255),b
 38753   00975A                     l19511:
 38754                           
 38755                           ; BSR set to: 1
 38756                           ;../event_consumerDualActionQueue.c: 540:                 if ((evs[e] >= action) && (evs
      +                          [e] < action+number)) {
 38757   00975A  0E20               	movlw	low _evs
 38758   00975C  25DF               	addwf	deleteActionRange@e& (0+255),w,b
 38759   00975E  6ED9               	movwf	fsr2l,c
 38760   009760  6ADA               	clrf	fsr2h,c
 38761   009762  0E02               	movlw	high _evs
 38762   009764  22DA               	addwfc	fsr2h,f,c
 38763   009766  51DE               	movf	deleteActionRange@action& (0+255),w,b
 38764   009768  5CDE               	subwf	postinc2,w,c
 38765   00976A  A0D8               	btfss	status,0,c
 38766   00976C  D024               	goto	l19519
 38767                           
 38768                           ; BSR set to: 1
 38769   00976E  51D7               	movf	deleteActionRange@number& (0+255),w,b
 38770   009770  C1DE  F1D8         	movff	deleteActionRange@action,??_deleteActionRange
 38771   009774  6BD9               	clrf	(??_deleteActionRange+1)& (0+255),b
 38772   009776  27D8               	addwf	??_deleteActionRange& (0+255),f,b
 38773   009778  0E00               	movlw	0
 38774   00977A  23D9               	addwfc	(??_deleteActionRange+1)& (0+255),f,b
 38775   00977C  0E20               	movlw	low _evs
 38776   00977E  25DF               	addwf	deleteActionRange@e& (0+255),w,b
 38777   009780  6ED9               	movwf	fsr2l,c
 38778   009782  6ADA               	clrf	fsr2h,c
 38779   009784  0E02               	movlw	high _evs
 38780   009786  22DA               	addwfc	fsr2h,f,c
 38781   009788  50DF               	movf	indf2,w,c
 38782   00978A  6FDA               	movwf	(??_deleteActionRange+2)& (0+255),b
 38783   00978C  6BDB               	clrf	(??_deleteActionRange+3)& (0+255),b
 38784   00978E  51D8               	movf	??_deleteActionRange& (0+255),w,b
 38785   009790  5DDA               	subwf	(??_deleteActionRange+2)& (0+255),w,b
 38786   009792  51DB               	movf	(??_deleteActionRange+3)& (0+255),w,b
 38787   009794  0A80               	xorlw	128
 38788   009796  6FDC               	movwf	(??_deleteActionRange+4)& (0+255),b
 38789   009798  51D9               	movf	(??_deleteActionRange+1)& (0+255),w,b
 38790   00979A  0A80               	xorlw	128
 38791   00979C  59DC               	subwfb	(??_deleteActionRange+4)& (0+255),w,b
 38792   00979E  B0D8               	btfsc	status,0,c
 38793   0097A0  D00A               	goto	l19519
 38794                           
 38795                           ; BSR set to: 1
 38796                           ;../event_consumerDualActionQueue.c: 541:                     writeEv(tableIndex, e, 0);
 38797   0097A2  C1DF  F1CB         	movff	deleteActionRange@e,writeEv@evNum
 38798   0097A6  0E00               	movlw	0
 38799   0097A8  6FCC               	movwf	writeEv@evVal& (0+255),b
 38800   0097AA  51E0               	movf	deleteActionRange@tableIndex& (0+255),w,b
 38801   0097AC  ECF7  F018         	call	_writeEv
 38802                           
 38803                           ;../event_consumerDualActionQueue.c: 542:                     updated = TRUE;
 38804   0097B0  0E01               	movlw	1
 38805   0097B2  0101               	movlb	1	; () banked
 38806   0097B4  6FDD               	movwf	deleteActionRange@updated& (0+255),b
 38807   0097B6                     l19519:
 38808                           
 38809                           ; BSR set to: 1
 38810                           ;../event_consumerDualActionQueue.c: 544:             }
 38811   0097B6  2BDF               	incf	deleteActionRange@e& (0+255),f,b
 38812                           
 38813                           ; BSR set to: 1
 38814   0097B8  0E13               	movlw	19
 38815   0097BA  65DF               	cpfsgt	deleteActionRange@e& (0+255),b
 38816   0097BC  D7CE               	goto	l19511
 38817                           
 38818                           ; BSR set to: 1
 38819                           ;../event_consumerDualActionQueue.c: 545:             if (updated) {
 38820   0097BE  51DD               	movf	deleteActionRange@updated& (0+255),w,b
 38821   0097C0  B4D8               	btfsc	status,2,c
 38822   0097C2  D003               	goto	l19527
 38823                           
 38824                           ; BSR set to: 1
 38825                           ;../event_consumerDualActionQueue.c: 546:                 checkRemoveTableEntry(tableInd
      +                          ex);
 38826   0097C4  51E0               	movf	deleteActionRange@tableIndex& (0+255),w,b
 38827   0097C6  EC8A  F05D         	call	_checkRemoveTableEntry
 38828   0097CA                     l19527:
 38829                           
 38830                           ;../event_consumerDualActionQueue.c: 549:     }
 38831   0097CA  0101               	movlb	1	; () banked
 38832   0097CC  2BE0               	incf	deleteActionRange@tableIndex& (0+255),f,b
 38833                           
 38834                           ; BSR set to: 1
 38835   0097CE  29E0               	incf	deleteActionRange@tableIndex& (0+255),w,b
 38836   0097D0  A4D8               	btfss	status,2,c
 38837   0097D2  D7B1               	goto	l19497
 38838                           
 38839                           ; BSR set to: 1
 38840                           ;../event_consumerDualActionQueue.c: 550:     flushFlashBlock();
 38841   0097D4  EC5F  F053         	call	_flushFlashBlock	;wreg free
 38842                           
 38843                           ;../event_consumerDualActionQueue.c: 552:     rebuildHashtable();
 38844   0097D8  EC93  F03E         	call	_rebuildHashtable	;wreg free
 38845   0097DC  0012               	return		;funcret
 38846   0097DE                     __end_of_deleteActionRange:
 38847                           	callstack 0
 38848                           
 38849 ;; *************** function _addEvent *****************
 38850 ;; Defined at:
 38851 ;;		line 938 in file "../../VLCBlib_PIC/event_teach_large.c"
 38852 ;; Parameters:    Size  Location     Type
 38853 ;;  nodeNumber      2   29[BANK1 ] unsigned short 
 38854 ;;  eventNumber     2   31[BANK1 ] unsigned short 
 38855 ;;  evNum           1   33[BANK1 ] unsigned char 
 38856 ;;  evVal           1   34[BANK1 ] unsigned char 
 38857 ;;  forceOwnNN      1   35[BANK1 ] enum E12760
 38858 ;; Auto vars:     Size  Location     Type
 38859 ;;  e               1   42[BANK1 ] unsigned char 
 38860 ;;  f               1   41[BANK1 ] struct .
 38861 ;;  tableIndex      1   43[BANK1 ] unsigned char 
 38862 ;;  error           1   40[BANK1 ] unsigned char 
 38863 ;; Return value:  Size  Location     Type
 38864 ;;                  1    wreg      unsigned char 
 38865 ;; Registers used:
 38866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38867 ;; Tracked objects:
 38868 ;;		On entry : 0/0
 38869 ;;		On exit  : 0/0
 38870 ;;		Unchanged: 0/0
 38871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38872 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38873 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38874 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38875 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38876 ;;Total ram usage:       15 bytes
 38877 ;; Hardware stack levels used: 1
 38878 ;; Hardware stack levels required when called: 21
 38879 ;; This function calls:
 38880 ;;		_findEvent
 38881 ;;		_flushFlashBlock
 38882 ;;		_readNVM
 38883 ;;		_rebuildHashtable
 38884 ;;		_writeEv
 38885 ;;		_writeNVM
 38886 ;; This function is called by:
 38887 ;;		_defaultEvents
 38888 ;;		_APP_addEvent
 38889 ;; This function uses a non-reentrant model
 38890 ;;
 38891                           
 38892                           	psect	text168
 38893   0063EA                     __ptext168:
 38894                           	callstack 0
 38895   0063EA                     _addEvent:
 38896                           	callstack 5
 38897                           
 38898                           ;../../VLCBlib_PIC/event_teach_large.c: 939:     uint8_t tableIndex;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 940:     uint8_t error;;../../VLCBlib_PIC/event_teach_large.c: 942: 
      +                              tableIndex = findEvent(nodeNumber, eventNumber);
 38899                           
 38900                           ;incstack = 0
 38901   0063EA  C1D7  F1BA         	movff	addEvent@nodeNumber,findEvent@nodeNumber
 38902   0063EE  C1D8  F1BB         	movff	addEvent@nodeNumber+1,findEvent@nodeNumber+1
 38903   0063F2  C1D9  F1BC         	movff	addEvent@eventNumber,findEvent@eventNumber
 38904   0063F6  C1DA  F1BD         	movff	addEvent@eventNumber+1,findEvent@eventNumber+1
 38905   0063FA  ECBB  F051         	call	_findEvent	;wreg free
 38906   0063FE  0101               	movlb	1	; () banked
 38907   006400  6FE5               	movwf	addEvent@tableIndex& (0+255),b
 38908                           
 38909                           ; BSR set to: 1
 38910                           ;../../VLCBlib_PIC/event_teach_large.c: 943:     if (tableIndex == 0xff) {
 38911   006402  29E5               	incf	addEvent@tableIndex& (0+255),w,b
 38912   006404  A4D8               	btfss	status,2,c
 38913   006406  D0E2               	goto	l19663
 38914                           
 38915                           ; BSR set to: 1
 38916                           ;../../VLCBlib_PIC/event_teach_large.c: 949:         if (evVal == 0) {
 38917   006408  51DC               	movf	addEvent@evVal& (0+255),w,b
 38918   00640A  A4D8               	btfss	status,2,c
 38919   00640C  D002               	goto	l19621
 38920   00640E                     u19490:
 38921                           
 38922                           ;../../VLCBlib_PIC/event_teach_large.c: 950:             return 0;
 38923   00640E  0E00               	movlw	0
 38924   006410  0012               	return	
 38925   006412                     l19621:
 38926                           
 38927                           ; BSR set to: 1
 38928                           ;../../VLCBlib_PIC/event_teach_large.c: 952:         error = 1;
 38929   006412  0E01               	movlw	1
 38930   006414  6FE2               	movwf	addEvent@error& (0+255),b
 38931                           
 38932                           ;../../VLCBlib_PIC/event_teach_large.c: 954:         for (tableIndex=0; tableIndex<255; 
      +                          tableIndex++) {
 38933   006416  0E00               	movlw	0
 38934   006418  6FE5               	movwf	addEvent@tableIndex& (0+255),b
 38935   00641A                     l19627:
 38936                           
 38937                           ; BSR set to: 1
 38938                           ;../../VLCBlib_PIC/event_teach_large.c: 955:             EventTableFlags f;;../../VLCBli
      +                          b_PIC/event_teach_large.c: 956:             f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*tableIndex+0);
 38939   00641A  51E5               	movf	addEvent@tableIndex& (0+255),w,b
 38940   00641C  6FDE               	movwf	??_addEvent& (0+255),b
 38941   00641E  6BDF               	clrf	(??_addEvent+1)& (0+255),b
 38942   006420  3BDE               	swapf	??_addEvent& (0+255),f,b
 38943   006422  3BDF               	swapf	(??_addEvent+1)& (0+255),f,b
 38944   006424  0EF0               	movlw	240
 38945   006426  17DF               	andwf	(??_addEvent+1)& (0+255),f,b
 38946   006428  51DE               	movf	??_addEvent& (0+255),w,b
 38947   00642A  0B0F               	andlw	15
 38948   00642C  13DF               	iorwf	(??_addEvent+1)& (0+255),f,b
 38949   00642E  0EF0               	movlw	240
 38950   006430  17DE               	andwf	??_addEvent& (0+255),f,b
 38951   006432  0E80               	movlw	128
 38952   006434  25DE               	addwf	??_addEvent& (0+255),w,b
 38953   006436  6FE0               	movwf	(??_addEvent+2)& (0+255),b
 38954   006438  0EEF               	movlw	239
 38955   00643A  21DF               	addwfc	(??_addEvent+1)& (0+255),w,b
 38956   00643C  6FE1               	movwf	(??_addEvent+3)& (0+255),b
 38957   00643E  C1E0  F091         	movff	??_addEvent+2,readNVM@index
 38958   006442  C1E1  F092         	movff	??_addEvent+3,readNVM@index+1
 38959   006446  0100               	movlb	0	; () banked
 38960   006448  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38961   00644A  0E01               	movlw	1
 38962   00644C  ECD0  F059         	call	_readNVM
 38963   006450  0100               	movlb	0	; () banked
 38964   006452  5191               	movf	?_readNVM& (0+255),w,b
 38965   006454  0101               	movlb	1	; () banked
 38966   006456  6FE3               	movwf	addEvent@f& (0+255),b
 38967                           
 38968                           ; BSR set to: 1
 38969                           ;../../VLCBlib_PIC/event_teach_large.c: 957:             if (f.freeEntry) {
 38970   006458  AFE3               	btfss	addEvent@f& (0+255),7,b
 38971   00645A  D0AF               	goto	l19653
 38972                           
 38973                           ; BSR set to: 1
 38974                           ;../../VLCBlib_PIC/event_teach_large.c: 958:                 uint8_t e;;../../VLCBlib_PI
      +                          C/event_teach_large.c: 960:                 writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tableIn
      +                          dex+2, nodeNumber&0xFF);
 38975   00645C  51E5               	movf	addEvent@tableIndex& (0+255),w,b
 38976   00645E  0D10               	mullw	16
 38977   006460  CFF3 F1DE          	movff	prodl,??_addEvent
 38978   006464  CFF4 F1DF          	movff	prodh,??_addEvent+1
 38979   006468  0E82               	movlw	130
 38980   00646A  25DE               	addwf	??_addEvent& (0+255),w,b
 38981   00646C  6FE0               	movwf	(??_addEvent+2)& (0+255),b
 38982   00646E  0EEF               	movlw	239
 38983   006470  21DF               	addwfc	(??_addEvent+1)& (0+255),w,b
 38984   006472  6FE1               	movwf	(??_addEvent+3)& (0+255),b
 38985   006474  C1E0  F0A4         	movff	??_addEvent+2,writeNVM@index
 38986   006478  C1E1  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 38987   00647C  0100               	movlb	0	; () banked
 38988   00647E  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38989   006480  C1D7  F0A7         	movff	addEvent@nodeNumber,writeNVM@value
 38990   006484  0E01               	movlw	1
 38991   006486  EC60  F05C         	call	_writeNVM
 38992                           
 38993                           ;../../VLCBlib_PIC/event_teach_large.c: 961:                 writeNVM(FLASH_NVM_TYPE, 0x
      +                          EF80 + 16*tableIndex+2 +1, nodeNumber>>8);
 38994   00648A  0101               	movlb	1	; () banked
 38995   00648C  51E5               	movf	addEvent@tableIndex& (0+255),w,b
 38996   00648E  0D10               	mullw	16
 38997   006490  CFF3 F1DE          	movff	prodl,??_addEvent
 38998   006494  CFF4 F1DF          	movff	prodh,??_addEvent+1
 38999   006498  0E83               	movlw	131
 39000   00649A  25DE               	addwf	??_addEvent& (0+255),w,b
 39001   00649C  6FE0               	movwf	(??_addEvent+2)& (0+255),b
 39002   00649E  0EEF               	movlw	239
 39003   0064A0  21DF               	addwfc	(??_addEvent+1)& (0+255),w,b
 39004   0064A2  6FE1               	movwf	(??_addEvent+3)& (0+255),b
 39005   0064A4  C1E0  F0A4         	movff	??_addEvent+2,writeNVM@index
 39006   0064A8  C1E1  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 39007   0064AC  0100               	movlb	0	; () banked
 39008   0064AE  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39009   0064B0  0101               	movlb	1	; () banked
 39010   0064B2  51D8               	movf	(addEvent@nodeNumber+1)& (0+255),w,b
 39011   0064B4  0100               	movlb	0	; () banked
 39012   0064B6  6FA7               	movwf	writeNVM@value& (0+255),b
 39013   0064B8  0E01               	movlw	1
 39014   0064BA  EC60  F05C         	call	_writeNVM
 39015                           
 39016                           ;../../VLCBlib_PIC/event_teach_large.c: 962:                 writeNVM(FLASH_NVM_TYPE, 0x
      +                          EF80 + 16*tableIndex+4, eventNumber&0xFF);
 39017   0064BE  0101               	movlb	1	; () banked
 39018   0064C0  51E5               	movf	addEvent@tableIndex& (0+255),w,b
 39019   0064C2  0D10               	mullw	16
 39020   0064C4  CFF3 F1DE          	movff	prodl,??_addEvent
 39021   0064C8  CFF4 F1DF          	movff	prodh,??_addEvent+1
 39022   0064CC  0E84               	movlw	132
 39023   0064CE  25DE               	addwf	??_addEvent& (0+255),w,b
 39024   0064D0  6FE0               	movwf	(??_addEvent+2)& (0+255),b
 39025   0064D2  0EEF               	movlw	239
 39026   0064D4  21DF               	addwfc	(??_addEvent+1)& (0+255),w,b
 39027   0064D6  6FE1               	movwf	(??_addEvent+3)& (0+255),b
 39028   0064D8  C1E0  F0A4         	movff	??_addEvent+2,writeNVM@index
 39029   0064DC  C1E1  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 39030   0064E0  0100               	movlb	0	; () banked
 39031   0064E2  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39032   0064E4  C1D9  F0A7         	movff	addEvent@eventNumber,writeNVM@value
 39033   0064E8  0E01               	movlw	1
 39034   0064EA  EC60  F05C         	call	_writeNVM
 39035                           
 39036                           ;../../VLCBlib_PIC/event_teach_large.c: 963:                 writeNVM(FLASH_NVM_TYPE, 0x
      +                          EF80 + 16*tableIndex+4 +1, eventNumber>>8);
 39037   0064EE  0101               	movlb	1	; () banked
 39038   0064F0  51E5               	movf	addEvent@tableIndex& (0+255),w,b
 39039   0064F2  0D10               	mullw	16
 39040   0064F4  CFF3 F1DE          	movff	prodl,??_addEvent
 39041   0064F8  CFF4 F1DF          	movff	prodh,??_addEvent+1
 39042   0064FC  0E85               	movlw	133
 39043   0064FE  25DE               	addwf	??_addEvent& (0+255),w,b
 39044   006500  6FE0               	movwf	(??_addEvent+2)& (0+255),b
 39045   006502  0EEF               	movlw	239
 39046   006504  21DF               	addwfc	(??_addEvent+1)& (0+255),w,b
 39047   006506  6FE1               	movwf	(??_addEvent+3)& (0+255),b
 39048   006508  C1E0  F0A4         	movff	??_addEvent+2,writeNVM@index
 39049   00650C  C1E1  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 39050   006510  0100               	movlb	0	; () banked
 39051   006512  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39052   006514  0101               	movlb	1	; () banked
 39053   006516  51DA               	movf	(addEvent@eventNumber+1)& (0+255),w,b
 39054   006518  0100               	movlb	0	; () banked
 39055   00651A  6FA7               	movwf	writeNVM@value& (0+255),b
 39056   00651C  0E01               	movlw	1
 39057   00651E  EC60  F05C         	call	_writeNVM
 39058                           
 39059                           ;../../VLCBlib_PIC/event_teach_large.c: 964:                 f.asByte = 0;
 39060   006522  0E00               	movlw	0
 39061   006524  0101               	movlb	1	; () banked
 39062   006526  6FE3               	movwf	addEvent@f& (0+255),b
 39063                           
 39064                           ; BSR set to: 1
 39065                           ;../../VLCBlib_PIC/event_teach_large.c: 965:                 f.forceOwnNN = forceOwnNN;
 39066   006528  B1DD               	btfsc	addEvent@forceOwnNN& (0+255),0,b
 39067   00652A  D002               	bra	u19515
 39068   00652C  9DE3               	bcf	addEvent@f& (0+255),6,b
 39069   00652E  D002               	bra	u19516
 39070   006530                     u19515:
 39071   006530  0101               	movlb	1	; () banked
 39072   006532  8DE3               	bsf	addEvent@f& (0+255),6,b
 39073   006534                     u19516:
 39074                           
 39075                           ; BSR set to: 1
 39076                           ;../../VLCBlib_PIC/event_teach_large.c: 966:                 writeNVM(FLASH_NVM_TYPE, 0x
      +                          EF80 + 16*tableIndex+0, f.asByte);
 39077   006534  51E5               	movf	addEvent@tableIndex& (0+255),w,b
 39078   006536  6FDE               	movwf	??_addEvent& (0+255),b
 39079   006538  6BDF               	clrf	(??_addEvent+1)& (0+255),b
 39080   00653A  3BDE               	swapf	??_addEvent& (0+255),f,b
 39081   00653C  3BDF               	swapf	(??_addEvent+1)& (0+255),f,b
 39082   00653E  0EF0               	movlw	240
 39083   006540  17DF               	andwf	(??_addEvent+1)& (0+255),f,b
 39084   006542  51DE               	movf	??_addEvent& (0+255),w,b
 39085   006544  0B0F               	andlw	15
 39086   006546  13DF               	iorwf	(??_addEvent+1)& (0+255),f,b
 39087   006548  0EF0               	movlw	240
 39088   00654A  17DE               	andwf	??_addEvent& (0+255),f,b
 39089   00654C  0E80               	movlw	128
 39090   00654E  25DE               	addwf	??_addEvent& (0+255),w,b
 39091   006550  6FE0               	movwf	(??_addEvent+2)& (0+255),b
 39092   006552  0EEF               	movlw	239
 39093   006554  21DF               	addwfc	(??_addEvent+1)& (0+255),w,b
 39094   006556  6FE1               	movwf	(??_addEvent+3)& (0+255),b
 39095   006558  C1E0  F0A4         	movff	??_addEvent+2,writeNVM@index
 39096   00655C  C1E1  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 39097   006560  0100               	movlb	0	; () banked
 39098   006562  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39099   006564  C1E3  F0A7         	movff	addEvent@f,writeNVM@value
 39100   006568  0E01               	movlw	1
 39101   00656A  EC60  F05C         	call	_writeNVM
 39102                           
 39103                           ;../../VLCBlib_PIC/event_teach_large.c: 968:                 for (e = 0; e < 10; e++) {
 39104   00656E  0E00               	movlw	0
 39105   006570  0101               	movlb	1	; () banked
 39106   006572  6FE4               	movwf	addEvent@e& (0+255),b
 39107   006574                     l19645:
 39108                           
 39109                           ; BSR set to: 1
 39110                           ;../../VLCBlib_PIC/event_teach_large.c: 969:                     writeNVM(FLASH_NVM_TYPE
      +                          , 0xEF80 + 16*tableIndex+6 +e, 0);
 39111   006574  51E5               	movf	addEvent@tableIndex& (0+255),w,b
 39112   006576  0D10               	mullw	16
 39113   006578  CFF3 F1DE          	movff	prodl,??_addEvent
 39114   00657C  CFF4 F1DF          	movff	prodh,??_addEvent+1
 39115   006580  51E4               	movf	addEvent@e& (0+255),w,b
 39116   006582  27DE               	addwf	??_addEvent& (0+255),f,b
 39117   006584  0E00               	movlw	0
 39118   006586  23DF               	addwfc	(??_addEvent+1)& (0+255),f,b
 39119   006588  0E86               	movlw	134
 39120   00658A  25DE               	addwf	??_addEvent& (0+255),w,b
 39121   00658C  6FE0               	movwf	(??_addEvent+2)& (0+255),b
 39122   00658E  0EEF               	movlw	239
 39123   006590  21DF               	addwfc	(??_addEvent+1)& (0+255),w,b
 39124   006592  6FE1               	movwf	(??_addEvent+3)& (0+255),b
 39125   006594  C1E0  F0A4         	movff	??_addEvent+2,writeNVM@index
 39126   006598  C1E1  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 39127   00659C  0100               	movlb	0	; () banked
 39128   00659E  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39129   0065A0  0E00               	movlw	0
 39130   0065A2  6FA7               	movwf	writeNVM@value& (0+255),b
 39131   0065A4  0E01               	movlw	1
 39132   0065A6  EC60  F05C         	call	_writeNVM
 39133                           
 39134                           ;../../VLCBlib_PIC/event_teach_large.c: 970:                 }
 39135   0065AA  0101               	movlb	1	; () banked
 39136   0065AC  2BE4               	incf	addEvent@e& (0+255),f,b
 39137                           
 39138                           ; BSR set to: 1
 39139   0065AE  0E09               	movlw	9
 39140   0065B0  65E4               	cpfsgt	addEvent@e& (0+255),b
 39141   0065B2  D7E0               	goto	l19645
 39142                           
 39143                           ; BSR set to: 1
 39144                           ;../../VLCBlib_PIC/event_teach_large.c: 971:                 error = 0;
 39145   0065B4  0E00               	movlw	0
 39146   0065B6  6FE2               	movwf	addEvent@error& (0+255),b
 39147                           
 39148                           ;../../VLCBlib_PIC/event_teach_large.c: 972:                 break;
 39149   0065B8  D004               	goto	u19530
 39150   0065BA                     l19653:
 39151                           
 39152                           ; BSR set to: 1
 39153                           ;../../VLCBlib_PIC/event_teach_large.c: 974:         }
 39154   0065BA  2BE5               	incf	addEvent@tableIndex& (0+255),f,b
 39155                           
 39156                           ; BSR set to: 1
 39157   0065BC  29E5               	incf	addEvent@tableIndex& (0+255),w,b
 39158   0065BE  A4D8               	btfss	status,2,c
 39159   0065C0  D72C               	goto	l19627
 39160   0065C2                     u19530:
 39161                           
 39162                           ; BSR set to: 1
 39163                           ;../../VLCBlib_PIC/event_teach_large.c: 975:         if (error) {
 39164   0065C2  51E2               	movf	addEvent@error& (0+255),w,b
 39165   0065C4  B4D8               	btfsc	status,2,c
 39166   0065C6  D002               	goto	l19663
 39167                           
 39168                           ; BSR set to: 1
 39169                           ;../../VLCBlib_PIC/event_teach_large.c: 976:             return CMDERR_TOO_MANY_EVENTS;
 39170   0065C8  0E04               	movlw	4
 39171   0065CA  0012               	return	
 39172   0065CC                     l19663:
 39173                           
 39174                           ; BSR set to: 1
 39175                           ;../../VLCBlib_PIC/event_teach_large.c: 980:     if (writeEv(tableIndex, evNum, evVal)) 
      +                          {
 39176   0065CC  C1DB  F1CB         	movff	addEvent@evNum,writeEv@evNum
 39177   0065D0  C1DC  F1CC         	movff	addEvent@evVal,writeEv@evVal
 39178   0065D4  51E5               	movf	addEvent@tableIndex& (0+255),w,b
 39179   0065D6  ECF7  F018         	call	_writeEv
 39180   0065DA  0900               	iorlw	0
 39181   0065DC  B4D8               	btfsc	status,2,c
 39182   0065DE  D002               	goto	l19669
 39183                           
 39184                           ;../../VLCBlib_PIC/event_teach_large.c: 982:         return CMDERR_INV_EV_IDX;
 39185   0065E0  0E06               	movlw	6
 39186   0065E2  0012               	return	
 39187   0065E4                     l19669:
 39188                           
 39189                           ;../../VLCBlib_PIC/event_teach_large.c: 985:     flushFlashBlock();
 39190   0065E4  EC5F  F053         	call	_flushFlashBlock	;wreg free
 39191                           
 39192                           ;../../VLCBlib_PIC/event_teach_large.c: 987:     rebuildHashtable();
 39193   0065E8  EC93  F03E         	call	_rebuildHashtable	;wreg free
 39194   0065EC  D710               	goto	u19490
 39195   0065EE                     __end_of_addEvent:
 39196                           	callstack 0
 39197                           
 39198 ;; *************** function _writeEv *****************
 39199 ;; Defined at:
 39200 ;;		line 1039 in file "../../VLCBlib_PIC/event_teach_large.c"
 39201 ;; Parameters:    Size  Location     Type
 39202 ;;  tableIndex      1    wreg     unsigned char 
 39203 ;;  evNum           1   17[BANK1 ] unsigned char 
 39204 ;;  evVal           1   18[BANK1 ] unsigned char 
 39205 ;; Auto vars:     Size  Location     Type
 39206 ;;  tableIndex      1   27[BANK1 ] unsigned char 
 39207 ;;  e               1   25[BANK1 ] unsigned char 
 39208 ;;  nextF           1   24[BANK1 ] struct .
 39209 ;;  nextIdx         1   28[BANK1 ] unsigned char 
 39210 ;;  f               1   26[BANK1 ] struct .
 39211 ;;  startIndex      1   23[BANK1 ] unsigned char 
 39212 ;; Return value:  Size  Location     Type
 39213 ;;                  1    wreg      unsigned char 
 39214 ;; Registers used:
 39215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39216 ;; Tracked objects:
 39217 ;;		On entry : 0/0
 39218 ;;		On exit  : 0/0
 39219 ;;		Unchanged: 0/0
 39220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39221 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39222 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39223 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39224 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39225 ;;Total ram usage:       12 bytes
 39226 ;; Hardware stack levels used: 1
 39227 ;; Hardware stack levels required when called: 20
 39228 ;; This function calls:
 39229 ;;		_checkRemoveTableEntry
 39230 ;;		_readNVM
 39231 ;;		_writeNVM
 39232 ;; This function is called by:
 39233 ;;		_deleteActionRange
 39234 ;;		_APP_addEvent
 39235 ;;		_addEvent
 39236 ;;		_deleteHappeningRange
 39237 ;; This function uses a non-reentrant model
 39238 ;;
 39239                           
 39240                           	psect	text169
 39241   0031EE                     __ptext169:
 39242                           	callstack 0
 39243   0031EE                     _writeEv:
 39244                           	callstack 6
 39245                           
 39246                           ;incstack = 0
 39247                           ;writeEv@tableIndex stored from wreg
 39248   0031EE  0101               	movlb	1	; () banked
 39249   0031F0  6FD5               	movwf	writeEv@tableIndex& (0+255),b
 39250                           
 39251                           ;../../VLCBlib_PIC/event_teach_large.c: 1040:     EventTableFlags f;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1041:     uint8_t startIndex = tableIndex;
 39252   0031F2  C1D5  F1D1         	movff	writeEv@tableIndex,writeEv@startIndex
 39253                           
 39254                           ;../../VLCBlib_PIC/event_teach_large.c: 1042:     if (evNum >= 20) {
 39255   0031F6  0E13               	movlw	19
 39256   0031F8  0101               	movlb	1	; () banked
 39257   0031FA  65CB               	cpfsgt	writeEv@evNum& (0+255),b
 39258   0031FC  D14F               	goto	l19305
 39259                           
 39260                           ; BSR set to: 1
 39261                           ;../../VLCBlib_PIC/event_teach_large.c: 1043:         return CMDERR_INV_EV_IDX;
 39262   0031FE  0E06               	movlw	6
 39263   003200  0012               	return	
 39264   003202                     l19243:
 39265                           
 39266                           ; BSR set to: 1
 39267                           ;../../VLCBlib_PIC/event_teach_large.c: 1046:         uint8_t nextIdx;;../../VLCBlib_PIC
      +                          /event_teach_large.c: 1049:         evNum -= 10;
 39268   003202  0E0A               	movlw	10
 39269   003204  5FCB               	subwf	writeEv@evNum& (0+255),f,b
 39270                           
 39271                           ; BSR set to: 1
 39272                           ;../../VLCBlib_PIC/event_teach_large.c: 1050:         f.asByte = (uint8_t)readNVM(FLASH_
      +                          NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 39273   003206  51D5               	movf	writeEv@tableIndex& (0+255),w,b
 39274   003208  6FCD               	movwf	??_writeEv& (0+255),b
 39275   00320A  6BCE               	clrf	(??_writeEv+1)& (0+255),b
 39276   00320C  3BCD               	swapf	??_writeEv& (0+255),f,b
 39277   00320E  3BCE               	swapf	(??_writeEv+1)& (0+255),f,b
 39278   003210  0EF0               	movlw	240
 39279   003212  17CE               	andwf	(??_writeEv+1)& (0+255),f,b
 39280   003214  51CD               	movf	??_writeEv& (0+255),w,b
 39281   003216  0B0F               	andlw	15
 39282   003218  13CE               	iorwf	(??_writeEv+1)& (0+255),f,b
 39283   00321A  0EF0               	movlw	240
 39284   00321C  17CD               	andwf	??_writeEv& (0+255),f,b
 39285   00321E  0E80               	movlw	128
 39286   003220  25CD               	addwf	??_writeEv& (0+255),w,b
 39287   003222  6FCF               	movwf	(??_writeEv+2)& (0+255),b
 39288   003224  0EEF               	movlw	239
 39289   003226  21CE               	addwfc	(??_writeEv+1)& (0+255),w,b
 39290   003228  6FD0               	movwf	(??_writeEv+3)& (0+255),b
 39291   00322A  C1CF  F091         	movff	??_writeEv+2,readNVM@index
 39292   00322E  C1D0  F092         	movff	??_writeEv+3,readNVM@index+1
 39293   003232  0100               	movlb	0	; () banked
 39294   003234  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39295   003236  0E01               	movlw	1
 39296   003238  ECD0  F059         	call	_readNVM
 39297   00323C  0100               	movlb	0	; () banked
 39298   00323E  5191               	movf	?_readNVM& (0+255),w,b
 39299   003240  0101               	movlb	1	; () banked
 39300   003242  6FD4               	movwf	writeEv@f& (0+255),b
 39301                           
 39302                           ; BSR set to: 1
 39303                           ;../../VLCBlib_PIC/event_teach_large.c: 1052:         if (f.continued) {
 39304   003244  A9D4               	btfss	writeEv@f& (0+255),4,b
 39305   003246  D01E               	goto	l19257
 39306                           
 39307                           ; BSR set to: 1
 39308                           ;../../VLCBlib_PIC/event_teach_large.c: 1053:             tableIndex = (uint8_t)readNVM(
      +                          FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+1);
 39309   003248  51D5               	movf	writeEv@tableIndex& (0+255),w,b
 39310   00324A  0D10               	mullw	16
 39311   00324C  CFF3 F1CD          	movff	prodl,??_writeEv
 39312   003250  CFF4 F1CE          	movff	prodh,??_writeEv+1
 39313   003254  0E81               	movlw	129
 39314   003256  25CD               	addwf	??_writeEv& (0+255),w,b
 39315   003258  6FCF               	movwf	(??_writeEv+2)& (0+255),b
 39316   00325A  0EEF               	movlw	239
 39317   00325C  21CE               	addwfc	(??_writeEv+1)& (0+255),w,b
 39318   00325E  6FD0               	movwf	(??_writeEv+3)& (0+255),b
 39319   003260  C1CF  F091         	movff	??_writeEv+2,readNVM@index
 39320   003264  C1D0  F092         	movff	??_writeEv+3,readNVM@index+1
 39321   003268  0100               	movlb	0	; () banked
 39322   00326A  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39323   00326C  0E01               	movlw	1
 39324   00326E  ECD0  F059         	call	_readNVM
 39325   003272  0100               	movlb	0	; () banked
 39326   003274  5191               	movf	?_readNVM& (0+255),w,b
 39327   003276  0101               	movlb	1	; () banked
 39328   003278  6FD5               	movwf	writeEv@tableIndex& (0+255),b
 39329                           
 39330                           ; BSR set to: 1
 39331                           ;../../VLCBlib_PIC/event_teach_large.c: 1054:             if (tableIndex == 0xff) {
 39332   00327A  29D5               	incf	writeEv@tableIndex& (0+255),w,b
 39333   00327C  A4D8               	btfss	status,2,c
 39334   00327E  D10E               	goto	l19305
 39335                           
 39336                           ; BSR set to: 1
 39337                           ;../../VLCBlib_PIC/event_teach_large.c: 1055:                 return CMDERR_INVALID_EVEN
      +                          T;
 39338   003280  0E07               	movlw	7
 39339   003282  0012               	return	
 39340   003284                     l19257:
 39341                           
 39342                           ; BSR set to: 1
 39343                           ;../../VLCBlib_PIC/event_teach_large.c: 1064:             if (evVal == 0) {
 39344   003284  51CC               	movf	writeEv@evVal& (0+255),w,b
 39345   003286  A4D8               	btfss	status,2,c
 39346   003288  D002               	goto	l19263
 39347   00328A                     u18940:
 39348                           
 39349                           ;../../VLCBlib_PIC/event_teach_large.c: 1065:                 return 0;
 39350   00328A  0E00               	movlw	0
 39351   00328C  0012               	return	
 39352   00328E                     l19263:
 39353                           
 39354                           ; BSR set to: 1
 39355                           ;../../VLCBlib_PIC/event_teach_large.c: 1068:             for (nextIdx = tableIndex+1 ; 
      +                          nextIdx < 255; nextIdx++) {
 39356   00328E  29D5               	incf	writeEv@tableIndex& (0+255),w,b
 39357   003290  6FD6               	movwf	writeEv@nextIdx& (0+255),b
 39358   003292  D0FB               	goto	l19297
 39359   003294                     l19267:
 39360                           
 39361                           ; BSR set to: 1
 39362                           ;../../VLCBlib_PIC/event_teach_large.c: 1069:                 EventTableFlags nextF;;../
      +                          ../VLCBlib_PIC/event_teach_large.c: 1070:                 nextF.asByte = (uint8_t)readNV
      +                          M(FLASH_NVM_TYPE, 0xEF80 + 16*nextIdx+0);
 39363   003294  51D6               	movf	writeEv@nextIdx& (0+255),w,b
 39364   003296  6FCD               	movwf	??_writeEv& (0+255),b
 39365   003298  6BCE               	clrf	(??_writeEv+1)& (0+255),b
 39366   00329A  3BCD               	swapf	??_writeEv& (0+255),f,b
 39367   00329C  3BCE               	swapf	(??_writeEv+1)& (0+255),f,b
 39368   00329E  0EF0               	movlw	240
 39369   0032A0  17CE               	andwf	(??_writeEv+1)& (0+255),f,b
 39370   0032A2  51CD               	movf	??_writeEv& (0+255),w,b
 39371   0032A4  0B0F               	andlw	15
 39372   0032A6  13CE               	iorwf	(??_writeEv+1)& (0+255),f,b
 39373   0032A8  0EF0               	movlw	240
 39374   0032AA  17CD               	andwf	??_writeEv& (0+255),f,b
 39375   0032AC  0E80               	movlw	128
 39376   0032AE  25CD               	addwf	??_writeEv& (0+255),w,b
 39377   0032B0  6FCF               	movwf	(??_writeEv+2)& (0+255),b
 39378   0032B2  0EEF               	movlw	239
 39379   0032B4  21CE               	addwfc	(??_writeEv+1)& (0+255),w,b
 39380   0032B6  6FD0               	movwf	(??_writeEv+3)& (0+255),b
 39381   0032B8  C1CF  F091         	movff	??_writeEv+2,readNVM@index
 39382   0032BC  C1D0  F092         	movff	??_writeEv+3,readNVM@index+1
 39383   0032C0  0100               	movlb	0	; () banked
 39384   0032C2  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39385   0032C4  0E01               	movlw	1
 39386   0032C6  ECD0  F059         	call	_readNVM
 39387   0032CA  0100               	movlb	0	; () banked
 39388   0032CC  5191               	movf	?_readNVM& (0+255),w,b
 39389   0032CE  0101               	movlb	1	; () banked
 39390   0032D0  6FD2               	movwf	writeEv@nextF& (0+255),b
 39391                           
 39392                           ; BSR set to: 1
 39393                           ;../../VLCBlib_PIC/event_teach_large.c: 1071:                 if (nextF.freeEntry) {
 39394   0032D2  AFD2               	btfss	writeEv@nextF& (0+255),7,b
 39395   0032D4  D0D9               	goto	l19295
 39396                           
 39397                           ; BSR set to: 1
 39398                           ;../../VLCBlib_PIC/event_teach_large.c: 1072:                     uint8_t e;;../../VLCBl
      +                          ib_PIC/event_teach_large.c: 1074:                     writeNVM(FLASH_NVM_TYPE, 0xEF80 + 
      +                          16*nextIdx+2, 0xff);
 39399   0032D6  51D6               	movf	writeEv@nextIdx& (0+255),w,b
 39400   0032D8  0D10               	mullw	16
 39401   0032DA  CFF3 F1CD          	movff	prodl,??_writeEv
 39402   0032DE  CFF4 F1CE          	movff	prodh,??_writeEv+1
 39403   0032E2  0E82               	movlw	130
 39404   0032E4  25CD               	addwf	??_writeEv& (0+255),w,b
 39405   0032E6  6FCF               	movwf	(??_writeEv+2)& (0+255),b
 39406   0032E8  0EEF               	movlw	239
 39407   0032EA  21CE               	addwfc	(??_writeEv+1)& (0+255),w,b
 39408   0032EC  6FD0               	movwf	(??_writeEv+3)& (0+255),b
 39409   0032EE  C1CF  F0A4         	movff	??_writeEv+2,writeNVM@index
 39410   0032F2  C1D0  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39411   0032F6  0100               	movlb	0	; () banked
 39412   0032F8  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39413   0032FA  0EFF               	movlw	255
 39414   0032FC  6FA7               	movwf	writeNVM@value& (0+255),b
 39415   0032FE  0E01               	movlw	1
 39416   003300  EC60  F05C         	call	_writeNVM
 39417                           
 39418                           ;../../VLCBlib_PIC/event_teach_large.c: 1075:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*nextIdx+2 +1, 0xff);
 39419   003304  0101               	movlb	1	; () banked
 39420   003306  51D6               	movf	writeEv@nextIdx& (0+255),w,b
 39421   003308  0D10               	mullw	16
 39422   00330A  CFF3 F1CD          	movff	prodl,??_writeEv
 39423   00330E  CFF4 F1CE          	movff	prodh,??_writeEv+1
 39424   003312  0E83               	movlw	131
 39425   003314  25CD               	addwf	??_writeEv& (0+255),w,b
 39426   003316  6FCF               	movwf	(??_writeEv+2)& (0+255),b
 39427   003318  0EEF               	movlw	239
 39428   00331A  21CE               	addwfc	(??_writeEv+1)& (0+255),w,b
 39429   00331C  6FD0               	movwf	(??_writeEv+3)& (0+255),b
 39430   00331E  C1CF  F0A4         	movff	??_writeEv+2,writeNVM@index
 39431   003322  C1D0  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39432   003326  0100               	movlb	0	; () banked
 39433   003328  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39434   00332A  0EFF               	movlw	255
 39435   00332C  6FA7               	movwf	writeNVM@value& (0+255),b
 39436   00332E  0E01               	movlw	1
 39437   003330  EC60  F05C         	call	_writeNVM
 39438                           
 39439                           ;../../VLCBlib_PIC/event_teach_large.c: 1076:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*nextIdx+4, 0xff);
 39440   003334  0101               	movlb	1	; () banked
 39441   003336  51D6               	movf	writeEv@nextIdx& (0+255),w,b
 39442   003338  0D10               	mullw	16
 39443   00333A  CFF3 F1CD          	movff	prodl,??_writeEv
 39444   00333E  CFF4 F1CE          	movff	prodh,??_writeEv+1
 39445   003342  0E84               	movlw	132
 39446   003344  25CD               	addwf	??_writeEv& (0+255),w,b
 39447   003346  6FCF               	movwf	(??_writeEv+2)& (0+255),b
 39448   003348  0EEF               	movlw	239
 39449   00334A  21CE               	addwfc	(??_writeEv+1)& (0+255),w,b
 39450   00334C  6FD0               	movwf	(??_writeEv+3)& (0+255),b
 39451   00334E  C1CF  F0A4         	movff	??_writeEv+2,writeNVM@index
 39452   003352  C1D0  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39453   003356  0100               	movlb	0	; () banked
 39454   003358  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39455   00335A  0EFF               	movlw	255
 39456   00335C  6FA7               	movwf	writeNVM@value& (0+255),b
 39457   00335E  0E01               	movlw	1
 39458   003360  EC60  F05C         	call	_writeNVM
 39459                           
 39460                           ;../../VLCBlib_PIC/event_teach_large.c: 1077:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*nextIdx+4 +1, 0xff);
 39461   003364  0101               	movlb	1	; () banked
 39462   003366  51D6               	movf	writeEv@nextIdx& (0+255),w,b
 39463   003368  0D10               	mullw	16
 39464   00336A  CFF3 F1CD          	movff	prodl,??_writeEv
 39465   00336E  CFF4 F1CE          	movff	prodh,??_writeEv+1
 39466   003372  0E85               	movlw	133
 39467   003374  25CD               	addwf	??_writeEv& (0+255),w,b
 39468   003376  6FCF               	movwf	(??_writeEv+2)& (0+255),b
 39469   003378  0EEF               	movlw	239
 39470   00337A  21CE               	addwfc	(??_writeEv+1)& (0+255),w,b
 39471   00337C  6FD0               	movwf	(??_writeEv+3)& (0+255),b
 39472   00337E  C1CF  F0A4         	movff	??_writeEv+2,writeNVM@index
 39473   003382  C1D0  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39474   003386  0100               	movlb	0	; () banked
 39475   003388  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39476   00338A  0EFF               	movlw	255
 39477   00338C  6FA7               	movwf	writeNVM@value& (0+255),b
 39478   00338E  0E01               	movlw	1
 39479   003390  EC60  F05C         	call	_writeNVM
 39480                           
 39481                           ;../../VLCBlib_PIC/event_teach_large.c: 1078:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*nextIdx+0, 0x20);
 39482   003394  0101               	movlb	1	; () banked
 39483   003396  51D6               	movf	writeEv@nextIdx& (0+255),w,b
 39484   003398  6FCD               	movwf	??_writeEv& (0+255),b
 39485   00339A  6BCE               	clrf	(??_writeEv+1)& (0+255),b
 39486   00339C  3BCD               	swapf	??_writeEv& (0+255),f,b
 39487   00339E  3BCE               	swapf	(??_writeEv+1)& (0+255),f,b
 39488   0033A0  0EF0               	movlw	240
 39489   0033A2  17CE               	andwf	(??_writeEv+1)& (0+255),f,b
 39490   0033A4  51CD               	movf	??_writeEv& (0+255),w,b
 39491   0033A6  0B0F               	andlw	15
 39492   0033A8  13CE               	iorwf	(??_writeEv+1)& (0+255),f,b
 39493   0033AA  0EF0               	movlw	240
 39494   0033AC  17CD               	andwf	??_writeEv& (0+255),f,b
 39495   0033AE  0E80               	movlw	128
 39496   0033B0  25CD               	addwf	??_writeEv& (0+255),w,b
 39497   0033B2  6FCF               	movwf	(??_writeEv+2)& (0+255),b
 39498   0033B4  0EEF               	movlw	239
 39499   0033B6  21CE               	addwfc	(??_writeEv+1)& (0+255),w,b
 39500   0033B8  6FD0               	movwf	(??_writeEv+3)& (0+255),b
 39501   0033BA  C1CF  F0A4         	movff	??_writeEv+2,writeNVM@index
 39502   0033BE  C1D0  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39503   0033C2  0100               	movlb	0	; () banked
 39504   0033C4  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39505   0033C6  0E20               	movlw	32
 39506   0033C8  6FA7               	movwf	writeNVM@value& (0+255),b
 39507   0033CA  0E01               	movlw	1
 39508   0033CC  EC60  F05C         	call	_writeNVM
 39509                           
 39510                           ;../../VLCBlib_PIC/event_teach_large.c: 1079:                     for (e = 0; e < 10; e+
      +                          +) {
 39511   0033D0  0E00               	movlw	0
 39512   0033D2  0101               	movlb	1	; () banked
 39513   0033D4  6FD3               	movwf	writeEv@e& (0+255),b
 39514   0033D6                     l19281:
 39515                           
 39516                           ; BSR set to: 1
 39517                           ;../../VLCBlib_PIC/event_teach_large.c: 1080:                         writeNVM(FLASH_NVM
      +                          _TYPE, 0xEF80 + 16*nextIdx+6 +e, 0);
 39518   0033D6  51D6               	movf	writeEv@nextIdx& (0+255),w,b
 39519   0033D8  0D10               	mullw	16
 39520   0033DA  CFF3 F1CD          	movff	prodl,??_writeEv
 39521   0033DE  CFF4 F1CE          	movff	prodh,??_writeEv+1
 39522   0033E2  51D3               	movf	writeEv@e& (0+255),w,b
 39523   0033E4  27CD               	addwf	??_writeEv& (0+255),f,b
 39524   0033E6  0E00               	movlw	0
 39525   0033E8  23CE               	addwfc	(??_writeEv+1)& (0+255),f,b
 39526   0033EA  0E86               	movlw	134
 39527   0033EC  25CD               	addwf	??_writeEv& (0+255),w,b
 39528   0033EE  6FCF               	movwf	(??_writeEv+2)& (0+255),b
 39529   0033F0  0EEF               	movlw	239
 39530   0033F2  21CE               	addwfc	(??_writeEv+1)& (0+255),w,b
 39531   0033F4  6FD0               	movwf	(??_writeEv+3)& (0+255),b
 39532   0033F6  C1CF  F0A4         	movff	??_writeEv+2,writeNVM@index
 39533   0033FA  C1D0  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39534   0033FE  0100               	movlb	0	; () banked
 39535   003400  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39536   003402  0E00               	movlw	0
 39537   003404  6FA7               	movwf	writeNVM@value& (0+255),b
 39538   003406  0E01               	movlw	1
 39539   003408  EC60  F05C         	call	_writeNVM
 39540                           
 39541                           ;../../VLCBlib_PIC/event_teach_large.c: 1081:                     }
 39542   00340C  0101               	movlb	1	; () banked
 39543   00340E  2BD3               	incf	writeEv@e& (0+255),f,b
 39544                           
 39545                           ; BSR set to: 1
 39546   003410  0E09               	movlw	9
 39547   003412  65D3               	cpfsgt	writeEv@e& (0+255),b
 39548   003414  D7E0               	goto	l19281
 39549                           
 39550                           ; BSR set to: 1
 39551                           ;../../VLCBlib_PIC/event_teach_large.c: 1083:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*tableIndex+1, nextIdx);
 39552   003416  51D5               	movf	writeEv@tableIndex& (0+255),w,b
 39553   003418  0D10               	mullw	16
 39554   00341A  CFF3 F1CD          	movff	prodl,??_writeEv
 39555   00341E  CFF4 F1CE          	movff	prodh,??_writeEv+1
 39556   003422  0E81               	movlw	129
 39557   003424  25CD               	addwf	??_writeEv& (0+255),w,b
 39558   003426  6FCF               	movwf	(??_writeEv+2)& (0+255),b
 39559   003428  0EEF               	movlw	239
 39560   00342A  21CE               	addwfc	(??_writeEv+1)& (0+255),w,b
 39561   00342C  6FD0               	movwf	(??_writeEv+3)& (0+255),b
 39562   00342E  C1CF  F0A4         	movff	??_writeEv+2,writeNVM@index
 39563   003432  C1D0  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39564   003436  0100               	movlb	0	; () banked
 39565   003438  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39566   00343A  C1D6  F0A7         	movff	writeEv@nextIdx,writeNVM@value
 39567   00343E  0E01               	movlw	1
 39568   003440  EC60  F05C         	call	_writeNVM
 39569                           
 39570                           ;../../VLCBlib_PIC/event_teach_large.c: 1085:                     f.continued = 1;
 39571   003444  0101               	movlb	1	; () banked
 39572   003446  89D4               	bsf	writeEv@f& (0+255),4,b
 39573                           
 39574                           ; BSR set to: 1
 39575                           ;../../VLCBlib_PIC/event_teach_large.c: 1086:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*tableIndex+0, f.asByte);
 39576   003448  51D5               	movf	writeEv@tableIndex& (0+255),w,b
 39577   00344A  6FCD               	movwf	??_writeEv& (0+255),b
 39578   00344C  6BCE               	clrf	(??_writeEv+1)& (0+255),b
 39579   00344E  3BCD               	swapf	??_writeEv& (0+255),f,b
 39580   003450  3BCE               	swapf	(??_writeEv+1)& (0+255),f,b
 39581   003452  0EF0               	movlw	240
 39582   003454  17CE               	andwf	(??_writeEv+1)& (0+255),f,b
 39583   003456  51CD               	movf	??_writeEv& (0+255),w,b
 39584   003458  0B0F               	andlw	15
 39585   00345A  13CE               	iorwf	(??_writeEv+1)& (0+255),f,b
 39586   00345C  0EF0               	movlw	240
 39587   00345E  17CD               	andwf	??_writeEv& (0+255),f,b
 39588   003460  0E80               	movlw	128
 39589   003462  25CD               	addwf	??_writeEv& (0+255),w,b
 39590   003464  6FCF               	movwf	(??_writeEv+2)& (0+255),b
 39591   003466  0EEF               	movlw	239
 39592   003468  21CE               	addwfc	(??_writeEv+1)& (0+255),w,b
 39593   00346A  6FD0               	movwf	(??_writeEv+3)& (0+255),b
 39594   00346C  C1CF  F0A4         	movff	??_writeEv+2,writeNVM@index
 39595   003470  C1D0  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39596   003474  0100               	movlb	0	; () banked
 39597   003476  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39598   003478  C1D4  F0A7         	movff	writeEv@f,writeNVM@value
 39599   00347C  0E01               	movlw	1
 39600   00347E  EC60  F05C         	call	_writeNVM
 39601                           
 39602                           ;../../VLCBlib_PIC/event_teach_large.c: 1087:                     tableIndex = nextIdx;
 39603   003482  C1D6  F1D5         	movff	writeEv@nextIdx,writeEv@tableIndex
 39604                           
 39605                           ;../../VLCBlib_PIC/event_teach_large.c: 1088:                     break;
 39606   003486  D004               	goto	u18980
 39607   003488                     l19295:
 39608                           
 39609                           ; BSR set to: 1
 39610                           ;../../VLCBlib_PIC/event_teach_large.c: 1090:             }
 39611   003488  2BD6               	incf	writeEv@nextIdx& (0+255),f,b
 39612   00348A                     l19297:
 39613                           
 39614                           ; BSR set to: 1
 39615   00348A  29D6               	incf	writeEv@nextIdx& (0+255),w,b
 39616   00348C  A4D8               	btfss	status,2,c
 39617   00348E  D702               	goto	l19267
 39618   003490                     u18980:
 39619                           
 39620                           ;../../VLCBlib_PIC/event_teach_large.c: 1091:             if (nextIdx >= 255) {
 39621   003490  0101               	movlb	1	; () banked
 39622   003492  29D6               	incf	writeEv@nextIdx& (0+255),w,b
 39623   003494  A4D8               	btfss	status,2,c
 39624   003496  D002               	goto	l19305
 39625                           
 39626                           ; BSR set to: 1
 39627                           ;../../VLCBlib_PIC/event_teach_large.c: 1093:                 return CMDERR_TOO_MANY_EVE
      +                          NTS;
 39628   003498  0E04               	movlw	4
 39629   00349A  0012               	return	
 39630   00349C                     l19305:
 39631                           
 39632                           ; BSR set to: 1
 39633                           ;../../VLCBlib_PIC/event_teach_large.c: 1045:     while (evNum >= 10) {
 39634   00349C  0E0A               	movlw	10
 39635   00349E  61CB               	cpfslt	writeEv@evNum& (0+255),b
 39636   0034A0  D6B0               	goto	l19243
 39637                           
 39638                           ; BSR set to: 1
 39639                           ;../../VLCBlib_PIC/event_teach_large.c: 1098:     writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*t
      +                          ableIndex+6 +evNum, evVal);
 39640   0034A2  51D5               	movf	writeEv@tableIndex& (0+255),w,b
 39641   0034A4  0D10               	mullw	16
 39642   0034A6  CFF3 F1CD          	movff	prodl,??_writeEv
 39643   0034AA  CFF4 F1CE          	movff	prodh,??_writeEv+1
 39644   0034AE  51CB               	movf	writeEv@evNum& (0+255),w,b
 39645   0034B0  27CD               	addwf	??_writeEv& (0+255),f,b
 39646   0034B2  0E00               	movlw	0
 39647   0034B4  23CE               	addwfc	(??_writeEv+1)& (0+255),f,b
 39648   0034B6  0E86               	movlw	134
 39649   0034B8  25CD               	addwf	??_writeEv& (0+255),w,b
 39650   0034BA  6FCF               	movwf	(??_writeEv+2)& (0+255),b
 39651   0034BC  0EEF               	movlw	239
 39652   0034BE  21CE               	addwfc	(??_writeEv+1)& (0+255),w,b
 39653   0034C0  6FD0               	movwf	(??_writeEv+3)& (0+255),b
 39654   0034C2  C1CF  F0A4         	movff	??_writeEv+2,writeNVM@index
 39655   0034C6  C1D0  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39656   0034CA  0100               	movlb	0	; () banked
 39657   0034CC  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39658   0034CE  C1CC  F0A7         	movff	writeEv@evVal,writeNVM@value
 39659   0034D2  0E01               	movlw	1
 39660   0034D4  EC60  F05C         	call	_writeNVM
 39661                           
 39662                           ;../../VLCBlib_PIC/event_teach_large.c: 1100:     f.asByte = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, 0xEF80 + 16*tableIndex+0);
 39663   0034D8  0101               	movlb	1	; () banked
 39664   0034DA  51D5               	movf	writeEv@tableIndex& (0+255),w,b
 39665   0034DC  6FCD               	movwf	??_writeEv& (0+255),b
 39666   0034DE  6BCE               	clrf	(??_writeEv+1)& (0+255),b
 39667   0034E0  3BCD               	swapf	??_writeEv& (0+255),f,b
 39668   0034E2  3BCE               	swapf	(??_writeEv+1)& (0+255),f,b
 39669   0034E4  0EF0               	movlw	240
 39670   0034E6  17CE               	andwf	(??_writeEv+1)& (0+255),f,b
 39671   0034E8  51CD               	movf	??_writeEv& (0+255),w,b
 39672   0034EA  0B0F               	andlw	15
 39673   0034EC  13CE               	iorwf	(??_writeEv+1)& (0+255),f,b
 39674   0034EE  0EF0               	movlw	240
 39675   0034F0  17CD               	andwf	??_writeEv& (0+255),f,b
 39676   0034F2  0E80               	movlw	128
 39677   0034F4  25CD               	addwf	??_writeEv& (0+255),w,b
 39678   0034F6  6FCF               	movwf	(??_writeEv+2)& (0+255),b
 39679   0034F8  0EEF               	movlw	239
 39680   0034FA  21CE               	addwfc	(??_writeEv+1)& (0+255),w,b
 39681   0034FC  6FD0               	movwf	(??_writeEv+3)& (0+255),b
 39682   0034FE  C1CF  F091         	movff	??_writeEv+2,readNVM@index
 39683   003502  C1D0  F092         	movff	??_writeEv+3,readNVM@index+1
 39684   003506  0100               	movlb	0	; () banked
 39685   003508  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39686   00350A  0E01               	movlw	1
 39687   00350C  ECD0  F059         	call	_readNVM
 39688   003510  0100               	movlb	0	; () banked
 39689   003512  5191               	movf	?_readNVM& (0+255),w,b
 39690   003514  0101               	movlb	1	; () banked
 39691   003516  6FD4               	movwf	writeEv@f& (0+255),b
 39692                           
 39693                           ; BSR set to: 1
 39694                           ;../../VLCBlib_PIC/event_teach_large.c: 1101:     if (f.eVsUsed <= evNum) {
 39695   003518  51D4               	movf	writeEv@f& (0+255),w,b
 39696   00351A  0B0F               	andlw	15
 39697   00351C  6FCD               	movwf	??_writeEv& (0+255),b
 39698   00351E  51CD               	movf	??_writeEv& (0+255),w,b
 39699   003520  5DCB               	subwf	writeEv@evNum& (0+255),w,b
 39700   003522  A0D8               	btfss	status,0,c
 39701   003524  D026               	goto	l19317
 39702                           
 39703                           ; BSR set to: 1
 39704                           ;../../VLCBlib_PIC/event_teach_large.c: 1102:         f.eVsUsed = evNum+1U;
 39705   003526  C1CB  F1CD         	movff	writeEv@evNum,??_writeEv
 39706   00352A  0E01               	movlw	1
 39707   00352C  27CD               	addwf	??_writeEv& (0+255),f,b
 39708   00352E  51D4               	movf	writeEv@f& (0+255),w,b
 39709   003530  19CD               	xorwf	??_writeEv& (0+255),w,b
 39710   003532  0BF0               	andlw	-16
 39711   003534  19CD               	xorwf	??_writeEv& (0+255),w,b
 39712   003536  6FD4               	movwf	writeEv@f& (0+255),b
 39713                           
 39714                           ; BSR set to: 1
 39715                           ;../../VLCBlib_PIC/event_teach_large.c: 1103:         writeNVM(FLASH_NVM_TYPE, 0xEF80 + 
      +                          16*tableIndex+0, f.asByte);
 39716   003538  51D5               	movf	writeEv@tableIndex& (0+255),w,b
 39717   00353A  6FCD               	movwf	??_writeEv& (0+255),b
 39718   00353C  6BCE               	clrf	(??_writeEv+1)& (0+255),b
 39719   00353E  3BCD               	swapf	??_writeEv& (0+255),f,b
 39720   003540  3BCE               	swapf	(??_writeEv+1)& (0+255),f,b
 39721   003542  0EF0               	movlw	240
 39722   003544  17CE               	andwf	(??_writeEv+1)& (0+255),f,b
 39723   003546  51CD               	movf	??_writeEv& (0+255),w,b
 39724   003548  0B0F               	andlw	15
 39725   00354A  13CE               	iorwf	(??_writeEv+1)& (0+255),f,b
 39726   00354C  0EF0               	movlw	240
 39727   00354E  17CD               	andwf	??_writeEv& (0+255),f,b
 39728   003550  0E80               	movlw	128
 39729   003552  25CD               	addwf	??_writeEv& (0+255),w,b
 39730   003554  6FCF               	movwf	(??_writeEv+2)& (0+255),b
 39731   003556  0EEF               	movlw	239
 39732   003558  21CE               	addwfc	(??_writeEv+1)& (0+255),w,b
 39733   00355A  6FD0               	movwf	(??_writeEv+3)& (0+255),b
 39734   00355C  C1CF  F0A4         	movff	??_writeEv+2,writeNVM@index
 39735   003560  C1D0  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39736   003564  0100               	movlb	0	; () banked
 39737   003566  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39738   003568  C1D4  F0A7         	movff	writeEv@f,writeNVM@value
 39739   00356C  0E01               	movlw	1
 39740   00356E  EC60  F05C         	call	_writeNVM
 39741   003572                     l19317:
 39742                           
 39743                           ;../../VLCBlib_PIC/event_teach_large.c: 1106:     if (evVal == 0) {
 39744   003572  0101               	movlb	1	; () banked
 39745   003574  51CC               	movf	writeEv@evVal& (0+255),w,b
 39746   003576  A4D8               	btfss	status,2,c
 39747   003578  D688               	goto	u18940
 39748                           
 39749                           ; BSR set to: 1
 39750                           ;../../VLCBlib_PIC/event_teach_large.c: 1107:         checkRemoveTableEntry(startIndex);
 39751   00357A  51D1               	movf	writeEv@startIndex& (0+255),w,b
 39752   00357C  EC8A  F05D         	call	_checkRemoveTableEntry
 39753   003580  D684               	goto	u18940
 39754   003582                     __end_of_writeEv:
 39755                           	callstack 0
 39756                           
 39757 ;; *************** function _checkRemoveTableEntry *****************
 39758 ;; Defined at:
 39759 ;;		line 908 in file "../../VLCBlib_PIC/event_teach_large.c"
 39760 ;; Parameters:    Size  Location     Type
 39761 ;;  tableIndex      1    wreg     unsigned char 
 39762 ;; Auto vars:     Size  Location     Type
 39763 ;;  tableIndex      1   15[BANK1 ] unsigned char 
 39764 ;;  e               1   16[BANK1 ] unsigned char 
 39765 ;; Return value:  Size  Location     Type
 39766 ;;                  1    wreg      void 
 39767 ;; Registers used:
 39768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39769 ;; Tracked objects:
 39770 ;;		On entry : 0/0
 39771 ;;		On exit  : 0/0
 39772 ;;		Unchanged: 0/0
 39773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39775 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39777 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39778 ;;Total ram usage:        2 bytes
 39779 ;; Hardware stack levels used: 1
 39780 ;; Hardware stack levels required when called: 19
 39781 ;; This function calls:
 39782 ;;		_getEVs
 39783 ;;		_removeTableEntry
 39784 ;;		_validStart
 39785 ;; This function is called by:
 39786 ;;		_deleteActionRange
 39787 ;;		_APP_addEvent
 39788 ;;		_writeEv
 39789 ;;		_deleteHappeningRange
 39790 ;; This function uses a non-reentrant model
 39791 ;;
 39792                           
 39793                           	psect	text170
 39794   00BB14                     __ptext170:
 39795                           	callstack 0
 39796   00BB14                     _checkRemoveTableEntry:
 39797                           	callstack 6
 39798                           
 39799                           ;incstack = 0
 39800                           ;checkRemoveTableEntry@tableIndex stored from wreg
 39801   00BB14  0101               	movlb	1	; () banked
 39802   00BB16  6FC9               	movwf	checkRemoveTableEntry@tableIndex& (0+255),b
 39803                           
 39804                           ;../../VLCBlib_PIC/event_teach_large.c: 909:     uint8_t e;;../../VLCBlib_PIC/event_teac
      +                          h_large.c: 911:     if ( validStart(tableIndex)) {
 39805   00BB18  0101               	movlb	1	; () banked
 39806   00BB1A  51C9               	movf	checkRemoveTableEntry@tableIndex& (0+255),w,b
 39807   00BB1C  EC39  F05C         	call	_validStart
 39808   00BB20  0900               	iorlw	0
 39809   00BB22  B4D8               	btfsc	status,2,c
 39810   00BB24  0012               	return	
 39811                           
 39812                           ;../../VLCBlib_PIC/event_teach_large.c: 912:         if (getEVs(tableIndex)) {
 39813   00BB26  0101               	movlb	1	; () banked
 39814   00BB28  51C9               	movf	checkRemoveTableEntry@tableIndex& (0+255),w,b
 39815   00BB2A  EC3A  F041         	call	_getEVs
 39816   00BB2E  0900               	iorlw	0
 39817   00BB30  A4D8               	btfss	status,2,c
 39818   00BB32  0012               	return	
 39819                           
 39820                           ;../../VLCBlib_PIC/event_teach_large.c: 915:         for (e=0; e<20; e++) {
 39821   00BB34  0E00               	movlw	0
 39822   00BB36  0101               	movlb	1	; () banked
 39823   00BB38  6FCA               	movwf	checkRemoveTableEntry@e& (0+255),b
 39824   00BB3A                     l19155:
 39825                           
 39826                           ; BSR set to: 1
 39827                           ;../../VLCBlib_PIC/event_teach_large.c: 916:             if (evs[e] != 0) {
 39828   00BB3A  0E20               	movlw	low _evs
 39829   00BB3C  25CA               	addwf	checkRemoveTableEntry@e& (0+255),w,b
 39830   00BB3E  6ED9               	movwf	fsr2l,c
 39831   00BB40  6ADA               	clrf	fsr2h,c
 39832   00BB42  0E02               	movlw	high _evs
 39833   00BB44  22DA               	addwfc	fsr2h,f,c
 39834   00BB46  50DF               	movf	indf2,w,c
 39835   00BB48  A4D8               	btfss	status,2,c
 39836   00BB4A  0012               	return	
 39837                           
 39838                           ; BSR set to: 1
 39839                           ;../../VLCBlib_PIC/event_teach_large.c: 919:         }
 39840   00BB4C  2BCA               	incf	checkRemoveTableEntry@e& (0+255),f,b
 39841                           
 39842                           ; BSR set to: 1
 39843   00BB4E  0E13               	movlw	19
 39844   00BB50  65CA               	cpfsgt	checkRemoveTableEntry@e& (0+255),b
 39845   00BB52  D7F3               	goto	l19155
 39846                           
 39847                           ; BSR set to: 1
 39848                           ;../../VLCBlib_PIC/event_teach_large.c: 920:         removeTableEntry(tableIndex);
 39849   00BB54  51C9               	movf	checkRemoveTableEntry@tableIndex& (0+255),w,b
 39850   00BB56  ECB5  F03C         	call	_removeTableEntry
 39851   00BB5A  0012               	return		;funcret
 39852   00BB5C                     __end_of_checkRemoveTableEntry:
 39853                           	callstack 0
 39854                           
 39855 ;; *************** function _removeTableEntry *****************
 39856 ;; Defined at:
 39857 ;;		line 872 in file "../../VLCBlib_PIC/event_teach_large.c"
 39858 ;; Parameters:    Size  Location     Type
 39859 ;;  tableIndex      1    wreg     unsigned char 
 39860 ;; Auto vars:     Size  Location     Type
 39861 ;;  tableIndex      1   14[BANK1 ] unsigned char 
 39862 ;;  f               1   13[BANK1 ] struct .
 39863 ;; Return value:  Size  Location     Type
 39864 ;;                  1    wreg      unsigned char 
 39865 ;; Registers used:
 39866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39867 ;; Tracked objects:
 39868 ;;		On entry : 0/0
 39869 ;;		On exit  : 0/0
 39870 ;;		Unchanged: 0/0
 39871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39873 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39874 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39875 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39876 ;;Total ram usage:        6 bytes
 39877 ;; Hardware stack levels used: 1
 39878 ;; Hardware stack levels required when called: 18
 39879 ;; This function calls:
 39880 ;;		_flushFlashBlock
 39881 ;;		_readNVM
 39882 ;;		_rebuildHashtable
 39883 ;;		_validStart
 39884 ;;		_writeNVM
 39885 ;; This function is called by:
 39886 ;;		_removeEvent
 39887 ;;		_checkRemoveTableEntry
 39888 ;; This function uses a non-reentrant model
 39889 ;;
 39890                           
 39891                           	psect	text171
 39892   00796A                     __ptext171:
 39893                           	callstack 0
 39894   00796A                     _removeTableEntry:
 39895                           	callstack 8
 39896                           
 39897                           ;incstack = 0
 39898                           ;removeTableEntry@tableIndex stored from wreg
 39899   00796A  0101               	movlb	1	; () banked
 39900   00796C  6FC8               	movwf	removeTableEntry@tableIndex& (0+255),b
 39901                           
 39902                           ;../../VLCBlib_PIC/event_teach_large.c: 873:     EventTableFlags f;;../../VLCBlib_PIC/ev
      +                          ent_teach_large.c: 878:     if (validStart(tableIndex)) {
 39903   00796E  0101               	movlb	1	; () banked
 39904   007970  51C8               	movf	removeTableEntry@tableIndex& (0+255),w,b
 39905   007972  EC39  F05C         	call	_validStart
 39906   007976  0900               	iorlw	0
 39907   007978  B4D8               	btfsc	status,2,c
 39908   00797A  D09F               	goto	l19139
 39909                           
 39910                           ;../../VLCBlib_PIC/event_teach_large.c: 879:         f.asByte = (uint8_t)readNVM(FLASH_N
      +                          VM_TYPE, 0xEF80 + 16*tableIndex+0);
 39911   00797C  0101               	movlb	1	; () banked
 39912   00797E  51C8               	movf	removeTableEntry@tableIndex& (0+255),w,b
 39913   007980  6FC3               	movwf	??_removeTableEntry& (0+255),b
 39914   007982  6BC4               	clrf	(??_removeTableEntry+1)& (0+255),b
 39915   007984  3BC3               	swapf	??_removeTableEntry& (0+255),f,b
 39916   007986  3BC4               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 39917   007988  0EF0               	movlw	240
 39918   00798A  17C4               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 39919   00798C  51C3               	movf	??_removeTableEntry& (0+255),w,b
 39920   00798E  0B0F               	andlw	15
 39921   007990  13C4               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 39922   007992  0EF0               	movlw	240
 39923   007994  17C3               	andwf	??_removeTableEntry& (0+255),f,b
 39924   007996  0E80               	movlw	128
 39925   007998  25C3               	addwf	??_removeTableEntry& (0+255),w,b
 39926   00799A  6FC5               	movwf	(??_removeTableEntry+2)& (0+255),b
 39927   00799C  0EEF               	movlw	239
 39928   00799E  21C4               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 39929   0079A0  6FC6               	movwf	(??_removeTableEntry+3)& (0+255),b
 39930   0079A2  C1C5  F091         	movff	??_removeTableEntry+2,readNVM@index
 39931   0079A6  C1C6  F092         	movff	??_removeTableEntry+3,readNVM@index+1
 39932   0079AA  0100               	movlb	0	; () banked
 39933   0079AC  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39934   0079AE  0E01               	movlw	1
 39935   0079B0  ECD0  F059         	call	_readNVM
 39936   0079B4  0100               	movlb	0	; () banked
 39937   0079B6  5191               	movf	?_readNVM& (0+255),w,b
 39938   0079B8  0101               	movlb	1	; () banked
 39939   0079BA  6FC7               	movwf	removeTableEntry@f& (0+255),b
 39940                           
 39941                           ;../../VLCBlib_PIC/event_teach_large.c: 881:         writeNVM(FLASH_NVM_TYPE, 0xEF80 + 1
      +                          6*tableIndex+0, 0xff);
 39942   0079BC  51C8               	movf	removeTableEntry@tableIndex& (0+255),w,b
 39943   0079BE  6FC3               	movwf	??_removeTableEntry& (0+255),b
 39944   0079C0  6BC4               	clrf	(??_removeTableEntry+1)& (0+255),b
 39945   0079C2  3BC3               	swapf	??_removeTableEntry& (0+255),f,b
 39946   0079C4  3BC4               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 39947   0079C6  0EF0               	movlw	240
 39948   0079C8  17C4               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 39949   0079CA  51C3               	movf	??_removeTableEntry& (0+255),w,b
 39950   0079CC  0B0F               	andlw	15
 39951   0079CE  13C4               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 39952   0079D0  0EF0               	movlw	240
 39953   0079D2  17C3               	andwf	??_removeTableEntry& (0+255),f,b
 39954   0079D4  0E80               	movlw	128
 39955   0079D6  25C3               	addwf	??_removeTableEntry& (0+255),w,b
 39956   0079D8  6FC5               	movwf	(??_removeTableEntry+2)& (0+255),b
 39957   0079DA  0EEF               	movlw	239
 39958   0079DC  21C4               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 39959   0079DE  6FC6               	movwf	(??_removeTableEntry+3)& (0+255),b
 39960   0079E0  C1C5  F0A4         	movff	??_removeTableEntry+2,writeNVM@index
 39961   0079E4  C1C6  F0A5         	movff	??_removeTableEntry+3,writeNVM@index+1
 39962   0079E8  0100               	movlb	0	; () banked
 39963   0079EA  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39964   0079EC  0EFF               	movlw	255
 39965   0079EE  6FA7               	movwf	writeNVM@value& (0+255),b
 39966   0079F0  0E01               	movlw	1
 39967   0079F2  EC60  F05C         	call	_writeNVM
 39968                           
 39969                           ;../../VLCBlib_PIC/event_teach_large.c: 883:         while (f.continued) {
 39970   0079F6  D05A               	goto	l19133
 39971   0079F8                     l19121:
 39972                           
 39973                           ; BSR set to: 1
 39974                           ;../../VLCBlib_PIC/event_teach_large.c: 884:             tableIndex = (uint8_t)readNVM(F
      +                          LASH_NVM_TYPE, 0xEF80 + 16*tableIndex+1);
 39975   0079F8  51C8               	movf	removeTableEntry@tableIndex& (0+255),w,b
 39976   0079FA  0D10               	mullw	16
 39977   0079FC  CFF3 F1C3          	movff	prodl,??_removeTableEntry
 39978   007A00  CFF4 F1C4          	movff	prodh,??_removeTableEntry+1
 39979   007A04  0E81               	movlw	129
 39980   007A06  25C3               	addwf	??_removeTableEntry& (0+255),w,b
 39981   007A08  6FC5               	movwf	(??_removeTableEntry+2)& (0+255),b
 39982   007A0A  0EEF               	movlw	239
 39983   007A0C  21C4               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 39984   007A0E  6FC6               	movwf	(??_removeTableEntry+3)& (0+255),b
 39985   007A10  C1C5  F091         	movff	??_removeTableEntry+2,readNVM@index
 39986   007A14  C1C6  F092         	movff	??_removeTableEntry+3,readNVM@index+1
 39987   007A18  0100               	movlb	0	; () banked
 39988   007A1A  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39989   007A1C  0E01               	movlw	1
 39990   007A1E  ECD0  F059         	call	_readNVM
 39991   007A22  0100               	movlb	0	; () banked
 39992   007A24  5191               	movf	?_readNVM& (0+255),w,b
 39993   007A26  0101               	movlb	1	; () banked
 39994   007A28  6FC8               	movwf	removeTableEntry@tableIndex& (0+255),b
 39995                           
 39996                           ; BSR set to: 1
 39997                           ;../../VLCBlib_PIC/event_teach_large.c: 885:             f.asByte = (uint8_t)readNVM(FLA
      +                          SH_NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 39998   007A2A  51C8               	movf	removeTableEntry@tableIndex& (0+255),w,b
 39999   007A2C  6FC3               	movwf	??_removeTableEntry& (0+255),b
 40000   007A2E  6BC4               	clrf	(??_removeTableEntry+1)& (0+255),b
 40001   007A30  3BC3               	swapf	??_removeTableEntry& (0+255),f,b
 40002   007A32  3BC4               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 40003   007A34  0EF0               	movlw	240
 40004   007A36  17C4               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 40005   007A38  51C3               	movf	??_removeTableEntry& (0+255),w,b
 40006   007A3A  0B0F               	andlw	15
 40007   007A3C  13C4               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 40008   007A3E  0EF0               	movlw	240
 40009   007A40  17C3               	andwf	??_removeTableEntry& (0+255),f,b
 40010   007A42  0E80               	movlw	128
 40011   007A44  25C3               	addwf	??_removeTableEntry& (0+255),w,b
 40012   007A46  6FC5               	movwf	(??_removeTableEntry+2)& (0+255),b
 40013   007A48  0EEF               	movlw	239
 40014   007A4A  21C4               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 40015   007A4C  6FC6               	movwf	(??_removeTableEntry+3)& (0+255),b
 40016   007A4E  C1C5  F091         	movff	??_removeTableEntry+2,readNVM@index
 40017   007A52  C1C6  F092         	movff	??_removeTableEntry+3,readNVM@index+1
 40018   007A56  0100               	movlb	0	; () banked
 40019   007A58  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40020   007A5A  0E01               	movlw	1
 40021   007A5C  ECD0  F059         	call	_readNVM
 40022   007A60  0100               	movlb	0	; () banked
 40023   007A62  5191               	movf	?_readNVM& (0+255),w,b
 40024   007A64  0101               	movlb	1	; () banked
 40025   007A66  6FC7               	movwf	removeTableEntry@f& (0+255),b
 40026                           
 40027                           ; BSR set to: 1
 40028                           ;../../VLCBlib_PIC/event_teach_large.c: 887:             if (tableIndex >= 255) return C
      +                          MDERR_INV_EV_IDX;
 40029   007A68  29C8               	incf	removeTableEntry@tableIndex& (0+255),w,b
 40030   007A6A  A4D8               	btfss	status,2,c
 40031   007A6C  D002               	goto	l19131
 40032                           
 40033                           ; BSR set to: 1
 40034   007A6E  0E06               	movlw	6
 40035   007A70  0012               	return	
 40036   007A72                     l19131:
 40037                           
 40038                           ; BSR set to: 1
 40039                           ;../../VLCBlib_PIC/event_teach_large.c: 890:             writeNVM(FLASH_NVM_TYPE, 0xEF80
      +                           + 16*tableIndex+0, 0xff);
 40040   007A72  51C8               	movf	removeTableEntry@tableIndex& (0+255),w,b
 40041   007A74  6FC3               	movwf	??_removeTableEntry& (0+255),b
 40042   007A76  6BC4               	clrf	(??_removeTableEntry+1)& (0+255),b
 40043   007A78  3BC3               	swapf	??_removeTableEntry& (0+255),f,b
 40044   007A7A  3BC4               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 40045   007A7C  0EF0               	movlw	240
 40046   007A7E  17C4               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 40047   007A80  51C3               	movf	??_removeTableEntry& (0+255),w,b
 40048   007A82  0B0F               	andlw	15
 40049   007A84  13C4               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 40050   007A86  0EF0               	movlw	240
 40051   007A88  17C3               	andwf	??_removeTableEntry& (0+255),f,b
 40052   007A8A  0E80               	movlw	128
 40053   007A8C  25C3               	addwf	??_removeTableEntry& (0+255),w,b
 40054   007A8E  6FC5               	movwf	(??_removeTableEntry+2)& (0+255),b
 40055   007A90  0EEF               	movlw	239
 40056   007A92  21C4               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 40057   007A94  6FC6               	movwf	(??_removeTableEntry+3)& (0+255),b
 40058   007A96  C1C5  F0A4         	movff	??_removeTableEntry+2,writeNVM@index
 40059   007A9A  C1C6  F0A5         	movff	??_removeTableEntry+3,writeNVM@index+1
 40060   007A9E  0100               	movlb	0	; () banked
 40061   007AA0  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 40062   007AA2  0EFF               	movlw	255
 40063   007AA4  6FA7               	movwf	writeNVM@value& (0+255),b
 40064   007AA6  0E01               	movlw	1
 40065   007AA8  EC60  F05C         	call	_writeNVM
 40066   007AAC                     l19133:
 40067                           
 40068                           ;../../VLCBlib_PIC/event_teach_large.c: 883:         while (f.continued) {
 40069   007AAC  0101               	movlb	1	; () banked
 40070   007AAE  B9C7               	btfsc	removeTableEntry@f& (0+255),4,b
 40071   007AB0  D7A3               	goto	l19121
 40072                           
 40073                           ; BSR set to: 1
 40074                           ;../../VLCBlib_PIC/event_teach_large.c: 893:         flushFlashBlock();
 40075   007AB2  EC5F  F053         	call	_flushFlashBlock	;wreg free
 40076                           
 40077                           ;../../VLCBlib_PIC/event_teach_large.c: 896:         rebuildHashtable();
 40078   007AB6  EC93  F03E         	call	_rebuildHashtable	;wreg free
 40079   007ABA                     l19139:
 40080                           
 40081                           ;../../VLCBlib_PIC/event_teach_large.c: 899:     return 0;
 40082   007ABA  0E00               	movlw	0
 40083   007ABC  0012               	return		;funcret
 40084   007ABE                     __end_of_removeTableEntry:
 40085                           	callstack 0
 40086                           
 40087 ;; *************** function _rebuildHashtable *****************
 40088 ;; Defined at:
 40089 ;;		line 1328 in file "../../VLCBlib_PIC/event_teach_large.c"
 40090 ;; Parameters:    Size  Location     Type
 40091 ;;		None
 40092 ;; Auto vars:     Size  Location     Type
 40093 ;;  ev              2    3[BANK1 ] short 
 40094 ;;  a               2    0        int 
 40095 ;;  tableIndex      1    8[BANK1 ] unsigned char 
 40096 ;;  chainIdx        1    7[BANK1 ] unsigned char 
 40097 ;;  happening       1    6[BANK1 ] unsigned char 
 40098 ;;  hash            1    5[BANK1 ] unsigned char 
 40099 ;; Return value:  Size  Location     Type
 40100 ;;                  1    wreg      void 
 40101 ;; Registers used:
 40102 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40103 ;; Tracked objects:
 40104 ;;		On entry : 0/0
 40105 ;;		On exit  : 0/0
 40106 ;;		Unchanged: 0/0
 40107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40109 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40110 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40111 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40112 ;;Total ram usage:        9 bytes
 40113 ;; Hardware stack levels used: 1
 40114 ;; Hardware stack levels required when called: 16
 40115 ;; This function calls:
 40116 ;;		_getEN
 40117 ;;		_getEv
 40118 ;;		_getHash
 40119 ;;		_getNN
 40120 ;;		_validStart
 40121 ;; This function is called by:
 40122 ;;		_deleteActionRange
 40123 ;;		_APP_addEvent
 40124 ;;		_mnsProcessMessage
 40125 ;;		_teachPowerUp
 40126 ;;		_clearAllEvents
 40127 ;;		_removeTableEntry
 40128 ;;		_addEvent
 40129 ;;		_deleteHappeningRange
 40130 ;; This function uses a non-reentrant model
 40131 ;;
 40132                           
 40133                           	psect	text172
 40134   007D26                     __ptext172:
 40135                           	callstack 0
 40136   007D26                     _rebuildHashtable:
 40137                           	callstack 12
 40138                           
 40139                           ;../../VLCBlib_PIC/event_teach_large.c: 1330:     uint8_t hash;;../../VLCBlib_PIC/event_
      +                          teach_large.c: 1331:     uint8_t chainIdx;;../../VLCBlib_PIC/event_teach_large.c: 1332: 
      +                              uint8_t tableIndex;;../../VLCBlib_PIC/event_teach_large.c: 1333:     int a;;../../VL
      +                          CBlib_PIC/event_teach_large.c: 1336:     Happening happening;;../../VLCBlib_PIC/event_te
      +                          ach_large.c: 1337:     for (happening=0; happening<=(1+(7+16*4)-1); happening++) {
 40140                           
 40141                           ;incstack = 0
 40142   007D26  0E00               	movlw	0
 40143   007D28  0101               	movlb	1	; () banked
 40144   007D2A  6FC0               	movwf	rebuildHashtable@happening& (0+255),b
 40145   007D2C                     l18987:
 40146                           
 40147                           ; BSR set to: 1
 40148                           ;../../VLCBlib_PIC/event_teach_large.c: 1338:         happening2Event[happening] = 0xff;
 40149   007D2C  0E00               	movlw	low _happening2Event
 40150   007D2E  25C0               	addwf	rebuildHashtable@happening& (0+255),w,b
 40151   007D30  6ED9               	movwf	fsr2l,c
 40152   007D32  6ADA               	clrf	fsr2h,c
 40153   007D34  0E03               	movlw	high _happening2Event
 40154   007D36  22DA               	addwfc	fsr2h,f,c
 40155   007D38  0EFF               	movlw	255
 40156   007D3A  6EDF               	movwf	indf2,c
 40157                           
 40158                           ; BSR set to: 1
 40159                           ;../../VLCBlib_PIC/event_teach_large.c: 1339:     }
 40160   007D3C  2BC0               	incf	rebuildHashtable@happening& (0+255),f,b
 40161                           
 40162                           ; BSR set to: 1
 40163   007D3E  0E47               	movlw	71
 40164   007D40  65C0               	cpfsgt	rebuildHashtable@happening& (0+255),b
 40165   007D42  D7F4               	goto	l18987
 40166                           
 40167                           ; BSR set to: 1
 40168                           ;../../VLCBlib_PIC/event_teach_large.c: 1341:     for (hash=0; hash<32; hash++) {
 40169   007D44  0E00               	movlw	0
 40170   007D46  6FBF               	movwf	rebuildHashtable@hash& (0+255),b
 40171   007D48                     l18999:
 40172                           
 40173                           ; BSR set to: 1
 40174                           ;../../VLCBlib_PIC/event_teach_large.c: 1342:         for (chainIdx=0; chainIdx < 20; ch
      +                          ainIdx++) {
 40175   007D48  0E00               	movlw	0
 40176   007D4A  6FC1               	movwf	rebuildHashtable@chainIdx& (0+255),b
 40177   007D4C                     l19005:
 40178                           
 40179                           ; BSR set to: 1
 40180                           ;../../VLCBlib_PIC/event_teach_large.c: 1343:             eventChains[hash][chainIdx] = 
      +                          0xff;
 40181   007D4C  51BF               	movf	rebuildHashtable@hash& (0+255),w,b
 40182   007D4E  0D14               	mullw	20
 40183   007D50  0E48               	movlw	low _eventChains
 40184   007D52  24F3               	addwf	243,w,c
 40185   007D54  6FBA               	movwf	??_rebuildHashtable& (0+255),b
 40186   007D56  0E05               	movlw	high _eventChains
 40187   007D58  20F4               	addwfc	prodh,w,c
 40188   007D5A  6FBB               	movwf	(??_rebuildHashtable+1)& (0+255),b
 40189   007D5C  51C1               	movf	rebuildHashtable@chainIdx& (0+255),w,b
 40190   007D5E  25BA               	addwf	??_rebuildHashtable& (0+255),w,b
 40191   007D60  6ED9               	movwf	fsr2l,c
 40192   007D62  0E00               	movlw	0
 40193   007D64  21BB               	addwfc	(??_rebuildHashtable+1)& (0+255),w,b
 40194   007D66  6EDA               	movwf	fsr2h,c
 40195   007D68  0EFF               	movlw	255
 40196   007D6A  6EDF               	movwf	indf2,c
 40197                           
 40198                           ; BSR set to: 1
 40199                           ;../../VLCBlib_PIC/event_teach_large.c: 1344:         }
 40200   007D6C  2BC1               	incf	rebuildHashtable@chainIdx& (0+255),f,b
 40201                           
 40202                           ; BSR set to: 1
 40203   007D6E  0E13               	movlw	19
 40204   007D70  65C1               	cpfsgt	rebuildHashtable@chainIdx& (0+255),b
 40205   007D72  D7EC               	goto	l19005
 40206                           
 40207                           ; BSR set to: 1
 40208                           ;../../VLCBlib_PIC/event_teach_large.c: 1345:     }
 40209   007D74  2BBF               	incf	rebuildHashtable@hash& (0+255),f,b
 40210                           
 40211                           ; BSR set to: 1
 40212   007D76  0E1F               	movlw	31
 40213   007D78  65BF               	cpfsgt	rebuildHashtable@hash& (0+255),b
 40214   007D7A  D7E6               	goto	l18999
 40215                           
 40216                           ; BSR set to: 1
 40217                           ;../../VLCBlib_PIC/event_teach_large.c: 1348:     for (tableIndex=0; tableIndex<255; tab
      +                          leIndex++) {
 40218   007D7C  0E00               	movlw	0
 40219   007D7E  6FC2               	movwf	rebuildHashtable@tableIndex& (0+255),b
 40220   007D80                     l19021:
 40221                           
 40222                           ; BSR set to: 1
 40223                           ;../../VLCBlib_PIC/event_teach_large.c: 1349:         if (validStart(tableIndex)) {
 40224   007D80  51C2               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 40225   007D82  EC39  F05C         	call	_validStart
 40226   007D86  0900               	iorlw	0
 40227   007D88  B4D8               	btfsc	status,2,c
 40228   007D8A  D059               	goto	u18670
 40229                           
 40230                           ;../../VLCBlib_PIC/event_teach_large.c: 1350:             int16_t ev;;../../VLCBlib_PIC/
      +                          event_teach_large.c: 1365:             ev = getEv(tableIndex, 0);
 40231   007D8C  0E00               	movlw	0
 40232   007D8E  0100               	movlb	0	; () banked
 40233   007D90  6F9D               	movwf	getEv@evNum& (0+255),b
 40234   007D92  0101               	movlb	1	; () banked
 40235   007D94  51C2               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 40236   007D96  EC0A  F03C         	call	_getEv
 40237   007D9A  C09D  F1BD         	movff	?_getEv,rebuildHashtable@ev
 40238   007D9E  C09E  F1BE         	movff	?_getEv+1,rebuildHashtable@ev+1
 40239                           
 40240                           ;../../VLCBlib_PIC/event_teach_large.c: 1366:             if (ev < 0) continue;
 40241   007DA2  0101               	movlb	1	; () banked
 40242   007DA4  BFBE               	btfsc	(rebuildHashtable@ev+1)& (0+255),7,b
 40243   007DA6  D04B               	goto	u18670
 40244                           
 40245                           ; BSR set to: 1
 40246                           ;../../VLCBlib_PIC/event_teach_large.c: 1367:             happening = (uint8_t) ev;
 40247   007DA8  C1BD  F1C0         	movff	rebuildHashtable@ev,rebuildHashtable@happening
 40248                           
 40249                           ; BSR set to: 1
 40250                           ;../../VLCBlib_PIC/event_teach_large.c: 1369:             if ((happening<= (7+16*4)) && 
      +                          (happening >= 1)) {
 40251   007DAC  0E48               	movlw	72
 40252   007DAE  61C0               	cpfslt	rebuildHashtable@happening& (0+255),b
 40253   007DB0  D00B               	goto	l19035
 40254                           
 40255                           ; BSR set to: 1
 40256   007DB2  51C0               	movf	rebuildHashtable@happening& (0+255),w,b
 40257   007DB4  B4D8               	btfsc	status,2,c
 40258   007DB6  D008               	goto	l19035
 40259                           
 40260                           ; BSR set to: 1
 40261                           ;../../VLCBlib_PIC/event_teach_large.c: 1370:                 happening2Event[happening-
      +                          1] = tableIndex;
 40262   007DB8  0EFF               	movlw	low (_happening2Event+65535)
 40263   007DBA  25C0               	addwf	rebuildHashtable@happening& (0+255),w,b
 40264   007DBC  6ED9               	movwf	fsr2l,c
 40265   007DBE  6ADA               	clrf	fsr2h,c
 40266   007DC0  0E02               	movlw	high (_happening2Event+65535)
 40267   007DC2  22DA               	addwfc	fsr2h,f,c
 40268   007DC4  C1C2  FFDF         	movff	rebuildHashtable@tableIndex,indf2
 40269   007DC8                     l19035:
 40270                           
 40271                           ; BSR set to: 1
 40272                           ;../../VLCBlib_PIC/event_teach_large.c: 1373:             hash = getHash(getNN(tableInde
      +                          x), getEN(tableIndex));
 40273   007DC8  51C2               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 40274   007DCA  ECBF  F049         	call	_getNN
 40275   007DCE  C097  F0A3         	movff	?_getNN,getHash@nn
 40276   007DD2  C098  F0A4         	movff	?_getNN+1,getHash@nn+1
 40277   007DD6  0101               	movlb	1	; () banked
 40278   007DD8  51C2               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 40279   007DDA  EC9B  F055         	call	_getEN
 40280   007DDE  C097  F0A5         	movff	?_getEN,getHash@en
 40281   007DE2  C098  F0A6         	movff	?_getEN+1,getHash@en+1
 40282   007DE6  EC14  F062         	call	_getHash	;wreg free
 40283   007DEA  0101               	movlb	1	; () banked
 40284   007DEC  6FBF               	movwf	rebuildHashtable@hash& (0+255),b
 40285                           
 40286                           ; BSR set to: 1
 40287                           ;../../VLCBlib_PIC/event_teach_large.c: 1375:             for (chainIdx=0; chainIdx<20; 
      +                          chainIdx++) {
 40288   007DEE  0E00               	movlw	0
 40289   007DF0  6FC1               	movwf	rebuildHashtable@chainIdx& (0+255),b
 40290   007DF2                     l19043:
 40291                           
 40292                           ; BSR set to: 1
 40293                           ;../../VLCBlib_PIC/event_teach_large.c: 1376:                 if (eventChains[hash][chai
      +                          nIdx] == 0xff) {
 40294   007DF2  51BF               	movf	rebuildHashtable@hash& (0+255),w,b
 40295   007DF4  0D14               	mullw	20
 40296   007DF6  0E48               	movlw	low _eventChains
 40297   007DF8  24F3               	addwf	243,w,c
 40298   007DFA  6FBA               	movwf	??_rebuildHashtable& (0+255),b
 40299   007DFC  0E05               	movlw	high _eventChains
 40300   007DFE  20F4               	addwfc	prodh,w,c
 40301   007E00  6FBB               	movwf	(??_rebuildHashtable+1)& (0+255),b
 40302   007E02  51C1               	movf	rebuildHashtable@chainIdx& (0+255),w,b
 40303   007E04  25BA               	addwf	??_rebuildHashtable& (0+255),w,b
 40304   007E06  6ED9               	movwf	fsr2l,c
 40305   007E08  0E00               	movlw	0
 40306   007E0A  21BB               	addwfc	(??_rebuildHashtable+1)& (0+255),w,b
 40307   007E0C  6EDA               	movwf	fsr2h,c
 40308   007E0E  28DE               	incf	postinc2,w,c
 40309   007E10  A4D8               	btfss	status,2,c
 40310   007E12  D011               	goto	l19047
 40311                           
 40312                           ; BSR set to: 1
 40313                           ;../../VLCBlib_PIC/event_teach_large.c: 1378:                     eventChains[hash][chai
      +                          nIdx] = tableIndex;
 40314   007E14  51BF               	movf	rebuildHashtable@hash& (0+255),w,b
 40315   007E16  0D14               	mullw	20
 40316   007E18  0E48               	movlw	low _eventChains
 40317   007E1A  24F3               	addwf	243,w,c
 40318   007E1C  6FBA               	movwf	??_rebuildHashtable& (0+255),b
 40319   007E1E  0E05               	movlw	high _eventChains
 40320   007E20  20F4               	addwfc	prodh,w,c
 40321   007E22  6FBB               	movwf	(??_rebuildHashtable+1)& (0+255),b
 40322   007E24  51C1               	movf	rebuildHashtable@chainIdx& (0+255),w,b
 40323   007E26  25BA               	addwf	??_rebuildHashtable& (0+255),w,b
 40324   007E28  6ED9               	movwf	fsr2l,c
 40325   007E2A  0E00               	movlw	0
 40326   007E2C  21BB               	addwfc	(??_rebuildHashtable+1)& (0+255),w,b
 40327   007E2E  6EDA               	movwf	fsr2h,c
 40328   007E30  C1C2  FFDF         	movff	rebuildHashtable@tableIndex,indf2
 40329                           
 40330                           ;../../VLCBlib_PIC/event_teach_large.c: 1379:                     break;
 40331   007E34  D004               	goto	u18670
 40332   007E36                     l19047:
 40333                           
 40334                           ; BSR set to: 1
 40335                           ;../../VLCBlib_PIC/event_teach_large.c: 1381:             }
 40336   007E36  2BC1               	incf	rebuildHashtable@chainIdx& (0+255),f,b
 40337                           
 40338                           ; BSR set to: 1
 40339   007E38  0E13               	movlw	19
 40340   007E3A  65C1               	cpfsgt	rebuildHashtable@chainIdx& (0+255),b
 40341   007E3C  D7DA               	goto	l19043
 40342   007E3E                     u18670:
 40343   007E3E  0101               	movlb	1	; () banked
 40344   007E40  2BC2               	incf	rebuildHashtable@tableIndex& (0+255),f,b
 40345                           
 40346                           ; BSR set to: 1
 40347   007E42  29C2               	incf	rebuildHashtable@tableIndex& (0+255),w,b
 40348   007E44  B4D8               	btfsc	status,2,c
 40349   007E46  0012               	return	
 40350   007E48  D79B               	goto	l19021
 40351   007E4A                     __end_of_rebuildHashtable:
 40352                           	callstack 0
 40353                           
 40354 ;; *************** function _getEv *****************
 40355 ;; Defined at:
 40356 ;;		line 1119 in file "../../VLCBlib_PIC/event_teach_large.c"
 40357 ;; Parameters:    Size  Location     Type
 40358 ;;  tableIndex      1    wreg     unsigned char 
 40359 ;;  evNum           1   61[BANK0 ] unsigned char 
 40360 ;; Auto vars:     Size  Location     Type
 40361 ;;  tableIndex      1   69[BANK0 ] unsigned char 
 40362 ;;  f               1   68[BANK0 ] struct .
 40363 ;; Return value:  Size  Location     Type
 40364 ;;                  2   61[BANK0 ] short 
 40365 ;; Registers used:
 40366 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40367 ;; Tracked objects:
 40368 ;;		On entry : 0/0
 40369 ;;		On exit  : 0/0
 40370 ;;		Unchanged: 0/0
 40371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40372 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40373 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40374 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40375 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40376 ;;Total ram usage:        9 bytes
 40377 ;; Hardware stack levels used: 1
 40378 ;; Hardware stack levels required when called: 15
 40379 ;; This function calls:
 40380 ;;		_readNVM
 40381 ;;		_validStart
 40382 ;; This function is called by:
 40383 ;;		_isConsumedEvent
 40384 ;;		_doReval
 40385 ;;		_doReqev
 40386 ;;		_reqevCallback
 40387 ;;		_rebuildHashtable
 40388 ;;		_producerProcessMessage
 40389 ;; This function uses a non-reentrant model
 40390 ;;
 40391                           
 40392                           	psect	text173
 40393   007814                     __ptext173:
 40394                           	callstack 0
 40395   007814                     _getEv:
 40396                           	callstack 12
 40397                           
 40398                           ; BSR set to: 1
 40399                           ;incstack = 0
 40400                           ;getEv@tableIndex stored from wreg
 40401   007814  0100               	movlb	0	; () banked
 40402   007816  6FA5               	movwf	getEv@tableIndex& (0+255),b
 40403                           
 40404                           ;../../VLCBlib_PIC/event_teach_large.c: 1120:     EventTableFlags f;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1121:     if ( ! validStart(tableIndex)) {
 40405   007818  0100               	movlb	0	; () banked
 40406   00781A  51A5               	movf	getEv@tableIndex& (0+255),w,b
 40407   00781C  EC39  F05C         	call	_validStart
 40408   007820  0900               	iorlw	0
 40409   007822  A4D8               	btfss	status,2,c
 40410   007824  D006               	goto	l18829
 40411   007826                     u18420:
 40412                           
 40413                           ;../../VLCBlib_PIC/event_teach_large.c: 1123:         return -CMDERR_INVALID_EVENT;
 40414   007826  0EFF               	movlw	255
 40415   007828  0100               	movlb	0	; () banked
 40416   00782A  6F9E               	movwf	(?_getEv+1)& (0+255),b
 40417   00782C  0EF9               	movlw	249
 40418   00782E  6F9D               	movwf	?_getEv& (0+255),b
 40419   007830  0012               	return	
 40420   007832                     l18829:
 40421                           
 40422                           ;../../VLCBlib_PIC/event_teach_large.c: 1125:     if (evNum >= 20) {
 40423   007832  0E13               	movlw	19
 40424   007834  0100               	movlb	0	; () banked
 40425   007836  659D               	cpfsgt	getEv@evNum& (0+255),b
 40426   007838  D005               	goto	l18835
 40427                           
 40428                           ; BSR set to: 0
 40429                           ;../../VLCBlib_PIC/event_teach_large.c: 1126:         return -CMDERR_INV_EV_IDX;
 40430   00783A  0EFF               	movlw	255
 40431   00783C  6F9E               	movwf	(?_getEv+1)& (0+255),b
 40432   00783E  0EFA               	movlw	250
 40433   007840  6F9D               	movwf	?_getEv& (0+255),b
 40434   007842  0012               	return	
 40435   007844                     l18835:
 40436                           
 40437                           ; BSR set to: 0
 40438                           ;../../VLCBlib_PIC/event_teach_large.c: 1128:     f.asByte = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, 0xEF80 + 16*tableIndex+0);
 40439   007844  51A5               	movf	getEv@tableIndex& (0+255),w,b
 40440   007846  6F9F               	movwf	??_getEv& (0+255),b
 40441   007848  6BA0               	clrf	(??_getEv+1)& (0+255),b
 40442   00784A  3B9F               	swapf	??_getEv& (0+255),f,b
 40443   00784C  3BA0               	swapf	(??_getEv+1)& (0+255),f,b
 40444   00784E  0EF0               	movlw	240
 40445   007850  17A0               	andwf	(??_getEv+1)& (0+255),f,b
 40446   007852  519F               	movf	??_getEv& (0+255),w,b
 40447   007854  0B0F               	andlw	15
 40448   007856  13A0               	iorwf	(??_getEv+1)& (0+255),f,b
 40449   007858  0EF0               	movlw	240
 40450   00785A  179F               	andwf	??_getEv& (0+255),f,b
 40451   00785C  0E80               	movlw	128
 40452   00785E  259F               	addwf	??_getEv& (0+255),w,b
 40453   007860  6FA1               	movwf	(??_getEv+2)& (0+255),b
 40454   007862  0EEF               	movlw	239
 40455   007864  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 40456   007866  6FA2               	movwf	(??_getEv+3)& (0+255),b
 40457   007868  C0A1  F091         	movff	??_getEv+2,readNVM@index
 40458   00786C  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 40459   007870  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40460   007872  0E01               	movlw	1
 40461   007874  ECD0  F059         	call	_readNVM
 40462   007878  0100               	movlb	0	; () banked
 40463   00787A  5191               	movf	?_readNVM& (0+255),w,b
 40464   00787C  6FA4               	movwf	getEv@f& (0+255),b
 40465                           
 40466                           ;../../VLCBlib_PIC/event_teach_large.c: 1129:     while (evNum >= 10) {
 40467   00787E  D040               	goto	l18853
 40468   007880                     l2932:
 40469                           
 40470                           ; BSR set to: 0
 40471                           ;../../VLCBlib_PIC/event_teach_large.c: 1131:         if (! f.continued) {
 40472   007880  B9A4               	btfsc	getEv@f& (0+255),4,b
 40473   007882  D005               	goto	l18841
 40474   007884                     u18440:
 40475                           
 40476                           ; BSR set to: 0
 40477                           ;../../VLCBlib_PIC/event_teach_large.c: 1132:             return -CMDERR_NO_EV;
 40478   007884  0EFF               	movlw	255
 40479   007886  6F9E               	movwf	(?_getEv+1)& (0+255),b
 40480   007888  0EFB               	movlw	251
 40481   00788A  6F9D               	movwf	?_getEv& (0+255),b
 40482   00788C  0012               	return	
 40483   00788E                     l18841:
 40484                           
 40485                           ; BSR set to: 0
 40486                           ;../../VLCBlib_PIC/event_teach_large.c: 1134:         tableIndex = (uint8_t)readNVM(FLAS
      +                          H_NVM_TYPE, 0xEF80 + 16*tableIndex+1);
 40487   00788E  51A5               	movf	getEv@tableIndex& (0+255),w,b
 40488   007890  0D10               	mullw	16
 40489   007892  CFF3 F09F          	movff	prodl,??_getEv
 40490   007896  CFF4 F0A0          	movff	prodh,??_getEv+1
 40491   00789A  0E81               	movlw	129
 40492   00789C  259F               	addwf	??_getEv& (0+255),w,b
 40493   00789E  6FA1               	movwf	(??_getEv+2)& (0+255),b
 40494   0078A0  0EEF               	movlw	239
 40495   0078A2  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 40496   0078A4  6FA2               	movwf	(??_getEv+3)& (0+255),b
 40497   0078A6  C0A1  F091         	movff	??_getEv+2,readNVM@index
 40498   0078AA  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 40499   0078AE  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40500   0078B0  0E01               	movlw	1
 40501   0078B2  ECD0  F059         	call	_readNVM
 40502   0078B6  0100               	movlb	0	; () banked
 40503   0078B8  5191               	movf	?_readNVM& (0+255),w,b
 40504   0078BA  6FA5               	movwf	getEv@tableIndex& (0+255),b
 40505                           
 40506                           ; BSR set to: 0
 40507                           ;../../VLCBlib_PIC/event_teach_large.c: 1135:         if (tableIndex == 0xff) {
 40508   0078BC  29A5               	incf	getEv@tableIndex& (0+255),w,b
 40509   0078BE  B4D8               	btfsc	status,2,c
 40510   0078C0  D7B2               	goto	u18420
 40511                           
 40512                           ; BSR set to: 0
 40513                           ;../../VLCBlib_PIC/event_teach_large.c: 1138:         f.asByte = (uint8_t)readNVM(FLASH_
      +                          NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 40514   0078C2  51A5               	movf	getEv@tableIndex& (0+255),w,b
 40515   0078C4  6F9F               	movwf	??_getEv& (0+255),b
 40516   0078C6  6BA0               	clrf	(??_getEv+1)& (0+255),b
 40517   0078C8  3B9F               	swapf	??_getEv& (0+255),f,b
 40518   0078CA  3BA0               	swapf	(??_getEv+1)& (0+255),f,b
 40519   0078CC  0EF0               	movlw	240
 40520   0078CE  17A0               	andwf	(??_getEv+1)& (0+255),f,b
 40521   0078D0  519F               	movf	??_getEv& (0+255),w,b
 40522   0078D2  0B0F               	andlw	15
 40523   0078D4  13A0               	iorwf	(??_getEv+1)& (0+255),f,b
 40524   0078D6  0EF0               	movlw	240
 40525   0078D8  179F               	andwf	??_getEv& (0+255),f,b
 40526   0078DA  0E80               	movlw	128
 40527   0078DC  259F               	addwf	??_getEv& (0+255),w,b
 40528   0078DE  6FA1               	movwf	(??_getEv+2)& (0+255),b
 40529   0078E0  0EEF               	movlw	239
 40530   0078E2  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 40531   0078E4  6FA2               	movwf	(??_getEv+3)& (0+255),b
 40532   0078E6  C0A1  F091         	movff	??_getEv+2,readNVM@index
 40533   0078EA  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 40534   0078EE  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40535   0078F0  0E01               	movlw	1
 40536   0078F2  ECD0  F059         	call	_readNVM
 40537   0078F6  0100               	movlb	0	; () banked
 40538   0078F8  5191               	movf	?_readNVM& (0+255),w,b
 40539   0078FA  6FA4               	movwf	getEv@f& (0+255),b
 40540                           
 40541                           ; BSR set to: 0
 40542                           ;../../VLCBlib_PIC/event_teach_large.c: 1139:         evNum -= 10;
 40543   0078FC  0E0A               	movlw	10
 40544   0078FE  5F9D               	subwf	getEv@evNum& (0+255),f,b
 40545   007900                     l18853:
 40546                           
 40547                           ; BSR set to: 0
 40548                           ;../../VLCBlib_PIC/event_teach_large.c: 1129:     while (evNum >= 10) {
 40549   007900  0E0A               	movlw	10
 40550   007902  619D               	cpfslt	getEv@evNum& (0+255),b
 40551   007904  D7BD               	goto	l2932
 40552                           
 40553                           ; BSR set to: 0
 40554                           ;../../VLCBlib_PIC/event_teach_large.c: 1141:     if (evNum+1 > f.eVsUsed) {
 40555   007906  519D               	movf	getEv@evNum& (0+255),w,b
 40556   007908  6F9F               	movwf	??_getEv& (0+255),b
 40557   00790A  6BA0               	clrf	(??_getEv+1)& (0+255),b
 40558   00790C  0E01               	movlw	1
 40559   00790E  279F               	addwf	??_getEv& (0+255),f,b
 40560   007910  0E00               	movlw	0
 40561   007912  23A0               	addwfc	(??_getEv+1)& (0+255),f,b
 40562   007914  51A4               	movf	getEv@f& (0+255),w,b
 40563   007916  0B0F               	andlw	15
 40564   007918  6FA1               	movwf	(??_getEv+2)& (0+255),b
 40565   00791A  6BA2               	clrf	(??_getEv+3)& (0+255),b
 40566   00791C  519F               	movf	??_getEv& (0+255),w,b
 40567   00791E  5DA1               	subwf	(??_getEv+2)& (0+255),w,b
 40568   007920  51A2               	movf	(??_getEv+3)& (0+255),w,b
 40569   007922  0A80               	xorlw	128
 40570   007924  6FA3               	movwf	(??_getEv+4)& (0+255),b
 40571   007926  51A0               	movf	(??_getEv+1)& (0+255),w,b
 40572   007928  0A80               	xorlw	128
 40573   00792A  59A3               	subwfb	(??_getEv+4)& (0+255),w,b
 40574   00792C  A0D8               	btfss	status,0,c
 40575   00792E  D7AA               	goto	u18440
 40576                           
 40577                           ; BSR set to: 0
 40578                           ;../../VLCBlib_PIC/event_teach_large.c: 1145:     return (uint8_t)readNVM(FLASH_NVM_TYPE
      +                          , 0xEF80 + 16*tableIndex+6 +evNum);
 40579   007930  51A5               	movf	getEv@tableIndex& (0+255),w,b
 40580   007932  0D10               	mullw	16
 40581   007934  CFF3 F09F          	movff	prodl,??_getEv
 40582   007938  CFF4 F0A0          	movff	prodh,??_getEv+1
 40583   00793C  519D               	movf	getEv@evNum& (0+255),w,b
 40584   00793E  279F               	addwf	??_getEv& (0+255),f,b
 40585   007940  0E00               	movlw	0
 40586   007942  23A0               	addwfc	(??_getEv+1)& (0+255),f,b
 40587   007944  0E86               	movlw	134
 40588   007946  259F               	addwf	??_getEv& (0+255),w,b
 40589   007948  6FA1               	movwf	(??_getEv+2)& (0+255),b
 40590   00794A  0EEF               	movlw	239
 40591   00794C  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 40592   00794E  6FA2               	movwf	(??_getEv+3)& (0+255),b
 40593   007950  C0A1  F091         	movff	??_getEv+2,readNVM@index
 40594   007954  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 40595   007958  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40596   00795A  0E01               	movlw	1
 40597   00795C  ECD0  F059         	call	_readNVM
 40598   007960  0100               	movlb	0	; () banked
 40599   007962  5191               	movf	?_readNVM& (0+255),w,b
 40600   007964  6F9D               	movwf	?_getEv& (0+255),b
 40601   007966  6B9E               	clrf	(?_getEv+1)& (0+255),b
 40602                           
 40603                           ; BSR set to: 0
 40604   007968  0012               	return		;funcret
 40605   00796A                     __end_of_getEv:
 40606                           	callstack 0
 40607                           
 40608 ;; *************** function _getEVs *****************
 40609 ;; Defined at:
 40610 ;;		line 1184 in file "../../VLCBlib_PIC/event_teach_large.c"
 40611 ;; Parameters:    Size  Location     Type
 40612 ;;  tableIndex      1    wreg     unsigned char 
 40613 ;; Auto vars:     Size  Location     Type
 40614 ;;  tableIndex      1   67[BANK0 ] unsigned char 
 40615 ;;  evIdx           1   66[BANK0 ] unsigned char 
 40616 ;;  evNum           1   68[BANK0 ] unsigned char 
 40617 ;;  f               1   65[BANK0 ] struct .
 40618 ;; Return value:  Size  Location     Type
 40619 ;;                  1    wreg      unsigned char 
 40620 ;; Registers used:
 40621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40622 ;; Tracked objects:
 40623 ;;		On entry : 0/0
 40624 ;;		On exit  : 0/0
 40625 ;;		Unchanged: 0/0
 40626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40628 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40629 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40630 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40631 ;;Total ram usage:        8 bytes
 40632 ;; Hardware stack levels used: 1
 40633 ;; Hardware stack levels required when called: 15
 40634 ;; This function calls:
 40635 ;;		_readNVM
 40636 ;;		_validStart
 40637 ;; This function is called by:
 40638 ;;		_consumer2QProcessMessage
 40639 ;;		_deleteActionRange
 40640 ;;		_checkRemoveTableEntry
 40641 ;; This function uses a non-reentrant model
 40642 ;;
 40643                           
 40644                           	psect	text174
 40645   008274                     __ptext174:
 40646                           	callstack 0
 40647   008274                     _getEVs:
 40648                           	callstack 9
 40649                           
 40650                           ; BSR set to: 0
 40651                           ;incstack = 0
 40652                           ;getEVs@tableIndex stored from wreg
 40653   008274  0100               	movlb	0	; () banked
 40654   008276  6FA3               	movwf	getEVs@tableIndex& (0+255),b
 40655                           
 40656                           ;../../VLCBlib_PIC/event_teach_large.c: 1185:     EventTableFlags f;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1186:     uint8_t evNum;;../../VLCBlib_PIC/event_teach_large.c: 1188
      +                          :     if ( ! validStart(tableIndex)) {
 40657   008278  0100               	movlb	0	; () banked
 40658   00827A  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 40659   00827C  EC39  F05C         	call	_validStart
 40660   008280  0900               	iorlw	0
 40661   008282  A4D8               	btfss	status,2,c
 40662   008284  D002               	goto	l19061
 40663   008286                     u18690:
 40664                           
 40665                           ;../../VLCBlib_PIC/event_teach_large.c: 1190:         return CMDERR_INVALID_EVENT;
 40666   008286  0E07               	movlw	7
 40667   008288  0012               	return	
 40668   00828A                     l19061:
 40669                           
 40670                           ;../../VLCBlib_PIC/event_teach_large.c: 1192:     for (evNum=0; evNum < 20; ) {
 40671   00828A  0E00               	movlw	0
 40672   00828C  0100               	movlb	0	; () banked
 40673   00828E  6FA4               	movwf	getEVs@evNum& (0+255),b
 40674   008290                     l19067:
 40675                           
 40676                           ; BSR set to: 0
 40677                           ;../../VLCBlib_PIC/event_teach_large.c: 1193:         uint8_t evIdx;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1194:         for (evIdx=0; evIdx < 10; evIdx++) {
 40678   008290  0E00               	movlw	0
 40679   008292  6FA2               	movwf	getEVs@evIdx& (0+255),b
 40680   008294                     l19073:
 40681                           
 40682                           ; BSR set to: 0
 40683                           ;../../VLCBlib_PIC/event_teach_large.c: 1195:             evs[evNum] = (uint8_t)readNVM(
      +                          FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+6 +evIdx);
 40684   008294  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 40685   008296  0D10               	mullw	16
 40686   008298  CFF3 F09D          	movff	prodl,??_getEVs
 40687   00829C  CFF4 F09E          	movff	prodh,??_getEVs+1
 40688   0082A0  51A2               	movf	getEVs@evIdx& (0+255),w,b
 40689   0082A2  279D               	addwf	??_getEVs& (0+255),f,b
 40690   0082A4  0E00               	movlw	0
 40691   0082A6  239E               	addwfc	(??_getEVs+1)& (0+255),f,b
 40692   0082A8  0E86               	movlw	134
 40693   0082AA  259D               	addwf	??_getEVs& (0+255),w,b
 40694   0082AC  6F9F               	movwf	(??_getEVs+2)& (0+255),b
 40695   0082AE  0EEF               	movlw	239
 40696   0082B0  219E               	addwfc	(??_getEVs+1)& (0+255),w,b
 40697   0082B2  6FA0               	movwf	(??_getEVs+3)& (0+255),b
 40698   0082B4  C09F  F091         	movff	??_getEVs+2,readNVM@index
 40699   0082B8  C0A0  F092         	movff	??_getEVs+3,readNVM@index+1
 40700   0082BC  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40701   0082BE  0E01               	movlw	1
 40702   0082C0  ECD0  F059         	call	_readNVM
 40703   0082C4  0E20               	movlw	low _evs
 40704   0082C6  0100               	movlb	0	; () banked
 40705   0082C8  25A4               	addwf	getEVs@evNum& (0+255),w,b
 40706   0082CA  6ED9               	movwf	fsr2l,c
 40707   0082CC  6ADA               	clrf	fsr2h,c
 40708   0082CE  0E02               	movlw	high _evs
 40709   0082D0  22DA               	addwfc	fsr2h,f,c
 40710   0082D2  C091  FFDF         	movff	?_readNVM,indf2
 40711                           
 40712                           ; BSR set to: 0
 40713                           ;../../VLCBlib_PIC/event_teach_large.c: 1196:             evNum++;
 40714   0082D6  2BA4               	incf	getEVs@evNum& (0+255),f,b
 40715                           
 40716                           ; BSR set to: 0
 40717                           ;../../VLCBlib_PIC/event_teach_large.c: 1197:         }
 40718   0082D8  2BA2               	incf	getEVs@evIdx& (0+255),f,b
 40719                           
 40720                           ; BSR set to: 0
 40721   0082DA  0E09               	movlw	9
 40722   0082DC  65A2               	cpfsgt	getEVs@evIdx& (0+255),b
 40723   0082DE  D7DA               	goto	l19073
 40724                           
 40725                           ; BSR set to: 0
 40726                           ;../../VLCBlib_PIC/event_teach_large.c: 1198:         f.asByte = (uint8_t)readNVM(FLASH_
      +                          NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 40727   0082E0  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 40728   0082E2  6F9D               	movwf	??_getEVs& (0+255),b
 40729   0082E4  6B9E               	clrf	(??_getEVs+1)& (0+255),b
 40730   0082E6  3B9D               	swapf	??_getEVs& (0+255),f,b
 40731   0082E8  3B9E               	swapf	(??_getEVs+1)& (0+255),f,b
 40732   0082EA  0EF0               	movlw	240
 40733   0082EC  179E               	andwf	(??_getEVs+1)& (0+255),f,b
 40734   0082EE  519D               	movf	??_getEVs& (0+255),w,b
 40735   0082F0  0B0F               	andlw	15
 40736   0082F2  139E               	iorwf	(??_getEVs+1)& (0+255),f,b
 40737   0082F4  0EF0               	movlw	240
 40738   0082F6  179D               	andwf	??_getEVs& (0+255),f,b
 40739   0082F8  0E80               	movlw	128
 40740   0082FA  259D               	addwf	??_getEVs& (0+255),w,b
 40741   0082FC  6F9F               	movwf	(??_getEVs+2)& (0+255),b
 40742   0082FE  0EEF               	movlw	239
 40743   008300  219E               	addwfc	(??_getEVs+1)& (0+255),w,b
 40744   008302  6FA0               	movwf	(??_getEVs+3)& (0+255),b
 40745   008304  C09F  F091         	movff	??_getEVs+2,readNVM@index
 40746   008308  C0A0  F092         	movff	??_getEVs+3,readNVM@index+1
 40747   00830C  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40748   00830E  0E01               	movlw	1
 40749   008310  ECD0  F059         	call	_readNVM
 40750   008314  0100               	movlb	0	; () banked
 40751   008316  5191               	movf	?_readNVM& (0+255),w,b
 40752   008318  6FA1               	movwf	getEVs@f& (0+255),b
 40753                           
 40754                           ; BSR set to: 0
 40755                           ;../../VLCBlib_PIC/event_teach_large.c: 1199:         if (! f.continued) {
 40756   00831A  B9A1               	btfsc	getEVs@f& (0+255),4,b
 40757   00831C  D00F               	goto	l19099
 40758   00831E                     u18710:
 40759                           
 40760                           ; BSR set to: 0
 40761                           ;../../VLCBlib_PIC/event_teach_large.c: 1200:             for (; evNum < 20; evNum++) {
 40762   00831E  0E13               	movlw	19
 40763   008320  65A4               	cpfsgt	getEVs@evNum& (0+255),b
 40764   008322  D001               	goto	l19089
 40765   008324  D009               	goto	l19095
 40766   008326                     l19089:
 40767                           
 40768                           ; BSR set to: 0
 40769                           ;../../VLCBlib_PIC/event_teach_large.c: 1201:                 evs[evNum] = 0;
 40770   008326  0E20               	movlw	low _evs
 40771   008328  25A4               	addwf	getEVs@evNum& (0+255),w,b
 40772   00832A  6ED9               	movwf	fsr2l,c
 40773   00832C  6ADA               	clrf	fsr2h,c
 40774   00832E  0E02               	movlw	high _evs
 40775   008330  22DA               	addwfc	fsr2h,f,c
 40776   008332  6ADF               	clrf	indf2,c
 40777                           
 40778                           ; BSR set to: 0
 40779                           ;../../VLCBlib_PIC/event_teach_large.c: 1202:             }
 40780   008334  2BA4               	incf	getEVs@evNum& (0+255),f,b
 40781   008336  D7F3               	goto	u18710
 40782   008338                     l19095:
 40783                           
 40784                           ; BSR set to: 0
 40785                           ;../../VLCBlib_PIC/event_teach_large.c: 1203:             return 0;
 40786   008338  0E00               	movlw	0
 40787   00833A  0012               	return	
 40788   00833C                     l19099:
 40789                           
 40790                           ; BSR set to: 0
 40791                           ;../../VLCBlib_PIC/event_teach_large.c: 1205:         tableIndex = (uint8_t)readNVM(FLAS
      +                          H_NVM_TYPE, 0xEF80 + 16*tableIndex+1);
 40792   00833C  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 40793   00833E  0D10               	mullw	16
 40794   008340  CFF3 F09D          	movff	prodl,??_getEVs
 40795   008344  CFF4 F09E          	movff	prodh,??_getEVs+1
 40796   008348  0E81               	movlw	129
 40797   00834A  259D               	addwf	??_getEVs& (0+255),w,b
 40798   00834C  6F9F               	movwf	(??_getEVs+2)& (0+255),b
 40799   00834E  0EEF               	movlw	239
 40800   008350  219E               	addwfc	(??_getEVs+1)& (0+255),w,b
 40801   008352  6FA0               	movwf	(??_getEVs+3)& (0+255),b
 40802   008354  C09F  F091         	movff	??_getEVs+2,readNVM@index
 40803   008358  C0A0  F092         	movff	??_getEVs+3,readNVM@index+1
 40804   00835C  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40805   00835E  0E01               	movlw	1
 40806   008360  ECD0  F059         	call	_readNVM
 40807   008364  0100               	movlb	0	; () banked
 40808   008366  5191               	movf	?_readNVM& (0+255),w,b
 40809   008368  6FA3               	movwf	getEVs@tableIndex& (0+255),b
 40810                           
 40811                           ; BSR set to: 0
 40812                           ;../../VLCBlib_PIC/event_teach_large.c: 1206:         if (tableIndex == 0xff) {
 40813   00836A  29A3               	incf	getEVs@tableIndex& (0+255),w,b
 40814   00836C  B4D8               	btfsc	status,2,c
 40815   00836E  D78B               	goto	u18690
 40816                           
 40817                           ; BSR set to: 0
 40818                           ;../../VLCBlib_PIC/event_teach_large.c: 1209:     }
 40819   008370  0E13               	movlw	19
 40820   008372  65A4               	cpfsgt	getEVs@evNum& (0+255),b
 40821   008374  D78D               	goto	l19067
 40822   008376  D7E0               	goto	l19095
 40823   008378                     __end_of_getEVs:
 40824                           	callstack 0
 40825                           
 40826 ;; *************** function _validStart *****************
 40827 ;; Defined at:
 40828 ;;		line 1283 in file "../../VLCBlib_PIC/event_teach_large.c"
 40829 ;; Parameters:    Size  Location     Type
 40830 ;;  tableIndex      1    wreg     unsigned char 
 40831 ;; Auto vars:     Size  Location     Type
 40832 ;;  tableIndex      1   59[BANK0 ] unsigned char 
 40833 ;;  f               1   60[BANK0 ] struct .
 40834 ;; Return value:  Size  Location     Type
 40835 ;;                  1    wreg      enum E12760
 40836 ;; Registers used:
 40837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40838 ;; Tracked objects:
 40839 ;;		On entry : 0/0
 40840 ;;		On exit  : 0/0
 40841 ;;		Unchanged: 0/0
 40842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40844 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40845 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40846 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40847 ;;Total ram usage:        6 bytes
 40848 ;; Hardware stack levels used: 1
 40849 ;; Hardware stack levels required when called: 14
 40850 ;; This function calls:
 40851 ;;		_readNVM
 40852 ;; This function is called by:
 40853 ;;		_deleteActionRange
 40854 ;;		_nerdCallback
 40855 ;;		_doNenrd
 40856 ;;		_doRqevn
 40857 ;;		_doReval
 40858 ;;		_removeTableEntry
 40859 ;;		_checkRemoveTableEntry
 40860 ;;		_getEv
 40861 ;;		_numEv
 40862 ;;		_getEVs
 40863 ;;		_rebuildHashtable
 40864 ;;		_deleteHappeningRange
 40865 ;; This function uses a non-reentrant model
 40866 ;;
 40867                           
 40868                           	psect	text175
 40869   00B872                     __ptext175:
 40870                           	callstack 0
 40871   00B872                     _validStart:
 40872                           	callstack 13
 40873                           
 40874                           ;incstack = 0
 40875                           ;validStart@tableIndex stored from wreg
 40876   00B872  0100               	movlb	0	; () banked
 40877   00B874  6F9B               	movwf	validStart@tableIndex& (0+255),b
 40878                           
 40879                           ;../../VLCBlib_PIC/event_teach_large.c: 1284:     EventTableFlags f;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1288:     f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80 + 16*ta
      +                          bleIndex+0);
 40880   00B876  0100               	movlb	0	; () banked
 40881   00B878  519B               	movf	validStart@tableIndex& (0+255),w,b
 40882   00B87A  6F97               	movwf	??_validStart& (0+255),b
 40883   00B87C  6B98               	clrf	(??_validStart+1)& (0+255),b
 40884   00B87E  3B97               	swapf	??_validStart& (0+255),f,b
 40885   00B880  3B98               	swapf	(??_validStart+1)& (0+255),f,b
 40886   00B882  0EF0               	movlw	240
 40887   00B884  1798               	andwf	(??_validStart+1)& (0+255),f,b
 40888   00B886  5197               	movf	??_validStart& (0+255),w,b
 40889   00B888  0B0F               	andlw	15
 40890   00B88A  1398               	iorwf	(??_validStart+1)& (0+255),f,b
 40891   00B88C  0EF0               	movlw	240
 40892   00B88E  1797               	andwf	??_validStart& (0+255),f,b
 40893   00B890  0E80               	movlw	128
 40894   00B892  2597               	addwf	??_validStart& (0+255),w,b
 40895   00B894  6F99               	movwf	(??_validStart+2)& (0+255),b
 40896   00B896  0EEF               	movlw	239
 40897   00B898  2198               	addwfc	(??_validStart+1)& (0+255),w,b
 40898   00B89A  6F9A               	movwf	(??_validStart+3)& (0+255),b
 40899   00B89C  C099  F091         	movff	??_validStart+2,readNVM@index
 40900   00B8A0  C09A  F092         	movff	??_validStart+3,readNVM@index+1
 40901   00B8A4  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40902   00B8A6  0E01               	movlw	1
 40903   00B8A8  ECD0  F059         	call	_readNVM
 40904   00B8AC  0100               	movlb	0	; () banked
 40905   00B8AE  5191               	movf	?_readNVM& (0+255),w,b
 40906   00B8B0  6F9C               	movwf	validStart@f& (0+255),b
 40907                           
 40908                           ; BSR set to: 0
 40909                           ;../../VLCBlib_PIC/event_teach_large.c: 1289:     if (( !f.freeEntry) && ( ! f.continuat
      +                          ion)) {
 40910   00B8B2  AF9C               	btfss	validStart@f& (0+255),7,b
 40911                           
 40912                           ; BSR set to: 0
 40913   00B8B4  BB9C               	btfsc	validStart@f& (0+255),5,b
 40914   00B8B6  D002               	goto	l18791
 40915                           
 40916                           ; BSR set to: 0
 40917                           ;../../VLCBlib_PIC/event_teach_large.c: 1290:         return TRUE;
 40918   00B8B8  0E01               	movlw	1
 40919   00B8BA  0012               	return	
 40920   00B8BC                     l18791:
 40921                           
 40922                           ; BSR set to: 0
 40923                           ;../../VLCBlib_PIC/event_teach_large.c: 1292:         return FALSE;
 40924   00B8BC  0E00               	movlw	0
 40925                           
 40926                           ; BSR set to: 0
 40927   00B8BE  0012               	return		;funcret
 40928   00B8C0                     __end_of_validStart:
 40929                           	callstack 0
 40930                           
 40931 ;; *************** function _findEvent *****************
 40932 ;; Defined at:
 40933 ;;		line 999 in file "../../VLCBlib_PIC/event_teach_large.c"
 40934 ;; Parameters:    Size  Location     Type
 40935 ;;  nodeNumber      2    0[BANK1 ] unsigned short 
 40936 ;;  eventNumber     2    2[BANK1 ] unsigned short 
 40937 ;; Auto vars:     Size  Location     Type
 40938 ;;  en              2    8[BANK1 ] unsigned short 
 40939 ;;  nn              2    6[BANK1 ] unsigned short 
 40940 ;;  tableIndex      1   12[BANK1 ] unsigned char 
 40941 ;;  chainIdx        1   11[BANK1 ] unsigned char 
 40942 ;;  hash            1   10[BANK1 ] unsigned char 
 40943 ;; Return value:  Size  Location     Type
 40944 ;;                  1    wreg      unsigned char 
 40945 ;; Registers used:
 40946 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40947 ;; Tracked objects:
 40948 ;;		On entry : 0/0
 40949 ;;		On exit  : 0/0
 40950 ;;		Unchanged: 0/0
 40951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40952 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40953 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40954 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40955 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40956 ;;Total ram usage:       13 bytes
 40957 ;; Hardware stack levels used: 1
 40958 ;; Hardware stack levels required when called: 15
 40959 ;; This function calls:
 40960 ;;		_getEN
 40961 ;;		_getHash
 40962 ;;		_getNN
 40963 ;; This function is called by:
 40964 ;;		_consumer2QProcessMessage
 40965 ;;		_ackEventProcessMessage
 40966 ;;		_doReqev
 40967 ;;		_removeEvent
 40968 ;;		_addEvent
 40969 ;;		_producerProcessMessage
 40970 ;; This function uses a non-reentrant model
 40971 ;;
 40972                           
 40973                           	psect	text176
 40974   00A376                     __ptext176:
 40975                           	callstack 0
 40976   00A376                     _findEvent:
 40977                           	callstack 12
 40978                           
 40979                           ;../../VLCBlib_PIC/event_teach_large.c: 1001:     uint8_t hash = getHash(nodeNumber, eve
      +                          ntNumber);
 40980                           
 40981                           ; BSR set to: 0
 40982                           ;incstack = 0
 40983   00A376  C1BA  F0A3         	movff	findEvent@nodeNumber,getHash@nn
 40984   00A37A  C1BB  F0A4         	movff	findEvent@nodeNumber+1,getHash@nn+1
 40985   00A37E  C1BC  F0A5         	movff	findEvent@eventNumber,getHash@en
 40986   00A382  C1BD  F0A6         	movff	findEvent@eventNumber+1,getHash@en+1
 40987   00A386  EC14  F062         	call	_getHash	;wreg free
 40988   00A38A  0101               	movlb	1	; () banked
 40989   00A38C  6FC4               	movwf	findEvent@hash& (0+255),b
 40990                           
 40991                           ; BSR set to: 1
 40992                           ;../../VLCBlib_PIC/event_teach_large.c: 1002:     uint8_t chainIdx;;../../VLCBlib_PIC/ev
      +                          ent_teach_large.c: 1003:     for (chainIdx=0; chainIdx<20; chainIdx++) {
 40993   00A38E  0E00               	movlw	0
 40994   00A390  6FC5               	movwf	findEvent@chainIdx& (0+255),b
 40995   00A392                     l19465:
 40996                           
 40997                           ; BSR set to: 1
 40998                           ;../../VLCBlib_PIC/event_teach_large.c: 1004:         uint8_t tableIndex = eventChains[h
      +                          ash][chainIdx];
 40999   00A392  51C4               	movf	findEvent@hash& (0+255),w,b
 41000   00A394  0D14               	mullw	20
 41001   00A396  0E48               	movlw	low _eventChains
 41002   00A398  24F3               	addwf	243,w,c
 41003   00A39A  6FBE               	movwf	??_findEvent& (0+255),b
 41004   00A39C  0E05               	movlw	high _eventChains
 41005   00A39E  20F4               	addwfc	prodh,w,c
 41006   00A3A0  6FBF               	movwf	(??_findEvent+1)& (0+255),b
 41007   00A3A2  51C5               	movf	findEvent@chainIdx& (0+255),w,b
 41008   00A3A4  25BE               	addwf	??_findEvent& (0+255),w,b
 41009   00A3A6  6ED9               	movwf	fsr2l,c
 41010   00A3A8  0E00               	movlw	0
 41011   00A3AA  21BF               	addwfc	(??_findEvent+1)& (0+255),w,b
 41012   00A3AC  6EDA               	movwf	fsr2h,c
 41013   00A3AE  50DF               	movf	indf2,w,c
 41014   00A3B0  6FC6               	movwf	findEvent@tableIndex& (0+255),b
 41015                           
 41016                           ; BSR set to: 1
 41017                           ;../../VLCBlib_PIC/event_teach_large.c: 1005:         uint16_t nn, en;;../../VLCBlib_PIC
      +                          /event_teach_large.c: 1006:         if (tableIndex == 0xff) return 0xff;
 41018   00A3B2  29C6               	incf	findEvent@tableIndex& (0+255),w,b
 41019   00A3B4  A4D8               	btfss	status,2,c
 41020   00A3B6  D002               	goto	l19473
 41021   00A3B8                     u19250:
 41022                           
 41023                           ; BSR set to: 1
 41024   00A3B8  0EFF               	movlw	255
 41025   00A3BA  0012               	return	
 41026   00A3BC                     l19473:
 41027                           
 41028                           ; BSR set to: 1
 41029                           ;../../VLCBlib_PIC/event_teach_large.c: 1007:         nn = getNN(tableIndex);
 41030   00A3BC  51C6               	movf	findEvent@tableIndex& (0+255),w,b
 41031   00A3BE  ECBF  F049         	call	_getNN
 41032   00A3C2  C097  F1C0         	movff	?_getNN,findEvent@nn
 41033   00A3C6  C098  F1C1         	movff	?_getNN+1,findEvent@nn+1
 41034                           
 41035                           ;../../VLCBlib_PIC/event_teach_large.c: 1008:         en = getEN(tableIndex);
 41036   00A3CA  0101               	movlb	1	; () banked
 41037   00A3CC  51C6               	movf	findEvent@tableIndex& (0+255),w,b
 41038   00A3CE  EC9B  F055         	call	_getEN
 41039   00A3D2  C097  F1C2         	movff	?_getEN,findEvent@en
 41040   00A3D6  C098  F1C3         	movff	?_getEN+1,findEvent@en+1
 41041                           
 41042                           ;../../VLCBlib_PIC/event_teach_large.c: 1009:         if ((nn == nodeNumber) && (en == e
      +                          ventNumber)) {
 41043   00A3DA  0101               	movlb	1	; () banked
 41044   00A3DC  51BA               	movf	findEvent@nodeNumber& (0+255),w,b
 41045   00A3DE  19C0               	xorwf	findEvent@nn& (0+255),w,b
 41046   00A3E0  E10D               	bnz	l19483
 41047   00A3E2  51BB               	movf	(findEvent@nodeNumber+1)& (0+255),w,b
 41048   00A3E4  19C1               	xorwf	(findEvent@nn+1)& (0+255),w,b
 41049   00A3E6  A4D8               	btfss	status,2,c
 41050   00A3E8  D009               	goto	l19483
 41051                           
 41052                           ; BSR set to: 1
 41053   00A3EA  51BC               	movf	findEvent@eventNumber& (0+255),w,b
 41054   00A3EC  19C2               	xorwf	findEvent@en& (0+255),w,b
 41055   00A3EE  E106               	bnz	l19483
 41056   00A3F0  51BD               	movf	(findEvent@eventNumber+1)& (0+255),w,b
 41057   00A3F2  19C3               	xorwf	(findEvent@en+1)& (0+255),w,b
 41058   00A3F4  A4D8               	btfss	status,2,c
 41059   00A3F6  D002               	goto	l19483
 41060                           
 41061                           ; BSR set to: 1
 41062                           ;../../VLCBlib_PIC/event_teach_large.c: 1010:             return tableIndex;
 41063   00A3F8  51C6               	movf	findEvent@tableIndex& (0+255),w,b
 41064   00A3FA  0012               	return	
 41065   00A3FC                     l19483:
 41066                           
 41067                           ; BSR set to: 1
 41068                           ;../../VLCBlib_PIC/event_teach_large.c: 1012:     }
 41069   00A3FC  2BC5               	incf	findEvent@chainIdx& (0+255),f,b
 41070                           
 41071                           ; BSR set to: 1
 41072   00A3FE  0E13               	movlw	19
 41073   00A400  65C5               	cpfsgt	findEvent@chainIdx& (0+255),b
 41074   00A402  D7C7               	goto	l19465
 41075   00A404  D7D9               	goto	u19250
 41076   00A406                     __end_of_findEvent:
 41077                           	callstack 0
 41078                           
 41079 ;; *************** function _getNN *****************
 41080 ;; Defined at:
 41081 ;;		line 1220 in file "../../VLCBlib_PIC/event_teach_large.c"
 41082 ;; Parameters:    Size  Location     Type
 41083 ;;  tableIndex      1    wreg     unsigned char 
 41084 ;; Auto vars:     Size  Location     Type
 41085 ;;  tableIndex      1   66[BANK0 ] unsigned char 
 41086 ;;  lo              2   63[BANK0 ] unsigned short 
 41087 ;;  hi              2   61[BANK0 ] unsigned short 
 41088 ;;  f               1   65[BANK0 ] struct .
 41089 ;; Return value:  Size  Location     Type
 41090 ;;                  2   55[BANK0 ] unsigned short 
 41091 ;; Registers used:
 41092 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41093 ;; Tracked objects:
 41094 ;;		On entry : 0/0
 41095 ;;		On exit  : 0/0
 41096 ;;		Unchanged: 0/0
 41097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41098 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41099 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41100 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41101 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41102 ;;Total ram usage:       12 bytes
 41103 ;; Hardware stack levels used: 1
 41104 ;; Hardware stack levels required when called: 14
 41105 ;; This function calls:
 41106 ;;		_readNVM
 41107 ;; This function is called by:
 41108 ;;		_nerdCallback
 41109 ;;		_doNenrd
 41110 ;;		_reqevCallback
 41111 ;;		_findEvent
 41112 ;;		_rebuildHashtable
 41113 ;;		_sendProducedEvent
 41114 ;; This function uses a non-reentrant model
 41115 ;;
 41116                           
 41117                           	psect	text177
 41118   00937E                     __ptext177:
 41119                           	callstack 0
 41120   00937E                     _getNN:
 41121                           	callstack 13
 41122                           
 41123                           ; BSR set to: 1
 41124                           ;incstack = 0
 41125                           ;getNN@tableIndex stored from wreg
 41126   00937E  0100               	movlb	0	; () banked
 41127   009380  6FA2               	movwf	getNN@tableIndex& (0+255),b
 41128                           
 41129                           ;../../VLCBlib_PIC/event_teach_large.c: 1221:     uint16_t hi;;../../VLCBlib_PIC/event_t
      +                          each_large.c: 1222:     uint16_t lo;;../../VLCBlib_PIC/event_teach_large.c: 1223:     Ev
      +                          entTableFlags f;;../../VLCBlib_PIC/event_teach_large.c: 1225:     f.asByte = (uint8_t)re
      +                          adNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 41130   009382  0100               	movlb	0	; () banked
 41131   009384  51A2               	movf	getNN@tableIndex& (0+255),w,b
 41132   009386  6F99               	movwf	??_getNN& (0+255),b
 41133   009388  6B9A               	clrf	(??_getNN+1)& (0+255),b
 41134   00938A  3B99               	swapf	??_getNN& (0+255),f,b
 41135   00938C  3B9A               	swapf	(??_getNN+1)& (0+255),f,b
 41136   00938E  0EF0               	movlw	240
 41137   009390  179A               	andwf	(??_getNN+1)& (0+255),f,b
 41138   009392  5199               	movf	??_getNN& (0+255),w,b
 41139   009394  0B0F               	andlw	15
 41140   009396  139A               	iorwf	(??_getNN+1)& (0+255),f,b
 41141   009398  0EF0               	movlw	240
 41142   00939A  1799               	andwf	??_getNN& (0+255),f,b
 41143   00939C  0E80               	movlw	128
 41144   00939E  2599               	addwf	??_getNN& (0+255),w,b
 41145   0093A0  6F9B               	movwf	(??_getNN+2)& (0+255),b
 41146   0093A2  0EEF               	movlw	239
 41147   0093A4  219A               	addwfc	(??_getNN+1)& (0+255),w,b
 41148   0093A6  6F9C               	movwf	(??_getNN+3)& (0+255),b
 41149   0093A8  C09B  F091         	movff	??_getNN+2,readNVM@index
 41150   0093AC  C09C  F092         	movff	??_getNN+3,readNVM@index+1
 41151   0093B0  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41152   0093B2  0E01               	movlw	1
 41153   0093B4  ECD0  F059         	call	_readNVM
 41154   0093B8  0100               	movlb	0	; () banked
 41155   0093BA  5191               	movf	?_readNVM& (0+255),w,b
 41156   0093BC  6FA1               	movwf	getNN@f& (0+255),b
 41157                           
 41158                           ; BSR set to: 0
 41159                           ;../../VLCBlib_PIC/event_teach_large.c: 1226:     if (f.forceOwnNN) {
 41160   0093BE  ADA1               	btfss	getNN@f& (0+255),6,b
 41161   0093C0  D005               	goto	l18939
 41162                           
 41163                           ; BSR set to: 0
 41164                           ;../../VLCBlib_PIC/event_teach_large.c: 1227:         return nn.word;
 41165   0093C2  C0BD  F097         	movff	_nn,?_getNN
 41166   0093C6  C0BE  F098         	movff	_nn+1,?_getNN+1
 41167   0093CA  0012               	return	
 41168   0093CC                     l18939:
 41169                           
 41170                           ; BSR set to: 0
 41171                           ;../../VLCBlib_PIC/event_teach_large.c: 1229:     lo = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*tableIndex+2);
 41172   0093CC  51A2               	movf	getNN@tableIndex& (0+255),w,b
 41173   0093CE  0D10               	mullw	16
 41174   0093D0  CFF3 F099          	movff	prodl,??_getNN
 41175   0093D4  CFF4 F09A          	movff	prodh,??_getNN+1
 41176   0093D8  0E82               	movlw	130
 41177   0093DA  2599               	addwf	??_getNN& (0+255),w,b
 41178   0093DC  6F9B               	movwf	(??_getNN+2)& (0+255),b
 41179   0093DE  0EEF               	movlw	239
 41180   0093E0  219A               	addwfc	(??_getNN+1)& (0+255),w,b
 41181   0093E2  6F9C               	movwf	(??_getNN+3)& (0+255),b
 41182   0093E4  C09B  F091         	movff	??_getNN+2,readNVM@index
 41183   0093E8  C09C  F092         	movff	??_getNN+3,readNVM@index+1
 41184   0093EC  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41185   0093EE  0E01               	movlw	1
 41186   0093F0  ECD0  F059         	call	_readNVM
 41187   0093F4  0100               	movlb	0	; () banked
 41188   0093F6  5191               	movf	?_readNVM& (0+255),w,b
 41189   0093F8  6F9F               	movwf	getNN@lo& (0+255),b
 41190   0093FA  6BA0               	clrf	(getNN@lo+1)& (0+255),b
 41191                           
 41192                           ;../../VLCBlib_PIC/event_teach_large.c: 1230:     hi = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*tableIndex+2 +1);
 41193   0093FC  51A2               	movf	getNN@tableIndex& (0+255),w,b
 41194   0093FE  0D10               	mullw	16
 41195   009400  CFF3 F099          	movff	prodl,??_getNN
 41196   009404  CFF4 F09A          	movff	prodh,??_getNN+1
 41197   009408  0E83               	movlw	131
 41198   00940A  2599               	addwf	??_getNN& (0+255),w,b
 41199   00940C  6F9B               	movwf	(??_getNN+2)& (0+255),b
 41200   00940E  0EEF               	movlw	239
 41201   009410  219A               	addwfc	(??_getNN+1)& (0+255),w,b
 41202   009412  6F9C               	movwf	(??_getNN+3)& (0+255),b
 41203   009414  C09B  F091         	movff	??_getNN+2,readNVM@index
 41204   009418  C09C  F092         	movff	??_getNN+3,readNVM@index+1
 41205   00941C  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41206   00941E  0E01               	movlw	1
 41207   009420  ECD0  F059         	call	_readNVM
 41208   009424  0100               	movlb	0	; () banked
 41209   009426  5191               	movf	?_readNVM& (0+255),w,b
 41210   009428  6F9D               	movwf	getNN@hi& (0+255),b
 41211   00942A  6B9E               	clrf	(getNN@hi+1)& (0+255),b
 41212                           
 41213                           ; BSR set to: 0
 41214                           ;../../VLCBlib_PIC/event_teach_large.c: 1231:     return lo | (hi << 8);
 41215   00942C  519D               	movf	getNN@hi& (0+255),w,b
 41216   00942E  6F9A               	movwf	(??_getNN+1)& (0+255),b
 41217   009430  6B99               	clrf	??_getNN& (0+255),b
 41218   009432  519F               	movf	getNN@lo& (0+255),w,b
 41219   009434  1199               	iorwf	??_getNN& (0+255),w,b
 41220   009436  6F97               	movwf	?_getNN& (0+255),b
 41221   009438  51A0               	movf	(getNN@lo+1)& (0+255),w,b
 41222   00943A  119A               	iorwf	(??_getNN+1)& (0+255),w,b
 41223   00943C  6F98               	movwf	(?_getNN+1)& (0+255),b
 41224                           
 41225                           ; BSR set to: 0
 41226   00943E  0012               	return		;funcret
 41227   009440                     __end_of_getNN:
 41228                           	callstack 0
 41229                           
 41230 ;; *************** function _getHash *****************
 41231 ;; Defined at:
 41232 ;;		line 1314 in file "../../VLCBlib_PIC/event_teach_large.c"
 41233 ;; Parameters:    Size  Location     Type
 41234 ;;  nn              2   67[BANK0 ] unsigned short 
 41235 ;;  en              2   69[BANK0 ] unsigned short 
 41236 ;; Auto vars:     Size  Location     Type
 41237 ;;  hash            1   72[BANK0 ] unsigned char 
 41238 ;; Return value:  Size  Location     Type
 41239 ;;                  1    wreg      unsigned char 
 41240 ;; Registers used:
 41241 ;;		wreg, status,2, status,0, prodl, prodh
 41242 ;; Tracked objects:
 41243 ;;		On entry : 0/0
 41244 ;;		On exit  : 0/0
 41245 ;;		Unchanged: 0/0
 41246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41247 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41248 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41249 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41250 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41251 ;;Total ram usage:        6 bytes
 41252 ;; Hardware stack levels used: 1
 41253 ;; Hardware stack levels required when called: 12
 41254 ;; This function calls:
 41255 ;;		Nothing
 41256 ;; This function is called by:
 41257 ;;		_findEvent
 41258 ;;		_rebuildHashtable
 41259 ;; This function uses a non-reentrant model
 41260 ;;
 41261                           
 41262                           	psect	text178
 41263   00C428                     __ptext178:
 41264                           	callstack 0
 41265   00C428                     _getHash:
 41266                           	callstack 15
 41267                           
 41268                           ;../../VLCBlib_PIC/event_teach_large.c: 1315:     uint8_t hash;;../../VLCBlib_PIC/event_
      +                          teach_large.c: 1317:     hash = (uint8_t)(nn ^ (nn >> 8U));
 41269                           
 41270                           ; BSR set to: 0
 41271                           ;incstack = 0
 41272   00C428  0100               	movlb	0	; () banked
 41273   00C42A  51A4               	movf	(getHash@nn+1)& (0+255),w,b
 41274   00C42C  19A3               	xorwf	getHash@nn& (0+255),w,b
 41275   00C42E  6FA8               	movwf	getHash@hash& (0+255),b
 41276                           
 41277                           ; BSR set to: 0
 41278                           ;../../VLCBlib_PIC/event_teach_large.c: 1318:     hash = (uint8_t)(7U*hash + (en ^ (en>>
      +                          8U)));
 41279   00C430  51A6               	movf	(getHash@en+1)& (0+255),w,b
 41280   00C432  19A5               	xorwf	getHash@en& (0+255),w,b
 41281   00C434  6FA7               	movwf	??_getHash& (0+255),b
 41282   00C436  51A8               	movf	getHash@hash& (0+255),w,b
 41283   00C438  0D07               	mullw	7
 41284   00C43A  50F3               	movf	243,w,c
 41285   00C43C  25A7               	addwf	??_getHash& (0+255),w,b
 41286   00C43E  6FA8               	movwf	getHash@hash& (0+255),b
 41287                           
 41288                           ; BSR set to: 0
 41289                           ;../../VLCBlib_PIC/event_teach_large.c: 1320:     hash %= 32;
 41290   00C440  0E1F               	movlw	31
 41291   00C442  17A8               	andwf	getHash@hash& (0+255),f,b
 41292                           
 41293                           ; BSR set to: 0
 41294                           ;../../VLCBlib_PIC/event_teach_large.c: 1321:     return hash;
 41295   00C444  51A8               	movf	getHash@hash& (0+255),w,b
 41296                           
 41297                           ; BSR set to: 0
 41298   00C446  0012               	return		;funcret
 41299   00C448                     __end_of_getHash:
 41300                           	callstack 0
 41301                           
 41302 ;; *************** function _getEN *****************
 41303 ;; Defined at:
 41304 ;;		line 1241 in file "../../VLCBlib_PIC/event_teach_large.c"
 41305 ;; Parameters:    Size  Location     Type
 41306 ;;  tableIndex      1    wreg     unsigned char 
 41307 ;; Auto vars:     Size  Location     Type
 41308 ;;  tableIndex      1   65[BANK0 ] unsigned char 
 41309 ;;  lo              2   63[BANK0 ] unsigned short 
 41310 ;;  hi              2   61[BANK0 ] unsigned short 
 41311 ;; Return value:  Size  Location     Type
 41312 ;;                  2   55[BANK0 ] unsigned short 
 41313 ;; Registers used:
 41314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41315 ;; Tracked objects:
 41316 ;;		On entry : 0/0
 41317 ;;		On exit  : 0/0
 41318 ;;		Unchanged: 0/0
 41319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41320 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41321 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41322 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41323 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41324 ;;Total ram usage:       11 bytes
 41325 ;; Hardware stack levels used: 1
 41326 ;; Hardware stack levels required when called: 14
 41327 ;; This function calls:
 41328 ;;		_readNVM
 41329 ;; This function is called by:
 41330 ;;		_nerdCallback
 41331 ;;		_doNenrd
 41332 ;;		_reqevCallback
 41333 ;;		_findEvent
 41334 ;;		_rebuildHashtable
 41335 ;;		_sendProducedEvent
 41336 ;; This function uses a non-reentrant model
 41337 ;;
 41338                           
 41339                           	psect	text179
 41340   00AB36                     __ptext179:
 41341                           	callstack 0
 41342   00AB36                     _getEN:
 41343                           	callstack 13
 41344                           
 41345                           ; BSR set to: 0
 41346                           ;incstack = 0
 41347                           ;getEN@tableIndex stored from wreg
 41348   00AB36  0100               	movlb	0	; () banked
 41349   00AB38  6FA1               	movwf	getEN@tableIndex& (0+255),b
 41350                           
 41351                           ;../../VLCBlib_PIC/event_teach_large.c: 1242:     uint16_t hi;;../../VLCBlib_PIC/event_t
      +                          each_large.c: 1243:     uint16_t lo;;../../VLCBlib_PIC/event_teach_large.c: 1245:     lo
      +                           = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+4);
 41352   00AB3A  0100               	movlb	0	; () banked
 41353   00AB3C  51A1               	movf	getEN@tableIndex& (0+255),w,b
 41354   00AB3E  0D10               	mullw	16
 41355   00AB40  CFF3 F099          	movff	prodl,??_getEN
 41356   00AB44  CFF4 F09A          	movff	prodh,??_getEN+1
 41357   00AB48  0E84               	movlw	132
 41358   00AB4A  2599               	addwf	??_getEN& (0+255),w,b
 41359   00AB4C  6F9B               	movwf	(??_getEN+2)& (0+255),b
 41360   00AB4E  0EEF               	movlw	239
 41361   00AB50  219A               	addwfc	(??_getEN+1)& (0+255),w,b
 41362   00AB52  6F9C               	movwf	(??_getEN+3)& (0+255),b
 41363   00AB54  C09B  F091         	movff	??_getEN+2,readNVM@index
 41364   00AB58  C09C  F092         	movff	??_getEN+3,readNVM@index+1
 41365   00AB5C  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41366   00AB5E  0E01               	movlw	1
 41367   00AB60  ECD0  F059         	call	_readNVM
 41368   00AB64  0100               	movlb	0	; () banked
 41369   00AB66  5191               	movf	?_readNVM& (0+255),w,b
 41370   00AB68  6F9F               	movwf	getEN@lo& (0+255),b
 41371   00AB6A  6BA0               	clrf	(getEN@lo+1)& (0+255),b
 41372                           
 41373                           ;../../VLCBlib_PIC/event_teach_large.c: 1246:     hi = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*tableIndex+4 +1);
 41374   00AB6C  51A1               	movf	getEN@tableIndex& (0+255),w,b
 41375   00AB6E  0D10               	mullw	16
 41376   00AB70  CFF3 F099          	movff	prodl,??_getEN
 41377   00AB74  CFF4 F09A          	movff	prodh,??_getEN+1
 41378   00AB78  0E85               	movlw	133
 41379   00AB7A  2599               	addwf	??_getEN& (0+255),w,b
 41380   00AB7C  6F9B               	movwf	(??_getEN+2)& (0+255),b
 41381   00AB7E  0EEF               	movlw	239
 41382   00AB80  219A               	addwfc	(??_getEN+1)& (0+255),w,b
 41383   00AB82  6F9C               	movwf	(??_getEN+3)& (0+255),b
 41384   00AB84  C09B  F091         	movff	??_getEN+2,readNVM@index
 41385   00AB88  C09C  F092         	movff	??_getEN+3,readNVM@index+1
 41386   00AB8C  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41387   00AB8E  0E01               	movlw	1
 41388   00AB90  ECD0  F059         	call	_readNVM
 41389   00AB94  0100               	movlb	0	; () banked
 41390   00AB96  5191               	movf	?_readNVM& (0+255),w,b
 41391   00AB98  6F9D               	movwf	getEN@hi& (0+255),b
 41392   00AB9A  6B9E               	clrf	(getEN@hi+1)& (0+255),b
 41393                           
 41394                           ; BSR set to: 0
 41395                           ;../../VLCBlib_PIC/event_teach_large.c: 1247:     return lo | (hi << 8);
 41396   00AB9C  519D               	movf	getEN@hi& (0+255),w,b
 41397   00AB9E  6F9A               	movwf	(??_getEN+1)& (0+255),b
 41398   00ABA0  6B99               	clrf	??_getEN& (0+255),b
 41399   00ABA2  519F               	movf	getEN@lo& (0+255),w,b
 41400   00ABA4  1199               	iorwf	??_getEN& (0+255),w,b
 41401   00ABA6  6F97               	movwf	?_getEN& (0+255),b
 41402   00ABA8  51A0               	movf	(getEN@lo+1)& (0+255),w,b
 41403   00ABAA  119A               	iorwf	(??_getEN+1)& (0+255),w,b
 41404   00ABAC  6F98               	movwf	(?_getEN+1)& (0+255),b
 41405                           
 41406                           ; BSR set to: 0
 41407   00ABAE  0012               	return		;funcret
 41408   00ABB0                     __end_of_getEN:
 41409                           	callstack 0
 41410                           
 41411 ;; *************** function _configIO *****************
 41412 ;; Defined at:
 41413 ;;		line 558 in file "../main.c"
 41414 ;; Parameters:    Size  Location     Type
 41415 ;;  i               1    wreg     unsigned char 
 41416 ;; Auto vars:     Size  Location     Type
 41417 ;;  i               1    9[BANK1 ] unsigned char 
 41418 ;;  type            1    8[BANK1 ] unsigned char 
 41419 ;;  action          1    7[BANK1 ] unsigned char 
 41420 ;; Return value:  Size  Location     Type
 41421 ;;                  1    wreg      void 
 41422 ;; Registers used:
 41423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41424 ;; Tracked objects:
 41425 ;;		On entry : 0/0
 41426 ;;		On exit  : 0/0
 41427 ;;		Unchanged: 0/0
 41428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41430 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41431 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41432 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41433 ;;Total ram usage:        8 bytes
 41434 ;; Hardware stack levels used: 1
 41435 ;; Hardware stack levels required when called: 18
 41436 ;; This function calls:
 41437 ;;		_getNV
 41438 ;;		_readNVM
 41439 ;;		_setDigitalOutput
 41440 ;;		_writeNVM
 41441 ;; This function is called by:
 41442 ;;		_setup
 41443 ;;		_setType
 41444 ;; This function uses a non-reentrant model
 41445 ;;
 41446                           
 41447                           	psect	text180
 41448   004CA4                     __ptext180:
 41449                           	callstack 0
 41450   004CA4                     _configIO:
 41451                           	callstack 11
 41452                           
 41453                           ; BSR set to: 0
 41454                           ;incstack = 0
 41455                           ;configIO@i stored from wreg
 41456   004CA4  0101               	movlb	1	; () banked
 41457   004CA6  6FC3               	movwf	configIO@i& (0+255),b
 41458                           
 41459                           ;../main.c: 559:     uint8_t action;;../main.c: 560:     uint8_t type;;../main.c: 562:  
      +                             if (i >= 16) return;
 41460   004CA8  0E0F               	movlw	15
 41461   004CAA  0101               	movlb	1	; () banked
 41462   004CAC  65C3               	cpfsgt	configIO@i& (0+255),b
 41463   004CAE  D001               	goto	l19701
 41464   004CB0  0012               	return	
 41465   004CB2                     l19701:
 41466                           
 41467                           ; BSR set to: 1
 41468                           ;../main.c: 565:     type = (uint8_t)getNV((16 + 7*(i) + 0));
 41469   004CB2  51C3               	movf	configIO@i& (0+255),w,b
 41470   004CB4  0D07               	mullw	7
 41471   004CB6  50F3               	movf	243,w,c
 41472   004CB8  0F10               	addlw	16
 41473   004CBA  EC52  F05E         	call	_getNV
 41474   004CBE  0100               	movlb	0	; () banked
 41475   004CC0  518D               	movf	?_getNV& (0+255),w,b
 41476   004CC2  0101               	movlb	1	; () banked
 41477   004CC4  6FC2               	movwf	configIO@type& (0+255),b
 41478                           
 41479                           ;../main.c: 566:     switch (type) {
 41480   004CC6  D060               	goto	l19725
 41481   004CC8                     l19703:
 41482                           
 41483                           ; BSR set to: 1
 41484                           ;../main.c: 568:             if (getNV((16 + 7*(i) + 1)) & 0x04) {
 41485   004CC8  51C3               	movf	configIO@i& (0+255),w,b
 41486   004CCA  0D07               	mullw	7
 41487   004CCC  50F3               	movf	243,w,c
 41488   004CCE  0F11               	addlw	17
 41489   004CD0  EC52  F05E         	call	_getNV
 41490   004CD4  0100               	movlb	0	; () banked
 41491   004CD6  A58D               	btfss	?_getNV& (0+255),2,b
 41492   004CD8  D018               	goto	l19707
 41493                           
 41494                           ; BSR set to: 0
 41495                           ;../main.c: 569:                 setDigitalOutput(i, (uint8_t)readNVM(EEPROM_NVM_TYPE, (
      +                          eeprom_address_t)((eeprom_address_t)((0x3FF -8))-25)+i));
 41496   004CDA  0EDE               	movlw	222
 41497   004CDC  0101               	movlb	1	; () banked
 41498   004CDE  25C3               	addwf	configIO@i& (0+255),w,b
 41499   004CE0  6FBC               	movwf	??_configIO& (0+255),b
 41500   004CE2  6BBD               	clrf	(??_configIO+1)& (0+255),b
 41501   004CE4  0E03               	movlw	3
 41502   004CE6  23BD               	addwfc	(??_configIO+1)& (0+255),f,b
 41503   004CE8  C1BC  F091         	movff	??_configIO,readNVM@index
 41504   004CEC  C1BD  F092         	movff	??_configIO+1,readNVM@index+1
 41505   004CF0  0100               	movlb	0	; () banked
 41506   004CF2  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41507   004CF4  0E00               	movlw	0
 41508   004CF6  ECD0  F059         	call	_readNVM
 41509   004CFA  0100               	movlb	0	; () banked
 41510   004CFC  5191               	movf	?_readNVM& (0+255),w,b
 41511   004CFE  6F97               	movwf	setDigitalOutput@state& (0+255),b
 41512   004D00  0101               	movlb	1	; () banked
 41513   004D02  51C3               	movf	configIO@i& (0+255),w,b
 41514   004D04  EC4A  F052         	call	_setDigitalOutput
 41515                           
 41516                           ;../main.c: 570:             } else {
 41517   004D08  D122               	goto	l19759
 41518   004D0A                     l19707:
 41519                           
 41520                           ; BSR set to: 0
 41521                           ;../main.c: 571:                 action = (getNV((16 + 7*(i) + 1)) & 0x20) ? 1 : 2;
 41522   004D0A  0101               	movlb	1	; () banked
 41523   004D0C  51C3               	movf	configIO@i& (0+255),w,b
 41524   004D0E  0D07               	mullw	7
 41525   004D10  50F3               	movf	243,w,c
 41526   004D12  0F11               	addlw	17
 41527   004D14  EC52  F05E         	call	_getNV
 41528   004D18  0100               	movlb	0	; () banked
 41529   004D1A  BB8D               	btfsc	?_getNV& (0+255),5,b
 41530   004D1C  D005               	goto	l19711
 41531                           
 41532                           ; BSR set to: 0
 41533   004D1E  0E00               	movlw	0
 41534   004D20  0101               	movlb	1	; () banked
 41535   004D22  6FC0               	movwf	(_configIO$746+1)& (0+255),b
 41536   004D24  0E02               	movlw	2
 41537   004D26  D004               	goto	L24
 41538   004D28                     l19711:
 41539                           
 41540                           ; BSR set to: 0
 41541   004D28  0E00               	movlw	0
 41542   004D2A  0101               	movlb	1	; () banked
 41543   004D2C  6FC0               	movwf	(_configIO$746+1)& (0+255),b
 41544   004D2E  0E01               	movlw	1
 41545   004D30                     L24:
 41546   004D30  6FBF               	movwf	_configIO$746& (0+255),b
 41547                           
 41548                           ; BSR set to: 1
 41549   004D32  C1BF  F1C1         	movff	_configIO$746,configIO@action
 41550                           
 41551                           ; BSR set to: 1
 41552                           ;../main.c: 572:                 setDigitalOutput(i, action);
 41553   004D36  C1C1  F097         	movff	configIO@action,setDigitalOutput@state
 41554   004D3A  51C3               	movf	configIO@i& (0+255),w,b
 41555   004D3C  EC4A  F052         	call	_setDigitalOutput
 41556                           
 41557                           ;../main.c: 574:                 writeNVM(EEPROM_NVM_TYPE, (eeprom_address_t)(((eeprom_a
      +                          ddress_t)((0x3FF -8))-25)+i), action);
 41558   004D40  0EDE               	movlw	222
 41559   004D42  0101               	movlb	1	; () banked
 41560   004D44  25C3               	addwf	configIO@i& (0+255),w,b
 41561   004D46  6FBC               	movwf	??_configIO& (0+255),b
 41562   004D48  6BBD               	clrf	(??_configIO+1)& (0+255),b
 41563   004D4A  0E03               	movlw	3
 41564   004D4C  23BD               	addwfc	(??_configIO+1)& (0+255),f,b
 41565   004D4E  C1BC  F0A4         	movff	??_configIO,writeNVM@index
 41566   004D52  C1BD  F0A5         	movff	??_configIO+1,writeNVM@index+1
 41567   004D56  0100               	movlb	0	; () banked
 41568   004D58  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 41569   004D5A  C1C1  F0A7         	movff	configIO@action,writeNVM@value
 41570   004D5E  0E00               	movlw	0
 41571   004D60  EC60  F05C         	call	_writeNVM
 41572   004D64  D0F4               	goto	l19759
 41573   004D66                     l19719:
 41574                           
 41575                           ; BSR set to: 1
 41576                           ;../main.c: 583:             setDigitalOutput(i, getNV((16 + 7*(i) + 1)) & 0x10);
 41577   004D66  51C3               	movf	configIO@i& (0+255),w,b
 41578   004D68  0D07               	mullw	7
 41579   004D6A  50F3               	movf	243,w,c
 41580   004D6C  0F11               	addlw	17
 41581   004D6E  EC52  F05E         	call	_getNV
 41582   004D72  0100               	movlb	0	; () banked
 41583   004D74  518D               	movf	?_getNV& (0+255),w,b
 41584   004D76  0B10               	andlw	16
 41585   004D78  0101               	movlb	1	; () banked
 41586   004D7A  6FBE               	movwf	_configIO$8081& (0+255),b
 41587                           
 41588                           ; BSR set to: 1
 41589                           ;../main.c: 583:             setDigitalOutput(i, getNV((16 + 7*(i) + 1)) & 0x10);
 41590   004D7C  C1BE  F097         	movff	_configIO$8081,setDigitalOutput@state
 41591   004D80  51C3               	movf	configIO@i& (0+255),w,b
 41592   004D82  EC4A  F052         	call	_setDigitalOutput
 41593                           
 41594                           ;../main.c: 584:             break;
 41595   004D86  D0E3               	goto	l19759
 41596   004D88                     l19725:
 41597                           
 41598                           ; BSR set to: 1
 41599   004D88  51C2               	movf	configIO@type& (0+255),w,b
 41600                           
 41601                           ; Switch size 1, requested type "simple"
 41602                           ; Number of cases is 3, Range of values is 1 to 3
 41603                           ; switch strategies available:
 41604                           ; Name         Instructions Cycles
 41605                           ; simple_byte           10     6 (average)
 41606                           ;	Chosen strategy is simple_byte
 41607   004D8A  0A01               	xorlw	1	; case 1
 41608   004D8C  B4D8               	btfsc	status,2,c
 41609   004D8E  D79C               	goto	l19703
 41610   004D90  0A03               	xorlw	3	; case 2
 41611   004D92  B4D8               	btfsc	status,2,c
 41612   004D94  D7E8               	goto	l19719
 41613   004D96  0A01               	xorlw	1	; case 3
 41614   004D98  B4D8               	btfsc	status,2,c
 41615   004D9A  D7E5               	goto	l19719
 41616   004D9C  D0D8               	goto	l19759
 41617   004D9E                     l19727:
 41618                           
 41619                           ; BSR set to: 1
 41620                           ;../main.c: 598:             if ((type == 0) || (type == 5) || (type == 6)) {
 41621   004D9E  51C2               	movf	configIO@type& (0+255),w,b
 41622   004DA0  B4D8               	btfsc	status,2,c
 41623   004DA2  D008               	goto	u19630
 41624                           
 41625                           ; BSR set to: 1
 41626   004DA4  0E05               	movlw	5
 41627   004DA6  19C2               	xorwf	configIO@type& (0+255),w,b
 41628   004DA8  B4D8               	btfsc	status,2,c
 41629   004DAA  D004               	goto	u19630
 41630                           
 41631                           ; BSR set to: 1
 41632   004DAC  0E06               	movlw	6
 41633   004DAE  19C2               	xorwf	configIO@type& (0+255),w,b
 41634   004DB0  A4D8               	btfss	status,2,c
 41635   004DB2  D01E               	goto	l19735
 41636   004DB4                     u19630:
 41637                           
 41638                           ; BSR set to: 1
 41639                           ;../main.c: 599:                 TRISA |= (1 << configs[i].no);
 41640   004DB4  51C3               	movf	configIO@i& (0+255),w,b
 41641   004DB6  0D04               	mullw	4
 41642   004DB8  0E02               	movlw	2
 41643   004DBA  26F3               	addwf	243,f,c
 41644   004DBC  0E00               	movlw	0
 41645   004DBE  22F4               	addwfc	244,f,c
 41646   004DC0  0E29               	movlw	low _configs
 41647   004DC2  24F3               	addwf	243,w,c
 41648   004DC4  6EF6               	movwf	tblptrl,c
 41649   004DC6  0EEE               	movlw	high _configs
 41650   004DC8  20F4               	addwfc	244,w,c
 41651   004DCA  6EF7               	movwf	tblptrh,c
 41652   004DCC                     	if	1	;There are 3 active tblptr bytes
 41653   004DCC  6AF8               	clrf	tblptru,c
 41654   004DCE  0E00               	movlw	low (__mediumconst shr (0+16))
 41655   004DD0  22F8               	addwfc	tblptru,f,c
 41656   004DD2                     	endif
 41657   004DD2  0008               	tblrd		*
 41658   004DD4  CFF5 F1BC          	movff	tablat,??_configIO
 41659   004DD8  0E01               	movlw	1
 41660   004DDA  6FBD               	movwf	(??_configIO+1)& (0+255),b
 41661   004DDC  2BBC               	incf	??_configIO& (0+255),f,b
 41662   004DDE  D002               	goto	u19644
 41663   004DE0                     u19645:
 41664   004DE0  90D8               	bcf	status,0,c
 41665   004DE2  37BD               	rlcf	(??_configIO+1)& (0+255),f,b
 41666   004DE4                     u19644:
 41667   004DE4  2FBC               	decfsz	??_configIO& (0+255),f,b
 41668   004DE6  D7FC               	goto	u19645
 41669   004DE8  0101               	movlb	1	; () banked
 41670   004DEA  51BD               	movf	(??_configIO+1)& (0+255),w,b
 41671   004DEC  1292               	iorwf	146,f,c	;volatile
 41672                           
 41673                           ;../main.c: 600:             } else {
 41674   004DEE  0012               	return	
 41675   004DF0                     l19735:
 41676                           
 41677                           ; BSR set to: 1
 41678                           ;../main.c: 601:                 TRISA &= ~(1 << configs[i].no);
 41679   004DF0  51C3               	movf	configIO@i& (0+255),w,b
 41680   004DF2  0D04               	mullw	4
 41681   004DF4  0E02               	movlw	2
 41682   004DF6  26F3               	addwf	243,f,c
 41683   004DF8  0E00               	movlw	0
 41684   004DFA  22F4               	addwfc	244,f,c
 41685   004DFC  0E29               	movlw	low _configs
 41686   004DFE  24F3               	addwf	243,w,c
 41687   004E00  6EF6               	movwf	tblptrl,c
 41688   004E02  0EEE               	movlw	high _configs
 41689   004E04  20F4               	addwfc	244,w,c
 41690   004E06  6EF7               	movwf	tblptrh,c
 41691   004E08                     	if	1	;There are 3 active tblptr bytes
 41692   004E08  6AF8               	clrf	tblptru,c
 41693   004E0A  0E00               	movlw	low (__mediumconst shr (0+16))
 41694   004E0C  22F8               	addwfc	tblptru,f,c
 41695   004E0E                     	endif
 41696   004E0E  0008               	tblrd		*
 41697   004E10  CFF5 F1BC          	movff	tablat,??_configIO
 41698   004E14  0E01               	movlw	1
 41699   004E16  6FBD               	movwf	(??_configIO+1)& (0+255),b
 41700   004E18  2BBC               	incf	??_configIO& (0+255),f,b
 41701   004E1A  D002               	goto	u19654
 41702   004E1C                     u19655:
 41703   004E1C  90D8               	bcf	status,0,c
 41704   004E1E  37BD               	rlcf	(??_configIO+1)& (0+255),f,b
 41705   004E20                     u19654:
 41706   004E20  2FBC               	decfsz	??_configIO& (0+255),f,b
 41707   004E22  D7FC               	goto	u19655
 41708   004E24  0101               	movlb	1	; () banked
 41709   004E26  51BD               	movf	(??_configIO+1)& (0+255),w,b
 41710   004E28  0AFF               	xorlw	255
 41711   004E2A  1692               	andwf	146,f,c	;volatile
 41712   004E2C  0012               	return	
 41713   004E2E                     l19737:
 41714                           
 41715                           ; BSR set to: 1
 41716                           ;../main.c: 605:             if ((type == 0) || (type == 5) || (type == 6)) {
 41717   004E2E  51C2               	movf	configIO@type& (0+255),w,b
 41718   004E30  B4D8               	btfsc	status,2,c
 41719   004E32  D008               	goto	u19680
 41720                           
 41721                           ; BSR set to: 1
 41722   004E34  0E05               	movlw	5
 41723   004E36  19C2               	xorwf	configIO@type& (0+255),w,b
 41724   004E38  B4D8               	btfsc	status,2,c
 41725   004E3A  D004               	goto	u19680
 41726                           
 41727                           ; BSR set to: 1
 41728   004E3C  0E06               	movlw	6
 41729   004E3E  19C2               	xorwf	configIO@type& (0+255),w,b
 41730   004E40  A4D8               	btfss	status,2,c
 41731   004E42  D01E               	goto	l19745
 41732   004E44                     u19680:
 41733                           
 41734                           ; BSR set to: 1
 41735                           ;../main.c: 606:                 TRISB |= (1 << configs[i].no);
 41736   004E44  51C3               	movf	configIO@i& (0+255),w,b
 41737   004E46  0D04               	mullw	4
 41738   004E48  0E02               	movlw	2
 41739   004E4A  26F3               	addwf	243,f,c
 41740   004E4C  0E00               	movlw	0
 41741   004E4E  22F4               	addwfc	244,f,c
 41742   004E50  0E29               	movlw	low _configs
 41743   004E52  24F3               	addwf	243,w,c
 41744   004E54  6EF6               	movwf	tblptrl,c
 41745   004E56  0EEE               	movlw	high _configs
 41746   004E58  20F4               	addwfc	244,w,c
 41747   004E5A  6EF7               	movwf	tblptrh,c
 41748   004E5C                     	if	1	;There are 3 active tblptr bytes
 41749   004E5C  6AF8               	clrf	tblptru,c
 41750   004E5E  0E00               	movlw	low (__mediumconst shr (0+16))
 41751   004E60  22F8               	addwfc	tblptru,f,c
 41752   004E62                     	endif
 41753   004E62  0008               	tblrd		*
 41754   004E64  CFF5 F1BC          	movff	tablat,??_configIO
 41755   004E68  0E01               	movlw	1
 41756   004E6A  6FBD               	movwf	(??_configIO+1)& (0+255),b
 41757   004E6C  2BBC               	incf	??_configIO& (0+255),f,b
 41758   004E6E  D002               	goto	u19694
 41759   004E70                     u19695:
 41760   004E70  90D8               	bcf	status,0,c
 41761   004E72  37BD               	rlcf	(??_configIO+1)& (0+255),f,b
 41762   004E74                     u19694:
 41763   004E74  2FBC               	decfsz	??_configIO& (0+255),f,b
 41764   004E76  D7FC               	goto	u19695
 41765   004E78  0101               	movlb	1	; () banked
 41766   004E7A  51BD               	movf	(??_configIO+1)& (0+255),w,b
 41767   004E7C  1293               	iorwf	147,f,c	;volatile
 41768                           
 41769                           ;../main.c: 607:             } else {
 41770   004E7E  0012               	return	
 41771   004E80                     l19745:
 41772                           
 41773                           ; BSR set to: 1
 41774                           ;../main.c: 608:                 TRISB &= ~(1 << configs[i].no);
 41775   004E80  51C3               	movf	configIO@i& (0+255),w,b
 41776   004E82  0D04               	mullw	4
 41777   004E84  0E02               	movlw	2
 41778   004E86  26F3               	addwf	243,f,c
 41779   004E88  0E00               	movlw	0
 41780   004E8A  22F4               	addwfc	244,f,c
 41781   004E8C  0E29               	movlw	low _configs
 41782   004E8E  24F3               	addwf	243,w,c
 41783   004E90  6EF6               	movwf	tblptrl,c
 41784   004E92  0EEE               	movlw	high _configs
 41785   004E94  20F4               	addwfc	244,w,c
 41786   004E96  6EF7               	movwf	tblptrh,c
 41787   004E98                     	if	1	;There are 3 active tblptr bytes
 41788   004E98  6AF8               	clrf	tblptru,c
 41789   004E9A  0E00               	movlw	low (__mediumconst shr (0+16))
 41790   004E9C  22F8               	addwfc	tblptru,f,c
 41791   004E9E                     	endif
 41792   004E9E  0008               	tblrd		*
 41793   004EA0  CFF5 F1BC          	movff	tablat,??_configIO
 41794   004EA4  0E01               	movlw	1
 41795   004EA6  6FBD               	movwf	(??_configIO+1)& (0+255),b
 41796   004EA8  2BBC               	incf	??_configIO& (0+255),f,b
 41797   004EAA  D002               	goto	u19704
 41798   004EAC                     u19705:
 41799   004EAC  90D8               	bcf	status,0,c
 41800   004EAE  37BD               	rlcf	(??_configIO+1)& (0+255),f,b
 41801   004EB0                     u19704:
 41802   004EB0  2FBC               	decfsz	??_configIO& (0+255),f,b
 41803   004EB2  D7FC               	goto	u19705
 41804   004EB4  0101               	movlb	1	; () banked
 41805   004EB6  51BD               	movf	(??_configIO+1)& (0+255),w,b
 41806   004EB8  0AFF               	xorlw	255
 41807   004EBA  1693               	andwf	147,f,c	;volatile
 41808   004EBC  0012               	return	
 41809   004EBE                     l19747:
 41810                           
 41811                           ; BSR set to: 1
 41812                           ;../main.c: 612:             if ((type == 0) || (type == 5) || (type == 6)) {
 41813   004EBE  51C2               	movf	configIO@type& (0+255),w,b
 41814   004EC0  B4D8               	btfsc	status,2,c
 41815   004EC2  D008               	goto	u19730
 41816                           
 41817                           ; BSR set to: 1
 41818   004EC4  0E05               	movlw	5
 41819   004EC6  19C2               	xorwf	configIO@type& (0+255),w,b
 41820   004EC8  B4D8               	btfsc	status,2,c
 41821   004ECA  D004               	goto	u19730
 41822                           
 41823                           ; BSR set to: 1
 41824   004ECC  0E06               	movlw	6
 41825   004ECE  19C2               	xorwf	configIO@type& (0+255),w,b
 41826   004ED0  A4D8               	btfss	status,2,c
 41827   004ED2  D01E               	goto	l19755
 41828   004ED4                     u19730:
 41829                           
 41830                           ; BSR set to: 1
 41831                           ;../main.c: 613:                 TRISC |= (1 << configs[i].no);
 41832   004ED4  51C3               	movf	configIO@i& (0+255),w,b
 41833   004ED6  0D04               	mullw	4
 41834   004ED8  0E02               	movlw	2
 41835   004EDA  26F3               	addwf	243,f,c
 41836   004EDC  0E00               	movlw	0
 41837   004EDE  22F4               	addwfc	244,f,c
 41838   004EE0  0E29               	movlw	low _configs
 41839   004EE2  24F3               	addwf	243,w,c
 41840   004EE4  6EF6               	movwf	tblptrl,c
 41841   004EE6  0EEE               	movlw	high _configs
 41842   004EE8  20F4               	addwfc	244,w,c
 41843   004EEA  6EF7               	movwf	tblptrh,c
 41844   004EEC                     	if	1	;There are 3 active tblptr bytes
 41845   004EEC  6AF8               	clrf	tblptru,c
 41846   004EEE  0E00               	movlw	low (__mediumconst shr (0+16))
 41847   004EF0  22F8               	addwfc	tblptru,f,c
 41848   004EF2                     	endif
 41849   004EF2  0008               	tblrd		*
 41850   004EF4  CFF5 F1BC          	movff	tablat,??_configIO
 41851   004EF8  0E01               	movlw	1
 41852   004EFA  6FBD               	movwf	(??_configIO+1)& (0+255),b
 41853   004EFC  2BBC               	incf	??_configIO& (0+255),f,b
 41854   004EFE  D002               	goto	u19744
 41855   004F00                     u19745:
 41856   004F00  90D8               	bcf	status,0,c
 41857   004F02  37BD               	rlcf	(??_configIO+1)& (0+255),f,b
 41858   004F04                     u19744:
 41859   004F04  2FBC               	decfsz	??_configIO& (0+255),f,b
 41860   004F06  D7FC               	goto	u19745
 41861   004F08  0101               	movlb	1	; () banked
 41862   004F0A  51BD               	movf	(??_configIO+1)& (0+255),w,b
 41863   004F0C  1294               	iorwf	148,f,c	;volatile
 41864                           
 41865                           ;../main.c: 614:             } else {
 41866   004F0E  0012               	return	
 41867   004F10                     l19755:
 41868                           
 41869                           ; BSR set to: 1
 41870                           ;../main.c: 615:                 TRISC &= ~(1 << configs[i].no);
 41871   004F10  51C3               	movf	configIO@i& (0+255),w,b
 41872   004F12  0D04               	mullw	4
 41873   004F14  0E02               	movlw	2
 41874   004F16  26F3               	addwf	243,f,c
 41875   004F18  0E00               	movlw	0
 41876   004F1A  22F4               	addwfc	244,f,c
 41877   004F1C  0E29               	movlw	low _configs
 41878   004F1E  24F3               	addwf	243,w,c
 41879   004F20  6EF6               	movwf	tblptrl,c
 41880   004F22  0EEE               	movlw	high _configs
 41881   004F24  20F4               	addwfc	244,w,c
 41882   004F26  6EF7               	movwf	tblptrh,c
 41883   004F28                     	if	1	;There are 3 active tblptr bytes
 41884   004F28  6AF8               	clrf	tblptru,c
 41885   004F2A  0E00               	movlw	low (__mediumconst shr (0+16))
 41886   004F2C  22F8               	addwfc	tblptru,f,c
 41887   004F2E                     	endif
 41888   004F2E  0008               	tblrd		*
 41889   004F30  CFF5 F1BC          	movff	tablat,??_configIO
 41890   004F34  0E01               	movlw	1
 41891   004F36  6FBD               	movwf	(??_configIO+1)& (0+255),b
 41892   004F38  2BBC               	incf	??_configIO& (0+255),f,b
 41893   004F3A  D002               	goto	u19754
 41894   004F3C                     u19755:
 41895   004F3C  90D8               	bcf	status,0,c
 41896   004F3E  37BD               	rlcf	(??_configIO+1)& (0+255),f,b
 41897   004F40                     u19754:
 41898   004F40  2FBC               	decfsz	??_configIO& (0+255),f,b
 41899   004F42  D7FC               	goto	u19755
 41900   004F44  0101               	movlb	1	; () banked
 41901   004F46  51BD               	movf	(??_configIO+1)& (0+255),w,b
 41902   004F48  0AFF               	xorlw	255
 41903   004F4A  1694               	andwf	148,f,c	;volatile
 41904   004F4C  0012               	return	
 41905   004F4E                     l19759:
 41906   004F4E  0101               	movlb	1	; () banked
 41907   004F50  51C3               	movf	configIO@i& (0+255),w,b
 41908   004F52  0D04               	mullw	4
 41909   004F54  0E01               	movlw	1
 41910   004F56  26F3               	addwf	243,f,c
 41911   004F58  0E00               	movlw	0
 41912   004F5A  22F4               	addwfc	244,f,c
 41913   004F5C  0E29               	movlw	low _configs
 41914   004F5E  24F3               	addwf	243,w,c
 41915   004F60  6EF6               	movwf	tblptrl,c
 41916   004F62  0EEE               	movlw	high _configs
 41917   004F64  20F4               	addwfc	244,w,c
 41918   004F66  6EF7               	movwf	tblptrh,c
 41919   004F68                     	if	1	;There are 3 active tblptr bytes
 41920   004F68  6AF8               	clrf	tblptru,c
 41921   004F6A  0E00               	movlw	low (__mediumconst shr (0+16))
 41922   004F6C  22F8               	addwfc	tblptru,f,c
 41923   004F6E                     	endif
 41924   004F6E  0008               	tblrd		*
 41925   004F70  50F5               	movf	tablat,w,c
 41926                           
 41927                           ; Switch size 1, requested type "simple"
 41928                           ; Number of cases is 3, Range of values is 65 to 67
 41929                           ; switch strategies available:
 41930                           ; Name         Instructions Cycles
 41931                           ; simple_byte           10     6 (average)
 41932                           ;	Chosen strategy is simple_byte
 41933   004F72  0A41               	xorlw	65	; case 65
 41934   004F74  B4D8               	btfsc	status,2,c
 41935   004F76  D713               	goto	l19727
 41936   004F78  0A03               	xorlw	3	; case 66
 41937   004F7A  B4D8               	btfsc	status,2,c
 41938   004F7C  D758               	goto	l19737
 41939   004F7E  0A01               	xorlw	1	; case 67
 41940   004F80  A4D8               	btfss	status,2,c
 41941   004F82  0012               	return	
 41942   004F84  D79C               	goto	l19747
 41943   004F86                     __end_of_configIO:
 41944                           	callstack 0
 41945                           
 41946 ;; *************** function _writeNVM *****************
 41947 ;; Defined at:
 41948 ;;		line 533 in file "../../VLCBlib_PIC/nvm.c"
 41949 ;; Parameters:    Size  Location     Type
 41950 ;;  type            1    wreg     enum E12732
 41951 ;;  index           3   68[BANK0 ] unsigned um
 41952 ;;  value           1   71[BANK0 ] unsigned char 
 41953 ;; Auto vars:     Size  Location     Type
 41954 ;;  type            1   72[BANK0 ] enum E12732
 41955 ;; Return value:  Size  Location     Type
 41956 ;;                  1    wreg      unsigned char 
 41957 ;; Registers used:
 41958 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41959 ;; Tracked objects:
 41960 ;;		On entry : 0/0
 41961 ;;		On exit  : 0/0
 41962 ;;		Unchanged: 0/0
 41963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41964 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41965 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41966 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41967 ;;      Totals:         0       5       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41968 ;;Total ram usage:        7 bytes
 41969 ;; Hardware stack levels used: 1
 41970 ;; Hardware stack levels required when called: 17
 41971 ;; This function calls:
 41972 ;;		_EEPROM_Write
 41973 ;;		_FLASH_Write
 41974 ;; This function is called by:
 41975 ;;		_configIO
 41976 ;;		_startDigitalOutput
 41977 ;;		_inputScan
 41978 ;;		_pollServos
 41979 ;;		_bootProcessMessage
 41980 ;;		_mnsFactoryReset
 41981 ;;		_mnsProcessMessage
 41982 ;;		_mnsPoll
 41983 ;;		_nvFactoryReset
 41984 ;;		_saveNV
 41985 ;;		_setNV
 41986 ;;		_factoryReset
 41987 ;;		_canFactoryReset
 41988 ;;		_setNewCanId
 41989 ;;		_clearAllEvents
 41990 ;;		_removeTableEntry
 41991 ;;		_addEvent
 41992 ;;		_writeEv
 41993 ;; This function uses a non-reentrant model
 41994 ;;
 41995                           
 41996                           	psect	text181
 41997   00B8C0                     __ptext181:
 41998                           	callstack 0
 41999   00B8C0                     _writeNVM:
 42000                           	callstack 11
 42001                           
 42002                           ; BSR set to: 1
 42003                           ;incstack = 0
 42004                           ;writeNVM@type stored from wreg
 42005   00B8C0  0100               	movlb	0	; () banked
 42006   00B8C2  6FA8               	movwf	writeNVM@type& (0+255),b
 42007                           
 42008                           ;../../VLCBlib_PIC/nvm.c: 534:     switch(type) {
 42009   00B8C4  D012               	goto	l18973
 42010   00B8C6                     l18963:
 42011                           
 42012                           ; BSR set to: 1
 42013                           ;../../VLCBlib_PIC/nvm.c: 536:             return EEPROM_Write((eeprom_address_t)index, 
      +                          value);;	Return value of _writeNVM is never used
 42014   00B8C6  C0A4  F08F         	movff	writeNVM@index,EEPROM_Write@index
 42015   00B8CA  C0A5  F090         	movff	writeNVM@index+1,EEPROM_Write@index+1
 42016   00B8CE  C0A7  F091         	movff	writeNVM@value,EEPROM_Write@value
 42017   00B8D2  EC42  F058         	call	_EEPROM_Write	;wreg free
 42018   00B8D6  0012               	return	
 42019   00B8D8                     l18967:
 42020                           
 42021                           ; BSR set to: 1
 42022                           ;../../VLCBlib_PIC/nvm.c: 538:             return FLASH_Write((flash_address_t)index, va
      +                          lue);;	Return value of _writeNVM is never used
 42023   00B8D8  C0A4  F090         	movff	writeNVM@index,FLASH_Write@index
 42024   00B8DC  C0A5  F091         	movff	writeNVM@index+1,FLASH_Write@index+1
 42025   00B8E0  C0A7  F092         	movff	writeNVM@value,FLASH_Write@value
 42026   00B8E4  EC63  F047         	call	_FLASH_Write	;wreg free
 42027   00B8E8  0012               	return	
 42028   00B8EA                     l18973:
 42029   00B8EA  0100               	movlb	0	; () banked
 42030   00B8EC  51A8               	movf	writeNVM@type& (0+255),w,b
 42031   00B8EE  0101               	movlb	1	; () banked
 42032   00B8F0  6FBA               	movwf	??_writeNVM& (0+255),b
 42033   00B8F2  6BBB               	clrf	(??_writeNVM+1)& (0+255),b
 42034                           
 42035                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 42036                           ; Switch size 1, requested type "simple"
 42037                           ; Number of cases is 1, Range of values is 0 to 0
 42038                           ; switch strategies available:
 42039                           ; Name         Instructions Cycles
 42040                           ; simple_byte            4     3 (average)
 42041                           ;	Chosen strategy is simple_byte
 42042   00B8F4  51BB               	movf	(??_writeNVM+1)& (0+255),w,b
 42043   00B8F6  0A00               	xorlw	0	; case 0
 42044   00B8F8  A4D8               	btfss	status,2,c
 42045   00B8FA  0012               	return	
 42046                           
 42047                           ; BSR set to: 1
 42048                           ; Switch size 1, requested type "simple"
 42049                           ; Number of cases is 2, Range of values is 0 to 1
 42050                           ; switch strategies available:
 42051                           ; Name         Instructions Cycles
 42052                           ; simple_byte            7     4 (average)
 42053                           ;	Chosen strategy is simple_byte
 42054   00B8FC  51BA               	movf	??_writeNVM& (0+255),w,b
 42055   00B8FE  0A00               	xorlw	0	; case 0
 42056   00B900  B4D8               	btfsc	status,2,c
 42057   00B902  D7E1               	goto	l18963
 42058   00B904  0A01               	xorlw	1	; case 1
 42059   00B906  A4D8               	btfss	status,2,c
 42060   00B908  0012               	return	
 42061   00B90A  D7E6               	goto	l18967
 42062   00B90C                     __end_of_writeNVM:
 42063                           	callstack 0
 42064                           
 42065 ;; *************** function _FLASH_Write *****************
 42066 ;; Defined at:
 42067 ;;		line 487 in file "../../VLCBlib_PIC/nvm.c"
 42068 ;; Parameters:    Size  Location     Type
 42069 ;;  index           2   48[BANK0 ] unsigned short 
 42070 ;;  value           1   50[BANK0 ] unsigned char 
 42071 ;; Auto vars:     Size  Location     Type
 42072 ;;  oldValue        1    0        unsigned char 
 42073 ;; Return value:  Size  Location     Type
 42074 ;;                  1    wreg      unsigned char 
 42075 ;; Registers used:
 42076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 42077 ;; Tracked objects:
 42078 ;;		On entry : 0/0
 42079 ;;		On exit  : 0/0
 42080 ;;		Unchanged: 0/0
 42081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42082 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42084 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42085 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42086 ;;Total ram usage:        7 bytes
 42087 ;; Hardware stack levels used: 1
 42088 ;; Hardware stack levels required when called: 16
 42089 ;; This function calls:
 42090 ;;		_eraseFlashBlock
 42091 ;;		_flushFlashBlock
 42092 ;;		_loadFlashBlock
 42093 ;; This function is called by:
 42094 ;;		_writeNVM
 42095 ;; This function uses a non-reentrant model
 42096 ;;
 42097                           
 42098                           	psect	text182
 42099   008EC6                     __ptext182:
 42100                           	callstack 0
 42101   008EC6                     _FLASH_Write:
 42102                           	callstack 11
 42103                           
 42104                           ;../../VLCBlib_PIC/nvm.c: 488:     uint8_t oldValue;;../../VLCBlib_PIC/nvm.c: 503:     i
      +                          f ((index&(~((flash_address_t)64 -1))) != flashBlock) {
 42105                           
 42106                           ;incstack = 0
 42107   008EC6  0EC0               	movlw	192
 42108   008EC8  0100               	movlb	0	; () banked
 42109   008ECA  1590               	andwf	FLASH_Write@index& (0+255),w,b
 42110   008ECC  6F93               	movwf	??_FLASH_Write& (0+255),b
 42111   008ECE  0EFF               	movlw	255
 42112   008ED0  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 42113   008ED2  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 42114   008ED4  51D1               	movf	_flashBlock& (0+255),w,b
 42115   008ED6  1993               	xorwf	??_FLASH_Write& (0+255),w,b
 42116   008ED8  E104               	bnz	u18520
 42117   008EDA  51D2               	movf	(_flashBlock+1)& (0+255),w,b
 42118   008EDC  1994               	xorwf	(??_FLASH_Write+1)& (0+255),w,b
 42119   008EDE  B4D8               	btfsc	status,2,c
 42120   008EE0  D015               	goto	l18921
 42121   008EE2                     u18520:
 42122                           
 42123                           ; BSR set to: 0
 42124                           ;../../VLCBlib_PIC/nvm.c: 504:         if (flashBlock != 0) {
 42125   008EE2  51D1               	movf	_flashBlock& (0+255),w,b
 42126   008EE4  11D2               	iorwf	(_flashBlock+1)& (0+255),w,b
 42127   008EE6  B4D8               	btfsc	status,2,c
 42128   008EE8  D008               	goto	l18917
 42129                           
 42130                           ; BSR set to: 0
 42131                           ;../../VLCBlib_PIC/nvm.c: 506:             if (flashFlags.eraseNeeded) {
 42132   008EEA  A3C2               	btfss	_flashFlags& (0+255),1,b
 42133   008EEC  D004               	goto	l18915
 42134                           
 42135                           ; BSR set to: 0
 42136                           ;../../VLCBlib_PIC/nvm.c: 507:                 eraseFlashBlock();
 42137   008EEE  EC86  F05C         	call	_eraseFlashBlock	;wreg free
 42138                           
 42139                           ;../../VLCBlib_PIC/nvm.c: 508:                 flashFlags.eraseNeeded = 0;
 42140   008EF2  0100               	movlb	0	; () banked
 42141   008EF4  93C2               	bcf	_flashFlags& (0+255),1,b
 42142   008EF6                     l18915:
 42143                           
 42144                           ; BSR set to: 0
 42145                           ;../../VLCBlib_PIC/nvm.c: 511:             flushFlashBlock();
 42146   008EF6  EC5F  F053         	call	_flushFlashBlock	;wreg free
 42147   008EFA                     l18917:
 42148                           
 42149                           ;../../VLCBlib_PIC/nvm.c: 515:         flashBlock = (index&(~((flash_address_t)64 -1)));
 42150   008EFA  0EC0               	movlw	192
 42151   008EFC  0100               	movlb	0	; () banked
 42152   008EFE  1590               	andwf	FLASH_Write@index& (0+255),w,b
 42153   008F00  6FD1               	movwf	_flashBlock& (0+255),b
 42154   008F02  0EFF               	movlw	255
 42155   008F04  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 42156   008F06  6FD2               	movwf	(_flashBlock+1)& (0+255),b
 42157                           
 42158                           ; BSR set to: 0
 42159                           ;../../VLCBlib_PIC/nvm.c: 516:         loadFlashBlock();
 42160   008F08  EC41  F05D         	call	_loadFlashBlock	;wreg free
 42161   008F0C                     l18921:
 42162                           
 42163                           ;../../VLCBlib_PIC/nvm.c: 518:     flashFlags.eraseNeeded |= (value & ~flashBuffer[(inde
      +                          x&(64 -1))])?1:0;
 42164   008F0C  0E3F               	movlw	63
 42165   008F0E  0100               	movlb	0	; () banked
 42166   008F10  1590               	andwf	FLASH_Write@index& (0+255),w,b
 42167   008F12  6F93               	movwf	??_FLASH_Write& (0+255),b
 42168   008F14  0E00               	movlw	0
 42169   008F16  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 42170   008F18  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 42171   008F1A  0E48               	movlw	low _flashBuffer
 42172   008F1C  2593               	addwf	??_FLASH_Write& (0+255),w,b
 42173   008F1E  6ED9               	movwf	fsr2l,c
 42174   008F20  0E03               	movlw	high _flashBuffer
 42175   008F22  2194               	addwfc	(??_FLASH_Write+1)& (0+255),w,b
 42176   008F24  6EDA               	movwf	fsr2h,c
 42177   008F26  50DF               	movf	indf2,w,c
 42178   008F28  0AFF               	xorlw	255
 42179   008F2A  1592               	andwf	FLASH_Write@value& (0+255),w,b
 42180   008F2C  0900               	iorlw	0
 42181   008F2E  B4D8               	btfsc	status,2,c
 42182   008F30  D003               	goto	u18550
 42183   008F32  6B95               	clrf	(??_FLASH_Write+2)& (0+255),b
 42184   008F34  2B95               	incf	(??_FLASH_Write+2)& (0+255),f,b
 42185   008F36  D002               	goto	u18568
 42186   008F38                     u18550:
 42187   008F38  0100               	movlb	0	; () banked
 42188   008F3A  6B95               	clrf	(??_FLASH_Write+2)& (0+255),b
 42189   008F3C                     u18568:
 42190   008F3C  31C2               	rrcf	_flashFlags& (0+255),w,b
 42191   008F3E  0B01               	andlw	1
 42192   008F40  6F96               	movwf	(??_FLASH_Write+3)& (0+255),b
 42193   008F42  5195               	movf	(??_FLASH_Write+2)& (0+255),w,b
 42194   008F44  1396               	iorwf	(??_FLASH_Write+3)& (0+255),f,b
 42195   008F46  3796               	rlcf	(??_FLASH_Write+3)& (0+255),f,b
 42196   008F48  51C2               	movf	_flashFlags& (0+255),w,b
 42197   008F4A  1996               	xorwf	(??_FLASH_Write+3)& (0+255),w,b
 42198   008F4C  0BFD               	andlw	-3
 42199   008F4E  1996               	xorwf	(??_FLASH_Write+3)& (0+255),w,b
 42200   008F50  6FC2               	movwf	_flashFlags& (0+255),b
 42201                           
 42202                           ; BSR set to: 0
 42203                           ;../../VLCBlib_PIC/nvm.c: 519:     if (flashBuffer[(index&(64 -1))] != value) {
 42204   008F52  0E3F               	movlw	63
 42205   008F54  1590               	andwf	FLASH_Write@index& (0+255),w,b
 42206   008F56  6F93               	movwf	??_FLASH_Write& (0+255),b
 42207   008F58  0E00               	movlw	0
 42208   008F5A  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 42209   008F5C  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 42210   008F5E  0E48               	movlw	low _flashBuffer
 42211   008F60  2593               	addwf	??_FLASH_Write& (0+255),w,b
 42212   008F62  6ED9               	movwf	fsr2l,c
 42213   008F64  0E03               	movlw	high _flashBuffer
 42214   008F66  2194               	addwfc	(??_FLASH_Write+1)& (0+255),w,b
 42215   008F68  6EDA               	movwf	fsr2h,c
 42216   008F6A  5192               	movf	FLASH_Write@value& (0+255),w,b
 42217   008F6C  18DE               	xorwf	postinc2,w,c
 42218   008F6E  B4D8               	btfsc	status,2,c
 42219   008F70  D00F               	goto	l18929
 42220                           
 42221                           ; BSR set to: 0
 42222                           ;../../VLCBlib_PIC/nvm.c: 520:         flashFlags.writeNeeded = 1;
 42223   008F72  81C2               	bsf	_flashFlags& (0+255),0,b
 42224                           
 42225                           ; BSR set to: 0
 42226                           ;../../VLCBlib_PIC/nvm.c: 521:         flashBuffer[(index&(64 -1))] = value;
 42227   008F74  0E3F               	movlw	63
 42228   008F76  1590               	andwf	FLASH_Write@index& (0+255),w,b
 42229   008F78  6F93               	movwf	??_FLASH_Write& (0+255),b
 42230   008F7A  0E00               	movlw	0
 42231   008F7C  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 42232   008F7E  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 42233   008F80  0E48               	movlw	low _flashBuffer
 42234   008F82  2593               	addwf	??_FLASH_Write& (0+255),w,b
 42235   008F84  6ED9               	movwf	fsr2l,c
 42236   008F86  0E03               	movlw	high _flashBuffer
 42237   008F88  2194               	addwfc	(??_FLASH_Write+1)& (0+255),w,b
 42238   008F8A  6EDA               	movwf	fsr2h,c
 42239   008F8C  C092  FFDF         	movff	FLASH_Write@value,indf2
 42240   008F90                     l18929:
 42241                           
 42242                           ; BSR set to: 0
 42243                           ;../../VLCBlib_PIC/nvm.c: 523:     return GRSP_OK;
 42244   008F90  0E00               	movlw	0
 42245                           
 42246                           ; BSR set to: 0
 42247   008F92  0012               	return		;funcret
 42248   008F94                     __end_of_FLASH_Write:
 42249                           	callstack 0
 42250                           
 42251 ;; *************** function _loadFlashBlock *****************
 42252 ;; Defined at:
 42253 ;;		line 449 in file "../../VLCBlib_PIC/nvm.c"
 42254 ;; Parameters:    Size  Location     Type
 42255 ;;		None
 42256 ;; Auto vars:     Size  Location     Type
 42257 ;;  i               1   45[BANK0 ] unsigned char 
 42258 ;; Return value:  Size  Location     Type
 42259 ;;                  1    wreg      void 
 42260 ;; Registers used:
 42261 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 42262 ;; Tracked objects:
 42263 ;;		On entry : 0/0
 42264 ;;		On exit  : 0/0
 42265 ;;		Unchanged: 0/0
 42266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42268 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42270 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42271 ;;Total ram usage:        1 bytes
 42272 ;; Hardware stack levels used: 1
 42273 ;; Hardware stack levels required when called: 12
 42274 ;; This function calls:
 42275 ;;		Nothing
 42276 ;; This function is called by:
 42277 ;;		_FLASH_Write
 42278 ;; This function uses a non-reentrant model
 42279 ;;
 42280                           
 42281                           	psect	text183
 42282   00BA82                     __ptext183:
 42283                           	callstack 0
 42284   00BA82                     _loadFlashBlock:
 42285                           	callstack 14
 42286                           
 42287                           ;../../VLCBlib_PIC/nvm.c: 451:     EECON1=0X80;
 42288                           
 42289                           ; BSR set to: 0
 42290                           ;incstack = 0
 42291   00BA82  0E80               	movlw	128
 42292   00BA84  6E7F               	movwf	127,c	;volsfr
 42293                           
 42294                           ;../../VLCBlib_PIC/nvm.c: 452:     TBLPTR = flashBlock;
 42295   00BA86  C0D1  FFF6         	movff	_flashBlock,tblptrl	;volatile
 42296   00BA8A  C0D2  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 42297   00BA8E  6AF8               	clrf	248,c	;volatile
 42298                           
 42299                           ;../../VLCBlib_PIC/nvm.c: 453:     TBLPTRU = 0;
 42300   00BA90  0E00               	movlw	0
 42301   00BA92  6EF8               	movwf	248,c	;volatile
 42302                           
 42303                           ;../../VLCBlib_PIC/nvm.c: 454:     for (uint8_t i=0; i<64; i++) {
 42304   00BA94  0E00               	movlw	0
 42305   00BA96  0100               	movlb	0	; () banked
 42306   00BA98  6F8D               	movwf	loadFlashBlock@i& (0+255),b
 42307   00BA9A                     l2210:
 42308                           
 42309                           ; BSR set to: 0
 42310   00BA9A  0009               	tblrd		*+	;# 
 42311                           
 42312                           ;../../VLCBlib_PIC/nvm.c: 456:         __nop();
 42313   00BA9C  0000               	nop	
 42314                           
 42315                           ;../../VLCBlib_PIC/nvm.c: 457:         flashBuffer[i] = TABLAT;
 42316   00BA9E  0E48               	movlw	low _flashBuffer
 42317   00BAA0  0100               	movlb	0	; () banked
 42318   00BAA2  258D               	addwf	loadFlashBlock@i& (0+255),w,b
 42319   00BAA4  6ED9               	movwf	fsr2l,c
 42320   00BAA6  6ADA               	clrf	fsr2h,c
 42321   00BAA8  0E03               	movlw	high _flashBuffer
 42322   00BAAA  22DA               	addwfc	fsr2h,f,c
 42323   00BAAC  CFF5 FFDF          	movff	tablat,indf2	;volatile
 42324                           
 42325                           ; BSR set to: 0
 42326                           ;../../VLCBlib_PIC/nvm.c: 458:     }
 42327   00BAB0  2B8D               	incf	loadFlashBlock@i& (0+255),f,b
 42328                           
 42329                           ; BSR set to: 0
 42330   00BAB2  0E3F               	movlw	63
 42331   00BAB4  658D               	cpfsgt	loadFlashBlock@i& (0+255),b
 42332   00BAB6  D7F1               	goto	l2210
 42333                           
 42334                           ; BSR set to: 0
 42335                           ;../../VLCBlib_PIC/nvm.c: 459:     TBLPTR = flashBlock;
 42336   00BAB8  C0D1  FFF6         	movff	_flashBlock,tblptrl	;volatile
 42337   00BABC  C0D2  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 42338   00BAC0  6AF8               	clrf	248,c	;volatile
 42339                           
 42340                           ; BSR set to: 0
 42341                           ;../../VLCBlib_PIC/nvm.c: 460:     TBLPTRU = 0;
 42342   00BAC2  0E00               	movlw	0
 42343   00BAC4  6EF8               	movwf	248,c	;volatile
 42344                           
 42345                           ; BSR set to: 0
 42346                           ;../../VLCBlib_PIC/nvm.c: 476:     flashFlags.asByte = 0;
 42347   00BAC6  0E00               	movlw	0
 42348   00BAC8  6FC2               	movwf	_flashFlags& (0+255),b
 42349                           
 42350                           ; BSR set to: 0
 42351   00BACA  0012               	return		;funcret
 42352   00BACC                     __end_of_loadFlashBlock:
 42353                           	callstack 0
 42354                           
 42355 ;; *************** function _flushFlashBlock *****************
 42356 ;; Defined at:
 42357 ;;		line 375 in file "../../VLCBlib_PIC/nvm.c"
 42358 ;; Parameters:    Size  Location     Type
 42359 ;;		None
 42360 ;; Auto vars:     Size  Location     Type
 42361 ;;  i               1   47[BANK0 ] unsigned char 
 42362 ;;  interruptEna    1   46[BANK0 ] unsigned char 
 42363 ;; Return value:  Size  Location     Type
 42364 ;;                  1    wreg      void 
 42365 ;; Registers used:
 42366 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 42367 ;; Tracked objects:
 42368 ;;		On entry : 0/0
 42369 ;;		On exit  : 0/0
 42370 ;;		Unchanged: 0/0
 42371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42373 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42375 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42376 ;;Total ram usage:        2 bytes
 42377 ;; Hardware stack levels used: 1
 42378 ;; Hardware stack levels required when called: 15
 42379 ;; This function calls:
 42380 ;;		_APP_isSuitableTimeToWriteFlash
 42381 ;;		_eraseFlashBlock
 42382 ;; This function is called by:
 42383 ;;		_APP_factoryReset
 42384 ;;		_deleteActionRange
 42385 ;;		_poll
 42386 ;;		_FLASH_Write
 42387 ;;		_clearAllEvents
 42388 ;;		_removeTableEntry
 42389 ;;		_addEvent
 42390 ;;		_deleteHappeningRange
 42391 ;; This function uses a non-reentrant model
 42392 ;;
 42393                           
 42394                           	psect	text184
 42395   00A6BE                     __ptext184:
 42396                           	callstack 0
 42397   00A6BE                     _flushFlashBlock:
 42398                           	callstack 11
 42399                           
 42400                           ;../../VLCBlib_PIC/nvm.c: 376:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 37
      +                          8:     TBLPTR = flashBlock;
 42401                           
 42402                           ; BSR set to: 0
 42403                           ;incstack = 0
 42404   00A6BE  C0D1  FFF6         	movff	_flashBlock,tblptrl	;volatile
 42405   00A6C2  C0D2  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 42406   00A6C6  6AF8               	clrf	248,c	;volatile
 42407                           
 42408                           ;../../VLCBlib_PIC/nvm.c: 379:     TBLPTRU = 0;
 42409   00A6C8  0E00               	movlw	0
 42410   00A6CA  6EF8               	movwf	248,c	;volatile
 42411                           
 42412                           ;../../VLCBlib_PIC/nvm.c: 384:     if (! flashFlags.writeNeeded) return;
 42413   00A6CC  0100               	movlb	0	; () banked
 42414   00A6CE  A1C2               	btfss	_flashFlags& (0+255),0,b
 42415   00A6D0  0012               	return	
 42416   00A6D2                     l18731:
 42417                           
 42418                           ;../../VLCBlib_PIC/nvm.c: 387:     while (APP_isSuitableTimeToWriteFlash() == BAD_TIME)
 42419   00A6D2  ECD6  F062         	call	_APP_isSuitableTimeToWriteFlash	;wreg free
 42420   00A6D6  0900               	iorlw	0
 42421   00A6D8  B4D8               	btfsc	status,2,c
 42422   00A6DA  D7FB               	goto	l18731
 42423                           
 42424                           ;../../VLCBlib_PIC/nvm.c: 390:     if (flashFlags.eraseNeeded) {
 42425   00A6DC  0100               	movlb	0	; () banked
 42426   00A6DE  B3C2               	btfsc	_flashFlags& (0+255),1,b
 42427                           
 42428                           ; BSR set to: 0
 42429                           ;../../VLCBlib_PIC/nvm.c: 391:         eraseFlashBlock();
 42430   00A6E0  EC86  F05C         	call	_eraseFlashBlock	;wreg free
 42431                           
 42432                           ;../../VLCBlib_PIC/nvm.c: 394:     interruptEnabled = (INTCONbits.GIEH);
 42433   00A6E4  0E00               	movlw	0
 42434   00A6E6  BEF2               	btfsc	242,7,c	;volatile
 42435   00A6E8  0E01               	movlw	1
 42436   00A6EA  0100               	movlb	0	; () banked
 42437   00A6EC  6F8E               	movwf	flushFlashBlock@interruptEnabled& (0+255),b
 42438                           
 42439                           ; BSR set to: 0
 42440                           ;../../VLCBlib_PIC/nvm.c: 395:     {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
 42441   00A6EE  9EF2               	bcf	242,7,c	;volatile
 42442                           
 42443                           ; BSR set to: 0
 42444   00A6F0  9CF2               	bcf	242,6,c	;volatile
 42445                           
 42446                           ; BSR set to: 0
 42447                           ;../../VLCBlib_PIC/nvm.c: 397:     for (uint8_t i=0; i<64; i++) {
 42448   00A6F2  0E00               	movlw	0
 42449   00A6F4  6F8F               	movwf	flushFlashBlock@i& (0+255),b
 42450   00A6F6                     l18747:
 42451                           
 42452                           ; BSR set to: 0
 42453                           ;../../VLCBlib_PIC/nvm.c: 398:         TABLAT = flashBuffer[i];
 42454   00A6F6  0E48               	movlw	low _flashBuffer
 42455   00A6F8  258F               	addwf	flushFlashBlock@i& (0+255),w,b
 42456   00A6FA  6ED9               	movwf	fsr2l,c
 42457   00A6FC  6ADA               	clrf	fsr2h,c
 42458   00A6FE  0E03               	movlw	high _flashBuffer
 42459   00A700  22DA               	addwfc	fsr2h,f,c
 42460   00A702  50DF               	movf	indf2,w,c
 42461   00A704  6EF5               	movwf	245,c	;volatile
 42462   00A706  000D               	tblwt		*+	;# 
 42463                           
 42464                           ;../../VLCBlib_PIC/nvm.c: 400:     }
 42465   00A708  0100               	movlb	0	; () banked
 42466   00A70A  2B8F               	incf	flushFlashBlock@i& (0+255),f,b
 42467                           
 42468                           ; BSR set to: 0
 42469   00A70C  0E3F               	movlw	63
 42470   00A70E  658F               	cpfsgt	flushFlashBlock@i& (0+255),b
 42471   00A710  D7F2               	goto	l18747
 42472                           
 42473                           ; BSR set to: 0
 42474                           ;../../VLCBlib_PIC/nvm.c: 407:     TBLPTR = flashBlock;
 42475   00A712  C0D1  FFF6         	movff	_flashBlock,tblptrl	;volatile
 42476   00A716  C0D2  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 42477   00A71A  6AF8               	clrf	248,c	;volatile
 42478                           
 42479                           ; BSR set to: 0
 42480                           ;../../VLCBlib_PIC/nvm.c: 408:     TBLPTRU = 0;
 42481   00A71C  0E00               	movlw	0
 42482   00A71E  6EF8               	movwf	248,c	;volatile
 42483                           
 42484                           ; BSR set to: 0
 42485                           ;../../VLCBlib_PIC/nvm.c: 409:     EECON1bits.EEPGD = 1;
 42486   00A720  8E7F               	bsf	127,7,c	;volsfr
 42487                           
 42488                           ; BSR set to: 0
 42489                           ;../../VLCBlib_PIC/nvm.c: 410:     EECON1bits.CFGS = 0;
 42490   00A722  9C7F               	bcf	127,6,c	;volsfr
 42491                           
 42492                           ; BSR set to: 0
 42493                           ;../../VLCBlib_PIC/nvm.c: 411:     EECON1bits.FREE = 0;
 42494   00A724  987F               	bcf	127,4,c	;volsfr
 42495                           
 42496                           ; BSR set to: 0
 42497                           ;../../VLCBlib_PIC/nvm.c: 412:     EECON1bits.WREN = 1;
 42498   00A726  847F               	bsf	127,2,c	;volsfr
 42499                           
 42500                           ; BSR set to: 0
 42501                           ;../../VLCBlib_PIC/nvm.c: 414:     EECON2 = 0x55;
 42502   00A728  0E55               	movlw	85
 42503   00A72A  6E7E               	movwf	126,c	;volsfr
 42504                           
 42505                           ; BSR set to: 0
 42506                           ;../../VLCBlib_PIC/nvm.c: 415:     EECON2 = 0xAA;
 42507   00A72C  0EAA               	movlw	170
 42508   00A72E  6E7E               	movwf	126,c	;volsfr
 42509                           
 42510                           ; BSR set to: 0
 42511                           ;../../VLCBlib_PIC/nvm.c: 416:     EECON1bits.WR = 1;
 42512   00A730  827F               	bsf	127,1,c	;volsfr
 42513                           
 42514                           ; BSR set to: 0
 42515                           ;../../VLCBlib_PIC/nvm.c: 417:     EECON1bits.WREN = 0;
 42516   00A732  947F               	bcf	127,2,c	;volsfr
 42517                           
 42518                           ; BSR set to: 0
 42519                           ;../../VLCBlib_PIC/nvm.c: 440:     if (interruptEnabled) {
 42520   00A734  518E               	movf	flushFlashBlock@interruptEnabled& (0+255),w,b
 42521   00A736  B4D8               	btfsc	status,2,c
 42522   00A738  D002               	goto	l18777
 42523                           
 42524                           ; BSR set to: 0
 42525                           ;../../VLCBlib_PIC/nvm.c: 441:         {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
 42526   00A73A  8EF2               	bsf	242,7,c	;volatile
 42527   00A73C  8CF2               	bsf	242,6,c	;volatile
 42528   00A73E                     l18777:
 42529                           
 42530                           ; BSR set to: 0
 42531                           ;../../VLCBlib_PIC/nvm.c: 443:     flashFlags.asByte = 0;
 42532   00A73E  0E00               	movlw	0
 42533   00A740  6FC2               	movwf	_flashFlags& (0+255),b
 42534                           
 42535                           ; BSR set to: 0
 42536   00A742  0012               	return		;funcret
 42537   00A744                     __end_of_flushFlashBlock:
 42538                           	callstack 0
 42539                           
 42540 ;; *************** function _eraseFlashBlock *****************
 42541 ;; Defined at:
 42542 ;;		line 324 in file "../../VLCBlib_PIC/nvm.c"
 42543 ;; Parameters:    Size  Location     Type
 42544 ;;		None
 42545 ;; Auto vars:     Size  Location     Type
 42546 ;;  interruptEna    1   45[BANK0 ] unsigned char 
 42547 ;; Return value:  Size  Location     Type
 42548 ;;                  1    wreg      void 
 42549 ;; Registers used:
 42550 ;;		wreg, status,2, cstack
 42551 ;; Tracked objects:
 42552 ;;		On entry : 0/0
 42553 ;;		On exit  : 0/0
 42554 ;;		Unchanged: 0/0
 42555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42557 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42559 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42560 ;;Total ram usage:        1 bytes
 42561 ;; Hardware stack levels used: 1
 42562 ;; Hardware stack levels required when called: 14
 42563 ;; This function calls:
 42564 ;;		_APP_isSuitableTimeToWriteFlash
 42565 ;; This function is called by:
 42566 ;;		_flushFlashBlock
 42567 ;;		_FLASH_Write
 42568 ;; This function uses a non-reentrant model
 42569 ;;
 42570                           
 42571                           	psect	text185
 42572   00B90C                     __ptext185:
 42573                           	callstack 0
 42574   00B90C                     _eraseFlashBlock:
 42575                           	callstack 11
 42576                           
 42577                           ;../../VLCBlib_PIC/nvm.c: 328:     while (! APP_isSuitableTimeToWriteFlash())
 42578                           
 42579                           ;../../VLCBlib_PIC/nvm.c: 325:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 32
      +                          8:     while (! APP_isSuitableTimeToWriteFlash())
 42580                           
 42581                           ; BSR set to: 0
 42582                           ;incstack = 0
 42583   00B90C  ECD6  F062         	call	_APP_isSuitableTimeToWriteFlash	;wreg free
 42584   00B910  0900               	iorlw	0
 42585   00B912  B4D8               	btfsc	status,2,c
 42586   00B914  D7FB               	goto	__ptext185
 42587                           
 42588                           ;../../VLCBlib_PIC/nvm.c: 331:     interruptEnabled = (INTCONbits.GIEH);
 42589   00B916  0E00               	movlw	0
 42590   00B918  BEF2               	btfsc	242,7,c	;volatile
 42591   00B91A  0E01               	movlw	1
 42592   00B91C  0100               	movlb	0	; () banked
 42593   00B91E  6F8D               	movwf	eraseFlashBlock@interruptEnabled& (0+255),b
 42594                           
 42595                           ; BSR set to: 0
 42596                           ;../../VLCBlib_PIC/nvm.c: 333:     TBLPTR = flashBlock;
 42597   00B920  C0D1  FFF6         	movff	_flashBlock,tblptrl	;volatile
 42598   00B924  C0D2  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 42599   00B928  6AF8               	clrf	248,c	;volatile
 42600                           
 42601                           ;../../VLCBlib_PIC/nvm.c: 334:     TBLPTRU = 0;
 42602   00B92A  0E00               	movlw	0
 42603   00B92C  6EF8               	movwf	248,c	;volatile
 42604                           
 42605                           ; BSR set to: 0
 42606                           ;../../VLCBlib_PIC/nvm.c: 335:     EECON1bits.EEPGD = 1;
 42607   00B92E  8E7F               	bsf	127,7,c	;volsfr
 42608                           
 42609                           ; BSR set to: 0
 42610                           ;../../VLCBlib_PIC/nvm.c: 336:     EECON1bits.CFGS = 0;
 42611   00B930  9C7F               	bcf	127,6,c	;volsfr
 42612                           
 42613                           ; BSR set to: 0
 42614                           ;../../VLCBlib_PIC/nvm.c: 337:     EECON1bits.WREN = 1;
 42615   00B932  847F               	bsf	127,2,c	;volsfr
 42616                           
 42617                           ; BSR set to: 0
 42618                           ;../../VLCBlib_PIC/nvm.c: 338:     EECON1bits.FREE = 1;
 42619   00B934  887F               	bsf	127,4,c	;volsfr
 42620                           
 42621                           ; BSR set to: 0
 42622                           ;../../VLCBlib_PIC/nvm.c: 339:     {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
 42623   00B936  9EF2               	bcf	242,7,c	;volatile
 42624                           
 42625                           ; BSR set to: 0
 42626   00B938  9CF2               	bcf	242,6,c	;volatile
 42627                           
 42628                           ;../../VLCBlib_PIC/nvm.c: 340:     EECON2 = 0x55;
 42629   00B93A  0E55               	movlw	85
 42630   00B93C  6E7E               	movwf	126,c	;volsfr
 42631                           
 42632                           ;../../VLCBlib_PIC/nvm.c: 341:     EECON2 = 0xaa;
 42633   00B93E  0EAA               	movlw	170
 42634   00B940  6E7E               	movwf	126,c	;volsfr
 42635                           
 42636                           ; BSR set to: 0
 42637                           ;../../VLCBlib_PIC/nvm.c: 342:     EECON1bits.WR = 1;
 42638   00B942  827F               	bsf	127,1,c	;volsfr
 42639   00B944                     l2192:
 42640                           
 42641                           ;../../VLCBlib_PIC/nvm.c: 343:     while(EECON1bits.WR)
 42642   00B944  B27F               	btfsc	127,1,c	;volsfr
 42643   00B946  D7FE               	goto	l2192
 42644                           
 42645                           ;../../VLCBlib_PIC/nvm.c: 345:     EECON1bits.WREN = 0;
 42646   00B948  947F               	bcf	127,2,c	;volsfr
 42647                           
 42648                           ;../../VLCBlib_PIC/nvm.c: 365:     if (interruptEnabled) {
 42649   00B94A  0100               	movlb	0	; () banked
 42650   00B94C  518D               	movf	eraseFlashBlock@interruptEnabled& (0+255),w,b
 42651   00B94E  B4D8               	btfsc	status,2,c
 42652   00B950  0012               	return	
 42653                           
 42654                           ; BSR set to: 0
 42655                           ;../../VLCBlib_PIC/nvm.c: 366:         {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
 42656   00B952  8EF2               	bsf	242,7,c	;volatile
 42657   00B954  8CF2               	bsf	242,6,c	;volatile
 42658                           
 42659                           ; BSR set to: 0
 42660   00B956  0012               	return		;funcret
 42661   00B958                     __end_of_eraseFlashBlock:
 42662                           	callstack 0
 42663                           
 42664 ;; *************** function _APP_isSuitableTimeToWriteFlash *****************
 42665 ;; Defined at:
 42666 ;;		line 402 in file "../main.c"
 42667 ;; Parameters:    Size  Location     Type
 42668 ;;		None
 42669 ;; Auto vars:     Size  Location     Type
 42670 ;;		None
 42671 ;; Return value:  Size  Location     Type
 42672 ;;                  1    wreg      enum E12686
 42673 ;; Registers used:
 42674 ;;		wreg, status,2, cstack
 42675 ;; Tracked objects:
 42676 ;;		On entry : 0/0
 42677 ;;		On exit  : 0/0
 42678 ;;		Unchanged: 0/0
 42679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42684 ;;Total ram usage:        0 bytes
 42685 ;; Hardware stack levels used: 1
 42686 ;; Hardware stack levels required when called: 13
 42687 ;; This function calls:
 42688 ;;		_isNoServoPulses
 42689 ;; This function is called by:
 42690 ;;		_eraseFlashBlock
 42691 ;;		_flushFlashBlock
 42692 ;; This function uses a non-reentrant model
 42693 ;;
 42694                           
 42695                           	psect	text186
 42696   00C5AC                     __ptext186:
 42697                           	callstack 0
 42698   00C5AC                     _APP_isSuitableTimeToWriteFlash:
 42699                           	callstack 11
 42700                           
 42701                           ;../main.c: 404:     return isNoServoPulses() ? GOOD_TIME : BAD_TIME;
 42702                           
 42703                           ; BSR set to: 0
 42704                           ;incstack = 0
 42705   00C5AC  ECDF  F062         	call	_isNoServoPulses	;wreg free
 42706   00C5B0  0900               	iorlw	0
 42707   00C5B2  B4D8               	btfsc	status,2,c
 42708   00C5B4  D002               	goto	u18250
 42709   00C5B6  0E01               	movlw	1
 42710   00C5B8  0012               	return	
 42711   00C5BA                     u18250:
 42712   00C5BA  0E00               	movlw	0
 42713   00C5BC  0012               	return		;funcret
 42714   00C5BE                     __end_of_APP_isSuitableTimeToWriteFlash:
 42715                           	callstack 0
 42716                           
 42717 ;; *************** function _isNoServoPulses *****************
 42718 ;; Defined at:
 42719 ;;		line 694 in file "../servo.c"
 42720 ;; Parameters:    Size  Location     Type
 42721 ;;		None
 42722 ;; Auto vars:     Size  Location     Type
 42723 ;;		None
 42724 ;; Return value:  Size  Location     Type
 42725 ;;                  1    wreg      enum E12710
 42726 ;; Registers used:
 42727 ;;		wreg
 42728 ;; Tracked objects:
 42729 ;;		On entry : 0/0
 42730 ;;		On exit  : 0/0
 42731 ;;		Unchanged: 0/0
 42732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42737 ;;Total ram usage:        0 bytes
 42738 ;; Hardware stack levels used: 1
 42739 ;; Hardware stack levels required when called: 12
 42740 ;; This function calls:
 42741 ;;		Nothing
 42742 ;; This function is called by:
 42743 ;;		_APP_isSuitableTimeToWriteFlash
 42744 ;; This function uses a non-reentrant model
 42745 ;;
 42746                           
 42747                           	psect	text187
 42748   00C5BE                     __ptext187:
 42749                           	callstack 0
 42750   00C5BE                     _isNoServoPulses:
 42751                           	callstack 11
 42752                           
 42753                           ;../servo.c: 696:     if (T1CONbits.TMR1ON) return FALSE;
 42754                           
 42755                           ;incstack = 0
 42756   00C5BE  A0CD               	btfss	205,0,c	;volatile
 42757   00C5C0  D002               	goto	l1180
 42758   00C5C2                     u18230:
 42759   00C5C2  0E00               	movlw	0
 42760   00C5C4  0012               	return	
 42761   00C5C6                     l1180:
 42762                           
 42763                           ;../servo.c: 697:     if (T3CONbits.TMR3ON) return FALSE;
 42764   00C5C6  B0B1               	btfsc	177,0,c	;volatile
 42765   00C5C8  D7FC               	goto	u18230
 42766                           
 42767                           ;../servo.c: 699:     return TRUE;
 42768   00C5CA  0E01               	movlw	1
 42769   00C5CC  0012               	return		;funcret
 42770   00C5CE                     __end_of_isNoServoPulses:
 42771                           	callstack 0
 42772                           
 42773 ;; *************** function _EEPROM_Write *****************
 42774 ;; Defined at:
 42775 ;;		line 216 in file "../../VLCBlib_PIC/nvm.c"
 42776 ;; Parameters:    Size  Location     Type
 42777 ;;  index           2   47[BANK0 ] unsigned short 
 42778 ;;  value           1   49[BANK0 ] unsigned char 
 42779 ;; Auto vars:     Size  Location     Type
 42780 ;;  interruptEna    1   50[BANK0 ] unsigned char 
 42781 ;; Return value:  Size  Location     Type
 42782 ;;                  1    wreg      unsigned char 
 42783 ;; Registers used:
 42784 ;;		wreg, status,2, status,0, cstack
 42785 ;; Tracked objects:
 42786 ;;		On entry : 0/0
 42787 ;;		On exit  : 0/0
 42788 ;;		Unchanged: 0/0
 42789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42790 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42791 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42793 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42794 ;;Total ram usage:        4 bytes
 42795 ;; Hardware stack levels used: 1
 42796 ;; Hardware stack levels required when called: 13
 42797 ;; This function calls:
 42798 ;;		_EEPROM_Read
 42799 ;;		_updateModuleErrorStatus
 42800 ;; This function is called by:
 42801 ;;		_writeNVM
 42802 ;; This function uses a non-reentrant model
 42803 ;;
 42804                           
 42805                           	psect	text188
 42806   00B084                     __ptext188:
 42807                           	callstack 0
 42808   00B084                     _EEPROM_Write:
 42809                           	callstack 14
 42810                           
 42811                           ;../../VLCBlib_PIC/nvm.c: 217:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 21
      +                          8:     interruptEnabled = (INTCONbits.GIEH);
 42812                           
 42813                           ;incstack = 0
 42814   00B084  0E00               	movlw	0
 42815   00B086  BEF2               	btfsc	242,7,c	;volatile
 42816   00B088  0E01               	movlw	1
 42817   00B08A  0100               	movlb	0	; () banked
 42818   00B08C  6F92               	movwf	EEPROM_Write@interruptEnabled& (0+255),b
 42819   00B08E                     l18867:
 42820                           
 42821                           ;../../VLCBlib_PIC/nvm.c: 221:         EEADRH = (index >> 8)&0xFF;
 42822   00B08E  0100               	movlb	0	; () banked
 42823   00B090  5190               	movf	(EEPROM_Write@index+1)& (0+255),w,b
 42824   00B092  6E75               	movwf	117,c	;volatile
 42825                           
 42826                           ; BSR set to: 0
 42827                           ;../../VLCBlib_PIC/nvm.c: 222:         EEADR = index & 0xFF;
 42828   00B094  C08F  FF74         	movff	EEPROM_Write@index,3956	;volatile
 42829                           
 42830                           ; BSR set to: 0
 42831                           ;../../VLCBlib_PIC/nvm.c: 223:         EEDATA = value;
 42832   00B098  C091  FF73         	movff	EEPROM_Write@value,3955	;volatile
 42833                           
 42834                           ; BSR set to: 0
 42835                           ;../../VLCBlib_PIC/nvm.c: 224:         EECON1bits.EEPGD = 0;
 42836   00B09C  9E7F               	bcf	127,7,c	;volsfr
 42837                           
 42838                           ; BSR set to: 0
 42839                           ;../../VLCBlib_PIC/nvm.c: 225:         EECON1bits.CFGS = 0;
 42840   00B09E  9C7F               	bcf	127,6,c	;volsfr
 42841                           
 42842                           ; BSR set to: 0
 42843                           ;../../VLCBlib_PIC/nvm.c: 226:         EECON1bits.WREN = 1;
 42844   00B0A0  847F               	bsf	127,2,c	;volsfr
 42845                           
 42846                           ; BSR set to: 0
 42847                           ;../../VLCBlib_PIC/nvm.c: 228:         {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
 42848   00B0A2  9EF2               	bcf	242,7,c	;volatile
 42849                           
 42850                           ; BSR set to: 0
 42851   00B0A4  9CF2               	bcf	242,6,c	;volatile
 42852                           
 42853                           ; BSR set to: 0
 42854                           ;../../VLCBlib_PIC/nvm.c: 229:         EECON2 = 0x55;
 42855   00B0A6  0E55               	movlw	85
 42856   00B0A8  6E7E               	movwf	126,c	;volsfr
 42857                           
 42858                           ; BSR set to: 0
 42859                           ;../../VLCBlib_PIC/nvm.c: 230:         EECON2 = 0xAA;
 42860   00B0AA  0EAA               	movlw	170
 42861   00B0AC  6E7E               	movwf	126,c	;volsfr
 42862                           
 42863                           ; BSR set to: 0
 42864                           ;../../VLCBlib_PIC/nvm.c: 231:         EECON1bits.WR = 1;
 42865   00B0AE  827F               	bsf	127,1,c	;volsfr
 42866   00B0B0                     l2172:
 42867                           
 42868                           ;../../VLCBlib_PIC/nvm.c: 232:         while (EECON1bits.WR)
 42869   00B0B0  B27F               	btfsc	127,1,c	;volsfr
 42870   00B0B2  D7FE               	goto	l2172
 42871   00B0B4                     u18480:
 42872                           
 42873                           ;../../VLCBlib_PIC/nvm.c: 234:         while (!EEIF)
 42874                           
 42875                           ;../../VLCBlib_PIC/nvm.c: 235:             ;
 42876   00B0B4  ACB7               	btfss	4023,6,c	;volatile
 42877   00B0B6  D7FE               	goto	u18480
 42878                           
 42879                           ;../../VLCBlib_PIC/nvm.c: 236:         EEIF = 0;
 42880   00B0B8  9CB7               	bcf	4023,6,c	;volatile
 42881                           
 42882                           ;../../VLCBlib_PIC/nvm.c: 237:         if (interruptEnabled) {
 42883   00B0BA  0100               	movlb	0	; () banked
 42884   00B0BC  5192               	movf	EEPROM_Write@interruptEnabled& (0+255),w,b
 42885   00B0BE  B4D8               	btfsc	status,2,c
 42886   00B0C0  D002               	goto	l2178
 42887                           
 42888                           ; BSR set to: 0
 42889                           ;../../VLCBlib_PIC/nvm.c: 239:             {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
 42890   00B0C2  8EF2               	bsf	242,7,c	;volatile
 42891   00B0C4  8CF2               	bsf	242,6,c	;volatile
 42892   00B0C6                     l2178:
 42893                           
 42894                           ; BSR set to: 0
 42895                           ;../../VLCBlib_PIC/nvm.c: 241:         EECON1bits.WREN = 0;
 42896   00B0C6  947F               	bcf	127,2,c	;volsfr
 42897                           
 42898                           ; BSR set to: 0
 42899                           ;../../VLCBlib_PIC/nvm.c: 277:         if (EEPROM_Read(index) == value) {
 42900   00B0C8  C08F  F08D         	movff	EEPROM_Write@index,EEPROM_Read@index
 42901   00B0CC  C090  F08E         	movff	EEPROM_Write@index+1,EEPROM_Read@index+1
 42902   00B0D0  EC53  F062         	call	_EEPROM_Read	;wreg free
 42903   00B0D4  0100               	movlb	0	; () banked
 42904   00B0D6  1991               	xorwf	EEPROM_Write@value& (0+255),w,b
 42905   00B0D8  B4D8               	btfsc	status,2,c
 42906   00B0DA  D006               	goto	l18901
 42907                           
 42908                           ; BSR set to: 0
 42909                           ;../../VLCBlib_PIC/nvm.c: 281:         mnsDiagnostics[0x04].asUint++;
 42910   00B0DC  0101               	movlb	1	; () banked
 42911   00B0DE  4B95               	infsnz	(_mnsDiagnostics+8)& (0+255),f,b
 42912   00B0E0  2B96               	incf	(_mnsDiagnostics+9)& (0+255),f,b
 42913                           
 42914                           ; BSR set to: 1
 42915                           ;../../VLCBlib_PIC/nvm.c: 282:         updateModuleErrorStatus();
 42916   00B0E2  ECED  F062         	call	_updateModuleErrorStatus	;wreg free
 42917                           
 42918                           ;../../VLCBlib_PIC/nvm.c: 284:     } while (1);
 42919   00B0E6  D7D3               	goto	l18867
 42920   00B0E8                     l18901:
 42921                           
 42922                           ; BSR set to: 0
 42923                           ;../../VLCBlib_PIC/nvm.c: 285:     return GRSP_OK;
 42924   00B0E8  0E00               	movlw	0
 42925                           
 42926                           ; BSR set to: 0
 42927   00B0EA  0012               	return		;funcret
 42928   00B0EC                     __end_of_EEPROM_Write:
 42929                           	callstack 0
 42930                           
 42931 ;; *************** function _updateModuleErrorStatus *****************
 42932 ;; Defined at:
 42933 ;;		line 632 in file "../../VLCBlib_PIC/mns.c"
 42934 ;; Parameters:    Size  Location     Type
 42935 ;;		None
 42936 ;; Auto vars:     Size  Location     Type
 42937 ;;		None
 42938 ;; Return value:  Size  Location     Type
 42939 ;;                  1    wreg      void 
 42940 ;; Registers used:
 42941 ;;		wreg, status,2, status,0
 42942 ;; Tracked objects:
 42943 ;;		On entry : 0/0
 42944 ;;		On exit  : 0/0
 42945 ;;		Unchanged: 0/0
 42946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42951 ;;Total ram usage:        0 bytes
 42952 ;; Hardware stack levels used: 1
 42953 ;; Hardware stack levels required when called: 12
 42954 ;; This function calls:
 42955 ;;		Nothing
 42956 ;; This function is called by:
 42957 ;;		_EEPROM_Write
 42958 ;;		_canSendMessage
 42959 ;;		_processEnumeration
 42960 ;; This function uses a non-reentrant model
 42961 ;;
 42962                           
 42963                           	psect	text189
 42964   00C5DA                     __ptext189:
 42965                           	callstack 0
 42966   00C5DA                     _updateModuleErrorStatus:
 42967                           	callstack 14
 42968                           
 42969                           ;../../VLCBlib_PIC/mns.c: 633:     if (mnsDiagnostics[0x01].asBytes.lo < 0xFF) {
 42970                           
 42971                           ; BSR set to: 0
 42972                           ;incstack = 0
 42973   00C5DA  0101               	movlb	1	; () banked
 42974   00C5DC  298F               	incf	(_mnsDiagnostics+2)& (0+255),w,b
 42975   00C5DE  B4D8               	btfsc	status,2,c
 42976   00C5E0  0012               	return	
 42977                           
 42978                           ; BSR set to: 1
 42979                           ;../../VLCBlib_PIC/mns.c: 634:         mnsDiagnostics[0x01].asBytes.lo++;
 42980   00C5E2  2B8F               	incf	(_mnsDiagnostics+2)& (0+255),f,b
 42981                           
 42982                           ; BSR set to: 1
 42983   00C5E4  0012               	return		;funcret
 42984   00C5E6                     __end_of_updateModuleErrorStatus:
 42985                           	callstack 0
 42986                           
 42987 ;; *************** function _setDigitalOutput *****************
 42988 ;; Defined at:
 42989 ;;		line 226 in file "../digitalOut.c"
 42990 ;; Parameters:    Size  Location     Type
 42991 ;;  io              1    wreg     unsigned char 
 42992 ;;  state           1   55[BANK0 ] unsigned char 
 42993 ;; Auto vars:     Size  Location     Type
 42994 ;;  io              1   57[BANK0 ] unsigned char 
 42995 ;;  pinState        1   56[BANK0 ] enum E12760
 42996 ;; Return value:  Size  Location     Type
 42997 ;;                  1    wreg      void 
 42998 ;; Registers used:
 42999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43000 ;; Tracked objects:
 43001 ;;		On entry : 0/0
 43002 ;;		On exit  : 0/0
 43003 ;;		Unchanged: 0/0
 43004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43005 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43006 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43008 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43009 ;;Total ram usage:        3 bytes
 43010 ;; Hardware stack levels used: 1
 43011 ;; Hardware stack levels required when called: 13
 43012 ;; This function calls:
 43013 ;;		_getNV
 43014 ;;		_setOutputPin
 43015 ;; This function is called by:
 43016 ;;		_configIO
 43017 ;;		_setOutputPosition
 43018 ;; This function uses a non-reentrant model
 43019 ;;
 43020                           
 43021                           	psect	text190
 43022   00A494                     __ptext190:
 43023                           	callstack 0
 43024   00A494                     _setDigitalOutput:
 43025                           	callstack 14
 43026                           
 43027                           ; BSR set to: 1
 43028                           ;incstack = 0
 43029                           ;setDigitalOutput@io stored from wreg
 43030   00A494  0100               	movlb	0	; () banked
 43031   00A496  6F99               	movwf	setDigitalOutput@io& (0+255),b
 43032                           
 43033                           ;../digitalOut.c: 227:     Boolean pinState;;../digitalOut.c: 228:     switch (state) {
 43034   00A498  D038               	goto	l19607
 43035   00A49A                     l19591:
 43036                           
 43037                           ; BSR set to: 0
 43038                           ;../digitalOut.c: 230:             state = 2;
 43039   00A49A  0E02               	movlw	2
 43040   00A49C  6F97               	movwf	setDigitalOutput@state& (0+255),b
 43041   00A49E                     l19593:
 43042                           
 43043                           ; BSR set to: 0
 43044                           ;../digitalOut.c: 234:             pinState = (state == 1);
 43045   00A49E  0597               	decf	setDigitalOutput@state& (0+255),w,b
 43046   00A4A0  A4D8               	btfss	status,2,c
 43047   00A4A2  D002               	goto	u19430
 43048   00A4A4  0E01               	movlw	1
 43049   00A4A6  D001               	goto	u19440
 43050   00A4A8                     u19430:
 43051   00A4A8  0E00               	movlw	0
 43052   00A4AA                     u19440:
 43053   00A4AA  6F98               	movwf	setDigitalOutput@pinState& (0+255),b
 43054                           
 43055                           ; BSR set to: 0
 43056                           ;../digitalOut.c: 238:             if (getNV((16 + 7*(io) + 1)) & 0x20) {
 43057   00A4AC  5199               	movf	setDigitalOutput@io& (0+255),w,b
 43058   00A4AE  0D07               	mullw	7
 43059   00A4B0  50F3               	movf	243,w,c
 43060   00A4B2  0F11               	addlw	17
 43061   00A4B4  EC52  F05E         	call	_getNV
 43062   00A4B8  0100               	movlb	0	; () banked
 43063   00A4BA  AB8D               	btfss	?_getNV& (0+255),5,b
 43064   00A4BC  D00B               	goto	l19599
 43065                           
 43066                           ; BSR set to: 0
 43067                           ;../digitalOut.c: 239:                 setOutputPin(io, ! pinState);
 43068   00A4BE  5198               	movf	setDigitalOutput@pinState& (0+255),w,b
 43069   00A4C0  A4D8               	btfss	status,2,c
 43070   00A4C2  D002               	goto	u19460
 43071   00A4C4  0E01               	movlw	1
 43072   00A4C6  D001               	goto	u19470
 43073   00A4C8                     u19460:
 43074   00A4C8  0E00               	movlw	0
 43075   00A4CA                     u19470:
 43076   00A4CA  6F91               	movwf	setOutputPin@state& (0+255),b
 43077   00A4CC  5199               	movf	setDigitalOutput@io& (0+255),w,b
 43078   00A4CE  ECAB  F036         	call	_setOutputPin
 43079                           
 43080                           ;../digitalOut.c: 240:             } else {
 43081   00A4D2  0012               	return	
 43082   00A4D4                     l19599:
 43083                           
 43084                           ; BSR set to: 0
 43085                           ;../digitalOut.c: 241:                 setOutputPin(io, pinState);
 43086   00A4D4  C098  F091         	movff	setDigitalOutput@pinState,setOutputPin@state
 43087   00A4D8  5199               	movf	setDigitalOutput@io& (0+255),w,b
 43088   00A4DA  ECAB  F036         	call	_setOutputPin
 43089   00A4DE  0012               	return	
 43090   00A4E0                     l19601:
 43091                           
 43092                           ; BSR set to: 0
 43093                           ;../digitalOut.c: 245:             flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3));
 43094   00A4E0  5199               	movf	setDigitalOutput@io& (0+255),w,b
 43095   00A4E2  0D07               	mullw	7
 43096   00A4E4  50F3               	movf	243,w,c
 43097   00A4E6  0F13               	addlw	19
 43098   00A4E8  EC52  F05E         	call	_getNV
 43099   00A4EC  0E30               	movlw	low _flashDelays
 43100   00A4EE  0100               	movlb	0	; () banked
 43101   00A4F0  2599               	addwf	setDigitalOutput@io& (0+255),w,b
 43102   00A4F2  6ED9               	movwf	fsr2l,c
 43103   00A4F4  6ADA               	clrf	fsr2h,c
 43104   00A4F6  0E01               	movlw	high _flashDelays
 43105   00A4F8  22DA               	addwfc	fsr2h,f,c
 43106   00A4FA  C08D  FFDF         	movff	?_getNV,indf2
 43107                           
 43108                           ; BSR set to: 0
 43109                           ;../digitalOut.c: 246:             setOutputPin(io, TRUE);
 43110   00A4FE  0E01               	movlw	1
 43111   00A500  6F91               	movwf	setOutputPin@state& (0+255),b
 43112   00A502  5199               	movf	setDigitalOutput@io& (0+255),w,b
 43113   00A504  ECAB  F036         	call	_setOutputPin
 43114                           
 43115                           ;../digitalOut.c: 247:             break;
 43116   00A508  0012               	return	
 43117   00A50A                     l19607:
 43118   00A50A  0100               	movlb	0	; () banked
 43119   00A50C  5197               	movf	setDigitalOutput@state& (0+255),w,b
 43120                           
 43121                           ; Switch size 1, requested type "simple"
 43122                           ; Number of cases is 3, Range of values is 1 to 3
 43123                           ; switch strategies available:
 43124                           ; Name         Instructions Cycles
 43125                           ; simple_byte           10     6 (average)
 43126                           ;	Chosen strategy is simple_byte
 43127   00A50E  0A01               	xorlw	1	; case 1
 43128   00A510  B4D8               	btfsc	status,2,c
 43129   00A512  D7C5               	goto	l19593
 43130   00A514  0A03               	xorlw	3	; case 2
 43131   00A516  B4D8               	btfsc	status,2,c
 43132   00A518  D7C2               	goto	l19593
 43133   00A51A  0A01               	xorlw	1	; case 3
 43134   00A51C  B4D8               	btfsc	status,2,c
 43135   00A51E  D7E0               	goto	l19601
 43136   00A520  D7BC               	goto	l19591
 43137   00A522                     __end_of_setDigitalOutput:
 43138                           	callstack 0
 43139                           
 43140 ;; *************** function _setOutputPin *****************
 43141 ;; Defined at:
 43142 ;;		line 256 in file "../digitalOut.c"
 43143 ;; Parameters:    Size  Location     Type
 43144 ;;  io              1    wreg     unsigned char 
 43145 ;;  state           1   49[BANK0 ] enum E12760
 43146 ;; Auto vars:     Size  Location     Type
 43147 ;;  io              1   52[BANK0 ] unsigned char 
 43148 ;; Return value:  Size  Location     Type
 43149 ;;                  1    wreg      void 
 43150 ;; Registers used:
 43151 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 43152 ;; Tracked objects:
 43153 ;;		On entry : 0/0
 43154 ;;		On exit  : 0/0
 43155 ;;		Unchanged: 0/0
 43156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43157 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43158 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43159 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43160 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43161 ;;Total ram usage:        4 bytes
 43162 ;; Hardware stack levels used: 1
 43163 ;; Hardware stack levels required when called: 12
 43164 ;; This function calls:
 43165 ;;		Nothing
 43166 ;; This function is called by:
 43167 ;;		_startDigitalOutput
 43168 ;;		_processOutputs
 43169 ;;		_setDigitalOutput
 43170 ;;		_setOutputPosition
 43171 ;;		_setupTimer1
 43172 ;;		_setupTimer3
 43173 ;; This function uses a non-reentrant model
 43174 ;;
 43175                           
 43176                           	psect	text191
 43177   006D56                     __ptext191:
 43178                           	callstack 0
 43179   006D56                     _setOutputPin:
 43180                           	callstack 15
 43181                           
 43182                           ;incstack = 0
 43183                           ;setOutputPin@io stored from wreg
 43184   006D56  0100               	movlb	0	; () banked
 43185   006D58  6F94               	movwf	setOutputPin@io& (0+255),b
 43186                           
 43187                           ;../digitalOut.c: 257:     switch (configs[io].port) {
 43188   006D5A  D0C0               	goto	l19455
 43189   006D5C                     l19435:
 43190                           
 43191                           ; BSR set to: 0
 43192                           ;../digitalOut.c: 259:             if (state) {
 43193   006D5C  5191               	movf	setOutputPin@state& (0+255),w,b
 43194   006D5E  B4D8               	btfsc	status,2,c
 43195   006D60  D01E               	goto	l19439
 43196                           
 43197                           ; BSR set to: 0
 43198                           ;../digitalOut.c: 261:                LATA |= (1<<configs[io].no);
 43199   006D62  5194               	movf	setOutputPin@io& (0+255),w,b
 43200   006D64  0D04               	mullw	4
 43201   006D66  0E02               	movlw	2
 43202   006D68  26F3               	addwf	243,f,c
 43203   006D6A  0E00               	movlw	0
 43204   006D6C  22F4               	addwfc	244,f,c
 43205   006D6E  0E29               	movlw	low _configs
 43206   006D70  24F3               	addwf	243,w,c
 43207   006D72  6EF6               	movwf	tblptrl,c
 43208   006D74  0EEE               	movlw	high _configs
 43209   006D76  20F4               	addwfc	244,w,c
 43210   006D78  6EF7               	movwf	tblptrh,c
 43211   006D7A                     	if	1	;There are 3 active tblptr bytes
 43212   006D7A  6AF8               	clrf	tblptru,c
 43213   006D7C  0E00               	movlw	low (__mediumconst shr (0+16))
 43214   006D7E  22F8               	addwfc	tblptru,f,c
 43215   006D80                     	endif
 43216   006D80  0008               	tblrd		*
 43217   006D82  CFF5 F092          	movff	tablat,??_setOutputPin
 43218   006D86  0E01               	movlw	1
 43219   006D88  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 43220   006D8A  2B92               	incf	??_setOutputPin& (0+255),f,b
 43221   006D8C  D002               	goto	u19174
 43222   006D8E                     u19175:
 43223   006D8E  90D8               	bcf	status,0,c
 43224   006D90  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 43225   006D92                     u19174:
 43226   006D92  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 43227   006D94  D7FC               	goto	u19175
 43228   006D96  0100               	movlb	0	; () banked
 43229   006D98  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 43230   006D9A  1289               	iorwf	137,f,c	;volatile
 43231                           
 43232                           ;../digitalOut.c: 262:             } else {
 43233   006D9C  0012               	return	
 43234   006D9E                     l19439:
 43235                           
 43236                           ; BSR set to: 0
 43237                           ;../digitalOut.c: 264:                 LATA &= ~(1<<configs[io].no);
 43238   006D9E  5194               	movf	setOutputPin@io& (0+255),w,b
 43239   006DA0  0D04               	mullw	4
 43240   006DA2  0E02               	movlw	2
 43241   006DA4  26F3               	addwf	243,f,c
 43242   006DA6  0E00               	movlw	0
 43243   006DA8  22F4               	addwfc	244,f,c
 43244   006DAA  0E29               	movlw	low _configs
 43245   006DAC  24F3               	addwf	243,w,c
 43246   006DAE  6EF6               	movwf	tblptrl,c
 43247   006DB0  0EEE               	movlw	high _configs
 43248   006DB2  20F4               	addwfc	244,w,c
 43249   006DB4  6EF7               	movwf	tblptrh,c
 43250   006DB6                     	if	1	;There are 3 active tblptr bytes
 43251   006DB6  6AF8               	clrf	tblptru,c
 43252   006DB8  0E00               	movlw	low (__mediumconst shr (0+16))
 43253   006DBA  22F8               	addwfc	tblptru,f,c
 43254   006DBC                     	endif
 43255   006DBC  0008               	tblrd		*
 43256   006DBE  CFF5 F092          	movff	tablat,??_setOutputPin
 43257   006DC2  0E01               	movlw	1
 43258   006DC4  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 43259   006DC6  2B92               	incf	??_setOutputPin& (0+255),f,b
 43260   006DC8  D002               	goto	u19184
 43261   006DCA                     u19185:
 43262   006DCA  90D8               	bcf	status,0,c
 43263   006DCC  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 43264   006DCE                     u19184:
 43265   006DCE  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 43266   006DD0  D7FC               	goto	u19185
 43267   006DD2  0100               	movlb	0	; () banked
 43268   006DD4  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 43269   006DD6  0AFF               	xorlw	255
 43270   006DD8  1689               	andwf	137,f,c	;volatile
 43271   006DDA  0012               	return	
 43272   006DDC                     l19441:
 43273                           
 43274                           ; BSR set to: 0
 43275                           ;../digitalOut.c: 268:             if (state) {
 43276   006DDC  5191               	movf	setOutputPin@state& (0+255),w,b
 43277   006DDE  B4D8               	btfsc	status,2,c
 43278   006DE0  D01E               	goto	l19445
 43279                           
 43280                           ; BSR set to: 0
 43281                           ;../digitalOut.c: 270:                 LATB |= (1<<configs[io].no);
 43282   006DE2  5194               	movf	setOutputPin@io& (0+255),w,b
 43283   006DE4  0D04               	mullw	4
 43284   006DE6  0E02               	movlw	2
 43285   006DE8  26F3               	addwf	243,f,c
 43286   006DEA  0E00               	movlw	0
 43287   006DEC  22F4               	addwfc	244,f,c
 43288   006DEE  0E29               	movlw	low _configs
 43289   006DF0  24F3               	addwf	243,w,c
 43290   006DF2  6EF6               	movwf	tblptrl,c
 43291   006DF4  0EEE               	movlw	high _configs
 43292   006DF6  20F4               	addwfc	244,w,c
 43293   006DF8  6EF7               	movwf	tblptrh,c
 43294   006DFA                     	if	1	;There are 3 active tblptr bytes
 43295   006DFA  6AF8               	clrf	tblptru,c
 43296   006DFC  0E00               	movlw	low (__mediumconst shr (0+16))
 43297   006DFE  22F8               	addwfc	tblptru,f,c
 43298   006E00                     	endif
 43299   006E00  0008               	tblrd		*
 43300   006E02  CFF5 F092          	movff	tablat,??_setOutputPin
 43301   006E06  0E01               	movlw	1
 43302   006E08  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 43303   006E0A  2B92               	incf	??_setOutputPin& (0+255),f,b
 43304   006E0C  D002               	goto	u19204
 43305   006E0E                     u19205:
 43306   006E0E  90D8               	bcf	status,0,c
 43307   006E10  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 43308   006E12                     u19204:
 43309   006E12  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 43310   006E14  D7FC               	goto	u19205
 43311   006E16  0100               	movlb	0	; () banked
 43312   006E18  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 43313   006E1A  128A               	iorwf	138,f,c	;volatile
 43314                           
 43315                           ;../digitalOut.c: 271:             } else {
 43316   006E1C  0012               	return	
 43317   006E1E                     l19445:
 43318                           
 43319                           ; BSR set to: 0
 43320                           ;../digitalOut.c: 273:                 LATB &= ~(1<<configs[io].no);
 43321   006E1E  5194               	movf	setOutputPin@io& (0+255),w,b
 43322   006E20  0D04               	mullw	4
 43323   006E22  0E02               	movlw	2
 43324   006E24  26F3               	addwf	243,f,c
 43325   006E26  0E00               	movlw	0
 43326   006E28  22F4               	addwfc	244,f,c
 43327   006E2A  0E29               	movlw	low _configs
 43328   006E2C  24F3               	addwf	243,w,c
 43329   006E2E  6EF6               	movwf	tblptrl,c
 43330   006E30  0EEE               	movlw	high _configs
 43331   006E32  20F4               	addwfc	244,w,c
 43332   006E34  6EF7               	movwf	tblptrh,c
 43333   006E36                     	if	1	;There are 3 active tblptr bytes
 43334   006E36  6AF8               	clrf	tblptru,c
 43335   006E38  0E00               	movlw	low (__mediumconst shr (0+16))
 43336   006E3A  22F8               	addwfc	tblptru,f,c
 43337   006E3C                     	endif
 43338   006E3C  0008               	tblrd		*
 43339   006E3E  CFF5 F092          	movff	tablat,??_setOutputPin
 43340   006E42  0E01               	movlw	1
 43341   006E44  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 43342   006E46  2B92               	incf	??_setOutputPin& (0+255),f,b
 43343   006E48  D002               	goto	u19214
 43344   006E4A                     u19215:
 43345   006E4A  90D8               	bcf	status,0,c
 43346   006E4C  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 43347   006E4E                     u19214:
 43348   006E4E  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 43349   006E50  D7FC               	goto	u19215
 43350   006E52  0100               	movlb	0	; () banked
 43351   006E54  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 43352   006E56  0AFF               	xorlw	255
 43353   006E58  168A               	andwf	138,f,c	;volatile
 43354   006E5A  0012               	return	
 43355   006E5C                     l19447:
 43356                           
 43357                           ; BSR set to: 0
 43358                           ;../digitalOut.c: 277:             if (state) {
 43359   006E5C  5191               	movf	setOutputPin@state& (0+255),w,b
 43360   006E5E  B4D8               	btfsc	status,2,c
 43361   006E60  D01E               	goto	l19451
 43362                           
 43363                           ; BSR set to: 0
 43364                           ;../digitalOut.c: 279:                 LATC |= (1<<configs[io].no);
 43365   006E62  5194               	movf	setOutputPin@io& (0+255),w,b
 43366   006E64  0D04               	mullw	4
 43367   006E66  0E02               	movlw	2
 43368   006E68  26F3               	addwf	243,f,c
 43369   006E6A  0E00               	movlw	0
 43370   006E6C  22F4               	addwfc	244,f,c
 43371   006E6E  0E29               	movlw	low _configs
 43372   006E70  24F3               	addwf	243,w,c
 43373   006E72  6EF6               	movwf	tblptrl,c
 43374   006E74  0EEE               	movlw	high _configs
 43375   006E76  20F4               	addwfc	244,w,c
 43376   006E78  6EF7               	movwf	tblptrh,c
 43377   006E7A                     	if	1	;There are 3 active tblptr bytes
 43378   006E7A  6AF8               	clrf	tblptru,c
 43379   006E7C  0E00               	movlw	low (__mediumconst shr (0+16))
 43380   006E7E  22F8               	addwfc	tblptru,f,c
 43381   006E80                     	endif
 43382   006E80  0008               	tblrd		*
 43383   006E82  CFF5 F092          	movff	tablat,??_setOutputPin
 43384   006E86  0E01               	movlw	1
 43385   006E88  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 43386   006E8A  2B92               	incf	??_setOutputPin& (0+255),f,b
 43387   006E8C  D002               	goto	u19234
 43388   006E8E                     u19235:
 43389   006E8E  90D8               	bcf	status,0,c
 43390   006E90  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 43391   006E92                     u19234:
 43392   006E92  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 43393   006E94  D7FC               	goto	u19235
 43394   006E96  0100               	movlb	0	; () banked
 43395   006E98  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 43396   006E9A  128B               	iorwf	139,f,c	;volatile
 43397                           
 43398                           ;../digitalOut.c: 280:             } else {
 43399   006E9C  0012               	return	
 43400   006E9E                     l19451:
 43401                           
 43402                           ; BSR set to: 0
 43403                           ;../digitalOut.c: 282:                 LATC &= ~(1<<configs[io].no);
 43404   006E9E  5194               	movf	setOutputPin@io& (0+255),w,b
 43405   006EA0  0D04               	mullw	4
 43406   006EA2  0E02               	movlw	2
 43407   006EA4  26F3               	addwf	243,f,c
 43408   006EA6  0E00               	movlw	0
 43409   006EA8  22F4               	addwfc	244,f,c
 43410   006EAA  0E29               	movlw	low _configs
 43411   006EAC  24F3               	addwf	243,w,c
 43412   006EAE  6EF6               	movwf	tblptrl,c
 43413   006EB0  0EEE               	movlw	high _configs
 43414   006EB2  20F4               	addwfc	244,w,c
 43415   006EB4  6EF7               	movwf	tblptrh,c
 43416   006EB6                     	if	1	;There are 3 active tblptr bytes
 43417   006EB6  6AF8               	clrf	tblptru,c
 43418   006EB8  0E00               	movlw	low (__mediumconst shr (0+16))
 43419   006EBA  22F8               	addwfc	tblptru,f,c
 43420   006EBC                     	endif
 43421   006EBC  0008               	tblrd		*
 43422   006EBE  CFF5 F092          	movff	tablat,??_setOutputPin
 43423   006EC2  0E01               	movlw	1
 43424   006EC4  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 43425   006EC6  2B92               	incf	??_setOutputPin& (0+255),f,b
 43426   006EC8  D002               	goto	u19244
 43427   006ECA                     u19245:
 43428   006ECA  90D8               	bcf	status,0,c
 43429   006ECC  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 43430   006ECE                     u19244:
 43431   006ECE  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 43432   006ED0  D7FC               	goto	u19245
 43433   006ED2  0100               	movlb	0	; () banked
 43434   006ED4  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 43435   006ED6  0AFF               	xorlw	255
 43436   006ED8  168B               	andwf	139,f,c	;volatile
 43437   006EDA  0012               	return	
 43438   006EDC                     l19455:
 43439   006EDC  0100               	movlb	0	; () banked
 43440   006EDE  5194               	movf	setOutputPin@io& (0+255),w,b
 43441   006EE0  0D04               	mullw	4
 43442   006EE2  0E01               	movlw	1
 43443   006EE4  26F3               	addwf	243,f,c
 43444   006EE6  0E00               	movlw	0
 43445   006EE8  22F4               	addwfc	244,f,c
 43446   006EEA  0E29               	movlw	low _configs
 43447   006EEC  24F3               	addwf	243,w,c
 43448   006EEE  6EF6               	movwf	tblptrl,c
 43449   006EF0  0EEE               	movlw	high _configs
 43450   006EF2  20F4               	addwfc	244,w,c
 43451   006EF4  6EF7               	movwf	tblptrh,c
 43452   006EF6                     	if	1	;There are 3 active tblptr bytes
 43453   006EF6  6AF8               	clrf	tblptru,c
 43454   006EF8  0E00               	movlw	low (__mediumconst shr (0+16))
 43455   006EFA  22F8               	addwfc	tblptru,f,c
 43456   006EFC                     	endif
 43457   006EFC  0008               	tblrd		*
 43458   006EFE  50F5               	movf	tablat,w,c
 43459                           
 43460                           ; Switch size 1, requested type "simple"
 43461                           ; Number of cases is 3, Range of values is 65 to 67
 43462                           ; switch strategies available:
 43463                           ; Name         Instructions Cycles
 43464                           ; simple_byte           10     6 (average)
 43465                           ;	Chosen strategy is simple_byte
 43466   006F00  0A41               	xorlw	65	; case 65
 43467   006F02  B4D8               	btfsc	status,2,c
 43468   006F04  D72B               	goto	l19435
 43469   006F06  0A03               	xorlw	3	; case 66
 43470   006F08  B4D8               	btfsc	status,2,c
 43471   006F0A  D768               	goto	l19441
 43472   006F0C  0A01               	xorlw	1	; case 67
 43473   006F0E  A4D8               	btfss	status,2,c
 43474   006F10  0012               	return	
 43475   006F12  D7A4               	goto	l19447
 43476   006F14                     __end_of_setOutputPin:
 43477                           	callstack 0
 43478                           
 43479 ;; *************** function _getNV *****************
 43480 ;; Defined at:
 43481 ;;		line 182 in file "../../VLCBlib_PIC/nv.c"
 43482 ;; Parameters:    Size  Location     Type
 43483 ;;  index           1    wreg     unsigned char 
 43484 ;; Auto vars:     Size  Location     Type
 43485 ;;  index           1   48[BANK0 ] unsigned char 
 43486 ;; Return value:  Size  Location     Type
 43487 ;;                  2   45[BANK0 ] short 
 43488 ;; Registers used:
 43489 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 43490 ;; Tracked objects:
 43491 ;;		On entry : 0/0
 43492 ;;		On exit  : 0/0
 43493 ;;		Unchanged: 0/0
 43494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43495 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43496 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43497 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43498 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43499 ;;Total ram usage:        4 bytes
 43500 ;; Hardware stack levels used: 1
 43501 ;; Hardware stack levels required when called: 12
 43502 ;; This function calls:
 43503 ;;		Nothing
 43504 ;; This function is called by:
 43505 ;;		_setup
 43506 ;;		_loop
 43507 ;;		_APP_GetEventState
 43508 ;;		_configIO
 43509 ;;		_startDigitalOutput
 43510 ;;		_processOutputs
 43511 ;;		_setDigitalOutput
 43512 ;;		_initInputScan
 43513 ;;		_inputScan
 43514 ;;		_readInput
 43515 ;;		_consumer2QProcessMessage
 43516 ;;		_processActions
 43517 ;;		_sodTRCallback
 43518 ;;		_APP_nvValueChanged
 43519 ;;		_setOutputPosition
 43520 ;;		_initServos
 43521 ;;		_startServos
 43522 ;;		_setupTimer1
 43523 ;;		_setupTimer3
 43524 ;;		_pollServos
 43525 ;;		_startServoOutput
 43526 ;;		_startMultiOutput
 43527 ;;		_setServoState
 43528 ;;		_setBounceState
 43529 ;;		_setMultiState
 43530 ;;		_bounceDown
 43531 ;;		_bounceUp
 43532 ;;		_nvProcessMessage
 43533 ;;		_nvTRnvrdCallback
 43534 ;; This function uses a non-reentrant model
 43535 ;;
 43536                           
 43537                           	psect	text192
 43538   00BCA4                     __ptext192:
 43539                           	callstack 0
 43540   00BCA4                     _getNV:
 43541                           	callstack 14
 43542                           
 43543                           ; BSR set to: 0
 43544                           ;incstack = 0
 43545                           ;getNV@index stored from wreg
 43546   00BCA4  0100               	movlb	0	; () banked
 43547   00BCA6  6F90               	movwf	getNV@index& (0+255),b
 43548                           
 43549                           ;../../VLCBlib_PIC/nv.c: 183:     if (index == 0) return (15+7*16);
 43550   00BCA8  0100               	movlb	0	; () banked
 43551   00BCAA  5190               	movf	getNV@index& (0+255),w,b
 43552   00BCAC  A4D8               	btfss	status,2,c
 43553   00BCAE  D005               	goto	l19423
 43554                           
 43555                           ; BSR set to: 0
 43556   00BCB0  0E00               	movlw	0
 43557   00BCB2  6F8E               	movwf	(?_getNV+1)& (0+255),b
 43558   00BCB4  0E7F               	movlw	127
 43559   00BCB6  6F8D               	movwf	?_getNV& (0+255),b
 43560   00BCB8  0012               	return	
 43561   00BCBA                     l19423:
 43562                           
 43563                           ; BSR set to: 0
 43564                           ;../../VLCBlib_PIC/nv.c: 184:     if (index > (15+7*16)) return -CMDERR_INV_NV_IDX;
 43565   00BCBA  0E7F               	movlw	127
 43566   00BCBC  6590               	cpfsgt	getNV@index& (0+255),b
 43567   00BCBE  D005               	goto	l19429
 43568                           
 43569                           ; BSR set to: 0
 43570   00BCC0  0EFF               	movlw	255
 43571   00BCC2  6F8E               	movwf	(?_getNV+1)& (0+255),b
 43572   00BCC4  0EF6               	movlw	246
 43573   00BCC6  6F8D               	movwf	?_getNV& (0+255),b
 43574   00BCC8  0012               	return	
 43575   00BCCA                     l19429:
 43576                           
 43577                           ; BSR set to: 0
 43578                           ;../../VLCBlib_PIC/nv.c: 186:     return nvCache[index];
 43579   00BCCA  0E00               	movlw	low _nvCache
 43580   00BCCC  2590               	addwf	getNV@index& (0+255),w,b
 43581   00BCCE  6ED9               	movwf	fsr2l,c
 43582   00BCD0  6ADA               	clrf	fsr2h,c
 43583   00BCD2  0E04               	movlw	high _nvCache
 43584   00BCD4  22DA               	addwfc	fsr2h,f,c
 43585   00BCD6  50DF               	movf	indf2,w,c
 43586   00BCD8  6F8F               	movwf	??_getNV& (0+255),b
 43587   00BCDA  518F               	movf	??_getNV& (0+255),w,b
 43588   00BCDC  6F8D               	movwf	?_getNV& (0+255),b
 43589   00BCDE  6B8E               	clrf	(?_getNV+1)& (0+255),b
 43590                           
 43591                           ; BSR set to: 0
 43592   00BCE0  0012               	return		;funcret
 43593   00BCE2                     __end_of_getNV:
 43594                           	callstack 0
 43595                           
 43596 ;; *************** function _readNVM *****************
 43597 ;; Defined at:
 43598 ;;		line 550 in file "../../VLCBlib_PIC/nvm.c"
 43599 ;; Parameters:    Size  Location     Type
 43600 ;;  type            1    wreg     enum E12732
 43601 ;;  index           3   49[BANK0 ] unsigned um
 43602 ;; Auto vars:     Size  Location     Type
 43603 ;;  type            1   54[BANK0 ] enum E12732
 43604 ;; Return value:  Size  Location     Type
 43605 ;;                  2   49[BANK0 ] short 
 43606 ;; Registers used:
 43607 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 43608 ;; Tracked objects:
 43609 ;;		On entry : 0/0
 43610 ;;		On exit  : 0/0
 43611 ;;		Unchanged: 0/0
 43612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43613 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43614 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43615 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43616 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43617 ;;Total ram usage:        6 bytes
 43618 ;; Hardware stack levels used: 1
 43619 ;; Hardware stack levels required when called: 13
 43620 ;; This function calls:
 43621 ;;		_EEPROM_Read
 43622 ;;		_FLASH_Read
 43623 ;; This function is called by:
 43624 ;;		_APP_GetEventState
 43625 ;;		_configIO
 43626 ;;		_initInputScan
 43627 ;;		_initServos
 43628 ;;		_bootPowerUp
 43629 ;;		_mnsPowerUp
 43630 ;;		_loadNvCache
 43631 ;;		_main
 43632 ;;		_canPowerUp
 43633 ;;		_doNnevn
 43634 ;;		_removeTableEntry
 43635 ;;		_addEvent
 43636 ;;		_writeEv
 43637 ;;		_getEv
 43638 ;;		_numEv
 43639 ;;		_getEVs
 43640 ;;		_getNN
 43641 ;;		_getEN
 43642 ;;		_validStart
 43643 ;;		_deleteHappeningRange
 43644 ;; This function uses a non-reentrant model
 43645 ;;
 43646                           
 43647                           	psect	text193
 43648   00B3A0                     __ptext193:
 43649                           	callstack 0
 43650   00B3A0                     _readNVM:
 43651                           	callstack 15
 43652                           
 43653                           ; BSR set to: 0
 43654                           ;incstack = 0
 43655                           ;readNVM@type stored from wreg
 43656   00B3A0  0100               	movlb	0	; () banked
 43657   00B3A2  6F96               	movwf	readNVM@type& (0+255),b
 43658                           
 43659                           ;../../VLCBlib_PIC/nvm.c: 551:     switch(type) {
 43660   00B3A4  D01D               	goto	l18691
 43661   00B3A6                     l18677:
 43662                           
 43663                           ; BSR set to: 0
 43664                           ;../../VLCBlib_PIC/nvm.c: 553:             return EEPROM_Read((uint16_t)index);
 43665   00B3A6  C091  F08D         	movff	readNVM@index,EEPROM_Read@index
 43666   00B3AA  C092  F08E         	movff	readNVM@index+1,EEPROM_Read@index+1
 43667   00B3AE  EC53  F062         	call	_EEPROM_Read	;wreg free
 43668   00B3B2  0100               	movlb	0	; () banked
 43669   00B3B4  6F94               	movwf	??_readNVM& (0+255),b
 43670   00B3B6  5194               	movf	??_readNVM& (0+255),w,b
 43671   00B3B8  6F91               	movwf	?_readNVM& (0+255),b
 43672   00B3BA  6B92               	clrf	(?_readNVM+1)& (0+255),b
 43673   00B3BC  0012               	return	
 43674   00B3BE                     l18681:
 43675                           
 43676                           ; BSR set to: 0
 43677                           ;../../VLCBlib_PIC/nvm.c: 556:             return FLASH_Read((uint16_t)index);
 43678   00B3BE  C091  F08D         	movff	readNVM@index,FLASH_Read@address
 43679   00B3C2  C092  F08E         	movff	readNVM@index+1,FLASH_Read@address+1
 43680   00B3C6  ECAC  F05C         	call	_FLASH_Read	;wreg free
 43681   00B3CA  0100               	movlb	0	; () banked
 43682   00B3CC  6F94               	movwf	??_readNVM& (0+255),b
 43683   00B3CE  5194               	movf	??_readNVM& (0+255),w,b
 43684   00B3D0  6F91               	movwf	?_readNVM& (0+255),b
 43685   00B3D2  6B92               	clrf	(?_readNVM+1)& (0+255),b
 43686   00B3D4  0012               	return	
 43687   00B3D6                     l18685:
 43688                           
 43689                           ; BSR set to: 0
 43690                           ;../../VLCBlib_PIC/nvm.c: 562:             return -GRSP_UNKNOWN_NVM_TYPE;
 43691   00B3D6  0EFF               	movlw	255
 43692   00B3D8  6F92               	movwf	(?_readNVM+1)& (0+255),b
 43693   00B3DA  0E02               	movlw	2
 43694   00B3DC  6F91               	movwf	?_readNVM& (0+255),b
 43695   00B3DE  0012               	return	
 43696   00B3E0                     l18691:
 43697   00B3E0  0100               	movlb	0	; () banked
 43698   00B3E2  5196               	movf	readNVM@type& (0+255),w,b
 43699   00B3E4  6F94               	movwf	??_readNVM& (0+255),b
 43700   00B3E6  6B95               	clrf	(??_readNVM+1)& (0+255),b
 43701                           
 43702                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 43703                           ; Switch size 1, requested type "simple"
 43704                           ; Number of cases is 1, Range of values is 0 to 0
 43705                           ; switch strategies available:
 43706                           ; Name         Instructions Cycles
 43707                           ; simple_byte            4     3 (average)
 43708                           ;	Chosen strategy is simple_byte
 43709   00B3E8  5195               	movf	(??_readNVM+1)& (0+255),w,b
 43710   00B3EA  0A00               	xorlw	0	; case 0
 43711   00B3EC  A4D8               	btfss	status,2,c
 43712   00B3EE  D7F3               	goto	l18685
 43713                           
 43714                           ; BSR set to: 0
 43715                           ; Switch size 1, requested type "simple"
 43716                           ; Number of cases is 2, Range of values is 0 to 1
 43717                           ; switch strategies available:
 43718                           ; Name         Instructions Cycles
 43719                           ; simple_byte            7     4 (average)
 43720                           ;	Chosen strategy is simple_byte
 43721   00B3F0  5194               	movf	??_readNVM& (0+255),w,b
 43722   00B3F2  0A00               	xorlw	0	; case 0
 43723   00B3F4  B4D8               	btfsc	status,2,c
 43724   00B3F6  D7D7               	goto	l18677
 43725   00B3F8  0A01               	xorlw	1	; case 1
 43726   00B3FA  B4D8               	btfsc	status,2,c
 43727   00B3FC  D7E0               	goto	l18681
 43728   00B3FE  D7EB               	goto	l18685
 43729   00B400                     __end_of_readNVM:
 43730                           	callstack 0
 43731                           
 43732 ;; *************** function _FLASH_Read *****************
 43733 ;; Defined at:
 43734 ;;		line 295 in file "../../VLCBlib_PIC/nvm.c"
 43735 ;; Parameters:    Size  Location     Type
 43736 ;;  address         2   45[BANK0 ] unsigned short 
 43737 ;; Auto vars:     Size  Location     Type
 43738 ;;		None
 43739 ;; Return value:  Size  Location     Type
 43740 ;;                  1    wreg      unsigned char 
 43741 ;; Registers used:
 43742 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 43743 ;; Tracked objects:
 43744 ;;		On entry : 0/0
 43745 ;;		On exit  : 0/0
 43746 ;;		Unchanged: 0/0
 43747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43748 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43750 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43751 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43752 ;;Total ram usage:        4 bytes
 43753 ;; Hardware stack levels used: 1
 43754 ;; Hardware stack levels required when called: 12
 43755 ;; This function calls:
 43756 ;;		Nothing
 43757 ;; This function is called by:
 43758 ;;		_readNVM
 43759 ;; This function uses a non-reentrant model
 43760 ;;
 43761                           
 43762                           	psect	text194
 43763   00B958                     __ptext194:
 43764                           	callstack 0
 43765   00B958                     _FLASH_Read:
 43766                           	callstack 15
 43767                           
 43768                           ;../../VLCBlib_PIC/nvm.c: 297:     if ((address&(~((flash_address_t)64 -1))) == flashBlo
      +                          ck) {
 43769                           
 43770                           ; BSR set to: 0
 43771                           ;incstack = 0
 43772   00B958  0EC0               	movlw	192
 43773   00B95A  0100               	movlb	0	; () banked
 43774   00B95C  158D               	andwf	FLASH_Read@address& (0+255),w,b
 43775   00B95E  6F8F               	movwf	??_FLASH_Read& (0+255),b
 43776   00B960  0EFF               	movlw	255
 43777   00B962  158E               	andwf	(FLASH_Read@address+1)& (0+255),w,b
 43778   00B964  6F90               	movwf	(??_FLASH_Read+1)& (0+255),b
 43779   00B966  51D1               	movf	_flashBlock& (0+255),w,b
 43780   00B968  198F               	xorwf	??_FLASH_Read& (0+255),w,b
 43781   00B96A  E112               	bnz	l18667
 43782   00B96C  51D2               	movf	(_flashBlock+1)& (0+255),w,b
 43783   00B96E  1990               	xorwf	(??_FLASH_Read+1)& (0+255),w,b
 43784   00B970  A4D8               	btfss	status,2,c
 43785   00B972  D00E               	goto	l18667
 43786                           
 43787                           ; BSR set to: 0
 43788                           ;../../VLCBlib_PIC/nvm.c: 299:         return flashBuffer[(address&(64 -1))];
 43789   00B974  0E3F               	movlw	63
 43790   00B976  158D               	andwf	FLASH_Read@address& (0+255),w,b
 43791   00B978  6F8F               	movwf	??_FLASH_Read& (0+255),b
 43792   00B97A  0E00               	movlw	0
 43793   00B97C  158E               	andwf	(FLASH_Read@address+1)& (0+255),w,b
 43794   00B97E  6F90               	movwf	(??_FLASH_Read+1)& (0+255),b
 43795   00B980  0E48               	movlw	low _flashBuffer
 43796   00B982  258F               	addwf	??_FLASH_Read& (0+255),w,b
 43797   00B984  6ED9               	movwf	fsr2l,c
 43798   00B986  0E03               	movlw	high _flashBuffer
 43799   00B988  2190               	addwfc	(??_FLASH_Read+1)& (0+255),w,b
 43800   00B98A  6EDA               	movwf	fsr2h,c
 43801   00B98C  50DF               	movf	indf2,w,c
 43802   00B98E  0012               	return	
 43803   00B990                     l18667:
 43804                           
 43805                           ; BSR set to: 0
 43806                           ;../../VLCBlib_PIC/nvm.c: 303:         TBLPTR = address;
 43807   00B990  C08D  FFF6         	movff	FLASH_Read@address,tblptrl	;volatile
 43808   00B994  C08E  FFF7         	movff	FLASH_Read@address+1,tblptrh	;volatile
 43809   00B998  6AF8               	clrf	248,c	;volatile
 43810                           
 43811                           ; BSR set to: 0
 43812                           ;../../VLCBlib_PIC/nvm.c: 304:         TBLPTRU = 0;
 43813   00B99A  0E00               	movlw	0
 43814   00B99C  6EF8               	movwf	248,c	;volatile
 43815   00B99E  0008               	tblrd		*	;# 
 43816                           
 43817                           ;../../VLCBlib_PIC/nvm.c: 315:         return TABLAT;
 43818   00B9A0  50F5               	movf	245,w,c	;volatile
 43819   00B9A2  0012               	return		;funcret
 43820   00B9A4                     __end_of_FLASH_Read:
 43821                           	callstack 0
 43822                           
 43823 ;; *************** function _EEPROM_Read *****************
 43824 ;; Defined at:
 43825 ;;		line 171 in file "../../VLCBlib_PIC/nvm.c"
 43826 ;; Parameters:    Size  Location     Type
 43827 ;;  index           2   45[BANK0 ] unsigned short 
 43828 ;; Auto vars:     Size  Location     Type
 43829 ;;		None
 43830 ;; Return value:  Size  Location     Type
 43831 ;;                  1    wreg      unsigned char 
 43832 ;; Registers used:
 43833 ;;		wreg, status,2
 43834 ;; Tracked objects:
 43835 ;;		On entry : 0/0
 43836 ;;		On exit  : 0/0
 43837 ;;		Unchanged: 0/0
 43838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43839 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43842 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43843 ;;Total ram usage:        2 bytes
 43844 ;; Hardware stack levels used: 1
 43845 ;; Hardware stack levels required when called: 12
 43846 ;; This function calls:
 43847 ;;		Nothing
 43848 ;; This function is called by:
 43849 ;;		_EEPROM_Write
 43850 ;;		_readNVM
 43851 ;; This function uses a non-reentrant model
 43852 ;;
 43853                           
 43854                           	psect	text195
 43855   00C4A6                     __ptext195:
 43856                           	callstack 0
 43857   00C4A6                     _EEPROM_Read:
 43858                           	callstack 15
 43859                           
 43860                           ;../../VLCBlib_PIC/nvm.c: 174:     while (EECON1bits.WR)
 43861                           
 43862                           ;../../VLCBlib_PIC/nvm.c: 175:         ;
 43863                           
 43864                           ;incstack = 0
 43865   00C4A6  B27F               	btfsc	127,1,c	;volsfr
 43866   00C4A8  D7FE               	goto	__ptext195
 43867                           
 43868                           ;../../VLCBlib_PIC/nvm.c: 177:     EEADRH = (index >> 8)&0xFF;
 43869   00C4AA  0100               	movlb	0	; () banked
 43870   00C4AC  518E               	movf	(EEPROM_Read@index+1)& (0+255),w,b
 43871   00C4AE  6E75               	movwf	117,c	;volatile
 43872                           
 43873                           ; BSR set to: 0
 43874                           ;../../VLCBlib_PIC/nvm.c: 178:     EEADR = index & 0xFF;
 43875   00C4B0  C08D  FF74         	movff	EEPROM_Read@index,3956	;volatile
 43876                           
 43877                           ; BSR set to: 0
 43878                           ;../../VLCBlib_PIC/nvm.c: 179:     EECON1bits.EEPGD = 0;
 43879   00C4B4  9E7F               	bcf	127,7,c	;volsfr
 43880                           
 43881                           ; BSR set to: 0
 43882                           ;../../VLCBlib_PIC/nvm.c: 180:     EECON1bits.CFGS = 0;
 43883   00C4B6  9C7F               	bcf	127,6,c	;volsfr
 43884                           
 43885                           ; BSR set to: 0
 43886                           ;../../VLCBlib_PIC/nvm.c: 181:     EECON1bits.RD = 1;
 43887   00C4B8  807F               	bsf	127,0,c	;volsfr
 43888   00C4BA                     l2165:
 43889                           
 43890                           ;../../VLCBlib_PIC/nvm.c: 182:     while (EECON1bits.RD)
 43891   00C4BA  B07F               	btfsc	127,0,c	;volsfr
 43892   00C4BC  D7FE               	goto	l2165
 43893   00C4BE  0000               	nop		;# 
 43894                           
 43895                           ;../../VLCBlib_PIC/nvm.c: 187:     return EEDATA;
 43896   00C4C0  5073               	movf	115,w,c	;volatile
 43897   00C4C2  0012               	return		;funcret
 43898   00C4C4                     __end_of_EEPROM_Read:
 43899                           	callstack 0
 43900                           
 43901 ;; *************** function _factoryResetGlobalEvents *****************
 43902 ;; Defined at:
 43903 ;;		line 100 in file "../universalEvents.c"
 43904 ;; Parameters:    Size  Location     Type
 43905 ;;		None
 43906 ;; Auto vars:     Size  Location     Type
 43907 ;;		None
 43908 ;; Return value:  Size  Location     Type
 43909 ;;                  1    wreg      void 
 43910 ;; Registers used:
 43911 ;;		None
 43912 ;; Tracked objects:
 43913 ;;		On entry : 0/0
 43914 ;;		On exit  : 0/0
 43915 ;;		Unchanged: 0/0
 43916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43921 ;;Total ram usage:        0 bytes
 43922 ;; Hardware stack levels used: 1
 43923 ;; Hardware stack levels required when called: 12
 43924 ;; This function calls:
 43925 ;;		Nothing
 43926 ;; This function is called by:
 43927 ;;		_APP_factoryReset
 43928 ;; This function uses a non-reentrant model
 43929 ;;
 43930                           
 43931                           	psect	text196
 43932   00C652                     __ptext196:
 43933                           	callstack 0
 43934   00C652                     _factoryResetGlobalEvents:
 43935                           	callstack 14
 43936                           
 43937                           ;incstack = 0
 43938   00C652  0012               	return		;funcret
 43939   00C654                     __end_of_factoryResetGlobalEvents:
 43940                           	callstack 0
 43941                           
 43942 ;; *************** function _APP_testMode *****************
 43943 ;; Defined at:
 43944 ;;		line 229 in file "../main.c"
 43945 ;; Parameters:    Size  Location     Type
 43946 ;;		None
 43947 ;; Auto vars:     Size  Location     Type
 43948 ;;		None
 43949 ;; Return value:  Size  Location     Type
 43950 ;;                  1    wreg      void 
 43951 ;; Registers used:
 43952 ;;		None
 43953 ;; Tracked objects:
 43954 ;;		On entry : 0/0
 43955 ;;		On exit  : 0/0
 43956 ;;		Unchanged: 0/0
 43957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43962 ;;Total ram usage:        0 bytes
 43963 ;; Hardware stack levels used: 1
 43964 ;; Hardware stack levels required when called: 12
 43965 ;; This function calls:
 43966 ;;		Nothing
 43967 ;; This function is called by:
 43968 ;;		_checkPowerOnPb
 43969 ;; This function uses a non-reentrant model
 43970 ;;
 43971                           
 43972                           	psect	text197
 43973   00C654                     __ptext197:
 43974                           	callstack 0
 43975   00C654                     _APP_testMode:
 43976                           	callstack 17
 43977                           
 43978                           ;incstack = 0
 43979   00C654  0012               	return		;funcret
 43980   00C656                     __end_of_APP_testMode:
 43981                           	callstack 0
 43982                           
 43983 ;; *************** function _isrLow *****************
 43984 ;; Defined at:
 43985 ;;		line 1332 in file "../../VLCBlib_PIC/vlcb.c"
 43986 ;; Parameters:    Size  Location     Type
 43987 ;;		None
 43988 ;; Auto vars:     Size  Location     Type
 43989 ;;		None
 43990 ;; Return value:  Size  Location     Type
 43991 ;;                  1    wreg      void 
 43992 ;; Registers used:
 43993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 43994 ;; Tracked objects:
 43995 ;;		On entry : 0/0
 43996 ;;		On exit  : 0/0
 43997 ;;		Unchanged: 0/0
 43998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44001 ;;      Temps:          0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44002 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44003 ;;Total ram usage:       15 bytes
 44004 ;; Hardware stack levels used: 1
 44005 ;; Hardware stack levels required when called: 11
 44006 ;; This function calls:
 44007 ;;		_lowIsr
 44008 ;; This function is called by:
 44009 ;;		Interrupt level 1
 44010 ;; This function uses a non-reentrant model
 44011 ;;
 44012                           
 44013 ;; *************** function _isrHigh *****************
 44014 ;; Defined at:
 44015 ;;		line 1325 in file "../../VLCBlib_PIC/vlcb.c"
 44016 ;; Parameters:    Size  Location     Type
 44017 ;;		None
 44018 ;; Auto vars:     Size  Location     Type
 44019 ;;		None
 44020 ;; Return value:  Size  Location     Type
 44021 ;;                  1    wreg      void 
 44022 ;; Registers used:
 44023 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 44024 ;; Tracked objects:
 44025 ;;		On entry : 0/0
 44026 ;;		On exit  : 0/0
 44027 ;;		Unchanged: 0/0
 44028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44031 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44032 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44033 ;;Total ram usage:       12 bytes
 44034 ;; Hardware stack levels used: 1
 44035 ;; Hardware stack levels required when called: 5
 44036 ;; This function calls:
 44037 ;;		_highIsr
 44038 ;; This function is called by:
 44039 ;;		Interrupt level 2
 44040 ;; This function uses a non-reentrant model
 44041 ;;
 44042                           
 44043                           	psect	mainSec
 44044   008476                     __pmainSec:
 44045                           	callstack 0
 44046   008476                     _isrLow:
 44047                           	callstack 2
 44048                           
 44049                           ;incstack = 0
 44050   008476  8054               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
 44051   008478  CFD8 F07E          	movff	status,??_isrLow
 44052   00847C  CFE8 F07F          	movff	wreg,??_isrLow+1
 44053   008480  CFE0 F080          	movff	bsr,??_isrLow+2
 44054   008484  CFFA F081          	movff	pclath,??_isrLow+3
 44055   008488  CFFB F082          	movff	pclatu,??_isrLow+4
 44056   00848C  CFE1 F083          	movff	fsr1l,??_isrLow+5
 44057   008490  CFE2 F084          	movff	fsr1h,??_isrLow+6
 44058   008494  CFD9 F085          	movff	fsr2l,??_isrLow+7
 44059   008498  CFDA F086          	movff	fsr2h,??_isrLow+8
 44060   00849C  CFF3 F087          	movff	prodl,??_isrLow+9
 44061   0084A0  CFF4 F088          	movff	prodh,??_isrLow+10
 44062   0084A4  CFF6 F089          	movff	tblptrl,??_isrLow+11
 44063   0084A8  CFF7 F08A          	movff	tblptrh,??_isrLow+12
 44064   0084AC  CFF8 F08B          	movff	tblptru,??_isrLow+13
 44065   0084B0  CFF5 F08C          	movff	tablat,??_isrLow+14
 44066   0084B4                     
 44067                           ;../../VLCBlib_PIC/vlcb.c: 1333:     lowIsr();
 44068   0084B4  ECCA  F047         	call	_lowIsr	;wreg free
 44069   0084B8  C08C  FFF5         	movff	??_isrLow+14,tablat
 44070   0084BC  C08B  FFF8         	movff	??_isrLow+13,tblptru
 44071   0084C0  C08A  FFF7         	movff	??_isrLow+12,tblptrh
 44072   0084C4  C089  FFF6         	movff	??_isrLow+11,tblptrl
 44073   0084C8  C088  FFF4         	movff	??_isrLow+10,prodh
 44074   0084CC  C087  FFF3         	movff	??_isrLow+9,prodl
 44075   0084D0  C086  FFDA         	movff	??_isrLow+8,fsr2h
 44076   0084D4  C085  FFD9         	movff	??_isrLow+7,fsr2l
 44077   0084D8  C084  FFE2         	movff	??_isrLow+6,fsr1h
 44078   0084DC  C083  FFE1         	movff	??_isrLow+5,fsr1l
 44079   0084E0  C082  FFFB         	movff	??_isrLow+4,pclatu
 44080   0084E4  C081  FFFA         	movff	??_isrLow+3,pclath
 44081   0084E8  C080  FFE0         	movff	??_isrLow+2,bsr
 44082   0084EC  C07F  FFE8         	movff	??_isrLow+1,wreg
 44083   0084F0  C07E  FFD8         	movff	??_isrLow,status
 44084   0084F4  9054               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 44085   0084F6  0010               	retfie	
 44086   0084F8                     __end_of_isrLow:
 44087                           	callstack 0
 44088   0084F8                     _isrHigh:
 44089                           	callstack 2
 44090                           
 44091                           ;incstack = 0
 44092   0084F8  8254               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 44093   0084FA  CFFA F01F          	movff	pclath,??_isrHigh
 44094   0084FE  CFFB F020          	movff	pclatu,??_isrHigh+1
 44095   008502  CFE1 F021          	movff	fsr1l,??_isrHigh+2
 44096   008506  CFE2 F022          	movff	fsr1h,??_isrHigh+3
 44097   00850A  CFD9 F023          	movff	fsr2l,??_isrHigh+4
 44098   00850E  CFDA F024          	movff	fsr2h,??_isrHigh+5
 44099   008512  CFF3 F025          	movff	prodl,??_isrHigh+6
 44100   008516  CFF4 F026          	movff	prodh,??_isrHigh+7
 44101   00851A  CFF6 F027          	movff	tblptrl,??_isrHigh+8
 44102   00851E  CFF7 F028          	movff	tblptrh,??_isrHigh+9
 44103   008522  CFF8 F029          	movff	tblptru,??_isrHigh+10
 44104   008526  CFF5 F02A          	movff	tablat,??_isrHigh+11
 44105   00852A                     
 44106                           ;../../VLCBlib_PIC/vlcb.c: 1326:     highIsr();
 44107   00852A  EC31  F048         	call	_highIsr	;wreg free
 44108   00852E  C02A  FFF5         	movff	??_isrHigh+11,tablat
 44109   008532  C029  FFF8         	movff	??_isrHigh+10,tblptru
 44110   008536  C028  FFF7         	movff	??_isrHigh+9,tblptrh
 44111   00853A  C027  FFF6         	movff	??_isrHigh+8,tblptrl
 44112   00853E  C026  FFF4         	movff	??_isrHigh+7,prodh
 44113   008542  C025  FFF3         	movff	??_isrHigh+6,prodl
 44114   008546  C024  FFDA         	movff	??_isrHigh+5,fsr2h
 44115   00854A  C023  FFD9         	movff	??_isrHigh+4,fsr2l
 44116   00854E  C022  FFE2         	movff	??_isrHigh+3,fsr1h
 44117   008552  C021  FFE1         	movff	??_isrHigh+2,fsr1l
 44118   008556  C020  FFFB         	movff	??_isrHigh+1,pclatu
 44119   00855A  C01F  FFFA         	movff	??_isrHigh,pclath
 44120   00855E  9254               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 44121   008560  0011               	retfie		f
 44122   008562                     __end_of_isrHigh:
 44123                           	callstack 0
 44124                           
 44125                           	psect	intcodelo
 44126   000818                     __pintcodelo:
 44127                           	callstack 2
 44128   000818  EF3B  F042         	goto	_isrLow
 44129                           
 44130 ;; *************** function _lowIsr *****************
 44131 ;; Defined at:
 44132 ;;		line 1077 in file "../../VLCBlib_PIC/vlcb.c"
 44133 ;; Parameters:    Size  Location     Type
 44134 ;;		None
 44135 ;; Auto vars:     Size  Location     Type
 44136 ;;  i               1   29[BANK0 ] unsigned char 
 44137 ;; Return value:  Size  Location     Type
 44138 ;;                  1    wreg      void 
 44139 ;; Registers used:
 44140 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 44141 ;; Tracked objects:
 44142 ;;		On entry : 0/0
 44143 ;;		On exit  : 0/0
 44144 ;;		Unchanged: 0/0
 44145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44147 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44148 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44149 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44150 ;;Total ram usage:        5 bytes
 44151 ;; Hardware stack levels used: 1
 44152 ;; Hardware stack levels required when called: 10
 44153 ;; This function calls:
 44154 ;;		NULL
 44155 ;;		_APP_lowIsr
 44156 ;;		_canIsr
 44157 ;;		_mnsLowIsr
 44158 ;; This function is called by:
 44159 ;;		_isrLow
 44160 ;; This function uses a non-reentrant model
 44161 ;;
 44162                           
 44163                           	psect	text199
 44164   008F94                     __ptext199:
 44165                           	callstack 0
 44166   008F94                     _lowIsr:
 44167                           	callstack 2
 44168                           
 44169                           ;../../VLCBlib_PIC/vlcb.c: 1078:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1080:     for 
      +                          (i=0; i<9; i++) {
 44170                           
 44171                           ;incstack = 0
 44172   008F94  0E00               	movlw	0
 44173   008F96  0100               	movlb	0	; () banked
 44174   008F98  6F7D               	movwf	lowIsr@i& (0+255),b
 44175   008F9A                     i1l24945:
 44176                           
 44177                           ; BSR set to: 0
 44178                           ;../../VLCBlib_PIC/vlcb.c: 1081:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->lowIsr != ((void*)0))) {
 44179   008F9A  517D               	movf	lowIsr@i& (0+255),w,b
 44180   008F9C  0D02               	mullw	2
 44181   008F9E  0E69               	movlw	low _services
 44182   008FA0  24F3               	addwf	243,w,c
 44183   008FA2  6EF6               	movwf	tblptrl,c
 44184   008FA4  0EEE               	movlw	high _services
 44185   008FA6  20F4               	addwfc	244,w,c
 44186   008FA8  6EF7               	movwf	tblptrh,c
 44187   008FAA                     	if	1	;There are 3 active tblptr bytes
 44188   008FAA  6AF8               	clrf	tblptru,c
 44189   008FAC  0E00               	movlw	low (__mediumconst shr (0+16))
 44190   008FAE  22F8               	addwfc	tblptru,f,c
 44191   008FB0                     	endif
 44192   008FB0  0009               	tblrd		*+
 44193   008FB2  50F5               	movf	tablat,w,c
 44194   008FB4  0009               	tblrd		*+
 44195   008FB6  10F5               	iorwf	tablat,w,c
 44196   008FB8  B4D8               	btfsc	status,2,c
 44197   008FBA  D04B               	goto	i1u2681_29
 44198                           
 44199                           ; BSR set to: 0
 44200   008FBC  517D               	movf	lowIsr@i& (0+255),w,b
 44201   008FBE  0D02               	mullw	2
 44202   008FC0  0E69               	movlw	low _services
 44203   008FC2  24F3               	addwf	243,w,c
 44204   008FC4  6EF6               	movwf	tblptrl,c
 44205   008FC6  0EEE               	movlw	high _services
 44206   008FC8  20F4               	addwfc	244,w,c
 44207   008FCA  6EF7               	movwf	tblptrh,c
 44208   008FCC                     	if	1	;There are 3 active tblptr bytes
 44209   008FCC  6AF8               	clrf	tblptru,c
 44210   008FCE  0E00               	movlw	low (__mediumconst shr (0+16))
 44211   008FD0  22F8               	addwfc	tblptru,f,c
 44212   008FD2                     	endif
 44213   008FD2  0009               	tblrd		*+
 44214   008FD4  CFF5 F079          	movff	tablat,??_lowIsr
 44215   008FD8  0009               	tblrd		*+
 44216   008FDA  CFF5 F07A          	movff	tablat,??_lowIsr+1
 44217   008FDE  0E0C               	movlw	12
 44218   008FE0  2779               	addwf	??_lowIsr& (0+255),f,b
 44219   008FE2  0E00               	movlw	0
 44220   008FE4  237A               	addwfc	(??_lowIsr+1)& (0+255),f,b
 44221   008FE6  C079  FFF6         	movff	??_lowIsr,tblptrl
 44222   008FEA  C07A  FFF7         	movff	??_lowIsr+1,tblptrh
 44223   008FEE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 44224   008FEE  6AF8               	clrf	tblptru,c
 44225   008FF0                     	endif
 44226   008FF0                     	if	0	;tblptru may be non-zero
 44227   008FF0                     	endif
 44228   008FF0  0009               	tblrd		*+
 44229   008FF2  50F5               	movf	tablat,w,c
 44230   008FF4  0009               	tblrd		*+
 44231   008FF6  10F5               	iorwf	tablat,w,c
 44232   008FF8  B4D8               	btfsc	status,2,c
 44233   008FFA  D02B               	goto	i1u2681_29
 44234                           
 44235                           ; BSR set to: 0
 44236                           ;../../VLCBlib_PIC/vlcb.c: 1082:             services[i]->lowIsr();
 44237   008FFC  517D               	movf	lowIsr@i& (0+255),w,b
 44238   008FFE  0D02               	mullw	2
 44239   009000  0E69               	movlw	low _services
 44240   009002  24F3               	addwf	243,w,c
 44241   009004  6EF6               	movwf	tblptrl,c
 44242   009006  0EEE               	movlw	high _services
 44243   009008  20F4               	addwfc	244,w,c
 44244   00900A  6EF7               	movwf	tblptrh,c
 44245   00900C                     	if	1	;There are 3 active tblptr bytes
 44246   00900C  6AF8               	clrf	tblptru,c
 44247   00900E  0E00               	movlw	low (__mediumconst shr (0+16))
 44248   009010  22F8               	addwfc	tblptru,f,c
 44249   009012                     	endif
 44250   009012  0009               	tblrd		*+
 44251   009014  CFF5 F079          	movff	tablat,??_lowIsr
 44252   009018  0009               	tblrd		*+
 44253   00901A  CFF5 F07A          	movff	tablat,??_lowIsr+1
 44254   00901E  0E0C               	movlw	12
 44255   009020  2779               	addwf	??_lowIsr& (0+255),f,b
 44256   009022  0E00               	movlw	0
 44257   009024  237A               	addwfc	(??_lowIsr+1)& (0+255),f,b
 44258   009026  C079  FFF6         	movff	??_lowIsr,tblptrl
 44259   00902A  C07A  FFF7         	movff	??_lowIsr+1,tblptrh
 44260   00902E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 44261   00902E  6AF8               	clrf	tblptru,c
 44262   009030                     	endif
 44263   009030                     	if	0	;tblptru may be non-zero
 44264   009030                     	endif
 44265   009030  0009               	tblrd		*+
 44266   009032  CFF5 F07B          	movff	tablat,??_lowIsr+2
 44267   009036  0009               	tblrd		*+
 44268   009038  CFF5 F07C          	movff	tablat,??_lowIsr+3
 44269   00903C  D801               	call	i1u2681_28
 44270   00903E  D009               	goto	i1u2681_29
 44271   009040                     i1u2681_28:
 44272   009040  0005               	push	
 44273   009042  6EFA               	movwf	pclath,c
 44274   009044  517B               	movf	(??_lowIsr+2)& (0+255),w,b
 44275   009046  6EFD               	movwf	tosl,c
 44276   009048  517C               	movf	(??_lowIsr+3)& (0+255),w,b
 44277   00904A  6EFE               	movwf	tosh,c
 44278   00904C  6AFF               	clrf	tosu,c
 44279   00904E  50FA               	movf	pclath,w,c
 44280   009050  0012               	return		;indir
 44281   009052                     i1u2681_29:
 44282                           
 44283                           ;../../VLCBlib_PIC/vlcb.c: 1084:     }
 44284   009052  0100               	movlb	0	; () banked
 44285   009054  2B7D               	incf	lowIsr@i& (0+255),f,b
 44286                           
 44287                           ; BSR set to: 0
 44288   009056  0E08               	movlw	8
 44289   009058  657D               	cpfsgt	lowIsr@i& (0+255),b
 44290   00905A  D79F               	goto	i1l24945
 44291                           
 44292                           ; BSR set to: 0
 44293                           ;../../VLCBlib_PIC/vlcb.c: 1085:     APP_lowIsr();
 44294   00905C  EC2B  F063         	call	_APP_lowIsr	;wreg free
 44295   009060  0012               	return		;funcret
 44296   009062                     __end_of_lowIsr:
 44297                           	callstack 0
 44298                           
 44299 ;; *************** function _canIsr *****************
 44300 ;; Defined at:
 44301 ;;		line 402 in file "../../VLCBlib_PIC/can18_ecan.c"
 44302 ;; Parameters:    Size  Location     Type
 44303 ;;		None
 44304 ;; Auto vars:     Size  Location     Type
 44305 ;;		None
 44306 ;; Return value:  Size  Location     Type
 44307 ;;                  1    wreg      void 
 44308 ;; Registers used:
 44309 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 44310 ;; Tracked objects:
 44311 ;;		On entry : 0/0
 44312 ;;		On exit  : 0/0
 44313 ;;		Unchanged: 0/0
 44314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44319 ;;Total ram usage:        0 bytes
 44320 ;; Hardware stack levels used: 1
 44321 ;; Hardware stack levels required when called: 9
 44322 ;; This function calls:
 44323 ;;		_canFillRxFifo
 44324 ;;		_canTxError
 44325 ;;		_checkCANTimeout
 44326 ;;		_checkTxFifo
 44327 ;; This function is called by:
 44328 ;;		_highIsr
 44329 ;;		_lowIsr
 44330 ;; This function uses a non-reentrant model
 44331 ;;
 44332                           
 44333                           	psect	text200
 44334   00C448                     __ptext200:
 44335                           	callstack 0
 44336   00C448                     _canIsr:
 44337                           	callstack 0
 44338                           
 44339                           ;Skip over the trampoline to the duplicate function for level 2
 44340   00C448  A254               	btfss	btemp,1,c
 44341   00C44A  D002               	goto	_canIsr$intlevel1
 44342   00C44C  EFA2  F062         	goto	i2_canIsr
 44343   00C450                     _canIsr$intlevel1:
 44344                           	callstack 2
 44345                           
 44346                           ;../../VLCBlib_PIC/can18_ecan.c: 404:     if (PIR5bits.FIFOWMIF) {
 44347                           
 44348                           ;incstack = 0
 44349   00C450  B077               	btfsc	119,0,c	;volatile
 44350                           
 44351                           ;../../VLCBlib_PIC/can18_ecan.c: 405:         canFillRxFifo();
 44352   00C452  EC3E  F039         	call	_canFillRxFifo	;wreg free
 44353                           
 44354                           ;../../VLCBlib_PIC/can18_ecan.c: 407:     if (PIR5bits.ERRIF) {
 44355   00C456  BA77               	btfsc	119,5,c	;volatile
 44356                           
 44357                           ;../../VLCBlib_PIC/can18_ecan.c: 408:         canTxError();
 44358   00C458  EC0E  F059         	call	_canTxError	;wreg free
 44359                           
 44360                           ;../../VLCBlib_PIC/can18_ecan.c: 410:     if (PIR5bits.TXBnIF) {
 44361   00C45C  B877               	btfsc	119,4,c	;volatile
 44362                           
 44363                           ;../../VLCBlib_PIC/can18_ecan.c: 411:         checkTxFifo();
 44364   00C45E  EC29  F029         	call	_checkTxFifo	;wreg free
 44365                           
 44366                           ;../../VLCBlib_PIC/can18_ecan.c: 413:     checkCANTimeout();
 44367                           
 44368                           ;../../VLCBlib_PIC/can18_ecan.c: 412:     }
 44369   00C462  ECBD  F05B         	call	_checkCANTimeout	;wreg free
 44370   00C466  0012               	return		;funcret
 44371   00C468                     __end_of_canIsr:
 44372                           	callstack 0
 44373                           
 44374 ;; *************** function _mnsLowIsr *****************
 44375 ;; Defined at:
 44376 ;;		line 781 in file "../../VLCBlib_PIC/mns.c"
 44377 ;; Parameters:    Size  Location     Type
 44378 ;;		None
 44379 ;; Auto vars:     Size  Location     Type
 44380 ;;		None
 44381 ;; Return value:  Size  Location     Type
 44382 ;;                  1    wreg      void 
 44383 ;; Registers used:
 44384 ;;		wreg, status,2, status,0
 44385 ;; Tracked objects:
 44386 ;;		On entry : 0/0
 44387 ;;		On exit  : 0/0
 44388 ;;		Unchanged: 0/0
 44389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44394 ;;Total ram usage:        0 bytes
 44395 ;; Hardware stack levels used: 1
 44396 ;; Hardware stack levels required when called: 6
 44397 ;; This function calls:
 44398 ;;		Nothing
 44399 ;; This function is called by:
 44400 ;;		_lowIsr
 44401 ;; This function uses a non-reentrant model
 44402 ;;
 44403                           
 44404                           	psect	text201
 44405   00C586                     __ptext201:
 44406                           	callstack 0
 44407   00C586                     _mnsLowIsr:
 44408                           	callstack 5
 44409                           
 44410                           ;../../VLCBlib_PIC/mns.c: 784:     if(INTCONbits.TMR0IF) {
 44411                           
 44412                           ;incstack = 0
 44413   00C586  A4F2               	btfss	242,2,c	;volatile
 44414   00C588  0012               	return	
 44415                           
 44416                           ;../../VLCBlib_PIC/mns.c: 786:         INTCONbits.TMR0IF = 0;
 44417   00C58A  94F2               	bcf	242,2,c	;volatile
 44418                           
 44419                           ;../../VLCBlib_PIC/mns.c: 787:         timerExtension1++;
 44420   00C58C  0100               	movlb	0	; () banked
 44421   00C58E  2BC7               	incf	_timerExtension1& (0+255),f,b	;volatile
 44422                           
 44423                           ; BSR set to: 0
 44424                           ;../../VLCBlib_PIC/mns.c: 788:         if(timerExtension1 == 0) {
 44425   00C590  51C7               	movf	_timerExtension1& (0+255),w,b	;volatile
 44426   00C592  A4D8               	btfss	status,2,c
 44427   00C594  0012               	return	
 44428                           
 44429                           ; BSR set to: 0
 44430                           ;../../VLCBlib_PIC/mns.c: 789:             timerExtension2++;
 44431   00C596  2BC6               	incf	_timerExtension2& (0+255),f,b	;volatile
 44432   00C598  0012               	return		;funcret
 44433   00C59A                     __end_of_mnsLowIsr:
 44434                           	callstack 0
 44435                           
 44436 ;; *************** function _checkCANTimeout *****************
 44437 ;; Defined at:
 44438 ;;		line 766 in file "../../VLCBlib_PIC/can18_ecan.c"
 44439 ;; Parameters:    Size  Location     Type
 44440 ;;		None
 44441 ;; Auto vars:     Size  Location     Type
 44442 ;;		None
 44443 ;; Return value:  Size  Location     Type
 44444 ;;                  1    wreg      void 
 44445 ;; Registers used:
 44446 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 44447 ;; Tracked objects:
 44448 ;;		On entry : 0/0
 44449 ;;		On exit  : 0/0
 44450 ;;		Unchanged: 0/0
 44451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44454 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44455 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44456 ;;Total ram usage:        4 bytes
 44457 ;; Hardware stack levels used: 1
 44458 ;; Hardware stack levels required when called: 8
 44459 ;; This function calls:
 44460 ;;		_checkTxFifo
 44461 ;;		i1_tickGet
 44462 ;;		i1_updateModuleErrorStatus
 44463 ;; This function is called by:
 44464 ;;		_canIsr
 44465 ;; This function uses a non-reentrant model
 44466 ;;
 44467                           
 44468                           	psect	text202
 44469   00B77A                     __ptext202:
 44470                           	callstack 0
 44471   00B77A                     _checkCANTimeout:
 44472                           	callstack 2
 44473                           
 44474                           ;../../VLCBlib_PIC/can18_ecan.c: 767:     if (canTransmitTimeout.val != 0) {
 44475                           
 44476                           ;incstack = 0
 44477   00B77A  502F               	movf	_canTransmitTimeout^0,w,c
 44478   00B77C  1030               	iorwf	(_canTransmitTimeout+1)^0,w,c
 44479   00B77E  1031               	iorwf	(_canTransmitTimeout+2)^0,w,c
 44480   00B780  1032               	iorwf	(_canTransmitTimeout+3)^0,w,c
 44481   00B782  B4D8               	btfsc	status,2,c
 44482   00B784  0012               	return	
 44483                           
 44484                           ;../../VLCBlib_PIC/can18_ecan.c: 768:         if ((tickGet() - canTransmitTimeout.val) >
      +                           62500) {
 44485   00B786  EC3C  F05B         	call	i1_tickGet	;wreg free
 44486   00B78A  502F               	movf	_canTransmitTimeout^0,w,c
 44487   00B78C  0100               	movlb	0	; () banked
 44488   00B78E  5D60               	subwf	?i1_tickGet& (0+255),w,b
 44489   00B790  6F75               	movwf	??_checkCANTimeout& (0+255),b
 44490   00B792  5030               	movf	(_canTransmitTimeout+1)^0,w,c
 44491   00B794  5961               	subwfb	(?i1_tickGet+1)& (0+255),w,b
 44492   00B796  6F76               	movwf	(??_checkCANTimeout+1)& (0+255),b
 44493   00B798  5031               	movf	(_canTransmitTimeout+2)^0,w,c
 44494   00B79A  5962               	subwfb	(?i1_tickGet+2)& (0+255),w,b
 44495   00B79C  6F77               	movwf	(??_checkCANTimeout+2)& (0+255),b
 44496   00B79E  5032               	movf	(_canTransmitTimeout+3)^0,w,c
 44497   00B7A0  5963               	subwfb	(?i1_tickGet+3)& (0+255),w,b
 44498   00B7A2  6F78               	movwf	(??_checkCANTimeout+3)& (0+255),b
 44499   00B7A4  5178               	movf	(??_checkCANTimeout+3)& (0+255),w,b
 44500   00B7A6  1177               	iorwf	(??_checkCANTimeout+2)& (0+255),w,b
 44501   00B7A8  E106               	bnz	i1u2334_20
 44502   00B7AA  0E25               	movlw	37
 44503   00B7AC  5D75               	subwf	??_checkCANTimeout& (0+255),w,b
 44504   00B7AE  0EF4               	movlw	244
 44505   00B7B0  5976               	subwfb	(??_checkCANTimeout+1)& (0+255),w,b
 44506   00B7B2  A0D8               	btfss	status,0,c
 44507   00B7B4  0012               	return	
 44508   00B7B6                     i1u2334_20:
 44509                           
 44510                           ; BSR set to: 0
 44511                           ;../../VLCBlib_PIC/can18_ecan.c: 769:             canTransmitFailed = 1;
 44512   00B7B6  0E01               	movlw	1
 44513   00B7B8  6FC0               	movwf	_canTransmitFailed& (0+255),b
 44514                           
 44515                           ; BSR set to: 0
 44516                           ;../../VLCBlib_PIC/can18_ecan.c: 770:             TXB0CONbits.TXREQ = 0;
 44517   00B7BA  010F               	movlb	15	; () banked
 44518   00B7BC  9720               	bcf	32,3,b	;volatile
 44519                           
 44520                           ; BSR set to: 15
 44521                           ;../../VLCBlib_PIC/can18_ecan.c: 771:             checkTxFifo();
 44522   00B7BE  EC29  F029         	call	_checkTxFifo	;wreg free
 44523                           
 44524                           ;../../VLCBlib_PIC/can18_ecan.c: 773:             canDiagnostics[0x02].asUint++;
 44525   00B7C2  0101               	movlb	1	; () banked
 44526   00B7C4  4B6B               	infsnz	(_canDiagnostics+4)& (0+255),f,b
 44527   00B7C6  2B6C               	incf	(_canDiagnostics+5)& (0+255),f,b
 44528                           
 44529                           ; BSR set to: 1
 44530                           ;../../VLCBlib_PIC/can18_ecan.c: 774:             updateModuleErrorStatus();
 44531   00B7C8  ECF3  F062         	call	i1_updateModuleErrorStatus	;wreg free
 44532   00B7CC  0012               	return		;funcret
 44533   00B7CE                     __end_of_checkCANTimeout:
 44534                           	callstack 0
 44535                           
 44536 ;; *************** function _canTxError *****************
 44537 ;; Defined at:
 44538 ;;		line 785 in file "../../VLCBlib_PIC/can18_ecan.c"
 44539 ;; Parameters:    Size  Location     Type
 44540 ;;		None
 44541 ;; Auto vars:     Size  Location     Type
 44542 ;;		None
 44543 ;; Return value:  Size  Location     Type
 44544 ;;                  1    wreg      void 
 44545 ;; Registers used:
 44546 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 44547 ;; Tracked objects:
 44548 ;;		On entry : 0/0
 44549 ;;		On exit  : 0/0
 44550 ;;		Unchanged: 0/0
 44551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44556 ;;Total ram usage:        0 bytes
 44557 ;; Hardware stack levels used: 1
 44558 ;; Hardware stack levels required when called: 8
 44559 ;; This function calls:
 44560 ;;		_checkTxFifo
 44561 ;;		i1_updateModuleErrorStatus
 44562 ;; This function is called by:
 44563 ;;		_canIsr
 44564 ;; This function uses a non-reentrant model
 44565 ;;
 44566                           
 44567                           	psect	text203
 44568   00B21C                     __ptext203:
 44569                           	callstack 0
 44570   00B21C                     _canTxError:
 44571                           	callstack 2
 44572                           
 44573                           ;../../VLCBlib_PIC/can18_ecan.c: 786:     if (TXB0CONbits.TXLARB) {
 44574                           
 44575                           ;incstack = 0
 44576   00B21C  010F               	movlb	15	; () banked
 44577   00B21E  AB20               	btfss	32,5,b	;volatile
 44578   00B220  D012               	goto	i1l22299
 44579                           
 44580                           ; BSR set to: 15
 44581                           ;../../VLCBlib_PIC/can18_ecan.c: 787:         canTransmitFailed = 1;
 44582   00B222  0E01               	movlw	1
 44583   00B224  0100               	movlb	0	; () banked
 44584   00B226  6FC0               	movwf	_canTransmitFailed& (0+255),b
 44585                           
 44586                           ;../../VLCBlib_PIC/can18_ecan.c: 788:         canTransmitTimeout.val = 0;
 44587   00B228  0E00               	movlw	0
 44588   00B22A  6E2F               	movwf	_canTransmitTimeout^0,c
 44589   00B22C  0E00               	movlw	0
 44590   00B22E  6E30               	movwf	(_canTransmitTimeout+1)^0,c
 44591   00B230  0E00               	movlw	0
 44592   00B232  6E31               	movwf	(_canTransmitTimeout+2)^0,c
 44593   00B234  0E00               	movlw	0
 44594   00B236  6E32               	movwf	(_canTransmitTimeout+3)^0,c
 44595                           
 44596                           ; BSR set to: 0
 44597                           ;../../VLCBlib_PIC/can18_ecan.c: 789:         TXB0CONbits.TXREQ = 0;
 44598   00B238  010F               	movlb	15	; () banked
 44599   00B23A  9720               	bcf	32,3,b	;volatile
 44600                           
 44601                           ; BSR set to: 15
 44602                           ;../../VLCBlib_PIC/can18_ecan.c: 791:         canDiagnostics[0x0C].asUint++;
 44603   00B23C  0101               	movlb	1	; () banked
 44604   00B23E  4B7F               	infsnz	(_canDiagnostics+24)& (0+255),f,b
 44605   00B240  2B80               	incf	(_canDiagnostics+25)& (0+255),f,b
 44606                           
 44607                           ; BSR set to: 1
 44608                           ;../../VLCBlib_PIC/can18_ecan.c: 792:         updateModuleErrorStatus();
 44609   00B242  ECF3  F062         	call	i1_updateModuleErrorStatus	;wreg free
 44610   00B246                     i1l22299:
 44611                           
 44612                           ;../../VLCBlib_PIC/can18_ecan.c: 795:     if (TXB0CONbits.TXERR) {
 44613   00B246  010F               	movlb	15	; () banked
 44614   00B248  A920               	btfss	32,4,b	;volatile
 44615   00B24A  D012               	goto	i1l22309
 44616                           
 44617                           ; BSR set to: 15
 44618                           ;../../VLCBlib_PIC/can18_ecan.c: 796:         canTransmitFailed = 1;
 44619   00B24C  0E01               	movlw	1
 44620   00B24E  0100               	movlb	0	; () banked
 44621   00B250  6FC0               	movwf	_canTransmitFailed& (0+255),b
 44622                           
 44623                           ;../../VLCBlib_PIC/can18_ecan.c: 797:         canTransmitTimeout.val = 0;
 44624   00B252  0E00               	movlw	0
 44625   00B254  6E2F               	movwf	_canTransmitTimeout^0,c
 44626   00B256  0E00               	movlw	0
 44627   00B258  6E30               	movwf	(_canTransmitTimeout+1)^0,c
 44628   00B25A  0E00               	movlw	0
 44629   00B25C  6E31               	movwf	(_canTransmitTimeout+2)^0,c
 44630   00B25E  0E00               	movlw	0
 44631   00B260  6E32               	movwf	(_canTransmitTimeout+3)^0,c
 44632                           
 44633                           ; BSR set to: 0
 44634                           ;../../VLCBlib_PIC/can18_ecan.c: 798:         TXB0CONbits.TXREQ = 0;
 44635   00B262  010F               	movlb	15	; () banked
 44636   00B264  9720               	bcf	32,3,b	;volatile
 44637                           
 44638                           ; BSR set to: 15
 44639                           ;../../VLCBlib_PIC/can18_ecan.c: 800:         canDiagnostics[0x02].asUint++;
 44640   00B266  0101               	movlb	1	; () banked
 44641   00B268  4B6B               	infsnz	(_canDiagnostics+4)& (0+255),f,b
 44642   00B26A  2B6C               	incf	(_canDiagnostics+5)& (0+255),f,b
 44643                           
 44644                           ; BSR set to: 1
 44645                           ;../../VLCBlib_PIC/can18_ecan.c: 801:         updateModuleErrorStatus();
 44646   00B26C  ECF3  F062         	call	i1_updateModuleErrorStatus	;wreg free
 44647   00B270                     i1l22309:
 44648                           
 44649                           ;../../VLCBlib_PIC/can18_ecan.c: 804:     if (canTransmitFailed) {
 44650   00B270  0100               	movlb	0	; () banked
 44651   00B272  51C0               	movf	_canTransmitFailed& (0+255),w,b
 44652   00B274  A4D8               	btfss	status,2,c
 44653                           
 44654                           ; BSR set to: 0
 44655                           ;../../VLCBlib_PIC/can18_ecan.c: 805:         checkTxFifo();
 44656   00B276  EC29  F029         	call	_checkTxFifo	;wreg free
 44657                           
 44658                           ;../../VLCBlib_PIC/can18_ecan.c: 807:     PIR5bits.ERRIF = 0;
 44659   00B27A  9A77               	bcf	119,5,c	;volatile
 44660   00B27C  0012               	return		;funcret
 44661   00B27E                     __end_of_canTxError:
 44662                           	callstack 0
 44663                           
 44664 ;; *************** function _checkTxFifo *****************
 44665 ;; Defined at:
 44666 ;;		line 695 in file "../../VLCBlib_PIC/can18_ecan.c"
 44667 ;; Parameters:    Size  Location     Type
 44668 ;;		None
 44669 ;; Auto vars:     Size  Location     Type
 44670 ;;  mp              2   19[BANK0 ] PTR struct Message
 44671 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 44672 ;;  m               2   17[BANK0 ] PTR struct Message
 44673 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 44674 ;; Return value:  Size  Location     Type
 44675 ;;                  1    wreg      void 
 44676 ;; Registers used:
 44677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 44678 ;; Tracked objects:
 44679 ;;		On entry : 0/0
 44680 ;;		On exit  : 0/0
 44681 ;;		Unchanged: 0/0
 44682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44684 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44685 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44686 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44687 ;;Total ram usage:        9 bytes
 44688 ;; Hardware stack levels used: 1
 44689 ;; Hardware stack levels required when called: 7
 44690 ;; This function calls:
 44691 ;;		i1_getNextWriteMessage
 44692 ;;		i1_isEvent
 44693 ;;		i1_pop
 44694 ;;		i1_tickGet
 44695 ;;		i1_updateModuleErrorStatus
 44696 ;; This function is called by:
 44697 ;;		_canIsr
 44698 ;;		_checkCANTimeout
 44699 ;;		_canTxError
 44700 ;; This function uses a non-reentrant model
 44701 ;;
 44702                           
 44703                           	psect	text204
 44704   005252                     __ptext204:
 44705                           	callstack 0
 44706   005252                     _checkTxFifo:
 44707                           	callstack 3
 44708                           
 44709                           ;../../VLCBlib_PIC/can18_ecan.c: 696:     Message * mp;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          698:     Message * m;;../../VLCBlib_PIC/can18_ecan.c: 701:     PIR5bits.TXBnIF = 0;
 44710                           
 44711                           ;incstack = 0
 44712   005252  9877               	bcf	119,4,c	;volatile
 44713                           
 44714                           ;../../VLCBlib_PIC/can18_ecan.c: 702:     if (!TXB0CONbits.TXREQ) {
 44715   005254  010F               	movlb	15	; () banked
 44716   005256  B720               	btfsc	32,3,b	;volatile
 44717   005258  D158               	goto	i1l2539
 44718                           
 44719                           ; BSR set to: 15
 44720                           ;../../VLCBlib_PIC/can18_ecan.c: 703:         mp = pop(&txQueue);
 44721   00525A  0E4A               	movlw	low _txQueue
 44722   00525C  0100               	movlb	0	; () banked
 44723   00525E  6F60               	movwf	i1pop@q& (0+255),b
 44724   005260  EC86  F04E         	call	i1_pop	;wreg free
 44725   005264  C060  F073         	movff	?i1_pop,checkTxFifo@mp
 44726   005268  C061  F074         	movff	?i1_pop+1,checkTxFifo@mp+1
 44727                           
 44728                           ;../../VLCBlib_PIC/can18_ecan.c: 704:         if (mp != ((void*)0)) {
 44729   00526C  0100               	movlb	0	; () banked
 44730   00526E  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44731   005270  1174               	iorwf	(checkTxFifo@mp+1)& (0+255),w,b
 44732   005272  B4D8               	btfsc	status,2,c
 44733   005274  D13C               	goto	i1l21159
 44734                           
 44735                           ; BSR set to: 0
 44736                           ;../../VLCBlib_PIC/can18_ecan.c: 706:             TXB0SIDH = canPri[priorities[mp->opc]]
      +                           | ((canId & 0x78) >> 3);
 44737   005276  EE20 F001          	lfsr	2,1
 44738   00527A  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44739   00527C  26D9               	addwf	fsr2l,f,c
 44740   00527E  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44741   005280  22DA               	addwfc	fsr2h,f,c
 44742   005282  50DF               	movf	indf2,w,c
 44743   005284  6F6C               	movwf	??_checkTxFifo& (0+255),b
 44744   005286  6B6D               	clrf	(??_checkTxFifo+1)& (0+255),b
 44745   005288  0E29               	movlw	low _priorities
 44746   00528A  256C               	addwf	??_checkTxFifo& (0+255),w,b
 44747   00528C  6EF6               	movwf	tblptrl,c
 44748   00528E  0EED               	movlw	high _priorities
 44749   005290  216D               	addwfc	(??_checkTxFifo+1)& (0+255),w,b
 44750   005292  6EF7               	movwf	tblptrh,c
 44751   005294                     	if	1	;There are 3 active tblptr bytes
 44752   005294  6AF8               	clrf	tblptru,c
 44753   005296  0E00               	movlw	low (__mediumconst shr (0+16))
 44754   005298  22F8               	addwfc	tblptru,f,c
 44755   00529A                     	endif
 44756   00529A  0008               	tblrd		*
 44757   00529C  50F5               	movf	tablat,w,c
 44758   00529E  6F6E               	movwf	(??_checkTxFifo+2)& (0+255),b
 44759   0052A0  6B6F               	clrf	(??_checkTxFifo+3)& (0+255),b
 44760   0052A2  0E86               	movlw	low _canPri
 44761   0052A4  256E               	addwf	(??_checkTxFifo+2)& (0+255),w,b
 44762   0052A6  6EF6               	movwf	tblptrl,c
 44763   0052A8  0EEE               	movlw	high _canPri
 44764   0052AA  216F               	addwfc	(??_checkTxFifo+3)& (0+255),w,b
 44765   0052AC  6EF7               	movwf	tblptrh,c
 44766   0052AE                     	if	1	;There are 3 active tblptr bytes
 44767   0052AE  6AF8               	clrf	tblptru,c
 44768   0052B0  0E00               	movlw	low (__mediumconst shr (0+16))
 44769   0052B2  22F8               	addwfc	tblptru,f,c
 44770   0052B4                     	endif
 44771   0052B4  0008               	tblrd		*
 44772   0052B6  CFF5 F070          	movff	tablat,??_checkTxFifo+4
 44773   0052BA  39C1               	swapf	_canId& (0+255),w,b
 44774   0052BC  46E8               	rlncf	wreg,f,c
 44775   0052BE  0B1F               	andlw	31
 44776   0052C0  0B0F               	andlw	15
 44777   0052C2  1170               	iorwf	(??_checkTxFifo+4)& (0+255),w,b
 44778   0052C4  010F               	movlb	15	; () banked
 44779   0052C6  6F21               	movwf	33,b	;volatile
 44780                           
 44781                           ; BSR set to: 15
 44782                           ;../../VLCBlib_PIC/can18_ecan.c: 707:             TXB0SIDL = (uint8_t)((canId & 0x07) <<
      +                           5);
 44783   0052C8  C0C1  F06C         	movff	_canId,??_checkTxFifo
 44784   0052CC  0E07               	movlw	7
 44785   0052CE  0100               	movlb	0	; () banked
 44786   0052D0  176C               	andwf	??_checkTxFifo& (0+255),f,b
 44787   0052D2  0E05               	movlw	5
 44788   0052D4  6F6D               	movwf	(??_checkTxFifo+1)& (0+255),b
 44789   0052D6                     i1u2167_25:
 44790   0052D6  90D8               	bcf	status,0,c
 44791   0052D8  376C               	rlcf	??_checkTxFifo& (0+255),f,b
 44792   0052DA  2F6D               	decfsz	(??_checkTxFifo+1)& (0+255),f,b
 44793   0052DC  D7FC               	goto	i1u2167_25
 44794   0052DE  516C               	movf	??_checkTxFifo& (0+255),w,b
 44795   0052E0  010F               	movlb	15	; () banked
 44796   0052E2  6F22               	movwf	34,b	;volatile
 44797                           
 44798                           ; BSR set to: 15
 44799                           ;../../VLCBlib_PIC/can18_ecan.c: 708:             TXB0D0 = mp->opc;
 44800   0052E4  0100               	movlb	0	; () banked
 44801   0052E6  EE20 F001          	lfsr	2,1
 44802   0052EA  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44803   0052EC  26D9               	addwf	fsr2l,f,c
 44804   0052EE  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44805   0052F0  22DA               	addwfc	fsr2h,f,c
 44806   0052F2  50DF               	movf	indf2,w,c
 44807   0052F4  010F               	movlb	15	; () banked
 44808   0052F6  6F26               	movwf	38,b	;volatile
 44809                           
 44810                           ; BSR set to: 15
 44811                           ;../../VLCBlib_PIC/can18_ecan.c: 709:             TXB0D1 = mp->bytes[0];
 44812   0052F8  0100               	movlb	0	; () banked
 44813   0052FA  EE20 F002          	lfsr	2,2
 44814   0052FE  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44815   005300  26D9               	addwf	fsr2l,f,c
 44816   005302  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44817   005304  22DA               	addwfc	fsr2h,f,c
 44818   005306  50DF               	movf	indf2,w,c
 44819   005308  010F               	movlb	15	; () banked
 44820   00530A  6F27               	movwf	39,b	;volatile
 44821                           
 44822                           ; BSR set to: 15
 44823                           ;../../VLCBlib_PIC/can18_ecan.c: 710:             TXB0D2 = mp->bytes[1];
 44824   00530C  0100               	movlb	0	; () banked
 44825   00530E  EE20 F003          	lfsr	2,3
 44826   005312  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44827   005314  26D9               	addwf	fsr2l,f,c
 44828   005316  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44829   005318  22DA               	addwfc	fsr2h,f,c
 44830   00531A  50DF               	movf	indf2,w,c
 44831   00531C  010F               	movlb	15	; () banked
 44832   00531E  6F28               	movwf	40,b	;volatile
 44833                           
 44834                           ; BSR set to: 15
 44835                           ;../../VLCBlib_PIC/can18_ecan.c: 711:             TXB0D3 = mp->bytes[2];
 44836   005320  0100               	movlb	0	; () banked
 44837   005322  EE20 F004          	lfsr	2,4
 44838   005326  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44839   005328  26D9               	addwf	fsr2l,f,c
 44840   00532A  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44841   00532C  22DA               	addwfc	fsr2h,f,c
 44842   00532E  50DF               	movf	indf2,w,c
 44843   005330  010F               	movlb	15	; () banked
 44844   005332  6F29               	movwf	41,b	;volatile
 44845                           
 44846                           ; BSR set to: 15
 44847                           ;../../VLCBlib_PIC/can18_ecan.c: 712:             TXB0D4 = mp->bytes[3];
 44848   005334  0100               	movlb	0	; () banked
 44849   005336  EE20 F005          	lfsr	2,5
 44850   00533A  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44851   00533C  26D9               	addwf	fsr2l,f,c
 44852   00533E  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44853   005340  22DA               	addwfc	fsr2h,f,c
 44854   005342  50DF               	movf	indf2,w,c
 44855   005344  010F               	movlb	15	; () banked
 44856   005346  6F2A               	movwf	42,b	;volatile
 44857                           
 44858                           ; BSR set to: 15
 44859                           ;../../VLCBlib_PIC/can18_ecan.c: 713:             TXB0D5 = mp->bytes[4];
 44860   005348  0100               	movlb	0	; () banked
 44861   00534A  EE20 F006          	lfsr	2,6
 44862   00534E  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44863   005350  26D9               	addwf	fsr2l,f,c
 44864   005352  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44865   005354  22DA               	addwfc	fsr2h,f,c
 44866   005356  50DF               	movf	indf2,w,c
 44867   005358  010F               	movlb	15	; () banked
 44868   00535A  6F2B               	movwf	43,b	;volatile
 44869                           
 44870                           ; BSR set to: 15
 44871                           ;../../VLCBlib_PIC/can18_ecan.c: 714:             TXB0D6 = mp->bytes[5];
 44872   00535C  0100               	movlb	0	; () banked
 44873   00535E  EE20 F007          	lfsr	2,7
 44874   005362  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44875   005364  26D9               	addwf	fsr2l,f,c
 44876   005366  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44877   005368  22DA               	addwfc	fsr2h,f,c
 44878   00536A  50DF               	movf	indf2,w,c
 44879   00536C  010F               	movlb	15	; () banked
 44880   00536E  6F2C               	movwf	44,b	;volatile
 44881                           
 44882                           ; BSR set to: 15
 44883                           ;../../VLCBlib_PIC/can18_ecan.c: 715:             TXB0D7 = mp->bytes[6];
 44884   005370  0100               	movlb	0	; () banked
 44885   005372  EE20 F008          	lfsr	2,8
 44886   005376  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44887   005378  26D9               	addwf	fsr2l,f,c
 44888   00537A  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44889   00537C  22DA               	addwfc	fsr2h,f,c
 44890   00537E  50DF               	movf	indf2,w,c
 44891   005380  010F               	movlb	15	; () banked
 44892   005382  6F2D               	movwf	45,b	;volatile
 44893                           
 44894                           ; BSR set to: 15
 44895                           ;../../VLCBlib_PIC/can18_ecan.c: 716:             TXB0DLC = mp->len;
 44896   005384  C073  FFD9         	movff	checkTxFifo@mp,fsr2l
 44897   005388  C074  FFDA         	movff	checkTxFifo@mp+1,fsr2h
 44898   00538C  50DF               	movf	indf2,w,c
 44899   00538E  6F25               	movwf	37,b	;volatile
 44900                           
 44901                           ; BSR set to: 15
 44902                           ;../../VLCBlib_PIC/can18_ecan.c: 718:             canTransmitTimeout.val = tickGet();
 44903   005390  EC3C  F05B         	call	i1_tickGet	;wreg free
 44904   005394  C060  F02F         	movff	?i1_tickGet,_canTransmitTimeout
 44905   005398  C061  F030         	movff	?i1_tickGet+1,_canTransmitTimeout+1
 44906   00539C  C062  F031         	movff	?i1_tickGet+2,_canTransmitTimeout+2
 44907   0053A0  C063  F032         	movff	?i1_tickGet+3,_canTransmitTimeout+3
 44908                           
 44909                           ;../../VLCBlib_PIC/can18_ecan.c: 719:             canTransmitFailed = 0;
 44910   0053A4  0E00               	movlw	0
 44911   0053A6  0100               	movlb	0	; () banked
 44912   0053A8  6FC0               	movwf	_canTransmitFailed& (0+255),b
 44913                           
 44914                           ; BSR set to: 0
 44915                           ;../../VLCBlib_PIC/can18_ecan.c: 720:             TXB0CONbits.TXREQ = 1;
 44916   0053AA  010F               	movlb	15	; () banked
 44917   0053AC  8720               	bsf	32,3,b	;volatile
 44918                           
 44919                           ; BSR set to: 15
 44920                           ;../../VLCBlib_PIC/can18_ecan.c: 721:             PIE5bits.TXBnIE = 1;
 44921   0053AE  8876               	bsf	118,4,c	;volatile
 44922                           
 44923                           ; BSR set to: 15
 44924                           ;../../VLCBlib_PIC/can18_ecan.c: 722:             canDiagnostics[0x06].asUint++;
 44925   0053B0  0101               	movlb	1	; () banked
 44926   0053B2  4B73               	infsnz	(_canDiagnostics+12)& (0+255),f,b
 44927   0053B4  2B74               	incf	(_canDiagnostics+13)& (0+255),f,b
 44928                           
 44929                           ; BSR set to: 1
 44930                           ;../../VLCBlib_PIC/can18_ecan.c: 725:             if (isEvent(mp->opc)) {
 44931   0053B6  0100               	movlb	0	; () banked
 44932   0053B8  EE20 F001          	lfsr	2,1
 44933   0053BC  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44934   0053BE  26D9               	addwf	fsr2l,f,c
 44935   0053C0  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44936   0053C2  22DA               	addwfc	fsr2h,f,c
 44937   0053C4  50DF               	movf	indf2,w,c
 44938   0053C6  EC63  F061         	call	i1_isEvent
 44939   0053CA  0900               	iorlw	0
 44940   0053CC  B4D8               	btfsc	status,2,c
 44941   0053CE  0012               	return	
 44942                           
 44943                           ;../../VLCBlib_PIC/can18_ecan.c: 727:                 m = getNextWriteMessage(&rxQueue);
 44944   0053D0  0E4F               	movlw	low _rxQueue
 44945   0053D2  0100               	movlb	0	; () banked
 44946   0053D4  6F60               	movwf	i1getNextWriteMessage@q& (0+255),b
 44947   0053D6  EC92  F046         	call	i1_getNextWriteMessage	;wreg free
 44948   0053DA  C060  F071         	movff	?i1_getNextWriteMessage,checkTxFifo@m
 44949   0053DE  C061  F072         	movff	?i1_getNextWriteMessage+1,checkTxFifo@m+1
 44950                           
 44951                           ;../../VLCBlib_PIC/can18_ecan.c: 728:                 if (m == ((void*)0)) {
 44952   0053E2  0100               	movlb	0	; () banked
 44953   0053E4  5171               	movf	checkTxFifo@m& (0+255),w,b
 44954   0053E6  1172               	iorwf	(checkTxFifo@m+1)& (0+255),w,b
 44955   0053E8  A4D8               	btfss	status,2,c
 44956   0053EA  D006               	goto	i1l21141
 44957                           
 44958                           ; BSR set to: 0
 44959                           ;../../VLCBlib_PIC/can18_ecan.c: 730:                     canDiagnostics[0x08].asUint++;
 44960   0053EC  0101               	movlb	1	; () banked
 44961   0053EE  4B77               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 44962   0053F0  2B78               	incf	(_canDiagnostics+17)& (0+255),f,b
 44963                           
 44964                           ; BSR set to: 1
 44965                           ;../../VLCBlib_PIC/can18_ecan.c: 731:                     updateModuleErrorStatus();
 44966   0053F2  ECF3  F062         	call	i1_updateModuleErrorStatus	;wreg free
 44967                           
 44968                           ;../../VLCBlib_PIC/can18_ecan.c: 733:                 } else {
 44969   0053F6  0012               	return	
 44970   0053F8                     i1l21141:
 44971                           
 44972                           ; BSR set to: 0
 44973                           ;../../VLCBlib_PIC/can18_ecan.c: 735:                     m->opc = mp->opc;
 44974   0053F8  EE20 F001          	lfsr	2,1
 44975   0053FC  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44976   0053FE  26D9               	addwf	fsr2l,f,c
 44977   005400  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44978   005402  22DA               	addwfc	fsr2h,f,c
 44979   005404  EE10 F001          	lfsr	1,1
 44980   005408  5171               	movf	checkTxFifo@m& (0+255),w,b
 44981   00540A  26E1               	addwf	fsr1l,f,c
 44982   00540C  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 44983   00540E  22E2               	addwfc	fsr1h,f,c
 44984   005410  CFDF FFE7          	movff	indf2,indf1
 44985                           
 44986                           ; BSR set to: 0
 44987                           ;../../VLCBlib_PIC/can18_ecan.c: 736:                     m->len = mp->len;
 44988   005414  C073  FFD9         	movff	checkTxFifo@mp,fsr2l
 44989   005418  C074  FFDA         	movff	checkTxFifo@mp+1,fsr2h
 44990   00541C  C071  FFE1         	movff	checkTxFifo@m,fsr1l
 44991   005420  C072  FFE2         	movff	checkTxFifo@m+1,fsr1h
 44992   005424  CFDF FFE7          	movff	indf2,indf1
 44993                           
 44994                           ; BSR set to: 0
 44995                           ;../../VLCBlib_PIC/can18_ecan.c: 737:                     m->bytes[0] = mp->bytes[0];
 44996   005428  EE20 F002          	lfsr	2,2
 44997   00542C  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44998   00542E  26D9               	addwf	fsr2l,f,c
 44999   005430  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45000   005432  22DA               	addwfc	fsr2h,f,c
 45001   005434  EE10 F002          	lfsr	1,2
 45002   005438  5171               	movf	checkTxFifo@m& (0+255),w,b
 45003   00543A  26E1               	addwf	fsr1l,f,c
 45004   00543C  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 45005   00543E  22E2               	addwfc	fsr1h,f,c
 45006   005440  CFDF FFE7          	movff	indf2,indf1
 45007                           
 45008                           ; BSR set to: 0
 45009                           ;../../VLCBlib_PIC/can18_ecan.c: 738:                     m->bytes[1] = mp->bytes[1];
 45010   005444  EE20 F003          	lfsr	2,3
 45011   005448  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45012   00544A  26D9               	addwf	fsr2l,f,c
 45013   00544C  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45014   00544E  22DA               	addwfc	fsr2h,f,c
 45015   005450  EE10 F003          	lfsr	1,3
 45016   005454  5171               	movf	checkTxFifo@m& (0+255),w,b
 45017   005456  26E1               	addwf	fsr1l,f,c
 45018   005458  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 45019   00545A  22E2               	addwfc	fsr1h,f,c
 45020   00545C  CFDF FFE7          	movff	indf2,indf1
 45021                           
 45022                           ; BSR set to: 0
 45023                           ;../../VLCBlib_PIC/can18_ecan.c: 739:                     m->bytes[2] = mp->bytes[2];
 45024   005460  EE20 F004          	lfsr	2,4
 45025   005464  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45026   005466  26D9               	addwf	fsr2l,f,c
 45027   005468  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45028   00546A  22DA               	addwfc	fsr2h,f,c
 45029   00546C  EE10 F004          	lfsr	1,4
 45030   005470  5171               	movf	checkTxFifo@m& (0+255),w,b
 45031   005472  26E1               	addwf	fsr1l,f,c
 45032   005474  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 45033   005476  22E2               	addwfc	fsr1h,f,c
 45034   005478  CFDF FFE7          	movff	indf2,indf1
 45035                           
 45036                           ; BSR set to: 0
 45037                           ;../../VLCBlib_PIC/can18_ecan.c: 740:                     m->bytes[3] = mp->bytes[3];
 45038   00547C  EE20 F005          	lfsr	2,5
 45039   005480  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45040   005482  26D9               	addwf	fsr2l,f,c
 45041   005484  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45042   005486  22DA               	addwfc	fsr2h,f,c
 45043   005488  EE10 F005          	lfsr	1,5
 45044   00548C  5171               	movf	checkTxFifo@m& (0+255),w,b
 45045   00548E  26E1               	addwf	fsr1l,f,c
 45046   005490  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 45047   005492  22E2               	addwfc	fsr1h,f,c
 45048   005494  CFDF FFE7          	movff	indf2,indf1
 45049                           
 45050                           ; BSR set to: 0
 45051                           ;../../VLCBlib_PIC/can18_ecan.c: 741:                     m->bytes[4] = mp->bytes[4];
 45052   005498  EE20 F006          	lfsr	2,6
 45053   00549C  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45054   00549E  26D9               	addwf	fsr2l,f,c
 45055   0054A0  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45056   0054A2  22DA               	addwfc	fsr2h,f,c
 45057   0054A4  EE10 F006          	lfsr	1,6
 45058   0054A8  5171               	movf	checkTxFifo@m& (0+255),w,b
 45059   0054AA  26E1               	addwf	fsr1l,f,c
 45060   0054AC  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 45061   0054AE  22E2               	addwfc	fsr1h,f,c
 45062   0054B0  CFDF FFE7          	movff	indf2,indf1
 45063                           
 45064                           ; BSR set to: 0
 45065                           ;../../VLCBlib_PIC/can18_ecan.c: 742:                     m->bytes[5] = mp->bytes[5];
 45066   0054B4  EE20 F007          	lfsr	2,7
 45067   0054B8  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45068   0054BA  26D9               	addwf	fsr2l,f,c
 45069   0054BC  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45070   0054BE  22DA               	addwfc	fsr2h,f,c
 45071   0054C0  EE10 F007          	lfsr	1,7
 45072   0054C4  5171               	movf	checkTxFifo@m& (0+255),w,b
 45073   0054C6  26E1               	addwf	fsr1l,f,c
 45074   0054C8  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 45075   0054CA  22E2               	addwfc	fsr1h,f,c
 45076   0054CC  CFDF FFE7          	movff	indf2,indf1
 45077                           
 45078                           ; BSR set to: 0
 45079                           ;../../VLCBlib_PIC/can18_ecan.c: 743:                     m->bytes[6] = mp->bytes[6];
 45080   0054D0  EE20 F008          	lfsr	2,8
 45081   0054D4  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45082   0054D6  26D9               	addwf	fsr2l,f,c
 45083   0054D8  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45084   0054DA  22DA               	addwfc	fsr2h,f,c
 45085   0054DC  EE10 F008          	lfsr	1,8
 45086   0054E0  5171               	movf	checkTxFifo@m& (0+255),w,b
 45087   0054E2  26E1               	addwf	fsr1l,f,c
 45088   0054E4  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 45089   0054E6  22E2               	addwfc	fsr1h,f,c
 45090   0054E8  CFDF FFE7          	movff	indf2,indf1
 45091   0054EC  0012               	return	
 45092   0054EE                     i1l21159:
 45093                           
 45094                           ; BSR set to: 0
 45095                           ;../../VLCBlib_PIC/can18_ecan.c: 749:             canTransmitTimeout.val = 0;
 45096   0054EE  0E00               	movlw	0
 45097   0054F0  6E2F               	movwf	_canTransmitTimeout^0,c
 45098   0054F2  0E00               	movlw	0
 45099   0054F4  6E30               	movwf	(_canTransmitTimeout+1)^0,c
 45100   0054F6  0E00               	movlw	0
 45101   0054F8  6E31               	movwf	(_canTransmitTimeout+2)^0,c
 45102   0054FA  0E00               	movlw	0
 45103   0054FC  6E32               	movwf	(_canTransmitTimeout+3)^0,c
 45104                           
 45105                           ;../../VLCBlib_PIC/can18_ecan.c: 750:             TXB0CON = 0;
 45106   0054FE  0E00               	movlw	0
 45107   005500  010F               	movlb	15	; () banked
 45108   005502  6F20               	movwf	32,b	;volatile
 45109                           
 45110                           ; BSR set to: 15
 45111                           ;../../VLCBlib_PIC/can18_ecan.c: 751:             PIR5bits.TXBnIF = 0;
 45112   005504  9877               	bcf	119,4,c	;volatile
 45113                           
 45114                           ; BSR set to: 15
 45115                           ;../../VLCBlib_PIC/can18_ecan.c: 752:             PIE5bits.TXBnIE = 0;
 45116   005506  9876               	bcf	118,4,c	;volatile
 45117   005508  0012               	return	
 45118   00550A                     i1l2539:
 45119                           
 45120                           ; BSR set to: 15
 45121                           ;../../VLCBlib_PIC/can18_ecan.c: 756:         PIR5bits.TXBnIF = 0;
 45122   00550A  9877               	bcf	119,4,c	;volatile
 45123                           
 45124                           ;../../VLCBlib_PIC/can18_ecan.c: 757:         PIE5bits.TXBnIE = 1;
 45125   00550C  8876               	bsf	118,4,c	;volatile
 45126   00550E  0012               	return		;funcret
 45127   005510                     __end_of_checkTxFifo:
 45128                           	callstack 0
 45129                           
 45130 ;; *************** function i1_tickGet *****************
 45131 ;; Defined at:
 45132 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 45133 ;; Parameters:    Size  Location     Type
 45134 ;;		None
 45135 ;; Auto vars:     Size  Location     Type
 45136 ;;  currentTime     4    6[BANK0 ] struct _TickValue
 45137 ;;  IntFlag1        1    5[BANK0 ] unsigned char 
 45138 ;;  IntFlag2        1    4[BANK0 ] unsigned char 
 45139 ;; Return value:  Size  Location     Type
 45140 ;;                  4    0[BANK0 ] unsigned long 
 45141 ;; Registers used:
 45142 ;;		wreg, status,2, status,0
 45143 ;; Tracked objects:
 45144 ;;		On entry : 0/0
 45145 ;;		On exit  : 0/0
 45146 ;;		Unchanged: 0/0
 45147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45148 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45149 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45151 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45152 ;;Total ram usage:       10 bytes
 45153 ;; Hardware stack levels used: 1
 45154 ;; Hardware stack levels required when called: 6
 45155 ;; This function calls:
 45156 ;;		Nothing
 45157 ;; This function is called by:
 45158 ;;		_checkTxFifo
 45159 ;;		_checkCANTimeout
 45160 ;; This function uses a non-reentrant model
 45161 ;;
 45162                           
 45163                           	psect	text205
 45164   00B678                     __ptext205:
 45165                           	callstack 0
 45166   00B678                     i1_tickGet:
 45167                           	callstack 3
 45168                           
 45169                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 45170                           
 45171                           ;incstack = 0
 45172   00B678  0E00               	movlw	0
 45173   00B67A  0100               	movlb	0	; () banked
 45174   00B67C  6F68               	movwf	(i1tickGet@currentTime+2)& (0+255),b
 45175                           
 45176                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 45177   00B67E  0E00               	movlw	0
 45178   00B680  6F69               	movwf	(i1tickGet@currentTime+3)& (0+255),b
 45179                           
 45180                           ; BSR set to: 0
 45181                           ;../../VLCBlib_PIC/ticktime.c: 169:     INTCONbits.TMR0IE = 0;
 45182   00B682  9AF2               	bcf	242,5,c	;volatile
 45183   00B684                     i1l20257:
 45184                           
 45185                           ; BSR set to: 0
 45186                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = INTCONbits.TMR0IF;
 45187   00B684  0E00               	movlw	0
 45188   00B686  B4F2               	btfsc	242,2,c	;volatile
 45189   00B688  0E01               	movlw	1
 45190   00B68A  6F65               	movwf	i1tickGet@IntFlag1& (0+255),b
 45191                           
 45192                           ; BSR set to: 0
 45193                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 45194   00B68C  CFD6 F066          	movff	4054,i1tickGet@currentTime	;volatile
 45195                           
 45196                           ; BSR set to: 0
 45197                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 45198   00B690  CFD7 F067          	movff	4055,i1tickGet@currentTime+1	;volatile
 45199                           
 45200                           ; BSR set to: 0
 45201                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = INTCONbits.TMR0IF;
 45202   00B694  0E00               	movlw	0
 45203   00B696  B4F2               	btfsc	242,2,c	;volatile
 45204   00B698  0E01               	movlw	1
 45205   00B69A  6F64               	movwf	i1tickGet@IntFlag2& (0+255),b
 45206                           
 45207                           ; BSR set to: 0
 45208                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 45209   00B69C  5164               	movf	i1tickGet@IntFlag2& (0+255),w,b
 45210   00B69E  1965               	xorwf	i1tickGet@IntFlag1& (0+255),w,b
 45211   00B6A0  A4D8               	btfss	status,2,c
 45212   00B6A2  D7F0               	goto	i1l20257
 45213                           
 45214                           ; BSR set to: 0
 45215                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 45216   00B6A4  5165               	movf	i1tickGet@IntFlag1& (0+255),w,b
 45217   00B6A6  B4D8               	btfsc	status,2,c
 45218   00B6A8  D005               	goto	i1l20277
 45219                           
 45220                           ; BSR set to: 0
 45221                           ;../../VLCBlib_PIC/ticktime.c: 178:         INTCONbits.TMR0IF = 0;
 45222   00B6AA  94F2               	bcf	242,2,c	;volatile
 45223                           
 45224                           ; BSR set to: 0
 45225                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 45226   00B6AC  2BC7               	incf	_timerExtension1& (0+255),f,b	;volatile
 45227                           
 45228                           ; BSR set to: 0
 45229                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 45230   00B6AE  51C7               	movf	_timerExtension1& (0+255),w,b	;volatile
 45231   00B6B0  B4D8               	btfsc	status,2,c
 45232                           
 45233                           ; BSR set to: 0
 45234                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 45235   00B6B2  2BC6               	incf	_timerExtension2& (0+255),f,b	;volatile
 45236   00B6B4                     i1l20277:
 45237                           
 45238                           ; BSR set to: 0
 45239                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 45240   00B6B4  51C7               	movf	_timerExtension1& (0+255),w,b	;volatile
 45241   00B6B6  2768               	addwf	(i1tickGet@currentTime+2)& (0+255),f,b
 45242                           
 45243                           ; BSR set to: 0
 45244                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 45245   00B6B8  51C6               	movf	_timerExtension2& (0+255),w,b	;volatile
 45246   00B6BA  2769               	addwf	(i1tickGet@currentTime+3)& (0+255),f,b
 45247                           
 45248                           ; BSR set to: 0
 45249                           ;../../VLCBlib_PIC/ticktime.c: 191:     INTCONbits.TMR0IE = 1;
 45250   00B6BC  8AF2               	bsf	242,5,c	;volatile
 45251                           
 45252                           ; BSR set to: 0
 45253                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 45254   00B6BE  C066  F060         	movff	i1tickGet@currentTime,?i1_tickGet
 45255   00B6C2  C067  F061         	movff	i1tickGet@currentTime+1,?i1_tickGet+1
 45256   00B6C6  C068  F062         	movff	i1tickGet@currentTime+2,?i1_tickGet+2
 45257   00B6CA  C069  F063         	movff	i1tickGet@currentTime+3,?i1_tickGet+3
 45258                           
 45259                           ; BSR set to: 0
 45260   00B6CE  0012               	return		;funcret
 45261   00B6D0                     __end_ofi1_tickGet:
 45262                           	callstack 0
 45263                           
 45264 ;; *************** function i1_pop *****************
 45265 ;; Defined at:
 45266 ;;		line 96 in file "../../VLCBlib_PIC/messageQueue.c"
 45267 ;; Parameters:    Size  Location     Type
 45268 ;;  q               1    0[BANK0 ] PTR struct MessageQueue
 45269 ;;		 -> txQueue(5), rxQueue(5), 
 45270 ;; Auto vars:     Size  Location     Type
 45271 ;;  ret             2    7[BANK0 ] PTR struct Message
 45272 ;;		 -> txBuffers(72), rxBuffers(288), 
 45273 ;; Return value:  Size  Location     Type
 45274 ;;                  2    0[BANK0 ] PTR struct Message
 45275 ;; Registers used:
 45276 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 45277 ;; Tracked objects:
 45278 ;;		On entry : 0/0
 45279 ;;		On exit  : 0/0
 45280 ;;		Unchanged: 0/0
 45281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45282 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45283 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45284 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45285 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45286 ;;Total ram usage:        9 bytes
 45287 ;; Hardware stack levels used: 1
 45288 ;; Hardware stack levels required when called: 6
 45289 ;; This function calls:
 45290 ;;		Nothing
 45291 ;; This function is called by:
 45292 ;;		_checkTxFifo
 45293 ;; This function uses a non-reentrant model
 45294 ;;
 45295                           
 45296                           	psect	text206
 45297   009D0C                     __ptext206:
 45298                           	callstack 0
 45299   009D0C                     i1_pop:
 45300                           	callstack 3
 45301                           
 45302                           ;../../VLCBlib_PIC/messageQueue.c: 97:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 98:  if (q->writeIndex == q->readIndex) {
 45303                           
 45304                           ; BSR set to: 0
 45305                           ;incstack = 0
 45306   009D0C  0100               	movlb	0	; () banked
 45307   009D0E  5160               	movf	i1pop@q& (0+255),w,b
 45308   009D10  6ED9               	movwf	fsr2l,c
 45309   009D12  6ADA               	clrf	fsr2h,c
 45310   009D14  0E02               	movlw	2
 45311   009D16  26D9               	addwf	fsr2l,f,c
 45312   009D18  5160               	movf	i1pop@q& (0+255),w,b
 45313   009D1A  6EE1               	movwf	fsr1l,c
 45314   009D1C  6AE2               	clrf	fsr1h,c
 45315   009D1E  0E03               	movlw	3
 45316   009D20  26E1               	addwf	fsr1l,f,c
 45317   009D22  50DE               	movf	postinc2,w,c
 45318   009D24  18E6               	xorwf	postinc1,w,c
 45319   009D26  A4D8               	btfss	status,2,c
 45320   009D28  D005               	goto	i1l20319
 45321                           
 45322                           ; BSR set to: 0
 45323                           ;../../VLCBlib_PIC/messageQueue.c: 99:         return ((void*)0);
 45324   009D2A  0E00               	movlw	0
 45325   009D2C  6F60               	movwf	?i1_pop& (0+255),b
 45326   009D2E  0E00               	movlw	0
 45327   009D30  6F61               	movwf	(?i1_pop+1)& (0+255),b
 45328   009D32  0012               	return	
 45329   009D34                     i1l20319:
 45330                           
 45331                           ; BSR set to: 0
 45332                           ;../../VLCBlib_PIC/messageQueue.c: 101:  ret = &(q->messages[q->readIndex++]);
 45333   009D34  5160               	movf	i1pop@q& (0+255),w,b
 45334   009D36  6ED9               	movwf	fsr2l,c
 45335   009D38  6ADA               	clrf	fsr2h,c
 45336   009D3A  0E02               	movlw	2
 45337   009D3C  26D9               	addwf	fsr2l,f,c
 45338   009D3E  50DF               	movf	indf2,w,c
 45339   009D40  6F62               	movwf	??i1_pop& (0+255),b
 45340   009D42  5162               	movf	??i1_pop& (0+255),w,b
 45341   009D44  0D09               	mullw	9
 45342   009D46  CFF3 F063          	movff	prodl,??i1_pop+1
 45343   009D4A  CFF4 F064          	movff	prodh,??i1_pop+2
 45344   009D4E  5160               	movf	i1pop@q& (0+255),w,b
 45345   009D50  6ED9               	movwf	fsr2l,c
 45346   009D52  6ADA               	clrf	fsr2h,c
 45347   009D54  CFDE F065          	movff	postinc2,??i1_pop+3
 45348   009D58  CFDD F066          	movff	postdec2,??i1_pop+4
 45349   009D5C  5163               	movf	(??i1_pop+1)& (0+255),w,b
 45350   009D5E  2565               	addwf	(??i1_pop+3)& (0+255),w,b
 45351   009D60  6F67               	movwf	i1pop@ret& (0+255),b
 45352   009D62  5164               	movf	(??i1_pop+2)& (0+255),w,b
 45353   009D64  2166               	addwfc	(??i1_pop+4)& (0+255),w,b
 45354   009D66  6F68               	movwf	(i1pop@ret+1)& (0+255),b
 45355                           
 45356                           ; BSR set to: 0
 45357   009D68  5160               	movf	i1pop@q& (0+255),w,b
 45358   009D6A  6ED9               	movwf	fsr2l,c
 45359   009D6C  6ADA               	clrf	fsr2h,c
 45360   009D6E  0E02               	movlw	2
 45361   009D70  26D9               	addwf	fsr2l,f,c
 45362   009D72  2ADF               	incf	indf2,f,c
 45363                           
 45364                           ; BSR set to: 0
 45365                           ;../../VLCBlib_PIC/messageQueue.c: 102:  if (q->readIndex >= q->size) q->readIndex = 0;
 45366   009D74  5160               	movf	i1pop@q& (0+255),w,b
 45367   009D76  6ED9               	movwf	fsr2l,c
 45368   009D78  6ADA               	clrf	fsr2h,c
 45369   009D7A  0E04               	movlw	4
 45370   009D7C  26D9               	addwf	fsr2l,f,c
 45371   009D7E  5160               	movf	i1pop@q& (0+255),w,b
 45372   009D80  6EE1               	movwf	fsr1l,c
 45373   009D82  6AE2               	clrf	fsr1h,c
 45374   009D84  0E02               	movlw	2
 45375   009D86  26E1               	addwf	fsr1l,f,c
 45376   009D88  50DE               	movf	postinc2,w,c
 45377   009D8A  5CE6               	subwf	postinc1,w,c
 45378   009D8C  A0D8               	btfss	status,0,c
 45379   009D8E  D006               	goto	i1l20327
 45380                           
 45381                           ; BSR set to: 0
 45382   009D90  5160               	movf	i1pop@q& (0+255),w,b
 45383   009D92  6ED9               	movwf	fsr2l,c
 45384   009D94  6ADA               	clrf	fsr2h,c
 45385   009D96  0E02               	movlw	2
 45386   009D98  26D9               	addwf	fsr2l,f,c
 45387   009D9A  6ADF               	clrf	indf2,c
 45388   009D9C                     i1l20327:
 45389                           
 45390                           ; BSR set to: 0
 45391                           ;../../VLCBlib_PIC/messageQueue.c: 103:  return ret;
 45392   009D9C  C067  F060         	movff	i1pop@ret,?i1_pop
 45393   009DA0  C068  F061         	movff	i1pop@ret+1,?i1_pop+1
 45394                           
 45395                           ; BSR set to: 0
 45396   009DA4  0012               	return		;funcret
 45397   009DA6                     __end_ofi1_pop:
 45398                           	callstack 0
 45399                           
 45400 ;; *************** function i1_isEvent *****************
 45401 ;; Defined at:
 45402 ;;		line 1118 in file "../../VLCBlib_PIC/vlcb.c"
 45403 ;; Parameters:    Size  Location     Type
 45404 ;;  opc             1    wreg     unsigned char 
 45405 ;; Auto vars:     Size  Location     Type
 45406 ;;  opc             1    1[BANK0 ] unsigned char 
 45407 ;; Return value:  Size  Location     Type
 45408 ;;                  1    wreg      enum E12760
 45409 ;; Registers used:
 45410 ;;		wreg, status,2, status,0
 45411 ;; Tracked objects:
 45412 ;;		On entry : 0/0
 45413 ;;		On exit  : 0/0
 45414 ;;		Unchanged: 0/0
 45415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45417 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45419 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45420 ;;Total ram usage:        2 bytes
 45421 ;; Hardware stack levels used: 1
 45422 ;; Hardware stack levels required when called: 6
 45423 ;; This function calls:
 45424 ;;		Nothing
 45425 ;; This function is called by:
 45426 ;;		_checkTxFifo
 45427 ;; This function uses a non-reentrant model
 45428 ;;
 45429                           
 45430                           	psect	text207
 45431   00C2C6                     __ptext207:
 45432                           	callstack 0
 45433   00C2C6                     i1_isEvent:
 45434                           	callstack 3
 45435                           
 45436                           ; BSR set to: 0
 45437                           ;incstack = 0
 45438                           ;i1isEvent@opc stored from wreg
 45439   00C2C6  0100               	movlb	0	; () banked
 45440   00C2C8  6F61               	movwf	i1isEvent@opc& (0+255),b
 45441                           
 45442                           ;../../VLCBlib_PIC/vlcb.c: 1119:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 45443   00C2CA  0E00               	movlw	0
 45444   00C2CC  0100               	movlb	0	; () banked
 45445   00C2CE  6F60               	movwf	i1_isEvent$4885& (0+255),b
 45446                           
 45447                           ; BSR set to: 0
 45448   00C2D0  5161               	movf	i1isEvent@opc& (0+255),w,b
 45449   00C2D2  0B90               	andlw	144
 45450   00C2D4  0A90               	xorlw	144
 45451   00C2D6  A4D8               	btfss	status,2,c
 45452   00C2D8  D008               	goto	i1l2047
 45453                           
 45454                           ; BSR set to: 0
 45455   00C2DA  5161               	movf	i1isEvent@opc& (0+255),w,b
 45456   00C2DC  0AFF               	xorlw	255
 45457   00C2DE  0B06               	andlw	6
 45458   00C2E0  0A06               	xorlw	6
 45459   00C2E2  A4D8               	btfss	status,2,c
 45460   00C2E4  D002               	goto	i1l2047
 45461                           
 45462                           ; BSR set to: 0
 45463   00C2E6  0E01               	movlw	1
 45464   00C2E8  6F60               	movwf	i1_isEvent$4885& (0+255),b
 45465   00C2EA                     i1l2047:
 45466                           
 45467                           ; BSR set to: 0
 45468   00C2EA  5160               	movf	i1_isEvent$4885& (0+255),w,b
 45469                           
 45470                           ; BSR set to: 0
 45471   00C2EC  0012               	return		;funcret
 45472   00C2EE                     __end_ofi1_isEvent:
 45473                           	callstack 0
 45474                           
 45475 ;; *************** function _canFillRxFifo *****************
 45476 ;; Defined at:
 45477 ;;		line 848 in file "../../VLCBlib_PIC/can18_ecan.c"
 45478 ;; Parameters:    Size  Location     Type
 45479 ;;		None
 45480 ;; Auto vars:     Size  Location     Type
 45481 ;;  ptr             2   14[BANK0 ] PTR unsigned char 
 45482 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 45483 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 45484 ;;		 -> NULL(0), 
 45485 ;;  m               2   12[BANK0 ] PTR struct Message
 45486 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 45487 ;;  hiIndex         1    0        unsigned char 
 45488 ;; Return value:  Size  Location     Type
 45489 ;;                  1    wreg      void 
 45490 ;; Registers used:
 45491 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45492 ;; Tracked objects:
 45493 ;;		On entry : 0/0
 45494 ;;		On exit  : 0/0
 45495 ;;		Unchanged: 0/0
 45496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45498 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45500 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45501 ;;Total ram usage:        4 bytes
 45502 ;; Hardware stack levels used: 1
 45503 ;; Hardware stack levels required when called: 7
 45504 ;; This function calls:
 45505 ;;		i1_getBufferPointer
 45506 ;;		i1_getNextWriteMessage
 45507 ;;		i1_updateModuleErrorStatus
 45508 ;; This function is called by:
 45509 ;;		_canIsr
 45510 ;; This function uses a non-reentrant model
 45511 ;;
 45512                           
 45513                           	psect	text208
 45514   00727C                     __ptext208:
 45515                           	callstack 0
 45516   00727C                     _canFillRxFifo:
 45517                           	callstack 3
 45518                           
 45519                           ;../../VLCBlib_PIC/can18_ecan.c: 849:     uint8_t *ptr;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          850:     uint8_t hiIndex;;../../VLCBlib_PIC/can18_ecan.c: 851:     Message * m;;../../VL
      +                          CBlib_PIC/can18_ecan.c: 853:     while (COMSTATbits.NOT_FIFOEMPTY) {
 45520                           
 45521                           ; BSR set to: 0
 45522                           ;incstack = 0
 45523   00727C  D0B4               	goto	i1l22287
 45524   00727E                     i1l22249:
 45525                           
 45526                           ;../../VLCBlib_PIC/can18_ecan.c: 854:         ptr = getBufferPointer(CANCON & 0x07U);
 45527   00727E  506F               	movf	111,w,c	;volatile
 45528   007280  0B07               	andlw	7
 45529   007282  EC01  F050         	call	i1_getBufferPointer
 45530   007286  C060  F06E         	movff	?i1_getBufferPointer,canFillRxFifo@ptr
 45531   00728A  C061  F06F         	movff	?i1_getBufferPointer+1,canFillRxFifo@ptr+1
 45532                           
 45533                           ;../../VLCBlib_PIC/can18_ecan.c: 855:         PIR5bits.RXBnIF = 0;
 45534   00728E  9277               	bcf	119,1,c	;volatile
 45535                           
 45536                           ;../../VLCBlib_PIC/can18_ecan.c: 856:         if (COMSTATbits.RXB1OVFL) {
 45537   007290  BC71               	btfsc	113,6,c	;volatile
 45538                           
 45539                           ;../../VLCBlib_PIC/can18_ecan.c: 857:             COMSTATbits.RXB1OVFL = 0;
 45540   007292  9C71               	bcf	113,6,c	;volatile
 45541                           
 45542                           ;../../VLCBlib_PIC/can18_ecan.c: 859:         if ((ptr[2] & 0x08) == 0) {
 45543   007294  0100               	movlb	0	; () banked
 45544   007296  EE20 F002          	lfsr	2,2
 45545   00729A  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 45546   00729C  26D9               	addwf	fsr2l,f,c
 45547   00729E  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 45548   0072A0  22DA               	addwfc	fsr2h,f,c
 45549   0072A2  B6DF               	btfsc	indf2,3,c
 45550   0072A4  D093               	goto	i1l22277
 45551                           
 45552                           ; BSR set to: 0
 45553                           ;../../VLCBlib_PIC/can18_ecan.c: 862:             m = getNextWriteMessage(&rxQueue);
 45554   0072A6  0E4F               	movlw	low _rxQueue
 45555   0072A8  6F60               	movwf	i1getNextWriteMessage@q& (0+255),b
 45556   0072AA  EC92  F046         	call	i1_getNextWriteMessage	;wreg free
 45557   0072AE  C060  F06C         	movff	?i1_getNextWriteMessage,canFillRxFifo@m
 45558   0072B2  C061  F06D         	movff	?i1_getNextWriteMessage+1,canFillRxFifo@m+1
 45559                           
 45560                           ;../../VLCBlib_PIC/can18_ecan.c: 863:             if (m == ((void*)0)) {
 45561   0072B6  0100               	movlb	0	; () banked
 45562   0072B8  516C               	movf	canFillRxFifo@m& (0+255),w,b
 45563   0072BA  116D               	iorwf	(canFillRxFifo@m+1)& (0+255),w,b
 45564   0072BC  A4D8               	btfss	status,2,c
 45565   0072BE  D009               	goto	i1l22273
 45566                           
 45567                           ; BSR set to: 0
 45568                           ;../../VLCBlib_PIC/can18_ecan.c: 865:                 canDiagnostics[0x08].asUint++;
 45569   0072C0  0101               	movlb	1	; () banked
 45570   0072C2  4B77               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 45571   0072C4  2B78               	incf	(_canDiagnostics+17)& (0+255),f,b
 45572                           
 45573                           ; BSR set to: 1
 45574                           ;../../VLCBlib_PIC/can18_ecan.c: 866:                 updateModuleErrorStatus();
 45575   0072C6  ECF3  F062         	call	i1_updateModuleErrorStatus	;wreg free
 45576                           
 45577                           ;../../VLCBlib_PIC/can18_ecan.c: 869:                 if (PIR5bits.IRXIF) {
 45578   0072CA  AE77               	btfss	119,7,c	;volatile
 45579   0072CC  0012               	return	
 45580                           
 45581                           ;../../VLCBlib_PIC/can18_ecan.c: 870:                     PIR5bits.IRXIF = 0;
 45582   0072CE  9E77               	bcf	119,7,c	;volatile
 45583   0072D0  0012               	return	
 45584   0072D2                     i1l22273:
 45585                           
 45586                           ; BSR set to: 0
 45587                           ;../../VLCBlib_PIC/can18_ecan.c: 875:                 m->opc = ptr[6];
 45588   0072D2  EE20 F006          	lfsr	2,6
 45589   0072D6  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 45590   0072D8  26D9               	addwf	fsr2l,f,c
 45591   0072DA  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 45592   0072DC  22DA               	addwfc	fsr2h,f,c
 45593   0072DE  EE10 F001          	lfsr	1,1
 45594   0072E2  516C               	movf	canFillRxFifo@m& (0+255),w,b
 45595   0072E4  26E1               	addwf	fsr1l,f,c
 45596   0072E6  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 45597   0072E8  22E2               	addwfc	fsr1h,f,c
 45598   0072EA  CFDF FFE7          	movff	indf2,indf1
 45599                           
 45600                           ;../../VLCBlib_PIC/can18_ecan.c: 876:                 m->bytes[0] = ptr[7];
 45601   0072EE  EE20 F007          	lfsr	2,7
 45602   0072F2  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 45603   0072F4  26D9               	addwf	fsr2l,f,c
 45604   0072F6  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 45605   0072F8  22DA               	addwfc	fsr2h,f,c
 45606   0072FA  EE10 F002          	lfsr	1,2
 45607   0072FE  516C               	movf	canFillRxFifo@m& (0+255),w,b
 45608   007300  26E1               	addwf	fsr1l,f,c
 45609   007302  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 45610   007304  22E2               	addwfc	fsr1h,f,c
 45611   007306  CFDF FFE7          	movff	indf2,indf1
 45612                           
 45613                           ;../../VLCBlib_PIC/can18_ecan.c: 877:                 m->bytes[1] = ptr[8];
 45614   00730A  EE20 F008          	lfsr	2,8
 45615   00730E  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 45616   007310  26D9               	addwf	fsr2l,f,c
 45617   007312  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 45618   007314  22DA               	addwfc	fsr2h,f,c
 45619   007316  EE10 F003          	lfsr	1,3
 45620   00731A  516C               	movf	canFillRxFifo@m& (0+255),w,b
 45621   00731C  26E1               	addwf	fsr1l,f,c
 45622   00731E  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 45623   007320  22E2               	addwfc	fsr1h,f,c
 45624   007322  CFDF FFE7          	movff	indf2,indf1
 45625                           
 45626                           ;../../VLCBlib_PIC/can18_ecan.c: 878:                 m->bytes[2] = ptr[9];
 45627   007326  EE20 F009          	lfsr	2,9
 45628   00732A  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 45629   00732C  26D9               	addwf	fsr2l,f,c
 45630   00732E  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 45631   007330  22DA               	addwfc	fsr2h,f,c
 45632   007332  EE10 F004          	lfsr	1,4
 45633   007336  516C               	movf	canFillRxFifo@m& (0+255),w,b
 45634   007338  26E1               	addwf	fsr1l,f,c
 45635   00733A  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 45636   00733C  22E2               	addwfc	fsr1h,f,c
 45637   00733E  CFDF FFE7          	movff	indf2,indf1
 45638                           
 45639                           ;../../VLCBlib_PIC/can18_ecan.c: 879:                 m->bytes[3] = ptr[10];
 45640   007342  EE20 F00A          	lfsr	2,10
 45641   007346  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 45642   007348  26D9               	addwf	fsr2l,f,c
 45643   00734A  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 45644   00734C  22DA               	addwfc	fsr2h,f,c
 45645   00734E  EE10 F005          	lfsr	1,5
 45646   007352  516C               	movf	canFillRxFifo@m& (0+255),w,b
 45647   007354  26E1               	addwf	fsr1l,f,c
 45648   007356  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 45649   007358  22E2               	addwfc	fsr1h,f,c
 45650   00735A  CFDF FFE7          	movff	indf2,indf1
 45651                           
 45652                           ;../../VLCBlib_PIC/can18_ecan.c: 880:                 m->bytes[4] = ptr[11];
 45653   00735E  EE20 F00B          	lfsr	2,11
 45654   007362  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 45655   007364  26D9               	addwf	fsr2l,f,c
 45656   007366  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 45657   007368  22DA               	addwfc	fsr2h,f,c
 45658   00736A  EE10 F006          	lfsr	1,6
 45659   00736E  516C               	movf	canFillRxFifo@m& (0+255),w,b
 45660   007370  26E1               	addwf	fsr1l,f,c
 45661   007372  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 45662   007374  22E2               	addwfc	fsr1h,f,c
 45663   007376  CFDF FFE7          	movff	indf2,indf1
 45664                           
 45665                           ;../../VLCBlib_PIC/can18_ecan.c: 881:                 m->bytes[5] = ptr[12];
 45666   00737A  EE20 F00C          	lfsr	2,12
 45667   00737E  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 45668   007380  26D9               	addwf	fsr2l,f,c
 45669   007382  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 45670   007384  22DA               	addwfc	fsr2h,f,c
 45671   007386  EE10 F007          	lfsr	1,7
 45672   00738A  516C               	movf	canFillRxFifo@m& (0+255),w,b
 45673   00738C  26E1               	addwf	fsr1l,f,c
 45674   00738E  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 45675   007390  22E2               	addwfc	fsr1h,f,c
 45676   007392  CFDF FFE7          	movff	indf2,indf1
 45677                           
 45678                           ;../../VLCBlib_PIC/can18_ecan.c: 882:                 m->bytes[6] = ptr[13];
 45679   007396  EE20 F00D          	lfsr	2,13
 45680   00739A  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 45681   00739C  26D9               	addwf	fsr2l,f,c
 45682   00739E  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 45683   0073A0  22DA               	addwfc	fsr2h,f,c
 45684   0073A2  EE10 F008          	lfsr	1,8
 45685   0073A6  516C               	movf	canFillRxFifo@m& (0+255),w,b
 45686   0073A8  26E1               	addwf	fsr1l,f,c
 45687   0073AA  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 45688   0073AC  22E2               	addwfc	fsr1h,f,c
 45689   0073AE  CFDF FFE7          	movff	indf2,indf1
 45690                           
 45691                           ; BSR set to: 0
 45692                           ;../../VLCBlib_PIC/can18_ecan.c: 883:                 m->len = ptr[5]&0xF;
 45693   0073B2  EE20 F005          	lfsr	2,5
 45694   0073B6  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 45695   0073B8  26D9               	addwf	fsr2l,f,c
 45696   0073BA  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 45697   0073BC  22DA               	addwfc	fsr2h,f,c
 45698   0073BE  50DF               	movf	indf2,w,c
 45699   0073C0  0B0F               	andlw	15
 45700   0073C2  C06C  FFD9         	movff	canFillRxFifo@m,fsr2l
 45701   0073C6  C06D  FFDA         	movff	canFillRxFifo@m+1,fsr2h
 45702   0073CA  6EDF               	movwf	indf2,c
 45703   0073CC                     i1l22277:
 45704                           
 45705                           ; BSR set to: 0
 45706                           ;../../VLCBlib_PIC/can18_ecan.c: 887:         if (PIR5bits.IRXIF) {
 45707   0073CC  AE77               	btfss	119,7,c	;volatile
 45708   0073CE  D004               	goto	i1l22283
 45709                           
 45710                           ; BSR set to: 0
 45711                           ;../../VLCBlib_PIC/can18_ecan.c: 889:             canDiagnostics[0x01].asUint++;
 45712   0073D0  0101               	movlb	1	; () banked
 45713   0073D2  4B69               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 45714   0073D4  2B6A               	incf	(_canDiagnostics+3)& (0+255),f,b
 45715                           
 45716                           ; BSR set to: 1
 45717                           ;../../VLCBlib_PIC/can18_ecan.c: 891:             PIR5bits.IRXIF = 0;
 45718   0073D6  9E77               	bcf	119,7,c	;volatile
 45719   0073D8                     i1l22283:
 45720                           
 45721                           ;../../VLCBlib_PIC/can18_ecan.c: 894:         ptr[0] &= 0x7f;
 45722   0073D8  C06E  FFD9         	movff	canFillRxFifo@ptr,fsr2l
 45723   0073DC  C06F  FFDA         	movff	canFillRxFifo@ptr+1,fsr2h
 45724   0073E0  0E7F               	movlw	127
 45725   0073E2  16DF               	andwf	indf2,f,c
 45726                           
 45727                           ;../../VLCBlib_PIC/can18_ecan.c: 895:         PIR5bits.FIFOWMIF = 0;
 45728   0073E4  9077               	bcf	119,0,c	;volatile
 45729   0073E6                     i1l22287:
 45730                           
 45731                           ;../../VLCBlib_PIC/can18_ecan.c: 853:     while (COMSTATbits.NOT_FIFOEMPTY) {
 45732   0073E6  AE71               	btfss	113,7,c	;volatile
 45733   0073E8  0012               	return	
 45734   0073EA  D749               	goto	i1l22249
 45735   0073EC                     __end_of_canFillRxFifo:
 45736                           	callstack 0
 45737                           
 45738 ;; *************** function i1_updateModuleErrorStatus *****************
 45739 ;; Defined at:
 45740 ;;		line 632 in file "../../VLCBlib_PIC/mns.c"
 45741 ;; Parameters:    Size  Location     Type
 45742 ;;		None
 45743 ;; Auto vars:     Size  Location     Type
 45744 ;;		None
 45745 ;; Return value:  Size  Location     Type
 45746 ;;                  1    wreg      void 
 45747 ;; Registers used:
 45748 ;;		wreg, status,2, status,0
 45749 ;; Tracked objects:
 45750 ;;		On entry : 0/0
 45751 ;;		On exit  : 0/0
 45752 ;;		Unchanged: 0/0
 45753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45758 ;;Total ram usage:        0 bytes
 45759 ;; Hardware stack levels used: 1
 45760 ;; Hardware stack levels required when called: 6
 45761 ;; This function calls:
 45762 ;;		Nothing
 45763 ;; This function is called by:
 45764 ;;		_checkTxFifo
 45765 ;;		_checkCANTimeout
 45766 ;;		_canTxError
 45767 ;;		_canFillRxFifo
 45768 ;; This function uses a non-reentrant model
 45769 ;;
 45770                           
 45771                           	psect	text209
 45772   00C5E6                     __ptext209:
 45773                           	callstack 0
 45774   00C5E6                     i1_updateModuleErrorStatus:
 45775                           	callstack 3
 45776                           
 45777                           ;../../VLCBlib_PIC/mns.c: 633:     if (mnsDiagnostics[0x01].asBytes.lo < 0xFF) {
 45778                           
 45779                           ;incstack = 0
 45780   00C5E6  0101               	movlb	1	; () banked
 45781   00C5E8  298F               	incf	(_mnsDiagnostics+2)& (0+255),w,b
 45782   00C5EA  B4D8               	btfsc	status,2,c
 45783   00C5EC  0012               	return	
 45784                           
 45785                           ; BSR set to: 1
 45786                           ;../../VLCBlib_PIC/mns.c: 634:         mnsDiagnostics[0x01].asBytes.lo++;
 45787   00C5EE  2B8F               	incf	(_mnsDiagnostics+2)& (0+255),f,b
 45788                           
 45789                           ; BSR set to: 1
 45790   00C5F0  0012               	return		;funcret
 45791   00C5F2                     __end_ofi1_updateModuleErrorStatus:
 45792                           	callstack 0
 45793                           
 45794 ;; *************** function i1_getNextWriteMessage *****************
 45795 ;; Defined at:
 45796 ;;		line 80 in file "../../VLCBlib_PIC/messageQueue.c"
 45797 ;; Parameters:    Size  Location     Type
 45798 ;;  q               1    0[BANK0 ] PTR struct MessageQueue
 45799 ;;		 -> rxQueue(5), 
 45800 ;; Auto vars:     Size  Location     Type
 45801 ;;  wr              1   11[BANK0 ] unsigned char 
 45802 ;; Return value:  Size  Location     Type
 45803 ;;                  2    0[BANK0 ] PTR struct Message
 45804 ;; Registers used:
 45805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 45806 ;; Tracked objects:
 45807 ;;		On entry : 0/0
 45808 ;;		On exit  : 0/0
 45809 ;;		Unchanged: 0/0
 45810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45811 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45812 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45813 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45814 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45815 ;;Total ram usage:       12 bytes
 45816 ;; Hardware stack levels used: 1
 45817 ;; Hardware stack levels required when called: 6
 45818 ;; This function calls:
 45819 ;;		Nothing
 45820 ;; This function is called by:
 45821 ;;		_checkTxFifo
 45822 ;;		_canFillRxFifo
 45823 ;; This function uses a non-reentrant model
 45824 ;;
 45825                           
 45826                           	psect	text210
 45827   008D24                     __ptext210:
 45828                           	callstack 0
 45829   008D24                     i1_getNextWriteMessage:
 45830                           	callstack 3
 45831                           
 45832                           ; BSR set to: 1
 45833                           ;incstack = 0
 45834   008D24  0100               	movlb	0	; () banked
 45835   008D26  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 45836   008D28  6ED9               	movwf	fsr2l,c
 45837   008D2A  6ADA               	clrf	fsr2h,c
 45838   008D2C  0E02               	movlw	2
 45839   008D2E  26D9               	addwf	fsr2l,f,c
 45840   008D30  50DF               	movf	indf2,w,c
 45841   008D32  6F62               	movwf	??i1_getNextWriteMessage& (0+255),b
 45842   008D34  6B63               	clrf	(??i1_getNextWriteMessage+1)& (0+255),b
 45843   008D36  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 45844   008D38  6ED9               	movwf	fsr2l,c
 45845   008D3A  6ADA               	clrf	fsr2h,c
 45846   008D3C  0E04               	movlw	4
 45847   008D3E  26D9               	addwf	fsr2l,f,c
 45848   008D40  50DF               	movf	indf2,w,c
 45849   008D42  6F64               	movwf	(??i1_getNextWriteMessage+2)& (0+255),b
 45850   008D44  0EFF               	movlw	255
 45851   008D46  2564               	addwf	(??i1_getNextWriteMessage+2)& (0+255),w,b
 45852   008D48  6F65               	movwf	(??i1_getNextWriteMessage+3)& (0+255),b
 45853   008D4A  6B66               	clrf	(??i1_getNextWriteMessage+4)& (0+255),b
 45854   008D4C  0EFF               	movlw	255
 45855   008D4E  2366               	addwfc	(??i1_getNextWriteMessage+4)& (0+255),f,b
 45856   008D50  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 45857   008D52  6ED9               	movwf	fsr2l,c
 45858   008D54  6ADA               	clrf	fsr2h,c
 45859   008D56  0E03               	movlw	3
 45860   008D58  26D9               	addwf	fsr2l,f,c
 45861   008D5A  50DF               	movf	indf2,w,c
 45862   008D5C  6F67               	movwf	(??i1_getNextWriteMessage+5)& (0+255),b
 45863   008D5E  6B68               	clrf	(??i1_getNextWriteMessage+6)& (0+255),b
 45864   008D60  0E01               	movlw	1
 45865   008D62  2767               	addwf	(??i1_getNextWriteMessage+5)& (0+255),f,b
 45866   008D64  0E00               	movlw	0
 45867   008D66  2368               	addwfc	(??i1_getNextWriteMessage+6)& (0+255),f,b
 45868   008D68  5165               	movf	(??i1_getNextWriteMessage+3)& (0+255),w,b
 45869   008D6A  1567               	andwf	(??i1_getNextWriteMessage+5)& (0+255),w,b
 45870   008D6C  6F69               	movwf	(??i1_getNextWriteMessage+7)& (0+255),b
 45871   008D6E  5166               	movf	(??i1_getNextWriteMessage+4)& (0+255),w,b
 45872   008D70  1568               	andwf	(??i1_getNextWriteMessage+6)& (0+255),w,b
 45873   008D72  6F6A               	movwf	(??i1_getNextWriteMessage+8)& (0+255),b
 45874   008D74  5162               	movf	??i1_getNextWriteMessage& (0+255),w,b
 45875   008D76  1969               	xorwf	(??i1_getNextWriteMessage+7)& (0+255),w,b
 45876   008D78  E109               	bnz	i1l20303
 45877   008D7A  5163               	movf	(??i1_getNextWriteMessage+1)& (0+255),w,b
 45878   008D7C  196A               	xorwf	(??i1_getNextWriteMessage+8)& (0+255),w,b
 45879   008D7E  A4D8               	btfss	status,2,c
 45880   008D80  D005               	goto	i1l20303
 45881                           
 45882                           ; BSR set to: 0
 45883   008D82  0E00               	movlw	0
 45884   008D84  6F60               	movwf	?i1_getNextWriteMessage& (0+255),b
 45885   008D86  0E00               	movlw	0
 45886   008D88  6F61               	movwf	(?i1_getNextWriteMessage+1)& (0+255),b
 45887   008D8A  0012               	return	
 45888   008D8C                     i1l20303:
 45889                           
 45890                           ; BSR set to: 0
 45891   008D8C  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 45892   008D8E  6ED9               	movwf	fsr2l,c
 45893   008D90  6ADA               	clrf	fsr2h,c
 45894   008D92  0E03               	movlw	3
 45895   008D94  26D9               	addwf	fsr2l,f,c
 45896   008D96  50DF               	movf	indf2,w,c
 45897   008D98  6F6B               	movwf	i1getNextWriteMessage@wr& (0+255),b
 45898   008D9A  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 45899   008D9C  6ED9               	movwf	fsr2l,c
 45900   008D9E  6ADA               	clrf	fsr2h,c
 45901   008DA0  0E03               	movlw	3
 45902   008DA2  26D9               	addwf	fsr2l,f,c
 45903   008DA4  2ADF               	incf	indf2,f,c
 45904                           
 45905                           ; BSR set to: 0
 45906   008DA6  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 45907   008DA8  6ED9               	movwf	fsr2l,c
 45908   008DAA  6ADA               	clrf	fsr2h,c
 45909   008DAC  0E04               	movlw	4
 45910   008DAE  26D9               	addwf	fsr2l,f,c
 45911   008DB0  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 45912   008DB2  6EE1               	movwf	fsr1l,c
 45913   008DB4  6AE2               	clrf	fsr1h,c
 45914   008DB6  0E03               	movlw	3
 45915   008DB8  26E1               	addwf	fsr1l,f,c
 45916   008DBA  50DE               	movf	postinc2,w,c
 45917   008DBC  5CE6               	subwf	postinc1,w,c
 45918   008DBE  A0D8               	btfss	status,0,c
 45919   008DC0  D006               	goto	i1l20309
 45920                           
 45921                           ; BSR set to: 0
 45922   008DC2  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 45923   008DC4  6ED9               	movwf	fsr2l,c
 45924   008DC6  6ADA               	clrf	fsr2h,c
 45925   008DC8  0E03               	movlw	3
 45926   008DCA  26D9               	addwf	fsr2l,f,c
 45927   008DCC  6ADF               	clrf	indf2,c
 45928   008DCE                     i1l20309:
 45929                           
 45930                           ; BSR set to: 0
 45931   008DCE  516B               	movf	i1getNextWriteMessage@wr& (0+255),w,b
 45932   008DD0  0D09               	mullw	9
 45933   008DD2  CFF3 F062          	movff	prodl,??i1_getNextWriteMessage
 45934   008DD6  CFF4 F063          	movff	prodh,??i1_getNextWriteMessage+1
 45935   008DDA  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 45936   008DDC  6ED9               	movwf	fsr2l,c
 45937   008DDE  6ADA               	clrf	fsr2h,c
 45938   008DE0  CFDE F064          	movff	postinc2,??i1_getNextWriteMessage+2
 45939   008DE4  CFDD F065          	movff	postdec2,??i1_getNextWriteMessage+3
 45940   008DE8  5162               	movf	??i1_getNextWriteMessage& (0+255),w,b
 45941   008DEA  2564               	addwf	(??i1_getNextWriteMessage+2)& (0+255),w,b
 45942   008DEC  6F60               	movwf	?i1_getNextWriteMessage& (0+255),b
 45943   008DEE  5163               	movf	(??i1_getNextWriteMessage+1)& (0+255),w,b
 45944   008DF0  2165               	addwfc	(??i1_getNextWriteMessage+3)& (0+255),w,b
 45945   008DF2  6F61               	movwf	(?i1_getNextWriteMessage+1)& (0+255),b
 45946                           
 45947                           ; BSR set to: 0
 45948   008DF4  0012               	return		;funcret
 45949   008DF6                     __end_ofi1_getNextWriteMessage:
 45950                           	callstack 0
 45951                           
 45952 ;; *************** function i1_getBufferPointer *****************
 45953 ;; Defined at:
 45954 ;;		line 667 in file "../../VLCBlib_PIC/can18_ecan.c"
 45955 ;; Parameters:    Size  Location     Type
 45956 ;;  b               1    wreg     unsigned char 
 45957 ;; Auto vars:     Size  Location     Type
 45958 ;;  b               1    2[BANK0 ] unsigned char 
 45959 ;; Return value:  Size  Location     Type
 45960 ;;                  2    0[BANK0 ] PTR unsigned char 
 45961 ;; Registers used:
 45962 ;;		wreg, status,2, status,0
 45963 ;; Tracked objects:
 45964 ;;		On entry : 0/0
 45965 ;;		On exit  : 0/0
 45966 ;;		Unchanged: 0/0
 45967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45968 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45969 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45971 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45972 ;;Total ram usage:        3 bytes
 45973 ;; Hardware stack levels used: 1
 45974 ;; Hardware stack levels required when called: 6
 45975 ;; This function calls:
 45976 ;;		Nothing
 45977 ;; This function is called by:
 45978 ;;		_canFillRxFifo
 45979 ;; This function uses a non-reentrant model
 45980 ;;
 45981                           
 45982                           	psect	text211
 45983   00A002                     __ptext211:
 45984                           	callstack 0
 45985   00A002                     i1_getBufferPointer:
 45986                           	callstack 3
 45987                           
 45988                           ; BSR set to: 0
 45989                           ;incstack = 0
 45990                           ;i1getBufferPointer@b stored from wreg
 45991   00A002  0100               	movlb	0	; () banked
 45992   00A004  6F62               	movwf	i1getBufferPointer@b& (0+255),b
 45993                           
 45994                           ;../../VLCBlib_PIC/can18_ecan.c: 668:     switch (b) {
 45995   00A006  D02D               	goto	i1l21325
 45996   00A008                     i1l21287:
 45997                           
 45998                           ; BSR set to: 0
 45999                           ;../../VLCBlib_PIC/can18_ecan.c: 670:             return (uint8_t*) & RXB0CON;
 46000   00A008  0E60               	movlw	96
 46001   00A00A  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46002   00A00C  0E0F               	movlw	15
 46003   00A00E  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46004   00A010  0012               	return	
 46005   00A012                     i1l21291:
 46006                           
 46007                           ; BSR set to: 0
 46008                           ;../../VLCBlib_PIC/can18_ecan.c: 672:             return (uint8_t*) & RXB1CON;
 46009   00A012  0E30               	movlw	48
 46010   00A014  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46011   00A016  0E0F               	movlw	15
 46012   00A018  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46013   00A01A  0012               	return	
 46014   00A01C                     i1l21295:
 46015                           
 46016                           ; BSR set to: 0
 46017                           ;../../VLCBlib_PIC/can18_ecan.c: 674:             return (uint8_t*) & B0CON;
 46018   00A01C  0E80               	movlw	128
 46019   00A01E  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46020   00A020  0E0E               	movlw	14
 46021   00A022  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46022   00A024  0012               	return	
 46023   00A026                     i1l21299:
 46024                           
 46025                           ; BSR set to: 0
 46026                           ;../../VLCBlib_PIC/can18_ecan.c: 676:             return (uint8_t*) & B1CON;
 46027   00A026  0E90               	movlw	144
 46028   00A028  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46029   00A02A  0E0E               	movlw	14
 46030   00A02C  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46031   00A02E  0012               	return	
 46032   00A030                     i1l21303:
 46033                           
 46034                           ; BSR set to: 0
 46035                           ;../../VLCBlib_PIC/can18_ecan.c: 678:             return (uint8_t*) & B2CON;
 46036   00A030  0EA0               	movlw	160
 46037   00A032  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46038   00A034  0E0E               	movlw	14
 46039   00A036  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46040   00A038  0012               	return	
 46041   00A03A                     i1l21307:
 46042                           
 46043                           ; BSR set to: 0
 46044                           ;../../VLCBlib_PIC/can18_ecan.c: 680:             return (uint8_t*) & B3CON;
 46045   00A03A  0EB0               	movlw	176
 46046   00A03C  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46047   00A03E  0E0E               	movlw	14
 46048   00A040  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46049   00A042  0012               	return	
 46050   00A044                     i1l21311:
 46051                           
 46052                           ; BSR set to: 0
 46053                           ;../../VLCBlib_PIC/can18_ecan.c: 682:             return (uint8_t*) & B4CON;
 46054   00A044  0EC0               	movlw	192
 46055   00A046  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46056   00A048  0E0E               	movlw	14
 46057   00A04A  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46058   00A04C  0012               	return	
 46059   00A04E                     i1l21315:
 46060                           
 46061                           ; BSR set to: 0
 46062                           ;../../VLCBlib_PIC/can18_ecan.c: 684:             return (uint8_t*) & B5CON;
 46063   00A04E  0ED0               	movlw	208
 46064   00A050  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46065   00A052  0E0E               	movlw	14
 46066   00A054  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46067   00A056  0012               	return	
 46068   00A058                     i1l21319:
 46069                           
 46070                           ; BSR set to: 0
 46071                           ;../../VLCBlib_PIC/can18_ecan.c: 686:             return ((void*)0);
 46072   00A058  0E00               	movlw	0
 46073   00A05A  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46074   00A05C  0E00               	movlw	0
 46075   00A05E  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46076   00A060  0012               	return	
 46077   00A062                     i1l21325:
 46078   00A062  0100               	movlb	0	; () banked
 46079   00A064  5162               	movf	i1getBufferPointer@b& (0+255),w,b
 46080                           
 46081                           ; Switch size 1, requested type "simple"
 46082                           ; Number of cases is 8, Range of values is 0 to 7
 46083                           ; switch strategies available:
 46084                           ; Name         Instructions Cycles
 46085                           ; simple_byte           25    13 (average)
 46086                           ;	Chosen strategy is simple_byte
 46087   00A066  0A00               	xorlw	0	; case 0
 46088   00A068  B4D8               	btfsc	status,2,c
 46089   00A06A  D7CE               	goto	i1l21287
 46090   00A06C  0A01               	xorlw	1	; case 1
 46091   00A06E  B4D8               	btfsc	status,2,c
 46092   00A070  D7D0               	goto	i1l21291
 46093   00A072  0A03               	xorlw	3	; case 2
 46094   00A074  B4D8               	btfsc	status,2,c
 46095   00A076  D7D2               	goto	i1l21295
 46096   00A078  0A01               	xorlw	1	; case 3
 46097   00A07A  B4D8               	btfsc	status,2,c
 46098   00A07C  D7D4               	goto	i1l21299
 46099   00A07E  0A07               	xorlw	7	; case 4
 46100   00A080  B4D8               	btfsc	status,2,c
 46101   00A082  D7D6               	goto	i1l21303
 46102   00A084  0A01               	xorlw	1	; case 5
 46103   00A086  B4D8               	btfsc	status,2,c
 46104   00A088  D7D8               	goto	i1l21307
 46105   00A08A  0A03               	xorlw	3	; case 6
 46106   00A08C  B4D8               	btfsc	status,2,c
 46107   00A08E  D7DA               	goto	i1l21311
 46108   00A090  0A01               	xorlw	1	; case 7
 46109   00A092  B4D8               	btfsc	status,2,c
 46110   00A094  D7DC               	goto	i1l21315
 46111   00A096  D7E0               	goto	i1l21319
 46112   00A098                     __end_ofi1_getBufferPointer:
 46113                           	callstack 0
 46114                           
 46115 ;; *************** function _APP_lowIsr *****************
 46116 ;; Defined at:
 46117 ;;		line 707 in file "../main.c"
 46118 ;; Parameters:    Size  Location     Type
 46119 ;;		None
 46120 ;; Auto vars:     Size  Location     Type
 46121 ;;		None
 46122 ;; Return value:  Size  Location     Type
 46123 ;;                  1    wreg      void 
 46124 ;; Registers used:
 46125 ;;		None
 46126 ;; Tracked objects:
 46127 ;;		On entry : 0/0
 46128 ;;		On exit  : 0/0
 46129 ;;		Unchanged: 0/0
 46130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46135 ;;Total ram usage:        0 bytes
 46136 ;; Hardware stack levels used: 1
 46137 ;; Hardware stack levels required when called: 6
 46138 ;; This function calls:
 46139 ;;		Nothing
 46140 ;; This function is called by:
 46141 ;;		_lowIsr
 46142 ;; This function uses a non-reentrant model
 46143 ;;
 46144                           
 46145                           	psect	text212
 46146   00C656                     __ptext212:
 46147                           	callstack 0
 46148   00C656                     _APP_lowIsr:
 46149                           	callstack 5
 46150                           
 46151                           ; BSR set to: 0
 46152                           ;incstack = 0
 46153   00C656  0012               	return		;funcret
 46154   00C658                     __end_of_APP_lowIsr:
 46155                           	callstack 0
 46156                           
 46157                           	psect	intcode
 46158   000808                     __pintcode:
 46159                           	callstack 2
 46160   000808  EF7C  F042         	goto	_isrHigh
 46161                           
 46162 ;; *************** function _highIsr *****************
 46163 ;; Defined at:
 46164 ;;		line 1057 in file "../../VLCBlib_PIC/vlcb.c"
 46165 ;; Parameters:    Size  Location     Type
 46166 ;;		None
 46167 ;; Auto vars:     Size  Location     Type
 46168 ;;  i               1   29[COMRAM] unsigned char 
 46169 ;; Return value:  Size  Location     Type
 46170 ;;                  1    wreg      void 
 46171 ;; Registers used:
 46172 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 46173 ;; Tracked objects:
 46174 ;;		On entry : 0/0
 46175 ;;		On exit  : 0/0
 46176 ;;		Unchanged: 0/0
 46177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46179 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46180 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46181 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46182 ;;Total ram usage:        5 bytes
 46183 ;; Hardware stack levels used: 1
 46184 ;; Hardware stack levels required when called: 4
 46185 ;; This function calls:
 46186 ;;		NULL
 46187 ;;		_APP_highIsr
 46188 ;;		i2_canIsr
 46189 ;; This function is called by:
 46190 ;;		_isrHigh
 46191 ;; This function uses a non-reentrant model
 46192 ;;
 46193                           
 46194                           	psect	text214
 46195   009062                     __ptext214:
 46196                           	callstack 0
 46197   009062                     _highIsr:
 46198                           	callstack 2
 46199                           
 46200                           ;../../VLCBlib_PIC/vlcb.c: 1058:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1060:     for 
      +                          (i=0; i<9; i++) {
 46201                           
 46202                           ;incstack = 0
 46203   009062  0E00               	movlw	0
 46204   009064  6E1E               	movwf	highIsr@i^0,c
 46205   009066                     i2l24927:
 46206                           
 46207                           ;../../VLCBlib_PIC/vlcb.c: 1061:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->highIsr != ((void*)0))) {
 46208   009066  501E               	movf	highIsr@i^0,w,c
 46209   009068  0D02               	mullw	2
 46210   00906A  0E69               	movlw	low _services
 46211   00906C  24F3               	addwf	243,w,c
 46212   00906E  6EF6               	movwf	tblptrl,c
 46213   009070  0EEE               	movlw	high _services
 46214   009072  20F4               	addwfc	244,w,c
 46215   009074  6EF7               	movwf	tblptrh,c
 46216   009076                     	if	1	;There are 3 active tblptr bytes
 46217   009076  6AF8               	clrf	tblptru,c
 46218   009078  0E00               	movlw	low (__mediumconst shr (0+16))
 46219   00907A  22F8               	addwfc	tblptru,f,c
 46220   00907C                     	endif
 46221   00907C  0009               	tblrd		*+
 46222   00907E  50F5               	movf	tablat,w,c
 46223   009080  0009               	tblrd		*+
 46224   009082  10F5               	iorwf	tablat,w,c
 46225   009084  B4D8               	btfsc	status,2,c
 46226   009086  D04B               	goto	i2u2677_49
 46227   009088  501E               	movf	highIsr@i^0,w,c
 46228   00908A  0D02               	mullw	2
 46229   00908C  0E69               	movlw	low _services
 46230   00908E  24F3               	addwf	243,w,c
 46231   009090  6EF6               	movwf	tblptrl,c
 46232   009092  0EEE               	movlw	high _services
 46233   009094  20F4               	addwfc	244,w,c
 46234   009096  6EF7               	movwf	tblptrh,c
 46235   009098                     	if	1	;There are 3 active tblptr bytes
 46236   009098  6AF8               	clrf	tblptru,c
 46237   00909A  0E00               	movlw	low (__mediumconst shr (0+16))
 46238   00909C  22F8               	addwfc	tblptru,f,c
 46239   00909E                     	endif
 46240   00909E  0009               	tblrd		*+
 46241   0090A0  CFF5 F01A          	movff	tablat,??_highIsr
 46242   0090A4  0009               	tblrd		*+
 46243   0090A6  CFF5 F01B          	movff	tablat,??_highIsr+1
 46244   0090AA  0E0A               	movlw	10
 46245   0090AC  261A               	addwf	??_highIsr^0,f,c
 46246   0090AE  0E00               	movlw	0
 46247   0090B0  221B               	addwfc	(??_highIsr+1)^0,f,c
 46248   0090B2  C01A  FFF6         	movff	??_highIsr,tblptrl
 46249   0090B6  C01B  FFF7         	movff	??_highIsr+1,tblptrh
 46250   0090BA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 46251   0090BA  6AF8               	clrf	tblptru,c
 46252   0090BC                     	endif
 46253   0090BC                     	if	0	;tblptru may be non-zero
 46254   0090BC                     	endif
 46255   0090BC  0009               	tblrd		*+
 46256   0090BE  50F5               	movf	tablat,w,c
 46257   0090C0  0009               	tblrd		*+
 46258   0090C2  10F5               	iorwf	tablat,w,c
 46259   0090C4  B4D8               	btfsc	status,2,c
 46260   0090C6  D02B               	goto	i2u2677_49
 46261                           
 46262                           ;../../VLCBlib_PIC/vlcb.c: 1062:             services[i]->highIsr();
 46263   0090C8  501E               	movf	highIsr@i^0,w,c
 46264   0090CA  0D02               	mullw	2
 46265   0090CC  0E69               	movlw	low _services
 46266   0090CE  24F3               	addwf	243,w,c
 46267   0090D0  6EF6               	movwf	tblptrl,c
 46268   0090D2  0EEE               	movlw	high _services
 46269   0090D4  20F4               	addwfc	244,w,c
 46270   0090D6  6EF7               	movwf	tblptrh,c
 46271   0090D8                     	if	1	;There are 3 active tblptr bytes
 46272   0090D8  6AF8               	clrf	tblptru,c
 46273   0090DA  0E00               	movlw	low (__mediumconst shr (0+16))
 46274   0090DC  22F8               	addwfc	tblptru,f,c
 46275   0090DE                     	endif
 46276   0090DE  0009               	tblrd		*+
 46277   0090E0  CFF5 F01A          	movff	tablat,??_highIsr
 46278   0090E4  0009               	tblrd		*+
 46279   0090E6  CFF5 F01B          	movff	tablat,??_highIsr+1
 46280   0090EA  0E0A               	movlw	10
 46281   0090EC  261A               	addwf	??_highIsr^0,f,c
 46282   0090EE  0E00               	movlw	0
 46283   0090F0  221B               	addwfc	(??_highIsr+1)^0,f,c
 46284   0090F2  C01A  FFF6         	movff	??_highIsr,tblptrl
 46285   0090F6  C01B  FFF7         	movff	??_highIsr+1,tblptrh
 46286   0090FA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 46287   0090FA  6AF8               	clrf	tblptru,c
 46288   0090FC                     	endif
 46289   0090FC                     	if	0	;tblptru may be non-zero
 46290   0090FC                     	endif
 46291   0090FC  0009               	tblrd		*+
 46292   0090FE  CFF5 F01C          	movff	tablat,??_highIsr+2
 46293   009102  0009               	tblrd		*+
 46294   009104  CFF5 F01D          	movff	tablat,??_highIsr+3
 46295   009108  D801               	call	i2u2677_48
 46296   00910A  D009               	goto	i2u2677_49
 46297   00910C                     i2u2677_48:
 46298   00910C  0005               	push	
 46299   00910E  6EFA               	movwf	pclath,c
 46300   009110  501C               	movf	(??_highIsr+2)^0,w,c
 46301   009112  6EFD               	movwf	tosl,c
 46302   009114  501D               	movf	(??_highIsr+3)^0,w,c
 46303   009116  6EFE               	movwf	tosh,c
 46304   009118  6AFF               	clrf	tosu,c
 46305   00911A  50FA               	movf	pclath,w,c
 46306   00911C  0012               	return		;indir
 46307   00911E                     i2u2677_49:
 46308                           
 46309                           ;../../VLCBlib_PIC/vlcb.c: 1064:     }
 46310   00911E  2A1E               	incf	highIsr@i^0,f,c
 46311   009120  0E08               	movlw	8
 46312   009122  641E               	cpfsgt	highIsr@i^0,c
 46313   009124  D7A0               	goto	i2l24927
 46314                           
 46315                           ;../../VLCBlib_PIC/vlcb.c: 1065:     APP_highIsr();
 46316   009126  ECAE  F062         	call	_APP_highIsr	;wreg free
 46317   00912A  0012               	return		;funcret
 46318   00912C                     __end_of_highIsr:
 46319                           	callstack 0
 46320                           
 46321 ;; *************** function i2_canIsr *****************
 46322 ;; Defined at:
 46323 ;;		line 402 in file "../../VLCBlib_PIC/can18_ecan.c"
 46324 ;; Parameters:    Size  Location     Type
 46325 ;;		None
 46326 ;; Auto vars:     Size  Location     Type
 46327 ;;		None
 46328 ;; Return value:  Size  Location     Type
 46329 ;;                  1    wreg      void 
 46330 ;; Registers used:
 46331 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46332 ;; Tracked objects:
 46333 ;;		On entry : 0/0
 46334 ;;		On exit  : 0/0
 46335 ;;		Unchanged: 0/0
 46336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46341 ;;Total ram usage:        0 bytes
 46342 ;; Hardware stack levels used: 1
 46343 ;; Hardware stack levels required when called: 3
 46344 ;; This function calls:
 46345 ;;		i2_canFillRxFifo
 46346 ;;		i2_canTxError
 46347 ;;		i2_checkCANTimeout
 46348 ;;		i2_checkTxFifo
 46349 ;; This function is called by:
 46350 ;;		_highIsr
 46351 ;;		_lowIsr
 46352 ;; This function uses a non-reentrant model
 46353 ;;
 46354                           
 46355                           	psect	text215
 46356   00C544                     __ptext215:
 46357                           	callstack 0
 46358   00C544                     i2_canIsr:
 46359                           	callstack 2
 46360                           
 46361                           ;../../VLCBlib_PIC/can18_ecan.c: 404:     if (PIR5bits.FIFOWMIF) {
 46362                           
 46363                           ;incstack = 0
 46364   00C544  B077               	btfsc	119,0,c	;volatile
 46365                           
 46366                           ;../../VLCBlib_PIC/can18_ecan.c: 405:         canFillRxFifo();
 46367   00C546  ECF6  F039         	call	i2_canFillRxFifo	;wreg free
 46368                           
 46369                           ;../../VLCBlib_PIC/can18_ecan.c: 407:     if (PIR5bits.ERRIF) {
 46370   00C54A  BA77               	btfsc	119,5,c	;volatile
 46371                           
 46372                           ;../../VLCBlib_PIC/can18_ecan.c: 408:         canTxError();
 46373   00C54C  EC3F  F059         	call	i2_canTxError	;wreg free
 46374                           
 46375                           ;../../VLCBlib_PIC/can18_ecan.c: 410:     if (PIR5bits.TXBnIF) {
 46376   00C550  B877               	btfsc	119,4,c	;volatile
 46377                           
 46378                           ;../../VLCBlib_PIC/can18_ecan.c: 411:         checkTxFifo();
 46379   00C552  ECE3  F02B         	call	i2_checkTxFifo	;wreg free
 46380                           
 46381                           ;../../VLCBlib_PIC/can18_ecan.c: 413:     checkCANTimeout();
 46382                           
 46383                           ;../../VLCBlib_PIC/can18_ecan.c: 412:     }
 46384   00C556  ECE7  F05B         	call	i2_checkCANTimeout	;wreg free
 46385   00C55A  0012               	return		;funcret
 46386   00C55C                     __end_ofi2_canIsr:
 46387                           	callstack 0
 46388                           
 46389 ;; *************** function i2_checkCANTimeout *****************
 46390 ;; Defined at:
 46391 ;;		line 766 in file "../../VLCBlib_PIC/can18_ecan.c"
 46392 ;; Parameters:    Size  Location     Type
 46393 ;;		None
 46394 ;; Auto vars:     Size  Location     Type
 46395 ;;		None
 46396 ;; Return value:  Size  Location     Type
 46397 ;;                  1    wreg      void 
 46398 ;; Registers used:
 46399 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46400 ;; Tracked objects:
 46401 ;;		On entry : 0/0
 46402 ;;		On exit  : 0/0
 46403 ;;		Unchanged: 0/0
 46404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46407 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46408 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46409 ;;Total ram usage:        4 bytes
 46410 ;; Hardware stack levels used: 1
 46411 ;; Hardware stack levels required when called: 2
 46412 ;; This function calls:
 46413 ;;		i2_checkTxFifo
 46414 ;;		i2_tickGet
 46415 ;;		i2_updateModuleErrorStatus
 46416 ;; This function is called by:
 46417 ;;		i2_canIsr
 46418 ;; This function uses a non-reentrant model
 46419 ;;
 46420                           
 46421                           	psect	text216
 46422   00B7CE                     __ptext216:
 46423                           	callstack 0
 46424   00B7CE                     i2_checkCANTimeout:
 46425                           	callstack 2
 46426                           
 46427                           ;../../VLCBlib_PIC/can18_ecan.c: 767:     if (canTransmitTimeout.val != 0) {
 46428                           
 46429                           ;incstack = 0
 46430   00B7CE  502F               	movf	_canTransmitTimeout^0,w,c
 46431   00B7D0  1030               	iorwf	(_canTransmitTimeout+1)^0,w,c
 46432   00B7D2  1031               	iorwf	(_canTransmitTimeout+2)^0,w,c
 46433   00B7D4  1032               	iorwf	(_canTransmitTimeout+3)^0,w,c
 46434   00B7D6  B4D8               	btfsc	status,2,c
 46435   00B7D8  0012               	return	
 46436                           
 46437                           ;../../VLCBlib_PIC/can18_ecan.c: 768:         if ((tickGet() - canTransmitTimeout.val) >
      +                           62500) {
 46438   00B7DA  EC8B  F05A         	call	i2_tickGet	;wreg free
 46439   00B7DE  502F               	movf	_canTransmitTimeout^0,w,c
 46440   00B7E0  5C01               	subwf	?i2_tickGet^0,w,c
 46441   00B7E2  6E16               	movwf	??i2_checkCANTimeout^0,c
 46442   00B7E4  5030               	movf	(_canTransmitTimeout+1)^0,w,c
 46443   00B7E6  5802               	subwfb	(?i2_tickGet+1)^0,w,c
 46444   00B7E8  6E17               	movwf	(??i2_checkCANTimeout+1)^0,c
 46445   00B7EA  5031               	movf	(_canTransmitTimeout+2)^0,w,c
 46446   00B7EC  5803               	subwfb	(?i2_tickGet+2)^0,w,c
 46447   00B7EE  6E18               	movwf	(??i2_checkCANTimeout+2)^0,c
 46448   00B7F0  5032               	movf	(_canTransmitTimeout+3)^0,w,c
 46449   00B7F2  5804               	subwfb	(?i2_tickGet+3)^0,w,c
 46450   00B7F4  6E19               	movwf	(??i2_checkCANTimeout+3)^0,c
 46451   00B7F6  5019               	movf	(??i2_checkCANTimeout+3)^0,w,c
 46452   00B7F8  1018               	iorwf	(??i2_checkCANTimeout+2)^0,w,c
 46453   00B7FA  E106               	bnz	i2u1498_40
 46454   00B7FC  0E25               	movlw	37
 46455   00B7FE  5C16               	subwf	??i2_checkCANTimeout^0,w,c
 46456   00B800  0EF4               	movlw	244
 46457   00B802  5817               	subwfb	(??i2_checkCANTimeout+1)^0,w,c
 46458   00B804  A0D8               	btfss	status,0,c
 46459   00B806  0012               	return	
 46460   00B808                     i2u1498_40:
 46461                           
 46462                           ;../../VLCBlib_PIC/can18_ecan.c: 769:             canTransmitFailed = 1;
 46463   00B808  0E01               	movlw	1
 46464   00B80A  0100               	movlb	0	; () banked
 46465   00B80C  6FC0               	movwf	_canTransmitFailed& (0+255),b
 46466                           
 46467                           ; BSR set to: 0
 46468                           ;../../VLCBlib_PIC/can18_ecan.c: 770:             TXB0CONbits.TXREQ = 0;
 46469   00B80E  010F               	movlb	15	; () banked
 46470   00B810  9720               	bcf	32,3,b	;volatile
 46471                           
 46472                           ; BSR set to: 15
 46473                           ;../../VLCBlib_PIC/can18_ecan.c: 771:             checkTxFifo();
 46474   00B812  ECE3  F02B         	call	i2_checkTxFifo	;wreg free
 46475                           
 46476                           ;../../VLCBlib_PIC/can18_ecan.c: 773:             canDiagnostics[0x02].asUint++;
 46477   00B816  0101               	movlb	1	; () banked
 46478   00B818  4B6B               	infsnz	(_canDiagnostics+4)& (0+255),f,b
 46479   00B81A  2B6C               	incf	(_canDiagnostics+5)& (0+255),f,b
 46480                           
 46481                           ; BSR set to: 1
 46482                           ;../../VLCBlib_PIC/can18_ecan.c: 774:             updateModuleErrorStatus();
 46483   00B81C  ECF9  F062         	call	i2_updateModuleErrorStatus	;wreg free
 46484   00B820  0012               	return		;funcret
 46485   00B822                     __end_ofi2_checkCANTimeout:
 46486                           	callstack 0
 46487                           
 46488 ;; *************** function i2_canTxError *****************
 46489 ;; Defined at:
 46490 ;;		line 785 in file "../../VLCBlib_PIC/can18_ecan.c"
 46491 ;; Parameters:    Size  Location     Type
 46492 ;;		None
 46493 ;; Auto vars:     Size  Location     Type
 46494 ;;		None
 46495 ;; Return value:  Size  Location     Type
 46496 ;;                  1    wreg      void 
 46497 ;; Registers used:
 46498 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46499 ;; Tracked objects:
 46500 ;;		On entry : 0/0
 46501 ;;		On exit  : 0/0
 46502 ;;		Unchanged: 0/0
 46503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46508 ;;Total ram usage:        0 bytes
 46509 ;; Hardware stack levels used: 1
 46510 ;; Hardware stack levels required when called: 2
 46511 ;; This function calls:
 46512 ;;		i2_checkTxFifo
 46513 ;;		i2_updateModuleErrorStatus
 46514 ;; This function is called by:
 46515 ;;		i2_canIsr
 46516 ;; This function uses a non-reentrant model
 46517 ;;
 46518                           
 46519                           	psect	text217
 46520   00B27E                     __ptext217:
 46521                           	callstack 0
 46522   00B27E                     i2_canTxError:
 46523                           	callstack 2
 46524                           
 46525                           ;../../VLCBlib_PIC/can18_ecan.c: 786:     if (TXB0CONbits.TXLARB) {
 46526                           
 46527                           ;incstack = 0
 46528   00B27E  010F               	movlb	15	; () banked
 46529   00B280  AB20               	btfss	32,5,b	;volatile
 46530   00B282  D012               	goto	i2l15531
 46531                           
 46532                           ; BSR set to: 15
 46533                           ;../../VLCBlib_PIC/can18_ecan.c: 787:         canTransmitFailed = 1;
 46534   00B284  0E01               	movlw	1
 46535   00B286  0100               	movlb	0	; () banked
 46536   00B288  6FC0               	movwf	_canTransmitFailed& (0+255),b
 46537                           
 46538                           ;../../VLCBlib_PIC/can18_ecan.c: 788:         canTransmitTimeout.val = 0;
 46539   00B28A  0E00               	movlw	0
 46540   00B28C  6E2F               	movwf	_canTransmitTimeout^0,c
 46541   00B28E  0E00               	movlw	0
 46542   00B290  6E30               	movwf	(_canTransmitTimeout+1)^0,c
 46543   00B292  0E00               	movlw	0
 46544   00B294  6E31               	movwf	(_canTransmitTimeout+2)^0,c
 46545   00B296  0E00               	movlw	0
 46546   00B298  6E32               	movwf	(_canTransmitTimeout+3)^0,c
 46547                           
 46548                           ; BSR set to: 0
 46549                           ;../../VLCBlib_PIC/can18_ecan.c: 789:         TXB0CONbits.TXREQ = 0;
 46550   00B29A  010F               	movlb	15	; () banked
 46551   00B29C  9720               	bcf	32,3,b	;volatile
 46552                           
 46553                           ; BSR set to: 15
 46554                           ;../../VLCBlib_PIC/can18_ecan.c: 791:         canDiagnostics[0x0C].asUint++;
 46555   00B29E  0101               	movlb	1	; () banked
 46556   00B2A0  4B7F               	infsnz	(_canDiagnostics+24)& (0+255),f,b
 46557   00B2A2  2B80               	incf	(_canDiagnostics+25)& (0+255),f,b
 46558                           
 46559                           ; BSR set to: 1
 46560                           ;../../VLCBlib_PIC/can18_ecan.c: 792:         updateModuleErrorStatus();
 46561   00B2A4  ECF9  F062         	call	i2_updateModuleErrorStatus	;wreg free
 46562   00B2A8                     i2l15531:
 46563                           
 46564                           ;../../VLCBlib_PIC/can18_ecan.c: 795:     if (TXB0CONbits.TXERR) {
 46565   00B2A8  010F               	movlb	15	; () banked
 46566   00B2AA  A920               	btfss	32,4,b	;volatile
 46567   00B2AC  D012               	goto	i2l15541
 46568                           
 46569                           ; BSR set to: 15
 46570                           ;../../VLCBlib_PIC/can18_ecan.c: 796:         canTransmitFailed = 1;
 46571   00B2AE  0E01               	movlw	1
 46572   00B2B0  0100               	movlb	0	; () banked
 46573   00B2B2  6FC0               	movwf	_canTransmitFailed& (0+255),b
 46574                           
 46575                           ;../../VLCBlib_PIC/can18_ecan.c: 797:         canTransmitTimeout.val = 0;
 46576   00B2B4  0E00               	movlw	0
 46577   00B2B6  6E2F               	movwf	_canTransmitTimeout^0,c
 46578   00B2B8  0E00               	movlw	0
 46579   00B2BA  6E30               	movwf	(_canTransmitTimeout+1)^0,c
 46580   00B2BC  0E00               	movlw	0
 46581   00B2BE  6E31               	movwf	(_canTransmitTimeout+2)^0,c
 46582   00B2C0  0E00               	movlw	0
 46583   00B2C2  6E32               	movwf	(_canTransmitTimeout+3)^0,c
 46584                           
 46585                           ; BSR set to: 0
 46586                           ;../../VLCBlib_PIC/can18_ecan.c: 798:         TXB0CONbits.TXREQ = 0;
 46587   00B2C4  010F               	movlb	15	; () banked
 46588   00B2C6  9720               	bcf	32,3,b	;volatile
 46589                           
 46590                           ; BSR set to: 15
 46591                           ;../../VLCBlib_PIC/can18_ecan.c: 800:         canDiagnostics[0x02].asUint++;
 46592   00B2C8  0101               	movlb	1	; () banked
 46593   00B2CA  4B6B               	infsnz	(_canDiagnostics+4)& (0+255),f,b
 46594   00B2CC  2B6C               	incf	(_canDiagnostics+5)& (0+255),f,b
 46595                           
 46596                           ; BSR set to: 1
 46597                           ;../../VLCBlib_PIC/can18_ecan.c: 801:         updateModuleErrorStatus();
 46598   00B2CE  ECF9  F062         	call	i2_updateModuleErrorStatus	;wreg free
 46599   00B2D2                     i2l15541:
 46600                           
 46601                           ;../../VLCBlib_PIC/can18_ecan.c: 804:     if (canTransmitFailed) {
 46602   00B2D2  0100               	movlb	0	; () banked
 46603   00B2D4  51C0               	movf	_canTransmitFailed& (0+255),w,b
 46604   00B2D6  A4D8               	btfss	status,2,c
 46605                           
 46606                           ; BSR set to: 0
 46607                           ;../../VLCBlib_PIC/can18_ecan.c: 805:         checkTxFifo();
 46608   00B2D8  ECE3  F02B         	call	i2_checkTxFifo	;wreg free
 46609                           
 46610                           ;../../VLCBlib_PIC/can18_ecan.c: 807:     PIR5bits.ERRIF = 0;
 46611   00B2DC  9A77               	bcf	119,5,c	;volatile
 46612   00B2DE  0012               	return		;funcret
 46613   00B2E0                     __end_ofi2_canTxError:
 46614                           	callstack 0
 46615                           
 46616 ;; *************** function i2_checkTxFifo *****************
 46617 ;; Defined at:
 46618 ;;		line 695 in file "../../VLCBlib_PIC/can18_ecan.c"
 46619 ;; Parameters:    Size  Location     Type
 46620 ;;		None
 46621 ;; Auto vars:     Size  Location     Type
 46622 ;;  mp              2   19[COMRAM] PTR struct Message
 46623 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 46624 ;;  m               2   17[COMRAM] PTR struct Message
 46625 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 46626 ;; Return value:  Size  Location     Type
 46627 ;;                  1    wreg      void 
 46628 ;; Registers used:
 46629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46630 ;; Tracked objects:
 46631 ;;		On entry : 0/0
 46632 ;;		On exit  : 0/0
 46633 ;;		Unchanged: 0/0
 46634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46636 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46637 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46638 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46639 ;;Total ram usage:        9 bytes
 46640 ;; Hardware stack levels used: 1
 46641 ;; Hardware stack levels required when called: 1
 46642 ;; This function calls:
 46643 ;;		i2_getNextWriteMessage
 46644 ;;		i2_isEvent
 46645 ;;		i2_pop
 46646 ;;		i2_tickGet
 46647 ;;		i2_updateModuleErrorStatus
 46648 ;; This function is called by:
 46649 ;;		i2_canIsr
 46650 ;;		i2_checkCANTimeout
 46651 ;;		i2_canTxError
 46652 ;; This function uses a non-reentrant model
 46653 ;;
 46654                           
 46655                           	psect	text218
 46656   0057C6                     __ptext218:
 46657                           	callstack 0
 46658   0057C6                     i2_checkTxFifo:
 46659                           	callstack 3
 46660                           
 46661                           ;../../VLCBlib_PIC/can18_ecan.c: 696:     Message * mp;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          698:     Message * m;;../../VLCBlib_PIC/can18_ecan.c: 701:     PIR5bits.TXBnIF = 0;
 46662                           
 46663                           ;incstack = 0
 46664   0057C6  9877               	bcf	119,4,c	;volatile
 46665                           
 46666                           ;../../VLCBlib_PIC/can18_ecan.c: 702:     if (!TXB0CONbits.TXREQ) {
 46667   0057C8  010F               	movlb	15	; () banked
 46668   0057CA  B720               	btfsc	32,3,b	;volatile
 46669   0057CC  D142               	goto	i2l2539
 46670                           
 46671                           ; BSR set to: 15
 46672                           ;../../VLCBlib_PIC/can18_ecan.c: 703:         mp = pop(&txQueue);
 46673   0057CE  0E4A               	movlw	low _txQueue
 46674   0057D0  6E01               	movwf	i2pop@q^0,c
 46675   0057D2  EC1F  F04F         	call	i2_pop	;wreg free
 46676   0057D6  C001  F014         	movff	?i2_pop,i2checkTxFifo@mp
 46677   0057DA  C002  F015         	movff	?i2_pop+1,i2checkTxFifo@mp+1
 46678                           
 46679                           ;../../VLCBlib_PIC/can18_ecan.c: 704:         if (mp != ((void*)0)) {
 46680   0057DE  5014               	movf	i2checkTxFifo@mp^0,w,c
 46681   0057E0  1015               	iorwf	(i2checkTxFifo@mp+1)^0,w,c
 46682   0057E2  B4D8               	btfsc	status,2,c
 46683   0057E4  D128               	goto	i2l14111
 46684                           
 46685                           ;../../VLCBlib_PIC/can18_ecan.c: 706:             TXB0SIDH = canPri[priorities[mp->opc]]
      +                           | ((canId & 0x78) >> 3);
 46686   0057E6  EE20 F001          	lfsr	2,1
 46687   0057EA  5014               	movf	i2checkTxFifo@mp^0,w,c
 46688   0057EC  26D9               	addwf	fsr2l,f,c
 46689   0057EE  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46690   0057F0  22DA               	addwfc	fsr2h,f,c
 46691   0057F2  50DF               	movf	indf2,w,c
 46692   0057F4  6E0D               	movwf	??i2_checkTxFifo^0,c
 46693   0057F6  6A0E               	clrf	(??i2_checkTxFifo+1)^0,c
 46694   0057F8  0E29               	movlw	low _priorities
 46695   0057FA  240D               	addwf	??i2_checkTxFifo^0,w,c
 46696   0057FC  6EF6               	movwf	tblptrl,c
 46697   0057FE  0EED               	movlw	high _priorities
 46698   005800  200E               	addwfc	(??i2_checkTxFifo+1)^0,w,c
 46699   005802  6EF7               	movwf	tblptrh,c
 46700   005804                     	if	1	;There are 3 active tblptr bytes
 46701   005804  6AF8               	clrf	tblptru,c
 46702   005806  0E00               	movlw	low (__mediumconst shr (0+16))
 46703   005808  22F8               	addwfc	tblptru,f,c
 46704   00580A                     	endif
 46705   00580A  0008               	tblrd		*
 46706   00580C  50F5               	movf	tablat,w,c
 46707   00580E  6E0F               	movwf	(??i2_checkTxFifo+2)^0,c
 46708   005810  6A10               	clrf	(??i2_checkTxFifo+3)^0,c
 46709   005812  0E86               	movlw	low _canPri
 46710   005814  240F               	addwf	(??i2_checkTxFifo+2)^0,w,c
 46711   005816  6EF6               	movwf	tblptrl,c
 46712   005818  0EEE               	movlw	high _canPri
 46713   00581A  2010               	addwfc	(??i2_checkTxFifo+3)^0,w,c
 46714   00581C  6EF7               	movwf	tblptrh,c
 46715   00581E                     	if	1	;There are 3 active tblptr bytes
 46716   00581E  6AF8               	clrf	tblptru,c
 46717   005820  0E00               	movlw	low (__mediumconst shr (0+16))
 46718   005822  22F8               	addwfc	tblptru,f,c
 46719   005824                     	endif
 46720   005824  0008               	tblrd		*
 46721   005826  CFF5 F011          	movff	tablat,??i2_checkTxFifo+4
 46722   00582A  0100               	movlb	0	; () banked
 46723   00582C  39C1               	swapf	_canId& (0+255),w,b
 46724   00582E  46E8               	rlncf	wreg,f,c
 46725   005830  0B1F               	andlw	31
 46726   005832  0B0F               	andlw	15
 46727   005834  1011               	iorwf	(??i2_checkTxFifo+4)^0,w,c
 46728   005836  010F               	movlb	15	; () banked
 46729   005838  6F21               	movwf	33,b	;volatile
 46730                           
 46731                           ; BSR set to: 15
 46732                           ;../../VLCBlib_PIC/can18_ecan.c: 707:             TXB0SIDL = (uint8_t)((canId & 0x07) <<
      +                           5);
 46733   00583A  C0C1  F00D         	movff	_canId,??i2_checkTxFifo
 46734   00583E  0E07               	movlw	7
 46735   005840  160D               	andwf	??i2_checkTxFifo^0,f,c
 46736   005842  0E05               	movlw	5
 46737   005844  6E0E               	movwf	(??i2_checkTxFifo+1)^0,c
 46738   005846                     i2u1294_45:
 46739   005846  90D8               	bcf	status,0,c
 46740   005848  360D               	rlcf	??i2_checkTxFifo^0,f,c
 46741   00584A  2E0E               	decfsz	(??i2_checkTxFifo+1)^0,f,c
 46742   00584C  D7FC               	goto	i2u1294_45
 46743   00584E  500D               	movf	??i2_checkTxFifo^0,w,c
 46744   005850  6F22               	movwf	34,b	;volatile
 46745                           
 46746                           ; BSR set to: 15
 46747                           ;../../VLCBlib_PIC/can18_ecan.c: 708:             TXB0D0 = mp->opc;
 46748   005852  EE20 F001          	lfsr	2,1
 46749   005856  5014               	movf	i2checkTxFifo@mp^0,w,c
 46750   005858  26D9               	addwf	fsr2l,f,c
 46751   00585A  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46752   00585C  22DA               	addwfc	fsr2h,f,c
 46753   00585E  50DF               	movf	indf2,w,c
 46754   005860  6F26               	movwf	38,b	;volatile
 46755                           
 46756                           ; BSR set to: 15
 46757                           ;../../VLCBlib_PIC/can18_ecan.c: 709:             TXB0D1 = mp->bytes[0];
 46758   005862  EE20 F002          	lfsr	2,2
 46759   005866  5014               	movf	i2checkTxFifo@mp^0,w,c
 46760   005868  26D9               	addwf	fsr2l,f,c
 46761   00586A  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46762   00586C  22DA               	addwfc	fsr2h,f,c
 46763   00586E  50DF               	movf	indf2,w,c
 46764   005870  6F27               	movwf	39,b	;volatile
 46765                           
 46766                           ; BSR set to: 15
 46767                           ;../../VLCBlib_PIC/can18_ecan.c: 710:             TXB0D2 = mp->bytes[1];
 46768   005872  EE20 F003          	lfsr	2,3
 46769   005876  5014               	movf	i2checkTxFifo@mp^0,w,c
 46770   005878  26D9               	addwf	fsr2l,f,c
 46771   00587A  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46772   00587C  22DA               	addwfc	fsr2h,f,c
 46773   00587E  50DF               	movf	indf2,w,c
 46774   005880  6F28               	movwf	40,b	;volatile
 46775                           
 46776                           ; BSR set to: 15
 46777                           ;../../VLCBlib_PIC/can18_ecan.c: 711:             TXB0D3 = mp->bytes[2];
 46778   005882  EE20 F004          	lfsr	2,4
 46779   005886  5014               	movf	i2checkTxFifo@mp^0,w,c
 46780   005888  26D9               	addwf	fsr2l,f,c
 46781   00588A  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46782   00588C  22DA               	addwfc	fsr2h,f,c
 46783   00588E  50DF               	movf	indf2,w,c
 46784   005890  6F29               	movwf	41,b	;volatile
 46785                           
 46786                           ; BSR set to: 15
 46787                           ;../../VLCBlib_PIC/can18_ecan.c: 712:             TXB0D4 = mp->bytes[3];
 46788   005892  EE20 F005          	lfsr	2,5
 46789   005896  5014               	movf	i2checkTxFifo@mp^0,w,c
 46790   005898  26D9               	addwf	fsr2l,f,c
 46791   00589A  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46792   00589C  22DA               	addwfc	fsr2h,f,c
 46793   00589E  50DF               	movf	indf2,w,c
 46794   0058A0  6F2A               	movwf	42,b	;volatile
 46795                           
 46796                           ; BSR set to: 15
 46797                           ;../../VLCBlib_PIC/can18_ecan.c: 713:             TXB0D5 = mp->bytes[4];
 46798   0058A2  EE20 F006          	lfsr	2,6
 46799   0058A6  5014               	movf	i2checkTxFifo@mp^0,w,c
 46800   0058A8  26D9               	addwf	fsr2l,f,c
 46801   0058AA  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46802   0058AC  22DA               	addwfc	fsr2h,f,c
 46803   0058AE  50DF               	movf	indf2,w,c
 46804   0058B0  6F2B               	movwf	43,b	;volatile
 46805                           
 46806                           ; BSR set to: 15
 46807                           ;../../VLCBlib_PIC/can18_ecan.c: 714:             TXB0D6 = mp->bytes[5];
 46808   0058B2  EE20 F007          	lfsr	2,7
 46809   0058B6  5014               	movf	i2checkTxFifo@mp^0,w,c
 46810   0058B8  26D9               	addwf	fsr2l,f,c
 46811   0058BA  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46812   0058BC  22DA               	addwfc	fsr2h,f,c
 46813   0058BE  50DF               	movf	indf2,w,c
 46814   0058C0  6F2C               	movwf	44,b	;volatile
 46815                           
 46816                           ; BSR set to: 15
 46817                           ;../../VLCBlib_PIC/can18_ecan.c: 715:             TXB0D7 = mp->bytes[6];
 46818   0058C2  EE20 F008          	lfsr	2,8
 46819   0058C6  5014               	movf	i2checkTxFifo@mp^0,w,c
 46820   0058C8  26D9               	addwf	fsr2l,f,c
 46821   0058CA  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46822   0058CC  22DA               	addwfc	fsr2h,f,c
 46823   0058CE  50DF               	movf	indf2,w,c
 46824   0058D0  6F2D               	movwf	45,b	;volatile
 46825                           
 46826                           ; BSR set to: 15
 46827                           ;../../VLCBlib_PIC/can18_ecan.c: 716:             TXB0DLC = mp->len;
 46828   0058D2  C014  FFD9         	movff	i2checkTxFifo@mp,fsr2l
 46829   0058D6  C015  FFDA         	movff	i2checkTxFifo@mp+1,fsr2h
 46830   0058DA  50DF               	movf	indf2,w,c
 46831   0058DC  6F25               	movwf	37,b	;volatile
 46832                           
 46833                           ; BSR set to: 15
 46834                           ;../../VLCBlib_PIC/can18_ecan.c: 718:             canTransmitTimeout.val = tickGet();
 46835   0058DE  EC8B  F05A         	call	i2_tickGet	;wreg free
 46836   0058E2  C001  F02F         	movff	?i2_tickGet,_canTransmitTimeout
 46837   0058E6  C002  F030         	movff	?i2_tickGet+1,_canTransmitTimeout+1
 46838   0058EA  C003  F031         	movff	?i2_tickGet+2,_canTransmitTimeout+2
 46839   0058EE  C004  F032         	movff	?i2_tickGet+3,_canTransmitTimeout+3
 46840                           
 46841                           ;../../VLCBlib_PIC/can18_ecan.c: 719:             canTransmitFailed = 0;
 46842   0058F2  0E00               	movlw	0
 46843   0058F4  0100               	movlb	0	; () banked
 46844   0058F6  6FC0               	movwf	_canTransmitFailed& (0+255),b
 46845                           
 46846                           ; BSR set to: 0
 46847                           ;../../VLCBlib_PIC/can18_ecan.c: 720:             TXB0CONbits.TXREQ = 1;
 46848   0058F8  010F               	movlb	15	; () banked
 46849   0058FA  8720               	bsf	32,3,b	;volatile
 46850                           
 46851                           ; BSR set to: 15
 46852                           ;../../VLCBlib_PIC/can18_ecan.c: 721:             PIE5bits.TXBnIE = 1;
 46853   0058FC  8876               	bsf	118,4,c	;volatile
 46854                           
 46855                           ; BSR set to: 15
 46856                           ;../../VLCBlib_PIC/can18_ecan.c: 722:             canDiagnostics[0x06].asUint++;
 46857   0058FE  0101               	movlb	1	; () banked
 46858   005900  4B73               	infsnz	(_canDiagnostics+12)& (0+255),f,b
 46859   005902  2B74               	incf	(_canDiagnostics+13)& (0+255),f,b
 46860                           
 46861                           ; BSR set to: 1
 46862                           ;../../VLCBlib_PIC/can18_ecan.c: 725:             if (isEvent(mp->opc)) {
 46863   005904  EE20 F001          	lfsr	2,1
 46864   005908  5014               	movf	i2checkTxFifo@mp^0,w,c
 46865   00590A  26D9               	addwf	fsr2l,f,c
 46866   00590C  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46867   00590E  22DA               	addwfc	fsr2h,f,c
 46868   005910  50DF               	movf	indf2,w,c
 46869   005912  ECD1  F061         	call	i2_isEvent
 46870   005916  0900               	iorlw	0
 46871   005918  B4D8               	btfsc	status,2,c
 46872   00591A  0012               	return	
 46873                           
 46874                           ;../../VLCBlib_PIC/can18_ecan.c: 727:                 m = getNextWriteMessage(&rxQueue);
 46875   00591C  0E4F               	movlw	low _rxQueue
 46876   00591E  6E01               	movwf	i2getNextWriteMessage@q^0,c
 46877   005920  ECFB  F046         	call	i2_getNextWriteMessage	;wreg free
 46878   005924  C001  F012         	movff	?i2_getNextWriteMessage,i2checkTxFifo@m
 46879   005928  C002  F013         	movff	?i2_getNextWriteMessage+1,i2checkTxFifo@m+1
 46880                           
 46881                           ;../../VLCBlib_PIC/can18_ecan.c: 728:                 if (m == ((void*)0)) {
 46882   00592C  5012               	movf	i2checkTxFifo@m^0,w,c
 46883   00592E  1013               	iorwf	(i2checkTxFifo@m+1)^0,w,c
 46884   005930  A4D8               	btfss	status,2,c
 46885   005932  D006               	goto	i2l14093
 46886                           
 46887                           ;../../VLCBlib_PIC/can18_ecan.c: 730:                     canDiagnostics[0x08].asUint++;
 46888   005934  0101               	movlb	1	; () banked
 46889   005936  4B77               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 46890   005938  2B78               	incf	(_canDiagnostics+17)& (0+255),f,b
 46891                           
 46892                           ; BSR set to: 1
 46893                           ;../../VLCBlib_PIC/can18_ecan.c: 731:                     updateModuleErrorStatus();
 46894   00593A  ECF9  F062         	call	i2_updateModuleErrorStatus	;wreg free
 46895                           
 46896                           ;../../VLCBlib_PIC/can18_ecan.c: 733:                 } else {
 46897   00593E  0012               	return	
 46898   005940                     i2l14093:
 46899                           
 46900                           ;../../VLCBlib_PIC/can18_ecan.c: 735:                     m->opc = mp->opc;
 46901   005940  EE20 F001          	lfsr	2,1
 46902   005944  5014               	movf	i2checkTxFifo@mp^0,w,c
 46903   005946  26D9               	addwf	fsr2l,f,c
 46904   005948  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46905   00594A  22DA               	addwfc	fsr2h,f,c
 46906   00594C  EE10 F001          	lfsr	1,1
 46907   005950  5012               	movf	i2checkTxFifo@m^0,w,c
 46908   005952  26E1               	addwf	fsr1l,f,c
 46909   005954  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 46910   005956  22E2               	addwfc	fsr1h,f,c
 46911   005958  CFDF FFE7          	movff	indf2,indf1
 46912                           
 46913                           ;../../VLCBlib_PIC/can18_ecan.c: 736:                     m->len = mp->len;
 46914   00595C  C014  FFD9         	movff	i2checkTxFifo@mp,fsr2l
 46915   005960  C015  FFDA         	movff	i2checkTxFifo@mp+1,fsr2h
 46916   005964  C012  FFE1         	movff	i2checkTxFifo@m,fsr1l
 46917   005968  C013  FFE2         	movff	i2checkTxFifo@m+1,fsr1h
 46918   00596C  CFDF FFE7          	movff	indf2,indf1
 46919                           
 46920                           ;../../VLCBlib_PIC/can18_ecan.c: 737:                     m->bytes[0] = mp->bytes[0];
 46921   005970  EE20 F002          	lfsr	2,2
 46922   005974  5014               	movf	i2checkTxFifo@mp^0,w,c
 46923   005976  26D9               	addwf	fsr2l,f,c
 46924   005978  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46925   00597A  22DA               	addwfc	fsr2h,f,c
 46926   00597C  EE10 F002          	lfsr	1,2
 46927   005980  5012               	movf	i2checkTxFifo@m^0,w,c
 46928   005982  26E1               	addwf	fsr1l,f,c
 46929   005984  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 46930   005986  22E2               	addwfc	fsr1h,f,c
 46931   005988  CFDF FFE7          	movff	indf2,indf1
 46932                           
 46933                           ;../../VLCBlib_PIC/can18_ecan.c: 738:                     m->bytes[1] = mp->bytes[1];
 46934   00598C  EE20 F003          	lfsr	2,3
 46935   005990  5014               	movf	i2checkTxFifo@mp^0,w,c
 46936   005992  26D9               	addwf	fsr2l,f,c
 46937   005994  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46938   005996  22DA               	addwfc	fsr2h,f,c
 46939   005998  EE10 F003          	lfsr	1,3
 46940   00599C  5012               	movf	i2checkTxFifo@m^0,w,c
 46941   00599E  26E1               	addwf	fsr1l,f,c
 46942   0059A0  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 46943   0059A2  22E2               	addwfc	fsr1h,f,c
 46944   0059A4  CFDF FFE7          	movff	indf2,indf1
 46945                           
 46946                           ;../../VLCBlib_PIC/can18_ecan.c: 739:                     m->bytes[2] = mp->bytes[2];
 46947   0059A8  EE20 F004          	lfsr	2,4
 46948   0059AC  5014               	movf	i2checkTxFifo@mp^0,w,c
 46949   0059AE  26D9               	addwf	fsr2l,f,c
 46950   0059B0  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46951   0059B2  22DA               	addwfc	fsr2h,f,c
 46952   0059B4  EE10 F004          	lfsr	1,4
 46953   0059B8  5012               	movf	i2checkTxFifo@m^0,w,c
 46954   0059BA  26E1               	addwf	fsr1l,f,c
 46955   0059BC  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 46956   0059BE  22E2               	addwfc	fsr1h,f,c
 46957   0059C0  CFDF FFE7          	movff	indf2,indf1
 46958                           
 46959                           ;../../VLCBlib_PIC/can18_ecan.c: 740:                     m->bytes[3] = mp->bytes[3];
 46960   0059C4  EE20 F005          	lfsr	2,5
 46961   0059C8  5014               	movf	i2checkTxFifo@mp^0,w,c
 46962   0059CA  26D9               	addwf	fsr2l,f,c
 46963   0059CC  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46964   0059CE  22DA               	addwfc	fsr2h,f,c
 46965   0059D0  EE10 F005          	lfsr	1,5
 46966   0059D4  5012               	movf	i2checkTxFifo@m^0,w,c
 46967   0059D6  26E1               	addwf	fsr1l,f,c
 46968   0059D8  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 46969   0059DA  22E2               	addwfc	fsr1h,f,c
 46970   0059DC  CFDF FFE7          	movff	indf2,indf1
 46971                           
 46972                           ;../../VLCBlib_PIC/can18_ecan.c: 741:                     m->bytes[4] = mp->bytes[4];
 46973   0059E0  EE20 F006          	lfsr	2,6
 46974   0059E4  5014               	movf	i2checkTxFifo@mp^0,w,c
 46975   0059E6  26D9               	addwf	fsr2l,f,c
 46976   0059E8  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46977   0059EA  22DA               	addwfc	fsr2h,f,c
 46978   0059EC  EE10 F006          	lfsr	1,6
 46979   0059F0  5012               	movf	i2checkTxFifo@m^0,w,c
 46980   0059F2  26E1               	addwf	fsr1l,f,c
 46981   0059F4  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 46982   0059F6  22E2               	addwfc	fsr1h,f,c
 46983   0059F8  CFDF FFE7          	movff	indf2,indf1
 46984                           
 46985                           ;../../VLCBlib_PIC/can18_ecan.c: 742:                     m->bytes[5] = mp->bytes[5];
 46986   0059FC  EE20 F007          	lfsr	2,7
 46987   005A00  5014               	movf	i2checkTxFifo@mp^0,w,c
 46988   005A02  26D9               	addwf	fsr2l,f,c
 46989   005A04  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46990   005A06  22DA               	addwfc	fsr2h,f,c
 46991   005A08  EE10 F007          	lfsr	1,7
 46992   005A0C  5012               	movf	i2checkTxFifo@m^0,w,c
 46993   005A0E  26E1               	addwf	fsr1l,f,c
 46994   005A10  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 46995   005A12  22E2               	addwfc	fsr1h,f,c
 46996   005A14  CFDF FFE7          	movff	indf2,indf1
 46997                           
 46998                           ;../../VLCBlib_PIC/can18_ecan.c: 743:                     m->bytes[6] = mp->bytes[6];
 46999   005A18  EE20 F008          	lfsr	2,8
 47000   005A1C  5014               	movf	i2checkTxFifo@mp^0,w,c
 47001   005A1E  26D9               	addwf	fsr2l,f,c
 47002   005A20  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47003   005A22  22DA               	addwfc	fsr2h,f,c
 47004   005A24  EE10 F008          	lfsr	1,8
 47005   005A28  5012               	movf	i2checkTxFifo@m^0,w,c
 47006   005A2A  26E1               	addwf	fsr1l,f,c
 47007   005A2C  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 47008   005A2E  22E2               	addwfc	fsr1h,f,c
 47009   005A30  CFDF FFE7          	movff	indf2,indf1
 47010   005A34  0012               	return	
 47011   005A36                     i2l14111:
 47012                           
 47013                           ;../../VLCBlib_PIC/can18_ecan.c: 749:             canTransmitTimeout.val = 0;
 47014   005A36  0E00               	movlw	0
 47015   005A38  6E2F               	movwf	_canTransmitTimeout^0,c
 47016   005A3A  0E00               	movlw	0
 47017   005A3C  6E30               	movwf	(_canTransmitTimeout+1)^0,c
 47018   005A3E  0E00               	movlw	0
 47019   005A40  6E31               	movwf	(_canTransmitTimeout+2)^0,c
 47020   005A42  0E00               	movlw	0
 47021   005A44  6E32               	movwf	(_canTransmitTimeout+3)^0,c
 47022                           
 47023                           ;../../VLCBlib_PIC/can18_ecan.c: 750:             TXB0CON = 0;
 47024   005A46  0E00               	movlw	0
 47025   005A48  010F               	movlb	15	; () banked
 47026   005A4A  6F20               	movwf	32,b	;volatile
 47027                           
 47028                           ; BSR set to: 15
 47029                           ;../../VLCBlib_PIC/can18_ecan.c: 751:             PIR5bits.TXBnIF = 0;
 47030   005A4C  9877               	bcf	119,4,c	;volatile
 47031                           
 47032                           ; BSR set to: 15
 47033                           ;../../VLCBlib_PIC/can18_ecan.c: 752:             PIE5bits.TXBnIE = 0;
 47034   005A4E  9876               	bcf	118,4,c	;volatile
 47035   005A50  0012               	return	
 47036   005A52                     i2l2539:
 47037                           
 47038                           ; BSR set to: 15
 47039                           ;../../VLCBlib_PIC/can18_ecan.c: 756:         PIR5bits.TXBnIF = 0;
 47040   005A52  9877               	bcf	119,4,c	;volatile
 47041                           
 47042                           ;../../VLCBlib_PIC/can18_ecan.c: 757:         PIE5bits.TXBnIE = 1;
 47043   005A54  8876               	bsf	118,4,c	;volatile
 47044   005A56  0012               	return		;funcret
 47045   005A58                     __end_ofi2_checkTxFifo:
 47046                           	callstack 0
 47047                           
 47048 ;; *************** function i2_tickGet *****************
 47049 ;; Defined at:
 47050 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 47051 ;; Parameters:    Size  Location     Type
 47052 ;;		None
 47053 ;; Auto vars:     Size  Location     Type
 47054 ;;  currentTime     4    6[COMRAM] struct _TickValue
 47055 ;;  IntFlag1        1    5[COMRAM] unsigned char 
 47056 ;;  IntFlag2        1    4[COMRAM] unsigned char 
 47057 ;; Return value:  Size  Location     Type
 47058 ;;                  4    0[COMRAM] unsigned long 
 47059 ;; Registers used:
 47060 ;;		wreg, status,2, status,0
 47061 ;; Tracked objects:
 47062 ;;		On entry : 0/0
 47063 ;;		On exit  : 0/0
 47064 ;;		Unchanged: 0/0
 47065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47066 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47067 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47069 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47070 ;;Total ram usage:       10 bytes
 47071 ;; Hardware stack levels used: 1
 47072 ;; This function calls:
 47073 ;;		Nothing
 47074 ;; This function is called by:
 47075 ;;		i2_checkTxFifo
 47076 ;;		i2_checkCANTimeout
 47077 ;; This function uses a non-reentrant model
 47078 ;;
 47079                           
 47080                           	psect	text219
 47081   00B516                     __ptext219:
 47082                           	callstack 0
 47083   00B516                     i2_tickGet:
 47084                           	callstack 3
 47085                           
 47086                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 47087                           
 47088                           ;incstack = 0
 47089   00B516  0E00               	movlw	0
 47090   00B518  6E09               	movwf	(i2tickGet@currentTime+2)^0,c
 47091                           
 47092                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 47093   00B51A  0E00               	movlw	0
 47094   00B51C  6E0A               	movwf	(i2tickGet@currentTime+3)^0,c
 47095                           
 47096                           ;../../VLCBlib_PIC/ticktime.c: 169:     INTCONbits.TMR0IE = 0;
 47097   00B51E  9AF2               	bcf	242,5,c	;volatile
 47098   00B520                     i2l12849:
 47099                           
 47100                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = INTCONbits.TMR0IF;
 47101   00B520  0E00               	movlw	0
 47102   00B522  B4F2               	btfsc	242,2,c	;volatile
 47103   00B524  0E01               	movlw	1
 47104   00B526  6E06               	movwf	i2tickGet@IntFlag1^0,c
 47105                           
 47106                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 47107   00B528  CFD6 F007          	movff	4054,i2tickGet@currentTime	;volatile
 47108                           
 47109                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 47110   00B52C  CFD7 F008          	movff	4055,i2tickGet@currentTime+1	;volatile
 47111                           
 47112                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = INTCONbits.TMR0IF;
 47113   00B530  0E00               	movlw	0
 47114   00B532  B4F2               	btfsc	242,2,c	;volatile
 47115   00B534  0E01               	movlw	1
 47116   00B536  6E05               	movwf	i2tickGet@IntFlag2^0,c
 47117                           
 47118                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 47119   00B538  5005               	movf	i2tickGet@IntFlag2^0,w,c
 47120   00B53A  1806               	xorwf	i2tickGet@IntFlag1^0,w,c
 47121   00B53C  A4D8               	btfss	status,2,c
 47122   00B53E  D7F0               	goto	i2l12849
 47123                           
 47124                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 47125   00B540  5006               	movf	i2tickGet@IntFlag1^0,w,c
 47126   00B542  B4D8               	btfsc	status,2,c
 47127   00B544  D006               	goto	i2l12869
 47128                           
 47129                           ;../../VLCBlib_PIC/ticktime.c: 178:         INTCONbits.TMR0IF = 0;
 47130   00B546  94F2               	bcf	242,2,c	;volatile
 47131                           
 47132                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 47133   00B548  0100               	movlb	0	; () banked
 47134   00B54A  2BC7               	incf	_timerExtension1& (0+255),f,b	;volatile
 47135                           
 47136                           ; BSR set to: 0
 47137                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 47138   00B54C  51C7               	movf	_timerExtension1& (0+255),w,b	;volatile
 47139   00B54E  B4D8               	btfsc	status,2,c
 47140                           
 47141                           ; BSR set to: 0
 47142                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 47143   00B550  2BC6               	incf	_timerExtension2& (0+255),f,b	;volatile
 47144   00B552                     i2l12869:
 47145                           
 47146                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 47147   00B552  0100               	movlb	0	; () banked
 47148   00B554  51C7               	movf	_timerExtension1& (0+255),w,b	;volatile
 47149   00B556  2609               	addwf	(i2tickGet@currentTime+2)^0,f,c
 47150                           
 47151                           ; BSR set to: 0
 47152                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 47153   00B558  51C6               	movf	_timerExtension2& (0+255),w,b	;volatile
 47154   00B55A  260A               	addwf	(i2tickGet@currentTime+3)^0,f,c
 47155                           
 47156                           ; BSR set to: 0
 47157                           ;../../VLCBlib_PIC/ticktime.c: 191:     INTCONbits.TMR0IE = 1;
 47158   00B55C  8AF2               	bsf	242,5,c	;volatile
 47159                           
 47160                           ; BSR set to: 0
 47161                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 47162   00B55E  C007  F001         	movff	i2tickGet@currentTime,?i2_tickGet
 47163   00B562  C008  F002         	movff	i2tickGet@currentTime+1,?i2_tickGet+1
 47164   00B566  C009  F003         	movff	i2tickGet@currentTime+2,?i2_tickGet+2
 47165   00B56A  C00A  F004         	movff	i2tickGet@currentTime+3,?i2_tickGet+3
 47166                           
 47167                           ; BSR set to: 0
 47168   00B56E  0012               	return		;funcret
 47169   00B570                     __end_ofi2_tickGet:
 47170                           	callstack 0
 47171                           
 47172 ;; *************** function i2_pop *****************
 47173 ;; Defined at:
 47174 ;;		line 96 in file "../../VLCBlib_PIC/messageQueue.c"
 47175 ;; Parameters:    Size  Location     Type
 47176 ;;  q               1    0[COMRAM] PTR struct MessageQueue
 47177 ;;		 -> txQueue(5), rxQueue(5), 
 47178 ;; Auto vars:     Size  Location     Type
 47179 ;;  ret             2    7[COMRAM] PTR struct Message
 47180 ;;		 -> txBuffers(72), rxBuffers(288), 
 47181 ;; Return value:  Size  Location     Type
 47182 ;;                  2    0[COMRAM] PTR struct Message
 47183 ;; Registers used:
 47184 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 47185 ;; Tracked objects:
 47186 ;;		On entry : 0/0
 47187 ;;		On exit  : 0/0
 47188 ;;		Unchanged: 0/0
 47189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47190 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47191 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47192 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47193 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47194 ;;Total ram usage:        9 bytes
 47195 ;; Hardware stack levels used: 1
 47196 ;; This function calls:
 47197 ;;		Nothing
 47198 ;; This function is called by:
 47199 ;;		i2_checkTxFifo
 47200 ;; This function uses a non-reentrant model
 47201 ;;
 47202                           
 47203                           	psect	text220
 47204   009E3E                     __ptext220:
 47205                           	callstack 0
 47206   009E3E                     i2_pop:
 47207                           	callstack 3
 47208                           
 47209                           ;../../VLCBlib_PIC/messageQueue.c: 97:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 98:  if (q->writeIndex == q->readIndex) {
 47210                           
 47211                           ; BSR set to: 0
 47212                           ;incstack = 0
 47213   009E3E  5001               	movf	i2pop@q^0,w,c
 47214   009E40  6ED9               	movwf	fsr2l,c
 47215   009E42  6ADA               	clrf	fsr2h,c
 47216   009E44  0E02               	movlw	2
 47217   009E46  26D9               	addwf	fsr2l,f,c
 47218   009E48  5001               	movf	i2pop@q^0,w,c
 47219   009E4A  6EE1               	movwf	fsr1l,c
 47220   009E4C  6AE2               	clrf	fsr1h,c
 47221   009E4E  0E03               	movlw	3
 47222   009E50  26E1               	addwf	fsr1l,f,c
 47223   009E52  50DE               	movf	postinc2,w,c
 47224   009E54  18E6               	xorwf	postinc1,w,c
 47225   009E56  A4D8               	btfss	status,2,c
 47226   009E58  D005               	goto	i2l12955
 47227                           
 47228                           ;../../VLCBlib_PIC/messageQueue.c: 99:         return ((void*)0);
 47229   009E5A  0E00               	movlw	0
 47230   009E5C  6E01               	movwf	?i2_pop^0,c
 47231   009E5E  0E00               	movlw	0
 47232   009E60  6E02               	movwf	(?i2_pop+1)^0,c
 47233   009E62  0012               	return	
 47234   009E64                     i2l12955:
 47235                           
 47236                           ;../../VLCBlib_PIC/messageQueue.c: 101:  ret = &(q->messages[q->readIndex++]);
 47237   009E64  5001               	movf	i2pop@q^0,w,c
 47238   009E66  6ED9               	movwf	fsr2l,c
 47239   009E68  6ADA               	clrf	fsr2h,c
 47240   009E6A  0E02               	movlw	2
 47241   009E6C  26D9               	addwf	fsr2l,f,c
 47242   009E6E  50DF               	movf	indf2,w,c
 47243   009E70  6E03               	movwf	??i2_pop^0,c
 47244   009E72  5003               	movf	??i2_pop^0,w,c
 47245   009E74  0D09               	mullw	9
 47246   009E76  CFF3 F004          	movff	prodl,??i2_pop+1
 47247   009E7A  CFF4 F005          	movff	prodh,??i2_pop+2
 47248   009E7E  5001               	movf	i2pop@q^0,w,c
 47249   009E80  6ED9               	movwf	fsr2l,c
 47250   009E82  6ADA               	clrf	fsr2h,c
 47251   009E84  CFDE F006          	movff	postinc2,??i2_pop+3
 47252   009E88  CFDD F007          	movff	postdec2,??i2_pop+4
 47253   009E8C  5004               	movf	(??i2_pop+1)^0,w,c
 47254   009E8E  2406               	addwf	(??i2_pop+3)^0,w,c
 47255   009E90  6E08               	movwf	i2pop@ret^0,c
 47256   009E92  5005               	movf	(??i2_pop+2)^0,w,c
 47257   009E94  2007               	addwfc	(??i2_pop+4)^0,w,c
 47258   009E96  6E09               	movwf	(i2pop@ret+1)^0,c
 47259   009E98  5001               	movf	i2pop@q^0,w,c
 47260   009E9A  6ED9               	movwf	fsr2l,c
 47261   009E9C  6ADA               	clrf	fsr2h,c
 47262   009E9E  0E02               	movlw	2
 47263   009EA0  26D9               	addwf	fsr2l,f,c
 47264   009EA2  2ADF               	incf	indf2,f,c
 47265                           
 47266                           ;../../VLCBlib_PIC/messageQueue.c: 102:  if (q->readIndex >= q->size) q->readIndex = 0;
 47267   009EA4  5001               	movf	i2pop@q^0,w,c
 47268   009EA6  6ED9               	movwf	fsr2l,c
 47269   009EA8  6ADA               	clrf	fsr2h,c
 47270   009EAA  0E04               	movlw	4
 47271   009EAC  26D9               	addwf	fsr2l,f,c
 47272   009EAE  5001               	movf	i2pop@q^0,w,c
 47273   009EB0  6EE1               	movwf	fsr1l,c
 47274   009EB2  6AE2               	clrf	fsr1h,c
 47275   009EB4  0E02               	movlw	2
 47276   009EB6  26E1               	addwf	fsr1l,f,c
 47277   009EB8  50DE               	movf	postinc2,w,c
 47278   009EBA  5CE6               	subwf	postinc1,w,c
 47279   009EBC  A0D8               	btfss	status,0,c
 47280   009EBE  D006               	goto	i2l12963
 47281   009EC0  5001               	movf	i2pop@q^0,w,c
 47282   009EC2  6ED9               	movwf	fsr2l,c
 47283   009EC4  6ADA               	clrf	fsr2h,c
 47284   009EC6  0E02               	movlw	2
 47285   009EC8  26D9               	addwf	fsr2l,f,c
 47286   009ECA  6ADF               	clrf	indf2,c
 47287   009ECC                     i2l12963:
 47288                           
 47289                           ;../../VLCBlib_PIC/messageQueue.c: 103:  return ret;
 47290   009ECC  C008  F001         	movff	i2pop@ret,?i2_pop
 47291   009ED0  C009  F002         	movff	i2pop@ret+1,?i2_pop+1
 47292   009ED4  0012               	return		;funcret
 47293   009ED6                     __end_ofi2_pop:
 47294                           	callstack 0
 47295                           
 47296 ;; *************** function i2_isEvent *****************
 47297 ;; Defined at:
 47298 ;;		line 1118 in file "../../VLCBlib_PIC/vlcb.c"
 47299 ;; Parameters:    Size  Location     Type
 47300 ;;  opc             1    wreg     unsigned char 
 47301 ;; Auto vars:     Size  Location     Type
 47302 ;;  opc             1    1[COMRAM] unsigned char 
 47303 ;; Return value:  Size  Location     Type
 47304 ;;                  1    wreg      enum E12760
 47305 ;; Registers used:
 47306 ;;		wreg, status,2, status,0
 47307 ;; Tracked objects:
 47308 ;;		On entry : 0/0
 47309 ;;		On exit  : 0/0
 47310 ;;		Unchanged: 0/0
 47311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47313 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47315 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47316 ;;Total ram usage:        2 bytes
 47317 ;; Hardware stack levels used: 1
 47318 ;; This function calls:
 47319 ;;		Nothing
 47320 ;; This function is called by:
 47321 ;;		i2_checkTxFifo
 47322 ;; This function uses a non-reentrant model
 47323 ;;
 47324                           
 47325                           	psect	text221
 47326   00C3A2                     __ptext221:
 47327                           	callstack 0
 47328   00C3A2                     i2_isEvent:
 47329                           	callstack 3
 47330                           
 47331                           ;incstack = 0
 47332                           ;i2isEvent@opc stored from wreg
 47333   00C3A2  6E02               	movwf	i2isEvent@opc^0,c
 47334                           
 47335                           ;../../VLCBlib_PIC/vlcb.c: 1119:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 47336   00C3A4  0E00               	movlw	0
 47337   00C3A6  6E01               	movwf	i2_isEvent$4885^0,c
 47338   00C3A8  5002               	movf	i2isEvent@opc^0,w,c
 47339   00C3AA  0B90               	andlw	144
 47340   00C3AC  0A90               	xorlw	144
 47341   00C3AE  A4D8               	btfss	status,2,c
 47342   00C3B0  D008               	goto	i2l2047
 47343   00C3B2  5002               	movf	i2isEvent@opc^0,w,c
 47344   00C3B4  0AFF               	xorlw	255
 47345   00C3B6  0B06               	andlw	6
 47346   00C3B8  0A06               	xorlw	6
 47347   00C3BA  A4D8               	btfss	status,2,c
 47348   00C3BC  D002               	goto	i2l2047
 47349   00C3BE  0E01               	movlw	1
 47350   00C3C0  6E01               	movwf	i2_isEvent$4885^0,c
 47351   00C3C2                     i2l2047:
 47352   00C3C2  5001               	movf	i2_isEvent$4885^0,w,c
 47353   00C3C4  0012               	return		;funcret
 47354   00C3C6                     __end_ofi2_isEvent:
 47355                           	callstack 0
 47356                           
 47357 ;; *************** function i2_canFillRxFifo *****************
 47358 ;; Defined at:
 47359 ;;		line 848 in file "../../VLCBlib_PIC/can18_ecan.c"
 47360 ;; Parameters:    Size  Location     Type
 47361 ;;		None
 47362 ;; Auto vars:     Size  Location     Type
 47363 ;;  ptr             2   14[COMRAM] PTR unsigned char 
 47364 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 47365 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 47366 ;;		 -> NULL(0), 
 47367 ;;  m               2   12[COMRAM] PTR struct Message
 47368 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 47369 ;;  hiIndex         1    0        unsigned char 
 47370 ;; Return value:  Size  Location     Type
 47371 ;;                  1    wreg      void 
 47372 ;; Registers used:
 47373 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 47374 ;; Tracked objects:
 47375 ;;		On entry : 0/0
 47376 ;;		On exit  : 0/0
 47377 ;;		Unchanged: 0/0
 47378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47380 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47382 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47383 ;;Total ram usage:        4 bytes
 47384 ;; Hardware stack levels used: 1
 47385 ;; Hardware stack levels required when called: 1
 47386 ;; This function calls:
 47387 ;;		i2_getBufferPointer
 47388 ;;		i2_getNextWriteMessage
 47389 ;;		i2_updateModuleErrorStatus
 47390 ;; This function is called by:
 47391 ;;		i2_canIsr
 47392 ;; This function uses a non-reentrant model
 47393 ;;
 47394                           
 47395                           	psect	text222
 47396   0073EC                     __ptext222:
 47397                           	callstack 0
 47398   0073EC                     i2_canFillRxFifo:
 47399                           	callstack 3
 47400                           
 47401                           ;../../VLCBlib_PIC/can18_ecan.c: 849:     uint8_t *ptr;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          850:     uint8_t hiIndex;;../../VLCBlib_PIC/can18_ecan.c: 851:     Message * m;;../../VL
      +                          CBlib_PIC/can18_ecan.c: 853:     while (COMSTATbits.NOT_FIFOEMPTY) {
 47402                           
 47403                           ;incstack = 0
 47404   0073EC  D0B2               	goto	i2l15587
 47405   0073EE                     i2l15549:
 47406                           
 47407                           ;../../VLCBlib_PIC/can18_ecan.c: 854:         ptr = getBufferPointer(CANCON & 0x07U);
 47408   0073EE  506F               	movf	111,w,c	;volatile
 47409   0073F0  0B07               	andlw	7
 47410   0073F2  EC72  F051         	call	i2_getBufferPointer
 47411   0073F6  C001  F00F         	movff	?i2_getBufferPointer,i2canFillRxFifo@ptr
 47412   0073FA  C002  F010         	movff	?i2_getBufferPointer+1,i2canFillRxFifo@ptr+1
 47413                           
 47414                           ;../../VLCBlib_PIC/can18_ecan.c: 855:         PIR5bits.RXBnIF = 0;
 47415   0073FE  9277               	bcf	119,1,c	;volatile
 47416                           
 47417                           ;../../VLCBlib_PIC/can18_ecan.c: 856:         if (COMSTATbits.RXB1OVFL) {
 47418   007400  BC71               	btfsc	113,6,c	;volatile
 47419                           
 47420                           ;../../VLCBlib_PIC/can18_ecan.c: 857:             COMSTATbits.RXB1OVFL = 0;
 47421   007402  9C71               	bcf	113,6,c	;volatile
 47422                           
 47423                           ;../../VLCBlib_PIC/can18_ecan.c: 859:         if ((ptr[2] & 0x08) == 0) {
 47424   007404  EE20 F002          	lfsr	2,2
 47425   007408  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 47426   00740A  26D9               	addwf	fsr2l,f,c
 47427   00740C  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47428   00740E  22DA               	addwfc	fsr2h,f,c
 47429   007410  B6DF               	btfsc	indf2,3,c
 47430   007412  D092               	goto	i2l15577
 47431                           
 47432                           ;../../VLCBlib_PIC/can18_ecan.c: 862:             m = getNextWriteMessage(&rxQueue);
 47433   007414  0E4F               	movlw	low _rxQueue
 47434   007416  6E01               	movwf	i2getNextWriteMessage@q^0,c
 47435   007418  ECFB  F046         	call	i2_getNextWriteMessage	;wreg free
 47436   00741C  C001  F00D         	movff	?i2_getNextWriteMessage,i2canFillRxFifo@m
 47437   007420  C002  F00E         	movff	?i2_getNextWriteMessage+1,i2canFillRxFifo@m+1
 47438                           
 47439                           ;../../VLCBlib_PIC/can18_ecan.c: 863:             if (m == ((void*)0)) {
 47440   007424  500D               	movf	i2canFillRxFifo@m^0,w,c
 47441   007426  100E               	iorwf	(i2canFillRxFifo@m+1)^0,w,c
 47442   007428  A4D8               	btfss	status,2,c
 47443   00742A  D009               	goto	i2l15573
 47444                           
 47445                           ;../../VLCBlib_PIC/can18_ecan.c: 865:                 canDiagnostics[0x08].asUint++;
 47446   00742C  0101               	movlb	1	; () banked
 47447   00742E  4B77               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 47448   007430  2B78               	incf	(_canDiagnostics+17)& (0+255),f,b
 47449                           
 47450                           ; BSR set to: 1
 47451                           ;../../VLCBlib_PIC/can18_ecan.c: 866:                 updateModuleErrorStatus();
 47452   007432  ECF9  F062         	call	i2_updateModuleErrorStatus	;wreg free
 47453                           
 47454                           ;../../VLCBlib_PIC/can18_ecan.c: 869:                 if (PIR5bits.IRXIF) {
 47455   007436  AE77               	btfss	119,7,c	;volatile
 47456   007438  0012               	return	
 47457                           
 47458                           ;../../VLCBlib_PIC/can18_ecan.c: 870:                     PIR5bits.IRXIF = 0;
 47459   00743A  9E77               	bcf	119,7,c	;volatile
 47460   00743C  0012               	return	
 47461   00743E                     i2l15573:
 47462                           
 47463                           ;../../VLCBlib_PIC/can18_ecan.c: 875:                 m->opc = ptr[6];
 47464   00743E  EE20 F006          	lfsr	2,6
 47465   007442  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 47466   007444  26D9               	addwf	fsr2l,f,c
 47467   007446  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47468   007448  22DA               	addwfc	fsr2h,f,c
 47469   00744A  EE10 F001          	lfsr	1,1
 47470   00744E  500D               	movf	i2canFillRxFifo@m^0,w,c
 47471   007450  26E1               	addwf	fsr1l,f,c
 47472   007452  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47473   007454  22E2               	addwfc	fsr1h,f,c
 47474   007456  CFDF FFE7          	movff	indf2,indf1
 47475                           
 47476                           ;../../VLCBlib_PIC/can18_ecan.c: 876:                 m->bytes[0] = ptr[7];
 47477   00745A  EE20 F007          	lfsr	2,7
 47478   00745E  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 47479   007460  26D9               	addwf	fsr2l,f,c
 47480   007462  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47481   007464  22DA               	addwfc	fsr2h,f,c
 47482   007466  EE10 F002          	lfsr	1,2
 47483   00746A  500D               	movf	i2canFillRxFifo@m^0,w,c
 47484   00746C  26E1               	addwf	fsr1l,f,c
 47485   00746E  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47486   007470  22E2               	addwfc	fsr1h,f,c
 47487   007472  CFDF FFE7          	movff	indf2,indf1
 47488                           
 47489                           ;../../VLCBlib_PIC/can18_ecan.c: 877:                 m->bytes[1] = ptr[8];
 47490   007476  EE20 F008          	lfsr	2,8
 47491   00747A  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 47492   00747C  26D9               	addwf	fsr2l,f,c
 47493   00747E  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47494   007480  22DA               	addwfc	fsr2h,f,c
 47495   007482  EE10 F003          	lfsr	1,3
 47496   007486  500D               	movf	i2canFillRxFifo@m^0,w,c
 47497   007488  26E1               	addwf	fsr1l,f,c
 47498   00748A  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47499   00748C  22E2               	addwfc	fsr1h,f,c
 47500   00748E  CFDF FFE7          	movff	indf2,indf1
 47501                           
 47502                           ;../../VLCBlib_PIC/can18_ecan.c: 878:                 m->bytes[2] = ptr[9];
 47503   007492  EE20 F009          	lfsr	2,9
 47504   007496  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 47505   007498  26D9               	addwf	fsr2l,f,c
 47506   00749A  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47507   00749C  22DA               	addwfc	fsr2h,f,c
 47508   00749E  EE10 F004          	lfsr	1,4
 47509   0074A2  500D               	movf	i2canFillRxFifo@m^0,w,c
 47510   0074A4  26E1               	addwf	fsr1l,f,c
 47511   0074A6  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47512   0074A8  22E2               	addwfc	fsr1h,f,c
 47513   0074AA  CFDF FFE7          	movff	indf2,indf1
 47514                           
 47515                           ;../../VLCBlib_PIC/can18_ecan.c: 879:                 m->bytes[3] = ptr[10];
 47516   0074AE  EE20 F00A          	lfsr	2,10
 47517   0074B2  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 47518   0074B4  26D9               	addwf	fsr2l,f,c
 47519   0074B6  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47520   0074B8  22DA               	addwfc	fsr2h,f,c
 47521   0074BA  EE10 F005          	lfsr	1,5
 47522   0074BE  500D               	movf	i2canFillRxFifo@m^0,w,c
 47523   0074C0  26E1               	addwf	fsr1l,f,c
 47524   0074C2  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47525   0074C4  22E2               	addwfc	fsr1h,f,c
 47526   0074C6  CFDF FFE7          	movff	indf2,indf1
 47527                           
 47528                           ;../../VLCBlib_PIC/can18_ecan.c: 880:                 m->bytes[4] = ptr[11];
 47529   0074CA  EE20 F00B          	lfsr	2,11
 47530   0074CE  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 47531   0074D0  26D9               	addwf	fsr2l,f,c
 47532   0074D2  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47533   0074D4  22DA               	addwfc	fsr2h,f,c
 47534   0074D6  EE10 F006          	lfsr	1,6
 47535   0074DA  500D               	movf	i2canFillRxFifo@m^0,w,c
 47536   0074DC  26E1               	addwf	fsr1l,f,c
 47537   0074DE  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47538   0074E0  22E2               	addwfc	fsr1h,f,c
 47539   0074E2  CFDF FFE7          	movff	indf2,indf1
 47540                           
 47541                           ;../../VLCBlib_PIC/can18_ecan.c: 881:                 m->bytes[5] = ptr[12];
 47542   0074E6  EE20 F00C          	lfsr	2,12
 47543   0074EA  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 47544   0074EC  26D9               	addwf	fsr2l,f,c
 47545   0074EE  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47546   0074F0  22DA               	addwfc	fsr2h,f,c
 47547   0074F2  EE10 F007          	lfsr	1,7
 47548   0074F6  500D               	movf	i2canFillRxFifo@m^0,w,c
 47549   0074F8  26E1               	addwf	fsr1l,f,c
 47550   0074FA  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47551   0074FC  22E2               	addwfc	fsr1h,f,c
 47552   0074FE  CFDF FFE7          	movff	indf2,indf1
 47553                           
 47554                           ;../../VLCBlib_PIC/can18_ecan.c: 882:                 m->bytes[6] = ptr[13];
 47555   007502  EE20 F00D          	lfsr	2,13
 47556   007506  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 47557   007508  26D9               	addwf	fsr2l,f,c
 47558   00750A  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47559   00750C  22DA               	addwfc	fsr2h,f,c
 47560   00750E  EE10 F008          	lfsr	1,8
 47561   007512  500D               	movf	i2canFillRxFifo@m^0,w,c
 47562   007514  26E1               	addwf	fsr1l,f,c
 47563   007516  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47564   007518  22E2               	addwfc	fsr1h,f,c
 47565   00751A  CFDF FFE7          	movff	indf2,indf1
 47566                           
 47567                           ;../../VLCBlib_PIC/can18_ecan.c: 883:                 m->len = ptr[5]&0xF;
 47568   00751E  EE20 F005          	lfsr	2,5
 47569   007522  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 47570   007524  26D9               	addwf	fsr2l,f,c
 47571   007526  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47572   007528  22DA               	addwfc	fsr2h,f,c
 47573   00752A  50DF               	movf	indf2,w,c
 47574   00752C  0B0F               	andlw	15
 47575   00752E  C00D  FFD9         	movff	i2canFillRxFifo@m,fsr2l
 47576   007532  C00E  FFDA         	movff	i2canFillRxFifo@m+1,fsr2h
 47577   007536  6EDF               	movwf	indf2,c
 47578   007538                     i2l15577:
 47579                           
 47580                           ;../../VLCBlib_PIC/can18_ecan.c: 887:         if (PIR5bits.IRXIF) {
 47581   007538  AE77               	btfss	119,7,c	;volatile
 47582   00753A  D004               	goto	i2l15583
 47583                           
 47584                           ;../../VLCBlib_PIC/can18_ecan.c: 889:             canDiagnostics[0x01].asUint++;
 47585   00753C  0101               	movlb	1	; () banked
 47586   00753E  4B69               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 47587   007540  2B6A               	incf	(_canDiagnostics+3)& (0+255),f,b
 47588                           
 47589                           ; BSR set to: 1
 47590                           ;../../VLCBlib_PIC/can18_ecan.c: 891:             PIR5bits.IRXIF = 0;
 47591   007542  9E77               	bcf	119,7,c	;volatile
 47592   007544                     i2l15583:
 47593                           
 47594                           ;../../VLCBlib_PIC/can18_ecan.c: 894:         ptr[0] &= 0x7f;
 47595   007544  C00F  FFD9         	movff	i2canFillRxFifo@ptr,fsr2l
 47596   007548  C010  FFDA         	movff	i2canFillRxFifo@ptr+1,fsr2h
 47597   00754C  0E7F               	movlw	127
 47598   00754E  16DF               	andwf	indf2,f,c
 47599                           
 47600                           ;../../VLCBlib_PIC/can18_ecan.c: 895:         PIR5bits.FIFOWMIF = 0;
 47601   007550  9077               	bcf	119,0,c	;volatile
 47602   007552                     i2l15587:
 47603                           
 47604                           ;../../VLCBlib_PIC/can18_ecan.c: 853:     while (COMSTATbits.NOT_FIFOEMPTY) {
 47605   007552  AE71               	btfss	113,7,c	;volatile
 47606   007554  0012               	return	
 47607   007556  D74B               	goto	i2l15549
 47608   007558                     __end_ofi2_canFillRxFifo:
 47609                           	callstack 0
 47610                           
 47611 ;; *************** function i2_updateModuleErrorStatus *****************
 47612 ;; Defined at:
 47613 ;;		line 632 in file "../../VLCBlib_PIC/mns.c"
 47614 ;; Parameters:    Size  Location     Type
 47615 ;;		None
 47616 ;; Auto vars:     Size  Location     Type
 47617 ;;		None
 47618 ;; Return value:  Size  Location     Type
 47619 ;;                  1    wreg      void 
 47620 ;; Registers used:
 47621 ;;		wreg, status,2, status,0
 47622 ;; Tracked objects:
 47623 ;;		On entry : 0/0
 47624 ;;		On exit  : 0/0
 47625 ;;		Unchanged: 0/0
 47626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47631 ;;Total ram usage:        0 bytes
 47632 ;; Hardware stack levels used: 1
 47633 ;; This function calls:
 47634 ;;		Nothing
 47635 ;; This function is called by:
 47636 ;;		i2_checkTxFifo
 47637 ;;		i2_checkCANTimeout
 47638 ;;		i2_canTxError
 47639 ;;		i2_canFillRxFifo
 47640 ;; This function uses a non-reentrant model
 47641 ;;
 47642                           
 47643                           	psect	text223
 47644   00C5F2                     __ptext223:
 47645                           	callstack 0
 47646   00C5F2                     i2_updateModuleErrorStatus:
 47647                           	callstack 3
 47648                           
 47649                           ;../../VLCBlib_PIC/mns.c: 633:     if (mnsDiagnostics[0x01].asBytes.lo < 0xFF) {
 47650                           
 47651                           ;incstack = 0
 47652   00C5F2  0101               	movlb	1	; () banked
 47653   00C5F4  298F               	incf	(_mnsDiagnostics+2)& (0+255),w,b
 47654   00C5F6  B4D8               	btfsc	status,2,c
 47655   00C5F8  0012               	return	
 47656                           
 47657                           ; BSR set to: 1
 47658                           ;../../VLCBlib_PIC/mns.c: 634:         mnsDiagnostics[0x01].asBytes.lo++;
 47659   00C5FA  2B8F               	incf	(_mnsDiagnostics+2)& (0+255),f,b
 47660                           
 47661                           ; BSR set to: 1
 47662   00C5FC  0012               	return		;funcret
 47663   00C5FE                     __end_ofi2_updateModuleErrorStatus:
 47664                           	callstack 0
 47665                           
 47666 ;; *************** function i2_getNextWriteMessage *****************
 47667 ;; Defined at:
 47668 ;;		line 80 in file "../../VLCBlib_PIC/messageQueue.c"
 47669 ;; Parameters:    Size  Location     Type
 47670 ;;  q               1    0[COMRAM] PTR struct MessageQueue
 47671 ;;		 -> rxQueue(5), 
 47672 ;; Auto vars:     Size  Location     Type
 47673 ;;  wr              1   11[COMRAM] unsigned char 
 47674 ;; Return value:  Size  Location     Type
 47675 ;;                  2    0[COMRAM] PTR struct Message
 47676 ;; Registers used:
 47677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 47678 ;; Tracked objects:
 47679 ;;		On entry : 0/0
 47680 ;;		On exit  : 0/0
 47681 ;;		Unchanged: 0/0
 47682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47683 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47684 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47685 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47686 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47687 ;;Total ram usage:       12 bytes
 47688 ;; Hardware stack levels used: 1
 47689 ;; This function calls:
 47690 ;;		Nothing
 47691 ;; This function is called by:
 47692 ;;		i2_checkTxFifo
 47693 ;;		i2_canFillRxFifo
 47694 ;; This function uses a non-reentrant model
 47695 ;;
 47696                           
 47697                           	psect	text224
 47698   008DF6                     __ptext224:
 47699                           	callstack 0
 47700   008DF6                     i2_getNextWriteMessage:
 47701                           	callstack 3
 47702                           
 47703                           ; BSR set to: 1
 47704                           ;incstack = 0
 47705   008DF6  5001               	movf	i2getNextWriteMessage@q^0,w,c
 47706   008DF8  6ED9               	movwf	fsr2l,c
 47707   008DFA  6ADA               	clrf	fsr2h,c
 47708   008DFC  0E02               	movlw	2
 47709   008DFE  26D9               	addwf	fsr2l,f,c
 47710   008E00  50DF               	movf	indf2,w,c
 47711   008E02  6E03               	movwf	??i2_getNextWriteMessage^0,c
 47712   008E04  6A04               	clrf	(??i2_getNextWriteMessage+1)^0,c
 47713   008E06  5001               	movf	i2getNextWriteMessage@q^0,w,c
 47714   008E08  6ED9               	movwf	fsr2l,c
 47715   008E0A  6ADA               	clrf	fsr2h,c
 47716   008E0C  0E04               	movlw	4
 47717   008E0E  26D9               	addwf	fsr2l,f,c
 47718   008E10  50DF               	movf	indf2,w,c
 47719   008E12  6E05               	movwf	(??i2_getNextWriteMessage+2)^0,c
 47720   008E14  0EFF               	movlw	255
 47721   008E16  2405               	addwf	(??i2_getNextWriteMessage+2)^0,w,c
 47722   008E18  6E06               	movwf	(??i2_getNextWriteMessage+3)^0,c
 47723   008E1A  6A07               	clrf	(??i2_getNextWriteMessage+4)^0,c
 47724   008E1C  0EFF               	movlw	255
 47725   008E1E  2207               	addwfc	(??i2_getNextWriteMessage+4)^0,f,c
 47726   008E20  5001               	movf	i2getNextWriteMessage@q^0,w,c
 47727   008E22  6ED9               	movwf	fsr2l,c
 47728   008E24  6ADA               	clrf	fsr2h,c
 47729   008E26  0E03               	movlw	3
 47730   008E28  26D9               	addwf	fsr2l,f,c
 47731   008E2A  50DF               	movf	indf2,w,c
 47732   008E2C  6E08               	movwf	(??i2_getNextWriteMessage+5)^0,c
 47733   008E2E  6A09               	clrf	(??i2_getNextWriteMessage+6)^0,c
 47734   008E30  0E01               	movlw	1
 47735   008E32  2608               	addwf	(??i2_getNextWriteMessage+5)^0,f,c
 47736   008E34  0E00               	movlw	0
 47737   008E36  2209               	addwfc	(??i2_getNextWriteMessage+6)^0,f,c
 47738   008E38  5006               	movf	(??i2_getNextWriteMessage+3)^0,w,c
 47739   008E3A  1408               	andwf	(??i2_getNextWriteMessage+5)^0,w,c
 47740   008E3C  6E0A               	movwf	(??i2_getNextWriteMessage+7)^0,c
 47741   008E3E  5007               	movf	(??i2_getNextWriteMessage+4)^0,w,c
 47742   008E40  1409               	andwf	(??i2_getNextWriteMessage+6)^0,w,c
 47743   008E42  6E0B               	movwf	(??i2_getNextWriteMessage+8)^0,c
 47744   008E44  5003               	movf	??i2_getNextWriteMessage^0,w,c
 47745   008E46  180A               	xorwf	(??i2_getNextWriteMessage+7)^0,w,c
 47746   008E48  E109               	bnz	i2l12921
 47747   008E4A  5004               	movf	(??i2_getNextWriteMessage+1)^0,w,c
 47748   008E4C  180B               	xorwf	(??i2_getNextWriteMessage+8)^0,w,c
 47749   008E4E  A4D8               	btfss	status,2,c
 47750   008E50  D005               	goto	i2l12921
 47751   008E52  0E00               	movlw	0
 47752   008E54  6E01               	movwf	?i2_getNextWriteMessage^0,c
 47753   008E56  0E00               	movlw	0
 47754   008E58  6E02               	movwf	(?i2_getNextWriteMessage+1)^0,c
 47755   008E5A  0012               	return	
 47756   008E5C                     i2l12921:
 47757   008E5C  5001               	movf	i2getNextWriteMessage@q^0,w,c
 47758   008E5E  6ED9               	movwf	fsr2l,c
 47759   008E60  6ADA               	clrf	fsr2h,c
 47760   008E62  0E03               	movlw	3
 47761   008E64  26D9               	addwf	fsr2l,f,c
 47762   008E66  50DF               	movf	indf2,w,c
 47763   008E68  6E0C               	movwf	i2getNextWriteMessage@wr^0,c
 47764   008E6A  5001               	movf	i2getNextWriteMessage@q^0,w,c
 47765   008E6C  6ED9               	movwf	fsr2l,c
 47766   008E6E  6ADA               	clrf	fsr2h,c
 47767   008E70  0E03               	movlw	3
 47768   008E72  26D9               	addwf	fsr2l,f,c
 47769   008E74  2ADF               	incf	indf2,f,c
 47770   008E76  5001               	movf	i2getNextWriteMessage@q^0,w,c
 47771   008E78  6ED9               	movwf	fsr2l,c
 47772   008E7A  6ADA               	clrf	fsr2h,c
 47773   008E7C  0E04               	movlw	4
 47774   008E7E  26D9               	addwf	fsr2l,f,c
 47775   008E80  5001               	movf	i2getNextWriteMessage@q^0,w,c
 47776   008E82  6EE1               	movwf	fsr1l,c
 47777   008E84  6AE2               	clrf	fsr1h,c
 47778   008E86  0E03               	movlw	3
 47779   008E88  26E1               	addwf	fsr1l,f,c
 47780   008E8A  50DE               	movf	postinc2,w,c
 47781   008E8C  5CE6               	subwf	postinc1,w,c
 47782   008E8E  A0D8               	btfss	status,0,c
 47783   008E90  D006               	goto	i2l12927
 47784   008E92  5001               	movf	i2getNextWriteMessage@q^0,w,c
 47785   008E94  6ED9               	movwf	fsr2l,c
 47786   008E96  6ADA               	clrf	fsr2h,c
 47787   008E98  0E03               	movlw	3
 47788   008E9A  26D9               	addwf	fsr2l,f,c
 47789   008E9C  6ADF               	clrf	indf2,c
 47790   008E9E                     i2l12927:
 47791   008E9E  500C               	movf	i2getNextWriteMessage@wr^0,w,c
 47792   008EA0  0D09               	mullw	9
 47793   008EA2  CFF3 F003          	movff	prodl,??i2_getNextWriteMessage
 47794   008EA6  CFF4 F004          	movff	prodh,??i2_getNextWriteMessage+1
 47795   008EAA  5001               	movf	i2getNextWriteMessage@q^0,w,c
 47796   008EAC  6ED9               	movwf	fsr2l,c
 47797   008EAE  6ADA               	clrf	fsr2h,c
 47798   008EB0  CFDE F005          	movff	postinc2,??i2_getNextWriteMessage+2
 47799   008EB4  CFDD F006          	movff	postdec2,??i2_getNextWriteMessage+3
 47800   008EB8  5003               	movf	??i2_getNextWriteMessage^0,w,c
 47801   008EBA  2405               	addwf	(??i2_getNextWriteMessage+2)^0,w,c
 47802   008EBC  6E01               	movwf	?i2_getNextWriteMessage^0,c
 47803   008EBE  5004               	movf	(??i2_getNextWriteMessage+1)^0,w,c
 47804   008EC0  2006               	addwfc	(??i2_getNextWriteMessage+3)^0,w,c
 47805   008EC2  6E02               	movwf	(?i2_getNextWriteMessage+1)^0,c
 47806   008EC4  0012               	return		;funcret
 47807   008EC6                     __end_ofi2_getNextWriteMessage:
 47808                           	callstack 0
 47809                           
 47810 ;; *************** function i2_getBufferPointer *****************
 47811 ;; Defined at:
 47812 ;;		line 667 in file "../../VLCBlib_PIC/can18_ecan.c"
 47813 ;; Parameters:    Size  Location     Type
 47814 ;;  b               1    wreg     unsigned char 
 47815 ;; Auto vars:     Size  Location     Type
 47816 ;;  b               1    2[COMRAM] unsigned char 
 47817 ;; Return value:  Size  Location     Type
 47818 ;;                  2    0[COMRAM] PTR unsigned char 
 47819 ;; Registers used:
 47820 ;;		wreg, status,2, status,0
 47821 ;; Tracked objects:
 47822 ;;		On entry : 0/0
 47823 ;;		On exit  : 0/0
 47824 ;;		Unchanged: 0/0
 47825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47826 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47827 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47829 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47830 ;;Total ram usage:        3 bytes
 47831 ;; Hardware stack levels used: 1
 47832 ;; This function calls:
 47833 ;;		Nothing
 47834 ;; This function is called by:
 47835 ;;		i2_canFillRxFifo
 47836 ;; This function uses a non-reentrant model
 47837 ;;
 47838                           
 47839                           	psect	text225
 47840   00A2E4                     __ptext225:
 47841                           	callstack 0
 47842   00A2E4                     i2_getBufferPointer:
 47843                           	callstack 3
 47844                           
 47845                           ;incstack = 0
 47846                           ;i2getBufferPointer@b stored from wreg
 47847   00A2E4  6E03               	movwf	i2getBufferPointer@b^0,c
 47848                           
 47849                           ;../../VLCBlib_PIC/can18_ecan.c: 668:     switch (b) {
 47850   00A2E6  D02D               	goto	i2l14043
 47851   00A2E8                     i2l14005:
 47852                           
 47853                           ;../../VLCBlib_PIC/can18_ecan.c: 670:             return (uint8_t*) & RXB0CON;
 47854   00A2E8  0E60               	movlw	96
 47855   00A2EA  6E01               	movwf	?i2_getBufferPointer^0,c
 47856   00A2EC  0E0F               	movlw	15
 47857   00A2EE  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 47858   00A2F0  0012               	return	
 47859   00A2F2                     i2l14009:
 47860                           
 47861                           ;../../VLCBlib_PIC/can18_ecan.c: 672:             return (uint8_t*) & RXB1CON;
 47862   00A2F2  0E30               	movlw	48
 47863   00A2F4  6E01               	movwf	?i2_getBufferPointer^0,c
 47864   00A2F6  0E0F               	movlw	15
 47865   00A2F8  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 47866   00A2FA  0012               	return	
 47867   00A2FC                     i2l14013:
 47868                           
 47869                           ;../../VLCBlib_PIC/can18_ecan.c: 674:             return (uint8_t*) & B0CON;
 47870   00A2FC  0E80               	movlw	128
 47871   00A2FE  6E01               	movwf	?i2_getBufferPointer^0,c
 47872   00A300  0E0E               	movlw	14
 47873   00A302  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 47874   00A304  0012               	return	
 47875   00A306                     i2l14017:
 47876                           
 47877                           ;../../VLCBlib_PIC/can18_ecan.c: 676:             return (uint8_t*) & B1CON;
 47878   00A306  0E90               	movlw	144
 47879   00A308  6E01               	movwf	?i2_getBufferPointer^0,c
 47880   00A30A  0E0E               	movlw	14
 47881   00A30C  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 47882   00A30E  0012               	return	
 47883   00A310                     i2l14021:
 47884                           
 47885                           ;../../VLCBlib_PIC/can18_ecan.c: 678:             return (uint8_t*) & B2CON;
 47886   00A310  0EA0               	movlw	160
 47887   00A312  6E01               	movwf	?i2_getBufferPointer^0,c
 47888   00A314  0E0E               	movlw	14
 47889   00A316  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 47890   00A318  0012               	return	
 47891   00A31A                     i2l14025:
 47892                           
 47893                           ;../../VLCBlib_PIC/can18_ecan.c: 680:             return (uint8_t*) & B3CON;
 47894   00A31A  0EB0               	movlw	176
 47895   00A31C  6E01               	movwf	?i2_getBufferPointer^0,c
 47896   00A31E  0E0E               	movlw	14
 47897   00A320  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 47898   00A322  0012               	return	
 47899   00A324                     i2l14029:
 47900                           
 47901                           ;../../VLCBlib_PIC/can18_ecan.c: 682:             return (uint8_t*) & B4CON;
 47902   00A324  0EC0               	movlw	192
 47903   00A326  6E01               	movwf	?i2_getBufferPointer^0,c
 47904   00A328  0E0E               	movlw	14
 47905   00A32A  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 47906   00A32C  0012               	return	
 47907   00A32E                     i2l14033:
 47908                           
 47909                           ;../../VLCBlib_PIC/can18_ecan.c: 684:             return (uint8_t*) & B5CON;
 47910   00A32E  0ED0               	movlw	208
 47911   00A330  6E01               	movwf	?i2_getBufferPointer^0,c
 47912   00A332  0E0E               	movlw	14
 47913   00A334  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 47914   00A336  0012               	return	
 47915   00A338                     i2l14037:
 47916                           
 47917                           ;../../VLCBlib_PIC/can18_ecan.c: 686:             return ((void*)0);
 47918   00A338  0E00               	movlw	0
 47919   00A33A  6E01               	movwf	?i2_getBufferPointer^0,c
 47920   00A33C  0E00               	movlw	0
 47921   00A33E  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 47922   00A340  0012               	return	
 47923   00A342                     i2l14043:
 47924   00A342  5003               	movf	i2getBufferPointer@b^0,w,c
 47925                           
 47926                           ; Switch size 1, requested type "simple"
 47927                           ; Number of cases is 8, Range of values is 0 to 7
 47928                           ; switch strategies available:
 47929                           ; Name         Instructions Cycles
 47930                           ; simple_byte           25    13 (average)
 47931                           ;	Chosen strategy is simple_byte
 47932   00A344  0A00               	xorlw	0	; case 0
 47933   00A346  B4D8               	btfsc	status,2,c
 47934   00A348  D7CF               	goto	i2l14005
 47935   00A34A  0A01               	xorlw	1	; case 1
 47936   00A34C  B4D8               	btfsc	status,2,c
 47937   00A34E  D7D1               	goto	i2l14009
 47938   00A350  0A03               	xorlw	3	; case 2
 47939   00A352  B4D8               	btfsc	status,2,c
 47940   00A354  D7D3               	goto	i2l14013
 47941   00A356  0A01               	xorlw	1	; case 3
 47942   00A358  B4D8               	btfsc	status,2,c
 47943   00A35A  D7D5               	goto	i2l14017
 47944   00A35C  0A07               	xorlw	7	; case 4
 47945   00A35E  B4D8               	btfsc	status,2,c
 47946   00A360  D7D7               	goto	i2l14021
 47947   00A362  0A01               	xorlw	1	; case 5
 47948   00A364  B4D8               	btfsc	status,2,c
 47949   00A366  D7D9               	goto	i2l14025
 47950   00A368  0A03               	xorlw	3	; case 6
 47951   00A36A  B4D8               	btfsc	status,2,c
 47952   00A36C  D7DB               	goto	i2l14029
 47953   00A36E  0A01               	xorlw	1	; case 7
 47954   00A370  B4D8               	btfsc	status,2,c
 47955   00A372  D7DD               	goto	i2l14033
 47956   00A374  D7E1               	goto	i2l14037
 47957   00A376                     __end_ofi2_getBufferPointer:
 47958                           	callstack 0
 47959                           
 47960 ;; *************** function _APP_highIsr *****************
 47961 ;; Defined at:
 47962 ;;		line 711 in file "../main.c"
 47963 ;; Parameters:    Size  Location     Type
 47964 ;;		None
 47965 ;; Auto vars:     Size  Location     Type
 47966 ;;		None
 47967 ;; Return value:  Size  Location     Type
 47968 ;;                  1    wreg      void 
 47969 ;; Registers used:
 47970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 47971 ;; Tracked objects:
 47972 ;;		On entry : 0/0
 47973 ;;		On exit  : 0/0
 47974 ;;		Unchanged: 0/0
 47975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47980 ;;Total ram usage:        0 bytes
 47981 ;; Hardware stack levels used: 1
 47982 ;; Hardware stack levels required when called: 2
 47983 ;; This function calls:
 47984 ;;		_timer1DoneInterruptHandler
 47985 ;;		_timer3DoneInterruptHandler
 47986 ;; This function is called by:
 47987 ;;		_highIsr
 47988 ;; This function uses a non-reentrant model
 47989 ;;
 47990                           
 47991                           	psect	text226
 47992   00C55C                     __ptext226:
 47993                           	callstack 0
 47994   00C55C                     _APP_highIsr:
 47995                           	callstack 3
 47996                           
 47997                           ;../main.c: 714:     if (PIR1bits.TMR1IF) {
 47998                           
 47999                           ;incstack = 0
 48000   00C55C  A09E               	btfss	158,0,c	;volatile
 48001   00C55E  D003               	goto	i2l15941
 48002                           
 48003                           ;../main.c: 715:         timer1DoneInterruptHandler();
 48004   00C560  EC34  F062         	call	_timer1DoneInterruptHandler	;wreg free
 48005                           
 48006                           ;../main.c: 716:         PIR1bits.TMR1IF = 0;
 48007   00C564  909E               	bcf	158,0,c	;volatile
 48008   00C566                     i2l15941:
 48009                           
 48010                           ;../main.c: 718:     if (PIR2bits.TMR3IF) {
 48011   00C566  A2A1               	btfss	161,1,c	;volatile
 48012   00C568  0012               	return	
 48013                           
 48014                           ;../main.c: 719:         timer3DoneInterruptHandler();
 48015   00C56A  ECE3  F061         	call	_timer3DoneInterruptHandler	;wreg free
 48016                           
 48017                           ;../main.c: 720:         PIR2bits.TMR3IF = 0;
 48018   00C56E  92A1               	bcf	161,1,c	;volatile
 48019   00C570  0012               	return		;funcret
 48020   00C572                     __end_of_APP_highIsr:
 48021                           	callstack 0
 48022                           
 48023 ;; *************** function _timer3DoneInterruptHandler *****************
 48024 ;; Defined at:
 48025 ;;		line 240 in file "../servo.c"
 48026 ;; Parameters:    Size  Location     Type
 48027 ;;		None
 48028 ;; Auto vars:     Size  Location     Type
 48029 ;;		None
 48030 ;; Return value:  Size  Location     Type
 48031 ;;                  1    wreg      void 
 48032 ;; Registers used:
 48033 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 48034 ;; Tracked objects:
 48035 ;;		On entry : 0/0
 48036 ;;		On exit  : 0/0
 48037 ;;		Unchanged: 0/0
 48038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48043 ;;Total ram usage:        0 bytes
 48044 ;; Hardware stack levels used: 1
 48045 ;; Hardware stack levels required when called: 1
 48046 ;; This function calls:
 48047 ;;		i2_getNV
 48048 ;;		i2_setOutputPin
 48049 ;; This function is called by:
 48050 ;;		_APP_highIsr
 48051 ;; This function uses a non-reentrant model
 48052 ;;
 48053                           
 48054                           	psect	text227
 48055   00C3C6                     __ptext227:
 48056                           	callstack 0
 48057   00C3C6                     _timer3DoneInterruptHandler:
 48058                           	callstack 3
 48059                           
 48060                           ;../servo.c: 241:     T3CONbits.TMR3ON = 0;
 48061                           
 48062                           ;incstack = 0
 48063   00C3C6  90B1               	bcf	177,0,c	;volatile
 48064                           
 48065                           ;../servo.c: 242:     setOutputPin(servoInBlock+8, (uint8_t)getNV((16 + 7*(servoInBlock+
      +                          8) + 1)) & 0x20);
 48066   00C3C8  0100               	movlb	0	; () banked
 48067   00C3CA  51C9               	movf	_servoInBlock& (0+255),w,b
 48068   00C3CC  0D07               	mullw	7
 48069   00C3CE  50F3               	movf	243,w,c
 48070   00C3D0  0F49               	addlw	73
 48071   00C3D2  ECC9  F05E         	call	i2_getNV
 48072   00C3D6  5001               	movf	?i2_getNV^0,w,c
 48073   00C3D8  0B20               	andlw	32
 48074   00C3DA  6E05               	movwf	i2setOutputPin@state^0,c
 48075   00C3DC  0100               	movlb	0	; () banked
 48076   00C3DE  51C9               	movf	_servoInBlock& (0+255),w,b
 48077   00C3E0  0F08               	addlw	8
 48078   00C3E2  EC67  F038         	call	i2_setOutputPin
 48079   00C3E6  0012               	return		;funcret
 48080   00C3E8                     __end_of_timer3DoneInterruptHandler:
 48081                           	callstack 0
 48082                           
 48083 ;; *************** function _timer1DoneInterruptHandler *****************
 48084 ;; Defined at:
 48085 ;;		line 235 in file "../servo.c"
 48086 ;; Parameters:    Size  Location     Type
 48087 ;;		None
 48088 ;; Auto vars:     Size  Location     Type
 48089 ;;		None
 48090 ;; Return value:  Size  Location     Type
 48091 ;;                  1    wreg      void 
 48092 ;; Registers used:
 48093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 48094 ;; Tracked objects:
 48095 ;;		On entry : 0/0
 48096 ;;		On exit  : 0/0
 48097 ;;		Unchanged: 0/0
 48098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48103 ;;Total ram usage:        0 bytes
 48104 ;; Hardware stack levels used: 1
 48105 ;; Hardware stack levels required when called: 1
 48106 ;; This function calls:
 48107 ;;		i2_getNV
 48108 ;;		i2_setOutputPin
 48109 ;; This function is called by:
 48110 ;;		_APP_highIsr
 48111 ;; This function uses a non-reentrant model
 48112 ;;
 48113                           
 48114                           	psect	text228
 48115   00C468                     __ptext228:
 48116                           	callstack 0
 48117   00C468                     _timer1DoneInterruptHandler:
 48118                           	callstack 3
 48119                           
 48120                           ;../servo.c: 236:     T1CONbits.TMR1ON = 0;
 48121                           
 48122                           ;incstack = 0
 48123   00C468  90CD               	bcf	205,0,c	;volatile
 48124                           
 48125                           ;../servo.c: 237:     setOutputPin(servoInBlock, (uint8_t)getNV((16 + 7*(servoInBlock) +
      +                           1)) & 0x20);
 48126   00C46A  0100               	movlb	0	; () banked
 48127   00C46C  51C9               	movf	_servoInBlock& (0+255),w,b
 48128   00C46E  0D07               	mullw	7
 48129   00C470  50F3               	movf	243,w,c
 48130   00C472  0F11               	addlw	17
 48131   00C474  ECC9  F05E         	call	i2_getNV
 48132   00C478  5001               	movf	?i2_getNV^0,w,c
 48133   00C47A  0B20               	andlw	32
 48134   00C47C  6E05               	movwf	i2setOutputPin@state^0,c
 48135   00C47E  0100               	movlb	0	; () banked
 48136   00C480  51C9               	movf	_servoInBlock& (0+255),w,b
 48137   00C482  EC67  F038         	call	i2_setOutputPin
 48138   00C486  0012               	return		;funcret
 48139   00C488                     __end_of_timer1DoneInterruptHandler:
 48140                           	callstack 0
 48141                           
 48142 ;; *************** function i2_setOutputPin *****************
 48143 ;; Defined at:
 48144 ;;		line 256 in file "../digitalOut.c"
 48145 ;; Parameters:    Size  Location     Type
 48146 ;;  io              1    wreg     unsigned char 
 48147 ;;  state           1    4[COMRAM] enum E12760
 48148 ;; Auto vars:     Size  Location     Type
 48149 ;;  io              1    7[COMRAM] unsigned char 
 48150 ;; Return value:  Size  Location     Type
 48151 ;;                  1    wreg      void 
 48152 ;; Registers used:
 48153 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 48154 ;; Tracked objects:
 48155 ;;		On entry : 0/0
 48156 ;;		On exit  : 0/0
 48157 ;;		Unchanged: 0/0
 48158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48159 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48160 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48161 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48162 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48163 ;;Total ram usage:        4 bytes
 48164 ;; Hardware stack levels used: 1
 48165 ;; This function calls:
 48166 ;;		Nothing
 48167 ;; This function is called by:
 48168 ;;		_timer1DoneInterruptHandler
 48169 ;;		_timer3DoneInterruptHandler
 48170 ;; This function uses a non-reentrant model
 48171 ;;
 48172                           
 48173                           	psect	text229
 48174   0070CE                     __ptext229:
 48175                           	callstack 0
 48176   0070CE                     i2_setOutputPin:
 48177                           	callstack 3
 48178                           
 48179                           ;incstack = 0
 48180                           ;i2setOutputPin@io stored from wreg
 48181   0070CE  6E08               	movwf	i2setOutputPin@io^0,c
 48182                           
 48183                           ;../digitalOut.c: 257:     switch (configs[io].port) {
 48184   0070D0  D0BA               	goto	i2l13943
 48185   0070D2                     i2l13923:
 48186                           
 48187                           ;../digitalOut.c: 259:             if (state) {
 48188   0070D2  5005               	movf	i2setOutputPin@state^0,w,c
 48189   0070D4  B4D8               	btfsc	status,2,c
 48190   0070D6  D01D               	goto	i2l13927
 48191                           
 48192                           ;../digitalOut.c: 261:                LATA |= (1<<configs[io].no);
 48193   0070D8  5008               	movf	i2setOutputPin@io^0,w,c
 48194   0070DA  0D04               	mullw	4
 48195   0070DC  0E02               	movlw	2
 48196   0070DE  26F3               	addwf	243,f,c
 48197   0070E0  0E00               	movlw	0
 48198   0070E2  22F4               	addwfc	244,f,c
 48199   0070E4  0E29               	movlw	low _configs
 48200   0070E6  24F3               	addwf	243,w,c
 48201   0070E8  6EF6               	movwf	tblptrl,c
 48202   0070EA  0EEE               	movlw	high _configs
 48203   0070EC  20F4               	addwfc	244,w,c
 48204   0070EE  6EF7               	movwf	tblptrh,c
 48205   0070F0                     	if	1	;There are 3 active tblptr bytes
 48206   0070F0  6AF8               	clrf	tblptru,c
 48207   0070F2  0E00               	movlw	low (__mediumconst shr (0+16))
 48208   0070F4  22F8               	addwfc	tblptru,f,c
 48209   0070F6                     	endif
 48210   0070F6  0008               	tblrd		*
 48211   0070F8  CFF5 F006          	movff	tablat,??i2_setOutputPin
 48212   0070FC  0E01               	movlw	1
 48213   0070FE  6E07               	movwf	(??i2_setOutputPin+1)^0,c
 48214   007100  2A06               	incf	??i2_setOutputPin^0,f,c
 48215   007102  D002               	goto	i2u1282_44
 48216   007104                     i2u1282_45:
 48217   007104  90D8               	bcf	status,0,c
 48218   007106  3607               	rlcf	(??i2_setOutputPin+1)^0,f,c
 48219   007108                     i2u1282_44:
 48220   007108  2E06               	decfsz	??i2_setOutputPin^0,f,c
 48221   00710A  D7FC               	goto	i2u1282_45
 48222   00710C  5007               	movf	(??i2_setOutputPin+1)^0,w,c
 48223   00710E  1289               	iorwf	137,f,c	;volatile
 48224                           
 48225                           ;../digitalOut.c: 262:             } else {
 48226   007110  0012               	return	
 48227   007112                     i2l13927:
 48228                           
 48229                           ;../digitalOut.c: 264:                 LATA &= ~(1<<configs[io].no);
 48230   007112  5008               	movf	i2setOutputPin@io^0,w,c
 48231   007114  0D04               	mullw	4
 48232   007116  0E02               	movlw	2
 48233   007118  26F3               	addwf	243,f,c
 48234   00711A  0E00               	movlw	0
 48235   00711C  22F4               	addwfc	244,f,c
 48236   00711E  0E29               	movlw	low _configs
 48237   007120  24F3               	addwf	243,w,c
 48238   007122  6EF6               	movwf	tblptrl,c
 48239   007124  0EEE               	movlw	high _configs
 48240   007126  20F4               	addwfc	244,w,c
 48241   007128  6EF7               	movwf	tblptrh,c
 48242   00712A                     	if	1	;There are 3 active tblptr bytes
 48243   00712A  6AF8               	clrf	tblptru,c
 48244   00712C  0E00               	movlw	low (__mediumconst shr (0+16))
 48245   00712E  22F8               	addwfc	tblptru,f,c
 48246   007130                     	endif
 48247   007130  0008               	tblrd		*
 48248   007132  CFF5 F006          	movff	tablat,??i2_setOutputPin
 48249   007136  0E01               	movlw	1
 48250   007138  6E07               	movwf	(??i2_setOutputPin+1)^0,c
 48251   00713A  2A06               	incf	??i2_setOutputPin^0,f,c
 48252   00713C  D002               	goto	i2u1283_44
 48253   00713E                     i2u1283_45:
 48254   00713E  90D8               	bcf	status,0,c
 48255   007140  3607               	rlcf	(??i2_setOutputPin+1)^0,f,c
 48256   007142                     i2u1283_44:
 48257   007142  2E06               	decfsz	??i2_setOutputPin^0,f,c
 48258   007144  D7FC               	goto	i2u1283_45
 48259   007146  5007               	movf	(??i2_setOutputPin+1)^0,w,c
 48260   007148  0AFF               	xorlw	255
 48261   00714A  1689               	andwf	137,f,c	;volatile
 48262   00714C  0012               	return	
 48263   00714E                     i2l13929:
 48264                           
 48265                           ;../digitalOut.c: 268:             if (state) {
 48266   00714E  5005               	movf	i2setOutputPin@state^0,w,c
 48267   007150  B4D8               	btfsc	status,2,c
 48268   007152  D01D               	goto	i2l13933
 48269                           
 48270                           ;../digitalOut.c: 270:                 LATB |= (1<<configs[io].no);
 48271   007154  5008               	movf	i2setOutputPin@io^0,w,c
 48272   007156  0D04               	mullw	4
 48273   007158  0E02               	movlw	2
 48274   00715A  26F3               	addwf	243,f,c
 48275   00715C  0E00               	movlw	0
 48276   00715E  22F4               	addwfc	244,f,c
 48277   007160  0E29               	movlw	low _configs
 48278   007162  24F3               	addwf	243,w,c
 48279   007164  6EF6               	movwf	tblptrl,c
 48280   007166  0EEE               	movlw	high _configs
 48281   007168  20F4               	addwfc	244,w,c
 48282   00716A  6EF7               	movwf	tblptrh,c
 48283   00716C                     	if	1	;There are 3 active tblptr bytes
 48284   00716C  6AF8               	clrf	tblptru,c
 48285   00716E  0E00               	movlw	low (__mediumconst shr (0+16))
 48286   007170  22F8               	addwfc	tblptru,f,c
 48287   007172                     	endif
 48288   007172  0008               	tblrd		*
 48289   007174  CFF5 F006          	movff	tablat,??i2_setOutputPin
 48290   007178  0E01               	movlw	1
 48291   00717A  6E07               	movwf	(??i2_setOutputPin+1)^0,c
 48292   00717C  2A06               	incf	??i2_setOutputPin^0,f,c
 48293   00717E  D002               	goto	i2u1285_44
 48294   007180                     i2u1285_45:
 48295   007180  90D8               	bcf	status,0,c
 48296   007182  3607               	rlcf	(??i2_setOutputPin+1)^0,f,c
 48297   007184                     i2u1285_44:
 48298   007184  2E06               	decfsz	??i2_setOutputPin^0,f,c
 48299   007186  D7FC               	goto	i2u1285_45
 48300   007188  5007               	movf	(??i2_setOutputPin+1)^0,w,c
 48301   00718A  128A               	iorwf	138,f,c	;volatile
 48302                           
 48303                           ;../digitalOut.c: 271:             } else {
 48304   00718C  0012               	return	
 48305   00718E                     i2l13933:
 48306                           
 48307                           ;../digitalOut.c: 273:                 LATB &= ~(1<<configs[io].no);
 48308   00718E  5008               	movf	i2setOutputPin@io^0,w,c
 48309   007190  0D04               	mullw	4
 48310   007192  0E02               	movlw	2
 48311   007194  26F3               	addwf	243,f,c
 48312   007196  0E00               	movlw	0
 48313   007198  22F4               	addwfc	244,f,c
 48314   00719A  0E29               	movlw	low _configs
 48315   00719C  24F3               	addwf	243,w,c
 48316   00719E  6EF6               	movwf	tblptrl,c
 48317   0071A0  0EEE               	movlw	high _configs
 48318   0071A2  20F4               	addwfc	244,w,c
 48319   0071A4  6EF7               	movwf	tblptrh,c
 48320   0071A6                     	if	1	;There are 3 active tblptr bytes
 48321   0071A6  6AF8               	clrf	tblptru,c
 48322   0071A8  0E00               	movlw	low (__mediumconst shr (0+16))
 48323   0071AA  22F8               	addwfc	tblptru,f,c
 48324   0071AC                     	endif
 48325   0071AC  0008               	tblrd		*
 48326   0071AE  CFF5 F006          	movff	tablat,??i2_setOutputPin
 48327   0071B2  0E01               	movlw	1
 48328   0071B4  6E07               	movwf	(??i2_setOutputPin+1)^0,c
 48329   0071B6  2A06               	incf	??i2_setOutputPin^0,f,c
 48330   0071B8  D002               	goto	i2u1286_44
 48331   0071BA                     i2u1286_45:
 48332   0071BA  90D8               	bcf	status,0,c
 48333   0071BC  3607               	rlcf	(??i2_setOutputPin+1)^0,f,c
 48334   0071BE                     i2u1286_44:
 48335   0071BE  2E06               	decfsz	??i2_setOutputPin^0,f,c
 48336   0071C0  D7FC               	goto	i2u1286_45
 48337   0071C2  5007               	movf	(??i2_setOutputPin+1)^0,w,c
 48338   0071C4  0AFF               	xorlw	255
 48339   0071C6  168A               	andwf	138,f,c	;volatile
 48340   0071C8  0012               	return	
 48341   0071CA                     i2l13935:
 48342                           
 48343                           ;../digitalOut.c: 277:             if (state) {
 48344   0071CA  5005               	movf	i2setOutputPin@state^0,w,c
 48345   0071CC  B4D8               	btfsc	status,2,c
 48346   0071CE  D01D               	goto	i2l13939
 48347                           
 48348                           ;../digitalOut.c: 279:                 LATC |= (1<<configs[io].no);
 48349   0071D0  5008               	movf	i2setOutputPin@io^0,w,c
 48350   0071D2  0D04               	mullw	4
 48351   0071D4  0E02               	movlw	2
 48352   0071D6  26F3               	addwf	243,f,c
 48353   0071D8  0E00               	movlw	0
 48354   0071DA  22F4               	addwfc	244,f,c
 48355   0071DC  0E29               	movlw	low _configs
 48356   0071DE  24F3               	addwf	243,w,c
 48357   0071E0  6EF6               	movwf	tblptrl,c
 48358   0071E2  0EEE               	movlw	high _configs
 48359   0071E4  20F4               	addwfc	244,w,c
 48360   0071E6  6EF7               	movwf	tblptrh,c
 48361   0071E8                     	if	1	;There are 3 active tblptr bytes
 48362   0071E8  6AF8               	clrf	tblptru,c
 48363   0071EA  0E00               	movlw	low (__mediumconst shr (0+16))
 48364   0071EC  22F8               	addwfc	tblptru,f,c
 48365   0071EE                     	endif
 48366   0071EE  0008               	tblrd		*
 48367   0071F0  CFF5 F006          	movff	tablat,??i2_setOutputPin
 48368   0071F4  0E01               	movlw	1
 48369   0071F6  6E07               	movwf	(??i2_setOutputPin+1)^0,c
 48370   0071F8  2A06               	incf	??i2_setOutputPin^0,f,c
 48371   0071FA  D002               	goto	i2u1288_44
 48372   0071FC                     i2u1288_45:
 48373   0071FC  90D8               	bcf	status,0,c
 48374   0071FE  3607               	rlcf	(??i2_setOutputPin+1)^0,f,c
 48375   007200                     i2u1288_44:
 48376   007200  2E06               	decfsz	??i2_setOutputPin^0,f,c
 48377   007202  D7FC               	goto	i2u1288_45
 48378   007204  5007               	movf	(??i2_setOutputPin+1)^0,w,c
 48379   007206  128B               	iorwf	139,f,c	;volatile
 48380                           
 48381                           ;../digitalOut.c: 280:             } else {
 48382   007208  0012               	return	
 48383   00720A                     i2l13939:
 48384                           
 48385                           ;../digitalOut.c: 282:                 LATC &= ~(1<<configs[io].no);
 48386   00720A  5008               	movf	i2setOutputPin@io^0,w,c
 48387   00720C  0D04               	mullw	4
 48388   00720E  0E02               	movlw	2
 48389   007210  26F3               	addwf	243,f,c
 48390   007212  0E00               	movlw	0
 48391   007214  22F4               	addwfc	244,f,c
 48392   007216  0E29               	movlw	low _configs
 48393   007218  24F3               	addwf	243,w,c
 48394   00721A  6EF6               	movwf	tblptrl,c
 48395   00721C  0EEE               	movlw	high _configs
 48396   00721E  20F4               	addwfc	244,w,c
 48397   007220  6EF7               	movwf	tblptrh,c
 48398   007222                     	if	1	;There are 3 active tblptr bytes
 48399   007222  6AF8               	clrf	tblptru,c
 48400   007224  0E00               	movlw	low (__mediumconst shr (0+16))
 48401   007226  22F8               	addwfc	tblptru,f,c
 48402   007228                     	endif
 48403   007228  0008               	tblrd		*
 48404   00722A  CFF5 F006          	movff	tablat,??i2_setOutputPin
 48405   00722E  0E01               	movlw	1
 48406   007230  6E07               	movwf	(??i2_setOutputPin+1)^0,c
 48407   007232  2A06               	incf	??i2_setOutputPin^0,f,c
 48408   007234  D002               	goto	i2u1289_44
 48409   007236                     i2u1289_45:
 48410   007236  90D8               	bcf	status,0,c
 48411   007238  3607               	rlcf	(??i2_setOutputPin+1)^0,f,c
 48412   00723A                     i2u1289_44:
 48413   00723A  2E06               	decfsz	??i2_setOutputPin^0,f,c
 48414   00723C  D7FC               	goto	i2u1289_45
 48415   00723E  5007               	movf	(??i2_setOutputPin+1)^0,w,c
 48416   007240  0AFF               	xorlw	255
 48417   007242  168B               	andwf	139,f,c	;volatile
 48418   007244  0012               	return	
 48419   007246                     i2l13943:
 48420   007246  5008               	movf	i2setOutputPin@io^0,w,c
 48421   007248  0D04               	mullw	4
 48422   00724A  0E01               	movlw	1
 48423   00724C  26F3               	addwf	243,f,c
 48424   00724E  0E00               	movlw	0
 48425   007250  22F4               	addwfc	244,f,c
 48426   007252  0E29               	movlw	low _configs
 48427   007254  24F3               	addwf	243,w,c
 48428   007256  6EF6               	movwf	tblptrl,c
 48429   007258  0EEE               	movlw	high _configs
 48430   00725A  20F4               	addwfc	244,w,c
 48431   00725C  6EF7               	movwf	tblptrh,c
 48432   00725E                     	if	1	;There are 3 active tblptr bytes
 48433   00725E  6AF8               	clrf	tblptru,c
 48434   007260  0E00               	movlw	low (__mediumconst shr (0+16))
 48435   007262  22F8               	addwfc	tblptru,f,c
 48436   007264                     	endif
 48437   007264  0008               	tblrd		*
 48438   007266  50F5               	movf	tablat,w,c
 48439                           
 48440                           ; Switch size 1, requested type "simple"
 48441                           ; Number of cases is 3, Range of values is 65 to 67
 48442                           ; switch strategies available:
 48443                           ; Name         Instructions Cycles
 48444                           ; simple_byte           10     6 (average)
 48445                           ;	Chosen strategy is simple_byte
 48446   007268  0A41               	xorlw	65	; case 65
 48447   00726A  B4D8               	btfsc	status,2,c
 48448   00726C  D732               	goto	i2l13923
 48449   00726E  0A03               	xorlw	3	; case 66
 48450   007270  B4D8               	btfsc	status,2,c
 48451   007272  D76D               	goto	i2l13929
 48452   007274  0A01               	xorlw	1	; case 67
 48453   007276  A4D8               	btfss	status,2,c
 48454   007278  0012               	return	
 48455   00727A  D7A7               	goto	i2l13935
 48456   00727C                     __end_ofi2_setOutputPin:
 48457                           	callstack 0
 48458                           
 48459 ;; *************** function i2_getNV *****************
 48460 ;; Defined at:
 48461 ;;		line 182 in file "../../VLCBlib_PIC/nv.c"
 48462 ;; Parameters:    Size  Location     Type
 48463 ;;  index           1    wreg     unsigned char 
 48464 ;; Auto vars:     Size  Location     Type
 48465 ;;  index           1    3[COMRAM] unsigned char 
 48466 ;; Return value:  Size  Location     Type
 48467 ;;                  2    0[COMRAM] short 
 48468 ;; Registers used:
 48469 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 48470 ;; Tracked objects:
 48471 ;;		On entry : 0/0
 48472 ;;		On exit  : 0/0
 48473 ;;		Unchanged: 0/0
 48474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48475 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48476 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48477 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48478 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48479 ;;Total ram usage:        4 bytes
 48480 ;; Hardware stack levels used: 1
 48481 ;; This function calls:
 48482 ;;		Nothing
 48483 ;; This function is called by:
 48484 ;;		_timer1DoneInterruptHandler
 48485 ;;		_timer3DoneInterruptHandler
 48486 ;; This function uses a non-reentrant model
 48487 ;;
 48488                           
 48489                           	psect	text230
 48490   00BD92                     __ptext230:
 48491                           	callstack 0
 48492   00BD92                     i2_getNV:
 48493                           	callstack 3
 48494                           
 48495                           ;incstack = 0
 48496                           ;i2getNV@index stored from wreg
 48497   00BD92  6E04               	movwf	i2getNV@index^0,c
 48498                           
 48499                           ;../../VLCBlib_PIC/nv.c: 183:     if (index == 0) return (15+7*16);
 48500   00BD94  5004               	movf	i2getNV@index^0,w,c
 48501   00BD96  A4D8               	btfss	status,2,c
 48502   00BD98  D005               	goto	i2l13951
 48503   00BD9A  0E00               	movlw	0
 48504   00BD9C  6E02               	movwf	(?i2_getNV+1)^0,c
 48505   00BD9E  0E7F               	movlw	127
 48506   00BDA0  6E01               	movwf	?i2_getNV^0,c
 48507   00BDA2  0012               	return	
 48508   00BDA4                     i2l13951:
 48509                           
 48510                           ;../../VLCBlib_PIC/nv.c: 184:     if (index > (15+7*16)) return -CMDERR_INV_NV_IDX;
 48511   00BDA4  0E7F               	movlw	127
 48512   00BDA6  6404               	cpfsgt	i2getNV@index^0,c
 48513   00BDA8  D005               	goto	i2l13957
 48514   00BDAA  0EFF               	movlw	255
 48515   00BDAC  6E02               	movwf	(?i2_getNV+1)^0,c
 48516   00BDAE  0EF6               	movlw	246
 48517   00BDB0  6E01               	movwf	?i2_getNV^0,c
 48518   00BDB2  0012               	return	
 48519   00BDB4                     i2l13957:
 48520                           
 48521                           ;../../VLCBlib_PIC/nv.c: 186:     return nvCache[index];
 48522   00BDB4  0E00               	movlw	low _nvCache
 48523   00BDB6  2404               	addwf	i2getNV@index^0,w,c
 48524   00BDB8  6ED9               	movwf	fsr2l,c
 48525   00BDBA  6ADA               	clrf	fsr2h,c
 48526   00BDBC  0E04               	movlw	high _nvCache
 48527   00BDBE  22DA               	addwfc	fsr2h,f,c
 48528   00BDC0  50DF               	movf	indf2,w,c
 48529   00BDC2  6E03               	movwf	??i2_getNV^0,c
 48530   00BDC4  5003               	movf	??i2_getNV^0,w,c
 48531   00BDC6  6E01               	movwf	?i2_getNV^0,c
 48532   00BDC8  6A02               	clrf	(?i2_getNV+1)^0,c
 48533   00BDCA  0012               	return		;funcret
 48534   00BDCC                     __end_ofi2_getNV:
 48535                           	callstack 0
 48536                           
 48537                           	psect	rparam
 48538   000000                     
 48539                           	psect	temp
 48540   000054                     btemp:
 48541                           	callstack 0
 48542   000054                     	ds	1
 48543   000000                     int$flags	set	btemp
 48544   000000                     wtemp8	set	btemp+1
 48545   000000                     ttemp5	set	btemp+1
 48546   000000                     ttemp6	set	btemp+4
 48547   000000                     ttemp7	set	btemp+8
 48548                           
 48549                           	psect	config
 48550                           
 48551                           ;Config register CONFIG1L @ 0x300000
 48552                           ;	VREG Sleep Enable bit
 48553                           ;	RETEN = OFF, Ultra low-power regulator is Disabled (Controlled by REGSLP bit)
 48554                           ;	LF-INTOSC Low-power Enable bit
 48555                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
 48556                           ;	SOSC Power Selection and mode Configuration bits
 48557                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
 48558                           ;	Extended Instruction Set
 48559                           ;	XINST = OFF, Disabled
 48560   300000                     	org	3145728
 48561   300000  15                 	db	21
 48562                           
 48563                           ;Config register CONFIG1H @ 0x300001
 48564                           ;	Oscillator
 48565                           ;	FOSC = HS1, HS oscillator (Medium power, 4 MHz - 16 MHz)
 48566                           ;	PLL x4 Enable bit
 48567                           ;	PLLCFG = OFF, Disabled
 48568                           ;	Fail-Safe Clock Monitor
 48569                           ;	FCMEN = OFF, Disabled
 48570                           ;	Internal External Oscillator Switch Over Mode
 48571                           ;	IESO = OFF, Disabled
 48572   300001                     	org	3145729
 48573   300001  03                 	db	3
 48574                           
 48575                           ;Config register CONFIG2L @ 0x300002
 48576                           ;	Power Up Timer
 48577                           ;	PWRTEN = ON, Enabled
 48578                           ;	Brown Out Detect
 48579                           ;	BOREN = SBORDIS, Enabled in hardware, SBOREN disabled
 48580                           ;	Brown-out Reset Voltage bits
 48581                           ;	BORV = 0, 3.0V
 48582                           ;	BORMV Power level
 48583                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
 48584   300002                     	org	3145730
 48585   300002  66                 	db	102
 48586                           
 48587                           ;Config register CONFIG2H @ 0x300003
 48588                           ;	Watchdog Timer
 48589                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
 48590                           ;	Watchdog Postscaler
 48591                           ;	WDTPS = 1048576, 1:1048576
 48592   300003                     	org	3145731
 48593   300003  50                 	db	80
 48594                           
 48595                           ; Padding undefined space
 48596   300004                     	org	3145732
 48597   300004  FF                 	db	255
 48598                           
 48599                           ;Config register CONFIG3H @ 0x300005
 48600                           ;	ECAN Mux bit
 48601                           ;	CANMX = PORTB, ECAN TX and RX pins are located on RB2 and RB3, respectively
 48602                           ;	MSSP address masking
 48603                           ;	MSSPMSK = MSK7, 7 Bit address masking mode
 48604                           ;	Master Clear Enable
 48605                           ;	MCLRE = ON, MCLR Enabled, RE3 Disabled
 48606   300005                     	org	3145733
 48607   300005  89                 	db	137
 48608                           
 48609                           ;Config register CONFIG4L @ 0x300006
 48610                           ;	Stack Overflow Reset
 48611                           ;	STVREN = ON, Enabled
 48612                           ;	Boot Block Size
 48613                           ;	BBSIZ = BB1K, 1K word Boot Block size
 48614                           ;	Background Debugger
 48615                           ;	DEBUG = 0x1, unprogrammed default
 48616   300006                     	org	3145734
 48617   300006  81                 	db	129
 48618                           
 48619                           ; Padding undefined space
 48620   300007                     	org	3145735
 48621   300007  FF                 	db	255
 48622                           
 48623                           ;Config register CONFIG5L @ 0x300008
 48624                           ;	Code Protect 00800-03FFF
 48625                           ;	CP0 = OFF, Disabled
 48626                           ;	Code Protect 04000-07FFF
 48627                           ;	CP1 = OFF, Disabled
 48628                           ;	Code Protect 08000-0BFFF
 48629                           ;	CP2 = OFF, Disabled
 48630                           ;	Code Protect 0C000-0FFFF
 48631                           ;	CP3 = OFF, Disabled
 48632   300008                     	org	3145736
 48633   300008  0F                 	db	15
 48634                           
 48635                           ;Config register CONFIG5H @ 0x300009
 48636                           ;	Code Protect Boot
 48637                           ;	CPB = OFF, Disabled
 48638                           ;	Data EE Read Protect
 48639                           ;	CPD = OFF, Disabled
 48640   300009                     	org	3145737
 48641   300009  C0                 	db	192
 48642                           
 48643                           ;Config register CONFIG6L @ 0x30000A
 48644                           ;	Table Write Protect 00800-03FFF
 48645                           ;	WRT0 = OFF, Disabled
 48646                           ;	Table Write Protect 04000-07FFF
 48647                           ;	WRT1 = OFF, Disabled
 48648                           ;	Table Write Protect 08000-0BFFF
 48649                           ;	WRT2 = OFF, Disabled
 48650                           ;	Table Write Protect 0C000-0FFFF
 48651                           ;	WRT3 = OFF, Disabled
 48652   30000A                     	org	3145738
 48653   30000A  0F                 	db	15
 48654                           
 48655                           ;Config register CONFIG6H @ 0x30000B
 48656                           ;	Config. Write Protect
 48657                           ;	WRTC = OFF, Disabled
 48658                           ;	Table Write Protect Boot
 48659                           ;	WRTB = OFF, Disabled
 48660                           ;	Data EE Write Protect
 48661                           ;	WRTD = OFF, Disabled
 48662   30000B                     	org	3145739
 48663   30000B  E0                 	db	224
 48664                           
 48665                           ;Config register CONFIG7L @ 0x30000C
 48666                           ;	Table Read Protect 00800-03FFF
 48667                           ;	EBTR0 = OFF, Disabled
 48668                           ;	Table Read Protect 04000-07FFF
 48669                           ;	EBTR1 = OFF, Disabled
 48670                           ;	Table Read Protect 08000-0BFFF
 48671                           ;	EBTR2 = OFF, Disabled
 48672                           ;	Table Read Protect 0C000-0FFFF
 48673                           ;	EBTR3 = OFF, Disabled
 48674   30000C                     	org	3145740
 48675   30000C  0F                 	db	15
 48676                           
 48677                           ;Config register CONFIG7H @ 0x30000D
 48678                           ;	Table Read Protect Boot
 48679                           ;	EBTRB = OFF, Disabled
 48680   30000D                     	org	3145741
 48681   30000D  40                 	db	64
 48682                           tosu	equ	0xFFF
 48683                           tosh	equ	0xFFE
 48684                           tosl	equ	0xFFD
 48685                           stkptr	equ	0xFFC
 48686                           pclatu	equ	0xFFB
 48687                           pclath	equ	0xFFA
 48688                           pcl	equ	0xFF9
 48689                           tblptru	equ	0xFF8
 48690                           tblptrh	equ	0xFF7
 48691                           tblptrl	equ	0xFF6
 48692                           tablat	equ	0xFF5
 48693                           prodh	equ	0xFF4
 48694                           prodl	equ	0xFF3
 48695                           indf0	equ	0xFEF
 48696                           postinc0	equ	0xFEE
 48697                           postdec0	equ	0xFED
 48698                           preinc0	equ	0xFEC
 48699                           plusw0	equ	0xFEB
 48700                           fsr0h	equ	0xFEA
 48701                           fsr0l	equ	0xFE9
 48702                           wreg	equ	0xFE8
 48703                           indf1	equ	0xFE7
 48704                           postinc1	equ	0xFE6
 48705                           postdec1	equ	0xFE5
 48706                           preinc1	equ	0xFE4
 48707                           plusw1	equ	0xFE3
 48708                           fsr1h	equ	0xFE2
 48709                           fsr1l	equ	0xFE1
 48710                           bsr	equ	0xFE0
 48711                           indf2	equ	0xFDF
 48712                           postinc2	equ	0xFDE
 48713                           postdec2	equ	0xFDD
 48714                           preinc2	equ	0xFDC
 48715                           plusw2	equ	0xFDB
 48716                           fsr2h	equ	0xFDA
 48717                           fsr2l	equ	0xFD9
 48718                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    597
    Data        0
    BSS         1863
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      83
    BANK0           160     73     115
    BANK1           256     69     255
    BANK2           256     45     249
    BANK3           256      0     200
    BANK4           256      0     192
    BANK5           256      0      72
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    ackEventCheckLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    ackEventProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    APP_postProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    APP_preProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    bootProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    bootService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    bootService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    bootService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    bootService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    bootService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    bootService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    bootService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    bootService$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    canFillRxFifo@m	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    canFillRxFifo@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    canProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    canReceiveMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    canReceiveMessage@mp	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    canReceiveMessage@p	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    canSendMessage@m	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    canSendMessage@mp	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK1[9]), 

    canService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    canService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    canService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    canService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), i2_canIsr(), NULL(), 

    canService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), i2_canIsr(), mnsLowIsr(), NULL(), 

    canService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    canService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    canService$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    canTransport$receiveMessage	PTR FTN(PTR struct Message,)enum E12854 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    canTransport$sendMessage	PTR FTN(PTR struct Message,)enum E12858 size(2) Largest target is 1
		 -> canSendMessage(), 

    checkLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    checkTxFifo@m	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    checkTxFifo@mp	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    consumer2QProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    eventAckService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventAckService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventAckService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    eventAckService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventAckService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventAckService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventAckService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    eventAckService$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventCoeService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventCoeService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventCoeService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    eventCoeService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventCoeService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventCoeService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventCoeService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    eventCoeService$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventConsumer2QService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventConsumer2QService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventConsumer2QService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    eventConsumer2QService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventConsumer2QService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventConsumer2QService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventConsumer2QService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    eventConsumer2QService$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventProducerService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventProducerService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventProducerService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    eventProducerService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventProducerService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventProducerService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventProducerService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    eventProducerService$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventTeachService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventTeachService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventTeachService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    eventTeachService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventTeachService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventTeachService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventTeachService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    eventTeachService$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    factoryReset$8094	const PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    getNextWriteMessage@q	PTR struct MessageQueue size(1) Largest target is 6
		 -> rxQueue(COMRAM[5]), 

    getNextWriteMessage@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    getNumRxBuffersInUse@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    handleSelfEnumeration@p	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    memcpy@d1	PTR void  size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    mnsProcessMessage@d	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    mnsProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    mnsService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    mnsService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    mnsService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    mnsService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    mnsService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    mnsService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    mnsService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    mnsService$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    mnsTRallDiagnosticsCallback@d	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    nvProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    nvService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    nvService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    nvService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    nvService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    nvService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    nvService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    nvService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    nvService$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    peek@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    poll$8095	const PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    poll$8096	const PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    poll$8096$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    pop@q	PTR struct MessageQueue size(1) Largest target is 6
		 -> rxQueue(COMRAM[5]), txQueue(COMRAM[5]), 

    pop@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    pop@ret	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    producerProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    push@m	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK1[9]), 

    push@q	PTR struct MessageQueue size(1) Largest target is 6
		 -> txQueue(COMRAM[5]), 

    push@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    quantity@q	PTR struct MessageQueue size(1) Largest target is 6
		 -> rxQueue(COMRAM[5]), txQueue(COMRAM[5]), 

    quantity@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    rxQueue$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    S208$4$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    S208Service$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    S208Service$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    S208Service$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    S208Service$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    S208Service$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    S208Service$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    S208Service$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    S208Service$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    S352$0$0	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK1[9]), 

    S352$1$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    S352Transport$receiveMessage	PTR FTN(PTR struct Message,)enum E12854 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    S352Transport$sendMessage	PTR FTN(PTR struct Message,)enum E12858 size(2) Largest target is 1
		 -> canSendMessage(), 

    S5125MessageQueue$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    services	const PTR const struct Service[9] size(2) Largest target is 18
		 -> bootService(CODE[18]), canService(CODE[18]), eventAckService(CODE[18]), eventCoeService(CODE[18]), 
		 -> eventConsumer2QService(CODE[18]), eventProducerService(CODE[18]), eventTeachService(CODE[18]), mnsService(CODE[18]), 
		 -> nvService(CODE[18]), 

    services$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    services$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    services$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    services$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    services$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    services$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    services$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    services$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    sp__ackGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    sp__canGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    sp__consumer2QGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    sp__findService	PTR const struct Service size(2) Largest target is 18
		 -> bootService(CODE[18]), canService(CODE[18]), eventAckService(CODE[18]), eventCoeService(CODE[18]), 
		 -> eventConsumer2QService(CODE[18]), eventProducerService(CODE[18]), eventTeachService(CODE[18]), mnsService(CODE[18]), 
		 -> nvService(CODE[18]), NULL(NULL[0]), 

    sp__getBufferPointer	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    sp__getNextWriteMessage	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    sp__mnsGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    sp__nvGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    sp__peek	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    sp__pop	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    sp__producerGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    sp__teachGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    sp_S208$9	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    startTimedResponse@callback	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)enum E12922 size(2) Largest target is 1
		 -> mnsTRallDiagnosticsCallback(), mnsTRrqnpnCallback(), mnsTRserviceDiscoveryCallback(), nerdCallback(), 
		 -> nvTRnvrdCallback(), reqevCallback(), sodTRCallback(), 

    teachCheckLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    teachProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    timedResponseCallback	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)enum E12922 size(2) Largest target is 1
		 -> mnsTRallDiagnosticsCallback(), mnsTRrqnpnCallback(), mnsTRserviceDiscoveryCallback(), nerdCallback(), 
		 -> nvTRnvrdCallback(), reqevCallback(), sodTRCallback(), NULL(), 

    transport	PTR const struct Transport size(2) Largest target is 4
		 -> canTransport(CODE[4]), NULL(NULL[0]), 

    transport$receiveMessage	PTR FTN(PTR struct Message,)enum E12854 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    transport$sendMessage	PTR FTN(PTR struct Message,)enum E12858 size(2) Largest target is 1
		 -> canSendMessage(), 

    txQueue$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isrLow in COMRAM

    None.

Critical Paths under _isrHigh in COMRAM

    _isrHigh->_highIsr
    i2_canIsr->i2_checkCANTimeout
    i2_checkCANTimeout->i2_checkTxFifo
    i2_canTxError->i2_checkTxFifo
    i2_checkTxFifo->i2_getNextWriteMessage
    i2_canFillRxFifo->i2_getNextWriteMessage
    _timer3DoneInterruptHandler->i2_setOutputPin
    _timer1DoneInterruptHandler->i2_setOutputPin
    i2_setOutputPin->i2_getNV

Critical Paths under _main in BANK0

    _setup->_initServos
    _initServos->_setOutputPosition
    _setOutputPosition->_setServoPosition
    _initInputScan->_readNVM
    _nvPowerUp->_loadNvCache
    _mnsPowerUp->_readNVM
    _mnsPowerUp->_tickGet
    _leds_powerUp->_tickGet
    _canPowerUp->_readNVM
    _canPowerUp->_tickGet
    _bootPowerUp->_readNVM
    _teachProcessMessage->_sendMessage3
    _teachProcessMessage->_teachCheckLen
    _teachCheckLen->_checkLen
    _doRqevn->_sendMessage3
    _doReval->_sendMessage3
    _doReqev->_sendMessage3
    _doNnevn->_sendMessage3
    _doNnclr->_sendMessage2
    _doNerd->_startTimedResponse
    _doNenrd->_sendMessage3
    _doEvuln->_sendMessage2
    _doEvuln->_sendMessage3
    _doEvlrn->_sendMessage2
    _doEvlrn->_sendMessage3
    _producerProcessMessage->_sendMessage3
    _APP_GetEventState->___awdiv
    _numEv->_validStart
    _nvProcessMessage->_sendMessage2
    _nvProcessMessage->_sendMessage3
    _setNV->_writeNVM
    _setServoPosition->___awdiv
    _APP_nvValidate->___awdiv
    _mnsProcessMessage->_sendMessage2
    _mnsProcessMessage->_sendMessage3
    _mnsProcessMessage->_writeNVM
    _sendMessage6->_sendMessage
    _sendMessage3->_sendMessage
    _getParameter->_getParameterFlags
    _getParameterFlags->_have
    _canGetDiagnostic->_getNumRxBuffersInUse
    _mnsPoll->_sendMessage2
    _mnsPoll->_writeNVM
    _setLEDsByMode->_showStatus
    _sendMessage2->_sendMessage
    _setNewCanId->_writeNVM
    _handleSelfEnumeration->_tickGet
    _getNumRxBuffersInUse->_quantity
    _bootProcessMessage->_writeNVM
    _sendMessage7->_sendMessage
    _isConsumedEvent->_getEv
    _ackEventCheckLen->_checkLen
    _checkLen->_sendMessage5
    _sendMessage5->_sendMessage
    _loop->_sendProducedEvent
    _setupTimer3->_setOutputPin
    _setupTimer1->_setOutputPin
    _pollServos->_sendProducedEvent
    _pollServos->_writeNVM
    _bounceUp->___awdiv
    _bounceDown->___awdiv
    _processOutputs->_sendProducedEvent
    _startServoOutput->_getNV
    _startMultiOutput->_getNV
    _startDigitalOutput->_writeNVM
    _sendInvertedProducedEvent->_sendProducedEvent
    _setOutputState->_setBounceState
    _setOutputState->_setMultiState
    _setOutputState->_setServoState
    _setServoState->_getNV
    _setMultiState->_getNV
    _setBounceState->_getNV
    _getTwoAction->_peekTwoActionQueue
    _doWait->___lmul
    _doSOD->_startTimedResponse
    _startTimedResponse->_findServiceIndex
    _inputScan->_sendProducedEvent
    _inputScan->_writeNVM
    _sendProducedEvent->_sendMessage4
    _sendMessage4->_sendMessage
    _sendMessage->_canSendMessage
    _canSendMessage->_getNextWriteMessage
    _canSendMessage->_push
    _getNumTxBuffersInUse->_quantity
    _readInput->_getNV
    _checkPowerOnPb->_pbDownTimer
    _checkPowerOnPb->_pbUpTimer
    _pbUpTimer->___lldiv
    _pbDownTimer->___lldiv
    _leds_poll->___awdiv
    ___lmul->_getNV
    ___lldiv->_tickGet
    _factoryReset->_writeNVM
    _clearAllEvents->_writeNVM
    _nvFactoryReset->_writeNVM
    _APP_nvDefault->___awdiv
    ___wmul->_getNV
    ___awdiv->___wmul
    _mnsFactoryReset->_writeNVM
    _canFactoryReset->_writeNVM
    _saveNV->_writeNVM
    _loadNvCache->_readNVM
    _addEvent->_writeNVM
    _writeEv->_writeNVM
    _removeTableEntry->_writeNVM
    _rebuildHashtable->_getHash
    _getEv->_validStart
    _getEVs->_validStart
    _validStart->_readNVM
    _findEvent->_getHash
    _getNN->_readNVM
    _getHash->_getNN
    _getEN->_readNVM
    _configIO->_writeNVM
    _writeNVM->_APP_nvDefault
    _FLASH_Write->_flushFlashBlock
    _flushFlashBlock->_eraseFlashBlock
    _EEPROM_Write->_EEPROM_Read
    _setDigitalOutput->_readNVM
    _setOutputPin->_getNV
    _readNVM->_FLASH_Read

Critical Paths under _isrLow in BANK0

    _isrLow->_lowIsr
    _canIsr->_checkCANTimeout
    _checkCANTimeout->_checkTxFifo
    _canTxError->_checkTxFifo
    _checkTxFifo->i1_getNextWriteMessage
    _canFillRxFifo->i1_getNextWriteMessage

Critical Paths under _isrHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _setup->_configIO
    _powerUp->_teachPowerUp
    _teachPowerUp->_rebuildHashtable
    _poll->_mnsProcessMessage
    _poll->_nvProcessMessage
    _poll->_producerProcessMessage
    _teachCheckLen->_checkLen
    _doRqevn->_sendMessage3
    _doReval->_sendMessage5
    _doReqev->_sendMessage6
    _doNnevn->_sendMessage3
    _doNnclr->_clearAllEvents
    _doNenrd->_sendMessage5
    _doEvuln->_removeEvent
    _removeEvent->_removeTableEntry
    _doEvlrn->_APP_addEvent
    _APP_addEvent->_addEvent
    _pollTimedResponse->_reqevCallback
    _sodTRCallback->_sendInvertedProducedEvent
    _nvProcessMessage->_setNV
    _setNV->_APP_nvValueChanged
    _APP_nvValueChanged->_setType
    _sendMessage6->_sendMessage
    _sendMessage3->_sendMessage
    _mnsPoll->_sendMessage5
    _sendMessage2->_sendMessage
    _canReceiveMessage->_processEnumeration
    _processEnumeration->_setNewCanId
    _setNewCanId->_writeNVM
    _sendMessage7->_sendMessage
    _ackEventCheckLen->_checkLen
    _checkLen->_sendMessage5
    _sendMessage5->_sendMessage
    _loop->_processActions
    _startServos->_pollServos
    _pollServos->_sendProducedEvent
    _processOutputs->_sendProducedEvent
    _processActions->_startOutput
    _startOutput->_startDigitalOutput
    _startDigitalOutput->_sendInvertedProducedEvent
    _sendInvertedProducedEvent->_sendProducedEvent
    _inputScan->_sendProducedEvent
    _sendProducedEvent->_sendMessage4
    _sendMessage4->_sendMessage
    _checkPowerOnPb->_factoryReset
    _factoryReset->_APP_factoryReset
    _teachFactoryReset->_clearAllEvents
    _clearAllEvents->_rebuildHashtable
    _nvFactoryReset->_writeNVM
    _mnsFactoryReset->_writeNVM
    _canFactoryReset->_writeNVM
    _APP_factoryReset->_setType
    _setType->_defaultEvents
    _defaultNVs->_saveNV
    _saveNV->_writeNVM
    _defaultEvents->_addEvent
    _clearEvents->_deleteActionRange
    _deleteHappeningRange->_writeEv
    _deleteActionRange->_writeEv
    _addEvent->_writeEv
    _writeEv->_checkRemoveTableEntry
    _checkRemoveTableEntry->_removeTableEntry
    _removeTableEntry->_rebuildHashtable
    _configIO->_writeNVM

Critical Paths under _isrLow in BANK1

    None.

Critical Paths under _isrHigh in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_poll
    _poll->_mnsProcessMessage

Critical Paths under _isrLow in BANK2

    None.

Critical Paths under _isrHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isrLow in BANK3

    None.

Critical Paths under _isrHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrLow in BANK4

    None.

Critical Paths under _isrHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrLow in BANK5

    None.

Critical Paths under _isrHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrLow in BANK6

    None.

Critical Paths under _isrHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrLow in BANK7

    None.

Critical Paths under _isrHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isrLow in BANK8

    None.

Critical Paths under _isrHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isrLow in BANK9

    None.

Critical Paths under _isrHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isrLow in BANK10

    None.

Critical Paths under _isrHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isrLow in BANK11

    None.

Critical Paths under _isrHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isrLow in BANK12

    None.

Critical Paths under _isrHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isrLow in BANK13

    None.

Critical Paths under _isrHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isrLow in BANK14

    None.

Critical Paths under _isrHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0 4211747
                     _checkPowerOnPb
                       _factoryReset
                         _initRomOps
                               _loop
                               _poll
                            _powerUp
                            _readNVM
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0   32705
                           _configIO
                              _getNV
                      _initInputScan
                        _initOutputs
                         _initServos
              _setTimedResponseDelay
                            _tickGet
                _universalEventsInit
 ---------------------------------------------------------------------------------
 (2) _universalEventsInit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initServos                                           5     5      0   10025
                                             68 BANK0      5     5      0
                              _getNV
                            _readNVM
                  _setOutputPosition
                            _tickGet
 ---------------------------------------------------------------------------------
 (3) _setOutputPosition                                    3     1      2    4743
                                             65 BANK0      3     1      2
                              _getNV
                            _readNVM (ARG)
                   _setDigitalOutput
                       _setOutputPin
                   _setServoPosition
 ---------------------------------------------------------------------------------
 (2) _initOutputs                                          1     1      0      90
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _initInputScan                                        3     3      0    4738
                                             55 BANK0      3     3      0
                              _getNV
                          _readInput
                            _readNVM
 ---------------------------------------------------------------------------------
 (1) _powerUp                                              6     6      0   44343
                                             10 BANK1      5     5      0
                                NULL *
                         _ackPowerUp *
                        _bootPowerUp *
                         _canPowerUp *
                  _consumer2QPowerUp *
                         _initTicker
                  _initTimedResponse
                       _leds_powerUp
                         _mnsPowerUp *
                          _nvPowerUp *
                    _producerPowerUp *
                       _teachPowerUp *
 ---------------------------------------------------------------------------------
 (2) _teachPowerUp                                         1     1      0   24492
                                              9 BANK1      1     1      0
                   _rebuildHashtable
 ---------------------------------------------------------------------------------
 (2) _producerPowerUp                                      1     1      0      99
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _nvPowerUp                                            1     1      0    4592
                                             60 BANK0      1     1      0
                        _loadNvCache
 ---------------------------------------------------------------------------------
 (2) _mnsPowerUp                                           3     3      0    5006
                                             55 BANK0      3     3      0
                            _readNVM
                      _setLEDsByMode
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _leds_powerUp                                         0     0      0     318
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _initTimedResponse                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initTicker                                           3     3      0     136
                                             45 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _consumer2QPowerUp                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _canPowerUp                                           3     3      0    4780
                                             55 BANK0      3     3      0
                            _readNVM
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _bootPowerUp                                          6     6      0    4660
                                             55 BANK0      6     6      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (2) _ackPowerUp                                           1     1      0      99
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _poll                                                15    15      0 2702213
                                             30 BANK2     15    15      0
                                NULL *
             _APP_postProcessMessage
              _APP_preProcessMessage
                             ___lmul
             _ackEventProcessMessage *
                 _bootProcessMessage *
                  _canProcessMessage *
                  _canReceiveMessage *
           _consumer2QProcessMessage *
                    _flushFlashBlock
                          _leds_poll
                            _mnsPoll *
                  _mnsProcessMessage *
                   _nvProcessMessage *
                  _pollTimedResponse
             _producerProcessMessage *
                         _showStatus
                _teachProcessMessage *
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _teachProcessMessage                                  8     6      2  897486
                                             63 BANK1      2     0      2
                                              0 BANK2      6     6      0
                            _doEvlrn
                            _doEvuln
                            _doNenrd
                             _doNerd
                            _doNnclr
                            _doNnevn
                            _doReqev
                            _doReval
                            _doRqevn
                       _sendMessage3
                       _sendMessage5
                      _teachCheckLen
 ---------------------------------------------------------------------------------
 (3) _teachCheckLen                                        5     1      4   62481
                                             72 BANK0      1     1      0
                                             17 BANK1      4     0      4
                           _checkLen
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _doRqevn                                              2     2      0   20252
                                              9 BANK1      2     2      0
                       _sendMessage3
                         _validStart
 ---------------------------------------------------------------------------------
 (3) _doReval                                              7     6      1   68271
                                             13 BANK1      7     6      1
                 _evtIdxToTableIndex
                              _getEv
                              _numEv
                       _sendMessage3
                       _sendMessage5
                         _validStart
 ---------------------------------------------------------------------------------
 (3) _doReqev                                              8     3      5   90839
                                             14 BANK1      8     3      5
                          _findEvent
                   _findServiceIndex
                              _getEv
                              _numEv
                       _sendMessage3
                       _sendMessage5
                       _sendMessage6
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doNnevn                                              7     7      0   20190
                                              9 BANK1      7     7      0
                            _readNVM
                       _sendMessage3
 ---------------------------------------------------------------------------------
 (3) _doNnclr                                              0     0      0   75628
                     _clearAllEvents
                       _sendMessage2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _doNerd                                               0     0      0    1818
                   _findServiceIndex
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doNenrd                                              6     6      0   58370
                                             13 BANK1      6     6      0
                 _evtIdxToTableIndex
                              _getEN
                              _getNN
                       _sendMessage3
                       _sendMessage5
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _evtIdxToTableIndex                                   1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _doEvuln                                              5     1      4  112213
                                             20 BANK1      5     1      4
                        _removeEvent
                       _sendMessage2
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _removeEvent                                          5     1      4   54958
                                             15 BANK1      5     1      4
                          _findEvent
                   _removeTableEntry
 ---------------------------------------------------------------------------------
 (3) _doEvlrn                                              7     1      6  340828
                                             52 BANK1      7     1      6
                       _APP_addEvent
                       _sendMessage2
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _APP_addEvent                                         8     1      7  282937
                                             44 BANK1      8     1      7
                           _addEvent
              _checkRemoveTableEntry
                   _rebuildHashtable
                            _writeEv
 ---------------------------------------------------------------------------------
 (2) _producerProcessMessage                              12    10      2   62938
                                             63 BANK1      6     4      2
                                              0 BANK2      6     6      0
                  _APP_GetEventState
                          _findEvent
                              _getEv
                       _sendMessage3
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (2) _pollTimedResponse                                    3     3      0  188069
                                             41 BANK1      3     3      0
                                NULL *
        _mnsTRallDiagnosticsCallback *
                 _mnsTRrqnpnCallback *
      _mnsTRserviceDiscoveryCallback *
                       _nerdCallback *
                   _nvTRnvrdCallback *
                      _reqevCallback *
                      _sodTRCallback *
 ---------------------------------------------------------------------------------
 (3) _sodTRCallback                                       14    12      2   46634
                                             26 BANK1     13    11      2
                  _APP_GetEventState
                            ___awdiv
                              _getNV
          _sendInvertedProducedEvent
 ---------------------------------------------------------------------------------
 (3) _APP_GetEventState                                   11    11      0   11604
                                             63 BANK0      7     7      0
                                              0 BANK1      4     4      0
                            ___awdiv
                              _getNV
                            _readNVM
 ---------------------------------------------------------------------------------
 (3) _reqevCallback                                       15    13      2   41462
                                             26 BANK1     15    13      2
                              _getEN
                              _getEv
                              _getNN
                              _numEv
                       _sendMessage6
 ---------------------------------------------------------------------------------
 (4) _numEv                                                7     7      0    8958
                                             61 BANK0      7     7      0
                            _readNVM
                         _validStart
 ---------------------------------------------------------------------------------
 (3) _nvTRnvrdCallback                                     5     3      2   13934
                                             26 BANK1      4     2      2
                              _getNV
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _nerdCallback                                         7     5      2   27593
                                             26 BANK1      6     4      2
                              _getEN
                              _getNN
                       _sendMessage7
                 _tableIndexToEvtIdx
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _tableIndexToEvtIdx                                   1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _mnsTRserviceDiscoveryCallback                        7     5      2   29138
                                             26 BANK1      6     4      2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _mnsTRrqnpnCallback                                   3     1      2   14215
                                             26 BANK1      2     0      2
                       _getParameter
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _mnsTRallDiagnosticsCallback                          9     7      2   15059
                                             26 BANK1      8     6      2
                                NULL *
                   _ackGetDiagnostic *
                   _canGetDiagnostic *
            _consumer2QGetDiagnostic *
                   _mnsGetDiagnostic *
                    _nvGetDiagnostic *
              _producerGetDiagnostic *
                       _sendMessage6
                 _teachGetDiagnostic *
 ---------------------------------------------------------------------------------
 (2) _nvProcessMessage                                     6     4      2  612518
                                             63 BANK1      6     4      2
                   _findServiceIndex
                              _getNV
                       _sendMessage2
                       _sendMessage3
                       _sendMessage4
                       _sendMessage5
                              _setNV
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _setNV                                                5     4      1  539096
                                             58 BANK1      5     4      1
                     _APP_nvValidate
                 _APP_nvValueChanged
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _APP_nvValueChanged                                   8     6      2  519783
                                             51 BANK1      7     5      2
                            ___awdiv
                            ___awmod
                              _getNV
                     _setBounceState
                      _setMultiState
                   _setServoPosition
                      _setServoState
              _setTimedResponseDelay
                            _setType
                  _startBounceOutput
                   _startMultiOutput
                   _startServoOutput
 ---------------------------------------------------------------------------------
 (2) _setTimedResponseDelay                                1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _setServoPosition                                     2     1      1     304
                                             63 BANK0      2     1      1
                            ___awdiv (ARG)
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (4) _APP_nvValidate                                       3     2      1    9015
                                             63 BANK0      2     1      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _mnsProcessMessage                                   37    35      2  729448
                                             63 BANK1      6     4      2
                                              0 BANK2     30    30      0
                                NULL *
                   _ackGetDiagnostic *
                        _bootEsdData *
                         _canEsdData *
                   _canGetDiagnostic *
                  _consumer2QEsdData *
            _consumer2QGetDiagnostic *
                       _factoryReset
                   _findServiceIndex
                       _getParameter
                  _getParameterFlags
                   _mnsGetDiagnostic *
                    _nvGetDiagnostic *
                       _nvGetESDdata *
                    _producerEsdData *
              _producerGetDiagnostic *
                   _rebuildHashtable
                       _sendMessage2
                       _sendMessage3
                       _sendMessage4
                       _sendMessage5
                       _sendMessage6
                       _sendMessage7
                      _setLEDsByMode
                 _startTimedResponse
                 _teachGetDiagnostic *
                    _teachGetESDdata *
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _teachGetESDdata                                      1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _teachGetDiagnostic                                   3     1      2      62
                                             54 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _sendMessage6                                         7     1      6   13385
                                             70 BANK0      1     1      0
                                              8 BANK1      6     0      6
                              _numEv (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (3) _sendMessage3                                         4     1      3   15722
                                             70 BANK0      3     0      3
                                              8 BANK1      1     1      0
                        _sendMessage
 ---------------------------------------------------------------------------------
 (4) _producerGetDiagnostic                                3     1      2      62
                                             54 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _producerEsdData                                      1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _nvGetESDdata                                         1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _nvGetDiagnostic                                      3     1      2      62
                                             54 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _mnsGetDiagnostic                                     3     1      2      62
                                             54 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _getParameter                                         2     2      0     439
                                             50 BANK0      1     1      0
                  _getParameterFlags
                               _have
 ---------------------------------------------------------------------------------
 (5) _getParameterFlags                                    1     1      0     247
                                             49 BANK0      1     1      0
                               _have
 ---------------------------------------------------------------------------------
 (4) _consumer2QGetDiagnostic                              3     1      2      62
                                             54 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _consumer2QEsdData                                    1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _canGetDiagnostic                                     4     2      2    1020
                                             54 BANK0      4     2      2
               _getNumRxBuffersInUse
               _getNumTxBuffersInUse
 ---------------------------------------------------------------------------------
 (3) _canEsdData                                           1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _bootEsdData                                          1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _ackGetDiagnostic                                     3     1      2      62
                                             54 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _mnsPoll                                              4     4      0   51318
                                             13 BANK1      4     4      0
                       _sendMessage2
                       _sendMessage5
                      _setLEDsByMode
                            _tickGet
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _setLEDsByMode                                        0     0      0      31
                         _showStatus
 ---------------------------------------------------------------------------------
 (4) _sendMessage2                                         3     1      2   12181
                                             70 BANK0      3     1      2
                        _sendMessage
 ---------------------------------------------------------------------------------
 (2) _consumer2QProcessMessage                            20    18      2   31318
                                             63 BANK1      5     3      2
                                              0 BANK2     14    14      0
                            ___awdiv
                            ___awmod
                          _findEvent
                             _getEVs
                              _getNV
                      _pushTwoAction
                _setExpeditedActions
                   _setNormalActions
 ---------------------------------------------------------------------------------
 (3) _setNormalActions                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _setExpeditedActions                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _pushTwoAction                                        1     1      0      62
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _canReceiveMessage                                   10     8      2   13809
                                             10 BANK1      9     7      2
                   _getBufferPointer
               _getNumRxBuffersInUse
              _handleSelfEnumeration
                             _memcpy
                                _pop
                 _processEnumeration
 ---------------------------------------------------------------------------------
 (3) _processEnumeration                                   7     7      0   10643
                                              3 BANK1      7     7      0
                        _setNewCanId
                            _tickGet
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (4) _setNewCanId                                          1     1      0    9960
                                              2 BANK1      1     1      0
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _pop                                                  9     7      2     427
                                             45 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              11     5      6     478
                                             45 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) _handleSelfEnumeration                                7     5      2     659
                                             55 BANK0      7     5      2
                            _tickGet
 ---------------------------------------------------------------------------------
 (5) _getNumRxBuffersInUse                                 4     4      0     564
                                             50 BANK0      4     4      0
                   _getBufferPointer
                           _quantity
 ---------------------------------------------------------------------------------
 (6) _getBufferPointer                                     3     1      2      31
                                             45 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _canProcessMessage                                    4     2      2   29169
                                             63 BANK1      4     2      2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (2) _bootProcessMessage                                   4     2      2    9898
                                             63 BANK1      4     2      2
                           _writeNVM
 ---------------------------------------------------------------------------------
 (2) _ackEventProcessMessage                              11     9      2   65978
                                             63 BANK1      4     2      2
                                              0 BANK2      5     5      0
                   _ackEventCheckLen
                          _findEvent
                        _findService
                    _isConsumedEvent
                       _sendMessage7
 ---------------------------------------------------------------------------------
 (4) _sendMessage7                                         8     1      7   13956
                                             70 BANK0      1     1      0
                                              8 BANK1      7     0      7
                                NULL (ARG) *
                        _bootEsdData (ARG) *
                         _canEsdData (ARG) *
                  _consumer2QEsdData (ARG) *
                       _nvGetESDdata (ARG) *
                    _producerEsdData (ARG) *
                        _sendMessage
                 _tableIndexToEvtIdx (ARG)
                    _teachGetESDdata (ARG) *
 ---------------------------------------------------------------------------------
 (3) _isConsumedEvent                                      2     2      0    9681
                                             70 BANK0      2     2      0
                              _getEv
 ---------------------------------------------------------------------------------
 (3) _findService                                          6     4      2     192
                                             45 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _ackEventCheckLen                                     3     0      3   30013
                                             17 BANK1      3     0      3
                           _checkLen
 ---------------------------------------------------------------------------------
 (4) _checkLen                                             5     1      4   29771
                                             71 BANK0      1     1      0
                                             13 BANK1      4     0      4
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _sendMessage5                                         6     1      5   29014
                                             70 BANK0      1     1      0
                                              8 BANK1      5     0      5
                  _getParameterFlags (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (2) _APP_preProcessMessage                                2     0      2      90
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _APP_postProcessMessage                               2     0      2      90
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _loop                                                 8     8      0  226257
                                             46 BANK1      8     8      0
                             ___lmul
                              _getNV
                          _inputScan
                     _processActions
                     _processOutputs
                  _sendProducedEvent
                        _startServos
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _startServos                                          1     1      0   73384
                                             30 BANK1      1     1      0
                              _getNV
                         _pollServos
                        _setupTimer1
                        _setupTimer3
 ---------------------------------------------------------------------------------
 (3) _setupTimer3                                          8     8      0    1850
                                             53 BANK0      8     8      0
                              _getNV
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (3) _setupTimer1                                          8     8      0    1850
                                             53 BANK0      8     8      0
                              _getNV
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (3) _pollServos                                          12    12      0   69399
                                             18 BANK1     12    12      0
                            ___awdiv
                         _bounceDown
                           _bounceUp
                              _getNV
                         _initBounce
                  _sendProducedEvent
                            _tickGet
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _initBounce                                           1     1      0      62
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _bounceUp                                             9     9      0    8078
                                             63 BANK0      9     9      0
                            ___awdiv
                              _getNV
 ---------------------------------------------------------------------------------
 (4) _bounceDown                                          11    11      0   12774
                                             63 BANK0      7     7      0
                                              0 BANK1      4     4      0
                            ___awdiv
                             ___wmul
                              _getNV
 ---------------------------------------------------------------------------------
 (2) _processOutputs                                       2     2      0   27931
                                             18 BANK1      2     2      0
                              _getNV
                  _sendProducedEvent
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (2) _processActions                                       9     9      0   62111
                                             37 BANK1      9     9      0
                            ___awdiv
                            ___awmod
                          _completed
               _deleteTwoActionQueue
                              _doSOD
                             _doWait
                      _doneTwoAction
                     _finaliseOutput
                              _getNV
                       _getTwoAction
                      _needsStarting
                 _peekTwoActionQueue
                     _setOutputState
                        _startOutput
 ---------------------------------------------------------------------------------
 (3) _startOutput                                          3     1      2   42590
                                             34 BANK1      3     1      2
                  _startBounceOutput
                 _startDigitalOutput
                   _startMultiOutput
                   _startServoOutput
 ---------------------------------------------------------------------------------
 (5) _startServoOutput                                     3     2      1     766
                                             49 BANK0      3     2      1
                              _getNV
 ---------------------------------------------------------------------------------
 (5) _startMultiOutput                                     3     2      1     822
                                             49 BANK0      3     2      1
                              _getNV
 ---------------------------------------------------------------------------------
 (4) _startDigitalOutput                                   8     7      1   39938
                                             26 BANK1      8     7      1
                              _getNV
          _sendInvertedProducedEvent
                       _setOutputPin
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _sendInvertedProducedEvent                            8     4      4   27223
                                             18 BANK1      8     4      4
                              _getNV (ARG)
                  _sendProducedEvent
 ---------------------------------------------------------------------------------
 (5) _startBounceOutput                                    2     1      1     425
                                             45 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _setOutputState                                       3     1      2    2869
                                             51 BANK0      3     1      2
                     _setBounceState
                      _setMultiState
                      _setServoState
 ---------------------------------------------------------------------------------
 (5) _setServoState                                        2     1      1     704
                                             49 BANK0      2     1      1
                              _getNV
 ---------------------------------------------------------------------------------
 (5) _setMultiState                                        2     1      1     884
                                             49 BANK0      2     1      1
                              _getNV
 ---------------------------------------------------------------------------------
 (5) _setBounceState                                       2     1      1     704
                                             49 BANK0      2     1      1
                              _getNV
 ---------------------------------------------------------------------------------
 (3) _needsStarting                                        5     3      2     515
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _getTwoAction                                         0     0      0     362
                 _peekTwoActionQueue
 ---------------------------------------------------------------------------------
 (3) _peekTwoActionQueue                                   2     2      0     362
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _finaliseOutput                                       2     1      1     211
                                             45 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (3) _doWait                                               6     4      2    1905
                                             61 BANK0      6     4      2
                             ___lmul
                      _doneTwoAction
                            _tickGet
 ---------------------------------------------------------------------------------
 (3) _doneTwoAction                                        0     0      0      20
                       _popTwoAction
 ---------------------------------------------------------------------------------
 (4) _popTwoAction                                         1     1      0      20
 ---------------------------------------------------------------------------------
 (3) _doSOD                                                0     0      0    1818
                   _findServiceIndex
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (4) _startTimedResponse                                   4     1      3    1626
                                             49 BANK0      4     1      3
                   _findServiceIndex (ARG)
 ---------------------------------------------------------------------------------
 (4) _findServiceIndex                                     4     4      0     192
                                             45 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _deleteTwoActionQueue                                 2     2      0     362
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _completed                                            6     4      2     583
                                             45 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _inputScan                                            4     4      0   35780
                                             18 BANK1      4     4      0
                              _getNV
                          _readInput
                  _sendProducedEvent
                           _writeNVM
 ---------------------------------------------------------------------------------
 (5) _sendProducedEvent                                    8     7      1   25464
                                             71 BANK0      2     1      1
                                             12 BANK1      6     6      0
                              _getEN
                              _getNN
                              _getNV (ARG)
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _sendMessage4                                         5     1      4   13683
                                             70 BANK0      1     1      0
                                              8 BANK1      4     0      4
                       _getParameter (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (5) _sendMessage                                         11     3      8    9928
                                             67 BANK0      3     3      0
                                              0 BANK1      8     0      8
                     _canSendMessage *
 ---------------------------------------------------------------------------------
 (6) _canSendMessage                                      10     8      2    3889
                                             57 BANK0     10     8      2
                _getNextWriteMessage
               _getNumTxBuffersInUse
                               _have
                            _isEvent
                               _push
                           _quantity
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (7) _push                                                12     9      3    1234
                                             45 BANK0     12     9      3
 ---------------------------------------------------------------------------------
 (7) _isEvent                                              2     2      0      99
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _have                                                 4     4      0     161
                                             45 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (7) _getNumTxBuffersInUse                                 0     0      0     363
                           _quantity
 ---------------------------------------------------------------------------------
 (7) _quantity                                             5     4      1     363
                                             45 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (7) _getNextWriteMessage                                 12    10      2     513
                                             45 BANK0     12    10      2
 ---------------------------------------------------------------------------------
 (3) _readInput                                            3     3      0     248
                                             49 BANK0      3     3      0
                              _getNV
 ---------------------------------------------------------------------------------
 (1) _initRomOps                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkPowerOnPb                                       1     1      0  610328
                                             57 BANK1      1     1      0
                       _APP_testMode
                       _factoryReset
                        _pbDownTimer
                          _pbUpTimer
                         _showStatus
 ---------------------------------------------------------------------------------
 (4) _showStatus                                           3     3      0      31
                                             45 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _pbUpTimer                                            5     5      0    9234
                                             68 BANK0      5     5      0
                            ___lldiv
                             ___lmul
                          _leds_poll
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _pbDownTimer                                          5     5      0    9234
                                             68 BANK0      5     5      0
                            ___lldiv
                             ___lmul
                          _leds_poll
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _leds_poll                                            4     4      0    7243
                                             63 BANK0      4     4      0
                            ___awdiv
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _tickGet                                             10     6      4     318
                                             45 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1176
                                             49 BANK0     12     4      8
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     466
                                             55 BANK0     13     5      8
                            _tickGet (ARG)
 ---------------------------------------------------------------------------------
 (3) _factoryReset                                         5     5      0  591603
                                             52 BANK1      5     5      0
                                NULL *
                   _APP_factoryReset
                    _canFactoryReset *
                    _mnsFactoryReset *
                     _nvFactoryReset *
                  _teachFactoryReset *
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _teachFactoryReset                                    0     0      0   34433
                     _clearAllEvents
 ---------------------------------------------------------------------------------
 (4) _clearAllEvents                                       5     5      0   34433
                                              9 BANK1      5     5      0
                    _flushFlashBlock
                   _rebuildHashtable
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _nvFactoryReset                                       3     3      0   23401
                                              2 BANK1      3     3      0
                      _APP_nvDefault
                           _writeNVM
 ---------------------------------------------------------------------------------
 (5) _APP_nvDefault                                        7     7      0   13497
                                             63 BANK0      5     5      0
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    4538
                                             49 BANK0      6     2      4
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    1873
                                             45 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    6925
                                             55 BANK0      8     4      4
                             ___wmul (ARG)
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (4) _mnsFactoryReset                                      0     0      0    9774
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _canFactoryReset                                      0     0      0    9774
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _APP_factoryReset                                     3     3      0  504286
                                             51 BANK1      1     1      0
           _factoryResetGlobalEvents
                    _flushFlashBlock
                            _setType
 ---------------------------------------------------------------------------------
 (5) _setType                                              3     2      1  503952
                                             48 BANK1      3     2      1
                           _configIO
                      _defaultEvents
                         _defaultNVs
                             _saveNV
 ---------------------------------------------------------------------------------
 (6) _defaultNVs                                           5     4      1   14853
                                              6 BANK1      5     4      1
                        _loadNvCache
                             _saveNV
 ---------------------------------------------------------------------------------
 (6) _saveNV                                               4     3      1   10078
                                              2 BANK1      4     3      1
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _loadNvCache                                          5     5      0    4493
                                             55 BANK0      5     5      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (6) _defaultEvents                                        5     4      1  461056
                                             44 BANK1      4     3      1
                           _addEvent
                        _clearEvents
 ---------------------------------------------------------------------------------
 (7) _clearEvents                                          1     1      0  332882
                                             39 BANK1      1     1      0
                  _deleteActionRange
               _deleteHappeningRange
 ---------------------------------------------------------------------------------
 (8) _deleteHappeningRange                                10     9      1  163860
                                             29 BANK1      9     8      1
              _checkRemoveTableEntry
                    _flushFlashBlock
                            _readNVM
                   _rebuildHashtable
                         _validStart
                            _writeEv
 ---------------------------------------------------------------------------------
 (8) _deleteActionRange                                   10     9      1  168929
                                             29 BANK1     10     9      1
              _checkRemoveTableEntry
                    _flushFlashBlock
                             _getEVs
                   _rebuildHashtable
                         _validStart
                            _writeEv
 ---------------------------------------------------------------------------------
 (5) _addEvent                                            15     8      7  127554
                                             29 BANK1     15     8      7
                          _findEvent
                    _flushFlashBlock
                            _readNVM
                   _rebuildHashtable
                            _writeEv
                           _writeNVM
 ---------------------------------------------------------------------------------
 (5) _writeEv                                             12    10      2   73087
                                             17 BANK1     12    10      2
              _checkRemoveTableEntry
                            _readNVM
                           _writeNVM
 ---------------------------------------------------------------------------------
 (6) _checkRemoveTableEntry                                2     2      0   57047
                                             15 BANK1      2     2      0
                             _getEVs
                   _removeTableEntry
                         _validStart
 ---------------------------------------------------------------------------------
 (5) _removeTableEntry                                     6     6      0   43283
                                              9 BANK1      6     6      0
                    _flushFlashBlock
                            _readNVM
                   _rebuildHashtable
                         _validStart
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _rebuildHashtable                                    11    11      0   24393
                                              0 BANK1      9     9      0
                              _getEN
                              _getEv
                            _getHash
                              _getNN
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _getEv                                                9     7      2    9616
                                             61 BANK0      9     7      2
                            _readNVM
                         _validStart
 ---------------------------------------------------------------------------------
 (7) _getEVs                                               8     8      0    9178
                                             61 BANK0      8     8      0
                            _readNVM
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _validStart                                           6     6      0    4394
                                             55 BANK0      6     6      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (4) _findEvent                                           13     9      4   11368
                                              0 BANK1     13     9      4
                              _getEN
                            _getHash
                              _getNN
 ---------------------------------------------------------------------------------
 (4) _getNN                                               12    10      2    4493
                                             55 BANK0     12    10      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (4) _getHash                                              6     2      4     555
                                             67 BANK0      6     2      4
                              _getEN (ARG)
                              _getNN (ARG)
 ---------------------------------------------------------------------------------
 (4) _getEN                                               11     9      2    4428
                                             55 BANK0     11     9      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (2) _configIO                                             8     8      0   17410
                                              2 BANK1      8     8      0
                              _getNV
                            _readNVM
                   _setDigitalOutput
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _writeNVM                                             7     3      4    9774
                                             68 BANK0      5     1      4
                                              0 BANK1      2     2      0
                      _APP_nvDefault (ARG)
                       _EEPROM_Write
                        _FLASH_Write
 ---------------------------------------------------------------------------------
 (4) _FLASH_Write                                          8     5      3     728
                                             48 BANK0      7     4      3
                    _eraseFlashBlock
                    _flushFlashBlock
                     _loadFlashBlock
 ---------------------------------------------------------------------------------
 (5) _loadFlashBlock                                       1     1      0      99
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _flushFlashBlock                                      2     2      0     167
                                             46 BANK0      2     2      0
     _APP_isSuitableTimeToWriteFlash
                    _eraseFlashBlock
 ---------------------------------------------------------------------------------
 (6) _eraseFlashBlock                                      1     1      0      34
                                             45 BANK0      1     1      0
     _APP_isSuitableTimeToWriteFlash
 ---------------------------------------------------------------------------------
 (7) _APP_isSuitableTimeToWriteFlash                       0     0      0       0
                    _isNoServoPulses
 ---------------------------------------------------------------------------------
 (8) _isNoServoPulses                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EEPROM_Write                                         4     1      3     611
                                             47 BANK0      4     1      3
                        _EEPROM_Read
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (5) _updateModuleErrorStatus                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _setDigitalOutput                                     3     2      1    2269
                                             55 BANK0      3     2      1
                              _getNV
                            _readNVM (ARG)
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (4) _setOutputPin                                         4     3      1    1500
                                             49 BANK0      4     3      1
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (5) _getNV                                                4     2      2      93
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _readNVM                                              6     3      3    4298
                                             49 BANK0      6     3      3
                        _EEPROM_Read
                         _FLASH_Read
 ---------------------------------------------------------------------------------
 (4) _FLASH_Read                                           4     2      2     183
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) _EEPROM_Read                                          2     0      2     242
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _factoryResetGlobalEvents                             0     0      0       0
 ---------------------------------------------------------------------------------
 (26) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _APP_testMode                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _isrLow                                             15    15      0    7802
                                             30 BANK0     15    15      0
                             _lowIsr
 ---------------------------------------------------------------------------------
 (19) _lowIsr                                              5     5      0    7802
                                             25 BANK0      5     5      0
                                NULL *
                         _APP_lowIsr
                             _canIsr *
                          _mnsLowIsr *
 ---------------------------------------------------------------------------------
 (20) _mnsLowIsr                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (20) _canIsr                                              0     0      0    7641
                      _canFillRxFifo
                         _canTxError
                    _checkCANTimeout
                        _checkTxFifo
 ---------------------------------------------------------------------------------
 (21) _checkCANTimeout                                     4     4      0    2402
                                             21 BANK0      4     4      0
                        _checkTxFifo
                          i1_tickGet
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (21) _canTxError                                          0     0      0    2084
                        _checkTxFifo
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (21) _checkTxFifo                                         9     9      0    2084
                                             12 BANK0      9     9      0
              i1_getNextWriteMessage
                          i1_isEvent
                              i1_pop
                          i1_tickGet
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (22) i1_tickGet                                          10     6      4     318
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (22) i1_pop                                               9     7      2     317
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (22) i1_isEvent                                           2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (21) _canFillRxFifo                                       5     5      0    1071
                                             12 BANK0      4     4      0
                 i1_getBufferPointer
              i1_getNextWriteMessage
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (22) i1_updateModuleErrorStatus                           0     0      0       0
 ---------------------------------------------------------------------------------
 (22) i1_getNextWriteMessage                              12    10      2     383
                                              0 BANK0     12    10      2
 ---------------------------------------------------------------------------------
 (22) i1_getBufferPointer                                  3     1      2      31
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (20) _APP_lowIsr                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (26) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (24) _isrHigh                                            12    12      0    6190
                                             30 COMRAM    12    12      0
                            _highIsr
 ---------------------------------------------------------------------------------
 (25) _highIsr                                             5     5      0    6190
                                             25 COMRAM     5     5      0
                                NULL *
                        _APP_highIsr
                           i2_canIsr *
 ---------------------------------------------------------------------------------
 (26) i2_canIsr                                            0     0      0    5353
                    i2_canFillRxFifo
                       i2_canTxError
                  i2_checkCANTimeout
                      i2_checkTxFifo
 ---------------------------------------------------------------------------------
 (27) i2_checkCANTimeout                                   4     4      0    1672
                                             21 COMRAM     4     4      0
                      i2_checkTxFifo
                          i2_tickGet
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (27) i2_canTxError                                        0     0      0    1461
                      i2_checkTxFifo
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (27) i2_checkTxFifo                                       9     9      0    1461
                                             12 COMRAM     9     9      0
              i2_getNextWriteMessage
                          i2_isEvent
                              i2_pop
                          i2_tickGet
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (28) i2_tickGet                                          10     6      4     211
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (28) i2_pop                                               9     7      2     225
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (28) i2_isEvent                                           2     2      0      68
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (27) i2_canFillRxFifo                                     5     5      0     759
                                             12 COMRAM     4     4      0
                 i2_getBufferPointer
              i2_getNextWriteMessage
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (28) i2_updateModuleErrorStatus                           0     0      0       0
 ---------------------------------------------------------------------------------
 (28) i2_getNextWriteMessage                              12    10      2     273
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (28) i2_getBufferPointer                                  3     1      2      22
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (26) _APP_highIsr                                         0     0      0     676
         _timer1DoneInterruptHandler
         _timer3DoneInterruptHandler
 ---------------------------------------------------------------------------------
 (27) _timer3DoneInterruptHandler                          0     0      0     338
                            i2_getNV
                     i2_setOutputPin
 ---------------------------------------------------------------------------------
 (27) _timer1DoneInterruptHandler                          0     0      0     338
                            i2_getNV
                     i2_setOutputPin
 ---------------------------------------------------------------------------------
 (28) i2_setOutputPin                                      4     3      1     272
                                              4 COMRAM     4     3      1
                            i2_getNV (ARG)
 ---------------------------------------------------------------------------------
 (28) i2_getNV                                             4     2      2      66
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (26) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 28
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _checkPowerOnPb
     _APP_testMode
     _factoryReset
       NULL(Fake) *
       _APP_factoryReset *
         _factoryResetGlobalEvents
         _flushFlashBlock
           _APP_isSuitableTimeToWriteFlash
             _isNoServoPulses
           _eraseFlashBlock
             _APP_isSuitableTimeToWriteFlash
         _setType
           _configIO
             _getNV
             _readNVM
               _EEPROM_Read
               _FLASH_Read
             _setDigitalOutput
               _getNV
               _readNVM (ARG)
               _setOutputPin (ARG)
                 _getNV (ARG)
             _writeNVM
               _APP_nvDefault (ARG)
                 ___awdiv
                   ___wmul (ARG)
                     _getNV (ARG)
                   _getNV (ARG)
                 ___awmod
                 ___wmul
               _EEPROM_Write (ARG)
                 _EEPROM_Read
                 _updateModuleErrorStatus
               _FLASH_Write (ARG)
                 _eraseFlashBlock
                 _flushFlashBlock
                 _loadFlashBlock
           _defaultEvents
             _addEvent
               _findEvent
                 _getEN
                   _readNVM
                 _getHash
                   _getEN (ARG)
                   _getNN (ARG)
                     _readNVM
                 _getNN
               _flushFlashBlock
               _readNVM
               _rebuildHashtable
                 _getEN
                 _getEv
                   _readNVM
                   _validStart
                     _readNVM
                 _getHash
                 _getNN
                 _validStart
               _writeEv
                 _checkRemoveTableEntry
                   _getEVs
                     _readNVM
                     _validStart
                   _removeTableEntry
                     _flushFlashBlock
                     _readNVM
                     _rebuildHashtable
                     _validStart
                     _writeNVM
                   _validStart
                 _readNVM
                 _writeNVM
               _writeNVM
             _clearEvents
               _deleteActionRange
                 _checkRemoveTableEntry
                 _flushFlashBlock
                 _getEVs
                 _rebuildHashtable
                 _validStart
                 _writeEv
               _deleteHappeningRange
                 _checkRemoveTableEntry
                 _flushFlashBlock
                 _readNVM
                 _rebuildHashtable
                 _validStart
                 _writeEv
           _defaultNVs
             _loadNvCache
               _readNVM
             _saveNV
               _writeNVM
           _saveNV
       _canFactoryReset *
         _writeNVM
       _mnsFactoryReset *
         _writeNVM
       _nvFactoryReset *
         _APP_nvDefault
         _writeNVM
       _teachFactoryReset *
         _clearAllEvents
           _flushFlashBlock
           _rebuildHashtable
           _writeNVM
       _writeNVM *
     _pbDownTimer
       ___lldiv
         _tickGet (ARG)
       ___lmul
         _getNV (ARG)
       _leds_poll
         ___awdiv
         _tickGet
       _tickGet
     _pbUpTimer
       ___lldiv
       ___lmul
       _leds_poll
       _tickGet
     _showStatus
   _factoryReset
   _initRomOps
   _loop
     ___lmul
     _getNV
     _inputScan
       _getNV
       _readInput
         _getNV
       _sendProducedEvent
         _getEN
         _getNN
         _getNV (ARG)
         _sendMessage4 (ARG)
           _getParameter (ARG)
             _getParameterFlags
               _have
             _have
           _sendMessage (ARG)
             _canSendMessage *
               _getNextWriteMessage
               _getNumTxBuffersInUse
                 _quantity
               _have
               _isEvent
               _push
               _quantity
               _updateModuleErrorStatus
       _writeNVM
     _processActions
       ___awdiv
       ___awmod
       _completed
       _deleteTwoActionQueue
       _doSOD
         _findServiceIndex
         _startTimedResponse
           _findServiceIndex (ARG)
       _doWait
         ___lmul
         _doneTwoAction
           _popTwoAction
         _tickGet
       _doneTwoAction
       _finaliseOutput
       _getNV
       _getTwoAction
         _peekTwoActionQueue
       _needsStarting
       _peekTwoActionQueue
       _setOutputState
         _setBounceState
           _getNV
         _setMultiState
           _getNV
         _setServoState
           _getNV
       _startOutput
         _startBounceOutput
         _startDigitalOutput
           _getNV
           _sendInvertedProducedEvent
             _getNV (ARG)
             _sendProducedEvent (ARG)
           _setOutputPin
           _writeNVM
         _startMultiOutput
           _getNV
         _startServoOutput
           _getNV
     _processOutputs
       _getNV
       _sendProducedEvent
       _setOutputPin
     _sendProducedEvent
     _startServos
       _getNV
       _pollServos
         ___awdiv
         _bounceDown
           ___awdiv
           ___wmul
           _getNV
         _bounceUp
           ___awdiv
           _getNV
         _getNV
         _initBounce
         _sendProducedEvent
         _tickGet
         _writeNVM
       _setupTimer1
         _getNV
         _setOutputPin
       _setupTimer3
         _getNV
         _setOutputPin
     _tickGet
   _poll
     NULL(Fake) *
     _APP_postProcessMessage *
     _APP_preProcessMessage *
     ___lmul *
     _ackEventProcessMessage *
       _ackEventCheckLen
         _checkLen
           _sendMessage5
             _getParameterFlags (ARG)
             _sendMessage (ARG)
       _findEvent
       _findService
       _isConsumedEvent
         _getEv
       _sendMessage7
         NULL(Fake) (ARG) *
         _bootEsdData (ARG) *
         _canEsdData (ARG) *
         _consumer2QEsdData (ARG) *
         _nvGetESDdata (ARG) *
         _producerEsdData (ARG) *
         _sendMessage (ARG) *
         _tableIndexToEvtIdx (ARG) *
         _teachGetESDdata (ARG) *
     _bootProcessMessage *
       _writeNVM
     _canProcessMessage *
       _sendMessage5
     _canReceiveMessage *
       _getBufferPointer
       _getNumRxBuffersInUse
         _getBufferPointer
         _quantity
       _handleSelfEnumeration
         _tickGet
       _memcpy
       _pop
       _processEnumeration
         _setNewCanId
           _writeNVM
         _tickGet
         _updateModuleErrorStatus
     _consumer2QProcessMessage *
       ___awdiv
       ___awmod
       _findEvent
       _getEVs
       _getNV
       _pushTwoAction
       _setExpeditedActions
       _setNormalActions
     _flushFlashBlock *
     _leds_poll *
     _mnsPoll *
       _sendMessage2
         _sendMessage
       _sendMessage5
       _setLEDsByMode
         _showStatus
       _tickGet
       _writeNVM
     _mnsProcessMessage *
       NULL(Fake) *
       _ackGetDiagnostic *
       _bootEsdData *
       _canEsdData *
       _canGetDiagnostic *
         _getNumRxBuffersInUse
         _getNumTxBuffersInUse
       _consumer2QEsdData *
       _consumer2QGetDiagnostic *
       _factoryReset *
       _findServiceIndex *
       _getParameter *
       _getParameterFlags *
       _mnsGetDiagnostic *
       _nvGetDiagnostic *
       _nvGetESDdata *
       _producerEsdData *
       _producerGetDiagnostic *
       _rebuildHashtable *
       _sendMessage2 *
       _sendMessage3 *
         _sendMessage
       _sendMessage4 *
       _sendMessage5 *
       _sendMessage6 *
         _numEv (ARG)
           _readNVM
           _validStart
         _sendMessage (ARG)
       _sendMessage7 *
       _setLEDsByMode *
       _startTimedResponse *
       _teachGetDiagnostic *
       _teachGetESDdata *
       _writeNVM *
     _nvProcessMessage *
       _findServiceIndex
       _getNV
       _sendMessage2
       _sendMessage3
       _sendMessage4
       _sendMessage5
       _setNV
         _APP_nvValidate
           ___awdiv
           ___awmod
         _APP_nvValueChanged
           ___awdiv
           ___awmod
           _getNV
           _setBounceState
           _setMultiState
           _setServoPosition
             ___awdiv (ARG)
             _getNV (ARG)
           _setServoState
           _setTimedResponseDelay
           _setType
           _startBounceOutput
           _startMultiOutput
           _startServoOutput
         _writeNVM
       _startTimedResponse
     _pollTimedResponse *
       NULL(Fake) *
       _mnsTRallDiagnosticsCallback *
         NULL(Fake) *
         _ackGetDiagnostic *
         _canGetDiagnostic *
         _consumer2QGetDiagnostic *
         _mnsGetDiagnostic *
         _nvGetDiagnostic *
         _producerGetDiagnostic *
         _sendMessage6 *
         _teachGetDiagnostic *
       _mnsTRrqnpnCallback *
         _getParameter
         _sendMessage4
       _mnsTRserviceDiscoveryCallback *
         _sendMessage5
       _nerdCallback *
         _getEN
         _getNN
         _sendMessage7
         _tableIndexToEvtIdx
         _validStart
       _nvTRnvrdCallback *
         _getNV
         _sendMessage4
       _reqevCallback *
         _getEN
         _getEv
         _getNN
         _numEv
         _sendMessage6
       _sodTRCallback *
         _APP_GetEventState
           ___awdiv
           _getNV
           _readNVM
         ___awdiv
         _getNV
         _sendInvertedProducedEvent
     _producerProcessMessage *
       _APP_GetEventState
       _findEvent
       _getEv
       _sendMessage3
       _sendMessage4
     _showStatus *
     _teachProcessMessage *
       _doEvlrn
         _APP_addEvent
           _addEvent
           _checkRemoveTableEntry
           _rebuildHashtable
           _writeEv
         _sendMessage2
         _sendMessage3
         _sendMessage5
       _doEvuln
         _removeEvent
           _findEvent
           _removeTableEntry
         _sendMessage2
         _sendMessage3
         _sendMessage5
       _doNenrd
         _evtIdxToTableIndex
         _getEN
         _getNN
         _sendMessage3
         _sendMessage5
         _validStart
       _doNerd
         _findServiceIndex
         _startTimedResponse
       _doNnclr
         _clearAllEvents
         _sendMessage2
         _sendMessage5
       _doNnevn
         _readNVM
         _sendMessage3
       _doReqev
         _findEvent
         _findServiceIndex
         _getEv
         _numEv
         _sendMessage3
         _sendMessage5
         _sendMessage6
         _startTimedResponse
       _doReval
         _evtIdxToTableIndex
         _getEv
         _numEv
         _sendMessage3
         _sendMessage5
         _validStart
       _doRqevn
         _sendMessage3
         _validStart
       _sendMessage3
       _sendMessage5
       _teachCheckLen
         _checkLen
         _sendMessage5
     _tickGet *
   _powerUp
     NULL(Fake) *
     _ackPowerUp *
     _bootPowerUp *
       _readNVM
     _canPowerUp *
       _readNVM
       _tickGet
     _consumer2QPowerUp *
     _initTicker *
     _initTimedResponse *
     _leds_powerUp *
       _tickGet
     _mnsPowerUp *
       _readNVM
       _setLEDsByMode
       _tickGet
     _nvPowerUp *
       _loadNvCache
     _producerPowerUp *
     _teachPowerUp *
       _rebuildHashtable
   _readNVM
   _setup
     _configIO
     _getNV
     _initInputScan
       _getNV
       _readInput
       _readNVM
     _initOutputs
     _initServos
       _getNV
       _readNVM
       _setOutputPosition
         _getNV
         _readNVM (ARG)
         _setDigitalOutput (ARG)
         _setOutputPin (ARG)
         _setServoPosition (ARG)
       _tickGet
     _setTimedResponseDelay
     _tickGet
     _universalEventsInit

 _isrLow (ROOT)
   _lowIsr
     NULL(Fake) *
     _APP_lowIsr *
     _canIsr *
       _canFillRxFifo
         i1_getBufferPointer
         i1_getNextWriteMessage
         i1_updateModuleErrorStatus
       _canTxError
         _checkTxFifo
           i1_getNextWriteMessage
           i1_isEvent
           i1_pop
           i1_tickGet
           i1_updateModuleErrorStatus
         i1_updateModuleErrorStatus
       _checkCANTimeout
         _checkTxFifo
         i1_tickGet
         i1_updateModuleErrorStatus
       _checkTxFifo
     _mnsLowIsr *

 _isrHigh (ROOT)
   _highIsr
     NULL(Fake) *
     _APP_highIsr *
       _timer1DoneInterruptHandler
         i2_getNV
         i2_setOutputPin
           i2_getNV (ARG)
       _timer3DoneInterruptHandler
         i2_getNV
         i2_setOutputPin
     i2_canIsr *
       i2_canFillRxFifo
         i2_getBufferPointer
         i2_getNextWriteMessage
         i2_updateModuleErrorStatus
       i2_canTxError
         i2_checkTxFifo
           i2_getNextWriteMessage
           i2_isEvent
           i2_pop
           i2_tickGet
           i2_updateModuleErrorStatus
         i2_updateModuleErrorStatus
       i2_checkCANTimeout
         i2_checkTxFifo
         i2_tickGet
         i2_updateModuleErrorStatus
       i2_checkTxFifo

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0     3A0      70       25.4%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      68        0.0%
BANK13             100      0       0      22        0.0%
BITBANK12          100      0       0      67        0.0%
BANK12             100      0       0      21        0.0%
BITBANK11          100      0       0      66        0.0%
BANK11             100      0       0      20        0.0%
BITBANK10          100      0       0      65        0.0%
BANK10             100      0       0      19        0.0%
BITBANK9           100      0       0      64        0.0%
BANK9              100      0       0      18        0.0%
BITBANK8           100      0       0      63        0.0%
BANK8              100      0       0      17        0.0%
BITBANK7           100      0       0      62        0.0%
BANK7              100      0       0      16        0.0%
BITBANK6           100      0       0      61        0.0%
BANK6              100      0       0      15        0.0%
BITBANK5           100      0       0      60        0.0%
BANK5              100      0      48      14       28.1%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      C0      13       75.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C8      11       78.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100     2D      F9       9       97.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100     45      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     49      73       5       71.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      53       1       88.3%
BITBANK14           41      0       0      69        0.0%
BANK14              41      0       0      23        0.0%
BITBIGSFRllhhh      2A      0       0      40        0.0%
BITBIGSFRlllhl      2A      0       0      57        0.0%
BITBIGSFRlhhhhh     19      0       0      26        0.0%
BITBIGSFRllhlh      16      0       0      48        0.0%
BITBIGSFRlhhhhh     15      0       0      28        0.0%
BITBIGSFRllhllh     10      0       0      49        0.0%
BITBIGSFRllhllh      F      0       0      50        0.0%
BITBIGSFRllhllh      F      0       0      51        0.0%
BITBIGSFRllhllh      F      0       0      52        0.0%
BITBIGSFRllhllh      F      0       0      53        0.0%
BITBIGSFRllhllh      F      0       0      54        0.0%
BITBIGSFRlhhlll      D      0       0      38        0.0%
BITBIGSFRllhhll      A      0       0      45        0.0%
BITBIGSFRllhhll      A      0       0      43        0.0%
BITBIGSFRlhhhhh      8      0       0      31        0.0%
BITBIGSFRlllhhl      7      0       0      56        0.0%
BITBIGSFRlhhllh      6      0       0      36        0.0%
BITBIGSFRlhhlh       6      0       0      35        0.0%
BITBIGSFRlhhhll      6      0       0      34        0.0%
BITBIGSFRlhhlll      5      0       0      37        0.0%
BITBIGSFRlhhhhh      5      0       0      30        0.0%
BITBIGSFRllhhll      4      0       0      47        0.0%
BITBIGSFRhh          4      0       0      24        0.0%
BITBIGSFRlhhhhh      4      0       0      27        0.0%
BITBIGSFRlllhhh      3      0       0      55        0.0%
BITBIGSFRlhhhhh      3      0       0      29        0.0%
BITBIGSFRllhhll      2      0       0      46        0.0%
BITBIGSFRllhhll      2      0       0      44        0.0%
BITBIGSFRllhhlh      2      0       0      41        0.0%
BITBIGSFRllhhlh      2      0       0      42        0.0%
BITBIGSFRlhhlll      2      0       0      39        0.0%
BITBIGSFRhl          2      0       0      25        0.0%
BITBIGSFRllll        2      0       0      58        0.0%
BITBIGSFRlhhhlh      1      0       0      33        0.0%
BITBIGSFRlhhhhl      1      0       0      32        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     48E      59        0.0%
DATA                 0      0     82E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Nov 06 16:32:21 2024

                   nerdCallback@nodeNumber 01D6                        findEvent@tableIndex 01C6  
                __end_of_pollTimedResponse AA40                     ?_handleSelfEnumeration 0097  
                       APP_GetEventState@h 01BC                           sendMessage@data1 01BB  
                         sendMessage@data2 01BC                           sendMessage@data3 01BD  
                         sendMessage@data4 01BE                           sendMessage@data5 01BF  
                         sendMessage@data6 01C0                           sendMessage@data7 01C1  
                      findEvent@nodeNumber 01BA              __end_of_setTimedResponseDelay C61C  
            __end_of_producerGetDiagnostic C1AE                          ackEventCheckLen@m 01CB  
                           _completed$1545 0091                              ?_APP_addEvent 01E6  
                     _getNumRxBuffersInUse BD1E                      _timedResponseCallback 003F  
                             ___awdiv@sign 009C                            _normalReadIndex 00CD  
                                       _io 00CF                                         _nn 00BD  
                                       bsr 0FE0                                ?_APP_lowIsr 0001  
                      ___wmul@multiplicand 0093                               configIO@type 01C2  
                       i2_getBufferPointer A2E4             _sendInvertedProducedEvent$1404 01D1  
                         ?_flushFlashBlock 0001                     _eventConsumer2QService EF0E  
                             ?_APP_highIsr 0001                    __end_of_eraseFlashBlock B958  
              __end_of_universalEventsInit C5AC                  ?_consumer2QProcessMessage 01F9  
                              _startServos 9A92                             ??_getTwoAction 008F  
                __end_of_deleteActionRange 97DE                                        l500 389E  
                                      l501 38AA                                        l352 5070  
                                      l281 6B88                                        l259 560C  
                                      l453 35CC                                        l550 A620  
                                      l462 35E2                                        l279 6AF2  
                                      l560 A92E                                        l448 35C2  
                                      l465 37C6                                        l457 35D8  
                                      l546 A5DE                                        l490 38F8  
                                      l555 A8EC                                _startOutput B4BC  
                                      l645 759C                                        l813 31EC  
                                      l653 AF8E                                        l469 37BA  
                                      l819 AD7A                                        l916 A198  
                          checkPowerOnPb@i 01F3                         _enumerationResults 0234  
                    deleteHappeningRange@h 01DE            ?_APP_isSuitableTimeToWriteFlash 0001  
         ??_APP_isSuitableTimeToWriteFlash 008D                        _expeditedWriteIndex 00CA  
                          _initServos$8082 00A7                            _initServos$8083 00A6  
                                      _evs 0220                                        _pop 9C72  
                            _APP_nvDefault 8C52                               ___awmod@sign 0092  
                                      prod 0FF3                    i2getNextWriteMessage@wr 000C  
                                      tosl 0FFD                                        wreg 0FE8  
             tableIndexToEvtIdx@tableIndex 008D                        ?i2_getBufferPointer 0001  
     sendInvertedProducedEvent@can_send_on 01CE                    APP_nvValueChanged@index 01F2  
             APP_GetEventState@disable_off 01BB                    APP_nvValueChanged@value 01ED  
      __end_of_mnsTRallDiagnosticsCallback 8274                _mnsTRallDiagnosticsCallback 8170  
                                     l2016 3C6C                                       l2210 BA9A  
                                     l1180 C5C6                                       l1309 6684  
                                     l2047 C29A                                       l1271 C318  
                                     l1255 91D6                                       l1096 13B2  
                                     l1440 7EF2                                       l1273 C31C  
                                     l1434 7E76                                       l2172 B0B0  
                                     l1508 21B8                                       l2165 C4BA  
                                     l3125 A7B6                                       l1438 7EC2  
                                     l1543 44EA                                       l3055 605A  
                                     l1439 7EC6                                       l2192 B944  
                                     l1800 8750                                       l1552 45F0  
                                     l2513 683C                                       l1545 451E  
                                     l2178 B0C6                                       l1538 4480  
                                     l2450 7022                                       l2443 6F64  
                                     l1476 1A6E                                       l2509 4CA0  
                                     l2517 6860                                       l1477 1A92  
                                     l1750 5D34                                       l2447 6FB2  
                                     l1752 5D3C                                       l1761 5DCC  
                                     l1770 5E40                                       l1763 5DDE  
                                     l1772 5E48                                       l2484 AFC6  
                                     l1781 5ED2                                       l1765 5DE4  
                                     l1783 5EE2                                       l1767 5DEA  
                                     l1759 5DBC                                       l2832 BDE6  
                                     l2736 231A                                       l1785 5EEC  
                                     l1787 5EF6                                       l1779 5EC2  
                           _bootloaderType 00C8                                       l2932 7880  
                                     l1991 9852                                       l1984 9902  
            __end_ofi2_getNextWriteMessage 8EC6                                       _BIE0 0E7E  
                       doEvuln@eventNumber 01D0                                       ?_pop 008D  
                         setOutputState@io 0095                                       _EEIF 7DBE  
                   __end_of_checkPowerOnPb B4BC                                       _LATA 0F89  
                                     _LATB 0F8A                                       _LATC 0F8B  
                                     _IPR5 0F78                          doEvuln@nodeNumber 01CE  
                    __end_of_sodTRCallback 8476                             configIO@action 01C1  
                                     _WPUB 0F5B                          setOutputPin@state 0091  
                           i2_setOutputPin 70CE                                _outputState 02B4  
                            _pushTwoAction B400                      i1_getNextWriteMessage 8D24  
                                     _have ADF0                                       _main B9A4  
                                     _name 0848                                       _loop 6B94  
                                     _poll 390C                 __end_of_mnsTRrqnpnCallback C132  
                                     fsr1h 0FE2                                       fsr2h 0FDA  
                                     indf1 0FE7                                       indf2 0FDF  
                                     fsr1l 0FE1                                       fsr2l 0FD9  
                                     _push 3FE2                        setMultiState@action 0091  
                                     btemp 0054                           ?_producerEsdData 0001  
                        ?_removeTableEntry 0001                sodTRCallback@happeningIndex 01DB  
                                     pop@q 008D                                       prodh 0FF4  
                                     prodl 0FF3                            __end_ofi2_getNV BDCC  
                                     start 081C                               ?_loadNvCache 0001  
                       bounceDown@reversed 01BA                               bootPowerUp@a 009A  
                             bootPowerUp@b 0097                               bootPowerUp@i 0099  
          APP_GetEventState@happeningIndex 01BD                              setupTimer1@io 009C  
                      _setExpeditedActions C638                              setupTimer3@io 009C  
               __end_of_startDigitalOutput 57C6                             _setBounceState 95BA  
              consumer2QProcessMessage@end 02CC                consumer2QProcessMessage@enn 02CF  
                     ??i2_getBufferPointer 0003                consumer2QProcessMessage@opc 02CE  
                       ??_removeTableEntry 01C3                              ?_APP_testMode 0001  
                          getEN@tableIndex 00A1                               ___param_bank 0000  
                           ??_APP_addEvent 00A9                      ?_getNumRxBuffersInUse 0001  
                    __end_of_defaultEvents 76BA                           ?_producerPowerUp 0001  
                        findServiceIndex@i 0090                                completed@io 0092  
                     __end_of_EEPROM_Write B0EC                                _uptimeTimer 014C  
                                    ??_pop 008F                                      l20013 C0C4  
                                    l20031 8C60                                      l20103 92EE  
                                    _B0CON 0E80                                      l20121 95C0  
                                    l20105 92FE                                      l20201 B5B0  
                                    l20051 8C70                                      l20043 8C68  
                                    l20131 9644                                      l21003 86B0  
                                    l20125 95F2                                      l20141 B16E  
                                    l20109 932C                                      l20221 BD30  
                                    l20205 B5BA                                      l21013 86B4  
                                    l20055 8C74                                      l20047 8C6C  
                                    l20039 8C64                                      l21031 873C  
                                    l20127 9612                                      l20135 9664  
                                    l20151 8816                                      l21023 C1EC  
                                    _B1CON 0E90                                      l20065 8C78  
                                    l22001 8568                                      l21033 8746  
                                    l20153 8836                                      l20145 B188  
                                    l20401 3CDA                                      l20067 8CB2  
                                    l21051 8790                                      l21043 8778  
                                    l20155 8856                                      l20083 9536  
                                    l20147 B198                                      l20139 B158  
                                    l21211 C264                                      l21037 875A  
                                    l21029 8732                                      l20165 88D2  
                                    l20085 9556                                      l20093 95A8  
                                    l20173 9C20                                      l20421 3D5C  
                                    l20413 3D18                                      l20405 3CF6  
                                    l22021 A412                                      l20239 B72C  
                                    l21055 879C                                      l21047 8784  
                                    l21039 876C                                      l20159 8894  
                                    l20079 9504                                      l21231 8AC2  
                                    l20431 3DB8                                      l20423 3D68  
                                    l20415 3D2A                                      l22031 81D0  
                                    l22103 BBF4                                      _B2CON 0EA0  
                                    l21073 BCE8                                      l20089 9588  
                                    l20097 92C0                                      l23001 6ACE  
                                    l20193 B596                                      l21401 C416  
                                    l21233 8B00                                      l20339 C388  
                                    l21059 87AE                                      l21331 7F7E  
                                    l20523 56D6                                      l20507 563E  
                                    l20099 92CE                                      l23011 6B44  
                                    l21171 AFD0                                      l20451 3EBA  
                                    l20427 3D90                                      l22035 81D4  
                                    l20357 B5D4                                      l22141 5D94  
                                    l22125 5D36                                      l20621 AD88  
                                    l20541 578A                                      l20533 5728  
                                    l20517 56B6                                      l23013 6B50  
                                    l20189 B586                                      l21085 C1C4  
                                    l21173 AFE2                                      l21245 8B72  
                                    l20461 3F40                                      l20445 3E7A  
                                    l20437 3E3C                                      l21261 C154  
                                    l23101 374A                                      l22135 5D6C  
                                    l22215 5EFC                                      l21335 7FBA  
                                    l20527 5700                                      l21511 B4CE  
                                    l21271 C19C                                      l20711 3036  
                                    l20703 2FA8                                      l20455 3EEE  
                                    l20447 3E86                                      l20439 3E54  
                                    l22055 C112                                      l23031 BAD2  
                                    _B3CON 0EB0                                      l21281 B646  
                                    l20377 B604                                      l22129 5D40  
                                    l21345 8032                                      l21425 A904  
                                    l20561 A5D0                                      l20801 5BC4  
                                    l21177 AFF4                                      l22073 AA64  
                                    l20473 3FB0                                      l23113 3774  
                                    l23105 3760                                      l23121 378A  
                                    l23041 BAF2                                      l22171 5E42  
                                    l21339 7FF6                                      l21347 8066  
                                    l20643 BC40                                      l21451 A544  
                                    l21515 B4DA                                      l21507 B4C2  
                                    l20803 5BDC                                      l22243 9D02  
                                    l22235 9C9A                                      l22403 77EA  
                                    l21179 B008                                      l22331 C4E4  
                                    l20723 30B4                                      l22067 AA50  
                                    l20395 3CB2                                      l21611 844E  
                                    l23131 37CE                                      l24011 4950  
                                    l23035 BADA                                      l21277 B632  
                                    l22181 5E76                                      l21533 A136  
                                    l20629 ADE4                                      l20573 A5F6  
                                    l21461 B6D6                                      l20493 55CE  
                                    l21525 B4F2                                      l20549 C23C  
                                    l22085 C4FE                                      l22341 C4EC  
                                    l20717 3076                                      l20469 3F92  
                                    l21605 841A                                      l23141 37F0  
                                    l23117 3780                                      l21621 ACA0  
                                    l22175 5E4C                                      l24111 97F8  
                                    l21551 A19C                                      l20647 BC54  
                                    l21519 B4E6                                      l20815 5C4E  
                                    l21703 0BAA                                      l22415 BBB4  
                                    l22423 BBD4                                      l22407 77F2  
                                    l21367 B434                                      l20903 C214  
                                    l22095 C506                                      l22335 C4E8  
                                    l20735 3130                                      l20663 2DC0  
                                    l23063 35EA                                      _B4CON 0EC0  
                                    l22169 5DF0                                      l21537 A150  
                                    l21529 A132                                      l21465 B6E2  
                                    l21801 1192                                      l21713 0C16  
                                    l21641 085A                                      l22353 76FE  
                                    l22345 76BC                                      l22089 C502  
                                    l20729 30F2                                      l20681 2E60  
                                    l20745 31BE                                      l21609 8426  
                                    l23065 366A                                      l23049 3594  
                                    l23313 661E                                      l24025 497A  
                                    l23241 918A                                      l21625 ACAC  
                                    l21633 ACE0                                      l22187 5E9C  
                                    l21483 A7D2                                      l21475 B6FA  
                                    l20827 5CA8                                      l21811 1234  
                                    l21731 0D66                                      l21723 0CCC  
                                    l21707 0BDE                                      l21651 092E  
                                    l22443 8122                                      l22435 8098  
                                    l22371 7784                                      l21395 C412  
                                    l21387 C40E                                      l20675 2E20  
                                    l20667 2DD0                                      l21571 839E  
                                    l24203 9B4A                                      l23235 914A  
                                    l21469 B6EE                                      l20845 2982  
                                    l20829 5CD8                                      l21821 12B0  
                                    l21725 0CF4                                      l21653 0940  
                                    l21645 08B6                                      l22453 814E  
                                    l22381 77BE                                      l22373 7786  
                                    l20941 865E                                      l20933 8656  
                                    l20925 864E                                      l20765 AD58  
                                    l22509 AB0A                                      l22525 7B46  
                                    l22621 94D0                                      l22613 949C  
                                    l22605 946C                                      l23165 382C  
                                    l23085 36CC                                      l23229 9142  
                                    l15503 A7A8                                      l21487 A7EC  
                                    l21479 A7CE                                      l20855 2B38  
                                    l21831 1350                                      l21751 0E5A  
                                    l22367 7740                                      l24311 68DA  
                                    l20759 AD54                                      l20695 2F2A  
                                    l20687 2E9E                                      l22543 7BDE  
                                    l22535 7B8C                                      l22519 7B0E  
                                    l22615 94AE                                      l23183 38B4  
                                    l23175 3892                                      l23167 3872  
                                    l23271 A0E2                                      l23327 6668  
                                    l23335 6680                                      l24215 9B7C  
                                    l24047 BB6A                                      l22703 7C04  
                                    _B5CON 0ED0                                      l20865 2D02  
                                    l20873 2D5C                                      l20777 5A94  
                                    l21817 127A                                      l21809 1216  
                                    l21737 0D8C                                      l21673 0A3C  
                                    l21665 09D8                                      l21649 090C  
                                    l21729 0D28                                      l22385 77C4  
                                    l20961 8670                                      l20953 8666  
                                    l20937 865A                                      l20929 8652  
                                    l22633 C340                                      l24073 A9DA  
                                    l22561 B026                                      l22625 94E8  
                                    l22465 B322                                      l22473 B32A  
                                    l23185 38BA                                      l23193 38C8  
                                    l23265 A0CE                                      l23521 1952  
                                    l23433 1704                                      l24233 9BAA  
                                    l23417 7F14                                      l23409 7EF6  
                                    l24145 6F70                                      l22721 7CE0  
                                    l21499 A824                                      l20859 2B90  
                                    l21667 09F6                                      l21659 0970  
                                    l21683 0AB0                                      l22395 77E2  
                                    l20971 8684                                      l22643 C348  
                                    l20699 2F6A                                      l21595 83F6  
                                    l22651 B0F8                                      l24083 AA12  
                                    l24075 AA00                                      l23099 3704  
                                    l23283 A100                                      l23259 A0B4  
                                    l23355 66A8                                      l24219 9B80  
                                    l24139 6F68                                      l22707 7C28  
                                    l22805 4F8C                                      l20869 2D58  
                                    l20797 5B9C                                      l20789 5B34  
                                    l21861 1576                                      l21853 14BE  
                                    l21837 1396                                      l21829 1332  
                                    l21781 0FF2                                      l21677 0A70  
                                    l20893 A8C4                                      l24333 69AE  
                                    l20965 8674                                      l20957 866A  
                                    l20949 8662                                      l22637 C344  
                                    l22629 C33C                                      l21589 83DE  
                                    l24085 AA18                                      l22493 928A  
                                    l22485 9230                                      l22469 B326  
                                    l24413 22E0                                      l23357 66FA  
                                    l23613 1C8E                                      l23509 191A  
                                    l23453 1780                                      l23429 16D8  
                                    l22717 7CAE                                      l22709 7C36  
                                    l22823 5020                                      l22903 6202  
                                    l21871 160E                                      l21791 10D4  
                                    l21783 102A                                      l21767 0F3E  
                                    l21695 0B46                                      l21919 A28C  
                                    l21935 A1FA                                      l24327 69A2  
                                    l20991 868C                                      l21599 840E  
                                    l24511 259E                                      l24415 22E4  
                                    l23359 6710                                      l23367 672A  
                                    l23703 2152                                      l23607 1BD8  
                                    l23527 1962                                      l23447 1778  
                                    l23519 1926                                      l22751 99F6  
                                    l22809 4F94                                      l21881 16C2  
                                    l21865 15A8                                      l21857 151A  
                                    l21849 1462                                      l21697 0B64  
                                    l21689 0AE0                                      l20889 A8C0  
                                    l22681 C3EE                                      l22657 B14E  
                                    l24089 AA1C                                      l22593 AF06  
                                    l22577 BDD6                                      l23369 6762  
                                    l23705 2164                                      l23633 1D4A  
                                    l23465 182C                                      l23449 177C  
                                    l23473 184E                                      l23297 C056  
                                    l15491 A768                                      l24099 98A8  
                                    l22843 5130                                      l22835 50BA  
                                    l22931 62DE                                      l22915 6232  
                                    l21795 112A                                      l21787 107E  
                                    l20995 869E                                      l20979 8688  
                                    l21955 C324                                      l22675 9F68  
                                    l24611 2768                                      l24531 25F0  
                                    l24419 22E8                                      l23643 1D78  
                                    l23627 1D06                                      l23619 1CDA  
                                    l23555 1A08                                      l23547 19C2  
                                    l23539 1996                                      l23475 1886  
                                    l23459 17A6                                      l24355 BE78  
                                    l22747 99EE                                      l19021 7D80  
                                    l19005 7D4C                                      l15493 A774  
                                    l22853 518A                                      l22861 51D2  
                                    l22845 5140                                      l22909 621A  
                                    l21869 15E0                                      l24269 67FC  
                                    l23821 4518                                      l23805 449A  
                                    l21949 C320                                      l22669 9F12  
                                    l24509 2598                                      l24453 242E  
                                    l24437 23A6                                      l24373 222C  
                                    l23717 218E                                      l23661 2080  
                                    l23653 2052                                      l23581 1AC0  
                                    l23573 1A94                                      l23493 18D8  
                                    l23485 18AC                                      l24701 6150  
                                    l23397 7E9E                                      l22765 9A80  
                                    l15645 C0E0                                      l22855 519C  
                                    l22871 524C                                      l21799 1180  
                                    l21879 1692                                      l22791 9AEC  
                                    l21975 9E2C                                      l21967 9DB0  
                                    l22695 C3F6                                      l24551 2642  
                                    l24367 220C                                      l23647 1E5E  
                                    l23479 188A                                      l23903 469E  
                                    l24711 61AE                                      l22759 9A30  
                                    l19121 79F8                                      l22865 520C  
                                    l22929 62D6                                      l24289 685C  
                                    l21985 BEA2                                      l21993 BEBA  
                                    l22689 C3F2                                      l24385 2268  
                                    l24633 283C                                      l23681 20DA  
                                    l23665 209C                                      l23593 1B18  
                                    l23585 1AEA                                      l23737 21BE  
                                    l23921 4714                                      l19043 7DF2  
                                    l19035 7DC8                                      l19131 7A72  
                                    l19211 4338                                      l19203 4044  
                                    l22859 51C0                                      l22867 522A  
                                    l22963 63B4                                      l22891 61D2  
                                    l22883 61C6                                      l22779 9AA4  
                                    l21987 BEAA                                      l23771 43A6  
                                    l24571 2694                                      l24379 2262  
                                    l23915 46D0                                      l24651 C028  
                                    l19061 828A                                      l19133 7AAC  
                                    l19221 8BE8                                      l22869 523C  
                                    l22957 638A                                      l22965 63B8  
                                    l22973 63E4                                      l22981 69C8  
                                    l21989 BEB2                                      l23845 45E2  
                                    l24469 24C6                                      l23597 1BA2  
                                    l23925 4718                                      l24661 5F4C  
                                    l24709 6182                                      l24741 9982  
                                    l19047 7E36                                      l22991 6A50  
                                    l23839 458C                                      l23791 4414  
                                    l23783 43E8                                      l24591 26F6  
                                    l23919 470E                                      l24807 8908  
                                    l24751 9996                                      l19073 8294  
                                    l19305 349C                                      l24833 B484  
                                    l19401 4C5E                                      l22897 61EA  
                                    l23793 4418                                      l23777 43C2  
                                    l24489 2514                                      l23937 476E  
                                    l24673 5FEE                                      l24665 5F6E  
                                    l24745 998A                                      l19067 8290  
                                    l19139 7ABA                                      l19155 BB3A  
                                    l19243 3202                                      l19227 8C2A  
                                    l19171 ADFA                                      l19411 4C84  
                                    l23867 4674                                      l23971 483A  
                                    l24907 3C4A                                      l19317 3572  
                                    l22997 6AA6                                      l24773 6C42  
                                    l23949 47C2                                      l24669 5F72  
                                    l24861 39FC                                      l19423 BCBA  
                                    l19095 8338                                      l19263 328E  
                                    l19511 975A                                      l19343 49F6  
                                    l23959 47EC                                      l24695 60C8  
                                    l24855 399E                                      l23887 BE42  
                                    l19441 6DDC                                      l19601 A4E0  
                                    l19089 8326                                      l19281 33D6  
                                    l19257 3284                                      l19337 49DA  
                                    l23977 4866                                      l24697 6112  
                                    l19451 6E9E                                      l19435 6D5C  
                                    l18731 A6D2                                      l19099 833C  
                                    l19267 3294                                      l19179 AE56  
                                    l24787 6CF8                                      l24779 6C98  
                                    l23987 4890                                      l24867 3A02  
                                    l19429 BCCA                                      l19445 6E1E  
                                    l18901 B0E8                                      l19701 4CB2  
                                    l19621 6412                                      l19541 89D6  
                                    l19381 4B68                                      l19447 6E5C  
                                    l19439 6D9E                                      l19455 6EDC  
                                    l19607 A50A                                      l19711 4D28  
                                    l19703 4CC8                                      l19295 3488  
                                    l19519 97B6                                      l19527 97CA  
                                    l23999 48FA                                      l18681 B3BE  
                                    l18921 8F0C                                      l19473 A3BC  
                                    l19465 A392                                      l18841 788E  
                                    l19297 348A                                      l19553 8A94  
                                    l24993 B9E4                                      l18667 B990  
                                    l18691 B3E0                                      l18747 A6F6  
                                    l18915 8EF6                                      l19707 4D0A  
                                    l19483 A3FC                                      l18835 7844  
                                    l19627 641A                                      l19811 B82C  
                                    l24899 3B78                                      l18685 B3D6  
                                    l18677 B3A6                                      l18917 8EFA  
                                    l19725 4D88                                      l18853 7900  
                                    l18829 7832                                      l19645 6574  
                                    l19653 65BA                                      l19901 A674  
                                    l19591 A49A                                      l19735 4DF0  
                                    l19727 4D9E                                      l19719 4D66  
                                    l18791 B8BC                                      l19663 65CC  
                                    l19823 7572                                      l19831 769A  
                                    l19903 A67C                                      l19593 A49E  
                                    l18777 A73E                                      l18929 8F90  
                                    l19745 4E80                                      l19737 4E2E  
                                    l19497 9736                                      l19825 75C6  
                                    l19921 A6B4                                      l19913 A69C  
                                    l18867 B08E                                      l18963 B8C6  
                                    l19755 4F10                                      l19747 4EBE  
                                    l18939 93CC                                      l19827 75EE  
                                    l19691 BA78                                      l19683 BA3E  
                                    l19851 9F9A                                      l19843 9F86  
                                    l19835 9F72                                      l18973 B8EA  
                                    l19669 65E4                                      l19917 A6A6  
                                    l19941 AE92                                      l19933 AE78  
                                    l19599 A4D4                                      l18967 B8D8  
                                    l19759 4F4E                                      l19943 AE9A  
                                    l19791 9706                                      l19783 96EA  
                                    l19863 9FB8                                      l19855 9FA4  
                                    l19847 9F90                                      l19839 9F7C  
                                    l19953 AEBC                                      l19937 AE84  
                                    l19793 970C                                      l19769 968C  
                                    l19873 9FCC                                      l18987 7D2C  
                                    l19787 96FA                                      l19867 9FC2  
                                    l19859 9FAE                                      l19957 AECA  
                                    l19949 AEB2                                      l18999 7D48  
                                    l19895 A65E                                      l19977 B394  
                                    l19889 A64E                                      l19985 BA00  
                                    ?_have 0001                                      ?_main 0001  
                ??_consumer2QGetDiagnostic 0098                               ?_initOutputs 0001  
                      processEnumeration@i 01C3                            __end_of___awdiv A6BE  
                                    _EEADR 0F74                                      ?_loop 0001  
                        setOutputState@act 0093                            __end_of___awmod AED4  
                                    ?_poll 0001                                      ?_push 008D  
                                    _BSEL0 0E7D                            __end_of___lldiv A7C8  
                                    u20000 BA0C                                      u20020 BA20  
                                    u20040 BA2C                                      _T0CON 0FD5  
                          ___awdiv@divisor 0099                                      u20150 8874  
                                    u20160 88B2                                      u22010 A7E8  
                                    u20410 3CAE                                      u22100 A194  
                                    u20420 3CF2                                      u21221 2FC6  
                                    u20510 3DB4                                      u22040 A820  
                                    u21090 BC50                                      u21410 5C3A  
                                    u20610 3F0E                                      u20530 3E38  
                                    u20450 3D14                                      u21171 2EBC  
                                    u22060 A14C                                      u20700 55E6  
                                    u21340 5A8E                                      u22300 0A9E  
                                    u20620 3F3C                                      u20710 55E8  
                                    u21350 5A90                                      u20470 3D58  
                                    u23030 BBF0                                      u20640 3F60  
                                    u22160 8416                                      u23050 5D1A  
                                    u20730 5608                                      u21450 2960  
                                    u22410 0CB8                                      u20650 3F8E  
                                    u20570 3EB6                                      u20490 3D8C  
                                    u20820 5724                                      u20740 560A  
                                    u21460 2982                                      u22500 0EFA  
                                    u22420 0CBA                                      u22180 ACD4  
                                    u20830 5726                                      u21470 29B4  
                                    u22510 0EFC                                      u22430 0CE2  
                                    u20590 3EEA                                      u22190 ACD6  
                                    u24040 50B6                                      u20920 A5CC  
                                    u20680 556C                                      u21480 29B6  
                                    u22440 0CE4                                      u23170 5EC8  
                                    u24050 50B8                                      u20690 556E  
                                    u22610 1296                                      u22290 0A9C  
                                    u21570 8680                                      u23180 5ED8  
                                    u20860 575A                                      u24300 63BE  
                                    u22700 1452                                      u22460 0E14  
                                    u21900 C37A                                      u21740 8ABE  
                                    u24150 51FA                                      u20870 575C  
                                    u22470 0E16                                      u23350 76FA  
                                    u21824 7FAE                                      u24160 51FC  
                                    u24080 50FA                                      u20880 5796  
                                    u22720 14AC                                      u23520 816C  
                                    u21825 7FAA                                      u21834 7FEA  
                                    u24090 50FC                                      u20890 5798  
                                    u24170 61C0                                      u22810 1682  
                                    u22730 14AE                                      u23370 777E  
                                    u21835 7FE6                                      u21844 8026  
                                    u21845 8022                     APP_GetEventState@flags 01BA  
                                    u24350 6A78                                      u22750 1508  
                                    u23390 779E                                      u25118 1C3E  
                                    u25119 1C60                                      u24360 6A7A  
                                    u22760 150A                                      u22840 A2D6  
                                    u23480 80EC                                      u25320 43FE  
                                    u23465 80AC                                      u22690 1450  
                                    u22850 A2D8                                      u25410 45CA  
                                    u25330 4458                                      u24450 3590  
                                    u22780 1564                                      u25260 4386  
                                    u18230 C5C2                                      u14950 A778  
                                    u22790 1566                                      u22870 A244  
                                    u23494 8100                                      u25350 4484  
                                    u24710 91F2                                      u23830 9A2C  
                                    u23495 80FC                                      u22880 A246  
                                    u26400 6C80                                      u25440 4634  
                                    u25360 44DA                                      u24720 A0B0  
                                    u23840 9A2E                                      u18250 C5BA  
                                    u23930 9B1A                                      u25178 1F34  
                                    u25179 1F48                                      u19204 6E12  
                                    u18420 7826                                      u22948 860E  
                                    u26420 6CE0                                      u25620 A9D4  
                                    u25188 1FB2                                      u19205 6E0E  
                                    u22949 8620                                      u25189 1FC6  
                                    u25605 BB8E                                      u19214 6E4E  
                                    u26430 6D38                                      u25390 4562  
                                    u24670 3902                                      u25198 2030  
                                    u25550 4826                                      u25606 BB90  
                                    u25710 6F9A                                      u19215 6E4A  
                                    u25199 2044                                      u18520 8EE2  
                                    u18440 7884                                      u25480 469A  
                                    u19234 6E92                                      u19250 A3B8  
                                    u23890 9AD2                                      u24770 661A  
                                    u25570 48CA                                      u24690 9192  
                                    u19235 6E8E                                      u19244 6ECE  
                                    u22988 8218                                      u25900 2228  
                                    u25740 9B46                                      u19245 6ECA  
                                    u19085 4A56                                      u22989 822C  
                                    u19174 6D92                                      u19430 A4A8  
                                    u18550 8F38                                      u18710 831E  
                                    u25638 A9DE                                      u24870 7E6C  
                                    u19175 6D8E                                      u25639 A9FA  
                                    u19184 6DCE                                      u19440 A4AA  
                                    u18480 B0B4                                      u25840 685A  
                                    u25920 225C                                      u26720 3C54  
                                    u26608 3AA8                                      u19185 6DCA  
                                    u26609 3ABA                                      u19530 65C2  
                                    u26570 39E4                                      u19515 6530  
                                    u19460 A4C8                                      u19516 6534  
                                    u19428 A9B2                                      u26708 3C2A  
                                    u26468 89AE                                      u26709 3C3C  
                                    u26469 89C0                                      u19470 A4CA  
                                    u19630 4DB4                                      u18670 7E3E  
                                    u18568 8F3C                                      u19704 4EB0  
                                    u26648 3B36                                      u19705 4EAC  
                                    u26649 3B48                                      u19730 4ED4  
                                    u18690 8286                                      u19490 640E  
                          reqevCallback@ev 01DC                       __end_of_factoryReset 8648  
                                    u19644 4DE4                                      u18940 328A  
                                    u19645 4DE0                                      u19654 4E20  
                                    u19655 4E1C                                      u19744 4F04  
                                    u19680 4E44                                      u19920 AE9E  
                                    u19745 4F00                                      u19754 4F40  
                                    u19770 9688                                      u19755 4F3C  
                                    u18980 3490                                      u19860 A680  
                                    u19694 4E74                                      u19695 4E70  
                        _initTimedResponse C62C                                      u19970 B388  
                                    u19990 BA0A                             ?_APP_nvDefault 0001  
                          ___awdiv@counter 009B                                      _MSEL0 0E79  
                 __end_of_nvTRnvrdCallback BC28                               i2_canTxError B27E  
         __end_of_factoryResetGlobalEvents C654                             _APP_nvValidate AD0C  
                                    _TMR0H 0FD7                                      _TMR1H 0FCF  
                                    _TMR0L 0FD6                                      _TMR1L 0FCE  
                                    _TMR3H 0FB3                                      _TMR3L 0FB2  
                                    _PORTA 0F80                                      _PORTB 0F81  
                                    _PORTC 0F82                           i2setOutputPin@io 0008  
                                    _TRISA 0F92                                      _TRISB 0F93  
                                    _TRISC 0F94                            __end_of_doEvlrn 92BA  
                          __end_of_doNenrd AF44                       ?_setExpeditedActions 0001  
             nvProcessMessage@valueOrError 01FD                            __end_of_doEvuln AB36  
                           _ackDiagnostics 01B2                            __end_of_doNnclr BF32  
                          __end_of_doNnevn B084         sendInvertedProducedEvent@happening 01D0  
                          __end_of_doReqev 7BFE                            __end_of_doReval 94FE  
                                    i1_pop 9D0C                                      i2_pop 9E3E  
                          __end_of_doRqevn BE04                            __end_of_getHash C448  
                      ___lmul@multiplicand 0095                         _canTransmitTimeout 002F  
                       ?_initTimedResponse 0001                         __p_paramBlock_text 0820  
                          __end_of_highIsr 912C                              ?_leds_powerUp 0001  
                          __end_of_isEvent C29E                            __end_of_configs EE69  
                                    _canId 00C1                                      _doSOD C512  
              ??_sendInvertedProducedEvent 00A9                                      _getEN AB36  
                                    _getNN 937E                                      _getNV BCA4  
                                    _getEv 7814                           needsStarting@act 008D  
                     _enumerationStartTime 002B                            __end_of_readNVM B400  
                          __end_of_isrHigh 8562                                      _setNV AA40  
                   __end_ofi2_setOutputPin 727C                                      _numEv 8AA8  
                                    have@i 0090                                      _speed 0200  
                                    _setup 993E                        canReceiveMessage@mp 01C8  
                      canReceiveMessage@no 01CA               __end_of_getNumTxBuffersInUse C5DA  
                          __end_of_mnsPoll 468C                              setNV@oldValue 01F7  
                   APP_preProcessMessage@m 008D                            __end_of_tickGet B620  
                          ?_checkPowerOnPb 0001                            __end_of_setType B3A0  
                                    pclath 0FFA                                      pclatu 0FFB  
                                    tablat 0FF5                             ?_pushTwoAction 0001  
                      ??_initTimedResponse 008D                            ??_doneTwoAction 008D  
          mnsTRallDiagnosticsCallback@step 01D5            mnsTRallDiagnosticsCallback@type 0001  
                                    poll@i 02EF                                      poll@m 02F0  
                         __end_ofi2_canIsr C55C                            __end_of_powerUp 89CC  
                                    plusw2 0FDB                                      push@m 008E  
                                    push@q 008D                    reqevCallback@tableIndex 01E2  
                                    ttemp5 0055                                      ttemp6 0058  
                                    ttemp7 005C                           _setServoPosition C2EE  
                                    status 0FD8                                      wtemp8 0055  
                            ?_nvGetESDdata 0001                     __end_of_setBounceState 9676  
                  reqevCallback@nodeNumber 01DE                            __end_of_writeEv 3582  
                 ?_updateModuleErrorStatus 0001                 __end_of_startTimedResponse BC66  
                             bounceDown@io 01BD                           ?_nvGetDiagnostic 0096  
                        ?_startMultiOutput 0091                           bounceUp@reversed 00A5  
                           ??_APP_testMode 008D                          ?_startServoOutput 0091  
             processEnumeration@enumResult 01C1                            __initialization AC28  
                       ??_startMultiOutput 0092                         ??_startServoOutput 0092  
                             __end_of_have AE62                               __end_of_main B9EE  
                             __end_of_name 0850                               __end_of_loop 6D56  
                             __end_of_poll 3C82                               __end_of_push 433C  
                            ?_nerdCallback 01D4                           i2canFillRxFifo@m 000D  
                         _setupTimer1$1931 0098                           _setupTimer3$1935 0098  
                     __end_of_getParameter 872C                  __end_of_initTimedResponse C632  
                   __end_of_APP_nvValidate AD7E                                     ??_have 008D  
                             ?_setNewCanId 0001                                     ??_main 00A9  
                         ?_eraseFlashBlock 0001                                     ??_loop 01E8  
                             ?_sendMessage 01BA                                     ??_poll 02EA  
                                   ??_push 0090                      __end_of_reqevCallback 9F6C  
                 __end_of_ackEventCheckLen C544                              __activetblptr 0003  
                              readNVM@type 0096                      ??_setExpeditedActions 008D  
                  ?_ackEventProcessMessage 01F9                          _pollsPerStepSpeed 0274  
                                   ?i1_pop 0060                                     ?i2_pop 0001  
                           ??_leds_powerUp 0097                           _normalWriteIndex 00CC  
                  APP_postProcessMessage@m 008D                   ??_APP_postProcessMessage 008F  
                    __end_of_setMultiState 88F0                                     ?_doSOD 0001  
                    __end_of_setServoState 95BA                          ?_getBufferPointer 008D  
                                   ?_getEN 0097                                     ?_getNN 0097  
                                   ?_getNV 008D                                     ?_getEv 009D  
                       _lastServoStartTime 015C                                     _CANCON 0F6F  
                                   _EEADRH 0F75                           __end_of_addEvent 65EE  
                                   ?_setNV 01F4                                     _EEDATA 0F73  
                                   _EECON1 0F7F                                     _EECON2 0F7E  
                             _canTransport EF7A                                     ?_numEv 0001  
                                   _ANCON0 0F5D                                     _ANCON1 0F5C  
                         ___awdiv@dividend 0097                            ?i2_setOutputPin 0005  
                                   _CIOCON 0F70                                     ?_setup 0001  
                      APP_nvValidate@index 00A0        consumer2QProcessMessage@firstAction 02D3  
                       ??_getBufferPointer 008F                        APP_nvValidate@value 009F  
                       setOutputState@type 0094                                  ??i2_getNV 0003  
                   ?i1_getNextWriteMessage 0060                           reqevCallback@nEv 01DB  
                                   i1l2047 C2EA                                     i1l2096 84B8  
                                   i1l2539 550A                                     i2l2047 C3C2  
                                   i2l2091 852E                      getNumRxBuffersInUse@i 0095  
                                   i2l2539 5A52                                     _TABLAT 0FF5  
                       rebuildHashtable@ev 01BD                     _producerProcessMessage 5F4A  
                  ackEventProcessMessage@m 01F9                                     _TBLPTR 0FF6  
                           ??_nvGetESDdata 008D                              _needsStarting A7C8  
          __end_of_consumer2QGetDiagnostic C24E                                     _TXB0D0 0F26  
                                   _TXB0D1 0F27                                     _TXB0D2 0F28  
                                   _TXB0D3 0F29                                     _TXB0D4 0F2A  
                                   _TXB0D5 0F2B                                     _TXB0D6 0F2C  
                                   _TXB0D7 0F2D                           __end_of_checkLen A8C8  
                             ?_removeEvent 01C9                            ?_setBounceState 0091  
                      setServoPosition@pos 009F                             _clearAllEvents B726  
                 __end_of_APP_factoryReset C3A2                       __end_of_getTwoAction C624  
                      setServoState@action 0091                            setMultiState@io 0092  
                            _canFillRxFifo 727C                                initTicker@i 008F  
                        ?_findServiceIndex 0001                           _rebuildHashtable 7D26  
                         ??_processActions 00A9                          _canProcessMessage 9B38  
                                   i1pop@q 0060                              teachPowerUp@i 01C3  
                                   i2pop@q 0001                            completed@action 008D  
                       finaliseOutput@type 008D                   reqevCallback@eventNumber 01E0  
               __end_of_APP_nvValueChanged 31EE                            setServoState@io 0092  
                         __end_of_configIO 4F86                         ??_findServiceIndex 008D  
                _sendInvertedProducedEvent B9EE                         _processEnumeration 76BA  
                              readInput@io 0093                         ?_canProcessMessage 01F9  
                   ??_getNumRxBuffersInUse 0092                           pollServos@midway 01D6  
               startDigitalOutput@pinState 01D9                             teachCheckLen@m 01CB  
             ??_timer3DoneInterruptHandler 0009                           __end_of_bounceUp 5CDC  
                         pollServos@target 01D4                                     ___lmul B620  
                 __end_of_mnsGetDiagnostic C1FE                             ??_nerdCallback 00A9  
                                   _canIsr C448            checkRemoveTableEntry@tableIndex 01C9  
                                   _canPri EE86                                     ___wmul C29E  
                                ??___awdiv 009B                                     _doNerd C4C4  
                                ??___awmod 0091                      _APP_preProcessMessage C64A  
                                   _doWait A522                           ??_finaliseOutput 008E  
                                   _getEVs 8274                                  ??___lldiv 009F  
                deleteTwoActionQueue@index 008E                            sodTRCallback@io 01E0  
                            _nvDiagnostics 01A4                            getParameter@idx 0092  
                        needsStarting@type 008E                                     _memcpy BBA2  
                                ??_doEvlrn 00A9                                  ??_doNenrd 00A9  
                                   _isrLow 8476                                  ??_doEvuln 00A9  
                                   getNN@f 00A1                                  ??_doNnclr 00A9  
                                   clear_0 AC30                                     clear_1 AC42  
                                   clear_2 AC4E                                  ??_doNnevn 01C3  
                                   clear_3 AC5A                                     clear_4 AC66  
                                   clear_5 AC72                                     clear_6 AC7E  
                                   clear_7 AC8A                                  ??_doReqev 00A9  
                                ??_doReval 01C8                                     _lowIsr 8F94  
                                   _saveNV BD58                           ___awdiv@quotient 009D  
                                   getEv@f 00A4                   __end_of_setDigitalOutput A522  
                          ___awmod@divisor 008F                                  ??_doRqevn 00A9  
                         flushFlashBlock@i 008F                        ?_processEnumeration 0001  
                                   have@id 008F                                  ??_getHash 00A7  
                          ??_APP_nvDefault 009F                        ??_canProcessMessage 01FB  
                                   isa$std 0001                            ___awmod@counter 0091  
                          ?_APP_nvValidate 009F                           ??_processOutputs 01CC  
                                ??_highIsr 001A                                  ??_isEvent 008D  
           __end_of_ackEventProcessMessage 67DC                   __end_of_setNormalActions C638  
              producerProcessMessage@index 01FE                                  ??_readNVM 0094  
                 nerdCallback@serviceIndex 01D4                                  ??_isrHigh 001F  
                            i2_checkTxFifo 57C6                      ackGetDiagnostic@index 0098  
                        _canReceiveMessage 67DC                 __end_of_teachGetDiagnostic C276  
                         _nvProcessMessage 468C                                     numEv@f 00A2  
                                ??_mnsPoll 01C7                                     pop@ret 0094  
                         canFillRxFifo@ptr 006E                          ??_mnsFactoryReset 00A9  
                             __mediumconst ED28                                  ??_tickGet 0091  
                         __end_of_services EE7B                         _tableIndexToEvtIdx C608  
              findServiceIndex@serviceType 008F                                  ??_setType 00A9  
                                   tblptrh 0FF7                                     tblptrl 0FF6  
                        doEvlrn@nodeNumber 01EE                                     tblptru 0FF8  
                             ??_FLASH_Read 008F                              _initInputScan 99E8  
                         __end_of_quantity BE3C                          nvProcessMessage@m 01F9  
                       ?_canReceiveMessage 01C4                                  ??_powerUp 01C4  
                        __end_ofi1_isEvent C2EE                               i2getNV@index 0004  
               __end_of_peekTwoActionQueue A638                     getParameterFlags@flags 0091  
                             ?_setupTimer1 0001          mnsTRserviceDiscoveryCallback@step 01D5  
                             ?_setupTimer3 0001                            ??_pushTwoAction 008D  
        mnsTRserviceDiscoveryCallback@type 0001                              checkTxFifo@mp 0073  
                        __end_ofi2_isEvent C3C6                          i2_checkCANTimeout B7CE  
                     __end_of_APP_addEvent AFB0                                  ??_writeEv 01CD  
                             __p_name_text 0848                      _checkRemoveTableEntry BB14  
                      addEvent@eventNumber 01D9                          _expeditedQueueBuf 02C4  
             nvTRnvrdCallback@valueOrError 01D6                           __end_of_writeNVM B90C  
                           ?_needsStarting 008D                        ?_tableIndexToEvtIdx 0001  
                   __end_of_clearAllEvents B77A                      mnsGetDiagnostic@index 0098  
                        __end_ofi1_tickGet B6D0                     startServoOutput@action 0091  
                     ??_processEnumeration 01BD                         ?i2_checkCANTimeout 0001  
                               __accesstop 0060                    __end_of__initialization AC90  
                __end_of_canProcessMessage 9BD6                          __end_ofi2_tickGet B570  
                            bounceDown@tmp 01BB                        ??_canReceiveMessage 01C6  
                        EEPROM_Write@index 008F                             nvGetESDdata@id 008D  
                        EEPROM_Write@value 0091                             ?_canFillRxFifo 0001  
                           setOutputPin@io 0094                     checkRemoveTableEntry@e 01CA  
                            doEvuln@result 01D2                              ___rparam_used 0001  
                       teachCheckLen@learn 01CE                                 _eeBootFlag 0042  
                        i1tickGet@IntFlag1 0065                          i1tickGet@IntFlag2 0064  
                  ??_handleSelfEnumeration 0099                  ?_factoryResetGlobalEvents 0001  
                            ?_teachPowerUp 0001                           FLASH_Write@index 0090  
                        _getParameterFlags B570                              __end_ofi1_pop 9DA6  
                         FLASH_Write@value 0092                              __end_ofi2_pop 9ED6  
                      ??i2_checkCANTimeout 0016                             __pcstackCOMRAM 0001  
               ?i1_updateModuleErrorStatus 0001  mnsTRserviceDiscoveryCallback@serviceIndex 01D4  
                           _io@inputs$F849 00CE                                 _canEsdData C4DE  
                            __end_of_doSOD C52C                         ?_getParameterFlags 0001  
                            __end_of_getEN ABB0                              __end_of_getNN 9440  
                            __end_of_getNV BCE2                              __end_of_getEv 796A  
                       __end_of_FLASH_Read B9A4                                 _ackPowerUp C050  
                   ackEventCheckLen@needed 01CD                              __end_of_setNV AABC  
                            __end_of_numEv 8B80                              __end_of_setup 99E8  
                     ??_tableIndexToEvtIdx 008D                               i1isEvent@opc 0061  
                             ??_APP_lowIsr 0060                       _getNumTxBuffersInUse C5CE  
                   consumer2QEsdData@index 008D                         APP_factoryReset@io 01ED  
                             ?_startServos 0001                  __end_of_canReceiveMessage 69C2  
                             ?_startOutput 01DC               nvTRnvrdCallback@serviceIndex 01D4  
               __end_of_bootProcessMessage A12C                                  ?i2_canIsr 0001  
                      ??_getParameterFlags 0091                             ?i2_checkTxFifo 0001  
                               _canTxError B21C                                 _canService EF68  
                        ??_isConsumedEvent 00A6                                 _canPowerUp 6F14  
                  producerProcessMessage@h 01FD                    producerProcessMessage@m 01F9  
                                  ??i1_pop 0062                                    ??i2_pop 0003  
                           ?_initInputScan 0001                  reqevCallback@serviceIndex 01D4  
                     __end_of_APP_testMode C656                 rebuildHashtable@tableIndex 01C2  
             __end_of_deleteHappeningRange 8AA8                  __end_ofi2_checkCANTimeout B822  
             consumer2QGetDiagnostic@index 0098                                    ??_doSOD 0095  
                            completed@type 008E                                    ??_getEN 0099  
                                  ??_getNN 0099                                    ??_getNV 008F  
                                  ??_getEv 009F                    startDigitalOutput@state 01D4  
                              saveNV@index 01BF                             canFillRxFifo@m 006C  
                                  ??_setNV 01F5                              ?_sendMessage2 00A6  
                            ?_sendMessage3 00A6                              ?_sendMessage4 01C2  
                            ?_sendMessage5 01C2                              ?_sendMessage6 01C2  
                            ?_sendMessage7 01C2                                    ??_numEv 009D  
                    _setupModePreviousMode 0165                                    ??_setup 00A9  
                             canEsdData@id 008D                                saveNV@value 01BC  
                             readNVM@index 0091                   mnsProcessMessage@newMode 01FE  
                        initTicker@divider 008E                               _EEPROM_Write B084  
                               __pbssBANK0 00A9                                 __pbssBANK1 0100  
                               __pbssBANK2 0200                                 __pbssBANK3 0300  
                               __pbssBANK4 0400                                 __pbssBANK5 0500  
                             loadNvCache@i 009B                               i2isEvent@opc 0002  
                          ?_clearAllEvents 0001                 startTimedResponse@callback 0092  
                          canSendMessage@m 00A1                                 _defaultNVs B822  
                       __end_of_APP_lowIsr C658                        setNewCanId@newCanId 01BC  
                        ??_checkCANTimeout 0075                  __end_of_getParameterFlags B5C8  
                               _delayCount 0284                             _loadFlashBlock BA82  
                             _factoryReset 8562                             ??_teachPowerUp 00A9  
                            _setLEDsByMode BEA0                              addEvent@evVal 01DC  
                            addEvent@evNum 01DB                             _canDiagnostics 0167  
                            addEvent@error 01E2             __end_of_eventConsumer2QService EF20  
                   processActions@ioAction 01E4                                mnsPowerUp@i 0097  
                       mnsProcessMessage@d 01FC                         mnsProcessMessage@i 01FB  
                       mnsProcessMessage@m 01F9                       __end_of_leds_powerUp BF02  
                               _bl_version EE7B                     ?_APP_preProcessMessage 008D  
                                  ?___lmul 0091                                    ?_canIsr 0001  
                     i2tickGet@currentTime 0007                                    ?___wmul 0091  
                        _bootloaderVersion 0048                               initBounce@io 008D  
                                  ?_doNerd 0001                                    ?_doWait 009D  
        __end_ofi1_updateModuleErrorStatus C5F2                                    ?_getEVs 0001  
                        i2tickGet@IntFlag1 0006                          i2tickGet@IntFlag2 0005  
                    ?_getNumTxBuffersInUse 0001                                    ?_memcpy 008D  
                                ?_addEvent 01D7                                    _ECANCON 0F72  
                                  ?_isrLow 0001                         _mnsTRrqnpnCallback C106  
                           ___lmul@product 0099                        i1getBufferPointer@b 0062  
                                  ?_lowIsr 0001                                    ?_saveNV 01BC  
                      setOutputPosition@io 00A3                      _setTimedResponseDelay C612  
                    _producerGetDiagnostic C186                                    _BRGCON1 0E43  
                                  _BRGCON2 0E44                                    _BRGCON3 0E45  
                   processActions@peekItem 01E0                   __end_of_setServoPosition C312  
                     __end_of_nvGetESDdata C512                                 ??i2_canIsr 001A  
                       _startDigitalOutput 5510                                    _COMSTAT 0F71  
                         _canGetDiagnostic AFB0                                 _flashBlock 00D1  
                               _flashFlags 00C2                                    i1l20303 8D8C  
                                  i1l20309 8DCE                                    i1l21141 53F8  
                                  i1l21311 A044                                    i1l21303 A030  
                                  i1l20327 9D9C                                    i1l20319 9D34  
                                  i1l20257 B684                                    i1l21315 A04E  
                                  i1l21307 A03A                                    i1l21325 A062  
                                  i1l20277 B6B4                                    i1l21319 A058  
                                  i1l21159 54EE                                    i1l21291 A012  
                                  i1l22309 B270                                    i1l21295 A01C  
                                  i1l21287 A008                                    i1l22273 72D2  
                                  i1l22249 727E                                    i1l21299 A026  
                                  i1l22283 73D8                                    i1l22277 73CC  
                                  i1l22287 73E6                                    i1l22299 B246  
                                  i1l24945 8F9A                                    i2l14021 A310  
                                  i2l14013 A2FC                                    i2l14005 A2E8  
                                  i2l14111 5A36                                    i2l14033 A32E  
                                  i2l14025 A31A                                    i2l14017 A306  
                                  i2l14009 A2F2                                    i2l14043 A342  
                                  i2l14037 A338                                    i2l14029 A324  
                                  i1l24999 84B4                                    i2l14093 5940  
                                  i2l12921 8E5C                                    i2l12927 8E9E  
                                  i2l12849 B520                                    i2l13923 70D2  
                                  i2l12963 9ECC                                    i2l12955 9E64  
                                  i2l15531 B2A8                                    i2l13933 718E  
                                  i2l12869 B552                                    i2l15541 B2D2  
                                  i2l13951 BDA4                                    i2l13935 71CA  
                                  i2l13927 7112                                    i2l13943 7246  
                                  i2l13929 714E                                    i2l13939 720A  
                                  i2l13957 BDB4                                    i2l15573 743E  
                                  i2l15549 73EE                                    i2l15583 7544  
                                  i2l15577 7538                                    i2l15587 7552  
                                  i2l15941 C566                                    i2l24927 9066  
                                ?_checkLen 01C7                                    i2l24997 852A  
                           _setOutputState B6D0                     getNumRxBuffersInUse@no 0094  
                        ?_nvTRnvrdCallback 01D4                          reqevCallback@step 01D5  
                   processActions@nextType 01E1                        ?_mnsTRrqnpnCallback 01D4  
                         ??_checkPowerOnPb 00A9                          ??i2_canFillRxFifo 000D  
                                  _TBLPTRU 0FF8            flushFlashBlock@interruptEnabled 008E  
                                  _RXB0CON 0F60                                    _RXB1CON 0F30  
                       ??_nvTRnvrdCallback 00A9                                    _TXB0DLC 0F25  
                                  _TXB1DLC 0F15                                    _TXB0CON 0F20  
                                  _TXB2DLC 0F05                                    _TXB1CON 0F10  
                                  _TXB2CON 0F00                             ??_sendMessage2 00A8  
                           ??_sendMessage3 00A9                             ??_sendMessage4 00A6  
                           ??_sendMessage5 00A6                             ??_sendMessage6 00A6  
                           ??_sendMessage7 00A6                              ?_setOutputPin 0091  
                      ?_startDigitalOutput 01D4                     ?_checkRemoveTableEntry 0001  
                                  _RXFCON0 0E46                           _teachDiagnostics 01AE  
                          ??_needsStarting 008F                                  ?_configIO 0001  
                               _bounceDown 28AC                       __end_of_nerdCallback B152  
                           inputScan@input 01CF                                  ?_bounceUp 0001  
                isConsumedEvent@eventIndex 00A6                                    i2_getNV BD92  
                          loadFlashBlock@i 008D                            ??_canFillRxFifo 006C  
                           checkLen@needed 01C9                               _getParameter 8648  
                   __end_of_loadFlashBlock BACC                          _sendProducedEvent 9676  
                    i2_getNextWriteMessage 8DF6                            _timerExtension1 00C7  
                          _timerExtension2 00C6                             ?_setLEDsByMode 0001  
                   mnsTRrqnpnCallback@step 01D5                     mnsTRrqnpnCallback@type 0001  
                       ?_sendProducedEvent 00A7                                poll@handled 02EE  
                     ??_mnsTRrqnpnCallback 00A9                          __end_of_findEvent A406  
                                  __Hparam 0000                               initServos@io 00A8  
                    setOutputPosition@type 00A2                              ?_popTwoAction 0001  
                                  __Lparam 0000         __end_of_timer3DoneInterruptHandler C3E8  
               _timer3DoneInterruptHandler C3C6                                 _initBounce C15C  
                   _APP_postProcessMessage C64E                                 _eventTable EF80  
                     ??_startDigitalOutput 01D5                         pbDownTimer@timeout 00A8  
                              ?_canEsdData 0001                          __end_of_pbUpTimer 988E  
                         pbUpTimer@timeout 00A8                                 _initTicker BB5C  
                                  ___awdiv A638                                 _initRomOps C572  
                                  ___awmod AE62                   _consumer2QProcessMessage 3582  
                         _ackGetDiagnostic C1FE                                 _initServos 7BFE  
                                ?_quantity 008D                                    ___lldiv A744  
                      ??_sendProducedEvent 00A8                          __end_of_completed A1C0  
                              ?_ackPowerUp 0001                                validStart@f 009C  
             EEPROM_Write@interruptEnabled 0092                       startDigitalOutput@io 01DB  
                               ??_addEvent 01DE                                 _currentPos 00A9  
                                  _doEvlrn 91F4                                 _paramBlock 0820  
                                  _doNenrd AED4                         canProcessMessage@m 01F9  
                                  _doEvuln AABC                                    _doNnclr BF02  
                 sodTRCallback@disable_off 01DC                                    _doNnevn B01C  
                                  _doReqev 7ABE                                    _doReval 9440  
                                  __pcinit AC28                            ??i2_checkTxFifo 000D  
                              setType@type 01EA                              _teachCheckLen B2E0  
                                  _doRqevn BDCC                          __end_of_leds_poll 5F4A  
                       _startTimedResponse BC28                                    __ramtop 0F00  
                                  _getHash C428                                  ?_writeNVM 00A4  
                       doEvlrn@eventNumber 01F0                              ??_checkTxFifo 006C  
                                  __ptext0 B9A4                                    __ptext1 993E  
                                  __ptext2 C59A                                    __ptext3 7BFE  
                                  __ptext4 AC9A                                    __ptext5 C0DA  
                                  __ptext6 99E8                                    __ptext7 88F0  
                                  __ptext8 C022                                    __ptext9 6F14  
                   __end_of_setOutputState B726                                    _highIsr 9062  
                                  _isEvent C276                                    _configs EE29  
                                  _pbTimer 0033                                  _T0CONbits 0FD5  
                       APP_nvDefault@index 00A3                            getEv@tableIndex 00A5  
                              ?_canTxError 0001                           _EnumerationState 0041  
                        ??_canFactoryReset 00A9                          _mnsProcessMessage 16CE  
                                  _nvCache 0400                            ??_initInputScan 0097  
                               _mode_flags 0166                                  _T1CONbits 0FCD  
                              ?_canPowerUp 0001                                    _readNVM B3A0  
                        __end_of_readInput 806A                             _nvFactoryReset BCE2  
                             _getTwoAction C61C                                    getEN@hi 009D  
                                  getEN@lo 009F                          ?_ackEventCheckLen 01CB  
                                  _isrHigh 84F8                          ??_teachGetESDdata 008D  
                 __end_of_rebuildHashtable 7E4A                                 ??_checkLen 00A7  
                         ??i2_setOutputPin 0006                                  _T3CONbits 0FB1  
                                  getNN@hi 009D                                    getNN@lo 009F  
                               _mode_state 00C5                                    getEVs@f 00A1  
                         ___awmod@dividend 008D                               _configIO$746 01BF  
                       doReqev@eventNumber 01CA                                    _mnsPoll 433C  
                       ?_mnsProcessMessage 01F9                                    _tickGet B5C8  
                             _flashCounter 00B9                          doNenrd@tableIndex 01CC  
                      ?_startTimedResponse 0091                                    _setType B340  
                             _isEvent$4885 008D                         ??_ackEventCheckLen 00A8  
                           ??_setOutputPin 0092                    ??i1_getNextWriteMessage 0062  
                               getNV@index 0090                                 _inputState 0294  
                                  _rxQueue 004F                          doNenrd@nodeNumber 01C8  
                 processActions@nextAction 01E5                                    _powerUp 88F0  
                        __end_of_inputScan 5252                          __end_of_mnsLowIsr C59A  
                        _consumer2QEsdData C408                                    _txQueue 004A  
                  ?_producerProcessMessage 01F9                            defaultEvents@en 01E7  
                          defaultEvents@io 01E9                                    _started 00D0  
                               ??_configIO 01BC                                 _mnsService EF56  
                        __end_of_nvService EF56                           ??_setBounceState 0092  
                               _mnsPowerUp 7E4A                          __end_of_nvPowerUp BE6E  
                                  _writeEv 31EE                  __end_of_sendProducedEvent 972C  
                               ??_bounceUp 009F                       end_of_initialization AC90  
                       _expeditedReadIndex 00CB                              startOutput@io 01DE  
                       ?_consumer2QEsdData 0001                        ??_mnsProcessMessage 02CC  
                             writeNVM@type 00A8                                 getEv@evNum 009D  
                         producerPowerUp@i 008D                                    memcpy@d 0094  
                                  memcpy@n 0091                                    memcpy@s 0096  
               APP_nvValueChanged@oldValue 01EE                                ?_defaultNVs 01C0  
                            ??_EEPROM_Read 008F                            ?_loadFlashBlock 0001  
                            ??_clearEvents 00A9                                  i1u2334_20 B7B6  
                                i1u2167_25 52D6                      __end_of_doneTwoAction C644  
                                  lowIsr@i 007D                                  i1u2681_28 9040  
                                i1u2681_29 9052                          _consumer2QPowerUp BACC  
                                i2u1282_44 7108                                  i2u1282_45 7104  
                                i2u1283_44 7142                                  i2u1283_45 713E  
                                i2u1285_44 7184                                  i2u1285_45 7180  
                                i2u1286_44 71BE                                  i2u1286_45 71BA  
                                i2u1294_45 5846                                  i2u1288_44 7200  
                                i2u1288_45 71FC                                  i2u1289_44 723A  
                                i2u1289_45 7236                          ?_APP_factoryReset 0001  
                                i2u1498_40 B808                             ??_popTwoAction 008D  
                               _validStart B872                            ___lldiv@divisor 009B  
                                i2u2677_48 910C                                  i2u2677_49 911E  
                      ??_consumer2QEsdData 008D                               writeEv@evVal 01CC  
                 __end_of_nvProcessMessage 49AC                               writeEv@evNum 01CB  
                          ___lldiv@counter 00A3                       ??_startTimedResponse 0094  
                       ?_consumer2QPowerUp 0001                               writeEv@nextF 01D2  
                  pollTimedResponse@result 01E5                         ??_APP_factoryReset 00A9  
          eraseFlashBlock@interruptEnabled 008D                                 _pollServos 0850  
                   pollServos@beforeMidway 01D5                           ??_APP_nvValidate 00A0  
                consumer2QProcessMessage@e 02D8                  consumer2QProcessMessage@m 01F9  
                     _deleteHappeningRange 89CC                              ??_FLASH_Write 0093  
                     nvGetDiagnostic@index 0098                                    postdec1 0FE5  
                                  postdec2 0FDD                     ??_getNumTxBuffersInUse 0092  
                                  postinc0 0FEE                                    postinc1 0FE6  
                                  postinc2 0FDE                   ?_consumer2QGetDiagnostic 0096  
                          _mnsFactoryReset ABB0                          ?_mnsGetDiagnostic 0096  
                               ??_quantity 008E                __end_of_setExpeditedActions C63E  
                   ?_setTimedResponseDelay 0001                               _APP_addEvent AF44  
                        ??_isNoServoPulses 008D                     ?_producerGetDiagnostic 0096  
                           ?_teachCheckLen 01CB                        ??_consumer2QPowerUp 008D  
                __end_of_mnsProcessMessage 220A                                 _tmpMessage 019B  
                       ??_mnsGetDiagnostic 0098             startTimedResponse@serviceIndex 0091  
                   __end_of_nvFactoryReset BD1E                                 _servoState 0110  
                               ??_writeNVM 01BA                                 _showStatus 872C  
                                _PORTAbits 0F80                          ?_setDigitalOutput 0097  
                          ?_setOutputState 0093                                 _previousNN 0160  
           deleteHappeningRange@tableIndex 01DF                          ?_setNormalActions 0001  
                       _APP_nvValueChanged 2D60                  _timedResponseServiceIndex 00C4  
                       setDigitalOutput@io 0099                         ??_setDigitalOutput 0098  
                       deleteActionRange@e 01DF                                 _priorities ED29  
                       _lastActionPollTime 0154                              ??_pbDownTimer 00A4  
        __end_of_sendInvertedProducedEvent BA38                            sendMessage2@opc 00A8  
                     __end_of_teachPowerUp BEA0                            sendMessage3@opc 01C2  
                __end_of_consumer2QEsdData C428                            sendMessage4@opc 00A6  
                          sendMessage5@opc 00A6                            sendMessage6@opc 00A6  
                          sendMessage7@opc 00A6                         _sodTRCallback$1424 01D9  
                       _sodTRCallback$1425 01DA                          _eventTeachService EF20  
           __end_of_producerProcessMessage 61B2                           setupTimer1@ticks 009A  
                                _TRISAbits 0F92                                  _TRISBbits 0F93  
                                _TXBIEbits 0E7F                         ??_setNormalActions 008D  
        canReceiveMessage@messageAvailable 01C7                           setupTimer3@ticks 009A  
                       _timedResponseDelay 0164                        __end_of_checkTxFifo 5510  
                     APP_nvValueChanged@io 01F3                                showStatus@s 008F  
                            ??_findService 008F                            loadNvCache@temp 0099  
                              ?_bounceDown 0001                             i1_isEvent$4885 0060  
                      ?_APP_nvValueChanged 01ED                              clearEvents@io 01E1  
                            ??_bootEsdData 008D                                 isEvent@opc 008E  
                   ?i2_getNextWriteMessage 0001                    peekTwoActionQueue@index 008E  
                   i2getNextWriteMessage@q 0001                            ??_setLEDsByMode 0090  
                __end_of_consumer2QPowerUp BB14                              _sodTRCallback 8378  
                                i1_isEvent C2C6                        teachCheckLen@needed 01CD  
          ??_mnsTRserviceDiscoveryCallback 01D6                          ??_flushFlashBlock 008E  
                                i2_isEvent C3A2                         _teachGetDiagnostic C24E  
   sendInvertedProducedEvent@state_to_send 01D3                 deleteHappeningRange@number 01D7  
                        _heartbeatSequence 0045                        _teachProcessMessage 220A  
         sendProducedEvent@producedEventEN 01C7           sendProducedEvent@producedEventNN 01C9  
                                i1_tickGet B678                          removeTableEntry@f 01C7  
                           bounceUp@midway 00A6                              ??_bootPowerUp 0097  
                           _normalQueueBuf 0480                         _peekTwoActionQueue A5AE  
               consumer2QProcessMessage@ca 02D7                                  i2_tickGet B516  
               consumer2QProcessMessage@io 02D5                                 bounceUp@io 00A7  
                              ?_initBounce 0001          sodTRCallback@disable_SOD_response 01D6  
                             _APP_testMode C654                            _isConsumedEvent C35A  
                    ?_deleteHappeningRange 01D7              __end_of_handleSelfEnumeration 8170  
             ??_timer1DoneInterruptHandler 0009                        __end_of_EEPROM_Read C4C4  
                      ?_teachGetDiagnostic 0096                        __end_of_clearEvents BCA4  
                        _canTransmitFailed 00C0                ??i1_updateModuleErrorStatus 0060  
                              ?_initTicker 0001                                ?_initRomOps 0001  
                     ??_APP_nvValueChanged 01EF                                ?_initServos 0001  
                     __end_of_sendMessage2 BF92                       __end_of_sendMessage3 C0AC  
                     __end_of_sendMessage4 C022                       __end_of_sendMessage5 BFF2  
                     __end_of_sendMessage6 BF62                       __end_of_sendMessage7 BFC2  
                           __end_of___lmul B678                              _defaultEvents 7558  
                           __end_of_canIsr C468                             __end_of_canPri EE8B  
                           __end_of___wmul C2C6                        ?_peekTwoActionQueue 0001  
                           __end_of_doNerd C4DE                 removeTableEntry@tableIndex 01C8  
                           __end_of_doWait A5AE                             __end_of_getEVs 8378  
                            ??_APP_highIsr 0009                            ?_nvFactoryReset 0001  
                         _removeTableEntry 796A                            needsStarting@io 0091  
                           __end_of_memcpy BBE8                             __end_of_isrLow 84F8  
                       canReceiveMessage@m 01C4                         canReceiveMessage@p 01CB  
                           __end_of_lowIsr 9062                             __end_of_saveNV BD92  
               __end_ofi1_getBufferPointer A098                       ?_teachProcessMessage 01F9  
                __end_of_eventTeachService EF32                        __end_of_FLASH_Write 8F94  
                    __end_of_APP_nvDefault 8D24                             _canSendMessage 49AC  
                        ??_producerEsdData 008D                               _name_absaddr 0848  
                      start_initialization AC28                           ??_clearAllEvents 01C3  
                          _checkCANTimeout B77A                               _leds_powerUp BED2  
                     ??_teachGetDiagnostic 0098                                __end_of_pop 9D0C  
                            factoryReset@i 01F2                                ?_mnsPowerUp 0001  
             ?_mnsTRallDiagnosticsCallback 01D4                       setBounceState@action 0091  
                 setDigitalOutput@pinState 0098                          ??_producerPowerUp 008D  
                     ??_peekTwoActionQueue 008D                                _CANSTATbits 0F6E  
                           ?_sodTRCallback 01D4                         i2canFillRxFifo@ptr 000F  
                    __end_of_pushTwoAction B45E                        __end_of_pbDownTimer 993E  
                       _bootProcessMessage A098                                 ?i1_isEvent 0001  
                 producerProcessMessage@ev 01FB                        _getNextWriteMessage 8B80  
                               ?i2_isEvent 0001                               _nvGetESDdata C4F8  
                 __end_of_canGetDiagnostic B01C                    ??_APP_preProcessMessage 008F  
                  __end_of_mnsFactoryReset AC28                        __end_of_findService 9E3E  
                            ??_loadNvCache 0097                                 ?i1_tickGet 0060  
                              ?_validStart 0001                         setServoPosition@io 00A0  
                      __end_of_bootEsdData C336                          isConsumedEvent@ev 00A7  
                      ?_bootProcessMessage 01F9                                 ?i2_tickGet 0001  
                             doEvlrn@evVal 01F3                               doEvlrn@evNum 01F2  
                          numEv@tableIndex 00A3                     startTimedResponse@type 0094  
             __end_of_deleteTwoActionQueue A946                               doEvlrn@error 01F4  
                              ?_pollServos 0001                 __end_of_evtIdxToTableIndex C608  
                 rebuildHashtable@chainIdx 01C1                       __end_of_setOutputPin 6F14  
                                 ??___lmul 0099                            ??_teachCheckLen 00A8  
                                 ??_canIsr 0079                        _universalEventsInit C59A  
                                 ??___wmul 0095                               doNenrd@index 01C7  
                                 ??_doNerd 0095                                   ??_doWait 009F  
                                 ??_getEVs 009D                             ?_defaultEvents 01E6  
                      bootProcessMessage@m 01F9                         addEvent@forceOwnNN 01DD  
                             _nerdCallback B0EC                            i2_canFillRxFifo 73EC  
               ?i2_updateModuleErrorStatus 0001                    _updateModuleErrorStatus C5DA  
                      __end_of_bootService EF44                                   ??_memcpy 0093  
                                 ??_isrLow 007E                        __end_of_bootPowerUp 91F4  
                                 ??_lowIsr 0079                                   ??_saveNV 01BD  
                   __end_of_canSendMessage 4CA4                                ?_showStatus 0001  
                            ??_initOutputs 008D                   sodTRCallback@send_off_ok 01D8  
                     ?_getNextWriteMessage 008D                      ??_teachProcessMessage 02CC  
                             checkTxFifo@m 0071                                _checkTxFifo 5252  
                         _startMultiOutput 9BD6                          ?_setServoPosition 009F  
                            ?i2_canTxError 0001                         startMultiOutput@io 0093  
                         _startServoOutput 92BA                                __pbssBIGRAM 0548  
                            _reqevCallback 9ED6         consumer2QProcessMessage@tableIndex 02D1  
                  ??_checkRemoveTableEntry 00A9      consumer2QProcessMessage@masked_action 02D6  
                     ??_bootProcessMessage 01FB                                __pbssCOMRAM 002B  
                    peekTwoActionQueue@qty 008D                          ??_nvGetDiagnostic 0098  
                     __end_of_popTwoAction C0DA                         ??_setServoPosition 00A0  
                         canSendMessage@mp 0099                           canSendMessage@no 00A0  
                            __pcstackBANK0 0060                              __pcstackBANK1 01BA  
                            __pcstackBANK2 02CC                        __end_of_APP_highIsr C572  
                i1_updateModuleErrorStatus C5E6         consumer2QProcessMessage@nextAction 02D2  
                     ?_universalEventsInit 0001                                 setNV@index 01F8  
                            _setMultiState 8810                            _happening2Event 0300  
                            _setServoState 94FE                                 setNV@value 01F4  
                       startServoOutput@io 0093                         addEvent@tableIndex 01E5  
                 __end_of_ackGetDiagnostic C226                             i2_isEvent$4885 0001  
               setTimedResponseDelay@delay 008D                                  addEvent@e 01E4  
                                addEvent@f 01E3                                   ?i2_getNV 0001  
                       addEvent@nodeNumber 01D7              ??_mnsTRallDiagnosticsCallback 01D6  
                 _factoryResetGlobalEvents C652                    __end_of_isConsumedEvent C37E  
                       initInputScan@input 0099      sendInvertedProducedEvent@can_send_off 01CF  
                              _EEPROM_Read C4A6                 ??_consumer2QProcessMessage 01FB  
                       initTicker@priority 008D                                _clearEvents BC66  
                  ?_APP_postProcessMessage 008D                          ??_eraseFlashBlock 008D  
                                __pnvBANK0 00D1                            i2checkTxFifo@mp 0014  
                         setBounceState@io 0092                     ??_deleteHappeningRange 01D8  
                           mnsPowerUp@temp 0098                               doNnevn@count 01C8  
                                __pmainSec 8476                       teachProcessMessage@m 01F9  
                         _getBufferPointer 9F6C                            _canFactoryReset C488  
              ?_timer3DoneInterruptHandler 0001      __end_of_mnsTRserviceDiscoveryCallback A494  
            _mnsTRserviceDiscoveryCallback A406               mnsTRallDiagnosticsCallback@d 01DA  
                               nvPowerUp@i 009C                            tickGet@IntFlag1 0092  
                          tickGet@IntFlag2 0091                                  __pintcode 0808  
                          _teachGetESDdata C336                               ??_canEsdData 008D  
       handleSelfEnumeration@incomingCanId 009D                          _lastInputScanTime 0158  
                            __pmediumconst ED28                   ??_ackEventProcessMessage 01FB  
                     i1tickGet@currentTime 0066                                ackPowerUp@i 008D  
                         getEVs@tableIndex 00A3                                   ?___awdiv 0097  
                                __ptext100 0850                                  __ptext101 C15C  
                                __ptext110 B9EE                                  __ptext102 5A58  
                                __ptext111 B152                                  __ptext103 28AC  
                                __ptext200 C448                                  __ptext120 A522  
                                __ptext112 B6D0                                  __ptext104 69C2  
                                __ptext201 C586                                  __ptext121 C63E  
                                __ptext113 94FE                                  __ptext105 61B2  
                                __ptext210 8D24                                  __ptext202 B77A  
                                __ptext130 BFF2                                  __ptext122 C0AC  
                                __ptext114 8810                                  __ptext106 B4BC  
                                __ptext211 A002                                  __ptext203 B21C  
                                __ptext131 A946                                  __ptext123 C512  
                                __ptext115 95BA                                  __ptext107 92BA  
                                __ptext220 9E3E                                  __ptext212 C656  
                                __ptext204 5252                                  __ptext140 C572  
                                __ptext132 49AC                                  __ptext124 BC28  
                                __ptext116 A7C8                                  __ptext108 9BD6  
                                __ptext221 C3A2                                  __ptext205 B678  
                                __ptext141 B45E                                  __ptext133 3FE2  
                                __ptext125 AD7E                                  __ptext117 C61C  
                                __ptext109 5510                                _FLASH_Write 8EC6  
                                __ptext230 BD92                                  __ptext222 73EC  
                                __ptext214 9062                                  __ptext206 9D0C  
                                __ptext150 C488                                  __ptext142 872C  
                                __ptext134 C276                                  __ptext126 A8C8  
                                __ptext118 A5AE                                  __ptext223 C5F2  
                                __ptext215 C544                                  __ptext207 C2C6  
                                __ptext151 BCE2                                  __ptext143 97DE  
                                __ptext135 ADF0                                  __ptext127 A12C  
                                __ptext119 C624                                  __ptext224 8DF6  
                                __ptext216 B7CE                                  __ptext208 727C  
                                __ptext160 B340                                  __ptext152 ABB0  
                                __ptext144 988E                                  __ptext136 C5CE  
                                __ptext128 4F86                                  __ptext225 A2E4  
                                __ptext217 B27E                                  __ptext209 C5E6  
                                __ptext161 B822                                  __ptext153 C644  
                                __ptext145 5CDC                                  __ptext137 BE04  
                                __ptext129 9676                                  __ptext226 C55C  
                                __ptext218 57C6                                  __ptext170 BB14  
                                __ptext162 BD58                                  __ptext154 B726  
                                __ptext146 B5C8                                  __ptext138 8B80  
                                __ptext227 C3C6                                  __ptext219 B516  
                                __ptext171 796A                                  __ptext163 BA38  
                                __ptext155 8C52                                  __ptext147 B620  
                                __ptext139 7F60                                  __ptext228 C468  
                                __ptext180 4CA4                                  __ptext172 7D26  
                                __ptext164 7558                                  __ptext156 C29E  
                                __ptext148 A744                                  __ptext229 70CE  
                                __ptext181 B8C0                                  __ptext173 7814  
                                __ptext165 BC66                                  __ptext157 AE62  
                                __ptext149 8562                                  __ptext190 A494  
                                __ptext182 8EC6                                  __ptext174 8274  
                                __ptext166 89CC                                  __ptext158 A638  
                                __ptext191 6D56                                  __ptext183 BA82  
                                __ptext175 B872                                  __ptext167 972C  
                                __ptext159 C37E                                  __ptext192 BCA4  
                                __ptext184 A6BE                                  __ptext176 A376  
                                __ptext168 63EA                                  __ptext193 B3A0  
                                __ptext185 B90C                                  __ptext177 937E  
                                __ptext169 31EE                                  __ptext194 B958  
                                __ptext186 C5AC                                  __ptext178 C428  
                                __ptext195 C4A6                                  __ptext187 C5BE  
                                __ptext179 AB36                                   ?___awmod 008D  
                                __ptext196 C652                                  __ptext188 B084  
                                __ptext197 C654                                  __ptext189 C5DA  
                                __ptext199 8F94                               defaultNVs@io 01C3  
                                _findEvent A376                                   ?___lldiv 0097  
                             ??_ackPowerUp 008D                     _startDigitalOutput$808 01D7  
                      __end_of_loadNvCache BA82                               doReqev@evVal 01CD  
                             doReqev@evNum 01CC                            getNN@tableIndex 00A2  
                         processActions@io 01E6                               doReval@enNum 01CA  
                       sodTRCallback@flags 01DF                               doReval@evVal 01CB  
                             doReval@evNum 01C7                                   ?_doEvlrn 01EE  
                                 ?_doNenrd 0001                                   ?_doEvuln 01CE  
                              __pintcodelo 0818                                   ?_doNnclr 0001  
                                 ?_doNnevn 0001                        i2getBufferPointer@b 0003  
                                 ?_doReqev 01C8                                   ?_doReval 01C7  
                        teachGetESDdata@id 008D                         sodTRCallback@value 01DD  
        __end_ofi2_updateModuleErrorStatus C5FE                                   ?_doRqevn 0001  
                    ??_getNextWriteMessage 008F                                   ?_getHash 00A3  
                 deleteActionRange@updated 01DD                    __end_of_checkCANTimeout B7CE  
                            ??_setNewCanId 00A9                                  _pbUpTimer 97DE  
                          ?_canSendMessage 0099                              ??_sendMessage 00A3  
                                 ?_highIsr 0001                             ??i2_canTxError 0016  
                                 ?_isEvent 0001                               ??_canTxError 0075  
                         _findServiceIndex AD7E                                  _completed A12C  
                         nerdCallback@step 01D5                           nerdCallback@type 0001  
                           ?_reqevCallback 01D4                               ??_canPowerUp 0097  
                           _heartbeatTimer 0150                                   ?_readNVM 0091  
                                 ?_isrHigh 0001                                _COMSTATbits 0F71  
                  i1getNextWriteMessage@wr 006B                                  _leds_poll 5CDC  
               producerGetDiagnostic@index 0098                                   ?_mnsPoll 0001  
                        ?_rebuildHashtable 0001                           _canIsr$intlevel1 C450  
                     setOutputPosition@pos 00A1                                   ?_tickGet 008D  
  mnsTRallDiagnosticsCallback@serviceIndex 01D4                                _pbDownTimer 988E  
                                checkLen@m 01C7                                   ?_setType 01EA  
         ackEventProcessMessage@eventIndex 02CE                      ??_universalEventsInit 008D  
                           defaultNVs@type 01C0                             ?_setMultiState 0091  
                  startBounceOutput@action 008D                        __end_of_initOutputs C106  
                         ??_loadFlashBlock 008D                             ?_setServoState 0091  
                                 ?_powerUp 0001                                  _readInput 7F60  
                       ??_rebuildHashtable 01BA                            ??_sodTRCallback 00A9  
                              _findService 9DA6              __end_ofi1_getNextWriteMessage 8DF6  
                                 ?_writeEv 01CB                            startServos@type 01D8  
                              _flashDelays 0130                         processActions@type 01E3  
                                _expedited 0049                                _bootEsdData C312  
                       __end_of_canEsdData C4F8                      __end_of_needsStarting A84A  
                              _flashBuffer 0348                             doReval@evIndex 01C9  
                              ??i1_isEvent 0060              deleteHappeningRange@happening 01DD  
                             ??_defaultNVs 01C1                                  _inputScan 4F86  
           __end_of_APP_postProcessMessage C652                            _eventAckService EED8  
                                _mnsLowIsr C586                         __end_of_ackPowerUp C07E  
                                _nvService EF44                             ___wmul@product 0095  
                                _loopCount 0254                              ??_removeEvent 00A9  
                              ??i2_isEvent 0001                       sendProducedEvent@opc 01C6  
                                 _LATBbits 0F8A                                  _nvPowerUp BE3C  
                    __end_of_canFillRxFifo 73EC                          findEvent@chainIdx 01C5  
                          _isNoServoPulses C5BE                 __end_ofi2_getBufferPointer A376  
                  getNumRxBuffersInUse@ptr 0092                                   _PIE1bits 0F9D  
                                 _PIE2bits 0FA0                       rebuildHashtable@hash 01BF  
                         ?_mnsFactoryReset 0001                                   _PIE5bits 0F76  
                              ??i1_tickGet 0064                                  _rxBuffers 07C8  
                       __p_eventTable_text EF80                                  getHash@en 00A5  
                                getHash@nn 00A3                    __end_ofi2_canFillRxFifo 7558  
                           _flashFlushTime 0140     __end_of_APP_isSuitableTimeToWriteFlash C5BE  
           _APP_isSuitableTimeToWriteFlash C5AC                          _channelDefaultNVs EE8B  
                                _targetPos 0120                                _bootService EF32  
       __end_of_timer1DoneInterruptHandler C488                 _timer1DoneInterruptHandler C468  
                              ??i2_tickGet 0005                         __end_of_canTxError B27E  
                       __end_of_canService EF7A                               _teachPowerUp BE6E  
                                _pollCount 0264                                _bootPowerUp 912C  
                                 _PIR1bits 0F9E                                   _PIR2bits 0FA1  
                       __end_of_canPowerUp 70CE                          ?_nvProcessMessage 01F9  
                  ??_setTimedResponseDelay 008D                                   _PIR5bits 0F77  
                        doReqev@tableIndex 01CF                    ??_producerGetDiagnostic 0098  
                          ??_defaultEvents 00A9                                  _txBuffers 0500  
                           _mnsDiagnostics 018D                  ??_updateModuleErrorStatus 008D  
                                 _RCONbits 0FD0                          doReqev@nodeNumber 01C8  
                         ??_setOutputState 0095                                   _RXF0SIDL 0EE1  
            startDigitalOutput@actionState 01DA                         ??_nvProcessMessage 01FB  
                                 _RXM0EIDH 0EFA                                   _RXM0EIDL 0EFB  
                               ?_findEvent 01BA                                   _TXB0SIDH 0F21  
                                 _TXB0SIDL 0F22                                   _TXB1SIDH 0F11  
                                 _TXB1SIDL 0F12                                   _TXB2SIDH 0F01  
                                 _TXB2SIDL 0F02                                   _RXFBCON0 0E71  
                                 _RXM0SIDH 0EF8                                   _RXM0SIDL 0EF9  
                           pushTwoAction@a 008D                sodTRCallback@event_inverted 01DE  
                          inputScan@change 01CE                        i2setOutputPin@state 0005  
                        _stepsPerPollSpeed 0100                          _teachFactoryReset C644  
                               ?_pbUpTimer 0001                                  configIO@i 01C3  
                              _bounceState 0244                                _APP_highIsr C55C  
                           sendMessage@len 01BA                             sendMessage@opc 00A5  
                        _timedResponseTime 0144                          ___wmul@multiplier 0091  
                        _timedResponseStep 0043                          _timedResponseType 00C3  
                                _startWait 0037                                  _startTime 003B  
                               ?_completed 008D                                   i2_canIsr C544  
                    __end_ofi2_checkTxFifo 5A58                           _enumerationState 00BF  
                             doRqevn@count 01C3                                  _transport 0162  
                       ?_teachFactoryReset 0001                          defaultEvents@type 01E6  
                       __end_of_defaultNVs B872                                 ?_leds_poll 0001  
                    __end_of_initInputScan 9A92                            _flushFlashBlock A6BE  
               processActions@simultaneous 01DF                    ??i2_getNextWriteMessage 0003  
                      __end_of_setNewCanId B21C                        __end_of_sendMessage A9C4  
                               ?_readInput 0001                             doWait@duration 009D  
                            ??_setupTimer1 0095                              ??_setupTimer3 0095  
                     _deleteTwoActionQueue A8C8                            _eventCoeService EEEA  
                             ??_bounceDown 009F                        ??_teachFactoryReset 00A9  
                          checkLen@service 01CA                         __end_of_bl_version EE86  
                        ___lmul@multiplier 0091                                _INTCON2bits 0FF1  
                             _sendMessage2 BF62                               _sendMessage3 C07E  
                             _sendMessage4 BFF2                               _sendMessage5 BFC2  
                             _sendMessage6 BF32                               _sendMessage7 BF92  
                                 i1pop@ret 0067                                   i2pop@ret 0008  
                          startOutput@type 01DD                            nvFactoryReset@i 01BE  
                               ?_inputScan 0001                                 ?_mnsLowIsr 0001  
                  __end_of_canFactoryReset C4A6                   __end_of_removeTableEntry 7ABE  
                         ?_isConsumedEvent 0001                    __end_of_teachGetESDdata C35A  
                               ?_nvPowerUp 0001                  __end_of_channelDefaultNVs EED8  
             __end_of_eventProducerService EF0E                     handleSelfEnumeration@p 0097  
                               _EECON1bits 0F7F                        startBounceOutput@io 008E  
                              _loadNvCache BA38                                   __Hrparam 0000  
                              _eventChains 0548                           finaliseOutput@io 0001  
                 evtIdxToTableIndex@evtIdx 008D                               ??_initBounce 008D  
                  APP_addEvent@eventNumber 01E8                                  memcpy@tmp 0093  
                                 __Lrparam 0000                          doReval@tableIndex 01CD  
                          _producerEsdData C3E8                           ??_nvFactoryReset 01BC  
                             ??_initTicker 008D                        __end_of_removeEvent C15C  
                             ??_initRomOps 008D                     removeEvent@eventNumber 01CB  
 consumer2QProcessMessage@nextSimultaneous 02D4                               ??_initServos 00A4  
                __end_of_teachFactoryReset C64A                    sodTRCallback@send_on_ok 01D7  
                                 _addEvent 63EA                          _startBounceOutput B152  
           ?_mnsTRserviceDiscoveryCallback 01D4                             _processActions 61B2  
                       __end_of_bounceDown 2D60                            ??_reqevCallback 01D6  
                            ??_startServos 00A9                           ?_checkCANTimeout 0001  
                            ??_startOutput 00A9                                _initOutputs C0DA  
                       ?_startBounceOutput 008D                            _producerPowerUp C022  
                       doNenrd@eventNumber 01CA                  rebuildHashtable@happening 01C0  
                             setType@index 01EB                                   _checkLen A84A  
                          ??_setMultiState 0092                            ??_setServoState 0092  
                           i2checkTxFifo@m 0012                             _finaliseOutput C624  
                      _producerDiagnostics 01AA                    deleteActionRange@action 01DE  
                            initOutputs@io 008D                       processActions@action 01E7  
          __end_of_updateModuleErrorStatus C5E6                    __end_of_eventAckService EEEA  
                               _FLASH_Read B958                 ?_sendInvertedProducedEvent 01CC  
                    ?_deleteTwoActionQueue 0001                      getNextWriteMessage@wr 0098  
                                 __ptext10 BE3C                                   __ptext11 7E4A  
                                 __ptext20 5F4A                                   __ptext12 C050  
                                 __ptext21 9B38                                   __ptext13 912C  
                               _T1GCONbits 0FAA                                   __ptext30 9440  
                                 __ptext22 468C                                   __ptext14 BACC  
                                 __ptext31 7ABE                                   __ptext23 16CE  
                                 __ptext15 BE6E                                defaultNVs@i 01C4  
                                 __ptext40 AF44                                   __ptext32 B01C  
                                 __ptext24 65EE                                   __ptext16 BED2  
                                 __ptext41 A9C4                                   __ptext33 BF02  
                                 __ptext25 A098                                   __ptext17 C62C  
                                 __ptext50 8AA8                                   __ptext42 9ED6  
                                 __ptext34 C4C4                                   __ptext26 3582  
                                 __ptext18 BB5C                                   __ptext51 C608  
                                 __ptext43 B0EC                                   __ptext35 AED4  
                                 __ptext27 220A                                   __ptext19 390C  
                                 __ptext60 C312                                   __ptext52 AA40  
                                 __ptext44 BBE8                                   __ptext36 C5FE  
                                 __ptext28 B2E0                                   __ptext61 C408  
                                 __ptext53 2D60                                   __ptext45 A406  
                                 __ptext37 AABC                                   __ptext29 BDCC  
                                 __ptext70 BF32                                   __ptext62 C336  
                                 __ptext54 C612                                   __ptext46 8170  
                                 __ptext38 C132                                   __ptext71 C07E  
                                 __ptext63 C186                                   __ptext55 C2EE  
                                 __ptext47 C106                                   __ptext39 91F4  
                                 __ptext80 67DC                                   __ptext72 8648  
                                 __ptext64 AFB0                                   __ptext56 AD0C  
                                 __ptext48 8378                                   __ptext81 76BA  
                                 __ptext73 B570                                   __ptext65 C1AE  
                                 __ptext57 C3E8                                   __ptext49 3C82  
                                 __ptext90 9DA6                                   __ptext82 B1B8  
                                 __ptext74 433C                                   __ptext66 C1D6  
                                 __ptext58 C4DE                                   __ptext91 C52C  
                                 __ptext83 9C72                                   __ptext75 BEA0  
                                 __ptext67 C1FE                                   __ptext59 C4F8  
                                 __ptext92 A84A                                   __ptext84 BBA2  
                                 __ptext76 BF62                                   __ptext68 C226  
                                 __ptext93 BFC2                                   __ptext85 806A  
                                 __ptext77 C632                                   __ptext69 C24E  
                                 __ptext94 C64A                                   __ptext86 BD1E  
                                 __ptext78 C638                                   __ptext95 C64E  
                                 __ptext87 9F6C                                   __ptext79 B400  
                                 __ptext96 6B94                                   __ptext88 BF92  
                                 __ptext97 9A92                                   __ptext89 C35A  
                                 __ptext98 A1C0                                   __ptext99 A252  
                      ??_startBounceOutput 008E               __end_of_getNumRxBuffersInUse BD58  
                  __end_of_isNoServoPulses C5CE                               _setOutputPin 6D56  
                     processActions@nextIo 01E2                               ??_mnsPowerUp 0097  
                                 _configIO 4CA4                                   _ledTimer 0148  
                  deleteActionRange@number 01D7                             _processOutputs 69C2  
                        _APP_GetEventState 3C82                                   _ledState 00BB  
                        sodTRCallback@step 01D5                         __end_of_initBounce C186  
                        sodTRCallback@type 0001                              ?_EEPROM_Write 008F  
                       __end_of_eventTable FF70                                   _bounceUp 5A58  
                               _T3GCONbits 0FB0                     i1getNextWriteMessage@q 0060  
                       __end_of_initTicker BBA2                         __end_of_initRomOps C586  
                       i1_getBufferPointer A002                         ?_APP_GetEventState 0001  
                       __end_of_initServos 7D26           __end_of_consumer2QProcessMessage 390C  
                                setType@io 01EC                                   doNnevn@f 01C7  
                                 doNnevn@i 01C9                 sendProducedEvent@happening 01CB  
                       __end_of_paramBlock 0840                             canPowerUp@temp 0098  
                    __end_of_setLEDsByMode BED2                        __end_of_setupTimer1 A2E4  
                      __end_of_setupTimer3 A252                       __end_ofi2_canTxError B2E0  
                            ?_factoryReset 0001                   __end_of_startMultiOutput 9C72  
                            _configIO$8081 01BE                           _nvTRnvrdCallback BBE8  
                            findEvent@hash 01C4                   __end_of_startServoOutput 937E  
                             ??_validStart 0097                                   doRqevn@i 01C4  
                        ?_canGetDiagnostic 0096                             writeEv@nextIdx 01D6  
                              getEVs@evIdx 00A2             consumer2QProcessMessage@change 02CD  
           consumer2QProcessMessage@action 02D9                           ?i2_canFillRxFifo 0001  
                              getEVs@evNum 00A4                        ?i1_getBufferPointer 0060  
                      ??_APP_GetEventState 009F              __end_of_APP_preProcessMessage C64E  
            ackEventProcessMessage@eventEN 02CC              ackEventProcessMessage@eventNN 02CF  
                             _popTwoAction C0AC                         ??_canGetDiagnostic 0098  
                             ??_pollServos 01CC                                   isa$xinst 0000  
                                 _services EE69                  __end_of_startBounceOutput B1B8  
                   __end_of_processActions 63EA                   clearAllEvents@tableIndex 01C7  
                                 int$flags 0054                            _nvGetDiagnostic C1AE  
                                 highIsr@i 001E                                ??_findEvent 01BE  
                                 _quantity BE04                      _handleSelfEnumeration 806A  
              ??i2_updateModuleErrorStatus 0001                                 _APP_lowIsr C656  
                   sendProducedEvent@onOff 00A7                         __end_of_mnsService EF68  
                  __end_of_flushFlashBlock A744                          writeEv@tableIndex 01D5  
                       __end_of_mnsPowerUp 7F60                          _setOutputPosition AC9A  
                             ??_showStatus 008D                                ??_pbUpTimer 00A4  
                         processOutputs@io 01CD                                   _writeNVM B8C0  
               processEnumeration@newCanId 01C2                     APP_addEvent@forceOwnNN 01EC  
                              _setNewCanId B1B8                               ?_checkTxFifo 0001  
                             pollServos@io 01D7                                ??_completed 008F  
                              _sendMessage A946                     __end_of_finaliseOutput C62C  
                           startOutput@act 01DC                    __end_of_eventCoeService EEFC  
                            writeNVM@index 00A4                         ?_setOutputPosition 00A1  
                                quantity@q 008D                              writeNVM@value 00A7  
                              _OSCTUNEbits 0F9B                                 _INTCONbits 0FF2  
                              ??_leds_poll 009F                 ??_factoryResetGlobalEvents 008D  
                       _evtIdxToTableIndex C5FE                       ??i1_getBufferPointer 0062  
                    canGetDiagnostic@index 0099                                   memcpy@d1 008D  
                                 memcpy@s1 008F                     __end_of_processOutputs 6B94  
                __end_of_APP_GetEventState 3FE2                   __end_of_getBufferPointer A002  
                          _eraseFlashBlock B90C                          APP_addEvent@evVal 01EB  
            __end_of_checkRemoveTableEntry BB5C                          APP_addEvent@evNum 01EA  
                       __end_of_validStart B8C0                        __end_of_startServos 9B38  
                  teachGetDiagnostic@index 0098                                ??_readInput 0091  
                      __end_of_startOutput B516                     _ackEventProcessMessage 65EE  
                  deleteTwoActionQueue@qty 008D                             ??_EEPROM_Write 0092  
                      ??_setOutputPosition 00A3                 __end_of_processEnumeration 7814  
                              getHash@hash 00A8                         __end_of_pollServos 16CE  
                        ?_ackGetDiagnostic 0096                                   intlevel1 0000  
                                 intlevel2 0000                        ?_evtIdxToTableIndex 0001  
                            ?_getParameter 0001                                ??_inputScan 01CC  
                             _servoInBlock 00C9                                ??_mnsLowIsr 0060  
                     getNextWriteMessage@q 008D                           ?_canFactoryReset 0001  
                   APP_addEvent@tableIndex 01ED                                   numEv@num 00A1  
                             ?_EEPROM_Read 008D                           ___lldiv@dividend 0097  
                       ??_ackGetDiagnostic 0098            sendInvertedProducedEvent@invert 01CD  
                           ??_factoryReset 01EE                    __end_of_producerEsdData C408  
                              ??_nvPowerUp 009C                               ?_clearEvents 0001  
                         _ackEventCheckLen C52C                      removeEvent@tableIndex 01CD  
                         ?_teachGetESDdata 0001                   __end_of_findServiceIndex ADF0  
                              _removeEvent C132                     APP_addEvent@nodeNumber 01E6  
                              _TXB0CONbits 0F20                              _doneTwoAction C63E  
                       __end_of_showStatus 8810             mnsTRrqnpnCallback@serviceIndex 01D4  
                    removeEvent@nodeNumber 01C9                                _TXB1CONbits 0F10  
                              _TXB2CONbits 0F00                         _paramBlock_absaddr 0820  
              deleteActionRange@tableIndex 01E0                         __end_of_priorities EE29  
                         ??_canSendMessage 009B                __end_of_teachProcessMessage 28AC  
               __end_of_tableIndexToEvtIdx C612                  sodTRCallback@serviceIndex 01D4  
                     __end_of_canTransport EF7E                               ?_FLASH_Write 0090  
                  __end_of_producerPowerUp C050                         tickGet@currentTime 0093  
                          ?_processActions 0001                              findService@id 0091  
                __end_of_setOutputPosition AD0C                                   powerUp@i 01C8  
                     ??_evtIdxToTableIndex 008D                          _pollTimedResponse A9C4  
                    __end_of_teachCheckLen B340                   ??_producerProcessMessage 02CC  
                    setDigitalOutput@state 0097                         _eventTable_absaddr EF80  
                       ?_pollTimedResponse 0001                          FLASH_Read@address 008D  
                         _APP_factoryReset C37E                            ?_finaliseOutput 008D  
                  nerdCallback@eventNumber 01D8                              ?_getTwoAction 0001  
                         _ticksWhenStopped 0388                           ___lldiv@quotient 009F  
                     producerEsdData@index 008D                       _eventProducerService EEFC  
           sendInvertedProducedEvent@state 01CC                    _consumer2QGetDiagnostic C226  
                   ??_deleteTwoActionQueue 008D                          _deleteActionRange 972C  
                             ?_pbDownTimer 0001                                findEvent@en 01C2  
                              findEvent@nn 01C0                          writeEv@startIndex 01D1  
                     findEvent@eventNumber 01BC                                   writeEv@e 01D3  
                                 writeEv@f 01D4                            ?_processOutputs 0001  
                              ?_FLASH_Read 008D                              bootEsdData@id 008D  
                      ??_pollTimedResponse 01E3                           _mnsGetDiagnostic C1D6  
                             findService@i 0092                         ?_deleteActionRange 01D7  
             _timedResponseAllServicesFlag 0044                                _setupTimer1 A252  
                              _setupTimer3 A1C0                           ?_isNoServoPulses 0001  
                             ?_findService 008D                     startMultiOutput@action 0091  
                i2_updateModuleErrorStatus C5F2                             ??_getParameter 0092  
                             ?_bootEsdData 0001                          sendMessage2@data1 00A6  
                        sendMessage2@data2 00A7                          sendMessage3@data1 00A6  
                        sendMessage3@data2 00A7                          sendMessage3@data3 00A8  
                        sendMessage4@data1 01C2                          sendMessage4@data2 01C3  
                        sendMessage4@data3 01C4                          sendMessage4@data4 01C5  
                         _setDigitalOutput A494                          getBufferPointer@b 008F  
                        sendMessage5@data1 01C2                          sendMessage5@data2 01C3  
                        sendMessage5@data3 01C4                          sendMessage5@data4 01C5  
                        sendMessage5@data5 01C6                      _consumer2QDiagnostics 01B6  
                        sendMessage6@data1 01C2                          sendMessage6@data2 01C3  
                        sendMessage6@data3 01C4                          sendMessage6@data4 01C5  
                        sendMessage6@data5 01C6                          sendMessage6@data6 01C7  
                         bootPowerUp@found 0098                            _last_mode_flags 0046  
                        sendMessage7@data1 01C2                          sendMessage7@data2 01C3  
                        sendMessage7@data3 01C4                          sendMessage7@data4 01C5  
                        sendMessage7@data5 01C6                          sendMessage7@data6 01C7  
                        sendMessage7@data7 01C8                             _checkPowerOnPb B45E  
                         EEPROM_Read@index 008D                        ??_deleteActionRange 01D8  
                         _setNormalActions C632                             ?_doneTwoAction 0001  
                          _last_mode_state 0047                    __end_of_nvGetDiagnostic C1D6  
                             ?_bootPowerUp 0001                       validStart@tableIndex 009B  
                     nvTRnvrdCallback@step 01D5                ?_timer1DoneInterruptHandler 0001  
                     nvTRnvrdCallback@type 0001                                _pulseDelays 02A4  
              __end_of_getNextWriteMessage 8C52  
