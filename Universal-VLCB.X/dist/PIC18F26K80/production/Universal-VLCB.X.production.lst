

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Feb 19 10:33:17 2025

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	_eventTable_text,global,ovrld,reloc=2,class=CODE,delta=1,noexec
     8                           	psect	_paramBlock_text,global,ovrld,reloc=2,class=CODE,delta=1,noexec
     9                           	psect	_name_text,global,ovrld,reloc=2,class=CODE,delta=1,noexec
    10                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=2
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1,group=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1,group=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1,group=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1,group=1
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1,group=1
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1
   194                           	psect	text170,global,reloc=2,class=CODE,delta=1
   195                           	psect	text171,global,reloc=2,class=CODE,delta=1
   196                           	psect	text172,global,reloc=2,class=CODE,delta=1
   197                           	psect	text173,global,reloc=2,class=CODE,delta=1
   198                           	psect	text174,global,reloc=2,class=CODE,delta=1
   199                           	psect	text175,global,reloc=2,class=CODE,delta=1
   200                           	psect	text176,global,reloc=2,class=CODE,delta=1
   201                           	psect	text177,global,reloc=2,class=CODE,delta=1
   202                           	psect	text178,global,reloc=2,class=CODE,delta=1
   203                           	psect	text179,global,reloc=2,class=CODE,delta=1
   204                           	psect	text180,global,reloc=2,class=CODE,delta=1
   205                           	psect	text181,global,reloc=2,class=CODE,delta=1
   206                           	psect	text182,global,reloc=2,class=CODE,delta=1
   207                           	psect	text183,global,reloc=2,class=CODE,delta=1
   208                           	psect	text184,global,reloc=2,class=CODE,delta=1
   209                           	psect	text185,global,reloc=2,class=CODE,delta=1
   210                           	psect	text186,global,reloc=2,class=CODE,delta=1
   211                           	psect	text187,global,reloc=2,class=CODE,delta=1
   212                           	psect	text188,global,reloc=2,class=CODE,delta=1
   213                           	psect	text189,global,reloc=2,class=CODE,delta=1
   214                           	psect	text190,global,reloc=2,class=CODE,delta=1
   215                           	psect	text191,global,reloc=2,class=CODE,delta=1
   216                           	psect	text192,global,reloc=2,class=CODE,delta=1
   217                           	psect	text193,global,reloc=2,class=CODE,delta=1
   218                           	psect	text194,global,reloc=2,class=CODE,delta=1
   219                           	psect	text195,global,reloc=2,class=CODE,delta=1
   220                           	psect	text196,global,reloc=2,class=CODE,delta=1
   221                           	psect	text197,global,reloc=2,class=CODE,delta=1
   222                           	psect	mainSec,global,reloc=2,class=CODE,delta=1
   223                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   224                           	psect	text199,global,reloc=2,class=CODE,delta=1
   225                           	psect	text200,global,reloc=2,class=CODE,delta=1
   226                           	psect	text201,global,reloc=2,class=CODE,delta=1
   227                           	psect	text202,global,reloc=2,class=CODE,delta=1
   228                           	psect	text203,global,reloc=2,class=CODE,delta=1
   229                           	psect	text204,global,reloc=2,class=CODE,delta=1
   230                           	psect	text205,global,reloc=2,class=CODE,delta=1
   231                           	psect	text206,global,reloc=2,class=CODE,delta=1
   232                           	psect	text207,global,reloc=2,class=CODE,delta=1
   233                           	psect	text208,global,reloc=2,class=CODE,delta=1
   234                           	psect	text209,global,reloc=2,class=CODE,delta=1
   235                           	psect	text210,global,reloc=2,class=CODE,delta=1
   236                           	psect	text211,global,reloc=2,class=CODE,delta=1
   237                           	psect	text212,global,reloc=2,class=CODE,delta=1
   238                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   239                           	psect	text214,global,reloc=2,class=CODE,delta=1
   240                           	psect	text215,global,reloc=2,class=CODE,delta=1
   241                           	psect	text216,global,reloc=2,class=CODE,delta=1
   242                           	psect	text217,global,reloc=2,class=CODE,delta=1
   243                           	psect	text218,global,reloc=2,class=CODE,delta=1
   244                           	psect	text219,global,reloc=2,class=CODE,delta=1
   245                           	psect	text220,global,reloc=2,class=CODE,delta=1
   246                           	psect	text221,global,reloc=2,class=CODE,delta=1
   247                           	psect	text222,global,reloc=2,class=CODE,delta=1
   248                           	psect	text223,global,reloc=2,class=CODE,delta=1
   249                           	psect	text224,global,reloc=2,class=CODE,delta=1
   250                           	psect	text225,global,reloc=2,class=CODE,delta=1
   251                           	psect	text226,global,reloc=2,class=CODE,delta=1
   252                           	psect	text227,global,reloc=2,class=CODE,delta=1
   253                           	psect	text228,global,reloc=2,class=CODE,delta=1
   254                           	psect	text229,global,reloc=2,class=CODE,delta=1
   255                           	psect	text230,global,reloc=2,class=CODE,delta=1
   256                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   257                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   258                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
   259                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   260   000000                     
   261                           ; Generated 12/10/2023 GMT
   262                           ; 
   263                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   264                           ; All rights reserved.
   265                           ; 
   266                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   267                           ; 
   268                           ; Redistribution and use in source and binary forms, with or without modification, are
   269                           ; permitted provided that the following conditions are met:
   270                           ; 
   271                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   272                           ;        conditions and the following disclaimer.
   273                           ; 
   274                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   275                           ;        of conditions and the following disclaimer in the documentation and/or other
   276                           ;        materials provided with the distribution. Publication is not required when
   277                           ;        this file is used in an embedded application.
   278                           ; 
   279                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   280                           ;        software without specific prior written permission.
   281                           ; 
   282                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   283                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   284                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   285                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   286                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   287                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   288                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   289                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   290                           ; 
   291                           ; 
   292                           ; Code-generator required, PIC18F26K80 Definitions
   293                           ; 
   294                           ; SFR Addresses
   295   000000                     
   296                           	psect	eeprom_data
   297   F003FF                     	org	1023	;# 
   298   F003FF  00                 	db	0	;# 
   299   000000                     _eventTable_absaddr	set	61312
   300                           
   301                           	psect	mediumconst
   302   00ED28                     __pmediumconst:
   303                           	callstack 0
   304   00ED28  00                 	db	0
   305   00ED29                     _priorities:
   306                           	callstack 0
   307   00ED29  01                 	db	1
   308   00ED2A  01                 	db	1
   309   00ED2B  03                 	db	3
   310   00ED2C  02                 	db	2
   311   00ED2D  02                 	db	2
   312   00ED2E  02                 	db	2
   313   00ED2F  02                 	db	2
   314   00ED30  03                 	db	3
   315   00ED31  02                 	db	2
   316   00ED32  02                 	db	2
   317   00ED33  03                 	db	3
   318   00ED34  01                 	db	1
   319   00ED35  00                 	db	0
   320   00ED36  00                 	db	0
   321   00ED37  01                 	db	1
   322   00ED38  01                 	db	1
   323   00ED39  01                 	db	1
   324   00ED3A  01                 	db	1
   325   00ED3B  01                 	db	1
   326   00ED3C  01                 	db	1
   327   00ED3D  01                 	db	1
   328   00ED3E  01                 	db	1
   329   00ED3F  01                 	db	1
   330   00ED40  01                 	db	1
   331   00ED41  01                 	db	1
   332   00ED42  01                 	db	1
   333   00ED43  01                 	db	1
   334   00ED44  01                 	db	1
   335   00ED45  01                 	db	1
   336   00ED46  01                 	db	1
   337   00ED47  01                 	db	1
   338   00ED48  01                 	db	1
   339   00ED49  01                 	db	1
   340   00ED4A  01                 	db	1
   341   00ED4B  01                 	db	1
   342   00ED4C  01                 	db	1
   343   00ED4D  01                 	db	1
   344   00ED4E  01                 	db	1
   345   00ED4F  01                 	db	1
   346   00ED50  01                 	db	1
   347   00ED51  01                 	db	1
   348   00ED52  01                 	db	1
   349   00ED53  01                 	db	1
   350   00ED54  01                 	db	1
   351   00ED55  01                 	db	1
   352   00ED56  01                 	db	1
   353   00ED57  01                 	db	1
   354   00ED58  01                 	db	1
   355   00ED59  01                 	db	1
   356   00ED5A  01                 	db	1
   357   00ED5B  01                 	db	1
   358   00ED5C  01                 	db	1
   359   00ED5D  01                 	db	1
   360   00ED5E  01                 	db	1
   361   00ED5F  01                 	db	1
   362   00ED60  01                 	db	1
   363   00ED61  01                 	db	1
   364   00ED62  01                 	db	1
   365   00ED63  01                 	db	1
   366   00ED64  01                 	db	1
   367   00ED65  01                 	db	1
   368   00ED66  01                 	db	1
   369   00ED67  01                 	db	1
   370   00ED68  00                 	db	0
   371   00ED69  01                 	db	1
   372   00ED6A  01                 	db	1
   373   00ED6B  01                 	db	1
   374   00ED6C  01                 	db	1
   375   00ED6D  01                 	db	1
   376   00ED6E  01                 	db	1
   377   00ED6F  01                 	db	1
   378   00ED70  01                 	db	1
   379   00ED71  01                 	db	1
   380   00ED72  00                 	db	0
   381   00ED73  01                 	db	1
   382   00ED74  01                 	db	1
   383   00ED75  00                 	db	0
   384   00ED76  00                 	db	0
   385   00ED77  00                 	db	0
   386   00ED78  00                 	db	0
   387   00ED79  00                 	db	0
   388   00ED7A  00                 	db	0
   389   00ED7B  00                 	db	0
   390   00ED7C  00                 	db	0
   391   00ED7D  00                 	db	0
   392   00ED7E  00                 	db	0
   393   00ED7F  00                 	db	0
   394   00ED80  00                 	db	0
   395   00ED81  00                 	db	0
   396   00ED82  00                 	db	0
   397   00ED83  00                 	db	0
   398   00ED84  00                 	db	0
   399   00ED85  00                 	db	0
   400   00ED86  01                 	db	1
   401   00ED87  01                 	db	1
   402   00ED88  01                 	db	1
   403   00ED89  01                 	db	1
   404   00ED8A  01                 	db	1
   405   00ED8B  03                 	db	3
   406   00ED8C  01                 	db	1
   407   00ED8D  01                 	db	1
   408   00ED8E  01                 	db	1
   409   00ED8F  01                 	db	1
   410   00ED90  01                 	db	1
   411   00ED91  01                 	db	1
   412   00ED92  01                 	db	1
   413   00ED93  01                 	db	1
   414   00ED94  00                 	db	0
   415   00ED95  00                 	db	0
   416   00ED96  00                 	db	0
   417   00ED97  00                 	db	0
   418   00ED98  00                 	db	0
   419   00ED99  00                 	db	0
   420   00ED9A  00                 	db	0
   421   00ED9B  00                 	db	0
   422   00ED9C  01                 	db	1
   423   00ED9D  00                 	db	0
   424   00ED9E  01                 	db	1
   425   00ED9F  01                 	db	1
   426   00EDA0  01                 	db	1
   427   00EDA1  01                 	db	1
   428   00EDA2  01                 	db	1
   429   00EDA3  01                 	db	1
   430   00EDA4  00                 	db	0
   431   00EDA5  01                 	db	1
   432   00EDA6  01                 	db	1
   433   00EDA7  01                 	db	1
   434   00EDA8  01                 	db	1
   435   00EDA9  01                 	db	1
   436   00EDAA  01                 	db	1
   437   00EDAB  01                 	db	1
   438   00EDAC  00                 	db	0
   439   00EDAD  01                 	db	1
   440   00EDAE  01                 	db	1
   441   00EDAF  01                 	db	1
   442   00EDB0  01                 	db	1
   443   00EDB1  01                 	db	1
   444   00EDB2  01                 	db	1
   445   00EDB3  00                 	db	0
   446   00EDB4  01                 	db	1
   447   00EDB5  00                 	db	0
   448   00EDB6  00                 	db	0
   449   00EDB7  00                 	db	0
   450   00EDB8  00                 	db	0
   451   00EDB9  00                 	db	0
   452   00EDBA  00                 	db	0
   453   00EDBB  00                 	db	0
   454   00EDBC  00                 	db	0
   455   00EDBD  00                 	db	0
   456   00EDBE  00                 	db	0
   457   00EDBF  00                 	db	0
   458   00EDC0  00                 	db	0
   459   00EDC1  00                 	db	0
   460   00EDC2  00                 	db	0
   461   00EDC3  00                 	db	0
   462   00EDC4  00                 	db	0
   463   00EDC5  01                 	db	1
   464   00EDC6  01                 	db	1
   465   00EDC7  01                 	db	1
   466   00EDC8  01                 	db	1
   467   00EDC9  01                 	db	1
   468   00EDCA  01                 	db	1
   469   00EDCB  01                 	db	1
   470   00EDCC  01                 	db	1
   471   00EDCD  01                 	db	1
   472   00EDCE  01                 	db	1
   473   00EDCF  01                 	db	1
   474   00EDD0  00                 	db	0
   475   00EDD1  00                 	db	0
   476   00EDD2  01                 	db	1
   477   00EDD3  01                 	db	1
   478   00EDD4  00                 	db	0
   479   00EDD5  00                 	db	0
   480   00EDD6  00                 	db	0
   481   00EDD7  00                 	db	0
   482   00EDD8  00                 	db	0
   483   00EDD9  00                 	db	0
   484   00EDDA  00                 	db	0
   485   00EDDB  00                 	db	0
   486   00EDDC  01                 	db	1
   487   00EDDD  00                 	db	0
   488   00EDDE  00                 	db	0
   489   00EDDF  01                 	db	1
   490   00EDE0  01                 	db	1
   491   00EDE1  01                 	db	1
   492   00EDE2  00                 	db	0
   493   00EDE3  00                 	db	0
   494   00EDE4  00                 	db	0
   495   00EDE5  01                 	db	1
   496   00EDE6  01                 	db	1
   497   00EDE7  01                 	db	1
   498   00EDE8  01                 	db	1
   499   00EDE9  01                 	db	1
   500   00EDEA  01                 	db	1
   501   00EDEB  01                 	db	1
   502   00EDEC  00                 	db	0
   503   00EDED  01                 	db	1
   504   00EDEE  01                 	db	1
   505   00EDEF  01                 	db	1
   506   00EDF0  01                 	db	1
   507   00EDF1  01                 	db	1
   508   00EDF2  01                 	db	1
   509   00EDF3  01                 	db	1
   510   00EDF4  01                 	db	1
   511   00EDF5  00                 	db	0
   512   00EDF6  00                 	db	0
   513   00EDF7  00                 	db	0
   514   00EDF8  00                 	db	0
   515   00EDF9  00                 	db	0
   516   00EDFA  00                 	db	0
   517   00EDFB  01                 	db	1
   518   00EDFC  01                 	db	1
   519   00EDFD  00                 	db	0
   520   00EDFE  00                 	db	0
   521   00EDFF  01                 	db	1
   522   00EE00  01                 	db	1
   523   00EE01  01                 	db	1
   524   00EE02  00                 	db	0
   525   00EE03  00                 	db	0
   526   00EE04  00                 	db	0
   527   00EE05  01                 	db	1
   528   00EE06  01                 	db	1
   529   00EE07  00                 	db	0
   530   00EE08  01                 	db	1
   531   00EE09  01                 	db	1
   532   00EE0A  01                 	db	1
   533   00EE0B  00                 	db	0
   534   00EE0C  00                 	db	0
   535   00EE0D  01                 	db	1
   536   00EE0E  00                 	db	0
   537   00EE0F  01                 	db	1
   538   00EE10  01                 	db	1
   539   00EE11  01                 	db	1
   540   00EE12  01                 	db	1
   541   00EE13  01                 	db	1
   542   00EE14  00                 	db	0
   543   00EE15  00                 	db	0
   544   00EE16  00                 	db	0
   545   00EE17  00                 	db	0
   546   00EE18  00                 	db	0
   547   00EE19  00                 	db	0
   548   00EE1A  00                 	db	0
   549   00EE1B  00                 	db	0
   550   00EE1C  00                 	db	0
   551   00EE1D  00                 	db	0
   552   00EE1E  00                 	db	0
   553   00EE1F  00                 	db	0
   554   00EE20  00                 	db	0
   555   00EE21  00                 	db	0
   556   00EE22  00                 	db	0
   557   00EE23  01                 	db	1
   558   00EE24  00                 	db	0
   559   00EE25  00                 	db	0
   560   00EE26  00                 	db	0
   561   00EE27  00                 	db	0
   562   00EE28  00                 	db	0
   563   00EE29                     __end_of_priorities:
   564                           	callstack 0
   565   00EE29                     _configs:
   566                           	callstack 0
   567   00EE29  0B                 	db	11
   568   00EE2A  43                 	db	67
   569   00EE2B  00                 	db	0
   570   00EE2C  FF                 	db	255
   571   00EE2D  0C                 	db	12
   572   00EE2E  43                 	db	67
   573   00EE2F  01                 	db	1
   574   00EE30  FF                 	db	255
   575   00EE31  0D                 	db	13
   576   00EE32  43                 	db	67
   577   00EE33  02                 	db	2
   578   00EE34  FF                 	db	255
   579   00EE35  0E                 	db	14
   580   00EE36  43                 	db	67
   581   00EE37  03                 	db	3
   582   00EE38  FF                 	db	255
   583   00EE39  0F                 	db	15
   584   00EE3A  43                 	db	67
   585   00EE3B  04                 	db	4
   586   00EE3C  FF                 	db	255
   587   00EE3D  10                 	db	16
   588   00EE3E  43                 	db	67
   589   00EE3F  05                 	db	5
   590   00EE40  FF                 	db	255
   591   00EE41  11                 	db	17
   592   00EE42  43                 	db	67
   593   00EE43  06                 	db	6
   594   00EE44  FF                 	db	255
   595   00EE45  12                 	db	18
   596   00EE46  43                 	db	67
   597   00EE47  07                 	db	7
   598   00EE48  FF                 	db	255
   599   00EE49  15                 	db	21
   600   00EE4A  42                 	db	66
   601   00EE4B  00                 	db	0
   602   00EE4C  0A                 	db	10
   603   00EE4D  16                 	db	22
   604   00EE4E  42                 	db	66
   605   00EE4F  01                 	db	1
   606   00EE50  08                 	db	8
   607   00EE51  19                 	db	25
   608   00EE52  42                 	db	66
   609   00EE53  04                 	db	4
   610   00EE54  09                 	db	9
   611   00EE55  1A                 	db	26
   612   00EE56  42                 	db	66
   613   00EE57  05                 	db	5
   614   00EE58  FF                 	db	255
   615   00EE59  03                 	db	3
   616   00EE5A  41                 	db	65
   617   00EE5B  01                 	db	1
   618   00EE5C  01                 	db	1
   619   00EE5D  02                 	db	2
   620   00EE5E  41                 	db	65
   621   00EE5F  00                 	db	0
   622   00EE60  00                 	db	0
   623   00EE61  05                 	db	5
   624   00EE62  41                 	db	65
   625   00EE63  03                 	db	3
   626   00EE64  03                 	db	3
   627   00EE65  07                 	db	7
   628   00EE66  41                 	db	65
   629   00EE67  05                 	db	5
   630   00EE68  04                 	db	4
   631   00EE69                     __end_of_configs:
   632                           	callstack 0
   633   000000                     _paramBlock_absaddr	set	2080
   634   00EE69                     _services:
   635                           	callstack 0
   636   00EE69  68                 	db	low _canService
   637   00EE6A  EF                 	db	high _canService
   638   00EE6B  56                 	db	low _mnsService
   639   00EE6C  EF                 	db	high _mnsService
   640   00EE6D  44                 	db	low _nvService
   641   00EE6E  EF                 	db	high _nvService
   642   00EE6F  32                 	db	low _bootService
   643   00EE70  EF                 	db	high _bootService
   644   00EE71  20                 	db	low _eventTeachService
   645   00EE72  EF                 	db	high _eventTeachService
   646   00EE73  0E                 	db	low _eventConsumer2QService
   647   00EE74  EF                 	db	high _eventConsumer2QService
   648   00EE75  FC                 	db	low _eventProducerService
   649   00EE76  EE                 	db	high _eventProducerService
   650   00EE77  EA                 	db	low _eventCoeService
   651   00EE78  EE                 	db	high _eventCoeService
   652   00EE79  D8                 	db	low _eventAckService
   653   00EE7A  EE                 	db	high _eventAckService
   654   00EE7B                     __end_of_services:
   655                           	callstack 0
   656   00EE7B                     _bl_version:
   657                           	callstack 0
   658   00EE7B  42                 	db	66
   659   00EE7C  4C                 	db	76
   660   00EE7D  5F                 	db	95
   661   00EE7E  56                 	db	86
   662   00EE7F  45                 	db	69
   663   00EE80  52                 	db	82
   664   00EE81  53                 	db	83
   665   00EE82  49                 	db	73
   666   00EE83  4F                 	db	79
   667   00EE84  4E                 	db	78
   668   00EE85  3D                 	db	61
   669   00EE86                     __end_of_bl_version:
   670                           	callstack 0
   671   000000                     _name_absaddr	set	2120
   672   00EE86                     _canPri:
   673                           	callstack 0
   674   00EE86  B0                 	db	176
   675   00EE87  A0                 	db	160
   676   00EE88  90                 	db	144
   677   00EE89  80                 	db	128
   678   00EE8A  00                 	db	0
   679   00EE8B                     __end_of_canPri:
   680                           	callstack 0
   681   00EE8B                     _channelDefaultNVs:
   682                           	callstack 0
   683   00EE8B  00                 	db	0
   684   00EE8C  06                 	db	6
   685   00EE8D  04                 	db	4
   686   00EE8E  04                 	db	4
   687   00EE8F  00                 	db	0
   688   00EE90  00                 	db	0
   689   00EE91  00                 	db	0
   690   00EE92  01                 	db	1
   691   00EE93  06                 	db	6
   692   00EE94  00                 	db	0
   693   00EE95  00                 	db	0
   694   00EE96  00                 	db	0
   695   00EE97  00                 	db	0
   696   00EE98  00                 	db	0
   697   00EE99  02                 	db	2
   698   00EE9A  06                 	db	6
   699   00EE9B  80                 	db	128
   700   00EE9C  80                 	db	128
   701   00EE9D  EB                 	db	235
   702   00EE9E  EB                 	db	235
   703   00EE9F  00                 	db	0
   704   00EEA0  03                 	db	3
   705   00EEA1  06                 	db	6
   706   00EEA2  80                 	db	128
   707   00EEA3  7F                 	db	127
   708   00EEA4  40                 	db	64
   709   00EEA5  03                 	db	3
   710   00EEA6  3C                 	db	60
   711   00EEA7  04                 	db	4
   712   00EEA8  06                 	db	6
   713   00EEA9  03                 	db	3
   714   00EEAA  80                 	db	128
   715   00EEAB  80                 	db	128
   716   00EEAC  80                 	db	128
   717   00EEAD  00                 	db	0
   718   00EEAE  05                 	db	5
   719   00EEAF  06                 	db	6
   720   00EEB0  80                 	db	128
   721   00EEB1  10                 	db	16
   722   00EEB2  00                 	db	0
   723   00EEB3  00                 	db	0
   724   00EEB4  00                 	db	0
   725   00EEB5  06                 	db	6
   726   00EEB6  06                 	db	6
   727   00EEB7  00                 	db	0
   728   00EEB8  7B                 	db	123
   729   00EEB9  20                 	db	32
   730   00EEBA  07                 	db	7
   731   00EEBB  FF                 	db	255
   732   00EEBC  07                 	db	7
   733   00EEBD  06                 	db	6
   734   00EEBE  05                 	db	5
   735   00EEBF  00                 	db	0
   736   00EEC0  00                 	db	0
   737   00EEC1  00                 	db	0
   738   00EEC2  00                 	db	0
   739   00EEC3  08                 	db	8
   740   00EEC4  00                 	db	0
   741   00EEC5  00                 	db	0
   742   00EEC6  00                 	db	0
   743   00EEC7  00                 	db	0
   744   00EEC8  00                 	db	0
   745   00EEC9  00                 	db	0
   746   00EECA  00                 	db	0
   747   00EECB  00                 	db	0
   748   00EECC  00                 	db	0
   749   00EECD  00                 	db	0
   750   00EECE  00                 	db	0
   751   00EECF  00                 	db	0
   752   00EED0  00                 	db	0
   753   00EED1  00                 	db	0
   754   00EED2  00                 	db	0
   755   00EED3  00                 	db	0
   756   00EED4  00                 	db	0
   757   00EED5  00                 	db	0
   758   00EED6  00                 	db	0
   759   00EED7  00                 	db	0
   760   00EED8                     __end_of_channelDefaultNVs:
   761                           	callstack 0
   762   00EED8                     _eventAckService:
   763                           	callstack 0
   764   00EED8  09                 	db	9
   765   00EED9  01                 	db	1
   766   00EEDA  00                 	db	0
   767   00EEDB  00                 	db	0
   768   00EEDC  1C                 	db	low _ackPowerUp
   769   00EEDD  C3                 	db	high _ackPowerUp
   770   00EEDE  FE                 	db	low _ackEventProcessMessage
   771   00EEDF  67                 	db	high _ackEventProcessMessage
   772   00EEE0  00                 	db	0
   773   00EEE1  00                 	db	0
   774   00EEE2  00                 	db	0
   775   00EEE3  00                 	db	0
   776   00EEE4  00                 	db	0
   777   00EEE5  00                 	db	0
   778   00EEE6  00                 	db	0
   779   00EEE7  00                 	db	0
   780   00EEE8  CA                 	db	low _ackGetDiagnostic
   781   00EEE9  C4                 	db	high _ackGetDiagnostic
   782   00EEEA                     __end_of_eventAckService:
   783                           	callstack 0
   784   00EEEA                     _eventCoeService:
   785                           	callstack 0
   786   00EEEA  08                 	db	8
   787   00EEEB  01                 	db	1
   788   00EEEC  00                 	db	0
   789   00EEED  00                 	db	0
   790   00EEEE  00                 	db	0
   791   00EEEF  00                 	db	0
   792   00EEF0  00                 	db	0
   793   00EEF1  00                 	db	0
   794   00EEF2  00                 	db	0
   795   00EEF3  00                 	db	0
   796   00EEF4  00                 	db	0
   797   00EEF5  00                 	db	0
   798   00EEF6  00                 	db	0
   799   00EEF7  00                 	db	0
   800   00EEF8  00                 	db	0
   801   00EEF9  00                 	db	0
   802   00EEFA  00                 	db	0
   803   00EEFB  00                 	db	0
   804   00EEFC                     __end_of_eventCoeService:
   805                           	callstack 0
   806   00EEFC                     _eventProducerService:
   807                           	callstack 0
   808   00EEFC  05                 	db	5
   809   00EEFD  01                 	db	1
   810   00EEFE  00                 	db	0
   811   00EEFF  00                 	db	0
   812   00EF00  EE                 	db	low _producerPowerUp
   813   00EF01  C2                 	db	high _producerPowerUp
   814   00EF02  E6                 	db	low _producerProcessMessage
   815   00EF03  5E                 	db	high _producerProcessMessage
   816   00EF04  00                 	db	0
   817   00EF05  00                 	db	0
   818   00EF06  00                 	db	0
   819   00EF07  00                 	db	0
   820   00EF08  00                 	db	0
   821   00EF09  00                 	db	0
   822   00EF0A  E0                 	db	low _producerEsdData
   823   00EF0B  C6                 	db	high _producerEsdData
   824   00EF0C  52                 	db	low _producerGetDiagnostic
   825   00EF0D  C4                 	db	high _producerGetDiagnostic
   826   00EF0E                     __end_of_eventProducerService:
   827                           	callstack 0
   828   00EF0E                     _eventConsumer2QService:
   829                           	callstack 0
   830   00EF0E  06                 	db	6
   831   00EF0F  01                 	db	1
   832   00EF10  00                 	db	0
   833   00EF11  00                 	db	0
   834   00EF12  8E                 	db	low _consumer2QPowerUp
   835   00EF13  BD                 	db	high _consumer2QPowerUp
   836   00EF14  66                 	db	low _consumer2QProcessMessage
   837   00EF15  3A                 	db	high _consumer2QProcessMessage
   838   00EF16  00                 	db	0
   839   00EF17  00                 	db	0
   840   00EF18  00                 	db	0
   841   00EF19  00                 	db	0
   842   00EF1A  00                 	db	0
   843   00EF1B  00                 	db	0
   844   00EF1C  00                 	db	low _consumer2QEsdData
   845   00EF1D  C7                 	db	high _consumer2QEsdData
   846   00EF1E  F2                 	db	low _consumer2QGetDiagnostic
   847   00EF1F  C4                 	db	high _consumer2QGetDiagnostic
   848   00EF20                     __end_of_eventConsumer2QService:
   849                           	callstack 0
   850   00EF20                     _eventTeachService:
   851                           	callstack 0
   852   00EF20  04                 	db	4
   853   00EF21  01                 	db	1
   854   00EF22  20                 	db	low _teachFactoryReset
   855   00EF23  C9                 	db	high _teachFactoryReset
   856   00EF24  06                 	db	low _teachPowerUp
   857   00EF25  C1                 	db	high _teachPowerUp
   858   00EF26  F2                 	db	low _teachProcessMessage
   859   00EF27  22                 	db	high _teachProcessMessage
   860   00EF28  00                 	db	0
   861   00EF29  00                 	db	0
   862   00EF2A  00                 	db	0
   863   00EF2B  00                 	db	0
   864   00EF2C  00                 	db	0
   865   00EF2D  00                 	db	0
   866   00EF2E  50                 	db	low _teachGetESDdata
   867   00EF2F  C6                 	db	high _teachGetESDdata
   868   00EF30  1A                 	db	low _teachGetDiagnostic
   869   00EF31  C5                 	db	high _teachGetDiagnostic
   870   00EF32                     __end_of_eventTeachService:
   871                           	callstack 0
   872   00EF32                     _bootService:
   873                           	callstack 0
   874   00EF32  0A                 	db	10
   875   00EF33  02                 	db	2
   876   00EF34  00                 	db	0
   877   00EF35  00                 	db	0
   878   00EF36  36                 	db	low _bootPowerUp
   879   00EF37  94                 	db	high _bootPowerUp
   880   00EF38  B2                 	db	low _bootProcessMessage
   881   00EF39  A2                 	db	high _bootProcessMessage
   882   00EF3A  00                 	db	0
   883   00EF3B  00                 	db	0
   884   00EF3C  00                 	db	0
   885   00EF3D  00                 	db	0
   886   00EF3E  00                 	db	0
   887   00EF3F  00                 	db	0
   888   00EF40  2C                 	db	low _bootEsdData
   889   00EF41  C6                 	db	high _bootEsdData
   890   00EF42  00                 	db	0
   891   00EF43  00                 	db	0
   892   00EF44                     __end_of_bootService:
   893                           	callstack 0
   894   00EF44                     _nvService:
   895                           	callstack 0
   896   00EF44  02                 	db	2
   897   00EF45  01                 	db	1
   898   00EF46  1E                 	db	low _nvFactoryReset
   899   00EF47  C0                 	db	high _nvFactoryReset
   900   00EF48  3A                 	db	low _nvPowerUp
   901   00EF49  C1                 	db	high _nvPowerUp
   902   00EF4A  4A                 	db	low _nvProcessMessage
   903   00EF4B  48                 	db	high _nvProcessMessage
   904   00EF4C  00                 	db	0
   905   00EF4D  00                 	db	0
   906   00EF4E  00                 	db	0
   907   00EF4F  00                 	db	0
   908   00EF50  00                 	db	0
   909   00EF51  00                 	db	0
   910   00EF52  D0                 	db	low _nvGetESDdata
   911   00EF53  C7                 	db	high _nvGetESDdata
   912   00EF54  7A                 	db	low _nvGetDiagnostic
   913   00EF55  C4                 	db	high _nvGetDiagnostic
   914   00EF56                     __end_of_nvService:
   915                           	callstack 0
   916   00EF56                     _mnsService:
   917                           	callstack 0
   918   00EF56  01                 	db	1
   919   00EF57  01                 	db	1
   920   00EF58  6E                 	db	low _mnsFactoryReset
   921   00EF59  AE                 	db	high _mnsFactoryReset
   922   00EF5A  7C                 	db	low _mnsPowerUp
   923   00EF5B  80                 	db	high _mnsPowerUp
   924   00EF5C  C8                 	db	low _mnsProcessMessage
   925   00EF5D  17                 	db	high _mnsProcessMessage
   926   00EF5E  9C                 	db	low _mnsPoll
   927   00EF5F  32                 	db	high _mnsPoll
   928   00EF60  00                 	db	0
   929   00EF61  00                 	db	0
   930   00EF62  5E                 	db	low _mnsLowIsr
   931   00EF63  C8                 	db	high _mnsLowIsr
   932   00EF64  00                 	db	0
   933   00EF65  00                 	db	0
   934   00EF66  A2                 	db	low _mnsGetDiagnostic
   935   00EF67  C4                 	db	high _mnsGetDiagnostic
   936   00EF68                     __end_of_mnsService:
   937                           	callstack 0
   938   00EF68                     _canService:
   939                           	callstack 0
   940   00EF68  03                 	db	3
   941   00EF69  02                 	db	2
   942   00EF6A  60                 	db	low _canFactoryReset
   943   00EF6B  C7                 	db	high _canFactoryReset
   944   00EF6C  36                 	db	low _canPowerUp
   945   00EF6D  71                 	db	high _canPowerUp
   946   00EF6E  38                 	db	low _canProcessMessage
   947   00EF6F  A0                 	db	high _canProcessMessage
   948   00EF70  00                 	db	0
   949   00EF71  00                 	db	0
   950   00EF72  40                 	db	low _canIsr
   951   00EF73  C7                 	db	high _canIsr
   952   00EF74  40                 	db	low _canIsr
   953   00EF75  C7                 	db	high _canIsr
   954   00EF76  B6                 	db	low _canEsdData
   955   00EF77  C7                 	db	high _canEsdData
   956   00EF78  6E                 	db	low _canGetDiagnostic
   957   00EF79  B2                 	db	high _canGetDiagnostic
   958   00EF7A                     __end_of_canService:
   959                           	callstack 0
   960   00EF7A                     _canTransport:
   961                           	callstack 0
   962   00EF7A  84                 	db	low _canSendMessage
   963   00EF7B  4B                 	db	high _canSendMessage
   964   00EF7C  F0                 	db	low _canReceiveMessage
   965   00EF7D  69                 	db	high _canReceiveMessage
   966   00EF7E                     __end_of_canTransport:
   967                           	callstack 0
   968   000000                     _eventTable_absaddr	set	61312
   969   00EF7E  00                 	db	0	; dummy byte at the end
   970   000000                     
   971                           	psect	_eventTable_text
   972   00EF80                     __p_eventTable_text:
   973                           	callstack 0
   974   00EF80                     _eventTable:
   975                           	callstack 0
   976   00EF80  FF                 	db	255
   977   00EF81  FF                 	db	255
   978   00EF82  FF                 	db	255
   979   00EF83  FF                 	db	255
   980   00EF84  FF                 	db	255
   981   00EF85  FF                 	db	255
   982   00EF86  FF                 	db	255
   983   00EF87  FF                 	db	255
   984   00EF88  FF                 	db	255
   985   00EF89  FF                 	db	255
   986   00EF8A  FF                 	db	255
   987   00EF8B  FF                 	db	255
   988   00EF8C  FF                 	db	255
   989   00EF8D  FF                 	db	255
   990   00EF8E  FF                 	db	255
   991   00EF8F  FF                 	db	255
   992   00EF90  FF                 	db	255
   993   00EF91  FF                 	db	255
   994   00EF92  FF                 	db	255
   995   00EF93  FF                 	db	255
   996   00EF94  FF                 	db	255
   997   00EF95  FF                 	db	255
   998   00EF96  FF                 	db	255
   999   00EF97  FF                 	db	255
  1000   00EF98  FF                 	db	255
  1001   00EF99  FF                 	db	255
  1002   00EF9A  FF                 	db	255
  1003   00EF9B  FF                 	db	255
  1004   00EF9C  FF                 	db	255
  1005   00EF9D  FF                 	db	255
  1006   00EF9E  FF                 	db	255
  1007   00EF9F  FF                 	db	255
  1008   00EFA0  FF                 	db	255
  1009   00EFA1  FF                 	db	255
  1010   00EFA2  FF                 	db	255
  1011   00EFA3  FF                 	db	255
  1012   00EFA4  FF                 	db	255
  1013   00EFA5  FF                 	db	255
  1014   00EFA6  FF                 	db	255
  1015   00EFA7  FF                 	db	255
  1016   00EFA8  FF                 	db	255
  1017   00EFA9  FF                 	db	255
  1018   00EFAA  FF                 	db	255
  1019   00EFAB  FF                 	db	255
  1020   00EFAC  FF                 	db	255
  1021   00EFAD  FF                 	db	255
  1022   00EFAE  FF                 	db	255
  1023   00EFAF  FF                 	db	255
  1024   00EFB0  FF                 	db	255
  1025   00EFB1  FF                 	db	255
  1026   00EFB2  FF                 	db	255
  1027   00EFB3  FF                 	db	255
  1028   00EFB4  FF                 	db	255
  1029   00EFB5  FF                 	db	255
  1030   00EFB6  FF                 	db	255
  1031   00EFB7  FF                 	db	255
  1032   00EFB8  FF                 	db	255
  1033   00EFB9  FF                 	db	255
  1034   00EFBA  FF                 	db	255
  1035   00EFBB  FF                 	db	255
  1036   00EFBC  FF                 	db	255
  1037   00EFBD  FF                 	db	255
  1038   00EFBE  FF                 	db	255
  1039   00EFBF  FF                 	db	255
  1040   00EFC0  FF                 	db	255
  1041   00EFC1  FF                 	db	255
  1042   00EFC2  FF                 	db	255
  1043   00EFC3  FF                 	db	255
  1044   00EFC4  FF                 	db	255
  1045   00EFC5  FF                 	db	255
  1046   00EFC6  FF                 	db	255
  1047   00EFC7  FF                 	db	255
  1048   00EFC8  FF                 	db	255
  1049   00EFC9  FF                 	db	255
  1050   00EFCA  FF                 	db	255
  1051   00EFCB  FF                 	db	255
  1052   00EFCC  FF                 	db	255
  1053   00EFCD  FF                 	db	255
  1054   00EFCE  FF                 	db	255
  1055   00EFCF  FF                 	db	255
  1056   00EFD0  FF                 	db	255
  1057   00EFD1  FF                 	db	255
  1058   00EFD2  FF                 	db	255
  1059   00EFD3  FF                 	db	255
  1060   00EFD4  FF                 	db	255
  1061   00EFD5  FF                 	db	255
  1062   00EFD6  FF                 	db	255
  1063   00EFD7  FF                 	db	255
  1064   00EFD8  FF                 	db	255
  1065   00EFD9  FF                 	db	255
  1066   00EFDA  FF                 	db	255
  1067   00EFDB  FF                 	db	255
  1068   00EFDC  FF                 	db	255
  1069   00EFDD  FF                 	db	255
  1070   00EFDE  FF                 	db	255
  1071   00EFDF  FF                 	db	255
  1072   00EFE0  FF                 	db	255
  1073   00EFE1  FF                 	db	255
  1074   00EFE2  FF                 	db	255
  1075   00EFE3  FF                 	db	255
  1076   00EFE4  FF                 	db	255
  1077   00EFE5  FF                 	db	255
  1078   00EFE6  FF                 	db	255
  1079   00EFE7  FF                 	db	255
  1080   00EFE8  FF                 	db	255
  1081   00EFE9  FF                 	db	255
  1082   00EFEA  FF                 	db	255
  1083   00EFEB  FF                 	db	255
  1084   00EFEC  FF                 	db	255
  1085   00EFED  FF                 	db	255
  1086   00EFEE  FF                 	db	255
  1087   00EFEF  FF                 	db	255
  1088   00EFF0  FF                 	db	255
  1089   00EFF1  FF                 	db	255
  1090   00EFF2  FF                 	db	255
  1091   00EFF3  FF                 	db	255
  1092   00EFF4  FF                 	db	255
  1093   00EFF5  FF                 	db	255
  1094   00EFF6  FF                 	db	255
  1095   00EFF7  FF                 	db	255
  1096   00EFF8  FF                 	db	255
  1097   00EFF9  FF                 	db	255
  1098   00EFFA  FF                 	db	255
  1099   00EFFB  FF                 	db	255
  1100   00EFFC  FF                 	db	255
  1101   00EFFD  FF                 	db	255
  1102   00EFFE  FF                 	db	255
  1103   00EFFF  FF                 	db	255
  1104   00F000  FF                 	db	255
  1105   00F001  FF                 	db	255
  1106   00F002  FF                 	db	255
  1107   00F003  FF                 	db	255
  1108   00F004  FF                 	db	255
  1109   00F005  FF                 	db	255
  1110   00F006  FF                 	db	255
  1111   00F007  FF                 	db	255
  1112   00F008  FF                 	db	255
  1113   00F009  FF                 	db	255
  1114   00F00A  FF                 	db	255
  1115   00F00B  FF                 	db	255
  1116   00F00C  FF                 	db	255
  1117   00F00D  FF                 	db	255
  1118   00F00E  FF                 	db	255
  1119   00F00F  FF                 	db	255
  1120   00F010  FF                 	db	255
  1121   00F011  FF                 	db	255
  1122   00F012  FF                 	db	255
  1123   00F013  FF                 	db	255
  1124   00F014  FF                 	db	255
  1125   00F015  FF                 	db	255
  1126   00F016  FF                 	db	255
  1127   00F017  FF                 	db	255
  1128   00F018  FF                 	db	255
  1129   00F019  FF                 	db	255
  1130   00F01A  FF                 	db	255
  1131   00F01B  FF                 	db	255
  1132   00F01C  FF                 	db	255
  1133   00F01D  FF                 	db	255
  1134   00F01E  FF                 	db	255
  1135   00F01F  FF                 	db	255
  1136   00F020  FF                 	db	255
  1137   00F021  FF                 	db	255
  1138   00F022  FF                 	db	255
  1139   00F023  FF                 	db	255
  1140   00F024  FF                 	db	255
  1141   00F025  FF                 	db	255
  1142   00F026  FF                 	db	255
  1143   00F027  FF                 	db	255
  1144   00F028  FF                 	db	255
  1145   00F029  FF                 	db	255
  1146   00F02A  FF                 	db	255
  1147   00F02B  FF                 	db	255
  1148   00F02C  FF                 	db	255
  1149   00F02D  FF                 	db	255
  1150   00F02E  FF                 	db	255
  1151   00F02F  FF                 	db	255
  1152   00F030  FF                 	db	255
  1153   00F031  FF                 	db	255
  1154   00F032  FF                 	db	255
  1155   00F033  FF                 	db	255
  1156   00F034  FF                 	db	255
  1157   00F035  FF                 	db	255
  1158   00F036  FF                 	db	255
  1159   00F037  FF                 	db	255
  1160   00F038  FF                 	db	255
  1161   00F039  FF                 	db	255
  1162   00F03A  FF                 	db	255
  1163   00F03B  FF                 	db	255
  1164   00F03C  FF                 	db	255
  1165   00F03D  FF                 	db	255
  1166   00F03E  FF                 	db	255
  1167   00F03F  FF                 	db	255
  1168   00F040  FF                 	db	255
  1169   00F041  FF                 	db	255
  1170   00F042  FF                 	db	255
  1171   00F043  FF                 	db	255
  1172   00F044  FF                 	db	255
  1173   00F045  FF                 	db	255
  1174   00F046  FF                 	db	255
  1175   00F047  FF                 	db	255
  1176   00F048  FF                 	db	255
  1177   00F049  FF                 	db	255
  1178   00F04A  FF                 	db	255
  1179   00F04B  FF                 	db	255
  1180   00F04C  FF                 	db	255
  1181   00F04D  FF                 	db	255
  1182   00F04E  FF                 	db	255
  1183   00F04F  FF                 	db	255
  1184   00F050  FF                 	db	255
  1185   00F051  FF                 	db	255
  1186   00F052  FF                 	db	255
  1187   00F053  FF                 	db	255
  1188   00F054  FF                 	db	255
  1189   00F055  FF                 	db	255
  1190   00F056  FF                 	db	255
  1191   00F057  FF                 	db	255
  1192   00F058  FF                 	db	255
  1193   00F059  FF                 	db	255
  1194   00F05A  FF                 	db	255
  1195   00F05B  FF                 	db	255
  1196   00F05C  FF                 	db	255
  1197   00F05D  FF                 	db	255
  1198   00F05E  FF                 	db	255
  1199   00F05F  FF                 	db	255
  1200   00F060  FF                 	db	255
  1201   00F061  FF                 	db	255
  1202   00F062  FF                 	db	255
  1203   00F063  FF                 	db	255
  1204   00F064  FF                 	db	255
  1205   00F065  FF                 	db	255
  1206   00F066  FF                 	db	255
  1207   00F067  FF                 	db	255
  1208   00F068  FF                 	db	255
  1209   00F069  FF                 	db	255
  1210   00F06A  FF                 	db	255
  1211   00F06B  FF                 	db	255
  1212   00F06C  FF                 	db	255
  1213   00F06D  FF                 	db	255
  1214   00F06E  FF                 	db	255
  1215   00F06F  FF                 	db	255
  1216   00F070  FF                 	db	255
  1217   00F071  FF                 	db	255
  1218   00F072  FF                 	db	255
  1219   00F073  FF                 	db	255
  1220   00F074  FF                 	db	255
  1221   00F075  FF                 	db	255
  1222   00F076  FF                 	db	255
  1223   00F077  FF                 	db	255
  1224   00F078  FF                 	db	255
  1225   00F079  FF                 	db	255
  1226   00F07A  FF                 	db	255
  1227   00F07B  FF                 	db	255
  1228   00F07C  FF                 	db	255
  1229   00F07D  FF                 	db	255
  1230   00F07E  FF                 	db	255
  1231   00F07F  FF                 	db	255
  1232   00F080  FF                 	db	255
  1233   00F081  FF                 	db	255
  1234   00F082  FF                 	db	255
  1235   00F083  FF                 	db	255
  1236   00F084  FF                 	db	255
  1237   00F085  FF                 	db	255
  1238   00F086  FF                 	db	255
  1239   00F087  FF                 	db	255
  1240   00F088  FF                 	db	255
  1241   00F089  FF                 	db	255
  1242   00F08A  FF                 	db	255
  1243   00F08B  FF                 	db	255
  1244   00F08C  FF                 	db	255
  1245   00F08D  FF                 	db	255
  1246   00F08E  FF                 	db	255
  1247   00F08F  FF                 	db	255
  1248   00F090  FF                 	db	255
  1249   00F091  FF                 	db	255
  1250   00F092  FF                 	db	255
  1251   00F093  FF                 	db	255
  1252   00F094  FF                 	db	255
  1253   00F095  FF                 	db	255
  1254   00F096  FF                 	db	255
  1255   00F097  FF                 	db	255
  1256   00F098  FF                 	db	255
  1257   00F099  FF                 	db	255
  1258   00F09A  FF                 	db	255
  1259   00F09B  FF                 	db	255
  1260   00F09C  FF                 	db	255
  1261   00F09D  FF                 	db	255
  1262   00F09E  FF                 	db	255
  1263   00F09F  FF                 	db	255
  1264   00F0A0  FF                 	db	255
  1265   00F0A1  FF                 	db	255
  1266   00F0A2  FF                 	db	255
  1267   00F0A3  FF                 	db	255
  1268   00F0A4  FF                 	db	255
  1269   00F0A5  FF                 	db	255
  1270   00F0A6  FF                 	db	255
  1271   00F0A7  FF                 	db	255
  1272   00F0A8  FF                 	db	255
  1273   00F0A9  FF                 	db	255
  1274   00F0AA  FF                 	db	255
  1275   00F0AB  FF                 	db	255
  1276   00F0AC  FF                 	db	255
  1277   00F0AD  FF                 	db	255
  1278   00F0AE  FF                 	db	255
  1279   00F0AF  FF                 	db	255
  1280   00F0B0  FF                 	db	255
  1281   00F0B1  FF                 	db	255
  1282   00F0B2  FF                 	db	255
  1283   00F0B3  FF                 	db	255
  1284   00F0B4  FF                 	db	255
  1285   00F0B5  FF                 	db	255
  1286   00F0B6  FF                 	db	255
  1287   00F0B7  FF                 	db	255
  1288   00F0B8  FF                 	db	255
  1289   00F0B9  FF                 	db	255
  1290   00F0BA  FF                 	db	255
  1291   00F0BB  FF                 	db	255
  1292   00F0BC  FF                 	db	255
  1293   00F0BD  FF                 	db	255
  1294   00F0BE  FF                 	db	255
  1295   00F0BF  FF                 	db	255
  1296   00F0C0  FF                 	db	255
  1297   00F0C1  FF                 	db	255
  1298   00F0C2  FF                 	db	255
  1299   00F0C3  FF                 	db	255
  1300   00F0C4  FF                 	db	255
  1301   00F0C5  FF                 	db	255
  1302   00F0C6  FF                 	db	255
  1303   00F0C7  FF                 	db	255
  1304   00F0C8  FF                 	db	255
  1305   00F0C9  FF                 	db	255
  1306   00F0CA  FF                 	db	255
  1307   00F0CB  FF                 	db	255
  1308   00F0CC  FF                 	db	255
  1309   00F0CD  FF                 	db	255
  1310   00F0CE  FF                 	db	255
  1311   00F0CF  FF                 	db	255
  1312   00F0D0  FF                 	db	255
  1313   00F0D1  FF                 	db	255
  1314   00F0D2  FF                 	db	255
  1315   00F0D3  FF                 	db	255
  1316   00F0D4  FF                 	db	255
  1317   00F0D5  FF                 	db	255
  1318   00F0D6  FF                 	db	255
  1319   00F0D7  FF                 	db	255
  1320   00F0D8  FF                 	db	255
  1321   00F0D9  FF                 	db	255
  1322   00F0DA  FF                 	db	255
  1323   00F0DB  FF                 	db	255
  1324   00F0DC  FF                 	db	255
  1325   00F0DD  FF                 	db	255
  1326   00F0DE  FF                 	db	255
  1327   00F0DF  FF                 	db	255
  1328   00F0E0  FF                 	db	255
  1329   00F0E1  FF                 	db	255
  1330   00F0E2  FF                 	db	255
  1331   00F0E3  FF                 	db	255
  1332   00F0E4  FF                 	db	255
  1333   00F0E5  FF                 	db	255
  1334   00F0E6  FF                 	db	255
  1335   00F0E7  FF                 	db	255
  1336   00F0E8  FF                 	db	255
  1337   00F0E9  FF                 	db	255
  1338   00F0EA  FF                 	db	255
  1339   00F0EB  FF                 	db	255
  1340   00F0EC  FF                 	db	255
  1341   00F0ED  FF                 	db	255
  1342   00F0EE  FF                 	db	255
  1343   00F0EF  FF                 	db	255
  1344   00F0F0  FF                 	db	255
  1345   00F0F1  FF                 	db	255
  1346   00F0F2  FF                 	db	255
  1347   00F0F3  FF                 	db	255
  1348   00F0F4  FF                 	db	255
  1349   00F0F5  FF                 	db	255
  1350   00F0F6  FF                 	db	255
  1351   00F0F7  FF                 	db	255
  1352   00F0F8  FF                 	db	255
  1353   00F0F9  FF                 	db	255
  1354   00F0FA  FF                 	db	255
  1355   00F0FB  FF                 	db	255
  1356   00F0FC  FF                 	db	255
  1357   00F0FD  FF                 	db	255
  1358   00F0FE  FF                 	db	255
  1359   00F0FF  FF                 	db	255
  1360   00F100  FF                 	db	255
  1361   00F101  FF                 	db	255
  1362   00F102  FF                 	db	255
  1363   00F103  FF                 	db	255
  1364   00F104  FF                 	db	255
  1365   00F105  FF                 	db	255
  1366   00F106  FF                 	db	255
  1367   00F107  FF                 	db	255
  1368   00F108  FF                 	db	255
  1369   00F109  FF                 	db	255
  1370   00F10A  FF                 	db	255
  1371   00F10B  FF                 	db	255
  1372   00F10C  FF                 	db	255
  1373   00F10D  FF                 	db	255
  1374   00F10E  FF                 	db	255
  1375   00F10F  FF                 	db	255
  1376   00F110  FF                 	db	255
  1377   00F111  FF                 	db	255
  1378   00F112  FF                 	db	255
  1379   00F113  FF                 	db	255
  1380   00F114  FF                 	db	255
  1381   00F115  FF                 	db	255
  1382   00F116  FF                 	db	255
  1383   00F117  FF                 	db	255
  1384   00F118  FF                 	db	255
  1385   00F119  FF                 	db	255
  1386   00F11A  FF                 	db	255
  1387   00F11B  FF                 	db	255
  1388   00F11C  FF                 	db	255
  1389   00F11D  FF                 	db	255
  1390   00F11E  FF                 	db	255
  1391   00F11F  FF                 	db	255
  1392   00F120  FF                 	db	255
  1393   00F121  FF                 	db	255
  1394   00F122  FF                 	db	255
  1395   00F123  FF                 	db	255
  1396   00F124  FF                 	db	255
  1397   00F125  FF                 	db	255
  1398   00F126  FF                 	db	255
  1399   00F127  FF                 	db	255
  1400   00F128  FF                 	db	255
  1401   00F129  FF                 	db	255
  1402   00F12A  FF                 	db	255
  1403   00F12B  FF                 	db	255
  1404   00F12C  FF                 	db	255
  1405   00F12D  FF                 	db	255
  1406   00F12E  FF                 	db	255
  1407   00F12F  FF                 	db	255
  1408   00F130  FF                 	db	255
  1409   00F131  FF                 	db	255
  1410   00F132  FF                 	db	255
  1411   00F133  FF                 	db	255
  1412   00F134  FF                 	db	255
  1413   00F135  FF                 	db	255
  1414   00F136  FF                 	db	255
  1415   00F137  FF                 	db	255
  1416   00F138  FF                 	db	255
  1417   00F139  FF                 	db	255
  1418   00F13A  FF                 	db	255
  1419   00F13B  FF                 	db	255
  1420   00F13C  FF                 	db	255
  1421   00F13D  FF                 	db	255
  1422   00F13E  FF                 	db	255
  1423   00F13F  FF                 	db	255
  1424   00F140  FF                 	db	255
  1425   00F141  FF                 	db	255
  1426   00F142  FF                 	db	255
  1427   00F143  FF                 	db	255
  1428   00F144  FF                 	db	255
  1429   00F145  FF                 	db	255
  1430   00F146  FF                 	db	255
  1431   00F147  FF                 	db	255
  1432   00F148  FF                 	db	255
  1433   00F149  FF                 	db	255
  1434   00F14A  FF                 	db	255
  1435   00F14B  FF                 	db	255
  1436   00F14C  FF                 	db	255
  1437   00F14D  FF                 	db	255
  1438   00F14E  FF                 	db	255
  1439   00F14F  FF                 	db	255
  1440   00F150  FF                 	db	255
  1441   00F151  FF                 	db	255
  1442   00F152  FF                 	db	255
  1443   00F153  FF                 	db	255
  1444   00F154  FF                 	db	255
  1445   00F155  FF                 	db	255
  1446   00F156  FF                 	db	255
  1447   00F157  FF                 	db	255
  1448   00F158  FF                 	db	255
  1449   00F159  FF                 	db	255
  1450   00F15A  FF                 	db	255
  1451   00F15B  FF                 	db	255
  1452   00F15C  FF                 	db	255
  1453   00F15D  FF                 	db	255
  1454   00F15E  FF                 	db	255
  1455   00F15F  FF                 	db	255
  1456   00F160  FF                 	db	255
  1457   00F161  FF                 	db	255
  1458   00F162  FF                 	db	255
  1459   00F163  FF                 	db	255
  1460   00F164  FF                 	db	255
  1461   00F165  FF                 	db	255
  1462   00F166  FF                 	db	255
  1463   00F167  FF                 	db	255
  1464   00F168  FF                 	db	255
  1465   00F169  FF                 	db	255
  1466   00F16A  FF                 	db	255
  1467   00F16B  FF                 	db	255
  1468   00F16C  FF                 	db	255
  1469   00F16D  FF                 	db	255
  1470   00F16E  FF                 	db	255
  1471   00F16F  FF                 	db	255
  1472   00F170  FF                 	db	255
  1473   00F171  FF                 	db	255
  1474   00F172  FF                 	db	255
  1475   00F173  FF                 	db	255
  1476   00F174  FF                 	db	255
  1477   00F175  FF                 	db	255
  1478   00F176  FF                 	db	255
  1479   00F177  FF                 	db	255
  1480   00F178  FF                 	db	255
  1481   00F179  FF                 	db	255
  1482   00F17A  FF                 	db	255
  1483   00F17B  FF                 	db	255
  1484   00F17C  FF                 	db	255
  1485   00F17D  FF                 	db	255
  1486   00F17E  FF                 	db	255
  1487   00F17F  FF                 	db	255
  1488   00F180  FF                 	db	255
  1489   00F181  FF                 	db	255
  1490   00F182  FF                 	db	255
  1491   00F183  FF                 	db	255
  1492   00F184  FF                 	db	255
  1493   00F185  FF                 	db	255
  1494   00F186  FF                 	db	255
  1495   00F187  FF                 	db	255
  1496   00F188  FF                 	db	255
  1497   00F189  FF                 	db	255
  1498   00F18A  FF                 	db	255
  1499   00F18B  FF                 	db	255
  1500   00F18C  FF                 	db	255
  1501   00F18D  FF                 	db	255
  1502   00F18E  FF                 	db	255
  1503   00F18F  FF                 	db	255
  1504   00F190  FF                 	db	255
  1505   00F191  FF                 	db	255
  1506   00F192  FF                 	db	255
  1507   00F193  FF                 	db	255
  1508   00F194  FF                 	db	255
  1509   00F195  FF                 	db	255
  1510   00F196  FF                 	db	255
  1511   00F197  FF                 	db	255
  1512   00F198  FF                 	db	255
  1513   00F199  FF                 	db	255
  1514   00F19A  FF                 	db	255
  1515   00F19B  FF                 	db	255
  1516   00F19C  FF                 	db	255
  1517   00F19D  FF                 	db	255
  1518   00F19E  FF                 	db	255
  1519   00F19F  FF                 	db	255
  1520   00F1A0  FF                 	db	255
  1521   00F1A1  FF                 	db	255
  1522   00F1A2  FF                 	db	255
  1523   00F1A3  FF                 	db	255
  1524   00F1A4  FF                 	db	255
  1525   00F1A5  FF                 	db	255
  1526   00F1A6  FF                 	db	255
  1527   00F1A7  FF                 	db	255
  1528   00F1A8  FF                 	db	255
  1529   00F1A9  FF                 	db	255
  1530   00F1AA  FF                 	db	255
  1531   00F1AB  FF                 	db	255
  1532   00F1AC  FF                 	db	255
  1533   00F1AD  FF                 	db	255
  1534   00F1AE  FF                 	db	255
  1535   00F1AF  FF                 	db	255
  1536   00F1B0  FF                 	db	255
  1537   00F1B1  FF                 	db	255
  1538   00F1B2  FF                 	db	255
  1539   00F1B3  FF                 	db	255
  1540   00F1B4  FF                 	db	255
  1541   00F1B5  FF                 	db	255
  1542   00F1B6  FF                 	db	255
  1543   00F1B7  FF                 	db	255
  1544   00F1B8  FF                 	db	255
  1545   00F1B9  FF                 	db	255
  1546   00F1BA  FF                 	db	255
  1547   00F1BB  FF                 	db	255
  1548   00F1BC  FF                 	db	255
  1549   00F1BD  FF                 	db	255
  1550   00F1BE  FF                 	db	255
  1551   00F1BF  FF                 	db	255
  1552   00F1C0  FF                 	db	255
  1553   00F1C1  FF                 	db	255
  1554   00F1C2  FF                 	db	255
  1555   00F1C3  FF                 	db	255
  1556   00F1C4  FF                 	db	255
  1557   00F1C5  FF                 	db	255
  1558   00F1C6  FF                 	db	255
  1559   00F1C7  FF                 	db	255
  1560   00F1C8  FF                 	db	255
  1561   00F1C9  FF                 	db	255
  1562   00F1CA  FF                 	db	255
  1563   00F1CB  FF                 	db	255
  1564   00F1CC  FF                 	db	255
  1565   00F1CD  FF                 	db	255
  1566   00F1CE  FF                 	db	255
  1567   00F1CF  FF                 	db	255
  1568   00F1D0  FF                 	db	255
  1569   00F1D1  FF                 	db	255
  1570   00F1D2  FF                 	db	255
  1571   00F1D3  FF                 	db	255
  1572   00F1D4  FF                 	db	255
  1573   00F1D5  FF                 	db	255
  1574   00F1D6  FF                 	db	255
  1575   00F1D7  FF                 	db	255
  1576   00F1D8  FF                 	db	255
  1577   00F1D9  FF                 	db	255
  1578   00F1DA  FF                 	db	255
  1579   00F1DB  FF                 	db	255
  1580   00F1DC  FF                 	db	255
  1581   00F1DD  FF                 	db	255
  1582   00F1DE  FF                 	db	255
  1583   00F1DF  FF                 	db	255
  1584   00F1E0  FF                 	db	255
  1585   00F1E1  FF                 	db	255
  1586   00F1E2  FF                 	db	255
  1587   00F1E3  FF                 	db	255
  1588   00F1E4  FF                 	db	255
  1589   00F1E5  FF                 	db	255
  1590   00F1E6  FF                 	db	255
  1591   00F1E7  FF                 	db	255
  1592   00F1E8  FF                 	db	255
  1593   00F1E9  FF                 	db	255
  1594   00F1EA  FF                 	db	255
  1595   00F1EB  FF                 	db	255
  1596   00F1EC  FF                 	db	255
  1597   00F1ED  FF                 	db	255
  1598   00F1EE  FF                 	db	255
  1599   00F1EF  FF                 	db	255
  1600   00F1F0  FF                 	db	255
  1601   00F1F1  FF                 	db	255
  1602   00F1F2  FF                 	db	255
  1603   00F1F3  FF                 	db	255
  1604   00F1F4  FF                 	db	255
  1605   00F1F5  FF                 	db	255
  1606   00F1F6  FF                 	db	255
  1607   00F1F7  FF                 	db	255
  1608   00F1F8  FF                 	db	255
  1609   00F1F9  FF                 	db	255
  1610   00F1FA  FF                 	db	255
  1611   00F1FB  FF                 	db	255
  1612   00F1FC  FF                 	db	255
  1613   00F1FD  FF                 	db	255
  1614   00F1FE  FF                 	db	255
  1615   00F1FF  FF                 	db	255
  1616   00F200  FF                 	db	255
  1617   00F201  FF                 	db	255
  1618   00F202  FF                 	db	255
  1619   00F203  FF                 	db	255
  1620   00F204  FF                 	db	255
  1621   00F205  FF                 	db	255
  1622   00F206  FF                 	db	255
  1623   00F207  FF                 	db	255
  1624   00F208  FF                 	db	255
  1625   00F209  FF                 	db	255
  1626   00F20A  FF                 	db	255
  1627   00F20B  FF                 	db	255
  1628   00F20C  FF                 	db	255
  1629   00F20D  FF                 	db	255
  1630   00F20E  FF                 	db	255
  1631   00F20F  FF                 	db	255
  1632   00F210  FF                 	db	255
  1633   00F211  FF                 	db	255
  1634   00F212  FF                 	db	255
  1635   00F213  FF                 	db	255
  1636   00F214  FF                 	db	255
  1637   00F215  FF                 	db	255
  1638   00F216  FF                 	db	255
  1639   00F217  FF                 	db	255
  1640   00F218  FF                 	db	255
  1641   00F219  FF                 	db	255
  1642   00F21A  FF                 	db	255
  1643   00F21B  FF                 	db	255
  1644   00F21C  FF                 	db	255
  1645   00F21D  FF                 	db	255
  1646   00F21E  FF                 	db	255
  1647   00F21F  FF                 	db	255
  1648   00F220  FF                 	db	255
  1649   00F221  FF                 	db	255
  1650   00F222  FF                 	db	255
  1651   00F223  FF                 	db	255
  1652   00F224  FF                 	db	255
  1653   00F225  FF                 	db	255
  1654   00F226  FF                 	db	255
  1655   00F227  FF                 	db	255
  1656   00F228  FF                 	db	255
  1657   00F229  FF                 	db	255
  1658   00F22A  FF                 	db	255
  1659   00F22B  FF                 	db	255
  1660   00F22C  FF                 	db	255
  1661   00F22D  FF                 	db	255
  1662   00F22E  FF                 	db	255
  1663   00F22F  FF                 	db	255
  1664   00F230  FF                 	db	255
  1665   00F231  FF                 	db	255
  1666   00F232  FF                 	db	255
  1667   00F233  FF                 	db	255
  1668   00F234  FF                 	db	255
  1669   00F235  FF                 	db	255
  1670   00F236  FF                 	db	255
  1671   00F237  FF                 	db	255
  1672   00F238  FF                 	db	255
  1673   00F239  FF                 	db	255
  1674   00F23A  FF                 	db	255
  1675   00F23B  FF                 	db	255
  1676   00F23C  FF                 	db	255
  1677   00F23D  FF                 	db	255
  1678   00F23E  FF                 	db	255
  1679   00F23F  FF                 	db	255
  1680   00F240  FF                 	db	255
  1681   00F241  FF                 	db	255
  1682   00F242  FF                 	db	255
  1683   00F243  FF                 	db	255
  1684   00F244  FF                 	db	255
  1685   00F245  FF                 	db	255
  1686   00F246  FF                 	db	255
  1687   00F247  FF                 	db	255
  1688   00F248  FF                 	db	255
  1689   00F249  FF                 	db	255
  1690   00F24A  FF                 	db	255
  1691   00F24B  FF                 	db	255
  1692   00F24C  FF                 	db	255
  1693   00F24D  FF                 	db	255
  1694   00F24E  FF                 	db	255
  1695   00F24F  FF                 	db	255
  1696   00F250  FF                 	db	255
  1697   00F251  FF                 	db	255
  1698   00F252  FF                 	db	255
  1699   00F253  FF                 	db	255
  1700   00F254  FF                 	db	255
  1701   00F255  FF                 	db	255
  1702   00F256  FF                 	db	255
  1703   00F257  FF                 	db	255
  1704   00F258  FF                 	db	255
  1705   00F259  FF                 	db	255
  1706   00F25A  FF                 	db	255
  1707   00F25B  FF                 	db	255
  1708   00F25C  FF                 	db	255
  1709   00F25D  FF                 	db	255
  1710   00F25E  FF                 	db	255
  1711   00F25F  FF                 	db	255
  1712   00F260  FF                 	db	255
  1713   00F261  FF                 	db	255
  1714   00F262  FF                 	db	255
  1715   00F263  FF                 	db	255
  1716   00F264  FF                 	db	255
  1717   00F265  FF                 	db	255
  1718   00F266  FF                 	db	255
  1719   00F267  FF                 	db	255
  1720   00F268  FF                 	db	255
  1721   00F269  FF                 	db	255
  1722   00F26A  FF                 	db	255
  1723   00F26B  FF                 	db	255
  1724   00F26C  FF                 	db	255
  1725   00F26D  FF                 	db	255
  1726   00F26E  FF                 	db	255
  1727   00F26F  FF                 	db	255
  1728   00F270  FF                 	db	255
  1729   00F271  FF                 	db	255
  1730   00F272  FF                 	db	255
  1731   00F273  FF                 	db	255
  1732   00F274  FF                 	db	255
  1733   00F275  FF                 	db	255
  1734   00F276  FF                 	db	255
  1735   00F277  FF                 	db	255
  1736   00F278  FF                 	db	255
  1737   00F279  FF                 	db	255
  1738   00F27A  FF                 	db	255
  1739   00F27B  FF                 	db	255
  1740   00F27C  FF                 	db	255
  1741   00F27D  FF                 	db	255
  1742   00F27E  FF                 	db	255
  1743   00F27F  FF                 	db	255
  1744   00F280  FF                 	db	255
  1745   00F281  FF                 	db	255
  1746   00F282  FF                 	db	255
  1747   00F283  FF                 	db	255
  1748   00F284  FF                 	db	255
  1749   00F285  FF                 	db	255
  1750   00F286  FF                 	db	255
  1751   00F287  FF                 	db	255
  1752   00F288  FF                 	db	255
  1753   00F289  FF                 	db	255
  1754   00F28A  FF                 	db	255
  1755   00F28B  FF                 	db	255
  1756   00F28C  FF                 	db	255
  1757   00F28D  FF                 	db	255
  1758   00F28E  FF                 	db	255
  1759   00F28F  FF                 	db	255
  1760   00F290  FF                 	db	255
  1761   00F291  FF                 	db	255
  1762   00F292  FF                 	db	255
  1763   00F293  FF                 	db	255
  1764   00F294  FF                 	db	255
  1765   00F295  FF                 	db	255
  1766   00F296  FF                 	db	255
  1767   00F297  FF                 	db	255
  1768   00F298  FF                 	db	255
  1769   00F299  FF                 	db	255
  1770   00F29A  FF                 	db	255
  1771   00F29B  FF                 	db	255
  1772   00F29C  FF                 	db	255
  1773   00F29D  FF                 	db	255
  1774   00F29E  FF                 	db	255
  1775   00F29F  FF                 	db	255
  1776   00F2A0  FF                 	db	255
  1777   00F2A1  FF                 	db	255
  1778   00F2A2  FF                 	db	255
  1779   00F2A3  FF                 	db	255
  1780   00F2A4  FF                 	db	255
  1781   00F2A5  FF                 	db	255
  1782   00F2A6  FF                 	db	255
  1783   00F2A7  FF                 	db	255
  1784   00F2A8  FF                 	db	255
  1785   00F2A9  FF                 	db	255
  1786   00F2AA  FF                 	db	255
  1787   00F2AB  FF                 	db	255
  1788   00F2AC  FF                 	db	255
  1789   00F2AD  FF                 	db	255
  1790   00F2AE  FF                 	db	255
  1791   00F2AF  FF                 	db	255
  1792   00F2B0  FF                 	db	255
  1793   00F2B1  FF                 	db	255
  1794   00F2B2  FF                 	db	255
  1795   00F2B3  FF                 	db	255
  1796   00F2B4  FF                 	db	255
  1797   00F2B5  FF                 	db	255
  1798   00F2B6  FF                 	db	255
  1799   00F2B7  FF                 	db	255
  1800   00F2B8  FF                 	db	255
  1801   00F2B9  FF                 	db	255
  1802   00F2BA  FF                 	db	255
  1803   00F2BB  FF                 	db	255
  1804   00F2BC  FF                 	db	255
  1805   00F2BD  FF                 	db	255
  1806   00F2BE  FF                 	db	255
  1807   00F2BF  FF                 	db	255
  1808   00F2C0  FF                 	db	255
  1809   00F2C1  FF                 	db	255
  1810   00F2C2  FF                 	db	255
  1811   00F2C3  FF                 	db	255
  1812   00F2C4  FF                 	db	255
  1813   00F2C5  FF                 	db	255
  1814   00F2C6  FF                 	db	255
  1815   00F2C7  FF                 	db	255
  1816   00F2C8  FF                 	db	255
  1817   00F2C9  FF                 	db	255
  1818   00F2CA  FF                 	db	255
  1819   00F2CB  FF                 	db	255
  1820   00F2CC  FF                 	db	255
  1821   00F2CD  FF                 	db	255
  1822   00F2CE  FF                 	db	255
  1823   00F2CF  FF                 	db	255
  1824   00F2D0  FF                 	db	255
  1825   00F2D1  FF                 	db	255
  1826   00F2D2  FF                 	db	255
  1827   00F2D3  FF                 	db	255
  1828   00F2D4  FF                 	db	255
  1829   00F2D5  FF                 	db	255
  1830   00F2D6  FF                 	db	255
  1831   00F2D7  FF                 	db	255
  1832   00F2D8  FF                 	db	255
  1833   00F2D9  FF                 	db	255
  1834   00F2DA  FF                 	db	255
  1835   00F2DB  FF                 	db	255
  1836   00F2DC  FF                 	db	255
  1837   00F2DD  FF                 	db	255
  1838   00F2DE  FF                 	db	255
  1839   00F2DF  FF                 	db	255
  1840   00F2E0  FF                 	db	255
  1841   00F2E1  FF                 	db	255
  1842   00F2E2  FF                 	db	255
  1843   00F2E3  FF                 	db	255
  1844   00F2E4  FF                 	db	255
  1845   00F2E5  FF                 	db	255
  1846   00F2E6  FF                 	db	255
  1847   00F2E7  FF                 	db	255
  1848   00F2E8  FF                 	db	255
  1849   00F2E9  FF                 	db	255
  1850   00F2EA  FF                 	db	255
  1851   00F2EB  FF                 	db	255
  1852   00F2EC  FF                 	db	255
  1853   00F2ED  FF                 	db	255
  1854   00F2EE  FF                 	db	255
  1855   00F2EF  FF                 	db	255
  1856   00F2F0  FF                 	db	255
  1857   00F2F1  FF                 	db	255
  1858   00F2F2  FF                 	db	255
  1859   00F2F3  FF                 	db	255
  1860   00F2F4  FF                 	db	255
  1861   00F2F5  FF                 	db	255
  1862   00F2F6  FF                 	db	255
  1863   00F2F7  FF                 	db	255
  1864   00F2F8  FF                 	db	255
  1865   00F2F9  FF                 	db	255
  1866   00F2FA  FF                 	db	255
  1867   00F2FB  FF                 	db	255
  1868   00F2FC  FF                 	db	255
  1869   00F2FD  FF                 	db	255
  1870   00F2FE  FF                 	db	255
  1871   00F2FF  FF                 	db	255
  1872   00F300  FF                 	db	255
  1873   00F301  FF                 	db	255
  1874   00F302  FF                 	db	255
  1875   00F303  FF                 	db	255
  1876   00F304  FF                 	db	255
  1877   00F305  FF                 	db	255
  1878   00F306  FF                 	db	255
  1879   00F307  FF                 	db	255
  1880   00F308  FF                 	db	255
  1881   00F309  FF                 	db	255
  1882   00F30A  FF                 	db	255
  1883   00F30B  FF                 	db	255
  1884   00F30C  FF                 	db	255
  1885   00F30D  FF                 	db	255
  1886   00F30E  FF                 	db	255
  1887   00F30F  FF                 	db	255
  1888   00F310  FF                 	db	255
  1889   00F311  FF                 	db	255
  1890   00F312  FF                 	db	255
  1891   00F313  FF                 	db	255
  1892   00F314  FF                 	db	255
  1893   00F315  FF                 	db	255
  1894   00F316  FF                 	db	255
  1895   00F317  FF                 	db	255
  1896   00F318  FF                 	db	255
  1897   00F319  FF                 	db	255
  1898   00F31A  FF                 	db	255
  1899   00F31B  FF                 	db	255
  1900   00F31C  FF                 	db	255
  1901   00F31D  FF                 	db	255
  1902   00F31E  FF                 	db	255
  1903   00F31F  FF                 	db	255
  1904   00F320  FF                 	db	255
  1905   00F321  FF                 	db	255
  1906   00F322  FF                 	db	255
  1907   00F323  FF                 	db	255
  1908   00F324  FF                 	db	255
  1909   00F325  FF                 	db	255
  1910   00F326  FF                 	db	255
  1911   00F327  FF                 	db	255
  1912   00F328  FF                 	db	255
  1913   00F329  FF                 	db	255
  1914   00F32A  FF                 	db	255
  1915   00F32B  FF                 	db	255
  1916   00F32C  FF                 	db	255
  1917   00F32D  FF                 	db	255
  1918   00F32E  FF                 	db	255
  1919   00F32F  FF                 	db	255
  1920   00F330  FF                 	db	255
  1921   00F331  FF                 	db	255
  1922   00F332  FF                 	db	255
  1923   00F333  FF                 	db	255
  1924   00F334  FF                 	db	255
  1925   00F335  FF                 	db	255
  1926   00F336  FF                 	db	255
  1927   00F337  FF                 	db	255
  1928   00F338  FF                 	db	255
  1929   00F339  FF                 	db	255
  1930   00F33A  FF                 	db	255
  1931   00F33B  FF                 	db	255
  1932   00F33C  FF                 	db	255
  1933   00F33D  FF                 	db	255
  1934   00F33E  FF                 	db	255
  1935   00F33F  FF                 	db	255
  1936   00F340  FF                 	db	255
  1937   00F341  FF                 	db	255
  1938   00F342  FF                 	db	255
  1939   00F343  FF                 	db	255
  1940   00F344  FF                 	db	255
  1941   00F345  FF                 	db	255
  1942   00F346  FF                 	db	255
  1943   00F347  FF                 	db	255
  1944   00F348  FF                 	db	255
  1945   00F349  FF                 	db	255
  1946   00F34A  FF                 	db	255
  1947   00F34B  FF                 	db	255
  1948   00F34C  FF                 	db	255
  1949   00F34D  FF                 	db	255
  1950   00F34E  FF                 	db	255
  1951   00F34F  FF                 	db	255
  1952   00F350  FF                 	db	255
  1953   00F351  FF                 	db	255
  1954   00F352  FF                 	db	255
  1955   00F353  FF                 	db	255
  1956   00F354  FF                 	db	255
  1957   00F355  FF                 	db	255
  1958   00F356  FF                 	db	255
  1959   00F357  FF                 	db	255
  1960   00F358  FF                 	db	255
  1961   00F359  FF                 	db	255
  1962   00F35A  FF                 	db	255
  1963   00F35B  FF                 	db	255
  1964   00F35C  FF                 	db	255
  1965   00F35D  FF                 	db	255
  1966   00F35E  FF                 	db	255
  1967   00F35F  FF                 	db	255
  1968   00F360  FF                 	db	255
  1969   00F361  FF                 	db	255
  1970   00F362  FF                 	db	255
  1971   00F363  FF                 	db	255
  1972   00F364  FF                 	db	255
  1973   00F365  FF                 	db	255
  1974   00F366  FF                 	db	255
  1975   00F367  FF                 	db	255
  1976   00F368  FF                 	db	255
  1977   00F369  FF                 	db	255
  1978   00F36A  FF                 	db	255
  1979   00F36B  FF                 	db	255
  1980   00F36C  FF                 	db	255
  1981   00F36D  FF                 	db	255
  1982   00F36E  FF                 	db	255
  1983   00F36F  FF                 	db	255
  1984   00F370  FF                 	db	255
  1985   00F371  FF                 	db	255
  1986   00F372  FF                 	db	255
  1987   00F373  FF                 	db	255
  1988   00F374  FF                 	db	255
  1989   00F375  FF                 	db	255
  1990   00F376  FF                 	db	255
  1991   00F377  FF                 	db	255
  1992   00F378  FF                 	db	255
  1993   00F379  FF                 	db	255
  1994   00F37A  FF                 	db	255
  1995   00F37B  FF                 	db	255
  1996   00F37C  FF                 	db	255
  1997   00F37D  FF                 	db	255
  1998   00F37E  FF                 	db	255
  1999   00F37F  FF                 	db	255
  2000   00F380  FF                 	db	255
  2001   00F381  FF                 	db	255
  2002   00F382  FF                 	db	255
  2003   00F383  FF                 	db	255
  2004   00F384  FF                 	db	255
  2005   00F385  FF                 	db	255
  2006   00F386  FF                 	db	255
  2007   00F387  FF                 	db	255
  2008   00F388  FF                 	db	255
  2009   00F389  FF                 	db	255
  2010   00F38A  FF                 	db	255
  2011   00F38B  FF                 	db	255
  2012   00F38C  FF                 	db	255
  2013   00F38D  FF                 	db	255
  2014   00F38E  FF                 	db	255
  2015   00F38F  FF                 	db	255
  2016   00F390  FF                 	db	255
  2017   00F391  FF                 	db	255
  2018   00F392  FF                 	db	255
  2019   00F393  FF                 	db	255
  2020   00F394  FF                 	db	255
  2021   00F395  FF                 	db	255
  2022   00F396  FF                 	db	255
  2023   00F397  FF                 	db	255
  2024   00F398  FF                 	db	255
  2025   00F399  FF                 	db	255
  2026   00F39A  FF                 	db	255
  2027   00F39B  FF                 	db	255
  2028   00F39C  FF                 	db	255
  2029   00F39D  FF                 	db	255
  2030   00F39E  FF                 	db	255
  2031   00F39F  FF                 	db	255
  2032   00F3A0  FF                 	db	255
  2033   00F3A1  FF                 	db	255
  2034   00F3A2  FF                 	db	255
  2035   00F3A3  FF                 	db	255
  2036   00F3A4  FF                 	db	255
  2037   00F3A5  FF                 	db	255
  2038   00F3A6  FF                 	db	255
  2039   00F3A7  FF                 	db	255
  2040   00F3A8  FF                 	db	255
  2041   00F3A9  FF                 	db	255
  2042   00F3AA  FF                 	db	255
  2043   00F3AB  FF                 	db	255
  2044   00F3AC  FF                 	db	255
  2045   00F3AD  FF                 	db	255
  2046   00F3AE  FF                 	db	255
  2047   00F3AF  FF                 	db	255
  2048   00F3B0  FF                 	db	255
  2049   00F3B1  FF                 	db	255
  2050   00F3B2  FF                 	db	255
  2051   00F3B3  FF                 	db	255
  2052   00F3B4  FF                 	db	255
  2053   00F3B5  FF                 	db	255
  2054   00F3B6  FF                 	db	255
  2055   00F3B7  FF                 	db	255
  2056   00F3B8  FF                 	db	255
  2057   00F3B9  FF                 	db	255
  2058   00F3BA  FF                 	db	255
  2059   00F3BB  FF                 	db	255
  2060   00F3BC  FF                 	db	255
  2061   00F3BD  FF                 	db	255
  2062   00F3BE  FF                 	db	255
  2063   00F3BF  FF                 	db	255
  2064   00F3C0  FF                 	db	255
  2065   00F3C1  FF                 	db	255
  2066   00F3C2  FF                 	db	255
  2067   00F3C3  FF                 	db	255
  2068   00F3C4  FF                 	db	255
  2069   00F3C5  FF                 	db	255
  2070   00F3C6  FF                 	db	255
  2071   00F3C7  FF                 	db	255
  2072   00F3C8  FF                 	db	255
  2073   00F3C9  FF                 	db	255
  2074   00F3CA  FF                 	db	255
  2075   00F3CB  FF                 	db	255
  2076   00F3CC  FF                 	db	255
  2077   00F3CD  FF                 	db	255
  2078   00F3CE  FF                 	db	255
  2079   00F3CF  FF                 	db	255
  2080   00F3D0  FF                 	db	255
  2081   00F3D1  FF                 	db	255
  2082   00F3D2  FF                 	db	255
  2083   00F3D3  FF                 	db	255
  2084   00F3D4  FF                 	db	255
  2085   00F3D5  FF                 	db	255
  2086   00F3D6  FF                 	db	255
  2087   00F3D7  FF                 	db	255
  2088   00F3D8  FF                 	db	255
  2089   00F3D9  FF                 	db	255
  2090   00F3DA  FF                 	db	255
  2091   00F3DB  FF                 	db	255
  2092   00F3DC  FF                 	db	255
  2093   00F3DD  FF                 	db	255
  2094   00F3DE  FF                 	db	255
  2095   00F3DF  FF                 	db	255
  2096   00F3E0  FF                 	db	255
  2097   00F3E1  FF                 	db	255
  2098   00F3E2  FF                 	db	255
  2099   00F3E3  FF                 	db	255
  2100   00F3E4  FF                 	db	255
  2101   00F3E5  FF                 	db	255
  2102   00F3E6  FF                 	db	255
  2103   00F3E7  FF                 	db	255
  2104   00F3E8  FF                 	db	255
  2105   00F3E9  FF                 	db	255
  2106   00F3EA  FF                 	db	255
  2107   00F3EB  FF                 	db	255
  2108   00F3EC  FF                 	db	255
  2109   00F3ED  FF                 	db	255
  2110   00F3EE  FF                 	db	255
  2111   00F3EF  FF                 	db	255
  2112   00F3F0  FF                 	db	255
  2113   00F3F1  FF                 	db	255
  2114   00F3F2  FF                 	db	255
  2115   00F3F3  FF                 	db	255
  2116   00F3F4  FF                 	db	255
  2117   00F3F5  FF                 	db	255
  2118   00F3F6  FF                 	db	255
  2119   00F3F7  FF                 	db	255
  2120   00F3F8  FF                 	db	255
  2121   00F3F9  FF                 	db	255
  2122   00F3FA  FF                 	db	255
  2123   00F3FB  FF                 	db	255
  2124   00F3FC  FF                 	db	255
  2125   00F3FD  FF                 	db	255
  2126   00F3FE  FF                 	db	255
  2127   00F3FF  FF                 	db	255
  2128   00F400  FF                 	db	255
  2129   00F401  FF                 	db	255
  2130   00F402  FF                 	db	255
  2131   00F403  FF                 	db	255
  2132   00F404  FF                 	db	255
  2133   00F405  FF                 	db	255
  2134   00F406  FF                 	db	255
  2135   00F407  FF                 	db	255
  2136   00F408  FF                 	db	255
  2137   00F409  FF                 	db	255
  2138   00F40A  FF                 	db	255
  2139   00F40B  FF                 	db	255
  2140   00F40C  FF                 	db	255
  2141   00F40D  FF                 	db	255
  2142   00F40E  FF                 	db	255
  2143   00F40F  FF                 	db	255
  2144   00F410  FF                 	db	255
  2145   00F411  FF                 	db	255
  2146   00F412  FF                 	db	255
  2147   00F413  FF                 	db	255
  2148   00F414  FF                 	db	255
  2149   00F415  FF                 	db	255
  2150   00F416  FF                 	db	255
  2151   00F417  FF                 	db	255
  2152   00F418  FF                 	db	255
  2153   00F419  FF                 	db	255
  2154   00F41A  FF                 	db	255
  2155   00F41B  FF                 	db	255
  2156   00F41C  FF                 	db	255
  2157   00F41D  FF                 	db	255
  2158   00F41E  FF                 	db	255
  2159   00F41F  FF                 	db	255
  2160   00F420  FF                 	db	255
  2161   00F421  FF                 	db	255
  2162   00F422  FF                 	db	255
  2163   00F423  FF                 	db	255
  2164   00F424  FF                 	db	255
  2165   00F425  FF                 	db	255
  2166   00F426  FF                 	db	255
  2167   00F427  FF                 	db	255
  2168   00F428  FF                 	db	255
  2169   00F429  FF                 	db	255
  2170   00F42A  FF                 	db	255
  2171   00F42B  FF                 	db	255
  2172   00F42C  FF                 	db	255
  2173   00F42D  FF                 	db	255
  2174   00F42E  FF                 	db	255
  2175   00F42F  FF                 	db	255
  2176   00F430  FF                 	db	255
  2177   00F431  FF                 	db	255
  2178   00F432  FF                 	db	255
  2179   00F433  FF                 	db	255
  2180   00F434  FF                 	db	255
  2181   00F435  FF                 	db	255
  2182   00F436  FF                 	db	255
  2183   00F437  FF                 	db	255
  2184   00F438  FF                 	db	255
  2185   00F439  FF                 	db	255
  2186   00F43A  FF                 	db	255
  2187   00F43B  FF                 	db	255
  2188   00F43C  FF                 	db	255
  2189   00F43D  FF                 	db	255
  2190   00F43E  FF                 	db	255
  2191   00F43F  FF                 	db	255
  2192   00F440  FF                 	db	255
  2193   00F441  FF                 	db	255
  2194   00F442  FF                 	db	255
  2195   00F443  FF                 	db	255
  2196   00F444  FF                 	db	255
  2197   00F445  FF                 	db	255
  2198   00F446  FF                 	db	255
  2199   00F447  FF                 	db	255
  2200   00F448  FF                 	db	255
  2201   00F449  FF                 	db	255
  2202   00F44A  FF                 	db	255
  2203   00F44B  FF                 	db	255
  2204   00F44C  FF                 	db	255
  2205   00F44D  FF                 	db	255
  2206   00F44E  FF                 	db	255
  2207   00F44F  FF                 	db	255
  2208   00F450  FF                 	db	255
  2209   00F451  FF                 	db	255
  2210   00F452  FF                 	db	255
  2211   00F453  FF                 	db	255
  2212   00F454  FF                 	db	255
  2213   00F455  FF                 	db	255
  2214   00F456  FF                 	db	255
  2215   00F457  FF                 	db	255
  2216   00F458  FF                 	db	255
  2217   00F459  FF                 	db	255
  2218   00F45A  FF                 	db	255
  2219   00F45B  FF                 	db	255
  2220   00F45C  FF                 	db	255
  2221   00F45D  FF                 	db	255
  2222   00F45E  FF                 	db	255
  2223   00F45F  FF                 	db	255
  2224   00F460  FF                 	db	255
  2225   00F461  FF                 	db	255
  2226   00F462  FF                 	db	255
  2227   00F463  FF                 	db	255
  2228   00F464  FF                 	db	255
  2229   00F465  FF                 	db	255
  2230   00F466  FF                 	db	255
  2231   00F467  FF                 	db	255
  2232   00F468  FF                 	db	255
  2233   00F469  FF                 	db	255
  2234   00F46A  FF                 	db	255
  2235   00F46B  FF                 	db	255
  2236   00F46C  FF                 	db	255
  2237   00F46D  FF                 	db	255
  2238   00F46E  FF                 	db	255
  2239   00F46F  FF                 	db	255
  2240   00F470  FF                 	db	255
  2241   00F471  FF                 	db	255
  2242   00F472  FF                 	db	255
  2243   00F473  FF                 	db	255
  2244   00F474  FF                 	db	255
  2245   00F475  FF                 	db	255
  2246   00F476  FF                 	db	255
  2247   00F477  FF                 	db	255
  2248   00F478  FF                 	db	255
  2249   00F479  FF                 	db	255
  2250   00F47A  FF                 	db	255
  2251   00F47B  FF                 	db	255
  2252   00F47C  FF                 	db	255
  2253   00F47D  FF                 	db	255
  2254   00F47E  FF                 	db	255
  2255   00F47F  FF                 	db	255
  2256   00F480  FF                 	db	255
  2257   00F481  FF                 	db	255
  2258   00F482  FF                 	db	255
  2259   00F483  FF                 	db	255
  2260   00F484  FF                 	db	255
  2261   00F485  FF                 	db	255
  2262   00F486  FF                 	db	255
  2263   00F487  FF                 	db	255
  2264   00F488  FF                 	db	255
  2265   00F489  FF                 	db	255
  2266   00F48A  FF                 	db	255
  2267   00F48B  FF                 	db	255
  2268   00F48C  FF                 	db	255
  2269   00F48D  FF                 	db	255
  2270   00F48E  FF                 	db	255
  2271   00F48F  FF                 	db	255
  2272   00F490  FF                 	db	255
  2273   00F491  FF                 	db	255
  2274   00F492  FF                 	db	255
  2275   00F493  FF                 	db	255
  2276   00F494  FF                 	db	255
  2277   00F495  FF                 	db	255
  2278   00F496  FF                 	db	255
  2279   00F497  FF                 	db	255
  2280   00F498  FF                 	db	255
  2281   00F499  FF                 	db	255
  2282   00F49A  FF                 	db	255
  2283   00F49B  FF                 	db	255
  2284   00F49C  FF                 	db	255
  2285   00F49D  FF                 	db	255
  2286   00F49E  FF                 	db	255
  2287   00F49F  FF                 	db	255
  2288   00F4A0  FF                 	db	255
  2289   00F4A1  FF                 	db	255
  2290   00F4A2  FF                 	db	255
  2291   00F4A3  FF                 	db	255
  2292   00F4A4  FF                 	db	255
  2293   00F4A5  FF                 	db	255
  2294   00F4A6  FF                 	db	255
  2295   00F4A7  FF                 	db	255
  2296   00F4A8  FF                 	db	255
  2297   00F4A9  FF                 	db	255
  2298   00F4AA  FF                 	db	255
  2299   00F4AB  FF                 	db	255
  2300   00F4AC  FF                 	db	255
  2301   00F4AD  FF                 	db	255
  2302   00F4AE  FF                 	db	255
  2303   00F4AF  FF                 	db	255
  2304   00F4B0  FF                 	db	255
  2305   00F4B1  FF                 	db	255
  2306   00F4B2  FF                 	db	255
  2307   00F4B3  FF                 	db	255
  2308   00F4B4  FF                 	db	255
  2309   00F4B5  FF                 	db	255
  2310   00F4B6  FF                 	db	255
  2311   00F4B7  FF                 	db	255
  2312   00F4B8  FF                 	db	255
  2313   00F4B9  FF                 	db	255
  2314   00F4BA  FF                 	db	255
  2315   00F4BB  FF                 	db	255
  2316   00F4BC  FF                 	db	255
  2317   00F4BD  FF                 	db	255
  2318   00F4BE  FF                 	db	255
  2319   00F4BF  FF                 	db	255
  2320   00F4C0  FF                 	db	255
  2321   00F4C1  FF                 	db	255
  2322   00F4C2  FF                 	db	255
  2323   00F4C3  FF                 	db	255
  2324   00F4C4  FF                 	db	255
  2325   00F4C5  FF                 	db	255
  2326   00F4C6  FF                 	db	255
  2327   00F4C7  FF                 	db	255
  2328   00F4C8  FF                 	db	255
  2329   00F4C9  FF                 	db	255
  2330   00F4CA  FF                 	db	255
  2331   00F4CB  FF                 	db	255
  2332   00F4CC  FF                 	db	255
  2333   00F4CD  FF                 	db	255
  2334   00F4CE  FF                 	db	255
  2335   00F4CF  FF                 	db	255
  2336   00F4D0  FF                 	db	255
  2337   00F4D1  FF                 	db	255
  2338   00F4D2  FF                 	db	255
  2339   00F4D3  FF                 	db	255
  2340   00F4D4  FF                 	db	255
  2341   00F4D5  FF                 	db	255
  2342   00F4D6  FF                 	db	255
  2343   00F4D7  FF                 	db	255
  2344   00F4D8  FF                 	db	255
  2345   00F4D9  FF                 	db	255
  2346   00F4DA  FF                 	db	255
  2347   00F4DB  FF                 	db	255
  2348   00F4DC  FF                 	db	255
  2349   00F4DD  FF                 	db	255
  2350   00F4DE  FF                 	db	255
  2351   00F4DF  FF                 	db	255
  2352   00F4E0  FF                 	db	255
  2353   00F4E1  FF                 	db	255
  2354   00F4E2  FF                 	db	255
  2355   00F4E3  FF                 	db	255
  2356   00F4E4  FF                 	db	255
  2357   00F4E5  FF                 	db	255
  2358   00F4E6  FF                 	db	255
  2359   00F4E7  FF                 	db	255
  2360   00F4E8  FF                 	db	255
  2361   00F4E9  FF                 	db	255
  2362   00F4EA  FF                 	db	255
  2363   00F4EB  FF                 	db	255
  2364   00F4EC  FF                 	db	255
  2365   00F4ED  FF                 	db	255
  2366   00F4EE  FF                 	db	255
  2367   00F4EF  FF                 	db	255
  2368   00F4F0  FF                 	db	255
  2369   00F4F1  FF                 	db	255
  2370   00F4F2  FF                 	db	255
  2371   00F4F3  FF                 	db	255
  2372   00F4F4  FF                 	db	255
  2373   00F4F5  FF                 	db	255
  2374   00F4F6  FF                 	db	255
  2375   00F4F7  FF                 	db	255
  2376   00F4F8  FF                 	db	255
  2377   00F4F9  FF                 	db	255
  2378   00F4FA  FF                 	db	255
  2379   00F4FB  FF                 	db	255
  2380   00F4FC  FF                 	db	255
  2381   00F4FD  FF                 	db	255
  2382   00F4FE  FF                 	db	255
  2383   00F4FF  FF                 	db	255
  2384   00F500  FF                 	db	255
  2385   00F501  FF                 	db	255
  2386   00F502  FF                 	db	255
  2387   00F503  FF                 	db	255
  2388   00F504  FF                 	db	255
  2389   00F505  FF                 	db	255
  2390   00F506  FF                 	db	255
  2391   00F507  FF                 	db	255
  2392   00F508  FF                 	db	255
  2393   00F509  FF                 	db	255
  2394   00F50A  FF                 	db	255
  2395   00F50B  FF                 	db	255
  2396   00F50C  FF                 	db	255
  2397   00F50D  FF                 	db	255
  2398   00F50E  FF                 	db	255
  2399   00F50F  FF                 	db	255
  2400   00F510  FF                 	db	255
  2401   00F511  FF                 	db	255
  2402   00F512  FF                 	db	255
  2403   00F513  FF                 	db	255
  2404   00F514  FF                 	db	255
  2405   00F515  FF                 	db	255
  2406   00F516  FF                 	db	255
  2407   00F517  FF                 	db	255
  2408   00F518  FF                 	db	255
  2409   00F519  FF                 	db	255
  2410   00F51A  FF                 	db	255
  2411   00F51B  FF                 	db	255
  2412   00F51C  FF                 	db	255
  2413   00F51D  FF                 	db	255
  2414   00F51E  FF                 	db	255
  2415   00F51F  FF                 	db	255
  2416   00F520  FF                 	db	255
  2417   00F521  FF                 	db	255
  2418   00F522  FF                 	db	255
  2419   00F523  FF                 	db	255
  2420   00F524  FF                 	db	255
  2421   00F525  FF                 	db	255
  2422   00F526  FF                 	db	255
  2423   00F527  FF                 	db	255
  2424   00F528  FF                 	db	255
  2425   00F529  FF                 	db	255
  2426   00F52A  FF                 	db	255
  2427   00F52B  FF                 	db	255
  2428   00F52C  FF                 	db	255
  2429   00F52D  FF                 	db	255
  2430   00F52E  FF                 	db	255
  2431   00F52F  FF                 	db	255
  2432   00F530  FF                 	db	255
  2433   00F531  FF                 	db	255
  2434   00F532  FF                 	db	255
  2435   00F533  FF                 	db	255
  2436   00F534  FF                 	db	255
  2437   00F535  FF                 	db	255
  2438   00F536  FF                 	db	255
  2439   00F537  FF                 	db	255
  2440   00F538  FF                 	db	255
  2441   00F539  FF                 	db	255
  2442   00F53A  FF                 	db	255
  2443   00F53B  FF                 	db	255
  2444   00F53C  FF                 	db	255
  2445   00F53D  FF                 	db	255
  2446   00F53E  FF                 	db	255
  2447   00F53F  FF                 	db	255
  2448   00F540  FF                 	db	255
  2449   00F541  FF                 	db	255
  2450   00F542  FF                 	db	255
  2451   00F543  FF                 	db	255
  2452   00F544  FF                 	db	255
  2453   00F545  FF                 	db	255
  2454   00F546  FF                 	db	255
  2455   00F547  FF                 	db	255
  2456   00F548  FF                 	db	255
  2457   00F549  FF                 	db	255
  2458   00F54A  FF                 	db	255
  2459   00F54B  FF                 	db	255
  2460   00F54C  FF                 	db	255
  2461   00F54D  FF                 	db	255
  2462   00F54E  FF                 	db	255
  2463   00F54F  FF                 	db	255
  2464   00F550  FF                 	db	255
  2465   00F551  FF                 	db	255
  2466   00F552  FF                 	db	255
  2467   00F553  FF                 	db	255
  2468   00F554  FF                 	db	255
  2469   00F555  FF                 	db	255
  2470   00F556  FF                 	db	255
  2471   00F557  FF                 	db	255
  2472   00F558  FF                 	db	255
  2473   00F559  FF                 	db	255
  2474   00F55A  FF                 	db	255
  2475   00F55B  FF                 	db	255
  2476   00F55C  FF                 	db	255
  2477   00F55D  FF                 	db	255
  2478   00F55E  FF                 	db	255
  2479   00F55F  FF                 	db	255
  2480   00F560  FF                 	db	255
  2481   00F561  FF                 	db	255
  2482   00F562  FF                 	db	255
  2483   00F563  FF                 	db	255
  2484   00F564  FF                 	db	255
  2485   00F565  FF                 	db	255
  2486   00F566  FF                 	db	255
  2487   00F567  FF                 	db	255
  2488   00F568  FF                 	db	255
  2489   00F569  FF                 	db	255
  2490   00F56A  FF                 	db	255
  2491   00F56B  FF                 	db	255
  2492   00F56C  FF                 	db	255
  2493   00F56D  FF                 	db	255
  2494   00F56E  FF                 	db	255
  2495   00F56F  FF                 	db	255
  2496   00F570  FF                 	db	255
  2497   00F571  FF                 	db	255
  2498   00F572  FF                 	db	255
  2499   00F573  FF                 	db	255
  2500   00F574  FF                 	db	255
  2501   00F575  FF                 	db	255
  2502   00F576  FF                 	db	255
  2503   00F577  FF                 	db	255
  2504   00F578  FF                 	db	255
  2505   00F579  FF                 	db	255
  2506   00F57A  FF                 	db	255
  2507   00F57B  FF                 	db	255
  2508   00F57C  FF                 	db	255
  2509   00F57D  FF                 	db	255
  2510   00F57E  FF                 	db	255
  2511   00F57F  FF                 	db	255
  2512   00F580  FF                 	db	255
  2513   00F581  FF                 	db	255
  2514   00F582  FF                 	db	255
  2515   00F583  FF                 	db	255
  2516   00F584  FF                 	db	255
  2517   00F585  FF                 	db	255
  2518   00F586  FF                 	db	255
  2519   00F587  FF                 	db	255
  2520   00F588  FF                 	db	255
  2521   00F589  FF                 	db	255
  2522   00F58A  FF                 	db	255
  2523   00F58B  FF                 	db	255
  2524   00F58C  FF                 	db	255
  2525   00F58D  FF                 	db	255
  2526   00F58E  FF                 	db	255
  2527   00F58F  FF                 	db	255
  2528   00F590  FF                 	db	255
  2529   00F591  FF                 	db	255
  2530   00F592  FF                 	db	255
  2531   00F593  FF                 	db	255
  2532   00F594  FF                 	db	255
  2533   00F595  FF                 	db	255
  2534   00F596  FF                 	db	255
  2535   00F597  FF                 	db	255
  2536   00F598  FF                 	db	255
  2537   00F599  FF                 	db	255
  2538   00F59A  FF                 	db	255
  2539   00F59B  FF                 	db	255
  2540   00F59C  FF                 	db	255
  2541   00F59D  FF                 	db	255
  2542   00F59E  FF                 	db	255
  2543   00F59F  FF                 	db	255
  2544   00F5A0  FF                 	db	255
  2545   00F5A1  FF                 	db	255
  2546   00F5A2  FF                 	db	255
  2547   00F5A3  FF                 	db	255
  2548   00F5A4  FF                 	db	255
  2549   00F5A5  FF                 	db	255
  2550   00F5A6  FF                 	db	255
  2551   00F5A7  FF                 	db	255
  2552   00F5A8  FF                 	db	255
  2553   00F5A9  FF                 	db	255
  2554   00F5AA  FF                 	db	255
  2555   00F5AB  FF                 	db	255
  2556   00F5AC  FF                 	db	255
  2557   00F5AD  FF                 	db	255
  2558   00F5AE  FF                 	db	255
  2559   00F5AF  FF                 	db	255
  2560   00F5B0  FF                 	db	255
  2561   00F5B1  FF                 	db	255
  2562   00F5B2  FF                 	db	255
  2563   00F5B3  FF                 	db	255
  2564   00F5B4  FF                 	db	255
  2565   00F5B5  FF                 	db	255
  2566   00F5B6  FF                 	db	255
  2567   00F5B7  FF                 	db	255
  2568   00F5B8  FF                 	db	255
  2569   00F5B9  FF                 	db	255
  2570   00F5BA  FF                 	db	255
  2571   00F5BB  FF                 	db	255
  2572   00F5BC  FF                 	db	255
  2573   00F5BD  FF                 	db	255
  2574   00F5BE  FF                 	db	255
  2575   00F5BF  FF                 	db	255
  2576   00F5C0  FF                 	db	255
  2577   00F5C1  FF                 	db	255
  2578   00F5C2  FF                 	db	255
  2579   00F5C3  FF                 	db	255
  2580   00F5C4  FF                 	db	255
  2581   00F5C5  FF                 	db	255
  2582   00F5C6  FF                 	db	255
  2583   00F5C7  FF                 	db	255
  2584   00F5C8  FF                 	db	255
  2585   00F5C9  FF                 	db	255
  2586   00F5CA  FF                 	db	255
  2587   00F5CB  FF                 	db	255
  2588   00F5CC  FF                 	db	255
  2589   00F5CD  FF                 	db	255
  2590   00F5CE  FF                 	db	255
  2591   00F5CF  FF                 	db	255
  2592   00F5D0  FF                 	db	255
  2593   00F5D1  FF                 	db	255
  2594   00F5D2  FF                 	db	255
  2595   00F5D3  FF                 	db	255
  2596   00F5D4  FF                 	db	255
  2597   00F5D5  FF                 	db	255
  2598   00F5D6  FF                 	db	255
  2599   00F5D7  FF                 	db	255
  2600   00F5D8  FF                 	db	255
  2601   00F5D9  FF                 	db	255
  2602   00F5DA  FF                 	db	255
  2603   00F5DB  FF                 	db	255
  2604   00F5DC  FF                 	db	255
  2605   00F5DD  FF                 	db	255
  2606   00F5DE  FF                 	db	255
  2607   00F5DF  FF                 	db	255
  2608   00F5E0  FF                 	db	255
  2609   00F5E1  FF                 	db	255
  2610   00F5E2  FF                 	db	255
  2611   00F5E3  FF                 	db	255
  2612   00F5E4  FF                 	db	255
  2613   00F5E5  FF                 	db	255
  2614   00F5E6  FF                 	db	255
  2615   00F5E7  FF                 	db	255
  2616   00F5E8  FF                 	db	255
  2617   00F5E9  FF                 	db	255
  2618   00F5EA  FF                 	db	255
  2619   00F5EB  FF                 	db	255
  2620   00F5EC  FF                 	db	255
  2621   00F5ED  FF                 	db	255
  2622   00F5EE  FF                 	db	255
  2623   00F5EF  FF                 	db	255
  2624   00F5F0  FF                 	db	255
  2625   00F5F1  FF                 	db	255
  2626   00F5F2  FF                 	db	255
  2627   00F5F3  FF                 	db	255
  2628   00F5F4  FF                 	db	255
  2629   00F5F5  FF                 	db	255
  2630   00F5F6  FF                 	db	255
  2631   00F5F7  FF                 	db	255
  2632   00F5F8  FF                 	db	255
  2633   00F5F9  FF                 	db	255
  2634   00F5FA  FF                 	db	255
  2635   00F5FB  FF                 	db	255
  2636   00F5FC  FF                 	db	255
  2637   00F5FD  FF                 	db	255
  2638   00F5FE  FF                 	db	255
  2639   00F5FF  FF                 	db	255
  2640   00F600  FF                 	db	255
  2641   00F601  FF                 	db	255
  2642   00F602  FF                 	db	255
  2643   00F603  FF                 	db	255
  2644   00F604  FF                 	db	255
  2645   00F605  FF                 	db	255
  2646   00F606  FF                 	db	255
  2647   00F607  FF                 	db	255
  2648   00F608  FF                 	db	255
  2649   00F609  FF                 	db	255
  2650   00F60A  FF                 	db	255
  2651   00F60B  FF                 	db	255
  2652   00F60C  FF                 	db	255
  2653   00F60D  FF                 	db	255
  2654   00F60E  FF                 	db	255
  2655   00F60F  FF                 	db	255
  2656   00F610  FF                 	db	255
  2657   00F611  FF                 	db	255
  2658   00F612  FF                 	db	255
  2659   00F613  FF                 	db	255
  2660   00F614  FF                 	db	255
  2661   00F615  FF                 	db	255
  2662   00F616  FF                 	db	255
  2663   00F617  FF                 	db	255
  2664   00F618  FF                 	db	255
  2665   00F619  FF                 	db	255
  2666   00F61A  FF                 	db	255
  2667   00F61B  FF                 	db	255
  2668   00F61C  FF                 	db	255
  2669   00F61D  FF                 	db	255
  2670   00F61E  FF                 	db	255
  2671   00F61F  FF                 	db	255
  2672   00F620  FF                 	db	255
  2673   00F621  FF                 	db	255
  2674   00F622  FF                 	db	255
  2675   00F623  FF                 	db	255
  2676   00F624  FF                 	db	255
  2677   00F625  FF                 	db	255
  2678   00F626  FF                 	db	255
  2679   00F627  FF                 	db	255
  2680   00F628  FF                 	db	255
  2681   00F629  FF                 	db	255
  2682   00F62A  FF                 	db	255
  2683   00F62B  FF                 	db	255
  2684   00F62C  FF                 	db	255
  2685   00F62D  FF                 	db	255
  2686   00F62E  FF                 	db	255
  2687   00F62F  FF                 	db	255
  2688   00F630  FF                 	db	255
  2689   00F631  FF                 	db	255
  2690   00F632  FF                 	db	255
  2691   00F633  FF                 	db	255
  2692   00F634  FF                 	db	255
  2693   00F635  FF                 	db	255
  2694   00F636  FF                 	db	255
  2695   00F637  FF                 	db	255
  2696   00F638  FF                 	db	255
  2697   00F639  FF                 	db	255
  2698   00F63A  FF                 	db	255
  2699   00F63B  FF                 	db	255
  2700   00F63C  FF                 	db	255
  2701   00F63D  FF                 	db	255
  2702   00F63E  FF                 	db	255
  2703   00F63F  FF                 	db	255
  2704   00F640  FF                 	db	255
  2705   00F641  FF                 	db	255
  2706   00F642  FF                 	db	255
  2707   00F643  FF                 	db	255
  2708   00F644  FF                 	db	255
  2709   00F645  FF                 	db	255
  2710   00F646  FF                 	db	255
  2711   00F647  FF                 	db	255
  2712   00F648  FF                 	db	255
  2713   00F649  FF                 	db	255
  2714   00F64A  FF                 	db	255
  2715   00F64B  FF                 	db	255
  2716   00F64C  FF                 	db	255
  2717   00F64D  FF                 	db	255
  2718   00F64E  FF                 	db	255
  2719   00F64F  FF                 	db	255
  2720   00F650  FF                 	db	255
  2721   00F651  FF                 	db	255
  2722   00F652  FF                 	db	255
  2723   00F653  FF                 	db	255
  2724   00F654  FF                 	db	255
  2725   00F655  FF                 	db	255
  2726   00F656  FF                 	db	255
  2727   00F657  FF                 	db	255
  2728   00F658  FF                 	db	255
  2729   00F659  FF                 	db	255
  2730   00F65A  FF                 	db	255
  2731   00F65B  FF                 	db	255
  2732   00F65C  FF                 	db	255
  2733   00F65D  FF                 	db	255
  2734   00F65E  FF                 	db	255
  2735   00F65F  FF                 	db	255
  2736   00F660  FF                 	db	255
  2737   00F661  FF                 	db	255
  2738   00F662  FF                 	db	255
  2739   00F663  FF                 	db	255
  2740   00F664  FF                 	db	255
  2741   00F665  FF                 	db	255
  2742   00F666  FF                 	db	255
  2743   00F667  FF                 	db	255
  2744   00F668  FF                 	db	255
  2745   00F669  FF                 	db	255
  2746   00F66A  FF                 	db	255
  2747   00F66B  FF                 	db	255
  2748   00F66C  FF                 	db	255
  2749   00F66D  FF                 	db	255
  2750   00F66E  FF                 	db	255
  2751   00F66F  FF                 	db	255
  2752   00F670  FF                 	db	255
  2753   00F671  FF                 	db	255
  2754   00F672  FF                 	db	255
  2755   00F673  FF                 	db	255
  2756   00F674  FF                 	db	255
  2757   00F675  FF                 	db	255
  2758   00F676  FF                 	db	255
  2759   00F677  FF                 	db	255
  2760   00F678  FF                 	db	255
  2761   00F679  FF                 	db	255
  2762   00F67A  FF                 	db	255
  2763   00F67B  FF                 	db	255
  2764   00F67C  FF                 	db	255
  2765   00F67D  FF                 	db	255
  2766   00F67E  FF                 	db	255
  2767   00F67F  FF                 	db	255
  2768   00F680  FF                 	db	255
  2769   00F681  FF                 	db	255
  2770   00F682  FF                 	db	255
  2771   00F683  FF                 	db	255
  2772   00F684  FF                 	db	255
  2773   00F685  FF                 	db	255
  2774   00F686  FF                 	db	255
  2775   00F687  FF                 	db	255
  2776   00F688  FF                 	db	255
  2777   00F689  FF                 	db	255
  2778   00F68A  FF                 	db	255
  2779   00F68B  FF                 	db	255
  2780   00F68C  FF                 	db	255
  2781   00F68D  FF                 	db	255
  2782   00F68E  FF                 	db	255
  2783   00F68F  FF                 	db	255
  2784   00F690  FF                 	db	255
  2785   00F691  FF                 	db	255
  2786   00F692  FF                 	db	255
  2787   00F693  FF                 	db	255
  2788   00F694  FF                 	db	255
  2789   00F695  FF                 	db	255
  2790   00F696  FF                 	db	255
  2791   00F697  FF                 	db	255
  2792   00F698  FF                 	db	255
  2793   00F699  FF                 	db	255
  2794   00F69A  FF                 	db	255
  2795   00F69B  FF                 	db	255
  2796   00F69C  FF                 	db	255
  2797   00F69D  FF                 	db	255
  2798   00F69E  FF                 	db	255
  2799   00F69F  FF                 	db	255
  2800   00F6A0  FF                 	db	255
  2801   00F6A1  FF                 	db	255
  2802   00F6A2  FF                 	db	255
  2803   00F6A3  FF                 	db	255
  2804   00F6A4  FF                 	db	255
  2805   00F6A5  FF                 	db	255
  2806   00F6A6  FF                 	db	255
  2807   00F6A7  FF                 	db	255
  2808   00F6A8  FF                 	db	255
  2809   00F6A9  FF                 	db	255
  2810   00F6AA  FF                 	db	255
  2811   00F6AB  FF                 	db	255
  2812   00F6AC  FF                 	db	255
  2813   00F6AD  FF                 	db	255
  2814   00F6AE  FF                 	db	255
  2815   00F6AF  FF                 	db	255
  2816   00F6B0  FF                 	db	255
  2817   00F6B1  FF                 	db	255
  2818   00F6B2  FF                 	db	255
  2819   00F6B3  FF                 	db	255
  2820   00F6B4  FF                 	db	255
  2821   00F6B5  FF                 	db	255
  2822   00F6B6  FF                 	db	255
  2823   00F6B7  FF                 	db	255
  2824   00F6B8  FF                 	db	255
  2825   00F6B9  FF                 	db	255
  2826   00F6BA  FF                 	db	255
  2827   00F6BB  FF                 	db	255
  2828   00F6BC  FF                 	db	255
  2829   00F6BD  FF                 	db	255
  2830   00F6BE  FF                 	db	255
  2831   00F6BF  FF                 	db	255
  2832   00F6C0  FF                 	db	255
  2833   00F6C1  FF                 	db	255
  2834   00F6C2  FF                 	db	255
  2835   00F6C3  FF                 	db	255
  2836   00F6C4  FF                 	db	255
  2837   00F6C5  FF                 	db	255
  2838   00F6C6  FF                 	db	255
  2839   00F6C7  FF                 	db	255
  2840   00F6C8  FF                 	db	255
  2841   00F6C9  FF                 	db	255
  2842   00F6CA  FF                 	db	255
  2843   00F6CB  FF                 	db	255
  2844   00F6CC  FF                 	db	255
  2845   00F6CD  FF                 	db	255
  2846   00F6CE  FF                 	db	255
  2847   00F6CF  FF                 	db	255
  2848   00F6D0  FF                 	db	255
  2849   00F6D1  FF                 	db	255
  2850   00F6D2  FF                 	db	255
  2851   00F6D3  FF                 	db	255
  2852   00F6D4  FF                 	db	255
  2853   00F6D5  FF                 	db	255
  2854   00F6D6  FF                 	db	255
  2855   00F6D7  FF                 	db	255
  2856   00F6D8  FF                 	db	255
  2857   00F6D9  FF                 	db	255
  2858   00F6DA  FF                 	db	255
  2859   00F6DB  FF                 	db	255
  2860   00F6DC  FF                 	db	255
  2861   00F6DD  FF                 	db	255
  2862   00F6DE  FF                 	db	255
  2863   00F6DF  FF                 	db	255
  2864   00F6E0  FF                 	db	255
  2865   00F6E1  FF                 	db	255
  2866   00F6E2  FF                 	db	255
  2867   00F6E3  FF                 	db	255
  2868   00F6E4  FF                 	db	255
  2869   00F6E5  FF                 	db	255
  2870   00F6E6  FF                 	db	255
  2871   00F6E7  FF                 	db	255
  2872   00F6E8  FF                 	db	255
  2873   00F6E9  FF                 	db	255
  2874   00F6EA  FF                 	db	255
  2875   00F6EB  FF                 	db	255
  2876   00F6EC  FF                 	db	255
  2877   00F6ED  FF                 	db	255
  2878   00F6EE  FF                 	db	255
  2879   00F6EF  FF                 	db	255
  2880   00F6F0  FF                 	db	255
  2881   00F6F1  FF                 	db	255
  2882   00F6F2  FF                 	db	255
  2883   00F6F3  FF                 	db	255
  2884   00F6F4  FF                 	db	255
  2885   00F6F5  FF                 	db	255
  2886   00F6F6  FF                 	db	255
  2887   00F6F7  FF                 	db	255
  2888   00F6F8  FF                 	db	255
  2889   00F6F9  FF                 	db	255
  2890   00F6FA  FF                 	db	255
  2891   00F6FB  FF                 	db	255
  2892   00F6FC  FF                 	db	255
  2893   00F6FD  FF                 	db	255
  2894   00F6FE  FF                 	db	255
  2895   00F6FF  FF                 	db	255
  2896   00F700  FF                 	db	255
  2897   00F701  FF                 	db	255
  2898   00F702  FF                 	db	255
  2899   00F703  FF                 	db	255
  2900   00F704  FF                 	db	255
  2901   00F705  FF                 	db	255
  2902   00F706  FF                 	db	255
  2903   00F707  FF                 	db	255
  2904   00F708  FF                 	db	255
  2905   00F709  FF                 	db	255
  2906   00F70A  FF                 	db	255
  2907   00F70B  FF                 	db	255
  2908   00F70C  FF                 	db	255
  2909   00F70D  FF                 	db	255
  2910   00F70E  FF                 	db	255
  2911   00F70F  FF                 	db	255
  2912   00F710  FF                 	db	255
  2913   00F711  FF                 	db	255
  2914   00F712  FF                 	db	255
  2915   00F713  FF                 	db	255
  2916   00F714  FF                 	db	255
  2917   00F715  FF                 	db	255
  2918   00F716  FF                 	db	255
  2919   00F717  FF                 	db	255
  2920   00F718  FF                 	db	255
  2921   00F719  FF                 	db	255
  2922   00F71A  FF                 	db	255
  2923   00F71B  FF                 	db	255
  2924   00F71C  FF                 	db	255
  2925   00F71D  FF                 	db	255
  2926   00F71E  FF                 	db	255
  2927   00F71F  FF                 	db	255
  2928   00F720  FF                 	db	255
  2929   00F721  FF                 	db	255
  2930   00F722  FF                 	db	255
  2931   00F723  FF                 	db	255
  2932   00F724  FF                 	db	255
  2933   00F725  FF                 	db	255
  2934   00F726  FF                 	db	255
  2935   00F727  FF                 	db	255
  2936   00F728  FF                 	db	255
  2937   00F729  FF                 	db	255
  2938   00F72A  FF                 	db	255
  2939   00F72B  FF                 	db	255
  2940   00F72C  FF                 	db	255
  2941   00F72D  FF                 	db	255
  2942   00F72E  FF                 	db	255
  2943   00F72F  FF                 	db	255
  2944   00F730  FF                 	db	255
  2945   00F731  FF                 	db	255
  2946   00F732  FF                 	db	255
  2947   00F733  FF                 	db	255
  2948   00F734  FF                 	db	255
  2949   00F735  FF                 	db	255
  2950   00F736  FF                 	db	255
  2951   00F737  FF                 	db	255
  2952   00F738  FF                 	db	255
  2953   00F739  FF                 	db	255
  2954   00F73A  FF                 	db	255
  2955   00F73B  FF                 	db	255
  2956   00F73C  FF                 	db	255
  2957   00F73D  FF                 	db	255
  2958   00F73E  FF                 	db	255
  2959   00F73F  FF                 	db	255
  2960   00F740  FF                 	db	255
  2961   00F741  FF                 	db	255
  2962   00F742  FF                 	db	255
  2963   00F743  FF                 	db	255
  2964   00F744  FF                 	db	255
  2965   00F745  FF                 	db	255
  2966   00F746  FF                 	db	255
  2967   00F747  FF                 	db	255
  2968   00F748  FF                 	db	255
  2969   00F749  FF                 	db	255
  2970   00F74A  FF                 	db	255
  2971   00F74B  FF                 	db	255
  2972   00F74C  FF                 	db	255
  2973   00F74D  FF                 	db	255
  2974   00F74E  FF                 	db	255
  2975   00F74F  FF                 	db	255
  2976   00F750  FF                 	db	255
  2977   00F751  FF                 	db	255
  2978   00F752  FF                 	db	255
  2979   00F753  FF                 	db	255
  2980   00F754  FF                 	db	255
  2981   00F755  FF                 	db	255
  2982   00F756  FF                 	db	255
  2983   00F757  FF                 	db	255
  2984   00F758  FF                 	db	255
  2985   00F759  FF                 	db	255
  2986   00F75A  FF                 	db	255
  2987   00F75B  FF                 	db	255
  2988   00F75C  FF                 	db	255
  2989   00F75D  FF                 	db	255
  2990   00F75E  FF                 	db	255
  2991   00F75F  FF                 	db	255
  2992   00F760  FF                 	db	255
  2993   00F761  FF                 	db	255
  2994   00F762  FF                 	db	255
  2995   00F763  FF                 	db	255
  2996   00F764  FF                 	db	255
  2997   00F765  FF                 	db	255
  2998   00F766  FF                 	db	255
  2999   00F767  FF                 	db	255
  3000   00F768  FF                 	db	255
  3001   00F769  FF                 	db	255
  3002   00F76A  FF                 	db	255
  3003   00F76B  FF                 	db	255
  3004   00F76C  FF                 	db	255
  3005   00F76D  FF                 	db	255
  3006   00F76E  FF                 	db	255
  3007   00F76F  FF                 	db	255
  3008   00F770  FF                 	db	255
  3009   00F771  FF                 	db	255
  3010   00F772  FF                 	db	255
  3011   00F773  FF                 	db	255
  3012   00F774  FF                 	db	255
  3013   00F775  FF                 	db	255
  3014   00F776  FF                 	db	255
  3015   00F777  FF                 	db	255
  3016   00F778  FF                 	db	255
  3017   00F779  FF                 	db	255
  3018   00F77A  FF                 	db	255
  3019   00F77B  FF                 	db	255
  3020   00F77C  FF                 	db	255
  3021   00F77D  FF                 	db	255
  3022   00F77E  FF                 	db	255
  3023   00F77F  FF                 	db	255
  3024   00F780  FF                 	db	255
  3025   00F781  FF                 	db	255
  3026   00F782  FF                 	db	255
  3027   00F783  FF                 	db	255
  3028   00F784  FF                 	db	255
  3029   00F785  FF                 	db	255
  3030   00F786  FF                 	db	255
  3031   00F787  FF                 	db	255
  3032   00F788  FF                 	db	255
  3033   00F789  FF                 	db	255
  3034   00F78A  FF                 	db	255
  3035   00F78B  FF                 	db	255
  3036   00F78C  FF                 	db	255
  3037   00F78D  FF                 	db	255
  3038   00F78E  FF                 	db	255
  3039   00F78F  FF                 	db	255
  3040   00F790  FF                 	db	255
  3041   00F791  FF                 	db	255
  3042   00F792  FF                 	db	255
  3043   00F793  FF                 	db	255
  3044   00F794  FF                 	db	255
  3045   00F795  FF                 	db	255
  3046   00F796  FF                 	db	255
  3047   00F797  FF                 	db	255
  3048   00F798  FF                 	db	255
  3049   00F799  FF                 	db	255
  3050   00F79A  FF                 	db	255
  3051   00F79B  FF                 	db	255
  3052   00F79C  FF                 	db	255
  3053   00F79D  FF                 	db	255
  3054   00F79E  FF                 	db	255
  3055   00F79F  FF                 	db	255
  3056   00F7A0  FF                 	db	255
  3057   00F7A1  FF                 	db	255
  3058   00F7A2  FF                 	db	255
  3059   00F7A3  FF                 	db	255
  3060   00F7A4  FF                 	db	255
  3061   00F7A5  FF                 	db	255
  3062   00F7A6  FF                 	db	255
  3063   00F7A7  FF                 	db	255
  3064   00F7A8  FF                 	db	255
  3065   00F7A9  FF                 	db	255
  3066   00F7AA  FF                 	db	255
  3067   00F7AB  FF                 	db	255
  3068   00F7AC  FF                 	db	255
  3069   00F7AD  FF                 	db	255
  3070   00F7AE  FF                 	db	255
  3071   00F7AF  FF                 	db	255
  3072   00F7B0  FF                 	db	255
  3073   00F7B1  FF                 	db	255
  3074   00F7B2  FF                 	db	255
  3075   00F7B3  FF                 	db	255
  3076   00F7B4  FF                 	db	255
  3077   00F7B5  FF                 	db	255
  3078   00F7B6  FF                 	db	255
  3079   00F7B7  FF                 	db	255
  3080   00F7B8  FF                 	db	255
  3081   00F7B9  FF                 	db	255
  3082   00F7BA  FF                 	db	255
  3083   00F7BB  FF                 	db	255
  3084   00F7BC  FF                 	db	255
  3085   00F7BD  FF                 	db	255
  3086   00F7BE  FF                 	db	255
  3087   00F7BF  FF                 	db	255
  3088   00F7C0  FF                 	db	255
  3089   00F7C1  FF                 	db	255
  3090   00F7C2  FF                 	db	255
  3091   00F7C3  FF                 	db	255
  3092   00F7C4  FF                 	db	255
  3093   00F7C5  FF                 	db	255
  3094   00F7C6  FF                 	db	255
  3095   00F7C7  FF                 	db	255
  3096   00F7C8  FF                 	db	255
  3097   00F7C9  FF                 	db	255
  3098   00F7CA  FF                 	db	255
  3099   00F7CB  FF                 	db	255
  3100   00F7CC  FF                 	db	255
  3101   00F7CD  FF                 	db	255
  3102   00F7CE  FF                 	db	255
  3103   00F7CF  FF                 	db	255
  3104   00F7D0  FF                 	db	255
  3105   00F7D1  FF                 	db	255
  3106   00F7D2  FF                 	db	255
  3107   00F7D3  FF                 	db	255
  3108   00F7D4  FF                 	db	255
  3109   00F7D5  FF                 	db	255
  3110   00F7D6  FF                 	db	255
  3111   00F7D7  FF                 	db	255
  3112   00F7D8  FF                 	db	255
  3113   00F7D9  FF                 	db	255
  3114   00F7DA  FF                 	db	255
  3115   00F7DB  FF                 	db	255
  3116   00F7DC  FF                 	db	255
  3117   00F7DD  FF                 	db	255
  3118   00F7DE  FF                 	db	255
  3119   00F7DF  FF                 	db	255
  3120   00F7E0  FF                 	db	255
  3121   00F7E1  FF                 	db	255
  3122   00F7E2  FF                 	db	255
  3123   00F7E3  FF                 	db	255
  3124   00F7E4  FF                 	db	255
  3125   00F7E5  FF                 	db	255
  3126   00F7E6  FF                 	db	255
  3127   00F7E7  FF                 	db	255
  3128   00F7E8  FF                 	db	255
  3129   00F7E9  FF                 	db	255
  3130   00F7EA  FF                 	db	255
  3131   00F7EB  FF                 	db	255
  3132   00F7EC  FF                 	db	255
  3133   00F7ED  FF                 	db	255
  3134   00F7EE  FF                 	db	255
  3135   00F7EF  FF                 	db	255
  3136   00F7F0  FF                 	db	255
  3137   00F7F1  FF                 	db	255
  3138   00F7F2  FF                 	db	255
  3139   00F7F3  FF                 	db	255
  3140   00F7F4  FF                 	db	255
  3141   00F7F5  FF                 	db	255
  3142   00F7F6  FF                 	db	255
  3143   00F7F7  FF                 	db	255
  3144   00F7F8  FF                 	db	255
  3145   00F7F9  FF                 	db	255
  3146   00F7FA  FF                 	db	255
  3147   00F7FB  FF                 	db	255
  3148   00F7FC  FF                 	db	255
  3149   00F7FD  FF                 	db	255
  3150   00F7FE  FF                 	db	255
  3151   00F7FF  FF                 	db	255
  3152   00F800  FF                 	db	255
  3153   00F801  FF                 	db	255
  3154   00F802  FF                 	db	255
  3155   00F803  FF                 	db	255
  3156   00F804  FF                 	db	255
  3157   00F805  FF                 	db	255
  3158   00F806  FF                 	db	255
  3159   00F807  FF                 	db	255
  3160   00F808  FF                 	db	255
  3161   00F809  FF                 	db	255
  3162   00F80A  FF                 	db	255
  3163   00F80B  FF                 	db	255
  3164   00F80C  FF                 	db	255
  3165   00F80D  FF                 	db	255
  3166   00F80E  FF                 	db	255
  3167   00F80F  FF                 	db	255
  3168   00F810  FF                 	db	255
  3169   00F811  FF                 	db	255
  3170   00F812  FF                 	db	255
  3171   00F813  FF                 	db	255
  3172   00F814  FF                 	db	255
  3173   00F815  FF                 	db	255
  3174   00F816  FF                 	db	255
  3175   00F817  FF                 	db	255
  3176   00F818  FF                 	db	255
  3177   00F819  FF                 	db	255
  3178   00F81A  FF                 	db	255
  3179   00F81B  FF                 	db	255
  3180   00F81C  FF                 	db	255
  3181   00F81D  FF                 	db	255
  3182   00F81E  FF                 	db	255
  3183   00F81F  FF                 	db	255
  3184   00F820  FF                 	db	255
  3185   00F821  FF                 	db	255
  3186   00F822  FF                 	db	255
  3187   00F823  FF                 	db	255
  3188   00F824  FF                 	db	255
  3189   00F825  FF                 	db	255
  3190   00F826  FF                 	db	255
  3191   00F827  FF                 	db	255
  3192   00F828  FF                 	db	255
  3193   00F829  FF                 	db	255
  3194   00F82A  FF                 	db	255
  3195   00F82B  FF                 	db	255
  3196   00F82C  FF                 	db	255
  3197   00F82D  FF                 	db	255
  3198   00F82E  FF                 	db	255
  3199   00F82F  FF                 	db	255
  3200   00F830  FF                 	db	255
  3201   00F831  FF                 	db	255
  3202   00F832  FF                 	db	255
  3203   00F833  FF                 	db	255
  3204   00F834  FF                 	db	255
  3205   00F835  FF                 	db	255
  3206   00F836  FF                 	db	255
  3207   00F837  FF                 	db	255
  3208   00F838  FF                 	db	255
  3209   00F839  FF                 	db	255
  3210   00F83A  FF                 	db	255
  3211   00F83B  FF                 	db	255
  3212   00F83C  FF                 	db	255
  3213   00F83D  FF                 	db	255
  3214   00F83E  FF                 	db	255
  3215   00F83F  FF                 	db	255
  3216   00F840  FF                 	db	255
  3217   00F841  FF                 	db	255
  3218   00F842  FF                 	db	255
  3219   00F843  FF                 	db	255
  3220   00F844  FF                 	db	255
  3221   00F845  FF                 	db	255
  3222   00F846  FF                 	db	255
  3223   00F847  FF                 	db	255
  3224   00F848  FF                 	db	255
  3225   00F849  FF                 	db	255
  3226   00F84A  FF                 	db	255
  3227   00F84B  FF                 	db	255
  3228   00F84C  FF                 	db	255
  3229   00F84D  FF                 	db	255
  3230   00F84E  FF                 	db	255
  3231   00F84F  FF                 	db	255
  3232   00F850  FF                 	db	255
  3233   00F851  FF                 	db	255
  3234   00F852  FF                 	db	255
  3235   00F853  FF                 	db	255
  3236   00F854  FF                 	db	255
  3237   00F855  FF                 	db	255
  3238   00F856  FF                 	db	255
  3239   00F857  FF                 	db	255
  3240   00F858  FF                 	db	255
  3241   00F859  FF                 	db	255
  3242   00F85A  FF                 	db	255
  3243   00F85B  FF                 	db	255
  3244   00F85C  FF                 	db	255
  3245   00F85D  FF                 	db	255
  3246   00F85E  FF                 	db	255
  3247   00F85F  FF                 	db	255
  3248   00F860  FF                 	db	255
  3249   00F861  FF                 	db	255
  3250   00F862  FF                 	db	255
  3251   00F863  FF                 	db	255
  3252   00F864  FF                 	db	255
  3253   00F865  FF                 	db	255
  3254   00F866  FF                 	db	255
  3255   00F867  FF                 	db	255
  3256   00F868  FF                 	db	255
  3257   00F869  FF                 	db	255
  3258   00F86A  FF                 	db	255
  3259   00F86B  FF                 	db	255
  3260   00F86C  FF                 	db	255
  3261   00F86D  FF                 	db	255
  3262   00F86E  FF                 	db	255
  3263   00F86F  FF                 	db	255
  3264   00F870  FF                 	db	255
  3265   00F871  FF                 	db	255
  3266   00F872  FF                 	db	255
  3267   00F873  FF                 	db	255
  3268   00F874  FF                 	db	255
  3269   00F875  FF                 	db	255
  3270   00F876  FF                 	db	255
  3271   00F877  FF                 	db	255
  3272   00F878  FF                 	db	255
  3273   00F879  FF                 	db	255
  3274   00F87A  FF                 	db	255
  3275   00F87B  FF                 	db	255
  3276   00F87C  FF                 	db	255
  3277   00F87D  FF                 	db	255
  3278   00F87E  FF                 	db	255
  3279   00F87F  FF                 	db	255
  3280   00F880  FF                 	db	255
  3281   00F881  FF                 	db	255
  3282   00F882  FF                 	db	255
  3283   00F883  FF                 	db	255
  3284   00F884  FF                 	db	255
  3285   00F885  FF                 	db	255
  3286   00F886  FF                 	db	255
  3287   00F887  FF                 	db	255
  3288   00F888  FF                 	db	255
  3289   00F889  FF                 	db	255
  3290   00F88A  FF                 	db	255
  3291   00F88B  FF                 	db	255
  3292   00F88C  FF                 	db	255
  3293   00F88D  FF                 	db	255
  3294   00F88E  FF                 	db	255
  3295   00F88F  FF                 	db	255
  3296   00F890  FF                 	db	255
  3297   00F891  FF                 	db	255
  3298   00F892  FF                 	db	255
  3299   00F893  FF                 	db	255
  3300   00F894  FF                 	db	255
  3301   00F895  FF                 	db	255
  3302   00F896  FF                 	db	255
  3303   00F897  FF                 	db	255
  3304   00F898  FF                 	db	255
  3305   00F899  FF                 	db	255
  3306   00F89A  FF                 	db	255
  3307   00F89B  FF                 	db	255
  3308   00F89C  FF                 	db	255
  3309   00F89D  FF                 	db	255
  3310   00F89E  FF                 	db	255
  3311   00F89F  FF                 	db	255
  3312   00F8A0  FF                 	db	255
  3313   00F8A1  FF                 	db	255
  3314   00F8A2  FF                 	db	255
  3315   00F8A3  FF                 	db	255
  3316   00F8A4  FF                 	db	255
  3317   00F8A5  FF                 	db	255
  3318   00F8A6  FF                 	db	255
  3319   00F8A7  FF                 	db	255
  3320   00F8A8  FF                 	db	255
  3321   00F8A9  FF                 	db	255
  3322   00F8AA  FF                 	db	255
  3323   00F8AB  FF                 	db	255
  3324   00F8AC  FF                 	db	255
  3325   00F8AD  FF                 	db	255
  3326   00F8AE  FF                 	db	255
  3327   00F8AF  FF                 	db	255
  3328   00F8B0  FF                 	db	255
  3329   00F8B1  FF                 	db	255
  3330   00F8B2  FF                 	db	255
  3331   00F8B3  FF                 	db	255
  3332   00F8B4  FF                 	db	255
  3333   00F8B5  FF                 	db	255
  3334   00F8B6  FF                 	db	255
  3335   00F8B7  FF                 	db	255
  3336   00F8B8  FF                 	db	255
  3337   00F8B9  FF                 	db	255
  3338   00F8BA  FF                 	db	255
  3339   00F8BB  FF                 	db	255
  3340   00F8BC  FF                 	db	255
  3341   00F8BD  FF                 	db	255
  3342   00F8BE  FF                 	db	255
  3343   00F8BF  FF                 	db	255
  3344   00F8C0  FF                 	db	255
  3345   00F8C1  FF                 	db	255
  3346   00F8C2  FF                 	db	255
  3347   00F8C3  FF                 	db	255
  3348   00F8C4  FF                 	db	255
  3349   00F8C5  FF                 	db	255
  3350   00F8C6  FF                 	db	255
  3351   00F8C7  FF                 	db	255
  3352   00F8C8  FF                 	db	255
  3353   00F8C9  FF                 	db	255
  3354   00F8CA  FF                 	db	255
  3355   00F8CB  FF                 	db	255
  3356   00F8CC  FF                 	db	255
  3357   00F8CD  FF                 	db	255
  3358   00F8CE  FF                 	db	255
  3359   00F8CF  FF                 	db	255
  3360   00F8D0  FF                 	db	255
  3361   00F8D1  FF                 	db	255
  3362   00F8D2  FF                 	db	255
  3363   00F8D3  FF                 	db	255
  3364   00F8D4  FF                 	db	255
  3365   00F8D5  FF                 	db	255
  3366   00F8D6  FF                 	db	255
  3367   00F8D7  FF                 	db	255
  3368   00F8D8  FF                 	db	255
  3369   00F8D9  FF                 	db	255
  3370   00F8DA  FF                 	db	255
  3371   00F8DB  FF                 	db	255
  3372   00F8DC  FF                 	db	255
  3373   00F8DD  FF                 	db	255
  3374   00F8DE  FF                 	db	255
  3375   00F8DF  FF                 	db	255
  3376   00F8E0  FF                 	db	255
  3377   00F8E1  FF                 	db	255
  3378   00F8E2  FF                 	db	255
  3379   00F8E3  FF                 	db	255
  3380   00F8E4  FF                 	db	255
  3381   00F8E5  FF                 	db	255
  3382   00F8E6  FF                 	db	255
  3383   00F8E7  FF                 	db	255
  3384   00F8E8  FF                 	db	255
  3385   00F8E9  FF                 	db	255
  3386   00F8EA  FF                 	db	255
  3387   00F8EB  FF                 	db	255
  3388   00F8EC  FF                 	db	255
  3389   00F8ED  FF                 	db	255
  3390   00F8EE  FF                 	db	255
  3391   00F8EF  FF                 	db	255
  3392   00F8F0  FF                 	db	255
  3393   00F8F1  FF                 	db	255
  3394   00F8F2  FF                 	db	255
  3395   00F8F3  FF                 	db	255
  3396   00F8F4  FF                 	db	255
  3397   00F8F5  FF                 	db	255
  3398   00F8F6  FF                 	db	255
  3399   00F8F7  FF                 	db	255
  3400   00F8F8  FF                 	db	255
  3401   00F8F9  FF                 	db	255
  3402   00F8FA  FF                 	db	255
  3403   00F8FB  FF                 	db	255
  3404   00F8FC  FF                 	db	255
  3405   00F8FD  FF                 	db	255
  3406   00F8FE  FF                 	db	255
  3407   00F8FF  FF                 	db	255
  3408   00F900  FF                 	db	255
  3409   00F901  FF                 	db	255
  3410   00F902  FF                 	db	255
  3411   00F903  FF                 	db	255
  3412   00F904  FF                 	db	255
  3413   00F905  FF                 	db	255
  3414   00F906  FF                 	db	255
  3415   00F907  FF                 	db	255
  3416   00F908  FF                 	db	255
  3417   00F909  FF                 	db	255
  3418   00F90A  FF                 	db	255
  3419   00F90B  FF                 	db	255
  3420   00F90C  FF                 	db	255
  3421   00F90D  FF                 	db	255
  3422   00F90E  FF                 	db	255
  3423   00F90F  FF                 	db	255
  3424   00F910  FF                 	db	255
  3425   00F911  FF                 	db	255
  3426   00F912  FF                 	db	255
  3427   00F913  FF                 	db	255
  3428   00F914  FF                 	db	255
  3429   00F915  FF                 	db	255
  3430   00F916  FF                 	db	255
  3431   00F917  FF                 	db	255
  3432   00F918  FF                 	db	255
  3433   00F919  FF                 	db	255
  3434   00F91A  FF                 	db	255
  3435   00F91B  FF                 	db	255
  3436   00F91C  FF                 	db	255
  3437   00F91D  FF                 	db	255
  3438   00F91E  FF                 	db	255
  3439   00F91F  FF                 	db	255
  3440   00F920  FF                 	db	255
  3441   00F921  FF                 	db	255
  3442   00F922  FF                 	db	255
  3443   00F923  FF                 	db	255
  3444   00F924  FF                 	db	255
  3445   00F925  FF                 	db	255
  3446   00F926  FF                 	db	255
  3447   00F927  FF                 	db	255
  3448   00F928  FF                 	db	255
  3449   00F929  FF                 	db	255
  3450   00F92A  FF                 	db	255
  3451   00F92B  FF                 	db	255
  3452   00F92C  FF                 	db	255
  3453   00F92D  FF                 	db	255
  3454   00F92E  FF                 	db	255
  3455   00F92F  FF                 	db	255
  3456   00F930  FF                 	db	255
  3457   00F931  FF                 	db	255
  3458   00F932  FF                 	db	255
  3459   00F933  FF                 	db	255
  3460   00F934  FF                 	db	255
  3461   00F935  FF                 	db	255
  3462   00F936  FF                 	db	255
  3463   00F937  FF                 	db	255
  3464   00F938  FF                 	db	255
  3465   00F939  FF                 	db	255
  3466   00F93A  FF                 	db	255
  3467   00F93B  FF                 	db	255
  3468   00F93C  FF                 	db	255
  3469   00F93D  FF                 	db	255
  3470   00F93E  FF                 	db	255
  3471   00F93F  FF                 	db	255
  3472   00F940  FF                 	db	255
  3473   00F941  FF                 	db	255
  3474   00F942  FF                 	db	255
  3475   00F943  FF                 	db	255
  3476   00F944  FF                 	db	255
  3477   00F945  FF                 	db	255
  3478   00F946  FF                 	db	255
  3479   00F947  FF                 	db	255
  3480   00F948  FF                 	db	255
  3481   00F949  FF                 	db	255
  3482   00F94A  FF                 	db	255
  3483   00F94B  FF                 	db	255
  3484   00F94C  FF                 	db	255
  3485   00F94D  FF                 	db	255
  3486   00F94E  FF                 	db	255
  3487   00F94F  FF                 	db	255
  3488   00F950  FF                 	db	255
  3489   00F951  FF                 	db	255
  3490   00F952  FF                 	db	255
  3491   00F953  FF                 	db	255
  3492   00F954  FF                 	db	255
  3493   00F955  FF                 	db	255
  3494   00F956  FF                 	db	255
  3495   00F957  FF                 	db	255
  3496   00F958  FF                 	db	255
  3497   00F959  FF                 	db	255
  3498   00F95A  FF                 	db	255
  3499   00F95B  FF                 	db	255
  3500   00F95C  FF                 	db	255
  3501   00F95D  FF                 	db	255
  3502   00F95E  FF                 	db	255
  3503   00F95F  FF                 	db	255
  3504   00F960  FF                 	db	255
  3505   00F961  FF                 	db	255
  3506   00F962  FF                 	db	255
  3507   00F963  FF                 	db	255
  3508   00F964  FF                 	db	255
  3509   00F965  FF                 	db	255
  3510   00F966  FF                 	db	255
  3511   00F967  FF                 	db	255
  3512   00F968  FF                 	db	255
  3513   00F969  FF                 	db	255
  3514   00F96A  FF                 	db	255
  3515   00F96B  FF                 	db	255
  3516   00F96C  FF                 	db	255
  3517   00F96D  FF                 	db	255
  3518   00F96E  FF                 	db	255
  3519   00F96F  FF                 	db	255
  3520   00F970  FF                 	db	255
  3521   00F971  FF                 	db	255
  3522   00F972  FF                 	db	255
  3523   00F973  FF                 	db	255
  3524   00F974  FF                 	db	255
  3525   00F975  FF                 	db	255
  3526   00F976  FF                 	db	255
  3527   00F977  FF                 	db	255
  3528   00F978  FF                 	db	255
  3529   00F979  FF                 	db	255
  3530   00F97A  FF                 	db	255
  3531   00F97B  FF                 	db	255
  3532   00F97C  FF                 	db	255
  3533   00F97D  FF                 	db	255
  3534   00F97E  FF                 	db	255
  3535   00F97F  FF                 	db	255
  3536   00F980  FF                 	db	255
  3537   00F981  FF                 	db	255
  3538   00F982  FF                 	db	255
  3539   00F983  FF                 	db	255
  3540   00F984  FF                 	db	255
  3541   00F985  FF                 	db	255
  3542   00F986  FF                 	db	255
  3543   00F987  FF                 	db	255
  3544   00F988  FF                 	db	255
  3545   00F989  FF                 	db	255
  3546   00F98A  FF                 	db	255
  3547   00F98B  FF                 	db	255
  3548   00F98C  FF                 	db	255
  3549   00F98D  FF                 	db	255
  3550   00F98E  FF                 	db	255
  3551   00F98F  FF                 	db	255
  3552   00F990  FF                 	db	255
  3553   00F991  FF                 	db	255
  3554   00F992  FF                 	db	255
  3555   00F993  FF                 	db	255
  3556   00F994  FF                 	db	255
  3557   00F995  FF                 	db	255
  3558   00F996  FF                 	db	255
  3559   00F997  FF                 	db	255
  3560   00F998  FF                 	db	255
  3561   00F999  FF                 	db	255
  3562   00F99A  FF                 	db	255
  3563   00F99B  FF                 	db	255
  3564   00F99C  FF                 	db	255
  3565   00F99D  FF                 	db	255
  3566   00F99E  FF                 	db	255
  3567   00F99F  FF                 	db	255
  3568   00F9A0  FF                 	db	255
  3569   00F9A1  FF                 	db	255
  3570   00F9A2  FF                 	db	255
  3571   00F9A3  FF                 	db	255
  3572   00F9A4  FF                 	db	255
  3573   00F9A5  FF                 	db	255
  3574   00F9A6  FF                 	db	255
  3575   00F9A7  FF                 	db	255
  3576   00F9A8  FF                 	db	255
  3577   00F9A9  FF                 	db	255
  3578   00F9AA  FF                 	db	255
  3579   00F9AB  FF                 	db	255
  3580   00F9AC  FF                 	db	255
  3581   00F9AD  FF                 	db	255
  3582   00F9AE  FF                 	db	255
  3583   00F9AF  FF                 	db	255
  3584   00F9B0  FF                 	db	255
  3585   00F9B1  FF                 	db	255
  3586   00F9B2  FF                 	db	255
  3587   00F9B3  FF                 	db	255
  3588   00F9B4  FF                 	db	255
  3589   00F9B5  FF                 	db	255
  3590   00F9B6  FF                 	db	255
  3591   00F9B7  FF                 	db	255
  3592   00F9B8  FF                 	db	255
  3593   00F9B9  FF                 	db	255
  3594   00F9BA  FF                 	db	255
  3595   00F9BB  FF                 	db	255
  3596   00F9BC  FF                 	db	255
  3597   00F9BD  FF                 	db	255
  3598   00F9BE  FF                 	db	255
  3599   00F9BF  FF                 	db	255
  3600   00F9C0  FF                 	db	255
  3601   00F9C1  FF                 	db	255
  3602   00F9C2  FF                 	db	255
  3603   00F9C3  FF                 	db	255
  3604   00F9C4  FF                 	db	255
  3605   00F9C5  FF                 	db	255
  3606   00F9C6  FF                 	db	255
  3607   00F9C7  FF                 	db	255
  3608   00F9C8  FF                 	db	255
  3609   00F9C9  FF                 	db	255
  3610   00F9CA  FF                 	db	255
  3611   00F9CB  FF                 	db	255
  3612   00F9CC  FF                 	db	255
  3613   00F9CD  FF                 	db	255
  3614   00F9CE  FF                 	db	255
  3615   00F9CF  FF                 	db	255
  3616   00F9D0  FF                 	db	255
  3617   00F9D1  FF                 	db	255
  3618   00F9D2  FF                 	db	255
  3619   00F9D3  FF                 	db	255
  3620   00F9D4  FF                 	db	255
  3621   00F9D5  FF                 	db	255
  3622   00F9D6  FF                 	db	255
  3623   00F9D7  FF                 	db	255
  3624   00F9D8  FF                 	db	255
  3625   00F9D9  FF                 	db	255
  3626   00F9DA  FF                 	db	255
  3627   00F9DB  FF                 	db	255
  3628   00F9DC  FF                 	db	255
  3629   00F9DD  FF                 	db	255
  3630   00F9DE  FF                 	db	255
  3631   00F9DF  FF                 	db	255
  3632   00F9E0  FF                 	db	255
  3633   00F9E1  FF                 	db	255
  3634   00F9E2  FF                 	db	255
  3635   00F9E3  FF                 	db	255
  3636   00F9E4  FF                 	db	255
  3637   00F9E5  FF                 	db	255
  3638   00F9E6  FF                 	db	255
  3639   00F9E7  FF                 	db	255
  3640   00F9E8  FF                 	db	255
  3641   00F9E9  FF                 	db	255
  3642   00F9EA  FF                 	db	255
  3643   00F9EB  FF                 	db	255
  3644   00F9EC  FF                 	db	255
  3645   00F9ED  FF                 	db	255
  3646   00F9EE  FF                 	db	255
  3647   00F9EF  FF                 	db	255
  3648   00F9F0  FF                 	db	255
  3649   00F9F1  FF                 	db	255
  3650   00F9F2  FF                 	db	255
  3651   00F9F3  FF                 	db	255
  3652   00F9F4  FF                 	db	255
  3653   00F9F5  FF                 	db	255
  3654   00F9F6  FF                 	db	255
  3655   00F9F7  FF                 	db	255
  3656   00F9F8  FF                 	db	255
  3657   00F9F9  FF                 	db	255
  3658   00F9FA  FF                 	db	255
  3659   00F9FB  FF                 	db	255
  3660   00F9FC  FF                 	db	255
  3661   00F9FD  FF                 	db	255
  3662   00F9FE  FF                 	db	255
  3663   00F9FF  FF                 	db	255
  3664   00FA00  FF                 	db	255
  3665   00FA01  FF                 	db	255
  3666   00FA02  FF                 	db	255
  3667   00FA03  FF                 	db	255
  3668   00FA04  FF                 	db	255
  3669   00FA05  FF                 	db	255
  3670   00FA06  FF                 	db	255
  3671   00FA07  FF                 	db	255
  3672   00FA08  FF                 	db	255
  3673   00FA09  FF                 	db	255
  3674   00FA0A  FF                 	db	255
  3675   00FA0B  FF                 	db	255
  3676   00FA0C  FF                 	db	255
  3677   00FA0D  FF                 	db	255
  3678   00FA0E  FF                 	db	255
  3679   00FA0F  FF                 	db	255
  3680   00FA10  FF                 	db	255
  3681   00FA11  FF                 	db	255
  3682   00FA12  FF                 	db	255
  3683   00FA13  FF                 	db	255
  3684   00FA14  FF                 	db	255
  3685   00FA15  FF                 	db	255
  3686   00FA16  FF                 	db	255
  3687   00FA17  FF                 	db	255
  3688   00FA18  FF                 	db	255
  3689   00FA19  FF                 	db	255
  3690   00FA1A  FF                 	db	255
  3691   00FA1B  FF                 	db	255
  3692   00FA1C  FF                 	db	255
  3693   00FA1D  FF                 	db	255
  3694   00FA1E  FF                 	db	255
  3695   00FA1F  FF                 	db	255
  3696   00FA20  FF                 	db	255
  3697   00FA21  FF                 	db	255
  3698   00FA22  FF                 	db	255
  3699   00FA23  FF                 	db	255
  3700   00FA24  FF                 	db	255
  3701   00FA25  FF                 	db	255
  3702   00FA26  FF                 	db	255
  3703   00FA27  FF                 	db	255
  3704   00FA28  FF                 	db	255
  3705   00FA29  FF                 	db	255
  3706   00FA2A  FF                 	db	255
  3707   00FA2B  FF                 	db	255
  3708   00FA2C  FF                 	db	255
  3709   00FA2D  FF                 	db	255
  3710   00FA2E  FF                 	db	255
  3711   00FA2F  FF                 	db	255
  3712   00FA30  FF                 	db	255
  3713   00FA31  FF                 	db	255
  3714   00FA32  FF                 	db	255
  3715   00FA33  FF                 	db	255
  3716   00FA34  FF                 	db	255
  3717   00FA35  FF                 	db	255
  3718   00FA36  FF                 	db	255
  3719   00FA37  FF                 	db	255
  3720   00FA38  FF                 	db	255
  3721   00FA39  FF                 	db	255
  3722   00FA3A  FF                 	db	255
  3723   00FA3B  FF                 	db	255
  3724   00FA3C  FF                 	db	255
  3725   00FA3D  FF                 	db	255
  3726   00FA3E  FF                 	db	255
  3727   00FA3F  FF                 	db	255
  3728   00FA40  FF                 	db	255
  3729   00FA41  FF                 	db	255
  3730   00FA42  FF                 	db	255
  3731   00FA43  FF                 	db	255
  3732   00FA44  FF                 	db	255
  3733   00FA45  FF                 	db	255
  3734   00FA46  FF                 	db	255
  3735   00FA47  FF                 	db	255
  3736   00FA48  FF                 	db	255
  3737   00FA49  FF                 	db	255
  3738   00FA4A  FF                 	db	255
  3739   00FA4B  FF                 	db	255
  3740   00FA4C  FF                 	db	255
  3741   00FA4D  FF                 	db	255
  3742   00FA4E  FF                 	db	255
  3743   00FA4F  FF                 	db	255
  3744   00FA50  FF                 	db	255
  3745   00FA51  FF                 	db	255
  3746   00FA52  FF                 	db	255
  3747   00FA53  FF                 	db	255
  3748   00FA54  FF                 	db	255
  3749   00FA55  FF                 	db	255
  3750   00FA56  FF                 	db	255
  3751   00FA57  FF                 	db	255
  3752   00FA58  FF                 	db	255
  3753   00FA59  FF                 	db	255
  3754   00FA5A  FF                 	db	255
  3755   00FA5B  FF                 	db	255
  3756   00FA5C  FF                 	db	255
  3757   00FA5D  FF                 	db	255
  3758   00FA5E  FF                 	db	255
  3759   00FA5F  FF                 	db	255
  3760   00FA60  FF                 	db	255
  3761   00FA61  FF                 	db	255
  3762   00FA62  FF                 	db	255
  3763   00FA63  FF                 	db	255
  3764   00FA64  FF                 	db	255
  3765   00FA65  FF                 	db	255
  3766   00FA66  FF                 	db	255
  3767   00FA67  FF                 	db	255
  3768   00FA68  FF                 	db	255
  3769   00FA69  FF                 	db	255
  3770   00FA6A  FF                 	db	255
  3771   00FA6B  FF                 	db	255
  3772   00FA6C  FF                 	db	255
  3773   00FA6D  FF                 	db	255
  3774   00FA6E  FF                 	db	255
  3775   00FA6F  FF                 	db	255
  3776   00FA70  FF                 	db	255
  3777   00FA71  FF                 	db	255
  3778   00FA72  FF                 	db	255
  3779   00FA73  FF                 	db	255
  3780   00FA74  FF                 	db	255
  3781   00FA75  FF                 	db	255
  3782   00FA76  FF                 	db	255
  3783   00FA77  FF                 	db	255
  3784   00FA78  FF                 	db	255
  3785   00FA79  FF                 	db	255
  3786   00FA7A  FF                 	db	255
  3787   00FA7B  FF                 	db	255
  3788   00FA7C  FF                 	db	255
  3789   00FA7D  FF                 	db	255
  3790   00FA7E  FF                 	db	255
  3791   00FA7F  FF                 	db	255
  3792   00FA80  FF                 	db	255
  3793   00FA81  FF                 	db	255
  3794   00FA82  FF                 	db	255
  3795   00FA83  FF                 	db	255
  3796   00FA84  FF                 	db	255
  3797   00FA85  FF                 	db	255
  3798   00FA86  FF                 	db	255
  3799   00FA87  FF                 	db	255
  3800   00FA88  FF                 	db	255
  3801   00FA89  FF                 	db	255
  3802   00FA8A  FF                 	db	255
  3803   00FA8B  FF                 	db	255
  3804   00FA8C  FF                 	db	255
  3805   00FA8D  FF                 	db	255
  3806   00FA8E  FF                 	db	255
  3807   00FA8F  FF                 	db	255
  3808   00FA90  FF                 	db	255
  3809   00FA91  FF                 	db	255
  3810   00FA92  FF                 	db	255
  3811   00FA93  FF                 	db	255
  3812   00FA94  FF                 	db	255
  3813   00FA95  FF                 	db	255
  3814   00FA96  FF                 	db	255
  3815   00FA97  FF                 	db	255
  3816   00FA98  FF                 	db	255
  3817   00FA99  FF                 	db	255
  3818   00FA9A  FF                 	db	255
  3819   00FA9B  FF                 	db	255
  3820   00FA9C  FF                 	db	255
  3821   00FA9D  FF                 	db	255
  3822   00FA9E  FF                 	db	255
  3823   00FA9F  FF                 	db	255
  3824   00FAA0  FF                 	db	255
  3825   00FAA1  FF                 	db	255
  3826   00FAA2  FF                 	db	255
  3827   00FAA3  FF                 	db	255
  3828   00FAA4  FF                 	db	255
  3829   00FAA5  FF                 	db	255
  3830   00FAA6  FF                 	db	255
  3831   00FAA7  FF                 	db	255
  3832   00FAA8  FF                 	db	255
  3833   00FAA9  FF                 	db	255
  3834   00FAAA  FF                 	db	255
  3835   00FAAB  FF                 	db	255
  3836   00FAAC  FF                 	db	255
  3837   00FAAD  FF                 	db	255
  3838   00FAAE  FF                 	db	255
  3839   00FAAF  FF                 	db	255
  3840   00FAB0  FF                 	db	255
  3841   00FAB1  FF                 	db	255
  3842   00FAB2  FF                 	db	255
  3843   00FAB3  FF                 	db	255
  3844   00FAB4  FF                 	db	255
  3845   00FAB5  FF                 	db	255
  3846   00FAB6  FF                 	db	255
  3847   00FAB7  FF                 	db	255
  3848   00FAB8  FF                 	db	255
  3849   00FAB9  FF                 	db	255
  3850   00FABA  FF                 	db	255
  3851   00FABB  FF                 	db	255
  3852   00FABC  FF                 	db	255
  3853   00FABD  FF                 	db	255
  3854   00FABE  FF                 	db	255
  3855   00FABF  FF                 	db	255
  3856   00FAC0  FF                 	db	255
  3857   00FAC1  FF                 	db	255
  3858   00FAC2  FF                 	db	255
  3859   00FAC3  FF                 	db	255
  3860   00FAC4  FF                 	db	255
  3861   00FAC5  FF                 	db	255
  3862   00FAC6  FF                 	db	255
  3863   00FAC7  FF                 	db	255
  3864   00FAC8  FF                 	db	255
  3865   00FAC9  FF                 	db	255
  3866   00FACA  FF                 	db	255
  3867   00FACB  FF                 	db	255
  3868   00FACC  FF                 	db	255
  3869   00FACD  FF                 	db	255
  3870   00FACE  FF                 	db	255
  3871   00FACF  FF                 	db	255
  3872   00FAD0  FF                 	db	255
  3873   00FAD1  FF                 	db	255
  3874   00FAD2  FF                 	db	255
  3875   00FAD3  FF                 	db	255
  3876   00FAD4  FF                 	db	255
  3877   00FAD5  FF                 	db	255
  3878   00FAD6  FF                 	db	255
  3879   00FAD7  FF                 	db	255
  3880   00FAD8  FF                 	db	255
  3881   00FAD9  FF                 	db	255
  3882   00FADA  FF                 	db	255
  3883   00FADB  FF                 	db	255
  3884   00FADC  FF                 	db	255
  3885   00FADD  FF                 	db	255
  3886   00FADE  FF                 	db	255
  3887   00FADF  FF                 	db	255
  3888   00FAE0  FF                 	db	255
  3889   00FAE1  FF                 	db	255
  3890   00FAE2  FF                 	db	255
  3891   00FAE3  FF                 	db	255
  3892   00FAE4  FF                 	db	255
  3893   00FAE5  FF                 	db	255
  3894   00FAE6  FF                 	db	255
  3895   00FAE7  FF                 	db	255
  3896   00FAE8  FF                 	db	255
  3897   00FAE9  FF                 	db	255
  3898   00FAEA  FF                 	db	255
  3899   00FAEB  FF                 	db	255
  3900   00FAEC  FF                 	db	255
  3901   00FAED  FF                 	db	255
  3902   00FAEE  FF                 	db	255
  3903   00FAEF  FF                 	db	255
  3904   00FAF0  FF                 	db	255
  3905   00FAF1  FF                 	db	255
  3906   00FAF2  FF                 	db	255
  3907   00FAF3  FF                 	db	255
  3908   00FAF4  FF                 	db	255
  3909   00FAF5  FF                 	db	255
  3910   00FAF6  FF                 	db	255
  3911   00FAF7  FF                 	db	255
  3912   00FAF8  FF                 	db	255
  3913   00FAF9  FF                 	db	255
  3914   00FAFA  FF                 	db	255
  3915   00FAFB  FF                 	db	255
  3916   00FAFC  FF                 	db	255
  3917   00FAFD  FF                 	db	255
  3918   00FAFE  FF                 	db	255
  3919   00FAFF  FF                 	db	255
  3920   00FB00  FF                 	db	255
  3921   00FB01  FF                 	db	255
  3922   00FB02  FF                 	db	255
  3923   00FB03  FF                 	db	255
  3924   00FB04  FF                 	db	255
  3925   00FB05  FF                 	db	255
  3926   00FB06  FF                 	db	255
  3927   00FB07  FF                 	db	255
  3928   00FB08  FF                 	db	255
  3929   00FB09  FF                 	db	255
  3930   00FB0A  FF                 	db	255
  3931   00FB0B  FF                 	db	255
  3932   00FB0C  FF                 	db	255
  3933   00FB0D  FF                 	db	255
  3934   00FB0E  FF                 	db	255
  3935   00FB0F  FF                 	db	255
  3936   00FB10  FF                 	db	255
  3937   00FB11  FF                 	db	255
  3938   00FB12  FF                 	db	255
  3939   00FB13  FF                 	db	255
  3940   00FB14  FF                 	db	255
  3941   00FB15  FF                 	db	255
  3942   00FB16  FF                 	db	255
  3943   00FB17  FF                 	db	255
  3944   00FB18  FF                 	db	255
  3945   00FB19  FF                 	db	255
  3946   00FB1A  FF                 	db	255
  3947   00FB1B  FF                 	db	255
  3948   00FB1C  FF                 	db	255
  3949   00FB1D  FF                 	db	255
  3950   00FB1E  FF                 	db	255
  3951   00FB1F  FF                 	db	255
  3952   00FB20  FF                 	db	255
  3953   00FB21  FF                 	db	255
  3954   00FB22  FF                 	db	255
  3955   00FB23  FF                 	db	255
  3956   00FB24  FF                 	db	255
  3957   00FB25  FF                 	db	255
  3958   00FB26  FF                 	db	255
  3959   00FB27  FF                 	db	255
  3960   00FB28  FF                 	db	255
  3961   00FB29  FF                 	db	255
  3962   00FB2A  FF                 	db	255
  3963   00FB2B  FF                 	db	255
  3964   00FB2C  FF                 	db	255
  3965   00FB2D  FF                 	db	255
  3966   00FB2E  FF                 	db	255
  3967   00FB2F  FF                 	db	255
  3968   00FB30  FF                 	db	255
  3969   00FB31  FF                 	db	255
  3970   00FB32  FF                 	db	255
  3971   00FB33  FF                 	db	255
  3972   00FB34  FF                 	db	255
  3973   00FB35  FF                 	db	255
  3974   00FB36  FF                 	db	255
  3975   00FB37  FF                 	db	255
  3976   00FB38  FF                 	db	255
  3977   00FB39  FF                 	db	255
  3978   00FB3A  FF                 	db	255
  3979   00FB3B  FF                 	db	255
  3980   00FB3C  FF                 	db	255
  3981   00FB3D  FF                 	db	255
  3982   00FB3E  FF                 	db	255
  3983   00FB3F  FF                 	db	255
  3984   00FB40  FF                 	db	255
  3985   00FB41  FF                 	db	255
  3986   00FB42  FF                 	db	255
  3987   00FB43  FF                 	db	255
  3988   00FB44  FF                 	db	255
  3989   00FB45  FF                 	db	255
  3990   00FB46  FF                 	db	255
  3991   00FB47  FF                 	db	255
  3992   00FB48  FF                 	db	255
  3993   00FB49  FF                 	db	255
  3994   00FB4A  FF                 	db	255
  3995   00FB4B  FF                 	db	255
  3996   00FB4C  FF                 	db	255
  3997   00FB4D  FF                 	db	255
  3998   00FB4E  FF                 	db	255
  3999   00FB4F  FF                 	db	255
  4000   00FB50  FF                 	db	255
  4001   00FB51  FF                 	db	255
  4002   00FB52  FF                 	db	255
  4003   00FB53  FF                 	db	255
  4004   00FB54  FF                 	db	255
  4005   00FB55  FF                 	db	255
  4006   00FB56  FF                 	db	255
  4007   00FB57  FF                 	db	255
  4008   00FB58  FF                 	db	255
  4009   00FB59  FF                 	db	255
  4010   00FB5A  FF                 	db	255
  4011   00FB5B  FF                 	db	255
  4012   00FB5C  FF                 	db	255
  4013   00FB5D  FF                 	db	255
  4014   00FB5E  FF                 	db	255
  4015   00FB5F  FF                 	db	255
  4016   00FB60  FF                 	db	255
  4017   00FB61  FF                 	db	255
  4018   00FB62  FF                 	db	255
  4019   00FB63  FF                 	db	255
  4020   00FB64  FF                 	db	255
  4021   00FB65  FF                 	db	255
  4022   00FB66  FF                 	db	255
  4023   00FB67  FF                 	db	255
  4024   00FB68  FF                 	db	255
  4025   00FB69  FF                 	db	255
  4026   00FB6A  FF                 	db	255
  4027   00FB6B  FF                 	db	255
  4028   00FB6C  FF                 	db	255
  4029   00FB6D  FF                 	db	255
  4030   00FB6E  FF                 	db	255
  4031   00FB6F  FF                 	db	255
  4032   00FB70  FF                 	db	255
  4033   00FB71  FF                 	db	255
  4034   00FB72  FF                 	db	255
  4035   00FB73  FF                 	db	255
  4036   00FB74  FF                 	db	255
  4037   00FB75  FF                 	db	255
  4038   00FB76  FF                 	db	255
  4039   00FB77  FF                 	db	255
  4040   00FB78  FF                 	db	255
  4041   00FB79  FF                 	db	255
  4042   00FB7A  FF                 	db	255
  4043   00FB7B  FF                 	db	255
  4044   00FB7C  FF                 	db	255
  4045   00FB7D  FF                 	db	255
  4046   00FB7E  FF                 	db	255
  4047   00FB7F  FF                 	db	255
  4048   00FB80  FF                 	db	255
  4049   00FB81  FF                 	db	255
  4050   00FB82  FF                 	db	255
  4051   00FB83  FF                 	db	255
  4052   00FB84  FF                 	db	255
  4053   00FB85  FF                 	db	255
  4054   00FB86  FF                 	db	255
  4055   00FB87  FF                 	db	255
  4056   00FB88  FF                 	db	255
  4057   00FB89  FF                 	db	255
  4058   00FB8A  FF                 	db	255
  4059   00FB8B  FF                 	db	255
  4060   00FB8C  FF                 	db	255
  4061   00FB8D  FF                 	db	255
  4062   00FB8E  FF                 	db	255
  4063   00FB8F  FF                 	db	255
  4064   00FB90  FF                 	db	255
  4065   00FB91  FF                 	db	255
  4066   00FB92  FF                 	db	255
  4067   00FB93  FF                 	db	255
  4068   00FB94  FF                 	db	255
  4069   00FB95  FF                 	db	255
  4070   00FB96  FF                 	db	255
  4071   00FB97  FF                 	db	255
  4072   00FB98  FF                 	db	255
  4073   00FB99  FF                 	db	255
  4074   00FB9A  FF                 	db	255
  4075   00FB9B  FF                 	db	255
  4076   00FB9C  FF                 	db	255
  4077   00FB9D  FF                 	db	255
  4078   00FB9E  FF                 	db	255
  4079   00FB9F  FF                 	db	255
  4080   00FBA0  FF                 	db	255
  4081   00FBA1  FF                 	db	255
  4082   00FBA2  FF                 	db	255
  4083   00FBA3  FF                 	db	255
  4084   00FBA4  FF                 	db	255
  4085   00FBA5  FF                 	db	255
  4086   00FBA6  FF                 	db	255
  4087   00FBA7  FF                 	db	255
  4088   00FBA8  FF                 	db	255
  4089   00FBA9  FF                 	db	255
  4090   00FBAA  FF                 	db	255
  4091   00FBAB  FF                 	db	255
  4092   00FBAC  FF                 	db	255
  4093   00FBAD  FF                 	db	255
  4094   00FBAE  FF                 	db	255
  4095   00FBAF  FF                 	db	255
  4096   00FBB0  FF                 	db	255
  4097   00FBB1  FF                 	db	255
  4098   00FBB2  FF                 	db	255
  4099   00FBB3  FF                 	db	255
  4100   00FBB4  FF                 	db	255
  4101   00FBB5  FF                 	db	255
  4102   00FBB6  FF                 	db	255
  4103   00FBB7  FF                 	db	255
  4104   00FBB8  FF                 	db	255
  4105   00FBB9  FF                 	db	255
  4106   00FBBA  FF                 	db	255
  4107   00FBBB  FF                 	db	255
  4108   00FBBC  FF                 	db	255
  4109   00FBBD  FF                 	db	255
  4110   00FBBE  FF                 	db	255
  4111   00FBBF  FF                 	db	255
  4112   00FBC0  FF                 	db	255
  4113   00FBC1  FF                 	db	255
  4114   00FBC2  FF                 	db	255
  4115   00FBC3  FF                 	db	255
  4116   00FBC4  FF                 	db	255
  4117   00FBC5  FF                 	db	255
  4118   00FBC6  FF                 	db	255
  4119   00FBC7  FF                 	db	255
  4120   00FBC8  FF                 	db	255
  4121   00FBC9  FF                 	db	255
  4122   00FBCA  FF                 	db	255
  4123   00FBCB  FF                 	db	255
  4124   00FBCC  FF                 	db	255
  4125   00FBCD  FF                 	db	255
  4126   00FBCE  FF                 	db	255
  4127   00FBCF  FF                 	db	255
  4128   00FBD0  FF                 	db	255
  4129   00FBD1  FF                 	db	255
  4130   00FBD2  FF                 	db	255
  4131   00FBD3  FF                 	db	255
  4132   00FBD4  FF                 	db	255
  4133   00FBD5  FF                 	db	255
  4134   00FBD6  FF                 	db	255
  4135   00FBD7  FF                 	db	255
  4136   00FBD8  FF                 	db	255
  4137   00FBD9  FF                 	db	255
  4138   00FBDA  FF                 	db	255
  4139   00FBDB  FF                 	db	255
  4140   00FBDC  FF                 	db	255
  4141   00FBDD  FF                 	db	255
  4142   00FBDE  FF                 	db	255
  4143   00FBDF  FF                 	db	255
  4144   00FBE0  FF                 	db	255
  4145   00FBE1  FF                 	db	255
  4146   00FBE2  FF                 	db	255
  4147   00FBE3  FF                 	db	255
  4148   00FBE4  FF                 	db	255
  4149   00FBE5  FF                 	db	255
  4150   00FBE6  FF                 	db	255
  4151   00FBE7  FF                 	db	255
  4152   00FBE8  FF                 	db	255
  4153   00FBE9  FF                 	db	255
  4154   00FBEA  FF                 	db	255
  4155   00FBEB  FF                 	db	255
  4156   00FBEC  FF                 	db	255
  4157   00FBED  FF                 	db	255
  4158   00FBEE  FF                 	db	255
  4159   00FBEF  FF                 	db	255
  4160   00FBF0  FF                 	db	255
  4161   00FBF1  FF                 	db	255
  4162   00FBF2  FF                 	db	255
  4163   00FBF3  FF                 	db	255
  4164   00FBF4  FF                 	db	255
  4165   00FBF5  FF                 	db	255
  4166   00FBF6  FF                 	db	255
  4167   00FBF7  FF                 	db	255
  4168   00FBF8  FF                 	db	255
  4169   00FBF9  FF                 	db	255
  4170   00FBFA  FF                 	db	255
  4171   00FBFB  FF                 	db	255
  4172   00FBFC  FF                 	db	255
  4173   00FBFD  FF                 	db	255
  4174   00FBFE  FF                 	db	255
  4175   00FBFF  FF                 	db	255
  4176   00FC00  FF                 	db	255
  4177   00FC01  FF                 	db	255
  4178   00FC02  FF                 	db	255
  4179   00FC03  FF                 	db	255
  4180   00FC04  FF                 	db	255
  4181   00FC05  FF                 	db	255
  4182   00FC06  FF                 	db	255
  4183   00FC07  FF                 	db	255
  4184   00FC08  FF                 	db	255
  4185   00FC09  FF                 	db	255
  4186   00FC0A  FF                 	db	255
  4187   00FC0B  FF                 	db	255
  4188   00FC0C  FF                 	db	255
  4189   00FC0D  FF                 	db	255
  4190   00FC0E  FF                 	db	255
  4191   00FC0F  FF                 	db	255
  4192   00FC10  FF                 	db	255
  4193   00FC11  FF                 	db	255
  4194   00FC12  FF                 	db	255
  4195   00FC13  FF                 	db	255
  4196   00FC14  FF                 	db	255
  4197   00FC15  FF                 	db	255
  4198   00FC16  FF                 	db	255
  4199   00FC17  FF                 	db	255
  4200   00FC18  FF                 	db	255
  4201   00FC19  FF                 	db	255
  4202   00FC1A  FF                 	db	255
  4203   00FC1B  FF                 	db	255
  4204   00FC1C  FF                 	db	255
  4205   00FC1D  FF                 	db	255
  4206   00FC1E  FF                 	db	255
  4207   00FC1F  FF                 	db	255
  4208   00FC20  FF                 	db	255
  4209   00FC21  FF                 	db	255
  4210   00FC22  FF                 	db	255
  4211   00FC23  FF                 	db	255
  4212   00FC24  FF                 	db	255
  4213   00FC25  FF                 	db	255
  4214   00FC26  FF                 	db	255
  4215   00FC27  FF                 	db	255
  4216   00FC28  FF                 	db	255
  4217   00FC29  FF                 	db	255
  4218   00FC2A  FF                 	db	255
  4219   00FC2B  FF                 	db	255
  4220   00FC2C  FF                 	db	255
  4221   00FC2D  FF                 	db	255
  4222   00FC2E  FF                 	db	255
  4223   00FC2F  FF                 	db	255
  4224   00FC30  FF                 	db	255
  4225   00FC31  FF                 	db	255
  4226   00FC32  FF                 	db	255
  4227   00FC33  FF                 	db	255
  4228   00FC34  FF                 	db	255
  4229   00FC35  FF                 	db	255
  4230   00FC36  FF                 	db	255
  4231   00FC37  FF                 	db	255
  4232   00FC38  FF                 	db	255
  4233   00FC39  FF                 	db	255
  4234   00FC3A  FF                 	db	255
  4235   00FC3B  FF                 	db	255
  4236   00FC3C  FF                 	db	255
  4237   00FC3D  FF                 	db	255
  4238   00FC3E  FF                 	db	255
  4239   00FC3F  FF                 	db	255
  4240   00FC40  FF                 	db	255
  4241   00FC41  FF                 	db	255
  4242   00FC42  FF                 	db	255
  4243   00FC43  FF                 	db	255
  4244   00FC44  FF                 	db	255
  4245   00FC45  FF                 	db	255
  4246   00FC46  FF                 	db	255
  4247   00FC47  FF                 	db	255
  4248   00FC48  FF                 	db	255
  4249   00FC49  FF                 	db	255
  4250   00FC4A  FF                 	db	255
  4251   00FC4B  FF                 	db	255
  4252   00FC4C  FF                 	db	255
  4253   00FC4D  FF                 	db	255
  4254   00FC4E  FF                 	db	255
  4255   00FC4F  FF                 	db	255
  4256   00FC50  FF                 	db	255
  4257   00FC51  FF                 	db	255
  4258   00FC52  FF                 	db	255
  4259   00FC53  FF                 	db	255
  4260   00FC54  FF                 	db	255
  4261   00FC55  FF                 	db	255
  4262   00FC56  FF                 	db	255
  4263   00FC57  FF                 	db	255
  4264   00FC58  FF                 	db	255
  4265   00FC59  FF                 	db	255
  4266   00FC5A  FF                 	db	255
  4267   00FC5B  FF                 	db	255
  4268   00FC5C  FF                 	db	255
  4269   00FC5D  FF                 	db	255
  4270   00FC5E  FF                 	db	255
  4271   00FC5F  FF                 	db	255
  4272   00FC60  FF                 	db	255
  4273   00FC61  FF                 	db	255
  4274   00FC62  FF                 	db	255
  4275   00FC63  FF                 	db	255
  4276   00FC64  FF                 	db	255
  4277   00FC65  FF                 	db	255
  4278   00FC66  FF                 	db	255
  4279   00FC67  FF                 	db	255
  4280   00FC68  FF                 	db	255
  4281   00FC69  FF                 	db	255
  4282   00FC6A  FF                 	db	255
  4283   00FC6B  FF                 	db	255
  4284   00FC6C  FF                 	db	255
  4285   00FC6D  FF                 	db	255
  4286   00FC6E  FF                 	db	255
  4287   00FC6F  FF                 	db	255
  4288   00FC70  FF                 	db	255
  4289   00FC71  FF                 	db	255
  4290   00FC72  FF                 	db	255
  4291   00FC73  FF                 	db	255
  4292   00FC74  FF                 	db	255
  4293   00FC75  FF                 	db	255
  4294   00FC76  FF                 	db	255
  4295   00FC77  FF                 	db	255
  4296   00FC78  FF                 	db	255
  4297   00FC79  FF                 	db	255
  4298   00FC7A  FF                 	db	255
  4299   00FC7B  FF                 	db	255
  4300   00FC7C  FF                 	db	255
  4301   00FC7D  FF                 	db	255
  4302   00FC7E  FF                 	db	255
  4303   00FC7F  FF                 	db	255
  4304   00FC80  FF                 	db	255
  4305   00FC81  FF                 	db	255
  4306   00FC82  FF                 	db	255
  4307   00FC83  FF                 	db	255
  4308   00FC84  FF                 	db	255
  4309   00FC85  FF                 	db	255
  4310   00FC86  FF                 	db	255
  4311   00FC87  FF                 	db	255
  4312   00FC88  FF                 	db	255
  4313   00FC89  FF                 	db	255
  4314   00FC8A  FF                 	db	255
  4315   00FC8B  FF                 	db	255
  4316   00FC8C  FF                 	db	255
  4317   00FC8D  FF                 	db	255
  4318   00FC8E  FF                 	db	255
  4319   00FC8F  FF                 	db	255
  4320   00FC90  FF                 	db	255
  4321   00FC91  FF                 	db	255
  4322   00FC92  FF                 	db	255
  4323   00FC93  FF                 	db	255
  4324   00FC94  FF                 	db	255
  4325   00FC95  FF                 	db	255
  4326   00FC96  FF                 	db	255
  4327   00FC97  FF                 	db	255
  4328   00FC98  FF                 	db	255
  4329   00FC99  FF                 	db	255
  4330   00FC9A  FF                 	db	255
  4331   00FC9B  FF                 	db	255
  4332   00FC9C  FF                 	db	255
  4333   00FC9D  FF                 	db	255
  4334   00FC9E  FF                 	db	255
  4335   00FC9F  FF                 	db	255
  4336   00FCA0  FF                 	db	255
  4337   00FCA1  FF                 	db	255
  4338   00FCA2  FF                 	db	255
  4339   00FCA3  FF                 	db	255
  4340   00FCA4  FF                 	db	255
  4341   00FCA5  FF                 	db	255
  4342   00FCA6  FF                 	db	255
  4343   00FCA7  FF                 	db	255
  4344   00FCA8  FF                 	db	255
  4345   00FCA9  FF                 	db	255
  4346   00FCAA  FF                 	db	255
  4347   00FCAB  FF                 	db	255
  4348   00FCAC  FF                 	db	255
  4349   00FCAD  FF                 	db	255
  4350   00FCAE  FF                 	db	255
  4351   00FCAF  FF                 	db	255
  4352   00FCB0  FF                 	db	255
  4353   00FCB1  FF                 	db	255
  4354   00FCB2  FF                 	db	255
  4355   00FCB3  FF                 	db	255
  4356   00FCB4  FF                 	db	255
  4357   00FCB5  FF                 	db	255
  4358   00FCB6  FF                 	db	255
  4359   00FCB7  FF                 	db	255
  4360   00FCB8  FF                 	db	255
  4361   00FCB9  FF                 	db	255
  4362   00FCBA  FF                 	db	255
  4363   00FCBB  FF                 	db	255
  4364   00FCBC  FF                 	db	255
  4365   00FCBD  FF                 	db	255
  4366   00FCBE  FF                 	db	255
  4367   00FCBF  FF                 	db	255
  4368   00FCC0  FF                 	db	255
  4369   00FCC1  FF                 	db	255
  4370   00FCC2  FF                 	db	255
  4371   00FCC3  FF                 	db	255
  4372   00FCC4  FF                 	db	255
  4373   00FCC5  FF                 	db	255
  4374   00FCC6  FF                 	db	255
  4375   00FCC7  FF                 	db	255
  4376   00FCC8  FF                 	db	255
  4377   00FCC9  FF                 	db	255
  4378   00FCCA  FF                 	db	255
  4379   00FCCB  FF                 	db	255
  4380   00FCCC  FF                 	db	255
  4381   00FCCD  FF                 	db	255
  4382   00FCCE  FF                 	db	255
  4383   00FCCF  FF                 	db	255
  4384   00FCD0  FF                 	db	255
  4385   00FCD1  FF                 	db	255
  4386   00FCD2  FF                 	db	255
  4387   00FCD3  FF                 	db	255
  4388   00FCD4  FF                 	db	255
  4389   00FCD5  FF                 	db	255
  4390   00FCD6  FF                 	db	255
  4391   00FCD7  FF                 	db	255
  4392   00FCD8  FF                 	db	255
  4393   00FCD9  FF                 	db	255
  4394   00FCDA  FF                 	db	255
  4395   00FCDB  FF                 	db	255
  4396   00FCDC  FF                 	db	255
  4397   00FCDD  FF                 	db	255
  4398   00FCDE  FF                 	db	255
  4399   00FCDF  FF                 	db	255
  4400   00FCE0  FF                 	db	255
  4401   00FCE1  FF                 	db	255
  4402   00FCE2  FF                 	db	255
  4403   00FCE3  FF                 	db	255
  4404   00FCE4  FF                 	db	255
  4405   00FCE5  FF                 	db	255
  4406   00FCE6  FF                 	db	255
  4407   00FCE7  FF                 	db	255
  4408   00FCE8  FF                 	db	255
  4409   00FCE9  FF                 	db	255
  4410   00FCEA  FF                 	db	255
  4411   00FCEB  FF                 	db	255
  4412   00FCEC  FF                 	db	255
  4413   00FCED  FF                 	db	255
  4414   00FCEE  FF                 	db	255
  4415   00FCEF  FF                 	db	255
  4416   00FCF0  FF                 	db	255
  4417   00FCF1  FF                 	db	255
  4418   00FCF2  FF                 	db	255
  4419   00FCF3  FF                 	db	255
  4420   00FCF4  FF                 	db	255
  4421   00FCF5  FF                 	db	255
  4422   00FCF6  FF                 	db	255
  4423   00FCF7  FF                 	db	255
  4424   00FCF8  FF                 	db	255
  4425   00FCF9  FF                 	db	255
  4426   00FCFA  FF                 	db	255
  4427   00FCFB  FF                 	db	255
  4428   00FCFC  FF                 	db	255
  4429   00FCFD  FF                 	db	255
  4430   00FCFE  FF                 	db	255
  4431   00FCFF  FF                 	db	255
  4432   00FD00  FF                 	db	255
  4433   00FD01  FF                 	db	255
  4434   00FD02  FF                 	db	255
  4435   00FD03  FF                 	db	255
  4436   00FD04  FF                 	db	255
  4437   00FD05  FF                 	db	255
  4438   00FD06  FF                 	db	255
  4439   00FD07  FF                 	db	255
  4440   00FD08  FF                 	db	255
  4441   00FD09  FF                 	db	255
  4442   00FD0A  FF                 	db	255
  4443   00FD0B  FF                 	db	255
  4444   00FD0C  FF                 	db	255
  4445   00FD0D  FF                 	db	255
  4446   00FD0E  FF                 	db	255
  4447   00FD0F  FF                 	db	255
  4448   00FD10  FF                 	db	255
  4449   00FD11  FF                 	db	255
  4450   00FD12  FF                 	db	255
  4451   00FD13  FF                 	db	255
  4452   00FD14  FF                 	db	255
  4453   00FD15  FF                 	db	255
  4454   00FD16  FF                 	db	255
  4455   00FD17  FF                 	db	255
  4456   00FD18  FF                 	db	255
  4457   00FD19  FF                 	db	255
  4458   00FD1A  FF                 	db	255
  4459   00FD1B  FF                 	db	255
  4460   00FD1C  FF                 	db	255
  4461   00FD1D  FF                 	db	255
  4462   00FD1E  FF                 	db	255
  4463   00FD1F  FF                 	db	255
  4464   00FD20  FF                 	db	255
  4465   00FD21  FF                 	db	255
  4466   00FD22  FF                 	db	255
  4467   00FD23  FF                 	db	255
  4468   00FD24  FF                 	db	255
  4469   00FD25  FF                 	db	255
  4470   00FD26  FF                 	db	255
  4471   00FD27  FF                 	db	255
  4472   00FD28  FF                 	db	255
  4473   00FD29  FF                 	db	255
  4474   00FD2A  FF                 	db	255
  4475   00FD2B  FF                 	db	255
  4476   00FD2C  FF                 	db	255
  4477   00FD2D  FF                 	db	255
  4478   00FD2E  FF                 	db	255
  4479   00FD2F  FF                 	db	255
  4480   00FD30  FF                 	db	255
  4481   00FD31  FF                 	db	255
  4482   00FD32  FF                 	db	255
  4483   00FD33  FF                 	db	255
  4484   00FD34  FF                 	db	255
  4485   00FD35  FF                 	db	255
  4486   00FD36  FF                 	db	255
  4487   00FD37  FF                 	db	255
  4488   00FD38  FF                 	db	255
  4489   00FD39  FF                 	db	255
  4490   00FD3A  FF                 	db	255
  4491   00FD3B  FF                 	db	255
  4492   00FD3C  FF                 	db	255
  4493   00FD3D  FF                 	db	255
  4494   00FD3E  FF                 	db	255
  4495   00FD3F  FF                 	db	255
  4496   00FD40  FF                 	db	255
  4497   00FD41  FF                 	db	255
  4498   00FD42  FF                 	db	255
  4499   00FD43  FF                 	db	255
  4500   00FD44  FF                 	db	255
  4501   00FD45  FF                 	db	255
  4502   00FD46  FF                 	db	255
  4503   00FD47  FF                 	db	255
  4504   00FD48  FF                 	db	255
  4505   00FD49  FF                 	db	255
  4506   00FD4A  FF                 	db	255
  4507   00FD4B  FF                 	db	255
  4508   00FD4C  FF                 	db	255
  4509   00FD4D  FF                 	db	255
  4510   00FD4E  FF                 	db	255
  4511   00FD4F  FF                 	db	255
  4512   00FD50  FF                 	db	255
  4513   00FD51  FF                 	db	255
  4514   00FD52  FF                 	db	255
  4515   00FD53  FF                 	db	255
  4516   00FD54  FF                 	db	255
  4517   00FD55  FF                 	db	255
  4518   00FD56  FF                 	db	255
  4519   00FD57  FF                 	db	255
  4520   00FD58  FF                 	db	255
  4521   00FD59  FF                 	db	255
  4522   00FD5A  FF                 	db	255
  4523   00FD5B  FF                 	db	255
  4524   00FD5C  FF                 	db	255
  4525   00FD5D  FF                 	db	255
  4526   00FD5E  FF                 	db	255
  4527   00FD5F  FF                 	db	255
  4528   00FD60  FF                 	db	255
  4529   00FD61  FF                 	db	255
  4530   00FD62  FF                 	db	255
  4531   00FD63  FF                 	db	255
  4532   00FD64  FF                 	db	255
  4533   00FD65  FF                 	db	255
  4534   00FD66  FF                 	db	255
  4535   00FD67  FF                 	db	255
  4536   00FD68  FF                 	db	255
  4537   00FD69  FF                 	db	255
  4538   00FD6A  FF                 	db	255
  4539   00FD6B  FF                 	db	255
  4540   00FD6C  FF                 	db	255
  4541   00FD6D  FF                 	db	255
  4542   00FD6E  FF                 	db	255
  4543   00FD6F  FF                 	db	255
  4544   00FD70  FF                 	db	255
  4545   00FD71  FF                 	db	255
  4546   00FD72  FF                 	db	255
  4547   00FD73  FF                 	db	255
  4548   00FD74  FF                 	db	255
  4549   00FD75  FF                 	db	255
  4550   00FD76  FF                 	db	255
  4551   00FD77  FF                 	db	255
  4552   00FD78  FF                 	db	255
  4553   00FD79  FF                 	db	255
  4554   00FD7A  FF                 	db	255
  4555   00FD7B  FF                 	db	255
  4556   00FD7C  FF                 	db	255
  4557   00FD7D  FF                 	db	255
  4558   00FD7E  FF                 	db	255
  4559   00FD7F  FF                 	db	255
  4560   00FD80  FF                 	db	255
  4561   00FD81  FF                 	db	255
  4562   00FD82  FF                 	db	255
  4563   00FD83  FF                 	db	255
  4564   00FD84  FF                 	db	255
  4565   00FD85  FF                 	db	255
  4566   00FD86  FF                 	db	255
  4567   00FD87  FF                 	db	255
  4568   00FD88  FF                 	db	255
  4569   00FD89  FF                 	db	255
  4570   00FD8A  FF                 	db	255
  4571   00FD8B  FF                 	db	255
  4572   00FD8C  FF                 	db	255
  4573   00FD8D  FF                 	db	255
  4574   00FD8E  FF                 	db	255
  4575   00FD8F  FF                 	db	255
  4576   00FD90  FF                 	db	255
  4577   00FD91  FF                 	db	255
  4578   00FD92  FF                 	db	255
  4579   00FD93  FF                 	db	255
  4580   00FD94  FF                 	db	255
  4581   00FD95  FF                 	db	255
  4582   00FD96  FF                 	db	255
  4583   00FD97  FF                 	db	255
  4584   00FD98  FF                 	db	255
  4585   00FD99  FF                 	db	255
  4586   00FD9A  FF                 	db	255
  4587   00FD9B  FF                 	db	255
  4588   00FD9C  FF                 	db	255
  4589   00FD9D  FF                 	db	255
  4590   00FD9E  FF                 	db	255
  4591   00FD9F  FF                 	db	255
  4592   00FDA0  FF                 	db	255
  4593   00FDA1  FF                 	db	255
  4594   00FDA2  FF                 	db	255
  4595   00FDA3  FF                 	db	255
  4596   00FDA4  FF                 	db	255
  4597   00FDA5  FF                 	db	255
  4598   00FDA6  FF                 	db	255
  4599   00FDA7  FF                 	db	255
  4600   00FDA8  FF                 	db	255
  4601   00FDA9  FF                 	db	255
  4602   00FDAA  FF                 	db	255
  4603   00FDAB  FF                 	db	255
  4604   00FDAC  FF                 	db	255
  4605   00FDAD  FF                 	db	255
  4606   00FDAE  FF                 	db	255
  4607   00FDAF  FF                 	db	255
  4608   00FDB0  FF                 	db	255
  4609   00FDB1  FF                 	db	255
  4610   00FDB2  FF                 	db	255
  4611   00FDB3  FF                 	db	255
  4612   00FDB4  FF                 	db	255
  4613   00FDB5  FF                 	db	255
  4614   00FDB6  FF                 	db	255
  4615   00FDB7  FF                 	db	255
  4616   00FDB8  FF                 	db	255
  4617   00FDB9  FF                 	db	255
  4618   00FDBA  FF                 	db	255
  4619   00FDBB  FF                 	db	255
  4620   00FDBC  FF                 	db	255
  4621   00FDBD  FF                 	db	255
  4622   00FDBE  FF                 	db	255
  4623   00FDBF  FF                 	db	255
  4624   00FDC0  FF                 	db	255
  4625   00FDC1  FF                 	db	255
  4626   00FDC2  FF                 	db	255
  4627   00FDC3  FF                 	db	255
  4628   00FDC4  FF                 	db	255
  4629   00FDC5  FF                 	db	255
  4630   00FDC6  FF                 	db	255
  4631   00FDC7  FF                 	db	255
  4632   00FDC8  FF                 	db	255
  4633   00FDC9  FF                 	db	255
  4634   00FDCA  FF                 	db	255
  4635   00FDCB  FF                 	db	255
  4636   00FDCC  FF                 	db	255
  4637   00FDCD  FF                 	db	255
  4638   00FDCE  FF                 	db	255
  4639   00FDCF  FF                 	db	255
  4640   00FDD0  FF                 	db	255
  4641   00FDD1  FF                 	db	255
  4642   00FDD2  FF                 	db	255
  4643   00FDD3  FF                 	db	255
  4644   00FDD4  FF                 	db	255
  4645   00FDD5  FF                 	db	255
  4646   00FDD6  FF                 	db	255
  4647   00FDD7  FF                 	db	255
  4648   00FDD8  FF                 	db	255
  4649   00FDD9  FF                 	db	255
  4650   00FDDA  FF                 	db	255
  4651   00FDDB  FF                 	db	255
  4652   00FDDC  FF                 	db	255
  4653   00FDDD  FF                 	db	255
  4654   00FDDE  FF                 	db	255
  4655   00FDDF  FF                 	db	255
  4656   00FDE0  FF                 	db	255
  4657   00FDE1  FF                 	db	255
  4658   00FDE2  FF                 	db	255
  4659   00FDE3  FF                 	db	255
  4660   00FDE4  FF                 	db	255
  4661   00FDE5  FF                 	db	255
  4662   00FDE6  FF                 	db	255
  4663   00FDE7  FF                 	db	255
  4664   00FDE8  FF                 	db	255
  4665   00FDE9  FF                 	db	255
  4666   00FDEA  FF                 	db	255
  4667   00FDEB  FF                 	db	255
  4668   00FDEC  FF                 	db	255
  4669   00FDED  FF                 	db	255
  4670   00FDEE  FF                 	db	255
  4671   00FDEF  FF                 	db	255
  4672   00FDF0  FF                 	db	255
  4673   00FDF1  FF                 	db	255
  4674   00FDF2  FF                 	db	255
  4675   00FDF3  FF                 	db	255
  4676   00FDF4  FF                 	db	255
  4677   00FDF5  FF                 	db	255
  4678   00FDF6  FF                 	db	255
  4679   00FDF7  FF                 	db	255
  4680   00FDF8  FF                 	db	255
  4681   00FDF9  FF                 	db	255
  4682   00FDFA  FF                 	db	255
  4683   00FDFB  FF                 	db	255
  4684   00FDFC  FF                 	db	255
  4685   00FDFD  FF                 	db	255
  4686   00FDFE  FF                 	db	255
  4687   00FDFF  FF                 	db	255
  4688   00FE00  FF                 	db	255
  4689   00FE01  FF                 	db	255
  4690   00FE02  FF                 	db	255
  4691   00FE03  FF                 	db	255
  4692   00FE04  FF                 	db	255
  4693   00FE05  FF                 	db	255
  4694   00FE06  FF                 	db	255
  4695   00FE07  FF                 	db	255
  4696   00FE08  FF                 	db	255
  4697   00FE09  FF                 	db	255
  4698   00FE0A  FF                 	db	255
  4699   00FE0B  FF                 	db	255
  4700   00FE0C  FF                 	db	255
  4701   00FE0D  FF                 	db	255
  4702   00FE0E  FF                 	db	255
  4703   00FE0F  FF                 	db	255
  4704   00FE10  FF                 	db	255
  4705   00FE11  FF                 	db	255
  4706   00FE12  FF                 	db	255
  4707   00FE13  FF                 	db	255
  4708   00FE14  FF                 	db	255
  4709   00FE15  FF                 	db	255
  4710   00FE16  FF                 	db	255
  4711   00FE17  FF                 	db	255
  4712   00FE18  FF                 	db	255
  4713   00FE19  FF                 	db	255
  4714   00FE1A  FF                 	db	255
  4715   00FE1B  FF                 	db	255
  4716   00FE1C  FF                 	db	255
  4717   00FE1D  FF                 	db	255
  4718   00FE1E  FF                 	db	255
  4719   00FE1F  FF                 	db	255
  4720   00FE20  FF                 	db	255
  4721   00FE21  FF                 	db	255
  4722   00FE22  FF                 	db	255
  4723   00FE23  FF                 	db	255
  4724   00FE24  FF                 	db	255
  4725   00FE25  FF                 	db	255
  4726   00FE26  FF                 	db	255
  4727   00FE27  FF                 	db	255
  4728   00FE28  FF                 	db	255
  4729   00FE29  FF                 	db	255
  4730   00FE2A  FF                 	db	255
  4731   00FE2B  FF                 	db	255
  4732   00FE2C  FF                 	db	255
  4733   00FE2D  FF                 	db	255
  4734   00FE2E  FF                 	db	255
  4735   00FE2F  FF                 	db	255
  4736   00FE30  FF                 	db	255
  4737   00FE31  FF                 	db	255
  4738   00FE32  FF                 	db	255
  4739   00FE33  FF                 	db	255
  4740   00FE34  FF                 	db	255
  4741   00FE35  FF                 	db	255
  4742   00FE36  FF                 	db	255
  4743   00FE37  FF                 	db	255
  4744   00FE38  FF                 	db	255
  4745   00FE39  FF                 	db	255
  4746   00FE3A  FF                 	db	255
  4747   00FE3B  FF                 	db	255
  4748   00FE3C  FF                 	db	255
  4749   00FE3D  FF                 	db	255
  4750   00FE3E  FF                 	db	255
  4751   00FE3F  FF                 	db	255
  4752   00FE40  FF                 	db	255
  4753   00FE41  FF                 	db	255
  4754   00FE42  FF                 	db	255
  4755   00FE43  FF                 	db	255
  4756   00FE44  FF                 	db	255
  4757   00FE45  FF                 	db	255
  4758   00FE46  FF                 	db	255
  4759   00FE47  FF                 	db	255
  4760   00FE48  FF                 	db	255
  4761   00FE49  FF                 	db	255
  4762   00FE4A  FF                 	db	255
  4763   00FE4B  FF                 	db	255
  4764   00FE4C  FF                 	db	255
  4765   00FE4D  FF                 	db	255
  4766   00FE4E  FF                 	db	255
  4767   00FE4F  FF                 	db	255
  4768   00FE50  FF                 	db	255
  4769   00FE51  FF                 	db	255
  4770   00FE52  FF                 	db	255
  4771   00FE53  FF                 	db	255
  4772   00FE54  FF                 	db	255
  4773   00FE55  FF                 	db	255
  4774   00FE56  FF                 	db	255
  4775   00FE57  FF                 	db	255
  4776   00FE58  FF                 	db	255
  4777   00FE59  FF                 	db	255
  4778   00FE5A  FF                 	db	255
  4779   00FE5B  FF                 	db	255
  4780   00FE5C  FF                 	db	255
  4781   00FE5D  FF                 	db	255
  4782   00FE5E  FF                 	db	255
  4783   00FE5F  FF                 	db	255
  4784   00FE60  FF                 	db	255
  4785   00FE61  FF                 	db	255
  4786   00FE62  FF                 	db	255
  4787   00FE63  FF                 	db	255
  4788   00FE64  FF                 	db	255
  4789   00FE65  FF                 	db	255
  4790   00FE66  FF                 	db	255
  4791   00FE67  FF                 	db	255
  4792   00FE68  FF                 	db	255
  4793   00FE69  FF                 	db	255
  4794   00FE6A  FF                 	db	255
  4795   00FE6B  FF                 	db	255
  4796   00FE6C  FF                 	db	255
  4797   00FE6D  FF                 	db	255
  4798   00FE6E  FF                 	db	255
  4799   00FE6F  FF                 	db	255
  4800   00FE70  FF                 	db	255
  4801   00FE71  FF                 	db	255
  4802   00FE72  FF                 	db	255
  4803   00FE73  FF                 	db	255
  4804   00FE74  FF                 	db	255
  4805   00FE75  FF                 	db	255
  4806   00FE76  FF                 	db	255
  4807   00FE77  FF                 	db	255
  4808   00FE78  FF                 	db	255
  4809   00FE79  FF                 	db	255
  4810   00FE7A  FF                 	db	255
  4811   00FE7B  FF                 	db	255
  4812   00FE7C  FF                 	db	255
  4813   00FE7D  FF                 	db	255
  4814   00FE7E  FF                 	db	255
  4815   00FE7F  FF                 	db	255
  4816   00FE80  FF                 	db	255
  4817   00FE81  FF                 	db	255
  4818   00FE82  FF                 	db	255
  4819   00FE83  FF                 	db	255
  4820   00FE84  FF                 	db	255
  4821   00FE85  FF                 	db	255
  4822   00FE86  FF                 	db	255
  4823   00FE87  FF                 	db	255
  4824   00FE88  FF                 	db	255
  4825   00FE89  FF                 	db	255
  4826   00FE8A  FF                 	db	255
  4827   00FE8B  FF                 	db	255
  4828   00FE8C  FF                 	db	255
  4829   00FE8D  FF                 	db	255
  4830   00FE8E  FF                 	db	255
  4831   00FE8F  FF                 	db	255
  4832   00FE90  FF                 	db	255
  4833   00FE91  FF                 	db	255
  4834   00FE92  FF                 	db	255
  4835   00FE93  FF                 	db	255
  4836   00FE94  FF                 	db	255
  4837   00FE95  FF                 	db	255
  4838   00FE96  FF                 	db	255
  4839   00FE97  FF                 	db	255
  4840   00FE98  FF                 	db	255
  4841   00FE99  FF                 	db	255
  4842   00FE9A  FF                 	db	255
  4843   00FE9B  FF                 	db	255
  4844   00FE9C  FF                 	db	255
  4845   00FE9D  FF                 	db	255
  4846   00FE9E  FF                 	db	255
  4847   00FE9F  FF                 	db	255
  4848   00FEA0  FF                 	db	255
  4849   00FEA1  FF                 	db	255
  4850   00FEA2  FF                 	db	255
  4851   00FEA3  FF                 	db	255
  4852   00FEA4  FF                 	db	255
  4853   00FEA5  FF                 	db	255
  4854   00FEA6  FF                 	db	255
  4855   00FEA7  FF                 	db	255
  4856   00FEA8  FF                 	db	255
  4857   00FEA9  FF                 	db	255
  4858   00FEAA  FF                 	db	255
  4859   00FEAB  FF                 	db	255
  4860   00FEAC  FF                 	db	255
  4861   00FEAD  FF                 	db	255
  4862   00FEAE  FF                 	db	255
  4863   00FEAF  FF                 	db	255
  4864   00FEB0  FF                 	db	255
  4865   00FEB1  FF                 	db	255
  4866   00FEB2  FF                 	db	255
  4867   00FEB3  FF                 	db	255
  4868   00FEB4  FF                 	db	255
  4869   00FEB5  FF                 	db	255
  4870   00FEB6  FF                 	db	255
  4871   00FEB7  FF                 	db	255
  4872   00FEB8  FF                 	db	255
  4873   00FEB9  FF                 	db	255
  4874   00FEBA  FF                 	db	255
  4875   00FEBB  FF                 	db	255
  4876   00FEBC  FF                 	db	255
  4877   00FEBD  FF                 	db	255
  4878   00FEBE  FF                 	db	255
  4879   00FEBF  FF                 	db	255
  4880   00FEC0  FF                 	db	255
  4881   00FEC1  FF                 	db	255
  4882   00FEC2  FF                 	db	255
  4883   00FEC3  FF                 	db	255
  4884   00FEC4  FF                 	db	255
  4885   00FEC5  FF                 	db	255
  4886   00FEC6  FF                 	db	255
  4887   00FEC7  FF                 	db	255
  4888   00FEC8  FF                 	db	255
  4889   00FEC9  FF                 	db	255
  4890   00FECA  FF                 	db	255
  4891   00FECB  FF                 	db	255
  4892   00FECC  FF                 	db	255
  4893   00FECD  FF                 	db	255
  4894   00FECE  FF                 	db	255
  4895   00FECF  FF                 	db	255
  4896   00FED0  FF                 	db	255
  4897   00FED1  FF                 	db	255
  4898   00FED2  FF                 	db	255
  4899   00FED3  FF                 	db	255
  4900   00FED4  FF                 	db	255
  4901   00FED5  FF                 	db	255
  4902   00FED6  FF                 	db	255
  4903   00FED7  FF                 	db	255
  4904   00FED8  FF                 	db	255
  4905   00FED9  FF                 	db	255
  4906   00FEDA  FF                 	db	255
  4907   00FEDB  FF                 	db	255
  4908   00FEDC  FF                 	db	255
  4909   00FEDD  FF                 	db	255
  4910   00FEDE  FF                 	db	255
  4911   00FEDF  FF                 	db	255
  4912   00FEE0  FF                 	db	255
  4913   00FEE1  FF                 	db	255
  4914   00FEE2  FF                 	db	255
  4915   00FEE3  FF                 	db	255
  4916   00FEE4  FF                 	db	255
  4917   00FEE5  FF                 	db	255
  4918   00FEE6  FF                 	db	255
  4919   00FEE7  FF                 	db	255
  4920   00FEE8  FF                 	db	255
  4921   00FEE9  FF                 	db	255
  4922   00FEEA  FF                 	db	255
  4923   00FEEB  FF                 	db	255
  4924   00FEEC  FF                 	db	255
  4925   00FEED  FF                 	db	255
  4926   00FEEE  FF                 	db	255
  4927   00FEEF  FF                 	db	255
  4928   00FEF0  FF                 	db	255
  4929   00FEF1  FF                 	db	255
  4930   00FEF2  FF                 	db	255
  4931   00FEF3  FF                 	db	255
  4932   00FEF4  FF                 	db	255
  4933   00FEF5  FF                 	db	255
  4934   00FEF6  FF                 	db	255
  4935   00FEF7  FF                 	db	255
  4936   00FEF8  FF                 	db	255
  4937   00FEF9  FF                 	db	255
  4938   00FEFA  FF                 	db	255
  4939   00FEFB  FF                 	db	255
  4940   00FEFC  FF                 	db	255
  4941   00FEFD  FF                 	db	255
  4942   00FEFE  FF                 	db	255
  4943   00FEFF  FF                 	db	255
  4944   00FF00  FF                 	db	255
  4945   00FF01  FF                 	db	255
  4946   00FF02  FF                 	db	255
  4947   00FF03  FF                 	db	255
  4948   00FF04  FF                 	db	255
  4949   00FF05  FF                 	db	255
  4950   00FF06  FF                 	db	255
  4951   00FF07  FF                 	db	255
  4952   00FF08  FF                 	db	255
  4953   00FF09  FF                 	db	255
  4954   00FF0A  FF                 	db	255
  4955   00FF0B  FF                 	db	255
  4956   00FF0C  FF                 	db	255
  4957   00FF0D  FF                 	db	255
  4958   00FF0E  FF                 	db	255
  4959   00FF0F  FF                 	db	255
  4960   00FF10  FF                 	db	255
  4961   00FF11  FF                 	db	255
  4962   00FF12  FF                 	db	255
  4963   00FF13  FF                 	db	255
  4964   00FF14  FF                 	db	255
  4965   00FF15  FF                 	db	255
  4966   00FF16  FF                 	db	255
  4967   00FF17  FF                 	db	255
  4968   00FF18  FF                 	db	255
  4969   00FF19  FF                 	db	255
  4970   00FF1A  FF                 	db	255
  4971   00FF1B  FF                 	db	255
  4972   00FF1C  FF                 	db	255
  4973   00FF1D  FF                 	db	255
  4974   00FF1E  FF                 	db	255
  4975   00FF1F  FF                 	db	255
  4976   00FF20  FF                 	db	255
  4977   00FF21  FF                 	db	255
  4978   00FF22  FF                 	db	255
  4979   00FF23  FF                 	db	255
  4980   00FF24  FF                 	db	255
  4981   00FF25  FF                 	db	255
  4982   00FF26  FF                 	db	255
  4983   00FF27  FF                 	db	255
  4984   00FF28  FF                 	db	255
  4985   00FF29  FF                 	db	255
  4986   00FF2A  FF                 	db	255
  4987   00FF2B  FF                 	db	255
  4988   00FF2C  FF                 	db	255
  4989   00FF2D  FF                 	db	255
  4990   00FF2E  FF                 	db	255
  4991   00FF2F  FF                 	db	255
  4992   00FF30  FF                 	db	255
  4993   00FF31  FF                 	db	255
  4994   00FF32  FF                 	db	255
  4995   00FF33  FF                 	db	255
  4996   00FF34  FF                 	db	255
  4997   00FF35  FF                 	db	255
  4998   00FF36  FF                 	db	255
  4999   00FF37  FF                 	db	255
  5000   00FF38  FF                 	db	255
  5001   00FF39  FF                 	db	255
  5002   00FF3A  FF                 	db	255
  5003   00FF3B  FF                 	db	255
  5004   00FF3C  FF                 	db	255
  5005   00FF3D  FF                 	db	255
  5006   00FF3E  FF                 	db	255
  5007   00FF3F  FF                 	db	255
  5008   00FF40  FF                 	db	255
  5009   00FF41  FF                 	db	255
  5010   00FF42  FF                 	db	255
  5011   00FF43  FF                 	db	255
  5012   00FF44  FF                 	db	255
  5013   00FF45  FF                 	db	255
  5014   00FF46  FF                 	db	255
  5015   00FF47  FF                 	db	255
  5016   00FF48  FF                 	db	255
  5017   00FF49  FF                 	db	255
  5018   00FF4A  FF                 	db	255
  5019   00FF4B  FF                 	db	255
  5020   00FF4C  FF                 	db	255
  5021   00FF4D  FF                 	db	255
  5022   00FF4E  FF                 	db	255
  5023   00FF4F  FF                 	db	255
  5024   00FF50  FF                 	db	255
  5025   00FF51  FF                 	db	255
  5026   00FF52  FF                 	db	255
  5027   00FF53  FF                 	db	255
  5028   00FF54  FF                 	db	255
  5029   00FF55  FF                 	db	255
  5030   00FF56  FF                 	db	255
  5031   00FF57  FF                 	db	255
  5032   00FF58  FF                 	db	255
  5033   00FF59  FF                 	db	255
  5034   00FF5A  FF                 	db	255
  5035   00FF5B  FF                 	db	255
  5036   00FF5C  FF                 	db	255
  5037   00FF5D  FF                 	db	255
  5038   00FF5E  FF                 	db	255
  5039   00FF5F  FF                 	db	255
  5040   00FF60  FF                 	db	255
  5041   00FF61  FF                 	db	255
  5042   00FF62  FF                 	db	255
  5043   00FF63  FF                 	db	255
  5044   00FF64  FF                 	db	255
  5045   00FF65  FF                 	db	255
  5046   00FF66  FF                 	db	255
  5047   00FF67  FF                 	db	255
  5048   00FF68  FF                 	db	255
  5049   00FF69  FF                 	db	255
  5050   00FF6A  FF                 	db	255
  5051   00FF6B  FF                 	db	255
  5052   00FF6C  FF                 	db	255
  5053   00FF6D  FF                 	db	255
  5054   00FF6E  FF                 	db	255
  5055   00FF6F  FF                 	db	255
  5056   00FF70                     __end_of_eventTable:
  5057                           	callstack 0
  5058   000000                     _paramBlock_absaddr	set	2080
  5059                           
  5060                           	psect	_paramBlock_text
  5061   000820                     __p_paramBlock_text:
  5062                           	callstack 0
  5063   000820                     _paramBlock:
  5064                           	callstack 0
  5065   000820  A5                 	db	165
  5066   000821  61                 	db	97
  5067   000822  20                 	db	32
  5068   000823  FF                 	db	255
  5069   000824  14                 	db	20
  5070   000825  7F                 	db	127
  5071   000826  04                 	db	4
  5072   000827  0B                 	db	11
  5073   000828  0F                 	db	15
  5074   000829  01                 	db	1
  5075   00082A  00                 	db	0
  5076   00082B  08                 	db	8
  5077   00082C  00                 	db	0
  5078   00082D  00                 	db	0
  5079   00082E  00                 	db	0
  5080   00082F  00                 	db	0
  5081   000830  00                 	db	0
  5082   000831  00                 	db	0
  5083   000832  01                 	db	1
  5084   000833  0E                 	db	14
  5085   000834  00                 	db	0
  5086   000835  00                 	db	0
  5087   000836  00                 	db	0
  5088   000837  00                 	db	0
  5089   000838  14                 	db	20
  5090   000839  00                 	db	0
  5091   00083A  48                 	db	72
  5092   00083B  08                 	db	8
  5093   00083C  00                 	db	0
  5094   00083D  00                 	db	0
  5095   00083E  52                 	db	82
  5096   00083F  03                 	db	3
  5097   000840                     __end_of_paramBlock:
  5098                           	callstack 0
  5099   000000                     _name_absaddr	set	2120
  5100                           
  5101                           	psect	_name_text
  5102   000848                     __p_name_text:
  5103                           	callstack 0
  5104   000848                     _name:
  5105                           	callstack 0
  5106   000848  4D                 	db	77
  5107   000849  49                 	db	73
  5108   00084A  4F                 	db	79
  5109   00084B  20                 	db	32
  5110   00084C  20                 	db	32
  5111   00084D  20                 	db	32
  5112   00084E  20                 	db	32
  5113   00084F  00                 	db	0
  5114   000850                     __end_of_name:
  5115                           	callstack 0
  5116   000000                     _COMSTAT	set	3953
  5117   000000                     _PIR5bits	set	3959
  5118   000000                     _PIE5bits	set	3958
  5119   000000                     _TXBIEbits	set	3711
  5120   000000                     _BIE0	set	3710
  5121   000000                     _RXF0SIDL	set	3809
  5122   000000                     _RXM0SIDH	set	3832
  5123   000000                     _CIOCON	set	3952
  5124   000000                     _ECANCON	set	3954
  5125   000000                     _IPR5	set	3960
  5126   000000                     _EECON2	set	3966
  5127   000000                     _TMR0L	set	4054
  5128   000000                     _TMR0H	set	4055
  5129   000000                     _TMR3L	set	4018
  5130   000000                     _TMR3H	set	4019
  5131   000000                     _TMR1L	set	4046
  5132   000000                     _TMR1H	set	4047
  5133   000000                     _T3CONbits	set	4017
  5134   000000                     _ANCON1	set	3932
  5135   000000                     _ANCON0	set	3933
  5136   000000                     _B0CON	set	3712
  5137                           
  5138                           	psect	nvBANK0
  5139   0000D1                     __pnvBANK0:
  5140                           	callstack 0
  5141   0000D1                     _flashBlock:
  5142                           	callstack 0
  5143   0000D1                     	ds	2
  5144   000000                     _TXB2CONbits	set	3840
  5145   000000                     _TXB1CONbits	set	3856
  5146   000000                     _TXB0CONbits	set	3872
  5147   000000                     _COMSTATbits	set	3953
  5148   000000                     _EECON1	set	3967
  5149   000000                     _T0CONbits	set	4053
  5150   000000                     _LATBbits	set	3978
  5151   000000                     _TRISAbits	set	3986
  5152   000000                     _TRISBbits	set	3987
  5153   000000                     _PORTAbits	set	3968
  5154   000000                     _BRGCON1	set	3651
  5155   000000                     _BSEL0	set	3709
  5156   000000                     _WPUB	set	3931
  5157   000000                     _INTCON2bits	set	4081
  5158   000000                     _TBLPTR	set	4086
  5159   000000                     _TABLAT	set	4085
  5160   000000                     _TBLPTRU	set	4088
  5161   000000                     _INTCONbits	set	4082
  5162   000000                     _CANSTATbits	set	3950
  5163   000000                     _CANCON	set	3951
  5164   000000                     _EEDATA	set	3955
  5165   000000                     _EEADR	set	3956
  5166   000000                     _EEADRH	set	3957
  5167   000000                     _EECON1bits	set	3967
  5168   000000                     _PORTA	set	3968
  5169   000000                     _LATA	set	3977
  5170   000000                     _TRISA	set	3986
  5171   000000                     _RXB0CON	set	3936
  5172   000000                     _OSCTUNEbits	set	3995
  5173   000000                     _PIE1bits	set	3997
  5174   000000                     _PIR1bits	set	3998
  5175   000000                     _TRISC	set	3988
  5176   000000                     _TRISB	set	3987
  5177   000000                     _PIE2bits	set	4000
  5178   000000                     _PIR2bits	set	4001
  5179   000000                     _T1GCONbits	set	4010
  5180   000000                     _LATC	set	3979
  5181   000000                     _LATB	set	3978
  5182   000000                     _PORTC	set	3970
  5183   000000                     _PORTB	set	3969
  5184   000000                     _T3GCONbits	set	4016
  5185   000000                     _T1CONbits	set	4045
  5186   000000                     _RCONbits	set	4048
  5187   000000                     _T0CON	set	4053
  5188   000000                     _EEIF	set	32190
  5189   000000                     _RXFCON0	set	3654
  5190   000000                     _RXFBCON0	set	3697
  5191   000000                     _BRGCON3	set	3653
  5192   000000                     _BRGCON2	set	3652
  5193   000000                     _TXB2CON	set	3840
  5194   000000                     _TXB1CON	set	3856
  5195   000000                     _TXB0CON	set	3872
  5196   000000                     _RXM0EIDL	set	3835
  5197   000000                     _RXM0EIDH	set	3834
  5198   000000                     _RXM0SIDL	set	3833
  5199   000000                     _RXB1CON	set	3888
  5200   000000                     _MSEL0	set	3705
  5201   000000                     _B1CON	set	3728
  5202   000000                     _B2CON	set	3744
  5203   000000                     _B3CON	set	3760
  5204   000000                     _B4CON	set	3776
  5205   000000                     _B5CON	set	3792
  5206   000000                     _TXB0SIDL	set	3874
  5207   000000                     _TXB0SIDH	set	3873
  5208   000000                     _TXB0DLC	set	3877
  5209   000000                     _TXB0D7	set	3885
  5210   000000                     _TXB0D6	set	3884
  5211   000000                     _TXB0D5	set	3883
  5212   000000                     _TXB0D4	set	3882
  5213   000000                     _TXB0D3	set	3881
  5214   000000                     _TXB0D2	set	3880
  5215   000000                     _TXB0D1	set	3879
  5216   000000                     _TXB0D0	set	3878
  5217   000000                     _TXB1SIDL	set	3858
  5218   000000                     _TXB1SIDH	set	3857
  5219   000000                     _TXB1DLC	set	3861
  5220   000000                     _TXB2SIDL	set	3842
  5221   000000                     _TXB2SIDH	set	3841
  5222   000000                     _TXB2DLC	set	3845
  5223                           
  5224                           ; #config settings
  5225                           
  5226                           	psect	cinit
  5227   00AEE6                     __pcinit:
  5228                           	callstack 0
  5229   00AEE6                     start_initialization:
  5230                           	callstack 0
  5231   00AEE6                     __initialization:
  5232                           	callstack 0
  5233                           
  5234                           ; Clear objects allocated to BIGRAM (928 bytes)
  5235   00AEE6  EE05  F048         	lfsr	0,__pbssBIGRAM
  5236   00AEEA  EE13 F0A0          	lfsr	1,928
  5237   00AEEE                     clear_0:
  5238   00AEEE  6AEE               	clrf	postinc0,c
  5239   00AEF0  50E5               	movf	postdec1,w,c
  5240   00AEF2  50E1               	movf	fsr1l,w,c
  5241   00AEF4  E1FC               	bnz	clear_0
  5242   00AEF6  50E2               	movf	fsr1h,w,c
  5243   00AEF8  E1FA               	bnz	clear_0
  5244                           
  5245                           ; Clear objects allocated to BANK5 (72 bytes)
  5246   00AEFA  EE05  F000         	lfsr	0,__pbssBANK5
  5247   00AEFE  0E48               	movlw	72
  5248   00AF00                     clear_1:
  5249   00AF00  6AEE               	clrf	postinc0,c
  5250   00AF02  06E8               	decf	wreg,f,c
  5251   00AF04  E1FD               	bnz	clear_1
  5252                           
  5253                           ; Clear objects allocated to BANK4 (192 bytes)
  5254   00AF06  EE04  F000         	lfsr	0,__pbssBANK4
  5255   00AF0A  0EC0               	movlw	192
  5256   00AF0C                     clear_2:
  5257   00AF0C  6AEE               	clrf	postinc0,c
  5258   00AF0E  06E8               	decf	wreg,f,c
  5259   00AF10  E1FD               	bnz	clear_2
  5260                           
  5261                           ; Clear objects allocated to BANK3 (200 bytes)
  5262   00AF12  EE03  F000         	lfsr	0,__pbssBANK3
  5263   00AF16  0EC8               	movlw	200
  5264   00AF18                     clear_3:
  5265   00AF18  6AEE               	clrf	postinc0,c
  5266   00AF1A  06E8               	decf	wreg,f,c
  5267   00AF1C  E1FD               	bnz	clear_3
  5268                           
  5269                           ; Clear objects allocated to BANK2 (204 bytes)
  5270   00AF1E  EE02  F000         	lfsr	0,__pbssBANK2
  5271   00AF22  0ECC               	movlw	204
  5272   00AF24                     clear_4:
  5273   00AF24  6AEE               	clrf	postinc0,c
  5274   00AF26  06E8               	decf	wreg,f,c
  5275   00AF28  E1FD               	bnz	clear_4
  5276                           
  5277                           ; Clear objects allocated to BANK1 (190 bytes)
  5278   00AF2A  EE01  F000         	lfsr	0,__pbssBANK1
  5279   00AF2E  0EBE               	movlw	190
  5280   00AF30                     clear_5:
  5281   00AF30  6AEE               	clrf	postinc0,c
  5282   00AF32  06E8               	decf	wreg,f,c
  5283   00AF34  E1FD               	bnz	clear_5
  5284                           
  5285                           ; Clear objects allocated to BANK0 (39 bytes)
  5286   00AF36  EE00  F0AA         	lfsr	0,__pbssBANK0
  5287   00AF3A  0E27               	movlw	39
  5288   00AF3C                     clear_6:
  5289   00AF3C  6AEE               	clrf	postinc0,c
  5290   00AF3E  06E8               	decf	wreg,f,c
  5291   00AF40  E1FD               	bnz	clear_6
  5292                           
  5293                           ; Clear objects allocated to COMRAM (42 bytes)
  5294   00AF42  EE00  F001         	lfsr	0,__pbssCOMRAM
  5295   00AF46  0E2A               	movlw	42
  5296   00AF48                     clear_7:
  5297   00AF48  6AEE               	clrf	postinc0,c
  5298   00AF4A  06E8               	decf	wreg,f,c
  5299   00AF4C  E1FD               	bnz	clear_7
  5300   00AF4E                     end_of_initialization:
  5301                           	callstack 0
  5302   00AF4E                     __end_of__initialization:
  5303                           	callstack 0
  5304   00AF4E  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5305   00AF50  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5306   00AF52  0100               	movlb	0
  5307   00AF54  EF33  F05E         	goto	_main	;jump to C main() function
  5308                           
  5309                           	psect	bssCOMRAM
  5310   000001                     __pbssCOMRAM:
  5311                           	callstack 0
  5312   000001                     _targetPos:
  5313                           	callstack 0
  5314   000001                     	ds	16
  5315   000011                     _enumerationStartTime:
  5316                           	callstack 0
  5317   000011                     	ds	4
  5318   000015                     _canTransmitTimeout:
  5319                           	callstack 0
  5320   000015                     	ds	4
  5321   000019                     _startWait:
  5322                           	callstack 0
  5323   000019                     	ds	4
  5324   00001D                     _startTime:
  5325                           	callstack 0
  5326   00001D                     	ds	4
  5327   000021                     _timedResponseCallback:
  5328                           	callstack 0
  5329   000021                     	ds	2
  5330   000023                     _EnumerationState:
  5331                           	callstack 0
  5332   000023                     	ds	1
  5333   000024                     _eeBootFlag:
  5334                           	callstack 0
  5335   000024                     	ds	1
  5336   000025                     _expedited:
  5337                           	callstack 0
  5338   000025                     	ds	1
  5339   000026                     _rxQueue:
  5340                           	callstack 0
  5341   000026                     	ds	5
  5342                           
  5343                           	psect	bssBANK0
  5344   0000AA                     __pbssBANK0:
  5345                           	callstack 0
  5346   0000AA                     _pbTimer:
  5347                           	callstack 0
  5348   0000AA                     	ds	4
  5349   0000AE                     _flashCounter:
  5350                           	callstack 0
  5351   0000AE                     	ds	2
  5352   0000B0                     _ledState:
  5353                           	callstack 0
  5354   0000B0                     	ds	2
  5355   0000B2                     _servoActive:
  5356                           	callstack 0
  5357   0000B2                     	ds	2
  5358   0000B4                     _nn:
  5359                           	callstack 0
  5360   0000B4                     	ds	2
  5361   0000B6                     _timedResponseOpcode:
  5362                           	callstack 0
  5363   0000B6                     	ds	1
  5364   0000B7                     _enumerationState:
  5365                           	callstack 0
  5366   0000B7                     	ds	1
  5367   0000B8                     _canTransmitFailed:
  5368                           	callstack 0
  5369   0000B8                     	ds	1
  5370   0000B9                     _canId:
  5371                           	callstack 0
  5372   0000B9                     	ds	1
  5373   0000BA                     _flashFlags:
  5374                           	callstack 0
  5375   0000BA                     	ds	1
  5376   0000BB                     _timedResponseStep:
  5377                           	callstack 0
  5378   0000BB                     	ds	1
  5379   0000BC                     _timedResponseType:
  5380                           	callstack 0
  5381   0000BC                     	ds	1
  5382   0000BD                     _timedResponseAllServicesFlag:
  5383                           	callstack 0
  5384   0000BD                     	ds	1
  5385   0000BE                     _timedResponseServiceIndex:
  5386                           	callstack 0
  5387   0000BE                     	ds	1
  5388   0000BF                     _heartbeatSequence:
  5389                           	callstack 0
  5390   0000BF                     	ds	1
  5391   0000C0                     _pbWasPushed:
  5392                           	callstack 0
  5393   0000C0                     	ds	1
  5394   0000C1                     _setupModePreviousMode:
  5395                           	callstack 0
  5396   0000C1                     	ds	1
  5397   0000C2                     _last_mode_flags:
  5398                           	callstack 0
  5399   0000C2                     	ds	1
  5400   0000C3                     _last_mode_state:
  5401                           	callstack 0
  5402   0000C3                     	ds	1
  5403   0000C4                     _mode_state:
  5404                           	callstack 0
  5405   0000C4                     	ds	1
  5406   0000C5                     _timerExtension2:
  5407                           	callstack 0
  5408   0000C5                     	ds	1
  5409   0000C6                     _timerExtension1:
  5410                           	callstack 0
  5411   0000C6                     	ds	1
  5412   0000C7                     _bootloaderVersion:
  5413                           	callstack 0
  5414   0000C7                     	ds	1
  5415   0000C8                     _bootloaderType:
  5416                           	callstack 0
  5417   0000C8                     	ds	1
  5418   0000C9                     _servoInBlock:
  5419                           	callstack 0
  5420   0000C9                     	ds	1
  5421   0000CA                     _expeditedWriteIndex:
  5422                           	callstack 0
  5423   0000CA                     	ds	1
  5424   0000CB                     _expeditedReadIndex:
  5425                           	callstack 0
  5426   0000CB                     	ds	1
  5427   0000CC                     _normalWriteIndex:
  5428                           	callstack 0
  5429   0000CC                     	ds	1
  5430   0000CD                     _normalReadIndex:
  5431                           	callstack 0
  5432   0000CD                     	ds	1
  5433   0000CE                     _io@inputs$F849:
  5434                           	callstack 0
  5435   0000CE                     	ds	1
  5436   0000CF                     _io:
  5437                           	callstack 0
  5438   0000CF                     	ds	1
  5439   0000D0                     _started:
  5440                           	callstack 0
  5441   0000D0                     	ds	1
  5442                           
  5443                           	psect	bssBANK1
  5444   000100                     __pbssBANK1:
  5445                           	callstack 0
  5446   000100                     _stepsPerPollSpeed:
  5447                           	callstack 0
  5448   000100                     	ds	16
  5449   000110                     _servoState:
  5450                           	callstack 0
  5451   000110                     	ds	16
  5452   000120                     _flashDelays:
  5453                           	callstack 0
  5454   000120                     	ds	16
  5455   000130                     _currentPos:
  5456                           	callstack 0
  5457   000130                     	ds	16
  5458   000140                     _flashFlushTime:
  5459                           	callstack 0
  5460   000140                     	ds	4
  5461   000144                     _timedResponseTime:
  5462                           	callstack 0
  5463   000144                     	ds	4
  5464   000148                     _ledTimer:
  5465                           	callstack 0
  5466   000148                     	ds	4
  5467   00014C                     _uptimeTimer:
  5468                           	callstack 0
  5469   00014C                     	ds	4
  5470   000150                     _heartbeatTimer:
  5471                           	callstack 0
  5472   000150                     	ds	4
  5473   000154                     _lastActionPollTime:
  5474                           	callstack 0
  5475   000154                     	ds	4
  5476   000158                     _lastInputScanTime:
  5477                           	callstack 0
  5478   000158                     	ds	4
  5479   00015C                     _lastServoStartTime:
  5480                           	callstack 0
  5481   00015C                     	ds	4
  5482   000160                     _previousNN:
  5483                           	callstack 0
  5484   000160                     	ds	2
  5485   000162                     _transport:
  5486                           	callstack 0
  5487   000162                     	ds	2
  5488   000164                     _timedResponseDelay:
  5489                           	callstack 0
  5490   000164                     	ds	1
  5491   000165                     _mode_flags:
  5492                           	callstack 0
  5493   000165                     	ds	1
  5494   000166                     _canDiagnostics:
  5495                           	callstack 0
  5496   000166                     	ds	38
  5497   00018C                     _mnsDiagnostics:
  5498                           	callstack 0
  5499   00018C                     	ds	14
  5500   00019A                     _tmpMessage:
  5501                           	callstack 0
  5502   00019A                     	ds	9
  5503   0001A3                     _nvDiagnostics:
  5504                           	callstack 0
  5505   0001A3                     	ds	6
  5506   0001A9                     _txQueue:
  5507                           	callstack 0
  5508   0001A9                     	ds	5
  5509   0001AE                     _producerDiagnostics:
  5510                           	callstack 0
  5511   0001AE                     	ds	4
  5512   0001B2                     _teachDiagnostics:
  5513                           	callstack 0
  5514   0001B2                     	ds	4
  5515   0001B6                     _ackDiagnostics:
  5516                           	callstack 0
  5517   0001B6                     	ds	4
  5518   0001BA                     _consumer2QDiagnostics:
  5519                           	callstack 0
  5520   0001BA                     	ds	4
  5521                           
  5522                           	psect	bssBANK2
  5523   000200                     __pbssBANK2:
  5524                           	callstack 0
  5525   000200                     _speed:
  5526                           	callstack 0
  5527   000200                     	ds	32
  5528   000220                     _evs:
  5529                           	callstack 0
  5530   000220                     	ds	20
  5531   000234                     _enumerationResults:
  5532                           	callstack 0
  5533   000234                     	ds	16
  5534   000244                     _bounceState:
  5535                           	callstack 0
  5536   000244                     	ds	16
  5537   000254                     _loopCount:
  5538                           	callstack 0
  5539   000254                     	ds	16
  5540   000264                     _pollCount:
  5541                           	callstack 0
  5542   000264                     	ds	16
  5543   000274                     _pollsPerStepSpeed:
  5544                           	callstack 0
  5545   000274                     	ds	16
  5546   000284                     _delayCount:
  5547                           	callstack 0
  5548   000284                     	ds	16
  5549   000294                     _inputState:
  5550                           	callstack 0
  5551   000294                     	ds	16
  5552   0002A4                     _pulseDelays:
  5553                           	callstack 0
  5554   0002A4                     	ds	16
  5555   0002B4                     _outputState:
  5556                           	callstack 0
  5557   0002B4                     	ds	16
  5558   0002C4                     _expeditedQueueBuf:
  5559                           	callstack 0
  5560   0002C4                     	ds	8
  5561                           
  5562                           	psect	bssBANK3
  5563   000300                     __pbssBANK3:
  5564                           	callstack 0
  5565   000300                     _happening2Event:
  5566                           	callstack 0
  5567   000300                     	ds	72
  5568   000348                     _flashBuffer:
  5569                           	callstack 0
  5570   000348                     	ds	64
  5571   000388                     _ticksWhenStopped:
  5572                           	callstack 0
  5573   000388                     	ds	64
  5574                           
  5575                           	psect	bssBANK4
  5576   000400                     __pbssBANK4:
  5577                           	callstack 0
  5578   000400                     _nvCache:
  5579                           	callstack 0
  5580   000400                     	ds	128
  5581   000480                     _normalQueueBuf:
  5582                           	callstack 0
  5583   000480                     	ds	64
  5584                           
  5585                           	psect	bssBANK5
  5586   000500                     __pbssBANK5:
  5587                           	callstack 0
  5588   000500                     _txBuffers:
  5589                           	callstack 0
  5590   000500                     	ds	72
  5591                           
  5592                           	psect	bssBIGRAM
  5593   000548                     __pbssBIGRAM:
  5594                           	callstack 0
  5595   000548                     _eventChains:
  5596                           	callstack 0
  5597   000548                     	ds	640
  5598   0007C8                     _rxBuffers:
  5599                           	callstack 0
  5600   0007C8                     	ds	288
  5601                           
  5602                           	psect	cstackBANK2
  5603   0002CC                     __pcstackBANK2:
  5604                           	callstack 0
  5605   0002CC                     ??_consumer2QProcessMessage:
  5606   0002CC                     ??_bootProcessMessage:
  5607   0002CC                     ??_ackEventProcessMessage:
  5608   0002CC                     ??_mnsProcessMessage:
  5609   0002CC                     ??_nvProcessMessage:
  5610   0002CC                     ??_canProcessMessage:
  5611   0002CC                     ??_teachProcessMessage:
  5612   0002CC                     ??_producerProcessMessage:
  5613                           
  5614                           ; 1 bytes @ 0x0
  5615   0002CC                     	ds	2
  5616   0002CE                     ackEventProcessMessage@eventEN:
  5617                           	callstack 0
  5618   0002CE                     nvProcessMessage@valueOrError:
  5619                           	callstack 0
  5620                           
  5621                           ; 2 bytes @ 0x2
  5622   0002CE                     	ds	1
  5623   0002CF                     consumer2QProcessMessage@end:
  5624                           	callstack 0
  5625                           
  5626                           ; 1 bytes @ 0x3
  5627   0002CF                     	ds	1
  5628   0002D0                     consumer2QProcessMessage@change:
  5629                           	callstack 0
  5630   0002D0                     ackEventProcessMessage@eventIndex:
  5631                           	callstack 0
  5632                           
  5633                           ; 1 bytes @ 0x4
  5634   0002D0                     	ds	1
  5635   0002D1                     consumer2QProcessMessage@opc:
  5636                           	callstack 0
  5637   0002D1                     ackEventProcessMessage@eventNN:
  5638                           	callstack 0
  5639                           
  5640                           ; 2 bytes @ 0x5
  5641   0002D1                     	ds	1
  5642   0002D2                     consumer2QProcessMessage@enn:
  5643                           	callstack 0
  5644   0002D2                     producerProcessMessage@ev:
  5645                           	callstack 0
  5646                           
  5647                           ; 2 bytes @ 0x6
  5648   0002D2                     	ds	2
  5649   0002D4                     consumer2QProcessMessage@tableIndex:
  5650                           	callstack 0
  5651   0002D4                     producerProcessMessage@h:
  5652                           	callstack 0
  5653                           
  5654                           ; 1 bytes @ 0x8
  5655   0002D4                     	ds	1
  5656   0002D5                     consumer2QProcessMessage@nextAction:
  5657                           	callstack 0
  5658   0002D5                     producerProcessMessage@index:
  5659                           	callstack 0
  5660                           
  5661                           ; 1 bytes @ 0x9
  5662   0002D5                     	ds	1
  5663   0002D6                     consumer2QProcessMessage@firstAction:
  5664                           	callstack 0
  5665                           
  5666                           ; 1 bytes @ 0xA
  5667   0002D6                     	ds	1
  5668   0002D7                     consumer2QProcessMessage@nextSimultaneous:
  5669                           	callstack 0
  5670                           
  5671                           ; 1 bytes @ 0xB
  5672   0002D7                     	ds	1
  5673   0002D8                     consumer2QProcessMessage@io:
  5674                           	callstack 0
  5675                           
  5676                           ; 1 bytes @ 0xC
  5677   0002D8                     	ds	1
  5678   0002D9                     consumer2QProcessMessage@masked_action:
  5679                           	callstack 0
  5680                           
  5681                           ; 1 bytes @ 0xD
  5682   0002D9                     	ds	1
  5683   0002DA                     consumer2QProcessMessage@ca:
  5684                           	callstack 0
  5685                           
  5686                           ; 1 bytes @ 0xE
  5687   0002DA                     	ds	1
  5688   0002DB                     consumer2QProcessMessage@e:
  5689                           	callstack 0
  5690                           
  5691                           ; 1 bytes @ 0xF
  5692   0002DB                     	ds	1
  5693   0002DC                     consumer2QProcessMessage@action:
  5694                           	callstack 0
  5695                           
  5696                           ; 1 bytes @ 0x10
  5697   0002DC                     	ds	14
  5698   0002EA                     mnsProcessMessage@i:
  5699                           	callstack 0
  5700                           
  5701                           ; 1 bytes @ 0x1E
  5702   0002EA                     	ds	1
  5703   0002EB                     _mnsProcessMessage$3632:
  5704                           	callstack 0
  5705                           
  5706                           ; 1 bytes @ 0x1F
  5707   0002EB                     	ds	1
  5708   0002EC                     mnsProcessMessage@d:
  5709                           	callstack 0
  5710                           
  5711                           ; 2 bytes @ 0x20
  5712   0002EC                     	ds	2
  5713   0002EE                     mnsProcessMessage@newMode:
  5714                           	callstack 0
  5715                           
  5716                           ; 1 bytes @ 0x22
  5717   0002EE                     	ds	1
  5718   0002EF                     ??_poll:
  5719                           
  5720                           ; 1 bytes @ 0x23
  5721   0002EF                     	ds	4
  5722   0002F3                     poll@handled:
  5723                           	callstack 0
  5724                           
  5725                           ; 1 bytes @ 0x27
  5726   0002F3                     	ds	1
  5727   0002F4                     poll@i:
  5728                           	callstack 0
  5729                           
  5730                           ; 1 bytes @ 0x28
  5731   0002F4                     	ds	1
  5732   0002F5                     poll@m:
  5733                           	callstack 0
  5734                           
  5735                           ; 9 bytes @ 0x29
  5736   0002F5                     	ds	9
  5737                           
  5738                           	psect	cstackBANK1
  5739   0001BE                     __pcstackBANK1:
  5740                           	callstack 0
  5741   0001BE                     ??_rebuildHashtable:
  5742   0001BE                     sendMessage@len:
  5743                           	callstack 0
  5744   0001BE                     writeNVM@type:
  5745                           	callstack 0
  5746   0001BE                     findEvent@nodeNumber:
  5747                           	callstack 0
  5748                           
  5749                           ; 2 bytes @ 0x0
  5750   0001BE                     	ds	1
  5751   0001BF                     ??_configIO:
  5752   0001BF                     ??_nvFactoryReset:
  5753   0001BF                     saveNV@value:
  5754                           	callstack 0
  5755   0001BF                     sendMessage@data1:
  5756                           	callstack 0
  5757   0001BF                     setNewCanId@newCanId:
  5758                           	callstack 0
  5759                           
  5760                           ; 1 bytes @ 0x1
  5761   0001BF                     	ds	1
  5762   0001C0                     ??_saveNV:
  5763   0001C0                     ??_processEnumeration:
  5764   0001C0                     sendMessage@data2:
  5765                           	callstack 0
  5766   0001C0                     findEvent@eventNumber:
  5767                           	callstack 0
  5768                           
  5769                           ; 2 bytes @ 0x2
  5770   0001C0                     	ds	1
  5771   0001C1                     nvFactoryReset@i:
  5772                           	callstack 0
  5773   0001C1                     sendMessage@data3:
  5774                           	callstack 0
  5775   0001C1                     _configIO$8093:
  5776                           	callstack 0
  5777   0001C1                     rebuildHashtable@ev:
  5778                           	callstack 0
  5779                           
  5780                           ; 2 bytes @ 0x3
  5781   0001C1                     	ds	1
  5782   0001C2                     ??_findEvent:
  5783   0001C2                     saveNV@index:
  5784                           	callstack 0
  5785   0001C2                     sendMessage@data4:
  5786                           	callstack 0
  5787   0001C2                     _configIO$746:
  5788                           	callstack 0
  5789                           
  5790                           ; 2 bytes @ 0x4
  5791   0001C2                     	ds	1
  5792   0001C3                     defaultNVs@type:
  5793                           	callstack 0
  5794   0001C3                     sendMessage@data5:
  5795                           	callstack 0
  5796   0001C3                     rebuildHashtable@hash:
  5797                           	callstack 0
  5798                           
  5799                           ; 1 bytes @ 0x5
  5800   0001C3                     	ds	1
  5801   0001C4                     ??_defaultNVs:
  5802   0001C4                     configIO@action:
  5803                           	callstack 0
  5804   0001C4                     sendMessage@data6:
  5805                           	callstack 0
  5806   0001C4                     processEnumeration@enumResult:
  5807                           	callstack 0
  5808   0001C4                     rebuildHashtable@happening:
  5809                           	callstack 0
  5810   0001C4                     findEvent@nn:
  5811                           	callstack 0
  5812                           
  5813                           ; 2 bytes @ 0x6
  5814   0001C4                     	ds	1
  5815   0001C5                     configIO@type:
  5816                           	callstack 0
  5817   0001C5                     sendMessage@data7:
  5818                           	callstack 0
  5819   0001C5                     processEnumeration@newCanId:
  5820                           	callstack 0
  5821   0001C5                     rebuildHashtable@chainIdx:
  5822                           	callstack 0
  5823                           
  5824                           ; 1 bytes @ 0x7
  5825   0001C5                     	ds	1
  5826   0001C6                     configIO@i:
  5827                           	callstack 0
  5828   0001C6                     defaultNVs@io:
  5829                           	callstack 0
  5830   0001C6                     sendMessage3@opc:
  5831                           	callstack 0
  5832   0001C6                     sendMessage4@data1:
  5833                           	callstack 0
  5834   0001C6                     sendMessage5@data1:
  5835                           	callstack 0
  5836   0001C6                     sendMessage6@data1:
  5837                           	callstack 0
  5838   0001C6                     sendMessage7@data1:
  5839                           	callstack 0
  5840   0001C6                     processEnumeration@i:
  5841                           	callstack 0
  5842   0001C6                     rebuildHashtable@tableIndex:
  5843                           	callstack 0
  5844   0001C6                     findEvent@en:
  5845                           	callstack 0
  5846                           
  5847                           ; 2 bytes @ 0x8
  5848   0001C6                     	ds	1
  5849   0001C7                     ??_clearAllEvents:
  5850   0001C7                     ??_doNnevn:
  5851   0001C7                     ??_removeTableEntry:
  5852   0001C7                     ??_powerUp:
  5853   0001C7                     defaultNVs@i:
  5854                           	callstack 0
  5855   0001C7                     sendMessage4@data2:
  5856                           	callstack 0
  5857   0001C7                     sendMessage5@data2:
  5858                           	callstack 0
  5859   0001C7                     sendMessage6@data2:
  5860                           	callstack 0
  5861   0001C7                     sendMessage7@data2:
  5862                           	callstack 0
  5863   0001C7                     doRqevn@count:
  5864                           	callstack 0
  5865   0001C7                     canReceiveMessage@m:
  5866                           	callstack 0
  5867                           
  5868                           ; 2 bytes @ 0x9
  5869   0001C7                     	ds	1
  5870   0001C8                     sendMessage4@data3:
  5871                           	callstack 0
  5872   0001C8                     sendMessage5@data3:
  5873                           	callstack 0
  5874   0001C8                     sendMessage6@data3:
  5875                           	callstack 0
  5876   0001C8                     sendMessage7@data3:
  5877                           	callstack 0
  5878   0001C8                     doRqevn@i:
  5879                           	callstack 0
  5880   0001C8                     findEvent@hash:
  5881                           	callstack 0
  5882                           
  5883                           ; 1 bytes @ 0xA
  5884   0001C8                     	ds	1
  5885   0001C9                     sendMessage4@data4:
  5886                           	callstack 0
  5887   0001C9                     sendMessage5@data4:
  5888                           	callstack 0
  5889   0001C9                     sendMessage6@data4:
  5890                           	callstack 0
  5891   0001C9                     sendMessage7@data4:
  5892                           	callstack 0
  5893   0001C9                     findEvent@chainIdx:
  5894                           	callstack 0
  5895                           
  5896                           ; 1 bytes @ 0xB
  5897   0001C9                     	ds	1
  5898   0001CA                     sendMessage5@data5:
  5899                           	callstack 0
  5900   0001CA                     sendMessage6@data5:
  5901                           	callstack 0
  5902   0001CA                     sendMessage7@data5:
  5903                           	callstack 0
  5904   0001CA                     canReceiveMessage@messageAvailable:
  5905                           	callstack 0
  5906   0001CA                     findEvent@tableIndex:
  5907                           	callstack 0
  5908   0001CA                     sendProducedEvent@opc:
  5909                           	callstack 0
  5910                           
  5911                           ; 1 bytes @ 0xC
  5912   0001CA                     	ds	1
  5913   0001CB                     ??_mnsPoll:
  5914   0001CB                     powerUp@i:
  5915                           	callstack 0
  5916   0001CB                     sendMessage6@data6:
  5917                           	callstack 0
  5918   0001CB                     sendMessage7@data6:
  5919                           	callstack 0
  5920   0001CB                     clearAllEvents@tableIndex:
  5921                           	callstack 0
  5922   0001CB                     doNnevn@f:
  5923                           	callstack 0
  5924   0001CB                     doNenrd@index:
  5925                           	callstack 0
  5926   0001CB                     doReval@evNum:
  5927                           	callstack 0
  5928   0001CB                     removeTableEntry@f:
  5929                           	callstack 0
  5930   0001CB                     checkLen@m:
  5931                           	callstack 0
  5932   0001CB                     canReceiveMessage@mp:
  5933                           	callstack 0
  5934   0001CB                     sendProducedEvent@producedEventEN:
  5935                           	callstack 0
  5936                           
  5937                           ; 2 bytes @ 0xD
  5938   0001CB                     	ds	1
  5939   0001CC                     ??_doReval:
  5940   0001CC                     sendMessage7@data7:
  5941                           	callstack 0
  5942   0001CC                     doNnevn@count:
  5943                           	callstack 0
  5944   0001CC                     removeTableEntry@tableIndex:
  5945                           	callstack 0
  5946   0001CC                     doNenrd@nodeNumber:
  5947                           	callstack 0
  5948   0001CC                     doReqev@nodeNumber:
  5949                           	callstack 0
  5950                           
  5951                           ; 2 bytes @ 0xE
  5952   0001CC                     	ds	1
  5953   0001CD                     checkLen@needed:
  5954                           	callstack 0
  5955   0001CD                     canReceiveMessage@no:
  5956                           	callstack 0
  5957   0001CD                     doNnevn@i:
  5958                           	callstack 0
  5959   0001CD                     doReval@evIndex:
  5960                           	callstack 0
  5961   0001CD                     checkRemoveTableEntry@tableIndex:
  5962                           	callstack 0
  5963   0001CD                     removeEvent@nodeNumber:
  5964                           	callstack 0
  5965   0001CD                     sendProducedEvent@producedEventNN:
  5966                           	callstack 0
  5967                           
  5968                           ; 2 bytes @ 0xF
  5969   0001CD                     	ds	1
  5970   0001CE                     checkLen@service:
  5971                           	callstack 0
  5972   0001CE                     doReval@enNum:
  5973                           	callstack 0
  5974   0001CE                     checkRemoveTableEntry@e:
  5975                           	callstack 0
  5976   0001CE                     canReceiveMessage@p:
  5977                           	callstack 0
  5978   0001CE                     doNenrd@eventNumber:
  5979                           	callstack 0
  5980   0001CE                     doReqev@eventNumber:
  5981                           	callstack 0
  5982                           
  5983                           ; 2 bytes @ 0x10
  5984   0001CE                     	ds	1
  5985   0001CF                     writeEv@evNum:
  5986                           	callstack 0
  5987   0001CF                     sendProducedEvent@happening:
  5988                           	callstack 0
  5989   0001CF                     ackEventCheckLen@m:
  5990                           	callstack 0
  5991   0001CF                     teachCheckLen@m:
  5992                           	callstack 0
  5993   0001CF                     doReval@evVal:
  5994                           	callstack 0
  5995   0001CF                     removeEvent@eventNumber:
  5996                           	callstack 0
  5997                           
  5998                           ; 2 bytes @ 0x11
  5999   0001CF                     	ds	1
  6000   0001D0                     ??_inputScan:
  6001   0001D0                     ??_pollServos:
  6002   0001D0                     sendInvertedProducedEvent@state:
  6003                           	callstack 0
  6004   0001D0                     doNenrd@tableIndex:
  6005                           	callstack 0
  6006   0001D0                     doReqev@evNum:
  6007                           	callstack 0
  6008   0001D0                     writeEv@evVal:
  6009                           	callstack 0
  6010                           
  6011                           ; 1 bytes @ 0x12
  6012   0001D0                     	ds	1
  6013   0001D1                     ??_writeEv:
  6014   0001D1                     processOutputs@io:
  6015                           	callstack 0
  6016   0001D1                     sendInvertedProducedEvent@invert:
  6017                           	callstack 0
  6018   0001D1                     ackEventCheckLen@needed:
  6019                           	callstack 0
  6020   0001D1                     teachCheckLen@needed:
  6021                           	callstack 0
  6022   0001D1                     doReval@tableIndex:
  6023                           	callstack 0
  6024   0001D1                     removeEvent@tableIndex:
  6025                           	callstack 0
  6026   0001D1                     doReqev@evVal:
  6027                           	callstack 0
  6028                           
  6029                           ; 2 bytes @ 0x13
  6030   0001D1                     	ds	1
  6031   0001D2                     inputScan@change:
  6032                           	callstack 0
  6033   0001D2                     sendInvertedProducedEvent@can_send_on:
  6034                           	callstack 0
  6035   0001D2                     teachCheckLen@learn:
  6036                           	callstack 0
  6037   0001D2                     doEvuln@nodeNumber:
  6038                           	callstack 0
  6039                           
  6040                           ; 2 bytes @ 0x14
  6041   0001D2                     	ds	1
  6042   0001D3                     inputScan@input:
  6043                           	callstack 0
  6044   0001D3                     sendInvertedProducedEvent@can_send_off:
  6045                           	callstack 0
  6046   0001D3                     doReqev@tableIndex:
  6047                           	callstack 0
  6048                           
  6049                           ; 1 bytes @ 0x15
  6050   0001D3                     	ds	1
  6051   0001D4                     sendInvertedProducedEvent@happening:
  6052                           	callstack 0
  6053   0001D4                     doEvuln@eventNumber:
  6054                           	callstack 0
  6055                           
  6056                           ; 2 bytes @ 0x16
  6057   0001D4                     	ds	1
  6058   0001D5                     writeEv@startIndex:
  6059                           	callstack 0
  6060   0001D5                     _sendInvertedProducedEvent$1404:
  6061                           	callstack 0
  6062                           
  6063                           ; 2 bytes @ 0x17
  6064   0001D5                     	ds	1
  6065   0001D6                     doEvuln@result:
  6066                           	callstack 0
  6067   0001D6                     writeEv@nextF:
  6068                           	callstack 0
  6069                           
  6070                           ; 1 bytes @ 0x18
  6071   0001D6                     	ds	1
  6072   0001D7                     sendInvertedProducedEvent@state_to_send:
  6073                           	callstack 0
  6074   0001D7                     writeEv@e:
  6075                           	callstack 0
  6076                           
  6077                           ; 1 bytes @ 0x19
  6078   0001D7                     	ds	1
  6079   0001D8                     startDigitalOutput@state:
  6080                           	callstack 0
  6081   0001D8                     pollServos@target:
  6082                           	callstack 0
  6083   0001D8                     mnsTRallDiagnosticsCallback@serviceIndex:
  6084                           	callstack 0
  6085   0001D8                     reqevCallback@serviceIndex:
  6086                           	callstack 0
  6087   0001D8                     writeEv@f:
  6088                           	callstack 0
  6089                           
  6090                           ; 1 bytes @ 0x1A
  6091   0001D8                     	ds	1
  6092   0001D9                     ??_startDigitalOutput:
  6093   0001D9                     sodTRCallback@step:
  6094                           	callstack 0
  6095   0001D9                     pollServos@beforeMidway:
  6096                           	callstack 0
  6097   0001D9                     mnsTRserviceDiscoveryCallback@step:
  6098                           	callstack 0
  6099   0001D9                     mnsTRallDiagnosticsCallback@step:
  6100                           	callstack 0
  6101   0001D9                     mnsTRrqnpnCallback@step:
  6102                           	callstack 0
  6103   0001D9                     nvTRnvrdCallback@step:
  6104                           	callstack 0
  6105   0001D9                     nerdCallback@step:
  6106                           	callstack 0
  6107   0001D9                     reqevCallback@step:
  6108                           	callstack 0
  6109   0001D9                     writeEv@tableIndex:
  6110                           	callstack 0
  6111                           
  6112                           ; 1 bytes @ 0x1B
  6113   0001D9                     	ds	1
  6114   0001DA                     ??_mnsTRallDiagnosticsCallback:
  6115   0001DA                     ??_mnsTRserviceDiscoveryCallback:
  6116   0001DA                     ??_reqevCallback:
  6117   0001DA                     sodTRCallback@disable_SOD_response:
  6118                           	callstack 0
  6119   0001DA                     pollServos@midway:
  6120                           	callstack 0
  6121   0001DA                     writeEv@nextIdx:
  6122                           	callstack 0
  6123   0001DA                     nvTRnvrdCallback@valueOrError:
  6124                           	callstack 0
  6125   0001DA                     nerdCallback@nodeNumber:
  6126                           	callstack 0
  6127                           
  6128                           ; 2 bytes @ 0x1C
  6129   0001DA                     	ds	1
  6130   0001DB                     deleteActionRange@number:
  6131                           	callstack 0
  6132   0001DB                     sodTRCallback@send_on_ok:
  6133                           	callstack 0
  6134   0001DB                     pollServos@io:
  6135                           	callstack 0
  6136   0001DB                     deleteHappeningRange@number:
  6137                           	callstack 0
  6138   0001DB                     _startDigitalOutput$808:
  6139                           	callstack 0
  6140   0001DB                     addEvent@nodeNumber:
  6141                           	callstack 0
  6142                           
  6143                           ; 2 bytes @ 0x1D
  6144   0001DB                     	ds	1
  6145   0001DC                     ??_deleteHappeningRange:
  6146   0001DC                     ??_deleteActionRange:
  6147   0001DC                     sodTRCallback@send_off_ok:
  6148                           	callstack 0
  6149   0001DC                     startServos@type:
  6150                           	callstack 0
  6151   0001DC                     nerdCallback@eventNumber:
  6152                           	callstack 0
  6153                           
  6154                           ; 2 bytes @ 0x1E
  6155   0001DC                     	ds	1
  6156   0001DD                     startDigitalOutput@pinState:
  6157                           	callstack 0
  6158   0001DD                     _sodTRCallback$1424:
  6159                           	callstack 0
  6160   0001DD                     addEvent@eventNumber:
  6161                           	callstack 0
  6162                           
  6163                           ; 2 bytes @ 0x1F
  6164   0001DD                     	ds	1
  6165   0001DE                     startDigitalOutput@actionState:
  6166                           	callstack 0
  6167   0001DE                     _sodTRCallback$1425:
  6168                           	callstack 0
  6169   0001DE                     mnsTRallDiagnosticsCallback@d:
  6170                           	callstack 0
  6171                           
  6172                           ; 2 bytes @ 0x20
  6173   0001DE                     	ds	1
  6174   0001DF                     startDigitalOutput@io:
  6175                           	callstack 0
  6176   0001DF                     sodTRCallback@happeningIndex:
  6177                           	callstack 0
  6178   0001DF                     reqevCallback@nEv:
  6179                           	callstack 0
  6180   0001DF                     addEvent@evNum:
  6181                           	callstack 0
  6182                           
  6183                           ; 1 bytes @ 0x21
  6184   0001DF                     	ds	1
  6185   0001E0                     sodTRCallback@disable_off:
  6186                           	callstack 0
  6187   0001E0                     startOutput@act:
  6188                           	callstack 0
  6189   0001E0                     addEvent@evVal:
  6190                           	callstack 0
  6191   0001E0                     reqevCallback@eventNumber:
  6192                           	callstack 0
  6193                           
  6194                           ; 2 bytes @ 0x22
  6195   0001E0                     	ds	1
  6196   0001E1                     deleteActionRange@updated:
  6197                           	callstack 0
  6198   0001E1                     sodTRCallback@value:
  6199                           	callstack 0
  6200   0001E1                     startOutput@type:
  6201                           	callstack 0
  6202   0001E1                     addEvent@forceOwnNN:
  6203                           	callstack 0
  6204   0001E1                     deleteHappeningRange@happening:
  6205                           	callstack 0
  6206                           
  6207                           ; 1 bytes @ 0x23
  6208   0001E1                     	ds	1
  6209   0001E2                     ??_addEvent:
  6210   0001E2                     deleteActionRange@action:
  6211                           	callstack 0
  6212   0001E2                     sodTRCallback@event_inverted:
  6213                           	callstack 0
  6214   0001E2                     startOutput@io:
  6215                           	callstack 0
  6216   0001E2                     deleteHappeningRange@h:
  6217                           	callstack 0
  6218   0001E2                     reqevCallback@ev:
  6219                           	callstack 0
  6220                           
  6221                           ; 2 bytes @ 0x24
  6222   0001E2                     	ds	1
  6223   0001E3                     deleteActionRange@e:
  6224                           	callstack 0
  6225   0001E3                     processActions@simultaneous:
  6226                           	callstack 0
  6227   0001E3                     sodTRCallback@flags:
  6228                           	callstack 0
  6229   0001E3                     deleteHappeningRange@tableIndex:
  6230                           	callstack 0
  6231                           
  6232                           ; 1 bytes @ 0x25
  6233   0001E3                     	ds	1
  6234   0001E4                     deleteActionRange@tableIndex:
  6235                           	callstack 0
  6236   0001E4                     processActions@peekItem:
  6237                           	callstack 0
  6238   0001E4                     sodTRCallback@io:
  6239                           	callstack 0
  6240   0001E4                     reqevCallback@nodeNumber:
  6241                           	callstack 0
  6242                           
  6243                           ; 2 bytes @ 0x26
  6244   0001E4                     	ds	1
  6245   0001E5                     clearEvents@io:
  6246                           	callstack 0
  6247   0001E5                     processActions@nextType:
  6248                           	callstack 0
  6249                           
  6250                           ; 1 bytes @ 0x27
  6251   0001E5                     	ds	1
  6252   0001E6                     processActions@nextIo:
  6253                           	callstack 0
  6254   0001E6                     reqevCallback@tableIndex:
  6255                           	callstack 0
  6256   0001E6                     addEvent@error:
  6257                           	callstack 0
  6258                           
  6259                           ; 1 bytes @ 0x28
  6260   0001E6                     	ds	1
  6261   0001E7                     ??_pollTimedResponse:
  6262   0001E7                     processActions@type:
  6263                           	callstack 0
  6264   0001E7                     addEvent@f:
  6265                           	callstack 0
  6266                           
  6267                           ; 1 bytes @ 0x29
  6268   0001E7                     	ds	1
  6269   0001E8                     processActions@ioAction:
  6270                           	callstack 0
  6271   0001E8                     addEvent@e:
  6272                           	callstack 0
  6273                           
  6274                           ; 1 bytes @ 0x2A
  6275   0001E8                     	ds	1
  6276   0001E9                     processActions@nextAction:
  6277                           	callstack 0
  6278   0001E9                     pollTimedResponse@result:
  6279                           	callstack 0
  6280   0001E9                     addEvent@tableIndex:
  6281                           	callstack 0
  6282                           
  6283                           ; 1 bytes @ 0x2B
  6284   0001E9                     	ds	1
  6285   0001EA                     defaultEvents@type:
  6286                           	callstack 0
  6287   0001EA                     processActions@io:
  6288                           	callstack 0
  6289   0001EA                     APP_addEvent@nodeNumber:
  6290                           	callstack 0
  6291                           
  6292                           ; 2 bytes @ 0x2C
  6293   0001EA                     	ds	1
  6294   0001EB                     processActions@action:
  6295                           	callstack 0
  6296   0001EB                     defaultEvents@en:
  6297                           	callstack 0
  6298                           
  6299                           ; 2 bytes @ 0x2D
  6300   0001EB                     	ds	1
  6301   0001EC                     ??_loop:
  6302   0001EC                     APP_addEvent@eventNumber:
  6303                           	callstack 0
  6304                           
  6305                           ; 2 bytes @ 0x2E
  6306   0001EC                     	ds	1
  6307   0001ED                     defaultEvents@io:
  6308                           	callstack 0
  6309                           
  6310                           ; 1 bytes @ 0x2F
  6311   0001ED                     	ds	1
  6312   0001EE                     setType@type:
  6313                           	callstack 0
  6314   0001EE                     APP_addEvent@evNum:
  6315                           	callstack 0
  6316                           
  6317                           ; 1 bytes @ 0x30
  6318   0001EE                     	ds	1
  6319   0001EF                     setType@index:
  6320                           	callstack 0
  6321   0001EF                     APP_addEvent@evVal:
  6322                           	callstack 0
  6323                           
  6324                           ; 1 bytes @ 0x31
  6325   0001EF                     	ds	1
  6326   0001F0                     setType@io:
  6327                           	callstack 0
  6328   0001F0                     APP_addEvent@forceOwnNN:
  6329                           	callstack 0
  6330                           
  6331                           ; 1 bytes @ 0x32
  6332   0001F0                     	ds	1
  6333   0001F1                     APP_factoryReset@io:
  6334                           	callstack 0
  6335   0001F1                     APP_addEvent@tableIndex:
  6336                           	callstack 0
  6337   0001F1                     APP_nvValueChanged@value:
  6338                           	callstack 0
  6339                           
  6340                           ; 1 bytes @ 0x33
  6341   0001F1                     	ds	1
  6342   0001F2                     ??_factoryReset:
  6343   0001F2                     APP_nvValueChanged@oldValue:
  6344                           	callstack 0
  6345   0001F2                     doEvlrn@nodeNumber:
  6346                           	callstack 0
  6347                           
  6348                           ; 2 bytes @ 0x34
  6349   0001F2                     	ds	1
  6350   0001F3                     ??_APP_nvValueChanged:
  6351                           
  6352                           ; 1 bytes @ 0x35
  6353   0001F3                     	ds	1
  6354   0001F4                     doEvlrn@eventNumber:
  6355                           	callstack 0
  6356                           
  6357                           ; 2 bytes @ 0x36
  6358   0001F4                     	ds	2
  6359   0001F6                     APP_nvValueChanged@index:
  6360                           	callstack 0
  6361   0001F6                     factoryReset@i:
  6362                           	callstack 0
  6363   0001F6                     doEvlrn@evNum:
  6364                           	callstack 0
  6365                           
  6366                           ; 1 bytes @ 0x38
  6367   0001F6                     	ds	1
  6368   0001F7                     APP_nvValueChanged@io:
  6369                           	callstack 0
  6370   0001F7                     checkPowerOnPb@i:
  6371                           	callstack 0
  6372   0001F7                     doEvlrn@evVal:
  6373                           	callstack 0
  6374                           
  6375                           ; 1 bytes @ 0x39
  6376   0001F7                     	ds	1
  6377   0001F8                     setNV@value:
  6378                           	callstack 0
  6379   0001F8                     doEvlrn@error:
  6380                           	callstack 0
  6381                           
  6382                           ; 1 bytes @ 0x3A
  6383   0001F8                     	ds	1
  6384   0001F9                     ??_setNV:
  6385                           
  6386                           ; 1 bytes @ 0x3B
  6387   0001F9                     	ds	2
  6388   0001FB                     setNV@oldValue:
  6389                           	callstack 0
  6390                           
  6391                           ; 1 bytes @ 0x3D
  6392   0001FB                     	ds	1
  6393   0001FC                     setNV@index:
  6394                           	callstack 0
  6395                           
  6396                           ; 1 bytes @ 0x3E
  6397   0001FC                     	ds	1
  6398   0001FD                     consumer2QProcessMessage@m:
  6399                           	callstack 0
  6400   0001FD                     bootProcessMessage@m:
  6401                           	callstack 0
  6402   0001FD                     ackEventProcessMessage@m:
  6403                           	callstack 0
  6404   0001FD                     mnsProcessMessage@m:
  6405                           	callstack 0
  6406   0001FD                     nvProcessMessage@m:
  6407                           	callstack 0
  6408   0001FD                     canProcessMessage@m:
  6409                           	callstack 0
  6410   0001FD                     teachProcessMessage@m:
  6411                           	callstack 0
  6412   0001FD                     producerProcessMessage@m:
  6413                           	callstack 0
  6414                           
  6415                           ; 2 bytes @ 0x3F
  6416   0001FD                     	ds	2
  6417                           
  6418                           	psect	cstackBANK0
  6419   000060                     __pcstackBANK0:
  6420                           	callstack 0
  6421   000060                     ?i1_getNextWriteMessage:
  6422                           	callstack 0
  6423   000060                     ?i1_pop:
  6424                           	callstack 0
  6425   000060                     ?i1_getBufferPointer:
  6426                           	callstack 0
  6427   000060                     ?i1_tickGet:
  6428                           	callstack 0
  6429   000060                     i1_isEvent$4896:
  6430                           	callstack 0
  6431   000060                     i1getNextWriteMessage@q:
  6432                           	callstack 0
  6433   000060                     i1pop@q:
  6434                           	callstack 0
  6435                           
  6436                           ; 2 bytes @ 0x0
  6437   000060                     	ds	1
  6438   000061                     i1isEvent@opc:
  6439                           	callstack 0
  6440                           
  6441                           ; 1 bytes @ 0x1
  6442   000061                     	ds	1
  6443   000062                     ??i1_getNextWriteMessage:
  6444   000062                     ??i1_pop:
  6445   000062                     i1getBufferPointer@b:
  6446                           	callstack 0
  6447                           
  6448                           ; 1 bytes @ 0x2
  6449   000062                     	ds	2
  6450   000064                     i1tickGet@IntFlag2:
  6451                           	callstack 0
  6452                           
  6453                           ; 1 bytes @ 0x4
  6454   000064                     	ds	1
  6455   000065                     i1tickGet@IntFlag1:
  6456                           	callstack 0
  6457                           
  6458                           ; 1 bytes @ 0x5
  6459   000065                     	ds	1
  6460   000066                     i1tickGet@currentTime:
  6461                           	callstack 0
  6462                           
  6463                           ; 4 bytes @ 0x6
  6464   000066                     	ds	1
  6465   000067                     i1pop@ret:
  6466                           	callstack 0
  6467                           
  6468                           ; 2 bytes @ 0x7
  6469   000067                     	ds	4
  6470   00006B                     i1getNextWriteMessage@wr:
  6471                           	callstack 0
  6472                           
  6473                           ; 1 bytes @ 0xB
  6474   00006B                     	ds	1
  6475   00006C                     ??_checkTxFifo:
  6476   00006C                     canFillRxFifo@m:
  6477                           	callstack 0
  6478                           
  6479                           ; 2 bytes @ 0xC
  6480   00006C                     	ds	2
  6481   00006E                     canFillRxFifo@ptr:
  6482                           	callstack 0
  6483                           
  6484                           ; 2 bytes @ 0xE
  6485   00006E                     	ds	3
  6486   000071                     checkTxFifo@m:
  6487                           	callstack 0
  6488                           
  6489                           ; 2 bytes @ 0x11
  6490   000071                     	ds	2
  6491   000073                     checkTxFifo@mp:
  6492                           	callstack 0
  6493                           
  6494                           ; 2 bytes @ 0x13
  6495   000073                     	ds	2
  6496   000075                     ??_checkCANTimeout:
  6497                           
  6498                           ; 1 bytes @ 0x15
  6499   000075                     	ds	4
  6500   000079                     ??_lowIsr:
  6501                           
  6502                           ; 1 bytes @ 0x19
  6503   000079                     	ds	4
  6504   00007D                     lowIsr@i:
  6505                           	callstack 0
  6506                           
  6507                           ; 1 bytes @ 0x1D
  6508   00007D                     	ds	1
  6509   00007E                     ??_isrLow:
  6510                           
  6511                           ; 1 bytes @ 0x1E
  6512   00007E                     	ds	15
  6513   00008D                     ??_findServiceIndex:
  6514   00008D                     ??_have:
  6515   00008D                     ??_showStatus:
  6516   00008D                     ?_getNV:
  6517                           	callstack 0
  6518   00008D                     ?_findService:
  6519                           	callstack 0
  6520   00008D                     ?_getNextWriteMessage:
  6521                           	callstack 0
  6522   00008D                     ?_pop:
  6523                           	callstack 0
  6524   00008D                     ?_getBufferPointer:
  6525                           	callstack 0
  6526   00008D                     ?___awmod:
  6527                           	callstack 0
  6528   00008D                     ?_tickGet:
  6529                           	callstack 0
  6530   00008D                     initOutputs@io:
  6531                           	callstack 0
  6532   00008D                     consumer2QEsdData@index:
  6533                           	callstack 0
  6534   00008D                     pushTwoAction@a:
  6535                           	callstack 0
  6536   00008D                     peekTwoActionQueue@qty:
  6537                           	callstack 0
  6538   00008D                     deleteTwoActionQueue@qty:
  6539                           	callstack 0
  6540   00008D                     needsStarting@act:
  6541                           	callstack 0
  6542   00008D                     completed@action:
  6543                           	callstack 0
  6544   00008D                     finaliseOutput@type:
  6545                           	callstack 0
  6546   00008D                     startBounceOutput@action:
  6547                           	callstack 0
  6548   00008D                     initBounce@io:
  6549                           	callstack 0
  6550   00008D                     bootEsdData@id:
  6551                           	callstack 0
  6552   00008D                     ackPowerUp@i:
  6553                           	callstack 0
  6554   00008D                     nvGetESDdata@id:
  6555                           	callstack 0
  6556   00008D                     initTicker@priority:
  6557                           	callstack 0
  6558   00008D                     setTimedResponseDelay@delay:
  6559                           	callstack 0
  6560   00008D                     _isEvent$4896:
  6561                           	callstack 0
  6562   00008D                     getNextWriteMessage@q:
  6563                           	callstack 0
  6564   00008D                     eraseFlashBlock@interruptEnabled:
  6565                           	callstack 0
  6566   00008D                     loadFlashBlock@i:
  6567                           	callstack 0
  6568   00008D                     canEsdData@id:
  6569                           	callstack 0
  6570   00008D                     teachGetESDdata@id:
  6571                           	callstack 0
  6572   00008D                     evtIdxToTableIndex@evtIdx:
  6573                           	callstack 0
  6574   00008D                     tableIndexToEvtIdx@tableIndex:
  6575                           	callstack 0
  6576   00008D                     producerPowerUp@i:
  6577                           	callstack 0
  6578   00008D                     producerEsdData@index:
  6579                           	callstack 0
  6580   00008D                     APP_preProcessMessage@m:
  6581                           	callstack 0
  6582   00008D                     APP_postProcessMessage@m:
  6583                           	callstack 0
  6584   00008D                     push@q:
  6585                           	callstack 0
  6586   00008D                     pop@q:
  6587                           	callstack 0
  6588   00008D                     quantity@q:
  6589                           	callstack 0
  6590   00008D                     EEPROM_Read@index:
  6591                           	callstack 0
  6592   00008D                     FLASH_Read@address:
  6593                           	callstack 0
  6594   00008D                     ___awmod@dividend:
  6595                           	callstack 0
  6596   00008D                     memcpy@d1:
  6597                           	callstack 0
  6598                           
  6599                           ; 2 bytes @ 0x2D
  6600   00008D                     	ds	1
  6601   00008E                     peekTwoActionQueue@index:
  6602                           	callstack 0
  6603   00008E                     deleteTwoActionQueue@index:
  6604                           	callstack 0
  6605   00008E                     needsStarting@type:
  6606                           	callstack 0
  6607   00008E                     completed@type:
  6608                           	callstack 0
  6609   00008E                     startBounceOutput@io:
  6610                           	callstack 0
  6611   00008E                     initTicker@divider:
  6612                           	callstack 0
  6613   00008E                     isEvent@opc:
  6614                           	callstack 0
  6615   00008E                     flushFlashBlock@interruptEnabled:
  6616                           	callstack 0
  6617                           
  6618                           ; 1 bytes @ 0x2E
  6619   00008E                     	ds	1
  6620   00008F                     ??_getNV:
  6621   00008F                     ??_findService:
  6622   00008F                     ??_getNextWriteMessage:
  6623   00008F                     ??_pop:
  6624   00008F                     ??_quantity:
  6625   00008F                     ??_FLASH_Read:
  6626   00008F                     showStatus@s:
  6627                           	callstack 0
  6628   00008F                     initTicker@i:
  6629                           	callstack 0
  6630   00008F                     findServiceIndex@serviceType:
  6631                           	callstack 0
  6632   00008F                     have@id:
  6633                           	callstack 0
  6634   00008F                     flushFlashBlock@i:
  6635                           	callstack 0
  6636   00008F                     getBufferPointer@b:
  6637                           	callstack 0
  6638   00008F                     push@m:
  6639                           	callstack 0
  6640   00008F                     EEPROM_Write@index:
  6641                           	callstack 0
  6642   00008F                     ___awmod@divisor:
  6643                           	callstack 0
  6644   00008F                     memcpy@s1:
  6645                           	callstack 0
  6646                           
  6647                           ; 2 bytes @ 0x2F
  6648   00008F                     	ds	1
  6649   000090                     getNV@index:
  6650                           	callstack 0
  6651   000090                     findServiceIndex@i:
  6652                           	callstack 0
  6653   000090                     have@i:
  6654                           	callstack 0
  6655   000090                     FLASH_Write@index:
  6656                           	callstack 0
  6657                           
  6658                           ; 2 bytes @ 0x30
  6659   000090                     	ds	1
  6660   000091                     ??_readInput:
  6661   000091                     ??_push:
  6662   000091                     ?_readNVM:
  6663                           	callstack 0
  6664   000091                     ?___wmul:
  6665                           	callstack 0
  6666   000091                     ?___lmul:
  6667                           	callstack 0
  6668   000091                     setOutputPin@state:
  6669                           	callstack 0
  6670   000091                     needsStarting@io:
  6671                           	callstack 0
  6672   000091                     _completed$1545:
  6673                           	callstack 0
  6674   000091                     startServoOutput@action:
  6675                           	callstack 0
  6676   000091                     startMultiOutput@action:
  6677                           	callstack 0
  6678   000091                     setServoState@action:
  6679                           	callstack 0
  6680   000091                     setBounceState@action:
  6681                           	callstack 0
  6682   000091                     setMultiState@action:
  6683                           	callstack 0
  6684   000091                     getParameterFlags@flags:
  6685                           	callstack 0
  6686   000091                     tickGet@IntFlag2:
  6687                           	callstack 0
  6688   000091                     startTimedResponse@serviceIndex:
  6689                           	callstack 0
  6690   000091                     findService@id:
  6691                           	callstack 0
  6692   000091                     EEPROM_Write@value:
  6693                           	callstack 0
  6694   000091                     ___awmod@counter:
  6695                           	callstack 0
  6696   000091                     ___wmul@multiplier:
  6697                           	callstack 0
  6698   000091                     memcpy@n:
  6699                           	callstack 0
  6700   000091                     readNVM@index:
  6701                           	callstack 0
  6702   000091                     ___lmul@multiplier:
  6703                           	callstack 0
  6704                           
  6705                           ; 4 bytes @ 0x31
  6706   000091                     	ds	1
  6707   000092                     ??_setOutputPin:
  6708   000092                     ??_startServoOutput:
  6709   000092                     ??_startMultiOutput:
  6710   000092                     completed@io:
  6711                           	callstack 0
  6712   000092                     setServoState@io:
  6713                           	callstack 0
  6714   000092                     setBounceState@io:
  6715                           	callstack 0
  6716   000092                     setMultiState@io:
  6717                           	callstack 0
  6718   000092                     getParameter@idx:
  6719                           	callstack 0
  6720   000092                     tickGet@IntFlag1:
  6721                           	callstack 0
  6722   000092                     findService@i:
  6723                           	callstack 0
  6724   000092                     EEPROM_Write@interruptEnabled:
  6725                           	callstack 0
  6726   000092                     FLASH_Write@value:
  6727                           	callstack 0
  6728   000092                     ___awmod@sign:
  6729                           	callstack 0
  6730   000092                     startTimedResponse@callback:
  6731                           	callstack 0
  6732                           
  6733                           ; 2 bytes @ 0x32
  6734   000092                     	ds	1
  6735   000093                     ??_FLASH_Write:
  6736   000093                     readInput@io:
  6737                           	callstack 0
  6738   000093                     setOutputState@act:
  6739                           	callstack 0
  6740   000093                     startServoOutput@io:
  6741                           	callstack 0
  6742   000093                     startMultiOutput@io:
  6743                           	callstack 0
  6744   000093                     memcpy@tmp:
  6745                           	callstack 0
  6746   000093                     getNumRxBuffersInUse@ptr:
  6747                           	callstack 0
  6748   000093                     ___wmul@multiplicand:
  6749                           	callstack 0
  6750   000093                     tickGet@currentTime:
  6751                           	callstack 0
  6752                           
  6753                           ; 4 bytes @ 0x33
  6754   000093                     	ds	1
  6755   000094                     ??_readNVM:
  6756   000094                     setOutputPin@io:
  6757                           	callstack 0
  6758   000094                     setOutputState@type:
  6759                           	callstack 0
  6760   000094                     startTimedResponse@type:
  6761                           	callstack 0
  6762   000094                     pop@ret:
  6763                           	callstack 0
  6764   000094                     memcpy@d:
  6765                           	callstack 0
  6766                           
  6767                           ; 2 bytes @ 0x34
  6768   000094                     	ds	1
  6769   000095                     ??_setupTimer1:
  6770   000095                     ??_setupTimer3:
  6771   000095                     setOutputState@io:
  6772                           	callstack 0
  6773   000095                     getNumRxBuffersInUse@no:
  6774                           	callstack 0
  6775   000095                     ___wmul@product:
  6776                           	callstack 0
  6777   000095                     ___lmul@multiplicand:
  6778                           	callstack 0
  6779                           
  6780                           ; 4 bytes @ 0x35
  6781   000095                     	ds	1
  6782   000096                     readNVM@type:
  6783                           	callstack 0
  6784   000096                     getNumRxBuffersInUse@i:
  6785                           	callstack 0
  6786   000096                     memcpy@s:
  6787                           	callstack 0
  6788                           
  6789                           ; 2 bytes @ 0x36
  6790   000096                     	ds	1
  6791   000097                     ??_initInputScan:
  6792   000097                     ??_validStart:
  6793   000097                     ??_loadNvCache:
  6794   000097                     ??_canPowerUp:
  6795   000097                     ?_consumer2QGetDiagnostic:
  6796                           	callstack 0
  6797   000097                     ?_ackGetDiagnostic:
  6798                           	callstack 0
  6799   000097                     ?_mnsGetDiagnostic:
  6800                           	callstack 0
  6801   000097                     ?_nvGetDiagnostic:
  6802                           	callstack 0
  6803   000097                     ?_canGetDiagnostic:
  6804                           	callstack 0
  6805   000097                     ?_teachGetDiagnostic:
  6806                           	callstack 0
  6807   000097                     ?_getNN:
  6808                           	callstack 0
  6809   000097                     ?_getEN:
  6810                           	callstack 0
  6811   000097                     ?_producerGetDiagnostic:
  6812                           	callstack 0
  6813   000097                     ?___awdiv:
  6814                           	callstack 0
  6815   000097                     ?___lldiv:
  6816                           	callstack 0
  6817   000097                     setDigitalOutput@state:
  6818                           	callstack 0
  6819   000097                     bootPowerUp@b:
  6820                           	callstack 0
  6821   000097                     mnsPowerUp@i:
  6822                           	callstack 0
  6823   000097                     handleSelfEnumeration@p:
  6824                           	callstack 0
  6825   000097                     ___awdiv@dividend:
  6826                           	callstack 0
  6827   000097                     ___lldiv@dividend:
  6828                           	callstack 0
  6829                           
  6830                           ; 4 bytes @ 0x37
  6831   000097                     	ds	1
  6832   000098                     setDigitalOutput@pinState:
  6833                           	callstack 0
  6834   000098                     bootPowerUp@found:
  6835                           	callstack 0
  6836   000098                     getNextWriteMessage@wr:
  6837                           	callstack 0
  6838   000098                     _setupTimer1$1932:
  6839                           	callstack 0
  6840   000098                     _setupTimer3$1936:
  6841                           	callstack 0
  6842   000098                     mnsPowerUp@temp:
  6843                           	callstack 0
  6844   000098                     canPowerUp@temp:
  6845                           	callstack 0
  6846                           
  6847                           ; 2 bytes @ 0x38
  6848   000098                     	ds	1
  6849   000099                     ??_canGetDiagnostic:
  6850   000099                     ??_handleSelfEnumeration:
  6851   000099                     ??_getNN:
  6852   000099                     ??_getEN:
  6853   000099                     setDigitalOutput@io:
  6854                           	callstack 0
  6855   000099                     initInputScan@input:
  6856                           	callstack 0
  6857   000099                     consumer2QGetDiagnostic@index:
  6858                           	callstack 0
  6859   000099                     bootPowerUp@i:
  6860                           	callstack 0
  6861   000099                     ackGetDiagnostic@index:
  6862                           	callstack 0
  6863   000099                     mnsGetDiagnostic@index:
  6864                           	callstack 0
  6865   000099                     nvGetDiagnostic@index:
  6866                           	callstack 0
  6867   000099                     teachGetDiagnostic@index:
  6868                           	callstack 0
  6869   000099                     producerGetDiagnostic@index:
  6870                           	callstack 0
  6871   000099                     loadNvCache@temp:
  6872                           	callstack 0
  6873   000099                     ___awdiv@divisor:
  6874                           	callstack 0
  6875   000099                     ___lmul@product:
  6876                           	callstack 0
  6877                           
  6878                           ; 4 bytes @ 0x39
  6879   000099                     	ds	1
  6880   00009A                     canGetDiagnostic@index:
  6881                           	callstack 0
  6882   00009A                     setupTimer1@ticks:
  6883                           	callstack 0
  6884   00009A                     setupTimer3@ticks:
  6885                           	callstack 0
  6886   00009A                     canSendMessage@mp:
  6887                           	callstack 0
  6888   00009A                     bootPowerUp@a:
  6889                           	callstack 0
  6890                           
  6891                           ; 3 bytes @ 0x3A
  6892   00009A                     	ds	1
  6893   00009B                     loadNvCache@i:
  6894                           	callstack 0
  6895   00009B                     validStart@tableIndex:
  6896                           	callstack 0
  6897   00009B                     ___awdiv@counter:
  6898                           	callstack 0
  6899   00009B                     ___lldiv@divisor:
  6900                           	callstack 0
  6901                           
  6902                           ; 4 bytes @ 0x3B
  6903   00009B                     	ds	1
  6904   00009C                     ??_canSendMessage:
  6905   00009C                     setupTimer1@io:
  6906                           	callstack 0
  6907   00009C                     setupTimer3@io:
  6908                           	callstack 0
  6909   00009C                     nvPowerUp@i:
  6910                           	callstack 0
  6911   00009C                     validStart@f:
  6912                           	callstack 0
  6913   00009C                     ___awdiv@sign:
  6914                           	callstack 0
  6915                           
  6916                           ; 1 bytes @ 0x3C
  6917   00009C                     	ds	1
  6918   00009D                     ??_getEVs:
  6919   00009D                     ??_numEv:
  6920   00009D                     ?_getEv:
  6921                           	callstack 0
  6922   00009D                     handleSelfEnumeration@incomingCanId:
  6923                           	callstack 0
  6924   00009D                     getEv@evNum:
  6925                           	callstack 0
  6926   00009D                     doWait@duration:
  6927                           	callstack 0
  6928   00009D                     getNN@hi:
  6929                           	callstack 0
  6930   00009D                     getEN@hi:
  6931                           	callstack 0
  6932   00009D                     ___awdiv@quotient:
  6933                           	callstack 0
  6934                           
  6935                           ; 2 bytes @ 0x3D
  6936   00009D                     	ds	2
  6937   00009F                     ??_getEv:
  6938   00009F                     ??_doWait:
  6939   00009F                     ??_bounceUp:
  6940   00009F                     ??_bounceDown:
  6941   00009F                     ??_APP_GetEventState:
  6942   00009F                     ??_APP_nvDefault:
  6943   00009F                     ??_leds_poll:
  6944   00009F                     APP_nvValidate@value:
  6945                           	callstack 0
  6946   00009F                     setServoPosition@pos:
  6947                           	callstack 0
  6948   00009F                     getNN@lo:
  6949                           	callstack 0
  6950   00009F                     getEN@lo:
  6951                           	callstack 0
  6952   00009F                     ___lldiv@quotient:
  6953                           	callstack 0
  6954                           
  6955                           ; 4 bytes @ 0x3F
  6956   00009F                     	ds	1
  6957   0000A0                     APP_nvValidate@index:
  6958                           	callstack 0
  6959   0000A0                     setServoPosition@io:
  6960                           	callstack 0
  6961                           
  6962                           ; 1 bytes @ 0x40
  6963   0000A0                     	ds	1
  6964   0000A1                     setOutputPosition@pos:
  6965                           	callstack 0
  6966   0000A1                     canSendMessage@no:
  6967                           	callstack 0
  6968   0000A1                     numEv@num:
  6969                           	callstack 0
  6970   0000A1                     getEVs@f:
  6971                           	callstack 0
  6972   0000A1                     getNN@f:
  6973                           	callstack 0
  6974   0000A1                     getEN@tableIndex:
  6975                           	callstack 0
  6976                           
  6977                           ; 1 bytes @ 0x41
  6978   0000A1                     	ds	1
  6979   0000A2                     setOutputPosition@type:
  6980                           	callstack 0
  6981   0000A2                     numEv@f:
  6982                           	callstack 0
  6983   0000A2                     getEVs@evIdx:
  6984                           	callstack 0
  6985   0000A2                     getNN@tableIndex:
  6986                           	callstack 0
  6987   0000A2                     canSendMessage@m:
  6988                           	callstack 0
  6989                           
  6990                           ; 2 bytes @ 0x42
  6991   0000A2                     	ds	1
  6992   0000A3                     APP_nvDefault@index:
  6993                           	callstack 0
  6994   0000A3                     setOutputPosition@io:
  6995                           	callstack 0
  6996   0000A3                     numEv@tableIndex:
  6997                           	callstack 0
  6998   0000A3                     getEVs@tableIndex:
  6999                           	callstack 0
  7000   0000A3                     ___lldiv@counter:
  7001                           	callstack 0
  7002   0000A3                     getHash@nn:
  7003                           	callstack 0
  7004                           
  7005                           ; 2 bytes @ 0x43
  7006   0000A3                     	ds	1
  7007   0000A4                     ??_initServos:
  7008   0000A4                     ??_sendMessage:
  7009   0000A4                     ??_pbDownTimer:
  7010   0000A4                     ??_pbUpTimer:
  7011   0000A4                     getEv@f:
  7012                           	callstack 0
  7013   0000A4                     getEVs@evNum:
  7014                           	callstack 0
  7015   0000A4                     writeNVM@index:
  7016                           	callstack 0
  7017                           
  7018                           ; 3 bytes @ 0x44
  7019   0000A4                     	ds	1
  7020   0000A5                     bounceUp@reversed:
  7021                           	callstack 0
  7022   0000A5                     getEv@tableIndex:
  7023                           	callstack 0
  7024   0000A5                     getHash@en:
  7025                           	callstack 0
  7026                           
  7027                           ; 2 bytes @ 0x45
  7028   0000A5                     	ds	1
  7029   0000A6                     APP_GetEventState@flags:
  7030                           	callstack 0
  7031   0000A6                     isConsumedEvent@eventIndex:
  7032                           	callstack 0
  7033   0000A6                     bounceDown@reversed:
  7034                           	callstack 0
  7035   0000A6                     bounceUp@midway:
  7036                           	callstack 0
  7037   0000A6                     sendMessage@opc:
  7038                           	callstack 0
  7039   0000A6                     _initServos$8095:
  7040                           	callstack 0
  7041                           
  7042                           ; 1 bytes @ 0x46
  7043   0000A6                     	ds	1
  7044   0000A7                     ??_getHash:
  7045   0000A7                     APP_GetEventState@disable_off:
  7046                           	callstack 0
  7047   0000A7                     isConsumedEvent@ev:
  7048                           	callstack 0
  7049   0000A7                     bounceUp@io:
  7050                           	callstack 0
  7051   0000A7                     sendMessage2@data1:
  7052                           	callstack 0
  7053   0000A7                     sendMessage3@data1:
  7054                           	callstack 0
  7055   0000A7                     sendMessage4@opc:
  7056                           	callstack 0
  7057   0000A7                     sendMessage5@opc:
  7058                           	callstack 0
  7059   0000A7                     sendMessage6@opc:
  7060                           	callstack 0
  7061   0000A7                     sendMessage7@opc:
  7062                           	callstack 0
  7063   0000A7                     writeNVM@value:
  7064                           	callstack 0
  7065   0000A7                     _initServos$8094:
  7066                           	callstack 0
  7067   0000A7                     bounceDown@tmp:
  7068                           	callstack 0
  7069                           
  7070                           ; 2 bytes @ 0x47
  7071   0000A7                     	ds	1
  7072   0000A8                     ??_writeNVM:
  7073   0000A8                     APP_GetEventState@h:
  7074                           	callstack 0
  7075   0000A8                     initServos@io:
  7076                           	callstack 0
  7077   0000A8                     pbDownTimer@timeout:
  7078                           	callstack 0
  7079   0000A8                     pbUpTimer@timeout:
  7080                           	callstack 0
  7081   0000A8                     sendMessage2@data2:
  7082                           	callstack 0
  7083   0000A8                     sendMessage3@data2:
  7084                           	callstack 0
  7085   0000A8                     getHash@hash:
  7086                           	callstack 0
  7087   0000A8                     sendProducedEvent@onOff:
  7088                           	callstack 0
  7089                           
  7090                           ; 1 bytes @ 0x48
  7091   0000A8                     	ds	1
  7092   0000A9                     APP_GetEventState@happeningIndex:
  7093                           	callstack 0
  7094   0000A9                     bounceDown@io:
  7095                           	callstack 0
  7096   0000A9                     sendMessage2@opc:
  7097                           	callstack 0
  7098   0000A9                     sendMessage3@data3:
  7099                           	callstack 0
  7100   0000A9                     teachPowerUp@i:
  7101                           	callstack 0
  7102                           
  7103                           ; 1 bytes @ 0x49
  7104   0000A9                     	ds	1
  7105   0000AA                     
  7106                           ; 1 bytes @ 0x4A
  7107                           
  7108                           	psect	cstackCOMRAM
  7109   00002B                     __pcstackCOMRAM:
  7110                           	callstack 0
  7111   00002B                     ?i2_getNV:
  7112                           	callstack 0
  7113   00002B                     ?i2_getNextWriteMessage:
  7114                           	callstack 0
  7115   00002B                     ?i2_pop:
  7116                           	callstack 0
  7117   00002B                     ?i2_getBufferPointer:
  7118                           	callstack 0
  7119   00002B                     ?i2_tickGet:
  7120                           	callstack 0
  7121   00002B                     i2_isEvent$4896:
  7122                           	callstack 0
  7123   00002B                     i2getNextWriteMessage@q:
  7124                           	callstack 0
  7125   00002B                     i2pop@q:
  7126                           	callstack 0
  7127                           
  7128                           ; 2 bytes @ 0x0
  7129   00002B                     	ds	1
  7130   00002C                     i2isEvent@opc:
  7131                           	callstack 0
  7132                           
  7133                           ; 1 bytes @ 0x1
  7134   00002C                     	ds	1
  7135   00002D                     ??i2_getNV:
  7136   00002D                     ??i2_getNextWriteMessage:
  7137   00002D                     ??i2_pop:
  7138   00002D                     i2getBufferPointer@b:
  7139                           	callstack 0
  7140                           
  7141                           ; 1 bytes @ 0x2
  7142   00002D                     	ds	1
  7143   00002E                     i2getNV@index:
  7144                           	callstack 0
  7145                           
  7146                           ; 1 bytes @ 0x3
  7147   00002E                     	ds	1
  7148   00002F                     i2setOutputPin@state:
  7149                           	callstack 0
  7150   00002F                     i2tickGet@IntFlag2:
  7151                           	callstack 0
  7152                           
  7153                           ; 1 bytes @ 0x4
  7154   00002F                     	ds	1
  7155   000030                     ??i2_setOutputPin:
  7156   000030                     i2tickGet@IntFlag1:
  7157                           	callstack 0
  7158                           
  7159                           ; 1 bytes @ 0x5
  7160   000030                     	ds	1
  7161   000031                     i2tickGet@currentTime:
  7162                           	callstack 0
  7163                           
  7164                           ; 4 bytes @ 0x6
  7165   000031                     	ds	1
  7166   000032                     i2setOutputPin@io:
  7167                           	callstack 0
  7168   000032                     i2pop@ret:
  7169                           	callstack 0
  7170                           
  7171                           ; 2 bytes @ 0x7
  7172   000032                     	ds	1
  7173   000033                     
  7174                           ; 1 bytes @ 0x8
  7175   000033                     	ds	3
  7176   000036                     i2getNextWriteMessage@wr:
  7177                           	callstack 0
  7178                           
  7179                           ; 1 bytes @ 0xB
  7180   000036                     	ds	1
  7181   000037                     ??i2_checkTxFifo:
  7182   000037                     i2canFillRxFifo@m:
  7183                           	callstack 0
  7184                           
  7185                           ; 2 bytes @ 0xC
  7186   000037                     	ds	2
  7187   000039                     i2canFillRxFifo@ptr:
  7188                           	callstack 0
  7189                           
  7190                           ; 2 bytes @ 0xE
  7191   000039                     	ds	3
  7192   00003C                     i2checkTxFifo@m:
  7193                           	callstack 0
  7194                           
  7195                           ; 2 bytes @ 0x11
  7196   00003C                     	ds	2
  7197   00003E                     i2checkTxFifo@mp:
  7198                           	callstack 0
  7199                           
  7200                           ; 2 bytes @ 0x13
  7201   00003E                     	ds	2
  7202   000040                     ??i2_checkCANTimeout:
  7203   000040                     
  7204                           ; 1 bytes @ 0x15
  7205   000040                     	ds	4
  7206   000044                     ??_highIsr:
  7207   000044                     
  7208                           ; 1 bytes @ 0x19
  7209   000044                     	ds	4
  7210   000048                     highIsr@i:
  7211                           	callstack 0
  7212                           
  7213                           ; 1 bytes @ 0x1D
  7214   000048                     	ds	1
  7215   000049                     ??_isrHigh:
  7216                           
  7217                           ; 1 bytes @ 0x1E
  7218   000049                     	ds	12
  7219                           
  7220 ;;
  7221 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  7222 ;;
  7223 ;; *************** function _main *****************
  7224 ;; Defined at:
  7225 ;;		line 1249 in file "../../VLCBlib_PIC/vlcb.c"
  7226 ;; Parameters:    Size  Location     Type
  7227 ;;		None
  7228 ;; Auto vars:     Size  Location     Type
  7229 ;;  i               1    0        unsigned char 
  7230 ;; Return value:  Size  Location     Type
  7231 ;;                  1    wreg      void 
  7232 ;; Registers used:
  7233 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  7234 ;; Tracked objects:
  7235 ;;		On entry : 0/0
  7236 ;;		On exit  : 0/0
  7237 ;;		Unchanged: 0/0
  7238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7243 ;;Total ram usage:        0 bytes
  7244 ;; Hardware stack levels required when called: 29
  7245 ;; This function calls:
  7246 ;;		_checkPowerOnPb
  7247 ;;		_factoryReset
  7248 ;;		_initRomOps
  7249 ;;		_loop
  7250 ;;		_poll
  7251 ;;		_powerUp
  7252 ;;		_readNVM
  7253 ;;		_setup
  7254 ;; This function is called by:
  7255 ;;		Startup code after reset
  7256 ;; This function uses a non-reentrant model
  7257 ;;
  7258                           
  7259                           	psect	text0
  7260   00BC66                     __ptext0:
  7261                           	callstack 0
  7262   00BC66                     _main:
  7263                           	callstack 2
  7264                           
  7265                           ;../../VLCBlib_PIC/vlcb.c: 1250:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1256:     OSCT
      +                          UNEbits.PLLEN = 1;
  7266                           
  7267                           ;incstack = 0
  7268   00BC66  8C9B               	bsf	155,6,c	;volatile
  7269                           
  7270                           ;../../VLCBlib_PIC/vlcb.c: 1271:     RCONbits.IPEN = 1;
  7271   00BC68  8ED0               	bsf	208,7,c	;volatile
  7272                           
  7273                           ;../../VLCBlib_PIC/vlcb.c: 1293:     initRomOps();
  7274   00BC6A  EC25  F064         	call	_initRomOps	;wreg free
  7275                           
  7276                           ;../../VLCBlib_PIC/vlcb.c: 1295:     if (readNVM(EEPROM_NVM_TYPE, 0x3FA) != 1) {
  7277   00BC6E  0EFA               	movlw	250
  7278   00BC70  0100               	movlb	0	; () banked
  7279   00BC72  6F91               	movwf	readNVM@index& (0+255),b
  7280   00BC74  0E03               	movlw	3
  7281   00BC76  6F92               	movwf	(readNVM@index+1)& (0+255),b
  7282   00BC78  0E00               	movlw	0
  7283   00BC7A  6F93               	movwf	(readNVM@index+2)& (0+255),b
  7284   00BC7C  0E00               	movlw	0
  7285   00BC7E  EC31  F05B         	call	_readNVM
  7286   00BC82  0100               	movlb	0	; () banked
  7287   00BC84  0591               	decf	?_readNVM& (0+255),w,b
  7288   00BC86  1192               	iorwf	(?_readNVM+1)& (0+255),w,b
  7289   00BC88  A4D8               	btfss	status,2,c
  7290                           
  7291                           ; BSR set to: 0
  7292                           ;../../VLCBlib_PIC/vlcb.c: 1296:         factoryReset();
  7293   00BC8A  ECCE  F043         	call	_factoryReset	;wreg free
  7294                           
  7295                           ;../../VLCBlib_PIC/vlcb.c: 1300:     powerUp();
  7296                           
  7297                           ;../../VLCBlib_PIC/vlcb.c: 1297:     }
  7298   00BC8E  EC95  F045         	call	_powerUp	;wreg free
  7299                           
  7300                           ;../../VLCBlib_PIC/vlcb.c: 1303:     {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
  7301   00BC92  8EF2               	bsf	242,7,c	;volatile
  7302   00BC94  8CF2               	bsf	242,6,c	;volatile
  7303                           
  7304                           ;../../VLCBlib_PIC/vlcb.c: 1304:     checkPowerOnPb();
  7305   00BC96  EC90  F05B         	call	_checkPowerOnPb	;wreg free
  7306                           
  7307                           ;../../VLCBlib_PIC/vlcb.c: 1307:     {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
  7308   00BC9A  9EF2               	bcf	242,7,c	;volatile
  7309   00BC9C  9CF2               	bcf	242,6,c	;volatile
  7310                           
  7311                           ;../../VLCBlib_PIC/vlcb.c: 1308:     setup();
  7312   00BC9E  EC74  F04E         	call	_setup	;wreg free
  7313                           
  7314                           ;../../VLCBlib_PIC/vlcb.c: 1311:     {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
  7315   00BCA2  8EF2               	bsf	242,7,c	;volatile
  7316   00BCA4  8CF2               	bsf	242,6,c	;volatile
  7317   00BCA6                     l25445:
  7318                           
  7319                           ;../../VLCBlib_PIC/vlcb.c: 1315:         poll();
  7320   00BCA6  ECC1  F020         	call	_poll	;wreg free
  7321                           
  7322                           ;../../VLCBlib_PIC/vlcb.c: 1316:         loop();
  7323   00BCAA  ECD8  F036         	call	_loop	;wreg free
  7324   00BCAE  D7FB               	goto	l25445
  7325   00BCB0                     __end_of_main:
  7326                           	callstack 0
  7327                           
  7328 ;; *************** function _setup *****************
  7329 ;; Defined at:
  7330 ;;		line 236 in file "../main.c"
  7331 ;; Parameters:    Size  Location     Type
  7332 ;;		None
  7333 ;; Auto vars:     Size  Location     Type
  7334 ;;		None
  7335 ;; Return value:  Size  Location     Type
  7336 ;;                  1    wreg      void 
  7337 ;; Registers used:
  7338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7339 ;; Tracked objects:
  7340 ;;		On entry : 0/0
  7341 ;;		On exit  : 0/0
  7342 ;;		Unchanged: 0/0
  7343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7348 ;;Total ram usage:        0 bytes
  7349 ;; Hardware stack levels used: 1
  7350 ;; Hardware stack levels required when called: 19
  7351 ;; This function calls:
  7352 ;;		_configIO
  7353 ;;		_getNV
  7354 ;;		_initInputScan
  7355 ;;		_initOutputs
  7356 ;;		_initServos
  7357 ;;		_setTimedResponseDelay
  7358 ;;		_tickGet
  7359 ;;		_universalEventsInit
  7360 ;; This function is called by:
  7361 ;;		_main
  7362 ;; This function uses a non-reentrant model
  7363 ;;
  7364                           
  7365                           	psect	text1
  7366   009CE8                     __ptext1:
  7367                           	callstack 0
  7368   009CE8                     _setup:
  7369                           	callstack 11
  7370                           
  7371                           ;../main.c: 241:     transport = &canTransport;
  7372                           
  7373                           ;incstack = 0
  7374   009CE8  0E7A               	movlw	low _canTransport
  7375   009CEA  0101               	movlb	1	; () banked
  7376   009CEC  6F62               	movwf	_transport& (0+255),b
  7377   009CEE  0EEF               	movlw	high _canTransport
  7378   009CF0  6F63               	movwf	(_transport+1)& (0+255),b
  7379                           
  7380                           ; BSR set to: 1
  7381                           ;../main.c: 248:     INTCON2bits.RBPU = 0;
  7382   009CF2  9EF1               	bcf	241,7,c	;volatile
  7383                           
  7384                           ; BSR set to: 1
  7385                           ;../main.c: 250:     WPUB = (uint8_t)getNV(4);
  7386   009CF4  0E04               	movlw	4
  7387   009CF6  ECD2  F05F         	call	_getNV
  7388   009CFA  0100               	movlb	0	; () banked
  7389   009CFC  518D               	movf	?_getNV& (0+255),w,b
  7390   009CFE  010F               	movlb	15	; () banked
  7391   009D00  6F5B               	movwf	91,b	;volatile
  7392                           
  7393                           ; BSR set to: 15
  7394                           ;../main.c: 304:     setTimedResponseDelay((uint8_t)getNV(5));
  7395   009D02  0E05               	movlw	5
  7396   009D04  ECD2  F05F         	call	_getNV
  7397   009D08  0100               	movlb	0	; () banked
  7398   009D0A  518D               	movf	?_getNV& (0+255),w,b
  7399   009D0C  EC77  F064         	call	_setTimedResponseDelay
  7400                           
  7401                           ;../main.c: 305:     universalEventsInit();
  7402   009D10  EC39  F064         	call	_universalEventsInit	;wreg free
  7403                           
  7404                           ;../main.c: 312:     ANCON0 = 0x00;
  7405   009D14  0E00               	movlw	0
  7406   009D16  010F               	movlb	15	; () banked
  7407   009D18  6F5D               	movwf	93,b	;volatile
  7408                           
  7409                           ; BSR set to: 15
  7410                           ;../main.c: 313:     ANCON1 = 0x00;
  7411   009D1A  0E00               	movlw	0
  7412   009D1C  6F5C               	movwf	92,b	;volatile
  7413                           
  7414                           ; BSR set to: 15
  7415                           ;../main.c: 326:     initServos();
  7416   009D1E  EC14  F03F         	call	_initServos	;wreg free
  7417                           
  7418                           ;../main.c: 328:     initOutputs();
  7419   009D22  ECD3  F061         	call	_initOutputs	;wreg free
  7420                           
  7421                           ;../main.c: 331:     for (io=0; io< 16; io++) {
  7422   009D26  0E00               	movlw	0
  7423   009D28  0100               	movlb	0	; () banked
  7424   009D2A  6FCF               	movwf	_io& (0+255),b
  7425   009D2C                     l25193:
  7426                           
  7427                           ; BSR set to: 0
  7428   009D2C  0E0F               	movlw	15
  7429   009D2E  65CF               	cpfsgt	_io& (0+255),b
  7430   009D30  D001               	goto	l25197
  7431   009D32  D006               	goto	l25203
  7432   009D34                     l25197:
  7433                           
  7434                           ; BSR set to: 0
  7435                           ;../main.c: 332:         configIO(io);
  7436   009D34  51CF               	movf	_io& (0+255),w,b
  7437   009D36  EC42  F027         	call	_configIO
  7438                           
  7439                           ;../main.c: 333:     }
  7440   009D3A  0100               	movlb	0	; () banked
  7441   009D3C  2BCF               	incf	_io& (0+255),f,b
  7442   009D3E  D7F6               	goto	l25193
  7443   009D40                     l25203:
  7444                           
  7445                           ; BSR set to: 0
  7446                           ;../main.c: 334:     initInputScan();
  7447   009D40  ECC9  F04E         	call	_initInputScan	;wreg free
  7448                           
  7449                           ;../main.c: 340:     (INTCONbits.GIE = 1);
  7450   009D44  8EF2               	bsf	242,7,c	;volatile
  7451                           
  7452                           ;../main.c: 342:     startTime.val = tickGet();
  7453   009D46  EC45  F05C         	call	_tickGet	;wreg free
  7454   009D4A  C08D  F01D         	movff	?_tickGet,_startTime
  7455   009D4E  C08E  F01E         	movff	?_tickGet+1,_startTime+1
  7456   009D52  C08F  F01F         	movff	?_tickGet+2,_startTime+2
  7457   009D56  C090  F020         	movff	?_tickGet+3,_startTime+3
  7458                           
  7459                           ;../main.c: 343:     lastServoStartTime.val = startTime.val;
  7460   009D5A  C01D  F15C         	movff	_startTime,_lastServoStartTime
  7461   009D5E  C01E  F15D         	movff	_startTime+1,_lastServoStartTime+1
  7462   009D62  C01F  F15E         	movff	_startTime+2,_lastServoStartTime+2
  7463   009D66  C020  F15F         	movff	_startTime+3,_lastServoStartTime+3
  7464                           
  7465                           ;../main.c: 344:     lastInputScanTime.val = startTime.val;
  7466   009D6A  C01D  F158         	movff	_startTime,_lastInputScanTime
  7467   009D6E  C01E  F159         	movff	_startTime+1,_lastInputScanTime+1
  7468   009D72  C01F  F15A         	movff	_startTime+2,_lastInputScanTime+2
  7469   009D76  C020  F15B         	movff	_startTime+3,_lastInputScanTime+3
  7470                           
  7471                           ;../main.c: 345:     lastActionPollTime.val = startTime.val;
  7472   009D7A  C01D  F154         	movff	_startTime,_lastActionPollTime
  7473   009D7E  C01E  F155         	movff	_startTime+1,_lastActionPollTime+1
  7474   009D82  C01F  F156         	movff	_startTime+2,_lastActionPollTime+2
  7475   009D86  C020  F157         	movff	_startTime+3,_lastActionPollTime+3
  7476                           
  7477                           ;../main.c: 350:     started = FALSE;
  7478   009D8A  0E00               	movlw	0
  7479   009D8C  0100               	movlb	0	; () banked
  7480   009D8E  6FD0               	movwf	_started& (0+255),b
  7481                           
  7482                           ; BSR set to: 0
  7483   009D90  0012               	return		;funcret
  7484   009D92                     __end_of_setup:
  7485                           	callstack 0
  7486                           
  7487 ;; *************** function _universalEventsInit *****************
  7488 ;; Defined at:
  7489 ;;		line 93 in file "../universalEvents.c"
  7490 ;; Parameters:    Size  Location     Type
  7491 ;;		None
  7492 ;; Auto vars:     Size  Location     Type
  7493 ;;		None
  7494 ;; Return value:  Size  Location     Type
  7495 ;;                  1    wreg      void 
  7496 ;; Registers used:
  7497 ;;		wreg, status,2
  7498 ;; Tracked objects:
  7499 ;;		On entry : 0/0
  7500 ;;		On exit  : 0/0
  7501 ;;		Unchanged: 0/0
  7502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7507 ;;Total ram usage:        0 bytes
  7508 ;; Hardware stack levels used: 1
  7509 ;; Hardware stack levels required when called: 12
  7510 ;; This function calls:
  7511 ;;		Nothing
  7512 ;; This function is called by:
  7513 ;;		_setup
  7514 ;; This function uses a non-reentrant model
  7515 ;;
  7516                           
  7517                           	psect	text2
  7518   00C872                     __ptext2:
  7519                           	callstack 0
  7520   00C872                     _universalEventsInit:
  7521                           	callstack 17
  7522                           
  7523                           ;../universalEvents.c: 94:     startWait.val = 0;
  7524                           
  7525                           ; BSR set to: 0
  7526                           ;incstack = 0
  7527   00C872  0E00               	movlw	0
  7528   00C874  6E19               	movwf	_startWait^0,c
  7529   00C876  0E00               	movlw	0
  7530   00C878  6E1A               	movwf	(_startWait+1)^0,c
  7531   00C87A  0E00               	movlw	0
  7532   00C87C  6E1B               	movwf	(_startWait+2)^0,c
  7533   00C87E  0E00               	movlw	0
  7534   00C880  6E1C               	movwf	(_startWait+3)^0,c
  7535   00C882  0012               	return		;funcret
  7536   00C884                     __end_of_universalEventsInit:
  7537                           	callstack 0
  7538                           
  7539 ;; *************** function _initServos *****************
  7540 ;; Defined at:
  7541 ;;		line 124 in file "../servo.c"
  7542 ;; Parameters:    Size  Location     Type
  7543 ;;		None
  7544 ;; Auto vars:     Size  Location     Type
  7545 ;;  io              1   72[BANK0 ] unsigned char 
  7546 ;; Return value:  Size  Location     Type
  7547 ;;                  1    wreg      void 
  7548 ;; Registers used:
  7549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7550 ;; Tracked objects:
  7551 ;;		On entry : 0/0
  7552 ;;		On exit  : 0/0
  7553 ;;		Unchanged: 0/0
  7554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7556 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7557 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7558 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7559 ;;Total ram usage:        5 bytes
  7560 ;; Hardware stack levels used: 1
  7561 ;; Hardware stack levels required when called: 15
  7562 ;; This function calls:
  7563 ;;		_getNV
  7564 ;;		_readNVM
  7565 ;;		_setOutputPosition
  7566 ;;		_tickGet
  7567 ;; This function is called by:
  7568 ;;		_setup
  7569 ;; This function uses a non-reentrant model
  7570 ;;
  7571                           
  7572                           	psect	text3
  7573   007E28                     __ptext3:
  7574                           	callstack 0
  7575   007E28                     _initServos:
  7576                           	callstack 14
  7577                           
  7578                           ;incstack = 0
  7579   007E28  0E00               	movlw	0
  7580   007E2A  0100               	movlb	0	; () banked
  7581   007E2C  6FA8               	movwf	initServos@io& (0+255),b
  7582   007E2E                     l23115:
  7583                           
  7584                           ; BSR set to: 0
  7585   007E2E  51A8               	movf	initServos@io& (0+255),w,b
  7586   007E30  0D07               	mullw	7
  7587   007E32  50F3               	movf	243,w,c
  7588   007E34  0F11               	addlw	17
  7589   007E36  ECD2  F05F         	call	_getNV
  7590   007E3A  0100               	movlb	0	; () banked
  7591   007E3C  A58D               	btfss	?_getNV& (0+255),2,b
  7592   007E3E  D009               	goto	l23119
  7593                           
  7594                           ; BSR set to: 0
  7595   007E40  0E10               	movlw	low _servoState
  7596   007E42  25A8               	addwf	initServos@io& (0+255),w,b
  7597   007E44  6ED9               	movwf	fsr2l,c
  7598   007E46  6ADA               	clrf	fsr2h,c
  7599   007E48  0E01               	movlw	high _servoState
  7600   007E4A  22DA               	addwfc	fsr2h,f,c
  7601   007E4C  0E01               	movlw	1
  7602   007E4E  6EDF               	movwf	indf2,c
  7603   007E50  D007               	goto	l23121
  7604   007E52                     l23119:
  7605                           
  7606                           ; BSR set to: 0
  7607   007E52  0E10               	movlw	low _servoState
  7608   007E54  25A8               	addwf	initServos@io& (0+255),w,b
  7609   007E56  6ED9               	movwf	fsr2l,c
  7610   007E58  6ADA               	clrf	fsr2h,c
  7611   007E5A  0E01               	movlw	high _servoState
  7612   007E5C  22DA               	addwfc	fsr2h,f,c
  7613   007E5E  6ADF               	clrf	indf2,c
  7614   007E60                     l23121:
  7615                           
  7616                           ; BSR set to: 0
  7617   007E60  EC45  F05C         	call	_tickGet	;wreg free
  7618   007E64  0100               	movlb	0	; () banked
  7619   007E66  51A8               	movf	initServos@io& (0+255),w,b
  7620   007E68  0D04               	mullw	4
  7621   007E6A  0E88               	movlw	low _ticksWhenStopped
  7622   007E6C  24F3               	addwf	243,w,c
  7623   007E6E  6ED9               	movwf	fsr2l,c
  7624   007E70  0E03               	movlw	high _ticksWhenStopped
  7625   007E72  20F4               	addwfc	prodh,w,c
  7626   007E74  6EDA               	movwf	fsr2h,c
  7627   007E76  C08D  FFDE         	movff	?_tickGet,postinc2
  7628   007E7A  C08E  FFDE         	movff	?_tickGet+1,postinc2
  7629   007E7E  C08F  FFDE         	movff	?_tickGet+2,postinc2
  7630   007E82  C090  FFDE         	movff	?_tickGet+3,postinc2
  7631                           
  7632                           ; BSR set to: 0
  7633   007E86  51A8               	movf	initServos@io& (0+255),w,b
  7634   007E88  0D07               	mullw	7
  7635   007E8A  50F3               	movf	243,w,c
  7636   007E8C  0F11               	addlw	17
  7637   007E8E  ECD2  F05F         	call	_getNV
  7638   007E92  0100               	movlb	0	; () banked
  7639   007E94  A58D               	btfss	?_getNV& (0+255),2,b
  7640   007E96  D020               	goto	l23129
  7641                           
  7642                           ; BSR set to: 0
  7643   007E98  51A8               	movf	initServos@io& (0+255),w,b
  7644   007E9A  0D07               	mullw	7
  7645   007E9C  50F3               	movf	243,w,c
  7646   007E9E  0F10               	addlw	16
  7647   007EA0  ECD2  F05F         	call	_getNV
  7648   007EA4  0100               	movlb	0	; () banked
  7649   007EA6  518D               	movf	?_getNV& (0+255),w,b
  7650   007EA8  6FA7               	movwf	_initServos$8094& (0+255),b
  7651                           
  7652                           ; BSR set to: 0
  7653   007EAA  0EDE               	movlw	222
  7654   007EAC  25A8               	addwf	initServos@io& (0+255),w,b
  7655   007EAE  6FA4               	movwf	??_initServos& (0+255),b
  7656   007EB0  6BA5               	clrf	(??_initServos+1)& (0+255),b
  7657   007EB2  0E03               	movlw	3
  7658   007EB4  23A5               	addwfc	(??_initServos+1)& (0+255),f,b
  7659   007EB6  C0A4  F091         	movff	??_initServos,readNVM@index
  7660   007EBA  C0A5  F092         	movff	??_initServos+1,readNVM@index+1
  7661   007EBE  6B93               	clrf	(readNVM@index+2)& (0+255),b
  7662   007EC0  0E00               	movlw	0
  7663   007EC2  EC31  F05B         	call	_readNVM
  7664   007EC6  0100               	movlb	0	; () banked
  7665   007EC8  5191               	movf	?_readNVM& (0+255),w,b
  7666   007ECA  6FA1               	movwf	setOutputPosition@pos& (0+255),b
  7667   007ECC  C0A7  F0A2         	movff	_initServos$8094,setOutputPosition@type
  7668   007ED0  51A8               	movf	initServos@io& (0+255),w,b
  7669   007ED2  ECAC  F057         	call	_setOutputPosition
  7670   007ED6  D019               	goto	l23133
  7671   007ED8                     l23129:
  7672                           
  7673                           ; BSR set to: 0
  7674   007ED8  51A8               	movf	initServos@io& (0+255),w,b
  7675   007EDA  0D07               	mullw	7
  7676   007EDC  50F3               	movf	243,w,c
  7677   007EDE  0F12               	addlw	18
  7678   007EE0  ECD2  F05F         	call	_getNV
  7679   007EE4  0100               	movlb	0	; () banked
  7680   007EE6  518D               	movf	?_getNV& (0+255),w,b
  7681   007EE8  6FA7               	movwf	_initServos$8094& (0+255),b
  7682   007EEA  51A8               	movf	initServos@io& (0+255),w,b
  7683   007EEC  0D07               	mullw	7
  7684   007EEE  50F3               	movf	243,w,c
  7685   007EF0  0F10               	addlw	16
  7686   007EF2  ECD2  F05F         	call	_getNV
  7687   007EF6  0100               	movlb	0	; () banked
  7688   007EF8  518D               	movf	?_getNV& (0+255),w,b
  7689   007EFA  6FA6               	movwf	_initServos$8095& (0+255),b
  7690                           
  7691                           ; BSR set to: 0
  7692   007EFC  C0A7  F0A1         	movff	_initServos$8094,setOutputPosition@pos
  7693   007F00  C0A6  F0A2         	movff	_initServos$8095,setOutputPosition@type
  7694   007F04  51A8               	movf	initServos@io& (0+255),w,b
  7695   007F06  ECAC  F057         	call	_setOutputPosition
  7696   007F0A                     l23133:
  7697   007F0A  0E00               	movlw	low _stepsPerPollSpeed
  7698   007F0C  0100               	movlb	0	; () banked
  7699   007F0E  25A8               	addwf	initServos@io& (0+255),w,b
  7700   007F10  6ED9               	movwf	fsr2l,c
  7701   007F12  6ADA               	clrf	fsr2h,c
  7702   007F14  0E01               	movlw	high _stepsPerPollSpeed
  7703   007F16  22DA               	addwfc	fsr2h,f,c
  7704   007F18  6ADF               	clrf	indf2,c
  7705                           
  7706                           ; BSR set to: 0
  7707   007F1A  2BA8               	incf	initServos@io& (0+255),f,b
  7708                           
  7709                           ; BSR set to: 0
  7710   007F1C  0E0F               	movlw	15
  7711   007F1E  65A8               	cpfsgt	initServos@io& (0+255),b
  7712   007F20  D786               	goto	l23115
  7713                           
  7714                           ; BSR set to: 0
  7715   007F22  9EAA               	bcf	170,7,c	;volatile
  7716                           
  7717                           ; BSR set to: 0
  7718   007F24  0E3F               	movlw	-193
  7719   007F26  16CD               	andwf	205,f,c	;volatile
  7720   007F28  50CD               	movf	205,w,c	;volatile
  7721   007F2A  0BCF               	andlw	-49
  7722   007F2C  0920               	iorlw	32
  7723   007F2E  6ECD               	movwf	205,c	;volatile
  7724                           
  7725                           ; BSR set to: 0
  7726   007F30  86CD               	bsf	205,3,c	;volatile
  7727                           
  7728                           ; BSR set to: 0
  7729   007F32  82CD               	bsf	205,1,c	;volatile
  7730                           
  7731                           ; BSR set to: 0
  7732   007F34  809D               	bsf	157,0,c	;volatile
  7733                           
  7734                           ; BSR set to: 0
  7735   007F36  9EB0               	bcf	176,7,c	;volatile
  7736   007F38  0E3F               	movlw	-193
  7737   007F3A  16B1               	andwf	177,f,c	;volatile
  7738   007F3C  50B1               	movf	177,w,c	;volatile
  7739   007F3E  0BCF               	andlw	-49
  7740   007F40  0920               	iorlw	32
  7741   007F42  6EB1               	movwf	177,c	;volatile
  7742                           
  7743                           ; BSR set to: 0
  7744   007F44  86B1               	bsf	177,3,c	;volatile
  7745                           
  7746                           ; BSR set to: 0
  7747   007F46  82B1               	bsf	177,1,c	;volatile
  7748                           
  7749                           ; BSR set to: 0
  7750   007F48  82A0               	bsf	160,1,c	;volatile
  7751                           
  7752                           ; BSR set to: 0
  7753                           ;../servo.c: 176:     servoInBlock = io -1;
  7754   007F4A  05A8               	decf	initServos@io& (0+255),w,b
  7755   007F4C  6FC9               	movwf	_servoInBlock& (0+255),b
  7756                           
  7757                           ; BSR set to: 0
  7758                           ;../servo.c: 177:     servoActive[0] = 0;
  7759   007F4E  0E00               	movlw	0
  7760   007F50  6FB2               	movwf	_servoActive& (0+255),b
  7761                           
  7762                           ; BSR set to: 0
  7763                           ;../servo.c: 178:     servoActive[1] = 0;
  7764   007F52  0E00               	movlw	0
  7765   007F54  6FB3               	movwf	(_servoActive+1)& (0+255),b
  7766                           
  7767                           ; BSR set to: 0
  7768   007F56  0012               	return		;funcret
  7769   007F58                     __end_of_initServos:
  7770                           	callstack 0
  7771                           
  7772 ;; *************** function _setOutputPosition *****************
  7773 ;; Defined at:
  7774 ;;		line 148 in file "../outputs.c"
  7775 ;; Parameters:    Size  Location     Type
  7776 ;;  io              1    wreg     unsigned char 
  7777 ;;  pos             1   65[BANK0 ] unsigned char 
  7778 ;;  type            1   66[BANK0 ] unsigned char 
  7779 ;; Auto vars:     Size  Location     Type
  7780 ;;  io              1   67[BANK0 ] unsigned char 
  7781 ;; Return value:  Size  Location     Type
  7782 ;;                  1    wreg      void 
  7783 ;; Registers used:
  7784 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7785 ;; Tracked objects:
  7786 ;;		On entry : 0/0
  7787 ;;		On exit  : 0/0
  7788 ;;		Unchanged: 0/0
  7789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7790 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7791 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7793 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7794 ;;Total ram usage:        3 bytes
  7795 ;; Hardware stack levels used: 1
  7796 ;; Hardware stack levels required when called: 14
  7797 ;; This function calls:
  7798 ;;		_getNV
  7799 ;;		_setDigitalOutput
  7800 ;;		_setOutputPin
  7801 ;;		_setServoPosition
  7802 ;; This function is called by:
  7803 ;;		_initServos
  7804 ;; This function uses a non-reentrant model
  7805 ;;
  7806                           
  7807                           	psect	text4
  7808   00AF58                     __ptext4:
  7809                           	callstack 0
  7810   00AF58                     _setOutputPosition:
  7811                           	callstack 14
  7812                           
  7813                           ; BSR set to: 0
  7814                           ;incstack = 0
  7815                           ;setOutputPosition@io stored from wreg
  7816   00AF58  0100               	movlb	0	; () banked
  7817   00AF5A  6FA3               	movwf	setOutputPosition@io& (0+255),b
  7818                           
  7819                           ;../outputs.c: 149:     switch(type) {
  7820   00AF5C  D020               	goto	l21975
  7821   00AF5E                     l21963:
  7822                           
  7823                           ; BSR set to: 0
  7824                           ;../outputs.c: 156:             setDigitalOutput(io, pos);
  7825   00AF5E  C0A1  F097         	movff	setOutputPosition@pos,setDigitalOutput@state
  7826   00AF62  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7827   00AF64  ECA9  F053         	call	_setDigitalOutput
  7828   00AF68  0012               	return	
  7829   00AF6A                     l21967:
  7830                           
  7831                           ; BSR set to: 0
  7832                           ;../outputs.c: 166:             setServoPosition(io, pos);
  7833   00AF6A  C0A1  F09F         	movff	setOutputPosition@pos,setServoPosition@pos
  7834   00AF6E  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7835   00AF70  EC04  F063         	call	_setServoPosition
  7836                           
  7837                           ;../outputs.c: 167:             setOutputPin(io, getNV((16 + 7*(io) + 1) & 0x20)?TRUE:FA
      +                          LSE);
  7838   00AF74  0100               	movlb	0	; () banked
  7839   00AF76  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7840   00AF78  0D07               	mullw	7
  7841   00AF7A  50F3               	movf	243,w,c
  7842   00AF7C  0F11               	addlw	17
  7843   00AF7E  0B20               	andlw	32
  7844   00AF80  ECD2  F05F         	call	_getNV
  7845   00AF84  0100               	movlb	0	; () banked
  7846   00AF86  518D               	movf	?_getNV& (0+255),w,b
  7847   00AF88  118E               	iorwf	(?_getNV+1)& (0+255),w,b
  7848   00AF8A  B4D8               	btfsc	status,2,c
  7849   00AF8C  D002               	goto	u22950
  7850   00AF8E  0E01               	movlw	1
  7851   00AF90  D001               	goto	u22960
  7852   00AF92                     u22950:
  7853   00AF92  0E00               	movlw	0
  7854   00AF94                     u22960:
  7855   00AF94  6F91               	movwf	setOutputPin@state& (0+255),b
  7856   00AF96  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7857   00AF98  ECBC  F037         	call	_setOutputPin
  7858   00AF9C  0012               	return	
  7859   00AF9E                     l21975:
  7860   00AF9E  0100               	movlb	0	; () banked
  7861   00AFA0  51A2               	movf	setOutputPosition@type& (0+255),w,b
  7862                           
  7863                           ; Switch size 1, requested type "simple"
  7864                           ; Number of cases is 7, Range of values is 0 to 6
  7865                           ; switch strategies available:
  7866                           ; Name         Instructions Cycles
  7867                           ; simple_byte           22    12 (average)
  7868                           ;	Chosen strategy is simple_byte
  7869   00AFA2  0A00               	xorlw	0	; case 0
  7870   00AFA4  B4D8               	btfsc	status,2,c
  7871   00AFA6  0012               	return	
  7872   00AFA8  0A01               	xorlw	1	; case 1
  7873   00AFAA  B4D8               	btfsc	status,2,c
  7874   00AFAC  D7D8               	goto	l21963
  7875   00AFAE  0A03               	xorlw	3	; case 2
  7876   00AFB0  B4D8               	btfsc	status,2,c
  7877   00AFB2  D7DB               	goto	l21967
  7878   00AFB4  0A01               	xorlw	1	; case 3
  7879   00AFB6  B4D8               	btfsc	status,2,c
  7880   00AFB8  D7D8               	goto	l21967
  7881   00AFBA  0A07               	xorlw	7	; case 4
  7882   00AFBC  B4D8               	btfsc	status,2,c
  7883   00AFBE  D7D5               	goto	l21967
  7884   00AFC0  0A01               	xorlw	1	; case 5
  7885   00AFC2  B4D8               	btfsc	status,2,c
  7886   00AFC4  0012               	return	
  7887   00AFC6  0A03               	xorlw	3	; case 6
  7888   00AFC8  0012               	return	
  7889   00AFCA                     __end_of_setOutputPosition:
  7890                           	callstack 0
  7891                           
  7892 ;; *************** function _initOutputs *****************
  7893 ;; Defined at:
  7894 ;;		line 86 in file "../digitalOut.c"
  7895 ;; Parameters:    Size  Location     Type
  7896 ;;		None
  7897 ;; Auto vars:     Size  Location     Type
  7898 ;;  io              1   45[BANK0 ] unsigned char 
  7899 ;; Return value:  Size  Location     Type
  7900 ;;                  1    wreg      void 
  7901 ;; Registers used:
  7902 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7903 ;; Tracked objects:
  7904 ;;		On entry : 0/0
  7905 ;;		On exit  : 0/0
  7906 ;;		Unchanged: 0/0
  7907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7909 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7911 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7912 ;;Total ram usage:        1 bytes
  7913 ;; Hardware stack levels used: 1
  7914 ;; Hardware stack levels required when called: 12
  7915 ;; This function calls:
  7916 ;;		Nothing
  7917 ;; This function is called by:
  7918 ;;		_setup
  7919 ;; This function uses a non-reentrant model
  7920 ;;
  7921                           
  7922                           	psect	text5
  7923   00C3A6                     __ptext5:
  7924                           	callstack 0
  7925   00C3A6                     _initOutputs:
  7926                           	callstack 17
  7927                           
  7928                           ;../digitalOut.c: 88:     uint8_t io;;../digitalOut.c: 89:     for (io=0; io<16; io++) {
  7929                           
  7930                           ;incstack = 0
  7931   00C3A6  0E00               	movlw	0
  7932   00C3A8  0100               	movlb	0	; () banked
  7933   00C3AA  6F8D               	movwf	initOutputs@io& (0+255),b
  7934   00C3AC                     l15803:
  7935                           
  7936                           ; BSR set to: 0
  7937                           ;../digitalOut.c: 90:        pulseDelays[io] = 0;
  7938   00C3AC  0EA4               	movlw	low _pulseDelays
  7939   00C3AE  258D               	addwf	initOutputs@io& (0+255),w,b
  7940   00C3B0  6ED9               	movwf	fsr2l,c
  7941   00C3B2  6ADA               	clrf	fsr2h,c
  7942   00C3B4  0E02               	movlw	high _pulseDelays
  7943   00C3B6  22DA               	addwfc	fsr2h,f,c
  7944   00C3B8  6ADF               	clrf	indf2,c
  7945                           
  7946                           ;../digitalOut.c: 91:        flashDelays[io] = 0;
  7947   00C3BA  0E20               	movlw	low _flashDelays
  7948   00C3BC  258D               	addwf	initOutputs@io& (0+255),w,b
  7949   00C3BE  6ED9               	movwf	fsr2l,c
  7950   00C3C0  6ADA               	clrf	fsr2h,c
  7951   00C3C2  0E01               	movlw	high _flashDelays
  7952   00C3C4  22DA               	addwfc	fsr2h,f,c
  7953   00C3C6  6ADF               	clrf	indf2,c
  7954                           
  7955                           ; BSR set to: 0
  7956                           ;../digitalOut.c: 92:     }
  7957   00C3C8  2B8D               	incf	initOutputs@io& (0+255),f,b
  7958                           
  7959                           ; BSR set to: 0
  7960   00C3CA  0E0F               	movlw	15
  7961   00C3CC  658D               	cpfsgt	initOutputs@io& (0+255),b
  7962   00C3CE  D7EE               	goto	l15803
  7963   00C3D0  0012               	return	
  7964   00C3D2                     __end_of_initOutputs:
  7965                           	callstack 0
  7966                           
  7967 ;; *************** function _initInputScan *****************
  7968 ;; Defined at:
  7969 ;;		line 76 in file "../inputs.c"
  7970 ;; Parameters:    Size  Location     Type
  7971 ;;		None
  7972 ;; Auto vars:     Size  Location     Type
  7973 ;;  input           1   57[BANK0 ] unsigned char 
  7974 ;; Return value:  Size  Location     Type
  7975 ;;                  1    wreg      void 
  7976 ;; Registers used:
  7977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7978 ;; Tracked objects:
  7979 ;;		On entry : 0/0
  7980 ;;		On exit  : 0/0
  7981 ;;		Unchanged: 0/0
  7982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7984 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7985 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7986 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7987 ;;Total ram usage:        3 bytes
  7988 ;; Hardware stack levels used: 1
  7989 ;; Hardware stack levels required when called: 14
  7990 ;; This function calls:
  7991 ;;		_getNV
  7992 ;;		_readInput
  7993 ;;		_readNVM
  7994 ;; This function is called by:
  7995 ;;		_setup
  7996 ;; This function uses a non-reentrant model
  7997 ;;
  7998                           
  7999                           	psect	text6
  8000   009D92                     __ptext6:
  8001                           	callstack 0
  8002   009D92                     _initInputScan:
  8003                           	callstack 15
  8004                           
  8005                           ;../inputs.c: 77:     for (io=0; io<16; io++) {
  8006                           
  8007                           ; BSR set to: 0
  8008                           ;incstack = 0
  8009   009D92  0E00               	movlw	0
  8010   009D94  0100               	movlb	0	; () banked
  8011   009D96  6FCE               	movwf	_io@inputs$F849& (0+255),b
  8012   009D98                     l23163:
  8013                           
  8014                           ; BSR set to: 0
  8015   009D98  0E0F               	movlw	15
  8016   009D9A  65CE               	cpfsgt	_io@inputs$F849& (0+255),b
  8017   009D9C  D001               	goto	l23167
  8018   009D9E  0012               	return	
  8019   009DA0                     l23167:
  8020                           
  8021                           ; BSR set to: 0
  8022                           ;../inputs.c: 78:         uint8_t input = readInput(io);
  8023   009DA0  51CE               	movf	_io@inputs$F849& (0+255),w,b
  8024   009DA2  ECCD  F040         	call	_readInput
  8025   009DA6  0100               	movlb	0	; () banked
  8026   009DA8  6F99               	movwf	initInputScan@input& (0+255),b
  8027                           
  8028                           ; BSR set to: 0
  8029                           ;../inputs.c: 79:         inputState[io] = input;
  8030   009DAA  0E94               	movlw	low _inputState
  8031   009DAC  25CE               	addwf	_io@inputs$F849& (0+255),w,b
  8032   009DAE  6ED9               	movwf	fsr2l,c
  8033   009DB0  6ADA               	clrf	fsr2h,c
  8034   009DB2  0E02               	movlw	high _inputState
  8035   009DB4  22DA               	addwfc	fsr2h,f,c
  8036   009DB6  C099  FFDF         	movff	initInputScan@input,indf2
  8037                           
  8038                           ; BSR set to: 0
  8039                           ;../inputs.c: 80:         if (!(getNV((16 + 7*(io) + 1)) & 0x01)) {
  8040   009DBA  51CE               	movf	_io@inputs$F849& (0+255),w,b
  8041   009DBC  0D07               	mullw	7
  8042   009DBE  50F3               	movf	243,w,c
  8043   009DC0  0F11               	addlw	17
  8044   009DC2  ECD2  F05F         	call	_getNV
  8045   009DC6  0100               	movlb	0	; () banked
  8046   009DC8  B18D               	btfsc	?_getNV& (0+255),0,b
  8047   009DCA  D007               	goto	l23175
  8048                           
  8049                           ; BSR set to: 0
  8050                           ;../inputs.c: 81:             input = !input;
  8051   009DCC  5199               	movf	initInputScan@input& (0+255),w,b
  8052   009DCE  A4D8               	btfss	status,2,c
  8053   009DD0  D002               	goto	u24860
  8054   009DD2  0E01               	movlw	1
  8055   009DD4  D001               	goto	u24870
  8056   009DD6                     u24860:
  8057   009DD6  0E00               	movlw	0
  8058   009DD8                     u24870:
  8059   009DD8  6F99               	movwf	initInputScan@input& (0+255),b
  8060   009DDA                     l23175:
  8061                           
  8062                           ; BSR set to: 0
  8063                           ;../inputs.c: 83:         outputState[io] = input;
  8064   009DDA  0EB4               	movlw	low _outputState
  8065   009DDC  25CE               	addwf	_io@inputs$F849& (0+255),w,b
  8066   009DDE  6ED9               	movwf	fsr2l,c
  8067   009DE0  6ADA               	clrf	fsr2h,c
  8068   009DE2  0E02               	movlw	high _outputState
  8069   009DE4  22DA               	addwfc	fsr2h,f,c
  8070   009DE6  C099  FFDF         	movff	initInputScan@input,indf2
  8071                           
  8072                           ; BSR set to: 0
  8073                           ;../inputs.c: 84:         if (getNV((16 + 7*(io) + 1)) & 0x10) {
  8074   009DEA  51CE               	movf	_io@inputs$F849& (0+255),w,b
  8075   009DEC  0D07               	mullw	7
  8076   009DEE  50F3               	movf	243,w,c
  8077   009DF0  0F11               	addlw	17
  8078   009DF2  ECD2  F05F         	call	_getNV
  8079   009DF6  0100               	movlb	0	; () banked
  8080   009DF8  A98D               	btfss	?_getNV& (0+255),4,b
  8081   009DFA  D017               	goto	l23181
  8082                           
  8083                           ; BSR set to: 0
  8084                           ;../inputs.c: 85:             outputState[io] = (uint8_t)readNVM(EEPROM_NVM_TYPE, ((eepr
      +                          om_address_t)((0x3FF -8))-25)+io);
  8085   009DFC  0EDE               	movlw	222
  8086   009DFE  25CE               	addwf	_io@inputs$F849& (0+255),w,b
  8087   009E00  6F97               	movwf	??_initInputScan& (0+255),b
  8088   009E02  6B98               	clrf	(??_initInputScan+1)& (0+255),b
  8089   009E04  0E03               	movlw	3
  8090   009E06  2398               	addwfc	(??_initInputScan+1)& (0+255),f,b
  8091   009E08  C097  F091         	movff	??_initInputScan,readNVM@index
  8092   009E0C  C098  F092         	movff	??_initInputScan+1,readNVM@index+1
  8093   009E10  6B93               	clrf	(readNVM@index+2)& (0+255),b
  8094   009E12  0E00               	movlw	0
  8095   009E14  EC31  F05B         	call	_readNVM
  8096   009E18  0EB4               	movlw	low _outputState
  8097   009E1A  0100               	movlb	0	; () banked
  8098   009E1C  25CE               	addwf	_io@inputs$F849& (0+255),w,b
  8099   009E1E  6ED9               	movwf	fsr2l,c
  8100   009E20  6ADA               	clrf	fsr2h,c
  8101   009E22  0E02               	movlw	high _outputState
  8102   009E24  22DA               	addwfc	fsr2h,f,c
  8103   009E26  C091  FFDF         	movff	?_readNVM,indf2
  8104   009E2A                     l23181:
  8105                           
  8106                           ; BSR set to: 0
  8107                           ;../inputs.c: 87:         delayCount[io] = 0;
  8108   009E2A  0E84               	movlw	low _delayCount
  8109   009E2C  25CE               	addwf	_io@inputs$F849& (0+255),w,b
  8110   009E2E  6ED9               	movwf	fsr2l,c
  8111   009E30  6ADA               	clrf	fsr2h,c
  8112   009E32  0E02               	movlw	high _delayCount
  8113   009E34  22DA               	addwfc	fsr2h,f,c
  8114   009E36  6ADF               	clrf	indf2,c
  8115                           
  8116                           ; BSR set to: 0
  8117                           ;../inputs.c: 88:     }
  8118   009E38  2BCE               	incf	_io@inputs$F849& (0+255),f,b
  8119   009E3A  D7AE               	goto	l23163
  8120   009E3C                     __end_of_initInputScan:
  8121                           	callstack 0
  8122                           
  8123 ;; *************** function _powerUp *****************
  8124 ;; Defined at:
  8125 ;;		line 876 in file "../../VLCBlib_PIC/vlcb.c"
  8126 ;; Parameters:    Size  Location     Type
  8127 ;;		None
  8128 ;; Auto vars:     Size  Location     Type
  8129 ;;  i               1   13[BANK1 ] unsigned char 
  8130 ;;  divider         1    0        unsigned char 
  8131 ;; Return value:  Size  Location     Type
  8132 ;;                  1    wreg      void 
  8133 ;; Registers used:
  8134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8135 ;; Tracked objects:
  8136 ;;		On entry : 0/0
  8137 ;;		On exit  : 0/0
  8138 ;;		Unchanged: 0/0
  8139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8141 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8142 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8143 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8144 ;;Total ram usage:        5 bytes
  8145 ;; Hardware stack levels used: 1
  8146 ;; Hardware stack levels required when called: 18
  8147 ;; This function calls:
  8148 ;;		NULL
  8149 ;;		_ackPowerUp
  8150 ;;		_bootPowerUp
  8151 ;;		_canPowerUp
  8152 ;;		_consumer2QPowerUp
  8153 ;;		_initTicker
  8154 ;;		_initTimedResponse
  8155 ;;		_leds_powerUp
  8156 ;;		_mnsPowerUp
  8157 ;;		_nvPowerUp
  8158 ;;		_producerPowerUp
  8159 ;;		_teachPowerUp
  8160 ;; This function is called by:
  8161 ;;		_main
  8162 ;; This function uses a non-reentrant model
  8163 ;;
  8164                           
  8165                           	psect	text7
  8166   008B2A                     __ptext7:
  8167                           	callstack 0
  8168   008B2A                     _powerUp:
  8169                           	callstack 12
  8170                           
  8171                           ;../../VLCBlib_PIC/vlcb.c: 877:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 878:     uint8_
      +                          t divider;;../../VLCBlib_PIC/vlcb.c: 881:     initTicker(0);
  8172                           
  8173                           ; BSR set to: 0
  8174                           ;incstack = 0
  8175   008B2A  0E00               	movlw	0
  8176   008B2C  EC0F  F05F         	call	_initTicker
  8177                           
  8178                           ;../../VLCBlib_PIC/vlcb.c: 882:     initTimedResponse();
  8179   008B30  EC84  F064         	call	_initTimedResponse	;wreg free
  8180                           
  8181                           ;../../VLCBlib_PIC/vlcb.c: 883:     leds_powerUp();
  8182   008B34  ECCF  F060         	call	_leds_powerUp	;wreg free
  8183                           
  8184                           ;../../VLCBlib_PIC/vlcb.c: 884:     timedResponseDelay = 5;
  8185   008B38  0E05               	movlw	5
  8186   008B3A  0101               	movlb	1	; () banked
  8187   008B3C  6F64               	movwf	_timedResponseDelay& (0+255),b
  8188                           
  8189                           ; BSR set to: 1
  8190                           ;../../VLCBlib_PIC/vlcb.c: 886:     for (i=0; i<9; i++) {
  8191   008B3E  0E00               	movlw	0
  8192   008B40  6FCB               	movwf	powerUp@i& (0+255),b
  8193   008B42                     l25259:
  8194                           
  8195                           ; BSR set to: 1
  8196                           ;../../VLCBlib_PIC/vlcb.c: 887:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >powerUp != ((void*)0))) {
  8197   008B42  51CB               	movf	powerUp@i& (0+255),w,b
  8198   008B44  0D02               	mullw	2
  8199   008B46  0E69               	movlw	low _services
  8200   008B48  24F3               	addwf	243,w,c
  8201   008B4A  6EF6               	movwf	tblptrl,c
  8202   008B4C  0EEE               	movlw	high _services
  8203   008B4E  20F4               	addwfc	244,w,c
  8204   008B50  6EF7               	movwf	tblptrh,c
  8205   008B52                     	if	1	;There are 3 active tblptr bytes
  8206   008B52  6AF8               	clrf	tblptru,c
  8207   008B54  0E00               	movlw	low (__mediumconst shr (0+16))
  8208   008B56  22F8               	addwfc	tblptru,f,c
  8209   008B58                     	endif
  8210   008B58  0009               	tblrd		*+
  8211   008B5A  50F5               	movf	tablat,w,c
  8212   008B5C  0009               	tblrd		*+
  8213   008B5E  10F5               	iorwf	tablat,w,c
  8214   008B60  B4D8               	btfsc	status,2,c
  8215   008B62  D04B               	goto	u27669
  8216                           
  8217                           ; BSR set to: 1
  8218   008B64  51CB               	movf	powerUp@i& (0+255),w,b
  8219   008B66  0D02               	mullw	2
  8220   008B68  0E69               	movlw	low _services
  8221   008B6A  24F3               	addwf	243,w,c
  8222   008B6C  6EF6               	movwf	tblptrl,c
  8223   008B6E  0EEE               	movlw	high _services
  8224   008B70  20F4               	addwfc	244,w,c
  8225   008B72  6EF7               	movwf	tblptrh,c
  8226   008B74                     	if	1	;There are 3 active tblptr bytes
  8227   008B74  6AF8               	clrf	tblptru,c
  8228   008B76  0E00               	movlw	low (__mediumconst shr (0+16))
  8229   008B78  22F8               	addwfc	tblptru,f,c
  8230   008B7A                     	endif
  8231   008B7A  0009               	tblrd		*+
  8232   008B7C  CFF5 F1C7          	movff	tablat,??_powerUp
  8233   008B80  0009               	tblrd		*+
  8234   008B82  CFF5 F1C8          	movff	tablat,??_powerUp+1
  8235   008B86  0E04               	movlw	4
  8236   008B88  27C7               	addwf	??_powerUp& (0+255),f,b
  8237   008B8A  0E00               	movlw	0
  8238   008B8C  23C8               	addwfc	(??_powerUp+1)& (0+255),f,b
  8239   008B8E  C1C7  FFF6         	movff	??_powerUp,tblptrl
  8240   008B92  C1C8  FFF7         	movff	??_powerUp+1,tblptrh
  8241   008B96                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8242   008B96  6AF8               	clrf	tblptru,c
  8243   008B98                     	endif
  8244   008B98                     	if	0	;tblptru may be non-zero
  8245   008B98                     	endif
  8246   008B98  0009               	tblrd		*+
  8247   008B9A  50F5               	movf	tablat,w,c
  8248   008B9C  0009               	tblrd		*+
  8249   008B9E  10F5               	iorwf	tablat,w,c
  8250   008BA0  B4D8               	btfsc	status,2,c
  8251   008BA2  D02B               	goto	u27669
  8252                           
  8253                           ; BSR set to: 1
  8254                           ;../../VLCBlib_PIC/vlcb.c: 888:             services[i]->powerUp();
  8255   008BA4  51CB               	movf	powerUp@i& (0+255),w,b
  8256   008BA6  0D02               	mullw	2
  8257   008BA8  0E69               	movlw	low _services
  8258   008BAA  24F3               	addwf	243,w,c
  8259   008BAC  6EF6               	movwf	tblptrl,c
  8260   008BAE  0EEE               	movlw	high _services
  8261   008BB0  20F4               	addwfc	244,w,c
  8262   008BB2  6EF7               	movwf	tblptrh,c
  8263   008BB4                     	if	1	;There are 3 active tblptr bytes
  8264   008BB4  6AF8               	clrf	tblptru,c
  8265   008BB6  0E00               	movlw	low (__mediumconst shr (0+16))
  8266   008BB8  22F8               	addwfc	tblptru,f,c
  8267   008BBA                     	endif
  8268   008BBA  0009               	tblrd		*+
  8269   008BBC  CFF5 F1C7          	movff	tablat,??_powerUp
  8270   008BC0  0009               	tblrd		*+
  8271   008BC2  CFF5 F1C8          	movff	tablat,??_powerUp+1
  8272   008BC6  0E04               	movlw	4
  8273   008BC8  27C7               	addwf	??_powerUp& (0+255),f,b
  8274   008BCA  0E00               	movlw	0
  8275   008BCC  23C8               	addwfc	(??_powerUp+1)& (0+255),f,b
  8276   008BCE  C1C7  FFF6         	movff	??_powerUp,tblptrl
  8277   008BD2  C1C8  FFF7         	movff	??_powerUp+1,tblptrh
  8278   008BD6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8279   008BD6  6AF8               	clrf	tblptru,c
  8280   008BD8                     	endif
  8281   008BD8                     	if	0	;tblptru may be non-zero
  8282   008BD8                     	endif
  8283   008BD8  0009               	tblrd		*+
  8284   008BDA  CFF5 F1C9          	movff	tablat,??_powerUp+2
  8285   008BDE  0009               	tblrd		*+
  8286   008BE0  CFF5 F1CA          	movff	tablat,??_powerUp+3
  8287   008BE4  D801               	call	u27668
  8288   008BE6  D009               	goto	u27669
  8289   008BE8                     u27668:
  8290   008BE8  0005               	push	
  8291   008BEA  6EFA               	movwf	pclath,c
  8292   008BEC  51C9               	movf	(??_powerUp+2)& (0+255),w,b
  8293   008BEE  6EFD               	movwf	tosl,c
  8294   008BF0  51CA               	movf	(??_powerUp+3)& (0+255),w,b
  8295   008BF2  6EFE               	movwf	tosh,c
  8296   008BF4  6AFF               	clrf	tosu,c
  8297   008BF6  50FA               	movf	pclath,w,c
  8298   008BF8  0012               	return		;indir
  8299   008BFA                     u27669:
  8300                           
  8301                           ;../../VLCBlib_PIC/vlcb.c: 890:     }
  8302   008BFA  0101               	movlb	1	; () banked
  8303   008BFC  2BCB               	incf	powerUp@i& (0+255),f,b
  8304                           
  8305                           ; BSR set to: 1
  8306   008BFE  0E08               	movlw	8
  8307   008C00  65CB               	cpfsgt	powerUp@i& (0+255),b
  8308   008C02  D79F               	goto	l25259
  8309   008C04  0012               	return	
  8310   008C06                     __end_of_powerUp:
  8311                           	callstack 0
  8312                           
  8313 ;; *************** function _producerPowerUp *****************
  8314 ;; Defined at:
  8315 ;;		line 108 in file "../../VLCBlib_PIC/event_producer_happening.c"
  8316 ;; Parameters:    Size  Location     Type
  8317 ;;		None
  8318 ;; Auto vars:     Size  Location     Type
  8319 ;;  i               1   45[BANK0 ] unsigned char 
  8320 ;; Return value:  Size  Location     Type
  8321 ;;                  1    wreg      void 
  8322 ;; Registers used:
  8323 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8324 ;; Tracked objects:
  8325 ;;		On entry : 0/0
  8326 ;;		On exit  : 0/0
  8327 ;;		Unchanged: 0/0
  8328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8330 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8332 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8333 ;;Total ram usage:        1 bytes
  8334 ;; Hardware stack levels used: 1
  8335 ;; Hardware stack levels required when called: 12
  8336 ;; This function calls:
  8337 ;;		Nothing
  8338 ;; This function is called by:
  8339 ;;		_powerUp
  8340 ;; This function uses a non-reentrant model
  8341 ;;
  8342                           
  8343                           	psect	text8
  8344   00C2EE                     __ptext8:
  8345                           	callstack 0
  8346   00C2EE                     _producerPowerUp:
  8347                           	callstack 17
  8348                           
  8349                           ;../../VLCBlib_PIC/event_producer_happening.c: 109:     uint8_t i;;../../VLCBlib_PIC/eve
      +                          nt_producer_happening.c: 110:     for (i=1; i <= 1; i++) {
  8350                           
  8351                           ; BSR set to: 1
  8352                           ;incstack = 0
  8353   00C2EE  0E01               	movlw	1
  8354   00C2F0  0100               	movlb	0	; () banked
  8355   00C2F2  6F8D               	movwf	producerPowerUp@i& (0+255),b
  8356   00C2F4                     l25091:
  8357                           
  8358                           ; BSR set to: 0
  8359                           ;../../VLCBlib_PIC/event_producer_happening.c: 111:         producerDiagnostics[i].asUin
      +                          t = 0;
  8360   00C2F4  518D               	movf	producerPowerUp@i& (0+255),w,b
  8361   00C2F6  0D02               	mullw	2
  8362   00C2F8  0EAE               	movlw	low _producerDiagnostics
  8363   00C2FA  24F3               	addwf	243,w,c
  8364   00C2FC  6ED9               	movwf	fsr2l,c
  8365   00C2FE  0E01               	movlw	high _producerDiagnostics
  8366   00C300  20F4               	addwfc	prodh,w,c
  8367   00C302  6EDA               	movwf	fsr2h,c
  8368   00C304  6ADE               	clrf	postinc2,c
  8369   00C306  6ADD               	clrf	postdec2,c
  8370                           
  8371                           ; BSR set to: 0
  8372                           ;../../VLCBlib_PIC/event_producer_happening.c: 112:     }
  8373   00C308  2B8D               	incf	producerPowerUp@i& (0+255),f,b
  8374                           
  8375                           ; BSR set to: 0
  8376   00C30A  0E01               	movlw	1
  8377   00C30C  658D               	cpfsgt	producerPowerUp@i& (0+255),b
  8378   00C30E  D7F2               	goto	l25091
  8379                           
  8380                           ; BSR set to: 0
  8381                           ;../../VLCBlib_PIC/event_producer_happening.c: 113:     producerDiagnostics[0].asUint = 
      +                          1;
  8382   00C310  0E00               	movlw	0
  8383   00C312  0101               	movlb	1	; () banked
  8384   00C314  6FAF               	movwf	(_producerDiagnostics+1)& (0+255),b
  8385   00C316  0E01               	movlw	1
  8386   00C318  6FAE               	movwf	_producerDiagnostics& (0+255),b
  8387                           
  8388                           ; BSR set to: 1
  8389   00C31A  0012               	return		;funcret
  8390   00C31C                     __end_of_producerPowerUp:
  8391                           	callstack 0
  8392                           
  8393 ;; *************** function _canPowerUp *****************
  8394 ;; Defined at:
  8395 ;;		line 217 in file "../../VLCBlib_PIC/can18_ecan.c"
  8396 ;; Parameters:    Size  Location     Type
  8397 ;;		None
  8398 ;; Auto vars:     Size  Location     Type
  8399 ;;  temp            2   56[BANK0 ] int 
  8400 ;; Return value:  Size  Location     Type
  8401 ;;                  1    wreg      void 
  8402 ;; Registers used:
  8403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8404 ;; Tracked objects:
  8405 ;;		On entry : 0/0
  8406 ;;		On exit  : 0/0
  8407 ;;		Unchanged: 0/0
  8408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8410 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8411 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8412 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8413 ;;Total ram usage:        3 bytes
  8414 ;; Hardware stack levels used: 1
  8415 ;; Hardware stack levels required when called: 14
  8416 ;; This function calls:
  8417 ;;		_readNVM
  8418 ;;		_tickGet
  8419 ;; This function is called by:
  8420 ;;		_powerUp
  8421 ;; This function uses a non-reentrant model
  8422 ;;
  8423                           
  8424                           	psect	text9
  8425   007136                     __ptext9:
  8426                           	callstack 0
  8427   007136                     _canPowerUp:
  8428                           	callstack 15
  8429                           
  8430                           ;../../VLCBlib_PIC/can18_ecan.c: 218:     int temp;;../../VLCBlib_PIC/can18_ecan.c: 221:
      +                               rxQueue.readIndex = 0;
  8431                           
  8432                           ; BSR set to: 1
  8433                           ;incstack = 0
  8434   007136  0E00               	movlw	0
  8435   007138  6E28               	movwf	(_rxQueue+2)^0,c
  8436                           
  8437                           ;../../VLCBlib_PIC/can18_ecan.c: 222:     rxQueue.writeIndex = 0;
  8438   00713A  0E00               	movlw	0
  8439   00713C  6E29               	movwf	(_rxQueue+3)^0,c
  8440                           
  8441                           ;../../VLCBlib_PIC/can18_ecan.c: 223:     rxQueue.messages = rxBuffers;
  8442   00713E  0EC8               	movlw	low _rxBuffers
  8443   007140  6E26               	movwf	_rxQueue^0,c
  8444   007142  0E07               	movlw	high _rxBuffers
  8445   007144  6E27               	movwf	(_rxQueue+1)^0,c
  8446                           
  8447                           ;../../VLCBlib_PIC/can18_ecan.c: 224:     rxQueue.size = 32;
  8448   007146  0E20               	movlw	32
  8449   007148  6E2A               	movwf	(_rxQueue+4)^0,c
  8450                           
  8451                           ;../../VLCBlib_PIC/can18_ecan.c: 226:     txQueue.readIndex = 0;
  8452   00714A  0E00               	movlw	0
  8453   00714C  0101               	movlb	1	; () banked
  8454   00714E  6FAB               	movwf	(_txQueue+2)& (0+255),b
  8455                           
  8456                           ; BSR set to: 1
  8457                           ;../../VLCBlib_PIC/can18_ecan.c: 227:     txQueue.writeIndex = 0;
  8458   007150  0E00               	movlw	0
  8459   007152  6FAC               	movwf	(_txQueue+3)& (0+255),b
  8460                           
  8461                           ;../../VLCBlib_PIC/can18_ecan.c: 228:     txQueue.messages = txBuffers;
  8462   007154  0E00               	movlw	low _txBuffers
  8463   007156  6FA9               	movwf	_txQueue& (0+255),b
  8464   007158  0E05               	movlw	high _txBuffers
  8465   00715A  6FAA               	movwf	(_txQueue+1)& (0+255),b
  8466                           
  8467                           ; BSR set to: 1
  8468                           ;../../VLCBlib_PIC/can18_ecan.c: 229:     txQueue.size = 8;
  8469   00715C  0E08               	movlw	8
  8470   00715E  6FAD               	movwf	(_txQueue+4)& (0+255),b
  8471                           
  8472                           ; BSR set to: 1
  8473                           ;../../VLCBlib_PIC/can18_ecan.c: 233:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FE);
  8474   007160  0EFE               	movlw	254
  8475   007162  0100               	movlb	0	; () banked
  8476   007164  6F91               	movwf	readNVM@index& (0+255),b
  8477   007166  0E03               	movlw	3
  8478   007168  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8479   00716A  0E00               	movlw	0
  8480   00716C  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8481   00716E  0E00               	movlw	0
  8482   007170  EC31  F05B         	call	_readNVM
  8483   007174  C091  F098         	movff	?_readNVM,canPowerUp@temp
  8484   007178  C092  F099         	movff	?_readNVM+1,canPowerUp@temp+1
  8485                           
  8486                           ;../../VLCBlib_PIC/can18_ecan.c: 234:     if (temp < 0) {
  8487   00717C  0100               	movlb	0	; () banked
  8488   00717E  AF99               	btfss	(canPowerUp@temp+1)& (0+255),7,b
  8489   007180  D003               	goto	l2465
  8490                           
  8491                           ; BSR set to: 0
  8492                           ;../../VLCBlib_PIC/can18_ecan.c: 236:         canId = 0;
  8493   007182  0E00               	movlw	0
  8494   007184  6FB9               	movwf	_canId& (0+255),b
  8495                           
  8496                           ;../../VLCBlib_PIC/can18_ecan.c: 237:     } else {
  8497   007186  D002               	goto	l24579
  8498   007188                     l2465:
  8499                           
  8500                           ; BSR set to: 0
  8501                           ;../../VLCBlib_PIC/can18_ecan.c: 238:         canId = (uint8_t)temp;
  8502   007188  C098  F0B9         	movff	canPowerUp@temp,_canId
  8503   00718C                     l24579:
  8504                           
  8505                           ; BSR set to: 0
  8506                           ;../../VLCBlib_PIC/can18_ecan.c: 242:     for (temp=1; temp <= 18; temp++) {
  8507   00718C  0E00               	movlw	0
  8508   00718E  6F99               	movwf	(canPowerUp@temp+1)& (0+255),b
  8509   007190  0E01               	movlw	1
  8510   007192  6F98               	movwf	canPowerUp@temp& (0+255),b
  8511   007194                     l24585:
  8512                           
  8513                           ; BSR set to: 0
  8514                           ;../../VLCBlib_PIC/can18_ecan.c: 243:         canDiagnostics[temp].asUint = 0;
  8515   007194  90D8               	bcf	status,0,c
  8516   007196  3598               	rlcf	canPowerUp@temp& (0+255),w,b
  8517   007198  6ED9               	movwf	fsr2l,c
  8518   00719A  3599               	rlcf	(canPowerUp@temp+1)& (0+255),w,b
  8519   00719C  6EDA               	movwf	fsr2h,c
  8520   00719E  0E66               	movlw	low _canDiagnostics
  8521   0071A0  26D9               	addwf	fsr2l,f,c
  8522   0071A2  0E01               	movlw	high _canDiagnostics
  8523   0071A4  22DA               	addwfc	fsr2h,f,c
  8524   0071A6  6ADE               	clrf	postinc2,c
  8525   0071A8  6ADD               	clrf	postdec2,c
  8526                           
  8527                           ; BSR set to: 0
  8528                           ;../../VLCBlib_PIC/can18_ecan.c: 244:     }
  8529   0071AA  4B98               	infsnz	canPowerUp@temp& (0+255),f,b
  8530   0071AC  2B99               	incf	(canPowerUp@temp+1)& (0+255),f,b
  8531                           
  8532                           ; BSR set to: 0
  8533   0071AE  BF99               	btfsc	(canPowerUp@temp+1)& (0+255),7,b
  8534   0071B0  D7F1               	goto	l24585
  8535   0071B2  5199               	movf	(canPowerUp@temp+1)& (0+255),w,b
  8536   0071B4  E104               	bnz	u26870
  8537   0071B6  0E13               	movlw	19
  8538   0071B8  5D98               	subwf	canPowerUp@temp& (0+255),w,b
  8539   0071BA  A0D8               	btfss	status,0,c
  8540   0071BC  D7EB               	goto	l24585
  8541   0071BE                     u26870:
  8542                           
  8543                           ; BSR set to: 0
  8544                           ;../../VLCBlib_PIC/can18_ecan.c: 245:     canDiagnostics[0x00].asUint = 18;
  8545   0071BE  0E00               	movlw	0
  8546   0071C0  0101               	movlb	1	; () banked
  8547   0071C2  6F67               	movwf	(_canDiagnostics+1)& (0+255),b
  8548   0071C4  0E12               	movlw	18
  8549   0071C6  6F66               	movwf	_canDiagnostics& (0+255),b
  8550                           
  8551                           ;../../VLCBlib_PIC/can18_ecan.c: 248:     canTransmitFailed=0;
  8552   0071C8  0E00               	movlw	0
  8553   0071CA  0100               	movlb	0	; () banked
  8554   0071CC  6FB8               	movwf	_canTransmitFailed& (0+255),b
  8555                           
  8556                           ;../../VLCBlib_PIC/can18_ecan.c: 249:     IPR5 = 0;
  8557   0071CE  0E00               	movlw	0
  8558   0071D0  6E78               	movwf	120,c	;volatile
  8559                           
  8560                           ;../../VLCBlib_PIC/can18_ecan.c: 252:     CANCON = 0b10000000;
  8561   0071D2  0E80               	movlw	128
  8562   0071D4  6E6F               	movwf	111,c	;volatile
  8563   0071D6                     l2469:
  8564   0071D6  AE6E               	btfss	110,7,c	;volatile
  8565   0071D8  D7FE               	goto	l2469
  8566                           
  8567                           ;../../VLCBlib_PIC/can18_ecan.c: 256:     ECANCON = 0b10110000;
  8568   0071DA  0EB0               	movlw	176
  8569   0071DC  6E72               	movwf	114,c	;volatile
  8570                           
  8571                           ;../../VLCBlib_PIC/can18_ecan.c: 257:     BSEL0 = 0;
  8572   0071DE  0E00               	movlw	0
  8573   0071E0  010E               	movlb	14	; () banked
  8574   0071E2  6F7D               	movwf	125,b	;volatile
  8575                           
  8576                           ;../../VLCBlib_PIC/can18_ecan.c: 281:       BRGCON1 = 0b00001111;
  8577   0071E4  0E0F               	movlw	15
  8578   0071E6  6F43               	movwf	67,b	;volatile
  8579                           
  8580                           ;../../VLCBlib_PIC/can18_ecan.c: 284:     BRGCON2 = 0b10011110;
  8581   0071E8  0E9E               	movlw	158
  8582   0071EA  6F44               	movwf	68,b	;volatile
  8583                           
  8584                           ;../../VLCBlib_PIC/can18_ecan.c: 285:     BRGCON3 = 0b00000011;
  8585   0071EC  0E03               	movlw	3
  8586   0071EE  6F45               	movwf	69,b	;volatile
  8587                           
  8588                           ;../../VLCBlib_PIC/can18_ecan.c: 286:     CIOCON = 0b00100000;
  8589   0071F0  0E20               	movlw	32
  8590   0071F2  6E70               	movwf	112,c	;volatile
  8591                           
  8592                           ;../../VLCBlib_PIC/can18_ecan.c: 290:     RXM0SIDH = 0;
  8593   0071F4  0E00               	movlw	0
  8594   0071F6  6FF8               	movwf	248,b	;volatile
  8595                           
  8596                           ;../../VLCBlib_PIC/can18_ecan.c: 291:     RXM0SIDL = 0x08;
  8597   0071F8  0E08               	movlw	8
  8598   0071FA  6FF9               	movwf	249,b	;volatile
  8599                           
  8600                           ;../../VLCBlib_PIC/can18_ecan.c: 292:     RXM0EIDH = 0;
  8601   0071FC  0E00               	movlw	0
  8602   0071FE  6FFA               	movwf	250,b	;volatile
  8603                           
  8604                           ;../../VLCBlib_PIC/can18_ecan.c: 293:     RXM0EIDL = 0;
  8605   007200  0E00               	movlw	0
  8606   007202  6FFB               	movwf	251,b	;volatile
  8607                           
  8608                           ;../../VLCBlib_PIC/can18_ecan.c: 295:     RXF0SIDL = 0x00;
  8609   007204  0E00               	movlw	0
  8610   007206  6FE1               	movwf	225,b	;volatile
  8611                           
  8612                           ;../../VLCBlib_PIC/can18_ecan.c: 297:     RXFBCON0 = 0;
  8613   007208  0E00               	movlw	0
  8614   00720A  6F71               	movwf	113,b	;volatile
  8615                           
  8616                           ;../../VLCBlib_PIC/can18_ecan.c: 299:     MSEL0 = 0;
  8617   00720C  0E00               	movlw	0
  8618   00720E  6F79               	movwf	121,b	;volatile
  8619                           
  8620                           ;../../VLCBlib_PIC/can18_ecan.c: 301:     RXFCON0 = 1;
  8621   007210  0E01               	movlw	1
  8622   007212  6F46               	movwf	70,b	;volatile
  8623                           
  8624                           ;../../VLCBlib_PIC/can18_ecan.c: 308:     RXB0CON = 0x00;
  8625   007214  0E00               	movlw	0
  8626   007216  6E60               	movwf	96,c	;volatile
  8627                           
  8628                           ;../../VLCBlib_PIC/can18_ecan.c: 309:     RXB1CON = 0x00;
  8629   007218  0E00               	movlw	0
  8630   00721A  010F               	movlb	15	; () banked
  8631   00721C  6F30               	movwf	48,b	;volatile
  8632                           
  8633                           ;../../VLCBlib_PIC/can18_ecan.c: 310:     B0CON = 0;
  8634   00721E  0E00               	movlw	0
  8635   007220  010E               	movlb	14	; () banked
  8636   007222  6F80               	movwf	128,b	;volatile
  8637                           
  8638                           ;../../VLCBlib_PIC/can18_ecan.c: 311:     B1CON = 0;
  8639   007224  0E00               	movlw	0
  8640   007226  6F90               	movwf	144,b	;volatile
  8641                           
  8642                           ;../../VLCBlib_PIC/can18_ecan.c: 312:     B2CON = 0;
  8643   007228  0E00               	movlw	0
  8644   00722A  6FA0               	movwf	160,b	;volatile
  8645                           
  8646                           ;../../VLCBlib_PIC/can18_ecan.c: 313:     B3CON = 0;
  8647   00722C  0E00               	movlw	0
  8648   00722E  6FB0               	movwf	176,b	;volatile
  8649                           
  8650                           ;../../VLCBlib_PIC/can18_ecan.c: 314:     B4CON = 0;
  8651   007230  0E00               	movlw	0
  8652   007232  6FC0               	movwf	192,b	;volatile
  8653                           
  8654                           ;../../VLCBlib_PIC/can18_ecan.c: 315:     B5CON = 0;
  8655   007234  0E00               	movlw	0
  8656   007236  6FD0               	movwf	208,b	;volatile
  8657                           
  8658                           ;../../VLCBlib_PIC/can18_ecan.c: 317:     BIE0 = 0;
  8659   007238  0E00               	movlw	0
  8660   00723A  6F7E               	movwf	126,b	;volatile
  8661                           
  8662                           ; BSR set to: 14
  8663                           ;../../VLCBlib_PIC/can18_ecan.c: 318:     TXBIEbits.TXB0IE = 1;
  8664   00723C  857F               	bsf	127,2,b	;volatile
  8665                           
  8666                           ; BSR set to: 14
  8667                           ;../../VLCBlib_PIC/can18_ecan.c: 319:     TXBIEbits.TXB1IE = 0;
  8668   00723E  977F               	bcf	127,3,b	;volatile
  8669                           
  8670                           ; BSR set to: 14
  8671                           ;../../VLCBlib_PIC/can18_ecan.c: 320:     TXBIEbits.TXB2IE = 0;
  8672   007240  997F               	bcf	127,4,b	;volatile
  8673                           
  8674                           ;../../VLCBlib_PIC/can18_ecan.c: 322:     CANCON = 0;
  8675   007242  0E00               	movlw	0
  8676   007244  6E6F               	movwf	111,c	;volatile
  8677   007246                     l2472:
  8678   007246  BE6E               	btfsc	110,7,c	;volatile
  8679   007248  D7FE               	goto	l2472
  8680                           
  8681                           ;../../VLCBlib_PIC/can18_ecan.c: 327:     TXB0CON = 0;
  8682   00724A  0E00               	movlw	0
  8683   00724C  010F               	movlb	15	; () banked
  8684   00724E  6F20               	movwf	32,b	;volatile
  8685                           
  8686                           ; BSR set to: 15
  8687                           ;../../VLCBlib_PIC/can18_ecan.c: 328:     TXB0CONbits.TXPRI0 = 0;
  8688   007250  9120               	bcf	32,0,b	;volatile
  8689                           
  8690                           ; BSR set to: 15
  8691                           ;../../VLCBlib_PIC/can18_ecan.c: 329:     TXB0CONbits.TXPRI1 = 0;
  8692   007252  9320               	bcf	32,1,b	;volatile
  8693                           
  8694                           ;../../VLCBlib_PIC/can18_ecan.c: 330:     TXB0DLC = 0;
  8695   007254  0E00               	movlw	0
  8696   007256  6F25               	movwf	37,b	;volatile
  8697                           
  8698                           ;../../VLCBlib_PIC/can18_ecan.c: 332:     TXB0SIDH = 0;
  8699   007258  0E00               	movlw	0
  8700   00725A  6F21               	movwf	33,b	;volatile
  8701                           
  8702                           ;../../VLCBlib_PIC/can18_ecan.c: 333:     TXB0SIDL = 0;
  8703   00725C  0E00               	movlw	0
  8704   00725E  6F22               	movwf	34,b	;volatile
  8705                           
  8706                           ;../../VLCBlib_PIC/can18_ecan.c: 337:     TXB1CON = 0;
  8707   007260  0E00               	movlw	0
  8708   007262  6F10               	movwf	16,b	;volatile
  8709                           
  8710                           ; BSR set to: 15
  8711                           ;../../VLCBlib_PIC/can18_ecan.c: 338:     TXB1CONbits.TXPRI0 = 0;
  8712   007264  9110               	bcf	16,0,b	;volatile
  8713                           
  8714                           ; BSR set to: 15
  8715                           ;../../VLCBlib_PIC/can18_ecan.c: 339:     TXB1CONbits.TXPRI1 = 1;
  8716   007266  8310               	bsf	16,1,b	;volatile
  8717                           
  8718                           ;../../VLCBlib_PIC/can18_ecan.c: 340:     TXB1DLC = 0x40;
  8719   007268  0E40               	movlw	64
  8720   00726A  6F15               	movwf	21,b	;volatile
  8721                           
  8722                           ; BSR set to: 15
  8723                           ;../../VLCBlib_PIC/can18_ecan.c: 341:     TXB1SIDH = canPri[4] | ((canId & 0x78) >> 3);
  8724   00726C  0E8A               	movlw	low (_canPri+4)
  8725   00726E  6EF6               	movwf	tblptrl,c
  8726   007270  0EEE               	movlw	high (_canPri+4)
  8727   007272  6EF7               	movwf	tblptrh,c
  8728   007274                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8729   007274  6AF8               	clrf	tblptru,c
  8730   007276                     	endif
  8731   007276                     	if	0	;tblptru may be non-zero
  8732   007276                     	endif
  8733   007276  0008               	tblrd		*
  8734   007278  CFF5 F097          	movff	tablat,??_canPowerUp
  8735   00727C  0100               	movlb	0	; () banked
  8736   00727E  39B9               	swapf	_canId& (0+255),w,b
  8737   007280  46E8               	rlncf	wreg,f,c
  8738   007282  0B1F               	andlw	31
  8739   007284  0B0F               	andlw	15
  8740   007286  1197               	iorwf	??_canPowerUp& (0+255),w,b
  8741   007288  010F               	movlb	15	; () banked
  8742   00728A  6F11               	movwf	17,b	;volatile
  8743                           
  8744                           ; BSR set to: 15
  8745                           ;../../VLCBlib_PIC/can18_ecan.c: 342:     TXB1SIDL = TXB0SIDL;
  8746   00728C  CF22 FF12          	movff	3874,3858	;volatile
  8747                           
  8748                           ; BSR set to: 15
  8749                           ;../../VLCBlib_PIC/can18_ecan.c: 346:     TXB2CON = 0;
  8750   007290  0E00               	movlw	0
  8751   007292  6F00               	movwf	0,b	;volatile
  8752                           
  8753                           ; BSR set to: 15
  8754                           ;../../VLCBlib_PIC/can18_ecan.c: 347:     TXB2CONbits.TXPRI0 = 1;
  8755   007294  8100               	bsf	0,0,b	;volatile
  8756                           
  8757                           ; BSR set to: 15
  8758                           ;../../VLCBlib_PIC/can18_ecan.c: 348:     TXB2CONbits.TXPRI1 = 1;
  8759   007296  8300               	bsf	0,1,b	;volatile
  8760                           
  8761                           ; BSR set to: 15
  8762                           ;../../VLCBlib_PIC/can18_ecan.c: 349:     TXB2DLC = 0;
  8763   007298  0E00               	movlw	0
  8764   00729A  6F05               	movwf	5,b	;volatile
  8765                           
  8766                           ; BSR set to: 15
  8767                           ;../../VLCBlib_PIC/can18_ecan.c: 350:     TXB2SIDH = canPri[4] | ((canId & 0x78) >> 3);
  8768   00729C  0E8A               	movlw	low (_canPri+4)
  8769   00729E  6EF6               	movwf	tblptrl,c
  8770   0072A0  0EEE               	movlw	high (_canPri+4)
  8771   0072A2  6EF7               	movwf	tblptrh,c
  8772   0072A4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8773   0072A4  6AF8               	clrf	tblptru,c
  8774   0072A6                     	endif
  8775   0072A6                     	if	0	;tblptru may be non-zero
  8776   0072A6                     	endif
  8777   0072A6  0008               	tblrd		*
  8778   0072A8  CFF5 F097          	movff	tablat,??_canPowerUp
  8779   0072AC  0100               	movlb	0	; () banked
  8780   0072AE  39B9               	swapf	_canId& (0+255),w,b
  8781   0072B0  46E8               	rlncf	wreg,f,c
  8782   0072B2  0B1F               	andlw	31
  8783   0072B4  0B0F               	andlw	15
  8784   0072B6  1197               	iorwf	??_canPowerUp& (0+255),w,b
  8785   0072B8  010F               	movlb	15	; () banked
  8786   0072BA  6F01               	movwf	1,b	;volatile
  8787                           
  8788                           ; BSR set to: 15
  8789                           ;../../VLCBlib_PIC/can18_ecan.c: 351:     TXB2SIDL = TXB0SIDL;
  8790   0072BC  CF22 FF02          	movff	3874,3842	;volatile
  8791                           
  8792                           ;../../VLCBlib_PIC/can18_ecan.c: 355:     enumerationState = NO_ENUMERATION;
  8793   0072C0  0E00               	movlw	0
  8794   0072C2  0100               	movlb	0	; () banked
  8795   0072C4  6FB7               	movwf	_enumerationState& (0+255),b
  8796                           
  8797                           ; BSR set to: 0
  8798                           ;../../VLCBlib_PIC/can18_ecan.c: 356:     enumerationStartTime.val = tickGet();
  8799   0072C6  EC45  F05C         	call	_tickGet	;wreg free
  8800   0072CA  C08D  F011         	movff	?_tickGet,_enumerationStartTime
  8801   0072CE  C08E  F012         	movff	?_tickGet+1,_enumerationStartTime+1
  8802   0072D2  C08F  F013         	movff	?_tickGet+2,_enumerationStartTime+2
  8803   0072D6  C090  F014         	movff	?_tickGet+3,_enumerationStartTime+3
  8804                           
  8805                           ;../../VLCBlib_PIC/can18_ecan.c: 359:     canTransmitTimeout.val = enumerationStartTime.
      +                          val;
  8806   0072DA  C011  F015         	movff	_enumerationStartTime,_canTransmitTimeout
  8807   0072DE  C012  F016         	movff	_enumerationStartTime+1,_canTransmitTimeout+1
  8808   0072E2  C013  F017         	movff	_enumerationStartTime+2,_canTransmitTimeout+2
  8809   0072E6  C014  F018         	movff	_enumerationStartTime+3,_canTransmitTimeout+3
  8810                           
  8811                           ;../../VLCBlib_PIC/can18_ecan.c: 361:     PIE5bits.FIFOWMIE = 1;
  8812   0072EA  8076               	bsf	118,0,c	;volatile
  8813                           
  8814                           ;../../VLCBlib_PIC/can18_ecan.c: 362:     PIE5bits.TXBnIE = 1;
  8815   0072EC  8876               	bsf	118,4,c	;volatile
  8816                           
  8817                           ;../../VLCBlib_PIC/can18_ecan.c: 363:     PIE5bits.ERRIE = 1;
  8818   0072EE  8A76               	bsf	118,5,c	;volatile
  8819   0072F0  0012               	return		;funcret
  8820   0072F2                     __end_of_canPowerUp:
  8821                           	callstack 0
  8822                           
  8823 ;; *************** function _nvPowerUp *****************
  8824 ;; Defined at:
  8825 ;;		line 136 in file "../../VLCBlib_PIC/nv.c"
  8826 ;; Parameters:    Size  Location     Type
  8827 ;;		None
  8828 ;; Auto vars:     Size  Location     Type
  8829 ;;  i               1   60[BANK0 ] unsigned char 
  8830 ;; Return value:  Size  Location     Type
  8831 ;;                  1    wreg      void 
  8832 ;; Registers used:
  8833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8834 ;; Tracked objects:
  8835 ;;		On entry : 0/0
  8836 ;;		On exit  : 0/0
  8837 ;;		Unchanged: 0/0
  8838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8840 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8842 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8843 ;;Total ram usage:        1 bytes
  8844 ;; Hardware stack levels used: 1
  8845 ;; Hardware stack levels required when called: 15
  8846 ;; This function calls:
  8847 ;;		_loadNvCache
  8848 ;; This function is called by:
  8849 ;;		_powerUp
  8850 ;; This function uses a non-reentrant model
  8851 ;;
  8852                           
  8853                           	psect	text10
  8854   00C13A                     __ptext10:
  8855                           	callstack 0
  8856   00C13A                     _nvPowerUp:
  8857                           	callstack 14
  8858                           
  8859                           ;../../VLCBlib_PIC/nv.c: 138:     uint8_t i;;../../VLCBlib_PIC/nv.c: 139:     for (i=1; 
      +                          i <= 2; i++) {
  8860                           
  8861                           ;incstack = 0
  8862   00C13A  0E01               	movlw	1
  8863   00C13C  0100               	movlb	0	; () banked
  8864   00C13E  6F9C               	movwf	nvPowerUp@i& (0+255),b
  8865   00C140                     l24329:
  8866                           
  8867                           ; BSR set to: 0
  8868                           ;../../VLCBlib_PIC/nv.c: 140:         nvDiagnostics[i].asUint = 0;
  8869   00C140  519C               	movf	nvPowerUp@i& (0+255),w,b
  8870   00C142  0D02               	mullw	2
  8871   00C144  0EA3               	movlw	low _nvDiagnostics
  8872   00C146  24F3               	addwf	243,w,c
  8873   00C148  6ED9               	movwf	fsr2l,c
  8874   00C14A  0E01               	movlw	high _nvDiagnostics
  8875   00C14C  20F4               	addwfc	prodh,w,c
  8876   00C14E  6EDA               	movwf	fsr2h,c
  8877   00C150  6ADE               	clrf	postinc2,c
  8878   00C152  6ADD               	clrf	postdec2,c
  8879                           
  8880                           ; BSR set to: 0
  8881                           ;../../VLCBlib_PIC/nv.c: 141:     }
  8882   00C154  2B9C               	incf	nvPowerUp@i& (0+255),f,b
  8883                           
  8884                           ; BSR set to: 0
  8885   00C156  0E02               	movlw	2
  8886   00C158  659C               	cpfsgt	nvPowerUp@i& (0+255),b
  8887   00C15A  D7F2               	goto	l24329
  8888                           
  8889                           ; BSR set to: 0
  8890                           ;../../VLCBlib_PIC/nv.c: 142:     nvDiagnostics[0x00].asUint = 2;
  8891   00C15C  0E00               	movlw	0
  8892   00C15E  0101               	movlb	1	; () banked
  8893   00C160  6FA4               	movwf	(_nvDiagnostics+1)& (0+255),b
  8894   00C162  0E02               	movlw	2
  8895   00C164  6FA3               	movwf	_nvDiagnostics& (0+255),b
  8896                           
  8897                           ; BSR set to: 1
  8898                           ;../../VLCBlib_PIC/nv.c: 145:     loadNvCache();
  8899   00C166  EC7D  F05E         	call	_loadNvCache	;wreg free
  8900   00C16A  0012               	return		;funcret
  8901   00C16C                     __end_of_nvPowerUp:
  8902                           	callstack 0
  8903                           
  8904 ;; *************** function _mnsPowerUp *****************
  8905 ;; Defined at:
  8906 ;;		line 299 in file "../../VLCBlib_PIC/mns.c"
  8907 ;; Parameters:    Size  Location     Type
  8908 ;;		None
  8909 ;; Auto vars:     Size  Location     Type
  8910 ;;  temp            2   56[BANK0 ] int 
  8911 ;;  i               1   55[BANK0 ] unsigned char 
  8912 ;; Return value:  Size  Location     Type
  8913 ;;                  1    wreg      void 
  8914 ;; Registers used:
  8915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8916 ;; Tracked objects:
  8917 ;;		On entry : 0/0
  8918 ;;		On exit  : 0/0
  8919 ;;		Unchanged: 0/0
  8920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8922 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8924 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8925 ;;Total ram usage:        3 bytes
  8926 ;; Hardware stack levels used: 1
  8927 ;; Hardware stack levels required when called: 14
  8928 ;; This function calls:
  8929 ;;		_readNVM
  8930 ;;		_setLEDsByMode
  8931 ;;		_tickGet
  8932 ;; This function is called by:
  8933 ;;		_powerUp
  8934 ;; This function uses a non-reentrant model
  8935 ;;
  8936                           
  8937                           	psect	text11
  8938   00807C                     __ptext11:
  8939                           	callstack 0
  8940   00807C                     _mnsPowerUp:
  8941                           	callstack 15
  8942                           
  8943                           ;../../VLCBlib_PIC/mns.c: 300:     int temp;;../../VLCBlib_PIC/mns.c: 301:     uint8_t i
      +                          ;;../../VLCBlib_PIC/mns.c: 303:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FC +1);
  8944                           
  8945                           ;incstack = 0
  8946   00807C  0EFD               	movlw	253
  8947   00807E  0100               	movlb	0	; () banked
  8948   008080  6F91               	movwf	readNVM@index& (0+255),b
  8949   008082  0E03               	movlw	3
  8950   008084  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8951   008086  0E00               	movlw	0
  8952   008088  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8953   00808A  0E00               	movlw	0
  8954   00808C  EC31  F05B         	call	_readNVM
  8955   008090  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  8956   008094  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  8957                           
  8958                           ;../../VLCBlib_PIC/mns.c: 304:     if (temp < 0) {
  8959   008098  0100               	movlb	0	; () banked
  8960   00809A  AF99               	btfss	(mnsPowerUp@temp+1)& (0+255),7,b
  8961   00809C  D005               	goto	l1450
  8962   00809E                     u25960:
  8963                           
  8964                           ; BSR set to: 0
  8965                           ;../../VLCBlib_PIC/mns.c: 305:         nn.bytes.hi = 0;
  8966   00809E  0E00               	movlw	0
  8967   0080A0  6FB5               	movwf	(_nn+1)& (0+255),b
  8968                           
  8969                           ;../../VLCBlib_PIC/mns.c: 306:         nn.bytes.lo = 0;
  8970   0080A2  0E00               	movlw	0
  8971   0080A4  6FB4               	movwf	_nn& (0+255),b
  8972                           
  8973                           ;../../VLCBlib_PIC/mns.c: 307:     } else {
  8974   0080A6  D014               	goto	l23829
  8975   0080A8                     l1450:
  8976                           
  8977                           ; BSR set to: 0
  8978                           ;../../VLCBlib_PIC/mns.c: 308:         nn.bytes.hi = (uint8_t)temp;
  8979   0080A8  C098  F0B5         	movff	mnsPowerUp@temp,_nn+1
  8980                           
  8981                           ; BSR set to: 0
  8982                           ;../../VLCBlib_PIC/mns.c: 309:         temp = readNVM(EEPROM_NVM_TYPE, 0x3FC);
  8983   0080AC  0EFC               	movlw	252
  8984   0080AE  6F91               	movwf	readNVM@index& (0+255),b
  8985   0080B0  0E03               	movlw	3
  8986   0080B2  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8987   0080B4  0E00               	movlw	0
  8988   0080B6  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8989   0080B8  0E00               	movlw	0
  8990   0080BA  EC31  F05B         	call	_readNVM
  8991   0080BE  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  8992   0080C2  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  8993                           
  8994                           ;../../VLCBlib_PIC/mns.c: 310:         if (temp < 0) {
  8995   0080C6  0100               	movlb	0	; () banked
  8996   0080C8  BF99               	btfsc	(mnsPowerUp@temp+1)& (0+255),7,b
  8997   0080CA  D7E9               	goto	u25960
  8998                           
  8999                           ; BSR set to: 0
  9000                           ;../../VLCBlib_PIC/mns.c: 314:             nn.bytes.lo = (uint8_t)temp;
  9001   0080CC  C098  F0B4         	movff	mnsPowerUp@temp,_nn
  9002   0080D0                     l23829:
  9003                           
  9004                           ; BSR set to: 0
  9005                           ;../../VLCBlib_PIC/mns.c: 317:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FB);
  9006   0080D0  0EFB               	movlw	251
  9007   0080D2  6F91               	movwf	readNVM@index& (0+255),b
  9008   0080D4  0E03               	movlw	3
  9009   0080D6  6F92               	movwf	(readNVM@index+1)& (0+255),b
  9010   0080D8  0E00               	movlw	0
  9011   0080DA  6F93               	movwf	(readNVM@index+2)& (0+255),b
  9012   0080DC  0E00               	movlw	0
  9013   0080DE  EC31  F05B         	call	_readNVM
  9014   0080E2  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  9015   0080E6  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  9016                           
  9017                           ;../../VLCBlib_PIC/mns.c: 318:     if (temp < 0) {
  9018   0080EA  0100               	movlb	0	; () banked
  9019   0080EC  AF99               	btfss	(mnsPowerUp@temp+1)& (0+255),7,b
  9020   0080EE  D002               	goto	l1454
  9021                           
  9022                           ; BSR set to: 0
  9023                           ;../../VLCBlib_PIC/mns.c: 319:         mode_state = MODE_UNINITIALISED;
  9024   0080F0  69C4               	setf	_mode_state& (0+255),b
  9025                           
  9026                           ;../../VLCBlib_PIC/mns.c: 320:     } else {
  9027   0080F2  D002               	goto	l1455
  9028   0080F4                     l1454:
  9029                           
  9030                           ; BSR set to: 0
  9031                           ;../../VLCBlib_PIC/mns.c: 321:         mode_state = (uint8_t)temp;
  9032   0080F4  C098  F0C4         	movff	mnsPowerUp@temp,_mode_state
  9033   0080F8                     l1455:
  9034                           
  9035                           ; BSR set to: 0
  9036                           ;../../VLCBlib_PIC/mns.c: 323:     setupModePreviousMode = mode_state;
  9037   0080F8  C0C4  F0C1         	movff	_mode_state,_setupModePreviousMode
  9038                           
  9039                           ; BSR set to: 0
  9040                           ;../../VLCBlib_PIC/mns.c: 324:     temp = readNVM(EEPROM_NVM_TYPE, 0x3F9);
  9041   0080FC  0EF9               	movlw	249
  9042   0080FE  6F91               	movwf	readNVM@index& (0+255),b
  9043   008100  0E03               	movlw	3
  9044   008102  6F92               	movwf	(readNVM@index+1)& (0+255),b
  9045   008104  0E00               	movlw	0
  9046   008106  6F93               	movwf	(readNVM@index+2)& (0+255),b
  9047   008108  0E00               	movlw	0
  9048   00810A  EC31  F05B         	call	_readNVM
  9049   00810E  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  9050   008112  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  9051                           
  9052                           ;../../VLCBlib_PIC/mns.c: 325:     if (temp < 0) {
  9053   008116  0100               	movlb	0	; () banked
  9054   008118  AF99               	btfss	(mnsPowerUp@temp+1)& (0+255),7,b
  9055   00811A  D004               	goto	l1456
  9056                           
  9057                           ; BSR set to: 0
  9058                           ;../../VLCBlib_PIC/mns.c: 326:         mode_flags = 4;
  9059   00811C  0E04               	movlw	4
  9060   00811E  0101               	movlb	1	; () banked
  9061   008120  6F65               	movwf	_mode_flags& (0+255),b
  9062                           
  9063                           ;../../VLCBlib_PIC/mns.c: 327:     } else {
  9064   008122  D002               	goto	l23841
  9065   008124                     l1456:
  9066                           
  9067                           ; BSR set to: 0
  9068                           ;../../VLCBlib_PIC/mns.c: 328:         mode_flags = (uint8_t)temp;
  9069   008124  C098  F165         	movff	mnsPowerUp@temp,_mode_flags
  9070   008128                     l23841:
  9071                           
  9072                           ;../../VLCBlib_PIC/mns.c: 331:     setLEDsByMode();
  9073   008128  ECB6  F060         	call	_setLEDsByMode	;wreg free
  9074                           
  9075                           ;../../VLCBlib_PIC/mns.c: 333:     pbTimer.val = tickGet();
  9076   00812C  EC45  F05C         	call	_tickGet	;wreg free
  9077   008130  C08D  F0AA         	movff	?_tickGet,_pbTimer
  9078   008134  C08E  F0AB         	movff	?_tickGet+1,_pbTimer+1
  9079   008138  C08F  F0AC         	movff	?_tickGet+2,_pbTimer+2
  9080   00813C  C090  F0AD         	movff	?_tickGet+3,_pbTimer+3
  9081                           
  9082                           ;../../VLCBlib_PIC/mns.c: 334:     pbWasPushed = FALSE;
  9083   008140  0E00               	movlw	0
  9084   008142  0100               	movlb	0	; () banked
  9085   008144  6FC0               	movwf	_pbWasPushed& (0+255),b
  9086                           
  9087                           ; BSR set to: 0
  9088                           ;../../VLCBlib_PIC/mns.c: 338:     for (i=1; i<= 6; i++) {
  9089   008146  0E01               	movlw	1
  9090   008148  6F97               	movwf	mnsPowerUp@i& (0+255),b
  9091   00814A                     l23851:
  9092                           
  9093                           ; BSR set to: 0
  9094                           ;../../VLCBlib_PIC/mns.c: 339:         mnsDiagnostics[i].asInt = 0;
  9095   00814A  5197               	movf	mnsPowerUp@i& (0+255),w,b
  9096   00814C  0D02               	mullw	2
  9097   00814E  0E8C               	movlw	low _mnsDiagnostics
  9098   008150  24F3               	addwf	243,w,c
  9099   008152  6ED9               	movwf	fsr2l,c
  9100   008154  0E01               	movlw	high _mnsDiagnostics
  9101   008156  20F4               	addwfc	prodh,w,c
  9102   008158  6EDA               	movwf	fsr2h,c
  9103   00815A  6ADE               	clrf	postinc2,c
  9104   00815C  6ADD               	clrf	postdec2,c
  9105                           
  9106                           ; BSR set to: 0
  9107                           ;../../VLCBlib_PIC/mns.c: 340:     }
  9108   00815E  2B97               	incf	mnsPowerUp@i& (0+255),f,b
  9109                           
  9110                           ; BSR set to: 0
  9111   008160  0E06               	movlw	6
  9112   008162  6597               	cpfsgt	mnsPowerUp@i& (0+255),b
  9113   008164  D7F2               	goto	l23851
  9114                           
  9115                           ; BSR set to: 0
  9116                           ;../../VLCBlib_PIC/mns.c: 341:     mnsDiagnostics[0x00].asInt = 6;
  9117   008166  0E00               	movlw	0
  9118   008168  0101               	movlb	1	; () banked
  9119   00816A  6F8D               	movwf	(_mnsDiagnostics+1)& (0+255),b
  9120   00816C  0E06               	movlw	6
  9121   00816E  6F8C               	movwf	_mnsDiagnostics& (0+255),b
  9122                           
  9123                           ;../../VLCBlib_PIC/mns.c: 343:     heartbeatSequence = 0;
  9124   008170  0E00               	movlw	0
  9125   008172  0100               	movlb	0	; () banked
  9126   008174  6FBF               	movwf	_heartbeatSequence& (0+255),b
  9127                           
  9128                           ;../../VLCBlib_PIC/mns.c: 344:     heartbeatTimer.val = 0;
  9129   008176  0E00               	movlw	0
  9130   008178  0101               	movlb	1	; () banked
  9131   00817A  6F50               	movwf	_heartbeatTimer& (0+255),b
  9132   00817C  0E00               	movlw	0
  9133   00817E  6F51               	movwf	(_heartbeatTimer+1)& (0+255),b
  9134   008180  0E00               	movlw	0
  9135   008182  6F52               	movwf	(_heartbeatTimer+2)& (0+255),b
  9136   008184  0E00               	movlw	0
  9137   008186  6F53               	movwf	(_heartbeatTimer+3)& (0+255),b
  9138                           
  9139                           ;../../VLCBlib_PIC/mns.c: 345:     uptimeTimer.val = 0;
  9140   008188  0E00               	movlw	0
  9141   00818A  6F4C               	movwf	_uptimeTimer& (0+255),b
  9142   00818C  0E00               	movlw	0
  9143   00818E  6F4D               	movwf	(_uptimeTimer+1)& (0+255),b
  9144   008190  0E00               	movlw	0
  9145   008192  6F4E               	movwf	(_uptimeTimer+2)& (0+255),b
  9146   008194  0E00               	movlw	0
  9147   008196  6F4F               	movwf	(_uptimeTimer+3)& (0+255),b
  9148                           
  9149                           ; BSR set to: 1
  9150   008198  0012               	return		;funcret
  9151   00819A                     __end_of_mnsPowerUp:
  9152                           	callstack 0
  9153                           
  9154 ;; *************** function _ackPowerUp *****************
  9155 ;; Defined at:
  9156 ;;		line 97 in file "../../VLCBlib_PIC/event_acknowledge.c"
  9157 ;; Parameters:    Size  Location     Type
  9158 ;;		None
  9159 ;; Auto vars:     Size  Location     Type
  9160 ;;  i               1   45[BANK0 ] unsigned char 
  9161 ;; Return value:  Size  Location     Type
  9162 ;;                  1    wreg      void 
  9163 ;; Registers used:
  9164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9165 ;; Tracked objects:
  9166 ;;		On entry : 0/0
  9167 ;;		On exit  : 0/0
  9168 ;;		Unchanged: 0/0
  9169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9171 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9173 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9174 ;;Total ram usage:        1 bytes
  9175 ;; Hardware stack levels used: 1
  9176 ;; Hardware stack levels required when called: 12
  9177 ;; This function calls:
  9178 ;;		Nothing
  9179 ;; This function is called by:
  9180 ;;		_powerUp
  9181 ;; This function uses a non-reentrant model
  9182 ;;
  9183                           
  9184                           	psect	text12
  9185   00C31C                     __ptext12:
  9186                           	callstack 0
  9187   00C31C                     _ackPowerUp:
  9188                           	callstack 17
  9189                           
  9190                           ;../../VLCBlib_PIC/event_acknowledge.c: 98:     uint8_t i;;../../VLCBlib_PIC/event_ackno
      +                          wledge.c: 101:     for (i=1; i<= 1; i++) {
  9191                           
  9192                           ; BSR set to: 1
  9193                           ;incstack = 0
  9194   00C31C  0E01               	movlw	1
  9195   00C31E  0100               	movlb	0	; () banked
  9196   00C320  6F8D               	movwf	ackPowerUp@i& (0+255),b
  9197   00C322                     l23729:
  9198                           
  9199                           ; BSR set to: 0
  9200                           ;../../VLCBlib_PIC/event_acknowledge.c: 102:         ackDiagnostics[i].asUint = 0;
  9201   00C322  518D               	movf	ackPowerUp@i& (0+255),w,b
  9202   00C324  0D02               	mullw	2
  9203   00C326  0EB6               	movlw	low _ackDiagnostics
  9204   00C328  24F3               	addwf	243,w,c
  9205   00C32A  6ED9               	movwf	fsr2l,c
  9206   00C32C  0E01               	movlw	high _ackDiagnostics
  9207   00C32E  20F4               	addwfc	prodh,w,c
  9208   00C330  6EDA               	movwf	fsr2h,c
  9209   00C332  6ADE               	clrf	postinc2,c
  9210   00C334  6ADD               	clrf	postdec2,c
  9211                           
  9212                           ; BSR set to: 0
  9213                           ;../../VLCBlib_PIC/event_acknowledge.c: 103:     }
  9214   00C336  2B8D               	incf	ackPowerUp@i& (0+255),f,b
  9215                           
  9216                           ; BSR set to: 0
  9217   00C338  0E01               	movlw	1
  9218   00C33A  658D               	cpfsgt	ackPowerUp@i& (0+255),b
  9219   00C33C  D7F2               	goto	l23729
  9220                           
  9221                           ; BSR set to: 0
  9222                           ;../../VLCBlib_PIC/event_acknowledge.c: 104:     ackDiagnostics[0x00].asUint = 1;
  9223   00C33E  0E00               	movlw	0
  9224   00C340  0101               	movlb	1	; () banked
  9225   00C342  6FB7               	movwf	(_ackDiagnostics+1)& (0+255),b
  9226   00C344  0E01               	movlw	1
  9227   00C346  6FB6               	movwf	_ackDiagnostics& (0+255),b
  9228                           
  9229                           ; BSR set to: 1
  9230   00C348  0012               	return		;funcret
  9231   00C34A                     __end_of_ackPowerUp:
  9232                           	callstack 0
  9233                           
  9234 ;; *************** function _bootPowerUp *****************
  9235 ;; Defined at:
  9236 ;;		line 197 in file "../../VLCBlib_PIC/boot.c"
  9237 ;; Parameters:    Size  Location     Type
  9238 ;;		None
  9239 ;; Auto vars:     Size  Location     Type
  9240 ;;  a               3   58[BANK0 ] unsigned um
  9241 ;;  i               1   57[BANK0 ] unsigned char 
  9242 ;;  found           1   56[BANK0 ] unsigned char 
  9243 ;;  b               1   55[BANK0 ] unsigned char 
  9244 ;; Return value:  Size  Location     Type
  9245 ;;                  1    wreg      void 
  9246 ;; Registers used:
  9247 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9248 ;; Tracked objects:
  9249 ;;		On entry : 0/0
  9250 ;;		On exit  : 0/0
  9251 ;;		Unchanged: 0/0
  9252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9254 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9256 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9257 ;;Total ram usage:        6 bytes
  9258 ;; Hardware stack levels used: 1
  9259 ;; Hardware stack levels required when called: 14
  9260 ;; This function calls:
  9261 ;;		_readNVM
  9262 ;; This function is called by:
  9263 ;;		_powerUp
  9264 ;; This function uses a non-reentrant model
  9265 ;;
  9266                           
  9267                           	psect	text13
  9268   009436                     __ptext13:
  9269                           	callstack 0
  9270   009436                     _bootPowerUp:
  9271                           	callstack 15
  9272                           
  9273                           ;../../VLCBlib_PIC/boot.c: 198:     uint24_t a;;../../VLCBlib_PIC/boot.c: 199:     uint8
      +                          _t i;;../../VLCBlib_PIC/boot.c: 200:     uint8_t b;;../../VLCBlib_PIC/boot.c: 201:     u
      +                          int8_t found;;../../VLCBlib_PIC/boot.c: 203:     bootloaderType = BL_TYPE_Unknown;
  9274                           
  9275                           ; BSR set to: 1
  9276                           ;incstack = 0
  9277   009436  0E00               	movlw	0
  9278   009438  0100               	movlb	0	; () banked
  9279   00943A  6FC8               	movwf	_bootloaderType& (0+255),b
  9280                           
  9281                           ;../../VLCBlib_PIC/boot.c: 204:     bootloaderVersion = 0;
  9282   00943C  0E00               	movlw	0
  9283   00943E  6FC7               	movwf	_bootloaderVersion& (0+255),b
  9284                           
  9285                           ;../../VLCBlib_PIC/boot.c: 207:     for (a=0; a<0x7FF; a++) {
  9286   009440  0E00               	movlw	0
  9287   009442  6F9A               	movwf	bootPowerUp@a& (0+255),b
  9288   009444  0E00               	movlw	0
  9289   009446  6F9B               	movwf	(bootPowerUp@a+1)& (0+255),b
  9290   009448  0E00               	movlw	0
  9291   00944A  6F9C               	movwf	(bootPowerUp@a+2)& (0+255),b
  9292   00944C                     l23657:
  9293                           
  9294                           ; BSR set to: 0
  9295                           ;../../VLCBlib_PIC/boot.c: 209:         for (i=0; i<11; i++) {
  9296   00944C  0E00               	movlw	0
  9297   00944E  6F99               	movwf	bootPowerUp@i& (0+255),b
  9298   009450                     l23663:
  9299                           
  9300                           ; BSR set to: 0
  9301                           ;../../VLCBlib_PIC/boot.c: 210:             b = (uint8_t)readNVM(FLASH_NVM_TYPE, a+i);
  9302   009450  5199               	movf	bootPowerUp@i& (0+255),w,b
  9303   009452  259A               	addwf	bootPowerUp@a& (0+255),w,b
  9304   009454  6F91               	movwf	readNVM@index& (0+255),b
  9305   009456  0E00               	movlw	0
  9306   009458  219B               	addwfc	(bootPowerUp@a+1)& (0+255),w,b
  9307   00945A  6F92               	movwf	(readNVM@index+1)& (0+255),b
  9308   00945C  0E00               	movlw	0
  9309   00945E  219C               	addwfc	(bootPowerUp@a+2)& (0+255),w,b
  9310   009460  6F93               	movwf	(readNVM@index+2)& (0+255),b
  9311   009462  0E01               	movlw	1
  9312   009464  EC31  F05B         	call	_readNVM
  9313   009468  0100               	movlb	0	; () banked
  9314   00946A  5191               	movf	?_readNVM& (0+255),w,b
  9315   00946C  6F97               	movwf	bootPowerUp@b& (0+255),b
  9316                           
  9317                           ; BSR set to: 0
  9318                           ;../../VLCBlib_PIC/boot.c: 211:             if (b != bl_version[i]) {
  9319   00946E  0E7B               	movlw	low _bl_version
  9320   009470  2599               	addwf	bootPowerUp@i& (0+255),w,b
  9321   009472  6EF6               	movwf	tblptrl,c
  9322   009474  6AF7               	clrf	tblptrh,c
  9323   009476  0EEE               	movlw	high _bl_version
  9324   009478  22F7               	addwfc	tblptrh,f,c
  9325   00947A                     	if	1	;There are 3 active tblptr bytes
  9326   00947A  6AF8               	clrf	tblptru,c
  9327   00947C  0E00               	movlw	low (__mediumconst shr (0+16))
  9328   00947E  22F8               	addwfc	tblptru,f,c
  9329   009480                     	endif
  9330   009480  0008               	tblrd		*
  9331   009482  50F5               	movf	tablat,w,c
  9332   009484  1997               	xorwf	bootPowerUp@b& (0+255),w,b
  9333   009486  B4D8               	btfsc	status,2,c
  9334   009488  D003               	goto	l23671
  9335                           
  9336                           ; BSR set to: 0
  9337                           ;../../VLCBlib_PIC/boot.c: 212:                 found = 0;
  9338   00948A  0E00               	movlw	0
  9339   00948C  6F98               	movwf	bootPowerUp@found& (0+255),b
  9340                           
  9341                           ;../../VLCBlib_PIC/boot.c: 213:                 break;
  9342   00948E  D006               	goto	u25780
  9343   009490                     l23671:
  9344                           
  9345                           ; BSR set to: 0
  9346                           ;../../VLCBlib_PIC/boot.c: 215:                 found = 1;
  9347   009490  0E01               	movlw	1
  9348   009492  6F98               	movwf	bootPowerUp@found& (0+255),b
  9349                           
  9350                           ; BSR set to: 0
  9351                           ;../../VLCBlib_PIC/boot.c: 217:         }
  9352   009494  2B99               	incf	bootPowerUp@i& (0+255),f,b
  9353                           
  9354                           ; BSR set to: 0
  9355   009496  0E0A               	movlw	10
  9356   009498  6599               	cpfsgt	bootPowerUp@i& (0+255),b
  9357   00949A  D7DA               	goto	l23663
  9358   00949C                     u25780:
  9359                           
  9360                           ; BSR set to: 0
  9361                           ;../../VLCBlib_PIC/boot.c: 218:         if (found) {
  9362   00949C  5198               	movf	bootPowerUp@found& (0+255),w,b
  9363   00949E  B4D8               	btfsc	status,2,c
  9364   0094A0  D01F               	goto	l1269
  9365                           
  9366                           ; BSR set to: 0
  9367                           ;../../VLCBlib_PIC/boot.c: 219:             bootloaderType = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, a+11);
  9368   0094A2  0E0B               	movlw	11
  9369   0094A4  259A               	addwf	bootPowerUp@a& (0+255),w,b
  9370   0094A6  6F91               	movwf	readNVM@index& (0+255),b
  9371   0094A8  0E00               	movlw	0
  9372   0094AA  219B               	addwfc	(bootPowerUp@a+1)& (0+255),w,b
  9373   0094AC  6F92               	movwf	(readNVM@index+1)& (0+255),b
  9374   0094AE  0E00               	movlw	0
  9375   0094B0  219C               	addwfc	(bootPowerUp@a+2)& (0+255),w,b
  9376   0094B2  6F93               	movwf	(readNVM@index+2)& (0+255),b
  9377   0094B4  0E01               	movlw	1
  9378   0094B6  EC31  F05B         	call	_readNVM
  9379   0094BA  0100               	movlb	0	; () banked
  9380   0094BC  5191               	movf	?_readNVM& (0+255),w,b
  9381   0094BE  6FC8               	movwf	_bootloaderType& (0+255),b
  9382                           
  9383                           ;../../VLCBlib_PIC/boot.c: 220:             bootloaderVersion = (uint8_t)readNVM(FLASH_N
      +                          VM_TYPE, a+12);
  9384   0094C0  0E0C               	movlw	12
  9385   0094C2  259A               	addwf	bootPowerUp@a& (0+255),w,b
  9386   0094C4  6F91               	movwf	readNVM@index& (0+255),b
  9387   0094C6  0E00               	movlw	0
  9388   0094C8  219B               	addwfc	(bootPowerUp@a+1)& (0+255),w,b
  9389   0094CA  6F92               	movwf	(readNVM@index+1)& (0+255),b
  9390   0094CC  0E00               	movlw	0
  9391   0094CE  219C               	addwfc	(bootPowerUp@a+2)& (0+255),w,b
  9392   0094D0  6F93               	movwf	(readNVM@index+2)& (0+255),b
  9393   0094D2  0E01               	movlw	1
  9394   0094D4  EC31  F05B         	call	_readNVM
  9395   0094D8  0100               	movlb	0	; () banked
  9396   0094DA  5191               	movf	?_readNVM& (0+255),w,b
  9397   0094DC  6FC7               	movwf	_bootloaderVersion& (0+255),b
  9398   0094DE  0012               	return	
  9399   0094E0                     l1269:
  9400                           
  9401                           ; BSR set to: 0
  9402                           ;../../VLCBlib_PIC/boot.c: 223:     }
  9403   0094E0  0E01               	movlw	1
  9404   0094E2  279A               	addwf	bootPowerUp@a& (0+255),f,b
  9405   0094E4  0E00               	movlw	0
  9406   0094E6  239B               	addwfc	(bootPowerUp@a+1)& (0+255),f,b
  9407   0094E8  0E00               	movlw	0
  9408   0094EA  239C               	addwfc	(bootPowerUp@a+2)& (0+255),f,b
  9409                           
  9410                           ; BSR set to: 0
  9411   0094EC  519C               	movf	(bootPowerUp@a+2)& (0+255),w,b
  9412   0094EE  E106               	bnz	u25800
  9413   0094F0  299A               	incf	bootPowerUp@a& (0+255),w,b
  9414   0094F2  0E07               	movlw	7
  9415   0094F4  599B               	subwfb	(bootPowerUp@a+1)& (0+255),w,b
  9416   0094F6  B0D8               	btfsc	status,0,c
  9417   0094F8  0012               	return	
  9418   0094FA  D7A8               	goto	l23657
  9419   0094FC                     u25800:
  9420                           
  9421                           ; BSR set to: 0
  9422   0094FC  0012               	return		;funcret
  9423   0094FE                     __end_of_bootPowerUp:
  9424                           	callstack 0
  9425                           
  9426 ;; *************** function _consumer2QPowerUp *****************
  9427 ;; Defined at:
  9428 ;;		line 109 in file "../event_consumerDualActionQueue.c"
  9429 ;; Parameters:    Size  Location     Type
  9430 ;;		None
  9431 ;; Auto vars:     Size  Location     Type
  9432 ;;		None
  9433 ;; Return value:  Size  Location     Type
  9434 ;;                  1    wreg      void 
  9435 ;; Registers used:
  9436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9437 ;; Tracked objects:
  9438 ;;		On entry : 0/0
  9439 ;;		On exit  : 0/0
  9440 ;;		Unchanged: 0/0
  9441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9446 ;;Total ram usage:        0 bytes
  9447 ;; Hardware stack levels used: 1
  9448 ;; Hardware stack levels required when called: 12
  9449 ;; This function calls:
  9450 ;;		Nothing
  9451 ;; This function is called by:
  9452 ;;		_powerUp
  9453 ;; This function uses a non-reentrant model
  9454 ;;
  9455                           
  9456                           	psect	text14
  9457   00BD8E                     __ptext14:
  9458                           	callstack 0
  9459   00BD8E                     _consumer2QPowerUp:
  9460                           	callstack 17
  9461                           
  9462                           ;../event_consumerDualActionQueue.c: 110:     for (normalReadIndex=1; normalReadIndex <=
      +                           1; normalReadIndex++) {
  9463                           
  9464                           ; BSR set to: 0
  9465                           ;incstack = 0
  9466   00BD8E  0E01               	movlw	1
  9467   00BD90  0100               	movlb	0	; () banked
  9468   00BD92  6FCD               	movwf	_normalReadIndex& (0+255),b
  9469   00BD94                     l23459:
  9470                           
  9471                           ; BSR set to: 0
  9472   00BD94  0E01               	movlw	1
  9473   00BD96  65CD               	cpfsgt	_normalReadIndex& (0+255),b
  9474   00BD98  D001               	goto	l23463
  9475   00BD9A  D00C               	goto	l23469
  9476   00BD9C                     l23463:
  9477                           
  9478                           ; BSR set to: 0
  9479                           ;../event_consumerDualActionQueue.c: 111:         consumer2QDiagnostics[normalReadIndex]
      +                          .asUint = 0;
  9480   00BD9C  51CD               	movf	_normalReadIndex& (0+255),w,b
  9481   00BD9E  0D02               	mullw	2
  9482   00BDA0  0EBA               	movlw	low _consumer2QDiagnostics
  9483   00BDA2  24F3               	addwf	243,w,c
  9484   00BDA4  6ED9               	movwf	fsr2l,c
  9485   00BDA6  0E01               	movlw	high _consumer2QDiagnostics
  9486   00BDA8  20F4               	addwfc	prodh,w,c
  9487   00BDAA  6EDA               	movwf	fsr2h,c
  9488   00BDAC  6ADE               	clrf	postinc2,c
  9489   00BDAE  6ADD               	clrf	postdec2,c
  9490                           
  9491                           ; BSR set to: 0
  9492                           ;../event_consumerDualActionQueue.c: 112:     }
  9493   00BDB0  2BCD               	incf	_normalReadIndex& (0+255),f,b
  9494   00BDB2  D7F0               	goto	l23459
  9495   00BDB4                     l23469:
  9496                           
  9497                           ; BSR set to: 0
  9498                           ;../event_consumerDualActionQueue.c: 113:     consumer2QDiagnostics[0].asUint = 1;
  9499   00BDB4  0E00               	movlw	0
  9500   00BDB6  0101               	movlb	1	; () banked
  9501   00BDB8  6FBB               	movwf	(_consumer2QDiagnostics+1)& (0+255),b
  9502   00BDBA  0E01               	movlw	1
  9503   00BDBC  6FBA               	movwf	_consumer2QDiagnostics& (0+255),b
  9504                           
  9505                           ;../event_consumerDualActionQueue.c: 115:     normalReadIndex = 0;
  9506   00BDBE  0E00               	movlw	0
  9507   00BDC0  0100               	movlb	0	; () banked
  9508   00BDC2  6FCD               	movwf	_normalReadIndex& (0+255),b
  9509                           
  9510                           ;../event_consumerDualActionQueue.c: 116:     normalWriteIndex = 0;
  9511   00BDC4  0E00               	movlw	0
  9512   00BDC6  6FCC               	movwf	_normalWriteIndex& (0+255),b
  9513                           
  9514                           ;../event_consumerDualActionQueue.c: 117:     expeditedReadIndex = 0;
  9515   00BDC8  0E00               	movlw	0
  9516   00BDCA  6FCB               	movwf	_expeditedReadIndex& (0+255),b
  9517                           
  9518                           ;../event_consumerDualActionQueue.c: 118:     expeditedWriteIndex = 0;
  9519   00BDCC  0E00               	movlw	0
  9520   00BDCE  6FCA               	movwf	_expeditedWriteIndex& (0+255),b
  9521                           
  9522                           ;../event_consumerDualActionQueue.c: 120:     expedited = FALSE;
  9523   00BDD0  0E00               	movlw	0
  9524   00BDD2  6E25               	movwf	_expedited^0,c
  9525                           
  9526                           ; BSR set to: 0
  9527   00BDD4  0012               	return		;funcret
  9528   00BDD6                     __end_of_consumer2QPowerUp:
  9529                           	callstack 0
  9530                           
  9531 ;; *************** function _teachPowerUp *****************
  9532 ;; Defined at:
  9533 ;;		line 361 in file "../../VLCBlib_PIC/event_teach_large.c"
  9534 ;; Parameters:    Size  Location     Type
  9535 ;;		None
  9536 ;; Auto vars:     Size  Location     Type
  9537 ;;  i               1   73[BANK0 ] unsigned char 
  9538 ;; Return value:  Size  Location     Type
  9539 ;;                  1    wreg      void 
  9540 ;; Registers used:
  9541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9542 ;; Tracked objects:
  9543 ;;		On entry : 0/0
  9544 ;;		On exit  : 0/0
  9545 ;;		Unchanged: 0/0
  9546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9548 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9550 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9551 ;;Total ram usage:        1 bytes
  9552 ;; Hardware stack levels used: 1
  9553 ;; Hardware stack levels required when called: 17
  9554 ;; This function calls:
  9555 ;;		_rebuildHashtable
  9556 ;; This function is called by:
  9557 ;;		_powerUp
  9558 ;; This function uses a non-reentrant model
  9559 ;;
  9560                           
  9561                           	psect	text15
  9562   00C106                     __ptext15:
  9563                           	callstack 0
  9564   00C106                     _teachPowerUp:
  9565                           	callstack 12
  9566                           
  9567                           ;../../VLCBlib_PIC/event_teach_large.c: 362:     uint8_t i;;../../VLCBlib_PIC/event_teac
      +                          h_large.c: 364:     rebuildHashtable();
  9568                           
  9569                           ; BSR set to: 0
  9570                           ;incstack = 0
  9571   00C106  ECAC  F03F         	call	_rebuildHashtable	;wreg free
  9572                           
  9573                           ;../../VLCBlib_PIC/event_teach_large.c: 368:     for (i=1; i<= 1; i++) {
  9574   00C10A  0E01               	movlw	1
  9575   00C10C  0100               	movlb	0	; () banked
  9576   00C10E  6FA9               	movwf	teachPowerUp@i& (0+255),b
  9577   00C110                     l24795:
  9578                           
  9579                           ; BSR set to: 0
  9580                           ;../../VLCBlib_PIC/event_teach_large.c: 369:         teachDiagnostics[i].asUint = 0;
  9581   00C110  51A9               	movf	teachPowerUp@i& (0+255),w,b
  9582   00C112  0D02               	mullw	2
  9583   00C114  0EB2               	movlw	low _teachDiagnostics
  9584   00C116  24F3               	addwf	243,w,c
  9585   00C118  6ED9               	movwf	fsr2l,c
  9586   00C11A  0E01               	movlw	high _teachDiagnostics
  9587   00C11C  20F4               	addwfc	prodh,w,c
  9588   00C11E  6EDA               	movwf	fsr2h,c
  9589   00C120  6ADE               	clrf	postinc2,c
  9590   00C122  6ADD               	clrf	postdec2,c
  9591                           
  9592                           ; BSR set to: 0
  9593                           ;../../VLCBlib_PIC/event_teach_large.c: 370:     }
  9594   00C124  2BA9               	incf	teachPowerUp@i& (0+255),f,b
  9595                           
  9596                           ; BSR set to: 0
  9597   00C126  0E01               	movlw	1
  9598   00C128  65A9               	cpfsgt	teachPowerUp@i& (0+255),b
  9599   00C12A  D7F2               	goto	l24795
  9600                           
  9601                           ; BSR set to: 0
  9602                           ;../../VLCBlib_PIC/event_teach_large.c: 371:     teachDiagnostics[0x00].asUint = 1;
  9603   00C12C  0E00               	movlw	0
  9604   00C12E  0101               	movlb	1	; () banked
  9605   00C130  6FB3               	movwf	(_teachDiagnostics+1)& (0+255),b
  9606   00C132  0E01               	movlw	1
  9607   00C134  6FB2               	movwf	_teachDiagnostics& (0+255),b
  9608                           
  9609                           ; BSR set to: 1
  9610                           ;../../VLCBlib_PIC/event_teach_large.c: 373:     mode_flags &= ~1;
  9611   00C136  9165               	bcf	_mode_flags& (0+255),0,b
  9612                           
  9613                           ; BSR set to: 1
  9614   00C138  0012               	return		;funcret
  9615   00C13A                     __end_of_teachPowerUp:
  9616                           	callstack 0
  9617                           
  9618 ;; *************** function _leds_powerUp *****************
  9619 ;; Defined at:
  9620 ;;		line 77 in file "../../VLCBlib_PIC/statusLeds2.c"
  9621 ;; Parameters:    Size  Location     Type
  9622 ;;		None
  9623 ;; Auto vars:     Size  Location     Type
  9624 ;;		None
  9625 ;; Return value:  Size  Location     Type
  9626 ;;                  1    wreg      void 
  9627 ;; Registers used:
  9628 ;;		wreg, status,2, status,0, cstack
  9629 ;; Tracked objects:
  9630 ;;		On entry : 0/0
  9631 ;;		On exit  : 0/0
  9632 ;;		Unchanged: 0/0
  9633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9638 ;;Total ram usage:        0 bytes
  9639 ;; Hardware stack levels used: 1
  9640 ;; Hardware stack levels required when called: 13
  9641 ;; This function calls:
  9642 ;;		_tickGet
  9643 ;; This function is called by:
  9644 ;;		_powerUp
  9645 ;; This function uses a non-reentrant model
  9646 ;;
  9647                           
  9648                           	psect	text16
  9649   00C19E                     __ptext16:
  9650                           	callstack 0
  9651   00C19E                     _leds_powerUp:
  9652                           	callstack 16
  9653                           
  9654                           ;../../VLCBlib_PIC/statusLeds2.c: 79:     {ANCON0=ANCON1=0; TRISBbits.TRISB6=TRISBbits.T
      +                          RISB7=0,TRISAbits.TRISA2=1;};
  9655                           
  9656                           ; BSR set to: 1
  9657                           ;incstack = 0
  9658   00C19E  0E00               	movlw	0
  9659   00C1A0  010F               	movlb	15	; () banked
  9660   00C1A2  6F5C               	movwf	92,b	;volatile
  9661   00C1A4  CF5C FF5D          	movff	3932,3933	;volatile
  9662                           
  9663                           ; BSR set to: 15
  9664   00C1A8  9E93               	bcf	147,7,c	;volatile
  9665   00C1AA  9C93               	bcf	147,6,c	;volatile
  9666                           
  9667                           ; BSR set to: 15
  9668   00C1AC  8492               	bsf	146,2,c	;volatile
  9669                           
  9670                           ;../../VLCBlib_PIC/statusLeds2.c: 80:     flashCounter[0] = 0;
  9671   00C1AE  0E00               	movlw	0
  9672   00C1B0  0100               	movlb	0	; () banked
  9673   00C1B2  6FAE               	movwf	_flashCounter& (0+255),b
  9674                           
  9675                           ;../../VLCBlib_PIC/statusLeds2.c: 81:     flashCounter[1] = 0;
  9676   00C1B4  0E00               	movlw	0
  9677   00C1B6  6FAF               	movwf	(_flashCounter+1)& (0+255),b
  9678                           
  9679                           ; BSR set to: 0
  9680                           ;../../VLCBlib_PIC/statusLeds2.c: 82:     ledTimer.val = tickGet();
  9681   00C1B8  EC45  F05C         	call	_tickGet	;wreg free
  9682   00C1BC  C08D  F148         	movff	?_tickGet,_ledTimer
  9683   00C1C0  C08E  F149         	movff	?_tickGet+1,_ledTimer+1
  9684   00C1C4  C08F  F14A         	movff	?_tickGet+2,_ledTimer+2
  9685   00C1C8  C090  F14B         	movff	?_tickGet+3,_ledTimer+3
  9686   00C1CC  0012               	return		;funcret
  9687   00C1CE                     __end_of_leds_powerUp:
  9688                           	callstack 0
  9689                           
  9690 ;; *************** function _initTimedResponse *****************
  9691 ;; Defined at:
  9692 ;;		line 74 in file "../../VLCBlib_PIC/timedResponse.c"
  9693 ;; Parameters:    Size  Location     Type
  9694 ;;		None
  9695 ;; Auto vars:     Size  Location     Type
  9696 ;;		None
  9697 ;; Return value:  Size  Location     Type
  9698 ;;                  1    wreg      void 
  9699 ;; Registers used:
  9700 ;;		None
  9701 ;; Tracked objects:
  9702 ;;		On entry : 0/0
  9703 ;;		On exit  : 0/0
  9704 ;;		Unchanged: 0/0
  9705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9710 ;;Total ram usage:        0 bytes
  9711 ;; Hardware stack levels used: 1
  9712 ;; Hardware stack levels required when called: 12
  9713 ;; This function calls:
  9714 ;;		Nothing
  9715 ;; This function is called by:
  9716 ;;		_powerUp
  9717 ;; This function uses a non-reentrant model
  9718 ;;
  9719                           
  9720                           	psect	text17
  9721   00C908                     __ptext17:
  9722                           	callstack 0
  9723   00C908                     _initTimedResponse:
  9724                           	callstack 17
  9725                           
  9726                           ;../../VLCBlib_PIC/timedResponse.c: 75:     timedResponseType = 0xFF;
  9727                           
  9728                           ;incstack = 0
  9729   00C908  0100               	movlb	0	; () banked
  9730   00C90A  69BC               	setf	_timedResponseType& (0+255),b
  9731                           
  9732                           ; BSR set to: 0
  9733   00C90C  0012               	return		;funcret
  9734   00C90E                     __end_of_initTimedResponse:
  9735                           	callstack 0
  9736                           
  9737 ;; *************** function _initTicker *****************
  9738 ;; Defined at:
  9739 ;;		line 101 in file "../../VLCBlib_PIC/ticktime.c"
  9740 ;; Parameters:    Size  Location     Type
  9741 ;;  priority        1    wreg     unsigned char 
  9742 ;; Auto vars:     Size  Location     Type
  9743 ;;  priority        1   45[BANK0 ] unsigned char 
  9744 ;;  i               1   47[BANK0 ] unsigned char 
  9745 ;;  divider         1   46[BANK0 ] unsigned char 
  9746 ;; Return value:  Size  Location     Type
  9747 ;;                  1    wreg      void 
  9748 ;; Registers used:
  9749 ;;		wreg, status,2, status,0
  9750 ;; Tracked objects:
  9751 ;;		On entry : 0/0
  9752 ;;		On exit  : 0/0
  9753 ;;		Unchanged: 0/0
  9754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9756 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9758 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9759 ;;Total ram usage:        3 bytes
  9760 ;; Hardware stack levels used: 1
  9761 ;; Hardware stack levels required when called: 12
  9762 ;; This function calls:
  9763 ;;		Nothing
  9764 ;; This function is called by:
  9765 ;;		_powerUp
  9766 ;; This function uses a non-reentrant model
  9767 ;;
  9768                           
  9769                           	psect	text18
  9770   00BE1E                     __ptext18:
  9771                           	callstack 0
  9772   00BE1E                     _initTicker:
  9773                           	callstack 17
  9774                           
  9775                           ; BSR set to: 0
  9776                           ;incstack = 0
  9777                           ;initTicker@priority stored from wreg
  9778   00BE1E  0100               	movlb	0	; () banked
  9779   00BE20  6F8D               	movwf	initTicker@priority& (0+255),b
  9780                           
  9781                           ;../../VLCBlib_PIC/ticktime.c: 102:     uint8_t divider, i;;../../VLCBlib_PIC/ticktime.c
      +                          : 104:     divider = 0;
  9782   00BE22  0E00               	movlw	0
  9783   00BE24  0100               	movlb	0	; () banked
  9784   00BE26  6F8E               	movwf	initTicker@divider& (0+255),b
  9785                           
  9786                           ;../../VLCBlib_PIC/ticktime.c: 105:     for (i=64;i>0;i>>=1)
  9787   00BE28  0E40               	movlw	64
  9788   00BE2A  6F8F               	movwf	initTicker@i& (0+255),b
  9789   00BE2C                     l24489:
  9790                           
  9791                           ; BSR set to: 0
  9792                           ;../../VLCBlib_PIC/ticktime.c: 106:         divider++;
  9793   00BE2C  2B8E               	incf	initTicker@divider& (0+255),f,b
  9794                           
  9795                           ; BSR set to: 0
  9796   00BE2E  90D8               	bcf	status,0,c
  9797   00BE30  338F               	rrcf	initTicker@i& (0+255),f,b
  9798                           
  9799                           ; BSR set to: 0
  9800   00BE32  518F               	movf	initTicker@i& (0+255),w,b
  9801   00BE34  A4D8               	btfss	status,2,c
  9802   00BE36  D7FA               	goto	l24489
  9803                           
  9804                           ; BSR set to: 0
  9805                           ;../../VLCBlib_PIC/ticktime.c: 109:     T0CON = (uint8_t)(0b00000000 | divider);
  9806   00BE38  C08E  FFD5         	movff	initTicker@divider,4053	;volatile
  9807                           
  9808                           ;../../VLCBlib_PIC/ticktime.c: 110:     T0CONbits.T08BIT = 0;
  9809   00BE3C  9CD5               	bcf	213,6,c	;volatile
  9810                           
  9811                           ;../../VLCBlib_PIC/ticktime.c: 111:     T0CONbits.T0CS = 0;
  9812   00BE3E  9AD5               	bcf	213,5,c	;volatile
  9813                           
  9814                           ; BSR set to: 0
  9815                           ;../../VLCBlib_PIC/ticktime.c: 112:     TMR0H = 0;
  9816   00BE40  0E00               	movlw	0
  9817   00BE42  6ED7               	movwf	215,c	;volatile
  9818                           
  9819                           ;../../VLCBlib_PIC/ticktime.c: 113:     TMR0L = 0;
  9820   00BE44  0E00               	movlw	0
  9821   00BE46  6ED6               	movwf	214,c	;volatile
  9822                           
  9823                           ; BSR set to: 0
  9824                           ;../../VLCBlib_PIC/ticktime.c: 114:     INTCON2bits.TMR0IP = priority;
  9825   00BE48  B18D               	btfsc	initTicker@priority& (0+255),0,b
  9826   00BE4A  D002               	bra	u26765
  9827   00BE4C  94F1               	bcf	241,2,c	;volatile
  9828   00BE4E  D001               	bra	u26766
  9829   00BE50                     u26765:
  9830   00BE50  84F1               	bsf	241,2,c	;volatile
  9831   00BE52                     u26766:
  9832                           
  9833                           ;../../VLCBlib_PIC/ticktime.c: 115:     INTCONbits.TMR0IF = 0;
  9834   00BE52  94F2               	bcf	242,2,c	;volatile
  9835                           
  9836                           ;../../VLCBlib_PIC/ticktime.c: 116:     INTCONbits.TMR0IE = 1;
  9837   00BE54  8AF2               	bsf	242,5,c	;volatile
  9838                           
  9839                           ;../../VLCBlib_PIC/ticktime.c: 117:     T0CONbits.TMR0ON = 1;
  9840   00BE56  8ED5               	bsf	213,7,c	;volatile
  9841                           
  9842                           ;../../VLCBlib_PIC/ticktime.c: 119:     timerExtension1 = 0;
  9843   00BE58  0E00               	movlw	0
  9844   00BE5A  0100               	movlb	0	; () banked
  9845   00BE5C  6FC6               	movwf	_timerExtension1& (0+255),b	;volatile
  9846                           
  9847                           ;../../VLCBlib_PIC/ticktime.c: 120:     timerExtension2 = 0;
  9848   00BE5E  0E00               	movlw	0
  9849   00BE60  6FC5               	movwf	_timerExtension2& (0+255),b	;volatile
  9850                           
  9851                           ; BSR set to: 0
  9852   00BE62  0012               	return		;funcret
  9853   00BE64                     __end_of_initTicker:
  9854                           	callstack 0
  9855                           
  9856 ;; *************** function _poll *****************
  9857 ;; Defined at:
  9858 ;;		line 993 in file "../../VLCBlib_PIC/vlcb.c"
  9859 ;; Parameters:    Size  Location     Type
  9860 ;;		None
  9861 ;; Auto vars:     Size  Location     Type
  9862 ;;  m               9   41[BANK2 ] struct Message
  9863 ;;  i               1   40[BANK2 ] unsigned char 
  9864 ;;  handled         1   39[BANK2 ] enum E12799
  9865 ;; Return value:  Size  Location     Type
  9866 ;;                  1    wreg      void 
  9867 ;; Registers used:
  9868 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9869 ;; Tracked objects:
  9870 ;;		On entry : 0/0
  9871 ;;		On exit  : 0/0
  9872 ;;		Unchanged: 0/0
  9873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9875 ;;      Locals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9876 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9877 ;;      Totals:         0       0       0      15       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9878 ;;Total ram usage:       15 bytes
  9879 ;; Hardware stack levels used: 1
  9880 ;; Hardware stack levels required when called: 28
  9881 ;; This function calls:
  9882 ;;		NULL
  9883 ;;		_APP_postProcessMessage
  9884 ;;		_APP_preProcessMessage
  9885 ;;		___lmul
  9886 ;;		_ackEventProcessMessage
  9887 ;;		_bootProcessMessage
  9888 ;;		_canProcessMessage
  9889 ;;		_canReceiveMessage
  9890 ;;		_consumer2QProcessMessage
  9891 ;;		_flushFlashBlock
  9892 ;;		_leds_poll
  9893 ;;		_mnsPoll
  9894 ;;		_mnsProcessMessage
  9895 ;;		_nvProcessMessage
  9896 ;;		_pollTimedResponse
  9897 ;;		_producerProcessMessage
  9898 ;;		_showStatus
  9899 ;;		_teachProcessMessage
  9900 ;;		_tickGet
  9901 ;; This function is called by:
  9902 ;;		_main
  9903 ;; This function uses a non-reentrant model
  9904 ;;
  9905                           
  9906                           	psect	text19
  9907   004182                     __ptext19:
  9908                           	callstack 0
  9909   004182                     _poll:
  9910                           	callstack 2
  9911                           
  9912                           ;../../VLCBlib_PIC/vlcb.c: 994:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 995:     Messag
      +                          e m;;../../VLCBlib_PIC/vlcb.c: 996:     Processed handled;;../../VLCBlib_PIC/vlcb.c: 999
      +                          :     if ((tickGet() - timedResponseTime.val) > (long)timedResponseDelay*(62500/1000)) {
  9913                           
  9914                           ; BSR set to: 0
  9915                           ;incstack = 0
  9916   004182  EC45  F05C         	call	_tickGet	;wreg free
  9917   004186  0101               	movlb	1	; () banked
  9918   004188  5144               	movf	_timedResponseTime& (0+255),w,b
  9919   00418A  0100               	movlb	0	; () banked
  9920   00418C  5D8D               	subwf	?_tickGet& (0+255),w,b
  9921   00418E  0102               	movlb	2	; () banked
  9922   004190  6FEF               	movwf	??_poll& (0+255),b
  9923   004192  0101               	movlb	1	; () banked
  9924   004194  5145               	movf	(_timedResponseTime+1)& (0+255),w,b
  9925   004196  0100               	movlb	0	; () banked
  9926   004198  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
  9927   00419A  0102               	movlb	2	; () banked
  9928   00419C  6FF0               	movwf	(??_poll+1)& (0+255),b
  9929   00419E  0101               	movlb	1	; () banked
  9930   0041A0  5146               	movf	(_timedResponseTime+2)& (0+255),w,b
  9931   0041A2  0100               	movlb	0	; () banked
  9932   0041A4  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
  9933   0041A6  0102               	movlb	2	; () banked
  9934   0041A8  6FF1               	movwf	(??_poll+2)& (0+255),b
  9935   0041AA  0101               	movlb	1	; () banked
  9936   0041AC  5147               	movf	(_timedResponseTime+3)& (0+255),w,b
  9937   0041AE  0100               	movlb	0	; () banked
  9938   0041B0  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
  9939   0041B2  0102               	movlb	2	; () banked
  9940   0041B4  6FF2               	movwf	(??_poll+3)& (0+255),b
  9941   0041B6  0101               	movlb	1	; () banked
  9942   0041B8  5164               	movf	_timedResponseDelay& (0+255),w,b
  9943   0041BA  0100               	movlb	0	; () banked
  9944   0041BC  6F91               	movwf	___lmul@multiplier& (0+255),b
  9945   0041BE  6B92               	clrf	(___lmul@multiplier+1)& (0+255),b
  9946   0041C0  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
  9947   0041C2  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
  9948   0041C4  0E3E               	movlw	62
  9949   0041C6  6F95               	movwf	___lmul@multiplicand& (0+255),b
  9950   0041C8  0E00               	movlw	0
  9951   0041CA  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9952   0041CC  0E00               	movlw	0
  9953   0041CE  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9954   0041D0  0E00               	movlw	0
  9955   0041D2  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9956   0041D4  EC71  F05C         	call	___lmul	;wreg free
  9957   0041D8  0102               	movlb	2	; () banked
  9958   0041DA  51EF               	movf	??_poll& (0+255),w,b
  9959   0041DC  0100               	movlb	0	; () banked
  9960   0041DE  5D91               	subwf	?___lmul& (0+255),w,b
  9961   0041E0  0102               	movlb	2	; () banked
  9962   0041E2  51F0               	movf	(??_poll+1)& (0+255),w,b
  9963   0041E4  0100               	movlb	0	; () banked
  9964   0041E6  5992               	subwfb	(?___lmul+1)& (0+255),w,b
  9965   0041E8  0102               	movlb	2	; () banked
  9966   0041EA  51F1               	movf	(??_poll+2)& (0+255),w,b
  9967   0041EC  0100               	movlb	0	; () banked
  9968   0041EE  5993               	subwfb	(?___lmul+2)& (0+255),w,b
  9969   0041F0  0102               	movlb	2	; () banked
  9970   0041F2  51F2               	movf	(??_poll+3)& (0+255),w,b
  9971   0041F4  0100               	movlb	0	; () banked
  9972   0041F6  5994               	subwfb	(?___lmul+3)& (0+255),w,b
  9973   0041F8  B0D8               	btfsc	status,0,c
  9974   0041FA  D00C               	goto	l25307
  9975                           
  9976                           ; BSR set to: 0
  9977                           ;../../VLCBlib_PIC/vlcb.c: 1000:         pollTimedResponse();
  9978   0041FC  EC41  F056         	call	_pollTimedResponse	;wreg free
  9979                           
  9980                           ;../../VLCBlib_PIC/vlcb.c: 1001:         timedResponseTime.val = tickGet();
  9981   004200  EC45  F05C         	call	_tickGet	;wreg free
  9982   004204  C08D  F144         	movff	?_tickGet,_timedResponseTime
  9983   004208  C08E  F145         	movff	?_tickGet+1,_timedResponseTime+1
  9984   00420C  C08F  F146         	movff	?_tickGet+2,_timedResponseTime+2
  9985   004210  C090  F147         	movff	?_tickGet+3,_timedResponseTime+3
  9986   004214                     l25307:
  9987                           
  9988                           ;../../VLCBlib_PIC/vlcb.c: 1003:     if ((tickGet() - flashFlushTime.val) > 62500) {
  9989   004214  EC45  F05C         	call	_tickGet	;wreg free
  9990   004218  0101               	movlb	1	; () banked
  9991   00421A  5140               	movf	_flashFlushTime& (0+255),w,b
  9992   00421C  0100               	movlb	0	; () banked
  9993   00421E  5D8D               	subwf	?_tickGet& (0+255),w,b
  9994   004220  0102               	movlb	2	; () banked
  9995   004222  6FEF               	movwf	??_poll& (0+255),b
  9996   004224  0101               	movlb	1	; () banked
  9997   004226  5141               	movf	(_flashFlushTime+1)& (0+255),w,b
  9998   004228  0100               	movlb	0	; () banked
  9999   00422A  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 10000   00422C  0102               	movlb	2	; () banked
 10001   00422E  6FF0               	movwf	(??_poll+1)& (0+255),b
 10002   004230  0101               	movlb	1	; () banked
 10003   004232  5142               	movf	(_flashFlushTime+2)& (0+255),w,b
 10004   004234  0100               	movlb	0	; () banked
 10005   004236  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 10006   004238  0102               	movlb	2	; () banked
 10007   00423A  6FF1               	movwf	(??_poll+2)& (0+255),b
 10008   00423C  0101               	movlb	1	; () banked
 10009   00423E  5143               	movf	(_flashFlushTime+3)& (0+255),w,b
 10010   004240  0100               	movlb	0	; () banked
 10011   004242  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 10012   004244  0102               	movlb	2	; () banked
 10013   004246  6FF2               	movwf	(??_poll+3)& (0+255),b
 10014   004248  51F2               	movf	(??_poll+3)& (0+255),w,b
 10015   00424A  11F1               	iorwf	(??_poll+2)& (0+255),w,b
 10016   00424C  E106               	bnz	u27770
 10017   00424E  0E25               	movlw	37
 10018   004250  5DEF               	subwf	??_poll& (0+255),w,b
 10019   004252  0EF4               	movlw	244
 10020   004254  59F0               	subwfb	(??_poll+1)& (0+255),w,b
 10021   004256  A0D8               	btfss	status,0,c
 10022   004258  D00C               	goto	l25313
 10023   00425A                     u27770:
 10024                           
 10025                           ; BSR set to: 2
 10026                           ;../../VLCBlib_PIC/vlcb.c: 1004:         flushFlashBlock();
 10027   00425A  ECBE  F054         	call	_flushFlashBlock	;wreg free
 10028                           
 10029                           ;../../VLCBlib_PIC/vlcb.c: 1005:         flashFlushTime.val = tickGet();
 10030   00425E  EC45  F05C         	call	_tickGet	;wreg free
 10031   004262  C08D  F140         	movff	?_tickGet,_flashFlushTime
 10032   004266  C08E  F141         	movff	?_tickGet+1,_flashFlushTime+1
 10033   00426A  C08F  F142         	movff	?_tickGet+2,_flashFlushTime+2
 10034   00426E  C090  F143         	movff	?_tickGet+3,_flashFlushTime+3
 10035   004272                     l25313:
 10036                           
 10037                           ;../../VLCBlib_PIC/vlcb.c: 1008:     for (i=0; i<9; i++) {
 10038   004272  0E00               	movlw	0
 10039   004274  0102               	movlb	2	; () banked
 10040   004276  6FF4               	movwf	poll@i& (0+255),b
 10041   004278                     l25319:
 10042                           
 10043                           ; BSR set to: 2
 10044                           ;../../VLCBlib_PIC/vlcb.c: 1009:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->poll != ((void*)0))) {
 10045   004278  51F4               	movf	poll@i& (0+255),w,b
 10046   00427A  0D02               	mullw	2
 10047   00427C  0E69               	movlw	low _services
 10048   00427E  24F3               	addwf	243,w,c
 10049   004280  6EF6               	movwf	tblptrl,c
 10050   004282  0EEE               	movlw	high _services
 10051   004284  20F4               	addwfc	244,w,c
 10052   004286  6EF7               	movwf	tblptrh,c
 10053   004288                     	if	1	;There are 3 active tblptr bytes
 10054   004288  6AF8               	clrf	tblptru,c
 10055   00428A  0E00               	movlw	low (__mediumconst shr (0+16))
 10056   00428C  22F8               	addwfc	tblptru,f,c
 10057   00428E                     	endif
 10058   00428E  0009               	tblrd		*+
 10059   004290  50F5               	movf	tablat,w,c
 10060   004292  0009               	tblrd		*+
 10061   004294  10F5               	iorwf	tablat,w,c
 10062   004296  B4D8               	btfsc	status,2,c
 10063   004298  D04B               	goto	u27809
 10064                           
 10065                           ; BSR set to: 2
 10066   00429A  51F4               	movf	poll@i& (0+255),w,b
 10067   00429C  0D02               	mullw	2
 10068   00429E  0E69               	movlw	low _services
 10069   0042A0  24F3               	addwf	243,w,c
 10070   0042A2  6EF6               	movwf	tblptrl,c
 10071   0042A4  0EEE               	movlw	high _services
 10072   0042A6  20F4               	addwfc	244,w,c
 10073   0042A8  6EF7               	movwf	tblptrh,c
 10074   0042AA                     	if	1	;There are 3 active tblptr bytes
 10075   0042AA  6AF8               	clrf	tblptru,c
 10076   0042AC  0E00               	movlw	low (__mediumconst shr (0+16))
 10077   0042AE  22F8               	addwfc	tblptru,f,c
 10078   0042B0                     	endif
 10079   0042B0  0009               	tblrd		*+
 10080   0042B2  CFF5 F2EF          	movff	tablat,??_poll
 10081   0042B6  0009               	tblrd		*+
 10082   0042B8  CFF5 F2F0          	movff	tablat,??_poll+1
 10083   0042BC  0E08               	movlw	8
 10084   0042BE  27EF               	addwf	??_poll& (0+255),f,b
 10085   0042C0  0E00               	movlw	0
 10086   0042C2  23F0               	addwfc	(??_poll+1)& (0+255),f,b
 10087   0042C4  C2EF  FFF6         	movff	??_poll,tblptrl
 10088   0042C8  C2F0  FFF7         	movff	??_poll+1,tblptrh
 10089   0042CC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10090   0042CC  6AF8               	clrf	tblptru,c
 10091   0042CE                     	endif
 10092   0042CE                     	if	0	;tblptru may be non-zero
 10093   0042CE                     	endif
 10094   0042CE  0009               	tblrd		*+
 10095   0042D0  50F5               	movf	tablat,w,c
 10096   0042D2  0009               	tblrd		*+
 10097   0042D4  10F5               	iorwf	tablat,w,c
 10098   0042D6  B4D8               	btfsc	status,2,c
 10099   0042D8  D02B               	goto	u27809
 10100                           
 10101                           ; BSR set to: 2
 10102                           ;../../VLCBlib_PIC/vlcb.c: 1010:             services[i]->poll();
 10103   0042DA  51F4               	movf	poll@i& (0+255),w,b
 10104   0042DC  0D02               	mullw	2
 10105   0042DE  0E69               	movlw	low _services
 10106   0042E0  24F3               	addwf	243,w,c
 10107   0042E2  6EF6               	movwf	tblptrl,c
 10108   0042E4  0EEE               	movlw	high _services
 10109   0042E6  20F4               	addwfc	244,w,c
 10110   0042E8  6EF7               	movwf	tblptrh,c
 10111   0042EA                     	if	1	;There are 3 active tblptr bytes
 10112   0042EA  6AF8               	clrf	tblptru,c
 10113   0042EC  0E00               	movlw	low (__mediumconst shr (0+16))
 10114   0042EE  22F8               	addwfc	tblptru,f,c
 10115   0042F0                     	endif
 10116   0042F0  0009               	tblrd		*+
 10117   0042F2  CFF5 F2EF          	movff	tablat,??_poll
 10118   0042F6  0009               	tblrd		*+
 10119   0042F8  CFF5 F2F0          	movff	tablat,??_poll+1
 10120   0042FC  0E08               	movlw	8
 10121   0042FE  27EF               	addwf	??_poll& (0+255),f,b
 10122   004300  0E00               	movlw	0
 10123   004302  23F0               	addwfc	(??_poll+1)& (0+255),f,b
 10124   004304  C2EF  FFF6         	movff	??_poll,tblptrl
 10125   004308  C2F0  FFF7         	movff	??_poll+1,tblptrh
 10126   00430C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10127   00430C  6AF8               	clrf	tblptru,c
 10128   00430E                     	endif
 10129   00430E                     	if	0	;tblptru may be non-zero
 10130   00430E                     	endif
 10131   00430E  0009               	tblrd		*+
 10132   004310  CFF5 F2F1          	movff	tablat,??_poll+2
 10133   004314  0009               	tblrd		*+
 10134   004316  CFF5 F2F2          	movff	tablat,??_poll+3
 10135   00431A  D801               	call	u27808
 10136   00431C  D009               	goto	u27809
 10137   00431E                     u27808:
 10138   00431E  0005               	push	
 10139   004320  6EFA               	movwf	pclath,c
 10140   004322  51F1               	movf	(??_poll+2)& (0+255),w,b
 10141   004324  6EFD               	movwf	tosl,c
 10142   004326  51F2               	movf	(??_poll+3)& (0+255),w,b
 10143   004328  6EFE               	movwf	tosh,c
 10144   00432A  6AFF               	clrf	tosu,c
 10145   00432C  50FA               	movf	pclath,w,c
 10146   00432E  0012               	return		;indir
 10147   004330                     u27809:
 10148                           
 10149                           ;../../VLCBlib_PIC/vlcb.c: 1012:     }
 10150   004330  0102               	movlb	2	; () banked
 10151   004332  2BF4               	incf	poll@i& (0+255),f,b
 10152                           
 10153                           ; BSR set to: 2
 10154   004334  0E08               	movlw	8
 10155   004336  65F4               	cpfsgt	poll@i& (0+255),b
 10156   004338  D79F               	goto	l25319
 10157                           
 10158                           ; BSR set to: 2
 10159                           ;../../VLCBlib_PIC/vlcb.c: 1014:     leds_poll();
 10160   00433A  ECAA  F030         	call	_leds_poll	;wreg free
 10161                           
 10162                           ;../../VLCBlib_PIC/vlcb.c: 1017:     handled = NOT_PROCESSED;
 10163   00433E  0E00               	movlw	0
 10164   004340  0102               	movlb	2	; () banked
 10165   004342  6FF3               	movwf	poll@handled& (0+255),b
 10166                           
 10167                           ; BSR set to: 2
 10168                           ;../../VLCBlib_PIC/vlcb.c: 1018:     if (transport != ((void*)0)) {
 10169   004344  0101               	movlb	1	; () banked
 10170   004346  5162               	movf	_transport& (0+255),w,b
 10171   004348  1163               	iorwf	(_transport+1)& (0+255),w,b
 10172   00434A  B4D8               	btfsc	status,2,c
 10173   00434C  D0CA               	goto	l2038
 10174                           
 10175                           ; BSR set to: 1
 10176                           ;../../VLCBlib_PIC/vlcb.c: 1019:         if (transport->receiveMessage != ((void*)0)) {
 10177   00434E  0E02               	movlw	2
 10178   004350  2562               	addwf	_transport& (0+255),w,b
 10179   004352  0102               	movlb	2	; () banked
 10180   004354  6FEF               	movwf	??_poll& (0+255),b
 10181   004356  0E00               	movlw	0
 10182   004358  0101               	movlb	1	; () banked
 10183   00435A  2163               	addwfc	(_transport+1)& (0+255),w,b
 10184   00435C  0102               	movlb	2	; () banked
 10185   00435E  6FF0               	movwf	(??_poll+1)& (0+255),b
 10186   004360  C2EF  FFF6         	movff	??_poll,tblptrl
 10187   004364  C2F0  FFF7         	movff	??_poll+1,tblptrh
 10188   004368                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10189   004368  6AF8               	clrf	tblptru,c
 10190   00436A                     	endif
 10191   00436A                     	if	0	;tblptru may be non-zero
 10192   00436A                     	endif
 10193   00436A  0009               	tblrd		*+
 10194   00436C  50F5               	movf	tablat,w,c
 10195   00436E  0009               	tblrd		*+
 10196   004370  10F5               	iorwf	tablat,w,c
 10197   004372  B4D8               	btfsc	status,2,c
 10198   004374  D0B6               	goto	l2038
 10199                           
 10200                           ; BSR set to: 2
 10201                           ;../../VLCBlib_PIC/vlcb.c: 1020:             if (transport->receiveMessage(&m)) {
 10202   004376  0EF5               	movlw	low poll@m
 10203   004378  0101               	movlb	1	; () banked
 10204   00437A  6FC7               	movwf	canReceiveMessage@m& (0+255),b
 10205   00437C  0E02               	movlw	high poll@m
 10206   00437E  6FC8               	movwf	(canReceiveMessage@m+1)& (0+255),b
 10207   004380  0E02               	movlw	2
 10208   004382  2562               	addwf	_transport& (0+255),w,b
 10209   004384  0102               	movlb	2	; () banked
 10210   004386  6FEF               	movwf	??_poll& (0+255),b
 10211   004388  0E00               	movlw	0
 10212   00438A  0101               	movlb	1	; () banked
 10213   00438C  2163               	addwfc	(_transport+1)& (0+255),w,b
 10214   00438E  0102               	movlb	2	; () banked
 10215   004390  6FF0               	movwf	(??_poll+1)& (0+255),b
 10216   004392  C2EF  FFF6         	movff	??_poll,tblptrl
 10217   004396  C2F0  FFF7         	movff	??_poll+1,tblptrh
 10218   00439A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10219   00439A  6AF8               	clrf	tblptru,c
 10220   00439C                     	endif
 10221   00439C                     	if	0	;tblptru may be non-zero
 10222   00439C                     	endif
 10223   00439C  0009               	tblrd		*+
 10224   00439E  CFF5 F2F1          	movff	tablat,??_poll+2
 10225   0043A2  0009               	tblrd		*+
 10226   0043A4  CFF5 F2F2          	movff	tablat,??_poll+3
 10227   0043A8  D801               	call	u27848
 10228   0043AA  D009               	goto	u27849
 10229   0043AC                     u27848:
 10230   0043AC  0005               	push	
 10231   0043AE  6EFA               	movwf	pclath,c
 10232   0043B0  51F1               	movf	(??_poll+2)& (0+255),w,b
 10233   0043B2  6EFD               	movwf	tosl,c
 10234   0043B4  51F2               	movf	(??_poll+3)& (0+255),w,b
 10235   0043B6  6EFE               	movwf	tosh,c
 10236   0043B8  6AFF               	clrf	tosu,c
 10237   0043BA  50FA               	movf	pclath,w,c
 10238   0043BC  0012               	return		;indir
 10239   0043BE                     u27849:
 10240   0043BE  0900               	iorlw	0
 10241   0043C0  B4D8               	btfsc	status,2,c
 10242   0043C2  D08F               	goto	l2038
 10243                           
 10244                           ;../../VLCBlib_PIC/vlcb.c: 1021:                 if (m.len > 0) {
 10245   0043C4  0102               	movlb	2	; () banked
 10246   0043C6  51F5               	movf	poll@m& (0+255),w,b
 10247   0043C8  B4D8               	btfsc	status,2,c
 10248   0043CA  D08B               	goto	l2038
 10249                           
 10250                           ; BSR set to: 2
 10251                           ;../../VLCBlib_PIC/vlcb.c: 1022:                     showStatus(STATUS_MESSAGE_RECEIVED)
      +                          ;
 10252   0043CC  0E07               	movlw	7
 10253   0043CE  ECB3  F044         	call	_showStatus
 10254                           
 10255                           ;../../VLCBlib_PIC/vlcb.c: 1023:                     handled = APP_preProcessMessage(&m)
      +                          ;
 10256   0043D2  0EF5               	movlw	low poll@m
 10257   0043D4  0100               	movlb	0	; () banked
 10258   0043D6  6F8D               	movwf	APP_preProcessMessage@m& (0+255),b
 10259   0043D8  0E02               	movlw	high poll@m
 10260   0043DA  6F8E               	movwf	(APP_preProcessMessage@m+1)& (0+255),b
 10261   0043DC  EC93  F064         	call	_APP_preProcessMessage	;wreg free
 10262   0043E0  0102               	movlb	2	; () banked
 10263   0043E2  6FF3               	movwf	poll@handled& (0+255),b
 10264                           
 10265                           ; BSR set to: 2
 10266                           ;../../VLCBlib_PIC/vlcb.c: 1024:                     if (handled == NOT_PROCESSED) {
 10267   0043E4  51F3               	movf	poll@handled& (0+255),w,b
 10268   0043E6  A4D8               	btfss	status,2,c
 10269   0043E8  D07C               	goto	l2038
 10270                           
 10271                           ; BSR set to: 2
 10272                           ;../../VLCBlib_PIC/vlcb.c: 1025:                         for (i=0; i<9; i++) {
 10273   0043EA  0E00               	movlw	0
 10274   0043EC  6FF4               	movwf	poll@i& (0+255),b
 10275   0043EE                     l25351:
 10276                           
 10277                           ; BSR set to: 2
 10278                           ;../../VLCBlib_PIC/vlcb.c: 1026:                             if ((services[i] != ((void*
      +                          )0)) && (services[i]->processMessage != ((void*)0))) {
 10279   0043EE  51F4               	movf	poll@i& (0+255),w,b
 10280   0043F0  0D02               	mullw	2
 10281   0043F2  0E69               	movlw	low _services
 10282   0043F4  24F3               	addwf	243,w,c
 10283   0043F6  6EF6               	movwf	tblptrl,c
 10284   0043F8  0EEE               	movlw	high _services
 10285   0043FA  20F4               	addwfc	244,w,c
 10286   0043FC  6EF7               	movwf	tblptrh,c
 10287   0043FE                     	if	1	;There are 3 active tblptr bytes
 10288   0043FE  6AF8               	clrf	tblptru,c
 10289   004400  0E00               	movlw	low (__mediumconst shr (0+16))
 10290   004402  22F8               	addwfc	tblptru,f,c
 10291   004404                     	endif
 10292   004404  0009               	tblrd		*+
 10293   004406  50F5               	movf	tablat,w,c
 10294   004408  0009               	tblrd		*+
 10295   00440A  10F5               	iorwf	tablat,w,c
 10296   00440C  B4D8               	btfsc	status,2,c
 10297   00440E  D058               	goto	l25359
 10298                           
 10299                           ; BSR set to: 2
 10300   004410  51F4               	movf	poll@i& (0+255),w,b
 10301   004412  0D02               	mullw	2
 10302   004414  0E69               	movlw	low _services
 10303   004416  24F3               	addwf	243,w,c
 10304   004418  6EF6               	movwf	tblptrl,c
 10305   00441A  0EEE               	movlw	high _services
 10306   00441C  20F4               	addwfc	244,w,c
 10307   00441E  6EF7               	movwf	tblptrh,c
 10308   004420                     	if	1	;There are 3 active tblptr bytes
 10309   004420  6AF8               	clrf	tblptru,c
 10310   004422  0E00               	movlw	low (__mediumconst shr (0+16))
 10311   004424  22F8               	addwfc	tblptru,f,c
 10312   004426                     	endif
 10313   004426  0009               	tblrd		*+
 10314   004428  CFF5 F2EF          	movff	tablat,??_poll
 10315   00442C  0009               	tblrd		*+
 10316   00442E  CFF5 F2F0          	movff	tablat,??_poll+1
 10317   004432  0E06               	movlw	6
 10318   004434  27EF               	addwf	??_poll& (0+255),f,b
 10319   004436  0E00               	movlw	0
 10320   004438  23F0               	addwfc	(??_poll+1)& (0+255),f,b
 10321   00443A  C2EF  FFF6         	movff	??_poll,tblptrl
 10322   00443E  C2F0  FFF7         	movff	??_poll+1,tblptrh
 10323   004442                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10324   004442  6AF8               	clrf	tblptru,c
 10325   004444                     	endif
 10326   004444                     	if	0	;tblptru may be non-zero
 10327   004444                     	endif
 10328   004444  0009               	tblrd		*+
 10329   004446  50F5               	movf	tablat,w,c
 10330   004448  0009               	tblrd		*+
 10331   00444A  10F5               	iorwf	tablat,w,c
 10332   00444C  B4D8               	btfsc	status,2,c
 10333   00444E  D038               	goto	l25359
 10334                           
 10335                           ; BSR set to: 2
 10336                           ;../../VLCBlib_PIC/vlcb.c: 1027:                                 if (services[i]->proces
      +                          sMessage(&m) == PROCESSED) {
 10337   004450  0EF5               	movlw	low poll@m
 10338   004452  0101               	movlb	1	; () banked
 10339   004454  6FFD               	movwf	producerProcessMessage@m& (0+255),b
 10340   004456  0E02               	movlw	high poll@m
 10341   004458  6FFE               	movwf	(producerProcessMessage@m+1)& (0+255),b
 10342   00445A  0102               	movlb	2	; () banked
 10343   00445C  51F4               	movf	poll@i& (0+255),w,b
 10344   00445E  0D02               	mullw	2
 10345   004460  0E69               	movlw	low _services
 10346   004462  24F3               	addwf	243,w,c
 10347   004464  6EF6               	movwf	tblptrl,c
 10348   004466  0EEE               	movlw	high _services
 10349   004468  20F4               	addwfc	244,w,c
 10350   00446A  6EF7               	movwf	tblptrh,c
 10351   00446C                     	if	1	;There are 3 active tblptr bytes
 10352   00446C  6AF8               	clrf	tblptru,c
 10353   00446E  0E00               	movlw	low (__mediumconst shr (0+16))
 10354   004470  22F8               	addwfc	tblptru,f,c
 10355   004472                     	endif
 10356   004472  0009               	tblrd		*+
 10357   004474  CFF5 F2EF          	movff	tablat,??_poll
 10358   004478  0009               	tblrd		*+
 10359   00447A  CFF5 F2F0          	movff	tablat,??_poll+1
 10360   00447E  0E06               	movlw	6
 10361   004480  27EF               	addwf	??_poll& (0+255),f,b
 10362   004482  0E00               	movlw	0
 10363   004484  23F0               	addwfc	(??_poll+1)& (0+255),f,b
 10364   004486  C2EF  FFF6         	movff	??_poll,tblptrl
 10365   00448A  C2F0  FFF7         	movff	??_poll+1,tblptrh
 10366   00448E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10367   00448E  6AF8               	clrf	tblptru,c
 10368   004490                     	endif
 10369   004490                     	if	0	;tblptru may be non-zero
 10370   004490                     	endif
 10371   004490  0009               	tblrd		*+
 10372   004492  CFF5 F2F1          	movff	tablat,??_poll+2
 10373   004496  0009               	tblrd		*+
 10374   004498  CFF5 F2F2          	movff	tablat,??_poll+3
 10375   00449C  D801               	call	u27908
 10376   00449E  D009               	goto	u27909
 10377   0044A0                     u27908:
 10378   0044A0  0005               	push	
 10379   0044A2  6EFA               	movwf	pclath,c
 10380   0044A4  51F1               	movf	(??_poll+2)& (0+255),w,b
 10381   0044A6  6EFD               	movwf	tosl,c
 10382   0044A8  51F2               	movf	(??_poll+3)& (0+255),w,b
 10383   0044AA  6EFE               	movwf	tosh,c
 10384   0044AC  6AFF               	clrf	tosu,c
 10385   0044AE  50FA               	movf	pclath,w,c
 10386   0044B0  0012               	return		;indir
 10387   0044B2                     u27909:
 10388   0044B2  06E8               	decf	wreg,f,c
 10389   0044B4  A4D8               	btfss	status,2,c
 10390   0044B6  D004               	goto	l25359
 10391                           
 10392                           ;../../VLCBlib_PIC/vlcb.c: 1028:                                     handled = PROCESSED
      +                          ;
 10393   0044B8  0E01               	movlw	1
 10394   0044BA  0102               	movlb	2	; () banked
 10395   0044BC  6FF3               	movwf	poll@handled& (0+255),b
 10396                           
 10397                           ;../../VLCBlib_PIC/vlcb.c: 1029:                                     break;
 10398   0044BE  D005               	goto	u27920
 10399   0044C0                     l25359:
 10400                           
 10401                           ;../../VLCBlib_PIC/vlcb.c: 1032:                         }
 10402   0044C0  0102               	movlb	2	; () banked
 10403   0044C2  2BF4               	incf	poll@i& (0+255),f,b
 10404                           
 10405                           ; BSR set to: 2
 10406   0044C4  0E08               	movlw	8
 10407   0044C6  65F4               	cpfsgt	poll@i& (0+255),b
 10408   0044C8  D792               	goto	l25351
 10409   0044CA                     u27920:
 10410                           
 10411                           ; BSR set to: 2
 10412                           ;../../VLCBlib_PIC/vlcb.c: 1033:                         if (handled == NOT_PROCESSED) {
 10413   0044CA  51F3               	movf	poll@handled& (0+255),w,b
 10414   0044CC  A4D8               	btfss	status,2,c
 10415   0044CE  D009               	goto	l2038
 10416                           
 10417                           ; BSR set to: 2
 10418                           ;../../VLCBlib_PIC/vlcb.c: 1034:                             handled = APP_postProcessMe
      +                          ssage(&m);
 10419   0044D0  0EF5               	movlw	low poll@m
 10420   0044D2  0100               	movlb	0	; () banked
 10421   0044D4  6F8D               	movwf	APP_postProcessMessage@m& (0+255),b
 10422   0044D6  0E02               	movlw	high poll@m
 10423   0044D8  6F8E               	movwf	(APP_postProcessMessage@m+1)& (0+255),b
 10424   0044DA  EC95  F064         	call	_APP_postProcessMessage	;wreg free
 10425   0044DE  0102               	movlb	2	; () banked
 10426   0044E0  6FF3               	movwf	poll@handled& (0+255),b
 10427   0044E2                     l2038:
 10428                           
 10429                           ;../../VLCBlib_PIC/vlcb.c: 1041:     if (handled) {
 10430                           
 10431                           ; BSR set to: 2
 10432   0044E2  0102               	movlb	2	; () banked
 10433   0044E4  51F3               	movf	poll@handled& (0+255),w,b
 10434   0044E6  B4D8               	btfsc	status,2,c
 10435   0044E8  0012               	return	
 10436                           
 10437                           ; BSR set to: 2
 10438                           ;../../VLCBlib_PIC/vlcb.c: 1042:         mnsDiagnostics[0x06].asUint++;
 10439   0044EA  0101               	movlb	1	; () banked
 10440   0044EC  4B98               	infsnz	(_mnsDiagnostics+12)& (0+255),f,b
 10441   0044EE  2B99               	incf	(_mnsDiagnostics+13)& (0+255),f,b
 10442                           
 10443                           ; BSR set to: 1
 10444                           ;../../VLCBlib_PIC/vlcb.c: 1043:         showStatus(STATUS_MESSAGE_ACTED);
 10445   0044F0  0E08               	movlw	8
 10446   0044F2  ECB3  F044         	call	_showStatus
 10447   0044F6  0012               	return		;funcret
 10448   0044F8                     __end_of_poll:
 10449                           	callstack 0
 10450                           
 10451 ;; *************** function _producerProcessMessage *****************
 10452 ;; Defined at:
 10453 ;;		line 124 in file "../../VLCBlib_PIC/event_producer_happening.c"
 10454 ;; Parameters:    Size  Location     Type
 10455 ;;  m               2   63[BANK1 ] PTR struct Message
 10456 ;;		 -> poll@m(9), 
 10457 ;; Auto vars:     Size  Location     Type
 10458 ;;  ev              2    6[BANK2 ] short 
 10459 ;;  index           1    9[BANK2 ] unsigned char 
 10460 ;;  h               1    8[BANK2 ] unsigned char 
 10461 ;; Return value:  Size  Location     Type
 10462 ;;                  1    wreg      enum E12749
 10463 ;; Registers used:
 10464 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10465 ;; Tracked objects:
 10466 ;;		On entry : 0/0
 10467 ;;		On exit  : 0/0
 10468 ;;		Unchanged: 0/0
 10469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10470 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10471 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10472 ;;      Temps:          0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10473 ;;      Totals:         0       0       2      10       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10474 ;;Total ram usage:       12 bytes
 10475 ;; Hardware stack levels used: 1
 10476 ;; Hardware stack levels required when called: 17
 10477 ;; This function calls:
 10478 ;;		_APP_GetEventState
 10479 ;;		_findEvent
 10480 ;;		_getEv
 10481 ;;		_sendMessage3
 10482 ;;		_sendMessage4
 10483 ;; This function is called by:
 10484 ;;		_poll
 10485 ;; This function uses a non-reentrant model
 10486 ;;
 10487                           
 10488                           	psect	text20
 10489   005EE6                     __ptext20:
 10490                           	callstack 0
 10491   005EE6                     _producerProcessMessage:
 10492                           	callstack 12
 10493                           
 10494                           ;../../VLCBlib_PIC/event_producer_happening.c: 125:     uint8_t index;;../../VLCBlib_PIC
      +                          /event_producer_happening.c: 126:     Happening h;;../../VLCBlib_PIC/event_producer_happ
      +                          ening.c: 127:     int16_t ev;;../../VLCBlib_PIC/event_producer_happening.c: 129:     swi
      +                          tch (m->opc) {
 10495                           
 10496                           ;incstack = 0
 10497   005EE6  D11E               	goto	l25149
 10498   005EE8                     l25101:
 10499                           
 10500                           ; BSR set to: 2
 10501                           ;../../VLCBlib_PIC/event_producer_happening.c: 132:             if (m->len < 5) {
 10502   005EE8  C1FD  FFD9         	movff	producerProcessMessage@m,fsr2l
 10503   005EEC  C1FE  FFDA         	movff	producerProcessMessage@m+1,fsr2h
 10504   005EF0  0E05               	movlw	5
 10505   005EF2  60DF               	cpfslt	indf2,c
 10506   005EF4  D00C               	goto	l25109
 10507                           
 10508                           ; BSR set to: 2
 10509                           ;../../VLCBlib_PIC/event_producer_happening.c: 133:                 sendMessage3(OPC_CMD
      +                          ERR, nn.bytes.hi, nn.bytes.lo, CMDERR_INV_CMD);
 10510   005EF6  C0B5  F0A7         	movff	_nn+1,sendMessage3@data1
 10511   005EFA  C0B4  F0A8         	movff	_nn,sendMessage3@data2
 10512   005EFE  0E01               	movlw	1
 10513   005F00  0100               	movlb	0	; () banked
 10514   005F02  6FA9               	movwf	sendMessage3@data3& (0+255),b
 10515   005F04  0E6F               	movlw	111
 10516   005F06  ECA5  F061         	call	_sendMessage3
 10517   005F0A                     l25105:
 10518                           
 10519                           ;../../VLCBlib_PIC/event_producer_happening.c: 134:                 return PROCESSED;
 10520   005F0A  0E01               	movlw	1
 10521   005F0C  0012               	return	
 10522   005F0E                     l25109:
 10523                           
 10524                           ; BSR set to: 2
 10525                           ;../../VLCBlib_PIC/event_producer_happening.c: 136:             if (m->opc == OPC_AREQ) 
      +                          {
 10526   005F0E  0101               	movlb	1	; () banked
 10527   005F10  EE20 F001          	lfsr	2,1
 10528   005F14  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 10529   005F16  26D9               	addwf	fsr2l,f,c
 10530   005F18  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10531   005F1A  22DA               	addwfc	fsr2h,f,c
 10532   005F1C  0E92               	movlw	146
 10533   005F1E  18DE               	xorwf	postinc2,w,c
 10534   005F20  A4D8               	btfss	status,2,c
 10535   005F22  D033               	goto	l25113
 10536                           
 10537                           ; BSR set to: 1
 10538                           ;../../VLCBlib_PIC/event_producer_happening.c: 137:                 index = findEvent((u
      +                          int16_t)((m->bytes[0]<<8)|(m->bytes[1])), (uint16_t)((m->bytes[2]<<8)|(m->bytes[3])));
 10539   005F24  EE20 F003          	lfsr	2,3
 10540   005F28  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 10541   005F2A  26D9               	addwf	fsr2l,f,c
 10542   005F2C  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10543   005F2E  22DA               	addwfc	fsr2h,f,c
 10544   005F30  50DF               	movf	indf2,w,c
 10545   005F32  0102               	movlb	2	; () banked
 10546   005F34  6FCC               	movwf	??_producerProcessMessage& (0+255),b
 10547   005F36  0101               	movlb	1	; () banked
 10548   005F38  EE20 F002          	lfsr	2,2
 10549   005F3C  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 10550   005F3E  26D9               	addwf	fsr2l,f,c
 10551   005F40  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10552   005F42  22DA               	addwfc	fsr2h,f,c
 10553   005F44  50DF               	movf	indf2,w,c
 10554   005F46  0102               	movlb	2	; () banked
 10555   005F48  6FCD               	movwf	(??_producerProcessMessage+1)& (0+255),b
 10556   005F4A  51CC               	movf	??_producerProcessMessage& (0+255),w,b
 10557   005F4C  0101               	movlb	1	; () banked
 10558   005F4E  6FBE               	movwf	findEvent@nodeNumber& (0+255),b
 10559   005F50  C2CD  F1BF         	movff	??_producerProcessMessage+1,findEvent@nodeNumber+1
 10560   005F54  EE20 F005          	lfsr	2,5
 10561   005F58  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 10562   005F5A  26D9               	addwf	fsr2l,f,c
 10563   005F5C  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10564   005F5E  22DA               	addwfc	fsr2h,f,c
 10565   005F60  50DF               	movf	indf2,w,c
 10566   005F62  0102               	movlb	2	; () banked
 10567   005F64  6FCF               	movwf	(??_producerProcessMessage+3)& (0+255),b
 10568   005F66  0101               	movlb	1	; () banked
 10569   005F68  EE20 F004          	lfsr	2,4
 10570   005F6C  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 10571   005F6E  26D9               	addwf	fsr2l,f,c
 10572   005F70  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10573   005F72  22DA               	addwfc	fsr2h,f,c
 10574   005F74  50DF               	movf	indf2,w,c
 10575   005F76  0102               	movlb	2	; () banked
 10576   005F78  6FD0               	movwf	(??_producerProcessMessage+4)& (0+255),b
 10577   005F7A  51CF               	movf	(??_producerProcessMessage+3)& (0+255),w,b
 10578   005F7C  0101               	movlb	1	; () banked
 10579   005F7E  6FC0               	movwf	findEvent@eventNumber& (0+255),b
 10580   005F80  C2D0  F1C1         	movff	??_producerProcessMessage+4,findEvent@eventNumber+1
 10581   005F84  EC1A  F053         	call	_findEvent	;wreg free
 10582   005F88  D01E               	goto	L1
 10583   005F8A                     l25113:
 10584                           
 10585                           ; BSR set to: 1
 10586                           ;../../VLCBlib_PIC/event_producer_happening.c: 139:                 index = findEvent(0,
      +                           (uint16_t)((m->bytes[2]<<8)|(m->bytes[3])));
 10587   005F8A  0E00               	movlw	0
 10588   005F8C  6FBF               	movwf	(findEvent@nodeNumber+1)& (0+255),b
 10589   005F8E  0E00               	movlw	0
 10590   005F90  6FBE               	movwf	findEvent@nodeNumber& (0+255),b
 10591   005F92  EE20 F005          	lfsr	2,5
 10592   005F96  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 10593   005F98  26D9               	addwf	fsr2l,f,c
 10594   005F9A  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10595   005F9C  22DA               	addwfc	fsr2h,f,c
 10596   005F9E  50DF               	movf	indf2,w,c
 10597   005FA0  0102               	movlb	2	; () banked
 10598   005FA2  6FCC               	movwf	??_producerProcessMessage& (0+255),b
 10599   005FA4  0101               	movlb	1	; () banked
 10600   005FA6  EE20 F004          	lfsr	2,4
 10601   005FAA  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 10602   005FAC  26D9               	addwf	fsr2l,f,c
 10603   005FAE  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10604   005FB0  22DA               	addwfc	fsr2h,f,c
 10605   005FB2  50DF               	movf	indf2,w,c
 10606   005FB4  0102               	movlb	2	; () banked
 10607   005FB6  6FCD               	movwf	(??_producerProcessMessage+1)& (0+255),b
 10608   005FB8  51CC               	movf	??_producerProcessMessage& (0+255),w,b
 10609   005FBA  0101               	movlb	1	; () banked
 10610   005FBC  6FC0               	movwf	findEvent@eventNumber& (0+255),b
 10611   005FBE  C2CD  F1C1         	movff	??_producerProcessMessage+1,findEvent@eventNumber+1
 10612   005FC2  EC1A  F053         	call	_findEvent	;wreg free
 10613   005FC6                     L1:
 10614   005FC6  0102               	movlb	2	; () banked
 10615   005FC8  6FD5               	movwf	producerProcessMessage@index& (0+255),b
 10616                           
 10617                           ; BSR set to: 2
 10618                           ;../../VLCBlib_PIC/event_producer_happening.c: 141:             if (index == 0xff) retur
      +                          n PROCESSED;
 10619   005FCA  29D5               	incf	producerProcessMessage@index& (0+255),w,b
 10620   005FCC  B4D8               	btfsc	status,2,c
 10621   005FCE  D79D               	goto	l25105
 10622                           
 10623                           ; BSR set to: 2
 10624                           ;../../VLCBlib_PIC/event_producer_happening.c: 143:             ev = getEv(index, 0);
 10625   005FD0  0E00               	movlw	0
 10626   005FD2  0100               	movlb	0	; () banked
 10627   005FD4  6F9D               	movwf	getEv@evNum& (0+255),b
 10628   005FD6  0102               	movlb	2	; () banked
 10629   005FD8  51D5               	movf	producerProcessMessage@index& (0+255),w,b
 10630   005FDA  EC1C  F03D         	call	_getEv
 10631   005FDE  C09D  F2D2         	movff	?_getEv,producerProcessMessage@ev
 10632   005FE2  C09E  F2D3         	movff	?_getEv+1,producerProcessMessage@ev+1
 10633                           
 10634                           ;../../VLCBlib_PIC/event_producer_happening.c: 144:             if (ev <= 0) return PROC
      +                          ESSED;
 10635   005FE6  0102               	movlb	2	; () banked
 10636   005FE8  BFD3               	btfsc	(producerProcessMessage@ev+1)& (0+255),7,b
 10637   005FEA  D78F               	goto	l25105
 10638   005FEC  51D3               	movf	(producerProcessMessage@ev+1)& (0+255),w,b
 10639   005FEE  E103               	bnz	l3081
 10640   005FF0  05D2               	decf	producerProcessMessage@ev& (0+255),w,b
 10641   005FF2  A0D8               	btfss	status,0,c
 10642   005FF4  D78A               	goto	l25105
 10643   005FF6                     l3081:
 10644                           
 10645                           ; BSR set to: 2
 10646                           ;../../VLCBlib_PIC/event_producer_happening.c: 146:             h = (uint8_t)ev;
 10647   005FF6  C2D2  F2D4         	movff	producerProcessMessage@ev,producerProcessMessage@h
 10648                           
 10649                           ; BSR set to: 2
 10650                           ;../../VLCBlib_PIC/event_producer_happening.c: 154:             if (m->opc == OPC_AREQ) 
      +                          {
 10651   005FFA  0101               	movlb	1	; () banked
 10652   005FFC  EE20 F001          	lfsr	2,1
 10653   006000  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 10654   006002  26D9               	addwf	fsr2l,f,c
 10655   006004  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10656   006006  22DA               	addwfc	fsr2h,f,c
 10657   006008  0E92               	movlw	146
 10658   00600A  18DE               	xorwf	postinc2,w,c
 10659   00600C  A4D8               	btfss	status,2,c
 10660   00600E  D051               	goto	l25137
 10661                           
 10662                           ; BSR set to: 1
 10663                           ;../../VLCBlib_PIC/event_producer_happening.c: 155:                 if (APP_GetEventStat
      +                          e(h) == EVENT_ON) {
 10664   006010  0102               	movlb	2	; () banked
 10665   006012  51D4               	movf	producerProcessMessage@h& (0+255),w,b
 10666   006014  EC7C  F022         	call	_APP_GetEventState
 10667   006018  06E8               	decf	wreg,f,c
 10668   00601A  A4D8               	btfss	status,2,c
 10669   00601C  D025               	goto	l25135
 10670                           
 10671                           ;../../VLCBlib_PIC/event_producer_happening.c: 156:                     sendMessage4(OPC
      +                          _ARON, m->bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]);
 10672   00601E  0101               	movlb	1	; () banked
 10673   006020  EE20 F002          	lfsr	2,2
 10674   006024  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 10675   006026  26D9               	addwf	fsr2l,f,c
 10676   006028  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10677   00602A  22DA               	addwfc	fsr2h,f,c
 10678   00602C  50DF               	movf	indf2,w,c
 10679   00602E  6FC6               	movwf	sendMessage4@data1& (0+255),b
 10680   006030  EE20 F003          	lfsr	2,3
 10681   006034  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 10682   006036  26D9               	addwf	fsr2l,f,c
 10683   006038  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10684   00603A  22DA               	addwfc	fsr2h,f,c
 10685   00603C  50DF               	movf	indf2,w,c
 10686   00603E  6FC7               	movwf	sendMessage4@data2& (0+255),b
 10687   006040  EE20 F004          	lfsr	2,4
 10688   006044  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 10689   006046  26D9               	addwf	fsr2l,f,c
 10690   006048  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10691   00604A  22DA               	addwfc	fsr2h,f,c
 10692   00604C  50DF               	movf	indf2,w,c
 10693   00604E  6FC8               	movwf	sendMessage4@data3& (0+255),b
 10694   006050  EE20 F005          	lfsr	2,5
 10695   006054  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 10696   006056  26D9               	addwf	fsr2l,f,c
 10697   006058  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10698   00605A  22DA               	addwfc	fsr2h,f,c
 10699   00605C  50DF               	movf	indf2,w,c
 10700   00605E  6FC9               	movwf	sendMessage4@data4& (0+255),b
 10701   006060  0E93               	movlw	147
 10702   006062  EC5F  F061         	call	_sendMessage4
 10703                           
 10704                           ;../../VLCBlib_PIC/event_producer_happening.c: 157:                 } else {
 10705   006066  D751               	goto	l25105
 10706   006068                     l25135:
 10707                           
 10708                           ;../../VLCBlib_PIC/event_producer_happening.c: 158:                     sendMessage4(OPC
      +                          _AROF, m->bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]);
 10709   006068  0101               	movlb	1	; () banked
 10710   00606A  EE20 F002          	lfsr	2,2
 10711   00606E  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 10712   006070  26D9               	addwf	fsr2l,f,c
 10713   006072  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10714   006074  22DA               	addwfc	fsr2h,f,c
 10715   006076  50DF               	movf	indf2,w,c
 10716   006078  6FC6               	movwf	sendMessage4@data1& (0+255),b
 10717   00607A  EE20 F003          	lfsr	2,3
 10718   00607E  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 10719   006080  26D9               	addwf	fsr2l,f,c
 10720   006082  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10721   006084  22DA               	addwfc	fsr2h,f,c
 10722   006086  50DF               	movf	indf2,w,c
 10723   006088  6FC7               	movwf	sendMessage4@data2& (0+255),b
 10724   00608A  EE20 F004          	lfsr	2,4
 10725   00608E  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 10726   006090  26D9               	addwf	fsr2l,f,c
 10727   006092  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10728   006094  22DA               	addwfc	fsr2h,f,c
 10729   006096  50DF               	movf	indf2,w,c
 10730   006098  6FC8               	movwf	sendMessage4@data3& (0+255),b
 10731   00609A  EE20 F005          	lfsr	2,5
 10732   00609E  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 10733   0060A0  26D9               	addwf	fsr2l,f,c
 10734   0060A2  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10735   0060A4  22DA               	addwfc	fsr2h,f,c
 10736   0060A6  50DF               	movf	indf2,w,c
 10737   0060A8  6FC9               	movwf	sendMessage4@data4& (0+255),b
 10738   0060AA  0E94               	movlw	148
 10739   0060AC  EC5F  F061         	call	_sendMessage4
 10740   0060B0  D72C               	goto	l25105
 10741   0060B2                     l25137:
 10742                           
 10743                           ; BSR set to: 1
 10744                           ;../../VLCBlib_PIC/event_producer_happening.c: 161:                 if (APP_GetEventStat
      +                          e(h) == EVENT_ON) {
 10745   0060B2  0102               	movlb	2	; () banked
 10746   0060B4  51D4               	movf	producerProcessMessage@h& (0+255),w,b
 10747   0060B6  EC7C  F022         	call	_APP_GetEventState
 10748   0060BA  06E8               	decf	wreg,f,c
 10749   0060BC  A4D8               	btfss	status,2,c
 10750   0060BE  D019               	goto	l25141
 10751                           
 10752                           ;../../VLCBlib_PIC/event_producer_happening.c: 162:                     sendMessage4(OPC
      +                          _ARSON, nn.bytes.hi, nn.bytes.lo, m->bytes[2], m->bytes[3]);
 10753   0060C0  C0B5  F1C6         	movff	_nn+1,sendMessage4@data1
 10754   0060C4  C0B4  F1C7         	movff	_nn,sendMessage4@data2
 10755   0060C8  0101               	movlb	1	; () banked
 10756   0060CA  EE20 F004          	lfsr	2,4
 10757   0060CE  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 10758   0060D0  26D9               	addwf	fsr2l,f,c
 10759   0060D2  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10760   0060D4  22DA               	addwfc	fsr2h,f,c
 10761   0060D6  50DF               	movf	indf2,w,c
 10762   0060D8  6FC8               	movwf	sendMessage4@data3& (0+255),b
 10763   0060DA  EE20 F005          	lfsr	2,5
 10764   0060DE  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 10765   0060E0  26D9               	addwf	fsr2l,f,c
 10766   0060E2  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10767   0060E4  22DA               	addwfc	fsr2h,f,c
 10768   0060E6  50DF               	movf	indf2,w,c
 10769   0060E8  6FC9               	movwf	sendMessage4@data4& (0+255),b
 10770   0060EA  0E9D               	movlw	157
 10771   0060EC  EC5F  F061         	call	_sendMessage4
 10772                           
 10773                           ;../../VLCBlib_PIC/event_producer_happening.c: 163:                 } else {
 10774   0060F0  D70C               	goto	l25105
 10775   0060F2                     l25141:
 10776                           
 10777                           ;../../VLCBlib_PIC/event_producer_happening.c: 164:                     sendMessage4(OPC
      +                          _ARSOF, nn.bytes.hi, nn.bytes.lo, m->bytes[2], m->bytes[3]);
 10778   0060F2  C0B5  F1C6         	movff	_nn+1,sendMessage4@data1
 10779   0060F6  C0B4  F1C7         	movff	_nn,sendMessage4@data2
 10780   0060FA  0101               	movlb	1	; () banked
 10781   0060FC  EE20 F004          	lfsr	2,4
 10782   006100  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 10783   006102  26D9               	addwf	fsr2l,f,c
 10784   006104  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10785   006106  22DA               	addwfc	fsr2h,f,c
 10786   006108  50DF               	movf	indf2,w,c
 10787   00610A  6FC8               	movwf	sendMessage4@data3& (0+255),b
 10788   00610C  EE20 F005          	lfsr	2,5
 10789   006110  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 10790   006112  26D9               	addwf	fsr2l,f,c
 10791   006114  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10792   006116  22DA               	addwfc	fsr2h,f,c
 10793   006118  50DF               	movf	indf2,w,c
 10794   00611A  6FC9               	movwf	sendMessage4@data4& (0+255),b
 10795   00611C  0E9E               	movlw	158
 10796   00611E  EC5F  F061         	call	_sendMessage4
 10797   006122  D6F3               	goto	l25105
 10798   006124                     l25149:
 10799   006124  0101               	movlb	1	; () banked
 10800   006126  EE20 F001          	lfsr	2,1
 10801   00612A  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 10802   00612C  26D9               	addwf	fsr2l,f,c
 10803   00612E  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10804   006130  22DA               	addwfc	fsr2h,f,c
 10805   006132  50DF               	movf	indf2,w,c
 10806   006134  0102               	movlb	2	; () banked
 10807   006136  6FCC               	movwf	??_producerProcessMessage& (0+255),b
 10808   006138  6BCD               	clrf	(??_producerProcessMessage+1)& (0+255),b
 10809                           
 10810                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10811                           ; Switch size 1, requested type "simple"
 10812                           ; Number of cases is 1, Range of values is 0 to 0
 10813                           ; switch strategies available:
 10814                           ; Name         Instructions Cycles
 10815                           ; simple_byte            4     3 (average)
 10816                           ;	Chosen strategy is simple_byte
 10817   00613A  51CD               	movf	(??_producerProcessMessage+1)& (0+255),w,b
 10818   00613C  0A00               	xorlw	0	; case 0
 10819   00613E  A4D8               	btfss	status,2,c
 10820   006140  D007               	goto	l25151
 10821                           
 10822                           ; BSR set to: 2
 10823                           ; Switch size 1, requested type "simple"
 10824                           ; Number of cases is 2, Range of values is 146 to 154
 10825                           ; switch strategies available:
 10826                           ; Name         Instructions Cycles
 10827                           ; simple_byte            7     4 (average)
 10828                           ;	Chosen strategy is simple_byte
 10829   006142  51CC               	movf	??_producerProcessMessage& (0+255),w,b
 10830   006144  0A92               	xorlw	146	; case 146
 10831   006146  B4D8               	btfsc	status,2,c
 10832   006148  D6CF               	goto	l25101
 10833   00614A  0A08               	xorlw	8	; case 154
 10834   00614C  B4D8               	btfsc	status,2,c
 10835   00614E  D6CC               	goto	l25101
 10836   006150                     l25151:
 10837                           
 10838                           ; BSR set to: 2
 10839                           ;../../VLCBlib_PIC/event_producer_happening.c: 171:     return NOT_PROCESSED;
 10840   006150  0E00               	movlw	0
 10841   006152  0012               	return		;funcret
 10842   006154                     __end_of_producerProcessMessage:
 10843                           	callstack 0
 10844                           
 10845 ;; *************** function _canProcessMessage *****************
 10846 ;; Defined at:
 10847 ;;		line 373 in file "../../VLCBlib_PIC/can18_ecan.c"
 10848 ;; Parameters:    Size  Location     Type
 10849 ;;  m               2   63[BANK1 ] PTR struct Message
 10850 ;;		 -> poll@m(9), 
 10851 ;; Auto vars:     Size  Location     Type
 10852 ;;		None
 10853 ;; Return value:  Size  Location     Type
 10854 ;;                  1    wreg      enum E12966
 10855 ;; Registers used:
 10856 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10857 ;; Tracked objects:
 10858 ;;		On entry : 0/0
 10859 ;;		On exit  : 0/0
 10860 ;;		Unchanged: 0/0
 10861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10862 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10864 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10865 ;;      Totals:         0       0       2       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10866 ;;Total ram usage:        4 bytes
 10867 ;; Hardware stack levels used: 1
 10868 ;; Hardware stack levels required when called: 17
 10869 ;; This function calls:
 10870 ;;		_sendMessage5
 10871 ;; This function is called by:
 10872 ;;		_poll
 10873 ;; This function uses a non-reentrant model
 10874 ;;
 10875                           
 10876                           	psect	text21
 10877   00A038                     __ptext21:
 10878                           	callstack 0
 10879   00A038                     _canProcessMessage:
 10880                           	callstack 12
 10881                           
 10882                           ;../../VLCBlib_PIC/can18_ecan.c: 375:     if (m->len < 3) return NOT_PROCESSED;
 10883                           
 10884                           ;incstack = 0
 10885   00A038  C1FD  FFD9         	movff	canProcessMessage@m,fsr2l
 10886   00A03C  C1FE  FFDA         	movff	canProcessMessage@m+1,fsr2h
 10887   00A040  0E03               	movlw	3
 10888   00A042  60DF               	cpfslt	indf2,c
 10889   00A044  D002               	goto	l24643
 10890   00A046                     u26900:
 10891   00A046  0E00               	movlw	0
 10892   00A048  0012               	return	
 10893   00A04A                     l24643:
 10894                           
 10895                           ;../../VLCBlib_PIC/can18_ecan.c: 376:     if (m->bytes[0] != nn.bytes.hi) return NOT_PRO
      +                          CESSED;
 10896   00A04A  0101               	movlb	1	; () banked
 10897   00A04C  EE20 F002          	lfsr	2,2
 10898   00A050  51FD               	movf	canProcessMessage@m& (0+255),w,b
 10899   00A052  26D9               	addwf	fsr2l,f,c
 10900   00A054  51FE               	movf	(canProcessMessage@m+1)& (0+255),w,b
 10901   00A056  22DA               	addwfc	fsr2h,f,c
 10902   00A058  50DE               	movf	postinc2,w,c
 10903   00A05A  0100               	movlb	0	; () banked
 10904   00A05C  19B5               	xorwf	(_nn+1)& (0+255),w,b
 10905   00A05E  A4D8               	btfss	status,2,c
 10906   00A060  D7F2               	goto	u26900
 10907                           
 10908                           ; BSR set to: 0
 10909                           ;../../VLCBlib_PIC/can18_ecan.c: 377:     if (m->bytes[1] != nn.bytes.lo) return NOT_PRO
      +                          CESSED;
 10910   00A062  0101               	movlb	1	; () banked
 10911   00A064  EE20 F003          	lfsr	2,3
 10912   00A068  51FD               	movf	canProcessMessage@m& (0+255),w,b
 10913   00A06A  26D9               	addwf	fsr2l,f,c
 10914   00A06C  51FE               	movf	(canProcessMessage@m+1)& (0+255),w,b
 10915   00A06E  22DA               	addwfc	fsr2h,f,c
 10916   00A070  0100               	movlb	0	; () banked
 10917   00A072  51B4               	movf	_nn& (0+255),w,b
 10918   00A074  18DE               	xorwf	postinc2,w,c
 10919   00A076  A4D8               	btfss	status,2,c
 10920   00A078  D7E6               	goto	u26900
 10921   00A07A  D018               	goto	l24673
 10922   00A07C                     l24655:
 10923                           
 10924                           ;../../VLCBlib_PIC/can18_ecan.c: 383:             return PROCESSED;
 10925   00A07C  0E01               	movlw	1
 10926   00A07E  0012               	return	
 10927   00A080                     l24659:
 10928                           
 10929                           ; BSR set to: 2
 10930                           ;../../VLCBlib_PIC/can18_ecan.c: 385:             if (m->len < 4) {
 10931   00A080  C1FD  FFD9         	movff	canProcessMessage@m,fsr2l
 10932   00A084  C1FE  FFDA         	movff	canProcessMessage@m+1,fsr2h
 10933   00A088  0E04               	movlw	4
 10934   00A08A  60DF               	cpfslt	indf2,c
 10935   00A08C  D7F7               	goto	l24655
 10936                           
 10937                           ; BSR set to: 2
 10938                           ;../../VLCBlib_PIC/can18_ecan.c: 387:                 sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_CANID, SERVICE_ID_MNS, CMDERR_INV_CMD);
 10939   00A08E  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 10940   00A092  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 10941   00A096  0E75               	movlw	117
 10942   00A098  0101               	movlb	1	; () banked
 10943   00A09A  6FC8               	movwf	sendMessage5@data3& (0+255),b
 10944   00A09C  0E01               	movlw	1
 10945   00A09E  6FC9               	movwf	sendMessage5@data4& (0+255),b
 10946   00A0A0  0E01               	movlw	1
 10947   00A0A2  6FCA               	movwf	sendMessage5@data5& (0+255),b
 10948   00A0A4  0EAF               	movlw	175
 10949   00A0A6  EC47  F061         	call	_sendMessage5
 10950   00A0AA  D7E8               	goto	l24655
 10951   00A0AC                     l24673:
 10952                           
 10953                           ; BSR set to: 0
 10954   00A0AC  0101               	movlb	1	; () banked
 10955   00A0AE  EE20 F001          	lfsr	2,1
 10956   00A0B2  51FD               	movf	canProcessMessage@m& (0+255),w,b
 10957   00A0B4  26D9               	addwf	fsr2l,f,c
 10958   00A0B6  51FE               	movf	(canProcessMessage@m+1)& (0+255),w,b
 10959   00A0B8  22DA               	addwfc	fsr2h,f,c
 10960   00A0BA  50DF               	movf	indf2,w,c
 10961   00A0BC  0102               	movlb	2	; () banked
 10962   00A0BE  6FCC               	movwf	??_canProcessMessage& (0+255),b
 10963   00A0C0  6BCD               	clrf	(??_canProcessMessage+1)& (0+255),b
 10964                           
 10965                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10966                           ; Switch size 1, requested type "simple"
 10967                           ; Number of cases is 1, Range of values is 0 to 0
 10968                           ; switch strategies available:
 10969                           ; Name         Instructions Cycles
 10970                           ; simple_byte            4     3 (average)
 10971                           ;	Chosen strategy is simple_byte
 10972   00A0C2  51CD               	movf	(??_canProcessMessage+1)& (0+255),w,b
 10973   00A0C4  0A00               	xorlw	0	; case 0
 10974   00A0C6  A4D8               	btfss	status,2,c
 10975   00A0C8  D7BE               	goto	u26900
 10976                           
 10977                           ; BSR set to: 2
 10978                           ; Switch size 1, requested type "simple"
 10979                           ; Number of cases is 2, Range of values is 93 to 117
 10980                           ; switch strategies available:
 10981                           ; Name         Instructions Cycles
 10982                           ; simple_byte            7     4 (average)
 10983                           ;	Chosen strategy is simple_byte
 10984   00A0CA  51CC               	movf	??_canProcessMessage& (0+255),w,b
 10985   00A0CC  0A5D               	xorlw	93	; case 93
 10986   00A0CE  B4D8               	btfsc	status,2,c
 10987   00A0D0  D7D5               	goto	l24655
 10988   00A0D2  0A28               	xorlw	40	; case 117
 10989   00A0D4  B4D8               	btfsc	status,2,c
 10990   00A0D6  D7D4               	goto	l24659
 10991   00A0D8  D7B6               	goto	u26900
 10992   00A0DA                     __end_of_canProcessMessage:
 10993                           	callstack 0
 10994                           
 10995 ;; *************** function _nvProcessMessage *****************
 10996 ;; Defined at:
 10997 ;;		line 240 in file "../../VLCBlib_PIC/nv.c"
 10998 ;; Parameters:    Size  Location     Type
 10999 ;;  m               2   63[BANK1 ] PTR struct Message
 11000 ;;		 -> poll@m(9), 
 11001 ;; Auto vars:     Size  Location     Type
 11002 ;;  valueOrError    2    2[BANK2 ] short 
 11003 ;; Return value:  Size  Location     Type
 11004 ;;                  1    wreg      enum E12799
 11005 ;; Registers used:
 11006 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 11007 ;; Tracked objects:
 11008 ;;		On entry : 0/0
 11009 ;;		On exit  : 0/0
 11010 ;;		Unchanged: 0/0
 11011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11012 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11013 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11014 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11015 ;;      Totals:         0       0       2       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11016 ;;Total ram usage:        6 bytes
 11017 ;; Hardware stack levels used: 1
 11018 ;; Hardware stack levels required when called: 27
 11019 ;; This function calls:
 11020 ;;		_findServiceIndex
 11021 ;;		_getNV
 11022 ;;		_sendMessage2
 11023 ;;		_sendMessage3
 11024 ;;		_sendMessage4
 11025 ;;		_sendMessage5
 11026 ;;		_setNV
 11027 ;;		_startTimedResponse
 11028 ;; This function is called by:
 11029 ;;		_poll
 11030 ;; This function uses a non-reentrant model
 11031 ;;
 11032                           
 11033                           	psect	text22
 11034   00484A                     __ptext22:
 11035                           	callstack 0
 11036   00484A                     _nvProcessMessage:
 11037                           	callstack 2
 11038                           
 11039                           ;../../VLCBlib_PIC/nv.c: 241:     int16_t valueOrError;;../../VLCBlib_PIC/nv.c: 243:    
      +                           if (m->len < 3) {
 11040                           
 11041                           ;incstack = 0
 11042   00484A  C1FD  FFD9         	movff	nvProcessMessage@m,fsr2l
 11043   00484E  C1FE  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 11044   004852  0E03               	movlw	3
 11045   004854  60DF               	cpfslt	indf2,c
 11046   004856  D002               	goto	l24345
 11047   004858                     u26640:
 11048                           
 11049                           ;../../VLCBlib_PIC/nv.c: 244:         return NOT_PROCESSED;
 11050   004858  0E00               	movlw	0
 11051   00485A  0012               	return	
 11052   00485C                     l24345:
 11053                           
 11054                           ;../../VLCBlib_PIC/nv.c: 247:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED;
 11055   00485C  0101               	movlb	1	; () banked
 11056   00485E  EE20 F002          	lfsr	2,2
 11057   004862  51FD               	movf	nvProcessMessage@m& (0+255),w,b
 11058   004864  26D9               	addwf	fsr2l,f,c
 11059   004866  51FE               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11060   004868  22DA               	addwfc	fsr2h,f,c
 11061   00486A  50DE               	movf	postinc2,w,c
 11062   00486C  0100               	movlb	0	; () banked
 11063   00486E  19B5               	xorwf	(_nn+1)& (0+255),w,b
 11064   004870  A4D8               	btfss	status,2,c
 11065   004872  D7F2               	goto	u26640
 11066                           
 11067                           ; BSR set to: 0
 11068                           ;../../VLCBlib_PIC/nv.c: 248:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED;
 11069   004874  0101               	movlb	1	; () banked
 11070   004876  EE20 F003          	lfsr	2,3
 11071   00487A  51FD               	movf	nvProcessMessage@m& (0+255),w,b
 11072   00487C  26D9               	addwf	fsr2l,f,c
 11073   00487E  51FE               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11074   004880  22DA               	addwfc	fsr2h,f,c
 11075   004882  0100               	movlb	0	; () banked
 11076   004884  51B4               	movf	_nn& (0+255),w,b
 11077   004886  18DE               	xorwf	postinc2,w,c
 11078   004888  A4D8               	btfss	status,2,c
 11079   00488A  D7E6               	goto	u26640
 11080   00488C  D161               	goto	l24467
 11081   00488E                     l24357:
 11082                           
 11083                           ; BSR set to: 2
 11084                           ;../../VLCBlib_PIC/nv.c: 252:             if (m->len < 4) {
 11085   00488E  C1FD  FFD9         	movff	nvProcessMessage@m,fsr2l
 11086   004892  C1FE  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 11087   004896  0E04               	movlw	4
 11088   004898  60DF               	cpfslt	indf2,c
 11089   00489A  D01D               	goto	l24367
 11090                           
 11091                           ; BSR set to: 2
 11092                           ;../../VLCBlib_PIC/nv.c: 253:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, CMDERR_INV_CMD);
 11093   00489C  C0B5  F0A7         	movff	_nn+1,sendMessage3@data1
 11094   0048A0  C0B4  F0A8         	movff	_nn,sendMessage3@data2
 11095   0048A4  0E01               	movlw	1
 11096   0048A6  0100               	movlb	0	; () banked
 11097   0048A8  6FA9               	movwf	sendMessage3@data3& (0+255),b
 11098   0048AA  0E6F               	movlw	111
 11099   0048AC  ECA5  F061         	call	_sendMessage3
 11100                           
 11101                           ;../../VLCBlib_PIC/nv.c: 255:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11102   0048B0  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 11103   0048B4  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 11104   0048B8  0E71               	movlw	113
 11105   0048BA  0101               	movlb	1	; () banked
 11106   0048BC  6FC8               	movwf	sendMessage5@data3& (0+255),b
 11107   0048BE  0E01               	movlw	1
 11108   0048C0  6FC9               	movwf	sendMessage5@data4& (0+255),b
 11109   0048C2  0E01               	movlw	1
 11110   0048C4  6FCA               	movwf	sendMessage5@data5& (0+255),b
 11111   0048C6  0EAF               	movlw	175
 11112   0048C8  EC47  F061         	call	_sendMessage5
 11113   0048CC                     l24361:
 11114                           
 11115                           ;../../VLCBlib_PIC/nv.c: 258:                 nvDiagnostics[0x02].asUint++;
 11116   0048CC  0101               	movlb	1	; () banked
 11117   0048CE  4BA7               	infsnz	(_nvDiagnostics+4)& (0+255),f,b
 11118   0048D0  2BA8               	incf	(_nvDiagnostics+5)& (0+255),f,b
 11119   0048D2                     l24363:
 11120                           
 11121                           ;../../VLCBlib_PIC/nv.c: 260:                 return PROCESSED;
 11122   0048D2  0E01               	movlw	1
 11123   0048D4  0012               	return	
 11124   0048D6                     l24367:
 11125                           
 11126                           ; BSR set to: 2
 11127                           ;../../VLCBlib_PIC/nv.c: 262:             valueOrError = getNV(m->bytes[2]);
 11128   0048D6  0101               	movlb	1	; () banked
 11129   0048D8  EE20 F004          	lfsr	2,4
 11130   0048DC  51FD               	movf	nvProcessMessage@m& (0+255),w,b
 11131   0048DE  26D9               	addwf	fsr2l,f,c
 11132   0048E0  51FE               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11133   0048E2  22DA               	addwfc	fsr2h,f,c
 11134   0048E4  50DF               	movf	indf2,w,c
 11135   0048E6  ECD2  F05F         	call	_getNV
 11136   0048EA  C08D  F2CE         	movff	?_getNV,nvProcessMessage@valueOrError
 11137   0048EE  C08E  F2CF         	movff	?_getNV+1,nvProcessMessage@valueOrError+1
 11138                           
 11139                           ;../../VLCBlib_PIC/nv.c: 263:             if (valueOrError < 0) {
 11140   0048F2  0102               	movlb	2	; () banked
 11141   0048F4  AFCF               	btfss	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 11142   0048F6  D01D               	goto	l24379
 11143                           
 11144                           ; BSR set to: 2
 11145                           ;../../VLCBlib_PIC/nv.c: 264:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(-valueOrError));
 11146   0048F8  C0B5  F0A7         	movff	_nn+1,sendMessage3@data1
 11147   0048FC  C0B4  F0A8         	movff	_nn,sendMessage3@data2
 11148   004900  51CE               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 11149   004902  0800               	sublw	0
 11150   004904  0100               	movlb	0	; () banked
 11151   004906  6FA9               	movwf	sendMessage3@data3& (0+255),b
 11152   004908  0E6F               	movlw	111
 11153   00490A  ECA5  F061         	call	_sendMessage3
 11154                           
 11155                           ;../../VLCBlib_PIC/nv.c: 266:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVRD, SERVICE_ID_MNS, (uint8_t)(-valueOrError));
 11156   00490E  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 11157   004912  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 11158   004916  0E71               	movlw	113
 11159   004918  0101               	movlb	1	; () banked
 11160   00491A  6FC8               	movwf	sendMessage5@data3& (0+255),b
 11161   00491C  0E01               	movlw	1
 11162   00491E  6FC9               	movwf	sendMessage5@data4& (0+255),b
 11163   004920  0102               	movlb	2	; () banked
 11164   004922  51CE               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 11165   004924  0800               	sublw	0
 11166   004926  0101               	movlb	1	; () banked
 11167   004928  6FCA               	movwf	sendMessage5@data5& (0+255),b
 11168   00492A  0EAF               	movlw	175
 11169   00492C  EC47  F061         	call	_sendMessage5
 11170   004930  D7CD               	goto	l24361
 11171   004932                     l24379:
 11172                           
 11173                           ; BSR set to: 2
 11174                           ;../../VLCBlib_PIC/nv.c: 274:             nvDiagnostics[0x01].asUint++;
 11175   004932  0101               	movlb	1	; () banked
 11176   004934  4BA5               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 11177   004936  2BA6               	incf	(_nvDiagnostics+3)& (0+255),f,b
 11178                           
 11179                           ; BSR set to: 1
 11180                           ;../../VLCBlib_PIC/nv.c: 276:             sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.
      +                          lo, m->bytes[2], (uint8_t)(valueOrError));
 11181   004938  C0B5  F1C6         	movff	_nn+1,sendMessage4@data1
 11182   00493C  C0B4  F1C7         	movff	_nn,sendMessage4@data2
 11183   004940  EE20 F004          	lfsr	2,4
 11184   004944  51FD               	movf	nvProcessMessage@m& (0+255),w,b
 11185   004946  26D9               	addwf	fsr2l,f,c
 11186   004948  51FE               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11187   00494A  22DA               	addwfc	fsr2h,f,c
 11188   00494C  50DF               	movf	indf2,w,c
 11189   00494E  6FC8               	movwf	sendMessage4@data3& (0+255),b
 11190   004950  C2CE  F1C9         	movff	nvProcessMessage@valueOrError,sendMessage4@data4
 11191   004954  0E97               	movlw	151
 11192   004956  EC5F  F061         	call	_sendMessage4
 11193                           
 11194                           ;../../VLCBlib_PIC/nv.c: 278:             if (m->bytes[2] == 0) {
 11195   00495A  0101               	movlb	1	; () banked
 11196   00495C  EE20 F004          	lfsr	2,4
 11197   004960  51FD               	movf	nvProcessMessage@m& (0+255),w,b
 11198   004962  26D9               	addwf	fsr2l,f,c
 11199   004964  51FE               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11200   004966  22DA               	addwfc	fsr2h,f,c
 11201   004968  50DF               	movf	indf2,w,c
 11202   00496A  A4D8               	btfss	status,2,c
 11203   00496C  D7B2               	goto	l24363
 11204                           
 11205                           ; BSR set to: 1
 11206                           ;../../VLCBlib_PIC/nv.c: 280:                 startTimedResponse(6, findServiceIndex(SER
      +                          VICE_ID_NV), nvTRnvrdCallback);
 11207   00496E  0E02               	movlw	2
 11208   004970  EC1E  F058         	call	_findServiceIndex
 11209   004974  0100               	movlb	0	; () banked
 11210   004976  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 11211   004978  0EAA               	movlw	low _nvTRnvrdCallback
 11212   00497A  6F92               	movwf	startTimedResponse@callback& (0+255),b
 11213   00497C  0EBE               	movlw	high _nvTRnvrdCallback
 11214   00497E  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 11215   004980  0E06               	movlw	6
 11216   004982  EC75  F05F         	call	_startTimedResponse
 11217   004986  D7A5               	goto	l24363
 11218   004988                     l24391:
 11219                           
 11220                           ; BSR set to: 2
 11221                           ;../../VLCBlib_PIC/nv.c: 285:             if (m->len < 5) {
 11222   004988  C1FD  FFD9         	movff	nvProcessMessage@m,fsr2l
 11223   00498C  C1FE  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 11224   004990  0E05               	movlw	5
 11225   004992  60DF               	cpfslt	indf2,c
 11226   004994  D00F               	goto	l24401
 11227                           
 11228                           ; BSR set to: 2
 11229                           ;../../VLCBlib_PIC/nv.c: 288:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSET, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11230   004996  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 11231   00499A  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 11232   00499E  0E96               	movlw	150
 11233   0049A0  0101               	movlb	1	; () banked
 11234   0049A2  6FC8               	movwf	sendMessage5@data3& (0+255),b
 11235   0049A4  0E01               	movlw	1
 11236   0049A6  6FC9               	movwf	sendMessage5@data4& (0+255),b
 11237   0049A8  0E01               	movlw	1
 11238   0049AA  6FCA               	movwf	sendMessage5@data5& (0+255),b
 11239   0049AC  0EAF               	movlw	175
 11240   0049AE  EC47  F061         	call	_sendMessage5
 11241   0049B2  D78C               	goto	l24361
 11242   0049B4                     l24401:
 11243                           
 11244                           ; BSR set to: 2
 11245                           ;../../VLCBlib_PIC/nv.c: 295:             valueOrError = setNV(m->bytes[2], m->bytes[3])
      +                          ;
 11246   0049B4  0101               	movlb	1	; () banked
 11247   0049B6  EE20 F005          	lfsr	2,5
 11248   0049BA  51FD               	movf	nvProcessMessage@m& (0+255),w,b
 11249   0049BC  26D9               	addwf	fsr2l,f,c
 11250   0049BE  51FE               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11251   0049C0  22DA               	addwfc	fsr2h,f,c
 11252   0049C2  50DF               	movf	indf2,w,c
 11253   0049C4  6FF8               	movwf	setNV@value& (0+255),b
 11254   0049C6  EE20 F004          	lfsr	2,4
 11255   0049CA  51FD               	movf	nvProcessMessage@m& (0+255),w,b
 11256   0049CC  26D9               	addwf	fsr2l,f,c
 11257   0049CE  51FE               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11258   0049D0  22DA               	addwfc	fsr2h,f,c
 11259   0049D2  50DF               	movf	indf2,w,c
 11260   0049D4  EC7F  F056         	call	_setNV
 11261   0049D8  0102               	movlb	2	; () banked
 11262   0049DA  6FCC               	movwf	??_nvProcessMessage& (0+255),b
 11263   0049DC  51CC               	movf	??_nvProcessMessage& (0+255),w,b
 11264   0049DE  6FCE               	movwf	nvProcessMessage@valueOrError& (0+255),b
 11265   0049E0  6BCF               	clrf	(nvProcessMessage@valueOrError+1)& (0+255),b
 11266                           
 11267                           ; BSR set to: 2
 11268                           ;../../VLCBlib_PIC/nv.c: 296:             if (valueOrError >0) {
 11269   0049E2  BFCF               	btfsc	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 11270   0049E4  D00F               	goto	l24413
 11271   0049E6  51CF               	movf	(nvProcessMessage@valueOrError+1)& (0+255),w,b
 11272   0049E8  E103               	bnz	u26710
 11273   0049EA  05CE               	decf	nvProcessMessage@valueOrError& (0+255),w,b
 11274   0049EC  A0D8               	btfss	status,0,c
 11275   0049EE  D00A               	goto	l24413
 11276   0049F0                     u26710:
 11277                           
 11278                           ; BSR set to: 2
 11279                           ;../../VLCBlib_PIC/nv.c: 297:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(valueOrError));
 11280   0049F0  C0B5  F0A7         	movff	_nn+1,sendMessage3@data1
 11281   0049F4  C0B4  F0A8         	movff	_nn,sendMessage3@data2
 11282   0049F8  C2CE  F0A9         	movff	nvProcessMessage@valueOrError,sendMessage3@data3
 11283   0049FC  0E6F               	movlw	111
 11284   0049FE  ECA5  F061         	call	_sendMessage3
 11285   004A02  D764               	goto	l24361
 11286   004A04                     l24413:
 11287                           
 11288                           ; BSR set to: 2
 11289                           ;../../VLCBlib_PIC/nv.c: 304:             sendMessage2(OPC_WRACK, nn.bytes.hi, nn.bytes.
      +                          lo);
 11290   004A04  C0B5  F0A7         	movff	_nn+1,sendMessage2@data1
 11291   004A08  C0B4  F0A8         	movff	_nn,sendMessage2@data2
 11292   004A0C  0E59               	movlw	89
 11293   004A0E  EC17  F061         	call	_sendMessage2
 11294                           
 11295                           ;../../VLCBlib_PIC/nv.c: 306:             sendMessage5(OPC_GRSP, nn.bytes.hi, nn.bytes.l
      +                          o, OPC_NVSET, SERVICE_ID_MNS, GRSP_OK);
 11296   004A12  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 11297   004A16  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 11298   004A1A  0E96               	movlw	150
 11299   004A1C  0101               	movlb	1	; () banked
 11300   004A1E  6FC8               	movwf	sendMessage5@data3& (0+255),b
 11301   004A20  0E01               	movlw	1
 11302   004A22  6FC9               	movwf	sendMessage5@data4& (0+255),b
 11303   004A24  0E00               	movlw	0
 11304   004A26  6FCA               	movwf	sendMessage5@data5& (0+255),b
 11305   004A28  0EAF               	movlw	175
 11306   004A2A  EC47  F061         	call	_sendMessage5
 11307   004A2E  D751               	goto	l24363
 11308   004A30                     l24419:
 11309                           
 11310                           ; BSR set to: 2
 11311                           ;../../VLCBlib_PIC/nv.c: 311:             if (m->len < 5) {
 11312   004A30  C1FD  FFD9         	movff	nvProcessMessage@m,fsr2l
 11313   004A34  C1FE  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 11314   004A38  0E05               	movlw	5
 11315   004A3A  60DF               	cpfslt	indf2,c
 11316   004A3C  D00F               	goto	l24429
 11317                           
 11318                           ; BSR set to: 2
 11319                           ;../../VLCBlib_PIC/nv.c: 313:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11320   004A3E  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 11321   004A42  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 11322   004A46  0E8E               	movlw	142
 11323   004A48  0101               	movlb	1	; () banked
 11324   004A4A  6FC8               	movwf	sendMessage5@data3& (0+255),b
 11325   004A4C  0E01               	movlw	1
 11326   004A4E  6FC9               	movwf	sendMessage5@data4& (0+255),b
 11327   004A50  0E01               	movlw	1
 11328   004A52  6FCA               	movwf	sendMessage5@data5& (0+255),b
 11329   004A54  0EAF               	movlw	175
 11330   004A56  EC47  F061         	call	_sendMessage5
 11331   004A5A  D738               	goto	l24361
 11332   004A5C                     l24429:
 11333                           
 11334                           ; BSR set to: 2
 11335                           ;../../VLCBlib_PIC/nv.c: 319:             valueOrError = setNV(m->bytes[2], m->bytes[3])
      +                          ;
 11336   004A5C  0101               	movlb	1	; () banked
 11337   004A5E  EE20 F005          	lfsr	2,5
 11338   004A62  51FD               	movf	nvProcessMessage@m& (0+255),w,b
 11339   004A64  26D9               	addwf	fsr2l,f,c
 11340   004A66  51FE               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11341   004A68  22DA               	addwfc	fsr2h,f,c
 11342   004A6A  50DF               	movf	indf2,w,c
 11343   004A6C  6FF8               	movwf	setNV@value& (0+255),b
 11344   004A6E  EE20 F004          	lfsr	2,4
 11345   004A72  51FD               	movf	nvProcessMessage@m& (0+255),w,b
 11346   004A74  26D9               	addwf	fsr2l,f,c
 11347   004A76  51FE               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11348   004A78  22DA               	addwfc	fsr2h,f,c
 11349   004A7A  50DF               	movf	indf2,w,c
 11350   004A7C  EC7F  F056         	call	_setNV
 11351   004A80  0102               	movlb	2	; () banked
 11352   004A82  6FCC               	movwf	??_nvProcessMessage& (0+255),b
 11353   004A84  51CC               	movf	??_nvProcessMessage& (0+255),w,b
 11354   004A86  6FCE               	movwf	nvProcessMessage@valueOrError& (0+255),b
 11355   004A88  6BCF               	clrf	(nvProcessMessage@valueOrError+1)& (0+255),b
 11356                           
 11357                           ; BSR set to: 2
 11358                           ;../../VLCBlib_PIC/nv.c: 320:             if (valueOrError >0) {
 11359   004A8A  BFCF               	btfsc	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 11360   004A8C  D01D               	goto	l24441
 11361   004A8E  51CF               	movf	(nvProcessMessage@valueOrError+1)& (0+255),w,b
 11362   004A90  E103               	bnz	u26730
 11363   004A92  05CE               	decf	nvProcessMessage@valueOrError& (0+255),w,b
 11364   004A94  A0D8               	btfss	status,0,c
 11365   004A96  D018               	goto	l24441
 11366   004A98                     u26730:
 11367                           
 11368                           ; BSR set to: 2
 11369                           ;../../VLCBlib_PIC/nv.c: 321:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(valueOrError));
 11370   004A98  C0B5  F0A7         	movff	_nn+1,sendMessage3@data1
 11371   004A9C  C0B4  F0A8         	movff	_nn,sendMessage3@data2
 11372   004AA0  C2CE  F0A9         	movff	nvProcessMessage@valueOrError,sendMessage3@data3
 11373   004AA4  0E6F               	movlw	111
 11374   004AA6  ECA5  F061         	call	_sendMessage3
 11375                           
 11376                           ;../../VLCBlib_PIC/nv.c: 322:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, (uint8_t)(valueOrError));
 11377   004AAA  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 11378   004AAE  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 11379   004AB2  0E8E               	movlw	142
 11380   004AB4  0101               	movlb	1	; () banked
 11381   004AB6  6FC8               	movwf	sendMessage5@data3& (0+255),b
 11382   004AB8  0E01               	movlw	1
 11383   004ABA  6FC9               	movwf	sendMessage5@data4& (0+255),b
 11384   004ABC  C2CE  F1CA         	movff	nvProcessMessage@valueOrError,sendMessage5@data5
 11385   004AC0  0EAF               	movlw	175
 11386   004AC2  EC47  F061         	call	_sendMessage5
 11387   004AC6  D702               	goto	l24361
 11388   004AC8                     l24441:
 11389                           
 11390                           ; BSR set to: 2
 11391                           ;../../VLCBlib_PIC/nv.c: 328:             valueOrError = getNV(m->bytes[2]);
 11392   004AC8  0101               	movlb	1	; () banked
 11393   004ACA  EE20 F004          	lfsr	2,4
 11394   004ACE  51FD               	movf	nvProcessMessage@m& (0+255),w,b
 11395   004AD0  26D9               	addwf	fsr2l,f,c
 11396   004AD2  51FE               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11397   004AD4  22DA               	addwfc	fsr2h,f,c
 11398   004AD6  50DF               	movf	indf2,w,c
 11399   004AD8  ECD2  F05F         	call	_getNV
 11400   004ADC  C08D  F2CE         	movff	?_getNV,nvProcessMessage@valueOrError
 11401   004AE0  C08E  F2CF         	movff	?_getNV+1,nvProcessMessage@valueOrError+1
 11402                           
 11403                           ;../../VLCBlib_PIC/nv.c: 329:             if (valueOrError < 0) {
 11404   004AE4  0102               	movlb	2	; () banked
 11405   004AE6  AFCF               	btfss	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 11406   004AE8  D01D               	goto	l24453
 11407                           
 11408                           ; BSR set to: 2
 11409                           ;../../VLCBlib_PIC/nv.c: 330:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(-valueOrError));
 11410   004AEA  C0B5  F0A7         	movff	_nn+1,sendMessage3@data1
 11411   004AEE  C0B4  F0A8         	movff	_nn,sendMessage3@data2
 11412   004AF2  51CE               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 11413   004AF4  0800               	sublw	0
 11414   004AF6  0100               	movlb	0	; () banked
 11415   004AF8  6FA9               	movwf	sendMessage3@data3& (0+255),b
 11416   004AFA  0E6F               	movlw	111
 11417   004AFC  ECA5  F061         	call	_sendMessage3
 11418                           
 11419                           ;../../VLCBlib_PIC/nv.c: 331:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, (uint8_t)(-valueOrError));
 11420   004B00  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 11421   004B04  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 11422   004B08  0E8E               	movlw	142
 11423   004B0A  0101               	movlb	1	; () banked
 11424   004B0C  6FC8               	movwf	sendMessage5@data3& (0+255),b
 11425   004B0E  0E01               	movlw	1
 11426   004B10  6FC9               	movwf	sendMessage5@data4& (0+255),b
 11427   004B12  0102               	movlb	2	; () banked
 11428   004B14  51CE               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 11429   004B16  0800               	sublw	0
 11430   004B18  0101               	movlb	1	; () banked
 11431   004B1A  6FCA               	movwf	sendMessage5@data5& (0+255),b
 11432   004B1C  0EAF               	movlw	175
 11433   004B1E  EC47  F061         	call	_sendMessage5
 11434   004B22  D6D4               	goto	l24361
 11435   004B24                     l24453:
 11436                           
 11437                           ; BSR set to: 2
 11438                           ;../../VLCBlib_PIC/nv.c: 337:             sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.
      +                          lo, m->bytes[2], (uint8_t)(valueOrError));
 11439   004B24  C0B5  F1C6         	movff	_nn+1,sendMessage4@data1
 11440   004B28  C0B4  F1C7         	movff	_nn,sendMessage4@data2
 11441   004B2C  0101               	movlb	1	; () banked
 11442   004B2E  EE20 F004          	lfsr	2,4
 11443   004B32  51FD               	movf	nvProcessMessage@m& (0+255),w,b
 11444   004B34  26D9               	addwf	fsr2l,f,c
 11445   004B36  51FE               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11446   004B38  22DA               	addwfc	fsr2h,f,c
 11447   004B3A  50DF               	movf	indf2,w,c
 11448   004B3C  6FC8               	movwf	sendMessage4@data3& (0+255),b
 11449   004B3E  C2CE  F1C9         	movff	nvProcessMessage@valueOrError,sendMessage4@data4
 11450   004B42  0E97               	movlw	151
 11451   004B44  EC5F  F061         	call	_sendMessage4
 11452                           
 11453                           ;../../VLCBlib_PIC/nv.c: 339:             nvDiagnostics[0x01].asUint++;
 11454   004B48  0101               	movlb	1	; () banked
 11455   004B4A  4BA5               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 11456   004B4C  2BA6               	incf	(_nvDiagnostics+3)& (0+255),f,b
 11457   004B4E  D6C1               	goto	l24363
 11458   004B50                     l24467:
 11459                           
 11460                           ; BSR set to: 0
 11461   004B50  0101               	movlb	1	; () banked
 11462   004B52  EE20 F001          	lfsr	2,1
 11463   004B56  51FD               	movf	nvProcessMessage@m& (0+255),w,b
 11464   004B58  26D9               	addwf	fsr2l,f,c
 11465   004B5A  51FE               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11466   004B5C  22DA               	addwfc	fsr2h,f,c
 11467   004B5E  50DF               	movf	indf2,w,c
 11468   004B60  0102               	movlb	2	; () banked
 11469   004B62  6FCC               	movwf	??_nvProcessMessage& (0+255),b
 11470   004B64  6BCD               	clrf	(??_nvProcessMessage+1)& (0+255),b
 11471                           
 11472                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11473                           ; Switch size 1, requested type "simple"
 11474                           ; Number of cases is 1, Range of values is 0 to 0
 11475                           ; switch strategies available:
 11476                           ; Name         Instructions Cycles
 11477                           ; simple_byte            4     3 (average)
 11478                           ;	Chosen strategy is simple_byte
 11479   004B66  51CD               	movf	(??_nvProcessMessage+1)& (0+255),w,b
 11480   004B68  0A00               	xorlw	0	; case 0
 11481   004B6A  A4D8               	btfss	status,2,c
 11482   004B6C  D675               	goto	u26640
 11483                           
 11484                           ; BSR set to: 2
 11485                           ; Switch size 1, requested type "simple"
 11486                           ; Number of cases is 3, Range of values is 113 to 150
 11487                           ; switch strategies available:
 11488                           ; Name         Instructions Cycles
 11489                           ; simple_byte           10     6 (average)
 11490                           ;	Chosen strategy is simple_byte
 11491   004B6E  51CC               	movf	??_nvProcessMessage& (0+255),w,b
 11492   004B70  0A71               	xorlw	113	; case 113
 11493   004B72  B4D8               	btfsc	status,2,c
 11494   004B74  D68C               	goto	l24357
 11495   004B76  0AFF               	xorlw	255	; case 142
 11496   004B78  B4D8               	btfsc	status,2,c
 11497   004B7A  D75A               	goto	l24419
 11498   004B7C  0A18               	xorlw	24	; case 150
 11499   004B7E  B4D8               	btfsc	status,2,c
 11500   004B80  D703               	goto	l24391
 11501   004B82  D66A               	goto	u26640
 11502   004B84                     __end_of_nvProcessMessage:
 11503                           	callstack 0
 11504                           
 11505 ;; *************** function _mnsProcessMessage *****************
 11506 ;; Defined at:
 11507 ;;		line 356 in file "../../VLCBlib_PIC/mns.c"
 11508 ;; Parameters:    Size  Location     Type
 11509 ;;  m               2   63[BANK1 ] PTR struct Message
 11510 ;;		 -> poll@m(9), 
 11511 ;; Auto vars:     Size  Location     Type
 11512 ;;  d               2   32[BANK2 ] PTR struct DiagnosticVal
 11513 ;;		 -> producerDiagnostics(4), teachDiagnostics(4), canDiagnostics(38), nvDiagnostics(6), 
 11514 ;;		 -> mnsDiagnostics(14), ackDiagnostics(4), consumer2QDiagnostics(4), NULL(0), 
 11515 ;;  newMode         1   34[BANK2 ] unsigned char 
 11516 ;;  i               1   30[BANK2 ] unsigned char 
 11517 ;;  flags           1    0        unsigned char 
 11518 ;; Return value:  Size  Location     Type
 11519 ;;                  1    wreg      enum E12799
 11520 ;; Registers used:
 11521 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 11522 ;; Tracked objects:
 11523 ;;		On entry : 0/0
 11524 ;;		On exit  : 0/0
 11525 ;;		Unchanged: 0/0
 11526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11527 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11528 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11529 ;;      Temps:          0       0       0      30       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11530 ;;      Totals:         0       0       2      35       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11531 ;;Total ram usage:       37 bytes
 11532 ;; Hardware stack levels used: 1
 11533 ;; Hardware stack levels required when called: 27
 11534 ;; This function calls:
 11535 ;;		NULL
 11536 ;;		_ackGetDiagnostic
 11537 ;;		_bootEsdData
 11538 ;;		_canEsdData
 11539 ;;		_canGetDiagnostic
 11540 ;;		_consumer2QEsdData
 11541 ;;		_consumer2QGetDiagnostic
 11542 ;;		_factoryReset
 11543 ;;		_findServiceIndex
 11544 ;;		_getParameter
 11545 ;;		_getParameterFlags
 11546 ;;		_mnsGetDiagnostic
 11547 ;;		_nvGetDiagnostic
 11548 ;;		_nvGetESDdata
 11549 ;;		_producerEsdData
 11550 ;;		_producerGetDiagnostic
 11551 ;;		_rebuildHashtable
 11552 ;;		_sendMessage2
 11553 ;;		_sendMessage3
 11554 ;;		_sendMessage4
 11555 ;;		_sendMessage5
 11556 ;;		_sendMessage6
 11557 ;;		_sendMessage7
 11558 ;;		_setLEDsByMode
 11559 ;;		_startTimedResponse
 11560 ;;		_teachGetDiagnostic
 11561 ;;		_teachGetESDdata
 11562 ;;		_writeNVM
 11563 ;; This function is called by:
 11564 ;;		_poll
 11565 ;; This function uses a non-reentrant model
 11566 ;;
 11567                           
 11568                           	psect	text23
 11569   0017C8                     __ptext23:
 11570                           	callstack 0
 11571   0017C8                     _mnsProcessMessage:
 11572                           	callstack 2
 11573                           
 11574                           ;../../VLCBlib_PIC/mns.c: 357:     uint8_t i;;../../VLCBlib_PIC/mns.c: 358:     uint8_t 
      +                          flags;;../../VLCBlib_PIC/mns.c: 360:     uint8_t newMode;;../../VLCBlib_PIC/mns.c: 365: 
      +                              if (mode_state == MODE_SETUP) {
 11575                           
 11576                           ;incstack = 0
 11577   0017C8  0100               	movlb	0	; () banked
 11578   0017CA  51C4               	movf	_mode_state& (0+255),w,b
 11579   0017CC  B4D8               	btfsc	status,2,c
 11580   0017CE  D0BC               	goto	l23907
 11581   0017D0  D12A               	goto	l23953
 11582   0017D2                     l23863:
 11583                           
 11584                           ; BSR set to: 2
 11585                           ;../../VLCBlib_PIC/mns.c: 368:                 if (m->len < 3) {
 11586   0017D2  C1FD  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11587   0017D6  C1FE  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11588   0017DA  0E03               	movlw	3
 11589   0017DC  60DF               	cpfslt	indf2,c
 11590   0017DE  D00F               	goto	l23867
 11591                           
 11592                           ; BSR set to: 2
 11593                           ;../../VLCBlib_PIC/mns.c: 370:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_SNN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11594   0017E0  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 11595   0017E4  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 11596   0017E8  0E42               	movlw	66
 11597   0017EA  0101               	movlb	1	; () banked
 11598   0017EC  6FC8               	movwf	sendMessage5@data3& (0+255),b
 11599   0017EE  0E01               	movlw	1
 11600   0017F0  6FC9               	movwf	sendMessage5@data4& (0+255),b
 11601   0017F2  0E01               	movlw	1
 11602   0017F4  6FCA               	movwf	sendMessage5@data5& (0+255),b
 11603   0017F6  0EAF               	movlw	175
 11604   0017F8  EC47  F061         	call	_sendMessage5
 11605                           
 11606                           ;../../VLCBlib_PIC/mns.c: 372:                 } else {
 11607   0017FC  D03C               	goto	l23883
 11608   0017FE                     l23867:
 11609                           
 11610                           ; BSR set to: 2
 11611                           ;../../VLCBlib_PIC/mns.c: 373:                     nn.bytes.hi = m->bytes[0];
 11612   0017FE  0101               	movlb	1	; () banked
 11613   001800  EE20 F002          	lfsr	2,2
 11614   001804  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 11615   001806  26D9               	addwf	fsr2l,f,c
 11616   001808  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11617   00180A  22DA               	addwfc	fsr2h,f,c
 11618   00180C  50DF               	movf	indf2,w,c
 11619   00180E  0100               	movlb	0	; () banked
 11620   001810  6FB5               	movwf	(_nn+1)& (0+255),b
 11621                           
 11622                           ;../../VLCBlib_PIC/mns.c: 374:                     nn.bytes.lo = m->bytes[1];
 11623   001812  0101               	movlb	1	; () banked
 11624   001814  EE20 F003          	lfsr	2,3
 11625   001818  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 11626   00181A  26D9               	addwf	fsr2l,f,c
 11627   00181C  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11628   00181E  22DA               	addwfc	fsr2h,f,c
 11629   001820  50DF               	movf	indf2,w,c
 11630   001822  0100               	movlb	0	; () banked
 11631   001824  6FB4               	movwf	_nn& (0+255),b
 11632                           
 11633                           ; BSR set to: 0
 11634                           ;../../VLCBlib_PIC/mns.c: 375:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC +1, n
      +                          n.bytes.hi);
 11635   001826  0EFD               	movlw	253
 11636   001828  6FA4               	movwf	writeNVM@index& (0+255),b
 11637   00182A  0E03               	movlw	3
 11638   00182C  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 11639   00182E  0E00               	movlw	0
 11640   001830  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 11641   001832  C0B5  F0A7         	movff	_nn+1,writeNVM@value
 11642   001836  0E00               	movlw	0
 11643   001838  ECC1  F05D         	call	_writeNVM
 11644                           
 11645                           ;../../VLCBlib_PIC/mns.c: 376:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC, nn.b
      +                          ytes.lo);
 11646   00183C  0EFC               	movlw	252
 11647   00183E  0100               	movlb	0	; () banked
 11648   001840  6FA4               	movwf	writeNVM@index& (0+255),b
 11649   001842  0E03               	movlw	3
 11650   001844  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 11651   001846  0E00               	movlw	0
 11652   001848  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 11653   00184A  C0B4  F0A7         	movff	_nn,writeNVM@value
 11654   00184E  0E00               	movlw	0
 11655   001850  ECC1  F05D         	call	_writeNVM
 11656                           
 11657                           ;../../VLCBlib_PIC/mns.c: 378:                     mode_state = MODE_NORMAL;
 11658   001854  0E01               	movlw	1
 11659   001856  0100               	movlb	0	; () banked
 11660   001858  6FC4               	movwf	_mode_state& (0+255),b
 11661                           
 11662                           ; BSR set to: 0
 11663                           ;../../VLCBlib_PIC/mns.c: 381:                     rebuildHashtable();
 11664   00185A  ECAC  F03F         	call	_rebuildHashtable	;wreg free
 11665                           
 11666                           ;../../VLCBlib_PIC/mns.c: 384:                     sendMessage2(OPC_NNACK, nn.bytes.hi, 
      +                          nn.bytes.lo);
 11667   00185E  C0B5  F0A7         	movff	_nn+1,sendMessage2@data1
 11668   001862  C0B4  F0A8         	movff	_nn,sendMessage2@data2
 11669   001866  0E52               	movlw	82
 11670   001868  EC17  F061         	call	_sendMessage2
 11671                           
 11672                           ;../../VLCBlib_PIC/mns.c: 386:                     mnsDiagnostics[0x05].asUint++;
 11673   00186C  0101               	movlb	1	; () banked
 11674   00186E  4B96               	infsnz	(_mnsDiagnostics+10)& (0+255),f,b
 11675   001870  2B97               	incf	(_mnsDiagnostics+11)& (0+255),f,b
 11676   001872                     l23881:
 11677                           
 11678                           ;../../VLCBlib_PIC/mns.c: 389:                     setLEDsByMode();
 11679   001872  ECB6  F060         	call	_setLEDsByMode	;wreg free
 11680   001876                     l23883:
 11681                           
 11682                           ;../../VLCBlib_PIC/mns.c: 391:                 return PROCESSED;
 11683   001876  0E01               	movlw	1
 11684   001878  0012               	return	
 11685   00187A                     l23887:
 11686                           
 11687                           ; BSR set to: 2
 11688                           ;../../VLCBlib_PIC/mns.c: 393:                 sendMessage7(OPC_PARAMS, MANU_MERG, 'a',
 11689   00187A  0EA5               	movlw	165
 11690   00187C  0101               	movlb	1	; () banked
 11691   00187E  6FC6               	movwf	sendMessage7@data1& (0+255),b
 11692   001880  0E61               	movlw	97
 11693   001882  6FC7               	movwf	sendMessage7@data2& (0+255),b
 11694   001884  0E20               	movlw	32
 11695   001886  6FC8               	movwf	sendMessage7@data3& (0+255),b
 11696   001888  0EFF               	movlw	255
 11697   00188A  6FC9               	movwf	sendMessage7@data4& (0+255),b
 11698   00188C  0E14               	movlw	20
 11699   00188E  6FCA               	movwf	sendMessage7@data5& (0+255),b
 11700   001890  0E7F               	movlw	127
 11701   001892  6FCB               	movwf	sendMessage7@data6& (0+255),b
 11702   001894  0E04               	movlw	4
 11703   001896  6FCC               	movwf	sendMessage7@data7& (0+255),b
 11704   001898  0EEF               	movlw	239
 11705   00189A  EC2F  F061         	call	_sendMessage7
 11706   00189E  D7EB               	goto	l23883
 11707   0018A0                     l23893:
 11708                           
 11709                           ; BSR set to: 2
 11710                           ;../../VLCBlib_PIC/mns.c: 398:                 sendMessage7(OPC_NAME, name[0], name[1], 
      +                          name[2], name[3],
 11711   0018A0  0E48               	movlw	72
 11712   0018A2  6EF6               	movwf	tblptrl,c
 11713   0018A4                     	if	1	;There is more than 1 active tblptr byte
 11714   0018A4  0E08               	movlw	8
 11715   0018A6  6EF7               	movwf	tblptrh,c
 11716   0018A8                     	endif
 11717   0018A8                     	if	1	;There are 3 active tblptr bytes
 11718   0018A8  0E00               	movlw	0
 11719   0018AA  6EF8               	movwf	tblptru,c
 11720   0018AC                     	endif
 11721   0018AC  0008               	tblrd		*
 11722   0018AE  CFF5 F1C6          	movff	tablat,sendMessage7@data1
 11723   0018B2  0E49               	movlw	73
 11724   0018B4  6EF6               	movwf	tblptrl,c
 11725   0018B6  0E08               	movlw	8
 11726   0018B8  6EF7               	movwf	tblptrh,c
 11727   0018BA  0E00               	movlw	0
 11728   0018BC  6EF8               	movwf	tblptru,c
 11729   0018BE  0008               	tblrd		*
 11730   0018C0  CFF5 F1C7          	movff	tablat,sendMessage7@data2
 11731   0018C4  0E4A               	movlw	74
 11732   0018C6  6EF6               	movwf	tblptrl,c
 11733   0018C8  0E08               	movlw	8
 11734   0018CA  6EF7               	movwf	tblptrh,c
 11735   0018CC  0E00               	movlw	0
 11736   0018CE  6EF8               	movwf	tblptru,c
 11737   0018D0  0008               	tblrd		*
 11738   0018D2  CFF5 F1C8          	movff	tablat,sendMessage7@data3
 11739   0018D6  0E4B               	movlw	75
 11740   0018D8  6EF6               	movwf	tblptrl,c
 11741   0018DA  0E08               	movlw	8
 11742   0018DC  6EF7               	movwf	tblptrh,c
 11743   0018DE  0E00               	movlw	0
 11744   0018E0  6EF8               	movwf	tblptru,c
 11745   0018E2  0008               	tblrd		*
 11746   0018E4  CFF5 F1C9          	movff	tablat,sendMessage7@data4
 11747   0018E8  0E4C               	movlw	76
 11748   0018EA  6EF6               	movwf	tblptrl,c
 11749   0018EC  0E08               	movlw	8
 11750   0018EE  6EF7               	movwf	tblptrh,c
 11751   0018F0  0E00               	movlw	0
 11752   0018F2  6EF8               	movwf	tblptru,c
 11753   0018F4  0008               	tblrd		*
 11754   0018F6  CFF5 F1CA          	movff	tablat,sendMessage7@data5
 11755   0018FA  0E4D               	movlw	77
 11756   0018FC  6EF6               	movwf	tblptrl,c
 11757   0018FE  0E08               	movlw	8
 11758   001900  6EF7               	movwf	tblptrh,c
 11759   001902  0E00               	movlw	0
 11760   001904  6EF8               	movwf	tblptru,c
 11761   001906  0008               	tblrd		*
 11762   001908  CFF5 F1CB          	movff	tablat,sendMessage7@data6
 11763   00190C  0E4E               	movlw	78
 11764   00190E  6EF6               	movwf	tblptrl,c
 11765   001910  0E08               	movlw	8
 11766   001912  6EF7               	movwf	tblptrh,c
 11767   001914  0E00               	movlw	0
 11768   001916  6EF8               	movwf	tblptru,c
 11769   001918  0008               	tblrd		*
 11770   00191A  CFF5 F1CC          	movff	tablat,sendMessage7@data7
 11771   00191E  0EE2               	movlw	226
 11772   001920  EC2F  F061         	call	_sendMessage7
 11773   001924  D7A8               	goto	l23883
 11774   001926                     l23899:
 11775                           
 11776                           ; BSR set to: 2
 11777                           ;../../VLCBlib_PIC/mns.c: 402:                 sendMessage5(OPC_PNN, 0,0, MANU_MERG, MTY
      +                          P_CANMIO, getParameterFlags());
 11778   001926  0E00               	movlw	0
 11779   001928  0101               	movlb	1	; () banked
 11780   00192A  6FC6               	movwf	sendMessage5@data1& (0+255),b
 11781   00192C  0E00               	movlw	0
 11782   00192E  6FC7               	movwf	sendMessage5@data2& (0+255),b
 11783   001930  0EA5               	movlw	165
 11784   001932  6FC8               	movwf	sendMessage5@data3& (0+255),b
 11785   001934  0E20               	movlw	32
 11786   001936  6FC9               	movwf	sendMessage5@data4& (0+255),b
 11787   001938  EC19  F05C         	call	_getParameterFlags	;wreg free
 11788   00193C  0101               	movlb	1	; () banked
 11789   00193E  6FCA               	movwf	sendMessage5@data5& (0+255),b
 11790   001940  0EB6               	movlw	182
 11791   001942  EC47  F061         	call	_sendMessage5
 11792   001946  D797               	goto	l23883
 11793   001948                     l23907:
 11794                           
 11795                           ; BSR set to: 0
 11796   001948  0101               	movlb	1	; () banked
 11797   00194A  EE20 F001          	lfsr	2,1
 11798   00194E  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 11799   001950  26D9               	addwf	fsr2l,f,c
 11800   001952  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11801   001954  22DA               	addwfc	fsr2h,f,c
 11802   001956  50DF               	movf	indf2,w,c
 11803   001958  0102               	movlb	2	; () banked
 11804   00195A  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 11805   00195C  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11806                           
 11807                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11808                           ; Switch size 1, requested type "simple"
 11809                           ; Number of cases is 1, Range of values is 0 to 0
 11810                           ; switch strategies available:
 11811                           ; Name         Instructions Cycles
 11812                           ; simple_byte            4     3 (average)
 11813                           ;	Chosen strategy is simple_byte
 11814   00195E  51CD               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 11815   001960  0A00               	xorlw	0	; case 0
 11816   001962  A4D8               	btfss	status,2,c
 11817   001964  D00D               	goto	l23909
 11818                           
 11819                           ; BSR set to: 2
 11820                           ; Switch size 1, requested type "simple"
 11821                           ; Number of cases is 4, Range of values is 13 to 66
 11822                           ; switch strategies available:
 11823                           ; Name         Instructions Cycles
 11824                           ; simple_byte           13     7 (average)
 11825                           ;	Chosen strategy is simple_byte
 11826   001966  51CC               	movf	??_mnsProcessMessage& (0+255),w,b
 11827   001968  0A0D               	xorlw	13	; case 13
 11828   00196A  B4D8               	btfsc	status,2,c
 11829   00196C  D7DC               	goto	l23899
 11830   00196E  0A1D               	xorlw	29	; case 16
 11831   001970  B4D8               	btfsc	status,2,c
 11832   001972  D783               	goto	l23887
 11833   001974  0A01               	xorlw	1	; case 17
 11834   001976  B4D8               	btfsc	status,2,c
 11835   001978  D793               	goto	l23893
 11836   00197A  0A53               	xorlw	83	; case 66
 11837   00197C  B4D8               	btfsc	status,2,c
 11838   00197E  D729               	goto	l23863
 11839   001980                     l23909:
 11840                           
 11841                           ;../../VLCBlib_PIC/mns.c: 407:         return NOT_PROCESSED;
 11842   001980  0E00               	movlw	0
 11843   001982  0012               	return	
 11844   001984                     l23913:
 11845                           
 11846                           ; BSR set to: 2
 11847                           ;../../VLCBlib_PIC/mns.c: 412:             sendMessage5(OPC_PNN, nn.bytes.hi,nn.bytes.lo
      +                          , MANU_MERG, MTYP_CANMIO, getParameterFlags());
 11848   001984  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 11849   001988  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 11850   00198C  0EA5               	movlw	165
 11851   00198E  0101               	movlb	1	; () banked
 11852   001990  6FC8               	movwf	sendMessage5@data3& (0+255),b
 11853   001992  0E20               	movlw	32
 11854   001994  6FC9               	movwf	sendMessage5@data4& (0+255),b
 11855   001996  EC19  F05C         	call	_getParameterFlags	;wreg free
 11856   00199A  0101               	movlb	1	; () banked
 11857   00199C  6FCA               	movwf	sendMessage5@data5& (0+255),b
 11858   00199E  0EB6               	movlw	182
 11859   0019A0  EC47  F061         	call	_sendMessage5
 11860   0019A4  D768               	goto	l23883
 11861   0019A6                     l23919:
 11862                           
 11863                           ; BSR set to: 2
 11864                           ;../../VLCBlib_PIC/mns.c: 416:             if (m->len < 4) {
 11865   0019A6  C1FD  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11866   0019AA  C1FE  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11867   0019AE  0E04               	movlw	4
 11868   0019B0  60DF               	cpfslt	indf2,c
 11869   0019B2  D00F               	goto	l23927
 11870                           
 11871                           ; BSR set to: 2
 11872                           ;../../VLCBlib_PIC/mns.c: 417:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11873   0019B4  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 11874   0019B8  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 11875   0019BC  0E76               	movlw	118
 11876   0019BE  0101               	movlb	1	; () banked
 11877   0019C0  6FC8               	movwf	sendMessage5@data3& (0+255),b
 11878   0019C2  0E01               	movlw	1
 11879   0019C4  6FC9               	movwf	sendMessage5@data4& (0+255),b
 11880   0019C6  0E01               	movlw	1
 11881   0019C8  6FCA               	movwf	sendMessage5@data5& (0+255),b
 11882   0019CA  0EAF               	movlw	175
 11883   0019CC  EC47  F061         	call	_sendMessage5
 11884   0019D0  D752               	goto	l23883
 11885   0019D2                     l23927:
 11886                           
 11887                           ; BSR set to: 2
 11888                           ;../../VLCBlib_PIC/mns.c: 420:             if ((m->bytes[0] == 0) && (m->bytes[1] == 0))
      +                           {
 11889   0019D2  0101               	movlb	1	; () banked
 11890   0019D4  EE20 F002          	lfsr	2,2
 11891   0019D8  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 11892   0019DA  26D9               	addwf	fsr2l,f,c
 11893   0019DC  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11894   0019DE  22DA               	addwfc	fsr2h,f,c
 11895   0019E0  50DF               	movf	indf2,w,c
 11896   0019E2  A4D8               	btfss	status,2,c
 11897   0019E4  D036               	goto	l23955
 11898                           
 11899                           ; BSR set to: 1
 11900   0019E6  EE20 F003          	lfsr	2,3
 11901   0019EA  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 11902   0019EC  26D9               	addwf	fsr2l,f,c
 11903   0019EE  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11904   0019F0  22DA               	addwfc	fsr2h,f,c
 11905   0019F2  50DF               	movf	indf2,w,c
 11906   0019F4  A4D8               	btfss	status,2,c
 11907   0019F6  D02D               	goto	l23955
 11908                           
 11909                           ; BSR set to: 1
 11910                           ;../../VLCBlib_PIC/mns.c: 421:                 newMode = m->bytes[2];
 11911   0019F8  EE20 F004          	lfsr	2,4
 11912   0019FC  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 11913   0019FE  26D9               	addwf	fsr2l,f,c
 11914   001A00  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11915   001A02  22DA               	addwfc	fsr2h,f,c
 11916   001A04  50DF               	movf	indf2,w,c
 11917   001A06  0102               	movlb	2	; () banked
 11918   001A08  6FEE               	movwf	mnsProcessMessage@newMode& (0+255),b
 11919                           
 11920                           ; BSR set to: 2
 11921                           ;../../VLCBlib_PIC/mns.c: 423:                 if (newMode == MODE_HEARTBEAT_ON) {
 11922   001A0A  0E0C               	movlw	12
 11923   001A0C  19EE               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 11924   001A0E  A4D8               	btfss	status,2,c
 11925   001A10  D003               	goto	l23943
 11926                           
 11927                           ; BSR set to: 2
 11928                           ;../../VLCBlib_PIC/mns.c: 424:                     mode_flags |= 4;
 11929   001A12  0101               	movlb	1	; () banked
 11930   001A14  8565               	bsf	_mode_flags& (0+255),2,b
 11931   001A16  D72F               	goto	l23883
 11932   001A18                     l23943:
 11933                           
 11934                           ; BSR set to: 2
 11935   001A18  0E0D               	movlw	13
 11936   001A1A  19EE               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 11937   001A1C  A4D8               	btfss	status,2,c
 11938   001A1E  D019               	goto	l23955
 11939                           
 11940                           ; BSR set to: 2
 11941                           ;../../VLCBlib_PIC/mns.c: 428:                     mode_flags &= ~4;
 11942   001A20  0101               	movlb	1	; () banked
 11943   001A22  9565               	bcf	_mode_flags& (0+255),2,b
 11944   001A24  D728               	goto	l23883
 11945   001A26                     l23953:
 11946                           
 11947                           ; BSR set to: 0
 11948   001A26  0101               	movlb	1	; () banked
 11949   001A28  EE20 F001          	lfsr	2,1
 11950   001A2C  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 11951   001A2E  26D9               	addwf	fsr2l,f,c
 11952   001A30  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11953   001A32  22DA               	addwfc	fsr2h,f,c
 11954   001A34  50DF               	movf	indf2,w,c
 11955   001A36  0102               	movlb	2	; () banked
 11956   001A38  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 11957   001A3A  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11958                           
 11959                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11960                           ; Switch size 1, requested type "simple"
 11961                           ; Number of cases is 1, Range of values is 0 to 0
 11962                           ; switch strategies available:
 11963                           ; Name         Instructions Cycles
 11964                           ; simple_byte            4     3 (average)
 11965                           ;	Chosen strategy is simple_byte
 11966   001A3C  51CD               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 11967   001A3E  0A00               	xorlw	0	; case 0
 11968   001A40  A4D8               	btfss	status,2,c
 11969   001A42  D007               	goto	l23955
 11970                           
 11971                           ; BSR set to: 2
 11972                           ; Switch size 1, requested type "simple"
 11973                           ; Number of cases is 2, Range of values is 13 to 118
 11974                           ; switch strategies available:
 11975                           ; Name         Instructions Cycles
 11976                           ; simple_byte            7     4 (average)
 11977                           ;	Chosen strategy is simple_byte
 11978   001A44  51CC               	movf	??_mnsProcessMessage& (0+255),w,b
 11979   001A46  0A0D               	xorlw	13	; case 13
 11980   001A48  B4D8               	btfsc	status,2,c
 11981   001A4A  D79C               	goto	l23913
 11982   001A4C  0A7B               	xorlw	123	; case 118
 11983   001A4E  B4D8               	btfsc	status,2,c
 11984   001A50  D7AA               	goto	l23919
 11985   001A52                     l23955:
 11986                           
 11987                           ;../../VLCBlib_PIC/mns.c: 438:     if (m->len < 3) {
 11988   001A52  C1FD  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11989   001A56  C1FE  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11990   001A5A  0E03               	movlw	3
 11991   001A5C  60DF               	cpfslt	indf2,c
 11992   001A5E  D001               	goto	l23961
 11993   001A60  D78F               	goto	l23909
 11994   001A62                     l23961:
 11995                           
 11996                           ;../../VLCBlib_PIC/mns.c: 442:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED;
 11997   001A62  0101               	movlb	1	; () banked
 11998   001A64  EE20 F002          	lfsr	2,2
 11999   001A68  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12000   001A6A  26D9               	addwf	fsr2l,f,c
 12001   001A6C  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12002   001A6E  22DA               	addwfc	fsr2h,f,c
 12003   001A70  50DE               	movf	postinc2,w,c
 12004   001A72  0100               	movlb	0	; () banked
 12005   001A74  19B5               	xorwf	(_nn+1)& (0+255),w,b
 12006   001A76  A4D8               	btfss	status,2,c
 12007   001A78  D783               	goto	l23909
 12008                           
 12009                           ; BSR set to: 0
 12010                           ;../../VLCBlib_PIC/mns.c: 443:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED;
 12011   001A7A  0101               	movlb	1	; () banked
 12012   001A7C  EE20 F003          	lfsr	2,3
 12013   001A80  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12014   001A82  26D9               	addwf	fsr2l,f,c
 12015   001A84  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12016   001A86  22DA               	addwfc	fsr2h,f,c
 12017   001A88  0100               	movlb	0	; () banked
 12018   001A8A  51B4               	movf	_nn& (0+255),w,b
 12019   001A8C  18DE               	xorwf	postinc2,w,c
 12020   001A8E  A4D8               	btfss	status,2,c
 12021   001A90  D777               	goto	l23909
 12022   001A92  EF53  F011         	goto	l24161
 12023   001A96                     l23973:
 12024                           
 12025                           ; BSR set to: 2
 12026                           ;../../VLCBlib_PIC/mns.c: 447:             if (m->len < 4) {
 12027   001A96  C1FD  FFD9         	movff	mnsProcessMessage@m,fsr2l
 12028   001A9A  C1FE  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 12029   001A9E  0E04               	movlw	4
 12030   001AA0  60DF               	cpfslt	indf2,c
 12031   001AA2  D00F               	goto	l23981
 12032                           
 12033                           ; BSR set to: 2
 12034                           ;../../VLCBlib_PIC/mns.c: 449:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQNPN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 12035   001AA4  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 12036   001AA8  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 12037   001AAC  0E73               	movlw	115
 12038   001AAE  0101               	movlb	1	; () banked
 12039   001AB0  6FC8               	movwf	sendMessage5@data3& (0+255),b
 12040   001AB2  0E01               	movlw	1
 12041   001AB4  6FC9               	movwf	sendMessage5@data4& (0+255),b
 12042   001AB6  0E01               	movlw	1
 12043   001AB8  6FCA               	movwf	sendMessage5@data5& (0+255),b
 12044   001ABA  0EAF               	movlw	175
 12045   001ABC  EC47  F061         	call	_sendMessage5
 12046   001AC0  D6DA               	goto	l23883
 12047   001AC2                     l23981:
 12048                           
 12049                           ; BSR set to: 2
 12050                           ;../../VLCBlib_PIC/mns.c: 453:             if (m->bytes[2] > 20) {
 12051   001AC2  0101               	movlb	1	; () banked
 12052   001AC4  EE20 F004          	lfsr	2,4
 12053   001AC8  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12054   001ACA  26D9               	addwf	fsr2l,f,c
 12055   001ACC  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12056   001ACE  22DA               	addwfc	fsr2h,f,c
 12057   001AD0  0E14               	movlw	20
 12058   001AD2  64DF               	cpfsgt	indf2,c
 12059   001AD4  D019               	goto	l23989
 12060                           
 12061                           ; BSR set to: 1
 12062                           ;../../VLCBlib_PIC/mns.c: 454:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, CMDERR_INV_PARAM_IDX);
 12063   001AD6  C0B5  F0A7         	movff	_nn+1,sendMessage3@data1
 12064   001ADA  C0B4  F0A8         	movff	_nn,sendMessage3@data2
 12065   001ADE  0E09               	movlw	9
 12066   001AE0  0100               	movlb	0	; () banked
 12067   001AE2  6FA9               	movwf	sendMessage3@data3& (0+255),b
 12068   001AE4  0E6F               	movlw	111
 12069   001AE6  ECA5  F061         	call	_sendMessage3
 12070                           
 12071                           ;../../VLCBlib_PIC/mns.c: 456:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQNPN, SERVICE_ID_MNS, CMDERR_INV_PARAM_IDX);
 12072   001AEA  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 12073   001AEE  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 12074   001AF2  0E73               	movlw	115
 12075   001AF4  0101               	movlb	1	; () banked
 12076   001AF6  6FC8               	movwf	sendMessage5@data3& (0+255),b
 12077   001AF8  0E01               	movlw	1
 12078   001AFA  6FC9               	movwf	sendMessage5@data4& (0+255),b
 12079   001AFC  0E09               	movlw	9
 12080   001AFE  6FCA               	movwf	sendMessage5@data5& (0+255),b
 12081   001B00  0EAF               	movlw	175
 12082   001B02  EC47  F061         	call	_sendMessage5
 12083   001B06  D6B7               	goto	l23883
 12084   001B08                     l23989:
 12085                           
 12086                           ; BSR set to: 1
 12087                           ;../../VLCBlib_PIC/mns.c: 460:             i = getParameter(m->bytes[2]);
 12088   001B08  EE20 F004          	lfsr	2,4
 12089   001B0C  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12090   001B0E  26D9               	addwf	fsr2l,f,c
 12091   001B10  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12092   001B12  22DA               	addwfc	fsr2h,f,c
 12093   001B14  50DF               	movf	indf2,w,c
 12094   001B16  EC41  F044         	call	_getParameter
 12095   001B1A  0102               	movlb	2	; () banked
 12096   001B1C  6FEA               	movwf	mnsProcessMessage@i& (0+255),b
 12097                           
 12098                           ; BSR set to: 2
 12099                           ;../../VLCBlib_PIC/mns.c: 461:             sendMessage4(OPC_PARAN, nn.bytes.hi, nn.bytes
      +                          .lo, m->bytes[2], i);
 12100   001B1E  C0B5  F1C6         	movff	_nn+1,sendMessage4@data1
 12101   001B22  C0B4  F1C7         	movff	_nn,sendMessage4@data2
 12102   001B26  0101               	movlb	1	; () banked
 12103   001B28  EE20 F004          	lfsr	2,4
 12104   001B2C  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12105   001B2E  26D9               	addwf	fsr2l,f,c
 12106   001B30  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12107   001B32  22DA               	addwfc	fsr2h,f,c
 12108   001B34  50DF               	movf	indf2,w,c
 12109   001B36  6FC8               	movwf	sendMessage4@data3& (0+255),b
 12110   001B38  C2EA  F1C9         	movff	mnsProcessMessage@i,sendMessage4@data4
 12111   001B3C  0E9B               	movlw	155
 12112   001B3E  EC5F  F061         	call	_sendMessage4
 12113                           
 12114                           ;../../VLCBlib_PIC/mns.c: 463:             if (m->bytes[2] == 0) {
 12115   001B42  0101               	movlb	1	; () banked
 12116   001B44  EE20 F004          	lfsr	2,4
 12117   001B48  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12118   001B4A  26D9               	addwf	fsr2l,f,c
 12119   001B4C  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12120   001B4E  22DA               	addwfc	fsr2h,f,c
 12121   001B50  50DF               	movf	indf2,w,c
 12122   001B52  A4D8               	btfss	status,2,c
 12123   001B54  D690               	goto	l23883
 12124                           
 12125                           ; BSR set to: 1
 12126                           ;../../VLCBlib_PIC/mns.c: 464:                 startTimedResponse(7, findServiceIndex(SE
      +                          RVICE_ID_MNS), mnsTRrqnpnCallback);
 12127   001B56  0E01               	movlw	1
 12128   001B58  EC1E  F058         	call	_findServiceIndex
 12129   001B5C  0100               	movlb	0	; () banked
 12130   001B5E  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 12131   001B60  0ED2               	movlw	low _mnsTRrqnpnCallback
 12132   001B62  6F92               	movwf	startTimedResponse@callback& (0+255),b
 12133   001B64  0EC3               	movlw	high _mnsTRrqnpnCallback
 12134   001B66  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 12135   001B68  0E07               	movlw	7
 12136   001B6A  EC75  F05F         	call	_startTimedResponse
 12137   001B6E  D683               	goto	l23883
 12138   001B70                     l1492:
 12139                           
 12140                           ; BSR set to: 2
 12141                           ;../../VLCBlib_PIC/mns.c: 469:             previousNN.word = nn.word;
 12142   001B70  C0B4  F160         	movff	_nn,_previousNN
 12143   001B74  C0B5  F161         	movff	_nn+1,_previousNN+1
 12144                           
 12145                           ; BSR set to: 2
 12146                           ;../../VLCBlib_PIC/mns.c: 470:             factoryReset();
 12147   001B78  ECCE  F043         	call	_factoryReset	;wreg free
 12148                           
 12149                           ;../../VLCBlib_PIC/mns.c: 471:             if (previousNN.word != 0) {
 12150   001B7C  0101               	movlb	1	; () banked
 12151   001B7E  5160               	movf	_previousNN& (0+255),w,b
 12152   001B80  1161               	iorwf	(_previousNN+1)& (0+255),w,b
 12153   001B82  B4D8               	btfsc	status,2,c
 12154   001B84  D007               	goto	l1493
 12155                           
 12156                           ; BSR set to: 1
 12157                           ;../../VLCBlib_PIC/mns.c: 472:                 sendMessage2(OPC_NNREL, previousNN.bytes.
      +                          hi, previousNN.bytes.lo);
 12158   001B86  C161  F0A7         	movff	_previousNN+1,sendMessage2@data1
 12159   001B8A  C160  F0A8         	movff	_previousNN,sendMessage2@data2
 12160   001B8E  0E51               	movlw	81
 12161   001B90  EC17  F061         	call	_sendMessage2
 12162   001B94                     l1493:
 12163   001B94  00FF               	reset		;# 
 12164   001B96                     l24007:
 12165                           
 12166                           ;../../VLCBlib_PIC/mns.c: 477:             if (m->len < 5) {
 12167   001B96  C1FD  FFD9         	movff	mnsProcessMessage@m,fsr2l
 12168   001B9A  C1FE  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 12169   001B9E  0E05               	movlw	5
 12170   001BA0  60DF               	cpfslt	indf2,c
 12171   001BA2  D00F               	goto	l24015
 12172                           
 12173                           ;../../VLCBlib_PIC/mns.c: 478:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RDGN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 12174   001BA4  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 12175   001BA8  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 12176   001BAC  0E87               	movlw	135
 12177   001BAE  0101               	movlb	1	; () banked
 12178   001BB0  6FC8               	movwf	sendMessage5@data3& (0+255),b
 12179   001BB2  0E01               	movlw	1
 12180   001BB4  6FC9               	movwf	sendMessage5@data4& (0+255),b
 12181   001BB6  0E01               	movlw	1
 12182   001BB8  6FCA               	movwf	sendMessage5@data5& (0+255),b
 12183   001BBA  0EAF               	movlw	175
 12184   001BBC  EC47  F061         	call	_sendMessage5
 12185   001BC0  D65A               	goto	l23883
 12186   001BC2                     l24015:
 12187                           
 12188                           ;../../VLCBlib_PIC/mns.c: 481:             if (m->bytes[2] == 0) {
 12189   001BC2  0101               	movlb	1	; () banked
 12190   001BC4  EE20 F004          	lfsr	2,4
 12191   001BC8  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12192   001BCA  26D9               	addwf	fsr2l,f,c
 12193   001BCC  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12194   001BCE  22DA               	addwfc	fsr2h,f,c
 12195   001BD0  50DF               	movf	indf2,w,c
 12196   001BD2  A4D8               	btfss	status,2,c
 12197   001BD4  D00B               	goto	l24019
 12198                           
 12199                           ; BSR set to: 1
 12200                           ;../../VLCBlib_PIC/mns.c: 483:                 startTimedResponse(4, 0, mnsTRallDiagnost
      +                          icsCallback);
 12201   001BD6  0E00               	movlw	0
 12202   001BD8  0100               	movlb	0	; () banked
 12203   001BDA  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 12204   001BDC  0EAA               	movlw	low _mnsTRallDiagnosticsCallback
 12205   001BDE  6F92               	movwf	startTimedResponse@callback& (0+255),b
 12206   001BE0  0E83               	movlw	high _mnsTRallDiagnosticsCallback
 12207   001BE2  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 12208   001BE4  0E04               	movlw	4
 12209   001BE6  EC75  F05F         	call	_startTimedResponse
 12210                           
 12211                           ;../../VLCBlib_PIC/mns.c: 484:             } else {
 12212   001BEA  D645               	goto	l23883
 12213   001BEC                     l24019:
 12214                           
 12215                           ; BSR set to: 1
 12216                           ;../../VLCBlib_PIC/mns.c: 486:                 if (m->bytes[2] > 9) {
 12217   001BEC  EE20 F004          	lfsr	2,4
 12218   001BF0  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12219   001BF2  26D9               	addwf	fsr2l,f,c
 12220   001BF4  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12221   001BF6  22DA               	addwfc	fsr2h,f,c
 12222   001BF8  0E09               	movlw	9
 12223   001BFA  64DF               	cpfsgt	indf2,c
 12224   001BFC  D00E               	goto	l24027
 12225                           
 12226                           ; BSR set to: 1
 12227                           ;../../VLCBlib_PIC/mns.c: 487:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_SERVICE);
 12228   001BFE  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 12229   001C02  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 12230   001C06  0E87               	movlw	135
 12231   001C08  6FC8               	movwf	sendMessage5@data3& (0+255),b
 12232   001C0A  0E01               	movlw	1
 12233   001C0C  6FC9               	movwf	sendMessage5@data4& (0+255),b
 12234   001C0E  0EFC               	movlw	252
 12235   001C10  6FCA               	movwf	sendMessage5@data5& (0+255),b
 12236   001C12  0EAF               	movlw	175
 12237   001C14  EC47  F061         	call	_sendMessage5
 12238   001C18  D62E               	goto	l23883
 12239   001C1A                     l24027:
 12240                           
 12241                           ; BSR set to: 1
 12242                           ;../../VLCBlib_PIC/mns.c: 490:                 if (services[m->bytes[2]-1]->getDiagnosti
      +                          c == ((void*)0)) {
 12243   001C1A  EE20 F004          	lfsr	2,4
 12244   001C1E  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12245   001C20  26D9               	addwf	fsr2l,f,c
 12246   001C22  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12247   001C24  22DA               	addwfc	fsr2h,f,c
 12248   001C26  50DF               	movf	indf2,w,c
 12249   001C28  0102               	movlb	2	; () banked
 12250   001C2A  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 12251   001C2C  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 12252   001C2E  90D8               	bcf	status,0,c
 12253   001C30  37CC               	rlcf	??_mnsProcessMessage& (0+255),f,b
 12254   001C32  37CD               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 12255   001C34  0EFE               	movlw	254
 12256   001C36  25CC               	addwf	??_mnsProcessMessage& (0+255),w,b
 12257   001C38  6FCE               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 12258   001C3A  0EFF               	movlw	255
 12259   001C3C  21CD               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 12260   001C3E  6FCF               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 12261   001C40  0E69               	movlw	low _services
 12262   001C42  25CE               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 12263   001C44  6EF6               	movwf	tblptrl,c
 12264   001C46  0EEE               	movlw	high _services
 12265   001C48  21CF               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 12266   001C4A  6EF7               	movwf	tblptrh,c
 12267   001C4C                     	if	1	;There are 3 active tblptr bytes
 12268   001C4C  6AF8               	clrf	tblptru,c
 12269   001C4E  0E00               	movlw	low (__mediumconst shr (0+16))
 12270   001C50  22F8               	addwfc	tblptru,f,c
 12271   001C52                     	endif
 12272   001C52  0009               	tblrd		*+
 12273   001C54  CFF5 F2D0          	movff	tablat,??_mnsProcessMessage+4
 12274   001C58  0009               	tblrd		*+
 12275   001C5A  CFF5 F2D1          	movff	tablat,??_mnsProcessMessage+5
 12276   001C5E  0E10               	movlw	16
 12277   001C60  27D0               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 12278   001C62  0E00               	movlw	0
 12279   001C64  23D1               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 12280   001C66  C2D0  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 12281   001C6A  C2D1  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 12282   001C6E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12283   001C6E  6AF8               	clrf	tblptru,c
 12284   001C70                     	endif
 12285   001C70                     	if	0	;tblptru may be non-zero
 12286   001C70                     	endif
 12287   001C70  0009               	tblrd		*+
 12288   001C72  50F5               	movf	tablat,w,c
 12289   001C74  0009               	tblrd		*+
 12290   001C76  10F5               	iorwf	tablat,w,c
 12291   001C78  A4D8               	btfss	status,2,c
 12292   001C7A  D014               	goto	l24031
 12293                           
 12294                           ; BSR set to: 2
 12295                           ;../../VLCBlib_PIC/mns.c: 492:                     sendMessage5(OPC_DGN, nn.bytes.hi, nn
      +                          .bytes.lo, OPC_RDGN, m->bytes[2], 0);
 12296   001C7C  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 12297   001C80  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 12298   001C84  0E87               	movlw	135
 12299   001C86  0101               	movlb	1	; () banked
 12300   001C88  6FC8               	movwf	sendMessage5@data3& (0+255),b
 12301   001C8A  EE20 F004          	lfsr	2,4
 12302   001C8E  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12303   001C90  26D9               	addwf	fsr2l,f,c
 12304   001C92  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12305   001C94  22DA               	addwfc	fsr2h,f,c
 12306   001C96  50DF               	movf	indf2,w,c
 12307   001C98  6FC9               	movwf	sendMessage5@data4& (0+255),b
 12308   001C9A  0E00               	movlw	0
 12309   001C9C  6FCA               	movwf	sendMessage5@data5& (0+255),b
 12310   001C9E  0EC7               	movlw	199
 12311   001CA0  EC47  F061         	call	_sendMessage5
 12312   001CA4                     l24031:
 12313                           
 12314                           ;../../VLCBlib_PIC/mns.c: 494:                 if (m->bytes[3] == 0) {
 12315   001CA4  0101               	movlb	1	; () banked
 12316   001CA6  EE20 F005          	lfsr	2,5
 12317   001CAA  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12318   001CAC  26D9               	addwf	fsr2l,f,c
 12319   001CAE  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12320   001CB0  22DA               	addwfc	fsr2h,f,c
 12321   001CB2  50DF               	movf	indf2,w,c
 12322   001CB4  A4D8               	btfss	status,2,c
 12323   001CB6  D011               	goto	l24041
 12324                           
 12325                           ; BSR set to: 1
 12326                           ;../../VLCBlib_PIC/mns.c: 496:                     startTimedResponse(4, m->bytes[2], mn
      +                          sTRallDiagnosticsCallback);
 12327   001CB8  EE20 F004          	lfsr	2,4
 12328   001CBC  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12329   001CBE  26D9               	addwf	fsr2l,f,c
 12330   001CC0  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12331   001CC2  22DA               	addwfc	fsr2h,f,c
 12332   001CC4  50DF               	movf	indf2,w,c
 12333   001CC6  0100               	movlb	0	; () banked
 12334   001CC8  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 12335   001CCA  0EAA               	movlw	low _mnsTRallDiagnosticsCallback
 12336   001CCC  6F92               	movwf	startTimedResponse@callback& (0+255),b
 12337   001CCE  0E83               	movlw	high _mnsTRallDiagnosticsCallback
 12338   001CD0  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 12339   001CD2  0E04               	movlw	4
 12340   001CD4  EC75  F05F         	call	_startTimedResponse
 12341   001CD8  D5CE               	goto	l23883
 12342   001CDA                     l24041:
 12343                           
 12344                           ; BSR set to: 1
 12345                           ;../../VLCBlib_PIC/mns.c: 499:                     DiagnosticVal * d = services[m->bytes
      +                          [2]-1]->getDiagnostic(m->bytes[3]);
 12346   001CDA  EE20 F004          	lfsr	2,4
 12347   001CDE  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12348   001CE0  26D9               	addwf	fsr2l,f,c
 12349   001CE2  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12350   001CE4  22DA               	addwfc	fsr2h,f,c
 12351   001CE6  50DF               	movf	indf2,w,c
 12352   001CE8  0102               	movlb	2	; () banked
 12353   001CEA  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 12354   001CEC  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 12355   001CEE  90D8               	bcf	status,0,c
 12356   001CF0  37CC               	rlcf	??_mnsProcessMessage& (0+255),f,b
 12357   001CF2  37CD               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 12358   001CF4  0EFE               	movlw	254
 12359   001CF6  25CC               	addwf	??_mnsProcessMessage& (0+255),w,b
 12360   001CF8  6FCE               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 12361   001CFA  0EFF               	movlw	255
 12362   001CFC  21CD               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 12363   001CFE  6FCF               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 12364   001D00  0E69               	movlw	low _services
 12365   001D02  25CE               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 12366   001D04  6EF6               	movwf	tblptrl,c
 12367   001D06  0EEE               	movlw	high _services
 12368   001D08  21CF               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 12369   001D0A  6EF7               	movwf	tblptrh,c
 12370   001D0C                     	if	1	;There are 3 active tblptr bytes
 12371   001D0C  6AF8               	clrf	tblptru,c
 12372   001D0E  0E00               	movlw	low (__mediumconst shr (0+16))
 12373   001D10  22F8               	addwfc	tblptru,f,c
 12374   001D12                     	endif
 12375   001D12  0009               	tblrd		*+
 12376   001D14  CFF5 F2D0          	movff	tablat,??_mnsProcessMessage+4
 12377   001D18  0009               	tblrd		*+
 12378   001D1A  CFF5 F2D1          	movff	tablat,??_mnsProcessMessage+5
 12379   001D1E  0E10               	movlw	16
 12380   001D20  27D0               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 12381   001D22  0E00               	movlw	0
 12382   001D24  23D1               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 12383   001D26  C2D0  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 12384   001D2A  C2D1  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 12385   001D2E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12386   001D2E  6AF8               	clrf	tblptru,c
 12387   001D30                     	endif
 12388   001D30                     	if	0	;tblptru may be non-zero
 12389   001D30                     	endif
 12390   001D30  0009               	tblrd		*+
 12391   001D32  CFF5 F2D2          	movff	tablat,??_mnsProcessMessage+6
 12392   001D36  0009               	tblrd		*+
 12393   001D38  CFF5 F2D3          	movff	tablat,??_mnsProcessMessage+7
 12394   001D3C  D801               	call	u26208
 12395   001D3E  D011               	goto	u26209
 12396   001D40                     u26208:
 12397   001D40  0005               	push	
 12398   001D42  6EFA               	movwf	pclath,c
 12399   001D44  51D2               	movf	(??_mnsProcessMessage+6)& (0+255),w,b
 12400   001D46  6EFD               	movwf	tosl,c
 12401   001D48  51D3               	movf	(??_mnsProcessMessage+7)& (0+255),w,b
 12402   001D4A  6EFE               	movwf	tosh,c
 12403   001D4C  6AFF               	clrf	tosu,c
 12404   001D4E  50FA               	movf	pclath,w,c
 12405   001D50  0101               	movlb	1	; () banked
 12406   001D52  EE20 F005          	lfsr	2,5
 12407   001D56  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12408   001D58  26D9               	addwf	fsr2l,f,c
 12409   001D5A  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12410   001D5C  22DA               	addwfc	fsr2h,f,c
 12411   001D5E  50DF               	movf	indf2,w,c
 12412   001D60  0012               	return		;indir
 12413   001D62                     u26209:
 12414   001D62  C097  F2EC         	movff	?_producerGetDiagnostic,mnsProcessMessage@d
 12415   001D66  C098  F2ED         	movff	?_producerGetDiagnostic+1,mnsProcessMessage@d+1
 12416                           
 12417                           ;../../VLCBlib_PIC/mns.c: 500:                     if (d == ((void*)0)) {
 12418   001D6A  0102               	movlb	2	; () banked
 12419   001D6C  51EC               	movf	mnsProcessMessage@d& (0+255),w,b
 12420   001D6E  11ED               	iorwf	(mnsProcessMessage@d+1)& (0+255),w,b
 12421   001D70  A4D8               	btfss	status,2,c
 12422   001D72  D00F               	goto	l24047
 12423                           
 12424                           ; BSR set to: 2
 12425                           ;../../VLCBlib_PIC/mns.c: 502:                         sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_DIAGNOSTIC);
 12426   001D74  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 12427   001D78  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 12428   001D7C  0E87               	movlw	135
 12429   001D7E  0101               	movlb	1	; () banked
 12430   001D80  6FC8               	movwf	sendMessage5@data3& (0+255),b
 12431   001D82  0E01               	movlw	1
 12432   001D84  6FC9               	movwf	sendMessage5@data4& (0+255),b
 12433   001D86  0EFD               	movlw	253
 12434   001D88  6FCA               	movwf	sendMessage5@data5& (0+255),b
 12435   001D8A  0EAF               	movlw	175
 12436   001D8C  EC47  F061         	call	_sendMessage5
 12437                           
 12438                           ;../../VLCBlib_PIC/mns.c: 503:                     } else {
 12439   001D90  D572               	goto	l23883
 12440   001D92                     l24047:
 12441                           
 12442                           ; BSR set to: 2
 12443                           ;../../VLCBlib_PIC/mns.c: 505:                         sendMessage6(OPC_DGN, nn.bytes.hi
      +                          , nn.bytes.lo, m->bytes[2], m->bytes[3],d->asBytes.hi, d->asBytes.lo);
 12444   001D92  C0B5  F1C6         	movff	_nn+1,sendMessage6@data1
 12445   001D96  C0B4  F1C7         	movff	_nn,sendMessage6@data2
 12446   001D9A  0101               	movlb	1	; () banked
 12447   001D9C  EE20 F004          	lfsr	2,4
 12448   001DA0  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12449   001DA2  26D9               	addwf	fsr2l,f,c
 12450   001DA4  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12451   001DA6  22DA               	addwfc	fsr2h,f,c
 12452   001DA8  50DF               	movf	indf2,w,c
 12453   001DAA  6FC8               	movwf	sendMessage6@data3& (0+255),b
 12454   001DAC  EE20 F005          	lfsr	2,5
 12455   001DB0  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12456   001DB2  26D9               	addwf	fsr2l,f,c
 12457   001DB4  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12458   001DB6  22DA               	addwfc	fsr2h,f,c
 12459   001DB8  50DF               	movf	indf2,w,c
 12460   001DBA  6FC9               	movwf	sendMessage6@data4& (0+255),b
 12461   001DBC  0102               	movlb	2	; () banked
 12462   001DBE  EE20 F001          	lfsr	2,1
 12463   001DC2  51EC               	movf	mnsProcessMessage@d& (0+255),w,b
 12464   001DC4  26D9               	addwf	fsr2l,f,c
 12465   001DC6  51ED               	movf	(mnsProcessMessage@d+1)& (0+255),w,b
 12466   001DC8  22DA               	addwfc	fsr2h,f,c
 12467   001DCA  50DF               	movf	indf2,w,c
 12468   001DCC  0101               	movlb	1	; () banked
 12469   001DCE  6FCA               	movwf	sendMessage6@data5& (0+255),b
 12470   001DD0  C2EC  FFD9         	movff	mnsProcessMessage@d,fsr2l
 12471   001DD4  C2ED  FFDA         	movff	mnsProcessMessage@d+1,fsr2h
 12472   001DD8  50DF               	movf	indf2,w,c
 12473   001DDA  6FCB               	movwf	sendMessage6@data6& (0+255),b
 12474   001DDC  0EC7               	movlw	199
 12475   001DDE  ECFF  F060         	call	_sendMessage6
 12476   001DE2  D549               	goto	l23883
 12477   001DE4                     l24053:
 12478                           
 12479                           ; BSR set to: 2
 12480                           ;../../VLCBlib_PIC/mns.c: 513:             if (m->len < 4) {
 12481   001DE4  C1FD  FFD9         	movff	mnsProcessMessage@m,fsr2l
 12482   001DE8  C1FE  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 12483   001DEC  0E04               	movlw	4
 12484   001DEE  60DF               	cpfslt	indf2,c
 12485   001DF0  D00F               	goto	l24061
 12486                           
 12487                           ; BSR set to: 2
 12488                           ;../../VLCBlib_PIC/mns.c: 514:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQSD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 12489   001DF2  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 12490   001DF6  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 12491   001DFA  0E78               	movlw	120
 12492   001DFC  0101               	movlb	1	; () banked
 12493   001DFE  6FC8               	movwf	sendMessage5@data3& (0+255),b
 12494   001E00  0E01               	movlw	1
 12495   001E02  6FC9               	movwf	sendMessage5@data4& (0+255),b
 12496   001E04  0E01               	movlw	1
 12497   001E06  6FCA               	movwf	sendMessage5@data5& (0+255),b
 12498   001E08  0EAF               	movlw	175
 12499   001E0A  EC47  F061         	call	_sendMessage5
 12500   001E0E  D533               	goto	l23883
 12501   001E10                     l24061:
 12502                           
 12503                           ; BSR set to: 2
 12504                           ;../../VLCBlib_PIC/mns.c: 517:             if (m->bytes[2] == 0) {
 12505   001E10  0101               	movlb	1	; () banked
 12506   001E12  EE20 F004          	lfsr	2,4
 12507   001E16  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12508   001E18  26D9               	addwf	fsr2l,f,c
 12509   001E1A  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12510   001E1C  22DA               	addwfc	fsr2h,f,c
 12511   001E1E  50DF               	movf	indf2,w,c
 12512   001E20  A4D8               	btfss	status,2,c
 12513   001E22  D018               	goto	l24067
 12514                           
 12515                           ; BSR set to: 1
 12516                           ;../../VLCBlib_PIC/mns.c: 519:                 sendMessage5(OPC_SD, nn.bytes.hi, nn.byte
      +                          s.lo, 0, 0, 9);
 12517   001E24  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 12518   001E28  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 12519   001E2C  0E00               	movlw	0
 12520   001E2E  6FC8               	movwf	sendMessage5@data3& (0+255),b
 12521   001E30  0E00               	movlw	0
 12522   001E32  6FC9               	movwf	sendMessage5@data4& (0+255),b
 12523   001E34  0E09               	movlw	9
 12524   001E36  6FCA               	movwf	sendMessage5@data5& (0+255),b
 12525   001E38  0EAC               	movlw	172
 12526   001E3A  EC47  F061         	call	_sendMessage5
 12527                           
 12528                           ;../../VLCBlib_PIC/mns.c: 521:                 startTimedResponse(3, SERVICE_ID_MNS, mns
      +                          TRserviceDiscoveryCallback);
 12529   001E3E  0E01               	movlw	1
 12530   001E40  0100               	movlb	0	; () banked
 12531   001E42  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 12532   001E44  0EC4               	movlw	low _mnsTRserviceDiscoveryCallback
 12533   001E46  6F92               	movwf	startTimedResponse@callback& (0+255),b
 12534   001E48  0EA6               	movlw	high _mnsTRserviceDiscoveryCallback
 12535   001E4A  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 12536   001E4C  0E03               	movlw	3
 12537   001E4E  EC75  F05F         	call	_startTimedResponse
 12538                           
 12539                           ;../../VLCBlib_PIC/mns.c: 522:             } else if (m->bytes[2] > 9) {
 12540   001E52  D511               	goto	l23883
 12541   001E54                     l24067:
 12542                           
 12543                           ; BSR set to: 1
 12544   001E54  EE20 F004          	lfsr	2,4
 12545   001E58  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12546   001E5A  26D9               	addwf	fsr2l,f,c
 12547   001E5C  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12548   001E5E  22DA               	addwfc	fsr2h,f,c
 12549   001E60  0E09               	movlw	9
 12550   001E62  64DF               	cpfsgt	indf2,c
 12551   001E64  D00E               	goto	l24077
 12552                           
 12553                           ; BSR set to: 1
 12554                           ;../../VLCBlib_PIC/mns.c: 523:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQSD, SERVICE_ID_MNS, GRSP_INVALID_SERVICE);
 12555   001E66  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 12556   001E6A  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 12557   001E6E  0E78               	movlw	120
 12558   001E70  6FC8               	movwf	sendMessage5@data3& (0+255),b
 12559   001E72  0E01               	movlw	1
 12560   001E74  6FC9               	movwf	sendMessage5@data4& (0+255),b
 12561   001E76  0EFC               	movlw	252
 12562   001E78  6FCA               	movwf	sendMessage5@data5& (0+255),b
 12563   001E7A  0EAF               	movlw	175
 12564   001E7C  EC47  F061         	call	_sendMessage5
 12565   001E80  D4FA               	goto	l23883
 12566   001E82                     l24077:
 12567                           
 12568                           ; BSR set to: 1
 12569                           ;../../VLCBlib_PIC/mns.c: 527:                 if (services[m->bytes[2]-1]->getESDdata =
      +                          = ((void*)0)) {
 12570   001E82  EE20 F004          	lfsr	2,4
 12571   001E86  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12572   001E88  26D9               	addwf	fsr2l,f,c
 12573   001E8A  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12574   001E8C  22DA               	addwfc	fsr2h,f,c
 12575   001E8E  50DF               	movf	indf2,w,c
 12576   001E90  0102               	movlb	2	; () banked
 12577   001E92  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 12578   001E94  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 12579   001E96  90D8               	bcf	status,0,c
 12580   001E98  37CC               	rlcf	??_mnsProcessMessage& (0+255),f,b
 12581   001E9A  37CD               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 12582   001E9C  0EFE               	movlw	254
 12583   001E9E  25CC               	addwf	??_mnsProcessMessage& (0+255),w,b
 12584   001EA0  6FCE               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 12585   001EA2  0EFF               	movlw	255
 12586   001EA4  21CD               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 12587   001EA6  6FCF               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 12588   001EA8  0E69               	movlw	low _services
 12589   001EAA  25CE               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 12590   001EAC  6EF6               	movwf	tblptrl,c
 12591   001EAE  0EEE               	movlw	high _services
 12592   001EB0  21CF               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 12593   001EB2  6EF7               	movwf	tblptrh,c
 12594   001EB4                     	if	1	;There are 3 active tblptr bytes
 12595   001EB4  6AF8               	clrf	tblptru,c
 12596   001EB6  0E00               	movlw	low (__mediumconst shr (0+16))
 12597   001EB8  22F8               	addwfc	tblptru,f,c
 12598   001EBA                     	endif
 12599   001EBA  0009               	tblrd		*+
 12600   001EBC  CFF5 F2D0          	movff	tablat,??_mnsProcessMessage+4
 12601   001EC0  0009               	tblrd		*+
 12602   001EC2  CFF5 F2D1          	movff	tablat,??_mnsProcessMessage+5
 12603   001EC6  0E0E               	movlw	14
 12604   001EC8  27D0               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 12605   001ECA  0E00               	movlw	0
 12606   001ECC  23D1               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 12607   001ECE  C2D0  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 12608   001ED2  C2D1  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 12609   001ED6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12610   001ED6  6AF8               	clrf	tblptru,c
 12611   001ED8                     	endif
 12612   001ED8                     	if	0	;tblptru may be non-zero
 12613   001ED8                     	endif
 12614   001ED8  0009               	tblrd		*+
 12615   001EDA  50F5               	movf	tablat,w,c
 12616   001EDC  0009               	tblrd		*+
 12617   001EDE  10F5               	iorwf	tablat,w,c
 12618   001EE0  A4D8               	btfss	status,2,c
 12619   001EE2  D042               	goto	l24081
 12620                           
 12621                           ; BSR set to: 2
 12622                           ;../../VLCBlib_PIC/mns.c: 528:                     sendMessage7(OPC_ESD, nn.bytes.hi, nn
      +                          .bytes.lo, m->bytes[2], services[m->bytes[2]-1]->serviceNo, 0,0,0);
 12623   001EE4  C0B5  F1C6         	movff	_nn+1,sendMessage7@data1
 12624   001EE8  C0B4  F1C7         	movff	_nn,sendMessage7@data2
 12625   001EEC  0101               	movlb	1	; () banked
 12626   001EEE  EE20 F004          	lfsr	2,4
 12627   001EF2  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12628   001EF4  26D9               	addwf	fsr2l,f,c
 12629   001EF6  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12630   001EF8  22DA               	addwfc	fsr2h,f,c
 12631   001EFA  50DF               	movf	indf2,w,c
 12632   001EFC  6FC8               	movwf	sendMessage7@data3& (0+255),b
 12633   001EFE  EE20 F004          	lfsr	2,4
 12634   001F02  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12635   001F04  26D9               	addwf	fsr2l,f,c
 12636   001F06  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12637   001F08  22DA               	addwfc	fsr2h,f,c
 12638   001F0A  50DF               	movf	indf2,w,c
 12639   001F0C  0102               	movlb	2	; () banked
 12640   001F0E  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 12641   001F10  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 12642   001F12  90D8               	bcf	status,0,c
 12643   001F14  37CC               	rlcf	??_mnsProcessMessage& (0+255),f,b
 12644   001F16  37CD               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 12645   001F18  0EFE               	movlw	254
 12646   001F1A  25CC               	addwf	??_mnsProcessMessage& (0+255),w,b
 12647   001F1C  6FCE               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 12648   001F1E  0EFF               	movlw	255
 12649   001F20  21CD               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 12650   001F22  6FCF               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 12651   001F24  0E69               	movlw	low _services
 12652   001F26  25CE               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 12653   001F28  6EF6               	movwf	tblptrl,c
 12654   001F2A  0EEE               	movlw	high _services
 12655   001F2C  21CF               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 12656   001F2E  6EF7               	movwf	tblptrh,c
 12657   001F30                     	if	1	;There are 3 active tblptr bytes
 12658   001F30  6AF8               	clrf	tblptru,c
 12659   001F32  0E00               	movlw	low (__mediumconst shr (0+16))
 12660   001F34  22F8               	addwfc	tblptru,f,c
 12661   001F36                     	endif
 12662   001F36  0009               	tblrd		*+
 12663   001F38  CFF5 F2D0          	movff	tablat,??_mnsProcessMessage+4
 12664   001F3C  0009               	tblrd		*+
 12665   001F3E  CFF5 F2D1          	movff	tablat,??_mnsProcessMessage+5
 12666   001F42  C2D0  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 12667   001F46  C2D1  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 12668   001F4A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12669   001F4A  6AF8               	clrf	tblptru,c
 12670   001F4C                     	endif
 12671   001F4C                     	if	0	;tblptru may be non-zero
 12672   001F4C                     	endif
 12673   001F4C  0008               	tblrd		*
 12674   001F4E  CFF5 F1C9          	movff	tablat,sendMessage7@data4
 12675   001F52  0E00               	movlw	0
 12676   001F54  0101               	movlb	1	; () banked
 12677   001F56  6FCA               	movwf	sendMessage7@data5& (0+255),b
 12678   001F58  0E00               	movlw	0
 12679   001F5A  6FCB               	movwf	sendMessage7@data6& (0+255),b
 12680   001F5C  0E00               	movlw	0
 12681   001F5E  6FCC               	movwf	sendMessage7@data7& (0+255),b
 12682   001F60  0EE7               	movlw	231
 12683   001F62  EC2F  F061         	call	_sendMessage7
 12684                           
 12685                           ;../../VLCBlib_PIC/mns.c: 529:                 } else {
 12686   001F66  D487               	goto	l23883
 12687   001F68                     l24081:
 12688                           
 12689                           ; BSR set to: 2
 12690                           ;../../VLCBlib_PIC/mns.c: 530:                     sendMessage7(OPC_ESD, nn.bytes.hi, nn
      +                          .bytes.lo, m->bytes[2], services[m->bytes[2]-1]->serviceNo,
 12691   001F68  C0B5  F1C6         	movff	_nn+1,sendMessage7@data1
 12692   001F6C  C0B4  F1C7         	movff	_nn,sendMessage7@data2
 12693   001F70  0101               	movlb	1	; () banked
 12694   001F72  EE20 F004          	lfsr	2,4
 12695   001F76  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12696   001F78  26D9               	addwf	fsr2l,f,c
 12697   001F7A  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12698   001F7C  22DA               	addwfc	fsr2h,f,c
 12699   001F7E  50DF               	movf	indf2,w,c
 12700   001F80  6FC8               	movwf	sendMessage7@data3& (0+255),b
 12701   001F82  EE20 F004          	lfsr	2,4
 12702   001F86  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12703   001F88  26D9               	addwf	fsr2l,f,c
 12704   001F8A  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12705   001F8C  22DA               	addwfc	fsr2h,f,c
 12706   001F8E  50DF               	movf	indf2,w,c
 12707   001F90  0102               	movlb	2	; () banked
 12708   001F92  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 12709   001F94  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 12710   001F96  90D8               	bcf	status,0,c
 12711   001F98  37CC               	rlcf	??_mnsProcessMessage& (0+255),f,b
 12712   001F9A  37CD               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 12713   001F9C  0EFE               	movlw	254
 12714   001F9E  25CC               	addwf	??_mnsProcessMessage& (0+255),w,b
 12715   001FA0  6FCE               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 12716   001FA2  0EFF               	movlw	255
 12717   001FA4  21CD               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 12718   001FA6  6FCF               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 12719   001FA8  0E69               	movlw	low _services
 12720   001FAA  25CE               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 12721   001FAC  6EF6               	movwf	tblptrl,c
 12722   001FAE  0EEE               	movlw	high _services
 12723   001FB0  21CF               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 12724   001FB2  6EF7               	movwf	tblptrh,c
 12725   001FB4                     	if	1	;There are 3 active tblptr bytes
 12726   001FB4  6AF8               	clrf	tblptru,c
 12727   001FB6  0E00               	movlw	low (__mediumconst shr (0+16))
 12728   001FB8  22F8               	addwfc	tblptru,f,c
 12729   001FBA                     	endif
 12730   001FBA  0009               	tblrd		*+
 12731   001FBC  CFF5 F2D0          	movff	tablat,??_mnsProcessMessage+4
 12732   001FC0  0009               	tblrd		*+
 12733   001FC2  CFF5 F2D1          	movff	tablat,??_mnsProcessMessage+5
 12734   001FC6  C2D0  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 12735   001FCA  C2D1  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 12736   001FCE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12737   001FCE  6AF8               	clrf	tblptru,c
 12738   001FD0                     	endif
 12739   001FD0                     	if	0	;tblptru may be non-zero
 12740   001FD0                     	endif
 12741   001FD0  0008               	tblrd		*
 12742   001FD2  CFF5 F1C9          	movff	tablat,sendMessage7@data4
 12743   001FD6  0101               	movlb	1	; () banked
 12744   001FD8  EE20 F004          	lfsr	2,4
 12745   001FDC  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12746   001FDE  26D9               	addwf	fsr2l,f,c
 12747   001FE0  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12748   001FE2  22DA               	addwfc	fsr2h,f,c
 12749   001FE4  50DF               	movf	indf2,w,c
 12750   001FE6  0102               	movlb	2	; () banked
 12751   001FE8  6FD2               	movwf	(??_mnsProcessMessage+6)& (0+255),b
 12752   001FEA  6BD3               	clrf	(??_mnsProcessMessage+7)& (0+255),b
 12753   001FEC  90D8               	bcf	status,0,c
 12754   001FEE  37D2               	rlcf	(??_mnsProcessMessage+6)& (0+255),f,b
 12755   001FF0  37D3               	rlcf	(??_mnsProcessMessage+7)& (0+255),f,b
 12756   001FF2  0EFE               	movlw	254
 12757   001FF4  25D2               	addwf	(??_mnsProcessMessage+6)& (0+255),w,b
 12758   001FF6  6FD4               	movwf	(??_mnsProcessMessage+8)& (0+255),b
 12759   001FF8  0EFF               	movlw	255
 12760   001FFA  21D3               	addwfc	(??_mnsProcessMessage+7)& (0+255),w,b
 12761   001FFC  6FD5               	movwf	(??_mnsProcessMessage+9)& (0+255),b
 12762   001FFE  0E69               	movlw	low _services
 12763   002000  25D4               	addwf	(??_mnsProcessMessage+8)& (0+255),w,b
 12764   002002  6EF6               	movwf	tblptrl,c
 12765   002004  0EEE               	movlw	high _services
 12766   002006  21D5               	addwfc	(??_mnsProcessMessage+9)& (0+255),w,b
 12767   002008  6EF7               	movwf	tblptrh,c
 12768   00200A                     	if	1	;There are 3 active tblptr bytes
 12769   00200A  6AF8               	clrf	tblptru,c
 12770   00200C  0E00               	movlw	low (__mediumconst shr (0+16))
 12771   00200E  22F8               	addwfc	tblptru,f,c
 12772   002010                     	endif
 12773   002010  0009               	tblrd		*+
 12774   002012  CFF5 F2D6          	movff	tablat,??_mnsProcessMessage+10
 12775   002016  0009               	tblrd		*+
 12776   002018  CFF5 F2D7          	movff	tablat,??_mnsProcessMessage+11
 12777   00201C  0E0E               	movlw	14
 12778   00201E  27D6               	addwf	(??_mnsProcessMessage+10)& (0+255),f,b
 12779   002020  0E00               	movlw	0
 12780   002022  23D7               	addwfc	(??_mnsProcessMessage+11)& (0+255),f,b
 12781   002024  C2D6  FFF6         	movff	??_mnsProcessMessage+10,tblptrl
 12782   002028  C2D7  FFF7         	movff	??_mnsProcessMessage+11,tblptrh
 12783   00202C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12784   00202C  6AF8               	clrf	tblptru,c
 12785   00202E                     	endif
 12786   00202E                     	if	0	;tblptru may be non-zero
 12787   00202E                     	endif
 12788   00202E  0009               	tblrd		*+
 12789   002030  CFF5 F2D8          	movff	tablat,??_mnsProcessMessage+12
 12790   002034  0009               	tblrd		*+
 12791   002036  CFF5 F2D9          	movff	tablat,??_mnsProcessMessage+13
 12792   00203A  D801               	call	u26268
 12793   00203C  D00A               	goto	u26269
 12794   00203E                     u26268:
 12795   00203E  0005               	push	
 12796   002040  6EFA               	movwf	pclath,c
 12797   002042  51D8               	movf	(??_mnsProcessMessage+12)& (0+255),w,b
 12798   002044  6EFD               	movwf	tosl,c
 12799   002046  51D9               	movf	(??_mnsProcessMessage+13)& (0+255),w,b
 12800   002048  6EFE               	movwf	tosh,c
 12801   00204A  6AFF               	clrf	tosu,c
 12802   00204C  50FA               	movf	pclath,w,c
 12803   00204E  0E01               	movlw	1
 12804   002050  0012               	return		;indir
 12805   002052                     u26269:
 12806   002052  0101               	movlb	1	; () banked
 12807   002054  6FCA               	movwf	sendMessage7@data5& (0+255),b
 12808   002056  EE20 F004          	lfsr	2,4
 12809   00205A  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12810   00205C  26D9               	addwf	fsr2l,f,c
 12811   00205E  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12812   002060  22DA               	addwfc	fsr2h,f,c
 12813   002062  50DF               	movf	indf2,w,c
 12814   002064  0102               	movlb	2	; () banked
 12815   002066  6FDA               	movwf	(??_mnsProcessMessage+14)& (0+255),b
 12816   002068  6BDB               	clrf	(??_mnsProcessMessage+15)& (0+255),b
 12817   00206A  90D8               	bcf	status,0,c
 12818   00206C  37DA               	rlcf	(??_mnsProcessMessage+14)& (0+255),f,b
 12819   00206E  37DB               	rlcf	(??_mnsProcessMessage+15)& (0+255),f,b
 12820   002070  0EFE               	movlw	254
 12821   002072  25DA               	addwf	(??_mnsProcessMessage+14)& (0+255),w,b
 12822   002074  6FDC               	movwf	(??_mnsProcessMessage+16)& (0+255),b
 12823   002076  0EFF               	movlw	255
 12824   002078  21DB               	addwfc	(??_mnsProcessMessage+15)& (0+255),w,b
 12825   00207A  6FDD               	movwf	(??_mnsProcessMessage+17)& (0+255),b
 12826   00207C  0E69               	movlw	low _services
 12827   00207E  25DC               	addwf	(??_mnsProcessMessage+16)& (0+255),w,b
 12828   002080  6EF6               	movwf	tblptrl,c
 12829   002082  0EEE               	movlw	high _services
 12830   002084  21DD               	addwfc	(??_mnsProcessMessage+17)& (0+255),w,b
 12831   002086  6EF7               	movwf	tblptrh,c
 12832   002088                     	if	1	;There are 3 active tblptr bytes
 12833   002088  6AF8               	clrf	tblptru,c
 12834   00208A  0E00               	movlw	low (__mediumconst shr (0+16))
 12835   00208C  22F8               	addwfc	tblptru,f,c
 12836   00208E                     	endif
 12837   00208E  0009               	tblrd		*+
 12838   002090  CFF5 F2DE          	movff	tablat,??_mnsProcessMessage+18
 12839   002094  0009               	tblrd		*+
 12840   002096  CFF5 F2DF          	movff	tablat,??_mnsProcessMessage+19
 12841   00209A  0E0E               	movlw	14
 12842   00209C  27DE               	addwf	(??_mnsProcessMessage+18)& (0+255),f,b
 12843   00209E  0E00               	movlw	0
 12844   0020A0  23DF               	addwfc	(??_mnsProcessMessage+19)& (0+255),f,b
 12845   0020A2  C2DE  FFF6         	movff	??_mnsProcessMessage+18,tblptrl
 12846   0020A6  C2DF  FFF7         	movff	??_mnsProcessMessage+19,tblptrh
 12847   0020AA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12848   0020AA  6AF8               	clrf	tblptru,c
 12849   0020AC                     	endif
 12850   0020AC                     	if	0	;tblptru may be non-zero
 12851   0020AC                     	endif
 12852   0020AC  0009               	tblrd		*+
 12853   0020AE  CFF5 F2E0          	movff	tablat,??_mnsProcessMessage+20
 12854   0020B2  0009               	tblrd		*+
 12855   0020B4  CFF5 F2E1          	movff	tablat,??_mnsProcessMessage+21
 12856   0020B8  D801               	call	u26278
 12857   0020BA  D00A               	goto	u26279
 12858   0020BC                     u26278:
 12859   0020BC  0005               	push	
 12860   0020BE  6EFA               	movwf	pclath,c
 12861   0020C0  51E0               	movf	(??_mnsProcessMessage+20)& (0+255),w,b
 12862   0020C2  6EFD               	movwf	tosl,c
 12863   0020C4  51E1               	movf	(??_mnsProcessMessage+21)& (0+255),w,b
 12864   0020C6  6EFE               	movwf	tosh,c
 12865   0020C8  6AFF               	clrf	tosu,c
 12866   0020CA  50FA               	movf	pclath,w,c
 12867   0020CC  0E02               	movlw	2
 12868   0020CE  0012               	return		;indir
 12869   0020D0                     u26279:
 12870   0020D0  0101               	movlb	1	; () banked
 12871   0020D2  6FCB               	movwf	sendMessage7@data6& (0+255),b
 12872   0020D4  EE20 F004          	lfsr	2,4
 12873   0020D8  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12874   0020DA  26D9               	addwf	fsr2l,f,c
 12875   0020DC  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12876   0020DE  22DA               	addwfc	fsr2h,f,c
 12877   0020E0  50DF               	movf	indf2,w,c
 12878   0020E2  0102               	movlb	2	; () banked
 12879   0020E4  6FE2               	movwf	(??_mnsProcessMessage+22)& (0+255),b
 12880   0020E6  6BE3               	clrf	(??_mnsProcessMessage+23)& (0+255),b
 12881   0020E8  90D8               	bcf	status,0,c
 12882   0020EA  37E2               	rlcf	(??_mnsProcessMessage+22)& (0+255),f,b
 12883   0020EC  37E3               	rlcf	(??_mnsProcessMessage+23)& (0+255),f,b
 12884   0020EE  0EFE               	movlw	254
 12885   0020F0  25E2               	addwf	(??_mnsProcessMessage+22)& (0+255),w,b
 12886   0020F2  6FE4               	movwf	(??_mnsProcessMessage+24)& (0+255),b
 12887   0020F4  0EFF               	movlw	255
 12888   0020F6  21E3               	addwfc	(??_mnsProcessMessage+23)& (0+255),w,b
 12889   0020F8  6FE5               	movwf	(??_mnsProcessMessage+25)& (0+255),b
 12890   0020FA  0E69               	movlw	low _services
 12891   0020FC  25E4               	addwf	(??_mnsProcessMessage+24)& (0+255),w,b
 12892   0020FE  6EF6               	movwf	tblptrl,c
 12893   002100  0EEE               	movlw	high _services
 12894   002102  21E5               	addwfc	(??_mnsProcessMessage+25)& (0+255),w,b
 12895   002104  6EF7               	movwf	tblptrh,c
 12896   002106                     	if	1	;There are 3 active tblptr bytes
 12897   002106  6AF8               	clrf	tblptru,c
 12898   002108  0E00               	movlw	low (__mediumconst shr (0+16))
 12899   00210A  22F8               	addwfc	tblptru,f,c
 12900   00210C                     	endif
 12901   00210C  0009               	tblrd		*+
 12902   00210E  CFF5 F2E6          	movff	tablat,??_mnsProcessMessage+26
 12903   002112  0009               	tblrd		*+
 12904   002114  CFF5 F2E7          	movff	tablat,??_mnsProcessMessage+27
 12905   002118  0E0E               	movlw	14
 12906   00211A  27E6               	addwf	(??_mnsProcessMessage+26)& (0+255),f,b
 12907   00211C  0E00               	movlw	0
 12908   00211E  23E7               	addwfc	(??_mnsProcessMessage+27)& (0+255),f,b
 12909   002120  C2E6  FFF6         	movff	??_mnsProcessMessage+26,tblptrl
 12910   002124  C2E7  FFF7         	movff	??_mnsProcessMessage+27,tblptrh
 12911   002128                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12912   002128  6AF8               	clrf	tblptru,c
 12913   00212A                     	endif
 12914   00212A                     	if	0	;tblptru may be non-zero
 12915   00212A                     	endif
 12916   00212A  0009               	tblrd		*+
 12917   00212C  CFF5 F2E8          	movff	tablat,??_mnsProcessMessage+28
 12918   002130  0009               	tblrd		*+
 12919   002132  CFF5 F2E9          	movff	tablat,??_mnsProcessMessage+29
 12920   002136  D801               	call	u26288
 12921   002138  D00A               	goto	u26289
 12922   00213A                     u26288:
 12923   00213A  0005               	push	
 12924   00213C  6EFA               	movwf	pclath,c
 12925   00213E  51E8               	movf	(??_mnsProcessMessage+28)& (0+255),w,b
 12926   002140  6EFD               	movwf	tosl,c
 12927   002142  51E9               	movf	(??_mnsProcessMessage+29)& (0+255),w,b
 12928   002144  6EFE               	movwf	tosh,c
 12929   002146  6AFF               	clrf	tosu,c
 12930   002148  50FA               	movf	pclath,w,c
 12931   00214A  0E03               	movlw	3
 12932   00214C  0012               	return		;indir
 12933   00214E                     u26289:
 12934   00214E  0101               	movlb	1	; () banked
 12935   002150  6FCC               	movwf	sendMessage7@data7& (0+255),b
 12936   002152  0EE7               	movlw	231
 12937   002154  EC2F  F061         	call	_sendMessage7
 12938   002158  EF3B  F00C         	goto	l23883
 12939   00215C                     l24087:
 12940                           
 12941                           ; BSR set to: 2
 12942                           ;../../VLCBlib_PIC/mns.c: 540:             if (m->len < 4) {
 12943   00215C  C1FD  FFD9         	movff	mnsProcessMessage@m,fsr2l
 12944   002160  C1FE  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 12945   002164  0E04               	movlw	4
 12946   002166  60DF               	cpfslt	indf2,c
 12947   002168  D010               	goto	l24095
 12948                           
 12949                           ; BSR set to: 2
 12950                           ;../../VLCBlib_PIC/mns.c: 541:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, CMDERR_INV_CMD);
 12951   00216A  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 12952   00216E  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 12953   002172  0E76               	movlw	118
 12954   002174  0101               	movlb	1	; () banked
 12955   002176  6FC8               	movwf	sendMessage5@data3& (0+255),b
 12956   002178  0E01               	movlw	1
 12957   00217A  6FC9               	movwf	sendMessage5@data4& (0+255),b
 12958   00217C  0E01               	movlw	1
 12959   00217E  6FCA               	movwf	sendMessage5@data5& (0+255),b
 12960   002180  0EAF               	movlw	175
 12961   002182  EC47  F061         	call	_sendMessage5
 12962   002186  EF3B  F00C         	goto	l23883
 12963   00218A                     l24095:
 12964                           
 12965                           ; BSR set to: 2
 12966                           ;../../VLCBlib_PIC/mns.c: 544:             newMode = m->bytes[2];
 12967   00218A  0101               	movlb	1	; () banked
 12968   00218C  EE20 F004          	lfsr	2,4
 12969   002190  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12970   002192  26D9               	addwf	fsr2l,f,c
 12971   002194  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12972   002196  22DA               	addwfc	fsr2h,f,c
 12973   002198  50DF               	movf	indf2,w,c
 12974   00219A  0102               	movlb	2	; () banked
 12975   00219C  6FEE               	movwf	mnsProcessMessage@newMode& (0+255),b
 12976                           
 12977                           ; BSR set to: 2
 12978                           ;../../VLCBlib_PIC/mns.c: 545:             previousNN.word = nn.word;
 12979   00219E  C0B4  F160         	movff	_nn,_previousNN
 12980   0021A2  C0B5  F161         	movff	_nn+1,_previousNN+1
 12981                           
 12982                           ; BSR set to: 2
 12983                           ;../../VLCBlib_PIC/mns.c: 547:             if (mode_state == MODE_NORMAL) {
 12984   0021A6  0100               	movlb	0	; () banked
 12985   0021A8  05C4               	decf	_mode_state& (0+255),w,b
 12986   0021AA  A4D8               	btfss	status,2,c
 12987   0021AC  D04D               	goto	l24129
 12988                           
 12989                           ; BSR set to: 0
 12990                           ;../../VLCBlib_PIC/mns.c: 548:                 if ((newMode == MODE_SETUP) || (newMode =
      +                          = MODE_UNINITIALISED)) {
 12991   0021AE  0102               	movlb	2	; () banked
 12992   0021B0  51EE               	movf	mnsProcessMessage@newMode& (0+255),w,b
 12993   0021B2  B4D8               	btfsc	status,2,c
 12994   0021B4  D003               	goto	u26320
 12995                           
 12996                           ; BSR set to: 2
 12997   0021B6  29EE               	incf	mnsProcessMessage@newMode& (0+255),w,b
 12998   0021B8  A4D8               	btfss	status,2,c
 12999   0021BA  D046               	goto	l24129
 13000   0021BC                     u26320:
 13001                           
 13002                           ; BSR set to: 2
 13003                           ;../../VLCBlib_PIC/mns.c: 549:                     sendMessage2((newMode == MODE_SETUP) 
      +                          ? OPC_RQNN : OPC_NNREL, nn.bytes.hi, nn.bytes.lo);
 13004   0021BC  51EE               	movf	mnsProcessMessage@newMode& (0+255),w,b
 13005   0021BE  B4D8               	btfsc	status,2,c
 13006   0021C0  D002               	goto	l24109
 13007                           
 13008                           ; BSR set to: 2
 13009   0021C2  0E51               	movlw	81
 13010   0021C4  D001               	goto	L2
 13011   0021C6                     l24109:
 13012                           
 13013                           ; BSR set to: 2
 13014   0021C6  0E50               	movlw	80
 13015   0021C8                     L2:
 13016   0021C8  6FEB               	movwf	_mnsProcessMessage$3632& (0+255),b
 13017                           
 13018                           ; BSR set to: 2
 13019   0021CA  C0B5  F0A7         	movff	_nn+1,sendMessage2@data1
 13020   0021CE  C0B4  F0A8         	movff	_nn,sendMessage2@data2
 13021   0021D2  51EB               	movf	_mnsProcessMessage$3632& (0+255),w,b
 13022   0021D4  EC17  F061         	call	_sendMessage2
 13023                           
 13024                           ;../../VLCBlib_PIC/mns.c: 550:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 13025   0021D8  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 13026   0021DC  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 13027   0021E0  0E76               	movlw	118
 13028   0021E2  0101               	movlb	1	; () banked
 13029   0021E4  6FC8               	movwf	sendMessage5@data3& (0+255),b
 13030   0021E6  0E01               	movlw	1
 13031   0021E8  6FC9               	movwf	sendMessage5@data4& (0+255),b
 13032   0021EA  0E00               	movlw	0
 13033   0021EC  6FCA               	movwf	sendMessage5@data5& (0+255),b
 13034   0021EE  0EAF               	movlw	175
 13035   0021F0  EC47  F061         	call	_sendMessage5
 13036                           
 13037                           ;../../VLCBlib_PIC/mns.c: 551:                     nn.bytes.lo = nn.bytes.hi = 0;
 13038   0021F4  0E00               	movlw	0
 13039   0021F6  0100               	movlb	0	; () banked
 13040   0021F8  6FB5               	movwf	(_nn+1)& (0+255),b
 13041   0021FA  C0B5  F0B4         	movff	_nn+1,_nn
 13042                           
 13043                           ; BSR set to: 0
 13044                           ;../../VLCBlib_PIC/mns.c: 552:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC +1, n
      +                          n.bytes.hi);
 13045   0021FE  0EFD               	movlw	253
 13046   002200  6FA4               	movwf	writeNVM@index& (0+255),b
 13047   002202  0E03               	movlw	3
 13048   002204  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 13049   002206  0E00               	movlw	0
 13050   002208  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 13051   00220A  C0B5  F0A7         	movff	_nn+1,writeNVM@value
 13052   00220E  0E00               	movlw	0
 13053   002210  ECC1  F05D         	call	_writeNVM
 13054                           
 13055                           ;../../VLCBlib_PIC/mns.c: 553:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC, nn.b
      +                          ytes.lo);
 13056   002214  0EFC               	movlw	252
 13057   002216  0100               	movlb	0	; () banked
 13058   002218  6FA4               	movwf	writeNVM@index& (0+255),b
 13059   00221A  0E03               	movlw	3
 13060   00221C  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 13061   00221E  0E00               	movlw	0
 13062   002220  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 13063   002222  C0B4  F0A7         	movff	_nn,writeNVM@value
 13064   002226  0E00               	movlw	0
 13065   002228  ECC1  F05D         	call	_writeNVM
 13066                           
 13067                           ;../../VLCBlib_PIC/mns.c: 555:                     mode_state = (newMode == MODE_SETUP) 
      +                          ? MODE_SETUP : MODE_UNINITIALISED;
 13068   00222C  0102               	movlb	2	; () banked
 13069   00222E  51EE               	movf	mnsProcessMessage@newMode& (0+255),w,b
 13070   002230  B4D8               	btfsc	status,2,c
 13071   002232  D003               	goto	l24121
 13072                           
 13073                           ; BSR set to: 2
 13074   002234  0100               	movlb	0	; () banked
 13075   002236  69C4               	setf	_mode_state& (0+255),b
 13076   002238  D003               	goto	l1525
 13077   00223A                     l24121:
 13078                           
 13079                           ; BSR set to: 2
 13080   00223A  0E00               	movlw	0
 13081   00223C  0100               	movlb	0	; () banked
 13082   00223E  6FC4               	movwf	_mode_state& (0+255),b
 13083   002240                     l1525:
 13084                           
 13085                           ; BSR set to: 0
 13086                           ;../../VLCBlib_PIC/mns.c: 556:                     setupModePreviousMode = MODE_NORMAL;
 13087   002240  0E01               	movlw	1
 13088   002242  6FC1               	movwf	_setupModePreviousMode& (0+255),b
 13089   002244  EF39  F00C         	goto	l23881
 13090   002248                     l24129:
 13091                           
 13092                           ;../../VLCBlib_PIC/mns.c: 563:             if (newMode == MODE_HEARTBEAT_ON) {
 13093   002248  0E0C               	movlw	12
 13094   00224A  0102               	movlb	2	; () banked
 13095   00224C  19EE               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 13096   00224E  A4D8               	btfss	status,2,c
 13097   002250  D011               	goto	l24141
 13098                           
 13099                           ; BSR set to: 2
 13100                           ;../../VLCBlib_PIC/mns.c: 564:                 mode_flags |= 4;
 13101   002252  0101               	movlb	1	; () banked
 13102   002254  8565               	bsf	_mode_flags& (0+255),2,b
 13103                           
 13104                           ; BSR set to: 1
 13105                           ;../../VLCBlib_PIC/mns.c: 565:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 13106   002256  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 13107   00225A  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 13108   00225E  0E76               	movlw	118
 13109   002260  6FC8               	movwf	sendMessage5@data3& (0+255),b
 13110   002262  0E01               	movlw	1
 13111   002264  6FC9               	movwf	sendMessage5@data4& (0+255),b
 13112   002266  0E00               	movlw	0
 13113   002268  6FCA               	movwf	sendMessage5@data5& (0+255),b
 13114   00226A  0EAF               	movlw	175
 13115   00226C  EC47  F061         	call	_sendMessage5
 13116   002270  EF3B  F00C         	goto	l23883
 13117   002274                     l24141:
 13118                           
 13119                           ; BSR set to: 2
 13120   002274  0E0D               	movlw	13
 13121   002276  19EE               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 13122   002278  A4D8               	btfss	status,2,c
 13123   00227A  EFC0  F00C         	goto	l23909
 13124                           
 13125                           ; BSR set to: 2
 13126                           ;../../VLCBlib_PIC/mns.c: 568:                 mode_flags &= ~4;
 13127   00227E  0101               	movlb	1	; () banked
 13128   002280  9565               	bcf	_mode_flags& (0+255),2,b
 13129                           
 13130                           ; BSR set to: 1
 13131                           ;../../VLCBlib_PIC/mns.c: 569:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 13132   002282  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 13133   002286  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 13134   00228A  0E76               	movlw	118
 13135   00228C  6FC8               	movwf	sendMessage5@data3& (0+255),b
 13136   00228E  0E01               	movlw	1
 13137   002290  6FC9               	movwf	sendMessage5@data4& (0+255),b
 13138   002292  0E00               	movlw	0
 13139   002294  6FCA               	movwf	sendMessage5@data5& (0+255),b
 13140   002296  0EAF               	movlw	175
 13141   002298  EC47  F061         	call	_sendMessage5
 13142   00229C  EF3B  F00C         	goto	l23883
 13143   0022A0                     l1529:
 13144                           
 13145                           ; BSR set to: 2
 13146   0022A0  00FF               	reset		;# 
 13147   0022A2  EF3B  F00C         	goto	l23883
 13148   0022A6                     l24161:
 13149                           
 13150                           ; BSR set to: 0
 13151   0022A6  0101               	movlb	1	; () banked
 13152   0022A8  EE20 F001          	lfsr	2,1
 13153   0022AC  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 13154   0022AE  26D9               	addwf	fsr2l,f,c
 13155   0022B0  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 13156   0022B2  22DA               	addwfc	fsr2h,f,c
 13157   0022B4  50DF               	movf	indf2,w,c
 13158   0022B6  0102               	movlb	2	; () banked
 13159   0022B8  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 13160   0022BA  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 13161                           
 13162                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13163                           ; Switch size 1, requested type "simple"
 13164                           ; Number of cases is 1, Range of values is 0 to 0
 13165                           ; switch strategies available:
 13166                           ; Name         Instructions Cycles
 13167                           ; simple_byte            4     3 (average)
 13168                           ;	Chosen strategy is simple_byte
 13169   0022BC  51CD               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 13170   0022BE  0A00               	xorlw	0	; case 0
 13171   0022C0  A4D8               	btfss	status,2,c
 13172   0022C2  EFC0  F00C         	goto	l23909
 13173                           
 13174                           ; BSR set to: 2
 13175                           ; Switch size 1, requested type "simple"
 13176                           ; Number of cases is 6, Range of values is 79 to 135
 13177                           ; switch strategies available:
 13178                           ; Name         Instructions Cycles
 13179                           ; simple_byte           19    10 (average)
 13180                           ;	Chosen strategy is simple_byte
 13181   0022C6  51CC               	movf	??_mnsProcessMessage& (0+255),w,b
 13182   0022C8  0A4F               	xorlw	79	; case 79
 13183   0022CA  B4D8               	btfsc	status,2,c
 13184   0022CC  D451               	goto	l1492
 13185   0022CE  0A11               	xorlw	17	; case 94
 13186   0022D0  B4D8               	btfsc	status,2,c
 13187   0022D2  D7E6               	goto	l1529
 13188   0022D4  0A2D               	xorlw	45	; case 115
 13189   0022D6  B4D8               	btfsc	status,2,c
 13190   0022D8  EF4B  F00D         	goto	l23973
 13191   0022DC  0A05               	xorlw	5	; case 118
 13192   0022DE  B4D8               	btfsc	status,2,c
 13193   0022E0  D73D               	goto	l24087
 13194   0022E2  0A0E               	xorlw	14	; case 120
 13195   0022E4  B4D8               	btfsc	status,2,c
 13196   0022E6  D57E               	goto	l24053
 13197   0022E8  0AFF               	xorlw	255	; case 135
 13198   0022EA  B4D8               	btfsc	status,2,c
 13199   0022EC  D454               	goto	l24007
 13200   0022EE  EFC0  F00C         	goto	l23909
 13201   0022F2                     __end_of_mnsProcessMessage:
 13202                           	callstack 0
 13203                           
 13204 ;; *************** function _ackEventProcessMessage *****************
 13205 ;; Defined at:
 13206 ;;		line 111 in file "../../VLCBlib_PIC/event_acknowledge.c"
 13207 ;; Parameters:    Size  Location     Type
 13208 ;;  m               2   63[BANK1 ] PTR struct Message
 13209 ;;		 -> poll@m(9), 
 13210 ;; Auto vars:     Size  Location     Type
 13211 ;;  eventNN         2    5[BANK2 ] struct Word
 13212 ;;  eventEN         2    2[BANK2 ] struct Word
 13213 ;;  ev              2    0        short 
 13214 ;;  eventIndex      1    4[BANK2 ] unsigned char 
 13215 ;; Return value:  Size  Location     Type
 13216 ;;                  1    wreg      enum E12799
 13217 ;; Registers used:
 13218 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 13219 ;; Tracked objects:
 13220 ;;		On entry : 0/0
 13221 ;;		On exit  : 0/0
 13222 ;;		Unchanged: 0/0
 13223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13224 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13225 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13226 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13227 ;;      Totals:         0       0       2       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13228 ;;Total ram usage:        9 bytes
 13229 ;; Hardware stack levels used: 1
 13230 ;; Hardware stack levels required when called: 19
 13231 ;; This function calls:
 13232 ;;		_ackEventCheckLen
 13233 ;;		_findEvent
 13234 ;;		_findService
 13235 ;;		_isConsumedEvent
 13236 ;;		_sendMessage7
 13237 ;; This function is called by:
 13238 ;;		_poll
 13239 ;; This function uses a non-reentrant model
 13240 ;;
 13241                           
 13242                           	psect	text24
 13243   0067FE                     __ptext24:
 13244                           	callstack 0
 13245   0067FE                     _ackEventProcessMessage:
 13246                           	callstack 10
 13247                           
 13248                           ;../../VLCBlib_PIC/event_acknowledge.c: 112:     Word eventNN, eventEN;;../../VLCBlib_PI
      +                          C/event_acknowledge.c: 113:     uint8_t eventIndex;;../../VLCBlib_PIC/event_acknowledge.
      +                          c: 114:     int16_t ev;;../../VLCBlib_PIC/event_acknowledge.c: 117:     if (m->opc == OP
      +                          C_MODE) {
 13249                           
 13250                           ;incstack = 0
 13251   0067FE  0101               	movlb	1	; () banked
 13252   006800  EE20 F001          	lfsr	2,1
 13253   006804  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 13254   006806  26D9               	addwf	fsr2l,f,c
 13255   006808  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13256   00680A  22DA               	addwfc	fsr2h,f,c
 13257   00680C  0E76               	movlw	118
 13258   00680E  18DE               	xorwf	postinc2,w,c
 13259   006810  A4D8               	btfss	status,2,c
 13260   006812  D040               	goto	l1323
 13261                           
 13262                           ; BSR set to: 1
 13263                           ;../../VLCBlib_PIC/event_acknowledge.c: 118:         if (ackEventCheckLen(m, 4) == PROCE
      +                          SSED) return PROCESSED;
 13264   006814  C1FD  F1CF         	movff	ackEventProcessMessage@m,ackEventCheckLen@m
 13265   006818  C1FE  F1D0         	movff	ackEventProcessMessage@m+1,ackEventCheckLen@m+1
 13266   00681C  0E04               	movlw	4
 13267   00681E  6FD1               	movwf	ackEventCheckLen@needed& (0+255),b
 13268   006820  EC02  F064         	call	_ackEventCheckLen	;wreg free
 13269   006824  06E8               	decf	wreg,f,c
 13270   006826  A4D8               	btfss	status,2,c
 13271   006828  D002               	goto	l23745
 13272   00682A                     u25860:
 13273   00682A  0E01               	movlw	1
 13274   00682C  0012               	return	
 13275   00682E                     l23745:
 13276                           
 13277                           ;../../VLCBlib_PIC/event_acknowledge.c: 119:         if ((m->bytes[0] == nn.bytes.hi) &&
      +                           (m->bytes[1] == nn.bytes.lo)) {
 13278   00682E  0101               	movlb	1	; () banked
 13279   006830  EE20 F002          	lfsr	2,2
 13280   006834  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 13281   006836  26D9               	addwf	fsr2l,f,c
 13282   006838  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13283   00683A  22DA               	addwfc	fsr2h,f,c
 13284   00683C  50DE               	movf	postinc2,w,c
 13285   00683E  0100               	movlb	0	; () banked
 13286   006840  19B5               	xorwf	(_nn+1)& (0+255),w,b
 13287   006842  A4D8               	btfss	status,2,c
 13288   006844  D025               	goto	l23767
 13289                           
 13290                           ; BSR set to: 0
 13291   006846  0101               	movlb	1	; () banked
 13292   006848  EE20 F003          	lfsr	2,3
 13293   00684C  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 13294   00684E  26D9               	addwf	fsr2l,f,c
 13295   006850  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13296   006852  22DA               	addwfc	fsr2h,f,c
 13297   006854  0100               	movlb	0	; () banked
 13298   006856  51B4               	movf	_nn& (0+255),w,b
 13299   006858  18DE               	xorwf	postinc2,w,c
 13300   00685A  A4D8               	btfss	status,2,c
 13301   00685C  D019               	goto	l23767
 13302                           
 13303                           ; BSR set to: 0
 13304                           ;../../VLCBlib_PIC/event_acknowledge.c: 120:             if (m->bytes[2] == MODE_EVENT_A
      +                          CK_ON) {
 13305   00685E  0101               	movlb	1	; () banked
 13306   006860  EE20 F004          	lfsr	2,4
 13307   006864  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 13308   006866  26D9               	addwf	fsr2l,f,c
 13309   006868  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13310   00686A  22DA               	addwfc	fsr2h,f,c
 13311   00686C  0E0A               	movlw	10
 13312   00686E  18DE               	xorwf	postinc2,w,c
 13313   006870  A4D8               	btfss	status,2,c
 13314   006872  D002               	goto	l23759
 13315                           
 13316                           ; BSR set to: 1
 13317                           ;../../VLCBlib_PIC/event_acknowledge.c: 122:                 mode_flags |= 1;
 13318   006874  8165               	bsf	_mode_flags& (0+255),0,b
 13319   006876  D7D9               	goto	u25860
 13320   006878                     l23759:
 13321                           
 13322                           ; BSR set to: 1
 13323   006878  EE20 F004          	lfsr	2,4
 13324   00687C  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 13325   00687E  26D9               	addwf	fsr2l,f,c
 13326   006880  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13327   006882  22DA               	addwfc	fsr2h,f,c
 13328   006884  0E0B               	movlw	11
 13329   006886  18DE               	xorwf	postinc2,w,c
 13330   006888  A4D8               	btfss	status,2,c
 13331   00688A  D002               	goto	l23767
 13332                           
 13333                           ; BSR set to: 1
 13334                           ;../../VLCBlib_PIC/event_acknowledge.c: 126:                 mode_flags &= ~1;
 13335   00688C  9165               	bcf	_mode_flags& (0+255),0,b
 13336   00688E  D7CD               	goto	u25860
 13337   006890                     l23767:
 13338                           
 13339                           ;../../VLCBlib_PIC/event_acknowledge.c: 130:         return NOT_PROCESSED;
 13340   006890  0E00               	movlw	0
 13341   006892  0012               	return	
 13342   006894                     l1323:
 13343                           
 13344                           ; BSR set to: 1
 13345                           ;../../VLCBlib_PIC/event_acknowledge.c: 135:     if (! (mode_flags & 2)) {
 13346   006894  A365               	btfss	_mode_flags& (0+255),1,b
 13347   006896  D7FC               	goto	l23767
 13348                           
 13349                           ; BSR set to: 1
 13350                           ;../../VLCBlib_PIC/event_acknowledge.c: 139:     if (findService(SERVICE_ID_CONSUMER) ==
      +                           ((void*)0)) {
 13351   006898  0E06               	movlw	6
 13352   00689A  ECA5  F051         	call	_findService
 13353   00689E  0100               	movlb	0	; () banked
 13354   0068A0  518D               	movf	?_findService& (0+255),w,b
 13355   0068A2  118E               	iorwf	(?_findService+1)& (0+255),w,b
 13356   0068A4  B4D8               	btfsc	status,2,c
 13357   0068A6  D7F4               	goto	l23767
 13358                           
 13359                           ; BSR set to: 0
 13360                           ;../../VLCBlib_PIC/event_acknowledge.c: 142:     if (m->len < 5) {
 13361   0068A8  C1FD  FFD9         	movff	ackEventProcessMessage@m,fsr2l
 13362   0068AC  C1FE  FFDA         	movff	ackEventProcessMessage@m+1,fsr2h
 13363   0068B0  0E05               	movlw	5
 13364   0068B2  60DF               	cpfslt	indf2,c
 13365   0068B4  D001               	goto	l23787
 13366   0068B6  D7EC               	goto	l23767
 13367   0068B8                     l23787:
 13368                           
 13369                           ; BSR set to: 0
 13370                           ;../../VLCBlib_PIC/event_acknowledge.c: 145:     eventNN.bytes.hi = m->bytes[0];
 13371   0068B8  0101               	movlb	1	; () banked
 13372   0068BA  EE20 F002          	lfsr	2,2
 13373   0068BE  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 13374   0068C0  26D9               	addwf	fsr2l,f,c
 13375   0068C2  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13376   0068C4  22DA               	addwfc	fsr2h,f,c
 13377   0068C6  50DF               	movf	indf2,w,c
 13378   0068C8  0102               	movlb	2	; () banked
 13379   0068CA  6FD2               	movwf	(ackEventProcessMessage@eventNN+1)& (0+255),b
 13380                           
 13381                           ;../../VLCBlib_PIC/event_acknowledge.c: 146:     eventNN.bytes.lo = m->bytes[1];
 13382   0068CC  0101               	movlb	1	; () banked
 13383   0068CE  EE20 F003          	lfsr	2,3
 13384   0068D2  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 13385   0068D4  26D9               	addwf	fsr2l,f,c
 13386   0068D6  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13387   0068D8  22DA               	addwfc	fsr2h,f,c
 13388   0068DA  50DF               	movf	indf2,w,c
 13389   0068DC  0102               	movlb	2	; () banked
 13390   0068DE  6FD1               	movwf	ackEventProcessMessage@eventNN& (0+255),b
 13391                           
 13392                           ;../../VLCBlib_PIC/event_acknowledge.c: 147:     eventEN.bytes.hi = m->bytes[2];
 13393   0068E0  0101               	movlb	1	; () banked
 13394   0068E2  EE20 F004          	lfsr	2,4
 13395   0068E6  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 13396   0068E8  26D9               	addwf	fsr2l,f,c
 13397   0068EA  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13398   0068EC  22DA               	addwfc	fsr2h,f,c
 13399   0068EE  50DF               	movf	indf2,w,c
 13400   0068F0  0102               	movlb	2	; () banked
 13401   0068F2  6FCF               	movwf	(ackEventProcessMessage@eventEN+1)& (0+255),b
 13402                           
 13403                           ;../../VLCBlib_PIC/event_acknowledge.c: 148:     eventEN.bytes.lo = m->bytes[3];
 13404   0068F4  0101               	movlb	1	; () banked
 13405   0068F6  EE20 F005          	lfsr	2,5
 13406   0068FA  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 13407   0068FC  26D9               	addwf	fsr2l,f,c
 13408   0068FE  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13409   006900  22DA               	addwfc	fsr2h,f,c
 13410   006902  50DF               	movf	indf2,w,c
 13411   006904  0102               	movlb	2	; () banked
 13412   006906  6FCE               	movwf	ackEventProcessMessage@eventEN& (0+255),b
 13413                           
 13414                           ;../../VLCBlib_PIC/event_acknowledge.c: 150:     switch (m->opc) {
 13415   006908  D019               	goto	l23799
 13416   00690A                     l23789:
 13417                           
 13418                           ; BSR set to: 2
 13419                           ;../../VLCBlib_PIC/event_acknowledge.c: 154:             eventIndex = findEvent(eventNN.
      +                          word, eventNN.word);
 13420   00690A  C2D1  F1BE         	movff	ackEventProcessMessage@eventNN,findEvent@nodeNumber
 13421   00690E  C2D2  F1BF         	movff	ackEventProcessMessage@eventNN+1,findEvent@nodeNumber+1
 13422   006912  C2D1  F1C0         	movff	ackEventProcessMessage@eventNN,findEvent@eventNumber
 13423   006916  C2D2  F1C1         	movff	ackEventProcessMessage@eventNN+1,findEvent@eventNumber+1
 13424   00691A  EC1A  F053         	call	_findEvent	;wreg free
 13425   00691E  D00B               	goto	L3
 13426   006920                     l23791:
 13427                           
 13428                           ; BSR set to: 2
 13429                           ;../../VLCBlib_PIC/event_acknowledge.c: 159:             eventIndex = findEvent(0, event
      +                          NN.word);
 13430   006920  0E00               	movlw	0
 13431   006922  0101               	movlb	1	; () banked
 13432   006924  6FBF               	movwf	(findEvent@nodeNumber+1)& (0+255),b
 13433   006926  0E00               	movlw	0
 13434   006928  6FBE               	movwf	findEvent@nodeNumber& (0+255),b
 13435   00692A  C2D1  F1C0         	movff	ackEventProcessMessage@eventNN,findEvent@eventNumber
 13436   00692E  C2D2  F1C1         	movff	ackEventProcessMessage@eventNN+1,findEvent@eventNumber+1
 13437   006932  EC1A  F053         	call	_findEvent	;wreg free
 13438   006936                     L3:
 13439   006936  0102               	movlb	2	; () banked
 13440   006938  6FD0               	movwf	ackEventProcessMessage@eventIndex& (0+255),b
 13441                           
 13442                           ;../../VLCBlib_PIC/event_acknowledge.c: 160:             break;
 13443   00693A  D01D               	goto	l23801
 13444   00693C                     l23799:
 13445                           
 13446                           ; BSR set to: 2
 13447   00693C  0101               	movlb	1	; () banked
 13448   00693E  EE20 F001          	lfsr	2,1
 13449   006942  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 13450   006944  26D9               	addwf	fsr2l,f,c
 13451   006946  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13452   006948  22DA               	addwfc	fsr2h,f,c
 13453   00694A  50DF               	movf	indf2,w,c
 13454   00694C  0102               	movlb	2	; () banked
 13455   00694E  6FCC               	movwf	??_ackEventProcessMessage& (0+255),b
 13456   006950  6BCD               	clrf	(??_ackEventProcessMessage+1)& (0+255),b
 13457                           
 13458                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13459                           ; Switch size 1, requested type "simple"
 13460                           ; Number of cases is 1, Range of values is 0 to 0
 13461                           ; switch strategies available:
 13462                           ; Name         Instructions Cycles
 13463                           ; simple_byte            4     3 (average)
 13464                           ;	Chosen strategy is simple_byte
 13465   006952  51CD               	movf	(??_ackEventProcessMessage+1)& (0+255),w,b
 13466   006954  0A00               	xorlw	0	; case 0
 13467   006956  A4D8               	btfss	status,2,c
 13468   006958  D79B               	goto	l23767
 13469                           
 13470                           ; BSR set to: 2
 13471                           ; Switch size 1, requested type "simple"
 13472                           ; Number of cases is 4, Range of values is 144 to 153
 13473                           ; switch strategies available:
 13474                           ; Name         Instructions Cycles
 13475                           ; simple_byte           13     7 (average)
 13476                           ;	Chosen strategy is simple_byte
 13477   00695A  51CC               	movf	??_ackEventProcessMessage& (0+255),w,b
 13478   00695C  0A90               	xorlw	144	; case 144
 13479   00695E  B4D8               	btfsc	status,2,c
 13480   006960  D7D4               	goto	l23789
 13481   006962  0A01               	xorlw	1	; case 145
 13482   006964  B4D8               	btfsc	status,2,c
 13483   006966  D7D1               	goto	l23789
 13484   006968  0A09               	xorlw	9	; case 152
 13485   00696A  B4D8               	btfsc	status,2,c
 13486   00696C  D7D9               	goto	l23791
 13487   00696E  0A01               	xorlw	1	; case 153
 13488   006970  B4D8               	btfsc	status,2,c
 13489   006972  D7D6               	goto	l23791
 13490   006974  D78D               	goto	l23767
 13491   006976                     l23801:
 13492                           
 13493                           ; BSR set to: 2
 13494                           ;../../VLCBlib_PIC/event_acknowledge.c: 164:     if (eventIndex != 0xff) {
 13495   006976  29D0               	incf	ackEventProcessMessage@eventIndex& (0+255),w,b
 13496   006978  B4D8               	btfsc	status,2,c
 13497   00697A  D78A               	goto	l23767
 13498                           
 13499                           ; BSR set to: 2
 13500                           ;../../VLCBlib_PIC/event_acknowledge.c: 167:         if (isConsumedEvent(eventIndex)) {
 13501   00697C  51D0               	movf	ackEventProcessMessage@eventIndex& (0+255),w,b
 13502   00697E  EC3A  F063         	call	_isConsumedEvent
 13503   006982  0900               	iorlw	0
 13504   006984  B4D8               	btfsc	status,2,c
 13505   006986  D784               	goto	l23767
 13506                           
 13507                           ;../../VLCBlib_PIC/event_acknowledge.c: 169:             sendMessage7(OPC_ENACK, nn.byte
      +                          s.hi, nn.bytes.lo, m->opc, m->bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]);
 13508   006988  C0B5  F1C6         	movff	_nn+1,sendMessage7@data1
 13509   00698C  C0B4  F1C7         	movff	_nn,sendMessage7@data2
 13510   006990  0101               	movlb	1	; () banked
 13511   006992  EE20 F001          	lfsr	2,1
 13512   006996  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 13513   006998  26D9               	addwf	fsr2l,f,c
 13514   00699A  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13515   00699C  22DA               	addwfc	fsr2h,f,c
 13516   00699E  50DF               	movf	indf2,w,c
 13517   0069A0  6FC8               	movwf	sendMessage7@data3& (0+255),b
 13518   0069A2  EE20 F002          	lfsr	2,2
 13519   0069A6  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 13520   0069A8  26D9               	addwf	fsr2l,f,c
 13521   0069AA  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13522   0069AC  22DA               	addwfc	fsr2h,f,c
 13523   0069AE  50DF               	movf	indf2,w,c
 13524   0069B0  6FC9               	movwf	sendMessage7@data4& (0+255),b
 13525   0069B2  EE20 F003          	lfsr	2,3
 13526   0069B6  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 13527   0069B8  26D9               	addwf	fsr2l,f,c
 13528   0069BA  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13529   0069BC  22DA               	addwfc	fsr2h,f,c
 13530   0069BE  50DF               	movf	indf2,w,c
 13531   0069C0  6FCA               	movwf	sendMessage7@data5& (0+255),b
 13532   0069C2  EE20 F004          	lfsr	2,4
 13533   0069C6  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 13534   0069C8  26D9               	addwf	fsr2l,f,c
 13535   0069CA  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13536   0069CC  22DA               	addwfc	fsr2h,f,c
 13537   0069CE  50DF               	movf	indf2,w,c
 13538   0069D0  6FCB               	movwf	sendMessage7@data6& (0+255),b
 13539   0069D2  EE20 F005          	lfsr	2,5
 13540   0069D6  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 13541   0069D8  26D9               	addwf	fsr2l,f,c
 13542   0069DA  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13543   0069DC  22DA               	addwfc	fsr2h,f,c
 13544   0069DE  50DF               	movf	indf2,w,c
 13545   0069E0  6FCC               	movwf	sendMessage7@data7& (0+255),b
 13546   0069E2  0EE6               	movlw	230
 13547   0069E4  EC2F  F061         	call	_sendMessage7
 13548                           
 13549                           ;../../VLCBlib_PIC/event_acknowledge.c: 171:             ackDiagnostics[0x01].asInt++;
 13550   0069E8  0101               	movlb	1	; () banked
 13551   0069EA  4BB8               	infsnz	(_ackDiagnostics+2)& (0+255),f,b
 13552   0069EC  2BB9               	incf	(_ackDiagnostics+3)& (0+255),f,b
 13553   0069EE  D750               	goto	l23767
 13554   0069F0                     __end_of_ackEventProcessMessage:
 13555                           	callstack 0
 13556                           
 13557 ;; *************** function _bootProcessMessage *****************
 13558 ;; Defined at:
 13559 ;;		line 231 in file "../../VLCBlib_PIC/boot.c"
 13560 ;; Parameters:    Size  Location     Type
 13561 ;;  m               2   63[BANK1 ] PTR struct Message
 13562 ;;		 -> poll@m(9), 
 13563 ;; Auto vars:     Size  Location     Type
 13564 ;;		None
 13565 ;; Return value:  Size  Location     Type
 13566 ;;                  1    wreg      enum E12799
 13567 ;; Registers used:
 13568 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13569 ;; Tracked objects:
 13570 ;;		On entry : 0/0
 13571 ;;		On exit  : 0/0
 13572 ;;		Unchanged: 0/0
 13573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13574 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13576 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13577 ;;      Totals:         0       0       2       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13578 ;;Total ram usage:        4 bytes
 13579 ;; Hardware stack levels used: 1
 13580 ;; Hardware stack levels required when called: 18
 13581 ;; This function calls:
 13582 ;;		_writeNVM
 13583 ;; This function is called by:
 13584 ;;		_poll
 13585 ;; This function uses a non-reentrant model
 13586 ;;
 13587                           
 13588                           	psect	text25
 13589   00A2B2                     __ptext25:
 13590                           	callstack 0
 13591   00A2B2                     _bootProcessMessage:
 13592                           	callstack 11
 13593                           
 13594                           ;../../VLCBlib_PIC/boot.c: 233:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED
      +                          ;
 13595                           
 13596                           ;incstack = 0
 13597   00A2B2  0101               	movlb	1	; () banked
 13598   00A2B4  EE20 F002          	lfsr	2,2
 13599   00A2B8  51FD               	movf	bootProcessMessage@m& (0+255),w,b
 13600   00A2BA  26D9               	addwf	fsr2l,f,c
 13601   00A2BC  51FE               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13602   00A2BE  22DA               	addwfc	fsr2h,f,c
 13603   00A2C0  50DE               	movf	postinc2,w,c
 13604   00A2C2  0100               	movlb	0	; () banked
 13605   00A2C4  19B5               	xorwf	(_nn+1)& (0+255),w,b
 13606   00A2C6  B4D8               	btfsc	status,2,c
 13607   00A2C8  D002               	goto	l23691
 13608   00A2CA                     u25810:
 13609   00A2CA  0E00               	movlw	0
 13610   00A2CC  0012               	return	
 13611   00A2CE                     l23691:
 13612                           
 13613                           ; BSR set to: 0
 13614                           ;../../VLCBlib_PIC/boot.c: 234:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED
      +                          ;
 13615   00A2CE  0101               	movlb	1	; () banked
 13616   00A2D0  EE20 F003          	lfsr	2,3
 13617   00A2D4  51FD               	movf	bootProcessMessage@m& (0+255),w,b
 13618   00A2D6  26D9               	addwf	fsr2l,f,c
 13619   00A2D8  51FE               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13620   00A2DA  22DA               	addwfc	fsr2h,f,c
 13621   00A2DC  0100               	movlb	0	; () banked
 13622   00A2DE  51B4               	movf	_nn& (0+255),w,b
 13623   00A2E0  18DE               	xorwf	postinc2,w,c
 13624   00A2E2  A4D8               	btfss	status,2,c
 13625   00A2E4  D7F2               	goto	u25810
 13626   00A2E6  D01A               	goto	l23715
 13627   00A2E8                     l23697:
 13628                           
 13629                           ; BSR set to: 2
 13630                           ;../../VLCBlib_PIC/boot.c: 239:             if (m->bytes[2] != MODE_BOOT) return NOT_PRO
      +                          CESSED;
 13631   00A2E8  0101               	movlb	1	; () banked
 13632   00A2EA  EE20 F004          	lfsr	2,4
 13633   00A2EE  51FD               	movf	bootProcessMessage@m& (0+255),w,b
 13634   00A2F0  26D9               	addwf	fsr2l,f,c
 13635   00A2F2  51FE               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13636   00A2F4  22DA               	addwfc	fsr2h,f,c
 13637   00A2F6  0E0E               	movlw	14
 13638   00A2F8  18DE               	xorwf	postinc2,w,c
 13639   00A2FA  A4D8               	btfss	status,2,c
 13640   00A2FC  D7E6               	goto	u25810
 13641   00A2FE                     l23703:
 13642                           
 13643                           ;../../VLCBlib_PIC/boot.c: 244:             writeNVM(EEPROM_NVM_TYPE, 0x3FF, 0xFF);
 13644   00A2FE  0EFF               	movlw	255
 13645   00A300  0100               	movlb	0	; () banked
 13646   00A302  6FA4               	movwf	writeNVM@index& (0+255),b
 13647   00A304  0E03               	movlw	3
 13648   00A306  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 13649   00A308  0E00               	movlw	0
 13650   00A30A  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 13651   00A30C  0EFF               	movlw	255
 13652   00A30E  6FA7               	movwf	writeNVM@value& (0+255),b
 13653   00A310  0E00               	movlw	0
 13654   00A312  ECC1  F05D         	call	_writeNVM
 13655   00A316  00FF               	reset		;# 
 13656                           
 13657                           ;../../VLCBlib_PIC/boot.c: 246:             return PROCESSED;
 13658   00A318  0E01               	movlw	1
 13659   00A31A  0012               	return	
 13660   00A31C                     l23715:
 13661                           
 13662                           ; BSR set to: 0
 13663   00A31C  0101               	movlb	1	; () banked
 13664   00A31E  EE20 F001          	lfsr	2,1
 13665   00A322  51FD               	movf	bootProcessMessage@m& (0+255),w,b
 13666   00A324  26D9               	addwf	fsr2l,f,c
 13667   00A326  51FE               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13668   00A328  22DA               	addwfc	fsr2h,f,c
 13669   00A32A  50DF               	movf	indf2,w,c
 13670   00A32C  0102               	movlb	2	; () banked
 13671   00A32E  6FCC               	movwf	??_bootProcessMessage& (0+255),b
 13672   00A330  6BCD               	clrf	(??_bootProcessMessage+1)& (0+255),b
 13673                           
 13674                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13675                           ; Switch size 1, requested type "simple"
 13676                           ; Number of cases is 1, Range of values is 0 to 0
 13677                           ; switch strategies available:
 13678                           ; Name         Instructions Cycles
 13679                           ; simple_byte            4     3 (average)
 13680                           ;	Chosen strategy is simple_byte
 13681   00A332  51CD               	movf	(??_bootProcessMessage+1)& (0+255),w,b
 13682   00A334  0A00               	xorlw	0	; case 0
 13683   00A336  A4D8               	btfss	status,2,c
 13684   00A338  D7C8               	goto	u25810
 13685                           
 13686                           ; BSR set to: 2
 13687                           ; Switch size 1, requested type "simple"
 13688                           ; Number of cases is 2, Range of values is 92 to 118
 13689                           ; switch strategies available:
 13690                           ; Name         Instructions Cycles
 13691                           ; simple_byte            7     4 (average)
 13692                           ;	Chosen strategy is simple_byte
 13693   00A33A  51CC               	movf	??_bootProcessMessage& (0+255),w,b
 13694   00A33C  0A5C               	xorlw	92	; case 92
 13695   00A33E  B4D8               	btfsc	status,2,c
 13696   00A340  D7DE               	goto	l23703
 13697   00A342  0A2A               	xorlw	42	; case 118
 13698   00A344  B4D8               	btfsc	status,2,c
 13699   00A346  D7D0               	goto	l23697
 13700   00A348  D7C0               	goto	u25810
 13701   00A34A                     __end_of_bootProcessMessage:
 13702                           	callstack 0
 13703                           
 13704 ;; *************** function _consumer2QProcessMessage *****************
 13705 ;; Defined at:
 13706 ;;		line 142 in file "../event_consumerDualActionQueue.c"
 13707 ;; Parameters:    Size  Location     Type
 13708 ;;  m               2   63[BANK1 ] PTR struct Message
 13709 ;;		 -> poll@m(9), 
 13710 ;; Auto vars:     Size  Location     Type
 13711 ;;  nextSimultan    1   11[BANK2 ] unsigned char 
 13712 ;;  firstAction     1   10[BANK2 ] unsigned char 
 13713 ;;  nextAction      1    9[BANK2 ] unsigned char 
 13714 ;;  enn             2    6[BANK2 ] unsigned short 
 13715 ;;  action          1   16[BANK2 ] unsigned char 
 13716 ;;  e               1   15[BANK2 ] unsigned char 
 13717 ;;  ca              1   14[BANK2 ] unsigned char 
 13718 ;;  masked_actio    1   13[BANK2 ] unsigned char 
 13719 ;;  io              1   12[BANK2 ] unsigned char 
 13720 ;;  tableIndex      1    8[BANK2 ] unsigned char 
 13721 ;;  opc             1    5[BANK2 ] unsigned char 
 13722 ;;  change          1    4[BANK2 ] char 
 13723 ;;  end             1    3[BANK2 ] unsigned char 
 13724 ;;  start           1    0        unsigned char 
 13725 ;; Return value:  Size  Location     Type
 13726 ;;                  1    wreg      enum E12799
 13727 ;; Registers used:
 13728 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13729 ;; Tracked objects:
 13730 ;;		On entry : 0/0
 13731 ;;		On exit  : 0/0
 13732 ;;		Unchanged: 0/0
 13733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13734 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13735 ;;      Locals:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13736 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13737 ;;      Totals:         0       0       2      17       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13738 ;;Total ram usage:       19 bytes
 13739 ;; Hardware stack levels used: 1
 13740 ;; Hardware stack levels required when called: 16
 13741 ;; This function calls:
 13742 ;;		___awdiv
 13743 ;;		___awmod
 13744 ;;		_findEvent
 13745 ;;		_getEVs
 13746 ;;		_getNV
 13747 ;;		_pushTwoAction
 13748 ;;		_setExpeditedActions
 13749 ;;		_setNormalActions
 13750 ;; This function is called by:
 13751 ;;		_poll
 13752 ;; This function uses a non-reentrant model
 13753 ;;
 13754                           
 13755                           	psect	text26
 13756   003A66                     __ptext26:
 13757                           	callstack 0
 13758   003A66                     _consumer2QProcessMessage:
 13759                           	callstack 13
 13760                           
 13761                           ;../event_consumerDualActionQueue.c: 143:     uint8_t start, end;;../event_consumerDualA
      +                          ctionQueue.c: 144:     uint8_t tableIndex;;../event_consumerDualActionQueue.c: 145:     
      +                          int8_t change;;../event_consumerDualActionQueue.c: 146:     uint8_t e;;../event_consumer
      +                          DualActionQueue.c: 147:     uint8_t action;;../event_consumerDualActionQueue.c: 148:    
      +                           uint8_t masked_action;;../event_consumerDualActionQueue.c: 149:     uint8_t ca;;../even
      +                          t_consumerDualActionQueue.c: 150:     uint8_t io;;../event_consumerDualActionQueue.c: 15
      +                          1:     uint16_t enn;
 13762                           
 13763                           ;incstack = 0
 13764   003A66  C1FD  FFD9         	movff	consumer2QProcessMessage@m,fsr2l
 13765   003A6A  C1FE  FFDA         	movff	consumer2QProcessMessage@m+1,fsr2h
 13766   003A6E  0E05               	movlw	5
 13767   003A70  60DF               	cpfslt	indf2,c
 13768   003A72  D002               	goto	l23477
 13769   003A74                     u25540:
 13770   003A74  0E00               	movlw	0
 13771   003A76  0012               	return	
 13772   003A78                     l23477:
 13773                           
 13774                           ;../event_consumerDualActionQueue.c: 155:     enn = ((uint16_t)m->bytes[0])*256+m->bytes
      +                          [1];
 13775   003A78  0101               	movlb	1	; () banked
 13776   003A7A  EE20 F003          	lfsr	2,3
 13777   003A7E  51FD               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13778   003A80  26D9               	addwf	fsr2l,f,c
 13779   003A82  51FE               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13780   003A84  22DA               	addwfc	fsr2h,f,c
 13781   003A86  50DF               	movf	indf2,w,c
 13782   003A88  0102               	movlb	2	; () banked
 13783   003A8A  6FCC               	movwf	??_consumer2QProcessMessage& (0+255),b
 13784   003A8C  0101               	movlb	1	; () banked
 13785   003A8E  EE20 F002          	lfsr	2,2
 13786   003A92  51FD               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13787   003A94  26D9               	addwf	fsr2l,f,c
 13788   003A96  51FE               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13789   003A98  22DA               	addwfc	fsr2h,f,c
 13790   003A9A  50DF               	movf	indf2,w,c
 13791   003A9C  0102               	movlb	2	; () banked
 13792   003A9E  6FCD               	movwf	(??_consumer2QProcessMessage+1)& (0+255),b
 13793   003AA0  51CC               	movf	??_consumer2QProcessMessage& (0+255),w,b
 13794   003AA2  6FD2               	movwf	consumer2QProcessMessage@enn& (0+255),b
 13795   003AA4  C2CD  F2D3         	movff	??_consumer2QProcessMessage+1,consumer2QProcessMessage@enn+1
 13796                           
 13797                           ;../event_consumerDualActionQueue.c: 157:     switch (m->opc) {
 13798   003AA8  D010               	goto	l23491
 13799   003AAA                     l449:
 13800                           
 13801                           ; BSR set to: 2
 13802                           ;../event_consumerDualActionQueue.c: 164:             enn = 0;
 13803                           
 13804                           ; BSR set to: 2
 13805   003AAA  0E00               	movlw	0
 13806   003AAC  6FD3               	movwf	(consumer2QProcessMessage@enn+1)& (0+255),b
 13807   003AAE  0E00               	movlw	0
 13808   003AB0  6FD2               	movwf	consumer2QProcessMessage@enn& (0+255),b
 13809   003AB2                     l454:
 13810                           
 13811                           ; BSR set to: 2
 13812                           ;../event_consumerDualActionQueue.c: 173:             end = 20;
 13813   003AB2  0E14               	movlw	20
 13814   003AB4  6FCF               	movwf	consumer2QProcessMessage@end& (0+255),b
 13815                           
 13816                           ;../event_consumerDualActionQueue.c: 174:             change = 1;
 13817   003AB6  0E01               	movlw	1
 13818   003AB8  6FD0               	movwf	consumer2QProcessMessage@change& (0+255),b
 13819                           
 13820                           ;../event_consumerDualActionQueue.c: 175:             break;
 13821   003ABA  D048               	goto	l23493
 13822   003ABC                     l458:
 13823                           
 13824                           ; BSR set to: 2
 13825                           ;../event_consumerDualActionQueue.c: 182:             enn = 0;
 13826                           
 13827                           ; BSR set to: 2
 13828   003ABC  0E00               	movlw	0
 13829   003ABE  6FD3               	movwf	(consumer2QProcessMessage@enn+1)& (0+255),b
 13830   003AC0  0E00               	movlw	0
 13831   003AC2  6FD2               	movwf	consumer2QProcessMessage@enn& (0+255),b
 13832   003AC4                     l463:
 13833                           
 13834                           ; BSR set to: 2
 13835                           ;../event_consumerDualActionQueue.c: 191:             end = 1 -1;
 13836   003AC4  0E00               	movlw	0
 13837   003AC6  6FCF               	movwf	consumer2QProcessMessage@end& (0+255),b
 13838                           
 13839                           ; BSR set to: 2
 13840                           ;../event_consumerDualActionQueue.c: 193:             break;
 13841   003AC8  D041               	goto	l23493
 13842   003ACA                     l23491:
 13843                           
 13844                           ; BSR set to: 2
 13845   003ACA  0101               	movlb	1	; () banked
 13846   003ACC  EE20 F001          	lfsr	2,1
 13847   003AD0  51FD               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13848   003AD2  26D9               	addwf	fsr2l,f,c
 13849   003AD4  51FE               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13850   003AD6  22DA               	addwfc	fsr2h,f,c
 13851   003AD8  50DF               	movf	indf2,w,c
 13852   003ADA  0102               	movlb	2	; () banked
 13853   003ADC  6FCC               	movwf	??_consumer2QProcessMessage& (0+255),b
 13854   003ADE  6BCD               	clrf	(??_consumer2QProcessMessage+1)& (0+255),b
 13855                           
 13856                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13857                           ; Switch size 1, requested type "simple"
 13858                           ; Number of cases is 1, Range of values is 0 to 0
 13859                           ; switch strategies available:
 13860                           ; Name         Instructions Cycles
 13861                           ; simple_byte            4     3 (average)
 13862                           ;	Chosen strategy is simple_byte
 13863   003AE0  51CD               	movf	(??_consumer2QProcessMessage+1)& (0+255),w,b
 13864   003AE2  0A00               	xorlw	0	; case 0
 13865   003AE4  A4D8               	btfss	status,2,c
 13866   003AE6  D7C6               	goto	u25540
 13867                           
 13868                           ; BSR set to: 2
 13869                           ; Switch size 1, requested type "simple"
 13870                           ; Number of cases is 16, Range of values is 144 to 249
 13871                           ; switch strategies available:
 13872                           ; Name         Instructions Cycles
 13873                           ; simple_byte           49    25 (average)
 13874                           ;	Chosen strategy is simple_byte
 13875   003AE8  51CC               	movf	??_consumer2QProcessMessage& (0+255),w,b
 13876   003AEA  0A90               	xorlw	144	; case 144
 13877   003AEC  B4D8               	btfsc	status,2,c
 13878   003AEE  D7E1               	goto	l454
 13879   003AF0  0A01               	xorlw	1	; case 145
 13880   003AF2  B4D8               	btfsc	status,2,c
 13881   003AF4  D7E7               	goto	l463
 13882   003AF6  0A09               	xorlw	9	; case 152
 13883   003AF8  B4D8               	btfsc	status,2,c
 13884   003AFA  D7D7               	goto	l449
 13885   003AFC  0A01               	xorlw	1	; case 153
 13886   003AFE  B4D8               	btfsc	status,2,c
 13887   003B00  D7DD               	goto	l458
 13888   003B02  0A29               	xorlw	41	; case 176
 13889   003B04  B4D8               	btfsc	status,2,c
 13890   003B06  D7D5               	goto	l454
 13891   003B08  0A01               	xorlw	1	; case 177
 13892   003B0A  B4D8               	btfsc	status,2,c
 13893   003B0C  D7DB               	goto	l463
 13894   003B0E  0A09               	xorlw	9	; case 184
 13895   003B10  B4D8               	btfsc	status,2,c
 13896   003B12  D7CB               	goto	l449
 13897   003B14  0A01               	xorlw	1	; case 185
 13898   003B16  B4D8               	btfsc	status,2,c
 13899   003B18  D7D1               	goto	l458
 13900   003B1A  0A69               	xorlw	105	; case 208
 13901   003B1C  B4D8               	btfsc	status,2,c
 13902   003B1E  D7C9               	goto	l454
 13903   003B20  0A01               	xorlw	1	; case 209
 13904   003B22  B4D8               	btfsc	status,2,c
 13905   003B24  D7CF               	goto	l463
 13906   003B26  0A09               	xorlw	9	; case 216
 13907   003B28  B4D8               	btfsc	status,2,c
 13908   003B2A  D7BF               	goto	l449
 13909   003B2C  0A01               	xorlw	1	; case 217
 13910   003B2E  B4D8               	btfsc	status,2,c
 13911   003B30  D7C5               	goto	l458
 13912   003B32  0A29               	xorlw	41	; case 240
 13913   003B34  B4D8               	btfsc	status,2,c
 13914   003B36  D7BD               	goto	l454
 13915   003B38  0A01               	xorlw	1	; case 241
 13916   003B3A  B4D8               	btfsc	status,2,c
 13917   003B3C  D7C3               	goto	l463
 13918   003B3E  0A09               	xorlw	9	; case 248
 13919   003B40  B4D8               	btfsc	status,2,c
 13920   003B42  D7B3               	goto	l449
 13921   003B44  0A01               	xorlw	1	; case 249
 13922   003B46  B4D8               	btfsc	status,2,c
 13923   003B48  D7B9               	goto	l458
 13924   003B4A  D794               	goto	u25540
 13925   003B4C                     l23493:
 13926                           
 13927                           ; BSR set to: 2
 13928                           ;../event_consumerDualActionQueue.c: 199:     tableIndex = findEvent(enn, ((uint16_t)m->
      +                          bytes[2])*256+m->bytes[3]);
 13929   003B4C  C2D2  F1BE         	movff	consumer2QProcessMessage@enn,findEvent@nodeNumber
 13930   003B50  C2D3  F1BF         	movff	consumer2QProcessMessage@enn+1,findEvent@nodeNumber+1
 13931   003B54  0101               	movlb	1	; () banked
 13932   003B56  EE20 F005          	lfsr	2,5
 13933   003B5A  51FD               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13934   003B5C  26D9               	addwf	fsr2l,f,c
 13935   003B5E  51FE               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13936   003B60  22DA               	addwfc	fsr2h,f,c
 13937   003B62  50DF               	movf	indf2,w,c
 13938   003B64  0102               	movlb	2	; () banked
 13939   003B66  6FCC               	movwf	??_consumer2QProcessMessage& (0+255),b
 13940   003B68  0101               	movlb	1	; () banked
 13941   003B6A  EE20 F004          	lfsr	2,4
 13942   003B6E  51FD               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13943   003B70  26D9               	addwf	fsr2l,f,c
 13944   003B72  51FE               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13945   003B74  22DA               	addwfc	fsr2h,f,c
 13946   003B76  50DF               	movf	indf2,w,c
 13947   003B78  0102               	movlb	2	; () banked
 13948   003B7A  6FCD               	movwf	(??_consumer2QProcessMessage+1)& (0+255),b
 13949   003B7C  51CC               	movf	??_consumer2QProcessMessage& (0+255),w,b
 13950   003B7E  0101               	movlb	1	; () banked
 13951   003B80  6FC0               	movwf	findEvent@eventNumber& (0+255),b
 13952   003B82  C2CD  F1C1         	movff	??_consumer2QProcessMessage+1,findEvent@eventNumber+1
 13953   003B86  EC1A  F053         	call	_findEvent	;wreg free
 13954   003B8A  0102               	movlb	2	; () banked
 13955   003B8C  6FD4               	movwf	consumer2QProcessMessage@tableIndex& (0+255),b
 13956                           
 13957                           ; BSR set to: 2
 13958                           ;../event_consumerDualActionQueue.c: 200:     if (tableIndex == 0xff) return NOT_PROCESS
      +                          ED;
 13959   003B8E  29D4               	incf	consumer2QProcessMessage@tableIndex& (0+255),w,b
 13960   003B90  B4D8               	btfsc	status,2,c
 13961   003B92  D770               	goto	u25540
 13962                           
 13963                           ; BSR set to: 2
 13964   003B94  51D4               	movf	consumer2QProcessMessage@tableIndex& (0+255),w,b
 13965   003B96  EC57  F042         	call	_getEVs
 13966                           
 13967                           ;../event_consumerDualActionQueue.c: 208:     opc=m->opc;
 13968   003B9A  0101               	movlb	1	; () banked
 13969   003B9C  EE20 F001          	lfsr	2,1
 13970   003BA0  51FD               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13971   003BA2  26D9               	addwf	fsr2l,f,c
 13972   003BA4  51FE               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13973   003BA6  22DA               	addwfc	fsr2h,f,c
 13974   003BA8  50DF               	movf	indf2,w,c
 13975   003BAA  0102               	movlb	2	; () banked
 13976   003BAC  6FD1               	movwf	consumer2QProcessMessage@opc& (0+255),b
 13977                           
 13978                           ; BSR set to: 2
 13979                           ;../event_consumerDualActionQueue.c: 210:     if ( ! (opc&0b00000001)) {
 13980   003BAE  B1D1               	btfsc	consumer2QProcessMessage@opc& (0+255),0,b
 13981   003BB0  D07F               	goto	l466
 13982                           
 13983                           ; BSR set to: 2
 13984                           ;../event_consumerDualActionQueue.c: 214:         for (e=1; e<20 ;e++) {
 13985   003BB2  0E01               	movlw	1
 13986   003BB4  6FDB               	movwf	consumer2QProcessMessage@e& (0+255),b
 13987   003BB6                     l23513:
 13988                           
 13989                           ; BSR set to: 2
 13990                           ;../event_consumerDualActionQueue.c: 215:             action = evs[e];
 13991   003BB6  0E20               	movlw	low _evs
 13992   003BB8  25DB               	addwf	consumer2QProcessMessage@e& (0+255),w,b
 13993   003BBA  6ED9               	movwf	fsr2l,c
 13994   003BBC  6ADA               	clrf	fsr2h,c
 13995   003BBE  0E02               	movlw	high _evs
 13996   003BC0  22DA               	addwfc	fsr2h,f,c
 13997   003BC2  50DF               	movf	indf2,w,c
 13998   003BC4  6FDC               	movwf	consumer2QProcessMessage@action& (0+255),b
 13999                           
 14000                           ; BSR set to: 2
 14001                           ;../event_consumerDualActionQueue.c: 216:             if (action != 0) {
 14002   003BC6  51DC               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14003   003BC8  B4D8               	btfsc	status,2,c
 14004   003BCA  D06C               	goto	l470
 14005                           
 14006                           ; BSR set to: 2
 14007                           ;../event_consumerDualActionQueue.c: 218:                 masked_action = action&0x7F;
 14008   003BCC  51DC               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14009   003BCE  0B7F               	andlw	127
 14010   003BD0  6FD9               	movwf	consumer2QProcessMessage@masked_action& (0+255),b
 14011                           
 14012                           ;../event_consumerDualActionQueue.c: 219:                 if ((masked_action) <= (8 + 5 
      +                          * 16)) {
 14013   003BD2  0E59               	movlw	89
 14014   003BD4  61D9               	cpfslt	consumer2QProcessMessage@masked_action& (0+255),b
 14015   003BD6  D066               	goto	l470
 14016                           
 14017                           ; BSR set to: 2
 14018                           ;../event_consumerDualActionQueue.c: 221:                     if ((masked_action) == 7) 
      +                          {
 14019   003BD8  0E07               	movlw	7
 14020   003BDA  19D9               	xorwf	consumer2QProcessMessage@masked_action& (0+255),w,b
 14021   003BDC  B4D8               	btfsc	status,2,c
 14022   003BDE  D106               	goto	u25760
 14023                           
 14024                           ; BSR set to: 2
 14025                           ;../event_consumerDualActionQueue.c: 224:                     if ((masked_action) < 8) {
 14026   003BE0  0E08               	movlw	8
 14027   003BE2  61D9               	cpfslt	consumer2QProcessMessage@masked_action& (0+255),b
 14028   003BE4  D004               	goto	l23527
 14029                           
 14030                           ; BSR set to: 2
 14031                           ;../event_consumerDualActionQueue.c: 225:                         pushTwoAction(action);
 14032   003BE6  51DC               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14033   003BE8  EC61  F05B         	call	_pushTwoAction
 14034                           
 14035                           ;../event_consumerDualActionQueue.c: 226:                     } else {
 14036   003BEC  D05B               	goto	l470
 14037   003BEE                     l23527:
 14038                           
 14039                           ; BSR set to: 2
 14040                           ;../event_consumerDualActionQueue.c: 227:                         io = (((masked_action)
      +                          -8)/5);
 14041   003BEE  0EF8               	movlw	248
 14042   003BF0  25D9               	addwf	consumer2QProcessMessage@masked_action& (0+255),w,b
 14043   003BF2  0100               	movlb	0	; () banked
 14044   003BF4  6F97               	movwf	___awdiv@dividend& (0+255),b
 14045   003BF6  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 14046   003BF8  0EFF               	movlw	255
 14047   003BFA  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 14048   003BFC  0E00               	movlw	0
 14049   003BFE  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 14050   003C00  0E05               	movlw	5
 14051   003C02  6F99               	movwf	___awdiv@divisor& (0+255),b
 14052   003C04  EC7B  F054         	call	___awdiv	;wreg free
 14053   003C08  0100               	movlb	0	; () banked
 14054   003C0A  5197               	movf	?___awdiv& (0+255),w,b
 14055   003C0C  0102               	movlb	2	; () banked
 14056   003C0E  6FD8               	movwf	consumer2QProcessMessage@io& (0+255),b
 14057                           
 14058                           ;../event_consumerDualActionQueue.c: 228:                         ca = (((masked_action)
      +                          -8)%5);
 14059   003C10  0EF8               	movlw	248
 14060   003C12  25D9               	addwf	consumer2QProcessMessage@masked_action& (0+255),w,b
 14061   003C14  0100               	movlb	0	; () banked
 14062   003C16  6F8D               	movwf	___awmod@dividend& (0+255),b
 14063   003C18  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 14064   003C1A  0EFF               	movlw	255
 14065   003C1C  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 14066   003C1E  0E00               	movlw	0
 14067   003C20  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 14068   003C22  0E05               	movlw	5
 14069   003C24  6F8F               	movwf	___awmod@divisor& (0+255),b
 14070   003C26  EC90  F058         	call	___awmod	;wreg free
 14071   003C2A  0100               	movlb	0	; () banked
 14072   003C2C  518D               	movf	?___awmod& (0+255),w,b
 14073   003C2E  0102               	movlb	2	; () banked
 14074   003C30  6FDA               	movwf	consumer2QProcessMessage@ca& (0+255),b
 14075                           
 14076                           ;../event_consumerDualActionQueue.c: 229:                         switch (getNV((16 + 7*
      +                          (io) + 0))) {
 14077   003C32  D020               	goto	l23549
 14078   003C34                     l23529:
 14079                           
 14080                           ; BSR set to: 0
 14081                           ;../event_consumerDualActionQueue.c: 234:                                 if (getNV((16 
      +                          + 7*(io) + 1)) & 0x80) {
 14082   003C34  0102               	movlb	2	; () banked
 14083   003C36  51D8               	movf	consumer2QProcessMessage@io& (0+255),w,b
 14084   003C38  0D07               	mullw	7
 14085   003C3A  50F3               	movf	243,w,c
 14086   003C3C  0F11               	addlw	17
 14087   003C3E  ECD2  F05F         	call	_getNV
 14088   003C42  0100               	movlb	0	; () banked
 14089   003C44  BF8D               	btfsc	?_getNV& (0+255),7,b
 14090                           
 14091                           ; BSR set to: 0
 14092                           ;../event_consumerDualActionQueue.c: 235:                                     setExpedit
      +                          edActions();
 14093   003C46  EC8A  F064         	call	_setExpeditedActions	;wreg free
 14094   003C4A                     l23533:
 14095                           
 14096                           ;../event_consumerDualActionQueue.c: 240:                                 if (ca == 0) {
 14097   003C4A  0102               	movlb	2	; () banked
 14098   003C4C  51DA               	movf	consumer2QProcessMessage@ca& (0+255),w,b
 14099   003C4E  B4D8               	btfsc	status,2,c
 14100                           
 14101                           ; BSR set to: 2
 14102                           ;../event_consumerDualActionQueue.c: 242:                                     action++;
 14103   003C50  2BDC               	incf	consumer2QProcessMessage@action& (0+255),f,b
 14104                           
 14105                           ; BSR set to: 2
 14106                           ;../event_consumerDualActionQueue.c: 244:                                 if (ca == 4) {
 14107   003C52  0E04               	movlw	4
 14108   003C54  19DA               	xorwf	consumer2QProcessMessage@ca& (0+255),w,b
 14109   003C56  A4D8               	btfss	status,2,c
 14110   003C58  D002               	goto	l23541
 14111                           
 14112                           ; BSR set to: 2
 14113                           ;../event_consumerDualActionQueue.c: 246:                                     action-=2;
 14114   003C5A  0E02               	movlw	2
 14115   003C5C  5FDC               	subwf	consumer2QProcessMessage@action& (0+255),f,b
 14116   003C5E                     l23541:
 14117                           
 14118                           ; BSR set to: 2
 14119                           ;../event_consumerDualActionQueue.c: 248:                                 pushTwoAction(
      +                          action);
 14120   003C5E  51DC               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14121   003C60  EC61  F05B         	call	_pushTwoAction
 14122                           
 14123                           ;../event_consumerDualActionQueue.c: 249:                                 setNormalActio
      +                          ns();
 14124   003C64  EC87  F064         	call	_setNormalActions	;wreg free
 14125                           
 14126                           ;../event_consumerDualActionQueue.c: 250:                                 break;
 14127   003C68  D01D               	goto	l470
 14128   003C6A                     l23545:
 14129                           
 14130                           ; BSR set to: 0
 14131                           ;../event_consumerDualActionQueue.c: 252:                                 pushTwoAction(
      +                          action);
 14132   003C6A  0102               	movlb	2	; () banked
 14133   003C6C  51DC               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14134   003C6E  EC61  F05B         	call	_pushTwoAction
 14135                           
 14136                           ;../event_consumerDualActionQueue.c: 253:                                 break;
 14137   003C72  D018               	goto	l470
 14138   003C74                     l23549:
 14139                           
 14140                           ; BSR set to: 2
 14141   003C74  51D8               	movf	consumer2QProcessMessage@io& (0+255),w,b
 14142   003C76  0D07               	mullw	7
 14143   003C78  50F3               	movf	243,w,c
 14144   003C7A  0F10               	addlw	16
 14145   003C7C  ECD2  F05F         	call	_getNV
 14146                           
 14147                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14148                           ; Switch size 1, requested type "simple"
 14149                           ; Number of cases is 1, Range of values is 0 to 0
 14150                           ; switch strategies available:
 14151                           ; Name         Instructions Cycles
 14152                           ; simple_byte            4     3 (average)
 14153                           ;	Chosen strategy is simple_byte
 14154   003C80  0100               	movlb	0	; () banked
 14155   003C82  518E               	movf	(?_getNV+1)& (0+255),w,b
 14156   003C84  0A00               	xorlw	0	; case 0
 14157   003C86  A4D8               	btfss	status,2,c
 14158   003C88  D00D               	goto	l470
 14159                           
 14160                           ; BSR set to: 0
 14161                           ; Switch size 1, requested type "simple"
 14162                           ; Number of cases is 4, Range of values is 1 to 4
 14163                           ; switch strategies available:
 14164                           ; Name         Instructions Cycles
 14165                           ; simple_byte           13     7 (average)
 14166                           ;	Chosen strategy is simple_byte
 14167   003C8A  518D               	movf	?_getNV& (0+255),w,b
 14168   003C8C  0A01               	xorlw	1	; case 1
 14169   003C8E  B4D8               	btfsc	status,2,c
 14170   003C90  D7D1               	goto	l23529
 14171   003C92  0A03               	xorlw	3	; case 2
 14172   003C94  B4D8               	btfsc	status,2,c
 14173   003C96  D7D9               	goto	l23533
 14174   003C98  0A01               	xorlw	1	; case 3
 14175   003C9A  B4D8               	btfsc	status,2,c
 14176   003C9C  D7D6               	goto	l23533
 14177   003C9E  0A07               	xorlw	7	; case 4
 14178   003CA0  B4D8               	btfsc	status,2,c
 14179   003CA2  D7E3               	goto	l23545
 14180   003CA4                     l470:
 14181                           
 14182                           ;../event_consumerDualActionQueue.c: 261:         }
 14183                           
 14184                           ; BSR set to: 0
 14185   003CA4  0102               	movlb	2	; () banked
 14186   003CA6  2BDB               	incf	consumer2QProcessMessage@e& (0+255),f,b
 14187                           
 14188                           ; BSR set to: 2
 14189   003CA8  0E13               	movlw	19
 14190   003CAA  65DB               	cpfsgt	consumer2QProcessMessage@e& (0+255),b
 14191   003CAC  D784               	goto	l23513
 14192   003CAE  D09E               	goto	u25760
 14193   003CB0                     l466:
 14194                           
 14195                           ; BSR set to: 2
 14196                           ;../event_consumerDualActionQueue.c: 265:         uint8_t nextAction = evs[20 -1];
 14197   003CB0  C233  F2D5         	movff	_evs+19,consumer2QProcessMessage@nextAction
 14198                           
 14199                           ; BSR set to: 2
 14200                           ;../event_consumerDualActionQueue.c: 267:         for (e=20 -1; e>=1 ;e--) {
 14201   003CB4  0E13               	movlw	19
 14202   003CB6  6FDB               	movwf	consumer2QProcessMessage@e& (0+255),b
 14203   003CB8                     l23559:
 14204                           
 14205                           ; BSR set to: 2
 14206                           ;../event_consumerDualActionQueue.c: 268:             uint8_t nextSimultaneous;;../event
      +                          _consumerDualActionQueue.c: 269:             uint8_t firstAction = 0;
 14207   003CB8  0E00               	movlw	0
 14208   003CBA  6FD6               	movwf	consumer2QProcessMessage@firstAction& (0+255),b
 14209                           
 14210                           ; BSR set to: 2
 14211                           ;../event_consumerDualActionQueue.c: 270:             action = nextAction;
 14212   003CBC  C2D5  F2DC         	movff	consumer2QProcessMessage@nextAction,consumer2QProcessMessage@action
 14213                           
 14214                           ; BSR set to: 2
 14215                           ;../event_consumerDualActionQueue.c: 274:             if (e > 1) {
 14216   003CC0  0E01               	movlw	1
 14217   003CC2  65DB               	cpfsgt	consumer2QProcessMessage@e& (0+255),b
 14218   003CC4  D00A               	goto	l23569
 14219                           
 14220                           ; BSR set to: 2
 14221                           ;../event_consumerDualActionQueue.c: 275:                 nextAction = evs[e-1];
 14222   003CC6  0E1F               	movlw	low (_evs+65535)
 14223   003CC8  25DB               	addwf	consumer2QProcessMessage@e& (0+255),w,b
 14224   003CCA  6ED9               	movwf	fsr2l,c
 14225   003CCC  6ADA               	clrf	fsr2h,c
 14226   003CCE  0E02               	movlw	high (_evs+65535)
 14227   003CD0  22DA               	addwfc	fsr2h,f,c
 14228   003CD2  50DF               	movf	indf2,w,c
 14229   003CD4  6FD5               	movwf	consumer2QProcessMessage@nextAction& (0+255),b
 14230                           
 14231                           ; BSR set to: 2
 14232                           ;../event_consumerDualActionQueue.c: 276:                 nextSimultaneous = nextAction 
      +                          & 0x80;
 14233   003CD6  51D5               	movf	consumer2QProcessMessage@nextAction& (0+255),w,b
 14234   003CD8  D001               	goto	L4
 14235   003CDA                     l23569:
 14236                           
 14237                           ; BSR set to: 2
 14238                           ;../event_consumerDualActionQueue.c: 278:                 nextSimultaneous = firstAction
      +                           & 0x80;
 14239   003CDA  51D6               	movf	consumer2QProcessMessage@firstAction& (0+255),w,b
 14240   003CDC                     L4:
 14241   003CDC  0B80               	andlw	128
 14242   003CDE  6FD7               	movwf	consumer2QProcessMessage@nextSimultaneous& (0+255),b
 14243                           
 14244                           ; BSR set to: 2
 14245                           ;../event_consumerDualActionQueue.c: 280:             if (action != 0) {
 14246   003CE0  51DC               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14247   003CE2  B4D8               	btfsc	status,2,c
 14248   003CE4  D07E               	goto	l491
 14249                           
 14250                           ; BSR set to: 2
 14251                           ;../event_consumerDualActionQueue.c: 282:                 if (firstAction == 0) {
 14252   003CE6  51D6               	movf	consumer2QProcessMessage@firstAction& (0+255),w,b
 14253   003CE8  B4D8               	btfsc	status,2,c
 14254                           
 14255                           ; BSR set to: 2
 14256                           ;../event_consumerDualActionQueue.c: 283:                     firstAction = action;
 14257   003CEA  C2DC  F2D6         	movff	consumer2QProcessMessage@action,consumer2QProcessMessage@firstAction
 14258                           
 14259                           ; BSR set to: 2
 14260                           ;../event_consumerDualActionQueue.c: 285:                 action &= 0x7F;
 14261   003CEE  9FDC               	bcf	consumer2QProcessMessage@action& (0+255),7,b
 14262                           
 14263                           ; BSR set to: 2
 14264                           ;../event_consumerDualActionQueue.c: 286:                 if (action <= (8 + 5 * 16)) {
 14265   003CF0  0E59               	movlw	89
 14266   003CF2  61DC               	cpfslt	consumer2QProcessMessage@action& (0+255),b
 14267   003CF4  D076               	goto	l491
 14268                           
 14269                           ; BSR set to: 2
 14270                           ;../event_consumerDualActionQueue.c: 288:                     if ((action) == 7) {
 14271   003CF6  0E07               	movlw	7
 14272   003CF8  19DC               	xorwf	consumer2QProcessMessage@action& (0+255),w,b
 14273   003CFA  B4D8               	btfsc	status,2,c
 14274   003CFC  D077               	goto	u25760
 14275                           
 14276                           ; BSR set to: 2
 14277                           ;../event_consumerDualActionQueue.c: 291:                     if ((action < 8) && (actio
      +                          n != 1)) {
 14278   003CFE  0E08               	movlw	8
 14279   003D00  61DC               	cpfslt	consumer2QProcessMessage@action& (0+255),b
 14280   003D02  D009               	goto	l23593
 14281                           
 14282                           ; BSR set to: 2
 14283   003D04  05DC               	decf	consumer2QProcessMessage@action& (0+255),w,b
 14284   003D06  B4D8               	btfsc	status,2,c
 14285   003D08  D006               	goto	l23593
 14286                           
 14287                           ; BSR set to: 2
 14288                           ;../event_consumerDualActionQueue.c: 292:                         action |= nextSimultan
      +                          eous;
 14289   003D0A  51D7               	movf	consumer2QProcessMessage@nextSimultaneous& (0+255),w,b
 14290   003D0C  13DC               	iorwf	consumer2QProcessMessage@action& (0+255),f,b
 14291                           
 14292                           ; BSR set to: 2
 14293                           ;../event_consumerDualActionQueue.c: 293:                         pushTwoAction(action);
 14294   003D0E  51DC               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14295   003D10  EC61  F05B         	call	_pushTwoAction
 14296                           
 14297                           ;../event_consumerDualActionQueue.c: 294:                     } else {
 14298   003D14  D066               	goto	l491
 14299   003D16                     l23593:
 14300                           
 14301                           ; BSR set to: 2
 14302                           ;../event_consumerDualActionQueue.c: 295:                         io = (((action)-8)/5);
 14303   003D16  0EF8               	movlw	248
 14304   003D18  25DC               	addwf	consumer2QProcessMessage@action& (0+255),w,b
 14305   003D1A  0100               	movlb	0	; () banked
 14306   003D1C  6F97               	movwf	___awdiv@dividend& (0+255),b
 14307   003D1E  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 14308   003D20  0EFF               	movlw	255
 14309   003D22  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 14310   003D24  0E00               	movlw	0
 14311   003D26  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 14312   003D28  0E05               	movlw	5
 14313   003D2A  6F99               	movwf	___awdiv@divisor& (0+255),b
 14314   003D2C  EC7B  F054         	call	___awdiv	;wreg free
 14315   003D30  0100               	movlb	0	; () banked
 14316   003D32  5197               	movf	?___awdiv& (0+255),w,b
 14317   003D34  0102               	movlb	2	; () banked
 14318   003D36  6FD8               	movwf	consumer2QProcessMessage@io& (0+255),b
 14319                           
 14320                           ;../event_consumerDualActionQueue.c: 296:                         ca = (((action)-8)%5);
 14321   003D38  0EF8               	movlw	248
 14322   003D3A  25DC               	addwf	consumer2QProcessMessage@action& (0+255),w,b
 14323   003D3C  0100               	movlb	0	; () banked
 14324   003D3E  6F8D               	movwf	___awmod@dividend& (0+255),b
 14325   003D40  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 14326   003D42  0EFF               	movlw	255
 14327   003D44  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 14328   003D46  0E00               	movlw	0
 14329   003D48  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 14330   003D4A  0E05               	movlw	5
 14331   003D4C  6F8F               	movwf	___awmod@divisor& (0+255),b
 14332   003D4E  EC90  F058         	call	___awmod	;wreg free
 14333   003D52  0100               	movlb	0	; () banked
 14334   003D54  518D               	movf	?___awmod& (0+255),w,b
 14335   003D56  0102               	movlb	2	; () banked
 14336   003D58  6FDA               	movwf	consumer2QProcessMessage@ca& (0+255),b
 14337                           
 14338                           ;../event_consumerDualActionQueue.c: 297:                         switch (getNV((16 + 7*
      +                          (io) + 0))) {
 14339   003D5A  D02B               	goto	l23621
 14340   003D5C                     l23595:
 14341                           
 14342                           ; BSR set to: 0
 14343                           ;../event_consumerDualActionQueue.c: 302:                                 if (getNV((16 
      +                          + 7*(io) + 1)) & 0x80) {
 14344   003D5C  0102               	movlb	2	; () banked
 14345   003D5E  51D8               	movf	consumer2QProcessMessage@io& (0+255),w,b
 14346   003D60  0D07               	mullw	7
 14347   003D62  50F3               	movf	243,w,c
 14348   003D64  0F11               	addlw	17
 14349   003D66  ECD2  F05F         	call	_getNV
 14350   003D6A  0100               	movlb	0	; () banked
 14351   003D6C  BF8D               	btfsc	?_getNV& (0+255),7,b
 14352                           
 14353                           ; BSR set to: 0
 14354                           ;../event_consumerDualActionQueue.c: 303:                                     setExpedit
      +                          edActions();
 14355   003D6E  EC8A  F064         	call	_setExpeditedActions	;wreg free
 14356                           
 14357                           ;../event_consumerDualActionQueue.c: 305:                                 if (ca == 3) {
 14358   003D72  0E03               	movlw	3
 14359   003D74  0102               	movlb	2	; () banked
 14360   003D76  19DA               	xorwf	consumer2QProcessMessage@ca& (0+255),w,b
 14361   003D78  B4D8               	btfsc	status,2,c
 14362                           
 14363                           ; BSR set to: 2
 14364                           ;../event_consumerDualActionQueue.c: 307:                                     action--;
 14365   003D7A  07DC               	decf	consumer2QProcessMessage@action& (0+255),f,b
 14366   003D7C                     l23603:
 14367                           
 14368                           ;../event_consumerDualActionQueue.c: 312:                                 if (ca == 0) {
 14369   003D7C  0102               	movlb	2	; () banked
 14370   003D7E  51DA               	movf	consumer2QProcessMessage@ca& (0+255),w,b
 14371   003D80  A4D8               	btfss	status,2,c
 14372   003D82  D002               	goto	l501
 14373                           
 14374                           ; BSR set to: 2
 14375                           ;../event_consumerDualActionQueue.c: 314:                                     action += 
      +                          2;
 14376   003D84  0E02               	movlw	2
 14377   003D86  27DC               	addwf	consumer2QProcessMessage@action& (0+255),f,b
 14378   003D88                     l501:
 14379                           
 14380                           ; BSR set to: 2
 14381                           ;../event_consumerDualActionQueue.c: 316:                                 if (ca == 4) {
 14382   003D88  0E04               	movlw	4
 14383   003D8A  19DA               	xorwf	consumer2QProcessMessage@ca& (0+255),w,b
 14384   003D8C  A4D8               	btfss	status,2,c
 14385   003D8E  D002               	goto	l502
 14386                           
 14387                           ; BSR set to: 2
 14388                           ;../event_consumerDualActionQueue.c: 318:                                     action -= 
      +                          3;
 14389   003D90  0E03               	movlw	3
 14390   003D92  5FDC               	subwf	consumer2QProcessMessage@action& (0+255),f,b
 14391   003D94                     l502:
 14392                           
 14393                           ; BSR set to: 2
 14394                           ;../event_consumerDualActionQueue.c: 320:                                 action |= next
      +                          Simultaneous;
 14395   003D94  51D7               	movf	consumer2QProcessMessage@nextSimultaneous& (0+255),w,b
 14396   003D96  13DC               	iorwf	consumer2QProcessMessage@action& (0+255),f,b
 14397                           
 14398                           ; BSR set to: 2
 14399                           ;../event_consumerDualActionQueue.c: 321:                                 pushTwoAction(
      +                          action);
 14400   003D98  51DC               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14401   003D9A  EC61  F05B         	call	_pushTwoAction
 14402   003D9E                     l23611:
 14403                           
 14404                           ;../event_consumerDualActionQueue.c: 322:                                 setNormalActio
      +                          ns();
 14405   003D9E  EC87  F064         	call	_setNormalActions	;wreg free
 14406                           
 14407                           ;../event_consumerDualActionQueue.c: 323:                                 break;
 14408   003DA2  D01F               	goto	l491
 14409   003DA4                     l23613:
 14410                           
 14411                           ; BSR set to: 0
 14412                           ;../event_consumerDualActionQueue.c: 325:                                 action |= next
      +                          Simultaneous;
 14413   003DA4  0102               	movlb	2	; () banked
 14414   003DA6  51D7               	movf	consumer2QProcessMessage@nextSimultaneous& (0+255),w,b
 14415   003DA8  13DC               	iorwf	consumer2QProcessMessage@action& (0+255),f,b
 14416                           
 14417                           ; BSR set to: 2
 14418                           ;../event_consumerDualActionQueue.c: 326:                                 pushTwoAction(
      +                          action);
 14419   003DAA  51DC               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14420   003DAC  EC61  F05B         	call	_pushTwoAction
 14421   003DB0  D7F6               	goto	l23611
 14422   003DB2                     l23621:
 14423                           
 14424                           ; BSR set to: 2
 14425   003DB2  51D8               	movf	consumer2QProcessMessage@io& (0+255),w,b
 14426   003DB4  0D07               	mullw	7
 14427   003DB6  50F3               	movf	243,w,c
 14428   003DB8  0F10               	addlw	16
 14429   003DBA  ECD2  F05F         	call	_getNV
 14430                           
 14431                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14432                           ; Switch size 1, requested type "simple"
 14433                           ; Number of cases is 1, Range of values is 0 to 0
 14434                           ; switch strategies available:
 14435                           ; Name         Instructions Cycles
 14436                           ; simple_byte            4     3 (average)
 14437                           ;	Chosen strategy is simple_byte
 14438   003DBE  0100               	movlb	0	; () banked
 14439   003DC0  518E               	movf	(?_getNV+1)& (0+255),w,b
 14440   003DC2  0A00               	xorlw	0	; case 0
 14441   003DC4  A4D8               	btfss	status,2,c
 14442   003DC6  D00D               	goto	l491
 14443                           
 14444                           ; BSR set to: 0
 14445                           ; Switch size 1, requested type "simple"
 14446                           ; Number of cases is 4, Range of values is 1 to 4
 14447                           ; switch strategies available:
 14448                           ; Name         Instructions Cycles
 14449                           ; simple_byte           13     7 (average)
 14450                           ;	Chosen strategy is simple_byte
 14451   003DC8  518D               	movf	?_getNV& (0+255),w,b
 14452   003DCA  0A01               	xorlw	1	; case 1
 14453   003DCC  B4D8               	btfsc	status,2,c
 14454   003DCE  D7C6               	goto	l23595
 14455   003DD0  0A03               	xorlw	3	; case 2
 14456   003DD2  B4D8               	btfsc	status,2,c
 14457   003DD4  D7D3               	goto	l23603
 14458   003DD6  0A01               	xorlw	1	; case 3
 14459   003DD8  B4D8               	btfsc	status,2,c
 14460   003DDA  D7D0               	goto	l23603
 14461   003DDC  0A07               	xorlw	7	; case 4
 14462   003DDE  B4D8               	btfsc	status,2,c
 14463   003DE0  D7E1               	goto	l23613
 14464   003DE2                     l491:
 14465                           
 14466                           ;../event_consumerDualActionQueue.c: 336:         }
 14467                           
 14468                           ; BSR set to: 0
 14469   003DE2  0102               	movlb	2	; () banked
 14470   003DE4  07DB               	decf	consumer2QProcessMessage@e& (0+255),f,b
 14471                           
 14472                           ; BSR set to: 2
 14473   003DE6  51DB               	movf	consumer2QProcessMessage@e& (0+255),w,b
 14474   003DE8  A4D8               	btfss	status,2,c
 14475   003DEA  D766               	goto	l23559
 14476   003DEC                     u25760:
 14477                           
 14478                           ; BSR set to: 2
 14479                           ;../event_consumerDualActionQueue.c: 339:     consumer2QDiagnostics[1].asUint++;
 14480   003DEC  0101               	movlb	1	; () banked
 14481   003DEE  4BBC               	infsnz	(_consumer2QDiagnostics+2)& (0+255),f,b
 14482   003DF0  2BBD               	incf	(_consumer2QDiagnostics+3)& (0+255),f,b
 14483                           
 14484                           ; BSR set to: 1
 14485                           ;../event_consumerDualActionQueue.c: 341:     return PROCESSED;
 14486   003DF2  0E01               	movlw	1
 14487   003DF4  0012               	return		;funcret
 14488   003DF6                     __end_of_consumer2QProcessMessage:
 14489                           	callstack 0
 14490                           
 14491 ;; *************** function _teachProcessMessage *****************
 14492 ;; Defined at:
 14493 ;;		line 383 in file "../../VLCBlib_PIC/event_teach_large.c"
 14494 ;; Parameters:    Size  Location     Type
 14495 ;;  m               2   63[BANK1 ] PTR struct Message
 14496 ;;		 -> poll@m(9), 
 14497 ;; Auto vars:     Size  Location     Type
 14498 ;;		None
 14499 ;; Return value:  Size  Location     Type
 14500 ;;                  1    wreg      enum E12799
 14501 ;; Registers used:
 14502 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 14503 ;; Tracked objects:
 14504 ;;		On entry : 0/0
 14505 ;;		On exit  : 0/0
 14506 ;;		Unchanged: 0/0
 14507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14508 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14510 ;;      Temps:          0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14511 ;;      Totals:         0       0       2       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14512 ;;Total ram usage:        8 bytes
 14513 ;; Hardware stack levels used: 1
 14514 ;; Hardware stack levels required when called: 24
 14515 ;; This function calls:
 14516 ;;		_doEvlrn
 14517 ;;		_doEvuln
 14518 ;;		_doNenrd
 14519 ;;		_doNerd
 14520 ;;		_doNnclr
 14521 ;;		_doNnevn
 14522 ;;		_doReqev
 14523 ;;		_doReval
 14524 ;;		_doRqevn
 14525 ;;		_sendMessage3
 14526 ;;		_sendMessage5
 14527 ;;		_teachCheckLen
 14528 ;; This function is called by:
 14529 ;;		_poll
 14530 ;; This function uses a non-reentrant model
 14531 ;;
 14532                           
 14533                           	psect	text27
 14534   0022F2                     __ptext27:
 14535                           	callstack 0
 14536   0022F2                     _teachProcessMessage:
 14537                           	callstack 5
 14538                           
 14539                           ;../../VLCBlib_PIC/event_teach_large.c: 384:     switch(m->opc) {
 14540                           
 14541                           ;incstack = 0
 14542   0022F2  D318               	goto	l25073
 14543   0022F4                     l24807:
 14544                           
 14545                           ; BSR set to: 2
 14546                           ;../../VLCBlib_PIC/event_teach_large.c: 387:             if (teachCheckLen(m, 3, 0) == P
      +                          ROCESSED) return PROCESSED;
 14547   0022F4  C1FD  F1CF         	movff	teachProcessMessage@m,teachCheckLen@m
 14548   0022F8  C1FE  F1D0         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14549   0022FC  0E03               	movlw	3
 14550   0022FE  0101               	movlb	1	; () banked
 14551   002300  6FD1               	movwf	teachCheckLen@needed& (0+255),b
 14552   002302  0E00               	movlw	0
 14553   002304  6FD2               	movwf	teachCheckLen@learn& (0+255),b
 14554   002306  EC01  F05B         	call	_teachCheckLen	;wreg free
 14555   00230A  06E8               	decf	wreg,f,c
 14556   00230C  A4D8               	btfss	status,2,c
 14557   00230E  D002               	goto	l24813
 14558   002310                     u27060:
 14559   002310  0E01               	movlw	1
 14560   002312  0012               	return	
 14561   002314                     l24813:
 14562                           
 14563                           ;../../VLCBlib_PIC/event_teach_large.c: 388:             if ((m->bytes[0] == nn.bytes.hi
      +                          ) && (m->bytes[1] == nn.bytes.lo)) {
 14564   002314  0101               	movlb	1	; () banked
 14565   002316  EE20 F002          	lfsr	2,2
 14566   00231A  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14567   00231C  26D9               	addwf	fsr2l,f,c
 14568   00231E  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14569   002320  22DA               	addwfc	fsr2h,f,c
 14570   002322  50DE               	movf	postinc2,w,c
 14571   002324  0100               	movlb	0	; () banked
 14572   002326  19B5               	xorwf	(_nn+1)& (0+255),w,b
 14573   002328  A4D8               	btfss	status,2,c
 14574   00232A  D00F               	goto	l24819
 14575                           
 14576                           ; BSR set to: 0
 14577   00232C  0101               	movlb	1	; () banked
 14578   00232E  EE20 F003          	lfsr	2,3
 14579   002332  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14580   002334  26D9               	addwf	fsr2l,f,c
 14581   002336  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14582   002338  22DA               	addwfc	fsr2h,f,c
 14583   00233A  0100               	movlb	0	; () banked
 14584   00233C  51B4               	movf	_nn& (0+255),w,b
 14585   00233E  18DE               	xorwf	postinc2,w,c
 14586   002340  A4D8               	btfss	status,2,c
 14587   002342  D003               	goto	l24819
 14588   002344                     u27080:
 14589                           
 14590                           ;../../VLCBlib_PIC/event_teach_large.c: 389:                 mode_flags |= 1;
 14591   002344  0101               	movlb	1	; () banked
 14592   002346  8165               	bsf	_mode_flags& (0+255),0,b
 14593                           
 14594                           ;../../VLCBlib_PIC/event_teach_large.c: 390:             } else {
 14595   002348  D7E3               	goto	u27060
 14596   00234A                     l24819:
 14597                           
 14598                           ;../../VLCBlib_PIC/event_teach_large.c: 391:                 mode_flags &= ~1;
 14599   00234A  0101               	movlb	1	; () banked
 14600   00234C  9165               	bcf	_mode_flags& (0+255),0,b
 14601   00234E  D7E0               	goto	u27060
 14602   002350                     l24825:
 14603                           
 14604                           ; BSR set to: 2
 14605                           ;../../VLCBlib_PIC/event_teach_large.c: 396:             if (teachCheckLen(m, 4, 0) == P
      +                          ROCESSED) return PROCESSED;
 14606   002350  C1FD  F1CF         	movff	teachProcessMessage@m,teachCheckLen@m
 14607   002354  C1FE  F1D0         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14608   002358  0E04               	movlw	4
 14609   00235A  0101               	movlb	1	; () banked
 14610   00235C  6FD1               	movwf	teachCheckLen@needed& (0+255),b
 14611   00235E  0E00               	movlw	0
 14612   002360  6FD2               	movwf	teachCheckLen@learn& (0+255),b
 14613   002362  EC01  F05B         	call	_teachCheckLen	;wreg free
 14614   002366  06E8               	decf	wreg,f,c
 14615   002368  B4D8               	btfsc	status,2,c
 14616   00236A  D7D2               	goto	u27060
 14617                           
 14618                           ;../../VLCBlib_PIC/event_teach_large.c: 397:             if ((m->bytes[0] == nn.bytes.hi
      +                          ) && (m->bytes[1] == nn.bytes.lo)) {
 14619   00236C  0101               	movlb	1	; () banked
 14620   00236E  EE20 F002          	lfsr	2,2
 14621   002372  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14622   002374  26D9               	addwf	fsr2l,f,c
 14623   002376  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14624   002378  22DA               	addwfc	fsr2h,f,c
 14625   00237A  50DE               	movf	postinc2,w,c
 14626   00237C  0100               	movlb	0	; () banked
 14627   00237E  19B5               	xorwf	(_nn+1)& (0+255),w,b
 14628   002380  A4D8               	btfss	status,2,c
 14629   002382  D022               	goto	l24853
 14630                           
 14631                           ; BSR set to: 0
 14632   002384  0101               	movlb	1	; () banked
 14633   002386  EE20 F003          	lfsr	2,3
 14634   00238A  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14635   00238C  26D9               	addwf	fsr2l,f,c
 14636   00238E  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14637   002390  22DA               	addwfc	fsr2h,f,c
 14638   002392  0100               	movlb	0	; () banked
 14639   002394  51B4               	movf	_nn& (0+255),w,b
 14640   002396  18DE               	xorwf	postinc2,w,c
 14641   002398  A4D8               	btfss	status,2,c
 14642   00239A  D016               	goto	l24853
 14643                           
 14644                           ; BSR set to: 0
 14645                           ;../../VLCBlib_PIC/event_teach_large.c: 398:                 if (m->bytes[2] == MODE_LEA
      +                          RN_ON) {
 14646   00239C  0101               	movlb	1	; () banked
 14647   00239E  EE20 F004          	lfsr	2,4
 14648   0023A2  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14649   0023A4  26D9               	addwf	fsr2l,f,c
 14650   0023A6  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14651   0023A8  22DA               	addwfc	fsr2h,f,c
 14652   0023AA  0E08               	movlw	8
 14653   0023AC  18DE               	xorwf	postinc2,w,c
 14654   0023AE  B4D8               	btfsc	status,2,c
 14655   0023B0  D7C9               	goto	u27080
 14656                           
 14657                           ; BSR set to: 1
 14658   0023B2  EE20 F004          	lfsr	2,4
 14659   0023B6  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14660   0023B8  26D9               	addwf	fsr2l,f,c
 14661   0023BA  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14662   0023BC  22DA               	addwfc	fsr2h,f,c
 14663   0023BE  0E09               	movlw	9
 14664   0023C0  18DE               	xorwf	postinc2,w,c
 14665   0023C2  B4D8               	btfsc	status,2,c
 14666   0023C4  D7C2               	goto	l24819
 14667   0023C6  D002               	goto	l24855
 14668   0023C8                     l24853:
 14669                           
 14670                           ; BSR set to: 0
 14671                           ;../../VLCBlib_PIC/event_teach_large.c: 409:                 mode_flags &= ~1;
 14672   0023C8  0101               	movlb	1	; () banked
 14673   0023CA  9165               	bcf	_mode_flags& (0+255),0,b
 14674   0023CC                     l24855:
 14675                           
 14676                           ;../../VLCBlib_PIC/event_teach_large.c: 411:             return NOT_PROCESSED;
 14677   0023CC  0E00               	movlw	0
 14678   0023CE  0012               	return	
 14679   0023D0                     l24859:
 14680                           
 14681                           ; BSR set to: 2
 14682                           ;../../VLCBlib_PIC/event_teach_large.c: 415:             if (teachCheckLen(m, 7, 1) == P
      +                          ROCESSED) {
 14683   0023D0  C1FD  F1CF         	movff	teachProcessMessage@m,teachCheckLen@m
 14684   0023D4  C1FE  F1D0         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14685   0023D8  0E07               	movlw	7
 14686   0023DA  0101               	movlb	1	; () banked
 14687   0023DC  6FD1               	movwf	teachCheckLen@needed& (0+255),b
 14688   0023DE  0E01               	movlw	1
 14689   0023E0  6FD2               	movwf	teachCheckLen@learn& (0+255),b
 14690   0023E2  EC01  F05B         	call	_teachCheckLen	;wreg free
 14691   0023E6  06E8               	decf	wreg,f,c
 14692   0023E8  A4D8               	btfss	status,2,c
 14693   0023EA  D00B               	goto	l2760
 14694                           
 14695                           ;../../VLCBlib_PIC/event_teach_large.c: 416:                 sendMessage3(OPC_CMDERR, nn
      +                          .bytes.hi, nn.bytes.lo, CMDERR_INV_CMD);
 14696   0023EC  C0B5  F0A7         	movff	_nn+1,sendMessage3@data1
 14697   0023F0  C0B4  F0A8         	movff	_nn,sendMessage3@data2
 14698   0023F4  0E01               	movlw	1
 14699   0023F6  0100               	movlb	0	; () banked
 14700   0023F8  6FA9               	movwf	sendMessage3@data3& (0+255),b
 14701   0023FA  0E6F               	movlw	111
 14702   0023FC  ECA5  F061         	call	_sendMessage3
 14703   002400  D787               	goto	u27060
 14704   002402                     l2760:
 14705                           
 14706                           ;../../VLCBlib_PIC/event_teach_large.c: 420:             if (! (mode_flags & 1)) return 
      +                          PROCESSED;
 14707   002402  0101               	movlb	1	; () banked
 14708   002404  A165               	btfss	_mode_flags& (0+255),0,b
 14709   002406  D784               	goto	u27060
 14710                           
 14711                           ; BSR set to: 1
 14712                           ;../../VLCBlib_PIC/event_teach_large.c: 422:             doEvlrn((uint16_t)(m->bytes[0]<
      +                          <8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[4], m->bytes[5
      +                          ]);
 14713   002408  EE20 F003          	lfsr	2,3
 14714   00240C  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14715   00240E  26D9               	addwf	fsr2l,f,c
 14716   002410  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14717   002412  22DA               	addwfc	fsr2h,f,c
 14718   002414  50DF               	movf	indf2,w,c
 14719   002416  0102               	movlb	2	; () banked
 14720   002418  6FCC               	movwf	??_teachProcessMessage& (0+255),b
 14721   00241A  0101               	movlb	1	; () banked
 14722   00241C  EE20 F002          	lfsr	2,2
 14723   002420  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14724   002422  26D9               	addwf	fsr2l,f,c
 14725   002424  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14726   002426  22DA               	addwfc	fsr2h,f,c
 14727   002428  50DF               	movf	indf2,w,c
 14728   00242A  0102               	movlb	2	; () banked
 14729   00242C  6FCD               	movwf	(??_teachProcessMessage+1)& (0+255),b
 14730   00242E  51CC               	movf	??_teachProcessMessage& (0+255),w,b
 14731   002430  0101               	movlb	1	; () banked
 14732   002432  6FF2               	movwf	doEvlrn@nodeNumber& (0+255),b
 14733   002434  C2CD  F1F3         	movff	??_teachProcessMessage+1,doEvlrn@nodeNumber+1
 14734   002438  EE20 F005          	lfsr	2,5
 14735   00243C  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14736   00243E  26D9               	addwf	fsr2l,f,c
 14737   002440  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14738   002442  22DA               	addwfc	fsr2h,f,c
 14739   002444  50DF               	movf	indf2,w,c
 14740   002446  0102               	movlb	2	; () banked
 14741   002448  6FCF               	movwf	(??_teachProcessMessage+3)& (0+255),b
 14742   00244A  0101               	movlb	1	; () banked
 14743   00244C  EE20 F004          	lfsr	2,4
 14744   002450  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14745   002452  26D9               	addwf	fsr2l,f,c
 14746   002454  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14747   002456  22DA               	addwfc	fsr2h,f,c
 14748   002458  50DF               	movf	indf2,w,c
 14749   00245A  0102               	movlb	2	; () banked
 14750   00245C  6FD0               	movwf	(??_teachProcessMessage+4)& (0+255),b
 14751   00245E  51CF               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 14752   002460  0101               	movlb	1	; () banked
 14753   002462  6FF4               	movwf	doEvlrn@eventNumber& (0+255),b
 14754   002464  C2D0  F1F5         	movff	??_teachProcessMessage+4,doEvlrn@eventNumber+1
 14755   002468  EE20 F006          	lfsr	2,6
 14756   00246C  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14757   00246E  26D9               	addwf	fsr2l,f,c
 14758   002470  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14759   002472  22DA               	addwfc	fsr2h,f,c
 14760   002474  50DF               	movf	indf2,w,c
 14761   002476  6FF6               	movwf	doEvlrn@evNum& (0+255),b
 14762   002478  EE20 F007          	lfsr	2,7
 14763   00247C  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14764   00247E  26D9               	addwf	fsr2l,f,c
 14765   002480  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14766   002482  22DA               	addwfc	fsr2h,f,c
 14767   002484  50DF               	movf	indf2,w,c
 14768   002486  6FF7               	movwf	doEvlrn@evVal& (0+255),b
 14769   002488  EC7F  F04A         	call	_doEvlrn	;wreg free
 14770   00248C  D741               	goto	u27060
 14771   00248E                     l24877:
 14772                           
 14773                           ; BSR set to: 2
 14774                           ;../../VLCBlib_PIC/event_teach_large.c: 425:             if (teachCheckLen(m, 5, 1) == P
      +                          ROCESSED) return PROCESSED;
 14775   00248E  C1FD  F1CF         	movff	teachProcessMessage@m,teachCheckLen@m
 14776   002492  C1FE  F1D0         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14777   002496  0E05               	movlw	5
 14778   002498  0101               	movlb	1	; () banked
 14779   00249A  6FD1               	movwf	teachCheckLen@needed& (0+255),b
 14780   00249C  0E01               	movlw	1
 14781   00249E  6FD2               	movwf	teachCheckLen@learn& (0+255),b
 14782   0024A0  EC01  F05B         	call	_teachCheckLen	;wreg free
 14783   0024A4  06E8               	decf	wreg,f,c
 14784   0024A6  B4D8               	btfsc	status,2,c
 14785   0024A8  D733               	goto	u27060
 14786                           
 14787                           ;../../VLCBlib_PIC/event_teach_large.c: 426:             if (! (mode_flags & 1)) return 
      +                          PROCESSED;
 14788   0024AA  0101               	movlb	1	; () banked
 14789   0024AC  A165               	btfss	_mode_flags& (0+255),0,b
 14790   0024AE  D730               	goto	u27060
 14791                           
 14792                           ; BSR set to: 1
 14793                           ;../../VLCBlib_PIC/event_teach_large.c: 428:             doEvuln((uint16_t)(m->bytes[0]<
      +                          <8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]));
 14794   0024B0  EE20 F003          	lfsr	2,3
 14795   0024B4  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14796   0024B6  26D9               	addwf	fsr2l,f,c
 14797   0024B8  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14798   0024BA  22DA               	addwfc	fsr2h,f,c
 14799   0024BC  50DF               	movf	indf2,w,c
 14800   0024BE  0102               	movlb	2	; () banked
 14801   0024C0  6FCC               	movwf	??_teachProcessMessage& (0+255),b
 14802   0024C2  0101               	movlb	1	; () banked
 14803   0024C4  EE20 F002          	lfsr	2,2
 14804   0024C8  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14805   0024CA  26D9               	addwf	fsr2l,f,c
 14806   0024CC  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14807   0024CE  22DA               	addwfc	fsr2h,f,c
 14808   0024D0  50DF               	movf	indf2,w,c
 14809   0024D2  0102               	movlb	2	; () banked
 14810   0024D4  6FCD               	movwf	(??_teachProcessMessage+1)& (0+255),b
 14811   0024D6  51CC               	movf	??_teachProcessMessage& (0+255),w,b
 14812   0024D8  0101               	movlb	1	; () banked
 14813   0024DA  6FD2               	movwf	doEvuln@nodeNumber& (0+255),b
 14814   0024DC  C2CD  F1D3         	movff	??_teachProcessMessage+1,doEvuln@nodeNumber+1
 14815   0024E0  EE20 F005          	lfsr	2,5
 14816   0024E4  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14817   0024E6  26D9               	addwf	fsr2l,f,c
 14818   0024E8  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14819   0024EA  22DA               	addwfc	fsr2h,f,c
 14820   0024EC  50DF               	movf	indf2,w,c
 14821   0024EE  0102               	movlb	2	; () banked
 14822   0024F0  6FCF               	movwf	(??_teachProcessMessage+3)& (0+255),b
 14823   0024F2  0101               	movlb	1	; () banked
 14824   0024F4  EE20 F004          	lfsr	2,4
 14825   0024F8  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14826   0024FA  26D9               	addwf	fsr2l,f,c
 14827   0024FC  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14828   0024FE  22DA               	addwfc	fsr2h,f,c
 14829   002500  50DF               	movf	indf2,w,c
 14830   002502  0102               	movlb	2	; () banked
 14831   002504  6FD0               	movwf	(??_teachProcessMessage+4)& (0+255),b
 14832   002506  51CF               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 14833   002508  0101               	movlb	1	; () banked
 14834   00250A  6FD4               	movwf	doEvuln@eventNumber& (0+255),b
 14835   00250C  C2D0  F1D5         	movff	??_teachProcessMessage+4,doEvuln@eventNumber+1
 14836   002510  ECBD  F056         	call	_doEvuln	;wreg free
 14837   002514  D6FD               	goto	u27060
 14838   002516                     l24893:
 14839                           
 14840                           ; BSR set to: 2
 14841                           ;../../VLCBlib_PIC/event_teach_large.c: 431:             if (teachCheckLen(m, 6, 1) == P
      +                          ROCESSED) return PROCESSED;
 14842   002516  C1FD  F1CF         	movff	teachProcessMessage@m,teachCheckLen@m
 14843   00251A  C1FE  F1D0         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14844   00251E  0E06               	movlw	6
 14845   002520  0101               	movlb	1	; () banked
 14846   002522  6FD1               	movwf	teachCheckLen@needed& (0+255),b
 14847   002524  0E01               	movlw	1
 14848   002526  6FD2               	movwf	teachCheckLen@learn& (0+255),b
 14849   002528  EC01  F05B         	call	_teachCheckLen	;wreg free
 14850   00252C  06E8               	decf	wreg,f,c
 14851   00252E  B4D8               	btfsc	status,2,c
 14852   002530  D6EF               	goto	u27060
 14853                           
 14854                           ;../../VLCBlib_PIC/event_teach_large.c: 432:             if (! (mode_flags & 1)) return 
      +                          PROCESSED;
 14855   002532  0101               	movlb	1	; () banked
 14856   002534  A165               	btfss	_mode_flags& (0+255),0,b
 14857   002536  D6EC               	goto	u27060
 14858                           
 14859                           ; BSR set to: 1
 14860                           ;../../VLCBlib_PIC/event_teach_large.c: 434:             doReqev((uint16_t)(m->bytes[0]<
      +                          <8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[4]);
 14861   002538  EE20 F003          	lfsr	2,3
 14862   00253C  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14863   00253E  26D9               	addwf	fsr2l,f,c
 14864   002540  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14865   002542  22DA               	addwfc	fsr2h,f,c
 14866   002544  50DF               	movf	indf2,w,c
 14867   002546  0102               	movlb	2	; () banked
 14868   002548  6FCC               	movwf	??_teachProcessMessage& (0+255),b
 14869   00254A  0101               	movlb	1	; () banked
 14870   00254C  EE20 F002          	lfsr	2,2
 14871   002550  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14872   002552  26D9               	addwf	fsr2l,f,c
 14873   002554  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14874   002556  22DA               	addwfc	fsr2h,f,c
 14875   002558  50DF               	movf	indf2,w,c
 14876   00255A  0102               	movlb	2	; () banked
 14877   00255C  6FCD               	movwf	(??_teachProcessMessage+1)& (0+255),b
 14878   00255E  51CC               	movf	??_teachProcessMessage& (0+255),w,b
 14879   002560  0101               	movlb	1	; () banked
 14880   002562  6FCC               	movwf	doReqev@nodeNumber& (0+255),b
 14881   002564  C2CD  F1CD         	movff	??_teachProcessMessage+1,doReqev@nodeNumber+1
 14882   002568  EE20 F005          	lfsr	2,5
 14883   00256C  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14884   00256E  26D9               	addwf	fsr2l,f,c
 14885   002570  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14886   002572  22DA               	addwfc	fsr2h,f,c
 14887   002574  50DF               	movf	indf2,w,c
 14888   002576  0102               	movlb	2	; () banked
 14889   002578  6FCF               	movwf	(??_teachProcessMessage+3)& (0+255),b
 14890   00257A  0101               	movlb	1	; () banked
 14891   00257C  EE20 F004          	lfsr	2,4
 14892   002580  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14893   002582  26D9               	addwf	fsr2l,f,c
 14894   002584  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14895   002586  22DA               	addwfc	fsr2h,f,c
 14896   002588  50DF               	movf	indf2,w,c
 14897   00258A  0102               	movlb	2	; () banked
 14898   00258C  6FD0               	movwf	(??_teachProcessMessage+4)& (0+255),b
 14899   00258E  51CF               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 14900   002590  0101               	movlb	1	; () banked
 14901   002592  6FCE               	movwf	doReqev@eventNumber& (0+255),b
 14902   002594  C2D0  F1CF         	movff	??_teachProcessMessage+4,doReqev@eventNumber+1
 14903   002598  EE20 F006          	lfsr	2,6
 14904   00259C  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14905   00259E  26D9               	addwf	fsr2l,f,c
 14906   0025A0  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14907   0025A2  22DA               	addwfc	fsr2h,f,c
 14908   0025A4  50DF               	movf	indf2,w,c
 14909   0025A6  6FD0               	movwf	doReqev@evNum& (0+255),b
 14910   0025A8  EC71  F03E         	call	_doReqev	;wreg free
 14911   0025AC  D6B1               	goto	u27060
 14912   0025AE                     l24909:
 14913                           
 14914                           ; BSR set to: 2
 14915                           ;../../VLCBlib_PIC/event_teach_large.c: 438:             if (teachCheckLen(m, 3, 0) == P
      +                          ROCESSED) return PROCESSED;
 14916   0025AE  C1FD  F1CF         	movff	teachProcessMessage@m,teachCheckLen@m
 14917   0025B2  C1FE  F1D0         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14918   0025B6  0E03               	movlw	3
 14919   0025B8  0101               	movlb	1	; () banked
 14920   0025BA  6FD1               	movwf	teachCheckLen@needed& (0+255),b
 14921   0025BC  0E00               	movlw	0
 14922   0025BE  6FD2               	movwf	teachCheckLen@learn& (0+255),b
 14923   0025C0  EC01  F05B         	call	_teachCheckLen	;wreg free
 14924   0025C4  06E8               	decf	wreg,f,c
 14925   0025C6  B4D8               	btfsc	status,2,c
 14926   0025C8  D6A3               	goto	u27060
 14927                           
 14928                           ;../../VLCBlib_PIC/event_teach_large.c: 439:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14929   0025CA  0101               	movlb	1	; () banked
 14930   0025CC  EE20 F002          	lfsr	2,2
 14931   0025D0  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14932   0025D2  26D9               	addwf	fsr2l,f,c
 14933   0025D4  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14934   0025D6  22DA               	addwfc	fsr2h,f,c
 14935   0025D8  50DE               	movf	postinc2,w,c
 14936   0025DA  0100               	movlb	0	; () banked
 14937   0025DC  19B5               	xorwf	(_nn+1)& (0+255),w,b
 14938   0025DE  A4D8               	btfss	status,2,c
 14939   0025E0  D697               	goto	u27060
 14940                           
 14941                           ; BSR set to: 0
 14942   0025E2  0101               	movlb	1	; () banked
 14943   0025E4  EE20 F003          	lfsr	2,3
 14944   0025E8  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14945   0025EA  26D9               	addwf	fsr2l,f,c
 14946   0025EC  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14947   0025EE  22DA               	addwfc	fsr2h,f,c
 14948   0025F0  0100               	movlb	0	; () banked
 14949   0025F2  51B4               	movf	_nn& (0+255),w,b
 14950   0025F4  18DE               	xorwf	postinc2,w,c
 14951   0025F6  A4D8               	btfss	status,2,c
 14952   0025F8  D68B               	goto	u27060
 14953   0025FA  D6A7               	goto	l24819
 14954   0025FC                     l24929:
 14955                           
 14956                           ; BSR set to: 2
 14957                           ;../../VLCBlib_PIC/event_teach_large.c: 444:             if (teachCheckLen(m, 3, 1) == P
      +                          ROCESSED) return PROCESSED;
 14958   0025FC  C1FD  F1CF         	movff	teachProcessMessage@m,teachCheckLen@m
 14959   002600  C1FE  F1D0         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14960   002604  0E03               	movlw	3
 14961   002606  0101               	movlb	1	; () banked
 14962   002608  6FD1               	movwf	teachCheckLen@needed& (0+255),b
 14963   00260A  0E01               	movlw	1
 14964   00260C  6FD2               	movwf	teachCheckLen@learn& (0+255),b
 14965   00260E  EC01  F05B         	call	_teachCheckLen	;wreg free
 14966   002612  06E8               	decf	wreg,f,c
 14967   002614  B4D8               	btfsc	status,2,c
 14968   002616  D67C               	goto	u27060
 14969                           
 14970                           ;../../VLCBlib_PIC/event_teach_large.c: 445:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14971   002618  0101               	movlb	1	; () banked
 14972   00261A  EE20 F002          	lfsr	2,2
 14973   00261E  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14974   002620  26D9               	addwf	fsr2l,f,c
 14975   002622  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14976   002624  22DA               	addwfc	fsr2h,f,c
 14977   002626  50DE               	movf	postinc2,w,c
 14978   002628  0100               	movlb	0	; () banked
 14979   00262A  19B5               	xorwf	(_nn+1)& (0+255),w,b
 14980   00262C  A4D8               	btfss	status,2,c
 14981   00262E  D670               	goto	u27060
 14982                           
 14983                           ; BSR set to: 0
 14984   002630  0101               	movlb	1	; () banked
 14985   002632  EE20 F003          	lfsr	2,3
 14986   002636  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14987   002638  26D9               	addwf	fsr2l,f,c
 14988   00263A  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14989   00263C  22DA               	addwfc	fsr2h,f,c
 14990   00263E  0100               	movlb	0	; () banked
 14991   002640  51B4               	movf	_nn& (0+255),w,b
 14992   002642  18DE               	xorwf	postinc2,w,c
 14993   002644  A4D8               	btfss	status,2,c
 14994   002646  D664               	goto	u27060
 14995                           
 14996                           ; BSR set to: 0
 14997                           ;../../VLCBlib_PIC/event_teach_large.c: 447:             if (! (mode_flags & 1)) {
 14998   002648  0101               	movlb	1	; () banked
 14999   00264A  B165               	btfsc	_mode_flags& (0+255),0,b
 15000   00264C  D019               	goto	l24949
 15001                           
 15002                           ; BSR set to: 1
 15003                           ;../../VLCBlib_PIC/event_teach_large.c: 448:                 sendMessage3(OPC_CMDERR, nn
      +                          .bytes.hi, nn.bytes.lo, CMDERR_NOT_LRN);
 15004   00264E  C0B5  F0A7         	movff	_nn+1,sendMessage3@data1
 15005   002652  C0B4  F0A8         	movff	_nn,sendMessage3@data2
 15006   002656  0E02               	movlw	2
 15007   002658  0100               	movlb	0	; () banked
 15008   00265A  6FA9               	movwf	sendMessage3@data3& (0+255),b
 15009   00265C  0E6F               	movlw	111
 15010   00265E  ECA5  F061         	call	_sendMessage3
 15011                           
 15012                           ;../../VLCBlib_PIC/event_teach_large.c: 450:                 sendMessage5(OPC_GRSP, nn.b
      +                          ytes.hi, nn.bytes.lo, OPC_NNCLR, SERVICE_ID_OLD_TEACH, CMDERR_NOT_LRN);
 15013   002662  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 15014   002666  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 15015   00266A  0E55               	movlw	85
 15016   00266C  0101               	movlb	1	; () banked
 15017   00266E  6FC8               	movwf	sendMessage5@data3& (0+255),b
 15018   002670  0E04               	movlw	4
 15019   002672  6FC9               	movwf	sendMessage5@data4& (0+255),b
 15020   002674  0E02               	movlw	2
 15021   002676  6FCA               	movwf	sendMessage5@data5& (0+255),b
 15022   002678  0EAF               	movlw	175
 15023   00267A  EC47  F061         	call	_sendMessage5
 15024   00267E  D648               	goto	u27060
 15025   002680                     l24949:
 15026                           
 15027                           ; BSR set to: 1
 15028                           ;../../VLCBlib_PIC/event_teach_large.c: 455:             doNnclr();
 15029   002680  ECE7  F060         	call	_doNnclr	;wreg free
 15030                           
 15031                           ;../../VLCBlib_PIC/event_teach_large.c: 456:             break;
 15032   002684  D6A3               	goto	l24855
 15033   002686                     l24951:
 15034                           
 15035                           ; BSR set to: 2
 15036                           ;../../VLCBlib_PIC/event_teach_large.c: 458:             if (teachCheckLen(m, 3, 0) == P
      +                          ROCESSED) return PROCESSED;
 15037   002686  C1FD  F1CF         	movff	teachProcessMessage@m,teachCheckLen@m
 15038   00268A  C1FE  F1D0         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 15039   00268E  0E03               	movlw	3
 15040   002690  0101               	movlb	1	; () banked
 15041   002692  6FD1               	movwf	teachCheckLen@needed& (0+255),b
 15042   002694  0E00               	movlw	0
 15043   002696  6FD2               	movwf	teachCheckLen@learn& (0+255),b
 15044   002698  EC01  F05B         	call	_teachCheckLen	;wreg free
 15045   00269C  06E8               	decf	wreg,f,c
 15046   00269E  B4D8               	btfsc	status,2,c
 15047   0026A0  D637               	goto	u27060
 15048                           
 15049                           ;../../VLCBlib_PIC/event_teach_large.c: 459:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 15050   0026A2  0101               	movlb	1	; () banked
 15051   0026A4  EE20 F002          	lfsr	2,2
 15052   0026A8  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15053   0026AA  26D9               	addwf	fsr2l,f,c
 15054   0026AC  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15055   0026AE  22DA               	addwfc	fsr2h,f,c
 15056   0026B0  50DE               	movf	postinc2,w,c
 15057   0026B2  0100               	movlb	0	; () banked
 15058   0026B4  19B5               	xorwf	(_nn+1)& (0+255),w,b
 15059   0026B6  A4D8               	btfss	status,2,c
 15060   0026B8  D62B               	goto	u27060
 15061                           
 15062                           ; BSR set to: 0
 15063   0026BA  0101               	movlb	1	; () banked
 15064   0026BC  EE20 F003          	lfsr	2,3
 15065   0026C0  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15066   0026C2  26D9               	addwf	fsr2l,f,c
 15067   0026C4  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15068   0026C6  22DA               	addwfc	fsr2h,f,c
 15069   0026C8  0100               	movlb	0	; () banked
 15070   0026CA  51B4               	movf	_nn& (0+255),w,b
 15071   0026CC  18DE               	xorwf	postinc2,w,c
 15072   0026CE  A4D8               	btfss	status,2,c
 15073   0026D0  D61F               	goto	u27060
 15074                           
 15075                           ; BSR set to: 0
 15076                           ;../../VLCBlib_PIC/event_teach_large.c: 461:             doNerd();
 15077   0026D2  ECCE  F063         	call	_doNerd	;wreg free
 15078   0026D6  D61C               	goto	u27060
 15079   0026D8                     l24971:
 15080                           
 15081                           ; BSR set to: 2
 15082                           ;../../VLCBlib_PIC/event_teach_large.c: 464:             if (teachCheckLen(m, 3, 0) == P
      +                          ROCESSED) return PROCESSED;
 15083   0026D8  C1FD  F1CF         	movff	teachProcessMessage@m,teachCheckLen@m
 15084   0026DC  C1FE  F1D0         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 15085   0026E0  0E03               	movlw	3
 15086   0026E2  0101               	movlb	1	; () banked
 15087   0026E4  6FD1               	movwf	teachCheckLen@needed& (0+255),b
 15088   0026E6  0E00               	movlw	0
 15089   0026E8  6FD2               	movwf	teachCheckLen@learn& (0+255),b
 15090   0026EA  EC01  F05B         	call	_teachCheckLen	;wreg free
 15091   0026EE  06E8               	decf	wreg,f,c
 15092   0026F0  B4D8               	btfsc	status,2,c
 15093   0026F2  D60E               	goto	u27060
 15094                           
 15095                           ;../../VLCBlib_PIC/event_teach_large.c: 465:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 15096   0026F4  0101               	movlb	1	; () banked
 15097   0026F6  EE20 F002          	lfsr	2,2
 15098   0026FA  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15099   0026FC  26D9               	addwf	fsr2l,f,c
 15100   0026FE  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15101   002700  22DA               	addwfc	fsr2h,f,c
 15102   002702  50DE               	movf	postinc2,w,c
 15103   002704  0100               	movlb	0	; () banked
 15104   002706  19B5               	xorwf	(_nn+1)& (0+255),w,b
 15105   002708  A4D8               	btfss	status,2,c
 15106   00270A  D602               	goto	u27060
 15107                           
 15108                           ; BSR set to: 0
 15109   00270C  0101               	movlb	1	; () banked
 15110   00270E  EE20 F003          	lfsr	2,3
 15111   002712  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15112   002714  26D9               	addwf	fsr2l,f,c
 15113   002716  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15114   002718  22DA               	addwfc	fsr2h,f,c
 15115   00271A  0100               	movlb	0	; () banked
 15116   00271C  51B4               	movf	_nn& (0+255),w,b
 15117   00271E  18DE               	xorwf	postinc2,w,c
 15118   002720  A4D8               	btfss	status,2,c
 15119   002722  D5F6               	goto	u27060
 15120                           
 15121                           ; BSR set to: 0
 15122                           ;../../VLCBlib_PIC/event_teach_large.c: 467:             doNnevn();
 15123   002724  EC6D  F059         	call	_doNnevn	;wreg free
 15124   002728  D5F3               	goto	u27060
 15125   00272A                     l24991:
 15126                           
 15127                           ; BSR set to: 2
 15128                           ;../../VLCBlib_PIC/event_teach_large.c: 470:             if (teachCheckLen(m, 3, 0) == P
      +                          ROCESSED) return PROCESSED;
 15129   00272A  C1FD  F1CF         	movff	teachProcessMessage@m,teachCheckLen@m
 15130   00272E  C1FE  F1D0         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 15131   002732  0E03               	movlw	3
 15132   002734  0101               	movlb	1	; () banked
 15133   002736  6FD1               	movwf	teachCheckLen@needed& (0+255),b
 15134   002738  0E00               	movlw	0
 15135   00273A  6FD2               	movwf	teachCheckLen@learn& (0+255),b
 15136   00273C  EC01  F05B         	call	_teachCheckLen	;wreg free
 15137   002740  06E8               	decf	wreg,f,c
 15138   002742  B4D8               	btfsc	status,2,c
 15139   002744  D5E5               	goto	u27060
 15140                           
 15141                           ;../../VLCBlib_PIC/event_teach_large.c: 471:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 15142   002746  0101               	movlb	1	; () banked
 15143   002748  EE20 F002          	lfsr	2,2
 15144   00274C  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15145   00274E  26D9               	addwf	fsr2l,f,c
 15146   002750  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15147   002752  22DA               	addwfc	fsr2h,f,c
 15148   002754  50DE               	movf	postinc2,w,c
 15149   002756  0100               	movlb	0	; () banked
 15150   002758  19B5               	xorwf	(_nn+1)& (0+255),w,b
 15151   00275A  A4D8               	btfss	status,2,c
 15152   00275C  D5D9               	goto	u27060
 15153                           
 15154                           ; BSR set to: 0
 15155   00275E  0101               	movlb	1	; () banked
 15156   002760  EE20 F003          	lfsr	2,3
 15157   002764  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15158   002766  26D9               	addwf	fsr2l,f,c
 15159   002768  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15160   00276A  22DA               	addwfc	fsr2h,f,c
 15161   00276C  0100               	movlb	0	; () banked
 15162   00276E  51B4               	movf	_nn& (0+255),w,b
 15163   002770  18DE               	xorwf	postinc2,w,c
 15164   002772  A4D8               	btfss	status,2,c
 15165   002774  D5CD               	goto	u27060
 15166                           
 15167                           ; BSR set to: 0
 15168                           ;../../VLCBlib_PIC/event_teach_large.c: 473:             doRqevn();
 15169   002776  EC67  F060         	call	_doRqevn	;wreg free
 15170   00277A  D5CA               	goto	u27060
 15171   00277C                     l25011:
 15172                           
 15173                           ; BSR set to: 2
 15174                           ;../../VLCBlib_PIC/event_teach_large.c: 476:             if (teachCheckLen(m, 4, 0) == P
      +                          ROCESSED) return PROCESSED;
 15175   00277C  C1FD  F1CF         	movff	teachProcessMessage@m,teachCheckLen@m
 15176   002780  C1FE  F1D0         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 15177   002784  0E04               	movlw	4
 15178   002786  0101               	movlb	1	; () banked
 15179   002788  6FD1               	movwf	teachCheckLen@needed& (0+255),b
 15180   00278A  0E00               	movlw	0
 15181   00278C  6FD2               	movwf	teachCheckLen@learn& (0+255),b
 15182   00278E  EC01  F05B         	call	_teachCheckLen	;wreg free
 15183   002792  06E8               	decf	wreg,f,c
 15184   002794  B4D8               	btfsc	status,2,c
 15185   002796  D5BC               	goto	u27060
 15186                           
 15187                           ;../../VLCBlib_PIC/event_teach_large.c: 477:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 15188   002798  0101               	movlb	1	; () banked
 15189   00279A  EE20 F002          	lfsr	2,2
 15190   00279E  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15191   0027A0  26D9               	addwf	fsr2l,f,c
 15192   0027A2  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15193   0027A4  22DA               	addwfc	fsr2h,f,c
 15194   0027A6  50DE               	movf	postinc2,w,c
 15195   0027A8  0100               	movlb	0	; () banked
 15196   0027AA  19B5               	xorwf	(_nn+1)& (0+255),w,b
 15197   0027AC  A4D8               	btfss	status,2,c
 15198   0027AE  D5B0               	goto	u27060
 15199                           
 15200                           ; BSR set to: 0
 15201   0027B0  0101               	movlb	1	; () banked
 15202   0027B2  EE20 F003          	lfsr	2,3
 15203   0027B6  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15204   0027B8  26D9               	addwf	fsr2l,f,c
 15205   0027BA  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15206   0027BC  22DA               	addwfc	fsr2h,f,c
 15207   0027BE  0100               	movlb	0	; () banked
 15208   0027C0  51B4               	movf	_nn& (0+255),w,b
 15209   0027C2  18DE               	xorwf	postinc2,w,c
 15210   0027C4  A4D8               	btfss	status,2,c
 15211   0027C6  D5A4               	goto	u27060
 15212                           
 15213                           ; BSR set to: 0
 15214                           ;../../VLCBlib_PIC/event_teach_large.c: 479:             doNenrd(m->bytes[2]);
 15215   0027C8  0101               	movlb	1	; () banked
 15216   0027CA  EE20 F004          	lfsr	2,4
 15217   0027CE  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15218   0027D0  26D9               	addwf	fsr2l,f,c
 15219   0027D2  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15220   0027D4  22DA               	addwfc	fsr2h,f,c
 15221   0027D6  50DF               	movf	indf2,w,c
 15222   0027D8  ECC9  F058         	call	_doNenrd
 15223   0027DC  D599               	goto	u27060
 15224   0027DE                     l25031:
 15225                           
 15226                           ; BSR set to: 2
 15227                           ;../../VLCBlib_PIC/event_teach_large.c: 482:             if (teachCheckLen(m, 5, 0) == P
      +                          ROCESSED) return PROCESSED;
 15228   0027DE  C1FD  F1CF         	movff	teachProcessMessage@m,teachCheckLen@m
 15229   0027E2  C1FE  F1D0         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 15230   0027E6  0E05               	movlw	5
 15231   0027E8  0101               	movlb	1	; () banked
 15232   0027EA  6FD1               	movwf	teachCheckLen@needed& (0+255),b
 15233   0027EC  0E00               	movlw	0
 15234   0027EE  6FD2               	movwf	teachCheckLen@learn& (0+255),b
 15235   0027F0  EC01  F05B         	call	_teachCheckLen	;wreg free
 15236   0027F4  06E8               	decf	wreg,f,c
 15237   0027F6  B4D8               	btfsc	status,2,c
 15238   0027F8  D58B               	goto	u27060
 15239                           
 15240                           ;../../VLCBlib_PIC/event_teach_large.c: 483:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 15241   0027FA  0101               	movlb	1	; () banked
 15242   0027FC  EE20 F002          	lfsr	2,2
 15243   002800  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15244   002802  26D9               	addwf	fsr2l,f,c
 15245   002804  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15246   002806  22DA               	addwfc	fsr2h,f,c
 15247   002808  50DE               	movf	postinc2,w,c
 15248   00280A  0100               	movlb	0	; () banked
 15249   00280C  19B5               	xorwf	(_nn+1)& (0+255),w,b
 15250   00280E  A4D8               	btfss	status,2,c
 15251   002810  D57F               	goto	u27060
 15252                           
 15253                           ; BSR set to: 0
 15254   002812  0101               	movlb	1	; () banked
 15255   002814  EE20 F003          	lfsr	2,3
 15256   002818  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15257   00281A  26D9               	addwf	fsr2l,f,c
 15258   00281C  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15259   00281E  22DA               	addwfc	fsr2h,f,c
 15260   002820  0100               	movlb	0	; () banked
 15261   002822  51B4               	movf	_nn& (0+255),w,b
 15262   002824  18DE               	xorwf	postinc2,w,c
 15263   002826  A4D8               	btfss	status,2,c
 15264   002828  D573               	goto	u27060
 15265                           
 15266                           ; BSR set to: 0
 15267                           ;../../VLCBlib_PIC/event_teach_large.c: 485:             doReval(m->bytes[2], m->bytes[3
      +                          ]);
 15268   00282A  0101               	movlb	1	; () banked
 15269   00282C  EE20 F005          	lfsr	2,5
 15270   002830  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15271   002832  26D9               	addwf	fsr2l,f,c
 15272   002834  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15273   002836  22DA               	addwfc	fsr2h,f,c
 15274   002838  50DF               	movf	indf2,w,c
 15275   00283A  6FCB               	movwf	doReval@evNum& (0+255),b
 15276   00283C  EE20 F004          	lfsr	2,4
 15277   002840  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15278   002842  26D9               	addwf	fsr2l,f,c
 15279   002844  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15280   002846  22DA               	addwfc	fsr2h,f,c
 15281   002848  50DF               	movf	indf2,w,c
 15282   00284A  EC25  F045         	call	_doReval
 15283   00284E  D560               	goto	u27060
 15284   002850                     l25051:
 15285                           
 15286                           ; BSR set to: 2
 15287                           ;../../VLCBlib_PIC/event_teach_large.c: 488:             if (teachCheckLen(m, 8, 1) == P
      +                          ROCESSED) return PROCESSED;
 15288   002850  C1FD  F1CF         	movff	teachProcessMessage@m,teachCheckLen@m
 15289   002854  C1FE  F1D0         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 15290   002858  0E08               	movlw	8
 15291   00285A  0101               	movlb	1	; () banked
 15292   00285C  6FD1               	movwf	teachCheckLen@needed& (0+255),b
 15293   00285E  0E01               	movlw	1
 15294   002860  6FD2               	movwf	teachCheckLen@learn& (0+255),b
 15295   002862  EC01  F05B         	call	_teachCheckLen	;wreg free
 15296   002866  06E8               	decf	wreg,f,c
 15297   002868  B4D8               	btfsc	status,2,c
 15298   00286A  D552               	goto	u27060
 15299                           
 15300                           ;../../VLCBlib_PIC/event_teach_large.c: 489:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 15301   00286C  0101               	movlb	1	; () banked
 15302   00286E  EE20 F002          	lfsr	2,2
 15303   002872  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15304   002874  26D9               	addwf	fsr2l,f,c
 15305   002876  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15306   002878  22DA               	addwfc	fsr2h,f,c
 15307   00287A  50DE               	movf	postinc2,w,c
 15308   00287C  0100               	movlb	0	; () banked
 15309   00287E  19B5               	xorwf	(_nn+1)& (0+255),w,b
 15310   002880  A4D8               	btfss	status,2,c
 15311   002882  D546               	goto	u27060
 15312                           
 15313                           ; BSR set to: 0
 15314   002884  0101               	movlb	1	; () banked
 15315   002886  EE20 F003          	lfsr	2,3
 15316   00288A  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15317   00288C  26D9               	addwf	fsr2l,f,c
 15318   00288E  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15319   002890  22DA               	addwfc	fsr2h,f,c
 15320   002892  0100               	movlb	0	; () banked
 15321   002894  51B4               	movf	_nn& (0+255),w,b
 15322   002896  18DE               	xorwf	postinc2,w,c
 15323   002898  A4D8               	btfss	status,2,c
 15324   00289A  D53A               	goto	u27060
 15325                           
 15326                           ; BSR set to: 0
 15327                           ;../../VLCBlib_PIC/event_teach_large.c: 491:             doEvlrn((uint16_t)(m->bytes[0]<
      +                          <8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[5], m->bytes[6
      +                          ]);
 15328   00289C  0101               	movlb	1	; () banked
 15329   00289E  EE20 F003          	lfsr	2,3
 15330   0028A2  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15331   0028A4  26D9               	addwf	fsr2l,f,c
 15332   0028A6  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15333   0028A8  22DA               	addwfc	fsr2h,f,c
 15334   0028AA  50DF               	movf	indf2,w,c
 15335   0028AC  0102               	movlb	2	; () banked
 15336   0028AE  6FCC               	movwf	??_teachProcessMessage& (0+255),b
 15337   0028B0  0101               	movlb	1	; () banked
 15338   0028B2  EE20 F002          	lfsr	2,2
 15339   0028B6  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15340   0028B8  26D9               	addwf	fsr2l,f,c
 15341   0028BA  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15342   0028BC  22DA               	addwfc	fsr2h,f,c
 15343   0028BE  50DF               	movf	indf2,w,c
 15344   0028C0  0102               	movlb	2	; () banked
 15345   0028C2  6FCD               	movwf	(??_teachProcessMessage+1)& (0+255),b
 15346   0028C4  51CC               	movf	??_teachProcessMessage& (0+255),w,b
 15347   0028C6  0101               	movlb	1	; () banked
 15348   0028C8  6FF2               	movwf	doEvlrn@nodeNumber& (0+255),b
 15349   0028CA  C2CD  F1F3         	movff	??_teachProcessMessage+1,doEvlrn@nodeNumber+1
 15350   0028CE  EE20 F005          	lfsr	2,5
 15351   0028D2  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15352   0028D4  26D9               	addwf	fsr2l,f,c
 15353   0028D6  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15354   0028D8  22DA               	addwfc	fsr2h,f,c
 15355   0028DA  50DF               	movf	indf2,w,c
 15356   0028DC  0102               	movlb	2	; () banked
 15357   0028DE  6FCF               	movwf	(??_teachProcessMessage+3)& (0+255),b
 15358   0028E0  0101               	movlb	1	; () banked
 15359   0028E2  EE20 F004          	lfsr	2,4
 15360   0028E6  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15361   0028E8  26D9               	addwf	fsr2l,f,c
 15362   0028EA  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15363   0028EC  22DA               	addwfc	fsr2h,f,c
 15364   0028EE  50DF               	movf	indf2,w,c
 15365   0028F0  0102               	movlb	2	; () banked
 15366   0028F2  6FD0               	movwf	(??_teachProcessMessage+4)& (0+255),b
 15367   0028F4  51CF               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 15368   0028F6  0101               	movlb	1	; () banked
 15369   0028F8  6FF4               	movwf	doEvlrn@eventNumber& (0+255),b
 15370   0028FA  C2D0  F1F5         	movff	??_teachProcessMessage+4,doEvlrn@eventNumber+1
 15371   0028FE  EE20 F007          	lfsr	2,7
 15372   002902  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15373   002904  26D9               	addwf	fsr2l,f,c
 15374   002906  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15375   002908  22DA               	addwfc	fsr2h,f,c
 15376   00290A  50DF               	movf	indf2,w,c
 15377   00290C  6FF6               	movwf	doEvlrn@evNum& (0+255),b
 15378   00290E  EE20 F008          	lfsr	2,8
 15379   002912  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15380   002914  26D9               	addwf	fsr2l,f,c
 15381   002916  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15382   002918  22DA               	addwfc	fsr2h,f,c
 15383   00291A  50DF               	movf	indf2,w,c
 15384   00291C  6FF7               	movwf	doEvlrn@evVal& (0+255),b
 15385   00291E  EC7F  F04A         	call	_doEvlrn	;wreg free
 15386   002922  D4F6               	goto	u27060
 15387   002924                     l25073:
 15388   002924  0101               	movlb	1	; () banked
 15389   002926  EE20 F001          	lfsr	2,1
 15390   00292A  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15391   00292C  26D9               	addwf	fsr2l,f,c
 15392   00292E  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15393   002930  22DA               	addwfc	fsr2h,f,c
 15394   002932  50DF               	movf	indf2,w,c
 15395   002934  0102               	movlb	2	; () banked
 15396   002936  6FCC               	movwf	??_teachProcessMessage& (0+255),b
 15397   002938  6BCD               	clrf	(??_teachProcessMessage+1)& (0+255),b
 15398                           
 15399                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15400                           ; Switch size 1, requested type "simple"
 15401                           ; Number of cases is 1, Range of values is 0 to 0
 15402                           ; switch strategies available:
 15403                           ; Name         Instructions Cycles
 15404                           ; simple_byte            4     3 (average)
 15405                           ;	Chosen strategy is simple_byte
 15406   00293A  51CD               	movf	(??_teachProcessMessage+1)& (0+255),w,b
 15407   00293C  0A00               	xorlw	0	; case 0
 15408   00293E  A4D8               	btfss	status,2,c
 15409   002940  D545               	goto	l24855
 15410                           
 15411                           ; BSR set to: 2
 15412                           ; Switch size 1, requested type "simple"
 15413                           ; Number of cases is 13, Range of values is 83 to 245
 15414                           ; switch strategies available:
 15415                           ; Name         Instructions Cycles
 15416                           ; simple_byte           40    21 (average)
 15417                           ;	Chosen strategy is simple_byte
 15418   002942  51CC               	movf	??_teachProcessMessage& (0+255),w,b
 15419   002944  0A53               	xorlw	83	; case 83
 15420   002946  B4D8               	btfsc	status,2,c
 15421   002948  D4D5               	goto	l24807
 15422   00294A  0A07               	xorlw	7	; case 84
 15423   00294C  B4D8               	btfsc	status,2,c
 15424   00294E  D62F               	goto	l24909
 15425   002950  0A01               	xorlw	1	; case 85
 15426   002952  B4D8               	btfsc	status,2,c
 15427   002954  D653               	goto	l24929
 15428   002956  0A03               	xorlw	3	; case 86
 15429   002958  B4D8               	btfsc	status,2,c
 15430   00295A  D6BE               	goto	l24971
 15431   00295C  0A01               	xorlw	1	; case 87
 15432   00295E  B4D8               	btfsc	status,2,c
 15433   002960  D692               	goto	l24951
 15434   002962  0A0F               	xorlw	15	; case 88
 15435   002964  B4D8               	btfsc	status,2,c
 15436   002966  D6E1               	goto	l24991
 15437   002968  0A2A               	xorlw	42	; case 114
 15438   00296A  B4D8               	btfsc	status,2,c
 15439   00296C  D707               	goto	l25011
 15440   00296E  0A04               	xorlw	4	; case 118
 15441   002970  B4D8               	btfsc	status,2,c
 15442   002972  D4EE               	goto	l24825
 15443   002974  0AE3               	xorlw	227	; case 149
 15444   002976  B4D8               	btfsc	status,2,c
 15445   002978  D58A               	goto	l24877
 15446   00297A  0A09               	xorlw	9	; case 156
 15447   00297C  B4D8               	btfsc	status,2,c
 15448   00297E  D72F               	goto	l25031
 15449   002980  0A2E               	xorlw	46	; case 178
 15450   002982  B4D8               	btfsc	status,2,c
 15451   002984  D5C8               	goto	l24893
 15452   002986  0A60               	xorlw	96	; case 210
 15453   002988  B4D8               	btfsc	status,2,c
 15454   00298A  D522               	goto	l24859
 15455   00298C  0A27               	xorlw	39	; case 245
 15456   00298E  B4D8               	btfsc	status,2,c
 15457   002990  D75F               	goto	l25051
 15458   002992  D51C               	goto	l24855
 15459   002994                     __end_of_teachProcessMessage:
 15460                           	callstack 0
 15461                           
 15462 ;; *************** function _teachCheckLen *****************
 15463 ;; Defined at:
 15464 ;;		line 506 in file "../../VLCBlib_PIC/event_teach_large.c"
 15465 ;; Parameters:    Size  Location     Type
 15466 ;;  m               2   17[BANK1 ] PTR struct Message
 15467 ;;		 -> poll@m(9), 
 15468 ;;  needed          1   19[BANK1 ] unsigned char 
 15469 ;;  learn           1   20[BANK1 ] unsigned char 
 15470 ;; Auto vars:     Size  Location     Type
 15471 ;;		None
 15472 ;; Return value:  Size  Location     Type
 15473 ;;                  1    wreg      enum E12799
 15474 ;; Registers used:
 15475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15476 ;; Tracked objects:
 15477 ;;		On entry : 0/0
 15478 ;;		On exit  : 0/0
 15479 ;;		Unchanged: 0/0
 15480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15481 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15483 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15484 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15485 ;;Total ram usage:        5 bytes
 15486 ;; Hardware stack levels used: 1
 15487 ;; Hardware stack levels required when called: 18
 15488 ;; This function calls:
 15489 ;;		_checkLen
 15490 ;;		_sendMessage5
 15491 ;; This function is called by:
 15492 ;;		_teachProcessMessage
 15493 ;; This function uses a non-reentrant model
 15494 ;;
 15495                           
 15496                           	psect	text28
 15497   00B602                     __ptext28:
 15498                           	callstack 0
 15499   00B602                     _teachCheckLen:
 15500                           	callstack 10
 15501                           
 15502                           ;../../VLCBlib_PIC/event_teach_large.c: 507:     if (learn) {
 15503                           
 15504                           ;incstack = 0
 15505   00B602  0101               	movlb	1	; () banked
 15506   00B604  51D2               	movf	teachCheckLen@learn& (0+255),w,b
 15507   00B606  B4D8               	btfsc	status,2,c
 15508   00B608  D021               	goto	l22835
 15509                           
 15510                           ; BSR set to: 1
 15511                           ;../../VLCBlib_PIC/event_teach_large.c: 509:         if (m->len < needed) {
 15512   00B60A  C1CF  FFD9         	movff	teachCheckLen@m,fsr2l
 15513   00B60E  C1D0  FFDA         	movff	teachCheckLen@m+1,fsr2h
 15514   00B612  51D1               	movf	teachCheckLen@needed& (0+255),w,b
 15515   00B614  5CDE               	subwf	postinc2,w,c
 15516   00B616  B0D8               	btfsc	status,0,c
 15517   00B618  D017               	goto	l22831
 15518                           
 15519                           ; BSR set to: 1
 15520                           ;../../VLCBlib_PIC/event_teach_large.c: 511:             if (mode_flags & 1) {
 15521   00B61A  A165               	btfss	_mode_flags& (0+255),0,b
 15522   00B61C  D013               	goto	l22827
 15523                           
 15524                           ; BSR set to: 1
 15525                           ;../../VLCBlib_PIC/event_teach_large.c: 514:                 sendMessage5(OPC_GRSP, nn.b
      +                          ytes.hi, nn.bytes.lo, m->opc, SERVICE_ID_OLD_TEACH, CMDERR_INV_CMD);
 15526   00B61E  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 15527   00B622  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 15528   00B626  EE20 F001          	lfsr	2,1
 15529   00B62A  51CF               	movf	teachCheckLen@m& (0+255),w,b
 15530   00B62C  26D9               	addwf	fsr2l,f,c
 15531   00B62E  51D0               	movf	(teachCheckLen@m+1)& (0+255),w,b
 15532   00B630  22DA               	addwfc	fsr2h,f,c
 15533   00B632  50DF               	movf	indf2,w,c
 15534   00B634  6FC8               	movwf	sendMessage5@data3& (0+255),b
 15535   00B636  0E04               	movlw	4
 15536   00B638  6FC9               	movwf	sendMessage5@data4& (0+255),b
 15537   00B63A  0E01               	movlw	1
 15538   00B63C  6FCA               	movwf	sendMessage5@data5& (0+255),b
 15539   00B63E  0EAF               	movlw	175
 15540   00B640  EC47  F061         	call	_sendMessage5
 15541   00B644                     l22827:
 15542                           
 15543                           ;../../VLCBlib_PIC/event_teach_large.c: 517:             return PROCESSED;
 15544   00B644  0E01               	movlw	1
 15545   00B646  0012               	return	
 15546   00B648                     l22831:
 15547                           
 15548                           ; BSR set to: 1
 15549                           ;../../VLCBlib_PIC/event_teach_large.c: 519:         return NOT_PROCESSED;
 15550   00B648  0E00               	movlw	0
 15551   00B64A  0012               	return	
 15552   00B64C                     l22835:
 15553                           
 15554                           ; BSR set to: 1
 15555                           ;../../VLCBlib_PIC/event_teach_large.c: 521:     return checkLen(m, needed, SERVICE_ID_O
      +                          LD_TEACH);
 15556   00B64C  C1CF  F1CB         	movff	teachCheckLen@m,checkLen@m
 15557   00B650  C1D0  F1CC         	movff	teachCheckLen@m+1,checkLen@m+1
 15558   00B654  C1D1  F1CD         	movff	teachCheckLen@needed,checkLen@needed
 15559   00B658  0E04               	movlw	4
 15560   00B65A  6FCE               	movwf	checkLen@service& (0+255),b
 15561   00B65C  EC84  F055         	call	_checkLen	;wreg free
 15562   00B660  0012               	return		;funcret
 15563   00B662                     __end_of_teachCheckLen:
 15564                           	callstack 0
 15565                           
 15566 ;; *************** function _doRqevn *****************
 15567 ;; Defined at:
 15568 ;;		line 651 in file "../../VLCBlib_PIC/event_teach_large.c"
 15569 ;; Parameters:    Size  Location     Type
 15570 ;;		None
 15571 ;; Auto vars:     Size  Location     Type
 15572 ;;  i               1   10[BANK1 ] unsigned char 
 15573 ;;  count           1    9[BANK1 ] unsigned char 
 15574 ;; Return value:  Size  Location     Type
 15575 ;;                  1    wreg      void 
 15576 ;; Registers used:
 15577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15578 ;; Tracked objects:
 15579 ;;		On entry : 0/0
 15580 ;;		On exit  : 0/0
 15581 ;;		Unchanged: 0/0
 15582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15584 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15586 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15587 ;;Total ram usage:        2 bytes
 15588 ;; Hardware stack levels used: 1
 15589 ;; Hardware stack levels required when called: 17
 15590 ;; This function calls:
 15591 ;;		_sendMessage3
 15592 ;;		_validStart
 15593 ;; This function is called by:
 15594 ;;		_teachProcessMessage
 15595 ;; This function uses a non-reentrant model
 15596 ;;
 15597                           
 15598                           	psect	text29
 15599   00C0CE                     __ptext29:
 15600                           	callstack 0
 15601   00C0CE                     _doRqevn:
 15602                           	callstack 11
 15603                           
 15604                           ;../../VLCBlib_PIC/event_teach_large.c: 653:     uint8_t count = 0;
 15605                           
 15606                           ;incstack = 0
 15607   00C0CE  0E00               	movlw	0
 15608   00C0D0  0101               	movlb	1	; () banked
 15609   00C0D2  6FC7               	movwf	doRqevn@count& (0+255),b
 15610                           
 15611                           ;../../VLCBlib_PIC/event_teach_large.c: 654:     uint8_t i;;../../VLCBlib_PIC/event_teac
      +                          h_large.c: 655:     for (i=0; i<255; i++) {
 15612   00C0D4  0E00               	movlw	0
 15613   00C0D6  6FC8               	movwf	doRqevn@i& (0+255),b
 15614   00C0D8                     l22941:
 15615                           
 15616                           ; BSR set to: 1
 15617                           ;../../VLCBlib_PIC/event_teach_large.c: 656:         if (validStart(i)) {
 15618   00C0D8  51C8               	movf	doRqevn@i& (0+255),w,b
 15619   00C0DA  EC9A  F05D         	call	_validStart
 15620   00C0DE  0900               	iorlw	0
 15621   00C0E0  B4D8               	btfsc	status,2,c
 15622   00C0E2  D002               	goto	l2856
 15623                           
 15624                           ;../../VLCBlib_PIC/event_teach_large.c: 657:             count++;
 15625   00C0E4  0101               	movlb	1	; () banked
 15626   00C0E6  2BC7               	incf	doRqevn@count& (0+255),f,b
 15627   00C0E8                     l2856:
 15628                           
 15629                           ;../../VLCBlib_PIC/event_teach_large.c: 659:     }
 15630   00C0E8  0101               	movlb	1	; () banked
 15631   00C0EA  2BC8               	incf	doRqevn@i& (0+255),f,b
 15632                           
 15633                           ; BSR set to: 1
 15634   00C0EC  29C8               	incf	doRqevn@i& (0+255),w,b
 15635   00C0EE  A4D8               	btfss	status,2,c
 15636   00C0F0  D7F3               	goto	l22941
 15637                           
 15638                           ; BSR set to: 1
 15639                           ;../../VLCBlib_PIC/event_teach_large.c: 660:     sendMessage3(OPC_NUMEV, nn.bytes.hi, nn
      +                          .bytes.lo, count);
 15640   00C0F2  C0B5  F0A7         	movff	_nn+1,sendMessage3@data1
 15641   00C0F6  C0B4  F0A8         	movff	_nn,sendMessage3@data2
 15642   00C0FA  C1C7  F0A9         	movff	doRqevn@count,sendMessage3@data3
 15643   00C0FE  0E74               	movlw	116
 15644   00C100  ECA5  F061         	call	_sendMessage3
 15645   00C104  0012               	return		;funcret
 15646   00C106                     __end_of_doRqevn:
 15647                           	callstack 0
 15648                           
 15649 ;; *************** function _doReval *****************
 15650 ;; Defined at:
 15651 ;;		line 721 in file "../../VLCBlib_PIC/event_teach_large.c"
 15652 ;; Parameters:    Size  Location     Type
 15653 ;;  enNum           1    wreg     unsigned char 
 15654 ;;  evNum           1   13[BANK1 ] unsigned char 
 15655 ;; Auto vars:     Size  Location     Type
 15656 ;;  enNum           1   16[BANK1 ] unsigned char 
 15657 ;;  evVal           2   17[BANK1 ] int 
 15658 ;;  tableIndex      1   19[BANK1 ] unsigned char 
 15659 ;;  evIndex         1   15[BANK1 ] unsigned char 
 15660 ;; Return value:  Size  Location     Type
 15661 ;;                  1    wreg      void 
 15662 ;; Registers used:
 15663 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15664 ;; Tracked objects:
 15665 ;;		On entry : 0/0
 15666 ;;		On exit  : 0/0
 15667 ;;		Unchanged: 0/0
 15668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15669 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15670 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15671 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15672 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15673 ;;Total ram usage:        7 bytes
 15674 ;; Hardware stack levels used: 1
 15675 ;; Hardware stack levels required when called: 17
 15676 ;; This function calls:
 15677 ;;		_evtIdxToTableIndex
 15678 ;;		_findServiceIndex
 15679 ;;		_getEv
 15680 ;;		_numEv
 15681 ;;		_sendMessage3
 15682 ;;		_sendMessage5
 15683 ;;		_startTimedResponse
 15684 ;;		_validStart
 15685 ;; This function is called by:
 15686 ;;		_teachProcessMessage
 15687 ;; This function uses a non-reentrant model
 15688 ;;
 15689                           
 15690                           	psect	text30
 15691   008A4A                     __ptext30:
 15692                           	callstack 0
 15693   008A4A                     _doReval:
 15694                           	callstack 11
 15695                           
 15696                           ;incstack = 0
 15697                           ;doReval@enNum stored from wreg
 15698   008A4A  0101               	movlb	1	; () banked
 15699   008A4C  6FCE               	movwf	doReval@enNum& (0+255),b
 15700                           
 15701                           ;../../VLCBlib_PIC/event_teach_large.c: 724:     uint8_t evIndex;;../../VLCBlib_PIC/even
      +                          t_teach_large.c: 725:     uint8_t tableIndex = evtIdxToTableIndex(enNum);
 15702   008A4E  0101               	movlb	1	; () banked
 15703   008A50  51CE               	movf	doReval@enNum& (0+255),w,b
 15704   008A52  EC6D  F064         	call	_evtIdxToTableIndex
 15705   008A56  0101               	movlb	1	; () banked
 15706   008A58  6FD1               	movwf	doReval@tableIndex& (0+255),b
 15707                           
 15708                           ; BSR set to: 1
 15709                           ;../../VLCBlib_PIC/event_teach_large.c: 727:     if (evNum > 20) {
 15710   008A5A  0E14               	movlw	20
 15711   008A5C  65CB               	cpfsgt	doReval@evNum& (0+255),b
 15712   008A5E  D00B               	goto	l22969
 15713                           
 15714                           ; BSR set to: 1
 15715                           ;../../VLCBlib_PIC/event_teach_large.c: 728:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, CMDERR_INV_EV_IDX);
 15716   008A60  C0B5  F0A7         	movff	_nn+1,sendMessage3@data1
 15717   008A64  C0B4  F0A8         	movff	_nn,sendMessage3@data2
 15718   008A68  0E06               	movlw	6
 15719   008A6A  0100               	movlb	0	; () banked
 15720   008A6C  6FA9               	movwf	sendMessage3@data3& (0+255),b
 15721   008A6E  0E6F               	movlw	111
 15722   008A70  ECA5  F061         	call	_sendMessage3
 15723   008A74  0012               	return	
 15724   008A76                     l22969:
 15725                           
 15726                           ; BSR set to: 1
 15727                           ;../../VLCBlib_PIC/event_teach_large.c: 732:     evIndex = evNum-1U;
 15728   008A76  05CB               	decf	doReval@evNum& (0+255),w,b
 15729   008A78  6FCD               	movwf	doReval@evIndex& (0+255),b
 15730                           
 15731                           ;../../VLCBlib_PIC/event_teach_large.c: 735:     if (tableIndex < 255) {
 15732   008A7A  29D1               	incf	doReval@tableIndex& (0+255),w,b
 15733   008A7C  B4D8               	btfsc	status,2,c
 15734   008A7E  D04A               	goto	l22993
 15735                           
 15736                           ; BSR set to: 1
 15737                           ;../../VLCBlib_PIC/event_teach_large.c: 736:         if (validStart(tableIndex)) {
 15738   008A80  51D1               	movf	doReval@tableIndex& (0+255),w,b
 15739   008A82  EC9A  F05D         	call	_validStart
 15740   008A86  0900               	iorlw	0
 15741   008A88  B4D8               	btfsc	status,2,c
 15742   008A8A  D044               	goto	l22993
 15743                           
 15744                           ;../../VLCBlib_PIC/event_teach_large.c: 737:             int evVal;;../../VLCBlib_PIC/ev
      +                          ent_teach_large.c: 738:             if (evNum == 0) {
 15745   008A8C  0101               	movlb	1	; () banked
 15746   008A8E  51CB               	movf	doReval@evNum& (0+255),w,b
 15747   008A90  A4D8               	btfss	status,2,c
 15748   008A92  D01A               	goto	l22981
 15749                           
 15750                           ; BSR set to: 1
 15751                           ;../../VLCBlib_PIC/event_teach_large.c: 742:                 timedResponseOpcode = OPC_N
      +                          EVAL;
 15752   008A94  0EB5               	movlw	181
 15753   008A96  0100               	movlb	0	; () banked
 15754   008A98  6FB6               	movwf	_timedResponseOpcode& (0+255),b
 15755                           
 15756                           ; BSR set to: 0
 15757                           ;../../VLCBlib_PIC/event_teach_large.c: 743:                 startTimedResponse(tableInd
      +                          ex, findServiceIndex(SERVICE_ID_OLD_TEACH), reqevCallback);
 15758   008A9A  0E04               	movlw	4
 15759   008A9C  EC1E  F058         	call	_findServiceIndex
 15760   008AA0  0100               	movlb	0	; () banked
 15761   008AA2  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 15762   008AA4  0EC4               	movlw	low _reqevCallback
 15763   008AA6  6F92               	movwf	startTimedResponse@callback& (0+255),b
 15764   008AA8  0E95               	movlw	high _reqevCallback
 15765   008AAA  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 15766   008AAC  0101               	movlb	1	; () banked
 15767   008AAE  51D1               	movf	doReval@tableIndex& (0+255),w,b
 15768   008AB0  EC75  F05F         	call	_startTimedResponse
 15769                           
 15770                           ;../../VLCBlib_PIC/event_teach_large.c: 745:                 evVal = numEv(tableIndex);
 15771   008AB4  0101               	movlb	1	; () banked
 15772   008AB6  51D1               	movf	doReval@tableIndex& (0+255),w,b
 15773   008AB8  EC71  F046         	call	_numEv
 15774   008ABC  0101               	movlb	1	; () banked
 15775   008ABE  6FCC               	movwf	??_doReval& (0+255),b
 15776   008AC0  51CC               	movf	??_doReval& (0+255),w,b
 15777   008AC2  6FCF               	movwf	doReval@evVal& (0+255),b
 15778   008AC4  6BD0               	clrf	(doReval@evVal+1)& (0+255),b
 15779                           
 15780                           ;../../VLCBlib_PIC/event_teach_large.c: 746:             } else {
 15781   008AC6  D009               	goto	l22983
 15782   008AC8                     l22981:
 15783                           
 15784                           ; BSR set to: 1
 15785                           ;../../VLCBlib_PIC/event_teach_large.c: 747:                 evVal = getEv(tableIndex, e
      +                          vIndex);
 15786   008AC8  C1CD  F09D         	movff	doReval@evIndex,getEv@evNum
 15787   008ACC  51D1               	movf	doReval@tableIndex& (0+255),w,b
 15788   008ACE  EC1C  F03D         	call	_getEv
 15789   008AD2  C09D  F1CF         	movff	?_getEv,doReval@evVal
 15790   008AD6  C09E  F1D0         	movff	?_getEv+1,doReval@evVal+1
 15791   008ADA                     l22983:
 15792                           
 15793                           ;../../VLCBlib_PIC/event_teach_large.c: 749:             if (evVal >= 0) {
 15794   008ADA  0101               	movlb	1	; () banked
 15795   008ADC  BFD0               	btfsc	(doReval@evVal+1)& (0+255),7,b
 15796   008ADE  D00E               	goto	l22989
 15797                           
 15798                           ; BSR set to: 1
 15799                           ;../../VLCBlib_PIC/event_teach_large.c: 750:                 sendMessage5(OPC_NEVAL, nn.
      +                          bytes.hi, nn.bytes.lo, enNum, evNum, (uint8_t)evVal);
 15800   008AE0  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 15801   008AE4  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 15802   008AE8  C1CE  F1C8         	movff	doReval@enNum,sendMessage5@data3
 15803   008AEC  C1CB  F1C9         	movff	doReval@evNum,sendMessage5@data4
 15804   008AF0  C1CF  F1CA         	movff	doReval@evVal,sendMessage5@data5
 15805   008AF4  0EB5               	movlw	181
 15806   008AF6  EC47  F061         	call	_sendMessage5
 15807   008AFA  0012               	return	
 15808   008AFC                     l22989:
 15809                           
 15810                           ; BSR set to: 1
 15811                           ;../../VLCBlib_PIC/event_teach_large.c: 754:             sendMessage3(OPC_CMDERR, nn.byt
      +                          es.hi, nn.bytes.lo, (uint8_t)(-evVal));
 15812   008AFC  C0B5  F0A7         	movff	_nn+1,sendMessage3@data1
 15813   008B00  C0B4  F0A8         	movff	_nn,sendMessage3@data2
 15814   008B04  51CF               	movf	doReval@evVal& (0+255),w,b
 15815   008B06  0800               	sublw	0
 15816   008B08  0100               	movlb	0	; () banked
 15817   008B0A  6FA9               	movwf	sendMessage3@data3& (0+255),b
 15818   008B0C  0E6F               	movlw	111
 15819   008B0E  ECA5  F061         	call	_sendMessage3
 15820   008B12  0012               	return	
 15821   008B14                     l22993:
 15822                           
 15823                           ;../../VLCBlib_PIC/event_teach_large.c: 758:     sendMessage3(OPC_CMDERR, nn.bytes.hi, n
      +                          n.bytes.lo, CMDERR_INVALID_EVENT);
 15824   008B14  C0B5  F0A7         	movff	_nn+1,sendMessage3@data1
 15825   008B18  C0B4  F0A8         	movff	_nn,sendMessage3@data2
 15826   008B1C  0E07               	movlw	7
 15827   008B1E  0100               	movlb	0	; () banked
 15828   008B20  6FA9               	movwf	sendMessage3@data3& (0+255),b
 15829   008B22  0E6F               	movlw	111
 15830   008B24  ECA5  F061         	call	_sendMessage3
 15831   008B28  0012               	return		;funcret
 15832   008B2A                     __end_of_doReval:
 15833                           	callstack 0
 15834                           
 15835 ;; *************** function _doReqev *****************
 15836 ;; Defined at:
 15837 ;;		line 789 in file "../../VLCBlib_PIC/event_teach_large.c"
 15838 ;; Parameters:    Size  Location     Type
 15839 ;;  nodeNumber      2   14[BANK1 ] unsigned short 
 15840 ;;  eventNumber     2   16[BANK1 ] unsigned short 
 15841 ;;  evNum           1   18[BANK1 ] unsigned char 
 15842 ;; Auto vars:     Size  Location     Type
 15843 ;;  evVal           2   19[BANK1 ] short 
 15844 ;;  tableIndex      1   21[BANK1 ] unsigned char 
 15845 ;; Return value:  Size  Location     Type
 15846 ;;                  1    wreg      void 
 15847 ;; Registers used:
 15848 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15849 ;; Tracked objects:
 15850 ;;		On entry : 0/0
 15851 ;;		On exit  : 0/0
 15852 ;;		Unchanged: 0/0
 15853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15854 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15855 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15857 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15858 ;;Total ram usage:        8 bytes
 15859 ;; Hardware stack levels used: 1
 15860 ;; Hardware stack levels required when called: 17
 15861 ;; This function calls:
 15862 ;;		_findEvent
 15863 ;;		_findServiceIndex
 15864 ;;		_getEv
 15865 ;;		_numEv
 15866 ;;		_sendMessage3
 15867 ;;		_sendMessage5
 15868 ;;		_sendMessage6
 15869 ;;		_startTimedResponse
 15870 ;; This function is called by:
 15871 ;;		_teachProcessMessage
 15872 ;; This function uses a non-reentrant model
 15873 ;;
 15874                           
 15875                           	psect	text31
 15876   007CE2                     __ptext31:
 15877                           	callstack 0
 15878   007CE2                     _doReqev:
 15879                           	callstack 11
 15880                           
 15881                           ;../../VLCBlib_PIC/event_teach_large.c: 790:     int16_t evVal;;../../VLCBlib_PIC/event_
      +                          teach_large.c: 792:     uint8_t tableIndex = findEvent(nodeNumber, eventNumber);
 15882                           
 15883                           ;incstack = 0
 15884   007CE2  C1CC  F1BE         	movff	doReqev@nodeNumber,findEvent@nodeNumber
 15885   007CE6  C1CD  F1BF         	movff	doReqev@nodeNumber+1,findEvent@nodeNumber+1
 15886   007CEA  C1CE  F1C0         	movff	doReqev@eventNumber,findEvent@eventNumber
 15887   007CEE  C1CF  F1C1         	movff	doReqev@eventNumber+1,findEvent@eventNumber+1
 15888   007CF2  EC1A  F053         	call	_findEvent	;wreg free
 15889   007CF6  0101               	movlb	1	; () banked
 15890   007CF8  6FD3               	movwf	doReqev@tableIndex& (0+255),b
 15891                           
 15892                           ; BSR set to: 1
 15893                           ;../../VLCBlib_PIC/event_teach_large.c: 793:     if (tableIndex == 0xff) {
 15894   007CFA  29D3               	incf	doReqev@tableIndex& (0+255),w,b
 15895   007CFC  A4D8               	btfss	status,2,c
 15896   007CFE  D019               	goto	l22881
 15897                           
 15898                           ; BSR set to: 1
 15899                           ;../../VLCBlib_PIC/event_teach_large.c: 794:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, CMDERR_INVALID_EVENT);
 15900   007D00  C0B5  F0A7         	movff	_nn+1,sendMessage3@data1
 15901   007D04  C0B4  F0A8         	movff	_nn,sendMessage3@data2
 15902   007D08  0E07               	movlw	7
 15903   007D0A  0100               	movlb	0	; () banked
 15904   007D0C  6FA9               	movwf	sendMessage3@data3& (0+255),b
 15905   007D0E  0E6F               	movlw	111
 15906   007D10  ECA5  F061         	call	_sendMessage3
 15907                           
 15908                           ;../../VLCBlib_PIC/event_teach_large.c: 796:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, CMDERR_INVALID_EVENT);
 15909   007D14  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 15910   007D18  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 15911   007D1C  0EB2               	movlw	178
 15912   007D1E  0101               	movlb	1	; () banked
 15913   007D20  6FC8               	movwf	sendMessage5@data3& (0+255),b
 15914   007D22  0E04               	movlw	4
 15915   007D24  6FC9               	movwf	sendMessage5@data4& (0+255),b
 15916   007D26  0E07               	movlw	7
 15917   007D28  6FCA               	movwf	sendMessage5@data5& (0+255),b
 15918   007D2A  0EAF               	movlw	175
 15919   007D2C  EC47  F061         	call	_sendMessage5
 15920   007D30  0012               	return	
 15921   007D32                     l22881:
 15922                           
 15923                           ; BSR set to: 1
 15924                           ;../../VLCBlib_PIC/event_teach_large.c: 800:     if (evNum > 20) {
 15925   007D32  0E14               	movlw	20
 15926   007D34  65D0               	cpfsgt	doReqev@evNum& (0+255),b
 15927   007D36  D019               	goto	l22887
 15928                           
 15929                           ; BSR set to: 1
 15930                           ;../../VLCBlib_PIC/event_teach_large.c: 801:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, CMDERR_INV_EV_IDX);
 15931   007D38  C0B5  F0A7         	movff	_nn+1,sendMessage3@data1
 15932   007D3C  C0B4  F0A8         	movff	_nn,sendMessage3@data2
 15933   007D40  0E06               	movlw	6
 15934   007D42  0100               	movlb	0	; () banked
 15935   007D44  6FA9               	movwf	sendMessage3@data3& (0+255),b
 15936   007D46  0E6F               	movlw	111
 15937   007D48  ECA5  F061         	call	_sendMessage3
 15938                           
 15939                           ;../../VLCBlib_PIC/event_teach_large.c: 803:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, CMDERR_INV_EV_IDX);
 15940   007D4C  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 15941   007D50  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 15942   007D54  0EB2               	movlw	178
 15943   007D56  0101               	movlb	1	; () banked
 15944   007D58  6FC8               	movwf	sendMessage5@data3& (0+255),b
 15945   007D5A  0E04               	movlw	4
 15946   007D5C  6FC9               	movwf	sendMessage5@data4& (0+255),b
 15947   007D5E  0E06               	movlw	6
 15948   007D60  6FCA               	movwf	sendMessage5@data5& (0+255),b
 15949   007D62  0EAF               	movlw	175
 15950   007D64  EC47  F061         	call	_sendMessage5
 15951   007D68  0012               	return	
 15952   007D6A                     l22887:
 15953                           
 15954                           ; BSR set to: 1
 15955                           ;../../VLCBlib_PIC/event_teach_large.c: 807:     if (evNum == 0) {
 15956   007D6A  51D0               	movf	doReqev@evNum& (0+255),w,b
 15957   007D6C  A4D8               	btfss	status,2,c
 15958   007D6E  D023               	goto	l22899
 15959                           
 15960                           ; BSR set to: 1
 15961                           ;../../VLCBlib_PIC/event_teach_large.c: 809:         sendMessage6(OPC_EVANS, nodeNumber>
      +                          >8, nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, 0, numEv(tableIndex));
 15962   007D70  51CD               	movf	(doReqev@nodeNumber+1)& (0+255),w,b
 15963   007D72  6FC6               	movwf	sendMessage6@data1& (0+255),b
 15964   007D74  C1CC  F1C7         	movff	doReqev@nodeNumber,sendMessage6@data2
 15965   007D78  51CF               	movf	(doReqev@eventNumber+1)& (0+255),w,b
 15966   007D7A  6FC8               	movwf	sendMessage6@data3& (0+255),b
 15967   007D7C  C1CE  F1C9         	movff	doReqev@eventNumber,sendMessage6@data4
 15968   007D80  0E00               	movlw	0
 15969   007D82  6FCA               	movwf	sendMessage6@data5& (0+255),b
 15970   007D84  51D3               	movf	doReqev@tableIndex& (0+255),w,b
 15971   007D86  EC71  F046         	call	_numEv
 15972   007D8A  0101               	movlb	1	; () banked
 15973   007D8C  6FCB               	movwf	sendMessage6@data6& (0+255),b
 15974   007D8E  0ED3               	movlw	211
 15975   007D90  ECFF  F060         	call	_sendMessage6
 15976                           
 15977                           ;../../VLCBlib_PIC/event_teach_large.c: 812:         timedResponseOpcode = OPC_EVANS;
 15978   007D94  0ED3               	movlw	211
 15979   007D96  0100               	movlb	0	; () banked
 15980   007D98  6FB6               	movwf	_timedResponseOpcode& (0+255),b
 15981                           
 15982                           ; BSR set to: 0
 15983                           ;../../VLCBlib_PIC/event_teach_large.c: 813:         startTimedResponse(tableIndex, find
      +                          ServiceIndex(SERVICE_ID_OLD_TEACH), reqevCallback);
 15984   007D9A  0E04               	movlw	4
 15985   007D9C  EC1E  F058         	call	_findServiceIndex
 15986   007DA0  0100               	movlb	0	; () banked
 15987   007DA2  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 15988   007DA4  0EC4               	movlw	low _reqevCallback
 15989   007DA6  6F92               	movwf	startTimedResponse@callback& (0+255),b
 15990   007DA8  0E95               	movlw	high _reqevCallback
 15991   007DAA  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 15992   007DAC  0101               	movlb	1	; () banked
 15993   007DAE  51D3               	movf	doReqev@tableIndex& (0+255),w,b
 15994   007DB0  EC75  F05F         	call	_startTimedResponse
 15995   007DB4  0012               	return	
 15996   007DB6                     l22899:
 15997                           
 15998                           ; BSR set to: 1
 15999                           ;../../VLCBlib_PIC/event_teach_large.c: 820:         evVal = getEv(tableIndex, evNum-1);
 16000   007DB6  05D0               	decf	doReqev@evNum& (0+255),w,b
 16001   007DB8  0100               	movlb	0	; () banked
 16002   007DBA  6F9D               	movwf	getEv@evNum& (0+255),b
 16003   007DBC  0101               	movlb	1	; () banked
 16004   007DBE  51D3               	movf	doReqev@tableIndex& (0+255),w,b
 16005   007DC0  EC1C  F03D         	call	_getEv
 16006   007DC4  C09D  F1D1         	movff	?_getEv,doReqev@evVal
 16007   007DC8  C09E  F1D2         	movff	?_getEv+1,doReqev@evVal+1
 16008                           
 16009                           ;../../VLCBlib_PIC/event_teach_large.c: 822:     if (evVal < 0) {
 16010   007DCC  0101               	movlb	1	; () banked
 16011   007DCE  AFD2               	btfss	(doReqev@evVal+1)& (0+255),7,b
 16012   007DD0  D01B               	goto	l22907
 16013                           
 16014                           ; BSR set to: 1
 16015                           ;../../VLCBlib_PIC/event_teach_large.c: 824:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, (uint8_t)(-evVal));
 16016   007DD2  C0B5  F0A7         	movff	_nn+1,sendMessage3@data1
 16017   007DD6  C0B4  F0A8         	movff	_nn,sendMessage3@data2
 16018   007DDA  51D1               	movf	doReqev@evVal& (0+255),w,b
 16019   007DDC  0800               	sublw	0
 16020   007DDE  0100               	movlb	0	; () banked
 16021   007DE0  6FA9               	movwf	sendMessage3@data3& (0+255),b
 16022   007DE2  0E6F               	movlw	111
 16023   007DE4  ECA5  F061         	call	_sendMessage3
 16024                           
 16025                           ;../../VLCBlib_PIC/event_teach_large.c: 826:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, (uint8_t)(-evVal));
 16026   007DE8  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 16027   007DEC  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 16028   007DF0  0EB2               	movlw	178
 16029   007DF2  0101               	movlb	1	; () banked
 16030   007DF4  6FC8               	movwf	sendMessage5@data3& (0+255),b
 16031   007DF6  0E04               	movlw	4
 16032   007DF8  6FC9               	movwf	sendMessage5@data4& (0+255),b
 16033   007DFA  51D1               	movf	doReqev@evVal& (0+255),w,b
 16034   007DFC  0800               	sublw	0
 16035   007DFE  6FCA               	movwf	sendMessage5@data5& (0+255),b
 16036   007E00  0EAF               	movlw	175
 16037   007E02  EC47  F061         	call	_sendMessage5
 16038   007E06  0012               	return	
 16039   007E08                     l22907:
 16040                           
 16041                           ; BSR set to: 1
 16042                           ;../../VLCBlib_PIC/event_teach_large.c: 831:     sendMessage6(OPC_EVANS, nodeNumber>>8, 
      +                          nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, evNum, (uint8_t)evVal);
 16043   007E08  51CD               	movf	(doReqev@nodeNumber+1)& (0+255),w,b
 16044   007E0A  6FC6               	movwf	sendMessage6@data1& (0+255),b
 16045   007E0C  C1CC  F1C7         	movff	doReqev@nodeNumber,sendMessage6@data2
 16046   007E10  51CF               	movf	(doReqev@eventNumber+1)& (0+255),w,b
 16047   007E12  6FC8               	movwf	sendMessage6@data3& (0+255),b
 16048   007E14  C1CE  F1C9         	movff	doReqev@eventNumber,sendMessage6@data4
 16049   007E18  C1D0  F1CA         	movff	doReqev@evNum,sendMessage6@data5
 16050   007E1C  C1D1  F1CB         	movff	doReqev@evVal,sendMessage6@data6
 16051   007E20  0ED3               	movlw	211
 16052   007E22  ECFF  F060         	call	_sendMessage6
 16053   007E26  0012               	return		;funcret
 16054   007E28                     __end_of_doReqev:
 16055                           	callstack 0
 16056                           
 16057 ;; *************** function _doNnevn *****************
 16058 ;; Defined at:
 16059 ;;		line 576 in file "../../VLCBlib_PIC/event_teach_large.c"
 16060 ;; Parameters:    Size  Location     Type
 16061 ;;		None
 16062 ;; Auto vars:     Size  Location     Type
 16063 ;;  f               1   13[BANK1 ] struct .
 16064 ;;  i               1   15[BANK1 ] unsigned char 
 16065 ;;  count           1   14[BANK1 ] unsigned char 
 16066 ;; Return value:  Size  Location     Type
 16067 ;;                  1    wreg      void 
 16068 ;; Registers used:
 16069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16070 ;; Tracked objects:
 16071 ;;		On entry : 0/0
 16072 ;;		On exit  : 0/0
 16073 ;;		Unchanged: 0/0
 16074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16076 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16077 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16078 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16079 ;;Total ram usage:        7 bytes
 16080 ;; Hardware stack levels used: 1
 16081 ;; Hardware stack levels required when called: 17
 16082 ;; This function calls:
 16083 ;;		_readNVM
 16084 ;;		_sendMessage3
 16085 ;; This function is called by:
 16086 ;;		_teachProcessMessage
 16087 ;; This function uses a non-reentrant model
 16088 ;;
 16089                           
 16090                           	psect	text32
 16091   00B2DA                     __ptext32:
 16092                           	callstack 0
 16093   00B2DA                     _doNnevn:
 16094                           	callstack 11
 16095                           
 16096                           ;../../VLCBlib_PIC/event_teach_large.c: 578:     uint8_t count = 0;
 16097                           
 16098                           ;incstack = 0
 16099   00B2DA  0E00               	movlw	0
 16100   00B2DC  0101               	movlb	1	; () banked
 16101   00B2DE  6FCC               	movwf	doNnevn@count& (0+255),b
 16102                           
 16103                           ;../../VLCBlib_PIC/event_teach_large.c: 579:     uint8_t i;;../../VLCBlib_PIC/event_teac
      +                          h_large.c: 580:     for (i=0; i<255; i++) {
 16104   00B2E0  0E00               	movlw	0
 16105   00B2E2  6FCD               	movwf	doNnevn@i& (0+255),b
 16106   00B2E4                     l22925:
 16107                           
 16108                           ; BSR set to: 1
 16109                           ;../../VLCBlib_PIC/event_teach_large.c: 581:         EventTableFlags f;;../../VLCBlib_PI
      +                          C/event_teach_large.c: 582:         f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80 +
      +                           16*i+0);
 16110   00B2E4  51CD               	movf	doNnevn@i& (0+255),w,b
 16111   00B2E6  6FC7               	movwf	??_doNnevn& (0+255),b
 16112   00B2E8  6BC8               	clrf	(??_doNnevn+1)& (0+255),b
 16113   00B2EA  3BC7               	swapf	??_doNnevn& (0+255),f,b
 16114   00B2EC  3BC8               	swapf	(??_doNnevn+1)& (0+255),f,b
 16115   00B2EE  0EF0               	movlw	240
 16116   00B2F0  17C8               	andwf	(??_doNnevn+1)& (0+255),f,b
 16117   00B2F2  51C7               	movf	??_doNnevn& (0+255),w,b
 16118   00B2F4  0B0F               	andlw	15
 16119   00B2F6  13C8               	iorwf	(??_doNnevn+1)& (0+255),f,b
 16120   00B2F8  0EF0               	movlw	240
 16121   00B2FA  17C7               	andwf	??_doNnevn& (0+255),f,b
 16122   00B2FC  0E80               	movlw	128
 16123   00B2FE  25C7               	addwf	??_doNnevn& (0+255),w,b
 16124   00B300  6FC9               	movwf	(??_doNnevn+2)& (0+255),b
 16125   00B302  0EEF               	movlw	239
 16126   00B304  21C8               	addwfc	(??_doNnevn+1)& (0+255),w,b
 16127   00B306  6FCA               	movwf	(??_doNnevn+3)& (0+255),b
 16128   00B308  C1C9  F091         	movff	??_doNnevn+2,readNVM@index
 16129   00B30C  C1CA  F092         	movff	??_doNnevn+3,readNVM@index+1
 16130   00B310  0100               	movlb	0	; () banked
 16131   00B312  6B93               	clrf	(readNVM@index+2)& (0+255),b
 16132   00B314  0E01               	movlw	1
 16133   00B316  EC31  F05B         	call	_readNVM
 16134   00B31A  0100               	movlb	0	; () banked
 16135   00B31C  5191               	movf	?_readNVM& (0+255),w,b
 16136   00B31E  0101               	movlb	1	; () banked
 16137   00B320  6FCB               	movwf	doNnevn@f& (0+255),b
 16138                           
 16139                           ; BSR set to: 1
 16140                           ;../../VLCBlib_PIC/event_teach_large.c: 583:         if (f.freeEntry) {
 16141   00B322  BFCB               	btfsc	doNnevn@f& (0+255),7,b
 16142                           
 16143                           ; BSR set to: 1
 16144                           ;../../VLCBlib_PIC/event_teach_large.c: 584:             count++;
 16145   00B324  2BCC               	incf	doNnevn@count& (0+255),f,b
 16146                           
 16147                           ; BSR set to: 1
 16148                           ;../../VLCBlib_PIC/event_teach_large.c: 586:     }
 16149                           
 16150                           ;../../VLCBlib_PIC/event_teach_large.c: 585:         }
 16151   00B326  2BCD               	incf	doNnevn@i& (0+255),f,b
 16152                           
 16153                           ; BSR set to: 1
 16154   00B328  29CD               	incf	doNnevn@i& (0+255),w,b
 16155   00B32A  A4D8               	btfss	status,2,c
 16156   00B32C  D7DB               	goto	l22925
 16157                           
 16158                           ; BSR set to: 1
 16159                           ;../../VLCBlib_PIC/event_teach_large.c: 587:     sendMessage3(OPC_EVNLF, nn.bytes.hi, nn
      +                          .bytes.lo, count);
 16160   00B32E  C0B5  F0A7         	movff	_nn+1,sendMessage3@data1
 16161   00B332  C0B4  F0A8         	movff	_nn,sendMessage3@data2
 16162   00B336  C1CC  F0A9         	movff	doNnevn@count,sendMessage3@data3
 16163   00B33A  0E70               	movlw	112
 16164   00B33C  ECA5  F061         	call	_sendMessage3
 16165   00B340  0012               	return		;funcret
 16166   00B342                     __end_of_doNnevn:
 16167                           	callstack 0
 16168                           
 16169 ;; *************** function _doNnclr *****************
 16170 ;; Defined at:
 16171 ;;		line 666 in file "../../VLCBlib_PIC/event_teach_large.c"
 16172 ;; Parameters:    Size  Location     Type
 16173 ;;		None
 16174 ;; Auto vars:     Size  Location     Type
 16175 ;;		None
 16176 ;; Return value:  Size  Location     Type
 16177 ;;                  1    wreg      void 
 16178 ;; Registers used:
 16179 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16180 ;; Tracked objects:
 16181 ;;		On entry : 0/0
 16182 ;;		On exit  : 0/0
 16183 ;;		Unchanged: 0/0
 16184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16189 ;;Total ram usage:        0 bytes
 16190 ;; Hardware stack levels used: 1
 16191 ;; Hardware stack levels required when called: 19
 16192 ;; This function calls:
 16193 ;;		_clearAllEvents
 16194 ;;		_sendMessage2
 16195 ;;		_sendMessage5
 16196 ;; This function is called by:
 16197 ;;		_teachProcessMessage
 16198 ;; This function uses a non-reentrant model
 16199 ;;
 16200                           
 16201                           	psect	text33
 16202   00C1CE                     __ptext33:
 16203                           	callstack 0
 16204   00C1CE                     _doNnclr:
 16205                           	callstack 9
 16206                           
 16207                           ;../../VLCBlib_PIC/event_teach_large.c: 667:     clearAllEvents();
 16208                           
 16209                           ;incstack = 0
 16210   00C1CE  ECF4  F05C         	call	_clearAllEvents	;wreg free
 16211                           
 16212                           ;../../VLCBlib_PIC/event_teach_large.c: 668:     sendMessage2(OPC_WRACK, nn.bytes.hi, nn
      +                          .bytes.lo);
 16213   00C1D2  C0B5  F0A7         	movff	_nn+1,sendMessage2@data1
 16214   00C1D6  C0B4  F0A8         	movff	_nn,sendMessage2@data2
 16215   00C1DA  0E59               	movlw	89
 16216   00C1DC  EC17  F061         	call	_sendMessage2
 16217                           
 16218                           ;../../VLCBlib_PIC/event_teach_large.c: 670:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, OPC_NNCLR, SERVICE_ID_OLD_TEACH, GRSP_OK);
 16219   00C1E0  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 16220   00C1E4  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 16221   00C1E8  0E55               	movlw	85
 16222   00C1EA  0101               	movlb	1	; () banked
 16223   00C1EC  6FC8               	movwf	sendMessage5@data3& (0+255),b
 16224   00C1EE  0E04               	movlw	4
 16225   00C1F0  6FC9               	movwf	sendMessage5@data4& (0+255),b
 16226   00C1F2  0E00               	movlw	0
 16227   00C1F4  6FCA               	movwf	sendMessage5@data5& (0+255),b
 16228   00C1F6  0EAF               	movlw	175
 16229   00C1F8  EC47  F061         	call	_sendMessage5
 16230   00C1FC  0012               	return		;funcret
 16231   00C1FE                     __end_of_doNnclr:
 16232                           	callstack 0
 16233                           
 16234 ;; *************** function _doNerd *****************
 16235 ;; Defined at:
 16236 ;;		line 595 in file "../../VLCBlib_PIC/event_teach_large.c"
 16237 ;; Parameters:    Size  Location     Type
 16238 ;;		None
 16239 ;; Auto vars:     Size  Location     Type
 16240 ;;		None
 16241 ;; Return value:  Size  Location     Type
 16242 ;;                  1    wreg      void 
 16243 ;; Registers used:
 16244 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16245 ;; Tracked objects:
 16246 ;;		On entry : 0/0
 16247 ;;		On exit  : 0/0
 16248 ;;		Unchanged: 0/0
 16249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16254 ;;Total ram usage:        0 bytes
 16255 ;; Hardware stack levels used: 1
 16256 ;; Hardware stack levels required when called: 13
 16257 ;; This function calls:
 16258 ;;		_findServiceIndex
 16259 ;;		_startTimedResponse
 16260 ;; This function is called by:
 16261 ;;		_teachProcessMessage
 16262 ;; This function uses a non-reentrant model
 16263 ;;
 16264                           
 16265                           	psect	text34
 16266   00C79C                     __ptext34:
 16267                           	callstack 0
 16268   00C79C                     _doNerd:
 16269                           	callstack 15
 16270                           
 16271                           ;../../VLCBlib_PIC/event_teach_large.c: 596:     startTimedResponse(2, findServiceIndex(
      +                          SERVICE_ID_OLD_TEACH), nerdCallback);
 16272                           
 16273                           ;incstack = 0
 16274   00C79C  0E04               	movlw	4
 16275   00C79E  EC1E  F058         	call	_findServiceIndex
 16276   00C7A2  0100               	movlb	0	; () banked
 16277   00C7A4  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 16278   00C7A6  0EAA               	movlw	low _nerdCallback
 16279   00C7A8  6F92               	movwf	startTimedResponse@callback& (0+255),b
 16280   00C7AA  0EB3               	movlw	high _nerdCallback
 16281   00C7AC  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 16282   00C7AE  0E02               	movlw	2
 16283   00C7B0  EC75  F05F         	call	_startTimedResponse
 16284   00C7B4  0012               	return		;funcret
 16285   00C7B6                     __end_of_doNerd:
 16286                           	callstack 0
 16287                           
 16288 ;; *************** function _doNenrd *****************
 16289 ;; Defined at:
 16290 ;;		line 627 in file "../../VLCBlib_PIC/event_teach_large.c"
 16291 ;; Parameters:    Size  Location     Type
 16292 ;;  index           1    wreg     unsigned char 
 16293 ;; Auto vars:     Size  Location     Type
 16294 ;;  index           1   13[BANK1 ] unsigned char 
 16295 ;;  eventNumber     2   16[BANK1 ] unsigned short 
 16296 ;;  nodeNumber      2   14[BANK1 ] unsigned short 
 16297 ;;  tableIndex      1   18[BANK1 ] unsigned char 
 16298 ;; Return value:  Size  Location     Type
 16299 ;;                  1    wreg      void 
 16300 ;; Registers used:
 16301 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16302 ;; Tracked objects:
 16303 ;;		On entry : 0/0
 16304 ;;		On exit  : 0/0
 16305 ;;		Unchanged: 0/0
 16306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16308 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16310 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16311 ;;Total ram usage:        6 bytes
 16312 ;; Hardware stack levels used: 1
 16313 ;; Hardware stack levels required when called: 17
 16314 ;; This function calls:
 16315 ;;		_evtIdxToTableIndex
 16316 ;;		_getEN
 16317 ;;		_getNN
 16318 ;;		_sendMessage3
 16319 ;;		_sendMessage5
 16320 ;;		_validStart
 16321 ;; This function is called by:
 16322 ;;		_teachProcessMessage
 16323 ;; This function uses a non-reentrant model
 16324 ;;
 16325                           
 16326                           	psect	text35
 16327   00B192                     __ptext35:
 16328                           	callstack 0
 16329   00B192                     _doNenrd:
 16330                           	callstack 11
 16331                           
 16332                           ;incstack = 0
 16333                           ;doNenrd@index stored from wreg
 16334   00B192  0101               	movlb	1	; () banked
 16335   00B194  6FCB               	movwf	doNenrd@index& (0+255),b
 16336                           
 16337                           ;../../VLCBlib_PIC/event_teach_large.c: 628:     uint8_t tableIndex;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 629:     uint16_t nodeNumber, eventNumber;;../../VLCBlib_PIC/event_t
      +                          each_large.c: 631:     tableIndex = evtIdxToTableIndex(index);
 16338   00B196  0101               	movlb	1	; () banked
 16339   00B198  51CB               	movf	doNenrd@index& (0+255),w,b
 16340   00B19A  EC6D  F064         	call	_evtIdxToTableIndex
 16341   00B19E  0101               	movlb	1	; () banked
 16342   00B1A0  6FD0               	movwf	doNenrd@tableIndex& (0+255),b
 16343                           
 16344                           ; BSR set to: 1
 16345                           ;../../VLCBlib_PIC/event_teach_large.c: 633:     if ( ! validStart(tableIndex)) {
 16346   00B1A2  51D0               	movf	doNenrd@tableIndex& (0+255),w,b
 16347   00B1A4  EC9A  F05D         	call	_validStart
 16348   00B1A8  0900               	iorlw	0
 16349   00B1AA  A4D8               	btfss	status,2,c
 16350   00B1AC  D00B               	goto	l22957
 16351                           
 16352                           ;../../VLCBlib_PIC/event_teach_large.c: 634:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, CMDERR_INV_EN_IDX);
 16353   00B1AE  C0B5  F0A7         	movff	_nn+1,sendMessage3@data1
 16354   00B1B2  C0B4  F0A8         	movff	_nn,sendMessage3@data2
 16355   00B1B6  0E08               	movlw	8
 16356   00B1B8  0100               	movlb	0	; () banked
 16357   00B1BA  6FA9               	movwf	sendMessage3@data3& (0+255),b
 16358   00B1BC  0E6F               	movlw	111
 16359   00B1BE  ECA5  F061         	call	_sendMessage3
 16360   00B1C2  0012               	return	
 16361   00B1C4                     l22957:
 16362                           
 16363                           ;../../VLCBlib_PIC/event_teach_large.c: 640:     nodeNumber = getNN(tableIndex);
 16364   00B1C4  0101               	movlb	1	; () banked
 16365   00B1C6  51D0               	movf	doNenrd@tableIndex& (0+255),w,b
 16366   00B1C8  ECA7  F04B         	call	_getNN
 16367   00B1CC  C097  F1CC         	movff	?_getNN,doNenrd@nodeNumber
 16368   00B1D0  C098  F1CD         	movff	?_getNN+1,doNenrd@nodeNumber+1
 16369                           
 16370                           ;../../VLCBlib_PIC/event_teach_large.c: 641:     eventNumber = getEN(tableIndex);
 16371   00B1D4  0101               	movlb	1	; () banked
 16372   00B1D6  51D0               	movf	doNenrd@tableIndex& (0+255),w,b
 16373   00B1D8  ECFA  F056         	call	_getEN
 16374   00B1DC  C097  F1CE         	movff	?_getEN,doNenrd@eventNumber
 16375   00B1E0  C098  F1CF         	movff	?_getEN+1,doNenrd@eventNumber+1
 16376                           
 16377                           ;../../VLCBlib_PIC/event_teach_large.c: 642:     sendMessage5(OPC_ENRSP, nodeNumber>>8, 
      +                          nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, index);
 16378   00B1E4  0101               	movlb	1	; () banked
 16379   00B1E6  51CD               	movf	(doNenrd@nodeNumber+1)& (0+255),w,b
 16380   00B1E8  6FC6               	movwf	sendMessage5@data1& (0+255),b
 16381   00B1EA  C1CC  F1C7         	movff	doNenrd@nodeNumber,sendMessage5@data2
 16382   00B1EE  51CF               	movf	(doNenrd@eventNumber+1)& (0+255),w,b
 16383   00B1F0  6FC8               	movwf	sendMessage5@data3& (0+255),b
 16384   00B1F2  C1CE  F1C9         	movff	doNenrd@eventNumber,sendMessage5@data4
 16385   00B1F6  C1CB  F1CA         	movff	doNenrd@index,sendMessage5@data5
 16386   00B1FA  0EF2               	movlw	242
 16387   00B1FC  EC47  F061         	call	_sendMessage5
 16388   00B200  0012               	return		;funcret
 16389   00B202                     __end_of_doNenrd:
 16390                           	callstack 0
 16391                           
 16392 ;; *************** function _evtIdxToTableIndex *****************
 16393 ;; Defined at:
 16394 ;;		line 1276 in file "../../VLCBlib_PIC/event_teach_large.c"
 16395 ;; Parameters:    Size  Location     Type
 16396 ;;  evtIdx          1    wreg     unsigned char 
 16397 ;; Auto vars:     Size  Location     Type
 16398 ;;  evtIdx          1   45[BANK0 ] unsigned char 
 16399 ;; Return value:  Size  Location     Type
 16400 ;;                  1    wreg      unsigned char 
 16401 ;; Registers used:
 16402 ;;		wreg, status,2, status,0
 16403 ;; Tracked objects:
 16404 ;;		On entry : 0/0
 16405 ;;		On exit  : 0/0
 16406 ;;		Unchanged: 0/0
 16407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16409 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16411 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16412 ;;Total ram usage:        1 bytes
 16413 ;; Hardware stack levels used: 1
 16414 ;; Hardware stack levels required when called: 12
 16415 ;; This function calls:
 16416 ;;		Nothing
 16417 ;; This function is called by:
 16418 ;;		_doNenrd
 16419 ;;		_doReval
 16420 ;; This function uses a non-reentrant model
 16421 ;;
 16422                           
 16423                           	psect	text36
 16424   00C8DA                     __ptext36:
 16425                           	callstack 0
 16426   00C8DA                     _evtIdxToTableIndex:
 16427                           	callstack 15
 16428                           
 16429                           ;incstack = 0
 16430                           ;evtIdxToTableIndex@evtIdx stored from wreg
 16431   00C8DA  0100               	movlb	0	; () banked
 16432   00C8DC  6F8D               	movwf	evtIdxToTableIndex@evtIdx& (0+255),b
 16433                           
 16434                           ;../../VLCBlib_PIC/event_teach_large.c: 1277:     return evtIdx - 1;
 16435   00C8DE  0100               	movlb	0	; () banked
 16436   00C8E0  058D               	decf	evtIdxToTableIndex@evtIdx& (0+255),w,b
 16437                           
 16438                           ; BSR set to: 0
 16439   00C8E2  0012               	return		;funcret
 16440   00C8E4                     __end_of_evtIdxToTableIndex:
 16441                           	callstack 0
 16442                           
 16443 ;; *************** function _doEvuln *****************
 16444 ;; Defined at:
 16445 ;;		line 766 in file "../../VLCBlib_PIC/event_teach_large.c"
 16446 ;; Parameters:    Size  Location     Type
 16447 ;;  nodeNumber      2   20[BANK1 ] unsigned short 
 16448 ;;  eventNumber     2   22[BANK1 ] unsigned short 
 16449 ;; Auto vars:     Size  Location     Type
 16450 ;;  result          1   24[BANK1 ] unsigned char 
 16451 ;; Return value:  Size  Location     Type
 16452 ;;                  1    wreg      void 
 16453 ;; Registers used:
 16454 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16455 ;; Tracked objects:
 16456 ;;		On entry : 0/0
 16457 ;;		On exit  : 0/0
 16458 ;;		Unchanged: 0/0
 16459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16460 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16461 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16463 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16464 ;;Total ram usage:        5 bytes
 16465 ;; Hardware stack levels used: 1
 16466 ;; Hardware stack levels required when called: 20
 16467 ;; This function calls:
 16468 ;;		_removeEvent
 16469 ;;		_sendMessage2
 16470 ;;		_sendMessage3
 16471 ;;		_sendMessage5
 16472 ;; This function is called by:
 16473 ;;		_teachProcessMessage
 16474 ;; This function uses a non-reentrant model
 16475 ;;
 16476                           
 16477                           	psect	text37
 16478   00AD7A                     __ptext37:
 16479                           	callstack 0
 16480   00AD7A                     _doEvuln:
 16481                           	callstack 8
 16482                           
 16483                           ;../../VLCBlib_PIC/event_teach_large.c: 767:     uint8_t result;;../../VLCBlib_PIC/event
      +                          _teach_large.c: 768:     result = removeEvent(nodeNumber, eventNumber);
 16484                           
 16485                           ; BSR set to: 0
 16486                           ;incstack = 0
 16487   00AD7A  C1D2  F1CD         	movff	doEvuln@nodeNumber,removeEvent@nodeNumber
 16488   00AD7E  C1D3  F1CE         	movff	doEvuln@nodeNumber+1,removeEvent@nodeNumber+1
 16489   00AD82  C1D4  F1CF         	movff	doEvuln@eventNumber,removeEvent@eventNumber
 16490   00AD86  C1D5  F1D0         	movff	doEvuln@eventNumber+1,removeEvent@eventNumber+1
 16491   00AD8A  ECFF  F061         	call	_removeEvent	;wreg free
 16492   00AD8E  0101               	movlb	1	; () banked
 16493   00AD90  6FD6               	movwf	doEvuln@result& (0+255),b
 16494                           
 16495                           ; BSR set to: 1
 16496                           ;../../VLCBlib_PIC/event_teach_large.c: 769:     if (result) {
 16497   00AD92  51D6               	movf	doEvuln@result& (0+255),w,b
 16498   00AD94  B4D8               	btfsc	status,2,c
 16499   00AD96  D018               	goto	l22871
 16500                           
 16501                           ; BSR set to: 1
 16502                           ;../../VLCBlib_PIC/event_teach_large.c: 770:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, result);
 16503   00AD98  C0B5  F0A7         	movff	_nn+1,sendMessage3@data1
 16504   00AD9C  C0B4  F0A8         	movff	_nn,sendMessage3@data2
 16505   00ADA0  C1D6  F0A9         	movff	doEvuln@result,sendMessage3@data3
 16506   00ADA4  0E6F               	movlw	111
 16507   00ADA6  ECA5  F061         	call	_sendMessage3
 16508                           
 16509                           ;../../VLCBlib_PIC/event_teach_large.c: 772:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_EVULN, SERVICE_ID_OLD_TEACH, result);
 16510   00ADAA  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 16511   00ADAE  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 16512   00ADB2  0E95               	movlw	149
 16513   00ADB4  0101               	movlb	1	; () banked
 16514   00ADB6  6FC8               	movwf	sendMessage5@data3& (0+255),b
 16515   00ADB8  0E04               	movlw	4
 16516   00ADBA  6FC9               	movwf	sendMessage5@data4& (0+255),b
 16517   00ADBC  C1D6  F1CA         	movff	doEvuln@result,sendMessage5@data5
 16518   00ADC0  0EAF               	movlw	175
 16519   00ADC2  EC47  F061         	call	_sendMessage5
 16520   00ADC6  0012               	return	
 16521   00ADC8                     l22871:
 16522                           
 16523                           ; BSR set to: 1
 16524                           ;../../VLCBlib_PIC/event_teach_large.c: 777:     sendMessage2(OPC_WRACK, nn.bytes.hi, nn
      +                          .bytes.lo);
 16525   00ADC8  C0B5  F0A7         	movff	_nn+1,sendMessage2@data1
 16526   00ADCC  C0B4  F0A8         	movff	_nn,sendMessage2@data2
 16527   00ADD0  0E59               	movlw	89
 16528   00ADD2  EC17  F061         	call	_sendMessage2
 16529                           
 16530                           ;../../VLCBlib_PIC/event_teach_large.c: 779:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, OPC_EVULN, SERVICE_ID_OLD_TEACH, GRSP_OK);
 16531   00ADD6  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 16532   00ADDA  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 16533   00ADDE  0E95               	movlw	149
 16534   00ADE0  0101               	movlb	1	; () banked
 16535   00ADE2  6FC8               	movwf	sendMessage5@data3& (0+255),b
 16536   00ADE4  0E04               	movlw	4
 16537   00ADE6  6FC9               	movwf	sendMessage5@data4& (0+255),b
 16538   00ADE8  0E00               	movlw	0
 16539   00ADEA  6FCA               	movwf	sendMessage5@data5& (0+255),b
 16540   00ADEC  0EAF               	movlw	175
 16541   00ADEE  EC47  F061         	call	_sendMessage5
 16542   00ADF2  0012               	return		;funcret
 16543   00ADF4                     __end_of_doEvuln:
 16544                           	callstack 0
 16545                           
 16546 ;; *************** function _removeEvent *****************
 16547 ;; Defined at:
 16548 ;;		line 872 in file "../../VLCBlib_PIC/event_teach_large.c"
 16549 ;; Parameters:    Size  Location     Type
 16550 ;;  nodeNumber      2   15[BANK1 ] unsigned short 
 16551 ;;  eventNumber     2   17[BANK1 ] unsigned short 
 16552 ;; Auto vars:     Size  Location     Type
 16553 ;;  tableIndex      1   19[BANK1 ] unsigned char 
 16554 ;; Return value:  Size  Location     Type
 16555 ;;                  1    wreg      unsigned char 
 16556 ;; Registers used:
 16557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16558 ;; Tracked objects:
 16559 ;;		On entry : 0/0
 16560 ;;		On exit  : 0/0
 16561 ;;		Unchanged: 0/0
 16562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16563 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16564 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16566 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16567 ;;Total ram usage:        5 bytes
 16568 ;; Hardware stack levels used: 1
 16569 ;; Hardware stack levels required when called: 19
 16570 ;; This function calls:
 16571 ;;		_findEvent
 16572 ;;		_removeTableEntry
 16573 ;; This function is called by:
 16574 ;;		_doEvuln
 16575 ;; This function uses a non-reentrant model
 16576 ;;
 16577                           
 16578                           	psect	text38
 16579   00C3FE                     __ptext38:
 16580                           	callstack 0
 16581   00C3FE                     _removeEvent:
 16582                           	callstack 8
 16583                           
 16584                           ;../../VLCBlib_PIC/event_teach_large.c: 874:     uint8_t tableIndex = findEvent(nodeNumb
      +                          er, eventNumber);
 16585                           
 16586                           ;incstack = 0
 16587   00C3FE  C1CD  F1BE         	movff	removeEvent@nodeNumber,findEvent@nodeNumber
 16588   00C402  C1CE  F1BF         	movff	removeEvent@nodeNumber+1,findEvent@nodeNumber+1
 16589   00C406  C1CF  F1C0         	movff	removeEvent@eventNumber,findEvent@eventNumber
 16590   00C40A  C1D0  F1C1         	movff	removeEvent@eventNumber+1,findEvent@eventNumber+1
 16591   00C40E  EC1A  F053         	call	_findEvent	;wreg free
 16592   00C412  0101               	movlb	1	; () banked
 16593   00C414  6FD1               	movwf	removeEvent@tableIndex& (0+255),b
 16594                           
 16595                           ; BSR set to: 1
 16596                           ;../../VLCBlib_PIC/event_teach_large.c: 875:     if (tableIndex == 0xff) return CMDERR_I
      +                          NVALID_EVENT;
 16597   00C416  29D1               	incf	removeEvent@tableIndex& (0+255),w,b
 16598   00C418  A4D8               	btfss	status,2,c
 16599   00C41A  D002               	goto	l21531
 16600                           
 16601                           ; BSR set to: 1
 16602   00C41C  0E07               	movlw	7
 16603   00C41E  0012               	return	
 16604   00C420                     l21531:
 16605                           
 16606                           ; BSR set to: 1
 16607                           ;../../VLCBlib_PIC/event_teach_large.c: 877:     return removeTableEntry(tableIndex);
 16608   00C420  51D1               	movf	removeEvent@tableIndex& (0+255),w,b
 16609   00C422  ECC7  F03D         	call	_removeTableEntry
 16610   00C426  0012               	return		;funcret
 16611   00C428                     __end_of_removeEvent:
 16612                           	callstack 0
 16613                           
 16614 ;; *************** function _doEvlrn *****************
 16615 ;; Defined at:
 16616 ;;		line 683 in file "../../VLCBlib_PIC/event_teach_large.c"
 16617 ;; Parameters:    Size  Location     Type
 16618 ;;  nodeNumber      2   52[BANK1 ] unsigned short 
 16619 ;;  eventNumber     2   54[BANK1 ] unsigned short 
 16620 ;;  evNum           1   56[BANK1 ] unsigned char 
 16621 ;;  evVal           1   57[BANK1 ] unsigned char 
 16622 ;; Auto vars:     Size  Location     Type
 16623 ;;  error           1   58[BANK1 ] unsigned char 
 16624 ;; Return value:  Size  Location     Type
 16625 ;;                  1    wreg      void 
 16626 ;; Registers used:
 16627 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16628 ;; Tracked objects:
 16629 ;;		On entry : 0/0
 16630 ;;		On exit  : 0/0
 16631 ;;		Unchanged: 0/0
 16632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16633 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16634 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16636 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16637 ;;Total ram usage:        7 bytes
 16638 ;; Hardware stack levels used: 1
 16639 ;; Hardware stack levels required when called: 23
 16640 ;; This function calls:
 16641 ;;		_APP_addEvent
 16642 ;;		_sendMessage2
 16643 ;;		_sendMessage3
 16644 ;;		_sendMessage5
 16645 ;; This function is called by:
 16646 ;;		_teachProcessMessage
 16647 ;; This function uses a non-reentrant model
 16648 ;;
 16649                           
 16650                           	psect	text39
 16651   0094FE                     __ptext39:
 16652                           	callstack 0
 16653   0094FE                     _doEvlrn:
 16654                           	callstack 5
 16655                           
 16656                           ;../../VLCBlib_PIC/event_teach_large.c: 684:     uint8_t error;;../../VLCBlib_PIC/event_
      +                          teach_large.c: 685:     evNum--;
 16657                           
 16658                           ;incstack = 0
 16659   0094FE  0101               	movlb	1	; () banked
 16660   009500  07F6               	decf	doEvlrn@evNum& (0+255),f,b
 16661                           
 16662                           ; BSR set to: 1
 16663                           ;../../VLCBlib_PIC/event_teach_large.c: 686:     if (evNum >= 20) {
 16664   009502  0E13               	movlw	19
 16665   009504  65F6               	cpfsgt	doEvlrn@evNum& (0+255),b
 16666   009506  D019               	goto	l22847
 16667                           
 16668                           ; BSR set to: 1
 16669                           ;../../VLCBlib_PIC/event_teach_large.c: 687:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, CMDERR_INV_EV_IDX);
 16670   009508  C0B5  F0A7         	movff	_nn+1,sendMessage3@data1
 16671   00950C  C0B4  F0A8         	movff	_nn,sendMessage3@data2
 16672   009510  0E06               	movlw	6
 16673   009512  0100               	movlb	0	; () banked
 16674   009514  6FA9               	movwf	sendMessage3@data3& (0+255),b
 16675   009516  0E6F               	movlw	111
 16676   009518  ECA5  F061         	call	_sendMessage3
 16677                           
 16678                           ;../../VLCBlib_PIC/event_teach_large.c: 689:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, CMDERR_INV_EV_IDX);
 16679   00951C  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 16680   009520  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 16681   009524  0ED2               	movlw	210
 16682   009526  0101               	movlb	1	; () banked
 16683   009528  6FC8               	movwf	sendMessage5@data3& (0+255),b
 16684   00952A  0E04               	movlw	4
 16685   00952C  6FC9               	movwf	sendMessage5@data4& (0+255),b
 16686   00952E  0E06               	movlw	6
 16687   009530  6FCA               	movwf	sendMessage5@data5& (0+255),b
 16688   009532  0EAF               	movlw	175
 16689   009534  EC47  F061         	call	_sendMessage5
 16690   009538  0012               	return	
 16691   00953A                     l22847:
 16692                           
 16693                           ; BSR set to: 1
 16694                           ;../../VLCBlib_PIC/event_teach_large.c: 696:     error = APP_addEvent(nodeNumber, eventN
      +                          umber, evNum, evVal, FALSE);
 16695   00953A  C1F2  F1EA         	movff	doEvlrn@nodeNumber,APP_addEvent@nodeNumber
 16696   00953E  C1F3  F1EB         	movff	doEvlrn@nodeNumber+1,APP_addEvent@nodeNumber+1
 16697   009542  C1F4  F1EC         	movff	doEvlrn@eventNumber,APP_addEvent@eventNumber
 16698   009546  C1F5  F1ED         	movff	doEvlrn@eventNumber+1,APP_addEvent@eventNumber+1
 16699   00954A  C1F6  F1EE         	movff	doEvlrn@evNum,APP_addEvent@evNum
 16700   00954E  C1F7  F1EF         	movff	doEvlrn@evVal,APP_addEvent@evVal
 16701   009552  0E00               	movlw	0
 16702   009554  6FF0               	movwf	APP_addEvent@forceOwnNN& (0+255),b
 16703   009556  EC01  F059         	call	_APP_addEvent	;wreg free
 16704   00955A  0101               	movlb	1	; () banked
 16705   00955C  6FF8               	movwf	doEvlrn@error& (0+255),b
 16706                           
 16707                           ; BSR set to: 1
 16708                           ;../../VLCBlib_PIC/event_teach_large.c: 697:     if (error) {
 16709   00955E  51F8               	movf	doEvlrn@error& (0+255),w,b
 16710   009560  B4D8               	btfsc	status,2,c
 16711   009562  D018               	goto	l22855
 16712                           
 16713                           ; BSR set to: 1
 16714                           ;../../VLCBlib_PIC/event_teach_large.c: 699:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, error);
 16715   009564  C0B5  F0A7         	movff	_nn+1,sendMessage3@data1
 16716   009568  C0B4  F0A8         	movff	_nn,sendMessage3@data2
 16717   00956C  C1F8  F0A9         	movff	doEvlrn@error,sendMessage3@data3
 16718   009570  0E6F               	movlw	111
 16719   009572  ECA5  F061         	call	_sendMessage3
 16720                           
 16721                           ;../../VLCBlib_PIC/event_teach_large.c: 701:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, error);
 16722   009576  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 16723   00957A  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 16724   00957E  0ED2               	movlw	210
 16725   009580  0101               	movlb	1	; () banked
 16726   009582  6FC8               	movwf	sendMessage5@data3& (0+255),b
 16727   009584  0E04               	movlw	4
 16728   009586  6FC9               	movwf	sendMessage5@data4& (0+255),b
 16729   009588  C1F8  F1CA         	movff	doEvlrn@error,sendMessage5@data5
 16730   00958C  0EAF               	movlw	175
 16731   00958E  EC47  F061         	call	_sendMessage5
 16732   009592  0012               	return	
 16733   009594                     l22855:
 16734                           
 16735                           ; BSR set to: 1
 16736                           ;../../VLCBlib_PIC/event_teach_large.c: 706:     teachDiagnostics[0x01].asUint++;
 16737   009594  4BB4               	infsnz	(_teachDiagnostics+2)& (0+255),f,b
 16738   009596  2BB5               	incf	(_teachDiagnostics+3)& (0+255),f,b
 16739                           
 16740                           ; BSR set to: 1
 16741                           ;../../VLCBlib_PIC/event_teach_large.c: 708:     sendMessage2(OPC_WRACK, nn.bytes.hi, nn
      +                          .bytes.lo);
 16742   009598  C0B5  F0A7         	movff	_nn+1,sendMessage2@data1
 16743   00959C  C0B4  F0A8         	movff	_nn,sendMessage2@data2
 16744   0095A0  0E59               	movlw	89
 16745   0095A2  EC17  F061         	call	_sendMessage2
 16746                           
 16747                           ;../../VLCBlib_PIC/event_teach_large.c: 710:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, GRSP_OK);
 16748   0095A6  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 16749   0095AA  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 16750   0095AE  0ED2               	movlw	210
 16751   0095B0  0101               	movlb	1	; () banked
 16752   0095B2  6FC8               	movwf	sendMessage5@data3& (0+255),b
 16753   0095B4  0E04               	movlw	4
 16754   0095B6  6FC9               	movwf	sendMessage5@data4& (0+255),b
 16755   0095B8  0E00               	movlw	0
 16756   0095BA  6FCA               	movwf	sendMessage5@data5& (0+255),b
 16757   0095BC  0EAF               	movlw	175
 16758   0095BE  EC47  F061         	call	_sendMessage5
 16759   0095C2  0012               	return		;funcret
 16760   0095C4                     __end_of_doEvlrn:
 16761                           	callstack 0
 16762                           
 16763 ;; *************** function _APP_addEvent *****************
 16764 ;; Defined at:
 16765 ;;		line 195 in file "../universalEvents.c"
 16766 ;; Parameters:    Size  Location     Type
 16767 ;;  nodeNumber      2   44[BANK1 ] unsigned short 
 16768 ;;  eventNumber     2   46[BANK1 ] unsigned short 
 16769 ;;  evNum           1   48[BANK1 ] unsigned char 
 16770 ;;  evVal           1   49[BANK1 ] unsigned char 
 16771 ;;  forceOwnNN      1   50[BANK1 ] enum E12767
 16772 ;; Auto vars:     Size  Location     Type
 16773 ;;  tableIndex      1   51[BANK1 ] unsigned char 
 16774 ;; Return value:  Size  Location     Type
 16775 ;;                  1    wreg      unsigned char 
 16776 ;; Registers used:
 16777 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16778 ;; Tracked objects:
 16779 ;;		On entry : 0/0
 16780 ;;		On exit  : 0/0
 16781 ;;		Unchanged: 0/0
 16782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16783 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16784 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16786 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16787 ;;Total ram usage:        8 bytes
 16788 ;; Hardware stack levels used: 1
 16789 ;; Hardware stack levels required when called: 22
 16790 ;; This function calls:
 16791 ;;		_addEvent
 16792 ;;		_checkRemoveTableEntry
 16793 ;;		_rebuildHashtable
 16794 ;;		_writeEv
 16795 ;; This function is called by:
 16796 ;;		_doEvlrn
 16797 ;; This function uses a non-reentrant model
 16798 ;;
 16799                           
 16800                           	psect	text40
 16801   00B202                     __ptext40:
 16802                           	callstack 0
 16803   00B202                     _APP_addEvent:
 16804                           	callstack 5
 16805                           
 16806                           ;../universalEvents.c: 197:     if ((evNum == 0) && (evVal != 0))
 16807                           
 16808                           ;incstack = 0
 16809   00B202  0101               	movlb	1	; () banked
 16810   00B204  51EE               	movf	APP_addEvent@evNum& (0+255),w,b
 16811   00B206  A4D8               	btfss	status,2,c
 16812   00B208  D021               	goto	l654
 16813                           
 16814                           ; BSR set to: 1
 16815   00B20A  51EF               	movf	APP_addEvent@evVal& (0+255),w,b
 16816   00B20C  B4D8               	btfsc	status,2,c
 16817   00B20E  D01E               	goto	l654
 16818                           
 16819                           ; BSR set to: 1
 16820                           ;../universalEvents.c: 198:     {;../universalEvents.c: 200:         if ((evVal >= 1) &&
      +                           (evVal <= (7+16*4))) {
 16821   00B210  51EF               	movf	APP_addEvent@evVal& (0+255),w,b
 16822   00B212  B4D8               	btfsc	status,2,c
 16823   00B214  D01B               	goto	l654
 16824                           
 16825                           ; BSR set to: 1
 16826   00B216  0E48               	movlw	72
 16827   00B218  61EF               	cpfslt	APP_addEvent@evVal& (0+255),b
 16828   00B21A  D018               	goto	l654
 16829                           
 16830                           ; BSR set to: 1
 16831                           ;../universalEvents.c: 201:             uint8_t tableIndex = happening2Event[evVal-1];
 16832   00B21C  0EFF               	movlw	low (_happening2Event+65535)
 16833   00B21E  25EF               	addwf	APP_addEvent@evVal& (0+255),w,b
 16834   00B220  6ED9               	movwf	fsr2l,c
 16835   00B222  6ADA               	clrf	fsr2h,c
 16836   00B224  0E02               	movlw	high (_happening2Event+65535)
 16837   00B226  22DA               	addwfc	fsr2h,f,c
 16838   00B228  50DF               	movf	indf2,w,c
 16839   00B22A  6FF1               	movwf	APP_addEvent@tableIndex& (0+255),b
 16840                           
 16841                           ; BSR set to: 1
 16842                           ;../universalEvents.c: 202:             if (tableIndex != 0xff) {
 16843   00B22C  29F1               	incf	APP_addEvent@tableIndex& (0+255),w,b
 16844   00B22E  B4D8               	btfsc	status,2,c
 16845   00B230  D00D               	goto	l654
 16846                           
 16847                           ; BSR set to: 1
 16848                           ;../universalEvents.c: 205:                 writeEv(tableIndex, 0, 0);
 16849   00B232  0E00               	movlw	0
 16850   00B234  6FCF               	movwf	writeEv@evNum& (0+255),b
 16851   00B236  0E00               	movlw	0
 16852   00B238  6FD0               	movwf	writeEv@evVal& (0+255),b
 16853   00B23A  51F1               	movf	APP_addEvent@tableIndex& (0+255),w,b
 16854   00B23C  EC69  F01B         	call	_writeEv
 16855                           
 16856                           ;../universalEvents.c: 206:                 checkRemoveTableEntry(tableIndex);
 16857   00B240  0101               	movlb	1	; () banked
 16858   00B242  51F1               	movf	APP_addEvent@tableIndex& (0+255),w,b
 16859   00B244  ECEB  F05E         	call	_checkRemoveTableEntry
 16860                           
 16861                           ;../universalEvents.c: 208:                 rebuildHashtable();
 16862   00B248  ECAC  F03F         	call	_rebuildHashtable	;wreg free
 16863   00B24C                     l654:
 16864                           
 16865                           ;../universalEvents.c: 213:     return addEvent(nodeNumber, eventNumber, evNum, evVal, f
      +                          orceOwnNN);
 16866   00B24C  C1EA  F1DB         	movff	APP_addEvent@nodeNumber,addEvent@nodeNumber
 16867   00B250  C1EB  F1DC         	movff	APP_addEvent@nodeNumber+1,addEvent@nodeNumber+1
 16868   00B254  C1EC  F1DD         	movff	APP_addEvent@eventNumber,addEvent@eventNumber
 16869   00B258  C1ED  F1DE         	movff	APP_addEvent@eventNumber+1,addEvent@eventNumber+1
 16870   00B25C  C1EE  F1DF         	movff	APP_addEvent@evNum,addEvent@evNum
 16871   00B260  C1EF  F1E0         	movff	APP_addEvent@evVal,addEvent@evVal
 16872   00B264  C1F0  F1E1         	movff	APP_addEvent@forceOwnNN,addEvent@forceOwnNN
 16873   00B268  ECFD  F032         	call	_addEvent	;wreg free
 16874   00B26C  0012               	return		;funcret
 16875   00B26E                     __end_of_APP_addEvent:
 16876                           	callstack 0
 16877                           
 16878 ;; *************** function _pollTimedResponse *****************
 16879 ;; Defined at:
 16880 ;;		line 108 in file "../../VLCBlib_PIC/timedResponse.c"
 16881 ;; Parameters:    Size  Location     Type
 16882 ;;		None
 16883 ;; Auto vars:     Size  Location     Type
 16884 ;;  result          1   43[BANK1 ] enum E12928
 16885 ;; Return value:  Size  Location     Type
 16886 ;;                  1    wreg      void 
 16887 ;; Registers used:
 16888 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16889 ;; Tracked objects:
 16890 ;;		On entry : 0/0
 16891 ;;		On exit  : 0/0
 16892 ;;		Unchanged: 0/0
 16893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16895 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16896 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16897 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16898 ;;Total ram usage:        3 bytes
 16899 ;; Hardware stack levels used: 1
 16900 ;; Hardware stack levels required when called: 20
 16901 ;; This function calls:
 16902 ;;		NULL
 16903 ;;		_mnsTRallDiagnosticsCallback
 16904 ;;		_mnsTRrqnpnCallback
 16905 ;;		_mnsTRserviceDiscoveryCallback
 16906 ;;		_nerdCallback
 16907 ;;		_nvTRnvrdCallback
 16908 ;;		_reqevCallback
 16909 ;;		_sodTRCallback
 16910 ;; This function is called by:
 16911 ;;		_poll
 16912 ;; This function uses a non-reentrant model
 16913 ;;
 16914                           
 16915                           	psect	text41
 16916   00AC82                     __ptext41:
 16917                           	callstack 0
 16918   00AC82                     _pollTimedResponse:
 16919                           	callstack 9
 16920                           
 16921                           ;../../VLCBlib_PIC/timedResponse.c: 109:     TimedResponseResult result;;../../VLCBlib_P
      +                          IC/timedResponse.c: 111:     if (timedResponseType == 0xFF) {
 16922                           
 16923                           ;incstack = 0
 16924   00AC82  0100               	movlb	0	; () banked
 16925   00AC84  29BC               	incf	_timedResponseType& (0+255),w,b
 16926   00AC86  B4D8               	btfsc	status,2,c
 16927   00AC88  0012               	return	
 16928                           
 16929                           ; BSR set to: 0
 16930                           ;../../VLCBlib_PIC/timedResponse.c: 115:     if (timedResponseCallback == ((void*)0)) {
 16931   00AC8A  5021               	movf	_timedResponseCallback^0,w,c
 16932   00AC8C  1022               	iorwf	(_timedResponseCallback+1)^0,w,c
 16933   00AC8E  A4D8               	btfss	status,2,c
 16934   00AC90  D002               	goto	l24515
 16935   00AC92                     u26780:
 16936                           
 16937                           ; BSR set to: 0
 16938                           ;../../VLCBlib_PIC/timedResponse.c: 117:         timedResponseType = 0xFF;
 16939   00AC92  69BC               	setf	_timedResponseType& (0+255),b
 16940                           
 16941                           ;../../VLCBlib_PIC/timedResponse.c: 118:         return;
 16942   00AC94  0012               	return	
 16943   00AC96                     l24515:
 16944                           
 16945                           ; BSR set to: 0
 16946                           ;../../VLCBlib_PIC/timedResponse.c: 122:     result = (*timedResponseCallback)(timedResp
      +                          onseType, timedResponseServiceIndex, timedResponseStep);
 16947   00AC96  D801               	call	u26798
 16948   00AC98  D00E               	goto	u26799
 16949   00AC9A                     u26798:
 16950   00AC9A  0005               	push	
 16951   00AC9C  6EFA               	movwf	pclath,c
 16952   00AC9E  5021               	movf	_timedResponseCallback^0,w,c
 16953   00ACA0  6EFD               	movwf	tosl,c
 16954   00ACA2  5022               	movf	(_timedResponseCallback+1)^0,w,c
 16955   00ACA4  6EFE               	movwf	tosh,c
 16956   00ACA6  6AFF               	clrf	tosu,c
 16957   00ACA8  50FA               	movf	pclath,w,c
 16958   00ACAA  C0BE  F1D8         	movff	_timedResponseServiceIndex,reqevCallback@serviceIndex
 16959   00ACAE  C0BB  F1D9         	movff	_timedResponseStep,reqevCallback@step
 16960   00ACB2  51BC               	movf	_timedResponseType& (0+255),w,b
 16961   00ACB4  0012               	return		;indir
 16962   00ACB6                     u26799:
 16963   00ACB6  0101               	movlb	1	; () banked
 16964   00ACB8  6FE9               	movwf	pollTimedResponse@result& (0+255),b
 16965                           
 16966                           ;../../VLCBlib_PIC/timedResponse.c: 123:     switch (result) {
 16967   00ACBA  D00F               	goto	l24531
 16968   00ACBC                     l24517:
 16969                           
 16970                           ; BSR set to: 1
 16971                           ;../../VLCBlib_PIC/timedResponse.c: 127:             if (timedResponseAllServicesFlag) {
 16972   00ACBC  0100               	movlb	0	; () banked
 16973   00ACBE  51BD               	movf	_timedResponseAllServicesFlag& (0+255),w,b
 16974   00ACC0  B4D8               	btfsc	status,2,c
 16975   00ACC2  D7E7               	goto	u26780
 16976                           
 16977                           ; BSR set to: 0
 16978                           ;../../VLCBlib_PIC/timedResponse.c: 129:                 timedResponseServiceIndex++;
 16979   00ACC4  2BBE               	incf	_timedResponseServiceIndex& (0+255),f,b
 16980                           
 16981                           ; BSR set to: 0
 16982                           ;../../VLCBlib_PIC/timedResponse.c: 130:                 if (timedResponseServiceIndex >
      +                          = 9) {
 16983   00ACC6  0E08               	movlw	8
 16984   00ACC8  65BE               	cpfsgt	_timedResponseServiceIndex& (0+255),b
 16985   00ACCA  D001               	goto	l24525
 16986   00ACCC  D7E2               	goto	u26780
 16987   00ACCE                     l24525:
 16988                           
 16989                           ; BSR set to: 0
 16990                           ;../../VLCBlib_PIC/timedResponse.c: 134:                     timedResponseStep = 0;
 16991   00ACCE  0E00               	movlw	0
 16992   00ACD0  6FBB               	movwf	_timedResponseStep& (0+255),b
 16993   00ACD2  0012               	return	
 16994   00ACD4                     l24527:
 16995                           
 16996                           ; BSR set to: 1
 16997                           ;../../VLCBlib_PIC/timedResponse.c: 143:             timedResponseStep++;
 16998   00ACD4  0100               	movlb	0	; () banked
 16999   00ACD6  2BBB               	incf	_timedResponseStep& (0+255),f,b
 17000                           
 17001                           ;../../VLCBlib_PIC/timedResponse.c: 144:             break;
 17002   00ACD8  0012               	return	
 17003   00ACDA                     l24531:
 17004                           
 17005                           ; BSR set to: 1
 17006   00ACDA  51E9               	movf	pollTimedResponse@result& (0+255),w,b
 17007   00ACDC  6FE7               	movwf	??_pollTimedResponse& (0+255),b
 17008   00ACDE  6BE8               	clrf	(??_pollTimedResponse+1)& (0+255),b
 17009                           
 17010                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17011                           ; Switch size 1, requested type "simple"
 17012                           ; Number of cases is 1, Range of values is 0 to 0
 17013                           ; switch strategies available:
 17014                           ; Name         Instructions Cycles
 17015                           ; simple_byte            4     3 (average)
 17016                           ;	Chosen strategy is simple_byte
 17017   00ACE0  51E8               	movf	(??_pollTimedResponse+1)& (0+255),w,b
 17018   00ACE2  0A00               	xorlw	0	; case 0
 17019   00ACE4  A4D8               	btfss	status,2,c
 17020   00ACE6  0012               	return	
 17021                           
 17022                           ; BSR set to: 1
 17023                           ; Switch size 1, requested type "simple"
 17024                           ; Number of cases is 3, Range of values is 0 to 2
 17025                           ; switch strategies available:
 17026                           ; Name         Instructions Cycles
 17027                           ; simple_byte           10     6 (average)
 17028                           ;	Chosen strategy is simple_byte
 17029   00ACE8  51E7               	movf	??_pollTimedResponse& (0+255),w,b
 17030   00ACEA  0A00               	xorlw	0	; case 0
 17031   00ACEC  B4D8               	btfsc	status,2,c
 17032   00ACEE  D7E6               	goto	l24517
 17033   00ACF0  0A01               	xorlw	1	; case 1
 17034   00ACF2  B4D8               	btfsc	status,2,c
 17035   00ACF4  0012               	return	
 17036   00ACF6  0A03               	xorlw	3	; case 2
 17037   00ACF8  A4D8               	btfss	status,2,c
 17038   00ACFA  0012               	return	
 17039   00ACFC  D7EB               	goto	l24527
 17040   00ACFE                     __end_of_pollTimedResponse:
 17041                           	callstack 0
 17042                           
 17043 ;; *************** function _reqevCallback *****************
 17044 ;; Defined at:
 17045 ;;		line 841 in file "../../VLCBlib_PIC/event_teach_large.c"
 17046 ;; Parameters:    Size  Location     Type
 17047 ;;  tableIndex      1    wreg     unsigned char 
 17048 ;;  serviceIndex    1   26[BANK1 ] unsigned char 
 17049 ;;  step            1   27[BANK1 ] unsigned char 
 17050 ;; Auto vars:     Size  Location     Type
 17051 ;;  tableIndex      1   40[BANK1 ] unsigned char 
 17052 ;;  nodeNumber      2   38[BANK1 ] struct Word
 17053 ;;  ev              2   36[BANK1 ] short 
 17054 ;;  eventNumber     2   34[BANK1 ] struct Word
 17055 ;;  nEv             1   33[BANK1 ] unsigned char 
 17056 ;; Return value:  Size  Location     Type
 17057 ;;                  1    wreg      enum E12935
 17058 ;; Registers used:
 17059 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17060 ;; Tracked objects:
 17061 ;;		On entry : 0/0
 17062 ;;		On exit  : 0/0
 17063 ;;		Unchanged: 0/0
 17064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17065 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17066 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17067 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17068 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17069 ;;Total ram usage:       15 bytes
 17070 ;; Hardware stack levels used: 1
 17071 ;; Hardware stack levels required when called: 17
 17072 ;; This function calls:
 17073 ;;		_getEN
 17074 ;;		_getEv
 17075 ;;		_getNN
 17076 ;;		_numEv
 17077 ;;		_sendMessage5
 17078 ;;		_sendMessage6
 17079 ;;		_tableIndexToEvtIdx
 17080 ;; This function is called by:
 17081 ;;		_doReval
 17082 ;;		_doReqev
 17083 ;;		_pollTimedResponse
 17084 ;; This function uses a non-reentrant model
 17085 ;;
 17086                           
 17087                           	psect	text42
 17088   0095C4                     __ptext42:
 17089                           	callstack 0
 17090   0095C4                     _reqevCallback:
 17091                           	callstack 11
 17092                           
 17093                           ;incstack = 0
 17094                           ;reqevCallback@tableIndex stored from wreg
 17095   0095C4  0101               	movlb	1	; () banked
 17096   0095C6  6FE6               	movwf	reqevCallback@tableIndex& (0+255),b
 17097                           
 17098                           ;../../VLCBlib_PIC/event_teach_large.c: 842:     Word nodeNumber, eventNumber;;../../VLC
      +                          Blib_PIC/event_teach_large.c: 844:     uint8_t nEv = numEv(tableIndex);
 17099   0095C8  0101               	movlb	1	; () banked
 17100   0095CA  51E6               	movf	reqevCallback@tableIndex& (0+255),w,b
 17101   0095CC  EC71  F046         	call	_numEv
 17102   0095D0  0101               	movlb	1	; () banked
 17103   0095D2  6FDF               	movwf	reqevCallback@nEv& (0+255),b
 17104                           
 17105                           ; BSR set to: 1
 17106                           ;../../VLCBlib_PIC/event_teach_large.c: 845:     int16_t ev;;../../VLCBlib_PIC/event_tea
      +                          ch_large.c: 847:     if (step+1 > nEv) {
 17107   0095D4  51D9               	movf	reqevCallback@step& (0+255),w,b
 17108   0095D6  6FDA               	movwf	??_reqevCallback& (0+255),b
 17109   0095D8  6BDB               	clrf	(??_reqevCallback+1)& (0+255),b
 17110   0095DA  0E01               	movlw	1
 17111   0095DC  27DA               	addwf	??_reqevCallback& (0+255),f,b
 17112   0095DE  0E00               	movlw	0
 17113   0095E0  23DB               	addwfc	(??_reqevCallback+1)& (0+255),f,b
 17114   0095E2  51DF               	movf	reqevCallback@nEv& (0+255),w,b
 17115   0095E4  6FDC               	movwf	(??_reqevCallback+2)& (0+255),b
 17116   0095E6  6BDD               	clrf	(??_reqevCallback+3)& (0+255),b
 17117   0095E8  51DA               	movf	??_reqevCallback& (0+255),w,b
 17118   0095EA  5DDC               	subwf	(??_reqevCallback+2)& (0+255),w,b
 17119   0095EC  51DD               	movf	(??_reqevCallback+3)& (0+255),w,b
 17120   0095EE  0A80               	xorlw	128
 17121   0095F0  6FDE               	movwf	(??_reqevCallback+4)& (0+255),b
 17122   0095F2  51DB               	movf	(??_reqevCallback+1)& (0+255),w,b
 17123   0095F4  0A80               	xorlw	128
 17124   0095F6  59DE               	subwfb	(??_reqevCallback+4)& (0+255),w,b
 17125   0095F8  B0D8               	btfsc	status,0,c
 17126   0095FA  D002               	goto	l23037
 17127                           
 17128                           ; BSR set to: 1
 17129                           ;../../VLCBlib_PIC/event_teach_large.c: 848:         return TIMED_RESPONSE_RESULT_FINISH
      +                          ED;
 17130   0095FC  0E00               	movlw	0
 17131   0095FE  0012               	return	
 17132   009600                     l23037:
 17133                           
 17134                           ; BSR set to: 1
 17135                           ;../../VLCBlib_PIC/event_teach_large.c: 851:     nodeNumber.word = getNN(tableIndex);
 17136   009600  51E6               	movf	reqevCallback@tableIndex& (0+255),w,b
 17137   009602  ECA7  F04B         	call	_getNN
 17138   009606  C097  F1E4         	movff	?_getNN,reqevCallback@nodeNumber
 17139   00960A  C098  F1E5         	movff	?_getNN+1,reqevCallback@nodeNumber+1
 17140                           
 17141                           ;../../VLCBlib_PIC/event_teach_large.c: 852:     eventNumber.word = getEN(tableIndex);
 17142   00960E  0101               	movlb	1	; () banked
 17143   009610  51E6               	movf	reqevCallback@tableIndex& (0+255),w,b
 17144   009612  ECFA  F056         	call	_getEN
 17145   009616  C097  F1E0         	movff	?_getEN,reqevCallback@eventNumber
 17146   00961A  C098  F1E1         	movff	?_getEN+1,reqevCallback@eventNumber+1
 17147                           
 17148                           ;../../VLCBlib_PIC/event_teach_large.c: 853:     ev = getEv(tableIndex, step);
 17149   00961E  C1D9  F09D         	movff	reqevCallback@step,getEv@evNum
 17150   009622  0101               	movlb	1	; () banked
 17151   009624  51E6               	movf	reqevCallback@tableIndex& (0+255),w,b
 17152   009626  EC1C  F03D         	call	_getEv
 17153   00962A  C09D  F1E2         	movff	?_getEv,reqevCallback@ev
 17154   00962E  C09E  F1E3         	movff	?_getEv+1,reqevCallback@ev+1
 17155                           
 17156                           ;../../VLCBlib_PIC/event_teach_large.c: 854:     if (ev >= 0) {
 17157   009632  0101               	movlb	1	; () banked
 17158   009634  BFE3               	btfsc	(reqevCallback@ev+1)& (0+255),7,b
 17159   009636  D027               	goto	l23047
 17160                           
 17161                           ; BSR set to: 1
 17162                           ;../../VLCBlib_PIC/event_teach_large.c: 855:         if (timedResponseOpcode == OPC_EVAN
      +                          S) {
 17163   009638  0ED3               	movlw	211
 17164   00963A  0100               	movlb	0	; () banked
 17165   00963C  19B6               	xorwf	_timedResponseOpcode& (0+255),w,b
 17166   00963E  A4D8               	btfss	status,2,c
 17167   009640  D011               	goto	l23045
 17168                           
 17169                           ; BSR set to: 0
 17170                           ;../../VLCBlib_PIC/event_teach_large.c: 856:             sendMessage6(OPC_EVANS, nodeNum
      +                          ber.bytes.hi, nodeNumber.bytes.lo, eventNumber.bytes.hi, eventNumber.bytes.lo, step+1, (
      +                          uint8_t)ev);
 17171   009642  C1E5  F1C6         	movff	reqevCallback@nodeNumber+1,sendMessage6@data1
 17172   009646  C1E4  F1C7         	movff	reqevCallback@nodeNumber,sendMessage6@data2
 17173   00964A  C1E1  F1C8         	movff	reqevCallback@eventNumber+1,sendMessage6@data3
 17174   00964E  C1E0  F1C9         	movff	reqevCallback@eventNumber,sendMessage6@data4
 17175   009652  0101               	movlb	1	; () banked
 17176   009654  29D9               	incf	reqevCallback@step& (0+255),w,b
 17177   009656  6FCA               	movwf	sendMessage6@data5& (0+255),b
 17178   009658  C1E2  F1CB         	movff	reqevCallback@ev,sendMessage6@data6
 17179   00965C  0ED3               	movlw	211
 17180   00965E  ECFF  F060         	call	_sendMessage6
 17181                           
 17182                           ;../../VLCBlib_PIC/event_teach_large.c: 857:         } else {
 17183   009662  D011               	goto	l23047
 17184   009664                     l23045:
 17185                           
 17186                           ; BSR set to: 0
 17187                           ;../../VLCBlib_PIC/event_teach_large.c: 858:             sendMessage5(OPC_NEVAL, nodeNum
      +                          ber.bytes.hi, nodeNumber.bytes.lo, tableIndexToEvtIdx(tableIndex), step+1, (uint8_t)ev);
 17188   009664  C1E5  F1C6         	movff	reqevCallback@nodeNumber+1,sendMessage5@data1
 17189   009668  C1E4  F1C7         	movff	reqevCallback@nodeNumber,sendMessage5@data2
 17190   00966C  0101               	movlb	1	; () banked
 17191   00966E  51E6               	movf	reqevCallback@tableIndex& (0+255),w,b
 17192   009670  EC72  F064         	call	_tableIndexToEvtIdx
 17193   009674  0101               	movlb	1	; () banked
 17194   009676  6FC8               	movwf	sendMessage5@data3& (0+255),b
 17195   009678  29D9               	incf	reqevCallback@step& (0+255),w,b
 17196   00967A  6FC9               	movwf	sendMessage5@data4& (0+255),b
 17197   00967C  C1E2  F1CA         	movff	reqevCallback@ev,sendMessage5@data5
 17198   009680  0EB5               	movlw	181
 17199   009682  EC47  F061         	call	_sendMessage5
 17200   009686                     l23047:
 17201                           
 17202                           ;../../VLCBlib_PIC/event_teach_large.c: 861:     return TIMED_RESPONSE_RESULT_NEXT;
 17203   009686  0E02               	movlw	2
 17204   009688  0012               	return		;funcret
 17205   00968A                     __end_of_reqevCallback:
 17206                           	callstack 0
 17207                           
 17208 ;; *************** function _nerdCallback *****************
 17209 ;; Defined at:
 17210 ;;		line 606 in file "../../VLCBlib_PIC/event_teach_large.c"
 17211 ;; Parameters:    Size  Location     Type
 17212 ;;  type            1    wreg     unsigned char 
 17213 ;;  serviceIndex    1   26[BANK1 ] unsigned char 
 17214 ;;  step            1   27[BANK1 ] unsigned char 
 17215 ;; Auto vars:     Size  Location     Type
 17216 ;;  type            1    0[COMRAM] unsigned char 
 17217 ;;  eventNumber     2   30[BANK1 ] struct Word
 17218 ;;  nodeNumber      2   28[BANK1 ] struct Word
 17219 ;; Return value:  Size  Location     Type
 17220 ;;                  1    wreg      enum E12935
 17221 ;; Registers used:
 17222 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17223 ;; Tracked objects:
 17224 ;;		On entry : 0/0
 17225 ;;		On exit  : 0/0
 17226 ;;		Unchanged: 0/0
 17227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17228 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17229 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17231 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17232 ;;Total ram usage:        6 bytes
 17233 ;; Hardware stack levels used: 1
 17234 ;; Hardware stack levels required when called: 17
 17235 ;; This function calls:
 17236 ;;		_getEN
 17237 ;;		_getNN
 17238 ;;		_sendMessage7
 17239 ;;		_tableIndexToEvtIdx
 17240 ;;		_validStart
 17241 ;; This function is called by:
 17242 ;;		_doNerd
 17243 ;;		_pollTimedResponse
 17244 ;; This function uses a non-reentrant model
 17245 ;;
 17246                           
 17247                           	psect	text43
 17248   00B3AA                     __ptext43:
 17249                           	callstack 0
 17250   00B3AA                     _nerdCallback:
 17251                           	callstack 11
 17252                           
 17253                           ;../../VLCBlib_PIC/event_teach_large.c: 607:     Word nodeNumber, eventNumber;;../../VLC
      +                          Blib_PIC/event_teach_large.c: 609:     if (step >= 255) {
 17254                           
 17255                           ;incstack = 0
 17256   00B3AA  0101               	movlb	1	; () banked
 17257   00B3AC  29D9               	incf	nerdCallback@step& (0+255),w,b
 17258   00B3AE  A4D8               	btfss	status,2,c
 17259   00B3B0  D002               	goto	l23019
 17260                           
 17261                           ; BSR set to: 1
 17262                           ;../../VLCBlib_PIC/event_teach_large.c: 610:         return TIMED_RESPONSE_RESULT_FINISH
      +                          ED;
 17263   00B3B2  0E00               	movlw	0
 17264   00B3B4  0012               	return	
 17265   00B3B6                     l23019:
 17266                           
 17267                           ; BSR set to: 1
 17268                           ;../../VLCBlib_PIC/event_teach_large.c: 613:     if (validStart(step)) {
 17269   00B3B6  51D9               	movf	nerdCallback@step& (0+255),w,b
 17270   00B3B8  EC9A  F05D         	call	_validStart
 17271   00B3BC  0900               	iorlw	0
 17272   00B3BE  B4D8               	btfsc	status,2,c
 17273   00B3C0  D025               	goto	l23025
 17274                           
 17275                           ;../../VLCBlib_PIC/event_teach_large.c: 614:         nodeNumber.word = getNN(step);
 17276   00B3C2  0101               	movlb	1	; () banked
 17277   00B3C4  51D9               	movf	nerdCallback@step& (0+255),w,b
 17278   00B3C6  ECA7  F04B         	call	_getNN
 17279   00B3CA  C097  F1DA         	movff	?_getNN,nerdCallback@nodeNumber
 17280   00B3CE  C098  F1DB         	movff	?_getNN+1,nerdCallback@nodeNumber+1
 17281                           
 17282                           ;../../VLCBlib_PIC/event_teach_large.c: 615:         eventNumber.word = getEN(step);
 17283   00B3D2  0101               	movlb	1	; () banked
 17284   00B3D4  51D9               	movf	nerdCallback@step& (0+255),w,b
 17285   00B3D6  ECFA  F056         	call	_getEN
 17286   00B3DA  C097  F1DC         	movff	?_getEN,nerdCallback@eventNumber
 17287   00B3DE  C098  F1DD         	movff	?_getEN+1,nerdCallback@eventNumber+1
 17288                           
 17289                           ;../../VLCBlib_PIC/event_teach_large.c: 616:         sendMessage7(OPC_ENRSP, nn.bytes.hi
      +                          , nn.bytes.lo, nodeNumber.bytes.hi, nodeNumber.bytes.lo, eventNumber.bytes.hi, eventNumb
      +                          er.bytes.lo, tableIndexToEvtIdx(step));
 17290   00B3E2  C0B5  F1C6         	movff	_nn+1,sendMessage7@data1
 17291   00B3E6  C0B4  F1C7         	movff	_nn,sendMessage7@data2
 17292   00B3EA  C1DB  F1C8         	movff	nerdCallback@nodeNumber+1,sendMessage7@data3
 17293   00B3EE  C1DA  F1C9         	movff	nerdCallback@nodeNumber,sendMessage7@data4
 17294   00B3F2  C1DD  F1CA         	movff	nerdCallback@eventNumber+1,sendMessage7@data5
 17295   00B3F6  C1DC  F1CB         	movff	nerdCallback@eventNumber,sendMessage7@data6
 17296   00B3FA  0101               	movlb	1	; () banked
 17297   00B3FC  51D9               	movf	nerdCallback@step& (0+255),w,b
 17298   00B3FE  EC72  F064         	call	_tableIndexToEvtIdx
 17299   00B402  0101               	movlb	1	; () banked
 17300   00B404  6FCC               	movwf	sendMessage7@data7& (0+255),b
 17301   00B406  0EF2               	movlw	242
 17302   00B408  EC2F  F061         	call	_sendMessage7
 17303   00B40C                     l23025:
 17304                           
 17305                           ;../../VLCBlib_PIC/event_teach_large.c: 618:     return TIMED_RESPONSE_RESULT_NEXT;
 17306   00B40C  0E02               	movlw	2
 17307   00B40E  0012               	return		;funcret
 17308   00B410                     __end_of_nerdCallback:
 17309                           	callstack 0
 17310                           
 17311 ;; *************** function _nvTRnvrdCallback *****************
 17312 ;; Defined at:
 17313 ;;		line 371 in file "../../VLCBlib_PIC/nv.c"
 17314 ;; Parameters:    Size  Location     Type
 17315 ;;  type            1    wreg     unsigned char 
 17316 ;;  serviceIndex    1   26[BANK1 ] unsigned char 
 17317 ;;  step            1   27[BANK1 ] unsigned char 
 17318 ;; Auto vars:     Size  Location     Type
 17319 ;;  type            1    0[COMRAM] unsigned char 
 17320 ;;  valueOrError    2   28[BANK1 ] short 
 17321 ;; Return value:  Size  Location     Type
 17322 ;;                  1    wreg      enum E12952
 17323 ;; Registers used:
 17324 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17325 ;; Tracked objects:
 17326 ;;		On entry : 0/0
 17327 ;;		On exit  : 0/0
 17328 ;;		Unchanged: 0/0
 17329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17330 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17331 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17333 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17334 ;;Total ram usage:        4 bytes
 17335 ;; Hardware stack levels used: 1
 17336 ;; Hardware stack levels required when called: 17
 17337 ;; This function calls:
 17338 ;;		_getNV
 17339 ;;		_sendMessage4
 17340 ;; This function is called by:
 17341 ;;		_nvProcessMessage
 17342 ;;		_pollTimedResponse
 17343 ;; This function uses a non-reentrant model
 17344 ;;
 17345                           
 17346                           	psect	text44
 17347   00BEAA                     __ptext44:
 17348                           	callstack 0
 17349   00BEAA                     _nvTRnvrdCallback:
 17350                           	callstack 11
 17351                           
 17352                           ;../../VLCBlib_PIC/nv.c: 372:     int16_t valueOrError;;../../VLCBlib_PIC/nv.c: 373:    
      +                           if (step > (15+7*16)) {
 17353                           
 17354                           ;incstack = 0
 17355   00BEAA  0E7F               	movlw	127
 17356   00BEAC  0101               	movlb	1	; () banked
 17357   00BEAE  65D9               	cpfsgt	nvTRnvrdCallback@step& (0+255),b
 17358   00BEB0  D002               	goto	l22465
 17359   00BEB2                     u24000:
 17360                           
 17361                           ; BSR set to: 1
 17362                           ;../../VLCBlib_PIC/nv.c: 374:         return TIMED_RESPONSE_RESULT_FINISHED;
 17363   00BEB2  0E00               	movlw	0
 17364   00BEB4  0012               	return	
 17365   00BEB6                     l22465:
 17366                           
 17367                           ; BSR set to: 1
 17368                           ;../../VLCBlib_PIC/nv.c: 376:     valueOrError = getNV(step+1);
 17369   00BEB6  29D9               	incf	nvTRnvrdCallback@step& (0+255),w,b
 17370   00BEB8  ECD2  F05F         	call	_getNV
 17371   00BEBC  C08D  F1DA         	movff	?_getNV,nvTRnvrdCallback@valueOrError
 17372   00BEC0  C08E  F1DB         	movff	?_getNV+1,nvTRnvrdCallback@valueOrError+1
 17373                           
 17374                           ;../../VLCBlib_PIC/nv.c: 377:     if (valueOrError < 0) {
 17375   00BEC4  0101               	movlb	1	; () banked
 17376   00BEC6  BFDB               	btfsc	(nvTRnvrdCallback@valueOrError+1)& (0+255),7,b
 17377   00BEC8  D7F4               	goto	u24000
 17378                           
 17379                           ; BSR set to: 1
 17380                           ;../../VLCBlib_PIC/nv.c: 380:     sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.lo, step
      +                          +1, (uint8_t)(valueOrError));
 17381   00BECA  C0B5  F1C6         	movff	_nn+1,sendMessage4@data1
 17382   00BECE  C0B4  F1C7         	movff	_nn,sendMessage4@data2
 17383   00BED2  29D9               	incf	nvTRnvrdCallback@step& (0+255),w,b
 17384   00BED4  6FC8               	movwf	sendMessage4@data3& (0+255),b
 17385   00BED6  C1DA  F1C9         	movff	nvTRnvrdCallback@valueOrError,sendMessage4@data4
 17386   00BEDA  0E97               	movlw	151
 17387   00BEDC  EC5F  F061         	call	_sendMessage4
 17388                           
 17389                           ;../../VLCBlib_PIC/nv.c: 382:     nvDiagnostics[0x01].asUint++;
 17390   00BEE0  0101               	movlb	1	; () banked
 17391   00BEE2  4BA5               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 17392   00BEE4  2BA6               	incf	(_nvDiagnostics+3)& (0+255),f,b
 17393                           
 17394                           ; BSR set to: 1
 17395                           ;../../VLCBlib_PIC/nv.c: 384:     return TIMED_RESPONSE_RESULT_NEXT;
 17396   00BEE6  0E02               	movlw	2
 17397                           
 17398                           ; BSR set to: 1
 17399   00BEE8  0012               	return		;funcret
 17400   00BEEA                     __end_of_nvTRnvrdCallback:
 17401                           	callstack 0
 17402                           
 17403 ;; *************** function _mnsTRserviceDiscoveryCallback *****************
 17404 ;; Defined at:
 17405 ;;		line 879 in file "../../VLCBlib_PIC/mns.c"
 17406 ;; Parameters:    Size  Location     Type
 17407 ;;  type            1    wreg     unsigned char 
 17408 ;;  serviceIndex    1   26[BANK1 ] unsigned char 
 17409 ;;  step            1   27[BANK1 ] unsigned char 
 17410 ;; Auto vars:     Size  Location     Type
 17411 ;;  type            1    0[COMRAM] unsigned char 
 17412 ;; Return value:  Size  Location     Type
 17413 ;;                  1    wreg      enum E12935
 17414 ;; Registers used:
 17415 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17416 ;; Tracked objects:
 17417 ;;		On entry : 0/0
 17418 ;;		On exit  : 0/0
 17419 ;;		Unchanged: 0/0
 17420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17421 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17423 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17424 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17425 ;;Total ram usage:        6 bytes
 17426 ;; Hardware stack levels used: 1
 17427 ;; Hardware stack levels required when called: 17
 17428 ;; This function calls:
 17429 ;;		_sendMessage5
 17430 ;; This function is called by:
 17431 ;;		_mnsProcessMessage
 17432 ;;		_pollTimedResponse
 17433 ;; This function uses a non-reentrant model
 17434 ;;
 17435                           
 17436                           	psect	text45
 17437   00A6C4                     __ptext45:
 17438                           	callstack 0
 17439   00A6C4                     _mnsTRserviceDiscoveryCallback:
 17440                           	callstack 11
 17441                           
 17442                           ;../../VLCBlib_PIC/mns.c: 880:     if (step >= 9) {
 17443                           
 17444                           ; BSR set to: 1
 17445                           ;incstack = 0
 17446   00A6C4  0E08               	movlw	8
 17447   00A6C6  0101               	movlb	1	; () banked
 17448   00A6C8  65D9               	cpfsgt	mnsTRserviceDiscoveryCallback@step& (0+255),b
 17449   00A6CA  D002               	goto	l22383
 17450                           
 17451                           ; BSR set to: 1
 17452                           ;../../VLCBlib_PIC/mns.c: 881:         return TIMED_RESPONSE_RESULT_FINISHED;
 17453   00A6CC  0E00               	movlw	0
 17454   00A6CE  0012               	return	
 17455   00A6D0                     l22383:
 17456                           
 17457                           ; BSR set to: 1
 17458                           ;../../VLCBlib_PIC/mns.c: 884:         sendMessage5(OPC_SD, nn.bytes.hi, nn.bytes.lo, st
      +                          ep+1, services[step]->serviceNo, services[step]->version);
 17459   00A6D0  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 17460   00A6D4  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 17461   00A6D8  29D9               	incf	mnsTRserviceDiscoveryCallback@step& (0+255),w,b
 17462   00A6DA  6FC8               	movwf	sendMessage5@data3& (0+255),b
 17463   00A6DC  51D9               	movf	mnsTRserviceDiscoveryCallback@step& (0+255),w,b
 17464   00A6DE  0D02               	mullw	2
 17465   00A6E0  0E69               	movlw	low _services
 17466   00A6E2  24F3               	addwf	243,w,c
 17467   00A6E4  6EF6               	movwf	tblptrl,c
 17468   00A6E6  0EEE               	movlw	high _services
 17469   00A6E8  20F4               	addwfc	244,w,c
 17470   00A6EA  6EF7               	movwf	tblptrh,c
 17471   00A6EC                     	if	1	;There are 3 active tblptr bytes
 17472   00A6EC  6AF8               	clrf	tblptru,c
 17473   00A6EE  0E00               	movlw	low (__mediumconst shr (0+16))
 17474   00A6F0  22F8               	addwfc	tblptru,f,c
 17475   00A6F2                     	endif
 17476   00A6F2  0009               	tblrd		*+
 17477   00A6F4  CFF5 F1DA          	movff	tablat,??_mnsTRserviceDiscoveryCallback
 17478   00A6F8  0009               	tblrd		*+
 17479   00A6FA  CFF5 F1DB          	movff	tablat,??_mnsTRserviceDiscoveryCallback+1
 17480   00A6FE  C1DA  FFF6         	movff	??_mnsTRserviceDiscoveryCallback,tblptrl
 17481   00A702  C1DB  FFF7         	movff	??_mnsTRserviceDiscoveryCallback+1,tblptrh
 17482   00A706                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17483   00A706  6AF8               	clrf	tblptru,c
 17484   00A708                     	endif
 17485   00A708                     	if	0	;tblptru may be non-zero
 17486   00A708                     	endif
 17487   00A708  0008               	tblrd		*
 17488   00A70A  CFF5 F1C9          	movff	tablat,sendMessage5@data4
 17489   00A70E  51D9               	movf	mnsTRserviceDiscoveryCallback@step& (0+255),w,b
 17490   00A710  0D02               	mullw	2
 17491   00A712  0E69               	movlw	low _services
 17492   00A714  24F3               	addwf	243,w,c
 17493   00A716  6EF6               	movwf	tblptrl,c
 17494   00A718  0EEE               	movlw	high _services
 17495   00A71A  20F4               	addwfc	244,w,c
 17496   00A71C  6EF7               	movwf	tblptrh,c
 17497   00A71E                     	if	1	;There are 3 active tblptr bytes
 17498   00A71E  6AF8               	clrf	tblptru,c
 17499   00A720  0E00               	movlw	low (__mediumconst shr (0+16))
 17500   00A722  22F8               	addwfc	tblptru,f,c
 17501   00A724                     	endif
 17502   00A724  0009               	tblrd		*+
 17503   00A726  CFF5 F1DC          	movff	tablat,??_mnsTRserviceDiscoveryCallback+2
 17504   00A72A  0009               	tblrd		*+
 17505   00A72C  CFF5 F1DD          	movff	tablat,??_mnsTRserviceDiscoveryCallback+3
 17506   00A730  0E01               	movlw	1
 17507   00A732  27DC               	addwf	(??_mnsTRserviceDiscoveryCallback+2)& (0+255),f,b
 17508   00A734  0E00               	movlw	0
 17509   00A736  23DD               	addwfc	(??_mnsTRserviceDiscoveryCallback+3)& (0+255),f,b
 17510   00A738  C1DC  FFF6         	movff	??_mnsTRserviceDiscoveryCallback+2,tblptrl
 17511   00A73C  C1DD  FFF7         	movff	??_mnsTRserviceDiscoveryCallback+3,tblptrh
 17512   00A740                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17513   00A740  6AF8               	clrf	tblptru,c
 17514   00A742                     	endif
 17515   00A742                     	if	0	;tblptru may be non-zero
 17516   00A742                     	endif
 17517   00A742  0008               	tblrd		*
 17518   00A744  CFF5 F1CA          	movff	tablat,sendMessage5@data5
 17519   00A748  0EAC               	movlw	172
 17520   00A74A  EC47  F061         	call	_sendMessage5
 17521                           
 17522                           ;../../VLCBlib_PIC/mns.c: 886:     return TIMED_RESPONSE_RESULT_NEXT;
 17523   00A74E  0E02               	movlw	2
 17524   00A750  0012               	return		;funcret
 17525   00A752                     __end_of_mnsTRserviceDiscoveryCallback:
 17526                           	callstack 0
 17527                           
 17528 ;; *************** function _mnsTRallDiagnosticsCallback *****************
 17529 ;; Defined at:
 17530 ;;		line 898 in file "../../VLCBlib_PIC/mns.c"
 17531 ;; Parameters:    Size  Location     Type
 17532 ;;  type            1    wreg     unsigned char 
 17533 ;;  serviceIndex    1   26[BANK1 ] unsigned char 
 17534 ;;  step            1   27[BANK1 ] unsigned char 
 17535 ;; Auto vars:     Size  Location     Type
 17536 ;;  type            1    0[COMRAM] unsigned char 
 17537 ;;  d               2   32[BANK1 ] PTR struct DiagnosticVal
 17538 ;;		 -> producerDiagnostics(4), teachDiagnostics(4), canDiagnostics(38), nvDiagnostics(6), 
 17539 ;;		 -> mnsDiagnostics(14), ackDiagnostics(4), consumer2QDiagnostics(4), NULL(0), 
 17540 ;; Return value:  Size  Location     Type
 17541 ;;                  1    wreg      enum E12935
 17542 ;; Registers used:
 17543 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17544 ;; Tracked objects:
 17545 ;;		On entry : 0/0
 17546 ;;		On exit  : 0/0
 17547 ;;		Unchanged: 0/0
 17548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17549 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17550 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17551 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17552 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17553 ;;Total ram usage:        8 bytes
 17554 ;; Hardware stack levels used: 1
 17555 ;; Hardware stack levels required when called: 17
 17556 ;; This function calls:
 17557 ;;		NULL
 17558 ;;		_ackGetDiagnostic
 17559 ;;		_canGetDiagnostic
 17560 ;;		_consumer2QGetDiagnostic
 17561 ;;		_mnsGetDiagnostic
 17562 ;;		_nvGetDiagnostic
 17563 ;;		_producerGetDiagnostic
 17564 ;;		_sendMessage6
 17565 ;;		_teachGetDiagnostic
 17566 ;; This function is called by:
 17567 ;;		_mnsProcessMessage
 17568 ;;		_pollTimedResponse
 17569 ;; This function uses a non-reentrant model
 17570 ;;
 17571                           
 17572                           	psect	text46
 17573   0083AA                     __ptext46:
 17574                           	callstack 0
 17575   0083AA                     _mnsTRallDiagnosticsCallback:
 17576                           	callstack 11
 17577                           
 17578                           ;../../VLCBlib_PIC/mns.c: 899:     if (services[serviceIndex]->getDiagnostic == ((void*)
      +                          0)) {
 17579                           
 17580                           ;incstack = 0
 17581   0083AA  0101               	movlb	1	; () banked
 17582   0083AC  51D8               	movf	mnsTRallDiagnosticsCallback@serviceIndex& (0+255),w,b
 17583   0083AE  0D02               	mullw	2
 17584   0083B0  0E69               	movlw	low _services
 17585   0083B2  24F3               	addwf	243,w,c
 17586   0083B4  6EF6               	movwf	tblptrl,c
 17587   0083B6  0EEE               	movlw	high _services
 17588   0083B8  20F4               	addwfc	244,w,c
 17589   0083BA  6EF7               	movwf	tblptrh,c
 17590   0083BC                     	if	1	;There are 3 active tblptr bytes
 17591   0083BC  6AF8               	clrf	tblptru,c
 17592   0083BE  0E00               	movlw	low (__mediumconst shr (0+16))
 17593   0083C0  22F8               	addwfc	tblptru,f,c
 17594   0083C2                     	endif
 17595   0083C2  0009               	tblrd		*+
 17596   0083C4  CFF5 F1DA          	movff	tablat,??_mnsTRallDiagnosticsCallback
 17597   0083C8  0009               	tblrd		*+
 17598   0083CA  CFF5 F1DB          	movff	tablat,??_mnsTRallDiagnosticsCallback+1
 17599   0083CE  0E10               	movlw	16
 17600   0083D0  27DA               	addwf	??_mnsTRallDiagnosticsCallback& (0+255),f,b
 17601   0083D2  0E00               	movlw	0
 17602   0083D4  23DB               	addwfc	(??_mnsTRallDiagnosticsCallback+1)& (0+255),f,b
 17603   0083D6  C1DA  FFF6         	movff	??_mnsTRallDiagnosticsCallback,tblptrl
 17604   0083DA  C1DB  FFF7         	movff	??_mnsTRallDiagnosticsCallback+1,tblptrh
 17605   0083DE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17606   0083DE  6AF8               	clrf	tblptru,c
 17607   0083E0                     	endif
 17608   0083E0                     	if	0	;tblptru may be non-zero
 17609   0083E0                     	endif
 17610   0083E0  0009               	tblrd		*+
 17611   0083E2  50F5               	movf	tablat,w,c
 17612   0083E4  0009               	tblrd		*+
 17613   0083E6  10F5               	iorwf	tablat,w,c
 17614   0083E8  A4D8               	btfss	status,2,c
 17615   0083EA  D011               	goto	l22397
 17616                           
 17617                           ; BSR set to: 1
 17618                           ;../../VLCBlib_PIC/mns.c: 900:         sendMessage6(OPC_DGN, nn.bytes.hi, nn.bytes.lo, s
      +                          erviceIndex+1, 0, 0, 0);
 17619   0083EC  C0B5  F1C6         	movff	_nn+1,sendMessage6@data1
 17620   0083F0  C0B4  F1C7         	movff	_nn,sendMessage6@data2
 17621   0083F4  29D8               	incf	mnsTRallDiagnosticsCallback@serviceIndex& (0+255),w,b
 17622   0083F6  6FC8               	movwf	sendMessage6@data3& (0+255),b
 17623   0083F8  0E00               	movlw	0
 17624   0083FA  6FC9               	movwf	sendMessage6@data4& (0+255),b
 17625   0083FC  0E00               	movlw	0
 17626   0083FE  6FCA               	movwf	sendMessage6@data5& (0+255),b
 17627   008400  0E00               	movlw	0
 17628   008402  6FCB               	movwf	sendMessage6@data6& (0+255),b
 17629   008404  0EC7               	movlw	199
 17630   008406  ECFF  F060         	call	_sendMessage6
 17631   00840A                     l22393:
 17632                           
 17633                           ;../../VLCBlib_PIC/mns.c: 901:         return TIMED_RESPONSE_RESULT_FINISHED;
 17634   00840A  0E00               	movlw	0
 17635   00840C  0012               	return	
 17636   00840E                     l22397:
 17637                           
 17638                           ; BSR set to: 1
 17639                           ;../../VLCBlib_PIC/mns.c: 903:     DiagnosticVal * d = services[serviceIndex]->getDiagno
      +                          stic(step);
 17640   00840E  51D8               	movf	mnsTRallDiagnosticsCallback@serviceIndex& (0+255),w,b
 17641   008410  0D02               	mullw	2
 17642   008412  0E69               	movlw	low _services
 17643   008414  24F3               	addwf	243,w,c
 17644   008416  6EF6               	movwf	tblptrl,c
 17645   008418  0EEE               	movlw	high _services
 17646   00841A  20F4               	addwfc	244,w,c
 17647   00841C  6EF7               	movwf	tblptrh,c
 17648   00841E                     	if	1	;There are 3 active tblptr bytes
 17649   00841E  6AF8               	clrf	tblptru,c
 17650   008420  0E00               	movlw	low (__mediumconst shr (0+16))
 17651   008422  22F8               	addwfc	tblptru,f,c
 17652   008424                     	endif
 17653   008424  0009               	tblrd		*+
 17654   008426  CFF5 F1DA          	movff	tablat,??_mnsTRallDiagnosticsCallback
 17655   00842A  0009               	tblrd		*+
 17656   00842C  CFF5 F1DB          	movff	tablat,??_mnsTRallDiagnosticsCallback+1
 17657   008430  0E10               	movlw	16
 17658   008432  27DA               	addwf	??_mnsTRallDiagnosticsCallback& (0+255),f,b
 17659   008434  0E00               	movlw	0
 17660   008436  23DB               	addwfc	(??_mnsTRallDiagnosticsCallback+1)& (0+255),f,b
 17661   008438  C1DA  FFF6         	movff	??_mnsTRallDiagnosticsCallback,tblptrl
 17662   00843C  C1DB  FFF7         	movff	??_mnsTRallDiagnosticsCallback+1,tblptrh
 17663   008440                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17664   008440  6AF8               	clrf	tblptru,c
 17665   008442                     	endif
 17666   008442                     	if	0	;tblptru may be non-zero
 17667   008442                     	endif
 17668   008442  0009               	tblrd		*+
 17669   008444  CFF5 F1DC          	movff	tablat,??_mnsTRallDiagnosticsCallback+2
 17670   008448  0009               	tblrd		*+
 17671   00844A  CFF5 F1DD          	movff	tablat,??_mnsTRallDiagnosticsCallback+3
 17672   00844E  D801               	call	u23958
 17673   008450  D00A               	goto	u23959
 17674   008452                     u23958:
 17675   008452  0005               	push	
 17676   008454  6EFA               	movwf	pclath,c
 17677   008456  51DC               	movf	(??_mnsTRallDiagnosticsCallback+2)& (0+255),w,b
 17678   008458  6EFD               	movwf	tosl,c
 17679   00845A  51DD               	movf	(??_mnsTRallDiagnosticsCallback+3)& (0+255),w,b
 17680   00845C  6EFE               	movwf	tosh,c
 17681   00845E  6AFF               	clrf	tosu,c
 17682   008460  50FA               	movf	pclath,w,c
 17683   008462  51D9               	movf	mnsTRallDiagnosticsCallback@step& (0+255),w,b
 17684   008464  0012               	return		;indir
 17685   008466                     u23959:
 17686   008466  C097  F1DE         	movff	?_producerGetDiagnostic,mnsTRallDiagnosticsCallback@d
 17687   00846A  C098  F1DF         	movff	?_producerGetDiagnostic+1,mnsTRallDiagnosticsCallback@d+1
 17688                           
 17689                           ;../../VLCBlib_PIC/mns.c: 904:     if (d == ((void*)0)) {
 17690   00846E  0101               	movlb	1	; () banked
 17691   008470  51DE               	movf	mnsTRallDiagnosticsCallback@d& (0+255),w,b
 17692   008472  11DF               	iorwf	(mnsTRallDiagnosticsCallback@d+1)& (0+255),w,b
 17693   008474  B4D8               	btfsc	status,2,c
 17694   008476  D7C9               	goto	l22393
 17695                           
 17696                           ; BSR set to: 1
 17697                           ;../../VLCBlib_PIC/mns.c: 909:     sendMessage6(OPC_DGN, nn.bytes.hi, nn.bytes.lo, servi
      +                          ceIndex+1, step, d->asBytes.hi, d->asBytes.lo);
 17698   008478  C0B5  F1C6         	movff	_nn+1,sendMessage6@data1
 17699   00847C  C0B4  F1C7         	movff	_nn,sendMessage6@data2
 17700   008480  29D8               	incf	mnsTRallDiagnosticsCallback@serviceIndex& (0+255),w,b
 17701   008482  6FC8               	movwf	sendMessage6@data3& (0+255),b
 17702   008484  C1D9  F1C9         	movff	mnsTRallDiagnosticsCallback@step,sendMessage6@data4
 17703   008488  EE20 F001          	lfsr	2,1
 17704   00848C  51DE               	movf	mnsTRallDiagnosticsCallback@d& (0+255),w,b
 17705   00848E  26D9               	addwf	fsr2l,f,c
 17706   008490  51DF               	movf	(mnsTRallDiagnosticsCallback@d+1)& (0+255),w,b
 17707   008492  22DA               	addwfc	fsr2h,f,c
 17708   008494  50DF               	movf	indf2,w,c
 17709   008496  6FCA               	movwf	sendMessage6@data5& (0+255),b
 17710   008498  C1DE  FFD9         	movff	mnsTRallDiagnosticsCallback@d,fsr2l
 17711   00849C  C1DF  FFDA         	movff	mnsTRallDiagnosticsCallback@d+1,fsr2h
 17712   0084A0  50DF               	movf	indf2,w,c
 17713   0084A2  6FCB               	movwf	sendMessage6@data6& (0+255),b
 17714   0084A4  0EC7               	movlw	199
 17715   0084A6  ECFF  F060         	call	_sendMessage6
 17716                           
 17717                           ;../../VLCBlib_PIC/mns.c: 910:     return TIMED_RESPONSE_RESULT_NEXT;
 17718   0084AA  0E02               	movlw	2
 17719   0084AC  0012               	return		;funcret
 17720   0084AE                     __end_of_mnsTRallDiagnosticsCallback:
 17721                           	callstack 0
 17722                           
 17723 ;; *************** function _mnsTRrqnpnCallback *****************
 17724 ;; Defined at:
 17725 ;;		line 922 in file "../../VLCBlib_PIC/mns.c"
 17726 ;; Parameters:    Size  Location     Type
 17727 ;;  type            1    wreg     unsigned char 
 17728 ;;  serviceIndex    1   26[BANK1 ] unsigned char 
 17729 ;;  step            1   27[BANK1 ] unsigned char 
 17730 ;; Auto vars:     Size  Location     Type
 17731 ;;  type            1    0[COMRAM] unsigned char 
 17732 ;; Return value:  Size  Location     Type
 17733 ;;                  1    wreg      enum E12935
 17734 ;; Registers used:
 17735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17736 ;; Tracked objects:
 17737 ;;		On entry : 0/0
 17738 ;;		On exit  : 0/0
 17739 ;;		Unchanged: 0/0
 17740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17741 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17744 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17745 ;;Total ram usage:        2 bytes
 17746 ;; Hardware stack levels used: 1
 17747 ;; Hardware stack levels required when called: 17
 17748 ;; This function calls:
 17749 ;;		_getParameter
 17750 ;;		_sendMessage4
 17751 ;; This function is called by:
 17752 ;;		_mnsProcessMessage
 17753 ;;		_pollTimedResponse
 17754 ;; This function uses a non-reentrant model
 17755 ;;
 17756                           
 17757                           	psect	text47
 17758   00C3D2                     __ptext47:
 17759                           	callstack 0
 17760   00C3D2                     _mnsTRrqnpnCallback:
 17761                           	callstack 11
 17762                           
 17763                           ;../../VLCBlib_PIC/mns.c: 923:     if (step >= 20) {
 17764                           
 17765                           ;incstack = 0
 17766   00C3D2  0E13               	movlw	19
 17767   00C3D4  0101               	movlb	1	; () banked
 17768   00C3D6  65D9               	cpfsgt	mnsTRrqnpnCallback@step& (0+255),b
 17769   00C3D8  D002               	goto	l22417
 17770                           
 17771                           ; BSR set to: 1
 17772                           ;../../VLCBlib_PIC/mns.c: 924:         return TIMED_RESPONSE_RESULT_FINISHED;
 17773   00C3DA  0E00               	movlw	0
 17774   00C3DC  0012               	return	
 17775   00C3DE                     l22417:
 17776                           
 17777                           ; BSR set to: 1
 17778                           ;../../VLCBlib_PIC/mns.c: 926:     sendMessage4(OPC_PARAN, nn.bytes.hi, nn.bytes.lo, ste
      +                          p+1, getParameter(step+1));
 17779   00C3DE  C0B5  F1C6         	movff	_nn+1,sendMessage4@data1
 17780   00C3E2  C0B4  F1C7         	movff	_nn,sendMessage4@data2
 17781   00C3E6  29D9               	incf	mnsTRrqnpnCallback@step& (0+255),w,b
 17782   00C3E8  6FC8               	movwf	sendMessage4@data3& (0+255),b
 17783   00C3EA  29D9               	incf	mnsTRrqnpnCallback@step& (0+255),w,b
 17784   00C3EC  EC41  F044         	call	_getParameter
 17785   00C3F0  0101               	movlb	1	; () banked
 17786   00C3F2  6FC9               	movwf	sendMessage4@data4& (0+255),b
 17787   00C3F4  0E9B               	movlw	155
 17788   00C3F6  EC5F  F061         	call	_sendMessage4
 17789                           
 17790                           ;../../VLCBlib_PIC/mns.c: 927:     return TIMED_RESPONSE_RESULT_NEXT;
 17791   00C3FA  0E02               	movlw	2
 17792   00C3FC  0012               	return		;funcret
 17793   00C3FE                     __end_of_mnsTRrqnpnCallback:
 17794                           	callstack 0
 17795                           
 17796 ;; *************** function _sodTRCallback *****************
 17797 ;; Defined at:
 17798 ;;		line 403 in file "../universalEvents.c"
 17799 ;; Parameters:    Size  Location     Type
 17800 ;;  type            1    wreg     unsigned char 
 17801 ;;  serviceIndex    1   26[BANK1 ] unsigned char 
 17802 ;;  step            1   27[BANK1 ] unsigned char 
 17803 ;; Auto vars:     Size  Location     Type
 17804 ;;  type            1    0[COMRAM] unsigned char 
 17805 ;;  io              1   38[BANK1 ] unsigned char 
 17806 ;;  flags           1   37[BANK1 ] unsigned char 
 17807 ;;  event_invert    1   36[BANK1 ] enum E12767
 17808 ;;  value           1   35[BANK1 ] enum E12787
 17809 ;;  disable_off     1   34[BANK1 ] enum E12767
 17810 ;;  happeningInd    1   33[BANK1 ] unsigned char 
 17811 ;;  send_off_ok     1   30[BANK1 ] enum E12767
 17812 ;;  send_on_ok      1   29[BANK1 ] enum E12767
 17813 ;;  disable_SOD_    1   28[BANK1 ] enum E12767
 17814 ;; Return value:  Size  Location     Type
 17815 ;;                  1    wreg      enum E13022
 17816 ;; Registers used:
 17817 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17818 ;; Tracked objects:
 17819 ;;		On entry : 0/0
 17820 ;;		On exit  : 0/0
 17821 ;;		Unchanged: 0/0
 17822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17823 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17824 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17826 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17827 ;;Total ram usage:       13 bytes
 17828 ;; Hardware stack levels used: 1
 17829 ;; Hardware stack levels required when called: 19
 17830 ;; This function calls:
 17831 ;;		_APP_GetEventState
 17832 ;;		___awdiv
 17833 ;;		_getNV
 17834 ;;		_sendInvertedProducedEvent
 17835 ;; This function is called by:
 17836 ;;		_doSOD
 17837 ;;		_pollTimedResponse
 17838 ;; This function uses a non-reentrant model
 17839 ;;
 17840                           
 17841                           	psect	text48
 17842   0085B2                     __ptext48:
 17843                           	callstack 0
 17844   0085B2                     _sodTRCallback:
 17845                           	callstack 9
 17846                           
 17847                           ;../universalEvents.c: 404:     uint8_t io;;../universalEvents.c: 405:     uint8_t happe
      +                          ningIndex;;../universalEvents.c: 406:     Boolean disable_off;;../universalEvents.c: 407
      +                          :  Boolean send_on_ok;;../universalEvents.c: 408:  Boolean send_off_ok;;../universalEven
      +                          ts.c: 409:  Boolean event_inverted;;../universalEvents.c: 410:     Boolean disable_SOD_r
      +                          esponse;;../universalEvents.c: 411:     uint8_t flags;;../universalEvents.c: 412:     Ev
      +                          entState value;;../universalEvents.c: 415:     io = step/4;
 17848                           
 17849                           ;incstack = 0
 17850   0085B2  C1D9  F097         	movff	sodTRCallback@step,___awdiv@dividend
 17851   0085B6  0100               	movlb	0	; () banked
 17852   0085B8  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 17853   0085BA  0E00               	movlw	0
 17854   0085BC  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 17855   0085BE  0E04               	movlw	4
 17856   0085C0  6F99               	movwf	___awdiv@divisor& (0+255),b
 17857   0085C2  EC7B  F054         	call	___awdiv	;wreg free
 17858   0085C6  0100               	movlb	0	; () banked
 17859   0085C8  5197               	movf	?___awdiv& (0+255),w,b
 17860   0085CA  0101               	movlb	1	; () banked
 17861   0085CC  6FE4               	movwf	sodTRCallback@io& (0+255),b
 17862                           
 17863                           ; BSR set to: 1
 17864                           ;../universalEvents.c: 416:     if (io >= 16) {
 17865   0085CE  0E0F               	movlw	15
 17866   0085D0  65E4               	cpfsgt	sodTRCallback@io& (0+255),b
 17867   0085D2  D002               	goto	l21913
 17868                           
 17869                           ; BSR set to: 1
 17870                           ;../universalEvents.c: 417:         return TIMED_RESPONSE_RESULT_FINISHED;
 17871   0085D4  0E00               	movlw	0
 17872   0085D6  0012               	return	
 17873   0085D8                     l21913:
 17874                           
 17875                           ; BSR set to: 1
 17876                           ;../universalEvents.c: 419:     happeningIndex = step%4;
 17877   0085D8  51D9               	movf	sodTRCallback@step& (0+255),w,b
 17878   0085DA  0B03               	andlw	3
 17879   0085DC  6FDF               	movwf	sodTRCallback@happeningIndex& (0+255),b
 17880                           
 17881                           ; BSR set to: 1
 17882                           ;../universalEvents.c: 420:     flags = (uint8_t)getNV((16 + 7*(io) + 1));;
 17883   0085DE  51E4               	movf	sodTRCallback@io& (0+255),w,b
 17884   0085E0  0D07               	mullw	7
 17885   0085E2  50F3               	movf	243,w,c
 17886   0085E4  0F11               	addlw	17
 17887   0085E6  ECD2  F05F         	call	_getNV
 17888   0085EA  0100               	movlb	0	; () banked
 17889   0085EC  518D               	movf	?_getNV& (0+255),w,b
 17890   0085EE  0101               	movlb	1	; () banked
 17891   0085F0  6FE3               	movwf	sodTRCallback@flags& (0+255),b
 17892                           
 17893                           ; BSR set to: 1
 17894                           ;../universalEvents.c: 421:     disable_SOD_response = flags & 0x20;
 17895   0085F2  51E3               	movf	sodTRCallback@flags& (0+255),w,b
 17896   0085F4  0B20               	andlw	32
 17897   0085F6  6FDA               	movwf	sodTRCallback@disable_SOD_response& (0+255),b
 17898                           
 17899                           ; BSR set to: 1
 17900                           ;../universalEvents.c: 423:     event_inverted = flags & 0x40;
 17901   0085F8  51E3               	movf	sodTRCallback@flags& (0+255),w,b
 17902   0085FA  0B40               	andlw	64
 17903   0085FC  6FE2               	movwf	sodTRCallback@event_inverted& (0+255),b
 17904                           
 17905                           ; BSR set to: 1
 17906                           ;../universalEvents.c: 424:     disable_off = flags & 0x08;
 17907   0085FE  51E3               	movf	sodTRCallback@flags& (0+255),w,b
 17908   008600  0B08               	andlw	8
 17909   008602  6FE0               	movwf	sodTRCallback@disable_off& (0+255),b
 17910                           
 17911                           ; BSR set to: 1
 17912                           ;../universalEvents.c: 425:     send_on_ok = !( disable_off && event_inverted );
 17913   008604  0E01               	movlw	1
 17914   008606  6FDD               	movwf	_sodTRCallback$1424& (0+255),b
 17915                           
 17916                           ; BSR set to: 1
 17917   008608  51E0               	movf	sodTRCallback@disable_off& (0+255),w,b
 17918   00860A  B4D8               	btfsc	status,2,c
 17919   00860C  D005               	goto	l21931
 17920                           
 17921                           ; BSR set to: 1
 17922   00860E  51E2               	movf	sodTRCallback@event_inverted& (0+255),w,b
 17923   008610  B4D8               	btfsc	status,2,c
 17924   008612  D002               	goto	l21931
 17925                           
 17926                           ; BSR set to: 1
 17927   008614  0E00               	movlw	0
 17928   008616  6FDD               	movwf	_sodTRCallback$1424& (0+255),b
 17929   008618                     l21931:
 17930                           
 17931                           ; BSR set to: 1
 17932   008618  C1DD  F1DB         	movff	_sodTRCallback$1424,sodTRCallback@send_on_ok
 17933                           
 17934                           ;../universalEvents.c: 426:     send_off_ok = !( disable_off && !event_inverted);
 17935   00861C  0E01               	movlw	1
 17936   00861E  6FDE               	movwf	_sodTRCallback$1425& (0+255),b
 17937   008620  51E0               	movf	sodTRCallback@disable_off& (0+255),w,b
 17938   008622  B4D8               	btfsc	status,2,c
 17939   008624  D005               	goto	l21937
 17940                           
 17941                           ; BSR set to: 1
 17942   008626  51E2               	movf	sodTRCallback@event_inverted& (0+255),w,b
 17943   008628  A4D8               	btfss	status,2,c
 17944   00862A  D002               	goto	l21937
 17945                           
 17946                           ; BSR set to: 1
 17947   00862C  0E00               	movlw	0
 17948   00862E  6FDE               	movwf	_sodTRCallback$1425& (0+255),b
 17949   008630                     l21937:
 17950                           
 17951                           ; BSR set to: 1
 17952   008630  C1DE  F1DC         	movff	_sodTRCallback$1425,sodTRCallback@send_off_ok
 17953                           
 17954                           ; BSR set to: 1
 17955                           ;../universalEvents.c: 428:     value = APP_GetEventState((8 + 4*(io))+happeningIndex);
 17956   008634  51E4               	movf	sodTRCallback@io& (0+255),w,b
 17957   008636  0D04               	mullw	4
 17958   008638  50F3               	movf	243,w,c
 17959   00863A  25DF               	addwf	sodTRCallback@happeningIndex& (0+255),w,b
 17960   00863C  0F08               	addlw	8
 17961   00863E  EC7C  F022         	call	_APP_GetEventState
 17962   008642  0101               	movlb	1	; () banked
 17963   008644  6FE1               	movwf	sodTRCallback@value& (0+255),b
 17964                           
 17965                           ;../universalEvents.c: 430:     switch((uint8_t)getNV((16 + 7*(io) + 0))) {
 17966   008646  D00C               	goto	l21951
 17967   008648                     l21941:
 17968                           
 17969                           ; BSR set to: 0
 17970                           ;../universalEvents.c: 436:             if (disable_SOD_response) {
 17971   008648  0101               	movlb	1	; () banked
 17972   00864A  51DA               	movf	sodTRCallback@disable_SOD_response& (0+255),w,b
 17973   00864C  B4D8               	btfsc	status,2,c
 17974   00864E  D01C               	goto	l21953
 17975   008650                     u22930:
 17976                           
 17977                           ;../universalEvents.c: 437:                 return TIMED_RESPONSE_RESULT_NEXT;
 17978   008650  0E02               	movlw	2
 17979   008652  0012               	return	
 17980   008654                     l21947:
 17981                           
 17982                           ; BSR set to: 0
 17983                           ;../universalEvents.c: 448:             send_on_ok = TRUE;
 17984   008654  0E01               	movlw	1
 17985   008656  0101               	movlb	1	; () banked
 17986   008658  6FDB               	movwf	sodTRCallback@send_on_ok& (0+255),b
 17987                           
 17988                           ;../universalEvents.c: 449:             send_off_ok = TRUE;
 17989   00865A  0E01               	movlw	1
 17990   00865C  6FDC               	movwf	sodTRCallback@send_off_ok& (0+255),b
 17991                           
 17992                           ;../universalEvents.c: 450:             break;
 17993   00865E  D014               	goto	l21953
 17994   008660                     l21951:
 17995                           
 17996                           ; BSR set to: 1
 17997   008660  51E4               	movf	sodTRCallback@io& (0+255),w,b
 17998   008662  0D07               	mullw	7
 17999   008664  50F3               	movf	243,w,c
 18000   008666  0F10               	addlw	16
 18001   008668  ECD2  F05F         	call	_getNV
 18002   00866C  0100               	movlb	0	; () banked
 18003   00866E  518D               	movf	?_getNV& (0+255),w,b
 18004                           
 18005                           ; Switch size 1, requested type "simple"
 18006                           ; Number of cases is 4, Range of values is 0 to 4
 18007                           ; switch strategies available:
 18008                           ; Name         Instructions Cycles
 18009                           ; simple_byte           13     7 (average)
 18010                           ;	Chosen strategy is simple_byte
 18011   008670  0A00               	xorlw	0	; case 0
 18012   008672  B4D8               	btfsc	status,2,c
 18013   008674  D7E9               	goto	l21941
 18014   008676  0A02               	xorlw	2	; case 2
 18015   008678  B4D8               	btfsc	status,2,c
 18016   00867A  D7EC               	goto	l21947
 18017   00867C  0A01               	xorlw	1	; case 3
 18018   00867E  B4D8               	btfsc	status,2,c
 18019   008680  D7E9               	goto	l21947
 18020   008682  0A07               	xorlw	7	; case 4
 18021   008684  B4D8               	btfsc	status,2,c
 18022   008686  D7E6               	goto	l21947
 18023   008688                     l21953:
 18024                           
 18025                           ;../universalEvents.c: 453:     if (value != EVENT_UNKNOWN) {
 18026   008688  0101               	movlb	1	; () banked
 18027   00868A  29E1               	incf	sodTRCallback@value& (0+255),w,b
 18028   00868C  B4D8               	btfsc	status,2,c
 18029   00868E  D7E0               	goto	u22930
 18030                           
 18031                           ; BSR set to: 1
 18032                           ;../universalEvents.c: 454:         sendInvertedProducedEvent((8 + 4*(io))+happeningInde
      +                          x, value, event_inverted, send_on_ok, send_off_ok);
 18033   008690  C1E1  F1D0         	movff	sodTRCallback@value,sendInvertedProducedEvent@state
 18034   008694  C1E2  F1D1         	movff	sodTRCallback@event_inverted,sendInvertedProducedEvent@invert
 18035   008698  C1DB  F1D2         	movff	sodTRCallback@send_on_ok,sendInvertedProducedEvent@can_send_on
 18036   00869C  C1DC  F1D3         	movff	sodTRCallback@send_off_ok,sendInvertedProducedEvent@can_send_off
 18037   0086A0  51E4               	movf	sodTRCallback@io& (0+255),w,b
 18038   0086A2  0D04               	mullw	4
 18039   0086A4  50F3               	movf	243,w,c
 18040   0086A6  25DF               	addwf	sodTRCallback@happeningIndex& (0+255),w,b
 18041   0086A8  0F08               	addlw	8
 18042   0086AA  EC58  F05E         	call	_sendInvertedProducedEvent
 18043   0086AE  D7D0               	goto	u22930
 18044   0086B0                     __end_of_sodTRCallback:
 18045                           	callstack 0
 18046                           
 18047 ;; *************** function _APP_GetEventState *****************
 18048 ;; Defined at:
 18049 ;;		line 428 in file "../main.c"
 18050 ;; Parameters:    Size  Location     Type
 18051 ;;  h               1    wreg     unsigned char 
 18052 ;; Auto vars:     Size  Location     Type
 18053 ;;  h               1   72[BANK0 ] unsigned char 
 18054 ;;  happeningInd    1   73[BANK0 ] unsigned char 
 18055 ;;  disable_off     1   71[BANK0 ] enum E12716
 18056 ;;  flags           1   70[BANK0 ] unsigned char 
 18057 ;; Return value:  Size  Location     Type
 18058 ;;                  1    wreg      enum E12736
 18059 ;; Registers used:
 18060 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18061 ;; Tracked objects:
 18062 ;;		On entry : 0/0
 18063 ;;		On exit  : 0/0
 18064 ;;		Unchanged: 0/0
 18065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18067 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18068 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18069 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18070 ;;Total ram usage:       11 bytes
 18071 ;; Hardware stack levels used: 1
 18072 ;; Hardware stack levels required when called: 14
 18073 ;; This function calls:
 18074 ;;		___awdiv
 18075 ;;		_getNV
 18076 ;;		_readNVM
 18077 ;; This function is called by:
 18078 ;;		_sodTRCallback
 18079 ;;		_producerProcessMessage
 18080 ;; This function uses a non-reentrant model
 18081 ;;
 18082                           
 18083                           	psect	text49
 18084   0044F8                     __ptext49:
 18085                           	callstack 0
 18086   0044F8                     _APP_GetEventState:
 18087                           	callstack 14
 18088                           
 18089                           ;incstack = 0
 18090                           ;APP_GetEventState@h stored from wreg
 18091   0044F8  0100               	movlb	0	; () banked
 18092   0044FA  6FA8               	movwf	APP_GetEventState@h& (0+255),b
 18093                           
 18094                           ;../main.c: 429:     uint8_t flags;;../main.c: 430:     uint8_t happeningIndex;;../main.
      +                          c: 431:     Boolean disable_off;;../main.c: 433:     io = (((h)-8)/4);
 18095   0044FC  0EF8               	movlw	248
 18096   0044FE  0100               	movlb	0	; () banked
 18097   004500  25A8               	addwf	APP_GetEventState@h& (0+255),w,b
 18098   004502  6F97               	movwf	___awdiv@dividend& (0+255),b
 18099   004504  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 18100   004506  0EFF               	movlw	255
 18101   004508  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 18102   00450A  0E00               	movlw	0
 18103   00450C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18104   00450E  0E04               	movlw	4
 18105   004510  6F99               	movwf	___awdiv@divisor& (0+255),b
 18106   004512  EC7B  F054         	call	___awdiv	;wreg free
 18107   004516  0100               	movlb	0	; () banked
 18108   004518  5197               	movf	?___awdiv& (0+255),w,b
 18109   00451A  6FCF               	movwf	_io& (0+255),b
 18110                           
 18111                           ; BSR set to: 0
 18112                           ;../main.c: 434:     if (io >= 16) {
 18113   00451C  0E0F               	movlw	15
 18114   00451E  65CF               	cpfsgt	_io& (0+255),b
 18115   004520  D002               	goto	l20665
 18116   004522                     u21130:
 18117                           
 18118                           ; BSR set to: 0
 18119                           ;../main.c: 435:         return EVENT_UNKNOWN;
 18120   004522  0EFF               	movlw	255
 18121   004524  0012               	return	
 18122   004526                     l20665:
 18123                           
 18124                           ; BSR set to: 0
 18125                           ;../main.c: 437:     happeningIndex = (((h)-8)%4);
 18126   004526  51A8               	movf	APP_GetEventState@h& (0+255),w,b
 18127   004528  0FF8               	addlw	248
 18128   00452A  0B03               	andlw	3
 18129   00452C  6FA9               	movwf	APP_GetEventState@happeningIndex& (0+255),b
 18130                           
 18131                           ; BSR set to: 0
 18132                           ;../main.c: 438:     flags = (uint8_t)getNV((16 + 7*(io) + 1));
 18133   00452E  51CF               	movf	_io& (0+255),w,b
 18134   004530  0D07               	mullw	7
 18135   004532  50F3               	movf	243,w,c
 18136   004534  0F11               	addlw	17
 18137   004536  ECD2  F05F         	call	_getNV
 18138   00453A  0100               	movlb	0	; () banked
 18139   00453C  518D               	movf	?_getNV& (0+255),w,b
 18140   00453E  6FA6               	movwf	APP_GetEventState@flags& (0+255),b
 18141                           
 18142                           ; BSR set to: 0
 18143                           ;../main.c: 439:     disable_off = flags & 0x08;
 18144   004540  51A6               	movf	APP_GetEventState@flags& (0+255),w,b
 18145   004542  0B08               	andlw	8
 18146   004544  6FA7               	movwf	APP_GetEventState@disable_off& (0+255),b
 18147                           
 18148                           ;../main.c: 441:     switch((uint8_t)getNV((16 + 7*(io) + 0))) {
 18149   004546  D169               	goto	l20743
 18150   004548                     l20671:
 18151                           
 18152                           ; BSR set to: 0
 18153                           ;../main.c: 446:                     return outputState[io]?EVENT_ON:EVENT_OFF;
 18154   004548  0EB4               	movlw	low _outputState
 18155   00454A  25CF               	addwf	_io& (0+255),w,b
 18156   00454C  6ED9               	movwf	fsr2l,c
 18157   00454E  6ADA               	clrf	fsr2h,c
 18158   004550  0E02               	movlw	high _outputState
 18159   004552  22DA               	addwfc	fsr2h,f,c
 18160   004554  50DF               	movf	indf2,w,c
 18161   004556  B4D8               	btfsc	status,2,c
 18162   004558  D002               	goto	u21140
 18163   00455A  0E01               	movlw	1
 18164   00455C  0012               	return	
 18165   00455E                     u21140:
 18166   00455E  0E00               	movlw	0
 18167   004560  0012               	return	
 18168   004562                     l20675:
 18169                           
 18170                           ; BSR set to: 0
 18171                           ;../main.c: 449:                     if (disable_off) {
 18172   004562  51A7               	movf	APP_GetEventState@disable_off& (0+255),w,b
 18173   004564  B4D8               	btfsc	status,2,c
 18174   004566  D7DD               	goto	u21130
 18175                           
 18176                           ; BSR set to: 0
 18177                           ;../main.c: 450:                         return (outputState[io]==0)?EVENT_ON:EVENT_OFF;
 18178   004568  0EB4               	movlw	low _outputState
 18179   00456A  25CF               	addwf	_io& (0+255),w,b
 18180   00456C  6ED9               	movwf	fsr2l,c
 18181   00456E  6ADA               	clrf	fsr2h,c
 18182   004570  0E02               	movlw	high _outputState
 18183   004572  22DA               	addwfc	fsr2h,f,c
 18184   004574  50DF               	movf	indf2,w,c
 18185   004576  A4D8               	btfss	status,2,c
 18186   004578  D002               	goto	u21170
 18187   00457A  0E01               	movlw	1
 18188   00457C  0012               	return	
 18189   00457E                     u21170:
 18190   00457E  0E00               	movlw	0
 18191   004580  0012               	return	
 18192   004582                     l20683:
 18193                           
 18194                           ; BSR set to: 0
 18195   004582  51A9               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 18196                           
 18197                           ; Switch size 1, requested type "simple"
 18198                           ; Number of cases is 2, Range of values is 0 to 1
 18199                           ; switch strategies available:
 18200                           ; Name         Instructions Cycles
 18201                           ; simple_byte            7     4 (average)
 18202                           ;	Chosen strategy is simple_byte
 18203   004584  0A00               	xorlw	0	; case 0
 18204   004586  B4D8               	btfsc	status,2,c
 18205   004588  D7DF               	goto	l20671
 18206   00458A  0A01               	xorlw	1	; case 1
 18207   00458C  B4D8               	btfsc	status,2,c
 18208   00458E  D7E9               	goto	l20675
 18209   004590  D7C8               	goto	u21130
 18210   004592                     l20685:
 18211                           
 18212                           ; BSR set to: 0
 18213                           ;../main.c: 461:                     return (readNVM(EEPROM_NVM_TYPE, ((eeprom_address_t
      +                          )((0x3FF -8))-25)+io)!=2)?EVENT_ON:EVENT_OFF;
 18214   004592  0EDE               	movlw	222
 18215   004594  25CF               	addwf	_io& (0+255),w,b
 18216   004596  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 18217   004598  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 18218   00459A  0E03               	movlw	3
 18219   00459C  23A0               	addwfc	(??_APP_GetEventState+1)& (0+255),f,b
 18220   00459E  C09F  F091         	movff	??_APP_GetEventState,readNVM@index
 18221   0045A2  C0A0  F092         	movff	??_APP_GetEventState+1,readNVM@index+1
 18222   0045A6  6B93               	clrf	(readNVM@index+2)& (0+255),b
 18223   0045A8  0E00               	movlw	0
 18224   0045AA  EC31  F05B         	call	_readNVM
 18225   0045AE  0E02               	movlw	2
 18226   0045B0  0100               	movlb	0	; () banked
 18227   0045B2  1991               	xorwf	?_readNVM& (0+255),w,b
 18228   0045B4  1192               	iorwf	(?_readNVM+1)& (0+255),w,b
 18229   0045B6  B4D8               	btfsc	status,2,c
 18230   0045B8  D002               	goto	u21190
 18231   0045BA  0E01               	movlw	1
 18232   0045BC  0012               	return	
 18233   0045BE                     u21190:
 18234   0045BE  0E00               	movlw	0
 18235   0045C0  0012               	return	
 18236   0045C2                     l20691:
 18237                           
 18238                           ; BSR set to: 0
 18239   0045C2  51A9               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 18240                           
 18241                           ; Switch size 1, requested type "simple"
 18242                           ; Number of cases is 1, Range of values is 0 to 0
 18243                           ; switch strategies available:
 18244                           ; Name         Instructions Cycles
 18245                           ; simple_byte            4     3 (average)
 18246                           ;	Chosen strategy is simple_byte
 18247   0045C4  0A00               	xorlw	0	; case 0
 18248   0045C6  B4D8               	btfsc	status,2,c
 18249   0045C8  D7E4               	goto	l20685
 18250   0045CA  D7AB               	goto	u21130
 18251   0045CC                     l20693:
 18252                           
 18253                           ; BSR set to: 0
 18254                           ;../main.c: 468:                     return (currentPos[io] == (uint8_t)getNV((16 + 7*(i
      +                          o) + 2)))?EVENT_ON:EVENT_OFF;
 18255   0045CC  51CF               	movf	_io& (0+255),w,b
 18256   0045CE  0D07               	mullw	7
 18257   0045D0  50F3               	movf	243,w,c
 18258   0045D2  0F12               	addlw	18
 18259   0045D4  ECD2  F05F         	call	_getNV
 18260   0045D8  0E30               	movlw	low _currentPos
 18261   0045DA  0100               	movlb	0	; () banked
 18262   0045DC  25CF               	addwf	_io& (0+255),w,b
 18263   0045DE  6ED9               	movwf	fsr2l,c
 18264   0045E0  6ADA               	clrf	fsr2h,c
 18265   0045E2  0E01               	movlw	high _currentPos
 18266   0045E4  22DA               	addwfc	fsr2h,f,c
 18267   0045E6  50DE               	movf	postinc2,w,c
 18268   0045E8  198D               	xorwf	?_getNV& (0+255),w,b
 18269   0045EA  A4D8               	btfss	status,2,c
 18270   0045EC  D002               	goto	u21210
 18271   0045EE  0E01               	movlw	1
 18272   0045F0  0012               	return	
 18273   0045F2                     u21210:
 18274   0045F2  0E00               	movlw	0
 18275   0045F4  0012               	return	
 18276   0045F6                     l20697:
 18277                           
 18278                           ; BSR set to: 0
 18279                           ;../main.c: 470:                     return (currentPos[io] == (uint8_t)getNV((16 + 7*(i
      +                          o) + 3)))?EVENT_ON:EVENT_OFF;
 18280   0045F6  51CF               	movf	_io& (0+255),w,b
 18281   0045F8  0D07               	mullw	7
 18282   0045FA  50F3               	movf	243,w,c
 18283   0045FC  0F13               	addlw	19
 18284   0045FE  ECD2  F05F         	call	_getNV
 18285   004602  0E30               	movlw	low _currentPos
 18286   004604  0100               	movlb	0	; () banked
 18287   004606  25CF               	addwf	_io& (0+255),w,b
 18288   004608  6ED9               	movwf	fsr2l,c
 18289   00460A  6ADA               	clrf	fsr2h,c
 18290   00460C  0E01               	movlw	high _currentPos
 18291   00460E  22DA               	addwfc	fsr2h,f,c
 18292   004610  50DE               	movf	postinc2,w,c
 18293   004612  198D               	xorwf	?_getNV& (0+255),w,b
 18294   004614  A4D8               	btfss	status,2,c
 18295   004616  D002               	goto	u21230
 18296   004618  0E01               	movlw	1
 18297   00461A  0012               	return	
 18298   00461C                     u21230:
 18299   00461C  0E00               	movlw	0
 18300   00461E  0012               	return	
 18301   004620                     l20701:
 18302                           
 18303                           ; BSR set to: 0
 18304                           ;../main.c: 473:                     return (currentPos[io] >= ((uint8_t)getNV((16 + 7*(
      +                          io) + 3)))/2 +
 18305   004620  51CF               	movf	_io& (0+255),w,b
 18306   004622  0D07               	mullw	7
 18307   004624  50F3               	movf	243,w,c
 18308   004626  0F13               	addlw	19
 18309   004628  ECD2  F05F         	call	_getNV
 18310   00462C  0100               	movlb	0	; () banked
 18311   00462E  518D               	movf	?_getNV& (0+255),w,b
 18312   004630  6F97               	movwf	___awdiv@dividend& (0+255),b
 18313   004632  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 18314   004634  0E00               	movlw	0
 18315   004636  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18316   004638  0E02               	movlw	2
 18317   00463A  6F99               	movwf	___awdiv@divisor& (0+255),b
 18318   00463C  EC7B  F054         	call	___awdiv	;wreg free
 18319   004640  C097  F09F         	movff	?___awdiv,??_APP_GetEventState
 18320   004644  C098  F0A0         	movff	?___awdiv+1,??_APP_GetEventState+1
 18321   004648  0100               	movlb	0	; () banked
 18322   00464A  51CF               	movf	_io& (0+255),w,b
 18323   00464C  0D07               	mullw	7
 18324   00464E  50F3               	movf	243,w,c
 18325   004650  0F12               	addlw	18
 18326   004652  ECD2  F05F         	call	_getNV
 18327   004656  0100               	movlb	0	; () banked
 18328   004658  518D               	movf	?_getNV& (0+255),w,b
 18329   00465A  6F97               	movwf	___awdiv@dividend& (0+255),b
 18330   00465C  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 18331   00465E  0E00               	movlw	0
 18332   004660  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18333   004662  0E02               	movlw	2
 18334   004664  6F99               	movwf	___awdiv@divisor& (0+255),b
 18335   004666  EC7B  F054         	call	___awdiv	;wreg free
 18336   00466A  0100               	movlb	0	; () banked
 18337   00466C  5197               	movf	?___awdiv& (0+255),w,b
 18338   00466E  259F               	addwf	??_APP_GetEventState& (0+255),w,b
 18339   004670  6FA1               	movwf	(??_APP_GetEventState+2)& (0+255),b
 18340   004672  5198               	movf	(?___awdiv+1)& (0+255),w,b
 18341   004674  21A0               	addwfc	(??_APP_GetEventState+1)& (0+255),w,b
 18342   004676  6FA2               	movwf	(??_APP_GetEventState+3)& (0+255),b
 18343   004678  0E30               	movlw	low _currentPos
 18344   00467A  25CF               	addwf	_io& (0+255),w,b
 18345   00467C  6ED9               	movwf	fsr2l,c
 18346   00467E  6ADA               	clrf	fsr2h,c
 18347   004680  0E01               	movlw	high _currentPos
 18348   004682  22DA               	addwfc	fsr2h,f,c
 18349   004684  50DF               	movf	indf2,w,c
 18350   004686  6FA3               	movwf	(??_APP_GetEventState+4)& (0+255),b
 18351   004688  6BA4               	clrf	(??_APP_GetEventState+5)& (0+255),b
 18352   00468A  51A1               	movf	(??_APP_GetEventState+2)& (0+255),w,b
 18353   00468C  5DA3               	subwf	(??_APP_GetEventState+4)& (0+255),w,b
 18354   00468E  51A4               	movf	(??_APP_GetEventState+5)& (0+255),w,b
 18355   004690  0A80               	xorlw	128
 18356   004692  6FA5               	movwf	(??_APP_GetEventState+6)& (0+255),b
 18357   004694  51A2               	movf	(??_APP_GetEventState+3)& (0+255),w,b
 18358   004696  0A80               	xorlw	128
 18359   004698  59A5               	subwfb	(??_APP_GetEventState+6)& (0+255),w,b
 18360   00469A  A0D8               	btfss	status,0,c
 18361   00469C  D002               	goto	u21250
 18362   00469E  0E01               	movlw	1
 18363   0046A0  0012               	return	
 18364   0046A2                     u21250:
 18365   0046A2  0E00               	movlw	0
 18366   0046A4  0012               	return	
 18367   0046A6                     l20707:
 18368                           
 18369                           ; BSR set to: 0
 18370   0046A6  51A9               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 18371                           
 18372                           ; Switch size 1, requested type "simple"
 18373                           ; Number of cases is 3, Range of values is 0 to 2
 18374                           ; switch strategies available:
 18375                           ; Name         Instructions Cycles
 18376                           ; simple_byte           10     6 (average)
 18377                           ;	Chosen strategy is simple_byte
 18378   0046A8  0A00               	xorlw	0	; case 0
 18379   0046AA  B4D8               	btfsc	status,2,c
 18380   0046AC  D78F               	goto	l20693
 18381   0046AE  0A01               	xorlw	1	; case 1
 18382   0046B0  B4D8               	btfsc	status,2,c
 18383   0046B2  D7B6               	goto	l20701
 18384   0046B4  0A03               	xorlw	3	; case 2
 18385   0046B6  B4D8               	btfsc	status,2,c
 18386   0046B8  D79E               	goto	l20697
 18387   0046BA  D733               	goto	u21130
 18388   0046BC                     l20709:
 18389                           
 18390                           ; BSR set to: 0
 18391                           ;../main.c: 481:                     return ((uint8_t)readNVM(EEPROM_NVM_TYPE, ((eeprom_
      +                          address_t)((0x3FF -8))-25)+io))?EVENT_ON:EVENT_OFF;
 18392   0046BC  0EDE               	movlw	222
 18393   0046BE  25CF               	addwf	_io& (0+255),w,b
 18394   0046C0  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 18395   0046C2  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 18396   0046C4  0E03               	movlw	3
 18397   0046C6  23A0               	addwfc	(??_APP_GetEventState+1)& (0+255),f,b
 18398   0046C8  C09F  F091         	movff	??_APP_GetEventState,readNVM@index
 18399   0046CC  C0A0  F092         	movff	??_APP_GetEventState+1,readNVM@index+1
 18400   0046D0  6B93               	clrf	(readNVM@index+2)& (0+255),b
 18401   0046D2  0E00               	movlw	0
 18402   0046D4  EC31  F05B         	call	_readNVM
 18403   0046D8  0100               	movlb	0	; () banked
 18404   0046DA  6791               	tstfsz	?_readNVM& (0+255),b
 18405   0046DC  0E01               	movlw	1
 18406   0046DE  0012               	return	
 18407   0046E0                     l20715:
 18408                           
 18409                           ; BSR set to: 0
 18410   0046E0  51A9               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 18411                           
 18412                           ; Switch size 1, requested type "simple"
 18413                           ; Number of cases is 1, Range of values is 0 to 0
 18414                           ; switch strategies available:
 18415                           ; Name         Instructions Cycles
 18416                           ; simple_byte            4     3 (average)
 18417                           ;	Chosen strategy is simple_byte
 18418   0046E2  0A00               	xorlw	0	; case 0
 18419   0046E4  B4D8               	btfsc	status,2,c
 18420   0046E6  D7EA               	goto	l20709
 18421   0046E8  D71C               	goto	u21130
 18422   0046EA                     l20717:
 18423                           
 18424                           ; BSR set to: 0
 18425                           ;../main.c: 489:                     return (currentPos[io] == getNV((16 + 7*(io) + 3)))
      +                          ?EVENT_ON:EVENT_OFF;
 18426   0046EA  51CF               	movf	_io& (0+255),w,b
 18427   0046EC  0D07               	mullw	7
 18428   0046EE  50F3               	movf	243,w,c
 18429   0046F0  0F13               	addlw	19
 18430   0046F2  ECD2  F05F         	call	_getNV
 18431   0046F6  0E30               	movlw	low _currentPos
 18432   0046F8  0100               	movlb	0	; () banked
 18433   0046FA  25CF               	addwf	_io& (0+255),w,b
 18434   0046FC  6ED9               	movwf	fsr2l,c
 18435   0046FE  6ADA               	clrf	fsr2h,c
 18436   004700  0E01               	movlw	high _currentPos
 18437   004702  22DA               	addwfc	fsr2h,f,c
 18438   004704  50DF               	movf	indf2,w,c
 18439   004706  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 18440   004708  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 18441   00470A  518D               	movf	?_getNV& (0+255),w,b
 18442   00470C  199F               	xorwf	??_APP_GetEventState& (0+255),w,b
 18443   00470E  E106               	bnz	u21290
 18444   004710  518E               	movf	(?_getNV+1)& (0+255),w,b
 18445   004712  19A0               	xorwf	(??_APP_GetEventState+1)& (0+255),w,b
 18446   004714  A4D8               	btfss	status,2,c
 18447   004716  D002               	goto	u21290
 18448   004718  0E01               	movlw	1
 18449   00471A  0012               	return	
 18450   00471C                     u21290:
 18451   00471C  0E00               	movlw	0
 18452   00471E  0012               	return	
 18453   004720                     l20721:
 18454                           
 18455                           ; BSR set to: 0
 18456                           ;../main.c: 491:                     return (currentPos[io] == getNV((16 + 7*(io) + 4)))
      +                          ?EVENT_ON:EVENT_OFF;
 18457   004720  51CF               	movf	_io& (0+255),w,b
 18458   004722  0D07               	mullw	7
 18459   004724  50F3               	movf	243,w,c
 18460   004726  0F14               	addlw	20
 18461   004728  ECD2  F05F         	call	_getNV
 18462   00472C  0E30               	movlw	low _currentPos
 18463   00472E  0100               	movlb	0	; () banked
 18464   004730  25CF               	addwf	_io& (0+255),w,b
 18465   004732  6ED9               	movwf	fsr2l,c
 18466   004734  6ADA               	clrf	fsr2h,c
 18467   004736  0E01               	movlw	high _currentPos
 18468   004738  22DA               	addwfc	fsr2h,f,c
 18469   00473A  50DF               	movf	indf2,w,c
 18470   00473C  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 18471   00473E  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 18472   004740  518D               	movf	?_getNV& (0+255),w,b
 18473   004742  199F               	xorwf	??_APP_GetEventState& (0+255),w,b
 18474   004744  E106               	bnz	u21310
 18475   004746  518E               	movf	(?_getNV+1)& (0+255),w,b
 18476   004748  19A0               	xorwf	(??_APP_GetEventState+1)& (0+255),w,b
 18477   00474A  A4D8               	btfss	status,2,c
 18478   00474C  D002               	goto	u21310
 18479   00474E  0E01               	movlw	1
 18480   004750  0012               	return	
 18481   004752                     u21310:
 18482   004752  0E00               	movlw	0
 18483   004754  0012               	return	
 18484   004756                     l20725:
 18485                           
 18486                           ; BSR set to: 0
 18487                           ;../main.c: 494:                     if (getNV((16 + 7*(io) + 2)) > 2) {
 18488   004756  51CF               	movf	_io& (0+255),w,b
 18489   004758  0D07               	mullw	7
 18490   00475A  50F3               	movf	243,w,c
 18491   00475C  0F12               	addlw	18
 18492   00475E  ECD2  F05F         	call	_getNV
 18493   004762  0100               	movlb	0	; () banked
 18494   004764  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 18495   004766  D6DD               	goto	u21130
 18496   004768  518E               	movf	(?_getNV+1)& (0+255),w,b
 18497   00476A  E104               	bnz	u21330
 18498   00476C  0E03               	movlw	3
 18499   00476E  5D8D               	subwf	?_getNV& (0+255),w,b
 18500   004770  A0D8               	btfss	status,0,c
 18501   004772  D6D7               	goto	u21130
 18502   004774                     u21330:
 18503                           
 18504                           ; BSR set to: 0
 18505                           ;../main.c: 495:                         return (currentPos[io] == getNV((16 + 7*(io) + 
      +                          5)))?EVENT_ON:EVENT_OFF;
 18506   004774  51CF               	movf	_io& (0+255),w,b
 18507   004776  0D07               	mullw	7
 18508   004778  50F3               	movf	243,w,c
 18509   00477A  0F15               	addlw	21
 18510   00477C  ECD2  F05F         	call	_getNV
 18511   004780  0E30               	movlw	low _currentPos
 18512   004782  0100               	movlb	0	; () banked
 18513   004784  25CF               	addwf	_io& (0+255),w,b
 18514   004786  6ED9               	movwf	fsr2l,c
 18515   004788  6ADA               	clrf	fsr2h,c
 18516   00478A  0E01               	movlw	high _currentPos
 18517   00478C  22DA               	addwfc	fsr2h,f,c
 18518   00478E  50DF               	movf	indf2,w,c
 18519   004790  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 18520   004792  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 18521   004794  518D               	movf	?_getNV& (0+255),w,b
 18522   004796  199F               	xorwf	??_APP_GetEventState& (0+255),w,b
 18523   004798  E106               	bnz	u21340
 18524   00479A  518E               	movf	(?_getNV+1)& (0+255),w,b
 18525   00479C  19A0               	xorwf	(??_APP_GetEventState+1)& (0+255),w,b
 18526   00479E  A4D8               	btfss	status,2,c
 18527   0047A0  D002               	goto	u21340
 18528   0047A2  0E01               	movlw	1
 18529   0047A4  0012               	return	
 18530   0047A6                     u21340:
 18531   0047A6  0E00               	movlw	0
 18532   0047A8  0012               	return	
 18533   0047AA                     l20731:
 18534                           
 18535                           ; BSR set to: 0
 18536                           ;../main.c: 499:                     if (getNV((16 + 7*(io) + 2)) > 3) {
 18537   0047AA  51CF               	movf	_io& (0+255),w,b
 18538   0047AC  0D07               	mullw	7
 18539   0047AE  50F3               	movf	243,w,c
 18540   0047B0  0F12               	addlw	18
 18541   0047B2  ECD2  F05F         	call	_getNV
 18542   0047B6  0100               	movlb	0	; () banked
 18543   0047B8  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 18544   0047BA  D6B3               	goto	u21130
 18545   0047BC  518E               	movf	(?_getNV+1)& (0+255),w,b
 18546   0047BE  E104               	bnz	u21360
 18547   0047C0  0E04               	movlw	4
 18548   0047C2  5D8D               	subwf	?_getNV& (0+255),w,b
 18549   0047C4  A0D8               	btfss	status,0,c
 18550   0047C6  D6AD               	goto	u21130
 18551   0047C8                     u21360:
 18552                           
 18553                           ; BSR set to: 0
 18554                           ;../main.c: 500:                         return (currentPos[io] == getNV((16 + 7*(io) + 
      +                          6)))?EVENT_ON:EVENT_OFF;
 18555   0047C8  51CF               	movf	_io& (0+255),w,b
 18556   0047CA  0D07               	mullw	7
 18557   0047CC  50F3               	movf	243,w,c
 18558   0047CE  0F16               	addlw	22
 18559   0047D0  ECD2  F05F         	call	_getNV
 18560   0047D4  0E30               	movlw	low _currentPos
 18561   0047D6  0100               	movlb	0	; () banked
 18562   0047D8  25CF               	addwf	_io& (0+255),w,b
 18563   0047DA  6ED9               	movwf	fsr2l,c
 18564   0047DC  6ADA               	clrf	fsr2h,c
 18565   0047DE  0E01               	movlw	high _currentPos
 18566   0047E0  22DA               	addwfc	fsr2h,f,c
 18567   0047E2  50DF               	movf	indf2,w,c
 18568   0047E4  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 18569   0047E6  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 18570   0047E8  518D               	movf	?_getNV& (0+255),w,b
 18571   0047EA  199F               	xorwf	??_APP_GetEventState& (0+255),w,b
 18572   0047EC  E106               	bnz	u21370
 18573   0047EE  518E               	movf	(?_getNV+1)& (0+255),w,b
 18574   0047F0  19A0               	xorwf	(??_APP_GetEventState+1)& (0+255),w,b
 18575   0047F2  A4D8               	btfss	status,2,c
 18576   0047F4  D002               	goto	u21370
 18577   0047F6  0E01               	movlw	1
 18578   0047F8  0012               	return	
 18579   0047FA                     u21370:
 18580   0047FA  0E00               	movlw	0
 18581   0047FC  0012               	return	
 18582   0047FE                     l20739:
 18583                           
 18584                           ; BSR set to: 0
 18585   0047FE  51A9               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 18586                           
 18587                           ; Switch size 1, requested type "simple"
 18588                           ; Number of cases is 4, Range of values is 0 to 3
 18589                           ; switch strategies available:
 18590                           ; Name         Instructions Cycles
 18591                           ; simple_byte           13     7 (average)
 18592                           ;	Chosen strategy is simple_byte
 18593   004800  0A00               	xorlw	0	; case 0
 18594   004802  B4D8               	btfsc	status,2,c
 18595   004804  D772               	goto	l20717
 18596   004806  0A01               	xorlw	1	; case 1
 18597   004808  B4D8               	btfsc	status,2,c
 18598   00480A  D78A               	goto	l20721
 18599   00480C  0A03               	xorlw	3	; case 2
 18600   00480E  B4D8               	btfsc	status,2,c
 18601   004810  D7A2               	goto	l20725
 18602   004812  0A01               	xorlw	1	; case 3
 18603   004814  B4D8               	btfsc	status,2,c
 18604   004816  D7C9               	goto	l20731
 18605   004818  D684               	goto	u21130
 18606   00481A                     l20743:
 18607                           
 18608                           ; BSR set to: 0
 18609   00481A  51CF               	movf	_io& (0+255),w,b
 18610   00481C  0D07               	mullw	7
 18611   00481E  50F3               	movf	243,w,c
 18612   004820  0F10               	addlw	16
 18613   004822  ECD2  F05F         	call	_getNV
 18614   004826  0100               	movlb	0	; () banked
 18615   004828  518D               	movf	?_getNV& (0+255),w,b
 18616                           
 18617                           ; Switch size 1, requested type "simple"
 18618                           ; Number of cases is 5, Range of values is 0 to 4
 18619                           ; switch strategies available:
 18620                           ; Name         Instructions Cycles
 18621                           ; simple_byte           16     9 (average)
 18622                           ;	Chosen strategy is simple_byte
 18623   00482A  0A00               	xorlw	0	; case 0
 18624   00482C  B4D8               	btfsc	status,2,c
 18625   00482E  D6A9               	goto	l20683
 18626   004830  0A01               	xorlw	1	; case 1
 18627   004832  B4D8               	btfsc	status,2,c
 18628   004834  D6C6               	goto	l20691
 18629   004836  0A03               	xorlw	3	; case 2
 18630   004838  B4D8               	btfsc	status,2,c
 18631   00483A  D735               	goto	l20707
 18632   00483C  0A01               	xorlw	1	; case 3
 18633   00483E  B4D8               	btfsc	status,2,c
 18634   004840  D74F               	goto	l20715
 18635   004842  0A07               	xorlw	7	; case 4
 18636   004844  B4D8               	btfsc	status,2,c
 18637   004846  D7DB               	goto	l20739
 18638   004848  D66C               	goto	u21130
 18639   00484A                     __end_of_APP_GetEventState:
 18640                           	callstack 0
 18641                           
 18642 ;; *************** function _numEv *****************
 18643 ;; Defined at:
 18644 ;;		line 1167 in file "../../VLCBlib_PIC/event_teach_large.c"
 18645 ;; Parameters:    Size  Location     Type
 18646 ;;  tableIndex      1    wreg     unsigned char 
 18647 ;; Auto vars:     Size  Location     Type
 18648 ;;  tableIndex      1   67[BANK0 ] unsigned char 
 18649 ;;  f               1   66[BANK0 ] struct .
 18650 ;;  num             1   65[BANK0 ] unsigned char 
 18651 ;; Return value:  Size  Location     Type
 18652 ;;                  1    wreg      unsigned char 
 18653 ;; Registers used:
 18654 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18655 ;; Tracked objects:
 18656 ;;		On entry : 0/0
 18657 ;;		On exit  : 0/0
 18658 ;;		Unchanged: 0/0
 18659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18661 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18662 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18663 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18664 ;;Total ram usage:        7 bytes
 18665 ;; Hardware stack levels used: 1
 18666 ;; Hardware stack levels required when called: 15
 18667 ;; This function calls:
 18668 ;;		_readNVM
 18669 ;;		_validStart
 18670 ;; This function is called by:
 18671 ;;		_doReval
 18672 ;;		_doReqev
 18673 ;;		_reqevCallback
 18674 ;; This function uses a non-reentrant model
 18675 ;;
 18676                           
 18677                           	psect	text50
 18678   008CE2                     __ptext50:
 18679                           	callstack 0
 18680   008CE2                     _numEv:
 18681                           	callstack 12
 18682                           
 18683                           ; BSR set to: 0
 18684                           ;incstack = 0
 18685                           ;numEv@tableIndex stored from wreg
 18686   008CE2  0100               	movlb	0	; () banked
 18687   008CE4  6FA3               	movwf	numEv@tableIndex& (0+255),b
 18688                           
 18689                           ;../../VLCBlib_PIC/event_teach_large.c: 1168:     EventTableFlags f;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1169:     uint8_t num=0;
 18690   008CE6  0E00               	movlw	0
 18691   008CE8  0100               	movlb	0	; () banked
 18692   008CEA  6FA1               	movwf	numEv@num& (0+255),b
 18693                           
 18694                           ; BSR set to: 0
 18695                           ;../../VLCBlib_PIC/event_teach_large.c: 1170:     if ( ! validStart(tableIndex)) {
 18696   008CEC  51A3               	movf	numEv@tableIndex& (0+255),w,b
 18697   008CEE  EC9A  F05D         	call	_validStart
 18698   008CF2  0900               	iorlw	0
 18699   008CF4  A4D8               	btfss	status,2,c
 18700   008CF6  D002               	goto	l21501
 18701   008CF8                     u22460:
 18702                           
 18703                           ;../../VLCBlib_PIC/event_teach_large.c: 1172:         return 0;
 18704   008CF8  0E00               	movlw	0
 18705   008CFA  0012               	return	
 18706   008CFC                     l21501:
 18707                           
 18708                           ;../../VLCBlib_PIC/event_teach_large.c: 1174:     f.asByte = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, 0xEF80 + 16*tableIndex+0);
 18709   008CFC  0100               	movlb	0	; () banked
 18710   008CFE  51A3               	movf	numEv@tableIndex& (0+255),w,b
 18711   008D00  6F9D               	movwf	??_numEv& (0+255),b
 18712   008D02  6B9E               	clrf	(??_numEv+1)& (0+255),b
 18713   008D04  3B9D               	swapf	??_numEv& (0+255),f,b
 18714   008D06  3B9E               	swapf	(??_numEv+1)& (0+255),f,b
 18715   008D08  0EF0               	movlw	240
 18716   008D0A  179E               	andwf	(??_numEv+1)& (0+255),f,b
 18717   008D0C  519D               	movf	??_numEv& (0+255),w,b
 18718   008D0E  0B0F               	andlw	15
 18719   008D10  139E               	iorwf	(??_numEv+1)& (0+255),f,b
 18720   008D12  0EF0               	movlw	240
 18721   008D14  179D               	andwf	??_numEv& (0+255),f,b
 18722   008D16  0E80               	movlw	128
 18723   008D18  259D               	addwf	??_numEv& (0+255),w,b
 18724   008D1A  6F9F               	movwf	(??_numEv+2)& (0+255),b
 18725   008D1C  0EEF               	movlw	239
 18726   008D1E  219E               	addwfc	(??_numEv+1)& (0+255),w,b
 18727   008D20  6FA0               	movwf	(??_numEv+3)& (0+255),b
 18728   008D22  C09F  F091         	movff	??_numEv+2,readNVM@index
 18729   008D26  C0A0  F092         	movff	??_numEv+3,readNVM@index+1
 18730   008D2A  6B93               	clrf	(readNVM@index+2)& (0+255),b
 18731   008D2C  0E01               	movlw	1
 18732   008D2E  EC31  F05B         	call	_readNVM
 18733   008D32  0100               	movlb	0	; () banked
 18734   008D34  5191               	movf	?_readNVM& (0+255),w,b
 18735   008D36  6FA2               	movwf	numEv@f& (0+255),b
 18736                           
 18737                           ;../../VLCBlib_PIC/event_teach_large.c: 1175:     while (f.continued) {
 18738   008D38  D039               	goto	l21515
 18739   008D3A                     l21503:
 18740                           
 18741                           ; BSR set to: 0
 18742                           ;../../VLCBlib_PIC/event_teach_large.c: 1176:         tableIndex = (uint8_t)readNVM(FLAS
      +                          H_NVM_TYPE, 0xEF80 + 16*tableIndex+1);
 18743   008D3A  51A3               	movf	numEv@tableIndex& (0+255),w,b
 18744   008D3C  0D10               	mullw	16
 18745   008D3E  CFF3 F09D          	movff	prodl,??_numEv
 18746   008D42  CFF4 F09E          	movff	prodh,??_numEv+1
 18747   008D46  0E81               	movlw	129
 18748   008D48  259D               	addwf	??_numEv& (0+255),w,b
 18749   008D4A  6F9F               	movwf	(??_numEv+2)& (0+255),b
 18750   008D4C  0EEF               	movlw	239
 18751   008D4E  219E               	addwfc	(??_numEv+1)& (0+255),w,b
 18752   008D50  6FA0               	movwf	(??_numEv+3)& (0+255),b
 18753   008D52  C09F  F091         	movff	??_numEv+2,readNVM@index
 18754   008D56  C0A0  F092         	movff	??_numEv+3,readNVM@index+1
 18755   008D5A  6B93               	clrf	(readNVM@index+2)& (0+255),b
 18756   008D5C  0E01               	movlw	1
 18757   008D5E  EC31  F05B         	call	_readNVM
 18758   008D62  0100               	movlb	0	; () banked
 18759   008D64  5191               	movf	?_readNVM& (0+255),w,b
 18760   008D66  6FA3               	movwf	numEv@tableIndex& (0+255),b
 18761                           
 18762                           ; BSR set to: 0
 18763                           ;../../VLCBlib_PIC/event_teach_large.c: 1177:         if (tableIndex == 0xff) {
 18764   008D68  29A3               	incf	numEv@tableIndex& (0+255),w,b
 18765   008D6A  B4D8               	btfsc	status,2,c
 18766   008D6C  D7C5               	goto	u22460
 18767                           
 18768                           ; BSR set to: 0
 18769                           ;../../VLCBlib_PIC/event_teach_large.c: 1180:         f.asByte = (uint8_t)readNVM(FLASH_
      +                          NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 18770   008D6E  51A3               	movf	numEv@tableIndex& (0+255),w,b
 18771   008D70  6F9D               	movwf	??_numEv& (0+255),b
 18772   008D72  6B9E               	clrf	(??_numEv+1)& (0+255),b
 18773   008D74  3B9D               	swapf	??_numEv& (0+255),f,b
 18774   008D76  3B9E               	swapf	(??_numEv+1)& (0+255),f,b
 18775   008D78  0EF0               	movlw	240
 18776   008D7A  179E               	andwf	(??_numEv+1)& (0+255),f,b
 18777   008D7C  519D               	movf	??_numEv& (0+255),w,b
 18778   008D7E  0B0F               	andlw	15
 18779   008D80  139E               	iorwf	(??_numEv+1)& (0+255),f,b
 18780   008D82  0EF0               	movlw	240
 18781   008D84  179D               	andwf	??_numEv& (0+255),f,b
 18782   008D86  0E80               	movlw	128
 18783   008D88  259D               	addwf	??_numEv& (0+255),w,b
 18784   008D8A  6F9F               	movwf	(??_numEv+2)& (0+255),b
 18785   008D8C  0EEF               	movlw	239
 18786   008D8E  219E               	addwfc	(??_numEv+1)& (0+255),w,b
 18787   008D90  6FA0               	movwf	(??_numEv+3)& (0+255),b
 18788   008D92  C09F  F091         	movff	??_numEv+2,readNVM@index
 18789   008D96  C0A0  F092         	movff	??_numEv+3,readNVM@index+1
 18790   008D9A  6B93               	clrf	(readNVM@index+2)& (0+255),b
 18791   008D9C  0E01               	movlw	1
 18792   008D9E  EC31  F05B         	call	_readNVM
 18793   008DA2  0100               	movlb	0	; () banked
 18794   008DA4  5191               	movf	?_readNVM& (0+255),w,b
 18795   008DA6  6FA2               	movwf	numEv@f& (0+255),b
 18796                           
 18797                           ; BSR set to: 0
 18798                           ;../../VLCBlib_PIC/event_teach_large.c: 1181:         num += 10;
 18799   008DA8  0E0A               	movlw	10
 18800   008DAA  27A1               	addwf	numEv@num& (0+255),f,b
 18801   008DAC                     l21515:
 18802                           
 18803                           ; BSR set to: 0
 18804                           ;../../VLCBlib_PIC/event_teach_large.c: 1175:     while (f.continued) {
 18805   008DAC  B9A2               	btfsc	numEv@f& (0+255),4,b
 18806   008DAE  D7C5               	goto	l21503
 18807                           
 18808                           ; BSR set to: 0
 18809                           ;../../VLCBlib_PIC/event_teach_large.c: 1183:     num += f.eVsUsed;
 18810   008DB0  51A2               	movf	numEv@f& (0+255),w,b
 18811   008DB2  0B0F               	andlw	15
 18812   008DB4  27A1               	addwf	numEv@num& (0+255),f,b
 18813                           
 18814                           ; BSR set to: 0
 18815                           ;../../VLCBlib_PIC/event_teach_large.c: 1184:     return num;
 18816   008DB6  51A1               	movf	numEv@num& (0+255),w,b
 18817   008DB8  0012               	return		;funcret
 18818   008DBA                     __end_of_numEv:
 18819                           	callstack 0
 18820                           
 18821 ;; *************** function _tableIndexToEvtIdx *****************
 18822 ;; Defined at:
 18823 ;;		line 1286 in file "../../VLCBlib_PIC/event_teach_large.c"
 18824 ;; Parameters:    Size  Location     Type
 18825 ;;  tableIndex      1    wreg     unsigned char 
 18826 ;; Auto vars:     Size  Location     Type
 18827 ;;  tableIndex      1   45[BANK0 ] unsigned char 
 18828 ;; Return value:  Size  Location     Type
 18829 ;;                  1    wreg      unsigned char 
 18830 ;; Registers used:
 18831 ;;		wreg, status,2, status,0
 18832 ;; Tracked objects:
 18833 ;;		On entry : 0/0
 18834 ;;		On exit  : 0/0
 18835 ;;		Unchanged: 0/0
 18836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18838 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18840 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18841 ;;Total ram usage:        1 bytes
 18842 ;; Hardware stack levels used: 1
 18843 ;; Hardware stack levels required when called: 12
 18844 ;; This function calls:
 18845 ;;		Nothing
 18846 ;; This function is called by:
 18847 ;;		_nerdCallback
 18848 ;;		_reqevCallback
 18849 ;; This function uses a non-reentrant model
 18850 ;;
 18851                           
 18852                           	psect	text51
 18853   00C8E4                     __ptext51:
 18854                           	callstack 0
 18855   00C8E4                     _tableIndexToEvtIdx:
 18856                           	callstack 15
 18857                           
 18858                           ;incstack = 0
 18859                           ;tableIndexToEvtIdx@tableIndex stored from wreg
 18860   00C8E4  0100               	movlb	0	; () banked
 18861   00C8E6  6F8D               	movwf	tableIndexToEvtIdx@tableIndex& (0+255),b
 18862                           
 18863                           ;../../VLCBlib_PIC/event_teach_large.c: 1287:     return tableIndex + 1;
 18864   00C8E8  0100               	movlb	0	; () banked
 18865   00C8EA  298D               	incf	tableIndexToEvtIdx@tableIndex& (0+255),w,b
 18866                           
 18867                           ; BSR set to: 0
 18868   00C8EC  0012               	return		;funcret
 18869   00C8EE                     __end_of_tableIndexToEvtIdx:
 18870                           	callstack 0
 18871                           
 18872 ;; *************** function _setNV *****************
 18873 ;; Defined at:
 18874 ;;		line 218 in file "../../VLCBlib_PIC/nv.c"
 18875 ;; Parameters:    Size  Location     Type
 18876 ;;  index           1    wreg     unsigned char 
 18877 ;;  value           1   58[BANK1 ] unsigned char 
 18878 ;; Auto vars:     Size  Location     Type
 18879 ;;  index           1   62[BANK1 ] unsigned char 
 18880 ;;  oldValue        1   61[BANK1 ] unsigned char 
 18881 ;; Return value:  Size  Location     Type
 18882 ;;                  1    wreg      unsigned char 
 18883 ;; Registers used:
 18884 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18885 ;; Tracked objects:
 18886 ;;		On entry : 0/0
 18887 ;;		On exit  : 0/0
 18888 ;;		Unchanged: 0/0
 18889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18890 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18891 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18892 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18893 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18894 ;;Total ram usage:        5 bytes
 18895 ;; Hardware stack levels used: 1
 18896 ;; Hardware stack levels required when called: 26
 18897 ;; This function calls:
 18898 ;;		_APP_nvValidate
 18899 ;;		_APP_nvValueChanged
 18900 ;;		_writeNVM
 18901 ;; This function is called by:
 18902 ;;		_nvProcessMessage
 18903 ;; This function uses a non-reentrant model
 18904 ;;
 18905                           
 18906                           	psect	text52
 18907   00ACFE                     __ptext52:
 18908                           	callstack 0
 18909   00ACFE                     _setNV:
 18910                           	callstack 2
 18911                           
 18912                           ; BSR set to: 0
 18913                           ;incstack = 0
 18914                           ;setNV@index stored from wreg
 18915   00ACFE  0101               	movlb	1	; () banked
 18916   00AD00  6FFC               	movwf	setNV@index& (0+255),b
 18917                           
 18918                           ;../../VLCBlib_PIC/nv.c: 219:     uint8_t oldValue;;../../VLCBlib_PIC/nv.c: 221:     if 
      +                          (index > (15+7*16)) return CMDERR_INV_NV_IDX;
 18919   00AD02  0E7F               	movlw	127
 18920   00AD04  0101               	movlb	1	; () banked
 18921   00AD06  65FC               	cpfsgt	setNV@index& (0+255),b
 18922   00AD08  D002               	goto	l22429
 18923                           
 18924                           ; BSR set to: 1
 18925   00AD0A  0E0A               	movlw	10
 18926   00AD0C  0012               	return	
 18927   00AD0E                     l22429:
 18928                           
 18929                           ; BSR set to: 1
 18930                           ;../../VLCBlib_PIC/nv.c: 222:     if (APP_nvValidate(index, value) == INVALID) return CM
      +                          DERR_INV_NV_VALUE;
 18931   00AD0E  C1F8  F09F         	movff	setNV@value,APP_nvValidate@value
 18932   00AD12  51FC               	movf	setNV@index& (0+255),w,b
 18933   00AD14  ECE5  F057         	call	_APP_nvValidate
 18934   00AD18  0900               	iorlw	0
 18935   00AD1A  A4D8               	btfss	status,2,c
 18936   00AD1C  D002               	goto	l22435
 18937   00AD1E  0E0C               	movlw	12
 18938   00AD20  0012               	return	
 18939   00AD22                     l22435:
 18940                           
 18941                           ;../../VLCBlib_PIC/nv.c: 224:     oldValue = nvCache[index];
 18942   00AD22  0E00               	movlw	low _nvCache
 18943   00AD24  0101               	movlb	1	; () banked
 18944   00AD26  25FC               	addwf	setNV@index& (0+255),w,b
 18945   00AD28  6ED9               	movwf	fsr2l,c
 18946   00AD2A  6ADA               	clrf	fsr2h,c
 18947   00AD2C  0E04               	movlw	high _nvCache
 18948   00AD2E  22DA               	addwfc	fsr2h,f,c
 18949   00AD30  50DF               	movf	indf2,w,c
 18950   00AD32  6FFB               	movwf	setNV@oldValue& (0+255),b
 18951                           
 18952                           ;../../VLCBlib_PIC/nv.c: 225:     nvCache[index] = value;
 18953   00AD34  0E00               	movlw	low _nvCache
 18954   00AD36  25FC               	addwf	setNV@index& (0+255),w,b
 18955   00AD38  6ED9               	movwf	fsr2l,c
 18956   00AD3A  6ADA               	clrf	fsr2h,c
 18957   00AD3C  0E04               	movlw	high _nvCache
 18958   00AD3E  22DA               	addwfc	fsr2h,f,c
 18959   00AD40  C1F8  FFDF         	movff	setNV@value,indf2
 18960                           
 18961                           ; BSR set to: 1
 18962                           ;../../VLCBlib_PIC/nv.c: 226:     writeNVM(FLASH_NVM_TYPE, 0xFF80 +index, value);
 18963   00AD44  0E80               	movlw	128
 18964   00AD46  25FC               	addwf	setNV@index& (0+255),w,b
 18965   00AD48  6FF9               	movwf	??_setNV& (0+255),b
 18966   00AD4A  6BFA               	clrf	(??_setNV+1)& (0+255),b
 18967   00AD4C  0EFF               	movlw	255
 18968   00AD4E  23FA               	addwfc	(??_setNV+1)& (0+255),f,b
 18969   00AD50  C1F9  F0A4         	movff	??_setNV,writeNVM@index
 18970   00AD54  C1FA  F0A5         	movff	??_setNV+1,writeNVM@index+1
 18971   00AD58  0100               	movlb	0	; () banked
 18972   00AD5A  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 18973   00AD5C  C1F8  F0A7         	movff	setNV@value,writeNVM@value
 18974   00AD60  0E01               	movlw	1
 18975   00AD62  ECC1  F05D         	call	_writeNVM
 18976                           
 18977                           ;../../VLCBlib_PIC/nv.c: 231:     APP_nvValueChanged(index, value, oldValue);
 18978   00AD66  C1F8  F1F1         	movff	setNV@value,APP_nvValueChanged@value
 18979   00AD6A  C1FB  F1F2         	movff	setNV@oldValue,APP_nvValueChanged@oldValue
 18980   00AD6E  0101               	movlb	1	; () banked
 18981   00AD70  51FC               	movf	setNV@index& (0+255),w,b
 18982   00AD72  ECCA  F014         	call	_APP_nvValueChanged
 18983                           
 18984                           ;../../VLCBlib_PIC/nv.c: 232:     return 0;
 18985   00AD76  0E00               	movlw	0
 18986   00AD78  0012               	return		;funcret
 18987   00AD7A                     __end_of_setNV:
 18988                           	callstack 0
 18989                           
 18990 ;; *************** function _APP_nvValueChanged *****************
 18991 ;; Defined at:
 18992 ;;		line 104 in file "../universalNv.c"
 18993 ;; Parameters:    Size  Location     Type
 18994 ;;  index           1    wreg     unsigned char 
 18995 ;;  value           1   51[BANK1 ] unsigned char 
 18996 ;;  oldValue        1   52[BANK1 ] unsigned char 
 18997 ;; Auto vars:     Size  Location     Type
 18998 ;;  index           1   56[BANK1 ] unsigned char 
 18999 ;;  io              1   57[BANK1 ] unsigned char 
 19000 ;;  nv              1    0        unsigned char 
 19001 ;; Return value:  Size  Location     Type
 19002 ;;                  1    wreg      void 
 19003 ;; Registers used:
 19004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19005 ;; Tracked objects:
 19006 ;;		On entry : 0/0
 19007 ;;		On exit  : 0/0
 19008 ;;		Unchanged: 0/0
 19009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19010 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19011 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19012 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19013 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19014 ;;Total ram usage:        7 bytes
 19015 ;; Hardware stack levels used: 1
 19016 ;; Hardware stack levels required when called: 25
 19017 ;; This function calls:
 19018 ;;		___awdiv
 19019 ;;		___awmod
 19020 ;;		_getNV
 19021 ;;		_setBounceState
 19022 ;;		_setMultiState
 19023 ;;		_setServoPosition
 19024 ;;		_setServoState
 19025 ;;		_setTimedResponseDelay
 19026 ;;		_setType
 19027 ;;		_startBounceOutput
 19028 ;;		_startMultiOutput
 19029 ;;		_startServoOutput
 19030 ;; This function is called by:
 19031 ;;		_setNV
 19032 ;; This function uses a non-reentrant model
 19033 ;;
 19034                           
 19035                           	psect	text53
 19036   002994                     __ptext53:
 19037                           	callstack 0
 19038   002994                     _APP_nvValueChanged:
 19039                           	callstack 2
 19040                           
 19041                           ;incstack = 0
 19042                           ;APP_nvValueChanged@index stored from wreg
 19043   002994  0101               	movlb	1	; () banked
 19044   002996  6FF6               	movwf	APP_nvValueChanged@index& (0+255),b
 19045                           
 19046                           ;../universalNv.c: 105:     uint8_t nv;;../universalNv.c: 106:     uint8_t io;;../univer
      +                          salNv.c: 108:     if ((((index-16) % 7) == 0)) {
 19047   002998  0EF0               	movlw	240
 19048   00299A  0101               	movlb	1	; () banked
 19049   00299C  25F6               	addwf	APP_nvValueChanged@index& (0+255),w,b
 19050   00299E  0100               	movlb	0	; () banked
 19051   0029A0  6F8D               	movwf	___awmod@dividend& (0+255),b
 19052   0029A2  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 19053   0029A4  0EFF               	movlw	255
 19054   0029A6  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 19055   0029A8  0E00               	movlw	0
 19056   0029AA  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 19057   0029AC  0E07               	movlw	7
 19058   0029AE  6F8F               	movwf	___awmod@divisor& (0+255),b
 19059   0029B0  EC90  F058         	call	___awmod	;wreg free
 19060   0029B4  0100               	movlb	0	; () banked
 19061   0029B6  518D               	movf	?___awmod& (0+255),w,b
 19062   0029B8  118E               	iorwf	(?___awmod+1)& (0+255),w,b
 19063   0029BA  A4D8               	btfss	status,2,c
 19064   0029BC  D01B               	goto	l20933
 19065                           
 19066                           ; BSR set to: 0
 19067                           ;../universalNv.c: 110:         io = index-16;
 19068   0029BE  0101               	movlb	1	; () banked
 19069   0029C0  51F6               	movf	APP_nvValueChanged@index& (0+255),w,b
 19070   0029C2  0FF0               	addlw	240
 19071   0029C4  6FF7               	movwf	APP_nvValueChanged@io& (0+255),b
 19072                           
 19073                           ; BSR set to: 1
 19074                           ;../universalNv.c: 111:         io /= 7;
 19075   0029C6  C1F7  F097         	movff	APP_nvValueChanged@io,___awdiv@dividend
 19076   0029CA  0100               	movlb	0	; () banked
 19077   0029CC  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 19078   0029CE  0E00               	movlw	0
 19079   0029D0  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19080   0029D2  0E07               	movlw	7
 19081   0029D4  6F99               	movwf	___awdiv@divisor& (0+255),b
 19082   0029D6  EC7B  F054         	call	___awdiv	;wreg free
 19083   0029DA  0100               	movlb	0	; () banked
 19084   0029DC  5197               	movf	?___awdiv& (0+255),w,b
 19085   0029DE  0101               	movlb	1	; () banked
 19086   0029E0  6FF7               	movwf	APP_nvValueChanged@io& (0+255),b
 19087                           
 19088                           ; BSR set to: 1
 19089                           ;../universalNv.c: 112:         if (oldValue != value) {
 19090   0029E2  51F1               	movf	APP_nvValueChanged@value& (0+255),w,b
 19091   0029E4  19F2               	xorwf	APP_nvValueChanged@oldValue& (0+255),w,b
 19092   0029E6  B4D8               	btfsc	status,2,c
 19093   0029E8  D005               	goto	l20933
 19094                           
 19095                           ; BSR set to: 1
 19096                           ;../universalNv.c: 113:             setType(io, value);
 19097   0029EA  C1F1  F1EE         	movff	APP_nvValueChanged@value,setType@type
 19098   0029EE  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19099   0029F0  EC6D  F05A         	call	_setType
 19100   0029F4                     l20933:
 19101                           
 19102                           ;../universalNv.c: 116:     if (index == 5) {
 19103   0029F4  0E05               	movlw	5
 19104   0029F6  0101               	movlb	1	; () banked
 19105   0029F8  19F6               	xorwf	APP_nvValueChanged@index& (0+255),w,b
 19106   0029FA  A4D8               	btfss	status,2,c
 19107   0029FC  D003               	goto	l20937
 19108                           
 19109                           ; BSR set to: 1
 19110                           ;../universalNv.c: 117:         setTimedResponseDelay(value);
 19111   0029FE  51F1               	movf	APP_nvValueChanged@value& (0+255),w,b
 19112   002A00  EC77  F064         	call	_setTimedResponseDelay
 19113   002A04                     l20937:
 19114                           
 19115                           ;../universalNv.c: 121:     if (index == 4) {
 19116   002A04  0E04               	movlw	4
 19117   002A06  0101               	movlb	1	; () banked
 19118   002A08  19F6               	xorwf	APP_nvValueChanged@index& (0+255),w,b
 19119   002A0A  B4D8               	btfsc	status,2,c
 19120                           
 19121                           ; BSR set to: 1
 19122                           ;../universalNv.c: 122:         WPUB = value;
 19123   002A0C  C1F1  FF5B         	movff	APP_nvValueChanged@value,3931	;volatile
 19124                           
 19125                           ; BSR set to: 1
 19126                           ;../universalNv.c: 215:     if (index >= 16) {
 19127   002A10  0E0F               	movlw	15
 19128   002A12  65F6               	cpfsgt	APP_nvValueChanged@index& (0+255),b
 19129   002A14  0012               	return	
 19130                           
 19131                           ; BSR set to: 1
 19132                           ;../universalNv.c: 216:         io = ((uint8_t)((index-16)/7));
 19133   002A16  0EF0               	movlw	240
 19134   002A18  25F6               	addwf	APP_nvValueChanged@index& (0+255),w,b
 19135   002A1A  0100               	movlb	0	; () banked
 19136   002A1C  6F97               	movwf	___awdiv@dividend& (0+255),b
 19137   002A1E  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 19138   002A20  0EFF               	movlw	255
 19139   002A22  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 19140   002A24  0E00               	movlw	0
 19141   002A26  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19142   002A28  0E07               	movlw	7
 19143   002A2A  6F99               	movwf	___awdiv@divisor& (0+255),b
 19144   002A2C  EC7B  F054         	call	___awdiv	;wreg free
 19145   002A30  0100               	movlb	0	; () banked
 19146   002A32  5197               	movf	?___awdiv& (0+255),w,b
 19147   002A34  0101               	movlb	1	; () banked
 19148   002A36  6FF7               	movwf	APP_nvValueChanged@io& (0+255),b
 19149   002A38  0EF0               	movlw	240
 19150   002A3A  25F6               	addwf	APP_nvValueChanged@index& (0+255),w,b
 19151   002A3C  0100               	movlb	0	; () banked
 19152   002A3E  6F8D               	movwf	___awmod@dividend& (0+255),b
 19153   002A40  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 19154   002A42  0EFF               	movlw	255
 19155   002A44  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 19156   002A46  0E00               	movlw	0
 19157   002A48  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 19158   002A4A  0E07               	movlw	7
 19159   002A4C  6F8F               	movwf	___awmod@divisor& (0+255),b
 19160   002A4E  EC90  F058         	call	___awmod	;wreg free
 19161                           
 19162                           ;../universalNv.c: 218:         switch(getNV((16 + 7*(io) + 0))) {
 19163   002A52  D1D3               	goto	l21015
 19164   002A54                     l20945:
 19165                           
 19166                           ; BSR set to: 0
 19167                           ;../universalNv.c: 232:                 if (index == (16 + 7*(io) + 2)) {
 19168   002A54  0101               	movlb	1	; () banked
 19169   002A56  51F6               	movf	APP_nvValueChanged@index& (0+255),w,b
 19170   002A58  6FF3               	movwf	??_APP_nvValueChanged& (0+255),b
 19171   002A5A  6BF4               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19172   002A5C  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19173   002A5E  0D07               	mullw	7
 19174   002A60  0E12               	movlw	18
 19175   002A62  26F3               	addwf	243,f,c
 19176   002A64  0E00               	movlw	0
 19177   002A66  22F4               	addwfc	244,f,c
 19178   002A68  51F3               	movf	??_APP_nvValueChanged& (0+255),w,b
 19179   002A6A  18F3               	xorwf	243,w,c
 19180   002A6C  E113               	bnz	l20951
 19181   002A6E  51F4               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19182   002A70  18F4               	xorwf	244,w,c
 19183   002A72  A4D8               	btfss	status,2,c
 19184   002A74  D00F               	goto	l20951
 19185                           
 19186                           ; BSR set to: 1
 19187                           ;../universalNv.c: 233:                     setServoState(io, 2);
 19188   002A76  0E02               	movlw	2
 19189   002A78  0100               	movlb	0	; () banked
 19190   002A7A  6F91               	movwf	setServoState@action& (0+255),b
 19191   002A7C  0101               	movlb	1	; () banked
 19192   002A7E  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19193   002A80  ECC8  F04D         	call	_setServoState
 19194                           
 19195                           ;../universalNv.c: 234:                     startServoOutput(io, 2);
 19196   002A84  0E02               	movlw	2
 19197   002A86  0100               	movlb	0	; () banked
 19198   002A88  6F91               	movwf	startServoOutput@action& (0+255),b
 19199   002A8A  0101               	movlb	1	; () banked
 19200   002A8C  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19201   002A8E  EC45  F04B         	call	_startServoOutput
 19202                           
 19203                           ;../universalNv.c: 235:                 } else if (index == (16 + 7*(io) + 3)) {
 19204   002A92  0012               	return	
 19205   002A94                     l20951:
 19206                           
 19207                           ; BSR set to: 1
 19208   002A94  51F6               	movf	APP_nvValueChanged@index& (0+255),w,b
 19209   002A96  6FF3               	movwf	??_APP_nvValueChanged& (0+255),b
 19210   002A98  6BF4               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19211   002A9A  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19212   002A9C  0D07               	mullw	7
 19213   002A9E  0E13               	movlw	19
 19214   002AA0  26F3               	addwf	243,f,c
 19215   002AA2  0E00               	movlw	0
 19216   002AA4  22F4               	addwfc	244,f,c
 19217   002AA6  51F3               	movf	??_APP_nvValueChanged& (0+255),w,b
 19218   002AA8  18F3               	xorwf	243,w,c
 19219   002AAA  E113               	bnz	l20957
 19220   002AAC  51F4               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19221   002AAE  18F4               	xorwf	244,w,c
 19222   002AB0  A4D8               	btfss	status,2,c
 19223   002AB2  D00F               	goto	l20957
 19224                           
 19225                           ; BSR set to: 1
 19226                           ;../universalNv.c: 236:                     setServoState(io, 1);
 19227   002AB4  0E01               	movlw	1
 19228   002AB6  0100               	movlb	0	; () banked
 19229   002AB8  6F91               	movwf	setServoState@action& (0+255),b
 19230   002ABA  0101               	movlb	1	; () banked
 19231   002ABC  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19232   002ABE  ECC8  F04D         	call	_setServoState
 19233                           
 19234                           ;../universalNv.c: 237:                     startServoOutput(io, 1);
 19235   002AC2  0E01               	movlw	1
 19236   002AC4  0100               	movlb	0	; () banked
 19237   002AC6  6F91               	movwf	startServoOutput@action& (0+255),b
 19238   002AC8  0101               	movlb	1	; () banked
 19239   002ACA  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19240   002ACC  EC45  F04B         	call	_startServoOutput
 19241                           
 19242                           ;../universalNv.c: 238:                 } else if (index == (16 + 7*(io) + 1)) {
 19243   002AD0  0012               	return	
 19244   002AD2                     l20957:
 19245                           
 19246                           ; BSR set to: 1
 19247   002AD2  51F6               	movf	APP_nvValueChanged@index& (0+255),w,b
 19248   002AD4  6FF3               	movwf	??_APP_nvValueChanged& (0+255),b
 19249   002AD6  6BF4               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19250   002AD8  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19251   002ADA  0D07               	mullw	7
 19252   002ADC  0E11               	movlw	17
 19253   002ADE  26F3               	addwf	243,f,c
 19254   002AE0  0E00               	movlw	0
 19255   002AE2  22F4               	addwfc	244,f,c
 19256   002AE4  51F3               	movf	??_APP_nvValueChanged& (0+255),w,b
 19257   002AE6  18F3               	xorwf	243,w,c
 19258   002AE8  E103               	bnz	u21891
 19259   002AEA  51F4               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19260   002AEC  18F4               	xorwf	244,w,c
 19261   002AEE  A4D8               	btfss	status,2,c
 19262   002AF0                     u21891:
 19263   002AF0  0012               	return	
 19264                           
 19265                           ; BSR set to: 1
 19266                           ;../universalNv.c: 239:                     if (((value & 0x80) == 0x80) &&
 19267   002AF2  AFF1               	btfss	APP_nvValueChanged@value& (0+255),7,b
 19268   002AF4  0012               	return	
 19269                           
 19270                           ; BSR set to: 1
 19271   002AF6  BFF2               	btfsc	APP_nvValueChanged@oldValue& (0+255),7,b
 19272   002AF8  0012               	return	
 19273                           
 19274                           ; BSR set to: 1
 19275                           ;../universalNv.c: 240:                             (oldValue & 0x80) == 0) {;../univers
      +                          alNv.c: 243:                         setServoPosition(io, (uint8_t)(getNV((16 + 7*(io) +
      +                           3))/2 + getNV((16 + 7*(io) + 2))/2));
 19276   002AFA  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19277   002AFC  0D07               	mullw	7
 19278   002AFE  50F3               	movf	243,w,c
 19279   002B00  0F12               	addlw	18
 19280   002B02  ECD2  F05F         	call	_getNV
 19281   002B06  C08D  F097         	movff	?_getNV,___awdiv@dividend
 19282   002B0A  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 19283   002B0E  0E00               	movlw	0
 19284   002B10  0100               	movlb	0	; () banked
 19285   002B12  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19286   002B14  0E02               	movlw	2
 19287   002B16  6F99               	movwf	___awdiv@divisor& (0+255),b
 19288   002B18  EC7B  F054         	call	___awdiv	;wreg free
 19289   002B1C  C097  F1F3         	movff	?___awdiv,??_APP_nvValueChanged
 19290   002B20  C098  F1F4         	movff	?___awdiv+1,??_APP_nvValueChanged+1
 19291   002B24  0101               	movlb	1	; () banked
 19292   002B26  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19293   002B28  0D07               	mullw	7
 19294   002B2A  50F3               	movf	243,w,c
 19295   002B2C  0F13               	addlw	19
 19296   002B2E  ECD2  F05F         	call	_getNV
 19297   002B32  C08D  F097         	movff	?_getNV,___awdiv@dividend
 19298   002B36  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 19299   002B3A  0E00               	movlw	0
 19300   002B3C  0100               	movlb	0	; () banked
 19301   002B3E  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19302   002B40  0E02               	movlw	2
 19303   002B42  6F99               	movwf	___awdiv@divisor& (0+255),b
 19304   002B44  EC7B  F054         	call	___awdiv	;wreg free
 19305   002B48  0100               	movlb	0	; () banked
 19306   002B4A  5197               	movf	?___awdiv& (0+255),w,b
 19307   002B4C  0101               	movlb	1	; () banked
 19308   002B4E  25F3               	addwf	??_APP_nvValueChanged& (0+255),w,b
 19309   002B50  0100               	movlb	0	; () banked
 19310   002B52  6F9F               	movwf	setServoPosition@pos& (0+255),b
 19311   002B54  0101               	movlb	1	; () banked
 19312   002B56  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19313   002B58  EC04  F063         	call	_setServoPosition
 19314                           
 19315                           ; BSR set to: 1
 19316                           
 19317                           ;../universalNv.c: 245:                 }
 19318   002B5C  0012               	return	
 19319   002B5E                     l20965:
 19320                           
 19321                           ; BSR set to: 0
 19322                           ;../universalNv.c: 250:                 if (index == (16 + 7*(io) + 3)) {
 19323   002B5E  0101               	movlb	1	; () banked
 19324   002B60  51F6               	movf	APP_nvValueChanged@index& (0+255),w,b
 19325   002B62  6FF3               	movwf	??_APP_nvValueChanged& (0+255),b
 19326   002B64  6BF4               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19327   002B66  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19328   002B68  0D07               	mullw	7
 19329   002B6A  0E13               	movlw	19
 19330   002B6C  26F3               	addwf	243,f,c
 19331   002B6E  0E00               	movlw	0
 19332   002B70  22F4               	addwfc	244,f,c
 19333   002B72  51F3               	movf	??_APP_nvValueChanged& (0+255),w,b
 19334   002B74  18F3               	xorwf	243,w,c
 19335   002B76  E113               	bnz	l20969
 19336   002B78  51F4               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19337   002B7A  18F4               	xorwf	244,w,c
 19338   002B7C  A4D8               	btfss	status,2,c
 19339   002B7E  D00F               	goto	l20969
 19340                           
 19341                           ; BSR set to: 1
 19342                           ;../universalNv.c: 251:                     setBounceState(io, 2);
 19343   002B80  0E02               	movlw	2
 19344   002B82  0100               	movlb	0	; () banked
 19345   002B84  6F91               	movwf	setBounceState@action& (0+255),b
 19346   002B86  0101               	movlb	1	; () banked
 19347   002B88  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19348   002B8A  EC1E  F04E         	call	_setBounceState
 19349                           
 19350                           ;../universalNv.c: 252:                     startBounceOutput(io, 2);
 19351   002B8E  0E02               	movlw	2
 19352   002B90  0100               	movlb	0	; () banked
 19353   002B92  6F8D               	movwf	startBounceOutput@action& (0+255),b
 19354   002B94  0101               	movlb	1	; () banked
 19355   002B96  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19356   002B98  EC08  F05A         	call	_startBounceOutput
 19357                           
 19358                           ;../universalNv.c: 253:                 } else if (index == (16 + 7*(io) + 2)) {
 19359   002B9C  0012               	return	
 19360   002B9E                     l20969:
 19361                           
 19362                           ; BSR set to: 1
 19363   002B9E  51F6               	movf	APP_nvValueChanged@index& (0+255),w,b
 19364   002BA0  6FF3               	movwf	??_APP_nvValueChanged& (0+255),b
 19365   002BA2  6BF4               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19366   002BA4  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19367   002BA6  0D07               	mullw	7
 19368   002BA8  0E12               	movlw	18
 19369   002BAA  26F3               	addwf	243,f,c
 19370   002BAC  0E00               	movlw	0
 19371   002BAE  22F4               	addwfc	244,f,c
 19372   002BB0  51F3               	movf	??_APP_nvValueChanged& (0+255),w,b
 19373   002BB2  18F3               	xorwf	243,w,c
 19374   002BB4  E113               	bnz	l20973
 19375   002BB6  51F4               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19376   002BB8  18F4               	xorwf	244,w,c
 19377   002BBA  A4D8               	btfss	status,2,c
 19378   002BBC  D00F               	goto	l20973
 19379                           
 19380                           ; BSR set to: 1
 19381                           ;../universalNv.c: 254:                     setBounceState(io, 1);
 19382   002BBE  0E01               	movlw	1
 19383   002BC0  0100               	movlb	0	; () banked
 19384   002BC2  6F91               	movwf	setBounceState@action& (0+255),b
 19385   002BC4  0101               	movlb	1	; () banked
 19386   002BC6  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19387   002BC8  EC1E  F04E         	call	_setBounceState
 19388                           
 19389                           ;../universalNv.c: 255:                     startBounceOutput(io, 1);
 19390   002BCC  0E01               	movlw	1
 19391   002BCE  0100               	movlb	0	; () banked
 19392   002BD0  6F8D               	movwf	startBounceOutput@action& (0+255),b
 19393   002BD2  0101               	movlb	1	; () banked
 19394   002BD4  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19395   002BD6  EC08  F05A         	call	_startBounceOutput
 19396                           
 19397                           ;../universalNv.c: 256:                 } else if (index == (16 + 7*(io) + 1)) {
 19398   002BDA  0012               	return	
 19399   002BDC                     l20973:
 19400                           
 19401                           ; BSR set to: 1
 19402   002BDC  51F6               	movf	APP_nvValueChanged@index& (0+255),w,b
 19403   002BDE  6FF3               	movwf	??_APP_nvValueChanged& (0+255),b
 19404   002BE0  6BF4               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19405   002BE2  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19406   002BE4  0D07               	mullw	7
 19407   002BE6  0E11               	movlw	17
 19408   002BE8  26F3               	addwf	243,f,c
 19409   002BEA  0E00               	movlw	0
 19410   002BEC  22F4               	addwfc	244,f,c
 19411   002BEE  51F3               	movf	??_APP_nvValueChanged& (0+255),w,b
 19412   002BF0  18F3               	xorwf	243,w,c
 19413   002BF2  E103               	bnz	u21941
 19414   002BF4  51F4               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19415   002BF6  18F4               	xorwf	244,w,c
 19416   002BF8  A4D8               	btfss	status,2,c
 19417   002BFA                     u21941:
 19418   002BFA  0012               	return	
 19419                           
 19420                           ; BSR set to: 1
 19421                           ;../universalNv.c: 257:                     if (((value & 0x80) == 0x80) &&
 19422   002BFC  AFF1               	btfss	APP_nvValueChanged@value& (0+255),7,b
 19423   002BFE  0012               	return	
 19424                           
 19425                           ; BSR set to: 1
 19426   002C00  BFF2               	btfsc	APP_nvValueChanged@oldValue& (0+255),7,b
 19427   002C02  0012               	return	
 19428                           
 19429                           ; BSR set to: 1
 19430                           ;../universalNv.c: 258:                             (oldValue & 0x80) == 0) {;../univers
      +                          alNv.c: 261:                         currentPos[io] = (uint8_t)(getNV((16 + 7*(io) + 3))
      +                          /2 + getNV((16 + 7*(io) + 2))/2);
 19431   002C04  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19432   002C06  0D07               	mullw	7
 19433   002C08  50F3               	movf	243,w,c
 19434   002C0A  0F12               	addlw	18
 19435   002C0C  ECD2  F05F         	call	_getNV
 19436   002C10  C08D  F097         	movff	?_getNV,___awdiv@dividend
 19437   002C14  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 19438   002C18  0E00               	movlw	0
 19439   002C1A  0100               	movlb	0	; () banked
 19440   002C1C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19441   002C1E  0E02               	movlw	2
 19442   002C20  6F99               	movwf	___awdiv@divisor& (0+255),b
 19443   002C22  EC7B  F054         	call	___awdiv	;wreg free
 19444   002C26  C097  F1F3         	movff	?___awdiv,??_APP_nvValueChanged
 19445   002C2A  C098  F1F4         	movff	?___awdiv+1,??_APP_nvValueChanged+1
 19446   002C2E  0101               	movlb	1	; () banked
 19447   002C30  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19448   002C32  0D07               	mullw	7
 19449   002C34  50F3               	movf	243,w,c
 19450   002C36  0F13               	addlw	19
 19451   002C38  ECD2  F05F         	call	_getNV
 19452   002C3C  C08D  F097         	movff	?_getNV,___awdiv@dividend
 19453   002C40  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 19454   002C44  0E00               	movlw	0
 19455   002C46  0100               	movlb	0	; () banked
 19456   002C48  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19457   002C4A  0E02               	movlw	2
 19458   002C4C  6F99               	movwf	___awdiv@divisor& (0+255),b
 19459   002C4E  EC7B  F054         	call	___awdiv	;wreg free
 19460   002C52  0100               	movlb	0	; () banked
 19461   002C54  5197               	movf	?___awdiv& (0+255),w,b
 19462   002C56  0101               	movlb	1	; () banked
 19463   002C58  25F3               	addwf	??_APP_nvValueChanged& (0+255),w,b
 19464   002C5A  6FF5               	movwf	(??_APP_nvValueChanged+2)& (0+255),b
 19465   002C5C  0E30               	movlw	low _currentPos
 19466   002C5E  25F7               	addwf	APP_nvValueChanged@io& (0+255),w,b
 19467   002C60  6ED9               	movwf	fsr2l,c
 19468   002C62  6ADA               	clrf	fsr2h,c
 19469   002C64  0E01               	movlw	high _currentPos
 19470   002C66  22DA               	addwfc	fsr2h,f,c
 19471   002C68  C1F5  FFDF         	movff	??_APP_nvValueChanged+2,indf2
 19472   002C6C  0012               	return	
 19473   002C6E                     l20981:
 19474                           
 19475                           ; BSR set to: 0
 19476                           ;../universalNv.c: 268:                 if (index == (16 + 7*(io) + 3)) {
 19477   002C6E  0101               	movlb	1	; () banked
 19478   002C70  51F6               	movf	APP_nvValueChanged@index& (0+255),w,b
 19479   002C72  6FF3               	movwf	??_APP_nvValueChanged& (0+255),b
 19480   002C74  6BF4               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19481   002C76  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19482   002C78  0D07               	mullw	7
 19483   002C7A  0E13               	movlw	19
 19484   002C7C  26F3               	addwf	243,f,c
 19485   002C7E  0E00               	movlw	0
 19486   002C80  22F4               	addwfc	244,f,c
 19487   002C82  51F3               	movf	??_APP_nvValueChanged& (0+255),w,b
 19488   002C84  18F3               	xorwf	243,w,c
 19489   002C86  E113               	bnz	l20987
 19490   002C88  51F4               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19491   002C8A  18F4               	xorwf	244,w,c
 19492   002C8C  A4D8               	btfss	status,2,c
 19493   002C8E  D00F               	goto	l20987
 19494                           
 19495                           ; BSR set to: 1
 19496                           ;../universalNv.c: 269:                     setMultiState(io, 0);
 19497   002C90  0E00               	movlw	0
 19498   002C92  0100               	movlb	0	; () banked
 19499   002C94  6F91               	movwf	setMultiState@action& (0+255),b
 19500   002C96  0101               	movlb	1	; () banked
 19501   002C98  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19502   002C9A  EC18  F048         	call	_setMultiState
 19503                           
 19504                           ;../universalNv.c: 270:                     startMultiOutput(io, 0);
 19505   002C9E  0E00               	movlw	0
 19506   002CA0  0100               	movlb	0	; () banked
 19507   002CA2  6F91               	movwf	startMultiOutput@action& (0+255),b
 19508   002CA4  0101               	movlb	1	; () banked
 19509   002CA6  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19510   002CA8  EC0B  F051         	call	_startMultiOutput
 19511                           
 19512                           ;../universalNv.c: 271:                 } else if (index == (16 + 7*(io) + 4)) {
 19513   002CAC  0012               	return	
 19514   002CAE                     l20987:
 19515                           
 19516                           ; BSR set to: 1
 19517   002CAE  51F6               	movf	APP_nvValueChanged@index& (0+255),w,b
 19518   002CB0  6FF3               	movwf	??_APP_nvValueChanged& (0+255),b
 19519   002CB2  6BF4               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19520   002CB4  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19521   002CB6  0D07               	mullw	7
 19522   002CB8  0E14               	movlw	20
 19523   002CBA  26F3               	addwf	243,f,c
 19524   002CBC  0E00               	movlw	0
 19525   002CBE  22F4               	addwfc	244,f,c
 19526   002CC0  51F3               	movf	??_APP_nvValueChanged& (0+255),w,b
 19527   002CC2  18F3               	xorwf	243,w,c
 19528   002CC4  E113               	bnz	l20993
 19529   002CC6  51F4               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19530   002CC8  18F4               	xorwf	244,w,c
 19531   002CCA  A4D8               	btfss	status,2,c
 19532   002CCC  D00F               	goto	l20993
 19533                           
 19534                           ; BSR set to: 1
 19535                           ;../universalNv.c: 272:                     setMultiState(io, 1);
 19536   002CCE  0E01               	movlw	1
 19537   002CD0  0100               	movlb	0	; () banked
 19538   002CD2  6F91               	movwf	setMultiState@action& (0+255),b
 19539   002CD4  0101               	movlb	1	; () banked
 19540   002CD6  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19541   002CD8  EC18  F048         	call	_setMultiState
 19542                           
 19543                           ;../universalNv.c: 273:                     startMultiOutput(io, 1);
 19544   002CDC  0E01               	movlw	1
 19545   002CDE  0100               	movlb	0	; () banked
 19546   002CE0  6F91               	movwf	startMultiOutput@action& (0+255),b
 19547   002CE2  0101               	movlb	1	; () banked
 19548   002CE4  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19549   002CE6  EC0B  F051         	call	_startMultiOutput
 19550                           
 19551                           ;../universalNv.c: 274:                 } else if (index == (16 + 7*(io) + 5)) {
 19552   002CEA  0012               	return	
 19553   002CEC                     l20993:
 19554                           
 19555                           ; BSR set to: 1
 19556   002CEC  51F6               	movf	APP_nvValueChanged@index& (0+255),w,b
 19557   002CEE  6FF3               	movwf	??_APP_nvValueChanged& (0+255),b
 19558   002CF0  6BF4               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19559   002CF2  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19560   002CF4  0D07               	mullw	7
 19561   002CF6  0E15               	movlw	21
 19562   002CF8  26F3               	addwf	243,f,c
 19563   002CFA  0E00               	movlw	0
 19564   002CFC  22F4               	addwfc	244,f,c
 19565   002CFE  51F3               	movf	??_APP_nvValueChanged& (0+255),w,b
 19566   002D00  18F3               	xorwf	243,w,c
 19567   002D02  E113               	bnz	l20999
 19568   002D04  51F4               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19569   002D06  18F4               	xorwf	244,w,c
 19570   002D08  A4D8               	btfss	status,2,c
 19571   002D0A  D00F               	goto	l20999
 19572                           
 19573                           ; BSR set to: 1
 19574                           ;../universalNv.c: 275:                     setMultiState(io, 2);
 19575   002D0C  0E02               	movlw	2
 19576   002D0E  0100               	movlb	0	; () banked
 19577   002D10  6F91               	movwf	setMultiState@action& (0+255),b
 19578   002D12  0101               	movlb	1	; () banked
 19579   002D14  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19580   002D16  EC18  F048         	call	_setMultiState
 19581                           
 19582                           ;../universalNv.c: 276:                     startMultiOutput(io, 2);
 19583   002D1A  0E02               	movlw	2
 19584   002D1C  0100               	movlb	0	; () banked
 19585   002D1E  6F91               	movwf	startMultiOutput@action& (0+255),b
 19586   002D20  0101               	movlb	1	; () banked
 19587   002D22  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19588   002D24  EC0B  F051         	call	_startMultiOutput
 19589                           
 19590                           ;../universalNv.c: 277:                 } else if (index == (16 + 7*(io) + 6)) {
 19591   002D28  0012               	return	
 19592   002D2A                     l20999:
 19593                           
 19594                           ; BSR set to: 1
 19595   002D2A  51F6               	movf	APP_nvValueChanged@index& (0+255),w,b
 19596   002D2C  6FF3               	movwf	??_APP_nvValueChanged& (0+255),b
 19597   002D2E  6BF4               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19598   002D30  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19599   002D32  0D07               	mullw	7
 19600   002D34  0E16               	movlw	22
 19601   002D36  26F3               	addwf	243,f,c
 19602   002D38  0E00               	movlw	0
 19603   002D3A  22F4               	addwfc	244,f,c
 19604   002D3C  51F3               	movf	??_APP_nvValueChanged& (0+255),w,b
 19605   002D3E  18F3               	xorwf	243,w,c
 19606   002D40  E113               	bnz	l21005
 19607   002D42  51F4               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19608   002D44  18F4               	xorwf	244,w,c
 19609   002D46  A4D8               	btfss	status,2,c
 19610   002D48  D00F               	goto	l21005
 19611                           
 19612                           ; BSR set to: 1
 19613                           ;../universalNv.c: 278:                     setMultiState(io, 3);
 19614   002D4A  0E03               	movlw	3
 19615   002D4C  0100               	movlb	0	; () banked
 19616   002D4E  6F91               	movwf	setMultiState@action& (0+255),b
 19617   002D50  0101               	movlb	1	; () banked
 19618   002D52  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19619   002D54  EC18  F048         	call	_setMultiState
 19620                           
 19621                           ;../universalNv.c: 279:                     startMultiOutput(io, 3);
 19622   002D58  0E03               	movlw	3
 19623   002D5A  0100               	movlb	0	; () banked
 19624   002D5C  6F91               	movwf	startMultiOutput@action& (0+255),b
 19625   002D5E  0101               	movlb	1	; () banked
 19626   002D60  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19627   002D62  EC0B  F051         	call	_startMultiOutput
 19628                           
 19629                           ;../universalNv.c: 280:                 } else if (index == (16 + 7*(io) + 1)) {
 19630   002D66  0012               	return	
 19631   002D68                     l21005:
 19632                           
 19633                           ; BSR set to: 1
 19634   002D68  51F6               	movf	APP_nvValueChanged@index& (0+255),w,b
 19635   002D6A  6FF3               	movwf	??_APP_nvValueChanged& (0+255),b
 19636   002D6C  6BF4               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19637   002D6E  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19638   002D70  0D07               	mullw	7
 19639   002D72  0E11               	movlw	17
 19640   002D74  26F3               	addwf	243,f,c
 19641   002D76  0E00               	movlw	0
 19642   002D78  22F4               	addwfc	244,f,c
 19643   002D7A  51F3               	movf	??_APP_nvValueChanged& (0+255),w,b
 19644   002D7C  18F3               	xorwf	243,w,c
 19645   002D7E  E154               	bnz	l814
 19646   002D80  51F4               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19647   002D82  18F4               	xorwf	244,w,c
 19648   002D84  A4D8               	btfss	status,2,c
 19649   002D86  0012               	return	
 19650                           
 19651                           ; BSR set to: 1
 19652                           ;../universalNv.c: 281:                     if (((value & 0x80) == 0x80) &&
 19653   002D88  AFF1               	btfss	APP_nvValueChanged@value& (0+255),7,b
 19654   002D8A  0012               	return	
 19655                           
 19656                           ; BSR set to: 1
 19657   002D8C  BFF2               	btfsc	APP_nvValueChanged@oldValue& (0+255),7,b
 19658   002D8E  0012               	return	
 19659                           
 19660                           ; BSR set to: 1
 19661                           ;../universalNv.c: 282:                             ((oldValue & 0x80) == 0)) {;../unive
      +                          rsalNv.c: 285:                         currentPos[io] = (uint8_t)(getNV((16 + 7*(io) + 3
      +                          ))/2 + getNV((16 + 7*(io) + 2))/2);
 19662   002D90  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19663   002D92  0D07               	mullw	7
 19664   002D94  50F3               	movf	243,w,c
 19665   002D96  0F12               	addlw	18
 19666   002D98  ECD2  F05F         	call	_getNV
 19667   002D9C  C08D  F097         	movff	?_getNV,___awdiv@dividend
 19668   002DA0  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 19669   002DA4  0E00               	movlw	0
 19670   002DA6  0100               	movlb	0	; () banked
 19671   002DA8  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19672   002DAA  0E02               	movlw	2
 19673   002DAC  6F99               	movwf	___awdiv@divisor& (0+255),b
 19674   002DAE  EC7B  F054         	call	___awdiv	;wreg free
 19675   002DB2  C097  F1F3         	movff	?___awdiv,??_APP_nvValueChanged
 19676   002DB6  C098  F1F4         	movff	?___awdiv+1,??_APP_nvValueChanged+1
 19677   002DBA  0101               	movlb	1	; () banked
 19678   002DBC  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19679   002DBE  0D07               	mullw	7
 19680   002DC0  50F3               	movf	243,w,c
 19681   002DC2  0F13               	addlw	19
 19682   002DC4  ECD2  F05F         	call	_getNV
 19683   002DC8  C08D  F097         	movff	?_getNV,___awdiv@dividend
 19684   002DCC  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 19685   002DD0  0E00               	movlw	0
 19686   002DD2  0100               	movlb	0	; () banked
 19687   002DD4  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19688   002DD6  0E02               	movlw	2
 19689   002DD8  6F99               	movwf	___awdiv@divisor& (0+255),b
 19690   002DDA  EC7B  F054         	call	___awdiv	;wreg free
 19691   002DDE  0100               	movlb	0	; () banked
 19692   002DE0  5197               	movf	?___awdiv& (0+255),w,b
 19693   002DE2  0101               	movlb	1	; () banked
 19694   002DE4  25F3               	addwf	??_APP_nvValueChanged& (0+255),w,b
 19695   002DE6  6FF5               	movwf	(??_APP_nvValueChanged+2)& (0+255),b
 19696   002DE8  0E30               	movlw	low _currentPos
 19697   002DEA  25F7               	addwf	APP_nvValueChanged@io& (0+255),w,b
 19698   002DEC  6ED9               	movwf	fsr2l,c
 19699   002DEE  6ADA               	clrf	fsr2h,c
 19700   002DF0  0E01               	movlw	high _currentPos
 19701   002DF2  22DA               	addwfc	fsr2h,f,c
 19702   002DF4  C1F5  FFDF         	movff	??_APP_nvValueChanged+2,indf2
 19703   002DF8  0012               	return	
 19704   002DFA                     l21015:
 19705   002DFA  0101               	movlb	1	; () banked
 19706   002DFC  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19707   002DFE  0D07               	mullw	7
 19708   002E00  50F3               	movf	243,w,c
 19709   002E02  0F10               	addlw	16
 19710   002E04  ECD2  F05F         	call	_getNV
 19711                           
 19712                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19713                           ; Switch size 1, requested type "simple"
 19714                           ; Number of cases is 1, Range of values is 0 to 0
 19715                           ; switch strategies available:
 19716                           ; Name         Instructions Cycles
 19717                           ; simple_byte            4     3 (average)
 19718                           ;	Chosen strategy is simple_byte
 19719   002E08  0100               	movlb	0	; () banked
 19720   002E0A  518E               	movf	(?_getNV+1)& (0+255),w,b
 19721   002E0C  0A00               	xorlw	0	; case 0
 19722   002E0E  A4D8               	btfss	status,2,c
 19723   002E10  0012               	return	
 19724                           
 19725                           ; BSR set to: 0
 19726                           ; Switch size 1, requested type "simple"
 19727                           ; Number of cases is 3, Range of values is 2 to 4
 19728                           ; switch strategies available:
 19729                           ; Name         Instructions Cycles
 19730                           ; simple_byte           10     6 (average)
 19731                           ;	Chosen strategy is simple_byte
 19732   002E12  518D               	movf	?_getNV& (0+255),w,b
 19733   002E14  0A02               	xorlw	2	; case 2
 19734   002E16  B4D8               	btfsc	status,2,c
 19735   002E18  D61D               	goto	l20945
 19736   002E1A  0A01               	xorlw	1	; case 3
 19737   002E1C  B4D8               	btfsc	status,2,c
 19738   002E1E  D69F               	goto	l20965
 19739   002E20  0A07               	xorlw	7	; case 4
 19740   002E22  A4D8               	btfss	status,2,c
 19741   002E24  0012               	return	
 19742   002E26  D723               	goto	l20981
 19743   002E28                     l814:
 19744   002E28  0012               	return		;funcret
 19745   002E2A                     __end_of_APP_nvValueChanged:
 19746                           	callstack 0
 19747                           
 19748 ;; *************** function _setTimedResponseDelay *****************
 19749 ;; Defined at:
 19750 ;;		line 901 in file "../../VLCBlib_PIC/vlcb.c"
 19751 ;; Parameters:    Size  Location     Type
 19752 ;;  delay           1    wreg     unsigned char 
 19753 ;; Auto vars:     Size  Location     Type
 19754 ;;  delay           1   45[BANK0 ] unsigned char 
 19755 ;; Return value:  Size  Location     Type
 19756 ;;                  1    wreg      void 
 19757 ;; Registers used:
 19758 ;;		wreg
 19759 ;; Tracked objects:
 19760 ;;		On entry : 0/0
 19761 ;;		On exit  : 0/0
 19762 ;;		Unchanged: 0/0
 19763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19765 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19767 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19768 ;;Total ram usage:        1 bytes
 19769 ;; Hardware stack levels used: 1
 19770 ;; Hardware stack levels required when called: 12
 19771 ;; This function calls:
 19772 ;;		Nothing
 19773 ;; This function is called by:
 19774 ;;		_setup
 19775 ;;		_APP_nvValueChanged
 19776 ;; This function uses a non-reentrant model
 19777 ;;
 19778                           
 19779                           	psect	text54
 19780   00C8EE                     __ptext54:
 19781                           	callstack 0
 19782   00C8EE                     _setTimedResponseDelay:
 19783                           	callstack 17
 19784                           
 19785                           ;incstack = 0
 19786                           ;setTimedResponseDelay@delay stored from wreg
 19787   00C8EE  0100               	movlb	0	; () banked
 19788   00C8F0  6F8D               	movwf	setTimedResponseDelay@delay& (0+255),b
 19789                           
 19790                           ;../../VLCBlib_PIC/vlcb.c: 902:     timedResponseDelay = delay;
 19791   00C8F2  C08D  F164         	movff	setTimedResponseDelay@delay,_timedResponseDelay
 19792   00C8F6  0012               	return		;funcret
 19793   00C8F8                     __end_of_setTimedResponseDelay:
 19794                           	callstack 0
 19795                           
 19796 ;; *************** function _setServoPosition *****************
 19797 ;; Defined at:
 19798 ;;		line 702 in file "../servo.c"
 19799 ;; Parameters:    Size  Location     Type
 19800 ;;  io              1    wreg     unsigned char 
 19801 ;;  pos             1   63[BANK0 ] unsigned char 
 19802 ;; Auto vars:     Size  Location     Type
 19803 ;;  io              1   64[BANK0 ] unsigned char 
 19804 ;; Return value:  Size  Location     Type
 19805 ;;                  1    wreg      void 
 19806 ;; Registers used:
 19807 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19808 ;; Tracked objects:
 19809 ;;		On entry : 0/0
 19810 ;;		On exit  : 0/0
 19811 ;;		Unchanged: 0/0
 19812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19813 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19814 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19816 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19817 ;;Total ram usage:        2 bytes
 19818 ;; Hardware stack levels used: 1
 19819 ;; Hardware stack levels required when called: 12
 19820 ;; This function calls:
 19821 ;;		Nothing
 19822 ;; This function is called by:
 19823 ;;		_APP_nvValueChanged
 19824 ;;		_setOutputPosition
 19825 ;; This function uses a non-reentrant model
 19826 ;;
 19827                           
 19828                           	psect	text55
 19829   00C608                     __ptext55:
 19830                           	callstack 0
 19831   00C608                     _setServoPosition:
 19832                           	callstack 15
 19833                           
 19834                           ;incstack = 0
 19835                           ;setServoPosition@io stored from wreg
 19836   00C608  0100               	movlb	0	; () banked
 19837   00C60A  6FA0               	movwf	setServoPosition@io& (0+255),b
 19838                           
 19839                           ;../servo.c: 703:     targetPos[io] = pos;
 19840   00C60C  0100               	movlb	0	; () banked
 19841   00C60E  51A0               	movf	setServoPosition@io& (0+255),w,b
 19842   00C610  0F01               	addlw	low _targetPos
 19843   00C612  6ED9               	movwf	fsr2l,c
 19844   00C614  6ADA               	clrf	fsr2h,c
 19845   00C616  C09F  FFDF         	movff	setServoPosition@pos,indf2
 19846                           
 19847                           ;../servo.c: 704:     currentPos[io] = pos;
 19848   00C61A  0E30               	movlw	low _currentPos
 19849   00C61C  25A0               	addwf	setServoPosition@io& (0+255),w,b
 19850   00C61E  6ED9               	movwf	fsr2l,c
 19851   00C620  6ADA               	clrf	fsr2h,c
 19852   00C622  0E01               	movlw	high _currentPos
 19853   00C624  22DA               	addwfc	fsr2h,f,c
 19854   00C626  C09F  FFDF         	movff	setServoPosition@pos,indf2
 19855                           
 19856                           ; BSR set to: 0
 19857   00C62A  0012               	return		;funcret
 19858   00C62C                     __end_of_setServoPosition:
 19859                           	callstack 0
 19860                           
 19861 ;; *************** function _APP_nvValidate *****************
 19862 ;; Defined at:
 19863 ;;		line 299 in file "../universalNv.c"
 19864 ;; Parameters:    Size  Location     Type
 19865 ;;  index           1    wreg     unsigned char 
 19866 ;;  value           1   63[BANK0 ] unsigned char 
 19867 ;; Auto vars:     Size  Location     Type
 19868 ;;  index           1   64[BANK0 ] unsigned char 
 19869 ;;  io              1    0        unsigned char 
 19870 ;; Return value:  Size  Location     Type
 19871 ;;                  1    wreg      enum E12929
 19872 ;; Registers used:
 19873 ;;		wreg, status,2, status,0, cstack
 19874 ;; Tracked objects:
 19875 ;;		On entry : 0/0
 19876 ;;		On exit  : 0/0
 19877 ;;		Unchanged: 0/0
 19878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19879 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19880 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19882 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19883 ;;Total ram usage:        2 bytes
 19884 ;; Hardware stack levels used: 1
 19885 ;; Hardware stack levels required when called: 13
 19886 ;; This function calls:
 19887 ;;		___awdiv
 19888 ;;		___awmod
 19889 ;; This function is called by:
 19890 ;;		_setNV
 19891 ;; This function uses a non-reentrant model
 19892 ;;
 19893                           
 19894                           	psect	text56
 19895   00AFCA                     __ptext56:
 19896                           	callstack 0
 19897   00AFCA                     _APP_nvValidate:
 19898                           	callstack 14
 19899                           
 19900                           ; BSR set to: 0
 19901                           ;incstack = 0
 19902                           ;APP_nvValidate@index stored from wreg
 19903   00AFCA  0100               	movlb	0	; () banked
 19904   00AFCC  6FA0               	movwf	APP_nvValidate@index& (0+255),b
 19905                           
 19906                           ;../universalNv.c: 300:     uint8_t io;;../universalNv.c: 301:     if ((index >= 16) && 
      +                          (((index-16) % 7) == 0)) {
 19907   00AFCE  0E0F               	movlw	15
 19908   00AFD0  0100               	movlb	0	; () banked
 19909   00AFD2  65A0               	cpfsgt	APP_nvValidate@index& (0+255),b
 19910   00AFD4  D031               	goto	l820
 19911                           
 19912                           ; BSR set to: 0
 19913   00AFD6  0EF0               	movlw	240
 19914   00AFD8  25A0               	addwf	APP_nvValidate@index& (0+255),w,b
 19915   00AFDA  6F8D               	movwf	___awmod@dividend& (0+255),b
 19916   00AFDC  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 19917   00AFDE  0EFF               	movlw	255
 19918   00AFE0  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 19919   00AFE2  0E00               	movlw	0
 19920   00AFE4  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 19921   00AFE6  0E07               	movlw	7
 19922   00AFE8  6F8F               	movwf	___awmod@divisor& (0+255),b
 19923   00AFEA  EC90  F058         	call	___awmod	;wreg free
 19924   00AFEE  0100               	movlb	0	; () banked
 19925   00AFF0  518D               	movf	?___awmod& (0+255),w,b
 19926   00AFF2  118E               	iorwf	(?___awmod+1)& (0+255),w,b
 19927   00AFF4  A4D8               	btfss	status,2,c
 19928   00AFF6  D020               	goto	l820
 19929                           
 19930                           ; BSR set to: 0
 19931   00AFF8  0EF0               	movlw	240
 19932   00AFFA  25A0               	addwf	APP_nvValidate@index& (0+255),w,b
 19933   00AFFC  6F97               	movwf	___awdiv@dividend& (0+255),b
 19934   00AFFE  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 19935   00B000  0EFF               	movlw	255
 19936   00B002  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 19937   00B004  0E00               	movlw	0
 19938   00B006  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19939   00B008  0E07               	movlw	7
 19940   00B00A  6F99               	movwf	___awdiv@divisor& (0+255),b
 19941   00B00C  EC7B  F054         	call	___awdiv	;wreg free
 19942                           
 19943                           ;../universalNv.c: 308:         switch (value) {
 19944   00B010  D002               	goto	l21035
 19945   00B012                     l21029:
 19946                           
 19947                           ; BSR set to: 0
 19948                           ;../universalNv.c: 331:                 return INVALID;
 19949   00B012  0E00               	movlw	0
 19950   00B014  0012               	return	
 19951   00B016                     l21035:
 19952   00B016  0100               	movlb	0	; () banked
 19953   00B018  519F               	movf	APP_nvValidate@value& (0+255),w,b
 19954                           
 19955                           ; Switch size 1, requested type "simple"
 19956                           ; Number of cases is 5, Range of values is 0 to 4
 19957                           ; switch strategies available:
 19958                           ; Name         Instructions Cycles
 19959                           ; simple_byte           16     9 (average)
 19960                           ;	Chosen strategy is simple_byte
 19961   00B01A  0A00               	xorlw	0	; case 0
 19962   00B01C  B4D8               	btfsc	status,2,c
 19963   00B01E  D00C               	goto	l820
 19964   00B020  0A01               	xorlw	1	; case 1
 19965   00B022  B4D8               	btfsc	status,2,c
 19966   00B024  D009               	goto	l820
 19967   00B026  0A03               	xorlw	3	; case 2
 19968   00B028  B4D8               	btfsc	status,2,c
 19969   00B02A  D006               	goto	l820
 19970   00B02C  0A01               	xorlw	1	; case 3
 19971   00B02E  B4D8               	btfsc	status,2,c
 19972   00B030  D003               	goto	l820
 19973   00B032  0A07               	xorlw	7	; case 4
 19974   00B034  A4D8               	btfss	status,2,c
 19975   00B036  D7ED               	goto	l21029
 19976   00B038                     l820:
 19977                           
 19978                           ; BSR set to: 0
 19979                           ;../universalNv.c: 334:     return VALID;
 19980                           
 19981                           ; BSR set to: 0
 19982   00B038  0E01               	movlw	1
 19983                           
 19984                           ; BSR set to: 0
 19985   00B03A  0012               	return		;funcret
 19986   00B03C                     __end_of_APP_nvValidate:
 19987                           	callstack 0
 19988                           
 19989 ;; *************** function _producerEsdData *****************
 19990 ;; Defined at:
 19991 ;;		line 194 in file "../../VLCBlib_PIC/event_producer_happening.c"
 19992 ;; Parameters:    Size  Location     Type
 19993 ;;  index           1    wreg     unsigned char 
 19994 ;; Auto vars:     Size  Location     Type
 19995 ;;  index           1   45[BANK0 ] unsigned char 
 19996 ;; Return value:  Size  Location     Type
 19997 ;;                  1    wreg      unsigned char 
 19998 ;; Registers used:
 19999 ;;		wreg, status,2, status,0
 20000 ;; Tracked objects:
 20001 ;;		On entry : 0/0
 20002 ;;		On exit  : 0/0
 20003 ;;		Unchanged: 0/0
 20004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20006 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20008 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20009 ;;Total ram usage:        1 bytes
 20010 ;; Hardware stack levels used: 1
 20011 ;; Hardware stack levels required when called: 12
 20012 ;; This function calls:
 20013 ;;		Nothing
 20014 ;; This function is called by:
 20015 ;;		_mnsProcessMessage
 20016 ;; This function uses a non-reentrant model
 20017 ;;
 20018                           
 20019                           	psect	text57
 20020   00C6E0                     __ptext57:
 20021                           	callstack 0
 20022   00C6E0                     _producerEsdData:
 20023                           	callstack 16
 20024                           
 20025                           ; BSR set to: 0
 20026                           ;incstack = 0
 20027                           ;producerEsdData@index stored from wreg
 20028   00C6E0  0100               	movlb	0	; () banked
 20029   00C6E2  6F8D               	movwf	producerEsdData@index& (0+255),b
 20030                           
 20031                           ;../../VLCBlib_PIC/event_producer_happening.c: 195:     switch (index){
 20032   00C6E4  D004               	goto	l23067
 20033   00C6E6                     l23053:
 20034                           
 20035                           ; BSR set to: 0
 20036                           ;../../VLCBlib_PIC/event_producer_happening.c: 197:             return PRODUCER_EV_HAPPE
      +                          NING;
 20037   00C6E6  0E01               	movlw	1
 20038   00C6E8  0012               	return	
 20039   00C6EA                     l23061:
 20040                           
 20041                           ; BSR set to: 0
 20042                           ;../../VLCBlib_PIC/event_producer_happening.c: 201:             return 0;
 20043   00C6EA  0E00               	movlw	0
 20044   00C6EC  0012               	return	
 20045   00C6EE                     l23067:
 20046   00C6EE  0100               	movlb	0	; () banked
 20047   00C6F0  518D               	movf	producerEsdData@index& (0+255),w,b
 20048                           
 20049                           ; Switch size 1, requested type "simple"
 20050                           ; Number of cases is 2, Range of values is 0 to 1
 20051                           ; switch strategies available:
 20052                           ; Name         Instructions Cycles
 20053                           ; simple_byte            7     4 (average)
 20054                           ;	Chosen strategy is simple_byte
 20055   00C6F2  0A00               	xorlw	0	; case 0
 20056   00C6F4  B4D8               	btfsc	status,2,c
 20057   00C6F6  D7F7               	goto	l23053
 20058   00C6F8  0A01               	xorlw	1	; case 1
 20059   00C6FA  B4D8               	btfsc	status,2,c
 20060   00C6FC  D7F4               	goto	l23053
 20061   00C6FE  D7F5               	goto	l23061
 20062   00C700                     __end_of_producerEsdData:
 20063                           	callstack 0
 20064                           
 20065 ;; *************** function _canEsdData *****************
 20066 ;; Defined at:
 20067 ;;		line 422 in file "../../VLCBlib_PIC/can18_ecan.c"
 20068 ;; Parameters:    Size  Location     Type
 20069 ;;  id              1    wreg     unsigned char 
 20070 ;; Auto vars:     Size  Location     Type
 20071 ;;  id              1   45[BANK0 ] unsigned char 
 20072 ;; Return value:  Size  Location     Type
 20073 ;;                  1    wreg      unsigned char 
 20074 ;; Registers used:
 20075 ;;		wreg, status,2, status,0
 20076 ;; Tracked objects:
 20077 ;;		On entry : 0/0
 20078 ;;		On exit  : 0/0
 20079 ;;		Unchanged: 0/0
 20080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20082 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20084 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20085 ;;Total ram usage:        1 bytes
 20086 ;; Hardware stack levels used: 1
 20087 ;; Hardware stack levels required when called: 12
 20088 ;; This function calls:
 20089 ;;		Nothing
 20090 ;; This function is called by:
 20091 ;;		_mnsProcessMessage
 20092 ;; This function uses a non-reentrant model
 20093 ;;
 20094                           
 20095                           	psect	text58
 20096   00C7B6                     __ptext58:
 20097                           	callstack 0
 20098   00C7B6                     _canEsdData:
 20099                           	callstack 16
 20100                           
 20101                           ; BSR set to: 0
 20102                           ;incstack = 0
 20103                           ;canEsdData@id stored from wreg
 20104   00C7B6  0100               	movlb	0	; () banked
 20105   00C7B8  6F8D               	movwf	canEsdData@id& (0+255),b
 20106                           
 20107                           ;../../VLCBlib_PIC/can18_ecan.c: 423:     switch(id) {
 20108   00C7BA  D004               	goto	l22703
 20109   00C7BC                     l22693:
 20110                           
 20111                           ; BSR set to: 0
 20112                           ;../../VLCBlib_PIC/can18_ecan.c: 425:             return CAN_HW_PIC_ECAN;
 20113   00C7BC  0E01               	movlw	1
 20114   00C7BE  0012               	return	
 20115   00C7C0                     l22697:
 20116                           
 20117                           ; BSR set to: 0
 20118                           ;../../VLCBlib_PIC/can18_ecan.c: 427:             return 0;
 20119   00C7C0  0E00               	movlw	0
 20120   00C7C2  0012               	return	
 20121   00C7C4                     l22703:
 20122   00C7C4  0100               	movlb	0	; () banked
 20123   00C7C6  518D               	movf	canEsdData@id& (0+255),w,b
 20124                           
 20125                           ; Switch size 1, requested type "simple"
 20126                           ; Number of cases is 1, Range of values is 1 to 1
 20127                           ; switch strategies available:
 20128                           ; Name         Instructions Cycles
 20129                           ; simple_byte            4     3 (average)
 20130                           ;	Chosen strategy is simple_byte
 20131   00C7C8  0A01               	xorlw	1	; case 1
 20132   00C7CA  B4D8               	btfsc	status,2,c
 20133   00C7CC  D7F7               	goto	l22693
 20134   00C7CE  D7F8               	goto	l22697
 20135   00C7D0                     __end_of_canEsdData:
 20136                           	callstack 0
 20137                           
 20138 ;; *************** function _nvGetESDdata *****************
 20139 ;; Defined at:
 20140 ;;		line 355 in file "../../VLCBlib_PIC/nv.c"
 20141 ;; Parameters:    Size  Location     Type
 20142 ;;  id              1    wreg     unsigned char 
 20143 ;; Auto vars:     Size  Location     Type
 20144 ;;  id              1   45[BANK0 ] unsigned char 
 20145 ;; Return value:  Size  Location     Type
 20146 ;;                  1    wreg      unsigned char 
 20147 ;; Registers used:
 20148 ;;		wreg, status,2, status,0
 20149 ;; Tracked objects:
 20150 ;;		On entry : 0/0
 20151 ;;		On exit  : 0/0
 20152 ;;		Unchanged: 0/0
 20153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20155 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20157 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20158 ;;Total ram usage:        1 bytes
 20159 ;; Hardware stack levels used: 1
 20160 ;; Hardware stack levels required when called: 12
 20161 ;; This function calls:
 20162 ;;		Nothing
 20163 ;; This function is called by:
 20164 ;;		_mnsProcessMessage
 20165 ;; This function uses a non-reentrant model
 20166 ;;
 20167                           
 20168                           	psect	text59
 20169   00C7D0                     __ptext59:
 20170                           	callstack 0
 20171   00C7D0                     _nvGetESDdata:
 20172                           	callstack 16
 20173                           
 20174                           ; BSR set to: 0
 20175                           ;incstack = 0
 20176                           ;nvGetESDdata@id stored from wreg
 20177   00C7D0  0100               	movlb	0	; () banked
 20178   00C7D2  6F8D               	movwf	nvGetESDdata@id& (0+255),b
 20179                           
 20180                           ;../../VLCBlib_PIC/nv.c: 356:     switch (id) {
 20181   00C7D4  D004               	goto	l22457
 20182   00C7D6                     l22447:
 20183                           
 20184                           ; BSR set to: 0
 20185   00C7D6  0E7F               	movlw	127
 20186   00C7D8  0012               	return	
 20187   00C7DA                     l22451:
 20188                           
 20189                           ; BSR set to: 0
 20190   00C7DA  0E00               	movlw	0
 20191   00C7DC  0012               	return	
 20192   00C7DE                     l22457:
 20193   00C7DE  0100               	movlb	0	; () banked
 20194   00C7E0  518D               	movf	nvGetESDdata@id& (0+255),w,b
 20195                           
 20196                           ; Switch size 1, requested type "simple"
 20197                           ; Number of cases is 1, Range of values is 1 to 1
 20198                           ; switch strategies available:
 20199                           ; Name         Instructions Cycles
 20200                           ; simple_byte            4     3 (average)
 20201                           ;	Chosen strategy is simple_byte
 20202   00C7E2  0A01               	xorlw	1	; case 1
 20203   00C7E4  B4D8               	btfsc	status,2,c
 20204   00C7E6  D7F7               	goto	l22447
 20205   00C7E8  D7F8               	goto	l22451
 20206   00C7EA                     __end_of_nvGetESDdata:
 20207                           	callstack 0
 20208                           
 20209 ;; *************** function _bootEsdData *****************
 20210 ;; Defined at:
 20211 ;;		line 257 in file "../../VLCBlib_PIC/boot.c"
 20212 ;; Parameters:    Size  Location     Type
 20213 ;;  id              1    wreg     unsigned char 
 20214 ;; Auto vars:     Size  Location     Type
 20215 ;;  id              1   45[BANK0 ] unsigned char 
 20216 ;; Return value:  Size  Location     Type
 20217 ;;                  1    wreg      unsigned char 
 20218 ;; Registers used:
 20219 ;;		wreg, status,2, status,0
 20220 ;; Tracked objects:
 20221 ;;		On entry : 0/0
 20222 ;;		On exit  : 0/0
 20223 ;;		Unchanged: 0/0
 20224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20226 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20228 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20229 ;;Total ram usage:        1 bytes
 20230 ;; Hardware stack levels used: 1
 20231 ;; Hardware stack levels required when called: 12
 20232 ;; This function calls:
 20233 ;;		Nothing
 20234 ;; This function is called by:
 20235 ;;		_mnsProcessMessage
 20236 ;; This function uses a non-reentrant model
 20237 ;;
 20238                           
 20239                           	psect	text60
 20240   00C62C                     __ptext60:
 20241                           	callstack 0
 20242   00C62C                     _bootEsdData:
 20243                           	callstack 16
 20244                           
 20245                           ; BSR set to: 0
 20246                           ;incstack = 0
 20247                           ;bootEsdData@id stored from wreg
 20248   00C62C  0100               	movlb	0	; () banked
 20249   00C62E  6F8D               	movwf	bootEsdData@id& (0+255),b
 20250                           
 20251                           ;../../VLCBlib_PIC/boot.c: 258:     switch (id) {
 20252   00C630  D006               	goto	l22317
 20253   00C632                     l1285:
 20254                           
 20255                           ; BSR set to: 0
 20256                           ;../../VLCBlib_PIC/boot.c: 261:             return bootloaderType;
 20257   00C632  51C8               	movf	_bootloaderType& (0+255),w,b
 20258   00C634  0012               	return	
 20259   00C636                     l1287:
 20260                           
 20261                           ; BSR set to: 0
 20262                           ;../../VLCBlib_PIC/boot.c: 264:             return bootloaderVersion;
 20263   00C636  51C7               	movf	_bootloaderVersion& (0+255),w,b
 20264   00C638  0012               	return	
 20265   00C63A                     l22311:
 20266                           
 20267                           ; BSR set to: 0
 20268                           ;../../VLCBlib_PIC/boot.c: 266:             return 0;
 20269   00C63A  0E00               	movlw	0
 20270   00C63C  0012               	return	
 20271   00C63E                     l22317:
 20272   00C63E  0100               	movlb	0	; () banked
 20273   00C640  518D               	movf	bootEsdData@id& (0+255),w,b
 20274                           
 20275                           ; Switch size 1, requested type "simple"
 20276                           ; Number of cases is 2, Range of values is 1 to 2
 20277                           ; switch strategies available:
 20278                           ; Name         Instructions Cycles
 20279                           ; simple_byte            7     4 (average)
 20280                           ;	Chosen strategy is simple_byte
 20281   00C642  0A01               	xorlw	1	; case 1
 20282   00C644  B4D8               	btfsc	status,2,c
 20283   00C646  D7F5               	goto	l1285
 20284   00C648  0A03               	xorlw	3	; case 2
 20285   00C64A  B4D8               	btfsc	status,2,c
 20286   00C64C  D7F4               	goto	l1287
 20287   00C64E  D7F5               	goto	l22311
 20288   00C650                     __end_of_bootEsdData:
 20289                           	callstack 0
 20290                           
 20291 ;; *************** function _consumer2QEsdData *****************
 20292 ;; Defined at:
 20293 ;;		line 364 in file "../event_consumerDualActionQueue.c"
 20294 ;; Parameters:    Size  Location     Type
 20295 ;;  index           1    wreg     unsigned char 
 20296 ;; Auto vars:     Size  Location     Type
 20297 ;;  index           1   45[BANK0 ] unsigned char 
 20298 ;; Return value:  Size  Location     Type
 20299 ;;                  1    wreg      unsigned char 
 20300 ;; Registers used:
 20301 ;;		wreg, status,2, status,0
 20302 ;; Tracked objects:
 20303 ;;		On entry : 0/0
 20304 ;;		On exit  : 0/0
 20305 ;;		Unchanged: 0/0
 20306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20308 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20310 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20311 ;;Total ram usage:        1 bytes
 20312 ;; Hardware stack levels used: 1
 20313 ;; Hardware stack levels required when called: 12
 20314 ;; This function calls:
 20315 ;;		Nothing
 20316 ;; This function is called by:
 20317 ;;		_mnsProcessMessage
 20318 ;; This function uses a non-reentrant model
 20319 ;;
 20320                           
 20321                           	psect	text61
 20322   00C700                     __ptext61:
 20323                           	callstack 0
 20324   00C700                     _consumer2QEsdData:
 20325                           	callstack 16
 20326                           
 20327                           ; BSR set to: 0
 20328                           ;incstack = 0
 20329                           ;consumer2QEsdData@index stored from wreg
 20330   00C700  0100               	movlb	0	; () banked
 20331   00C702  6F8D               	movwf	consumer2QEsdData@index& (0+255),b
 20332                           
 20333                           ;../event_consumerDualActionQueue.c: 365:     switch (index){
 20334   00C704  D004               	goto	l21743
 20335   00C706                     l21729:
 20336                           
 20337                           ; BSR set to: 0
 20338                           ;../event_consumerDualActionQueue.c: 367:             return CONSUMER_EV_ACTIONS;
 20339   00C706  0E01               	movlw	1
 20340   00C708  0012               	return	
 20341   00C70A                     l21737:
 20342                           
 20343                           ; BSR set to: 0
 20344                           ;../event_consumerDualActionQueue.c: 371:             return 0;
 20345   00C70A  0E00               	movlw	0
 20346   00C70C  0012               	return	
 20347   00C70E                     l21743:
 20348   00C70E  0100               	movlb	0	; () banked
 20349   00C710  518D               	movf	consumer2QEsdData@index& (0+255),w,b
 20350                           
 20351                           ; Switch size 1, requested type "simple"
 20352                           ; Number of cases is 2, Range of values is 0 to 1
 20353                           ; switch strategies available:
 20354                           ; Name         Instructions Cycles
 20355                           ; simple_byte            7     4 (average)
 20356                           ;	Chosen strategy is simple_byte
 20357   00C712  0A00               	xorlw	0	; case 0
 20358   00C714  B4D8               	btfsc	status,2,c
 20359   00C716  D7F7               	goto	l21729
 20360   00C718  0A01               	xorlw	1	; case 1
 20361   00C71A  B4D8               	btfsc	status,2,c
 20362   00C71C  D7F4               	goto	l21729
 20363   00C71E  D7F5               	goto	l21737
 20364   00C720                     __end_of_consumer2QEsdData:
 20365                           	callstack 0
 20366                           
 20367 ;; *************** function _teachGetESDdata *****************
 20368 ;; Defined at:
 20369 ;;		line 530 in file "../../VLCBlib_PIC/event_teach_large.c"
 20370 ;; Parameters:    Size  Location     Type
 20371 ;;  id              1    wreg     unsigned char 
 20372 ;; Auto vars:     Size  Location     Type
 20373 ;;  id              1   45[BANK0 ] unsigned char 
 20374 ;; Return value:  Size  Location     Type
 20375 ;;                  1    wreg      unsigned char 
 20376 ;; Registers used:
 20377 ;;		wreg, status,2, status,0
 20378 ;; Tracked objects:
 20379 ;;		On entry : 0/0
 20380 ;;		On exit  : 0/0
 20381 ;;		Unchanged: 0/0
 20382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20384 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20386 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20387 ;;Total ram usage:        1 bytes
 20388 ;; Hardware stack levels used: 1
 20389 ;; Hardware stack levels required when called: 12
 20390 ;; This function calls:
 20391 ;;		Nothing
 20392 ;; This function is called by:
 20393 ;;		_mnsProcessMessage
 20394 ;; This function uses a non-reentrant model
 20395 ;;
 20396                           
 20397                           	psect	text62
 20398   00C650                     __ptext62:
 20399                           	callstack 0
 20400   00C650                     _teachGetESDdata:
 20401                           	callstack 16
 20402                           
 20403                           ; BSR set to: 0
 20404                           ;incstack = 0
 20405                           ;teachGetESDdata@id stored from wreg
 20406   00C650  0100               	movlb	0	; () banked
 20407   00C652  6F8D               	movwf	teachGetESDdata@id& (0+255),b
 20408                           
 20409                           ;../../VLCBlib_PIC/event_teach_large.c: 531:     switch (id) {
 20410   00C654  D006               	goto	l23011
 20411   00C656                     l22997:
 20412                           
 20413                           ; BSR set to: 0
 20414   00C656  0EFF               	movlw	255
 20415   00C658  0012               	return	
 20416   00C65A                     l23001:
 20417                           
 20418                           ; BSR set to: 0
 20419   00C65A  0E14               	movlw	20
 20420   00C65C  0012               	return	
 20421   00C65E                     l23005:
 20422                           
 20423                           ; BSR set to: 0
 20424   00C65E  0E00               	movlw	0
 20425   00C660  0012               	return	
 20426   00C662                     l23011:
 20427   00C662  0100               	movlb	0	; () banked
 20428   00C664  518D               	movf	teachGetESDdata@id& (0+255),w,b
 20429                           
 20430                           ; Switch size 1, requested type "simple"
 20431                           ; Number of cases is 2, Range of values is 1 to 2
 20432                           ; switch strategies available:
 20433                           ; Name         Instructions Cycles
 20434                           ; simple_byte            7     4 (average)
 20435                           ;	Chosen strategy is simple_byte
 20436   00C666  0A01               	xorlw	1	; case 1
 20437   00C668  B4D8               	btfsc	status,2,c
 20438   00C66A  D7F5               	goto	l22997
 20439   00C66C  0A03               	xorlw	3	; case 2
 20440   00C66E  B4D8               	btfsc	status,2,c
 20441   00C670  D7F4               	goto	l23001
 20442   00C672  D7F5               	goto	l23005
 20443   00C674                     __end_of_teachGetESDdata:
 20444                           	callstack 0
 20445                           
 20446 ;; *************** function _producerGetDiagnostic *****************
 20447 ;; Defined at:
 20448 ;;		line 180 in file "../../VLCBlib_PIC/event_producer_happening.c"
 20449 ;; Parameters:    Size  Location     Type
 20450 ;;  index           1    wreg     unsigned char 
 20451 ;; Auto vars:     Size  Location     Type
 20452 ;;  index           1   57[BANK0 ] unsigned char 
 20453 ;; Return value:  Size  Location     Type
 20454 ;;                  2   55[BANK0 ] PTR struct DiagnosticVal
 20455 ;; Registers used:
 20456 ;;		wreg, status,2, status,0, prodl, prodh
 20457 ;; Tracked objects:
 20458 ;;		On entry : 0/0
 20459 ;;		On exit  : 0/0
 20460 ;;		Unchanged: 0/0
 20461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20462 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20463 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20465 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20466 ;;Total ram usage:        3 bytes
 20467 ;; Hardware stack levels used: 1
 20468 ;; Hardware stack levels required when called: 12
 20469 ;; This function calls:
 20470 ;;		Nothing
 20471 ;; This function is called by:
 20472 ;;		_mnsTRallDiagnosticsCallback
 20473 ;;		_mnsProcessMessage
 20474 ;; This function uses a non-reentrant model
 20475 ;;
 20476                           
 20477                           	psect	text63
 20478   00C452                     __ptext63:
 20479                           	callstack 0
 20480   00C452                     _producerGetDiagnostic:
 20481                           	callstack 15
 20482                           
 20483                           ; BSR set to: 0
 20484                           ;incstack = 0
 20485                           ;producerGetDiagnostic@index stored from wreg
 20486   00C452  0100               	movlb	0	; () banked
 20487   00C454  6F99               	movwf	producerGetDiagnostic@index& (0+255),b
 20488                           
 20489                           ;../../VLCBlib_PIC/event_producer_happening.c: 181:     if (index > 1) {
 20490   00C456  0E01               	movlw	1
 20491   00C458  0100               	movlb	0	; () banked
 20492   00C45A  6599               	cpfsgt	producerGetDiagnostic@index& (0+255),b
 20493   00C45C  D005               	goto	l21541
 20494                           
 20495                           ; BSR set to: 0
 20496                           ;../../VLCBlib_PIC/event_producer_happening.c: 182:         return ((void*)0);
 20497   00C45E  0E00               	movlw	0
 20498   00C460  6F97               	movwf	?_producerGetDiagnostic& (0+255),b
 20499   00C462  0E00               	movlw	0
 20500   00C464  6F98               	movwf	(?_producerGetDiagnostic+1)& (0+255),b
 20501   00C466  0012               	return	
 20502   00C468                     l21541:
 20503                           
 20504                           ; BSR set to: 0
 20505                           ;../../VLCBlib_PIC/event_producer_happening.c: 184:     return &(producerDiagnostics[ind
      +                          ex]);
 20506   00C468  5199               	movf	producerGetDiagnostic@index& (0+255),w,b
 20507   00C46A  0D02               	mullw	2
 20508   00C46C  0EAE               	movlw	low _producerDiagnostics
 20509   00C46E  24F3               	addwf	243,w,c
 20510   00C470  6F97               	movwf	?_producerGetDiagnostic& (0+255),b
 20511   00C472  0E01               	movlw	high _producerDiagnostics
 20512   00C474  20F4               	addwfc	prodh,w,c
 20513   00C476  6F98               	movwf	(?_producerGetDiagnostic+1)& (0+255),b
 20514                           
 20515                           ; BSR set to: 0
 20516   00C478  0012               	return		;funcret
 20517   00C47A                     __end_of_producerGetDiagnostic:
 20518                           	callstack 0
 20519                           
 20520 ;; *************** function _canGetDiagnostic *****************
 20521 ;; Defined at:
 20522 ;;		line 438 in file "../../VLCBlib_PIC/can18_ecan.c"
 20523 ;; Parameters:    Size  Location     Type
 20524 ;;  index           1    wreg     unsigned char 
 20525 ;; Auto vars:     Size  Location     Type
 20526 ;;  index           1   58[BANK0 ] unsigned char 
 20527 ;; Return value:  Size  Location     Type
 20528 ;;                  2   55[BANK0 ] PTR struct DiagnosticVal
 20529 ;; Registers used:
 20530 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20531 ;; Tracked objects:
 20532 ;;		On entry : 0/0
 20533 ;;		On exit  : 0/0
 20534 ;;		Unchanged: 0/0
 20535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20536 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20537 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20538 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20539 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20540 ;;Total ram usage:        4 bytes
 20541 ;; Hardware stack levels used: 1
 20542 ;; Hardware stack levels required when called: 14
 20543 ;; This function calls:
 20544 ;;		_getNumRxBuffersInUse
 20545 ;;		_getNumTxBuffersInUse
 20546 ;; This function is called by:
 20547 ;;		_mnsTRallDiagnosticsCallback
 20548 ;;		_mnsProcessMessage
 20549 ;; This function uses a non-reentrant model
 20550 ;;
 20551                           
 20552                           	psect	text64
 20553   00B26E                     __ptext64:
 20554                           	callstack 0
 20555   00B26E                     _canGetDiagnostic:
 20556                           	callstack 13
 20557                           
 20558                           ; BSR set to: 0
 20559                           ;incstack = 0
 20560                           ;canGetDiagnostic@index stored from wreg
 20561   00B26E  0100               	movlb	0	; () banked
 20562   00B270  6F9A               	movwf	canGetDiagnostic@index& (0+255),b
 20563                           
 20564                           ;../../VLCBlib_PIC/can18_ecan.c: 439:     if (index > 18) {
 20565   00B272  0E12               	movlw	18
 20566   00B274  0100               	movlb	0	; () banked
 20567   00B276  659A               	cpfsgt	canGetDiagnostic@index& (0+255),b
 20568   00B278  D01C               	goto	l21447
 20569                           
 20570                           ; BSR set to: 0
 20571                           ;../../VLCBlib_PIC/can18_ecan.c: 440:         return ((void*)0);
 20572   00B27A  0E00               	movlw	0
 20573   00B27C  6F97               	movwf	?_canGetDiagnostic& (0+255),b
 20574   00B27E  0E00               	movlw	0
 20575   00B280  6F98               	movwf	(?_canGetDiagnostic+1)& (0+255),b
 20576   00B282  0012               	return	
 20577   00B284                     l2506:
 20578                           
 20579                           ; BSR set to: 0
 20580                           ;../../VLCBlib_PIC/can18_ecan.c: 444:             canDiagnostics[0x03].asUint = COMSTAT;
 20581   00B284  CF71 F16C          	movff	3953,_canDiagnostics+6	;volatile
 20582   00B288  0101               	movlb	1	; () banked
 20583   00B28A  6B6D               	clrf	(_canDiagnostics+7)& (0+255),b
 20584                           
 20585                           ;../../VLCBlib_PIC/can18_ecan.c: 445:             break;
 20586   00B28C  D01C               	goto	l21449
 20587   00B28E                     l21441:
 20588                           
 20589                           ; BSR set to: 0
 20590                           ;../../VLCBlib_PIC/can18_ecan.c: 447:             canDiagnostics[0x04].asUint = getNumTx
      +                          BuffersInUse();
 20591   00B28E  EC4B  F064         	call	_getNumTxBuffersInUse	;wreg free
 20592   00B292  0100               	movlb	0	; () banked
 20593   00B294  6F99               	movwf	??_canGetDiagnostic& (0+255),b
 20594   00B296  5199               	movf	??_canGetDiagnostic& (0+255),w,b
 20595   00B298  0101               	movlb	1	; () banked
 20596   00B29A  6F6E               	movwf	(_canDiagnostics+8)& (0+255),b
 20597   00B29C  6B6F               	clrf	(_canDiagnostics+9)& (0+255),b
 20598                           
 20599                           ;../../VLCBlib_PIC/can18_ecan.c: 448:             break;
 20600   00B29E  D013               	goto	l21449
 20601   00B2A0                     l21443:
 20602                           
 20603                           ; BSR set to: 0
 20604                           ;../../VLCBlib_PIC/can18_ecan.c: 450:             canDiagnostics[0x07].asUint = getNumRx
      +                          BuffersInUse();
 20605   00B2A0  ECF1  F05F         	call	_getNumRxBuffersInUse	;wreg free
 20606   00B2A4  0100               	movlb	0	; () banked
 20607   00B2A6  6F99               	movwf	??_canGetDiagnostic& (0+255),b
 20608   00B2A8  5199               	movf	??_canGetDiagnostic& (0+255),w,b
 20609   00B2AA  0101               	movlb	1	; () banked
 20610   00B2AC  6F74               	movwf	(_canDiagnostics+14)& (0+255),b
 20611   00B2AE  6B75               	clrf	(_canDiagnostics+15)& (0+255),b
 20612                           
 20613                           ;../../VLCBlib_PIC/can18_ecan.c: 451:             break;
 20614   00B2B0  D00A               	goto	l21449
 20615   00B2B2                     l21447:
 20616                           
 20617                           ; BSR set to: 0
 20618   00B2B2  519A               	movf	canGetDiagnostic@index& (0+255),w,b
 20619                           
 20620                           ; Switch size 1, requested type "simple"
 20621                           ; Number of cases is 3, Range of values is 3 to 7
 20622                           ; switch strategies available:
 20623                           ; Name         Instructions Cycles
 20624                           ; simple_byte           10     6 (average)
 20625                           ;	Chosen strategy is simple_byte
 20626   00B2B4  0A03               	xorlw	3	; case 3
 20627   00B2B6  B4D8               	btfsc	status,2,c
 20628   00B2B8  D7E5               	goto	l2506
 20629   00B2BA  0A07               	xorlw	7	; case 4
 20630   00B2BC  B4D8               	btfsc	status,2,c
 20631   00B2BE  D7E7               	goto	l21441
 20632   00B2C0  0A03               	xorlw	3	; case 7
 20633   00B2C2  B4D8               	btfsc	status,2,c
 20634   00B2C4  D7ED               	goto	l21443
 20635   00B2C6                     l21449:
 20636                           
 20637                           ;../../VLCBlib_PIC/can18_ecan.c: 453:     return &(canDiagnostics[index]);
 20638   00B2C6  0100               	movlb	0	; () banked
 20639   00B2C8  519A               	movf	canGetDiagnostic@index& (0+255),w,b
 20640   00B2CA  0D02               	mullw	2
 20641   00B2CC  0E66               	movlw	low _canDiagnostics
 20642   00B2CE  24F3               	addwf	243,w,c
 20643   00B2D0  6F97               	movwf	?_canGetDiagnostic& (0+255),b
 20644   00B2D2  0E01               	movlw	high _canDiagnostics
 20645   00B2D4  20F4               	addwfc	prodh,w,c
 20646   00B2D6  6F98               	movwf	(?_canGetDiagnostic+1)& (0+255),b
 20647                           
 20648                           ; BSR set to: 0
 20649   00B2D8  0012               	return		;funcret
 20650   00B2DA                     __end_of_canGetDiagnostic:
 20651                           	callstack 0
 20652                           
 20653 ;; *************** function _nvGetDiagnostic *****************
 20654 ;; Defined at:
 20655 ;;		line 150 in file "../../VLCBlib_PIC/nv.c"
 20656 ;; Parameters:    Size  Location     Type
 20657 ;;  index           1    wreg     unsigned char 
 20658 ;; Auto vars:     Size  Location     Type
 20659 ;;  index           1   57[BANK0 ] unsigned char 
 20660 ;; Return value:  Size  Location     Type
 20661 ;;                  2   55[BANK0 ] PTR struct DiagnosticVal
 20662 ;; Registers used:
 20663 ;;		wreg, status,2, status,0, prodl, prodh
 20664 ;; Tracked objects:
 20665 ;;		On entry : 0/0
 20666 ;;		On exit  : 0/0
 20667 ;;		Unchanged: 0/0
 20668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20669 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20670 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20672 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20673 ;;Total ram usage:        3 bytes
 20674 ;; Hardware stack levels used: 1
 20675 ;; Hardware stack levels required when called: 12
 20676 ;; This function calls:
 20677 ;;		Nothing
 20678 ;; This function is called by:
 20679 ;;		_mnsTRallDiagnosticsCallback
 20680 ;;		_mnsProcessMessage
 20681 ;; This function uses a non-reentrant model
 20682 ;;
 20683                           
 20684                           	psect	text65
 20685   00C47A                     __ptext65:
 20686                           	callstack 0
 20687   00C47A                     _nvGetDiagnostic:
 20688                           	callstack 15
 20689                           
 20690                           ; BSR set to: 0
 20691                           ;incstack = 0
 20692                           ;nvGetDiagnostic@index stored from wreg
 20693   00C47A  0100               	movlb	0	; () banked
 20694   00C47C  6F99               	movwf	nvGetDiagnostic@index& (0+255),b
 20695                           
 20696                           ;../../VLCBlib_PIC/nv.c: 151:     if (index > 2) {
 20697   00C47E  0E02               	movlw	2
 20698   00C480  0100               	movlb	0	; () banked
 20699   00C482  6599               	cpfsgt	nvGetDiagnostic@index& (0+255),b
 20700   00C484  D005               	goto	l21355
 20701                           
 20702                           ; BSR set to: 0
 20703                           ;../../VLCBlib_PIC/nv.c: 152:         return ((void*)0);
 20704   00C486  0E00               	movlw	0
 20705   00C488  6F97               	movwf	?_nvGetDiagnostic& (0+255),b
 20706   00C48A  0E00               	movlw	0
 20707   00C48C  6F98               	movwf	(?_nvGetDiagnostic+1)& (0+255),b
 20708   00C48E  0012               	return	
 20709   00C490                     l21355:
 20710                           
 20711                           ; BSR set to: 0
 20712                           ;../../VLCBlib_PIC/nv.c: 154:     return &(nvDiagnostics[index]);
 20713   00C490  5199               	movf	nvGetDiagnostic@index& (0+255),w,b
 20714   00C492  0D02               	mullw	2
 20715   00C494  0EA3               	movlw	low _nvDiagnostics
 20716   00C496  24F3               	addwf	243,w,c
 20717   00C498  6F97               	movwf	?_nvGetDiagnostic& (0+255),b
 20718   00C49A  0E01               	movlw	high _nvDiagnostics
 20719   00C49C  20F4               	addwfc	prodh,w,c
 20720   00C49E  6F98               	movwf	(?_nvGetDiagnostic+1)& (0+255),b
 20721                           
 20722                           ; BSR set to: 0
 20723   00C4A0  0012               	return		;funcret
 20724   00C4A2                     __end_of_nvGetDiagnostic:
 20725                           	callstack 0
 20726                           
 20727 ;; *************** function _mnsGetDiagnostic *****************
 20728 ;; Defined at:
 20729 ;;		line 785 in file "../../VLCBlib_PIC/mns.c"
 20730 ;; Parameters:    Size  Location     Type
 20731 ;;  index           1    wreg     unsigned char 
 20732 ;; Auto vars:     Size  Location     Type
 20733 ;;  index           1   57[BANK0 ] unsigned char 
 20734 ;; Return value:  Size  Location     Type
 20735 ;;                  2   55[BANK0 ] PTR struct DiagnosticVal
 20736 ;; Registers used:
 20737 ;;		wreg, status,2, status,0, prodl, prodh
 20738 ;; Tracked objects:
 20739 ;;		On entry : 0/0
 20740 ;;		On exit  : 0/0
 20741 ;;		Unchanged: 0/0
 20742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20743 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20744 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20746 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20747 ;;Total ram usage:        3 bytes
 20748 ;; Hardware stack levels used: 1
 20749 ;; Hardware stack levels required when called: 12
 20750 ;; This function calls:
 20751 ;;		Nothing
 20752 ;; This function is called by:
 20753 ;;		_mnsTRallDiagnosticsCallback
 20754 ;;		_mnsProcessMessage
 20755 ;; This function uses a non-reentrant model
 20756 ;;
 20757                           
 20758                           	psect	text66
 20759   00C4A2                     __ptext66:
 20760                           	callstack 0
 20761   00C4A2                     _mnsGetDiagnostic:
 20762                           	callstack 15
 20763                           
 20764                           ; BSR set to: 0
 20765                           ;incstack = 0
 20766                           ;mnsGetDiagnostic@index stored from wreg
 20767   00C4A2  0100               	movlb	0	; () banked
 20768   00C4A4  6F99               	movwf	mnsGetDiagnostic@index& (0+255),b
 20769                           
 20770                           ;../../VLCBlib_PIC/mns.c: 786:     if (index > 6) {
 20771   00C4A6  0E06               	movlw	6
 20772   00C4A8  0100               	movlb	0	; () banked
 20773   00C4AA  6599               	cpfsgt	mnsGetDiagnostic@index& (0+255),b
 20774   00C4AC  D005               	goto	l21293
 20775                           
 20776                           ; BSR set to: 0
 20777                           ;../../VLCBlib_PIC/mns.c: 787:         return ((void*)0);
 20778   00C4AE  0E00               	movlw	0
 20779   00C4B0  6F97               	movwf	?_mnsGetDiagnostic& (0+255),b
 20780   00C4B2  0E00               	movlw	0
 20781   00C4B4  6F98               	movwf	(?_mnsGetDiagnostic+1)& (0+255),b
 20782   00C4B6  0012               	return	
 20783   00C4B8                     l21293:
 20784                           
 20785                           ; BSR set to: 0
 20786                           ;../../VLCBlib_PIC/mns.c: 789:     return &(mnsDiagnostics[index]);
 20787   00C4B8  5199               	movf	mnsGetDiagnostic@index& (0+255),w,b
 20788   00C4BA  0D02               	mullw	2
 20789   00C4BC  0E8C               	movlw	low _mnsDiagnostics
 20790   00C4BE  24F3               	addwf	243,w,c
 20791   00C4C0  6F97               	movwf	?_mnsGetDiagnostic& (0+255),b
 20792   00C4C2  0E01               	movlw	high _mnsDiagnostics
 20793   00C4C4  20F4               	addwfc	prodh,w,c
 20794   00C4C6  6F98               	movwf	(?_mnsGetDiagnostic+1)& (0+255),b
 20795                           
 20796                           ; BSR set to: 0
 20797   00C4C8  0012               	return		;funcret
 20798   00C4CA                     __end_of_mnsGetDiagnostic:
 20799                           	callstack 0
 20800                           
 20801 ;; *************** function _ackGetDiagnostic *****************
 20802 ;; Defined at:
 20803 ;;		line 194 in file "../../VLCBlib_PIC/event_acknowledge.c"
 20804 ;; Parameters:    Size  Location     Type
 20805 ;;  index           1    wreg     unsigned char 
 20806 ;; Auto vars:     Size  Location     Type
 20807 ;;  index           1   57[BANK0 ] unsigned char 
 20808 ;; Return value:  Size  Location     Type
 20809 ;;                  2   55[BANK0 ] PTR struct DiagnosticVal
 20810 ;; Registers used:
 20811 ;;		wreg, status,2, status,0, prodl, prodh
 20812 ;; Tracked objects:
 20813 ;;		On entry : 0/0
 20814 ;;		On exit  : 0/0
 20815 ;;		Unchanged: 0/0
 20816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20817 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20818 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20820 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20821 ;;Total ram usage:        3 bytes
 20822 ;; Hardware stack levels used: 1
 20823 ;; Hardware stack levels required when called: 12
 20824 ;; This function calls:
 20825 ;;		Nothing
 20826 ;; This function is called by:
 20827 ;;		_mnsTRallDiagnosticsCallback
 20828 ;;		_mnsProcessMessage
 20829 ;; This function uses a non-reentrant model
 20830 ;;
 20831                           
 20832                           	psect	text67
 20833   00C4CA                     __ptext67:
 20834                           	callstack 0
 20835   00C4CA                     _ackGetDiagnostic:
 20836                           	callstack 15
 20837                           
 20838                           ; BSR set to: 0
 20839                           ;incstack = 0
 20840                           ;ackGetDiagnostic@index stored from wreg
 20841   00C4CA  0100               	movlb	0	; () banked
 20842   00C4CC  6F99               	movwf	ackGetDiagnostic@index& (0+255),b
 20843                           
 20844                           ;../../VLCBlib_PIC/event_acknowledge.c: 195:     if (index > 1) {
 20845   00C4CE  0E01               	movlw	1
 20846   00C4D0  0100               	movlb	0	; () banked
 20847   00C4D2  6599               	cpfsgt	ackGetDiagnostic@index& (0+255),b
 20848   00C4D4  D005               	goto	l21173
 20849                           
 20850                           ; BSR set to: 0
 20851                           ;../../VLCBlib_PIC/event_acknowledge.c: 196:         return ((void*)0);
 20852   00C4D6  0E00               	movlw	0
 20853   00C4D8  6F97               	movwf	?_ackGetDiagnostic& (0+255),b
 20854   00C4DA  0E00               	movlw	0
 20855   00C4DC  6F98               	movwf	(?_ackGetDiagnostic+1)& (0+255),b
 20856   00C4DE  0012               	return	
 20857   00C4E0                     l21173:
 20858                           
 20859                           ; BSR set to: 0
 20860                           ;../../VLCBlib_PIC/event_acknowledge.c: 198:     return &(ackDiagnostics[index]);
 20861   00C4E0  5199               	movf	ackGetDiagnostic@index& (0+255),w,b
 20862   00C4E2  0D02               	mullw	2
 20863   00C4E4  0EB6               	movlw	low _ackDiagnostics
 20864   00C4E6  24F3               	addwf	243,w,c
 20865   00C4E8  6F97               	movwf	?_ackGetDiagnostic& (0+255),b
 20866   00C4EA  0E01               	movlw	high _ackDiagnostics
 20867   00C4EC  20F4               	addwfc	prodh,w,c
 20868   00C4EE  6F98               	movwf	(?_ackGetDiagnostic+1)& (0+255),b
 20869                           
 20870                           ; BSR set to: 0
 20871   00C4F0  0012               	return		;funcret
 20872   00C4F2                     __end_of_ackGetDiagnostic:
 20873                           	callstack 0
 20874                           
 20875 ;; *************** function _consumer2QGetDiagnostic *****************
 20876 ;; Defined at:
 20877 ;;		line 350 in file "../event_consumerDualActionQueue.c"
 20878 ;; Parameters:    Size  Location     Type
 20879 ;;  index           1    wreg     unsigned char 
 20880 ;; Auto vars:     Size  Location     Type
 20881 ;;  index           1   57[BANK0 ] unsigned char 
 20882 ;; Return value:  Size  Location     Type
 20883 ;;                  2   55[BANK0 ] PTR struct DiagnosticVal
 20884 ;; Registers used:
 20885 ;;		wreg, status,2, status,0, prodl, prodh
 20886 ;; Tracked objects:
 20887 ;;		On entry : 0/0
 20888 ;;		On exit  : 0/0
 20889 ;;		Unchanged: 0/0
 20890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20891 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20892 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20894 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20895 ;;Total ram usage:        3 bytes
 20896 ;; Hardware stack levels used: 1
 20897 ;; Hardware stack levels required when called: 12
 20898 ;; This function calls:
 20899 ;;		Nothing
 20900 ;; This function is called by:
 20901 ;;		_mnsTRallDiagnosticsCallback
 20902 ;;		_mnsProcessMessage
 20903 ;; This function uses a non-reentrant model
 20904 ;;
 20905                           
 20906                           	psect	text68
 20907   00C4F2                     __ptext68:
 20908                           	callstack 0
 20909   00C4F2                     _consumer2QGetDiagnostic:
 20910                           	callstack 15
 20911                           
 20912                           ; BSR set to: 0
 20913                           ;incstack = 0
 20914                           ;consumer2QGetDiagnostic@index stored from wreg
 20915   00C4F2  0100               	movlb	0	; () banked
 20916   00C4F4  6F99               	movwf	consumer2QGetDiagnostic@index& (0+255),b
 20917                           
 20918                           ;../event_consumerDualActionQueue.c: 351:     if (index > 1) {
 20919   00C4F6  0E01               	movlw	1
 20920   00C4F8  0100               	movlb	0	; () banked
 20921   00C4FA  6599               	cpfsgt	consumer2QGetDiagnostic@index& (0+255),b
 20922   00C4FC  D005               	goto	l20819
 20923                           
 20924                           ; BSR set to: 0
 20925                           ;../event_consumerDualActionQueue.c: 352:         return ((void*)0);
 20926   00C4FE  0E00               	movlw	0
 20927   00C500  6F97               	movwf	?_consumer2QGetDiagnostic& (0+255),b
 20928   00C502  0E00               	movlw	0
 20929   00C504  6F98               	movwf	(?_consumer2QGetDiagnostic+1)& (0+255),b
 20930   00C506  0012               	return	
 20931   00C508                     l20819:
 20932                           
 20933                           ; BSR set to: 0
 20934                           ;../event_consumerDualActionQueue.c: 354:     return &(consumer2QDiagnostics[index]);
 20935   00C508  5199               	movf	consumer2QGetDiagnostic@index& (0+255),w,b
 20936   00C50A  0D02               	mullw	2
 20937   00C50C  0EBA               	movlw	low _consumer2QDiagnostics
 20938   00C50E  24F3               	addwf	243,w,c
 20939   00C510  6F97               	movwf	?_consumer2QGetDiagnostic& (0+255),b
 20940   00C512  0E01               	movlw	high _consumer2QDiagnostics
 20941   00C514  20F4               	addwfc	prodh,w,c
 20942   00C516  6F98               	movwf	(?_consumer2QGetDiagnostic+1)& (0+255),b
 20943                           
 20944                           ; BSR set to: 0
 20945   00C518  0012               	return		;funcret
 20946   00C51A                     __end_of_consumer2QGetDiagnostic:
 20947                           	callstack 0
 20948                           
 20949 ;; *************** function _teachGetDiagnostic *****************
 20950 ;; Defined at:
 20951 ;;		line 545 in file "../../VLCBlib_PIC/event_teach_large.c"
 20952 ;; Parameters:    Size  Location     Type
 20953 ;;  index           1    wreg     unsigned char 
 20954 ;; Auto vars:     Size  Location     Type
 20955 ;;  index           1   57[BANK0 ] unsigned char 
 20956 ;; Return value:  Size  Location     Type
 20957 ;;                  2   55[BANK0 ] PTR struct DiagnosticVal
 20958 ;; Registers used:
 20959 ;;		wreg, status,2, status,0, prodl, prodh
 20960 ;; Tracked objects:
 20961 ;;		On entry : 0/0
 20962 ;;		On exit  : 0/0
 20963 ;;		Unchanged: 0/0
 20964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20965 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20966 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20968 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20969 ;;Total ram usage:        3 bytes
 20970 ;; Hardware stack levels used: 1
 20971 ;; Hardware stack levels required when called: 12
 20972 ;; This function calls:
 20973 ;;		Nothing
 20974 ;; This function is called by:
 20975 ;;		_mnsTRallDiagnosticsCallback
 20976 ;;		_mnsProcessMessage
 20977 ;; This function uses a non-reentrant model
 20978 ;;
 20979                           
 20980                           	psect	text69
 20981   00C51A                     __ptext69:
 20982                           	callstack 0
 20983   00C51A                     _teachGetDiagnostic:
 20984                           	callstack 15
 20985                           
 20986                           ; BSR set to: 0
 20987                           ;incstack = 0
 20988                           ;teachGetDiagnostic@index stored from wreg
 20989   00C51A  0100               	movlb	0	; () banked
 20990   00C51C  6F99               	movwf	teachGetDiagnostic@index& (0+255),b
 20991                           
 20992                           ;../../VLCBlib_PIC/event_teach_large.c: 546:     if (index > 1) {
 20993   00C51E  0E01               	movlw	1
 20994   00C520  0100               	movlb	0	; () banked
 20995   00C522  6599               	cpfsgt	teachGetDiagnostic@index& (0+255),b
 20996   00C524  D005               	goto	l21481
 20997                           
 20998                           ; BSR set to: 0
 20999                           ;../../VLCBlib_PIC/event_teach_large.c: 547:         return ((void*)0);
 21000   00C526  0E00               	movlw	0
 21001   00C528  6F97               	movwf	?_teachGetDiagnostic& (0+255),b
 21002   00C52A  0E00               	movlw	0
 21003   00C52C  6F98               	movwf	(?_teachGetDiagnostic+1)& (0+255),b
 21004   00C52E  0012               	return	
 21005   00C530                     l21481:
 21006                           
 21007                           ; BSR set to: 0
 21008                           ;../../VLCBlib_PIC/event_teach_large.c: 549:     return &(teachDiagnostics[index]);
 21009   00C530  5199               	movf	teachGetDiagnostic@index& (0+255),w,b
 21010   00C532  0D02               	mullw	2
 21011   00C534  0EB2               	movlw	low _teachDiagnostics
 21012   00C536  24F3               	addwf	243,w,c
 21013   00C538  6F97               	movwf	?_teachGetDiagnostic& (0+255),b
 21014   00C53A  0E01               	movlw	high _teachDiagnostics
 21015   00C53C  20F4               	addwfc	prodh,w,c
 21016   00C53E  6F98               	movwf	(?_teachGetDiagnostic+1)& (0+255),b
 21017                           
 21018                           ; BSR set to: 0
 21019   00C540  0012               	return		;funcret
 21020   00C542                     __end_of_teachGetDiagnostic:
 21021                           	callstack 0
 21022                           
 21023 ;; *************** function _sendMessage6 *****************
 21024 ;; Defined at:
 21025 ;;		line 1195 in file "../../VLCBlib_PIC/vlcb.c"
 21026 ;; Parameters:    Size  Location     Type
 21027 ;;  opc             1    wreg     enum E12392
 21028 ;;  data1           1    8[BANK1 ] unsigned char 
 21029 ;;  data2           1    9[BANK1 ] unsigned char 
 21030 ;;  data3           1   10[BANK1 ] unsigned char 
 21031 ;;  data4           1   11[BANK1 ] unsigned char 
 21032 ;;  data5           1   12[BANK1 ] unsigned char 
 21033 ;;  data6           1   13[BANK1 ] unsigned char 
 21034 ;; Auto vars:     Size  Location     Type
 21035 ;;  opc             1   71[BANK0 ] enum E12392
 21036 ;; Return value:  Size  Location     Type
 21037 ;;                  1    wreg      void 
 21038 ;; Registers used:
 21039 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 21040 ;; Tracked objects:
 21041 ;;		On entry : 0/0
 21042 ;;		On exit  : 0/0
 21043 ;;		Unchanged: 0/0
 21044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21045 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21046 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21048 ;;      Totals:         0       1       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21049 ;;Total ram usage:        7 bytes
 21050 ;; Hardware stack levels used: 1
 21051 ;; Hardware stack levels required when called: 16
 21052 ;; This function calls:
 21053 ;;		_sendMessage
 21054 ;; This function is called by:
 21055 ;;		_mnsProcessMessage
 21056 ;;		_mnsTRallDiagnosticsCallback
 21057 ;;		_doReqev
 21058 ;;		_reqevCallback
 21059 ;; This function uses a non-reentrant model
 21060 ;;
 21061                           
 21062                           	psect	text70
 21063   00C1FE                     __ptext70:
 21064                           	callstack 0
 21065   00C1FE                     _sendMessage6:
 21066                           	callstack 11
 21067                           
 21068                           ; BSR set to: 0
 21069                           ;incstack = 0
 21070                           ;sendMessage6@opc stored from wreg
 21071   00C1FE  0100               	movlb	0	; () banked
 21072   00C200  6FA7               	movwf	sendMessage6@opc& (0+255),b
 21073                           
 21074                           ;../../VLCBlib_PIC/vlcb.c: 1196:     sendMessage(opc, 7, data1, data2, data3, data4, dat
      +                          a5, data6,0);
 21075   00C202  0E07               	movlw	7
 21076   00C204  0101               	movlb	1	; () banked
 21077   00C206  6FBE               	movwf	sendMessage@len& (0+255),b
 21078   00C208  C1C6  F1BF         	movff	sendMessage6@data1,sendMessage@data1
 21079   00C20C  C1C7  F1C0         	movff	sendMessage6@data2,sendMessage@data2
 21080   00C210  C1C8  F1C1         	movff	sendMessage6@data3,sendMessage@data3
 21081   00C214  C1C9  F1C2         	movff	sendMessage6@data4,sendMessage@data4
 21082   00C218  C1CA  F1C3         	movff	sendMessage6@data5,sendMessage@data5
 21083   00C21C  C1CB  F1C4         	movff	sendMessage6@data6,sendMessage@data6
 21084   00C220  0E00               	movlw	0
 21085   00C222  6FC5               	movwf	sendMessage@data7& (0+255),b
 21086   00C224  0100               	movlb	0	; () banked
 21087   00C226  51A7               	movf	sendMessage6@opc& (0+255),w,b
 21088   00C228  EC02  F056         	call	_sendMessage
 21089   00C22C  0012               	return		;funcret
 21090   00C22E                     __end_of_sendMessage6:
 21091                           	callstack 0
 21092                           
 21093 ;; *************** function _sendMessage3 *****************
 21094 ;; Defined at:
 21095 ;;		line 1156 in file "../../VLCBlib_PIC/vlcb.c"
 21096 ;; Parameters:    Size  Location     Type
 21097 ;;  opc             1    wreg     enum E12392
 21098 ;;  data1           1   71[BANK0 ] unsigned char 
 21099 ;;  data2           1   72[BANK0 ] unsigned char 
 21100 ;;  data3           1   73[BANK0 ] unsigned char 
 21101 ;; Auto vars:     Size  Location     Type
 21102 ;;  opc             1    8[BANK1 ] enum E12392
 21103 ;; Return value:  Size  Location     Type
 21104 ;;                  1    wreg      void 
 21105 ;; Registers used:
 21106 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 21107 ;; Tracked objects:
 21108 ;;		On entry : 0/0
 21109 ;;		On exit  : 0/0
 21110 ;;		Unchanged: 0/0
 21111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21112 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21113 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21115 ;;      Totals:         0       3       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21116 ;;Total ram usage:        4 bytes
 21117 ;; Hardware stack levels used: 1
 21118 ;; Hardware stack levels required when called: 16
 21119 ;; This function calls:
 21120 ;;		_sendMessage
 21121 ;; This function is called by:
 21122 ;;		_mnsProcessMessage
 21123 ;;		_nvProcessMessage
 21124 ;;		_teachProcessMessage
 21125 ;;		_doNnevn
 21126 ;;		_doNenrd
 21127 ;;		_doRqevn
 21128 ;;		_doEvlrn
 21129 ;;		_doReval
 21130 ;;		_doEvuln
 21131 ;;		_doReqev
 21132 ;;		_producerProcessMessage
 21133 ;; This function uses a non-reentrant model
 21134 ;;
 21135                           
 21136                           	psect	text71
 21137   00C34A                     __ptext71:
 21138                           	callstack 0
 21139   00C34A                     _sendMessage3:
 21140                           	callstack 12
 21141                           
 21142                           ;incstack = 0
 21143                           ;sendMessage3@opc stored from wreg
 21144   00C34A  0101               	movlb	1	; () banked
 21145   00C34C  6FC6               	movwf	sendMessage3@opc& (0+255),b
 21146                           
 21147                           ;../../VLCBlib_PIC/vlcb.c: 1157:     sendMessage(opc, 4, data1, data2, data3, 0,0,0,0);
 21148   00C34E  0E04               	movlw	4
 21149   00C350  0101               	movlb	1	; () banked
 21150   00C352  6FBE               	movwf	sendMessage@len& (0+255),b
 21151   00C354  C0A7  F1BF         	movff	sendMessage3@data1,sendMessage@data1
 21152   00C358  C0A8  F1C0         	movff	sendMessage3@data2,sendMessage@data2
 21153   00C35C  C0A9  F1C1         	movff	sendMessage3@data3,sendMessage@data3
 21154   00C360  0E00               	movlw	0
 21155   00C362  6FC2               	movwf	sendMessage@data4& (0+255),b
 21156   00C364  0E00               	movlw	0
 21157   00C366  6FC3               	movwf	sendMessage@data5& (0+255),b
 21158   00C368  0E00               	movlw	0
 21159   00C36A  6FC4               	movwf	sendMessage@data6& (0+255),b
 21160   00C36C  0E00               	movlw	0
 21161   00C36E  6FC5               	movwf	sendMessage@data7& (0+255),b
 21162   00C370  51C6               	movf	sendMessage3@opc& (0+255),w,b
 21163   00C372  EC02  F056         	call	_sendMessage
 21164   00C376  0012               	return		;funcret
 21165   00C378                     __end_of_sendMessage3:
 21166                           	callstack 0
 21167                           
 21168 ;; *************** function _getParameter *****************
 21169 ;; Defined at:
 21170 ;;		line 816 in file "../../VLCBlib_PIC/mns.c"
 21171 ;; Parameters:    Size  Location     Type
 21172 ;;  idx             1    wreg     unsigned char 
 21173 ;; Auto vars:     Size  Location     Type
 21174 ;;  idx             1   50[BANK0 ] unsigned char 
 21175 ;;  i               1    0        unsigned char 
 21176 ;; Return value:  Size  Location     Type
 21177 ;;                  1    wreg      unsigned char 
 21178 ;; Registers used:
 21179 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21180 ;; Tracked objects:
 21181 ;;		On entry : 0/0
 21182 ;;		On exit  : 0/0
 21183 ;;		Unchanged: 0/0
 21184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21186 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21188 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21189 ;;Total ram usage:        1 bytes
 21190 ;; Hardware stack levels used: 1
 21191 ;; Hardware stack levels required when called: 14
 21192 ;; This function calls:
 21193 ;;		_getParameterFlags
 21194 ;;		_have
 21195 ;; This function is called by:
 21196 ;;		_mnsProcessMessage
 21197 ;;		_mnsTRrqnpnCallback
 21198 ;; This function uses a non-reentrant model
 21199 ;;
 21200                           
 21201                           	psect	text72
 21202   008882                     __ptext72:
 21203                           	callstack 0
 21204   008882                     _getParameter:
 21205                           	callstack 13
 21206                           
 21207                           ;incstack = 0
 21208                           ;getParameter@idx stored from wreg
 21209   008882  0100               	movlb	0	; () banked
 21210   008884  6F92               	movwf	getParameter@idx& (0+255),b
 21211                           
 21212                           ;../../VLCBlib_PIC/mns.c: 817:     uint8_t i;;../../VLCBlib_PIC/mns.c: 818:     switch(i
      +                          dx) {
 21213   008886  D033               	goto	l21283
 21214   008888                     l21195:
 21215                           
 21216                           ; BSR set to: 0
 21217                           ;../../VLCBlib_PIC/mns.c: 820:         return 20;
 21218   008888  0E14               	movlw	20
 21219   00888A  0012               	return	
 21220   00888C                     l21199:
 21221                           
 21222                           ; BSR set to: 0
 21223                           ;../../VLCBlib_PIC/mns.c: 822:         return MANU_MERG;
 21224   00888C  0EA5               	movlw	165
 21225   00888E  0012               	return	
 21226   008890                     l21203:
 21227                           
 21228                           ; BSR set to: 0
 21229                           ;../../VLCBlib_PIC/mns.c: 824:         return 'a';
 21230   008890  0E61               	movlw	97
 21231   008892  0012               	return	
 21232   008894                     l21207:
 21233                           
 21234                           ; BSR set to: 0
 21235                           ;../../VLCBlib_PIC/mns.c: 826:         return MTYP_CANMIO;
 21236   008894  0E20               	movlw	32
 21237   008896  0012               	return	
 21238   008898                     l21211:
 21239                           
 21240                           ; BSR set to: 0
 21241                           ;../../VLCBlib_PIC/mns.c: 828:         return 255;
 21242   008898  0EFF               	movlw	255
 21243   00889A  0012               	return	
 21244   00889C                     l21219:
 21245                           
 21246                           ; BSR set to: 0
 21247                           ;../../VLCBlib_PIC/mns.c: 832:         return (15+7*16);
 21248   00889C  0E7F               	movlw	127
 21249   00889E  0012               	return	
 21250   0088A0                     l21223:
 21251                           
 21252                           ; BSR set to: 0
 21253                           ;../../VLCBlib_PIC/mns.c: 834:         return 4;
 21254   0088A0  0E04               	movlw	4
 21255   0088A2  0012               	return	
 21256   0088A4                     l21227:
 21257                           
 21258                           ; BSR set to: 0
 21259                           ;../../VLCBlib_PIC/mns.c: 836:         return getParameterFlags();
 21260   0088A4  EC19  F05C         	call	_getParameterFlags	;wreg free
 21261   0088A8  0012               	return	
 21262   0088AA                     l21231:
 21263                           
 21264                           ; BSR set to: 0
 21265                           ;../../VLCBlib_PIC/mns.c: 838:         return P18F26K80;
 21266   0088AA  0E0F               	movlw	15
 21267   0088AC  0012               	return	
 21268   0088AE                     l21235:
 21269                           
 21270                           ; BSR set to: 0
 21271                           ;../../VLCBlib_PIC/mns.c: 840:         if (have(SERVICE_ID_CAN)) {
 21272   0088AE  0E03               	movlw	3
 21273   0088B0  EC57  F058         	call	_have
 21274   0088B4  0900               	iorlw	0
 21275   0088B6  B4D8               	btfsc	status,2,c
 21276   0088B8  D002               	goto	l21241
 21277   0088BA                     u22290:
 21278                           
 21279                           ;../../VLCBlib_PIC/mns.c: 841:             return PB_CAN;
 21280   0088BA  0E01               	movlw	1
 21281   0088BC  0012               	return	
 21282   0088BE                     l21241:
 21283                           
 21284                           ;../../VLCBlib_PIC/mns.c: 843:         return 0;
 21285   0088BE  0E00               	movlw	0
 21286   0088C0  0012               	return	
 21287   0088C2                     l21249:
 21288                           
 21289                           ; BSR set to: 0
 21290                           ;../../VLCBlib_PIC/mns.c: 847:         return 0x08;
 21291   0088C2  0E08               	movlw	8
 21292   0088C4  0012               	return	
 21293   0088C6                     l21261:
 21294                           
 21295                           ; BSR set to: 0
 21296                           ;../../VLCBlib_PIC/mns.c: 859:         return *(const uint8_t*)0x3FFFFE;
 21297   0088C6  0EFE               	movlw	254
 21298   0088C8  6EF6               	movwf	tblptrl,c
 21299   0088CA                     	if	1	;There is more than 1 active tblptr byte
 21300   0088CA  0EFF               	movlw	255
 21301   0088CC  6EF7               	movwf	tblptrh,c
 21302   0088CE                     	endif
 21303   0088CE                     	if	1	;There are 3 active tblptr bytes
 21304   0088CE  0E3F               	movlw	63
 21305   0088D0  6EF8               	movwf	tblptru,c
 21306   0088D2                     	endif
 21307   0088D2  0008               	tblrd		*
 21308   0088D4  50F5               	movf	tablat,w,c
 21309   0088D6  0012               	return	
 21310   0088D8                     l21265:
 21311                           
 21312                           ; BSR set to: 0
 21313                           ;../../VLCBlib_PIC/mns.c: 861:         return *(const uint8_t*)0x3FFFFF;
 21314   0088D8  0EFF               	movlw	255
 21315   0088DA  6EF6               	movwf	tblptrl,c
 21316   0088DC                     	if	1	;There is more than 1 active tblptr byte
 21317   0088DC  0EFF               	movlw	255
 21318   0088DE  6EF7               	movwf	tblptrh,c
 21319   0088E0                     	endif
 21320   0088E0                     	if	1	;There are 3 active tblptr bytes
 21321   0088E0  0E3F               	movlw	63
 21322   0088E2  6EF8               	movwf	tblptru,c
 21323   0088E4                     	endif
 21324   0088E4  0008               	tblrd		*
 21325   0088E6  50F5               	movf	tablat,w,c
 21326   0088E8  0012               	return	
 21327   0088EA                     l21273:
 21328                           
 21329                           ; BSR set to: 0
 21330                           ;../../VLCBlib_PIC/mns.c: 865:         return 14;
 21331   0088EA  0E0E               	movlw	14
 21332   0088EC  0012               	return	
 21333   0088EE                     l21283:
 21334   0088EE  0100               	movlb	0	; () banked
 21335   0088F0  5192               	movf	getParameter@idx& (0+255),w,b
 21336                           
 21337                           ; Switch size 1, requested type "simple"
 21338                           ; Number of cases is 19, Range of values is 0 to 20
 21339                           ; switch strategies available:
 21340                           ; Name         Instructions Cycles
 21341                           ; simple_byte           58    30 (average)
 21342                           ;	Chosen strategy is simple_byte
 21343   0088F2  0A00               	xorlw	0	; case 0
 21344   0088F4  B4D8               	btfsc	status,2,c
 21345   0088F6  D7C8               	goto	l21195
 21346   0088F8  0A01               	xorlw	1	; case 1
 21347   0088FA  B4D8               	btfsc	status,2,c
 21348   0088FC  D7C7               	goto	l21199
 21349   0088FE  0A03               	xorlw	3	; case 2
 21350   008900  B4D8               	btfsc	status,2,c
 21351   008902  D7C6               	goto	l21203
 21352   008904  0A01               	xorlw	1	; case 3
 21353   008906  B4D8               	btfsc	status,2,c
 21354   008908  D7C5               	goto	l21207
 21355   00890A  0A07               	xorlw	7	; case 4
 21356   00890C  B4D8               	btfsc	status,2,c
 21357   00890E  D7C4               	goto	l21211
 21358   008910  0A01               	xorlw	1	; case 5
 21359   008912  B4D8               	btfsc	status,2,c
 21360   008914  D7B9               	goto	l21195
 21361   008916  0A03               	xorlw	3	; case 6
 21362   008918  B4D8               	btfsc	status,2,c
 21363   00891A  D7C0               	goto	l21219
 21364   00891C  0A01               	xorlw	1	; case 7
 21365   00891E  B4D8               	btfsc	status,2,c
 21366   008920  D7BF               	goto	l21223
 21367   008922  0A0F               	xorlw	15	; case 8
 21368   008924  B4D8               	btfsc	status,2,c
 21369   008926  D7BE               	goto	l21227
 21370   008928  0A01               	xorlw	1	; case 9
 21371   00892A  B4D8               	btfsc	status,2,c
 21372   00892C  D7BE               	goto	l21231
 21373   00892E  0A03               	xorlw	3	; case 10
 21374   008930  B4D8               	btfsc	status,2,c
 21375   008932  D7BD               	goto	l21235
 21376   008934  0A01               	xorlw	1	; case 11
 21377   008936  B4D8               	btfsc	status,2,c
 21378   008938  D7C2               	goto	l21241
 21379   00893A  0A07               	xorlw	7	; case 12
 21380   00893C  B4D8               	btfsc	status,2,c
 21381   00893E  D7C1               	goto	l21249
 21382   008940  0A01               	xorlw	1	; case 13
 21383   008942  B4D8               	btfsc	status,2,c
 21384   008944  D7BC               	goto	l21241
 21385   008946  0A03               	xorlw	3	; case 14
 21386   008948  B4D8               	btfsc	status,2,c
 21387   00894A  D7B9               	goto	l21241
 21388   00894C  0A1F               	xorlw	31	; case 17
 21389   00894E  B4D8               	btfsc	status,2,c
 21390   008950  D7BA               	goto	l21261
 21391   008952  0A03               	xorlw	3	; case 18
 21392   008954  B4D8               	btfsc	status,2,c
 21393   008956  D7C0               	goto	l21265
 21394   008958  0A01               	xorlw	1	; case 19
 21395   00895A  B4D8               	btfsc	status,2,c
 21396   00895C  D7AE               	goto	u22290
 21397   00895E  0A07               	xorlw	7	; case 20
 21398   008960  B4D8               	btfsc	status,2,c
 21399   008962  D7C3               	goto	l21273
 21400   008964  D7AC               	goto	l21241
 21401   008966                     __end_of_getParameter:
 21402                           	callstack 0
 21403                           
 21404 ;; *************** function _getParameterFlags *****************
 21405 ;; Defined at:
 21406 ;;		line 587 in file "../../VLCBlib_PIC/mns.c"
 21407 ;; Parameters:    Size  Location     Type
 21408 ;;		None
 21409 ;; Auto vars:     Size  Location     Type
 21410 ;;  flags           1   49[BANK0 ] unsigned char 
 21411 ;; Return value:  Size  Location     Type
 21412 ;;                  1    wreg      unsigned char 
 21413 ;; Registers used:
 21414 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21415 ;; Tracked objects:
 21416 ;;		On entry : 0/0
 21417 ;;		On exit  : 0/0
 21418 ;;		Unchanged: 0/0
 21419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21421 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21423 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21424 ;;Total ram usage:        1 bytes
 21425 ;; Hardware stack levels used: 1
 21426 ;; Hardware stack levels required when called: 13
 21427 ;; This function calls:
 21428 ;;		_have
 21429 ;; This function is called by:
 21430 ;;		_mnsProcessMessage
 21431 ;;		_getParameter
 21432 ;; This function uses a non-reentrant model
 21433 ;;
 21434                           
 21435                           	psect	text73
 21436   00B832                     __ptext73:
 21437                           	callstack 0
 21438   00B832                     _getParameterFlags:
 21439                           	callstack 13
 21440                           
 21441                           ;../../VLCBlib_PIC/mns.c: 588:     uint8_t flags;;../../VLCBlib_PIC/mns.c: 589:     flag
      +                          s = 0;
 21442                           
 21443                           ;incstack = 0
 21444   00B832  0E00               	movlw	0
 21445   00B834  0100               	movlb	0	; () banked
 21446   00B836  6F91               	movwf	getParameterFlags@flags& (0+255),b
 21447                           
 21448                           ; BSR set to: 0
 21449                           ;../../VLCBlib_PIC/mns.c: 590:     if (have(SERVICE_ID_CONSUMER)) {
 21450   00B838  0E06               	movlw	6
 21451   00B83A  EC57  F058         	call	_have
 21452   00B83E  0900               	iorlw	0
 21453   00B840  B4D8               	btfsc	status,2,c
 21454   00B842  D002               	goto	l20441
 21455                           
 21456                           ;../../VLCBlib_PIC/mns.c: 591:         flags |= 1;
 21457   00B844  0100               	movlb	0	; () banked
 21458   00B846  8191               	bsf	getParameterFlags@flags& (0+255),0,b
 21459   00B848                     l20441:
 21460                           
 21461                           ;../../VLCBlib_PIC/mns.c: 593:     if (have(SERVICE_ID_PRODUCER)) {
 21462   00B848  0E05               	movlw	5
 21463   00B84A  EC57  F058         	call	_have
 21464   00B84E  0900               	iorlw	0
 21465   00B850  B4D8               	btfsc	status,2,c
 21466   00B852  D002               	goto	l20445
 21467                           
 21468                           ;../../VLCBlib_PIC/mns.c: 594:         flags |= 2;
 21469   00B854  0100               	movlb	0	; () banked
 21470   00B856  8391               	bsf	getParameterFlags@flags& (0+255),1,b
 21471   00B858                     l20445:
 21472                           
 21473                           ;../../VLCBlib_PIC/mns.c: 596:     if (flags == (2 | 1)) flags |= 16;
 21474   00B858  0E03               	movlw	3
 21475   00B85A  0100               	movlb	0	; () banked
 21476   00B85C  1991               	xorwf	getParameterFlags@flags& (0+255),w,b
 21477   00B85E  B4D8               	btfsc	status,2,c
 21478                           
 21479                           ; BSR set to: 0
 21480   00B860  8991               	bsf	getParameterFlags@flags& (0+255),4,b
 21481                           
 21482                           ; BSR set to: 0
 21483                           ;../../VLCBlib_PIC/mns.c: 597:     if (have(SERVICE_ID_BOOT)) {
 21484   00B862  0E0A               	movlw	10
 21485   00B864  EC57  F058         	call	_have
 21486   00B868  0900               	iorlw	0
 21487   00B86A  B4D8               	btfsc	status,2,c
 21488   00B86C  D002               	goto	l20453
 21489                           
 21490                           ;../../VLCBlib_PIC/mns.c: 598:         flags |= 8;
 21491   00B86E  0100               	movlb	0	; () banked
 21492   00B870  8791               	bsf	getParameterFlags@flags& (0+255),3,b
 21493   00B872                     l20453:
 21494                           
 21495                           ;../../VLCBlib_PIC/mns.c: 600:     if (mode_flags & 1) {
 21496   00B872  0101               	movlb	1	; () banked
 21497   00B874  A165               	btfss	_mode_flags& (0+255),0,b
 21498   00B876  D002               	goto	l20457
 21499                           
 21500                           ; BSR set to: 1
 21501                           ;../../VLCBlib_PIC/mns.c: 601:         flags |= 32;
 21502   00B878  0100               	movlb	0	; () banked
 21503   00B87A  8B91               	bsf	getParameterFlags@flags& (0+255),5,b
 21504   00B87C                     l20457:
 21505                           
 21506                           ;../../VLCBlib_PIC/mns.c: 603:     if (mode_state == MODE_NORMAL) {
 21507   00B87C  0100               	movlb	0	; () banked
 21508   00B87E  05C4               	decf	_mode_state& (0+255),w,b
 21509   00B880  B4D8               	btfsc	status,2,c
 21510                           
 21511                           ; BSR set to: 0
 21512                           ;../../VLCBlib_PIC/mns.c: 604:         flags |= 4;
 21513   00B882  8591               	bsf	getParameterFlags@flags& (0+255),2,b
 21514                           
 21515                           ; BSR set to: 0
 21516                           ;../../VLCBlib_PIC/mns.c: 607:     flags |= 64;
 21517                           
 21518                           ;../../VLCBlib_PIC/mns.c: 605:     }
 21519   00B884  8D91               	bsf	getParameterFlags@flags& (0+255),6,b
 21520                           
 21521                           ; BSR set to: 0
 21522                           ;../../VLCBlib_PIC/mns.c: 609:     return flags;
 21523   00B886  5191               	movf	getParameterFlags@flags& (0+255),w,b
 21524                           
 21525                           ; BSR set to: 0
 21526   00B888  0012               	return		;funcret
 21527   00B88A                     __end_of_getParameterFlags:
 21528                           	callstack 0
 21529                           
 21530 ;; *************** function _mnsPoll *****************
 21531 ;; Defined at:
 21532 ;;		line 628 in file "../../VLCBlib_PIC/mns.c"
 21533 ;; Parameters:    Size  Location     Type
 21534 ;;		None
 21535 ;; Auto vars:     Size  Location     Type
 21536 ;;		None
 21537 ;; Return value:  Size  Location     Type
 21538 ;;                  1    wreg      void 
 21539 ;; Registers used:
 21540 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 21541 ;; Tracked objects:
 21542 ;;		On entry : 0/0
 21543 ;;		On exit  : 0/0
 21544 ;;		Unchanged: 0/0
 21545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21548 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21549 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21550 ;;Total ram usage:        4 bytes
 21551 ;; Hardware stack levels used: 1
 21552 ;; Hardware stack levels required when called: 18
 21553 ;; This function calls:
 21554 ;;		_sendMessage2
 21555 ;;		_sendMessage5
 21556 ;;		_setLEDsByMode
 21557 ;;		_tickGet
 21558 ;;		_writeNVM
 21559 ;; This function is called by:
 21560 ;;		_poll
 21561 ;; This function uses a non-reentrant model
 21562 ;;
 21563                           
 21564                           	psect	text74
 21565   00329C                     __ptext74:
 21566                           	callstack 0
 21567   00329C                     _mnsPoll:
 21568                           	callstack 11
 21569                           
 21570                           ;../../VLCBlib_PIC/mns.c: 631:     if (mode_state == MODE_NORMAL) {
 21571                           
 21572                           ; BSR set to: 0
 21573                           ;incstack = 0
 21574   00329C  0100               	movlb	0	; () banked
 21575   00329E  05C4               	decf	_mode_state& (0+255),w,b
 21576   0032A0  A4D8               	btfss	status,2,c
 21577   0032A2  D040               	goto	l24201
 21578                           
 21579                           ; BSR set to: 0
 21580                           ;../../VLCBlib_PIC/mns.c: 632:         if ((tickGet() - heartbeatTimer.val) > 5*62500) {
 21581   0032A4  EC45  F05C         	call	_tickGet	;wreg free
 21582   0032A8  0101               	movlb	1	; () banked
 21583   0032AA  5150               	movf	_heartbeatTimer& (0+255),w,b
 21584   0032AC  0100               	movlb	0	; () banked
 21585   0032AE  5D8D               	subwf	?_tickGet& (0+255),w,b
 21586   0032B0  0101               	movlb	1	; () banked
 21587   0032B2  6FCB               	movwf	??_mnsPoll& (0+255),b
 21588   0032B4  5151               	movf	(_heartbeatTimer+1)& (0+255),w,b
 21589   0032B6  0100               	movlb	0	; () banked
 21590   0032B8  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21591   0032BA  0101               	movlb	1	; () banked
 21592   0032BC  6FCC               	movwf	(??_mnsPoll+1)& (0+255),b
 21593   0032BE  5152               	movf	(_heartbeatTimer+2)& (0+255),w,b
 21594   0032C0  0100               	movlb	0	; () banked
 21595   0032C2  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21596   0032C4  0101               	movlb	1	; () banked
 21597   0032C6  6FCD               	movwf	(??_mnsPoll+2)& (0+255),b
 21598   0032C8  5153               	movf	(_heartbeatTimer+3)& (0+255),w,b
 21599   0032CA  0100               	movlb	0	; () banked
 21600   0032CC  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21601   0032CE  0101               	movlb	1	; () banked
 21602   0032D0  6FCE               	movwf	(??_mnsPoll+3)& (0+255),b
 21603   0032D2  51CE               	movf	(??_mnsPoll+3)& (0+255),w,b
 21604   0032D4  E108               	bnz	u26380
 21605   0032D6  0EB5               	movlw	181
 21606   0032D8  5DCB               	subwf	??_mnsPoll& (0+255),w,b
 21607   0032DA  0EC4               	movlw	196
 21608   0032DC  59CC               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21609   0032DE  0E04               	movlw	4
 21610   0032E0  59CD               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 21611   0032E2  A0D8               	btfss	status,0,c
 21612   0032E4  D01F               	goto	l24201
 21613   0032E6                     u26380:
 21614                           
 21615                           ; BSR set to: 1
 21616                           ;../../VLCBlib_PIC/mns.c: 633:             if (mode_flags & 4) {
 21617   0032E6  A565               	btfss	_mode_flags& (0+255),2,b
 21618   0032E8  D00F               	goto	l24195
 21619                           
 21620                           ; BSR set to: 1
 21621                           ;../../VLCBlib_PIC/mns.c: 634:                 sendMessage5(OPC_HEARTB, nn.bytes.hi,nn.b
      +                          ytes.lo,heartbeatSequence++,mnsDiagnostics[0x01].asBytes.lo,0);
 21622   0032EA  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 21623   0032EE  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 21624   0032F2  C0BF  F1C8         	movff	_heartbeatSequence,sendMessage5@data3
 21625   0032F6  C18E  F1C9         	movff	_mnsDiagnostics+2,sendMessage5@data4
 21626   0032FA  0E00               	movlw	0
 21627   0032FC  6FCA               	movwf	sendMessage5@data5& (0+255),b
 21628   0032FE  0EAB               	movlw	171
 21629   003300  EC47  F061         	call	_sendMessage5
 21630   003304  0100               	movlb	0	; () banked
 21631   003306  2BBF               	incf	_heartbeatSequence& (0+255),f,b
 21632   003308                     l24195:
 21633                           
 21634                           ;../../VLCBlib_PIC/mns.c: 636:             heartbeatTimer.val = tickGet();
 21635   003308  EC45  F05C         	call	_tickGet	;wreg free
 21636   00330C  C08D  F150         	movff	?_tickGet,_heartbeatTimer
 21637   003310  C08E  F151         	movff	?_tickGet+1,_heartbeatTimer+1
 21638   003314  C08F  F152         	movff	?_tickGet+2,_heartbeatTimer+2
 21639   003318  C090  F153         	movff	?_tickGet+3,_heartbeatTimer+3
 21640                           
 21641                           ;../../VLCBlib_PIC/mns.c: 637:             if (mnsDiagnostics[0x01].asBytes.lo > 0) {
 21642   00331C  0101               	movlb	1	; () banked
 21643   00331E  518E               	movf	(_mnsDiagnostics+2)& (0+255),w,b
 21644   003320  A4D8               	btfss	status,2,c
 21645                           
 21646                           ; BSR set to: 1
 21647                           ;../../VLCBlib_PIC/mns.c: 638:                 mnsDiagnostics[0x01].asBytes.lo--;
 21648   003322  078E               	decf	(_mnsDiagnostics+2)& (0+255),f,b
 21649   003324                     l24201:
 21650                           
 21651                           ;../../VLCBlib_PIC/mns.c: 645:     if (mode_flags != last_mode_flags) {
 21652   003324  0100               	movlb	0	; () banked
 21653   003326  51C2               	movf	_last_mode_flags& (0+255),w,b
 21654   003328  0101               	movlb	1	; () banked
 21655   00332A  1965               	xorwf	_mode_flags& (0+255),w,b
 21656   00332C  B4D8               	btfsc	status,2,c
 21657   00332E  D00E               	goto	l24207
 21658                           
 21659                           ; BSR set to: 1
 21660                           ;../../VLCBlib_PIC/mns.c: 646:         writeNVM(EEPROM_NVM_TYPE, 0x3F9, mode_flags);
 21661   003330  0EF9               	movlw	249
 21662   003332  0100               	movlb	0	; () banked
 21663   003334  6FA4               	movwf	writeNVM@index& (0+255),b
 21664   003336  0E03               	movlw	3
 21665   003338  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 21666   00333A  0E00               	movlw	0
 21667   00333C  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 21668   00333E  C165  F0A7         	movff	_mode_flags,writeNVM@value
 21669   003342  0E00               	movlw	0
 21670   003344  ECC1  F05D         	call	_writeNVM
 21671                           
 21672                           ;../../VLCBlib_PIC/mns.c: 647:         last_mode_flags = mode_flags;
 21673   003348  C165  F0C2         	movff	_mode_flags,_last_mode_flags
 21674   00334C                     l24207:
 21675                           
 21676                           ;../../VLCBlib_PIC/mns.c: 649:     if (mode_state != last_mode_state) {
 21677   00334C  0100               	movlb	0	; () banked
 21678   00334E  51C3               	movf	_last_mode_state& (0+255),w,b
 21679   003350  19C4               	xorwf	_mode_state& (0+255),w,b
 21680   003352  B4D8               	btfsc	status,2,c
 21681   003354  D013               	goto	l24217
 21682                           
 21683                           ; BSR set to: 0
 21684                           ;../../VLCBlib_PIC/mns.c: 651:         if ((mode_state == MODE_UNINITIALISED) || (mode_s
      +                          tate == MODE_NORMAL)) {
 21685   003356  29C4               	incf	_mode_state& (0+255),w,b
 21686   003358  B4D8               	btfsc	status,2,c
 21687   00335A  D003               	goto	u26440
 21688                           
 21689                           ; BSR set to: 0
 21690   00335C  05C4               	decf	_mode_state& (0+255),w,b
 21691   00335E  A4D8               	btfss	status,2,c
 21692   003360  D00B               	goto	l24215
 21693   003362                     u26440:
 21694                           
 21695                           ; BSR set to: 0
 21696                           ;../../VLCBlib_PIC/mns.c: 652:             writeNVM(EEPROM_NVM_TYPE, 0x3FB, mode_state);
 21697   003362  0EFB               	movlw	251
 21698   003364  6FA4               	movwf	writeNVM@index& (0+255),b
 21699   003366  0E03               	movlw	3
 21700   003368  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 21701   00336A  0E00               	movlw	0
 21702   00336C  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 21703   00336E  C0C4  F0A7         	movff	_mode_state,writeNVM@value
 21704   003372  0E00               	movlw	0
 21705   003374  ECC1  F05D         	call	_writeNVM
 21706   003378                     l24215:
 21707                           
 21708                           ;../../VLCBlib_PIC/mns.c: 654:         last_mode_state = mode_state;
 21709   003378  C0C4  F0C3         	movff	_mode_state,_last_mode_state
 21710   00337C                     l24217:
 21711                           
 21712                           ;../../VLCBlib_PIC/mns.c: 658:     if ((tickGet() - uptimeTimer.val) > 62500) {
 21713   00337C  EC45  F05C         	call	_tickGet	;wreg free
 21714   003380  0101               	movlb	1	; () banked
 21715   003382  514C               	movf	_uptimeTimer& (0+255),w,b
 21716   003384  0100               	movlb	0	; () banked
 21717   003386  5D8D               	subwf	?_tickGet& (0+255),w,b
 21718   003388  0101               	movlb	1	; () banked
 21719   00338A  6FCB               	movwf	??_mnsPoll& (0+255),b
 21720   00338C  514D               	movf	(_uptimeTimer+1)& (0+255),w,b
 21721   00338E  0100               	movlb	0	; () banked
 21722   003390  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21723   003392  0101               	movlb	1	; () banked
 21724   003394  6FCC               	movwf	(??_mnsPoll+1)& (0+255),b
 21725   003396  514E               	movf	(_uptimeTimer+2)& (0+255),w,b
 21726   003398  0100               	movlb	0	; () banked
 21727   00339A  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21728   00339C  0101               	movlb	1	; () banked
 21729   00339E  6FCD               	movwf	(??_mnsPoll+2)& (0+255),b
 21730   0033A0  514F               	movf	(_uptimeTimer+3)& (0+255),w,b
 21731   0033A2  0100               	movlb	0	; () banked
 21732   0033A4  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21733   0033A6  0101               	movlb	1	; () banked
 21734   0033A8  6FCE               	movwf	(??_mnsPoll+3)& (0+255),b
 21735   0033AA  51CE               	movf	(??_mnsPoll+3)& (0+255),w,b
 21736   0033AC  11CD               	iorwf	(??_mnsPoll+2)& (0+255),w,b
 21737   0033AE  E106               	bnz	u26450
 21738   0033B0  0E25               	movlw	37
 21739   0033B2  5DCB               	subwf	??_mnsPoll& (0+255),w,b
 21740   0033B4  0EF4               	movlw	244
 21741   0033B6  59CC               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21742   0033B8  A0D8               	btfss	status,0,c
 21743   0033BA  D17F               	goto	l24309
 21744   0033BC                     u26450:
 21745                           
 21746                           ; BSR set to: 1
 21747                           ;../../VLCBlib_PIC/mns.c: 659:         uptimeTimer.val = tickGet();
 21748   0033BC  EC45  F05C         	call	_tickGet	;wreg free
 21749   0033C0  C08D  F14C         	movff	?_tickGet,_uptimeTimer
 21750   0033C4  C08E  F14D         	movff	?_tickGet+1,_uptimeTimer+1
 21751   0033C8  C08F  F14E         	movff	?_tickGet+2,_uptimeTimer+2
 21752   0033CC  C090  F14F         	movff	?_tickGet+3,_uptimeTimer+3
 21753                           
 21754                           ;../../VLCBlib_PIC/mns.c: 660:         mnsDiagnostics[0x03].asUint++;
 21755   0033D0  0101               	movlb	1	; () banked
 21756   0033D2  4B92               	infsnz	(_mnsDiagnostics+6)& (0+255),f,b
 21757   0033D4  2B93               	incf	(_mnsDiagnostics+7)& (0+255),f,b
 21758                           
 21759                           ; BSR set to: 1
 21760                           ;../../VLCBlib_PIC/mns.c: 661:         if (mnsDiagnostics[0x03].asUint == 0) {
 21761   0033D6  5192               	movf	(_mnsDiagnostics+6)& (0+255),w,b
 21762   0033D8  1193               	iorwf	(_mnsDiagnostics+7)& (0+255),w,b
 21763   0033DA  A4D8               	btfss	status,2,c
 21764   0033DC  D16E               	goto	l24309
 21765                           
 21766                           ; BSR set to: 1
 21767                           ;../../VLCBlib_PIC/mns.c: 662:             mnsDiagnostics[0x02].asUint++;
 21768   0033DE  4B90               	infsnz	(_mnsDiagnostics+4)& (0+255),f,b
 21769   0033E0  2B91               	incf	(_mnsDiagnostics+5)& (0+255),f,b
 21770   0033E2  D16B               	goto	l24309
 21771   0033E4                     l1559:
 21772                           
 21773                           ; BSR set to: 0
 21774                           ;../../VLCBlib_PIC/mns.c: 671:             if ((!(PORTAbits.RA2)) == 0) {
 21775   0033E4  A480               	btfss	128,2,c	;volatile
 21776   0033E6  D00B               	goto	l24229
 21777   0033E8                     u26470:
 21778                           
 21779                           ;../../VLCBlib_PIC/mns.c: 673:                 pbTimer.val = tickGet();
 21780   0033E8  EC45  F05C         	call	_tickGet	;wreg free
 21781   0033EC  C08D  F0AA         	movff	?_tickGet,_pbTimer
 21782   0033F0  C08E  F0AB         	movff	?_tickGet+1,_pbTimer+1
 21783   0033F4  C08F  F0AC         	movff	?_tickGet+2,_pbTimer+2
 21784   0033F8  C090  F0AD         	movff	?_tickGet+3,_pbTimer+3
 21785                           
 21786                           ;../../VLCBlib_PIC/mns.c: 674:             } else {
 21787   0033FC  0012               	return	
 21788   0033FE                     l24229:
 21789                           
 21790                           ; BSR set to: 0
 21791                           ;../../VLCBlib_PIC/mns.c: 676:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 21792   0033FE  EC45  F05C         	call	_tickGet	;wreg free
 21793   003402  0100               	movlb	0	; () banked
 21794   003404  51AA               	movf	_pbTimer& (0+255),w,b
 21795   003406  5D8D               	subwf	?_tickGet& (0+255),w,b
 21796   003408  0101               	movlb	1	; () banked
 21797   00340A  6FCB               	movwf	??_mnsPoll& (0+255),b
 21798   00340C  0100               	movlb	0	; () banked
 21799   00340E  51AB               	movf	(_pbTimer+1)& (0+255),w,b
 21800   003410  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21801   003412  0101               	movlb	1	; () banked
 21802   003414  6FCC               	movwf	(??_mnsPoll+1)& (0+255),b
 21803   003416  0100               	movlb	0	; () banked
 21804   003418  51AC               	movf	(_pbTimer+2)& (0+255),w,b
 21805   00341A  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21806   00341C  0101               	movlb	1	; () banked
 21807   00341E  6FCD               	movwf	(??_mnsPoll+2)& (0+255),b
 21808   003420  0100               	movlb	0	; () banked
 21809   003422  51AD               	movf	(_pbTimer+3)& (0+255),w,b
 21810   003424  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21811   003426  0101               	movlb	1	; () banked
 21812   003428  6FCE               	movwf	(??_mnsPoll+3)& (0+255),b
 21813   00342A  51CE               	movf	(??_mnsPoll+3)& (0+255),w,b
 21814   00342C  E108               	bnz	u26480
 21815   00342E  0E91               	movlw	145
 21816   003430  5DCB               	subwf	??_mnsPoll& (0+255),w,b
 21817   003432  0ED0               	movlw	208
 21818   003434  59CC               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21819   003436  0E03               	movlw	3
 21820   003438  59CD               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 21821   00343A  A0D8               	btfss	status,0,c
 21822   00343C  0012               	return	
 21823   00343E                     u26480:
 21824                           
 21825                           ; BSR set to: 1
 21826                           ;../../VLCBlib_PIC/mns.c: 678:                     mode_state = 0xFD;
 21827   00343E  0EFD               	movlw	253
 21828   003440  0100               	movlb	0	; () banked
 21829   003442  6FC4               	movwf	_mode_state& (0+255),b
 21830                           
 21831                           ; BSR set to: 0
 21832                           ;../../VLCBlib_PIC/mns.c: 679:                     setupModePreviousMode = MODE_UNINITIA
      +                          LISED;
 21833   003444  69C1               	setf	_setupModePreviousMode& (0+255),b
 21834                           
 21835                           ; BSR set to: 0
 21836                           ;../../VLCBlib_PIC/mns.c: 680:                     setLEDsByMode();
 21837   003446  ECB6  F060         	call	_setLEDsByMode	;wreg free
 21838   00344A  0012               	return	
 21839   00344C                     l1564:
 21840                           
 21841                           ; BSR set to: 0
 21842                           ;../../VLCBlib_PIC/mns.c: 685:             if ((!(PORTAbits.RA2)) == 0) {
 21843   00344C  A480               	btfss	128,2,c	;volatile
 21844   00344E  D7CC               	goto	u26470
 21845                           
 21846                           ; BSR set to: 0
 21847                           ;../../VLCBlib_PIC/mns.c: 689:                 mode_state = MODE_SETUP;
 21848   003450  0E00               	movlw	0
 21849   003452  6FC4               	movwf	_mode_state& (0+255),b
 21850                           
 21851                           ; BSR set to: 0
 21852                           ;../../VLCBlib_PIC/mns.c: 690:                 setupModePreviousMode = MODE_UNINITIALISE
      +                          D;
 21853   003454  69C1               	setf	_setupModePreviousMode& (0+255),b
 21854                           
 21855                           ; BSR set to: 0
 21856                           ;../../VLCBlib_PIC/mns.c: 691:                 pbTimer.val = tickGet();
 21857   003456  EC45  F05C         	call	_tickGet	;wreg free
 21858   00345A  C08D  F0AA         	movff	?_tickGet,_pbTimer
 21859   00345E  C08E  F0AB         	movff	?_tickGet+1,_pbTimer+1
 21860   003462  C08F  F0AC         	movff	?_tickGet+2,_pbTimer+2
 21861   003466  C090  F0AD         	movff	?_tickGet+3,_pbTimer+3
 21862                           
 21863                           ;../../VLCBlib_PIC/mns.c: 693:                 sendMessage2(OPC_RQNN, nn.bytes.hi, nn.by
      +                          tes.lo);
 21864   00346A  C0B5  F0A7         	movff	_nn+1,sendMessage2@data1
 21865   00346E  C0B4  F0A8         	movff	_nn,sendMessage2@data2
 21866   003472  0E50               	movlw	80
 21867   003474  EC17  F061         	call	_sendMessage2
 21868                           
 21869                           ;../../VLCBlib_PIC/mns.c: 694:                 setLEDsByMode();
 21870   003478  ECB6  F060         	call	_setLEDsByMode	;wreg free
 21871   00347C  D7B5               	goto	u26470
 21872   00347E                     l1566:
 21873                           
 21874                           ; BSR set to: 0
 21875                           ;../../VLCBlib_PIC/mns.c: 699:             if ((!(PORTAbits.RA2)) == 0) {
 21876   00347E  A480               	btfss	128,2,c	;volatile
 21877   003480  D087               	goto	l24273
 21878                           
 21879                           ; BSR set to: 0
 21880                           ;../../VLCBlib_PIC/mns.c: 702:                 if (((tickGet() - pbTimer.val) > (62500/1
      +                          0)) && ((tickGet() - pbTimer.val) < 2*62500)) {
 21881   003482  EC45  F05C         	call	_tickGet	;wreg free
 21882   003486  0100               	movlb	0	; () banked
 21883   003488  51AA               	movf	_pbTimer& (0+255),w,b
 21884   00348A  5D8D               	subwf	?_tickGet& (0+255),w,b
 21885   00348C  0101               	movlb	1	; () banked
 21886   00348E  6FCB               	movwf	??_mnsPoll& (0+255),b
 21887   003490  0100               	movlb	0	; () banked
 21888   003492  51AB               	movf	(_pbTimer+1)& (0+255),w,b
 21889   003494  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21890   003496  0101               	movlb	1	; () banked
 21891   003498  6FCC               	movwf	(??_mnsPoll+1)& (0+255),b
 21892   00349A  0100               	movlb	0	; () banked
 21893   00349C  51AC               	movf	(_pbTimer+2)& (0+255),w,b
 21894   00349E  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21895   0034A0  0101               	movlb	1	; () banked
 21896   0034A2  6FCD               	movwf	(??_mnsPoll+2)& (0+255),b
 21897   0034A4  0100               	movlb	0	; () banked
 21898   0034A6  51AD               	movf	(_pbTimer+3)& (0+255),w,b
 21899   0034A8  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21900   0034AA  0101               	movlb	1	; () banked
 21901   0034AC  6FCE               	movwf	(??_mnsPoll+3)& (0+255),b
 21902   0034AE  51CE               	movf	(??_mnsPoll+3)& (0+255),w,b
 21903   0034B0  11CD               	iorwf	(??_mnsPoll+2)& (0+255),w,b
 21904   0034B2  E106               	bnz	u26510
 21905   0034B4  0E6B               	movlw	107
 21906   0034B6  5DCB               	subwf	??_mnsPoll& (0+255),w,b
 21907   0034B8  0E18               	movlw	24
 21908   0034BA  59CC               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21909   0034BC  A0D8               	btfss	status,0,c
 21910   0034BE  D036               	goto	l24265
 21911   0034C0                     u26510:
 21912                           
 21913                           ; BSR set to: 1
 21914   0034C0  EC45  F05C         	call	_tickGet	;wreg free
 21915   0034C4  0100               	movlb	0	; () banked
 21916   0034C6  51AA               	movf	_pbTimer& (0+255),w,b
 21917   0034C8  5D8D               	subwf	?_tickGet& (0+255),w,b
 21918   0034CA  0101               	movlb	1	; () banked
 21919   0034CC  6FCB               	movwf	??_mnsPoll& (0+255),b
 21920   0034CE  0100               	movlb	0	; () banked
 21921   0034D0  51AB               	movf	(_pbTimer+1)& (0+255),w,b
 21922   0034D2  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21923   0034D4  0101               	movlb	1	; () banked
 21924   0034D6  6FCC               	movwf	(??_mnsPoll+1)& (0+255),b
 21925   0034D8  0100               	movlb	0	; () banked
 21926   0034DA  51AC               	movf	(_pbTimer+2)& (0+255),w,b
 21927   0034DC  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21928   0034DE  0101               	movlb	1	; () banked
 21929   0034E0  6FCD               	movwf	(??_mnsPoll+2)& (0+255),b
 21930   0034E2  0100               	movlb	0	; () banked
 21931   0034E4  51AD               	movf	(_pbTimer+3)& (0+255),w,b
 21932   0034E6  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21933   0034E8  0101               	movlb	1	; () banked
 21934   0034EA  6FCE               	movwf	(??_mnsPoll+3)& (0+255),b
 21935   0034EC  51CE               	movf	(??_mnsPoll+3)& (0+255),w,b
 21936   0034EE  E11E               	bnz	l24265
 21937   0034F0  0E48               	movlw	72
 21938   0034F2  5DCB               	subwf	??_mnsPoll& (0+255),w,b
 21939   0034F4  0EE8               	movlw	232
 21940   0034F6  59CC               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21941   0034F8  0E01               	movlw	1
 21942   0034FA  59CD               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 21943   0034FC  B0D8               	btfsc	status,0,c
 21944   0034FE  D016               	goto	l24265
 21945                           
 21946                           ; BSR set to: 1
 21947                           ;../../VLCBlib_PIC/mns.c: 704:                     mode_state = setupModePreviousMode;
 21948   003500  C0C1  F0C4         	movff	_setupModePreviousMode,_mode_state
 21949                           
 21950                           ; BSR set to: 1
 21951                           ;../../VLCBlib_PIC/mns.c: 705:                     if (mode_state == MODE_NORMAL) {
 21952   003504  0100               	movlb	0	; () banked
 21953   003506  05C4               	decf	_mode_state& (0+255),w,b
 21954   003508  A4D8               	btfss	status,2,c
 21955   00350A  D00E               	goto	l24263
 21956                           
 21957                           ; BSR set to: 0
 21958                           ;../../VLCBlib_PIC/mns.c: 707:                         nn.word = previousNN.word;
 21959   00350C  C160  F0B4         	movff	_previousNN,_nn
 21960   003510  C161  F0B5         	movff	_previousNN+1,_nn+1
 21961                           
 21962                           ; BSR set to: 0
 21963                           ;../../VLCBlib_PIC/mns.c: 708:                         sendMessage2(OPC_NNACK, nn.bytes.
      +                          hi, nn.bytes.lo);
 21964   003514  C0B5  F0A7         	movff	_nn+1,sendMessage2@data1
 21965   003518  C0B4  F0A8         	movff	_nn,sendMessage2@data2
 21966   00351C  0E52               	movlw	82
 21967   00351E  EC17  F061         	call	_sendMessage2
 21968                           
 21969                           ;../../VLCBlib_PIC/mns.c: 710:                         mnsDiagnostics[0x05].asUint++;
 21970   003522  0101               	movlb	1	; () banked
 21971   003524  4B96               	infsnz	(_mnsDiagnostics+10)& (0+255),f,b
 21972   003526  2B97               	incf	(_mnsDiagnostics+11)& (0+255),f,b
 21973   003528                     l24263:
 21974                           
 21975                           ;../../VLCBlib_PIC/mns.c: 713:                     setLEDsByMode();
 21976   003528  ECB6  F060         	call	_setLEDsByMode	;wreg free
 21977   00352C                     l24265:
 21978                           
 21979                           ;../../VLCBlib_PIC/mns.c: 715:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 21980   00352C  EC45  F05C         	call	_tickGet	;wreg free
 21981   003530  0100               	movlb	0	; () banked
 21982   003532  51AA               	movf	_pbTimer& (0+255),w,b
 21983   003534  5D8D               	subwf	?_tickGet& (0+255),w,b
 21984   003536  0101               	movlb	1	; () banked
 21985   003538  6FCB               	movwf	??_mnsPoll& (0+255),b
 21986   00353A  0100               	movlb	0	; () banked
 21987   00353C  51AB               	movf	(_pbTimer+1)& (0+255),w,b
 21988   00353E  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21989   003540  0101               	movlb	1	; () banked
 21990   003542  6FCC               	movwf	(??_mnsPoll+1)& (0+255),b
 21991   003544  0100               	movlb	0	; () banked
 21992   003546  51AC               	movf	(_pbTimer+2)& (0+255),w,b
 21993   003548  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21994   00354A  0101               	movlb	1	; () banked
 21995   00354C  6FCD               	movwf	(??_mnsPoll+2)& (0+255),b
 21996   00354E  0100               	movlb	0	; () banked
 21997   003550  51AD               	movf	(_pbTimer+3)& (0+255),w,b
 21998   003552  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21999   003554  0101               	movlb	1	; () banked
 22000   003556  6FCE               	movwf	(??_mnsPoll+3)& (0+255),b
 22001   003558  51CE               	movf	(??_mnsPoll+3)& (0+255),w,b
 22002   00355A  E108               	bnz	u26540
 22003   00355C  0E91               	movlw	145
 22004   00355E  5DCB               	subwf	??_mnsPoll& (0+255),w,b
 22005   003560  0ED0               	movlw	208
 22006   003562  59CC               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 22007   003564  0E03               	movlw	3
 22008   003566  59CD               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 22009   003568  A0D8               	btfss	status,0,c
 22010   00356A  D004               	goto	l1570
 22011   00356C                     u26540:
 22012                           
 22013                           ; BSR set to: 1
 22014                           ;../../VLCBlib_PIC/mns.c: 716:                     mode_state = MODE_UNINITIALISED;
 22015   00356C  0100               	movlb	0	; () banked
 22016   00356E  69C4               	setf	_mode_state& (0+255),b
 22017   003570                     l24269:
 22018                           
 22019                           ;../../VLCBlib_PIC/mns.c: 717:                     setLEDsByMode();
 22020   003570  ECB6  F060         	call	_setLEDsByMode	;wreg free
 22021   003574                     l1570:
 22022                           
 22023                           ;../../VLCBlib_PIC/mns.c: 719:                 pbTimer.val = tickGet();
 22024   003574  EC45  F05C         	call	_tickGet	;wreg free
 22025   003578  C08D  F0AA         	movff	?_tickGet,_pbTimer
 22026   00357C  C08E  F0AB         	movff	?_tickGet+1,_pbTimer+1
 22027   003580  C08F  F0AC         	movff	?_tickGet+2,_pbTimer+2
 22028   003584  C090  F0AD         	movff	?_tickGet+3,_pbTimer+3
 22029                           
 22030                           ;../../VLCBlib_PIC/mns.c: 720:                 pbWasPushed = FALSE;
 22031   003588  0E00               	movlw	0
 22032   00358A  0100               	movlb	0	; () banked
 22033   00358C  6FC0               	movwf	_pbWasPushed& (0+255),b
 22034                           
 22035                           ;../../VLCBlib_PIC/mns.c: 721:             } else {
 22036   00358E  0012               	return	
 22037   003590                     l24273:
 22038                           
 22039                           ; BSR set to: 0
 22040                           ;../../VLCBlib_PIC/mns.c: 722:                 pbWasPushed = TRUE;
 22041   003590  0E01               	movlw	1
 22042   003592  6FC0               	movwf	_pbWasPushed& (0+255),b
 22043   003594  0012               	return	
 22044   003596                     l1572:
 22045                           
 22046                           ; BSR set to: 0
 22047                           ;../../VLCBlib_PIC/mns.c: 727:             if ((!(PORTAbits.RA2)) == 0) {
 22048   003596  A480               	btfss	128,2,c	;volatile
 22049   003598  D7FB               	goto	l24273
 22050                           
 22051                           ; BSR set to: 0
 22052                           ;../../VLCBlib_PIC/mns.c: 729:                 if (pbWasPushed && ((tickGet() - pbTimer.
      +                          val) > (62500/10)) && ((tickGet() - pbTimer.val) < 2*62500)) {
 22053   00359A  51C0               	movf	_pbWasPushed& (0+255),w,b
 22054   00359C  B4D8               	btfsc	status,2,c
 22055   00359E  D055               	goto	l24289
 22056                           
 22057                           ; BSR set to: 0
 22058   0035A0  EC45  F05C         	call	_tickGet	;wreg free
 22059   0035A4  0100               	movlb	0	; () banked
 22060   0035A6  51AA               	movf	_pbTimer& (0+255),w,b
 22061   0035A8  5D8D               	subwf	?_tickGet& (0+255),w,b
 22062   0035AA  0101               	movlb	1	; () banked
 22063   0035AC  6FCB               	movwf	??_mnsPoll& (0+255),b
 22064   0035AE  0100               	movlb	0	; () banked
 22065   0035B0  51AB               	movf	(_pbTimer+1)& (0+255),w,b
 22066   0035B2  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 22067   0035B4  0101               	movlb	1	; () banked
 22068   0035B6  6FCC               	movwf	(??_mnsPoll+1)& (0+255),b
 22069   0035B8  0100               	movlb	0	; () banked
 22070   0035BA  51AC               	movf	(_pbTimer+2)& (0+255),w,b
 22071   0035BC  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 22072   0035BE  0101               	movlb	1	; () banked
 22073   0035C0  6FCD               	movwf	(??_mnsPoll+2)& (0+255),b
 22074   0035C2  0100               	movlb	0	; () banked
 22075   0035C4  51AD               	movf	(_pbTimer+3)& (0+255),w,b
 22076   0035C6  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 22077   0035C8  0101               	movlb	1	; () banked
 22078   0035CA  6FCE               	movwf	(??_mnsPoll+3)& (0+255),b
 22079   0035CC  51CE               	movf	(??_mnsPoll+3)& (0+255),w,b
 22080   0035CE  11CD               	iorwf	(??_mnsPoll+2)& (0+255),w,b
 22081   0035D0  E106               	bnz	u26570
 22082   0035D2  0E6B               	movlw	107
 22083   0035D4  5DCB               	subwf	??_mnsPoll& (0+255),w,b
 22084   0035D6  0E18               	movlw	24
 22085   0035D8  59CC               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 22086   0035DA  A0D8               	btfss	status,0,c
 22087   0035DC  D036               	goto	l24289
 22088   0035DE                     u26570:
 22089                           
 22090                           ; BSR set to: 1
 22091   0035DE  EC45  F05C         	call	_tickGet	;wreg free
 22092   0035E2  0100               	movlb	0	; () banked
 22093   0035E4  51AA               	movf	_pbTimer& (0+255),w,b
 22094   0035E6  5D8D               	subwf	?_tickGet& (0+255),w,b
 22095   0035E8  0101               	movlb	1	; () banked
 22096   0035EA  6FCB               	movwf	??_mnsPoll& (0+255),b
 22097   0035EC  0100               	movlb	0	; () banked
 22098   0035EE  51AB               	movf	(_pbTimer+1)& (0+255),w,b
 22099   0035F0  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 22100   0035F2  0101               	movlb	1	; () banked
 22101   0035F4  6FCC               	movwf	(??_mnsPoll+1)& (0+255),b
 22102   0035F6  0100               	movlb	0	; () banked
 22103   0035F8  51AC               	movf	(_pbTimer+2)& (0+255),w,b
 22104   0035FA  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 22105   0035FC  0101               	movlb	1	; () banked
 22106   0035FE  6FCD               	movwf	(??_mnsPoll+2)& (0+255),b
 22107   003600  0100               	movlb	0	; () banked
 22108   003602  51AD               	movf	(_pbTimer+3)& (0+255),w,b
 22109   003604  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 22110   003606  0101               	movlb	1	; () banked
 22111   003608  6FCE               	movwf	(??_mnsPoll+3)& (0+255),b
 22112   00360A  51CE               	movf	(??_mnsPoll+3)& (0+255),w,b
 22113   00360C  E11E               	bnz	l24289
 22114   00360E  0E48               	movlw	72
 22115   003610  5DCB               	subwf	??_mnsPoll& (0+255),w,b
 22116   003612  0EE8               	movlw	232
 22117   003614  59CC               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 22118   003616  0E01               	movlw	1
 22119   003618  59CD               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 22120   00361A  B0D8               	btfsc	status,0,c
 22121   00361C  D016               	goto	l24289
 22122                           
 22123                           ; BSR set to: 1
 22124                           ;../../VLCBlib_PIC/mns.c: 731:                     previousNN.word = nn.word;
 22125   00361E  C0B4  F160         	movff	_nn,_previousNN
 22126   003622  C0B5  F161         	movff	_nn+1,_previousNN+1
 22127                           
 22128                           ; BSR set to: 1
 22129                           ;../../VLCBlib_PIC/mns.c: 732:                     nn.bytes.lo = nn.bytes.hi = 0;
 22130   003626  0E00               	movlw	0
 22131   003628  0100               	movlb	0	; () banked
 22132   00362A  6FB5               	movwf	(_nn+1)& (0+255),b
 22133   00362C  C0B5  F0B4         	movff	_nn+1,_nn
 22134                           
 22135                           ;../../VLCBlib_PIC/mns.c: 734:                     mode_state = MODE_SETUP;
 22136   003630  0E00               	movlw	0
 22137   003632  6FC4               	movwf	_mode_state& (0+255),b
 22138                           
 22139                           ;../../VLCBlib_PIC/mns.c: 735:                     setupModePreviousMode = MODE_NORMAL;
 22140   003634  0E01               	movlw	1
 22141   003636  6FC1               	movwf	_setupModePreviousMode& (0+255),b
 22142                           
 22143                           ; BSR set to: 0
 22144                           ;../../VLCBlib_PIC/mns.c: 737:                     sendMessage2(OPC_RQNN, previousNN.byt
      +                          es.hi, previousNN.bytes.lo);
 22145   003638  C161  F0A7         	movff	_previousNN+1,sendMessage2@data1
 22146   00363C  C160  F0A8         	movff	_previousNN,sendMessage2@data2
 22147   003640  0E50               	movlw	80
 22148   003642  EC17  F061         	call	_sendMessage2
 22149                           
 22150                           ;../../VLCBlib_PIC/mns.c: 738:                     setLEDsByMode();
 22151   003646  ECB6  F060         	call	_setLEDsByMode	;wreg free
 22152   00364A                     l24289:
 22153                           
 22154                           ;../../VLCBlib_PIC/mns.c: 740:                 if (pbWasPushed &&((tickGet() - pbTimer.v
      +                          al) >= 4*62500)) {
 22155   00364A  0100               	movlb	0	; () banked
 22156   00364C  51C0               	movf	_pbWasPushed& (0+255),w,b
 22157   00364E  B4D8               	btfsc	status,2,c
 22158   003650  D791               	goto	l1570
 22159                           
 22160                           ; BSR set to: 0
 22161   003652  EC45  F05C         	call	_tickGet	;wreg free
 22162   003656  0100               	movlb	0	; () banked
 22163   003658  51AA               	movf	_pbTimer& (0+255),w,b
 22164   00365A  5D8D               	subwf	?_tickGet& (0+255),w,b
 22165   00365C  0101               	movlb	1	; () banked
 22166   00365E  6FCB               	movwf	??_mnsPoll& (0+255),b
 22167   003660  0100               	movlb	0	; () banked
 22168   003662  51AB               	movf	(_pbTimer+1)& (0+255),w,b
 22169   003664  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 22170   003666  0101               	movlb	1	; () banked
 22171   003668  6FCC               	movwf	(??_mnsPoll+1)& (0+255),b
 22172   00366A  0100               	movlb	0	; () banked
 22173   00366C  51AC               	movf	(_pbTimer+2)& (0+255),w,b
 22174   00366E  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 22175   003670  0101               	movlb	1	; () banked
 22176   003672  6FCD               	movwf	(??_mnsPoll+2)& (0+255),b
 22177   003674  0100               	movlb	0	; () banked
 22178   003676  51AD               	movf	(_pbTimer+3)& (0+255),w,b
 22179   003678  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 22180   00367A  0101               	movlb	1	; () banked
 22181   00367C  6FCE               	movwf	(??_mnsPoll+3)& (0+255),b
 22182   00367E  51CE               	movf	(??_mnsPoll+3)& (0+255),w,b
 22183   003680  E108               	bnz	u26600
 22184   003682  0E90               	movlw	144
 22185   003684  5DCB               	subwf	??_mnsPoll& (0+255),w,b
 22186   003686  0ED0               	movlw	208
 22187   003688  59CC               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 22188   00368A  0E03               	movlw	3
 22189   00368C  59CD               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 22190   00368E  A0D8               	btfss	status,0,c
 22191   003690  D771               	goto	l1570
 22192   003692                     u26600:
 22193                           
 22194                           ; BSR set to: 1
 22195                           ;../../VLCBlib_PIC/mns.c: 742:                     previousNN.word = nn.word;
 22196   003692  C0B4  F160         	movff	_nn,_previousNN
 22197   003696  C0B5  F161         	movff	_nn+1,_previousNN+1
 22198                           
 22199                           ; BSR set to: 1
 22200                           ;../../VLCBlib_PIC/mns.c: 743:                     nn.bytes.lo = nn.bytes.hi = 0;
 22201   00369A  0E00               	movlw	0
 22202   00369C  0100               	movlb	0	; () banked
 22203   00369E  6FB5               	movwf	(_nn+1)& (0+255),b
 22204   0036A0  C0B5  F0B4         	movff	_nn+1,_nn
 22205                           
 22206                           ; BSR set to: 0
 22207                           ;../../VLCBlib_PIC/mns.c: 745:                     mode_state = MODE_UNINITIALISED;
 22208   0036A4  69C4               	setf	_mode_state& (0+255),b
 22209                           
 22210                           ;../../VLCBlib_PIC/mns.c: 746:                     setupModePreviousMode = MODE_NORMAL;
 22211   0036A6  0E01               	movlw	1
 22212   0036A8  6FC1               	movwf	_setupModePreviousMode& (0+255),b
 22213                           
 22214                           ; BSR set to: 0
 22215                           ;../../VLCBlib_PIC/mns.c: 748:                     sendMessage2(OPC_NNREL, previousNN.by
      +                          tes.hi, previousNN.bytes.lo);
 22216   0036AA  C161  F0A7         	movff	_previousNN+1,sendMessage2@data1
 22217   0036AE  C160  F0A8         	movff	_previousNN,sendMessage2@data2
 22218   0036B2  0E51               	movlw	81
 22219   0036B4  EC17  F061         	call	_sendMessage2
 22220   0036B8  D75B               	goto	l24269
 22221   0036BA                     l24309:
 22222                           
 22223                           ; BSR set to: 1
 22224   0036BA  0100               	movlb	0	; () banked
 22225   0036BC  51C4               	movf	_mode_state& (0+255),w,b
 22226                           
 22227                           ; Switch size 1, requested type "simple"
 22228                           ; Number of cases is 3, Range of values is 0 to 255
 22229                           ; switch strategies available:
 22230                           ; Name         Instructions Cycles
 22231                           ; simple_byte           10     6 (average)
 22232                           ;	Chosen strategy is simple_byte
 22233   0036BE  0A00               	xorlw	0	; case 0
 22234   0036C0  B4D8               	btfsc	status,2,c
 22235   0036C2  D6DD               	goto	l1566
 22236   0036C4  0AFD               	xorlw	253	; case 253
 22237   0036C6  B4D8               	btfsc	status,2,c
 22238   0036C8  D6C1               	goto	l1564
 22239   0036CA  0A02               	xorlw	2	; case 255
 22240   0036CC  B4D8               	btfsc	status,2,c
 22241   0036CE  D68A               	goto	l1559
 22242   0036D0  D762               	goto	l1572
 22243   0036D2                     __end_of_mnsPoll:
 22244                           	callstack 0
 22245                           
 22246 ;; *************** function _setLEDsByMode *****************
 22247 ;; Defined at:
 22248 ;;		line 796 in file "../../VLCBlib_PIC/mns.c"
 22249 ;; Parameters:    Size  Location     Type
 22250 ;;		None
 22251 ;; Auto vars:     Size  Location     Type
 22252 ;;		None
 22253 ;; Return value:  Size  Location     Type
 22254 ;;                  1    wreg      void 
 22255 ;; Registers used:
 22256 ;;		wreg, status,2, status,0, cstack
 22257 ;; Tracked objects:
 22258 ;;		On entry : 0/0
 22259 ;;		On exit  : 0/0
 22260 ;;		Unchanged: 0/0
 22261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22266 ;;Total ram usage:        0 bytes
 22267 ;; Hardware stack levels used: 1
 22268 ;; Hardware stack levels required when called: 13
 22269 ;; This function calls:
 22270 ;;		_showStatus
 22271 ;; This function is called by:
 22272 ;;		_mnsPowerUp
 22273 ;;		_mnsProcessMessage
 22274 ;;		_mnsPoll
 22275 ;; This function uses a non-reentrant model
 22276 ;;
 22277                           
 22278                           	psect	text75
 22279   00C16C                     __ptext75:
 22280                           	callstack 0
 22281   00C16C                     _setLEDsByMode:
 22282                           	callstack 15
 22283                           
 22284                           ;../../VLCBlib_PIC/mns.c: 797:        switch (mode_state) {
 22285                           
 22286                           ;incstack = 0
 22287   00C16C  D00C               	goto	l22355
 22288   00C16E                     l22347:
 22289                           
 22290                           ; BSR set to: 0
 22291                           ;../../VLCBlib_PIC/mns.c: 799:             showStatus(STATUS_UNINITIALISED);
 22292   00C16E  0E01               	movlw	1
 22293   00C170  ECB3  F044         	call	_showStatus
 22294                           
 22295                           ;../../VLCBlib_PIC/mns.c: 800:             break;
 22296   00C174  0012               	return	
 22297   00C176                     l22349:
 22298                           
 22299                           ; BSR set to: 0
 22300                           ;../../VLCBlib_PIC/mns.c: 803:             showStatus(STATUS_SETUP);
 22301   00C176  0E02               	movlw	2
 22302   00C178  ECB3  F044         	call	_showStatus
 22303                           
 22304                           ;../../VLCBlib_PIC/mns.c: 804:             break;
 22305   00C17C  0012               	return	
 22306   00C17E                     l22351:
 22307                           
 22308                           ; BSR set to: 0
 22309                           ;../../VLCBlib_PIC/mns.c: 806:             showStatus(STATUS_NORMAL);
 22310   00C17E  0E03               	movlw	3
 22311   00C180  ECB3  F044         	call	_showStatus
 22312                           
 22313                           ;../../VLCBlib_PIC/mns.c: 807:             break;
 22314   00C184  0012               	return	
 22315   00C186                     l22355:
 22316   00C186  0100               	movlb	0	; () banked
 22317   00C188  51C4               	movf	_mode_state& (0+255),w,b
 22318                           
 22319                           ; Switch size 1, requested type "simple"
 22320                           ; Number of cases is 3, Range of values is 0 to 255
 22321                           ; switch strategies available:
 22322                           ; Name         Instructions Cycles
 22323                           ; simple_byte           10     6 (average)
 22324                           ;	Chosen strategy is simple_byte
 22325   00C18A  0A00               	xorlw	0	; case 0
 22326   00C18C  B4D8               	btfsc	status,2,c
 22327   00C18E  D7F3               	goto	l22349
 22328   00C190  0AFD               	xorlw	253	; case 253
 22329   00C192  B4D8               	btfsc	status,2,c
 22330   00C194  D7F0               	goto	l22349
 22331   00C196  0A02               	xorlw	2	; case 255
 22332   00C198  B4D8               	btfsc	status,2,c
 22333   00C19A  D7E9               	goto	l22347
 22334   00C19C  D7F0               	goto	l22351
 22335   00C19E                     __end_of_setLEDsByMode:
 22336                           	callstack 0
 22337                           
 22338 ;; *************** function _sendMessage2 *****************
 22339 ;; Defined at:
 22340 ;;		line 1145 in file "../../VLCBlib_PIC/vlcb.c"
 22341 ;; Parameters:    Size  Location     Type
 22342 ;;  opc             1    wreg     enum E12392
 22343 ;;  data1           1   71[BANK0 ] unsigned char 
 22344 ;;  data2           1   72[BANK0 ] unsigned char 
 22345 ;; Auto vars:     Size  Location     Type
 22346 ;;  opc             1   73[BANK0 ] enum E12392
 22347 ;; Return value:  Size  Location     Type
 22348 ;;                  1    wreg      void 
 22349 ;; Registers used:
 22350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 22351 ;; Tracked objects:
 22352 ;;		On entry : 0/0
 22353 ;;		On exit  : 0/0
 22354 ;;		Unchanged: 0/0
 22355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22356 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22357 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22359 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22360 ;;Total ram usage:        3 bytes
 22361 ;; Hardware stack levels used: 1
 22362 ;; Hardware stack levels required when called: 16
 22363 ;; This function calls:
 22364 ;;		_sendMessage
 22365 ;; This function is called by:
 22366 ;;		_mnsProcessMessage
 22367 ;;		_mnsPoll
 22368 ;;		_nvProcessMessage
 22369 ;;		_doNnclr
 22370 ;;		_doEvlrn
 22371 ;;		_doEvuln
 22372 ;; This function uses a non-reentrant model
 22373 ;;
 22374                           
 22375                           	psect	text76
 22376   00C22E                     __ptext76:
 22377                           	callstack 0
 22378   00C22E                     _sendMessage2:
 22379                           	callstack 11
 22380                           
 22381                           ;incstack = 0
 22382                           ;sendMessage2@opc stored from wreg
 22383   00C22E  0100               	movlb	0	; () banked
 22384   00C230  6FA9               	movwf	sendMessage2@opc& (0+255),b
 22385                           
 22386                           ;../../VLCBlib_PIC/vlcb.c: 1146:     sendMessage(opc, 3, data1, data2, 0,0,0,0,0);
 22387   00C232  0E03               	movlw	3
 22388   00C234  0101               	movlb	1	; () banked
 22389   00C236  6FBE               	movwf	sendMessage@len& (0+255),b
 22390   00C238  C0A7  F1BF         	movff	sendMessage2@data1,sendMessage@data1
 22391   00C23C  C0A8  F1C0         	movff	sendMessage2@data2,sendMessage@data2
 22392   00C240  0E00               	movlw	0
 22393   00C242  6FC1               	movwf	sendMessage@data3& (0+255),b
 22394   00C244  0E00               	movlw	0
 22395   00C246  6FC2               	movwf	sendMessage@data4& (0+255),b
 22396   00C248  0E00               	movlw	0
 22397   00C24A  6FC3               	movwf	sendMessage@data5& (0+255),b
 22398   00C24C  0E00               	movlw	0
 22399   00C24E  6FC4               	movwf	sendMessage@data6& (0+255),b
 22400   00C250  0E00               	movlw	0
 22401   00C252  6FC5               	movwf	sendMessage@data7& (0+255),b
 22402   00C254  0100               	movlb	0	; () banked
 22403   00C256  51A9               	movf	sendMessage2@opc& (0+255),w,b
 22404   00C258  EC02  F056         	call	_sendMessage
 22405   00C25C  0012               	return		;funcret
 22406   00C25E                     __end_of_sendMessage2:
 22407                           	callstack 0
 22408                           
 22409 ;; *************** function _setNormalActions *****************
 22410 ;; Defined at:
 22411 ;;		line 519 in file "../event_consumerDualActionQueue.c"
 22412 ;; Parameters:    Size  Location     Type
 22413 ;;		None
 22414 ;; Auto vars:     Size  Location     Type
 22415 ;;		None
 22416 ;; Return value:  Size  Location     Type
 22417 ;;                  1    wreg      void 
 22418 ;; Registers used:
 22419 ;;		wreg, status,2
 22420 ;; Tracked objects:
 22421 ;;		On entry : 0/0
 22422 ;;		On exit  : 0/0
 22423 ;;		Unchanged: 0/0
 22424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22429 ;;Total ram usage:        0 bytes
 22430 ;; Hardware stack levels used: 1
 22431 ;; Hardware stack levels required when called: 12
 22432 ;; This function calls:
 22433 ;;		Nothing
 22434 ;; This function is called by:
 22435 ;;		_consumer2QProcessMessage
 22436 ;; This function uses a non-reentrant model
 22437 ;;
 22438                           
 22439                           	psect	text77
 22440   00C90E                     __ptext77:
 22441                           	callstack 0
 22442   00C90E                     _setNormalActions:
 22443                           	callstack 16
 22444                           
 22445                           ;../event_consumerDualActionQueue.c: 520:     expedited = FALSE;
 22446                           
 22447                           ;incstack = 0
 22448   00C90E  0E00               	movlw	0
 22449   00C910  6E25               	movwf	_expedited^0,c
 22450   00C912  0012               	return		;funcret
 22451   00C914                     __end_of_setNormalActions:
 22452                           	callstack 0
 22453                           
 22454 ;; *************** function _setExpeditedActions *****************
 22455 ;; Defined at:
 22456 ;;		line 512 in file "../event_consumerDualActionQueue.c"
 22457 ;; Parameters:    Size  Location     Type
 22458 ;;		None
 22459 ;; Auto vars:     Size  Location     Type
 22460 ;;		None
 22461 ;; Return value:  Size  Location     Type
 22462 ;;                  1    wreg      void 
 22463 ;; Registers used:
 22464 ;;		wreg, status,2
 22465 ;; Tracked objects:
 22466 ;;		On entry : 0/0
 22467 ;;		On exit  : 0/0
 22468 ;;		Unchanged: 0/0
 22469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22474 ;;Total ram usage:        0 bytes
 22475 ;; Hardware stack levels used: 1
 22476 ;; Hardware stack levels required when called: 12
 22477 ;; This function calls:
 22478 ;;		Nothing
 22479 ;; This function is called by:
 22480 ;;		_consumer2QProcessMessage
 22481 ;; This function uses a non-reentrant model
 22482 ;;
 22483                           
 22484                           	psect	text78
 22485   00C914                     __ptext78:
 22486                           	callstack 0
 22487   00C914                     _setExpeditedActions:
 22488                           	callstack 16
 22489                           
 22490                           ;../event_consumerDualActionQueue.c: 513:     expedited = TRUE;
 22491                           
 22492                           ;incstack = 0
 22493   00C914  0E01               	movlw	1
 22494   00C916  6E25               	movwf	_expedited^0,c
 22495   00C918  0012               	return		;funcret
 22496   00C91A                     __end_of_setExpeditedActions:
 22497                           	callstack 0
 22498                           
 22499 ;; *************** function _pushTwoAction *****************
 22500 ;; Defined at:
 22501 ;;		line 393 in file "../event_consumerDualActionQueue.c"
 22502 ;; Parameters:    Size  Location     Type
 22503 ;;  a               1    wreg     unsigned char 
 22504 ;; Auto vars:     Size  Location     Type
 22505 ;;  a               1   45[BANK0 ] unsigned char 
 22506 ;; Return value:  Size  Location     Type
 22507 ;;                  1    wreg      enum E12766
 22508 ;; Registers used:
 22509 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22510 ;; Tracked objects:
 22511 ;;		On entry : 0/0
 22512 ;;		On exit  : 0/0
 22513 ;;		Unchanged: 0/0
 22514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22516 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22518 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22519 ;;Total ram usage:        1 bytes
 22520 ;; Hardware stack levels used: 1
 22521 ;; Hardware stack levels required when called: 12
 22522 ;; This function calls:
 22523 ;;		Nothing
 22524 ;; This function is called by:
 22525 ;;		_consumer2QProcessMessage
 22526 ;; This function uses a non-reentrant model
 22527 ;;
 22528                           
 22529                           	psect	text79
 22530   00B6C2                     __ptext79:
 22531                           	callstack 0
 22532   00B6C2                     _pushTwoAction:
 22533                           	callstack 16
 22534                           
 22535                           ;incstack = 0
 22536                           ;pushTwoAction@a stored from wreg
 22537   00B6C2  0100               	movlb	0	; () banked
 22538   00B6C4  6F8D               	movwf	pushTwoAction@a& (0+255),b
 22539                           
 22540                           ;../event_consumerDualActionQueue.c: 394:     if (expedited) {
 22541   00B6C6  5025               	movf	_expedited^0,w,c
 22542   00B6C8  B4D8               	btfsc	status,2,c
 22543   00B6CA  D015               	goto	l21709
 22544                           
 22545                           ;../event_consumerDualActionQueue.c: 395:         if (((expeditedWriteIndex+1)&(8 -1)) =
      +                          = expeditedReadIndex)
 22546   00B6CC  0100               	movlb	0	; () banked
 22547   00B6CE  29CA               	incf	_expeditedWriteIndex& (0+255),w,b
 22548   00B6D0  0B07               	andlw	7
 22549   00B6D2  19CB               	xorwf	_expeditedReadIndex& (0+255),w,b
 22550   00B6D4  B4D8               	btfsc	status,2,c
 22551   00B6D6  0012               	return	
 22552                           
 22553                           ; BSR set to: 0
 22554                           ;../event_consumerDualActionQueue.c: 397:         expeditedQueueBuf[expeditedWriteIndex+
      +                          +] = a;
 22555   00B6D8  0EC4               	movlw	low _expeditedQueueBuf
 22556   00B6DA  25CA               	addwf	_expeditedWriteIndex& (0+255),w,b
 22557   00B6DC  6ED9               	movwf	fsr2l,c
 22558   00B6DE  6ADA               	clrf	fsr2h,c
 22559   00B6E0  0E02               	movlw	high _expeditedQueueBuf
 22560   00B6E2  22DA               	addwfc	fsr2h,f,c
 22561   00B6E4  C08D  FFDF         	movff	pushTwoAction@a,indf2
 22562                           
 22563                           ; BSR set to: 0
 22564   00B6E8  2BCA               	incf	_expeditedWriteIndex& (0+255),f,b
 22565                           
 22566                           ; BSR set to: 0
 22567                           ;../event_consumerDualActionQueue.c: 398:         if (expeditedWriteIndex >= 8) expedite
      +                          dWriteIndex = 0;
 22568   00B6EA  0E07               	movlw	7
 22569   00B6EC  65CA               	cpfsgt	_expeditedWriteIndex& (0+255),b
 22570   00B6EE  0012               	return	
 22571                           
 22572                           ; BSR set to: 0
 22573   00B6F0  0E00               	movlw	0
 22574   00B6F2  6FCA               	movwf	_expeditedWriteIndex& (0+255),b
 22575   00B6F4  0012               	return	
 22576   00B6F6                     l21709:
 22577                           
 22578                           ;../event_consumerDualActionQueue.c: 401:     if (((normalWriteIndex+1)&(64 -1)) == norm
      +                          alReadIndex)
 22579   00B6F6  0100               	movlb	0	; () banked
 22580   00B6F8  29CC               	incf	_normalWriteIndex& (0+255),w,b
 22581   00B6FA  0B3F               	andlw	63
 22582   00B6FC  19CD               	xorwf	_normalReadIndex& (0+255),w,b
 22583   00B6FE  B4D8               	btfsc	status,2,c
 22584   00B700  0012               	return	
 22585                           
 22586                           ; BSR set to: 0
 22587                           ;../event_consumerDualActionQueue.c: 403:     normalQueueBuf[normalWriteIndex++] = a;
 22588   00B702  0E80               	movlw	low _normalQueueBuf
 22589   00B704  25CC               	addwf	_normalWriteIndex& (0+255),w,b
 22590   00B706  6ED9               	movwf	fsr2l,c
 22591   00B708  6ADA               	clrf	fsr2h,c
 22592   00B70A  0E04               	movlw	high _normalQueueBuf
 22593   00B70C  22DA               	addwfc	fsr2h,f,c
 22594   00B70E  C08D  FFDF         	movff	pushTwoAction@a,indf2
 22595                           
 22596                           ; BSR set to: 0
 22597   00B712  2BCC               	incf	_normalWriteIndex& (0+255),f,b
 22598                           
 22599                           ; BSR set to: 0
 22600                           ;../event_consumerDualActionQueue.c: 404:     if (normalWriteIndex >= 64) normalWriteInd
      +                          ex = 0;
 22601   00B714  0E3F               	movlw	63
 22602   00B716  65CC               	cpfsgt	_normalWriteIndex& (0+255),b
 22603   00B718  0012               	return	
 22604                           
 22605                           ; BSR set to: 0
 22606   00B71A  0E00               	movlw	0
 22607   00B71C  6FCC               	movwf	_normalWriteIndex& (0+255),b
 22608                           
 22609                           ; BSR set to: 0
 22610   00B71E  0012               	return		;funcret
 22611   00B720                     __end_of_pushTwoAction:
 22612                           	callstack 0
 22613                           
 22614 ;; *************** function _canReceiveMessage *****************
 22615 ;; Defined at:
 22616 ;;		line 589 in file "../../VLCBlib_PIC/can18_ecan.c"
 22617 ;; Parameters:    Size  Location     Type
 22618 ;;  m               2    9[BANK1 ] PTR struct Message
 22619 ;;		 -> poll@m(9), 
 22620 ;; Auto vars:     Size  Location     Type
 22621 ;;  p               2   16[BANK1 ] PTR unsigned char 
 22622 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 22623 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 22624 ;;		 -> NULL(0), 
 22625 ;;  mp              2   13[BANK1 ] PTR struct Message
 22626 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 22627 ;;  no              1   15[BANK1 ] unsigned char 
 22628 ;;  messageAvail    1   12[BANK1 ] enum E13077
 22629 ;;  incomingCanI    1    0        unsigned char 
 22630 ;; Return value:  Size  Location     Type
 22631 ;;                  1    wreg      enum E13077
 22632 ;; Registers used:
 22633 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22634 ;; Tracked objects:
 22635 ;;		On entry : 0/0
 22636 ;;		On exit  : 0/0
 22637 ;;		Unchanged: 0/0
 22638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22639 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22640 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22641 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22642 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22643 ;;Total ram usage:        9 bytes
 22644 ;; Hardware stack levels used: 1
 22645 ;; Hardware stack levels required when called: 20
 22646 ;; This function calls:
 22647 ;;		_getBufferPointer
 22648 ;;		_getNumRxBuffersInUse
 22649 ;;		_handleSelfEnumeration
 22650 ;;		_memcpy
 22651 ;;		_pop
 22652 ;;		_processEnumeration
 22653 ;; This function is called by:
 22654 ;;		_poll
 22655 ;; This function uses a non-reentrant model
 22656 ;;
 22657                           
 22658                           	psect	text80
 22659   0069F0                     __ptext80:
 22660                           	callstack 0
 22661   0069F0                     _canReceiveMessage:
 22662                           	callstack 9
 22663                           
 22664                           ;../../VLCBlib_PIC/can18_ecan.c: 590:     Message * mp;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          591:     uint8_t * p;;../../VLCBlib_PIC/can18_ecan.c: 592:     MessageReceived messageAv
      +                          ailable;;../../VLCBlib_PIC/can18_ecan.c: 593:     uint8_t incomingCanId;;../../VLCBlib_P
      +                          IC/can18_ecan.c: 595:     uint8_t no;;../../VLCBlib_PIC/can18_ecan.c: 598:     PIE5bits.
      +                          FIFOWMIE = 0;
 22665                           
 22666                           ; BSR set to: 0
 22667                           ;incstack = 0
 22668   0069F0  9076               	bcf	118,0,c	;volatile
 22669                           
 22670                           ;../../VLCBlib_PIC/can18_ecan.c: 599:     processEnumeration();
 22671   0069F2  EC6F  F03C         	call	_processEnumeration	;wreg free
 22672                           
 22673                           ;../../VLCBlib_PIC/can18_ecan.c: 603:     no = getNumRxBuffersInUse();
 22674   0069F6  ECF1  F05F         	call	_getNumRxBuffersInUse	;wreg free
 22675   0069FA  0101               	movlb	1	; () banked
 22676   0069FC  6FCD               	movwf	canReceiveMessage@no& (0+255),b
 22677                           
 22678                           ; BSR set to: 1
 22679                           ;../../VLCBlib_PIC/can18_ecan.c: 604:     if (canDiagnostics[0x12].asUint < no) {
 22680   0069FE  51CD               	movf	canReceiveMessage@no& (0+255),w,b
 22681   006A00  5D8A               	subwf	(_canDiagnostics+36)& (0+255),w,b
 22682   006A02  0E00               	movlw	0
 22683   006A04  598B               	subwfb	(_canDiagnostics+37)& (0+255),w,b
 22684   006A06  B0D8               	btfsc	status,0,c
 22685   006A08  D003               	goto	l24709
 22686                           
 22687                           ; BSR set to: 1
 22688                           ;../../VLCBlib_PIC/can18_ecan.c: 605:         canDiagnostics[0x12].asUint = no;
 22689   006A0A  C1CD  F18A         	movff	canReceiveMessage@no,_canDiagnostics+36
 22690   006A0E  6B8B               	clrf	(_canDiagnostics+37)& (0+255),b
 22691   006A10                     l24709:
 22692                           
 22693                           ; BSR set to: 1
 22694                           ;../../VLCBlib_PIC/can18_ecan.c: 608:     mp = pop(&rxQueue);
 22695   006A10  0E26               	movlw	low _rxQueue
 22696   006A12  0100               	movlb	0	; () banked
 22697   006A14  6F8D               	movwf	pop@q& (0+255),b
 22698   006A16  6B8E               	clrf	(pop@q+1)& (0+255),b
 22699   006A18  EC1E  F04F         	call	_pop	;wreg free
 22700   006A1C  C08D  F1CB         	movff	?_pop,canReceiveMessage@mp
 22701   006A20  C08E  F1CC         	movff	?_pop+1,canReceiveMessage@mp+1
 22702                           
 22703                           ;../../VLCBlib_PIC/can18_ecan.c: 609:     if (mp != ((void*)0)) {
 22704   006A24  0101               	movlb	1	; () banked
 22705   006A26  51CB               	movf	canReceiveMessage@mp& (0+255),w,b
 22706   006A28  11CC               	iorwf	(canReceiveMessage@mp+1)& (0+255),w,b
 22707   006A2A  B4D8               	btfsc	status,2,c
 22708   006A2C  D012               	goto	l2535
 22709                           
 22710                           ; BSR set to: 1
 22711                           ;../../VLCBlib_PIC/can18_ecan.c: 610:         memcpy(m, mp, sizeof(Message));
 22712   006A2E  C1C7  F08D         	movff	canReceiveMessage@m,memcpy@d1
 22713   006A32  C1C8  F08E         	movff	canReceiveMessage@m+1,memcpy@d1+1
 22714   006A36  C1CB  F08F         	movff	canReceiveMessage@mp,memcpy@s1
 22715   006A3A  C1CC  F090         	movff	canReceiveMessage@mp+1,memcpy@s1+1
 22716   006A3E  0E00               	movlw	0
 22717   006A40  0100               	movlb	0	; () banked
 22718   006A42  6F92               	movwf	(memcpy@n+1)& (0+255),b
 22719   006A44  0E09               	movlw	9
 22720   006A46  6F91               	movwf	memcpy@n& (0+255),b
 22721   006A48  EC32  F05F         	call	_memcpy	;wreg free
 22722                           
 22723                           ;../../VLCBlib_PIC/can18_ecan.c: 611:         PIE5bits.FIFOWMIE = 1;
 22724   006A4C  8076               	bsf	118,0,c	;volatile
 22725                           
 22726                           ;../../VLCBlib_PIC/can18_ecan.c: 612:         return RECEIVED;
 22727   006A4E  0E01               	movlw	1
 22728   006A50  0012               	return	
 22729   006A52                     l2535:
 22730                           
 22731                           ; BSR set to: 1
 22732                           ;../../VLCBlib_PIC/can18_ecan.c: 614:         if (COMSTATbits.NOT_FIFOEMPTY) {
 22733   006A52  AE71               	btfss	113,7,c	;volatile
 22734   006A54  D00D               	goto	u27000
 22735                           
 22736                           ; BSR set to: 1
 22737                           ;../../VLCBlib_PIC/can18_ecan.c: 615:             p = getBufferPointer(CANCON & 0x07);
 22738   006A56  506F               	movf	111,w,c	;volatile
 22739   006A58  0B07               	andlw	7
 22740   006A5A  ECF1  F051         	call	_getBufferPointer
 22741   006A5E  C08D  F1CE         	movff	?_getBufferPointer,canReceiveMessage@p
 22742   006A62  C08E  F1CF         	movff	?_getBufferPointer+1,canReceiveMessage@p+1
 22743                           
 22744                           ;../../VLCBlib_PIC/can18_ecan.c: 616:             if (p == ((void*)0)) {
 22745   006A66  0101               	movlb	1	; () banked
 22746   006A68  51CE               	movf	canReceiveMessage@p& (0+255),w,b
 22747   006A6A  11CF               	iorwf	(canReceiveMessage@p+1)& (0+255),w,b
 22748   006A6C  A4D8               	btfss	status,2,c
 22749   006A6E  D003               	goto	l2539
 22750   006A70                     u27000:
 22751                           
 22752                           ; BSR set to: 1
 22753                           ;../../VLCBlib_PIC/can18_ecan.c: 618:                 PIE5bits.FIFOWMIE = 1;
 22754   006A70  8076               	bsf	118,0,c	;volatile
 22755   006A72                     l24729:
 22756                           
 22757                           ; BSR set to: 1
 22758                           ;../../VLCBlib_PIC/can18_ecan.c: 619:                 return NOT_RECEIVED;
 22759   006A72  0E00               	movlw	0
 22760   006A74  0012               	return	
 22761   006A76                     l2539:
 22762                           
 22763                           ; BSR set to: 1
 22764                           ;../../VLCBlib_PIC/can18_ecan.c: 621:             PIR5bits.RXBnIF = 0;
 22765   006A76  9277               	bcf	119,1,c	;volatile
 22766                           
 22767                           ; BSR set to: 1
 22768                           ;../../VLCBlib_PIC/can18_ecan.c: 623:             if (p[2] & 0x08) return NOT_RECEIVED;
 22769   006A78  EE20 F002          	lfsr	2,2
 22770   006A7C  51CE               	movf	canReceiveMessage@p& (0+255),w,b
 22771   006A7E  26D9               	addwf	fsr2l,f,c
 22772   006A80  51CF               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22773   006A82  22DA               	addwfc	fsr2h,f,c
 22774   006A84  B6DF               	btfsc	indf2,3,c
 22775   006A86  D7F5               	goto	l24729
 22776                           
 22777                           ; BSR set to: 1
 22778                           ;../../VLCBlib_PIC/can18_ecan.c: 625:             if (handleSelfEnumeration(p) == RECEIV
      +                          ED) {
 22779   006A88  C1CE  F097         	movff	canReceiveMessage@p,handleSelfEnumeration@p
 22780   006A8C  C1CF  F098         	movff	canReceiveMessage@p+1,handleSelfEnumeration@p+1
 22781   006A90  EC52  F041         	call	_handleSelfEnumeration	;wreg free
 22782   006A94  06E8               	decf	wreg,f,c
 22783   006A96  A4D8               	btfss	status,2,c
 22784   006A98  D08F               	goto	l24767
 22785                           
 22786                           ;../../VLCBlib_PIC/can18_ecan.c: 628:                 canDiagnostics[0x09].asUint++;
 22787   006A9A  0101               	movlb	1	; () banked
 22788   006A9C  4B78               	infsnz	(_canDiagnostics+18)& (0+255),f,b
 22789   006A9E  2B79               	incf	(_canDiagnostics+19)& (0+255),f,b
 22790                           
 22791                           ; BSR set to: 1
 22792                           ;../../VLCBlib_PIC/can18_ecan.c: 633:                     m->opc = p[6];
 22793   006AA0  EE20 F006          	lfsr	2,6
 22794   006AA4  51CE               	movf	canReceiveMessage@p& (0+255),w,b
 22795   006AA6  26D9               	addwf	fsr2l,f,c
 22796   006AA8  51CF               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22797   006AAA  22DA               	addwfc	fsr2h,f,c
 22798   006AAC  EE10 F001          	lfsr	1,1
 22799   006AB0  51C7               	movf	canReceiveMessage@m& (0+255),w,b
 22800   006AB2  26E1               	addwf	fsr1l,f,c
 22801   006AB4  51C8               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22802   006AB6  22E2               	addwfc	fsr1h,f,c
 22803   006AB8  CFDF FFE7          	movff	indf2,indf1
 22804                           
 22805                           ; BSR set to: 1
 22806                           ;../../VLCBlib_PIC/can18_ecan.c: 634:                     m->len = p[5] & 0xF;
 22807   006ABC  EE20 F005          	lfsr	2,5
 22808   006AC0  51CE               	movf	canReceiveMessage@p& (0+255),w,b
 22809   006AC2  26D9               	addwf	fsr2l,f,c
 22810   006AC4  51CF               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22811   006AC6  22DA               	addwfc	fsr2h,f,c
 22812   006AC8  50DF               	movf	indf2,w,c
 22813   006ACA  0B0F               	andlw	15
 22814   006ACC  C1C7  FFD9         	movff	canReceiveMessage@m,fsr2l
 22815   006AD0  C1C8  FFDA         	movff	canReceiveMessage@m+1,fsr2h
 22816   006AD4  6EDF               	movwf	indf2,c
 22817                           
 22818                           ; BSR set to: 1
 22819                           ;../../VLCBlib_PIC/can18_ecan.c: 635:                     if (m->len > 8) {
 22820   006AD6  C1C7  FFD9         	movff	canReceiveMessage@m,fsr2l
 22821   006ADA  C1C8  FFDA         	movff	canReceiveMessage@m+1,fsr2h
 22822   006ADE  0E08               	movlw	8
 22823   006AE0  64DF               	cpfsgt	indf2,c
 22824   006AE2  D006               	goto	l24751
 22825                           
 22826                           ; BSR set to: 1
 22827                           ;../../VLCBlib_PIC/can18_ecan.c: 636:                         m->len = 8;
 22828   006AE4  C1C7  FFD9         	movff	canReceiveMessage@m,fsr2l
 22829   006AE8  C1C8  FFDA         	movff	canReceiveMessage@m+1,fsr2h
 22830   006AEC  0E08               	movlw	8
 22831   006AEE  6EDF               	movwf	indf2,c
 22832   006AF0                     l24751:
 22833                           
 22834                           ; BSR set to: 1
 22835                           ;../../VLCBlib_PIC/can18_ecan.c: 638:                     m->bytes[0] = p[7];
 22836   006AF0  EE20 F007          	lfsr	2,7
 22837   006AF4  51CE               	movf	canReceiveMessage@p& (0+255),w,b
 22838   006AF6  26D9               	addwf	fsr2l,f,c
 22839   006AF8  51CF               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22840   006AFA  22DA               	addwfc	fsr2h,f,c
 22841   006AFC  EE10 F002          	lfsr	1,2
 22842   006B00  51C7               	movf	canReceiveMessage@m& (0+255),w,b
 22843   006B02  26E1               	addwf	fsr1l,f,c
 22844   006B04  51C8               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22845   006B06  22E2               	addwfc	fsr1h,f,c
 22846   006B08  CFDF FFE7          	movff	indf2,indf1
 22847                           
 22848                           ; BSR set to: 1
 22849                           ;../../VLCBlib_PIC/can18_ecan.c: 639:                     m->bytes[1] = p[8];
 22850   006B0C  EE20 F008          	lfsr	2,8
 22851   006B10  51CE               	movf	canReceiveMessage@p& (0+255),w,b
 22852   006B12  26D9               	addwf	fsr2l,f,c
 22853   006B14  51CF               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22854   006B16  22DA               	addwfc	fsr2h,f,c
 22855   006B18  EE10 F003          	lfsr	1,3
 22856   006B1C  51C7               	movf	canReceiveMessage@m& (0+255),w,b
 22857   006B1E  26E1               	addwf	fsr1l,f,c
 22858   006B20  51C8               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22859   006B22  22E2               	addwfc	fsr1h,f,c
 22860   006B24  CFDF FFE7          	movff	indf2,indf1
 22861                           
 22862                           ; BSR set to: 1
 22863                           ;../../VLCBlib_PIC/can18_ecan.c: 640:                     m->bytes[2] = p[9];
 22864   006B28  EE20 F009          	lfsr	2,9
 22865   006B2C  51CE               	movf	canReceiveMessage@p& (0+255),w,b
 22866   006B2E  26D9               	addwf	fsr2l,f,c
 22867   006B30  51CF               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22868   006B32  22DA               	addwfc	fsr2h,f,c
 22869   006B34  EE10 F004          	lfsr	1,4
 22870   006B38  51C7               	movf	canReceiveMessage@m& (0+255),w,b
 22871   006B3A  26E1               	addwf	fsr1l,f,c
 22872   006B3C  51C8               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22873   006B3E  22E2               	addwfc	fsr1h,f,c
 22874   006B40  CFDF FFE7          	movff	indf2,indf1
 22875                           
 22876                           ; BSR set to: 1
 22877                           ;../../VLCBlib_PIC/can18_ecan.c: 641:                     m->bytes[3] = p[10];
 22878   006B44  EE20 F00A          	lfsr	2,10
 22879   006B48  51CE               	movf	canReceiveMessage@p& (0+255),w,b
 22880   006B4A  26D9               	addwf	fsr2l,f,c
 22881   006B4C  51CF               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22882   006B4E  22DA               	addwfc	fsr2h,f,c
 22883   006B50  EE10 F005          	lfsr	1,5
 22884   006B54  51C7               	movf	canReceiveMessage@m& (0+255),w,b
 22885   006B56  26E1               	addwf	fsr1l,f,c
 22886   006B58  51C8               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22887   006B5A  22E2               	addwfc	fsr1h,f,c
 22888   006B5C  CFDF FFE7          	movff	indf2,indf1
 22889                           
 22890                           ; BSR set to: 1
 22891                           ;../../VLCBlib_PIC/can18_ecan.c: 642:                     m->bytes[4] = p[11];
 22892   006B60  EE20 F00B          	lfsr	2,11
 22893   006B64  51CE               	movf	canReceiveMessage@p& (0+255),w,b
 22894   006B66  26D9               	addwf	fsr2l,f,c
 22895   006B68  51CF               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22896   006B6A  22DA               	addwfc	fsr2h,f,c
 22897   006B6C  EE10 F006          	lfsr	1,6
 22898   006B70  51C7               	movf	canReceiveMessage@m& (0+255),w,b
 22899   006B72  26E1               	addwf	fsr1l,f,c
 22900   006B74  51C8               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22901   006B76  22E2               	addwfc	fsr1h,f,c
 22902   006B78  CFDF FFE7          	movff	indf2,indf1
 22903                           
 22904                           ; BSR set to: 1
 22905                           ;../../VLCBlib_PIC/can18_ecan.c: 643:                     m->bytes[5] = p[12];
 22906   006B7C  EE20 F00C          	lfsr	2,12
 22907   006B80  51CE               	movf	canReceiveMessage@p& (0+255),w,b
 22908   006B82  26D9               	addwf	fsr2l,f,c
 22909   006B84  51CF               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22910   006B86  22DA               	addwfc	fsr2h,f,c
 22911   006B88  EE10 F007          	lfsr	1,7
 22912   006B8C  51C7               	movf	canReceiveMessage@m& (0+255),w,b
 22913   006B8E  26E1               	addwf	fsr1l,f,c
 22914   006B90  51C8               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22915   006B92  22E2               	addwfc	fsr1h,f,c
 22916   006B94  CFDF FFE7          	movff	indf2,indf1
 22917                           
 22918                           ; BSR set to: 1
 22919                           ;../../VLCBlib_PIC/can18_ecan.c: 644:                     m->bytes[6] = p[13];
 22920   006B98  EE20 F00D          	lfsr	2,13
 22921   006B9C  51CE               	movf	canReceiveMessage@p& (0+255),w,b
 22922   006B9E  26D9               	addwf	fsr2l,f,c
 22923   006BA0  51CF               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22924   006BA2  22DA               	addwfc	fsr2h,f,c
 22925   006BA4  EE10 F008          	lfsr	1,8
 22926   006BA8  51C7               	movf	canReceiveMessage@m& (0+255),w,b
 22927   006BAA  26E1               	addwf	fsr1l,f,c
 22928   006BAC  51C8               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22929   006BAE  22E2               	addwfc	fsr1h,f,c
 22930   006BB0  CFDF FFE7          	movff	indf2,indf1
 22931                           
 22932                           ; BSR set to: 1
 22933                           ;../../VLCBlib_PIC/can18_ecan.c: 645:                     messageAvailable = RECEIVED;
 22934   006BB4  0E01               	movlw	1
 22935   006BB6  6FCA               	movwf	canReceiveMessage@messageAvailable& (0+255),b
 22936   006BB8                     l24767:
 22937                           
 22938                           ;../../VLCBlib_PIC/can18_ecan.c: 648:             if (PIR5bits.IRXIF) {
 22939   006BB8  AE77               	btfss	119,7,c	;volatile
 22940   006BBA  D004               	goto	l24773
 22941                           
 22942                           ;../../VLCBlib_PIC/can18_ecan.c: 649:                 canDiagnostics[0x01].asUint++;
 22943   006BBC  0101               	movlb	1	; () banked
 22944   006BBE  4B68               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 22945   006BC0  2B69               	incf	(_canDiagnostics+3)& (0+255),f,b
 22946                           
 22947                           ; BSR set to: 1
 22948                           ;../../VLCBlib_PIC/can18_ecan.c: 650:                 PIR5bits.IRXIF = 0;
 22949   006BC2  9E77               	bcf	119,7,c	;volatile
 22950   006BC4                     l24773:
 22951                           
 22952                           ;../../VLCBlib_PIC/can18_ecan.c: 653:             p[0] &= 0x7f;
 22953   006BC4  C1CE  FFD9         	movff	canReceiveMessage@p,fsr2l
 22954   006BC8  C1CF  FFDA         	movff	canReceiveMessage@p+1,fsr2h
 22955   006BCC  0E7F               	movlw	127
 22956   006BCE  16DF               	andwf	indf2,f,c
 22957                           
 22958                           ;../../VLCBlib_PIC/can18_ecan.c: 654:             PIE5bits.FIFOWMIE = 1;
 22959   006BD0  8076               	bsf	118,0,c	;volatile
 22960                           
 22961                           ;../../VLCBlib_PIC/can18_ecan.c: 655:             return messageAvailable;
 22962   006BD2  0101               	movlb	1	; () banked
 22963   006BD4  51CA               	movf	canReceiveMessage@messageAvailable& (0+255),w,b
 22964   006BD6  0012               	return	
 22965   006BD8                     __end_of_canReceiveMessage:
 22966                           	callstack 0
 22967                           
 22968 ;; *************** function _processEnumeration *****************
 22969 ;; Defined at:
 22970 ;;		line 903 in file "../../VLCBlib_PIC/can18_ecan.c"
 22971 ;; Parameters:    Size  Location     Type
 22972 ;;		None
 22973 ;; Auto vars:     Size  Location     Type
 22974 ;;  i               1    8[BANK1 ] unsigned char 
 22975 ;;  newCanId        1    7[BANK1 ] unsigned char 
 22976 ;;  enumResult      1    6[BANK1 ] unsigned char 
 22977 ;; Return value:  Size  Location     Type
 22978 ;;                  1    wreg      void 
 22979 ;; Registers used:
 22980 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22981 ;; Tracked objects:
 22982 ;;		On entry : 0/0
 22983 ;;		On exit  : 0/0
 22984 ;;		Unchanged: 0/0
 22985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22987 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22988 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22989 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22990 ;;Total ram usage:        7 bytes
 22991 ;; Hardware stack levels used: 1
 22992 ;; Hardware stack levels required when called: 19
 22993 ;; This function calls:
 22994 ;;		_setNewCanId
 22995 ;;		_tickGet
 22996 ;;		_updateModuleErrorStatus
 22997 ;; This function is called by:
 22998 ;;		_canReceiveMessage
 22999 ;; This function uses a non-reentrant model
 23000 ;;
 23001                           
 23002                           	psect	text81
 23003   0078DE                     __ptext81:
 23004                           	callstack 0
 23005   0078DE                     _processEnumeration:
 23006                           	callstack 9
 23007                           
 23008                           ;../../VLCBlib_PIC/can18_ecan.c: 904:     uint8_t i, newCanId, enumResult;;../../VLCBlib
      +                          _PIC/can18_ecan.c: 906:     switch (enumerationState) {
 23009                           
 23010                           ;incstack = 0
 23011   0078DE  D09B               	goto	l22769
 23012   0078E0                     l22707:
 23013                           
 23014                           ; BSR set to: 1
 23015                           ;../../VLCBlib_PIC/can18_ecan.c: 908:             if (((tickGet() - enumerationStartTime
      +                          .val) > 2 * (62500/10) )) {
 23016   0078E0  EC45  F05C         	call	_tickGet	;wreg free
 23017   0078E4  5011               	movf	_enumerationStartTime^0,w,c
 23018   0078E6  0100               	movlb	0	; () banked
 23019   0078E8  5D8D               	subwf	?_tickGet& (0+255),w,b
 23020   0078EA  0101               	movlb	1	; () banked
 23021   0078EC  6FC0               	movwf	??_processEnumeration& (0+255),b
 23022   0078EE  5012               	movf	(_enumerationStartTime+1)^0,w,c
 23023   0078F0  0100               	movlb	0	; () banked
 23024   0078F2  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 23025   0078F4  0101               	movlb	1	; () banked
 23026   0078F6  6FC1               	movwf	(??_processEnumeration+1)& (0+255),b
 23027   0078F8  5013               	movf	(_enumerationStartTime+2)^0,w,c
 23028   0078FA  0100               	movlb	0	; () banked
 23029   0078FC  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 23030   0078FE  0101               	movlb	1	; () banked
 23031   007900  6FC2               	movwf	(??_processEnumeration+2)& (0+255),b
 23032   007902  5014               	movf	(_enumerationStartTime+3)^0,w,c
 23033   007904  0100               	movlb	0	; () banked
 23034   007906  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 23035   007908  0101               	movlb	1	; () banked
 23036   00790A  6FC3               	movwf	(??_processEnumeration+3)& (0+255),b
 23037   00790C  51C3               	movf	(??_processEnumeration+3)& (0+255),w,b
 23038   00790E  11C2               	iorwf	(??_processEnumeration+2)& (0+255),w,b
 23039   007910  E106               	bnz	u24320
 23040   007912  0ED5               	movlw	213
 23041   007914  5DC0               	subwf	??_processEnumeration& (0+255),w,b
 23042   007916  0E30               	movlw	48
 23043   007918  59C1               	subwfb	(??_processEnumeration+1)& (0+255),w,b
 23044   00791A  A0D8               	btfss	status,0,c
 23045   00791C  0012               	return	
 23046   00791E                     u24320:
 23047                           
 23048                           ; BSR set to: 1
 23049                           ;../../VLCBlib_PIC/can18_ecan.c: 910:                 for (i=1; i< (0x7F/8)+1; i++) {
 23050   00791E  0E01               	movlw	1
 23051   007920  6FC6               	movwf	processEnumeration@i& (0+255),b
 23052   007922                     l22715:
 23053                           
 23054                           ; BSR set to: 1
 23055                           ;../../VLCBlib_PIC/can18_ecan.c: 911:                     enumerationResults[i] = 0;
 23056   007922  0E34               	movlw	low _enumerationResults
 23057   007924  25C6               	addwf	processEnumeration@i& (0+255),w,b
 23058   007926  6ED9               	movwf	fsr2l,c
 23059   007928  6ADA               	clrf	fsr2h,c
 23060   00792A  0E02               	movlw	high _enumerationResults
 23061   00792C  22DA               	addwfc	fsr2h,f,c
 23062   00792E  6ADF               	clrf	indf2,c
 23063                           
 23064                           ; BSR set to: 1
 23065                           ;../../VLCBlib_PIC/can18_ecan.c: 912:                 }
 23066   007930  2BC6               	incf	processEnumeration@i& (0+255),f,b
 23067                           
 23068                           ; BSR set to: 1
 23069   007932  0E0F               	movlw	15
 23070   007934  65C6               	cpfsgt	processEnumeration@i& (0+255),b
 23071   007936  D7F5               	goto	l22715
 23072                           
 23073                           ; BSR set to: 1
 23074                           ;../../VLCBlib_PIC/can18_ecan.c: 913:                 enumerationResults[0] = 1;
 23075   007938  0E01               	movlw	1
 23076   00793A  0102               	movlb	2	; () banked
 23077   00793C  6F34               	movwf	_enumerationResults& (0+255),b
 23078                           
 23079                           ;../../VLCBlib_PIC/can18_ecan.c: 915:                 enumerationState = ENUMERATION_IN_
      +                          PROGRESS;
 23080   00793E  0E02               	movlw	2
 23081   007940  0100               	movlb	0	; () banked
 23082   007942  6FB7               	movwf	_enumerationState& (0+255),b
 23083                           
 23084                           ; BSR set to: 0
 23085                           ;../../VLCBlib_PIC/can18_ecan.c: 916:                 enumerationStartTime.val = tickGet
      +                          ();
 23086   007944  EC45  F05C         	call	_tickGet	;wreg free
 23087   007948  C08D  F011         	movff	?_tickGet,_enumerationStartTime
 23088   00794C  C08E  F012         	movff	?_tickGet+1,_enumerationStartTime+1
 23089   007950  C08F  F013         	movff	?_tickGet+2,_enumerationStartTime+2
 23090   007954  C090  F014         	movff	?_tickGet+3,_enumerationStartTime+3
 23091                           
 23092                           ;../../VLCBlib_PIC/can18_ecan.c: 918:                 canDiagnostics[0x0D].asUint++;
 23093   007958  0101               	movlb	1	; () banked
 23094   00795A  4B80               	infsnz	(_canDiagnostics+26)& (0+255),f,b
 23095   00795C  2B81               	incf	(_canDiagnostics+27)& (0+255),f,b
 23096                           
 23097                           ; BSR set to: 1
 23098                           ;../../VLCBlib_PIC/can18_ecan.c: 920:                 TXB1CONbits.TXREQ = 1;
 23099   00795E  010F               	movlb	15	; () banked
 23100   007960  8710               	bsf	16,3,b	;volatile
 23101   007962  0012               	return	
 23102   007964                     l22729:
 23103                           
 23104                           ; BSR set to: 1
 23105                           ;../../VLCBlib_PIC/can18_ecan.c: 924:             if ((tickGet() - enumerationStartTime.
      +                          val) > (62500/10) ) {
 23106   007964  EC45  F05C         	call	_tickGet	;wreg free
 23107   007968  5011               	movf	_enumerationStartTime^0,w,c
 23108   00796A  0100               	movlb	0	; () banked
 23109   00796C  5D8D               	subwf	?_tickGet& (0+255),w,b
 23110   00796E  0101               	movlb	1	; () banked
 23111   007970  6FC0               	movwf	??_processEnumeration& (0+255),b
 23112   007972  5012               	movf	(_enumerationStartTime+1)^0,w,c
 23113   007974  0100               	movlb	0	; () banked
 23114   007976  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 23115   007978  0101               	movlb	1	; () banked
 23116   00797A  6FC1               	movwf	(??_processEnumeration+1)& (0+255),b
 23117   00797C  5013               	movf	(_enumerationStartTime+2)^0,w,c
 23118   00797E  0100               	movlb	0	; () banked
 23119   007980  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 23120   007982  0101               	movlb	1	; () banked
 23121   007984  6FC2               	movwf	(??_processEnumeration+2)& (0+255),b
 23122   007986  5014               	movf	(_enumerationStartTime+3)^0,w,c
 23123   007988  0100               	movlb	0	; () banked
 23124   00798A  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 23125   00798C  0101               	movlb	1	; () banked
 23126   00798E  6FC3               	movwf	(??_processEnumeration+3)& (0+255),b
 23127   007990  51C3               	movf	(??_processEnumeration+3)& (0+255),w,b
 23128   007992  11C2               	iorwf	(??_processEnumeration+2)& (0+255),w,b
 23129   007994  E106               	bnz	u24340
 23130   007996  0E6B               	movlw	107
 23131   007998  5DC0               	subwf	??_processEnumeration& (0+255),w,b
 23132   00799A  0E18               	movlw	24
 23133   00799C  59C1               	subwfb	(??_processEnumeration+1)& (0+255),w,b
 23134   00799E  A0D8               	btfss	status,0,c
 23135   0079A0  0012               	return	
 23136   0079A2                     u24340:
 23137                           
 23138                           ; BSR set to: 1
 23139                           ;../../VLCBlib_PIC/can18_ecan.c: 928:                 for (i=0; (enumerationResults[i] =
      +                          = 0xFF) && (i < (0x7F/8)+1); i++) {
 23140   0079A2  0E00               	movlw	0
 23141   0079A4  6FC6               	movwf	processEnumeration@i& (0+255),b
 23142   0079A6  D001               	goto	l22735
 23143   0079A8                     l22733:
 23144                           
 23145                           ; BSR set to: 1
 23146                           ;../../VLCBlib_PIC/can18_ecan.c: 930:                 }
 23147   0079A8  2BC6               	incf	processEnumeration@i& (0+255),f,b
 23148   0079AA                     l22735:
 23149                           
 23150                           ; BSR set to: 1
 23151   0079AA  0E34               	movlw	low _enumerationResults
 23152   0079AC  25C6               	addwf	processEnumeration@i& (0+255),w,b
 23153   0079AE  6ED9               	movwf	fsr2l,c
 23154   0079B0  6ADA               	clrf	fsr2h,c
 23155   0079B2  0E02               	movlw	high _enumerationResults
 23156   0079B4  22DA               	addwfc	fsr2h,f,c
 23157   0079B6  28DE               	incf	postinc2,w,c
 23158   0079B8  A4D8               	btfss	status,2,c
 23159   0079BA  D003               	goto	u24360
 23160                           
 23161                           ; BSR set to: 1
 23162   0079BC  0E0F               	movlw	15
 23163   0079BE  65C6               	cpfsgt	processEnumeration@i& (0+255),b
 23164   0079C0  D7F3               	goto	l22733
 23165   0079C2                     u24360:
 23166                           
 23167                           ; BSR set to: 1
 23168                           ;../../VLCBlib_PIC/can18_ecan.c: 931:                 if ((enumResult = enumerationResul
      +                          ts[i]) != 0xFF) {
 23169   0079C2  0E34               	movlw	low _enumerationResults
 23170   0079C4  25C6               	addwf	processEnumeration@i& (0+255),w,b
 23171   0079C6  6ED9               	movwf	fsr2l,c
 23172   0079C8  6ADA               	clrf	fsr2h,c
 23173   0079CA  0E02               	movlw	high _enumerationResults
 23174   0079CC  22DA               	addwfc	fsr2h,f,c
 23175   0079CE  50DF               	movf	indf2,w,c
 23176   0079D0  6FC4               	movwf	processEnumeration@enumResult& (0+255),b
 23177   0079D2  29C4               	incf	processEnumeration@enumResult& (0+255),w,b
 23178   0079D4  B4D8               	btfsc	status,2,c
 23179   0079D6  D017               	goto	l22757
 23180                           
 23181                           ; BSR set to: 1
 23182                           ;../../VLCBlib_PIC/can18_ecan.c: 932:                     for (newCanId = i*8; (enumResu
      +                          lt & 0x01); newCanId++) {
 23183   0079D8  51C6               	movf	processEnumeration@i& (0+255),w,b
 23184   0079DA  0D08               	mullw	8
 23185   0079DC  CFF3 F1C5          	movff	prodl,processEnumeration@newCanId
 23186   0079E0  D003               	goto	l22747
 23187   0079E2                     l22743:
 23188                           
 23189                           ; BSR set to: 1
 23190                           ;../../VLCBlib_PIC/can18_ecan.c: 933:                         enumResult >>= 1;
 23191   0079E2  90D8               	bcf	status,0,c
 23192   0079E4  33C4               	rrcf	processEnumeration@enumResult& (0+255),f,b
 23193                           
 23194                           ; BSR set to: 1
 23195                           ;../../VLCBlib_PIC/can18_ecan.c: 934:                     }
 23196   0079E6  2BC5               	incf	processEnumeration@newCanId& (0+255),f,b
 23197   0079E8                     l22747:
 23198                           
 23199                           ; BSR set to: 1
 23200   0079E8  B1C4               	btfsc	processEnumeration@enumResult& (0+255),0,b
 23201   0079EA  D7FB               	goto	l22743
 23202                           
 23203                           ; BSR set to: 1
 23204                           ;../../VLCBlib_PIC/can18_ecan.c: 935:                     if ((newCanId >= 1) && (newCan
      +                          Id <= 99)) {
 23205   0079EC  51C5               	movf	processEnumeration@newCanId& (0+255),w,b
 23206   0079EE  B4D8               	btfsc	status,2,c
 23207   0079F0  D00A               	goto	l22757
 23208                           
 23209                           ; BSR set to: 1
 23210   0079F2  0E64               	movlw	100
 23211   0079F4  61C5               	cpfslt	processEnumeration@newCanId& (0+255),b
 23212   0079F6  D007               	goto	l22757
 23213                           
 23214                           ; BSR set to: 1
 23215                           ;../../VLCBlib_PIC/can18_ecan.c: 936:                         canId = newCanId;
 23216   0079F8  C1C5  F0B9         	movff	processEnumeration@newCanId,_canId
 23217                           
 23218                           ; BSR set to: 1
 23219                           ;../../VLCBlib_PIC/can18_ecan.c: 937:                         setNewCanId(canId);
 23220   0079FC  0100               	movlb	0	; () banked
 23221   0079FE  51B9               	movf	_canId& (0+255),w,b
 23222   007A00  EC3B  F05A         	call	_setNewCanId
 23223                           
 23224                           ;../../VLCBlib_PIC/can18_ecan.c: 938:                     } else {
 23225   007A04  D004               	goto	l22765
 23226   007A06                     l22757:
 23227                           
 23228                           ; BSR set to: 1
 23229                           ;../../VLCBlib_PIC/can18_ecan.c: 940:                         canDiagnostics[0x10].asUin
      +                          t++;
 23230   007A06  4B86               	infsnz	(_canDiagnostics+32)& (0+255),f,b
 23231   007A08  2B87               	incf	(_canDiagnostics+33)& (0+255),f,b
 23232                           
 23233                           ; BSR set to: 1
 23234                           ;../../VLCBlib_PIC/can18_ecan.c: 941:                         updateModuleErrorStatus();
 23235   007A0A  EC5B  F064         	call	_updateModuleErrorStatus	;wreg free
 23236   007A0E                     l22765:
 23237                           
 23238                           ;../../VLCBlib_PIC/can18_ecan.c: 953:                 enumerationState = NO_ENUMERATION;
 23239   007A0E  0E00               	movlw	0
 23240   007A10  0100               	movlb	0	; () banked
 23241   007A12  6FB7               	movwf	_enumerationState& (0+255),b
 23242   007A14  0012               	return	
 23243   007A16                     l22769:
 23244   007A16  0100               	movlb	0	; () banked
 23245   007A18  51B7               	movf	_enumerationState& (0+255),w,b
 23246   007A1A  0101               	movlb	1	; () banked
 23247   007A1C  6FC0               	movwf	??_processEnumeration& (0+255),b
 23248   007A1E  6BC1               	clrf	(??_processEnumeration+1)& (0+255),b
 23249                           
 23250                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23251                           ; Switch size 1, requested type "simple"
 23252                           ; Number of cases is 1, Range of values is 0 to 0
 23253                           ; switch strategies available:
 23254                           ; Name         Instructions Cycles
 23255                           ; simple_byte            4     3 (average)
 23256                           ;	Chosen strategy is simple_byte
 23257   007A20  51C1               	movf	(??_processEnumeration+1)& (0+255),w,b
 23258   007A22  0A00               	xorlw	0	; case 0
 23259   007A24  A4D8               	btfss	status,2,c
 23260   007A26  0012               	return	
 23261                           
 23262                           ; BSR set to: 1
 23263                           ; Switch size 1, requested type "simple"
 23264                           ; Number of cases is 2, Range of values is 1 to 2
 23265                           ; switch strategies available:
 23266                           ; Name         Instructions Cycles
 23267                           ; simple_byte            7     4 (average)
 23268                           ;	Chosen strategy is simple_byte
 23269   007A28  51C0               	movf	??_processEnumeration& (0+255),w,b
 23270   007A2A  0A01               	xorlw	1	; case 1
 23271   007A2C  B4D8               	btfsc	status,2,c
 23272   007A2E  D758               	goto	l22707
 23273   007A30  0A03               	xorlw	3	; case 2
 23274   007A32  A4D8               	btfss	status,2,c
 23275   007A34  0012               	return	
 23276   007A36  D796               	goto	l22729
 23277   007A38                     __end_of_processEnumeration:
 23278                           	callstack 0
 23279                           
 23280 ;; *************** function _setNewCanId *****************
 23281 ;; Defined at:
 23282 ;;		line 966 in file "../../VLCBlib_PIC/can18_ecan.c"
 23283 ;; Parameters:    Size  Location     Type
 23284 ;;  newCanId        1    wreg     unsigned char 
 23285 ;; Auto vars:     Size  Location     Type
 23286 ;;  newCanId        1    1[BANK1 ] unsigned char 
 23287 ;; Return value:  Size  Location     Type
 23288 ;;                  1    wreg      enum E13097
 23289 ;; Registers used:
 23290 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23291 ;; Tracked objects:
 23292 ;;		On entry : 0/0
 23293 ;;		On exit  : 0/0
 23294 ;;		Unchanged: 0/0
 23295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23297 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23299 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23300 ;;Total ram usage:        1 bytes
 23301 ;; Hardware stack levels used: 1
 23302 ;; Hardware stack levels required when called: 18
 23303 ;; This function calls:
 23304 ;;		_writeNVM
 23305 ;; This function is called by:
 23306 ;;		_processEnumeration
 23307 ;; This function uses a non-reentrant model
 23308 ;;
 23309                           
 23310                           	psect	text82
 23311   00B476                     __ptext82:
 23312                           	callstack 0
 23313   00B476                     _setNewCanId:
 23314                           	callstack 9
 23315                           
 23316                           ;incstack = 0
 23317                           ;setNewCanId@newCanId stored from wreg
 23318   00B476  0101               	movlb	1	; () banked
 23319   00B478  6FBF               	movwf	setNewCanId@newCanId& (0+255),b
 23320                           
 23321                           ;../../VLCBlib_PIC/can18_ecan.c: 967:     if ((newCanId >= 1) && (newCanId <= 99)) {
 23322   00B47A  0101               	movlb	1	; () banked
 23323   00B47C  51BF               	movf	setNewCanId@newCanId& (0+255),w,b
 23324   00B47E  B4D8               	btfsc	status,2,c
 23325   00B480  0012               	return	
 23326                           
 23327                           ; BSR set to: 1
 23328   00B482  0E64               	movlw	100
 23329   00B484  61BF               	cpfslt	setNewCanId@newCanId& (0+255),b
 23330   00B486  0012               	return	
 23331                           
 23332                           ; BSR set to: 1
 23333                           ;../../VLCBlib_PIC/can18_ecan.c: 968:         canId = newCanId;
 23334   00B488  C1BF  F0B9         	movff	setNewCanId@newCanId,_canId
 23335                           
 23336                           ; BSR set to: 1
 23337                           ;../../VLCBlib_PIC/can18_ecan.c: 971:         TXB1SIDH &= 0b11110000;
 23338   00B48C  0EF0               	movlw	240
 23339   00B48E  010F               	movlb	15	; () banked
 23340   00B490  1711               	andwf	17,f,b	;volatile
 23341                           
 23342                           ;../../VLCBlib_PIC/can18_ecan.c: 972:         TXB1SIDH |= ((newCanId & 0x78) >>3);
 23343   00B492  0101               	movlb	1	; () banked
 23344   00B494  39BF               	swapf	setNewCanId@newCanId& (0+255),w,b
 23345   00B496  46E8               	rlncf	wreg,f,c
 23346   00B498  0B1F               	andlw	31
 23347   00B49A  0B0F               	andlw	15
 23348   00B49C  010F               	movlb	15	; () banked
 23349   00B49E  1311               	iorwf	17,f,b	;volatile
 23350                           
 23351                           ; BSR set to: 15
 23352                           ;../../VLCBlib_PIC/can18_ecan.c: 973:         TXB1SIDL = TXB0SIDL;
 23353   00B4A0  CF22 FF12          	movff	3874,3858	;volatile
 23354                           
 23355                           ;../../VLCBlib_PIC/can18_ecan.c: 975:         TXB2SIDH &= 0b11110000;
 23356   00B4A4  0EF0               	movlw	240
 23357   00B4A6  1701               	andwf	1,f,b	;volatile
 23358                           
 23359                           ;../../VLCBlib_PIC/can18_ecan.c: 976:         TXB2SIDH |= ((newCanId & 0x78) >>3);
 23360   00B4A8  0101               	movlb	1	; () banked
 23361   00B4AA  39BF               	swapf	setNewCanId@newCanId& (0+255),w,b
 23362   00B4AC  46E8               	rlncf	wreg,f,c
 23363   00B4AE  0B1F               	andlw	31
 23364   00B4B0  0B0F               	andlw	15
 23365   00B4B2  010F               	movlb	15	; () banked
 23366   00B4B4  1301               	iorwf	1,f,b	;volatile
 23367                           
 23368                           ; BSR set to: 15
 23369                           ;../../VLCBlib_PIC/can18_ecan.c: 977:         TXB2SIDL = TXB0SIDL;
 23370   00B4B6  CF22 FF02          	movff	3874,3842	;volatile
 23371                           
 23372                           ; BSR set to: 15
 23373                           ;../../VLCBlib_PIC/can18_ecan.c: 979:         writeNVM(EEPROM_NVM_TYPE, 0x3FE, newCanId 
      +                          );
 23374   00B4BA  0EFE               	movlw	254
 23375   00B4BC  0100               	movlb	0	; () banked
 23376   00B4BE  6FA4               	movwf	writeNVM@index& (0+255),b
 23377   00B4C0  0E03               	movlw	3
 23378   00B4C2  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 23379   00B4C4  0E00               	movlw	0
 23380   00B4C6  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 23381   00B4C8  C1BF  F0A7         	movff	setNewCanId@newCanId,writeNVM@value
 23382   00B4CC  0E00               	movlw	0
 23383   00B4CE  ECC1  F05D         	call	_writeNVM
 23384                           
 23385                           ;../../VLCBlib_PIC/can18_ecan.c: 981:         canDiagnostics[0x0F].asUint++;
 23386   00B4D2  0101               	movlb	1	; () banked
 23387   00B4D4  4B84               	infsnz	(_canDiagnostics+30)& (0+255),f,b
 23388   00B4D6  2B85               	incf	(_canDiagnostics+31)& (0+255),f,b
 23389                           
 23390                           ; BSR set to: 1
 23391   00B4D8  0012               	return		;funcret
 23392   00B4DA                     __end_of_setNewCanId:
 23393                           	callstack 0
 23394                           
 23395 ;; *************** function _pop *****************
 23396 ;; Defined at:
 23397 ;;		line 96 in file "../../VLCBlib_PIC/messageQueue.c"
 23398 ;; Parameters:    Size  Location     Type
 23399 ;;  q               2   45[BANK0 ] PTR struct MessageQueue
 23400 ;;		 -> txQueue(5), rxQueue(5), 
 23401 ;; Auto vars:     Size  Location     Type
 23402 ;;  ret             2   52[BANK0 ] PTR struct Message
 23403 ;;		 -> txBuffers(72), rxBuffers(288), 
 23404 ;; Return value:  Size  Location     Type
 23405 ;;                  2   45[BANK0 ] PTR struct Message
 23406 ;; Registers used:
 23407 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23408 ;; Tracked objects:
 23409 ;;		On entry : 0/0
 23410 ;;		On exit  : 0/0
 23411 ;;		Unchanged: 0/0
 23412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23413 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23414 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23415 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23416 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23417 ;;Total ram usage:        9 bytes
 23418 ;; Hardware stack levels used: 1
 23419 ;; Hardware stack levels required when called: 12
 23420 ;; This function calls:
 23421 ;;		Nothing
 23422 ;; This function is called by:
 23423 ;;		_canReceiveMessage
 23424 ;; This function uses a non-reentrant model
 23425 ;;
 23426                           
 23427                           	psect	text83
 23428   009E3C                     __ptext83:
 23429                           	callstack 0
 23430   009E3C                     _pop:
 23431                           	callstack 16
 23432                           
 23433                           ;../../VLCBlib_PIC/messageQueue.c: 97:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 98:  if (q->writeIndex == q->readIndex) {
 23434                           
 23435                           ; BSR set to: 1
 23436                           ;incstack = 0
 23437   009E3C  0100               	movlb	0	; () banked
 23438   009E3E  EE20 F002          	lfsr	2,2
 23439   009E42  518D               	movf	pop@q& (0+255),w,b
 23440   009E44  26D9               	addwf	fsr2l,f,c
 23441   009E46  518E               	movf	(pop@q+1)& (0+255),w,b
 23442   009E48  22DA               	addwfc	fsr2h,f,c
 23443   009E4A  EE10 F003          	lfsr	1,3
 23444   009E4E  518D               	movf	pop@q& (0+255),w,b
 23445   009E50  26E1               	addwf	fsr1l,f,c
 23446   009E52  518E               	movf	(pop@q+1)& (0+255),w,b
 23447   009E54  22E2               	addwfc	fsr1h,f,c
 23448   009E56  50DE               	movf	postinc2,w,c
 23449   009E58  18E6               	xorwf	postinc1,w,c
 23450   009E5A  A4D8               	btfss	status,2,c
 23451   009E5C  D005               	goto	l22597
 23452                           
 23453                           ; BSR set to: 0
 23454                           ;../../VLCBlib_PIC/messageQueue.c: 99:         return ((void*)0);
 23455   009E5E  0E00               	movlw	0
 23456   009E60  6F8D               	movwf	?_pop& (0+255),b
 23457   009E62  0E00               	movlw	0
 23458   009E64  6F8E               	movwf	(?_pop+1)& (0+255),b
 23459   009E66  0012               	return	
 23460   009E68                     l22597:
 23461                           
 23462                           ; BSR set to: 0
 23463                           ;../../VLCBlib_PIC/messageQueue.c: 101:  ret = &(q->messages[q->readIndex++]);
 23464   009E68  EE20 F002          	lfsr	2,2
 23465   009E6C  518D               	movf	pop@q& (0+255),w,b
 23466   009E6E  26D9               	addwf	fsr2l,f,c
 23467   009E70  518E               	movf	(pop@q+1)& (0+255),w,b
 23468   009E72  22DA               	addwfc	fsr2h,f,c
 23469   009E74  50DF               	movf	indf2,w,c
 23470   009E76  6F8F               	movwf	??_pop& (0+255),b
 23471   009E78  518F               	movf	??_pop& (0+255),w,b
 23472   009E7A  0D09               	mullw	9
 23473   009E7C  CFF3 F090          	movff	prodl,??_pop+1
 23474   009E80  CFF4 F091          	movff	prodh,??_pop+2
 23475   009E84  C08D  FFD9         	movff	pop@q,fsr2l
 23476   009E88  C08E  FFDA         	movff	pop@q+1,fsr2h
 23477   009E8C  CFDE F092          	movff	postinc2,??_pop+3
 23478   009E90  CFDD F093          	movff	postdec2,??_pop+4
 23479   009E94  5190               	movf	(??_pop+1)& (0+255),w,b
 23480   009E96  2592               	addwf	(??_pop+3)& (0+255),w,b
 23481   009E98  6F94               	movwf	pop@ret& (0+255),b
 23482   009E9A  5191               	movf	(??_pop+2)& (0+255),w,b
 23483   009E9C  2193               	addwfc	(??_pop+4)& (0+255),w,b
 23484   009E9E  6F95               	movwf	(pop@ret+1)& (0+255),b
 23485                           
 23486                           ; BSR set to: 0
 23487   009EA0  EE20 F002          	lfsr	2,2
 23488   009EA4  518D               	movf	pop@q& (0+255),w,b
 23489   009EA6  26D9               	addwf	fsr2l,f,c
 23490   009EA8  518E               	movf	(pop@q+1)& (0+255),w,b
 23491   009EAA  22DA               	addwfc	fsr2h,f,c
 23492   009EAC  2ADF               	incf	indf2,f,c
 23493                           
 23494                           ; BSR set to: 0
 23495                           ;../../VLCBlib_PIC/messageQueue.c: 102:  if (q->readIndex >= q->size) q->readIndex = 0;
 23496   009EAE  EE20 F004          	lfsr	2,4
 23497   009EB2  518D               	movf	pop@q& (0+255),w,b
 23498   009EB4  26D9               	addwf	fsr2l,f,c
 23499   009EB6  518E               	movf	(pop@q+1)& (0+255),w,b
 23500   009EB8  22DA               	addwfc	fsr2h,f,c
 23501   009EBA  EE10 F002          	lfsr	1,2
 23502   009EBE  518D               	movf	pop@q& (0+255),w,b
 23503   009EC0  26E1               	addwf	fsr1l,f,c
 23504   009EC2  518E               	movf	(pop@q+1)& (0+255),w,b
 23505   009EC4  22E2               	addwfc	fsr1h,f,c
 23506   009EC6  50DE               	movf	postinc2,w,c
 23507   009EC8  5CE6               	subwf	postinc1,w,c
 23508   009ECA  A0D8               	btfss	status,0,c
 23509   009ECC  D007               	goto	l22605
 23510                           
 23511                           ; BSR set to: 0
 23512   009ECE  EE20 F002          	lfsr	2,2
 23513   009ED2  518D               	movf	pop@q& (0+255),w,b
 23514   009ED4  26D9               	addwf	fsr2l,f,c
 23515   009ED6  518E               	movf	(pop@q+1)& (0+255),w,b
 23516   009ED8  22DA               	addwfc	fsr2h,f,c
 23517   009EDA  6ADF               	clrf	indf2,c
 23518   009EDC                     l22605:
 23519                           
 23520                           ; BSR set to: 0
 23521                           ;../../VLCBlib_PIC/messageQueue.c: 103:  return ret;
 23522   009EDC  C094  F08D         	movff	pop@ret,?_pop
 23523   009EE0  C095  F08E         	movff	pop@ret+1,?_pop+1
 23524                           
 23525                           ; BSR set to: 0
 23526   009EE4  0012               	return		;funcret
 23527   009EE6                     __end_of_pop:
 23528                           	callstack 0
 23529                           
 23530 ;; *************** function _memcpy *****************
 23531 ;; Defined at:
 23532 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
 23533 ;; Parameters:    Size  Location     Type
 23534 ;;  d1              2   45[BANK0 ] PTR void 
 23535 ;;		 -> poll@m(9), 
 23536 ;;  s1              2   47[BANK0 ] PTR const void 
 23537 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 23538 ;;  n               2   49[BANK0 ] unsigned int 
 23539 ;; Auto vars:     Size  Location     Type
 23540 ;;  s               2   54[BANK0 ] PTR const unsigned char 
 23541 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 23542 ;;  d               2   52[BANK0 ] PTR unsigned char 
 23543 ;;		 -> poll@m(9), 
 23544 ;;  tmp             1   51[BANK0 ] unsigned char 
 23545 ;; Return value:  Size  Location     Type
 23546 ;;                  2   45[BANK0 ] PTR void 
 23547 ;; Registers used:
 23548 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23549 ;; Tracked objects:
 23550 ;;		On entry : 0/0
 23551 ;;		On exit  : 0/0
 23552 ;;		Unchanged: 0/0
 23553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23554 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23555 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23557 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23558 ;;Total ram usage:       11 bytes
 23559 ;; Hardware stack levels used: 1
 23560 ;; Hardware stack levels required when called: 12
 23561 ;; This function calls:
 23562 ;;		Nothing
 23563 ;; This function is called by:
 23564 ;;		_canReceiveMessage
 23565 ;; This function uses a non-reentrant model
 23566 ;;
 23567                           
 23568                           	psect	text84
 23569   00BE64                     __ptext84:
 23570                           	callstack 0
 23571   00BE64                     _memcpy:
 23572                           	callstack 16
 23573                           
 23574                           ; BSR set to: 0
 23575                           ;incstack = 0
 23576   00BE64  C08F  F096         	movff	memcpy@s1,memcpy@s
 23577   00BE68  C090  F097         	movff	memcpy@s1+1,memcpy@s+1
 23578   00BE6C  C08D  F094         	movff	memcpy@d1,memcpy@d
 23579   00BE70  C08E  F095         	movff	memcpy@d1+1,memcpy@d+1
 23580   00BE74  D010               	goto	l22785
 23581   00BE76                     l22777:
 23582                           
 23583                           ; BSR set to: 0
 23584   00BE76  C096  FFD9         	movff	memcpy@s,fsr2l
 23585   00BE7A  C097  FFDA         	movff	memcpy@s+1,fsr2h
 23586   00BE7E  50DF               	movf	indf2,w,c
 23587   00BE80  6F93               	movwf	memcpy@tmp& (0+255),b
 23588                           
 23589                           ; BSR set to: 0
 23590   00BE82  4B96               	infsnz	memcpy@s& (0+255),f,b
 23591   00BE84  2B97               	incf	(memcpy@s+1)& (0+255),f,b
 23592                           
 23593                           ; BSR set to: 0
 23594   00BE86  C094  FFD9         	movff	memcpy@d,fsr2l
 23595   00BE8A  C095  FFDA         	movff	memcpy@d+1,fsr2h
 23596   00BE8E  C093  FFDF         	movff	memcpy@tmp,indf2
 23597                           
 23598                           ; BSR set to: 0
 23599   00BE92  4B94               	infsnz	memcpy@d& (0+255),f,b
 23600   00BE94  2B95               	incf	(memcpy@d+1)& (0+255),f,b
 23601   00BE96                     l22785:
 23602   00BE96  0100               	movlb	0	; () banked
 23603   00BE98  0791               	decf	memcpy@n& (0+255),f,b
 23604   00BE9A  A0D8               	btfss	status,0,c
 23605   00BE9C  0792               	decf	(memcpy@n+1)& (0+255),f,b
 23606   00BE9E  2991               	incf	memcpy@n& (0+255),w,b
 23607   00BEA0  E1EA               	bnz	l22777
 23608   00BEA2  2992               	incf	(memcpy@n+1)& (0+255),w,b
 23609   00BEA4  B4D8               	btfsc	status,2,c
 23610   00BEA6  0012               	return	
 23611   00BEA8  D7E6               	goto	l22777
 23612   00BEAA                     __end_of_memcpy:
 23613                           	callstack 0
 23614                           
 23615 ;; *************** function _handleSelfEnumeration *****************
 23616 ;; Defined at:
 23617 ;;		line 816 in file "../../VLCBlib_PIC/can18_ecan.c"
 23618 ;; Parameters:    Size  Location     Type
 23619 ;;  p               2   55[BANK0 ] PTR unsigned char 
 23620 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 23621 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 23622 ;;		 -> NULL(0), 
 23623 ;; Auto vars:     Size  Location     Type
 23624 ;;  incomingCanI    1   61[BANK0 ] unsigned char 
 23625 ;; Return value:  Size  Location     Type
 23626 ;;                  1    wreg      enum E13077
 23627 ;; Registers used:
 23628 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23629 ;; Tracked objects:
 23630 ;;		On entry : 0/0
 23631 ;;		On exit  : 0/0
 23632 ;;		Unchanged: 0/0
 23633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23634 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23635 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23636 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23637 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23638 ;;Total ram usage:        7 bytes
 23639 ;; Hardware stack levels used: 1
 23640 ;; Hardware stack levels required when called: 13
 23641 ;; This function calls:
 23642 ;;		_tickGet
 23643 ;; This function is called by:
 23644 ;;		_canReceiveMessage
 23645 ;; This function uses a non-reentrant model
 23646 ;;
 23647                           
 23648                           	psect	text85
 23649   0082A4                     __ptext85:
 23650                           	callstack 0
 23651   0082A4                     _handleSelfEnumeration:
 23652                           	callstack 15
 23653                           
 23654                           ;../../VLCBlib_PIC/can18_ecan.c: 817:     uint8_t incomingCanId;;../../VLCBlib_PIC/can18
      +                          _ecan.c: 821:     if (p[5] & 0x40 ) {
 23655                           
 23656                           ; BSR set to: 0
 23657                           ;incstack = 0
 23658   0082A4  0100               	movlb	0	; () banked
 23659   0082A6  EE20 F005          	lfsr	2,5
 23660   0082AA  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 23661   0082AC  26D9               	addwf	fsr2l,f,c
 23662   0082AE  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 23663   0082B0  22DA               	addwfc	fsr2h,f,c
 23664   0082B2  ACDF               	btfss	indf2,6,c
 23665   0082B4  D00E               	goto	l22797
 23666                           
 23667                           ; BSR set to: 0
 23668                           ;../../VLCBlib_PIC/can18_ecan.c: 823:         TXB2CONbits.TXREQ = 1;
 23669   0082B6  010F               	movlb	15	; () banked
 23670   0082B8  8700               	bsf	0,3,b	;volatile
 23671                           
 23672                           ; BSR set to: 15
 23673                           ;../../VLCBlib_PIC/can18_ecan.c: 824:         enumerationStartTime.val = tickGet();
 23674   0082BA  EC45  F05C         	call	_tickGet	;wreg free
 23675   0082BE  C08D  F011         	movff	?_tickGet,_enumerationStartTime
 23676   0082C2  C08E  F012         	movff	?_tickGet+1,_enumerationStartTime+1
 23677   0082C6  C08F  F013         	movff	?_tickGet+2,_enumerationStartTime+2
 23678   0082CA  C090  F014         	movff	?_tickGet+3,_enumerationStartTime+3
 23679                           
 23680                           ;../../VLCBlib_PIC/can18_ecan.c: 825:         return NOT_RECEIVED;
 23681   0082CE  0E00               	movlw	0
 23682   0082D0  0012               	return	
 23683   0082D2                     l22797:
 23684                           
 23685                           ; BSR set to: 0
 23686                           ;../../VLCBlib_PIC/can18_ecan.c: 827:     incomingCanId = (p[1] << 3) + (p[2] >> 5) & 0x
      +                          7f;
 23687   0082D2  EE20 F002          	lfsr	2,2
 23688   0082D6  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 23689   0082D8  26D9               	addwf	fsr2l,f,c
 23690   0082DA  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 23691   0082DC  22DA               	addwfc	fsr2h,f,c
 23692   0082DE  50DF               	movf	indf2,w,c
 23693   0082E0  6F99               	movwf	??_handleSelfEnumeration& (0+255),b
 23694   0082E2  0E05               	movlw	5
 23695   0082E4  6F9A               	movwf	(??_handleSelfEnumeration+1)& (0+255),b
 23696   0082E6                     u24435:
 23697   0082E6  90D8               	bcf	status,0,c
 23698   0082E8  3399               	rrcf	??_handleSelfEnumeration& (0+255),f,b
 23699   0082EA  2F9A               	decfsz	(??_handleSelfEnumeration+1)& (0+255),f,b
 23700   0082EC  D7FC               	goto	u24435
 23701   0082EE  EE20 F001          	lfsr	2,1
 23702   0082F2  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 23703   0082F4  26D9               	addwf	fsr2l,f,c
 23704   0082F6  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 23705   0082F8  22DA               	addwfc	fsr2h,f,c
 23706   0082FA  50DF               	movf	indf2,w,c
 23707   0082FC  0D08               	mullw	8
 23708   0082FE  50F3               	movf	243,w,c
 23709   008300  2599               	addwf	??_handleSelfEnumeration& (0+255),w,b
 23710   008302  0B7F               	andlw	127
 23711   008304  6F9D               	movwf	handleSelfEnumeration@incomingCanId& (0+255),b
 23712                           
 23713                           ; BSR set to: 0
 23714                           ;../../VLCBlib_PIC/can18_ecan.c: 829:     if ((enumerationState == ENUMERATION_IN_PROGRE
      +                          SS) || ((p[5]&0x0F) == 0)) {
 23715   008306  0E02               	movlw	2
 23716   008308  19B7               	xorwf	_enumerationState& (0+255),w,b
 23717   00830A  B4D8               	btfsc	status,2,c
 23718   00830C  D00C               	goto	u24450
 23719                           
 23720                           ; BSR set to: 0
 23721   00830E  EE20 F005          	lfsr	2,5
 23722   008312  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 23723   008314  26D9               	addwf	fsr2l,f,c
 23724   008316  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 23725   008318  22DA               	addwfc	fsr2h,f,c
 23726   00831A  50DF               	movf	indf2,w,c
 23727   00831C  6F99               	movwf	??_handleSelfEnumeration& (0+255),b
 23728   00831E  0E0F               	movlw	15
 23729   008320  1799               	andwf	??_handleSelfEnumeration& (0+255),f,b
 23730   008322  A4D8               	btfss	status,2,c
 23731   008324  D01B               	goto	l22805
 23732   008326                     u24450:
 23733                           
 23734                           ; BSR set to: 0
 23735                           ;../../VLCBlib_PIC/can18_ecan.c: 830:         ( enumerationResults[incomingCanId>>3] |= 
      +                          ( 1<<(incomingCanId & 0x07) ) );
 23736   008326  C09D  F099         	movff	handleSelfEnumeration@incomingCanId,??_handleSelfEnumeration
 23737   00832A  0E07               	movlw	7
 23738   00832C  1799               	andwf	??_handleSelfEnumeration& (0+255),f,b
 23739   00832E  0E01               	movlw	1
 23740   008330  6F9A               	movwf	(??_handleSelfEnumeration+1)& (0+255),b
 23741   008332  2B99               	incf	??_handleSelfEnumeration& (0+255),f,b
 23742   008334  D002               	goto	u24464
 23743   008336                     u24465:
 23744   008336  90D8               	bcf	status,0,c
 23745   008338  379A               	rlcf	(??_handleSelfEnumeration+1)& (0+255),f,b
 23746   00833A                     u24464:
 23747   00833A  2F99               	decfsz	??_handleSelfEnumeration& (0+255),f,b
 23748   00833C  D7FC               	goto	u24465
 23749   00833E  0100               	movlb	0	; () banked
 23750   008340  399D               	swapf	handleSelfEnumeration@incomingCanId& (0+255),w,b
 23751   008342  46E8               	rlncf	wreg,f,c
 23752   008344  0B1F               	andlw	31
 23753   008346  6F9B               	movwf	(??_handleSelfEnumeration+2)& (0+255),b
 23754   008348  6B9C               	clrf	(??_handleSelfEnumeration+3)& (0+255),b
 23755   00834A  0E34               	movlw	low _enumerationResults
 23756   00834C  259B               	addwf	(??_handleSelfEnumeration+2)& (0+255),w,b
 23757   00834E  6ED9               	movwf	fsr2l,c
 23758   008350  0E02               	movlw	high _enumerationResults
 23759   008352  219C               	addwfc	(??_handleSelfEnumeration+3)& (0+255),w,b
 23760   008354  6EDA               	movwf	fsr2h,c
 23761   008356  519A               	movf	(??_handleSelfEnumeration+1)& (0+255),w,b
 23762   008358  12DF               	iorwf	indf2,f,c
 23763                           
 23764                           ;../../VLCBlib_PIC/can18_ecan.c: 831:     } else {
 23765   00835A  D016               	goto	l22815
 23766   00835C                     l22805:
 23767                           
 23768                           ; BSR set to: 0
 23769                           ;../../VLCBlib_PIC/can18_ecan.c: 832:         if ((enumerationState == NO_ENUMERATION) &
      +                          & (incomingCanId == canId)) {
 23770   00835C  51B7               	movf	_enumerationState& (0+255),w,b
 23771   00835E  A4D8               	btfss	status,2,c
 23772   008360  D013               	goto	l22815
 23773                           
 23774                           ; BSR set to: 0
 23775   008362  51B9               	movf	_canId& (0+255),w,b
 23776   008364  199D               	xorwf	handleSelfEnumeration@incomingCanId& (0+255),w,b
 23777   008366  A4D8               	btfss	status,2,c
 23778   008368  D00F               	goto	l22815
 23779                           
 23780                           ; BSR set to: 0
 23781                           ;../../VLCBlib_PIC/can18_ecan.c: 835:             enumerationState = ENUMERATION_REQUIRE
      +                          D;
 23782   00836A  0E01               	movlw	1
 23783   00836C  6FB7               	movwf	_enumerationState& (0+255),b
 23784                           
 23785                           ; BSR set to: 0
 23786                           ;../../VLCBlib_PIC/can18_ecan.c: 836:             canDiagnostics[0x0E].asUint++;
 23787   00836E  0101               	movlb	1	; () banked
 23788   008370  4B82               	infsnz	(_canDiagnostics+28)& (0+255),f,b
 23789   008372  2B83               	incf	(_canDiagnostics+29)& (0+255),f,b
 23790                           
 23791                           ; BSR set to: 1
 23792                           ;../../VLCBlib_PIC/can18_ecan.c: 837:             enumerationStartTime.val = tickGet();
 23793   008374  EC45  F05C         	call	_tickGet	;wreg free
 23794   008378  C08D  F011         	movff	?_tickGet,_enumerationStartTime
 23795   00837C  C08E  F012         	movff	?_tickGet+1,_enumerationStartTime+1
 23796   008380  C08F  F013         	movff	?_tickGet+2,_enumerationStartTime+2
 23797   008384  C090  F014         	movff	?_tickGet+3,_enumerationStartTime+3
 23798   008388                     l22815:
 23799                           
 23800                           ;../../VLCBlib_PIC/can18_ecan.c: 841:     return (p[5] & 0x0F) ? RECEIVED:NOT_RECEIVED;
 23801   008388  0100               	movlb	0	; () banked
 23802   00838A  EE20 F005          	lfsr	2,5
 23803   00838E  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 23804   008390  26D9               	addwf	fsr2l,f,c
 23805   008392  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 23806   008394  22DA               	addwfc	fsr2h,f,c
 23807   008396  50DF               	movf	indf2,w,c
 23808   008398  6F99               	movwf	??_handleSelfEnumeration& (0+255),b
 23809   00839A  0E0F               	movlw	15
 23810   00839C  1799               	andwf	??_handleSelfEnumeration& (0+255),f,b
 23811   00839E  B4D8               	btfsc	status,2,c
 23812   0083A0  D002               	goto	u24490
 23813   0083A2  0E01               	movlw	1
 23814   0083A4  0012               	return	
 23815   0083A6                     u24490:
 23816   0083A6  0E00               	movlw	0
 23817   0083A8  0012               	return		;funcret
 23818   0083AA                     __end_of_handleSelfEnumeration:
 23819                           	callstack 0
 23820                           
 23821 ;; *************** function _getNumRxBuffersInUse *****************
 23822 ;; Defined at:
 23823 ;;		line 470 in file "../../VLCBlib_PIC/can18_ecan.c"
 23824 ;; Parameters:    Size  Location     Type
 23825 ;;		None
 23826 ;; Auto vars:     Size  Location     Type
 23827 ;;  ptr             2   51[BANK0 ] PTR unsigned char 
 23828 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 23829 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 23830 ;;		 -> NULL(0), 
 23831 ;;  i               1   54[BANK0 ] unsigned char 
 23832 ;;  no              1   53[BANK0 ] unsigned char 
 23833 ;; Return value:  Size  Location     Type
 23834 ;;                  1    wreg      unsigned char 
 23835 ;; Registers used:
 23836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23837 ;; Tracked objects:
 23838 ;;		On entry : 0/0
 23839 ;;		On exit  : 0/0
 23840 ;;		Unchanged: 0/0
 23841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23843 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23845 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23846 ;;Total ram usage:        4 bytes
 23847 ;; Hardware stack levels used: 1
 23848 ;; Hardware stack levels required when called: 13
 23849 ;; This function calls:
 23850 ;;		_getBufferPointer
 23851 ;;		_quantity
 23852 ;; This function is called by:
 23853 ;;		_canGetDiagnostic
 23854 ;;		_canReceiveMessage
 23855 ;; This function uses a non-reentrant model
 23856 ;;
 23857                           
 23858                           	psect	text86
 23859   00BFE2                     __ptext86:
 23860                           	callstack 0
 23861   00BFE2                     _getNumRxBuffersInUse:
 23862                           	callstack 13
 23863                           
 23864                           ;../../VLCBlib_PIC/can18_ecan.c: 471:     uint8_t no;;../../VLCBlib_PIC/can18_ecan.c: 47
      +                          2:     uint8_t i;;../../VLCBlib_PIC/can18_ecan.c: 473:     uint8_t * ptr;;../../VLCBlib_
      +                          PIC/can18_ecan.c: 475:     no = quantity(&rxQueue);
 23865                           
 23866                           ;incstack = 0
 23867   00BFE2  0E26               	movlw	low _rxQueue
 23868   00BFE4  0100               	movlb	0	; () banked
 23869   00BFE6  6F8D               	movwf	quantity@q& (0+255),b
 23870   00BFE8  6B8E               	clrf	(quantity@q+1)& (0+255),b
 23871   00BFEA  EC94  F05F         	call	_quantity	;wreg free
 23872   00BFEE  0100               	movlb	0	; () banked
 23873   00BFF0  6F95               	movwf	getNumRxBuffersInUse@no& (0+255),b
 23874                           
 23875                           ; BSR set to: 0
 23876                           ;../../VLCBlib_PIC/can18_ecan.c: 476:     for (i=0; i<8; i++) {
 23877   00BFF2  0E00               	movlw	0
 23878   00BFF4  6F96               	movwf	getNumRxBuffersInUse@i& (0+255),b
 23879   00BFF6                     l20473:
 23880                           
 23881                           ; BSR set to: 0
 23882                           ;../../VLCBlib_PIC/can18_ecan.c: 477:         ptr = getBufferPointer(i);
 23883   00BFF6  5196               	movf	getNumRxBuffersInUse@i& (0+255),w,b
 23884   00BFF8  ECF1  F051         	call	_getBufferPointer
 23885   00BFFC  C08D  F093         	movff	?_getBufferPointer,getNumRxBuffersInUse@ptr
 23886   00C000  C08E  F094         	movff	?_getBufferPointer+1,getNumRxBuffersInUse@ptr+1
 23887                           
 23888                           ;../../VLCBlib_PIC/can18_ecan.c: 478:         if (ptr[0] & 0x80) {
 23889   00C004  C093  FFD9         	movff	getNumRxBuffersInUse@ptr,fsr2l
 23890   00C008  C094  FFDA         	movff	getNumRxBuffersInUse@ptr+1,fsr2h
 23891   00C00C  0100               	movlb	0	; () banked
 23892   00C00E  BEDF               	btfsc	indf2,7,c
 23893                           
 23894                           ; BSR set to: 0
 23895                           ;../../VLCBlib_PIC/can18_ecan.c: 479:             no++;
 23896   00C010  2B95               	incf	getNumRxBuffersInUse@no& (0+255),f,b
 23897                           
 23898                           ; BSR set to: 0
 23899                           ;../../VLCBlib_PIC/can18_ecan.c: 481:     }
 23900                           
 23901                           ;../../VLCBlib_PIC/can18_ecan.c: 480:         }
 23902   00C012  2B96               	incf	getNumRxBuffersInUse@i& (0+255),f,b
 23903                           
 23904                           ; BSR set to: 0
 23905   00C014  0E07               	movlw	7
 23906   00C016  6596               	cpfsgt	getNumRxBuffersInUse@i& (0+255),b
 23907   00C018  D7EE               	goto	l20473
 23908                           
 23909                           ; BSR set to: 0
 23910                           ;../../VLCBlib_PIC/can18_ecan.c: 482:     return no;
 23911   00C01A  5195               	movf	getNumRxBuffersInUse@no& (0+255),w,b
 23912                           
 23913                           ; BSR set to: 0
 23914   00C01C  0012               	return		;funcret
 23915   00C01E                     __end_of_getNumRxBuffersInUse:
 23916                           	callstack 0
 23917                           
 23918 ;; *************** function _getBufferPointer *****************
 23919 ;; Defined at:
 23920 ;;		line 667 in file "../../VLCBlib_PIC/can18_ecan.c"
 23921 ;; Parameters:    Size  Location     Type
 23922 ;;  b               1    wreg     unsigned char 
 23923 ;; Auto vars:     Size  Location     Type
 23924 ;;  b               1   47[BANK0 ] unsigned char 
 23925 ;; Return value:  Size  Location     Type
 23926 ;;                  2   45[BANK0 ] PTR unsigned char 
 23927 ;; Registers used:
 23928 ;;		wreg, status,2, status,0
 23929 ;; Tracked objects:
 23930 ;;		On entry : 0/0
 23931 ;;		On exit  : 0/0
 23932 ;;		Unchanged: 0/0
 23933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23934 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23935 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23937 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23938 ;;Total ram usage:        3 bytes
 23939 ;; Hardware stack levels used: 1
 23940 ;; Hardware stack levels required when called: 12
 23941 ;; This function calls:
 23942 ;;		Nothing
 23943 ;; This function is called by:
 23944 ;;		_getNumRxBuffersInUse
 23945 ;;		_canReceiveMessage
 23946 ;; This function uses a non-reentrant model
 23947 ;;
 23948                           
 23949                           	psect	text87
 23950   00A3E2                     __ptext87:
 23951                           	callstack 0
 23952   00A3E2                     _getBufferPointer:
 23953                           	callstack 13
 23954                           
 23955                           ; BSR set to: 0
 23956                           ;incstack = 0
 23957                           ;getBufferPointer@b stored from wreg
 23958   00A3E2  0100               	movlb	0	; () banked
 23959   00A3E4  6F8F               	movwf	getBufferPointer@b& (0+255),b
 23960                           
 23961                           ;../../VLCBlib_PIC/can18_ecan.c: 668:     switch (b) {
 23962   00A3E6  D02D               	goto	l20125
 23963   00A3E8                     l20087:
 23964                           
 23965                           ; BSR set to: 0
 23966                           ;../../VLCBlib_PIC/can18_ecan.c: 670:             return (uint8_t*) & RXB0CON;
 23967   00A3E8  0E60               	movlw	96
 23968   00A3EA  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23969   00A3EC  0E0F               	movlw	15
 23970   00A3EE  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23971   00A3F0  0012               	return	
 23972   00A3F2                     l20091:
 23973                           
 23974                           ; BSR set to: 0
 23975                           ;../../VLCBlib_PIC/can18_ecan.c: 672:             return (uint8_t*) & RXB1CON;
 23976   00A3F2  0E30               	movlw	48
 23977   00A3F4  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23978   00A3F6  0E0F               	movlw	15
 23979   00A3F8  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23980   00A3FA  0012               	return	
 23981   00A3FC                     l20095:
 23982                           
 23983                           ; BSR set to: 0
 23984                           ;../../VLCBlib_PIC/can18_ecan.c: 674:             return (uint8_t*) & B0CON;
 23985   00A3FC  0E80               	movlw	128
 23986   00A3FE  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23987   00A400  0E0E               	movlw	14
 23988   00A402  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23989   00A404  0012               	return	
 23990   00A406                     l20099:
 23991                           
 23992                           ; BSR set to: 0
 23993                           ;../../VLCBlib_PIC/can18_ecan.c: 676:             return (uint8_t*) & B1CON;
 23994   00A406  0E90               	movlw	144
 23995   00A408  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23996   00A40A  0E0E               	movlw	14
 23997   00A40C  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23998   00A40E  0012               	return	
 23999   00A410                     l20103:
 24000                           
 24001                           ; BSR set to: 0
 24002                           ;../../VLCBlib_PIC/can18_ecan.c: 678:             return (uint8_t*) & B2CON;
 24003   00A410  0EA0               	movlw	160
 24004   00A412  6F8D               	movwf	?_getBufferPointer& (0+255),b
 24005   00A414  0E0E               	movlw	14
 24006   00A416  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 24007   00A418  0012               	return	
 24008   00A41A                     l20107:
 24009                           
 24010                           ; BSR set to: 0
 24011                           ;../../VLCBlib_PIC/can18_ecan.c: 680:             return (uint8_t*) & B3CON;
 24012   00A41A  0EB0               	movlw	176
 24013   00A41C  6F8D               	movwf	?_getBufferPointer& (0+255),b
 24014   00A41E  0E0E               	movlw	14
 24015   00A420  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 24016   00A422  0012               	return	
 24017   00A424                     l20111:
 24018                           
 24019                           ; BSR set to: 0
 24020                           ;../../VLCBlib_PIC/can18_ecan.c: 682:             return (uint8_t*) & B4CON;
 24021   00A424  0EC0               	movlw	192
 24022   00A426  6F8D               	movwf	?_getBufferPointer& (0+255),b
 24023   00A428  0E0E               	movlw	14
 24024   00A42A  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 24025   00A42C  0012               	return	
 24026   00A42E                     l20115:
 24027                           
 24028                           ; BSR set to: 0
 24029                           ;../../VLCBlib_PIC/can18_ecan.c: 684:             return (uint8_t*) & B5CON;
 24030   00A42E  0ED0               	movlw	208
 24031   00A430  6F8D               	movwf	?_getBufferPointer& (0+255),b
 24032   00A432  0E0E               	movlw	14
 24033   00A434  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 24034   00A436  0012               	return	
 24035   00A438                     l20119:
 24036                           
 24037                           ; BSR set to: 0
 24038                           ;../../VLCBlib_PIC/can18_ecan.c: 686:             return ((void*)0);
 24039   00A438  0E00               	movlw	0
 24040   00A43A  6F8D               	movwf	?_getBufferPointer& (0+255),b
 24041   00A43C  0E00               	movlw	0
 24042   00A43E  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 24043   00A440  0012               	return	
 24044   00A442                     l20125:
 24045   00A442  0100               	movlb	0	; () banked
 24046   00A444  518F               	movf	getBufferPointer@b& (0+255),w,b
 24047                           
 24048                           ; Switch size 1, requested type "simple"
 24049                           ; Number of cases is 8, Range of values is 0 to 7
 24050                           ; switch strategies available:
 24051                           ; Name         Instructions Cycles
 24052                           ; simple_byte           25    13 (average)
 24053                           ;	Chosen strategy is simple_byte
 24054   00A446  0A00               	xorlw	0	; case 0
 24055   00A448  B4D8               	btfsc	status,2,c
 24056   00A44A  D7CE               	goto	l20087
 24057   00A44C  0A01               	xorlw	1	; case 1
 24058   00A44E  B4D8               	btfsc	status,2,c
 24059   00A450  D7D0               	goto	l20091
 24060   00A452  0A03               	xorlw	3	; case 2
 24061   00A454  B4D8               	btfsc	status,2,c
 24062   00A456  D7D2               	goto	l20095
 24063   00A458  0A01               	xorlw	1	; case 3
 24064   00A45A  B4D8               	btfsc	status,2,c
 24065   00A45C  D7D4               	goto	l20099
 24066   00A45E  0A07               	xorlw	7	; case 4
 24067   00A460  B4D8               	btfsc	status,2,c
 24068   00A462  D7D6               	goto	l20103
 24069   00A464  0A01               	xorlw	1	; case 5
 24070   00A466  B4D8               	btfsc	status,2,c
 24071   00A468  D7D8               	goto	l20107
 24072   00A46A  0A03               	xorlw	3	; case 6
 24073   00A46C  B4D8               	btfsc	status,2,c
 24074   00A46E  D7DA               	goto	l20111
 24075   00A470  0A01               	xorlw	1	; case 7
 24076   00A472  B4D8               	btfsc	status,2,c
 24077   00A474  D7DC               	goto	l20115
 24078   00A476  D7E0               	goto	l20119
 24079   00A478                     __end_of_getBufferPointer:
 24080                           	callstack 0
 24081                           
 24082 ;; *************** function _sendMessage7 *****************
 24083 ;; Defined at:
 24084 ;;		line 1210 in file "../../VLCBlib_PIC/vlcb.c"
 24085 ;; Parameters:    Size  Location     Type
 24086 ;;  opc             1    wreg     enum E12392
 24087 ;;  data1           1    8[BANK1 ] unsigned char 
 24088 ;;  data2           1    9[BANK1 ] unsigned char 
 24089 ;;  data3           1   10[BANK1 ] unsigned char 
 24090 ;;  data4           1   11[BANK1 ] unsigned char 
 24091 ;;  data5           1   12[BANK1 ] unsigned char 
 24092 ;;  data6           1   13[BANK1 ] unsigned char 
 24093 ;;  data7           1   14[BANK1 ] unsigned char 
 24094 ;; Auto vars:     Size  Location     Type
 24095 ;;  opc             1   71[BANK0 ] enum E12392
 24096 ;; Return value:  Size  Location     Type
 24097 ;;                  1    wreg      void 
 24098 ;; Registers used:
 24099 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24100 ;; Tracked objects:
 24101 ;;		On entry : 0/0
 24102 ;;		On exit  : 0/0
 24103 ;;		Unchanged: 0/0
 24104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24105 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24106 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24108 ;;      Totals:         0       1       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24109 ;;Total ram usage:        8 bytes
 24110 ;; Hardware stack levels used: 1
 24111 ;; Hardware stack levels required when called: 16
 24112 ;; This function calls:
 24113 ;;		_sendMessage
 24114 ;; This function is called by:
 24115 ;;		_ackEventProcessMessage
 24116 ;;		_mnsProcessMessage
 24117 ;;		_nerdCallback
 24118 ;; This function uses a non-reentrant model
 24119 ;;
 24120                           
 24121                           	psect	text88
 24122   00C25E                     __ptext88:
 24123                           	callstack 0
 24124   00C25E                     _sendMessage7:
 24125                           	callstack 11
 24126                           
 24127                           ; BSR set to: 0
 24128                           ;incstack = 0
 24129                           ;sendMessage7@opc stored from wreg
 24130   00C25E  0100               	movlb	0	; () banked
 24131   00C260  6FA7               	movwf	sendMessage7@opc& (0+255),b
 24132                           
 24133                           ;../../VLCBlib_PIC/vlcb.c: 1211:     sendMessage(opc, 8, data1, data2, data3, data4, dat
      +                          a5, data6, data7);
 24134   00C262  0E08               	movlw	8
 24135   00C264  0101               	movlb	1	; () banked
 24136   00C266  6FBE               	movwf	sendMessage@len& (0+255),b
 24137   00C268  C1C6  F1BF         	movff	sendMessage7@data1,sendMessage@data1
 24138   00C26C  C1C7  F1C0         	movff	sendMessage7@data2,sendMessage@data2
 24139   00C270  C1C8  F1C1         	movff	sendMessage7@data3,sendMessage@data3
 24140   00C274  C1C9  F1C2         	movff	sendMessage7@data4,sendMessage@data4
 24141   00C278  C1CA  F1C3         	movff	sendMessage7@data5,sendMessage@data5
 24142   00C27C  C1CB  F1C4         	movff	sendMessage7@data6,sendMessage@data6
 24143   00C280  C1CC  F1C5         	movff	sendMessage7@data7,sendMessage@data7
 24144   00C284  0100               	movlb	0	; () banked
 24145   00C286  51A7               	movf	sendMessage7@opc& (0+255),w,b
 24146   00C288  EC02  F056         	call	_sendMessage
 24147   00C28C  0012               	return		;funcret
 24148   00C28E                     __end_of_sendMessage7:
 24149                           	callstack 0
 24150                           
 24151 ;; *************** function _isConsumedEvent *****************
 24152 ;; Defined at:
 24153 ;;		line 382 in file "../event_consumerDualActionQueue.c"
 24154 ;; Parameters:    Size  Location     Type
 24155 ;;  eventIndex      1    wreg     unsigned char 
 24156 ;; Auto vars:     Size  Location     Type
 24157 ;;  eventIndex      1   70[BANK0 ] unsigned char 
 24158 ;;  ev              1   71[BANK0 ] unsigned char 
 24159 ;; Return value:  Size  Location     Type
 24160 ;;                  1    wreg      unsigned char 
 24161 ;; Registers used:
 24162 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24163 ;; Tracked objects:
 24164 ;;		On entry : 0/0
 24165 ;;		On exit  : 0/0
 24166 ;;		Unchanged: 0/0
 24167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24169 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24171 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24172 ;;Total ram usage:        2 bytes
 24173 ;; Hardware stack levels used: 1
 24174 ;; Hardware stack levels required when called: 16
 24175 ;; This function calls:
 24176 ;;		_getEv
 24177 ;; This function is called by:
 24178 ;;		_ackEventProcessMessage
 24179 ;; This function uses a non-reentrant model
 24180 ;;
 24181                           
 24182                           	psect	text89
 24183   00C674                     __ptext89:
 24184                           	callstack 0
 24185   00C674                     _isConsumedEvent:
 24186                           	callstack 12
 24187                           
 24188                           ;incstack = 0
 24189                           ;isConsumedEvent@eventIndex stored from wreg
 24190   00C674  0100               	movlb	0	; () banked
 24191   00C676  6FA6               	movwf	isConsumedEvent@eventIndex& (0+255),b
 24192                           
 24193                           ;../event_consumerDualActionQueue.c: 383:     uint8_t ev;;../event_consumerDualActionQue
      +                          ue.c: 384:     ev = (uint8_t)getEv(eventIndex, 1);
 24194   00C678  0E01               	movlw	1
 24195   00C67A  0100               	movlb	0	; () banked
 24196   00C67C  6F9D               	movwf	getEv@evNum& (0+255),b
 24197   00C67E  51A6               	movf	isConsumedEvent@eventIndex& (0+255),w,b
 24198   00C680  EC1C  F03D         	call	_getEv
 24199   00C684  0100               	movlb	0	; () banked
 24200   00C686  519D               	movf	?_getEv& (0+255),w,b
 24201   00C688  6FA7               	movwf	isConsumedEvent@ev& (0+255),b
 24202                           
 24203                           ; BSR set to: 0
 24204                           ;../event_consumerDualActionQueue.c: 385:     return (ev != 0);
 24205   00C68A  51A7               	movf	isConsumedEvent@ev& (0+255),w,b
 24206   00C68C  B4D8               	btfsc	status,2,c
 24207   00C68E  D002               	goto	u22670
 24208   00C690  0E01               	movlw	1
 24209   00C692  0012               	return	
 24210   00C694                     u22670:
 24211   00C694  0E00               	movlw	0
 24212                           
 24213                           ; BSR set to: 0
 24214   00C696  0012               	return		;funcret
 24215   00C698                     __end_of_isConsumedEvent:
 24216                           	callstack 0
 24217                           
 24218 ;; *************** function _findService *****************
 24219 ;; Defined at:
 24220 ;;		line 808 in file "../../VLCBlib_PIC/vlcb.c"
 24221 ;; Parameters:    Size  Location     Type
 24222 ;;  id              1    wreg     unsigned char 
 24223 ;; Auto vars:     Size  Location     Type
 24224 ;;  id              1   49[BANK0 ] unsigned char 
 24225 ;;  i               1   50[BANK0 ] unsigned char 
 24226 ;; Return value:  Size  Location     Type
 24227 ;;                  2   45[BANK0 ] PTR const struct Service
 24228 ;; Registers used:
 24229 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 24230 ;; Tracked objects:
 24231 ;;		On entry : 0/0
 24232 ;;		On exit  : 0/0
 24233 ;;		Unchanged: 0/0
 24234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24235 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24236 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24237 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24238 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24239 ;;Total ram usage:        6 bytes
 24240 ;; Hardware stack levels used: 1
 24241 ;; Hardware stack levels required when called: 12
 24242 ;; This function calls:
 24243 ;;		Nothing
 24244 ;; This function is called by:
 24245 ;;		_ackEventProcessMessage
 24246 ;; This function uses a non-reentrant model
 24247 ;;
 24248                           
 24249                           	psect	text90
 24250   00A34A                     __ptext90:
 24251                           	callstack 0
 24252   00A34A                     _findService:
 24253                           	callstack 16
 24254                           
 24255                           ; BSR set to: 0
 24256                           ;incstack = 0
 24257                           ;findService@id stored from wreg
 24258   00A34A  0100               	movlb	0	; () banked
 24259   00A34C  6F91               	movwf	findService@id& (0+255),b
 24260                           
 24261                           ;../../VLCBlib_PIC/vlcb.c: 809:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 810:     for (i
      +                          =0; i<9; i++) {
 24262   00A34E  0E00               	movlw	0
 24263   00A350  0100               	movlb	0	; () banked
 24264   00A352  6F92               	movwf	findService@i& (0+255),b
 24265   00A354                     l22329:
 24266                           
 24267                           ; BSR set to: 0
 24268                           ;../../VLCBlib_PIC/vlcb.c: 811:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == id)) {
 24269   00A354  5192               	movf	findService@i& (0+255),w,b
 24270   00A356  0D02               	mullw	2
 24271   00A358  0E69               	movlw	low _services
 24272   00A35A  24F3               	addwf	243,w,c
 24273   00A35C  6EF6               	movwf	tblptrl,c
 24274   00A35E  0EEE               	movlw	high _services
 24275   00A360  20F4               	addwfc	244,w,c
 24276   00A362  6EF7               	movwf	tblptrh,c
 24277   00A364                     	if	1	;There are 3 active tblptr bytes
 24278   00A364  6AF8               	clrf	tblptru,c
 24279   00A366  0E00               	movlw	low (__mediumconst shr (0+16))
 24280   00A368  22F8               	addwfc	tblptru,f,c
 24281   00A36A                     	endif
 24282   00A36A  0009               	tblrd		*+
 24283   00A36C  50F5               	movf	tablat,w,c
 24284   00A36E  0009               	tblrd		*+
 24285   00A370  10F5               	iorwf	tablat,w,c
 24286   00A372  B4D8               	btfsc	status,2,c
 24287   00A374  D02D               	goto	l22337
 24288                           
 24289                           ; BSR set to: 0
 24290   00A376  5192               	movf	findService@i& (0+255),w,b
 24291   00A378  0D02               	mullw	2
 24292   00A37A  0E69               	movlw	low _services
 24293   00A37C  24F3               	addwf	243,w,c
 24294   00A37E  6EF6               	movwf	tblptrl,c
 24295   00A380  0EEE               	movlw	high _services
 24296   00A382  20F4               	addwfc	244,w,c
 24297   00A384  6EF7               	movwf	tblptrh,c
 24298   00A386                     	if	1	;There are 3 active tblptr bytes
 24299   00A386  6AF8               	clrf	tblptru,c
 24300   00A388  0E00               	movlw	low (__mediumconst shr (0+16))
 24301   00A38A  22F8               	addwfc	tblptru,f,c
 24302   00A38C                     	endif
 24303   00A38C  0009               	tblrd		*+
 24304   00A38E  CFF5 F08F          	movff	tablat,??_findService
 24305   00A392  0009               	tblrd		*+
 24306   00A394  CFF5 F090          	movff	tablat,??_findService+1
 24307   00A398  C08F  FFF6         	movff	??_findService,tblptrl
 24308   00A39C  C090  FFF7         	movff	??_findService+1,tblptrh
 24309   00A3A0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24310   00A3A0  6AF8               	clrf	tblptru,c
 24311   00A3A2                     	endif
 24312   00A3A2                     	if	0	;tblptru may be non-zero
 24313   00A3A2                     	endif
 24314   00A3A2  0008               	tblrd		*
 24315   00A3A4  50F5               	movf	tablat,w,c
 24316   00A3A6  1991               	xorwf	findService@id& (0+255),w,b
 24317   00A3A8  A4D8               	btfss	status,2,c
 24318   00A3AA  D012               	goto	l22337
 24319                           
 24320                           ; BSR set to: 0
 24321                           ;../../VLCBlib_PIC/vlcb.c: 812:             return services[i];
 24322   00A3AC  5192               	movf	findService@i& (0+255),w,b
 24323   00A3AE  0D02               	mullw	2
 24324   00A3B0  0E69               	movlw	low _services
 24325   00A3B2  24F3               	addwf	243,w,c
 24326   00A3B4  6EF6               	movwf	tblptrl,c
 24327   00A3B6  0EEE               	movlw	high _services
 24328   00A3B8  20F4               	addwfc	244,w,c
 24329   00A3BA  6EF7               	movwf	tblptrh,c
 24330   00A3BC                     	if	1	;There are 3 active tblptr bytes
 24331   00A3BC  6AF8               	clrf	tblptru,c
 24332   00A3BE  0E00               	movlw	low (__mediumconst shr (0+16))
 24333   00A3C0  22F8               	addwfc	tblptru,f,c
 24334   00A3C2                     	endif
 24335   00A3C2  0009               	tblrd		*+
 24336   00A3C4  CFF5 F08D          	movff	tablat,?_findService
 24337   00A3C8  000A               	tblrd		*-
 24338   00A3CA  CFF5 F08E          	movff	tablat,?_findService+1
 24339   00A3CE  0012               	return	
 24340   00A3D0                     l22337:
 24341                           
 24342                           ; BSR set to: 0
 24343                           ;../../VLCBlib_PIC/vlcb.c: 814:     }
 24344   00A3D0  2B92               	incf	findService@i& (0+255),f,b
 24345                           
 24346                           ; BSR set to: 0
 24347   00A3D2  0E08               	movlw	8
 24348   00A3D4  6592               	cpfsgt	findService@i& (0+255),b
 24349   00A3D6  D7BE               	goto	l22329
 24350                           
 24351                           ; BSR set to: 0
 24352                           ;../../VLCBlib_PIC/vlcb.c: 815:     return ((void*)0);
 24353   00A3D8  0E00               	movlw	0
 24354   00A3DA  6F8D               	movwf	?_findService& (0+255),b
 24355   00A3DC  0E00               	movlw	0
 24356   00A3DE  6F8E               	movwf	(?_findService+1)& (0+255),b
 24357                           
 24358                           ; BSR set to: 0
 24359   00A3E0  0012               	return		;funcret
 24360   00A3E2                     __end_of_findService:
 24361                           	callstack 0
 24362                           
 24363 ;; *************** function _ackEventCheckLen *****************
 24364 ;; Defined at:
 24365 ;;		line 184 in file "../../VLCBlib_PIC/event_acknowledge.c"
 24366 ;; Parameters:    Size  Location     Type
 24367 ;;  m               2   17[BANK1 ] PTR struct Message
 24368 ;;		 -> poll@m(9), 
 24369 ;;  needed          1   19[BANK1 ] unsigned char 
 24370 ;; Auto vars:     Size  Location     Type
 24371 ;;		None
 24372 ;; Return value:  Size  Location     Type
 24373 ;;                  1    wreg      enum E12799
 24374 ;; Registers used:
 24375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24376 ;; Tracked objects:
 24377 ;;		On entry : 0/0
 24378 ;;		On exit  : 0/0
 24379 ;;		Unchanged: 0/0
 24380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24381 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24384 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24385 ;;Total ram usage:        3 bytes
 24386 ;; Hardware stack levels used: 1
 24387 ;; Hardware stack levels required when called: 18
 24388 ;; This function calls:
 24389 ;;		_checkLen
 24390 ;; This function is called by:
 24391 ;;		_ackEventProcessMessage
 24392 ;; This function uses a non-reentrant model
 24393 ;;
 24394                           
 24395                           	psect	text91
 24396   00C804                     __ptext91:
 24397                           	callstack 0
 24398   00C804                     _ackEventCheckLen:
 24399                           	callstack 10
 24400                           
 24401                           ;../../VLCBlib_PIC/event_acknowledge.c: 185:     return checkLen(m, needed, SERVICE_ID_E
      +                          VENTACK);
 24402                           
 24403                           ; BSR set to: 0
 24404                           ;incstack = 0
 24405   00C804  C1CF  F1CB         	movff	ackEventCheckLen@m,checkLen@m
 24406   00C808  C1D0  F1CC         	movff	ackEventCheckLen@m+1,checkLen@m+1
 24407   00C80C  C1D1  F1CD         	movff	ackEventCheckLen@needed,checkLen@needed
 24408   00C810  0E09               	movlw	9
 24409   00C812  0101               	movlb	1	; () banked
 24410   00C814  6FCE               	movwf	checkLen@service& (0+255),b
 24411   00C816  EC84  F055         	call	_checkLen	;wreg free
 24412   00C81A  0012               	return		;funcret
 24413   00C81C                     __end_of_ackEventCheckLen:
 24414                           	callstack 0
 24415                           
 24416 ;; *************** function _checkLen *****************
 24417 ;; Defined at:
 24418 ;;		line 1096 in file "../../VLCBlib_PIC/vlcb.c"
 24419 ;; Parameters:    Size  Location     Type
 24420 ;;  m               2   13[BANK1 ] PTR struct Message
 24421 ;;		 -> poll@m(9), 
 24422 ;;  needed          1   15[BANK1 ] unsigned char 
 24423 ;;  service         1   16[BANK1 ] unsigned char 
 24424 ;; Auto vars:     Size  Location     Type
 24425 ;;		None
 24426 ;; Return value:  Size  Location     Type
 24427 ;;                  1    wreg      enum E12799
 24428 ;; Registers used:
 24429 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24430 ;; Tracked objects:
 24431 ;;		On entry : 0/0
 24432 ;;		On exit  : 0/0
 24433 ;;		Unchanged: 0/0
 24434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24435 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24437 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24438 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24439 ;;Total ram usage:        5 bytes
 24440 ;; Hardware stack levels used: 1
 24441 ;; Hardware stack levels required when called: 17
 24442 ;; This function calls:
 24443 ;;		_sendMessage5
 24444 ;; This function is called by:
 24445 ;;		_ackEventCheckLen
 24446 ;;		_teachCheckLen
 24447 ;; This function uses a non-reentrant model
 24448 ;;
 24449                           
 24450                           	psect	text92
 24451   00AB08                     __ptext92:
 24452                           	callstack 0
 24453   00AB08                     _checkLen:
 24454                           	callstack 10
 24455                           
 24456                           ;../../VLCBlib_PIC/vlcb.c: 1097:     if (m->len < needed) {
 24457                           
 24458                           ;incstack = 0
 24459   00AB08  C1CB  FFD9         	movff	checkLen@m,fsr2l
 24460   00AB0C  C1CC  FFDA         	movff	checkLen@m+1,fsr2h
 24461   00AB10  0101               	movlb	1	; () banked
 24462   00AB12  51CD               	movf	checkLen@needed& (0+255),w,b
 24463   00AB14  5CDE               	subwf	postinc2,w,c
 24464   00AB16  B0D8               	btfsc	status,0,c
 24465   00AB18  D034               	goto	l21163
 24466                           
 24467                           ; BSR set to: 1
 24468                           ;../../VLCBlib_PIC/vlcb.c: 1099:         if (m->len > 2) {
 24469   00AB1A  C1CB  FFD9         	movff	checkLen@m,fsr2l
 24470   00AB1E  C1CC  FFDA         	movff	checkLen@m+1,fsr2h
 24471   00AB22  0E02               	movlw	2
 24472   00AB24  64DF               	cpfsgt	indf2,c
 24473   00AB26  D02B               	goto	l21159
 24474                           
 24475                           ; BSR set to: 1
 24476                           ;../../VLCBlib_PIC/vlcb.c: 1100:             if ((m->bytes[0] == nn.bytes.hi) && (m->byt
      +                          es[1] == nn.bytes.lo)) {
 24477   00AB28  EE20 F002          	lfsr	2,2
 24478   00AB2C  51CB               	movf	checkLen@m& (0+255),w,b
 24479   00AB2E  26D9               	addwf	fsr2l,f,c
 24480   00AB30  51CC               	movf	(checkLen@m+1)& (0+255),w,b
 24481   00AB32  22DA               	addwfc	fsr2h,f,c
 24482   00AB34  50DE               	movf	postinc2,w,c
 24483   00AB36  0100               	movlb	0	; () banked
 24484   00AB38  19B5               	xorwf	(_nn+1)& (0+255),w,b
 24485   00AB3A  A4D8               	btfss	status,2,c
 24486   00AB3C  D020               	goto	l21159
 24487                           
 24488                           ; BSR set to: 0
 24489   00AB3E  0101               	movlb	1	; () banked
 24490   00AB40  EE20 F003          	lfsr	2,3
 24491   00AB44  51CB               	movf	checkLen@m& (0+255),w,b
 24492   00AB46  26D9               	addwf	fsr2l,f,c
 24493   00AB48  51CC               	movf	(checkLen@m+1)& (0+255),w,b
 24494   00AB4A  22DA               	addwfc	fsr2h,f,c
 24495   00AB4C  0100               	movlb	0	; () banked
 24496   00AB4E  51B4               	movf	_nn& (0+255),w,b
 24497   00AB50  18DE               	xorwf	postinc2,w,c
 24498   00AB52  A4D8               	btfss	status,2,c
 24499   00AB54  D014               	goto	l21159
 24500                           
 24501                           ; BSR set to: 0
 24502                           ;../../VLCBlib_PIC/vlcb.c: 1101:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, m->opc, service, CMDERR_INV_CMD);
 24503   00AB56  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 24504   00AB5A  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 24505   00AB5E  0101               	movlb	1	; () banked
 24506   00AB60  EE20 F001          	lfsr	2,1
 24507   00AB64  51CB               	movf	checkLen@m& (0+255),w,b
 24508   00AB66  26D9               	addwf	fsr2l,f,c
 24509   00AB68  51CC               	movf	(checkLen@m+1)& (0+255),w,b
 24510   00AB6A  22DA               	addwfc	fsr2h,f,c
 24511   00AB6C  50DF               	movf	indf2,w,c
 24512   00AB6E  6FC8               	movwf	sendMessage5@data3& (0+255),b
 24513   00AB70  C1CE  F1C9         	movff	checkLen@service,sendMessage5@data4
 24514   00AB74  0E01               	movlw	1
 24515   00AB76  6FCA               	movwf	sendMessage5@data5& (0+255),b
 24516   00AB78  0EAF               	movlw	175
 24517   00AB7A  EC47  F061         	call	_sendMessage5
 24518   00AB7E                     l21159:
 24519                           
 24520                           ;../../VLCBlib_PIC/vlcb.c: 1105:         return PROCESSED;
 24521   00AB7E  0E01               	movlw	1
 24522   00AB80  0012               	return	
 24523   00AB82                     l21163:
 24524                           
 24525                           ; BSR set to: 1
 24526                           ;../../VLCBlib_PIC/vlcb.c: 1107:     return NOT_PROCESSED;
 24527   00AB82  0E00               	movlw	0
 24528   00AB84  0012               	return		;funcret
 24529   00AB86                     __end_of_checkLen:
 24530                           	callstack 0
 24531                           
 24532 ;; *************** function _sendMessage5 *****************
 24533 ;; Defined at:
 24534 ;;		line 1181 in file "../../VLCBlib_PIC/vlcb.c"
 24535 ;; Parameters:    Size  Location     Type
 24536 ;;  opc             1    wreg     enum E12392
 24537 ;;  data1           1    8[BANK1 ] unsigned char 
 24538 ;;  data2           1    9[BANK1 ] unsigned char 
 24539 ;;  data3           1   10[BANK1 ] unsigned char 
 24540 ;;  data4           1   11[BANK1 ] unsigned char 
 24541 ;;  data5           1   12[BANK1 ] unsigned char 
 24542 ;; Auto vars:     Size  Location     Type
 24543 ;;  opc             1   71[BANK0 ] enum E12392
 24544 ;; Return value:  Size  Location     Type
 24545 ;;                  1    wreg      void 
 24546 ;; Registers used:
 24547 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24548 ;; Tracked objects:
 24549 ;;		On entry : 0/0
 24550 ;;		On exit  : 0/0
 24551 ;;		Unchanged: 0/0
 24552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24553 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24554 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24556 ;;      Totals:         0       1       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24557 ;;Total ram usage:        6 bytes
 24558 ;; Hardware stack levels used: 1
 24559 ;; Hardware stack levels required when called: 16
 24560 ;; This function calls:
 24561 ;;		_sendMessage
 24562 ;; This function is called by:
 24563 ;;		_mnsProcessMessage
 24564 ;;		_mnsPoll
 24565 ;;		_mnsTRserviceDiscoveryCallback
 24566 ;;		_nvProcessMessage
 24567 ;;		_checkLen
 24568 ;;		_canProcessMessage
 24569 ;;		_teachProcessMessage
 24570 ;;		_teachCheckLen
 24571 ;;		_doNenrd
 24572 ;;		_doNnclr
 24573 ;;		_doEvlrn
 24574 ;;		_doReval
 24575 ;;		_doEvuln
 24576 ;;		_doReqev
 24577 ;;		_reqevCallback
 24578 ;; This function uses a non-reentrant model
 24579 ;;
 24580                           
 24581                           	psect	text93
 24582   00C28E                     __ptext93:
 24583                           	callstack 0
 24584   00C28E                     _sendMessage5:
 24585                           	callstack 11
 24586                           
 24587                           ;incstack = 0
 24588                           ;sendMessage5@opc stored from wreg
 24589   00C28E  0100               	movlb	0	; () banked
 24590   00C290  6FA7               	movwf	sendMessage5@opc& (0+255),b
 24591                           
 24592                           ;../../VLCBlib_PIC/vlcb.c: 1182:     sendMessage(opc, 6, data1, data2, data3, data4, dat
      +                          a5, 0,0);
 24593   00C292  0E06               	movlw	6
 24594   00C294  0101               	movlb	1	; () banked
 24595   00C296  6FBE               	movwf	sendMessage@len& (0+255),b
 24596   00C298  C1C6  F1BF         	movff	sendMessage5@data1,sendMessage@data1
 24597   00C29C  C1C7  F1C0         	movff	sendMessage5@data2,sendMessage@data2
 24598   00C2A0  C1C8  F1C1         	movff	sendMessage5@data3,sendMessage@data3
 24599   00C2A4  C1C9  F1C2         	movff	sendMessage5@data4,sendMessage@data4
 24600   00C2A8  C1CA  F1C3         	movff	sendMessage5@data5,sendMessage@data5
 24601   00C2AC  0E00               	movlw	0
 24602   00C2AE  6FC4               	movwf	sendMessage@data6& (0+255),b
 24603   00C2B0  0E00               	movlw	0
 24604   00C2B2  6FC5               	movwf	sendMessage@data7& (0+255),b
 24605   00C2B4  0100               	movlb	0	; () banked
 24606   00C2B6  51A7               	movf	sendMessage5@opc& (0+255),w,b
 24607   00C2B8  EC02  F056         	call	_sendMessage
 24608   00C2BC  0012               	return		;funcret
 24609   00C2BE                     __end_of_sendMessage5:
 24610                           	callstack 0
 24611                           
 24612 ;; *************** function _APP_preProcessMessage *****************
 24613 ;; Defined at:
 24614 ;;		line 414 in file "../main.c"
 24615 ;; Parameters:    Size  Location     Type
 24616 ;;  m               2   45[BANK0 ] PTR struct Message
 24617 ;;		 -> poll@m(9), 
 24618 ;; Auto vars:     Size  Location     Type
 24619 ;;		None
 24620 ;; Return value:  Size  Location     Type
 24621 ;;                  1    wreg      enum E12749
 24622 ;; Registers used:
 24623 ;;		wreg
 24624 ;; Tracked objects:
 24625 ;;		On entry : 0/0
 24626 ;;		On exit  : 0/0
 24627 ;;		Unchanged: 0/0
 24628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24629 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24632 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24633 ;;Total ram usage:        2 bytes
 24634 ;; Hardware stack levels used: 1
 24635 ;; Hardware stack levels required when called: 12
 24636 ;; This function calls:
 24637 ;;		Nothing
 24638 ;; This function is called by:
 24639 ;;		_poll
 24640 ;; This function uses a non-reentrant model
 24641 ;;
 24642                           
 24643                           	psect	text94
 24644   00C926                     __ptext94:
 24645                           	callstack 0
 24646   00C926                     _APP_preProcessMessage:
 24647                           	callstack 17
 24648                           
 24649                           ;../main.c: 415:     return NOT_PROCESSED;
 24650                           
 24651                           ;incstack = 0
 24652   00C926  0E00               	movlw	0
 24653   00C928  0012               	return		;funcret
 24654   00C92A                     __end_of_APP_preProcessMessage:
 24655                           	callstack 0
 24656                           
 24657 ;; *************** function _APP_postProcessMessage *****************
 24658 ;; Defined at:
 24659 ;;		line 421 in file "../main.c"
 24660 ;; Parameters:    Size  Location     Type
 24661 ;;  m               2   45[BANK0 ] PTR struct Message
 24662 ;;		 -> poll@m(9), 
 24663 ;; Auto vars:     Size  Location     Type
 24664 ;;		None
 24665 ;; Return value:  Size  Location     Type
 24666 ;;                  1    wreg      enum E12749
 24667 ;; Registers used:
 24668 ;;		wreg
 24669 ;; Tracked objects:
 24670 ;;		On entry : 0/0
 24671 ;;		On exit  : 0/0
 24672 ;;		Unchanged: 0/0
 24673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24674 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24677 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24678 ;;Total ram usage:        2 bytes
 24679 ;; Hardware stack levels used: 1
 24680 ;; Hardware stack levels required when called: 12
 24681 ;; This function calls:
 24682 ;;		Nothing
 24683 ;; This function is called by:
 24684 ;;		_poll
 24685 ;; This function uses a non-reentrant model
 24686 ;;
 24687                           
 24688                           	psect	text95
 24689   00C92A                     __ptext95:
 24690                           	callstack 0
 24691   00C92A                     _APP_postProcessMessage:
 24692                           	callstack 17
 24693                           
 24694                           ;../main.c: 422:     return NOT_PROCESSED;
 24695                           
 24696                           ;incstack = 0
 24697   00C92A  0E00               	movlw	0
 24698   00C92C  0012               	return		;funcret
 24699   00C92E                     __end_of_APP_postProcessMessage:
 24700                           	callstack 0
 24701                           
 24702 ;; *************** function _loop *****************
 24703 ;; Defined at:
 24704 ;;		line 353 in file "../main.c"
 24705 ;; Parameters:    Size  Location     Type
 24706 ;;		None
 24707 ;; Auto vars:     Size  Location     Type
 24708 ;;		None
 24709 ;; Return value:  Size  Location     Type
 24710 ;;                  1    wreg      void 
 24711 ;; Registers used:
 24712 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24713 ;; Tracked objects:
 24714 ;;		On entry : 0/0
 24715 ;;		On exit  : 0/0
 24716 ;;		Unchanged: 0/0
 24717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24720 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24721 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24722 ;;Total ram usage:        8 bytes
 24723 ;; Hardware stack levels used: 1
 24724 ;; Hardware stack levels required when called: 22
 24725 ;; This function calls:
 24726 ;;		___lmul
 24727 ;;		_getNV
 24728 ;;		_inputScan
 24729 ;;		_processActions
 24730 ;;		_processOutputs
 24731 ;;		_sendProducedEvent
 24732 ;;		_startServos
 24733 ;;		_tickGet
 24734 ;; This function is called by:
 24735 ;;		_main
 24736 ;; This function uses a non-reentrant model
 24737 ;;
 24738                           
 24739                           	psect	text96
 24740   006DB0                     __ptext96:
 24741                           	callstack 0
 24742   006DB0                     _loop:
 24743                           	callstack 8
 24744                           
 24745                           ;../main.c: 355:     if (!started && ((tickGet() - startTime.val) > (getNV(1) * (62500/1
      +                          0)) + (62500*2))) {
 24746                           
 24747                           ;incstack = 0
 24748   006DB0  0100               	movlb	0	; () banked
 24749   006DB2  51D0               	movf	_started& (0+255),w,b
 24750   006DB4  A4D8               	btfss	status,2,c
 24751   006DB6  D053               	goto	l25225
 24752                           
 24753                           ; BSR set to: 0
 24754   006DB8  EC45  F05C         	call	_tickGet	;wreg free
 24755   006DBC  501D               	movf	_startTime^0,w,c
 24756   006DBE  0100               	movlb	0	; () banked
 24757   006DC0  5D8D               	subwf	?_tickGet& (0+255),w,b
 24758   006DC2  0101               	movlb	1	; () banked
 24759   006DC4  6FEC               	movwf	??_loop& (0+255),b
 24760   006DC6  501E               	movf	(_startTime+1)^0,w,c
 24761   006DC8  0100               	movlb	0	; () banked
 24762   006DCA  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 24763   006DCC  0101               	movlb	1	; () banked
 24764   006DCE  6FED               	movwf	(??_loop+1)& (0+255),b
 24765   006DD0  501F               	movf	(_startTime+2)^0,w,c
 24766   006DD2  0100               	movlb	0	; () banked
 24767   006DD4  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 24768   006DD6  0101               	movlb	1	; () banked
 24769   006DD8  6FEE               	movwf	(??_loop+2)& (0+255),b
 24770   006DDA  5020               	movf	(_startTime+3)^0,w,c
 24771   006DDC  0100               	movlb	0	; () banked
 24772   006DDE  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 24773   006DE0  0101               	movlb	1	; () banked
 24774   006DE2  6FEF               	movwf	(??_loop+3)& (0+255),b
 24775   006DE4  0E01               	movlw	1
 24776   006DE6  ECD2  F05F         	call	_getNV
 24777   006DEA  0100               	movlb	0	; () banked
 24778   006DEC  C08D  F091         	movff	?_getNV,___lmul@multiplier
 24779   006DF0  C08E  F092         	movff	?_getNV+1,___lmul@multiplier+1
 24780   006DF4  0E00               	movlw	0
 24781   006DF6  BF92               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 24782   006DF8  0EFF               	movlw	-1
 24783   006DFA  6F93               	movwf	(___lmul@multiplier+2)& (0+255),b
 24784   006DFC  6F94               	movwf	(___lmul@multiplier+3)& (0+255),b
 24785   006DFE  0E6A               	movlw	106
 24786   006E00  6F95               	movwf	___lmul@multiplicand& (0+255),b
 24787   006E02  0E18               	movlw	24
 24788   006E04  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 24789   006E06  0E00               	movlw	0
 24790   006E08  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 24791   006E0A  0E00               	movlw	0
 24792   006E0C  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 24793   006E0E  EC71  F05C         	call	___lmul	;wreg free
 24794   006E12  0E48               	movlw	72
 24795   006E14  0100               	movlb	0	; () banked
 24796   006E16  2591               	addwf	?___lmul& (0+255),w,b
 24797   006E18  0101               	movlb	1	; () banked
 24798   006E1A  6FF0               	movwf	(??_loop+4)& (0+255),b
 24799   006E1C  0EE8               	movlw	232
 24800   006E1E  0100               	movlb	0	; () banked
 24801   006E20  2192               	addwfc	(?___lmul+1)& (0+255),w,b
 24802   006E22  0101               	movlb	1	; () banked
 24803   006E24  6FF1               	movwf	(??_loop+5)& (0+255),b
 24804   006E26  0E01               	movlw	1
 24805   006E28  0100               	movlb	0	; () banked
 24806   006E2A  2193               	addwfc	(?___lmul+2)& (0+255),w,b
 24807   006E2C  0101               	movlb	1	; () banked
 24808   006E2E  6FF2               	movwf	(??_loop+6)& (0+255),b
 24809   006E30  0E00               	movlw	0
 24810   006E32  0100               	movlb	0	; () banked
 24811   006E34  2194               	addwfc	(?___lmul+3)& (0+255),w,b
 24812   006E36  0101               	movlb	1	; () banked
 24813   006E38  6FF3               	movwf	(??_loop+7)& (0+255),b
 24814   006E3A  51EC               	movf	??_loop& (0+255),w,b
 24815   006E3C  5DF0               	subwf	(??_loop+4)& (0+255),w,b
 24816   006E3E  51ED               	movf	(??_loop+1)& (0+255),w,b
 24817   006E40  59F1               	subwfb	(??_loop+5)& (0+255),w,b
 24818   006E42  51EE               	movf	(??_loop+2)& (0+255),w,b
 24819   006E44  59F2               	subwfb	(??_loop+6)& (0+255),w,b
 24820   006E46  51EF               	movf	(??_loop+3)& (0+255),w,b
 24821   006E48  59F3               	subwfb	(??_loop+7)& (0+255),w,b
 24822   006E4A  B0D8               	btfsc	status,0,c
 24823   006E4C  D008               	goto	l25225
 24824                           
 24825                           ; BSR set to: 1
 24826                           ;../main.c: 356:         started = TRUE;
 24827   006E4E  0E01               	movlw	1
 24828   006E50  0100               	movlb	0	; () banked
 24829   006E52  6FD0               	movwf	_started& (0+255),b
 24830                           
 24831                           ; BSR set to: 0
 24832                           ;../main.c: 357:         sendProducedEvent(1, EVENT_ON);
 24833   006E54  0E01               	movlw	1
 24834   006E56  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 24835   006E58  0E01               	movlw	1
 24836   006E5A  EC64  F04C         	call	_sendProducedEvent
 24837   006E5E                     l25225:
 24838                           
 24839                           ;../main.c: 361:     if ((tickGet() - lastServoStartTime.val) > 5*(62500/2000)) {
 24840   006E5E  EC45  F05C         	call	_tickGet	;wreg free
 24841   006E62  0101               	movlb	1	; () banked
 24842   006E64  515C               	movf	_lastServoStartTime& (0+255),w,b
 24843   006E66  0100               	movlb	0	; () banked
 24844   006E68  5D8D               	subwf	?_tickGet& (0+255),w,b
 24845   006E6A  0101               	movlb	1	; () banked
 24846   006E6C  6FEC               	movwf	??_loop& (0+255),b
 24847   006E6E  515D               	movf	(_lastServoStartTime+1)& (0+255),w,b
 24848   006E70  0100               	movlb	0	; () banked
 24849   006E72  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 24850   006E74  0101               	movlb	1	; () banked
 24851   006E76  6FED               	movwf	(??_loop+1)& (0+255),b
 24852   006E78  515E               	movf	(_lastServoStartTime+2)& (0+255),w,b
 24853   006E7A  0100               	movlb	0	; () banked
 24854   006E7C  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 24855   006E7E  0101               	movlb	1	; () banked
 24856   006E80  6FEE               	movwf	(??_loop+2)& (0+255),b
 24857   006E82  515F               	movf	(_lastServoStartTime+3)& (0+255),w,b
 24858   006E84  0100               	movlb	0	; () banked
 24859   006E86  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 24860   006E88  0101               	movlb	1	; () banked
 24861   006E8A  6FEF               	movwf	(??_loop+3)& (0+255),b
 24862   006E8C  51EF               	movf	(??_loop+3)& (0+255),w,b
 24863   006E8E  11EE               	iorwf	(??_loop+2)& (0+255),w,b
 24864   006E90  11ED               	iorwf	(??_loop+1)& (0+255),w,b
 24865   006E92  E104               	bnz	u27590
 24866   006E94  0E9C               	movlw	156
 24867   006E96  5DEC               	subwf	??_loop& (0+255),w,b
 24868   006E98  A0D8               	btfss	status,0,c
 24869   006E9A  D00F               	goto	l25231
 24870   006E9C                     u27590:
 24871                           
 24872                           ; BSR set to: 1
 24873                           ;../main.c: 362:         if (startServos()) {
 24874   006E9C  EC08  F04C         	call	_startServos	;wreg free
 24875   006EA0  0900               	iorlw	0
 24876   006EA2  B4D8               	btfsc	status,2,c
 24877   006EA4  D00A               	goto	l25231
 24878                           
 24879                           ;../main.c: 363:             lastServoStartTime.val = tickGet();
 24880   006EA6  EC45  F05C         	call	_tickGet	;wreg free
 24881   006EAA  C08D  F15C         	movff	?_tickGet,_lastServoStartTime
 24882   006EAE  C08E  F15D         	movff	?_tickGet+1,_lastServoStartTime+1
 24883   006EB2  C08F  F15E         	movff	?_tickGet+2,_lastServoStartTime+2
 24884   006EB6  C090  F15F         	movff	?_tickGet+3,_lastServoStartTime+3
 24885   006EBA                     l25231:
 24886                           
 24887                           ;../main.c: 367:     if (started) {
 24888   006EBA  0100               	movlb	0	; () banked
 24889   006EBC  51D0               	movf	_started& (0+255),w,b
 24890   006EBE  B4D8               	btfsc	status,2,c
 24891   006EC0  0012               	return	
 24892                           
 24893                           ; BSR set to: 0
 24894                           ;../main.c: 368:         if ((tickGet() - lastInputScanTime.val) > 5*(62500/1000)) {
 24895   006EC2  EC45  F05C         	call	_tickGet	;wreg free
 24896   006EC6  0101               	movlb	1	; () banked
 24897   006EC8  5158               	movf	_lastInputScanTime& (0+255),w,b
 24898   006ECA  0100               	movlb	0	; () banked
 24899   006ECC  5D8D               	subwf	?_tickGet& (0+255),w,b
 24900   006ECE  0101               	movlb	1	; () banked
 24901   006ED0  6FEC               	movwf	??_loop& (0+255),b
 24902   006ED2  5159               	movf	(_lastInputScanTime+1)& (0+255),w,b
 24903   006ED4  0100               	movlb	0	; () banked
 24904   006ED6  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 24905   006ED8  0101               	movlb	1	; () banked
 24906   006EDA  6FED               	movwf	(??_loop+1)& (0+255),b
 24907   006EDC  515A               	movf	(_lastInputScanTime+2)& (0+255),w,b
 24908   006EDE  0100               	movlb	0	; () banked
 24909   006EE0  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 24910   006EE2  0101               	movlb	1	; () banked
 24911   006EE4  6FEE               	movwf	(??_loop+2)& (0+255),b
 24912   006EE6  515B               	movf	(_lastInputScanTime+3)& (0+255),w,b
 24913   006EE8  0100               	movlb	0	; () banked
 24914   006EEA  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 24915   006EEC  0101               	movlb	1	; () banked
 24916   006EEE  6FEF               	movwf	(??_loop+3)& (0+255),b
 24917   006EF0  51EF               	movf	(??_loop+3)& (0+255),w,b
 24918   006EF2  11EE               	iorwf	(??_loop+2)& (0+255),w,b
 24919   006EF4  E106               	bnz	u27620
 24920   006EF6  0E37               	movlw	55
 24921   006EF8  5DEC               	subwf	??_loop& (0+255),w,b
 24922   006EFA  0E01               	movlw	1
 24923   006EFC  59ED               	subwfb	(??_loop+1)& (0+255),w,b
 24924   006EFE  A0D8               	btfss	status,0,c
 24925   006F00  D00C               	goto	l25239
 24926   006F02                     u27620:
 24927                           
 24928                           ; BSR set to: 1
 24929                           ;../main.c: 369:             inputScan();
 24930   006F02  ECB3  F028         	call	_inputScan	;wreg free
 24931                           
 24932                           ;../main.c: 370:             lastInputScanTime.val = tickGet();
 24933   006F06  EC45  F05C         	call	_tickGet	;wreg free
 24934   006F0A  C08D  F158         	movff	?_tickGet,_lastInputScanTime
 24935   006F0E  C08E  F159         	movff	?_tickGet+1,_lastInputScanTime+1
 24936   006F12  C08F  F15A         	movff	?_tickGet+2,_lastInputScanTime+2
 24937   006F16  C090  F15B         	movff	?_tickGet+3,_lastInputScanTime+3
 24938   006F1A                     l25239:
 24939                           
 24940                           ;../main.c: 372:         if ((tickGet() - lastActionPollTime.val) > 100*(62500/1000)) {
 24941   006F1A  EC45  F05C         	call	_tickGet	;wreg free
 24942   006F1E  0101               	movlb	1	; () banked
 24943   006F20  5154               	movf	_lastActionPollTime& (0+255),w,b
 24944   006F22  0100               	movlb	0	; () banked
 24945   006F24  5D8D               	subwf	?_tickGet& (0+255),w,b
 24946   006F26  0101               	movlb	1	; () banked
 24947   006F28  6FEC               	movwf	??_loop& (0+255),b
 24948   006F2A  5155               	movf	(_lastActionPollTime+1)& (0+255),w,b
 24949   006F2C  0100               	movlb	0	; () banked
 24950   006F2E  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 24951   006F30  0101               	movlb	1	; () banked
 24952   006F32  6FED               	movwf	(??_loop+1)& (0+255),b
 24953   006F34  5156               	movf	(_lastActionPollTime+2)& (0+255),w,b
 24954   006F36  0100               	movlb	0	; () banked
 24955   006F38  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 24956   006F3A  0101               	movlb	1	; () banked
 24957   006F3C  6FEE               	movwf	(??_loop+2)& (0+255),b
 24958   006F3E  5157               	movf	(_lastActionPollTime+3)& (0+255),w,b
 24959   006F40  0100               	movlb	0	; () banked
 24960   006F42  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 24961   006F44  0101               	movlb	1	; () banked
 24962   006F46  6FEF               	movwf	(??_loop+3)& (0+255),b
 24963   006F48  51EF               	movf	(??_loop+3)& (0+255),w,b
 24964   006F4A  11EE               	iorwf	(??_loop+2)& (0+255),w,b
 24965   006F4C  E106               	bnz	u27630
 24966   006F4E  0E39               	movlw	57
 24967   006F50  5DEC               	subwf	??_loop& (0+255),w,b
 24968   006F52  0E18               	movlw	24
 24969   006F54  59ED               	subwfb	(??_loop+1)& (0+255),w,b
 24970   006F56  A0D8               	btfss	status,0,c
 24971   006F58  0012               	return	
 24972   006F5A                     u27630:
 24973                           
 24974                           ; BSR set to: 1
 24975                           ;../main.c: 373:             processActions();
 24976   006F5A  ECE1  F031         	call	_processActions	;wreg free
 24977                           
 24978                           ;../main.c: 374:             processOutputs();
 24979   006F5E  ECEC  F035         	call	_processOutputs	;wreg free
 24980                           
 24981                           ;../main.c: 375:             lastActionPollTime.val = tickGet();
 24982   006F62  EC45  F05C         	call	_tickGet	;wreg free
 24983   006F66  C08D  F154         	movff	?_tickGet,_lastActionPollTime
 24984   006F6A  C08E  F155         	movff	?_tickGet+1,_lastActionPollTime+1
 24985   006F6E  C08F  F156         	movff	?_tickGet+2,_lastActionPollTime+2
 24986   006F72  C090  F157         	movff	?_tickGet+3,_lastActionPollTime+3
 24987   006F76  0012               	return		;funcret
 24988   006F78                     __end_of_loop:
 24989                           	callstack 0
 24990                           
 24991 ;; *************** function _startServos *****************
 24992 ;; Defined at:
 24993 ;;		line 186 in file "../servo.c"
 24994 ;; Parameters:    Size  Location     Type
 24995 ;;		None
 24996 ;; Auto vars:     Size  Location     Type
 24997 ;;  type            1   30[BANK1 ] unsigned char 
 24998 ;; Return value:  Size  Location     Type
 24999 ;;                  1    wreg      unsigned char 
 25000 ;; Registers used:
 25001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 25002 ;; Tracked objects:
 25003 ;;		On entry : 0/0
 25004 ;;		On exit  : 0/0
 25005 ;;		Unchanged: 0/0
 25006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25008 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25010 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25011 ;;Total ram usage:        1 bytes
 25012 ;; Hardware stack levels used: 1
 25013 ;; Hardware stack levels required when called: 19
 25014 ;; This function calls:
 25015 ;;		_getNV
 25016 ;;		_pollServos
 25017 ;;		_setupTimer1
 25018 ;;		_setupTimer3
 25019 ;; This function is called by:
 25020 ;;		_loop
 25021 ;; This function uses a non-reentrant model
 25022 ;;
 25023                           
 25024                           	psect	text97
 25025   009810                     __ptext97:
 25026                           	callstack 0
 25027   009810                     _startServos:
 25028                           	callstack 10
 25029                           
 25030                           ;../servo.c: 187:     uint8_t type;;../servo.c: 190:     if (servoActive[0] || servoActi
      +                          ve[1]) return 0;
 25031                           
 25032                           ;incstack = 0
 25033   009810  0100               	movlb	0	; () banked
 25034   009812  51B2               	movf	_servoActive& (0+255),w,b
 25035   009814  A4D8               	btfss	status,2,c
 25036   009816  D003               	goto	u24900
 25037                           
 25038                           ; BSR set to: 0
 25039   009818  51B3               	movf	(_servoActive+1)& (0+255),w,b
 25040   00981A  B4D8               	btfsc	status,2,c
 25041   00981C  D002               	goto	l23195
 25042   00981E                     u24900:
 25043                           
 25044                           ; BSR set to: 0
 25045   00981E  0E00               	movlw	0
 25046   009820  0012               	return	
 25047   009822                     l23195:
 25048                           
 25049                           ; BSR set to: 0
 25050                           ;../servo.c: 191:     servoInBlock++;
 25051   009822  2BC9               	incf	_servoInBlock& (0+255),f,b
 25052                           
 25053                           ; BSR set to: 0
 25054                           ;../servo.c: 192:     if (servoInBlock >= 8) {
 25055   009824  0E07               	movlw	7
 25056   009826  65C9               	cpfsgt	_servoInBlock& (0+255),b
 25057   009828  D004               	goto	l23203
 25058                           
 25059                           ; BSR set to: 0
 25060                           ;../servo.c: 193:         servoInBlock = 0;
 25061   00982A  0E00               	movlw	0
 25062   00982C  6FC9               	movwf	_servoInBlock& (0+255),b
 25063                           
 25064                           ; BSR set to: 0
 25065                           ;../servo.c: 194:         pollServos();
 25066   00982E  EC28  F004         	call	_pollServos	;wreg free
 25067   009832                     l23203:
 25068                           
 25069                           ;../servo.c: 196:     type = (uint8_t)getNV((16 + 7*(servoInBlock) + 0));
 25070   009832  0100               	movlb	0	; () banked
 25071   009834  51C9               	movf	_servoInBlock& (0+255),w,b
 25072   009836  0D07               	mullw	7
 25073   009838  50F3               	movf	243,w,c
 25074   00983A  0F10               	addlw	16
 25075   00983C  ECD2  F05F         	call	_getNV
 25076   009840  0100               	movlb	0	; () banked
 25077   009842  518D               	movf	?_getNV& (0+255),w,b
 25078   009844  0101               	movlb	1	; () banked
 25079   009846  6FDC               	movwf	startServos@type& (0+255),b
 25080                           
 25081                           ; BSR set to: 1
 25082                           ;../servo.c: 197:     if ((type == 2) || (type == 3) || (type == 4)) {
 25083   009848  0E02               	movlw	2
 25084   00984A  19DC               	xorwf	startServos@type& (0+255),w,b
 25085   00984C  B4D8               	btfsc	status,2,c
 25086   00984E  D008               	goto	u24940
 25087                           
 25088                           ; BSR set to: 1
 25089   009850  0E03               	movlw	3
 25090   009852  19DC               	xorwf	startServos@type& (0+255),w,b
 25091   009854  B4D8               	btfsc	status,2,c
 25092   009856  D004               	goto	u24940
 25093                           
 25094                           ; BSR set to: 1
 25095   009858  0E04               	movlw	4
 25096   00985A  19DC               	xorwf	startServos@type& (0+255),w,b
 25097   00985C  A4D8               	btfss	status,2,c
 25098   00985E  D00D               	goto	l23215
 25099   009860                     u24940:
 25100                           
 25101                           ; BSR set to: 1
 25102                           ;../servo.c: 198:         if (servoState[servoInBlock] != SS_OFF) setupTimer1(servoInBlo
      +                          ck);
 25103   009860  0E10               	movlw	low _servoState
 25104   009862  0100               	movlb	0	; () banked
 25105   009864  25C9               	addwf	_servoInBlock& (0+255),w,b
 25106   009866  6ED9               	movwf	fsr2l,c
 25107   009868  6ADA               	clrf	fsr2h,c
 25108   00986A  0E01               	movlw	high _servoState
 25109   00986C  22DA               	addwfc	fsr2h,f,c
 25110   00986E  50DF               	movf	indf2,w,c
 25111   009870  B4D8               	btfsc	status,2,c
 25112   009872  D003               	goto	l23215
 25113                           
 25114                           ; BSR set to: 0
 25115   009874  51C9               	movf	_servoInBlock& (0+255),w,b
 25116   009876  ECBC  F050         	call	_setupTimer1
 25117   00987A                     l23215:
 25118                           
 25119                           ;../servo.c: 200:     type = (uint8_t)getNV((16 + 7*(servoInBlock+8) + 0));
 25120   00987A  0100               	movlb	0	; () banked
 25121   00987C  51C9               	movf	_servoInBlock& (0+255),w,b
 25122   00987E  0D07               	mullw	7
 25123   009880  50F3               	movf	243,w,c
 25124   009882  0F48               	addlw	72
 25125   009884  ECD2  F05F         	call	_getNV
 25126   009888  0100               	movlb	0	; () banked
 25127   00988A  518D               	movf	?_getNV& (0+255),w,b
 25128   00988C  0101               	movlb	1	; () banked
 25129   00988E  6FDC               	movwf	startServos@type& (0+255),b
 25130                           
 25131                           ; BSR set to: 1
 25132                           ;../servo.c: 201:     if ((type == 2) || (type == 3) || (type == 4)) {
 25133   009890  0E02               	movlw	2
 25134   009892  19DC               	xorwf	startServos@type& (0+255),w,b
 25135   009894  B4D8               	btfsc	status,2,c
 25136   009896  D008               	goto	u24980
 25137                           
 25138                           ; BSR set to: 1
 25139   009898  0E03               	movlw	3
 25140   00989A  19DC               	xorwf	startServos@type& (0+255),w,b
 25141   00989C  B4D8               	btfsc	status,2,c
 25142   00989E  D004               	goto	u24980
 25143                           
 25144                           ; BSR set to: 1
 25145   0098A0  0E04               	movlw	4
 25146   0098A2  19DC               	xorwf	startServos@type& (0+255),w,b
 25147   0098A4  A4D8               	btfss	status,2,c
 25148   0098A6  D00E               	goto	l23227
 25149   0098A8                     u24980:
 25150                           
 25151                           ; BSR set to: 1
 25152                           ;../servo.c: 202:         if (servoState[servoInBlock+8] != SS_OFF) setupTimer3(servoInB
      +                          lock+8);
 25153   0098A8  0E18               	movlw	low (_servoState+8)
 25154   0098AA  0100               	movlb	0	; () banked
 25155   0098AC  25C9               	addwf	_servoInBlock& (0+255),w,b
 25156   0098AE  6ED9               	movwf	fsr2l,c
 25157   0098B0  6ADA               	clrf	fsr2h,c
 25158   0098B2  0E01               	movlw	high (_servoState+8)
 25159   0098B4  22DA               	addwfc	fsr2h,f,c
 25160   0098B6  50DF               	movf	indf2,w,c
 25161   0098B8  B4D8               	btfsc	status,2,c
 25162   0098BA  D004               	goto	l23227
 25163                           
 25164                           ; BSR set to: 0
 25165   0098BC  51C9               	movf	_servoInBlock& (0+255),w,b
 25166   0098BE  0F08               	addlw	8
 25167   0098C0  EC6D  F050         	call	_setupTimer3
 25168   0098C4                     l23227:
 25169                           
 25170                           ;../servo.c: 204:     return 1;
 25171   0098C4  0E01               	movlw	1
 25172   0098C6  0012               	return		;funcret
 25173   0098C8                     __end_of_startServos:
 25174                           	callstack 0
 25175                           
 25176 ;; *************** function _setupTimer3 *****************
 25177 ;; Defined at:
 25178 ;;		line 224 in file "../servo.c"
 25179 ;; Parameters:    Size  Location     Type
 25180 ;;  io              1    wreg     unsigned char 
 25181 ;; Auto vars:     Size  Location     Type
 25182 ;;  io              1   60[BANK0 ] unsigned char 
 25183 ;;  ticks           2   58[BANK0 ] unsigned short 
 25184 ;; Return value:  Size  Location     Type
 25185 ;;                  1    wreg      void 
 25186 ;; Registers used:
 25187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25188 ;; Tracked objects:
 25189 ;;		On entry : 0/0
 25190 ;;		On exit  : 0/0
 25191 ;;		Unchanged: 0/0
 25192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25194 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25195 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25196 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25197 ;;Total ram usage:        8 bytes
 25198 ;; Hardware stack levels used: 1
 25199 ;; Hardware stack levels required when called: 13
 25200 ;; This function calls:
 25201 ;;		_getNV
 25202 ;;		_setOutputPin
 25203 ;; This function is called by:
 25204 ;;		_startServos
 25205 ;; This function uses a non-reentrant model
 25206 ;;
 25207                           
 25208                           	psect	text98
 25209   00A0DA                     __ptext98:
 25210                           	callstack 0
 25211   00A0DA                     _setupTimer3:
 25212                           	callstack 15
 25213                           
 25214                           ;incstack = 0
 25215                           ;setupTimer3@io stored from wreg
 25216   00A0DA  0100               	movlb	0	; () banked
 25217   00A0DC  6F9C               	movwf	setupTimer3@io& (0+255),b
 25218                           
 25219                           ;../servo.c: 225:     uint16_t ticks = 0xFFFF - ((getNV((16 + 7*(io) + 1)) & 0x80) ?
 25220   00A0DE  0100               	movlb	0	; () banked
 25221   00A0E0  519C               	movf	setupTimer3@io& (0+255),w,b
 25222   00A0E2  0D07               	mullw	7
 25223   00A0E4  50F3               	movf	243,w,c
 25224   00A0E6  0F11               	addlw	17
 25225   00A0E8  ECD2  F05F         	call	_getNV
 25226   00A0EC  0100               	movlb	0	; () banked
 25227   00A0EE  BF8D               	btfsc	?_getNV& (0+255),7,b
 25228   00A0F0  D013               	goto	l22295
 25229                           
 25230                           ; BSR set to: 0
 25231   00A0F2  0E30               	movlw	low _currentPos
 25232   00A0F4  259C               	addwf	setupTimer3@io& (0+255),w,b
 25233   00A0F6  6ED9               	movwf	fsr2l,c
 25234   00A0F8  6ADA               	clrf	fsr2h,c
 25235   00A0FA  0E01               	movlw	high _currentPos
 25236   00A0FC  22DA               	addwfc	fsr2h,f,c
 25237   00A0FE  50DF               	movf	indf2,w,c
 25238   00A100  6F95               	movwf	??_setupTimer3& (0+255),b
 25239   00A102  5195               	movf	??_setupTimer3& (0+255),w,b
 25240   00A104  0D13               	mullw	19
 25241   00A106  CFF3 F096          	movff	prodl,??_setupTimer3+1
 25242   00A10A  CFF4 F097          	movff	prodh,??_setupTimer3+2
 25243   00A10E  0E10               	movlw	16
 25244   00A110  2596               	addwf	(??_setupTimer3+1)& (0+255),w,b
 25245   00A112  6F98               	movwf	_setupTimer3$1936& (0+255),b
 25246   00A114  0E0E               	movlw	14
 25247   00A116  D012               	goto	L5
 25248   00A118                     l22295:
 25249                           
 25250                           ; BSR set to: 0
 25251   00A118  0E30               	movlw	low _currentPos
 25252   00A11A  259C               	addwf	setupTimer3@io& (0+255),w,b
 25253   00A11C  6ED9               	movwf	fsr2l,c
 25254   00A11E  6ADA               	clrf	fsr2h,c
 25255   00A120  0E01               	movlw	high _currentPos
 25256   00A122  22DA               	addwfc	fsr2h,f,c
 25257   00A124  50DF               	movf	indf2,w,c
 25258   00A126  6F95               	movwf	??_setupTimer3& (0+255),b
 25259   00A128  5195               	movf	??_setupTimer3& (0+255),w,b
 25260   00A12A  0D24               	mullw	36
 25261   00A12C  CFF3 F096          	movff	prodl,??_setupTimer3+1
 25262   00A130  CFF4 F097          	movff	prodh,??_setupTimer3+2
 25263   00A134  0E78               	movlw	120
 25264   00A136  2596               	addwf	(??_setupTimer3+1)& (0+255),w,b
 25265   00A138  6F98               	movwf	_setupTimer3$1936& (0+255),b
 25266   00A13A  0E05               	movlw	5
 25267   00A13C                     L5:
 25268   00A13C  2197               	addwfc	(??_setupTimer3+2)& (0+255),w,b
 25269   00A13E  6F99               	movwf	(_setupTimer3$1936+1)& (0+255),b
 25270                           
 25271                           ; BSR set to: 0
 25272   00A140  1D98               	comf	_setupTimer3$1936& (0+255),w,b
 25273   00A142  6F9A               	movwf	setupTimer3@ticks& (0+255),b
 25274   00A144  1D99               	comf	(_setupTimer3$1936+1)& (0+255),w,b
 25275   00A146  6F9B               	movwf	(setupTimer3@ticks+1)& (0+255),b
 25276                           
 25277                           ; BSR set to: 0
 25278                           ;../servo.c: 228:     TMR3H = ticks >> 8;
 25279   00A148  519B               	movf	(setupTimer3@ticks+1)& (0+255),w,b
 25280   00A14A  6EB3               	movwf	179,c	;volatile
 25281                           
 25282                           ; BSR set to: 0
 25283                           ;../servo.c: 229:     TMR3L = ticks & 0xFF;
 25284   00A14C  C09A  FFB2         	movff	setupTimer3@ticks,4018	;volatile
 25285                           
 25286                           ; BSR set to: 0
 25287                           ;../servo.c: 232:     servoActive[1] = 1;
 25288   00A150  0E01               	movlw	1
 25289   00A152  6FB3               	movwf	(_servoActive+1)& (0+255),b
 25290                           
 25291                           ; BSR set to: 0
 25292                           ;../servo.c: 233:     setOutputPin(io, !(getNV((16 + 7*(io) + 1)) & 0x20));
 25293   00A154  519C               	movf	setupTimer3@io& (0+255),w,b
 25294   00A156  0D07               	mullw	7
 25295   00A158  50F3               	movf	243,w,c
 25296   00A15A  0F11               	addlw	17
 25297   00A15C  ECD2  F05F         	call	_getNV
 25298   00A160  0100               	movlb	0	; () banked
 25299   00A162  BB8D               	btfsc	?_getNV& (0+255),5,b
 25300   00A164  D002               	goto	u23840
 25301   00A166  0E01               	movlw	1
 25302   00A168  D001               	goto	u23850
 25303   00A16A                     u23840:
 25304   00A16A  0E00               	movlw	0
 25305   00A16C                     u23850:
 25306   00A16C  6F91               	movwf	setOutputPin@state& (0+255),b
 25307   00A16E  519C               	movf	setupTimer3@io& (0+255),w,b
 25308   00A170  ECBC  F037         	call	_setOutputPin
 25309                           
 25310                           ;../servo.c: 234:     T3CONbits.TMR3ON = 1;
 25311   00A174  80B1               	bsf	177,0,c	;volatile
 25312   00A176  0012               	return		;funcret
 25313   00A178                     __end_of_setupTimer3:
 25314                           	callstack 0
 25315                           
 25316 ;; *************** function _setupTimer1 *****************
 25317 ;; Defined at:
 25318 ;;		line 212 in file "../servo.c"
 25319 ;; Parameters:    Size  Location     Type
 25320 ;;  io              1    wreg     unsigned char 
 25321 ;; Auto vars:     Size  Location     Type
 25322 ;;  io              1   60[BANK0 ] unsigned char 
 25323 ;;  ticks           2   58[BANK0 ] unsigned short 
 25324 ;; Return value:  Size  Location     Type
 25325 ;;                  1    wreg      void 
 25326 ;; Registers used:
 25327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25328 ;; Tracked objects:
 25329 ;;		On entry : 0/0
 25330 ;;		On exit  : 0/0
 25331 ;;		Unchanged: 0/0
 25332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25334 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25335 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25336 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25337 ;;Total ram usage:        8 bytes
 25338 ;; Hardware stack levels used: 1
 25339 ;; Hardware stack levels required when called: 13
 25340 ;; This function calls:
 25341 ;;		_getNV
 25342 ;;		_setOutputPin
 25343 ;; This function is called by:
 25344 ;;		_startServos
 25345 ;; This function uses a non-reentrant model
 25346 ;;
 25347                           
 25348                           	psect	text99
 25349   00A178                     __ptext99:
 25350                           	callstack 0
 25351   00A178                     _setupTimer1:
 25352                           	callstack 15
 25353                           
 25354                           ;incstack = 0
 25355                           ;setupTimer1@io stored from wreg
 25356   00A178  0100               	movlb	0	; () banked
 25357   00A17A  6F9C               	movwf	setupTimer1@io& (0+255),b
 25358                           
 25359                           ;../servo.c: 213:     uint16_t ticks = 0xFFFF - ((getNV((16 + 7*(io) + 1)) & 0x80) ?
 25360   00A17C  0100               	movlb	0	; () banked
 25361   00A17E  519C               	movf	setupTimer1@io& (0+255),w,b
 25362   00A180  0D07               	mullw	7
 25363   00A182  50F3               	movf	243,w,c
 25364   00A184  0F11               	addlw	17
 25365   00A186  ECD2  F05F         	call	_getNV
 25366   00A18A  0100               	movlb	0	; () banked
 25367   00A18C  BF8D               	btfsc	?_getNV& (0+255),7,b
 25368   00A18E  D013               	goto	l22277
 25369                           
 25370                           ; BSR set to: 0
 25371   00A190  0E30               	movlw	low _currentPos
 25372   00A192  259C               	addwf	setupTimer1@io& (0+255),w,b
 25373   00A194  6ED9               	movwf	fsr2l,c
 25374   00A196  6ADA               	clrf	fsr2h,c
 25375   00A198  0E01               	movlw	high _currentPos
 25376   00A19A  22DA               	addwfc	fsr2h,f,c
 25377   00A19C  50DF               	movf	indf2,w,c
 25378   00A19E  6F95               	movwf	??_setupTimer1& (0+255),b
 25379   00A1A0  5195               	movf	??_setupTimer1& (0+255),w,b
 25380   00A1A2  0D13               	mullw	19
 25381   00A1A4  CFF3 F096          	movff	prodl,??_setupTimer1+1
 25382   00A1A8  CFF4 F097          	movff	prodh,??_setupTimer1+2
 25383   00A1AC  0E10               	movlw	16
 25384   00A1AE  2596               	addwf	(??_setupTimer1+1)& (0+255),w,b
 25385   00A1B0  6F98               	movwf	_setupTimer1$1932& (0+255),b
 25386   00A1B2  0E0E               	movlw	14
 25387   00A1B4  D012               	goto	L6
 25388   00A1B6                     l22277:
 25389                           
 25390                           ; BSR set to: 0
 25391   00A1B6  0E30               	movlw	low _currentPos
 25392   00A1B8  259C               	addwf	setupTimer1@io& (0+255),w,b
 25393   00A1BA  6ED9               	movwf	fsr2l,c
 25394   00A1BC  6ADA               	clrf	fsr2h,c
 25395   00A1BE  0E01               	movlw	high _currentPos
 25396   00A1C0  22DA               	addwfc	fsr2h,f,c
 25397   00A1C2  50DF               	movf	indf2,w,c
 25398   00A1C4  6F95               	movwf	??_setupTimer1& (0+255),b
 25399   00A1C6  5195               	movf	??_setupTimer1& (0+255),w,b
 25400   00A1C8  0D24               	mullw	36
 25401   00A1CA  CFF3 F096          	movff	prodl,??_setupTimer1+1
 25402   00A1CE  CFF4 F097          	movff	prodh,??_setupTimer1+2
 25403   00A1D2  0E78               	movlw	120
 25404   00A1D4  2596               	addwf	(??_setupTimer1+1)& (0+255),w,b
 25405   00A1D6  6F98               	movwf	_setupTimer1$1932& (0+255),b
 25406   00A1D8  0E05               	movlw	5
 25407   00A1DA                     L6:
 25408   00A1DA  2197               	addwfc	(??_setupTimer1+2)& (0+255),w,b
 25409   00A1DC  6F99               	movwf	(_setupTimer1$1932+1)& (0+255),b
 25410                           
 25411                           ; BSR set to: 0
 25412   00A1DE  1D98               	comf	_setupTimer1$1932& (0+255),w,b
 25413   00A1E0  6F9A               	movwf	setupTimer1@ticks& (0+255),b
 25414   00A1E2  1D99               	comf	(_setupTimer1$1932+1)& (0+255),w,b
 25415   00A1E4  6F9B               	movwf	(setupTimer1@ticks+1)& (0+255),b
 25416                           
 25417                           ; BSR set to: 0
 25418                           ;../servo.c: 216:     TMR1H = ticks >> 8;
 25419   00A1E6  519B               	movf	(setupTimer1@ticks+1)& (0+255),w,b
 25420   00A1E8  6ECF               	movwf	207,c	;volatile
 25421                           
 25422                           ; BSR set to: 0
 25423                           ;../servo.c: 217:     TMR1L = ticks & 0xFF;
 25424   00A1EA  C09A  FFCE         	movff	setupTimer1@ticks,4046	;volatile
 25425                           
 25426                           ; BSR set to: 0
 25427                           ;../servo.c: 220:     servoActive[0] = 1;
 25428   00A1EE  0E01               	movlw	1
 25429   00A1F0  6FB2               	movwf	_servoActive& (0+255),b
 25430                           
 25431                           ; BSR set to: 0
 25432                           ;../servo.c: 221:     setOutputPin(io, !(getNV((16 + 7*(io) + 1)) & 0x20));
 25433   00A1F2  519C               	movf	setupTimer1@io& (0+255),w,b
 25434   00A1F4  0D07               	mullw	7
 25435   00A1F6  50F3               	movf	243,w,c
 25436   00A1F8  0F11               	addlw	17
 25437   00A1FA  ECD2  F05F         	call	_getNV
 25438   00A1FE  0100               	movlb	0	; () banked
 25439   00A200  BB8D               	btfsc	?_getNV& (0+255),5,b
 25440   00A202  D002               	goto	u23810
 25441   00A204  0E01               	movlw	1
 25442   00A206  D001               	goto	u23820
 25443   00A208                     u23810:
 25444   00A208  0E00               	movlw	0
 25445   00A20A                     u23820:
 25446   00A20A  6F91               	movwf	setOutputPin@state& (0+255),b
 25447   00A20C  519C               	movf	setupTimer1@io& (0+255),w,b
 25448   00A20E  ECBC  F037         	call	_setOutputPin
 25449                           
 25450                           ;../servo.c: 222:     T1CONbits.TMR1ON = 1;
 25451   00A212  80CD               	bsf	205,0,c	;volatile
 25452   00A214  0012               	return		;funcret
 25453   00A216                     __end_of_setupTimer1:
 25454                           	callstack 0
 25455                           
 25456 ;; *************** function _pollServos *****************
 25457 ;; Defined at:
 25458 ;;		line 296 in file "../servo.c"
 25459 ;; Parameters:    Size  Location     Type
 25460 ;;		None
 25461 ;; Auto vars:     Size  Location     Type
 25462 ;;  io              1   29[BANK1 ] unsigned char 
 25463 ;;  midway          1   28[BANK1 ] unsigned char 
 25464 ;;  beforeMidway    1   27[BANK1 ] enum E12716
 25465 ;;  target          1   26[BANK1 ] unsigned char 
 25466 ;; Return value:  Size  Location     Type
 25467 ;;                  1    wreg      void 
 25468 ;; Registers used:
 25469 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 25470 ;; Tracked objects:
 25471 ;;		On entry : 0/0
 25472 ;;		On exit  : 0/0
 25473 ;;		Unchanged: 0/0
 25474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25476 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25477 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25478 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25479 ;;Total ram usage:       12 bytes
 25480 ;; Hardware stack levels used: 1
 25481 ;; Hardware stack levels required when called: 18
 25482 ;; This function calls:
 25483 ;;		___awdiv
 25484 ;;		_bounceDown
 25485 ;;		_bounceUp
 25486 ;;		_getNV
 25487 ;;		_initBounce
 25488 ;;		_sendProducedEvent
 25489 ;;		_setOutputPin
 25490 ;;		_tickGet
 25491 ;;		_writeNVM
 25492 ;; This function is called by:
 25493 ;;		_startServos
 25494 ;; This function uses a non-reentrant model
 25495 ;;
 25496                           
 25497                           	psect	text100
 25498   000850                     __ptext100:
 25499                           	callstack 0
 25500   000850                     _pollServos:
 25501                           	callstack 10
 25502                           
 25503                           ;../servo.c: 297:     uint8_t midway;;../servo.c: 298:     Boolean beforeMidway;;../serv
      +                          o.c: 299:     uint8_t io;;../servo.c: 300:     uint8_t target;;../servo.c: 302:     for 
      +                          (io=0; io<16; io++) {
 25504                           
 25505                           ;incstack = 0
 25506   000850  0E00               	movlw	0
 25507   000852  0101               	movlb	1	; () banked
 25508   000854  6FDB               	movwf	pollServos@io& (0+255),b
 25509   000856  EF43  F00B         	goto	l22215
 25510   00085A                     l21983:
 25511                           
 25512                           ; BSR set to: 0
 25513                           ;../servo.c: 305:                 midway = ((uint8_t)getNV((16 + 7*(io) + 3)))/2 +
 25514   00085A  0101               	movlb	1	; () banked
 25515   00085C  51DB               	movf	pollServos@io& (0+255),w,b
 25516   00085E  0D07               	mullw	7
 25517   000860  50F3               	movf	243,w,c
 25518   000862  0F12               	addlw	18
 25519   000864  ECD2  F05F         	call	_getNV
 25520   000868  0100               	movlb	0	; () banked
 25521   00086A  518D               	movf	?_getNV& (0+255),w,b
 25522   00086C  6F97               	movwf	___awdiv@dividend& (0+255),b
 25523   00086E  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 25524   000870  0E00               	movlw	0
 25525   000872  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 25526   000874  0E02               	movlw	2
 25527   000876  6F99               	movwf	___awdiv@divisor& (0+255),b
 25528   000878  EC7B  F054         	call	___awdiv	;wreg free
 25529   00087C  C097  F1D0         	movff	?___awdiv,??_pollServos
 25530   000880  C098  F1D1         	movff	?___awdiv+1,??_pollServos+1
 25531   000884  0101               	movlb	1	; () banked
 25532   000886  51DB               	movf	pollServos@io& (0+255),w,b
 25533   000888  0D07               	mullw	7
 25534   00088A  50F3               	movf	243,w,c
 25535   00088C  0F13               	addlw	19
 25536   00088E  ECD2  F05F         	call	_getNV
 25537   000892  0100               	movlb	0	; () banked
 25538   000894  518D               	movf	?_getNV& (0+255),w,b
 25539   000896  6F97               	movwf	___awdiv@dividend& (0+255),b
 25540   000898  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 25541   00089A  0E00               	movlw	0
 25542   00089C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 25543   00089E  0E02               	movlw	2
 25544   0008A0  6F99               	movwf	___awdiv@divisor& (0+255),b
 25545   0008A2  EC7B  F054         	call	___awdiv	;wreg free
 25546   0008A6  0100               	movlb	0	; () banked
 25547   0008A8  5197               	movf	?___awdiv& (0+255),w,b
 25548   0008AA  0101               	movlb	1	; () banked
 25549   0008AC  25D0               	addwf	??_pollServos& (0+255),w,b
 25550   0008AE  6FDA               	movwf	pollServos@midway& (0+255),b
 25551                           
 25552                           ; BSR set to: 1
 25553                           ;../servo.c: 307:                 beforeMidway=FALSE;
 25554   0008B0  0E00               	movlw	0
 25555   0008B2  6FD9               	movwf	pollServos@beforeMidway& (0+255),b
 25556                           
 25557                           ;../servo.c: 308:                 switch (servoState[io]) {
 25558   0008B4  D251               	goto	l22075
 25559   0008B6                     l21987:
 25560                           
 25561                           ; BSR set to: 1
 25562                           ;../servo.c: 310:                         if (currentPos[io]==getNV((16 + 7*(io) + 2))) 
      +                          {
 25563   0008B6  51DB               	movf	pollServos@io& (0+255),w,b
 25564   0008B8  0D07               	mullw	7
 25565   0008BA  50F3               	movf	243,w,c
 25566   0008BC  0F12               	addlw	18
 25567   0008BE  ECD2  F05F         	call	_getNV
 25568   0008C2  0E30               	movlw	low _currentPos
 25569   0008C4  0101               	movlb	1	; () banked
 25570   0008C6  25DB               	addwf	pollServos@io& (0+255),w,b
 25571   0008C8  6ED9               	movwf	fsr2l,c
 25572   0008CA  6ADA               	clrf	fsr2h,c
 25573   0008CC  0E01               	movlw	high _currentPos
 25574   0008CE  22DA               	addwfc	fsr2h,f,c
 25575   0008D0  50DF               	movf	indf2,w,c
 25576   0008D2  6FD0               	movwf	??_pollServos& (0+255),b
 25577   0008D4  6BD1               	clrf	(??_pollServos+1)& (0+255),b
 25578   0008D6  0100               	movlb	0	; () banked
 25579   0008D8  518D               	movf	?_getNV& (0+255),w,b
 25580   0008DA  0101               	movlb	1	; () banked
 25581   0008DC  19D0               	xorwf	??_pollServos& (0+255),w,b
 25582   0008DE  E11B               	bnz	l21991
 25583   0008E0  0100               	movlb	0	; () banked
 25584   0008E2  518E               	movf	(?_getNV+1)& (0+255),w,b
 25585   0008E4  0101               	movlb	1	; () banked
 25586   0008E6  19D1               	xorwf	(??_pollServos+1)& (0+255),w,b
 25587   0008E8  A4D8               	btfss	status,2,c
 25588   0008EA  D015               	goto	l21991
 25589                           
 25590                           ; BSR set to: 1
 25591                           ;../servo.c: 311:                             sendProducedEvent(((8 + 4*(io))+0), (getNV
      +                          ((16 + 7*(io) + 1)) & 0x40)?EVENT_ON:EVENT_OFF);
 25592   0008EC  51DB               	movf	pollServos@io& (0+255),w,b
 25593   0008EE  0D07               	mullw	7
 25594   0008F0  50F3               	movf	243,w,c
 25595   0008F2  0F11               	addlw	17
 25596   0008F4  ECD2  F05F         	call	_getNV
 25597   0008F8  0100               	movlb	0	; () banked
 25598   0008FA  AD8D               	btfss	?_getNV& (0+255),6,b
 25599   0008FC  D002               	goto	u22980
 25600   0008FE  0E01               	movlw	1
 25601   000900  D001               	goto	u22990
 25602   000902                     u22980:
 25603   000902  0E00               	movlw	0
 25604   000904                     u22990:
 25605   000904  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 25606   000906  0101               	movlb	1	; () banked
 25607   000908  51DB               	movf	pollServos@io& (0+255),w,b
 25608   00090A  0D04               	mullw	4
 25609   00090C  50F3               	movf	243,w,c
 25610   00090E  0F08               	addlw	8
 25611   000910  EC64  F04C         	call	_sendProducedEvent
 25612                           
 25613                           ;../servo.c: 312:                         } else {
 25614   000914  D014               	goto	l21993
 25615   000916                     l21991:
 25616                           
 25617                           ; BSR set to: 1
 25618                           ;../servo.c: 313:                             sendProducedEvent(((8 + 4*(io))+2), (getNV
      +                          ((16 + 7*(io) + 1)) & 0x40)?EVENT_ON:EVENT_OFF);
 25619   000916  51DB               	movf	pollServos@io& (0+255),w,b
 25620   000918  0D07               	mullw	7
 25621   00091A  50F3               	movf	243,w,c
 25622   00091C  0F11               	addlw	17
 25623   00091E  ECD2  F05F         	call	_getNV
 25624   000922  0100               	movlb	0	; () banked
 25625   000924  AD8D               	btfss	?_getNV& (0+255),6,b
 25626   000926  D002               	goto	u23000
 25627   000928  0E01               	movlw	1
 25628   00092A  D001               	goto	u23010
 25629   00092C                     u23000:
 25630   00092C  0E00               	movlw	0
 25631   00092E                     u23010:
 25632   00092E  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 25633   000930  0101               	movlb	1	; () banked
 25634   000932  51DB               	movf	pollServos@io& (0+255),w,b
 25635   000934  0D04               	mullw	4
 25636   000936  50F3               	movf	243,w,c
 25637   000938  0F0A               	addlw	10
 25638   00093A  EC64  F04C         	call	_sendProducedEvent
 25639   00093E                     l21993:
 25640                           
 25641                           ;../servo.c: 315:                         servoState[io] = SS_MOVING;
 25642   00093E  0E10               	movlw	low _servoState
 25643   000940  0101               	movlb	1	; () banked
 25644   000942  25DB               	addwf	pollServos@io& (0+255),w,b
 25645   000944  6ED9               	movwf	fsr2l,c
 25646   000946  6ADA               	clrf	fsr2h,c
 25647   000948  0E01               	movlw	high _servoState
 25648   00094A  22DA               	addwfc	fsr2h,f,c
 25649   00094C  0E02               	movlw	2
 25650   00094E  6EDF               	movwf	indf2,c
 25651   000950                     l21995:
 25652                           
 25653                           ; BSR set to: 1
 25654                           ;../servo.c: 318:                         if (targetPos[io] > currentPos[io]) {
 25655   000950  51DB               	movf	pollServos@io& (0+255),w,b
 25656   000952  0F01               	addlw	low _targetPos
 25657   000954  6ED9               	movwf	fsr2l,c
 25658   000956  6ADA               	clrf	fsr2h,c
 25659   000958  0E30               	movlw	low _currentPos
 25660   00095A  25DB               	addwf	pollServos@io& (0+255),w,b
 25661   00095C  6EE1               	movwf	fsr1l,c
 25662   00095E  6AE2               	clrf	fsr1h,c
 25663   000960  0E01               	movlw	high _currentPos
 25664   000962  22E2               	addwfc	fsr1h,f,c
 25665   000964  50DE               	movf	postinc2,w,c
 25666   000966  5CE6               	subwf	postinc1,w,c
 25667   000968  B0D8               	btfsc	status,0,c
 25668   00096A  D0B4               	goto	l22027
 25669                           
 25670                           ; BSR set to: 1
 25671                           ;../servo.c: 319:                             if (currentPos[io] < midway) {
 25672   00096C  0E30               	movlw	low _currentPos
 25673   00096E  25DB               	addwf	pollServos@io& (0+255),w,b
 25674   000970  6ED9               	movwf	fsr2l,c
 25675   000972  6ADA               	clrf	fsr2h,c
 25676   000974  0E01               	movlw	high _currentPos
 25677   000976  22DA               	addwfc	fsr2h,f,c
 25678   000978  51DA               	movf	pollServos@midway& (0+255),w,b
 25679   00097A  5CDE               	subwf	postinc2,w,c
 25680   00097C  B0D8               	btfsc	status,0,c
 25681   00097E  D002               	goto	l22001
 25682                           
 25683                           ; BSR set to: 1
 25684                           ;../servo.c: 320:                                 beforeMidway = TRUE;
 25685   000980  0E01               	movlw	1
 25686   000982  6FD9               	movwf	pollServos@beforeMidway& (0+255),b
 25687   000984                     l22001:
 25688                           
 25689                           ; BSR set to: 1
 25690                           ;../servo.c: 323:                             if (stepsPerPollSpeed[io]) {
 25691   000984  0E00               	movlw	low _stepsPerPollSpeed
 25692   000986  25DB               	addwf	pollServos@io& (0+255),w,b
 25693   000988  6ED9               	movwf	fsr2l,c
 25694   00098A  6ADA               	clrf	fsr2h,c
 25695   00098C  0E01               	movlw	high _stepsPerPollSpeed
 25696   00098E  22DA               	addwfc	fsr2h,f,c
 25697   000990  50DF               	movf	indf2,w,c
 25698   000992  B4D8               	btfsc	status,2,c
 25699   000994  D035               	goto	l22009
 25700                           
 25701                           ; BSR set to: 1
 25702                           ;../servo.c: 324:                                 if ((uint8_t)(currentPos[io] + stepsPe
      +                          rPollSpeed[io]) < currentPos[io]) {
 25703   000996  0E30               	movlw	low _currentPos
 25704   000998  25DB               	addwf	pollServos@io& (0+255),w,b
 25705   00099A  6ED9               	movwf	fsr2l,c
 25706   00099C  6ADA               	clrf	fsr2h,c
 25707   00099E  0E01               	movlw	high _currentPos
 25708   0009A0  22DA               	addwfc	fsr2h,f,c
 25709   0009A2  0E00               	movlw	low _stepsPerPollSpeed
 25710   0009A4  25DB               	addwf	pollServos@io& (0+255),w,b
 25711   0009A6  6EE1               	movwf	fsr1l,c
 25712   0009A8  6AE2               	clrf	fsr1h,c
 25713   0009AA  0E01               	movlw	high _stepsPerPollSpeed
 25714   0009AC  22E2               	addwfc	fsr1h,f,c
 25715   0009AE  50E7               	movf	indf1,w,c
 25716   0009B0  6FD1               	movwf	(??_pollServos+1)& (0+255),b
 25717   0009B2  0E30               	movlw	low _currentPos
 25718   0009B4  25DB               	addwf	pollServos@io& (0+255),w,b
 25719   0009B6  6EE1               	movwf	fsr1l,c
 25720   0009B8  6AE2               	clrf	fsr1h,c
 25721   0009BA  0E01               	movlw	high _currentPos
 25722   0009BC  22E2               	addwfc	fsr1h,f,c
 25723   0009BE  50E7               	movf	indf1,w,c
 25724   0009C0  25D1               	addwf	(??_pollServos+1)& (0+255),w,b
 25725   0009C2  6FD2               	movwf	(??_pollServos+2)& (0+255),b
 25726   0009C4  50DE               	movf	postinc2,w,c
 25727   0009C6  5DD2               	subwf	(??_pollServos+2)& (0+255),w,b
 25728   0009C8  B0D8               	btfsc	status,0,c
 25729   0009CA  D009               	goto	l22007
 25730                           
 25731                           ; BSR set to: 1
 25732                           ;../servo.c: 326:                                     currentPos[io] =255;
 25733   0009CC  0E30               	movlw	low _currentPos
 25734   0009CE  25DB               	addwf	pollServos@io& (0+255),w,b
 25735   0009D0  6ED9               	movwf	fsr2l,c
 25736   0009D2  6ADA               	clrf	fsr2h,c
 25737   0009D4  0E01               	movlw	high _currentPos
 25738   0009D6  22DA               	addwfc	fsr2h,f,c
 25739   0009D8  0EFF               	movlw	255
 25740   0009DA  6EDF               	movwf	indf2,c
 25741                           
 25742                           ;../servo.c: 327:                                 } else {
 25743   0009DC  D03F               	goto	l22017
 25744   0009DE                     l22007:
 25745                           
 25746                           ; BSR set to: 1
 25747                           ;../servo.c: 328:                                     currentPos[io] += stepsPerPollSpee
      +                          d[io];
 25748   0009DE  0E00               	movlw	low _stepsPerPollSpeed
 25749   0009E0  25DB               	addwf	pollServos@io& (0+255),w,b
 25750   0009E2  6ED9               	movwf	fsr2l,c
 25751   0009E4  6ADA               	clrf	fsr2h,c
 25752   0009E6  0E01               	movlw	high _stepsPerPollSpeed
 25753   0009E8  22DA               	addwfc	fsr2h,f,c
 25754   0009EA  50DF               	movf	indf2,w,c
 25755   0009EC  6FD0               	movwf	??_pollServos& (0+255),b
 25756   0009EE  0E30               	movlw	low _currentPos
 25757   0009F0  25DB               	addwf	pollServos@io& (0+255),w,b
 25758   0009F2  6ED9               	movwf	fsr2l,c
 25759   0009F4  6ADA               	clrf	fsr2h,c
 25760   0009F6  0E01               	movlw	high _currentPos
 25761   0009F8  22DA               	addwfc	fsr2h,f,c
 25762   0009FA  51D0               	movf	??_pollServos& (0+255),w,b
 25763   0009FC  26DF               	addwf	indf2,f,c
 25764   0009FE  D02E               	goto	l22017
 25765   000A00                     l22009:
 25766                           
 25767                           ; BSR set to: 1
 25768                           ;../servo.c: 331:                                 pollCount[io]--;
 25769   000A00  0E64               	movlw	low _pollCount
 25770   000A02  25DB               	addwf	pollServos@io& (0+255),w,b
 25771   000A04  6ED9               	movwf	fsr2l,c
 25772   000A06  6ADA               	clrf	fsr2h,c
 25773   000A08  0E02               	movlw	high _pollCount
 25774   000A0A  22DA               	addwfc	fsr2h,f,c
 25775   000A0C  06DF               	decf	indf2,f,c
 25776                           
 25777                           ;../servo.c: 332:                                 if (pollCount[io] == 0) {
 25778   000A0E  0E64               	movlw	low _pollCount
 25779   000A10  25DB               	addwf	pollServos@io& (0+255),w,b
 25780   000A12  6ED9               	movwf	fsr2l,c
 25781   000A14  6ADA               	clrf	fsr2h,c
 25782   000A16  0E02               	movlw	high _pollCount
 25783   000A18  22DA               	addwfc	fsr2h,f,c
 25784   000A1A  50DF               	movf	indf2,w,c
 25785   000A1C  A4D8               	btfss	status,2,c
 25786   000A1E  D01E               	goto	l22017
 25787                           
 25788                           ; BSR set to: 1
 25789                           ;../servo.c: 333:                                     if (currentPos[io] < 255) currentP
      +                          os[io]++;
 25790   000A20  0E30               	movlw	low _currentPos
 25791   000A22  25DB               	addwf	pollServos@io& (0+255),w,b
 25792   000A24  6ED9               	movwf	fsr2l,c
 25793   000A26  6ADA               	clrf	fsr2h,c
 25794   000A28  0E01               	movlw	high _currentPos
 25795   000A2A  22DA               	addwfc	fsr2h,f,c
 25796   000A2C  28DE               	incf	postinc2,w,c
 25797   000A2E  B4D8               	btfsc	status,2,c
 25798   000A30  D007               	goto	l22015
 25799                           
 25800                           ; BSR set to: 1
 25801   000A32  0E30               	movlw	low _currentPos
 25802   000A34  25DB               	addwf	pollServos@io& (0+255),w,b
 25803   000A36  6ED9               	movwf	fsr2l,c
 25804   000A38  6ADA               	clrf	fsr2h,c
 25805   000A3A  0E01               	movlw	high _currentPos
 25806   000A3C  22DA               	addwfc	fsr2h,f,c
 25807   000A3E  2ADF               	incf	indf2,f,c
 25808   000A40                     l22015:
 25809                           
 25810                           ; BSR set to: 1
 25811                           ;../servo.c: 334:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 25812   000A40  0E74               	movlw	low _pollsPerStepSpeed
 25813   000A42  25DB               	addwf	pollServos@io& (0+255),w,b
 25814   000A44  6ED9               	movwf	fsr2l,c
 25815   000A46  6ADA               	clrf	fsr2h,c
 25816   000A48  0E02               	movlw	high _pollsPerStepSpeed
 25817   000A4A  22DA               	addwfc	fsr2h,f,c
 25818   000A4C  0E64               	movlw	low _pollCount
 25819   000A4E  25DB               	addwf	pollServos@io& (0+255),w,b
 25820   000A50  6EE1               	movwf	fsr1l,c
 25821   000A52  6AE2               	clrf	fsr1h,c
 25822   000A54  0E02               	movlw	high _pollCount
 25823   000A56  22E2               	addwfc	fsr1h,f,c
 25824   000A58  CFDF FFE7          	movff	indf2,indf1
 25825   000A5C                     l22017:
 25826                           
 25827                           ; BSR set to: 1
 25828                           ;../servo.c: 338:                             if (currentPos[io] > targetPos[io]) {
 25829   000A5C  0E30               	movlw	low _currentPos
 25830   000A5E  25DB               	addwf	pollServos@io& (0+255),w,b
 25831   000A60  6ED9               	movwf	fsr2l,c
 25832   000A62  6ADA               	clrf	fsr2h,c
 25833   000A64  0E01               	movlw	high _currentPos
 25834   000A66  22DA               	addwfc	fsr2h,f,c
 25835   000A68  51DB               	movf	pollServos@io& (0+255),w,b
 25836   000A6A  0F01               	addlw	low _targetPos
 25837   000A6C  6EE1               	movwf	fsr1l,c
 25838   000A6E  6AE2               	clrf	fsr1h,c
 25839   000A70  50DE               	movf	postinc2,w,c
 25840   000A72  5CE6               	subwf	postinc1,w,c
 25841   000A74  B0D8               	btfsc	status,0,c
 25842   000A76  D00C               	goto	l22021
 25843                           
 25844                           ; BSR set to: 1
 25845                           ;../servo.c: 339:                                 currentPos[io] = targetPos[io];
 25846   000A78  51DB               	movf	pollServos@io& (0+255),w,b
 25847   000A7A  0F01               	addlw	low _targetPos
 25848   000A7C  6ED9               	movwf	fsr2l,c
 25849   000A7E  6ADA               	clrf	fsr2h,c
 25850   000A80  0E30               	movlw	low _currentPos
 25851   000A82  25DB               	addwf	pollServos@io& (0+255),w,b
 25852   000A84  6EE1               	movwf	fsr1l,c
 25853   000A86  6AE2               	clrf	fsr1h,c
 25854   000A88  0E01               	movlw	high _currentPos
 25855   000A8A  22E2               	addwfc	fsr1h,f,c
 25856   000A8C  CFDF FFE7          	movff	indf2,indf1
 25857   000A90                     l22021:
 25858                           
 25859                           ; BSR set to: 1
 25860                           ;../servo.c: 341:                             if ((currentPos[io] >= midway) && beforeMi
      +                          dway) {
 25861   000A90  0E30               	movlw	low _currentPos
 25862   000A92  25DB               	addwf	pollServos@io& (0+255),w,b
 25863   000A94  6ED9               	movwf	fsr2l,c
 25864   000A96  6ADA               	clrf	fsr2h,c
 25865   000A98  0E01               	movlw	high _currentPos
 25866   000A9A  22DA               	addwfc	fsr2h,f,c
 25867   000A9C  51DA               	movf	pollServos@midway& (0+255),w,b
 25868   000A9E  5CDE               	subwf	postinc2,w,c
 25869   000AA0  A0D8               	btfss	status,0,c
 25870   000AA2  D0CD               	goto	l22059
 25871                           
 25872                           ; BSR set to: 1
 25873   000AA4  51D9               	movf	pollServos@beforeMidway& (0+255),w,b
 25874   000AA6  B4D8               	btfsc	status,2,c
 25875   000AA8  D0CA               	goto	l22059
 25876                           
 25877                           ; BSR set to: 1
 25878                           ;../servo.c: 345:                                 sendProducedEvent(((8 + 4*(io))+1), (g
      +                          etNV((16 + 7*(io) + 1)) & 0x40)?EVENT_OFF:EVENT_ON);
 25879   000AAA  51DB               	movf	pollServos@io& (0+255),w,b
 25880   000AAC  0D07               	mullw	7
 25881   000AAE  50F3               	movf	243,w,c
 25882   000AB0  0F11               	addlw	17
 25883   000AB2  ECD2  F05F         	call	_getNV
 25884   000AB6  0100               	movlb	0	; () banked
 25885   000AB8  BD8D               	btfsc	?_getNV& (0+255),6,b
 25886   000ABA  D002               	goto	u23110
 25887   000ABC  0E01               	movlw	1
 25888   000ABE  D001               	goto	u23120
 25889   000AC0                     u23110:
 25890   000AC0  0E00               	movlw	0
 25891   000AC2                     u23120:
 25892   000AC2  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 25893   000AC4  0101               	movlb	1	; () banked
 25894   000AC6  51DB               	movf	pollServos@io& (0+255),w,b
 25895   000AC8  0D04               	mullw	4
 25896   000ACA  50F3               	movf	243,w,c
 25897   000ACC  0F09               	addlw	9
 25898   000ACE  EC64  F04C         	call	_sendProducedEvent
 25899   000AD2  D0B5               	goto	l22059
 25900   000AD4                     l22027:
 25901                           
 25902                           ; BSR set to: 1
 25903   000AD4  0E30               	movlw	low _currentPos
 25904   000AD6  25DB               	addwf	pollServos@io& (0+255),w,b
 25905   000AD8  6ED9               	movwf	fsr2l,c
 25906   000ADA  6ADA               	clrf	fsr2h,c
 25907   000ADC  0E01               	movlw	high _currentPos
 25908   000ADE  22DA               	addwfc	fsr2h,f,c
 25909   000AE0  51DB               	movf	pollServos@io& (0+255),w,b
 25910   000AE2  0F01               	addlw	low _targetPos
 25911   000AE4  6EE1               	movwf	fsr1l,c
 25912   000AE6  6AE2               	clrf	fsr1h,c
 25913   000AE8  50DE               	movf	postinc2,w,c
 25914   000AEA  5CE6               	subwf	postinc1,w,c
 25915   000AEC  B0D8               	btfsc	status,0,c
 25916   000AEE  D0A7               	goto	l22059
 25917                           
 25918                           ; BSR set to: 1
 25919                           ;../servo.c: 348:                             if (currentPos[io] > midway) {
 25920   000AF0  0E30               	movlw	low _currentPos
 25921   000AF2  25DB               	addwf	pollServos@io& (0+255),w,b
 25922   000AF4  6ED9               	movwf	fsr2l,c
 25923   000AF6  6ADA               	clrf	fsr2h,c
 25924   000AF8  0E01               	movlw	high _currentPos
 25925   000AFA  22DA               	addwfc	fsr2h,f,c
 25926   000AFC  50DE               	movf	postinc2,w,c
 25927   000AFE  5DDA               	subwf	pollServos@midway& (0+255),w,b
 25928   000B00  B0D8               	btfsc	status,0,c
 25929   000B02  D002               	goto	l22033
 25930                           
 25931                           ; BSR set to: 1
 25932                           ;../servo.c: 349:                                 beforeMidway = TRUE;
 25933   000B04  0E01               	movlw	1
 25934   000B06  6FD9               	movwf	pollServos@beforeMidway& (0+255),b
 25935   000B08                     l22033:
 25936                           
 25937                           ; BSR set to: 1
 25938                           ;../servo.c: 352:                             if (stepsPerPollSpeed[io]) {
 25939   000B08  0E00               	movlw	low _stepsPerPollSpeed
 25940   000B0A  25DB               	addwf	pollServos@io& (0+255),w,b
 25941   000B0C  6ED9               	movwf	fsr2l,c
 25942   000B0E  6ADA               	clrf	fsr2h,c
 25943   000B10  0E01               	movlw	high _stepsPerPollSpeed
 25944   000B12  22DA               	addwfc	fsr2h,f,c
 25945   000B14  50DF               	movf	indf2,w,c
 25946   000B16  B4D8               	btfsc	status,2,c
 25947   000B18  D029               	goto	l22041
 25948                           
 25949                           ; BSR set to: 1
 25950                           ;../servo.c: 353:                                 if (stepsPerPollSpeed[io] >= currentPo
      +                          s[io]) {
 25951   000B1A  0E30               	movlw	low _currentPos
 25952   000B1C  25DB               	addwf	pollServos@io& (0+255),w,b
 25953   000B1E  6ED9               	movwf	fsr2l,c
 25954   000B20  6ADA               	clrf	fsr2h,c
 25955   000B22  0E01               	movlw	high _currentPos
 25956   000B24  22DA               	addwfc	fsr2h,f,c
 25957   000B26  0E00               	movlw	low _stepsPerPollSpeed
 25958   000B28  25DB               	addwf	pollServos@io& (0+255),w,b
 25959   000B2A  6EE1               	movwf	fsr1l,c
 25960   000B2C  6AE2               	clrf	fsr1h,c
 25961   000B2E  0E01               	movlw	high _stepsPerPollSpeed
 25962   000B30  22E2               	addwfc	fsr1h,f,c
 25963   000B32  50DE               	movf	postinc2,w,c
 25964   000B34  5CE6               	subwf	postinc1,w,c
 25965   000B36  A0D8               	btfss	status,0,c
 25966   000B38  D008               	goto	l22039
 25967                           
 25968                           ; BSR set to: 1
 25969                           ;../servo.c: 355:                                     currentPos[io] = 0;
 25970   000B3A  0E30               	movlw	low _currentPos
 25971   000B3C  25DB               	addwf	pollServos@io& (0+255),w,b
 25972   000B3E  6ED9               	movwf	fsr2l,c
 25973   000B40  6ADA               	clrf	fsr2h,c
 25974   000B42  0E01               	movlw	high _currentPos
 25975   000B44  22DA               	addwfc	fsr2h,f,c
 25976   000B46  6ADF               	clrf	indf2,c
 25977                           
 25978                           ;../servo.c: 356:                                 } else {
 25979   000B48  D03F               	goto	l22049
 25980   000B4A                     l22039:
 25981                           
 25982                           ; BSR set to: 1
 25983                           ;../servo.c: 357:                                     currentPos[io] -= stepsPerPollSpee
      +                          d[io];
 25984   000B4A  0E00               	movlw	low _stepsPerPollSpeed
 25985   000B4C  25DB               	addwf	pollServos@io& (0+255),w,b
 25986   000B4E  6ED9               	movwf	fsr2l,c
 25987   000B50  6ADA               	clrf	fsr2h,c
 25988   000B52  0E01               	movlw	high _stepsPerPollSpeed
 25989   000B54  22DA               	addwfc	fsr2h,f,c
 25990   000B56  50DF               	movf	indf2,w,c
 25991   000B58  6FD0               	movwf	??_pollServos& (0+255),b
 25992   000B5A  0E30               	movlw	low _currentPos
 25993   000B5C  25DB               	addwf	pollServos@io& (0+255),w,b
 25994   000B5E  6ED9               	movwf	fsr2l,c
 25995   000B60  6ADA               	clrf	fsr2h,c
 25996   000B62  0E01               	movlw	high _currentPos
 25997   000B64  22DA               	addwfc	fsr2h,f,c
 25998   000B66  51D0               	movf	??_pollServos& (0+255),w,b
 25999   000B68  5EDF               	subwf	indf2,f,c
 26000   000B6A  D02E               	goto	l22049
 26001   000B6C                     l22041:
 26002                           
 26003                           ; BSR set to: 1
 26004                           ;../servo.c: 360:                                 pollCount[io]--;
 26005   000B6C  0E64               	movlw	low _pollCount
 26006   000B6E  25DB               	addwf	pollServos@io& (0+255),w,b
 26007   000B70  6ED9               	movwf	fsr2l,c
 26008   000B72  6ADA               	clrf	fsr2h,c
 26009   000B74  0E02               	movlw	high _pollCount
 26010   000B76  22DA               	addwfc	fsr2h,f,c
 26011   000B78  06DF               	decf	indf2,f,c
 26012                           
 26013                           ;../servo.c: 361:                                 if (pollCount[io] == 0) {
 26014   000B7A  0E64               	movlw	low _pollCount
 26015   000B7C  25DB               	addwf	pollServos@io& (0+255),w,b
 26016   000B7E  6ED9               	movwf	fsr2l,c
 26017   000B80  6ADA               	clrf	fsr2h,c
 26018   000B82  0E02               	movlw	high _pollCount
 26019   000B84  22DA               	addwfc	fsr2h,f,c
 26020   000B86  50DF               	movf	indf2,w,c
 26021   000B88  A4D8               	btfss	status,2,c
 26022   000B8A  D01E               	goto	l22049
 26023                           
 26024                           ; BSR set to: 1
 26025                           ;../servo.c: 362:                                     if (currentPos[io] > 0) currentPos
      +                          [io]--;
 26026   000B8C  0E30               	movlw	low _currentPos
 26027   000B8E  25DB               	addwf	pollServos@io& (0+255),w,b
 26028   000B90  6ED9               	movwf	fsr2l,c
 26029   000B92  6ADA               	clrf	fsr2h,c
 26030   000B94  0E01               	movlw	high _currentPos
 26031   000B96  22DA               	addwfc	fsr2h,f,c
 26032   000B98  50DF               	movf	indf2,w,c
 26033   000B9A  B4D8               	btfsc	status,2,c
 26034   000B9C  D007               	goto	l22047
 26035                           
 26036                           ; BSR set to: 1
 26037   000B9E  0E30               	movlw	low _currentPos
 26038   000BA0  25DB               	addwf	pollServos@io& (0+255),w,b
 26039   000BA2  6ED9               	movwf	fsr2l,c
 26040   000BA4  6ADA               	clrf	fsr2h,c
 26041   000BA6  0E01               	movlw	high _currentPos
 26042   000BA8  22DA               	addwfc	fsr2h,f,c
 26043   000BAA  06DF               	decf	indf2,f,c
 26044   000BAC                     l22047:
 26045                           
 26046                           ; BSR set to: 1
 26047                           ;../servo.c: 363:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 26048   000BAC  0E74               	movlw	low _pollsPerStepSpeed
 26049   000BAE  25DB               	addwf	pollServos@io& (0+255),w,b
 26050   000BB0  6ED9               	movwf	fsr2l,c
 26051   000BB2  6ADA               	clrf	fsr2h,c
 26052   000BB4  0E02               	movlw	high _pollsPerStepSpeed
 26053   000BB6  22DA               	addwfc	fsr2h,f,c
 26054   000BB8  0E64               	movlw	low _pollCount
 26055   000BBA  25DB               	addwf	pollServos@io& (0+255),w,b
 26056   000BBC  6EE1               	movwf	fsr1l,c
 26057   000BBE  6AE2               	clrf	fsr1h,c
 26058   000BC0  0E02               	movlw	high _pollCount
 26059   000BC2  22E2               	addwfc	fsr1h,f,c
 26060   000BC4  CFDF FFE7          	movff	indf2,indf1
 26061   000BC8                     l22049:
 26062                           
 26063                           ; BSR set to: 1
 26064                           ;../servo.c: 367:                             if (currentPos[io] < targetPos[io]) {
 26065   000BC8  51DB               	movf	pollServos@io& (0+255),w,b
 26066   000BCA  0F01               	addlw	low _targetPos
 26067   000BCC  6ED9               	movwf	fsr2l,c
 26068   000BCE  6ADA               	clrf	fsr2h,c
 26069   000BD0  0E30               	movlw	low _currentPos
 26070   000BD2  25DB               	addwf	pollServos@io& (0+255),w,b
 26071   000BD4  6EE1               	movwf	fsr1l,c
 26072   000BD6  6AE2               	clrf	fsr1h,c
 26073   000BD8  0E01               	movlw	high _currentPos
 26074   000BDA  22E2               	addwfc	fsr1h,f,c
 26075   000BDC  50DE               	movf	postinc2,w,c
 26076   000BDE  5CE6               	subwf	postinc1,w,c
 26077   000BE0  B0D8               	btfsc	status,0,c
 26078   000BE2  D00C               	goto	l22053
 26079                           
 26080                           ; BSR set to: 1
 26081                           ;../servo.c: 368:                                 currentPos[io] = targetPos[io];
 26082   000BE4  51DB               	movf	pollServos@io& (0+255),w,b
 26083   000BE6  0F01               	addlw	low _targetPos
 26084   000BE8  6ED9               	movwf	fsr2l,c
 26085   000BEA  6ADA               	clrf	fsr2h,c
 26086   000BEC  0E30               	movlw	low _currentPos
 26087   000BEE  25DB               	addwf	pollServos@io& (0+255),w,b
 26088   000BF0  6EE1               	movwf	fsr1l,c
 26089   000BF2  6AE2               	clrf	fsr1h,c
 26090   000BF4  0E01               	movlw	high _currentPos
 26091   000BF6  22E2               	addwfc	fsr1h,f,c
 26092   000BF8  CFDF FFE7          	movff	indf2,indf1
 26093   000BFC                     l22053:
 26094                           
 26095                           ; BSR set to: 1
 26096                           ;../servo.c: 370:                             if ((currentPos[io] <= midway) && beforeMi
      +                          dway) {
 26097   000BFC  0E30               	movlw	low _currentPos
 26098   000BFE  25DB               	addwf	pollServos@io& (0+255),w,b
 26099   000C00  6ED9               	movwf	fsr2l,c
 26100   000C02  6ADA               	clrf	fsr2h,c
 26101   000C04  0E01               	movlw	high _currentPos
 26102   000C06  22DA               	addwfc	fsr2h,f,c
 26103   000C08  50DE               	movf	postinc2,w,c
 26104   000C0A  5DDA               	subwf	pollServos@midway& (0+255),w,b
 26105   000C0C  A0D8               	btfss	status,0,c
 26106   000C0E  D017               	goto	l22059
 26107                           
 26108                           ; BSR set to: 1
 26109   000C10  51D9               	movf	pollServos@beforeMidway& (0+255),w,b
 26110   000C12  B4D8               	btfsc	status,2,c
 26111   000C14  D014               	goto	l22059
 26112                           
 26113                           ; BSR set to: 1
 26114                           ;../servo.c: 372:                                 sendProducedEvent(((8 + 4*(io))+1), (g
      +                          etNV((16 + 7*(io) + 1)) & 0x40)?EVENT_ON:EVENT_OFF);
 26115   000C16  51DB               	movf	pollServos@io& (0+255),w,b
 26116   000C18  0D07               	mullw	7
 26117   000C1A  50F3               	movf	243,w,c
 26118   000C1C  0F11               	addlw	17
 26119   000C1E  ECD2  F05F         	call	_getNV
 26120   000C22  0100               	movlb	0	; () banked
 26121   000C24  AD8D               	btfss	?_getNV& (0+255),6,b
 26122   000C26  D002               	goto	u23220
 26123   000C28  0E01               	movlw	1
 26124   000C2A  D001               	goto	u23230
 26125   000C2C                     u23220:
 26126   000C2C  0E00               	movlw	0
 26127   000C2E                     u23230:
 26128   000C2E  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 26129   000C30  0101               	movlb	1	; () banked
 26130   000C32  51DB               	movf	pollServos@io& (0+255),w,b
 26131   000C34  0D04               	mullw	4
 26132   000C36  50F3               	movf	243,w,c
 26133   000C38  0F09               	addlw	9
 26134   000C3A  EC64  F04C         	call	_sendProducedEvent
 26135   000C3E                     l22059:
 26136                           
 26137                           ;../servo.c: 375:                         if (targetPos[io] == currentPos[io]) {
 26138   000C3E  0E30               	movlw	low _currentPos
 26139   000C40  0101               	movlb	1	; () banked
 26140   000C42  25DB               	addwf	pollServos@io& (0+255),w,b
 26141   000C44  6ED9               	movwf	fsr2l,c
 26142   000C46  6ADA               	clrf	fsr2h,c
 26143   000C48  0E01               	movlw	high _currentPos
 26144   000C4A  22DA               	addwfc	fsr2h,f,c
 26145   000C4C  51DB               	movf	pollServos@io& (0+255),w,b
 26146   000C4E  0F01               	addlw	low _targetPos
 26147   000C50  6EE1               	movwf	fsr1l,c
 26148   000C52  6AE2               	clrf	fsr1h,c
 26149   000C54  50DE               	movf	postinc2,w,c
 26150   000C56  18E6               	xorwf	postinc1,w,c
 26151   000C58  A4D8               	btfss	status,2,c
 26152   000C5A  EFC8  F00B         	goto	l22231
 26153                           
 26154                           ; BSR set to: 1
 26155                           ;../servo.c: 376:                             servoState[io] = SS_STOPPED;
 26156   000C5E  0E10               	movlw	low _servoState
 26157   000C60  25DB               	addwf	pollServos@io& (0+255),w,b
 26158   000C62  6ED9               	movwf	fsr2l,c
 26159   000C64  6ADA               	clrf	fsr2h,c
 26160   000C66  0E01               	movlw	high _servoState
 26161   000C68  22DA               	addwfc	fsr2h,f,c
 26162   000C6A  0E01               	movlw	1
 26163   000C6C  6EDF               	movwf	indf2,c
 26164                           
 26165                           ; BSR set to: 1
 26166                           ;../servo.c: 377:                             ticksWhenStopped[io].val = tickGet();
 26167   000C6E  EC45  F05C         	call	_tickGet	;wreg free
 26168   000C72  0101               	movlb	1	; () banked
 26169   000C74  51DB               	movf	pollServos@io& (0+255),w,b
 26170   000C76  0D04               	mullw	4
 26171   000C78  0E88               	movlw	low _ticksWhenStopped
 26172   000C7A  24F3               	addwf	243,w,c
 26173   000C7C  6ED9               	movwf	fsr2l,c
 26174   000C7E  0E03               	movlw	high _ticksWhenStopped
 26175   000C80  20F4               	addwfc	prodh,w,c
 26176   000C82  6EDA               	movwf	fsr2h,c
 26177   000C84  0100               	movlb	0	; () banked
 26178   000C86  C08D  FFDE         	movff	?_tickGet,postinc2
 26179   000C8A  C08E  FFDE         	movff	?_tickGet+1,postinc2
 26180   000C8E  C08F  FFDE         	movff	?_tickGet+2,postinc2
 26181   000C92  C090  FFDE         	movff	?_tickGet+3,postinc2
 26182                           
 26183                           ; BSR set to: 0
 26184                           ;../servo.c: 379:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           2))) {
 26185   000C96  0101               	movlb	1	; () banked
 26186   000C98  51DB               	movf	pollServos@io& (0+255),w,b
 26187   000C9A  0D07               	mullw	7
 26188   000C9C  50F3               	movf	243,w,c
 26189   000C9E  0F12               	addlw	18
 26190   000CA0  ECD2  F05F         	call	_getNV
 26191   000CA4  0E30               	movlw	low _currentPos
 26192   000CA6  0101               	movlb	1	; () banked
 26193   000CA8  25DB               	addwf	pollServos@io& (0+255),w,b
 26194   000CAA  6ED9               	movwf	fsr2l,c
 26195   000CAC  6ADA               	clrf	fsr2h,c
 26196   000CAE  0E01               	movlw	high _currentPos
 26197   000CB0  22DA               	addwfc	fsr2h,f,c
 26198   000CB2  50DF               	movf	indf2,w,c
 26199   000CB4  6FD0               	movwf	??_pollServos& (0+255),b
 26200   000CB6  6BD1               	clrf	(??_pollServos+1)& (0+255),b
 26201   000CB8  0100               	movlb	0	; () banked
 26202   000CBA  518D               	movf	?_getNV& (0+255),w,b
 26203   000CBC  0101               	movlb	1	; () banked
 26204   000CBE  19D0               	xorwf	??_pollServos& (0+255),w,b
 26205   000CC0  E11B               	bnz	l22069
 26206   000CC2  0100               	movlb	0	; () banked
 26207   000CC4  518E               	movf	(?_getNV+1)& (0+255),w,b
 26208   000CC6  0101               	movlb	1	; () banked
 26209   000CC8  19D1               	xorwf	(??_pollServos+1)& (0+255),w,b
 26210   000CCA  A4D8               	btfss	status,2,c
 26211   000CCC  D015               	goto	l22069
 26212                           
 26213                           ; BSR set to: 1
 26214                           ;../servo.c: 380:                                 sendProducedEvent(((8 + 4*(io))+0), (g
      +                          etNV((16 + 7*(io) + 1)) & 0x40)?EVENT_OFF:EVENT_ON);
 26215   000CCE  51DB               	movf	pollServos@io& (0+255),w,b
 26216   000CD0  0D07               	mullw	7
 26217   000CD2  50F3               	movf	243,w,c
 26218   000CD4  0F11               	addlw	17
 26219   000CD6  ECD2  F05F         	call	_getNV
 26220   000CDA  0100               	movlb	0	; () banked
 26221   000CDC  BD8D               	btfsc	?_getNV& (0+255),6,b
 26222   000CDE  D002               	goto	u23260
 26223   000CE0  0E01               	movlw	1
 26224   000CE2  D001               	goto	u23270
 26225   000CE4                     u23260:
 26226   000CE4  0E00               	movlw	0
 26227   000CE6                     u23270:
 26228   000CE6  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 26229   000CE8  0101               	movlb	1	; () banked
 26230   000CEA  51DB               	movf	pollServos@io& (0+255),w,b
 26231   000CEC  0D04               	mullw	4
 26232   000CEE  50F3               	movf	243,w,c
 26233   000CF0  0F08               	addlw	8
 26234   000CF2  EC64  F04C         	call	_sendProducedEvent
 26235                           
 26236                           ;../servo.c: 381:                             } else {
 26237   000CF6  D014               	goto	l22071
 26238   000CF8                     l22069:
 26239                           
 26240                           ; BSR set to: 1
 26241                           ;../servo.c: 382:                                 sendProducedEvent(((8 + 4*(io))+2), (g
      +                          etNV((16 + 7*(io) + 1)) & 0x40)?EVENT_OFF:EVENT_ON);
 26242   000CF8  51DB               	movf	pollServos@io& (0+255),w,b
 26243   000CFA  0D07               	mullw	7
 26244   000CFC  50F3               	movf	243,w,c
 26245   000CFE  0F11               	addlw	17
 26246   000D00  ECD2  F05F         	call	_getNV
 26247   000D04  0100               	movlb	0	; () banked
 26248   000D06  BD8D               	btfsc	?_getNV& (0+255),6,b
 26249   000D08  D002               	goto	u23280
 26250   000D0A  0E01               	movlw	1
 26251   000D0C  D001               	goto	u23290
 26252   000D0E                     u23280:
 26253   000D0E  0E00               	movlw	0
 26254   000D10                     u23290:
 26255   000D10  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 26256   000D12  0101               	movlb	1	; () banked
 26257   000D14  51DB               	movf	pollServos@io& (0+255),w,b
 26258   000D16  0D04               	mullw	4
 26259   000D18  50F3               	movf	243,w,c
 26260   000D1A  0F0A               	addlw	10
 26261   000D1C  EC64  F04C         	call	_sendProducedEvent
 26262   000D20                     l22071:
 26263                           
 26264                           ;../servo.c: 384:                             writeNVM(EEPROM_NVM_TYPE, ((eeprom_address
      +                          _t)((0x3FF -8))-25)+io, currentPos[io]);
 26265   000D20  0EDE               	movlw	222
 26266   000D22  0101               	movlb	1	; () banked
 26267   000D24  25DB               	addwf	pollServos@io& (0+255),w,b
 26268   000D26  6FD0               	movwf	??_pollServos& (0+255),b
 26269   000D28  6BD1               	clrf	(??_pollServos+1)& (0+255),b
 26270   000D2A  0E03               	movlw	3
 26271   000D2C  23D1               	addwfc	(??_pollServos+1)& (0+255),f,b
 26272   000D2E  C1D0  F0A4         	movff	??_pollServos,writeNVM@index
 26273   000D32  C1D1  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 26274   000D36  0100               	movlb	0	; () banked
 26275   000D38  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 26276   000D3A  0E30               	movlw	low _currentPos
 26277   000D3C  0101               	movlb	1	; () banked
 26278   000D3E  25DB               	addwf	pollServos@io& (0+255),w,b
 26279   000D40  6ED9               	movwf	fsr2l,c
 26280   000D42  6ADA               	clrf	fsr2h,c
 26281   000D44  0E01               	movlw	high _currentPos
 26282   000D46  22DA               	addwfc	fsr2h,f,c
 26283   000D48  50DF               	movf	indf2,w,c
 26284   000D4A  0100               	movlb	0	; () banked
 26285   000D4C  6FA7               	movwf	writeNVM@value& (0+255),b
 26286   000D4E  0E00               	movlw	0
 26287   000D50  ECC1  F05D         	call	_writeNVM
 26288   000D54  EFC8  F00B         	goto	l22231
 26289   000D58                     l22075:
 26290                           
 26291                           ; BSR set to: 1
 26292   000D58  0E10               	movlw	low _servoState
 26293   000D5A  25DB               	addwf	pollServos@io& (0+255),w,b
 26294   000D5C  6ED9               	movwf	fsr2l,c
 26295   000D5E  6ADA               	clrf	fsr2h,c
 26296   000D60  0E01               	movlw	high _servoState
 26297   000D62  22DA               	addwfc	fsr2h,f,c
 26298   000D64  50DF               	movf	indf2,w,c
 26299   000D66  6FD0               	movwf	??_pollServos& (0+255),b
 26300   000D68  6BD1               	clrf	(??_pollServos+1)& (0+255),b
 26301                           
 26302                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26303                           ; Switch size 1, requested type "simple"
 26304                           ; Number of cases is 1, Range of values is 0 to 0
 26305                           ; switch strategies available:
 26306                           ; Name         Instructions Cycles
 26307                           ; simple_byte            4     3 (average)
 26308                           ;	Chosen strategy is simple_byte
 26309   000D6A  51D1               	movf	(??_pollServos+1)& (0+255),w,b
 26310   000D6C  0A00               	xorlw	0	; case 0
 26311   000D6E  A4D8               	btfss	status,2,c
 26312   000D70  EFC8  F00B         	goto	l22231
 26313                           
 26314                           ; BSR set to: 1
 26315                           ; Switch size 1, requested type "simple"
 26316                           ; Number of cases is 4, Range of values is 0 to 3
 26317                           ; switch strategies available:
 26318                           ; Name         Instructions Cycles
 26319                           ; simple_byte           13     7 (average)
 26320                           ;	Chosen strategy is simple_byte
 26321   000D74  51D0               	movf	??_pollServos& (0+255),w,b
 26322   000D76  0A00               	xorlw	0	; case 0
 26323   000D78  B4D8               	btfsc	status,2,c
 26324   000D7A  EFC8  F00B         	goto	l22231
 26325   000D7E  0A01               	xorlw	1	; case 1
 26326   000D80  B4D8               	btfsc	status,2,c
 26327   000D82  EFC8  F00B         	goto	l22231
 26328   000D86  0A03               	xorlw	3	; case 2
 26329   000D88  B4D8               	btfsc	status,2,c
 26330   000D8A  D5E2               	goto	l21995
 26331   000D8C  0A01               	xorlw	1	; case 3
 26332   000D8E  B4D8               	btfsc	status,2,c
 26333   000D90  D592               	goto	l21987
 26334   000D92  EFC8  F00B         	goto	l22231
 26335   000D96                     l22077:
 26336                           
 26337                           ; BSR set to: 1
 26338                           ;../servo.c: 395:                         initBounce(io);
 26339   000D96  51DB               	movf	pollServos@io& (0+255),w,b
 26340   000D98  EC14  F062         	call	_initBounce
 26341                           
 26342                           ;../servo.c: 396:                         servoState[io] = SS_MOVING;
 26343   000D9C  0E10               	movlw	low _servoState
 26344   000D9E  0101               	movlb	1	; () banked
 26345   000DA0  25DB               	addwf	pollServos@io& (0+255),w,b
 26346   000DA2  6ED9               	movwf	fsr2l,c
 26347   000DA4  6ADA               	clrf	fsr2h,c
 26348   000DA6  0E01               	movlw	high _servoState
 26349   000DA8  22DA               	addwfc	fsr2h,f,c
 26350   000DAA  0E02               	movlw	2
 26351   000DAC  6EDF               	movwf	indf2,c
 26352                           
 26353                           ; BSR set to: 1
 26354                           ;../servo.c: 397:                         loopCount[io] = 0;
 26355   000DAE  0E54               	movlw	low _loopCount
 26356   000DB0  25DB               	addwf	pollServos@io& (0+255),w,b
 26357   000DB2  6ED9               	movwf	fsr2l,c
 26358   000DB4  6ADA               	clrf	fsr2h,c
 26359   000DB6  0E02               	movlw	high _loopCount
 26360   000DB8  22DA               	addwfc	fsr2h,f,c
 26361   000DBA  6ADF               	clrf	indf2,c
 26362   000DBC                     l22083:
 26363                           
 26364                           ; BSR set to: 1
 26365                           ;../servo.c: 401:                         loopCount[io]++;
 26366   000DBC  0E54               	movlw	low _loopCount
 26367   000DBE  25DB               	addwf	pollServos@io& (0+255),w,b
 26368   000DC0  6ED9               	movwf	fsr2l,c
 26369   000DC2  6ADA               	clrf	fsr2h,c
 26370   000DC4  0E02               	movlw	high _loopCount
 26371   000DC6  22DA               	addwfc	fsr2h,f,c
 26372   000DC8  2ADF               	incf	indf2,f,c
 26373                           
 26374                           ; BSR set to: 1
 26375                           ;../servo.c: 402:                         if (loopCount[io] >= 255) {
 26376   000DCA  0E54               	movlw	low _loopCount
 26377   000DCC  25DB               	addwf	pollServos@io& (0+255),w,b
 26378   000DCE  6ED9               	movwf	fsr2l,c
 26379   000DD0  6ADA               	clrf	fsr2h,c
 26380   000DD2  0E02               	movlw	high _loopCount
 26381   000DD4  22DA               	addwfc	fsr2h,f,c
 26382   000DD6  28DE               	incf	postinc2,w,c
 26383   000DD8  A4D8               	btfss	status,2,c
 26384   000DDA  D059               	goto	l22097
 26385                           
 26386                           ; BSR set to: 1
 26387                           ;../servo.c: 403:                             servoState[io] = SS_STOPPED;
 26388   000DDC  0E10               	movlw	low _servoState
 26389   000DDE  25DB               	addwf	pollServos@io& (0+255),w,b
 26390   000DE0  6ED9               	movwf	fsr2l,c
 26391   000DE2  6ADA               	clrf	fsr2h,c
 26392   000DE4  0E01               	movlw	high _servoState
 26393   000DE6  22DA               	addwfc	fsr2h,f,c
 26394   000DE8  0E01               	movlw	1
 26395   000DEA  6EDF               	movwf	indf2,c
 26396                           
 26397                           ; BSR set to: 1
 26398                           ;../servo.c: 404:                             ticksWhenStopped[io].val = tickGet();
 26399   000DEC  EC45  F05C         	call	_tickGet	;wreg free
 26400   000DF0  0101               	movlb	1	; () banked
 26401   000DF2  51DB               	movf	pollServos@io& (0+255),w,b
 26402   000DF4  0D04               	mullw	4
 26403   000DF6  0E88               	movlw	low _ticksWhenStopped
 26404   000DF8  24F3               	addwf	243,w,c
 26405   000DFA  6ED9               	movwf	fsr2l,c
 26406   000DFC  0E03               	movlw	high _ticksWhenStopped
 26407   000DFE  20F4               	addwfc	prodh,w,c
 26408   000E00  6EDA               	movwf	fsr2h,c
 26409   000E02  0100               	movlb	0	; () banked
 26410   000E04  C08D  FFDE         	movff	?_tickGet,postinc2
 26411   000E08  C08E  FFDE         	movff	?_tickGet+1,postinc2
 26412   000E0C  C08F  FFDE         	movff	?_tickGet+2,postinc2
 26413   000E10  C090  FFDE         	movff	?_tickGet+3,postinc2
 26414                           
 26415                           ; BSR set to: 0
 26416                           ;../servo.c: 405:                             currentPos[io] = targetPos[io];
 26417   000E14  0101               	movlb	1	; () banked
 26418   000E16  51DB               	movf	pollServos@io& (0+255),w,b
 26419   000E18  0F01               	addlw	low _targetPos
 26420   000E1A  6ED9               	movwf	fsr2l,c
 26421   000E1C  6ADA               	clrf	fsr2h,c
 26422   000E1E  0E30               	movlw	low _currentPos
 26423   000E20  25DB               	addwf	pollServos@io& (0+255),w,b
 26424   000E22  6EE1               	movwf	fsr1l,c
 26425   000E24  6AE2               	clrf	fsr1h,c
 26426   000E26  0E01               	movlw	high _currentPos
 26427   000E28  22E2               	addwfc	fsr1h,f,c
 26428   000E2A  CFDF FFE7          	movff	indf2,indf1
 26429                           
 26430                           ; BSR set to: 1
 26431                           ;../servo.c: 406:                             sendProducedEvent(((8 + 4*(io))+0), (getNV
      +                          ((16 + 7*(io) + 1)) & 0x40)?EVENT_OFF:EVENT_ON);
 26432   000E2E  51DB               	movf	pollServos@io& (0+255),w,b
 26433   000E30  0D07               	mullw	7
 26434   000E32  50F3               	movf	243,w,c
 26435   000E34  0F11               	addlw	17
 26436   000E36  ECD2  F05F         	call	_getNV
 26437   000E3A  0100               	movlb	0	; () banked
 26438   000E3C  BD8D               	btfsc	?_getNV& (0+255),6,b
 26439   000E3E  D002               	goto	u23310
 26440   000E40  0E01               	movlw	1
 26441   000E42  D001               	goto	u23320
 26442   000E44                     u23310:
 26443   000E44  0E00               	movlw	0
 26444   000E46                     u23320:
 26445   000E46  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 26446   000E48  0101               	movlb	1	; () banked
 26447   000E4A  51DB               	movf	pollServos@io& (0+255),w,b
 26448   000E4C  0D04               	mullw	4
 26449   000E4E  50F3               	movf	243,w,c
 26450   000E50  0F08               	addlw	8
 26451   000E52  EC64  F04C         	call	_sendProducedEvent
 26452                           
 26453                           ;../servo.c: 407:                             writeNVM(EEPROM_NVM_TYPE, ((eeprom_address
      +                          _t)((0x3FF -8))-25)+io, currentPos[io]);
 26454   000E56  0EDE               	movlw	222
 26455   000E58  0101               	movlb	1	; () banked
 26456   000E5A  25DB               	addwf	pollServos@io& (0+255),w,b
 26457   000E5C  6FD0               	movwf	??_pollServos& (0+255),b
 26458   000E5E  6BD1               	clrf	(??_pollServos+1)& (0+255),b
 26459   000E60  0E03               	movlw	3
 26460   000E62  23D1               	addwfc	(??_pollServos+1)& (0+255),f,b
 26461   000E64  C1D0  F0A4         	movff	??_pollServos,writeNVM@index
 26462   000E68  C1D1  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 26463   000E6C  0100               	movlb	0	; () banked
 26464   000E6E  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 26465   000E70  0E30               	movlw	low _currentPos
 26466   000E72  0101               	movlb	1	; () banked
 26467   000E74  25DB               	addwf	pollServos@io& (0+255),w,b
 26468   000E76  6ED9               	movwf	fsr2l,c
 26469   000E78  6ADA               	clrf	fsr2h,c
 26470   000E7A  0E01               	movlw	high _currentPos
 26471   000E7C  22DA               	addwfc	fsr2h,f,c
 26472   000E7E  50DF               	movf	indf2,w,c
 26473   000E80  0100               	movlb	0	; () banked
 26474   000E82  6FA7               	movwf	writeNVM@value& (0+255),b
 26475   000E84  0E00               	movlw	0
 26476   000E86  ECC1  F05D         	call	_writeNVM
 26477                           
 26478                           ;../servo.c: 408:                             break;
 26479   000E8A  EFC8  F00B         	goto	l22231
 26480   000E8E                     l22097:
 26481                           
 26482                           ; BSR set to: 1
 26483                           ;../servo.c: 411:                         target = (uint8_t)getNV((16 + 7*(io) + 2));
 26484   000E8E  51DB               	movf	pollServos@io& (0+255),w,b
 26485   000E90  0D07               	mullw	7
 26486   000E92  50F3               	movf	243,w,c
 26487   000E94  0F12               	addlw	18
 26488   000E96  ECD2  F05F         	call	_getNV
 26489   000E9A  0100               	movlb	0	; () banked
 26490   000E9C  518D               	movf	?_getNV& (0+255),w,b
 26491   000E9E  0101               	movlb	1	; () banked
 26492   000EA0  6FD8               	movwf	pollServos@target& (0+255),b
 26493                           
 26494                           ; BSR set to: 1
 26495                           ;../servo.c: 415:                         if (targetPos[io] == target) {
 26496   000EA2  51DB               	movf	pollServos@io& (0+255),w,b
 26497   000EA4  0F01               	addlw	low _targetPos
 26498   000EA6  6ED9               	movwf	fsr2l,c
 26499   000EA8  6ADA               	clrf	fsr2h,c
 26500   000EAA  51D8               	movf	pollServos@target& (0+255),w,b
 26501   000EAC  18DE               	xorwf	postinc2,w,c
 26502   000EAE  A4D8               	btfss	status,2,c
 26503   000EB0  D061               	goto	l22113
 26504                           
 26505                           ; BSR set to: 1
 26506                           ;../servo.c: 416:                             if (bounceUp(io)) {
 26507   000EB2  51DB               	movf	pollServos@io& (0+255),w,b
 26508   000EB4  ECDA  F02C         	call	_bounceUp
 26509   000EB8  0900               	iorlw	0
 26510   000EBA  B4D8               	btfsc	status,2,c
 26511   000EBC  EFC8  F00B         	goto	l22231
 26512                           
 26513                           ;../servo.c: 417:                                 servoState[io] = SS_STOPPED;
 26514   000EC0  0E10               	movlw	low _servoState
 26515   000EC2  0101               	movlb	1	; () banked
 26516   000EC4  25DB               	addwf	pollServos@io& (0+255),w,b
 26517   000EC6  6ED9               	movwf	fsr2l,c
 26518   000EC8  6ADA               	clrf	fsr2h,c
 26519   000ECA  0E01               	movlw	high _servoState
 26520   000ECC  22DA               	addwfc	fsr2h,f,c
 26521   000ECE  0E01               	movlw	1
 26522   000ED0  6EDF               	movwf	indf2,c
 26523                           
 26524                           ; BSR set to: 1
 26525                           ;../servo.c: 418:                                 ticksWhenStopped[io].val = tickGet();
 26526   000ED2  EC45  F05C         	call	_tickGet	;wreg free
 26527   000ED6  0101               	movlb	1	; () banked
 26528   000ED8  51DB               	movf	pollServos@io& (0+255),w,b
 26529   000EDA  0D04               	mullw	4
 26530   000EDC  0E88               	movlw	low _ticksWhenStopped
 26531   000EDE  24F3               	addwf	243,w,c
 26532   000EE0  6ED9               	movwf	fsr2l,c
 26533   000EE2  0E03               	movlw	high _ticksWhenStopped
 26534   000EE4  20F4               	addwfc	prodh,w,c
 26535   000EE6  6EDA               	movwf	fsr2h,c
 26536   000EE8  0100               	movlb	0	; () banked
 26537   000EEA  C08D  FFDE         	movff	?_tickGet,postinc2
 26538   000EEE  C08E  FFDE         	movff	?_tickGet+1,postinc2
 26539   000EF2  C08F  FFDE         	movff	?_tickGet+2,postinc2
 26540   000EF6  C090  FFDE         	movff	?_tickGet+3,postinc2
 26541                           
 26542                           ; BSR set to: 0
 26543                           ;../servo.c: 419:                                 currentPos[io] = targetPos[io];
 26544   000EFA  0101               	movlb	1	; () banked
 26545   000EFC  51DB               	movf	pollServos@io& (0+255),w,b
 26546   000EFE  0F01               	addlw	low _targetPos
 26547   000F00  6ED9               	movwf	fsr2l,c
 26548   000F02  6ADA               	clrf	fsr2h,c
 26549   000F04  0E30               	movlw	low _currentPos
 26550   000F06  25DB               	addwf	pollServos@io& (0+255),w,b
 26551   000F08  6EE1               	movwf	fsr1l,c
 26552   000F0A  6AE2               	clrf	fsr1h,c
 26553   000F0C  0E01               	movlw	high _currentPos
 26554   000F0E  22E2               	addwfc	fsr1h,f,c
 26555   000F10  CFDF FFE7          	movff	indf2,indf1
 26556                           
 26557                           ; BSR set to: 1
 26558                           ;../servo.c: 420:                                 sendProducedEvent(((8 + 4*(io))+0), (g
      +                          etNV((16 + 7*(io) + 1)) & 0x40)?EVENT_OFF:EVENT_ON);
 26559   000F14  51DB               	movf	pollServos@io& (0+255),w,b
 26560   000F16  0D07               	mullw	7
 26561   000F18  50F3               	movf	243,w,c
 26562   000F1A  0F11               	addlw	17
 26563   000F1C  ECD2  F05F         	call	_getNV
 26564   000F20  0100               	movlb	0	; () banked
 26565   000F22  BD8D               	btfsc	?_getNV& (0+255),6,b
 26566   000F24  D002               	goto	u23350
 26567   000F26  0E01               	movlw	1
 26568   000F28  D001               	goto	u23360
 26569   000F2A                     u23350:
 26570   000F2A  0E00               	movlw	0
 26571   000F2C                     u23360:
 26572   000F2C  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 26573   000F2E  0101               	movlb	1	; () banked
 26574   000F30  51DB               	movf	pollServos@io& (0+255),w,b
 26575   000F32  0D04               	mullw	4
 26576   000F34  50F3               	movf	243,w,c
 26577   000F36  0F08               	addlw	8
 26578   000F38  EC64  F04C         	call	_sendProducedEvent
 26579                           
 26580                           ;../servo.c: 421:                                 writeNVM(EEPROM_NVM_TYPE, ((eeprom_add
      +                          ress_t)((0x3FF -8))-25)+io, currentPos[io]);
 26581   000F3C  0EDE               	movlw	222
 26582   000F3E  0101               	movlb	1	; () banked
 26583   000F40  25DB               	addwf	pollServos@io& (0+255),w,b
 26584   000F42  6FD0               	movwf	??_pollServos& (0+255),b
 26585   000F44  6BD1               	clrf	(??_pollServos+1)& (0+255),b
 26586   000F46  0E03               	movlw	3
 26587   000F48  23D1               	addwfc	(??_pollServos+1)& (0+255),f,b
 26588   000F4A  C1D0  F0A4         	movff	??_pollServos,writeNVM@index
 26589   000F4E  C1D1  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 26590   000F52  0100               	movlb	0	; () banked
 26591   000F54  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 26592   000F56  0E30               	movlw	low _currentPos
 26593   000F58  0101               	movlb	1	; () banked
 26594   000F5A  25DB               	addwf	pollServos@io& (0+255),w,b
 26595   000F5C  6ED9               	movwf	fsr2l,c
 26596   000F5E  6ADA               	clrf	fsr2h,c
 26597   000F60  0E01               	movlw	high _currentPos
 26598   000F62  22DA               	addwfc	fsr2h,f,c
 26599   000F64  50DF               	movf	indf2,w,c
 26600   000F66  0100               	movlb	0	; () banked
 26601   000F68  6FA7               	movwf	writeNVM@value& (0+255),b
 26602   000F6A  0E00               	movlw	0
 26603   000F6C  ECC1  F05D         	call	_writeNVM
 26604   000F70  EFC8  F00B         	goto	l22231
 26605   000F74                     l22113:
 26606                           
 26607                           ; BSR set to: 1
 26608                           ;../servo.c: 424:                             if (bounceDown(io)) {
 26609   000F74  51DB               	movf	pollServos@io& (0+255),w,b
 26610   000F76  EC15  F017         	call	_bounceDown
 26611   000F7A  0900               	iorlw	0
 26612   000F7C  B4D8               	btfsc	status,2,c
 26613   000F7E  EFC8  F00B         	goto	l22231
 26614                           
 26615                           ;../servo.c: 425:                                 servoState[io] = SS_STOPPED;
 26616   000F82  0E10               	movlw	low _servoState
 26617   000F84  0101               	movlb	1	; () banked
 26618   000F86  25DB               	addwf	pollServos@io& (0+255),w,b
 26619   000F88  6ED9               	movwf	fsr2l,c
 26620   000F8A  6ADA               	clrf	fsr2h,c
 26621   000F8C  0E01               	movlw	high _servoState
 26622   000F8E  22DA               	addwfc	fsr2h,f,c
 26623   000F90  0E01               	movlw	1
 26624   000F92  6EDF               	movwf	indf2,c
 26625                           
 26626                           ; BSR set to: 1
 26627                           ;../servo.c: 426:                                 ticksWhenStopped[io].val = tickGet();
 26628   000F94  EC45  F05C         	call	_tickGet	;wreg free
 26629   000F98  0101               	movlb	1	; () banked
 26630   000F9A  51DB               	movf	pollServos@io& (0+255),w,b
 26631   000F9C  0D04               	mullw	4
 26632   000F9E  0E88               	movlw	low _ticksWhenStopped
 26633   000FA0  24F3               	addwf	243,w,c
 26634   000FA2  6ED9               	movwf	fsr2l,c
 26635   000FA4  0E03               	movlw	high _ticksWhenStopped
 26636   000FA6  20F4               	addwfc	prodh,w,c
 26637   000FA8  6EDA               	movwf	fsr2h,c
 26638   000FAA  0100               	movlb	0	; () banked
 26639   000FAC  C08D  FFDE         	movff	?_tickGet,postinc2
 26640   000FB0  C08E  FFDE         	movff	?_tickGet+1,postinc2
 26641   000FB4  C08F  FFDE         	movff	?_tickGet+2,postinc2
 26642   000FB8  C090  FFDE         	movff	?_tickGet+3,postinc2
 26643                           
 26644                           ; BSR set to: 0
 26645                           ;../servo.c: 427:                                 currentPos[io] = targetPos[io];
 26646   000FBC  0101               	movlb	1	; () banked
 26647   000FBE  51DB               	movf	pollServos@io& (0+255),w,b
 26648   000FC0  0F01               	addlw	low _targetPos
 26649   000FC2  6ED9               	movwf	fsr2l,c
 26650   000FC4  6ADA               	clrf	fsr2h,c
 26651   000FC6  0E30               	movlw	low _currentPos
 26652   000FC8  25DB               	addwf	pollServos@io& (0+255),w,b
 26653   000FCA  6EE1               	movwf	fsr1l,c
 26654   000FCC  6AE2               	clrf	fsr1h,c
 26655   000FCE  0E01               	movlw	high _currentPos
 26656   000FD0  22E2               	addwfc	fsr1h,f,c
 26657   000FD2  CFDF FFE7          	movff	indf2,indf1
 26658                           
 26659                           ; BSR set to: 1
 26660                           ;../servo.c: 428:                                 sendProducedEvent(((8 + 4*(io))+0), (g
      +                          etNV((16 + 7*(io) + 1)) & 0x40)?EVENT_ON:EVENT_OFF);
 26661   000FD6  51DB               	movf	pollServos@io& (0+255),w,b
 26662   000FD8  0D07               	mullw	7
 26663   000FDA  50F3               	movf	243,w,c
 26664   000FDC  0F11               	addlw	17
 26665   000FDE  ECD2  F05F         	call	_getNV
 26666   000FE2  0100               	movlb	0	; () banked
 26667   000FE4  AD8D               	btfss	?_getNV& (0+255),6,b
 26668   000FE6  D002               	goto	u23380
 26669   000FE8  0E01               	movlw	1
 26670   000FEA  D001               	goto	u23390
 26671   000FEC                     u23380:
 26672   000FEC  0E00               	movlw	0
 26673   000FEE                     u23390:
 26674   000FEE  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 26675   000FF0  0101               	movlb	1	; () banked
 26676   000FF2  51DB               	movf	pollServos@io& (0+255),w,b
 26677   000FF4  0D04               	mullw	4
 26678   000FF6  50F3               	movf	243,w,c
 26679   000FF8  0F08               	addlw	8
 26680   000FFA  EC64  F04C         	call	_sendProducedEvent
 26681                           
 26682                           ;../servo.c: 429:                                 writeNVM(EEPROM_NVM_TYPE, ((eeprom_add
      +                          ress_t)((0x3FF -8))-25)+io, currentPos[io]);
 26683   000FFE  0EDE               	movlw	222
 26684   001000  0101               	movlb	1	; () banked
 26685   001002  25DB               	addwf	pollServos@io& (0+255),w,b
 26686   001004  6FD0               	movwf	??_pollServos& (0+255),b
 26687   001006  6BD1               	clrf	(??_pollServos+1)& (0+255),b
 26688   001008  0E03               	movlw	3
 26689   00100A  23D1               	addwfc	(??_pollServos+1)& (0+255),f,b
 26690   00100C  C1D0  F0A4         	movff	??_pollServos,writeNVM@index
 26691   001010  C1D1  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 26692   001014  0100               	movlb	0	; () banked
 26693   001016  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 26694   001018  0E30               	movlw	low _currentPos
 26695   00101A  0101               	movlb	1	; () banked
 26696   00101C  25DB               	addwf	pollServos@io& (0+255),w,b
 26697   00101E  6ED9               	movwf	fsr2l,c
 26698   001020  6ADA               	clrf	fsr2h,c
 26699   001022  0E01               	movlw	high _currentPos
 26700   001024  22DA               	addwfc	fsr2h,f,c
 26701   001026  50DF               	movf	indf2,w,c
 26702   001028  0100               	movlb	0	; () banked
 26703   00102A  6FA7               	movwf	writeNVM@value& (0+255),b
 26704   00102C  0E00               	movlw	0
 26705   00102E  ECC1  F05D         	call	_writeNVM
 26706   001032  D3AE               	goto	l22231
 26707   001034                     l22127:
 26708                           
 26709                           ; BSR set to: 0
 26710   001034  0E10               	movlw	low _servoState
 26711   001036  0101               	movlb	1	; () banked
 26712   001038  25DB               	addwf	pollServos@io& (0+255),w,b
 26713   00103A  6ED9               	movwf	fsr2l,c
 26714   00103C  6ADA               	clrf	fsr2h,c
 26715   00103E  0E01               	movlw	high _servoState
 26716   001040  22DA               	addwfc	fsr2h,f,c
 26717   001042  50DF               	movf	indf2,w,c
 26718   001044  6FD0               	movwf	??_pollServos& (0+255),b
 26719   001046  6BD1               	clrf	(??_pollServos+1)& (0+255),b
 26720                           
 26721                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26722                           ; Switch size 1, requested type "simple"
 26723                           ; Number of cases is 1, Range of values is 0 to 0
 26724                           ; switch strategies available:
 26725                           ; Name         Instructions Cycles
 26726                           ; simple_byte            4     3 (average)
 26727                           ;	Chosen strategy is simple_byte
 26728   001048  51D1               	movf	(??_pollServos+1)& (0+255),w,b
 26729   00104A  0A00               	xorlw	0	; case 0
 26730   00104C  A4D8               	btfss	status,2,c
 26731   00104E  D3A0               	goto	l22231
 26732                           
 26733                           ; BSR set to: 1
 26734                           ; Switch size 1, requested type "simple"
 26735                           ; Number of cases is 4, Range of values is 0 to 3
 26736                           ; switch strategies available:
 26737                           ; Name         Instructions Cycles
 26738                           ; simple_byte           13     7 (average)
 26739                           ;	Chosen strategy is simple_byte
 26740   001050  51D0               	movf	??_pollServos& (0+255),w,b
 26741   001052  0A00               	xorlw	0	; case 0
 26742   001054  B4D8               	btfsc	status,2,c
 26743   001056  D39C               	goto	l22231
 26744   001058  0A01               	xorlw	1	; case 1
 26745   00105A  B4D8               	btfsc	status,2,c
 26746   00105C  D399               	goto	l22231
 26747   00105E  0A03               	xorlw	3	; case 2
 26748   001060  B4D8               	btfsc	status,2,c
 26749   001062  D6AC               	goto	l22083
 26750   001064  0A01               	xorlw	1	; case 3
 26751   001066  B4D8               	btfsc	status,2,c
 26752   001068  D696               	goto	l22077
 26753   00106A  D392               	goto	l22231
 26754   00106C                     l22129:
 26755                           
 26756                           ; BSR set to: 1
 26757                           ;../servo.c: 441:                         if (currentPos[io] == getNV((16 + 7*(io) + 3))
      +                          ) {
 26758   00106C  51DB               	movf	pollServos@io& (0+255),w,b
 26759   00106E  0D07               	mullw	7
 26760   001070  50F3               	movf	243,w,c
 26761   001072  0F13               	addlw	19
 26762   001074  ECD2  F05F         	call	_getNV
 26763   001078  0E30               	movlw	low _currentPos
 26764   00107A  0101               	movlb	1	; () banked
 26765   00107C  25DB               	addwf	pollServos@io& (0+255),w,b
 26766   00107E  6ED9               	movwf	fsr2l,c
 26767   001080  6ADA               	clrf	fsr2h,c
 26768   001082  0E01               	movlw	high _currentPos
 26769   001084  22DA               	addwfc	fsr2h,f,c
 26770   001086  50DF               	movf	indf2,w,c
 26771   001088  6FD0               	movwf	??_pollServos& (0+255),b
 26772   00108A  6BD1               	clrf	(??_pollServos+1)& (0+255),b
 26773   00108C  0100               	movlb	0	; () banked
 26774   00108E  518D               	movf	?_getNV& (0+255),w,b
 26775   001090  0101               	movlb	1	; () banked
 26776   001092  19D0               	xorwf	??_pollServos& (0+255),w,b
 26777   001094  E11A               	bnz	l22133
 26778   001096  0100               	movlb	0	; () banked
 26779   001098  518E               	movf	(?_getNV+1)& (0+255),w,b
 26780   00109A  0101               	movlb	1	; () banked
 26781   00109C  19D1               	xorwf	(??_pollServos+1)& (0+255),w,b
 26782   00109E  A4D8               	btfss	status,2,c
 26783   0010A0  D014               	goto	l22133
 26784                           
 26785                           ; BSR set to: 1
 26786                           ;../servo.c: 442:                             sendProducedEvent(((8 + 4*(io))+0), (getNV
      +                          ((16 + 7*(io) + 1)) & 0x40)?EVENT_ON:EVENT_OFF);
 26787   0010A2  51DB               	movf	pollServos@io& (0+255),w,b
 26788   0010A4  0D07               	mullw	7
 26789   0010A6  50F3               	movf	243,w,c
 26790   0010A8  0F11               	addlw	17
 26791   0010AA  ECD2  F05F         	call	_getNV
 26792   0010AE  0100               	movlb	0	; () banked
 26793   0010B0  AD8D               	btfss	?_getNV& (0+255),6,b
 26794   0010B2  D002               	goto	u23410
 26795   0010B4  0E01               	movlw	1
 26796   0010B6  D001               	goto	u23420
 26797   0010B8                     u23410:
 26798   0010B8  0E00               	movlw	0
 26799   0010BA                     u23420:
 26800   0010BA  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 26801   0010BC  0101               	movlb	1	; () banked
 26802   0010BE  51DB               	movf	pollServos@io& (0+255),w,b
 26803   0010C0  0D04               	mullw	4
 26804   0010C2  50F3               	movf	243,w,c
 26805   0010C4  0F08               	addlw	8
 26806   0010C6  EC64  F04C         	call	_sendProducedEvent
 26807   0010CA                     l22133:
 26808                           
 26809                           ;../servo.c: 444:                         if (currentPos[io] == getNV((16 + 7*(io) + 4))
      +                          ) {
 26810   0010CA  0101               	movlb	1	; () banked
 26811   0010CC  51DB               	movf	pollServos@io& (0+255),w,b
 26812   0010CE  0D07               	mullw	7
 26813   0010D0  50F3               	movf	243,w,c
 26814   0010D2  0F14               	addlw	20
 26815   0010D4  ECD2  F05F         	call	_getNV
 26816   0010D8  0E30               	movlw	low _currentPos
 26817   0010DA  0101               	movlb	1	; () banked
 26818   0010DC  25DB               	addwf	pollServos@io& (0+255),w,b
 26819   0010DE  6ED9               	movwf	fsr2l,c
 26820   0010E0  6ADA               	clrf	fsr2h,c
 26821   0010E2  0E01               	movlw	high _currentPos
 26822   0010E4  22DA               	addwfc	fsr2h,f,c
 26823   0010E6  50DF               	movf	indf2,w,c
 26824   0010E8  6FD0               	movwf	??_pollServos& (0+255),b
 26825   0010EA  6BD1               	clrf	(??_pollServos+1)& (0+255),b
 26826   0010EC  0100               	movlb	0	; () banked
 26827   0010EE  518D               	movf	?_getNV& (0+255),w,b
 26828   0010F0  0101               	movlb	1	; () banked
 26829   0010F2  19D0               	xorwf	??_pollServos& (0+255),w,b
 26830   0010F4  E11A               	bnz	l22137
 26831   0010F6  0100               	movlb	0	; () banked
 26832   0010F8  518E               	movf	(?_getNV+1)& (0+255),w,b
 26833   0010FA  0101               	movlb	1	; () banked
 26834   0010FC  19D1               	xorwf	(??_pollServos+1)& (0+255),w,b
 26835   0010FE  A4D8               	btfss	status,2,c
 26836   001100  D014               	goto	l22137
 26837                           
 26838                           ; BSR set to: 1
 26839                           ;../servo.c: 445:                             sendProducedEvent(((8 + 4*(io))+1), (getNV
      +                          ((16 + 7*(io) + 1)) & 0x40)?EVENT_ON:EVENT_OFF);
 26840   001102  51DB               	movf	pollServos@io& (0+255),w,b
 26841   001104  0D07               	mullw	7
 26842   001106  50F3               	movf	243,w,c
 26843   001108  0F11               	addlw	17
 26844   00110A  ECD2  F05F         	call	_getNV
 26845   00110E  0100               	movlb	0	; () banked
 26846   001110  AD8D               	btfss	?_getNV& (0+255),6,b
 26847   001112  D002               	goto	u23440
 26848   001114  0E01               	movlw	1
 26849   001116  D001               	goto	u23450
 26850   001118                     u23440:
 26851   001118  0E00               	movlw	0
 26852   00111A                     u23450:
 26853   00111A  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 26854   00111C  0101               	movlb	1	; () banked
 26855   00111E  51DB               	movf	pollServos@io& (0+255),w,b
 26856   001120  0D04               	mullw	4
 26857   001122  50F3               	movf	243,w,c
 26858   001124  0F09               	addlw	9
 26859   001126  EC64  F04C         	call	_sendProducedEvent
 26860   00112A                     l22137:
 26861                           
 26862                           ;../servo.c: 447:                         if (currentPos[io] == getNV((16 + 7*(io) + 5))
      +                          ) {
 26863   00112A  0101               	movlb	1	; () banked
 26864   00112C  51DB               	movf	pollServos@io& (0+255),w,b
 26865   00112E  0D07               	mullw	7
 26866   001130  50F3               	movf	243,w,c
 26867   001132  0F15               	addlw	21
 26868   001134  ECD2  F05F         	call	_getNV
 26869   001138  0E30               	movlw	low _currentPos
 26870   00113A  0101               	movlb	1	; () banked
 26871   00113C  25DB               	addwf	pollServos@io& (0+255),w,b
 26872   00113E  6ED9               	movwf	fsr2l,c
 26873   001140  6ADA               	clrf	fsr2h,c
 26874   001142  0E01               	movlw	high _currentPos
 26875   001144  22DA               	addwfc	fsr2h,f,c
 26876   001146  50DF               	movf	indf2,w,c
 26877   001148  6FD0               	movwf	??_pollServos& (0+255),b
 26878   00114A  6BD1               	clrf	(??_pollServos+1)& (0+255),b
 26879   00114C  0100               	movlb	0	; () banked
 26880   00114E  518D               	movf	?_getNV& (0+255),w,b
 26881   001150  0101               	movlb	1	; () banked
 26882   001152  19D0               	xorwf	??_pollServos& (0+255),w,b
 26883   001154  E11A               	bnz	l22141
 26884   001156  0100               	movlb	0	; () banked
 26885   001158  518E               	movf	(?_getNV+1)& (0+255),w,b
 26886   00115A  0101               	movlb	1	; () banked
 26887   00115C  19D1               	xorwf	(??_pollServos+1)& (0+255),w,b
 26888   00115E  A4D8               	btfss	status,2,c
 26889   001160  D014               	goto	l22141
 26890                           
 26891                           ; BSR set to: 1
 26892                           ;../servo.c: 448:                             sendProducedEvent(((8 + 4*(io))+2), (getNV
      +                          ((16 + 7*(io) + 1)) & 0x40)?EVENT_ON:EVENT_OFF);
 26893   001162  51DB               	movf	pollServos@io& (0+255),w,b
 26894   001164  0D07               	mullw	7
 26895   001166  50F3               	movf	243,w,c
 26896   001168  0F11               	addlw	17
 26897   00116A  ECD2  F05F         	call	_getNV
 26898   00116E  0100               	movlb	0	; () banked
 26899   001170  AD8D               	btfss	?_getNV& (0+255),6,b
 26900   001172  D002               	goto	u23470
 26901   001174  0E01               	movlw	1
 26902   001176  D001               	goto	u23480
 26903   001178                     u23470:
 26904   001178  0E00               	movlw	0
 26905   00117A                     u23480:
 26906   00117A  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 26907   00117C  0101               	movlb	1	; () banked
 26908   00117E  51DB               	movf	pollServos@io& (0+255),w,b
 26909   001180  0D04               	mullw	4
 26910   001182  50F3               	movf	243,w,c
 26911   001184  0F0A               	addlw	10
 26912   001186  EC64  F04C         	call	_sendProducedEvent
 26913   00118A                     l22141:
 26914                           
 26915                           ;../servo.c: 450:                         if (currentPos[io] == getNV((16 + 7*(io) + 6))
      +                          ) {
 26916   00118A  0101               	movlb	1	; () banked
 26917   00118C  51DB               	movf	pollServos@io& (0+255),w,b
 26918   00118E  0D07               	mullw	7
 26919   001190  50F3               	movf	243,w,c
 26920   001192  0F16               	addlw	22
 26921   001194  ECD2  F05F         	call	_getNV
 26922   001198  0E30               	movlw	low _currentPos
 26923   00119A  0101               	movlb	1	; () banked
 26924   00119C  25DB               	addwf	pollServos@io& (0+255),w,b
 26925   00119E  6ED9               	movwf	fsr2l,c
 26926   0011A0  6ADA               	clrf	fsr2h,c
 26927   0011A2  0E01               	movlw	high _currentPos
 26928   0011A4  22DA               	addwfc	fsr2h,f,c
 26929   0011A6  50DF               	movf	indf2,w,c
 26930   0011A8  6FD0               	movwf	??_pollServos& (0+255),b
 26931   0011AA  6BD1               	clrf	(??_pollServos+1)& (0+255),b
 26932   0011AC  0100               	movlb	0	; () banked
 26933   0011AE  518D               	movf	?_getNV& (0+255),w,b
 26934   0011B0  0101               	movlb	1	; () banked
 26935   0011B2  19D0               	xorwf	??_pollServos& (0+255),w,b
 26936   0011B4  E11A               	bnz	l22145
 26937   0011B6  0100               	movlb	0	; () banked
 26938   0011B8  518E               	movf	(?_getNV+1)& (0+255),w,b
 26939   0011BA  0101               	movlb	1	; () banked
 26940   0011BC  19D1               	xorwf	(??_pollServos+1)& (0+255),w,b
 26941   0011BE  A4D8               	btfss	status,2,c
 26942   0011C0  D014               	goto	l22145
 26943                           
 26944                           ; BSR set to: 1
 26945                           ;../servo.c: 451:                             sendProducedEvent(((8 + 4*(io))+3), (getNV
      +                          ((16 + 7*(io) + 1)) & 0x40)?EVENT_ON:EVENT_OFF);
 26946   0011C2  51DB               	movf	pollServos@io& (0+255),w,b
 26947   0011C4  0D07               	mullw	7
 26948   0011C6  50F3               	movf	243,w,c
 26949   0011C8  0F11               	addlw	17
 26950   0011CA  ECD2  F05F         	call	_getNV
 26951   0011CE  0100               	movlb	0	; () banked
 26952   0011D0  AD8D               	btfss	?_getNV& (0+255),6,b
 26953   0011D2  D002               	goto	u23500
 26954   0011D4  0E01               	movlw	1
 26955   0011D6  D001               	goto	u23510
 26956   0011D8                     u23500:
 26957   0011D8  0E00               	movlw	0
 26958   0011DA                     u23510:
 26959   0011DA  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 26960   0011DC  0101               	movlb	1	; () banked
 26961   0011DE  51DB               	movf	pollServos@io& (0+255),w,b
 26962   0011E0  0D04               	mullw	4
 26963   0011E2  50F3               	movf	243,w,c
 26964   0011E4  0F0B               	addlw	11
 26965   0011E6  EC64  F04C         	call	_sendProducedEvent
 26966   0011EA                     l22145:
 26967                           
 26968                           ;../servo.c: 453:                         servoState[io] = SS_MOVING;
 26969   0011EA  0E10               	movlw	low _servoState
 26970   0011EC  0101               	movlb	1	; () banked
 26971   0011EE  25DB               	addwf	pollServos@io& (0+255),w,b
 26972   0011F0  6ED9               	movwf	fsr2l,c
 26973   0011F2  6ADA               	clrf	fsr2h,c
 26974   0011F4  0E01               	movlw	high _servoState
 26975   0011F6  22DA               	addwfc	fsr2h,f,c
 26976   0011F8  0E02               	movlw	2
 26977   0011FA  6EDF               	movwf	indf2,c
 26978   0011FC                     l22147:
 26979                           
 26980                           ; BSR set to: 1
 26981                           ;../servo.c: 456:                         if (targetPos[io] > currentPos[io]) {
 26982   0011FC  51DB               	movf	pollServos@io& (0+255),w,b
 26983   0011FE  0F01               	addlw	low _targetPos
 26984   001200  6ED9               	movwf	fsr2l,c
 26985   001202  6ADA               	clrf	fsr2h,c
 26986   001204  0E30               	movlw	low _currentPos
 26987   001206  25DB               	addwf	pollServos@io& (0+255),w,b
 26988   001208  6EE1               	movwf	fsr1l,c
 26989   00120A  6AE2               	clrf	fsr1h,c
 26990   00120C  0E01               	movlw	high _currentPos
 26991   00120E  22E2               	addwfc	fsr1h,f,c
 26992   001210  50DE               	movf	postinc2,w,c
 26993   001212  5CE6               	subwf	postinc1,w,c
 26994   001214  B0D8               	btfsc	status,0,c
 26995   001216  D08B               	goto	l22167
 26996                           
 26997                           ; BSR set to: 1
 26998                           ;../servo.c: 457:                             if (stepsPerPollSpeed[io]) {
 26999   001218  0E00               	movlw	low _stepsPerPollSpeed
 27000   00121A  25DB               	addwf	pollServos@io& (0+255),w,b
 27001   00121C  6ED9               	movwf	fsr2l,c
 27002   00121E  6ADA               	clrf	fsr2h,c
 27003   001220  0E01               	movlw	high _stepsPerPollSpeed
 27004   001222  22DA               	addwfc	fsr2h,f,c
 27005   001224  50DF               	movf	indf2,w,c
 27006   001226  B4D8               	btfsc	status,2,c
 27007   001228  D042               	goto	l22157
 27008                           
 27009                           ; BSR set to: 1
 27010                           ;../servo.c: 458:                                 if (currentPos[io] + stepsPerPollSpeed
      +                          [io] < currentPos[io]) {
 27011   00122A  0E30               	movlw	low _currentPos
 27012   00122C  25DB               	addwf	pollServos@io& (0+255),w,b
 27013   00122E  6ED9               	movwf	fsr2l,c
 27014   001230  6ADA               	clrf	fsr2h,c
 27015   001232  0E01               	movlw	high _currentPos
 27016   001234  22DA               	addwfc	fsr2h,f,c
 27017   001236  50DF               	movf	indf2,w,c
 27018   001238  6FD0               	movwf	??_pollServos& (0+255),b
 27019   00123A  6BD1               	clrf	(??_pollServos+1)& (0+255),b
 27020   00123C  0E30               	movlw	low _currentPos
 27021   00123E  25DB               	addwf	pollServos@io& (0+255),w,b
 27022   001240  6ED9               	movwf	fsr2l,c
 27023   001242  6ADA               	clrf	fsr2h,c
 27024   001244  0E01               	movlw	high _currentPos
 27025   001246  22DA               	addwfc	fsr2h,f,c
 27026   001248  50DF               	movf	indf2,w,c
 27027   00124A  6FD2               	movwf	(??_pollServos+2)& (0+255),b
 27028   00124C  6BD3               	clrf	(??_pollServos+3)& (0+255),b
 27029   00124E  0E00               	movlw	low _stepsPerPollSpeed
 27030   001250  25DB               	addwf	pollServos@io& (0+255),w,b
 27031   001252  6ED9               	movwf	fsr2l,c
 27032   001254  6ADA               	clrf	fsr2h,c
 27033   001256  0E01               	movlw	high _stepsPerPollSpeed
 27034   001258  22DA               	addwfc	fsr2h,f,c
 27035   00125A  50DF               	movf	indf2,w,c
 27036   00125C  6FD4               	movwf	(??_pollServos+4)& (0+255),b
 27037   00125E  51D4               	movf	(??_pollServos+4)& (0+255),w,b
 27038   001260  27D2               	addwf	(??_pollServos+2)& (0+255),f,b
 27039   001262  0E00               	movlw	0
 27040   001264  23D3               	addwfc	(??_pollServos+3)& (0+255),f,b
 27041   001266  51D0               	movf	??_pollServos& (0+255),w,b
 27042   001268  5DD2               	subwf	(??_pollServos+2)& (0+255),w,b
 27043   00126A  51D3               	movf	(??_pollServos+3)& (0+255),w,b
 27044   00126C  0A80               	xorlw	128
 27045   00126E  6FD5               	movwf	(??_pollServos+5)& (0+255),b
 27046   001270  51D1               	movf	(??_pollServos+1)& (0+255),w,b
 27047   001272  0A80               	xorlw	128
 27048   001274  59D5               	subwfb	(??_pollServos+5)& (0+255),w,b
 27049   001276  B0D8               	btfsc	status,0,c
 27050   001278  D009               	goto	l22155
 27051                           
 27052                           ; BSR set to: 1
 27053                           ;../servo.c: 460:                                     currentPos[io] =255;
 27054   00127A  0E30               	movlw	low _currentPos
 27055   00127C  25DB               	addwf	pollServos@io& (0+255),w,b
 27056   00127E  6ED9               	movwf	fsr2l,c
 27057   001280  6ADA               	clrf	fsr2h,c
 27058   001282  0E01               	movlw	high _currentPos
 27059   001284  22DA               	addwfc	fsr2h,f,c
 27060   001286  0EFF               	movlw	255
 27061   001288  6EDF               	movwf	indf2,c
 27062                           
 27063                           ;../servo.c: 461:                                 } else {
 27064   00128A  D036               	goto	l22163
 27065   00128C                     l22155:
 27066                           
 27067                           ; BSR set to: 1
 27068                           ;../servo.c: 462:                                     currentPos[io] += stepsPerPollSpee
      +                          d[io];
 27069   00128C  0E00               	movlw	low _stepsPerPollSpeed
 27070   00128E  25DB               	addwf	pollServos@io& (0+255),w,b
 27071   001290  6ED9               	movwf	fsr2l,c
 27072   001292  6ADA               	clrf	fsr2h,c
 27073   001294  0E01               	movlw	high _stepsPerPollSpeed
 27074   001296  22DA               	addwfc	fsr2h,f,c
 27075   001298  50DF               	movf	indf2,w,c
 27076   00129A  6FD0               	movwf	??_pollServos& (0+255),b
 27077   00129C  0E30               	movlw	low _currentPos
 27078   00129E  25DB               	addwf	pollServos@io& (0+255),w,b
 27079   0012A0  6ED9               	movwf	fsr2l,c
 27080   0012A2  6ADA               	clrf	fsr2h,c
 27081   0012A4  0E01               	movlw	high _currentPos
 27082   0012A6  22DA               	addwfc	fsr2h,f,c
 27083   0012A8  51D0               	movf	??_pollServos& (0+255),w,b
 27084   0012AA  26DF               	addwf	indf2,f,c
 27085   0012AC  D025               	goto	l22163
 27086   0012AE                     l22157:
 27087                           
 27088                           ; BSR set to: 1
 27089                           ;../servo.c: 465:                                 pollCount[io]--;
 27090   0012AE  0E64               	movlw	low _pollCount
 27091   0012B0  25DB               	addwf	pollServos@io& (0+255),w,b
 27092   0012B2  6ED9               	movwf	fsr2l,c
 27093   0012B4  6ADA               	clrf	fsr2h,c
 27094   0012B6  0E02               	movlw	high _pollCount
 27095   0012B8  22DA               	addwfc	fsr2h,f,c
 27096   0012BA  06DF               	decf	indf2,f,c
 27097                           
 27098                           ;../servo.c: 466:                                 if (pollCount[io] == 0) {
 27099   0012BC  0E64               	movlw	low _pollCount
 27100   0012BE  25DB               	addwf	pollServos@io& (0+255),w,b
 27101   0012C0  6ED9               	movwf	fsr2l,c
 27102   0012C2  6ADA               	clrf	fsr2h,c
 27103   0012C4  0E02               	movlw	high _pollCount
 27104   0012C6  22DA               	addwfc	fsr2h,f,c
 27105   0012C8  50DF               	movf	indf2,w,c
 27106   0012CA  A4D8               	btfss	status,2,c
 27107   0012CC  D015               	goto	l22163
 27108                           
 27109                           ; BSR set to: 1
 27110                           ;../servo.c: 467:                                     currentPos[io]++;
 27111   0012CE  0E30               	movlw	low _currentPos
 27112   0012D0  25DB               	addwf	pollServos@io& (0+255),w,b
 27113   0012D2  6ED9               	movwf	fsr2l,c
 27114   0012D4  6ADA               	clrf	fsr2h,c
 27115   0012D6  0E01               	movlw	high _currentPos
 27116   0012D8  22DA               	addwfc	fsr2h,f,c
 27117   0012DA  2ADF               	incf	indf2,f,c
 27118                           
 27119                           ; BSR set to: 1
 27120                           ;../servo.c: 468:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 27121   0012DC  0E74               	movlw	low _pollsPerStepSpeed
 27122   0012DE  25DB               	addwf	pollServos@io& (0+255),w,b
 27123   0012E0  6ED9               	movwf	fsr2l,c
 27124   0012E2  6ADA               	clrf	fsr2h,c
 27125   0012E4  0E02               	movlw	high _pollsPerStepSpeed
 27126   0012E6  22DA               	addwfc	fsr2h,f,c
 27127   0012E8  0E64               	movlw	low _pollCount
 27128   0012EA  25DB               	addwf	pollServos@io& (0+255),w,b
 27129   0012EC  6EE1               	movwf	fsr1l,c
 27130   0012EE  6AE2               	clrf	fsr1h,c
 27131   0012F0  0E02               	movlw	high _pollCount
 27132   0012F2  22E2               	addwfc	fsr1h,f,c
 27133   0012F4  CFDF FFE7          	movff	indf2,indf1
 27134   0012F8                     l22163:
 27135                           
 27136                           ; BSR set to: 1
 27137                           ;../servo.c: 471:                             if (currentPos[io] > targetPos[io]) {
 27138   0012F8  0E30               	movlw	low _currentPos
 27139   0012FA  25DB               	addwf	pollServos@io& (0+255),w,b
 27140   0012FC  6ED9               	movwf	fsr2l,c
 27141   0012FE  6ADA               	clrf	fsr2h,c
 27142   001300  0E01               	movlw	high _currentPos
 27143   001302  22DA               	addwfc	fsr2h,f,c
 27144   001304  51DB               	movf	pollServos@io& (0+255),w,b
 27145   001306  0F01               	addlw	low _targetPos
 27146   001308  6EE1               	movwf	fsr1l,c
 27147   00130A  6AE2               	clrf	fsr1h,c
 27148   00130C  50DE               	movf	postinc2,w,c
 27149   00130E  5CE6               	subwf	postinc1,w,c
 27150   001310  B0D8               	btfsc	status,0,c
 27151   001312  D098               	goto	l1104
 27152   001314                     u23560:
 27153                           
 27154                           ; BSR set to: 1
 27155                           ;../servo.c: 472:                                 currentPos[io] = targetPos[io];
 27156   001314  51DB               	movf	pollServos@io& (0+255),w,b
 27157   001316  0F01               	addlw	low _targetPos
 27158   001318  6ED9               	movwf	fsr2l,c
 27159   00131A  6ADA               	clrf	fsr2h,c
 27160   00131C  0E30               	movlw	low _currentPos
 27161   00131E  25DB               	addwf	pollServos@io& (0+255),w,b
 27162   001320  6EE1               	movwf	fsr1l,c
 27163   001322  6AE2               	clrf	fsr1h,c
 27164   001324  0E01               	movlw	high _currentPos
 27165   001326  22E2               	addwfc	fsr1h,f,c
 27166   001328  CFDF FFE7          	movff	indf2,indf1
 27167   00132C  D08B               	goto	l1104
 27168   00132E                     l22167:
 27169                           
 27170                           ; BSR set to: 1
 27171   00132E  0E30               	movlw	low _currentPos
 27172   001330  25DB               	addwf	pollServos@io& (0+255),w,b
 27173   001332  6ED9               	movwf	fsr2l,c
 27174   001334  6ADA               	clrf	fsr2h,c
 27175   001336  0E01               	movlw	high _currentPos
 27176   001338  22DA               	addwfc	fsr2h,f,c
 27177   00133A  51DB               	movf	pollServos@io& (0+255),w,b
 27178   00133C  0F01               	addlw	low _targetPos
 27179   00133E  6EE1               	movwf	fsr1l,c
 27180   001340  6AE2               	clrf	fsr1h,c
 27181   001342  50DE               	movf	postinc2,w,c
 27182   001344  5CE6               	subwf	postinc1,w,c
 27183   001346  B0D8               	btfsc	status,0,c
 27184   001348  D07D               	goto	l1104
 27185                           
 27186                           ; BSR set to: 1
 27187                           ;../servo.c: 476:                             if (stepsPerPollSpeed[io]) {
 27188   00134A  0E00               	movlw	low _stepsPerPollSpeed
 27189   00134C  25DB               	addwf	pollServos@io& (0+255),w,b
 27190   00134E  6ED9               	movwf	fsr2l,c
 27191   001350  6ADA               	clrf	fsr2h,c
 27192   001352  0E01               	movlw	high _stepsPerPollSpeed
 27193   001354  22DA               	addwfc	fsr2h,f,c
 27194   001356  50DF               	movf	indf2,w,c
 27195   001358  B4D8               	btfsc	status,2,c
 27196   00135A  D041               	goto	l22177
 27197                           
 27198                           ; BSR set to: 1
 27199                           ;../servo.c: 477:                                 if (currentPos[io] - stepsPerPollSpeed
      +                          [io] > currentPos[io]) {
 27200   00135C  0E30               	movlw	low _currentPos
 27201   00135E  25DB               	addwf	pollServos@io& (0+255),w,b
 27202   001360  6ED9               	movwf	fsr2l,c
 27203   001362  6ADA               	clrf	fsr2h,c
 27204   001364  0E01               	movlw	high _currentPos
 27205   001366  22DA               	addwfc	fsr2h,f,c
 27206   001368  50DF               	movf	indf2,w,c
 27207   00136A  6FD0               	movwf	??_pollServos& (0+255),b
 27208   00136C  6BD1               	clrf	(??_pollServos+1)& (0+255),b
 27209   00136E  0E00               	movlw	low _stepsPerPollSpeed
 27210   001370  25DB               	addwf	pollServos@io& (0+255),w,b
 27211   001372  6ED9               	movwf	fsr2l,c
 27212   001374  6ADA               	clrf	fsr2h,c
 27213   001376  0E01               	movlw	high _stepsPerPollSpeed
 27214   001378  22DA               	addwfc	fsr2h,f,c
 27215   00137A  50DF               	movf	indf2,w,c
 27216   00137C  6FD2               	movwf	(??_pollServos+2)& (0+255),b
 27217   00137E  51D2               	movf	(??_pollServos+2)& (0+255),w,b
 27218   001380  5FD0               	subwf	??_pollServos& (0+255),f,b
 27219   001382  0E00               	movlw	0
 27220   001384  5BD1               	subwfb	(??_pollServos+1)& (0+255),f,b
 27221   001386  0E30               	movlw	low _currentPos
 27222   001388  25DB               	addwf	pollServos@io& (0+255),w,b
 27223   00138A  6ED9               	movwf	fsr2l,c
 27224   00138C  6ADA               	clrf	fsr2h,c
 27225   00138E  0E01               	movlw	high _currentPos
 27226   001390  22DA               	addwfc	fsr2h,f,c
 27227   001392  50DF               	movf	indf2,w,c
 27228   001394  6FD3               	movwf	(??_pollServos+3)& (0+255),b
 27229   001396  6BD4               	clrf	(??_pollServos+4)& (0+255),b
 27230   001398  51D0               	movf	??_pollServos& (0+255),w,b
 27231   00139A  5DD3               	subwf	(??_pollServos+3)& (0+255),w,b
 27232   00139C  51D4               	movf	(??_pollServos+4)& (0+255),w,b
 27233   00139E  0A80               	xorlw	128
 27234   0013A0  6FD5               	movwf	(??_pollServos+5)& (0+255),b
 27235   0013A2  51D1               	movf	(??_pollServos+1)& (0+255),w,b
 27236   0013A4  0A80               	xorlw	128
 27237   0013A6  59D5               	subwfb	(??_pollServos+5)& (0+255),w,b
 27238   0013A8  B0D8               	btfsc	status,0,c
 27239   0013AA  D008               	goto	l22175
 27240                           
 27241                           ; BSR set to: 1
 27242                           ;../servo.c: 479:                                     currentPos[io] = 0;
 27243   0013AC  0E30               	movlw	low _currentPos
 27244   0013AE  25DB               	addwf	pollServos@io& (0+255),w,b
 27245   0013B0  6ED9               	movwf	fsr2l,c
 27246   0013B2  6ADA               	clrf	fsr2h,c
 27247   0013B4  0E01               	movlw	high _currentPos
 27248   0013B6  22DA               	addwfc	fsr2h,f,c
 27249   0013B8  6ADF               	clrf	indf2,c
 27250                           
 27251                           ;../servo.c: 480:                                 } else {
 27252   0013BA  D036               	goto	l22183
 27253   0013BC                     l22175:
 27254                           
 27255                           ; BSR set to: 1
 27256                           ;../servo.c: 481:                                     currentPos[io] -= stepsPerPollSpee
      +                          d[io];
 27257   0013BC  0E00               	movlw	low _stepsPerPollSpeed
 27258   0013BE  25DB               	addwf	pollServos@io& (0+255),w,b
 27259   0013C0  6ED9               	movwf	fsr2l,c
 27260   0013C2  6ADA               	clrf	fsr2h,c
 27261   0013C4  0E01               	movlw	high _stepsPerPollSpeed
 27262   0013C6  22DA               	addwfc	fsr2h,f,c
 27263   0013C8  50DF               	movf	indf2,w,c
 27264   0013CA  6FD0               	movwf	??_pollServos& (0+255),b
 27265   0013CC  0E30               	movlw	low _currentPos
 27266   0013CE  25DB               	addwf	pollServos@io& (0+255),w,b
 27267   0013D0  6ED9               	movwf	fsr2l,c
 27268   0013D2  6ADA               	clrf	fsr2h,c
 27269   0013D4  0E01               	movlw	high _currentPos
 27270   0013D6  22DA               	addwfc	fsr2h,f,c
 27271   0013D8  51D0               	movf	??_pollServos& (0+255),w,b
 27272   0013DA  5EDF               	subwf	indf2,f,c
 27273   0013DC  D025               	goto	l22183
 27274   0013DE                     l22177:
 27275                           
 27276                           ; BSR set to: 1
 27277                           ;../servo.c: 484:                                 pollCount[io]--;
 27278   0013DE  0E64               	movlw	low _pollCount
 27279   0013E0  25DB               	addwf	pollServos@io& (0+255),w,b
 27280   0013E2  6ED9               	movwf	fsr2l,c
 27281   0013E4  6ADA               	clrf	fsr2h,c
 27282   0013E6  0E02               	movlw	high _pollCount
 27283   0013E8  22DA               	addwfc	fsr2h,f,c
 27284   0013EA  06DF               	decf	indf2,f,c
 27285                           
 27286                           ;../servo.c: 485:                                 if (pollCount[io] == 0) {
 27287   0013EC  0E64               	movlw	low _pollCount
 27288   0013EE  25DB               	addwf	pollServos@io& (0+255),w,b
 27289   0013F0  6ED9               	movwf	fsr2l,c
 27290   0013F2  6ADA               	clrf	fsr2h,c
 27291   0013F4  0E02               	movlw	high _pollCount
 27292   0013F6  22DA               	addwfc	fsr2h,f,c
 27293   0013F8  50DF               	movf	indf2,w,c
 27294   0013FA  A4D8               	btfss	status,2,c
 27295   0013FC  D015               	goto	l22183
 27296                           
 27297                           ; BSR set to: 1
 27298                           ;../servo.c: 486:                                     currentPos[io]--;
 27299   0013FE  0E30               	movlw	low _currentPos
 27300   001400  25DB               	addwf	pollServos@io& (0+255),w,b
 27301   001402  6ED9               	movwf	fsr2l,c
 27302   001404  6ADA               	clrf	fsr2h,c
 27303   001406  0E01               	movlw	high _currentPos
 27304   001408  22DA               	addwfc	fsr2h,f,c
 27305   00140A  06DF               	decf	indf2,f,c
 27306                           
 27307                           ; BSR set to: 1
 27308                           ;../servo.c: 487:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 27309   00140C  0E74               	movlw	low _pollsPerStepSpeed
 27310   00140E  25DB               	addwf	pollServos@io& (0+255),w,b
 27311   001410  6ED9               	movwf	fsr2l,c
 27312   001412  6ADA               	clrf	fsr2h,c
 27313   001414  0E02               	movlw	high _pollsPerStepSpeed
 27314   001416  22DA               	addwfc	fsr2h,f,c
 27315   001418  0E64               	movlw	low _pollCount
 27316   00141A  25DB               	addwf	pollServos@io& (0+255),w,b
 27317   00141C  6EE1               	movwf	fsr1l,c
 27318   00141E  6AE2               	clrf	fsr1h,c
 27319   001420  0E02               	movlw	high _pollCount
 27320   001422  22E2               	addwfc	fsr1h,f,c
 27321   001424  CFDF FFE7          	movff	indf2,indf1
 27322   001428                     l22183:
 27323                           
 27324                           ; BSR set to: 1
 27325                           ;../servo.c: 490:                             if (currentPos[io] < targetPos[io]) {
 27326   001428  51DB               	movf	pollServos@io& (0+255),w,b
 27327   00142A  0F01               	addlw	low _targetPos
 27328   00142C  6ED9               	movwf	fsr2l,c
 27329   00142E  6ADA               	clrf	fsr2h,c
 27330   001430  0E30               	movlw	low _currentPos
 27331   001432  25DB               	addwf	pollServos@io& (0+255),w,b
 27332   001434  6EE1               	movwf	fsr1l,c
 27333   001436  6AE2               	clrf	fsr1h,c
 27334   001438  0E01               	movlw	high _currentPos
 27335   00143A  22E2               	addwfc	fsr1h,f,c
 27336   00143C  50DE               	movf	postinc2,w,c
 27337   00143E  5CE6               	subwf	postinc1,w,c
 27338   001440  A0D8               	btfss	status,0,c
 27339   001442  D768               	goto	u23560
 27340   001444                     l1104:
 27341                           
 27342                           ; BSR set to: 1
 27343                           ;../servo.c: 494:                         if (targetPos[io] == currentPos[io]) {
 27344   001444  0E30               	movlw	low _currentPos
 27345   001446  25DB               	addwf	pollServos@io& (0+255),w,b
 27346   001448  6ED9               	movwf	fsr2l,c
 27347   00144A  6ADA               	clrf	fsr2h,c
 27348   00144C  0E01               	movlw	high _currentPos
 27349   00144E  22DA               	addwfc	fsr2h,f,c
 27350   001450  51DB               	movf	pollServos@io& (0+255),w,b
 27351   001452  0F01               	addlw	low _targetPos
 27352   001454  6EE1               	movwf	fsr1l,c
 27353   001456  6AE2               	clrf	fsr1h,c
 27354   001458  50DE               	movf	postinc2,w,c
 27355   00145A  18E6               	xorwf	postinc1,w,c
 27356   00145C  A4D8               	btfss	status,2,c
 27357   00145E  D198               	goto	l22231
 27358                           
 27359                           ; BSR set to: 1
 27360                           ;../servo.c: 495:                             servoState[io] = SS_STOPPED;
 27361   001460  0E10               	movlw	low _servoState
 27362   001462  25DB               	addwf	pollServos@io& (0+255),w,b
 27363   001464  6ED9               	movwf	fsr2l,c
 27364   001466  6ADA               	clrf	fsr2h,c
 27365   001468  0E01               	movlw	high _servoState
 27366   00146A  22DA               	addwfc	fsr2h,f,c
 27367   00146C  0E01               	movlw	1
 27368   00146E  6EDF               	movwf	indf2,c
 27369                           
 27370                           ; BSR set to: 1
 27371                           ;../servo.c: 496:                             ticksWhenStopped[io].val = tickGet();
 27372   001470  EC45  F05C         	call	_tickGet	;wreg free
 27373   001474  0101               	movlb	1	; () banked
 27374   001476  51DB               	movf	pollServos@io& (0+255),w,b
 27375   001478  0D04               	mullw	4
 27376   00147A  0E88               	movlw	low _ticksWhenStopped
 27377   00147C  24F3               	addwf	243,w,c
 27378   00147E  6ED9               	movwf	fsr2l,c
 27379   001480  0E03               	movlw	high _ticksWhenStopped
 27380   001482  20F4               	addwfc	prodh,w,c
 27381   001484  6EDA               	movwf	fsr2h,c
 27382   001486  0100               	movlb	0	; () banked
 27383   001488  C08D  FFDE         	movff	?_tickGet,postinc2
 27384   00148C  C08E  FFDE         	movff	?_tickGet+1,postinc2
 27385   001490  C08F  FFDE         	movff	?_tickGet+2,postinc2
 27386   001494  C090  FFDE         	movff	?_tickGet+3,postinc2
 27387                           
 27388                           ; BSR set to: 0
 27389                           ;../servo.c: 498:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           3))) {
 27390   001498  0101               	movlb	1	; () banked
 27391   00149A  51DB               	movf	pollServos@io& (0+255),w,b
 27392   00149C  0D07               	mullw	7
 27393   00149E  50F3               	movf	243,w,c
 27394   0014A0  0F13               	addlw	19
 27395   0014A2  ECD2  F05F         	call	_getNV
 27396   0014A6  0E30               	movlw	low _currentPos
 27397   0014A8  0101               	movlb	1	; () banked
 27398   0014AA  25DB               	addwf	pollServos@io& (0+255),w,b
 27399   0014AC  6ED9               	movwf	fsr2l,c
 27400   0014AE  6ADA               	clrf	fsr2h,c
 27401   0014B0  0E01               	movlw	high _currentPos
 27402   0014B2  22DA               	addwfc	fsr2h,f,c
 27403   0014B4  50DF               	movf	indf2,w,c
 27404   0014B6  6FD0               	movwf	??_pollServos& (0+255),b
 27405   0014B8  6BD1               	clrf	(??_pollServos+1)& (0+255),b
 27406   0014BA  0100               	movlb	0	; () banked
 27407   0014BC  518D               	movf	?_getNV& (0+255),w,b
 27408   0014BE  0101               	movlb	1	; () banked
 27409   0014C0  19D0               	xorwf	??_pollServos& (0+255),w,b
 27410   0014C2  E11A               	bnz	l22195
 27411   0014C4  0100               	movlb	0	; () banked
 27412   0014C6  518E               	movf	(?_getNV+1)& (0+255),w,b
 27413   0014C8  0101               	movlb	1	; () banked
 27414   0014CA  19D1               	xorwf	(??_pollServos+1)& (0+255),w,b
 27415   0014CC  A4D8               	btfss	status,2,c
 27416   0014CE  D014               	goto	l22195
 27417                           
 27418                           ; BSR set to: 1
 27419                           ;../servo.c: 499:                                 sendProducedEvent(((8 + 4*(io))+0), (g
      +                          etNV((16 + 7*(io) + 1)) & 0x40)?EVENT_OFF:EVENT_ON);
 27420   0014D0  51DB               	movf	pollServos@io& (0+255),w,b
 27421   0014D2  0D07               	mullw	7
 27422   0014D4  50F3               	movf	243,w,c
 27423   0014D6  0F11               	addlw	17
 27424   0014D8  ECD2  F05F         	call	_getNV
 27425   0014DC  0100               	movlb	0	; () banked
 27426   0014DE  BD8D               	btfsc	?_getNV& (0+255),6,b
 27427   0014E0  D002               	goto	u23640
 27428   0014E2  0E01               	movlw	1
 27429   0014E4  D001               	goto	u23650
 27430   0014E6                     u23640:
 27431   0014E6  0E00               	movlw	0
 27432   0014E8                     u23650:
 27433   0014E8  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 27434   0014EA  0101               	movlb	1	; () banked
 27435   0014EC  51DB               	movf	pollServos@io& (0+255),w,b
 27436   0014EE  0D04               	mullw	4
 27437   0014F0  50F3               	movf	243,w,c
 27438   0014F2  0F08               	addlw	8
 27439   0014F4  EC64  F04C         	call	_sendProducedEvent
 27440   0014F8                     l22195:
 27441                           
 27442                           ;../servo.c: 501:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           4))) {
 27443   0014F8  0101               	movlb	1	; () banked
 27444   0014FA  51DB               	movf	pollServos@io& (0+255),w,b
 27445   0014FC  0D07               	mullw	7
 27446   0014FE  50F3               	movf	243,w,c
 27447   001500  0F14               	addlw	20
 27448   001502  ECD2  F05F         	call	_getNV
 27449   001506  0E30               	movlw	low _currentPos
 27450   001508  0101               	movlb	1	; () banked
 27451   00150A  25DB               	addwf	pollServos@io& (0+255),w,b
 27452   00150C  6ED9               	movwf	fsr2l,c
 27453   00150E  6ADA               	clrf	fsr2h,c
 27454   001510  0E01               	movlw	high _currentPos
 27455   001512  22DA               	addwfc	fsr2h,f,c
 27456   001514  50DF               	movf	indf2,w,c
 27457   001516  6FD0               	movwf	??_pollServos& (0+255),b
 27458   001518  6BD1               	clrf	(??_pollServos+1)& (0+255),b
 27459   00151A  0100               	movlb	0	; () banked
 27460   00151C  518D               	movf	?_getNV& (0+255),w,b
 27461   00151E  0101               	movlb	1	; () banked
 27462   001520  19D0               	xorwf	??_pollServos& (0+255),w,b
 27463   001522  E11A               	bnz	l22199
 27464   001524  0100               	movlb	0	; () banked
 27465   001526  518E               	movf	(?_getNV+1)& (0+255),w,b
 27466   001528  0101               	movlb	1	; () banked
 27467   00152A  19D1               	xorwf	(??_pollServos+1)& (0+255),w,b
 27468   00152C  A4D8               	btfss	status,2,c
 27469   00152E  D014               	goto	l22199
 27470                           
 27471                           ; BSR set to: 1
 27472                           ;../servo.c: 502:                                 sendProducedEvent(((8 + 4*(io))+1), (g
      +                          etNV((16 + 7*(io) + 1)) & 0x40)?EVENT_OFF:EVENT_ON);
 27473   001530  51DB               	movf	pollServos@io& (0+255),w,b
 27474   001532  0D07               	mullw	7
 27475   001534  50F3               	movf	243,w,c
 27476   001536  0F11               	addlw	17
 27477   001538  ECD2  F05F         	call	_getNV
 27478   00153C  0100               	movlb	0	; () banked
 27479   00153E  BD8D               	btfsc	?_getNV& (0+255),6,b
 27480   001540  D002               	goto	u23670
 27481   001542  0E01               	movlw	1
 27482   001544  D001               	goto	u23680
 27483   001546                     u23670:
 27484   001546  0E00               	movlw	0
 27485   001548                     u23680:
 27486   001548  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 27487   00154A  0101               	movlb	1	; () banked
 27488   00154C  51DB               	movf	pollServos@io& (0+255),w,b
 27489   00154E  0D04               	mullw	4
 27490   001550  50F3               	movf	243,w,c
 27491   001552  0F09               	addlw	9
 27492   001554  EC64  F04C         	call	_sendProducedEvent
 27493   001558                     l22199:
 27494                           
 27495                           ;../servo.c: 504:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           5))) {
 27496   001558  0101               	movlb	1	; () banked
 27497   00155A  51DB               	movf	pollServos@io& (0+255),w,b
 27498   00155C  0D07               	mullw	7
 27499   00155E  50F3               	movf	243,w,c
 27500   001560  0F15               	addlw	21
 27501   001562  ECD2  F05F         	call	_getNV
 27502   001566  0E30               	movlw	low _currentPos
 27503   001568  0101               	movlb	1	; () banked
 27504   00156A  25DB               	addwf	pollServos@io& (0+255),w,b
 27505   00156C  6ED9               	movwf	fsr2l,c
 27506   00156E  6ADA               	clrf	fsr2h,c
 27507   001570  0E01               	movlw	high _currentPos
 27508   001572  22DA               	addwfc	fsr2h,f,c
 27509   001574  50DF               	movf	indf2,w,c
 27510   001576  6FD0               	movwf	??_pollServos& (0+255),b
 27511   001578  6BD1               	clrf	(??_pollServos+1)& (0+255),b
 27512   00157A  0100               	movlb	0	; () banked
 27513   00157C  518D               	movf	?_getNV& (0+255),w,b
 27514   00157E  0101               	movlb	1	; () banked
 27515   001580  19D0               	xorwf	??_pollServos& (0+255),w,b
 27516   001582  E11A               	bnz	l22203
 27517   001584  0100               	movlb	0	; () banked
 27518   001586  518E               	movf	(?_getNV+1)& (0+255),w,b
 27519   001588  0101               	movlb	1	; () banked
 27520   00158A  19D1               	xorwf	(??_pollServos+1)& (0+255),w,b
 27521   00158C  A4D8               	btfss	status,2,c
 27522   00158E  D014               	goto	l22203
 27523                           
 27524                           ; BSR set to: 1
 27525                           ;../servo.c: 505:                                 sendProducedEvent(((8 + 4*(io))+2), (g
      +                          etNV((16 + 7*(io) + 1)) & 0x40)?EVENT_OFF:EVENT_ON);
 27526   001590  51DB               	movf	pollServos@io& (0+255),w,b
 27527   001592  0D07               	mullw	7
 27528   001594  50F3               	movf	243,w,c
 27529   001596  0F11               	addlw	17
 27530   001598  ECD2  F05F         	call	_getNV
 27531   00159C  0100               	movlb	0	; () banked
 27532   00159E  BD8D               	btfsc	?_getNV& (0+255),6,b
 27533   0015A0  D002               	goto	u23700
 27534   0015A2  0E01               	movlw	1
 27535   0015A4  D001               	goto	u23710
 27536   0015A6                     u23700:
 27537   0015A6  0E00               	movlw	0
 27538   0015A8                     u23710:
 27539   0015A8  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 27540   0015AA  0101               	movlb	1	; () banked
 27541   0015AC  51DB               	movf	pollServos@io& (0+255),w,b
 27542   0015AE  0D04               	mullw	4
 27543   0015B0  50F3               	movf	243,w,c
 27544   0015B2  0F0A               	addlw	10
 27545   0015B4  EC64  F04C         	call	_sendProducedEvent
 27546   0015B8                     l22203:
 27547                           
 27548                           ;../servo.c: 507:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           6))) {
 27549   0015B8  0101               	movlb	1	; () banked
 27550   0015BA  51DB               	movf	pollServos@io& (0+255),w,b
 27551   0015BC  0D07               	mullw	7
 27552   0015BE  50F3               	movf	243,w,c
 27553   0015C0  0F16               	addlw	22
 27554   0015C2  ECD2  F05F         	call	_getNV
 27555   0015C6  0E30               	movlw	low _currentPos
 27556   0015C8  0101               	movlb	1	; () banked
 27557   0015CA  25DB               	addwf	pollServos@io& (0+255),w,b
 27558   0015CC  6ED9               	movwf	fsr2l,c
 27559   0015CE  6ADA               	clrf	fsr2h,c
 27560   0015D0  0E01               	movlw	high _currentPos
 27561   0015D2  22DA               	addwfc	fsr2h,f,c
 27562   0015D4  50DF               	movf	indf2,w,c
 27563   0015D6  6FD0               	movwf	??_pollServos& (0+255),b
 27564   0015D8  6BD1               	clrf	(??_pollServos+1)& (0+255),b
 27565   0015DA  0100               	movlb	0	; () banked
 27566   0015DC  518D               	movf	?_getNV& (0+255),w,b
 27567   0015DE  0101               	movlb	1	; () banked
 27568   0015E0  19D0               	xorwf	??_pollServos& (0+255),w,b
 27569   0015E2  E11A               	bnz	l22207
 27570   0015E4  0100               	movlb	0	; () banked
 27571   0015E6  518E               	movf	(?_getNV+1)& (0+255),w,b
 27572   0015E8  0101               	movlb	1	; () banked
 27573   0015EA  19D1               	xorwf	(??_pollServos+1)& (0+255),w,b
 27574   0015EC  A4D8               	btfss	status,2,c
 27575   0015EE  D014               	goto	l22207
 27576                           
 27577                           ; BSR set to: 1
 27578                           ;../servo.c: 508:                                 sendProducedEvent(((8 + 4*(io))+3), (g
      +                          etNV((16 + 7*(io) + 1)) & 0x40)?EVENT_OFF:EVENT_ON);
 27579   0015F0  51DB               	movf	pollServos@io& (0+255),w,b
 27580   0015F2  0D07               	mullw	7
 27581   0015F4  50F3               	movf	243,w,c
 27582   0015F6  0F11               	addlw	17
 27583   0015F8  ECD2  F05F         	call	_getNV
 27584   0015FC  0100               	movlb	0	; () banked
 27585   0015FE  BD8D               	btfsc	?_getNV& (0+255),6,b
 27586   001600  D002               	goto	u23730
 27587   001602  0E01               	movlw	1
 27588   001604  D001               	goto	u23740
 27589   001606                     u23730:
 27590   001606  0E00               	movlw	0
 27591   001608                     u23740:
 27592   001608  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 27593   00160A  0101               	movlb	1	; () banked
 27594   00160C  51DB               	movf	pollServos@io& (0+255),w,b
 27595   00160E  0D04               	mullw	4
 27596   001610  50F3               	movf	243,w,c
 27597   001612  0F0B               	addlw	11
 27598   001614  EC64  F04C         	call	_sendProducedEvent
 27599   001618                     l22207:
 27600                           
 27601                           ;../servo.c: 510:                             writeNVM(EEPROM_NVM_TYPE, ((eeprom_address
      +                          _t)((0x3FF -8))-25)+io, currentPos[io]);
 27602   001618  0EDE               	movlw	222
 27603   00161A  0101               	movlb	1	; () banked
 27604   00161C  25DB               	addwf	pollServos@io& (0+255),w,b
 27605   00161E  6FD0               	movwf	??_pollServos& (0+255),b
 27606   001620  6BD1               	clrf	(??_pollServos+1)& (0+255),b
 27607   001622  0E03               	movlw	3
 27608   001624  23D1               	addwfc	(??_pollServos+1)& (0+255),f,b
 27609   001626  C1D0  F0A4         	movff	??_pollServos,writeNVM@index
 27610   00162A  C1D1  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 27611   00162E  0100               	movlb	0	; () banked
 27612   001630  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 27613   001632  0E30               	movlw	low _currentPos
 27614   001634  0101               	movlb	1	; () banked
 27615   001636  25DB               	addwf	pollServos@io& (0+255),w,b
 27616   001638  6ED9               	movwf	fsr2l,c
 27617   00163A  6ADA               	clrf	fsr2h,c
 27618   00163C  0E01               	movlw	high _currentPos
 27619   00163E  22DA               	addwfc	fsr2h,f,c
 27620   001640  50DF               	movf	indf2,w,c
 27621   001642  0100               	movlb	0	; () banked
 27622   001644  6FA7               	movwf	writeNVM@value& (0+255),b
 27623   001646  0E00               	movlw	0
 27624   001648  ECC1  F05D         	call	_writeNVM
 27625   00164C  D0A1               	goto	l22231
 27626   00164E                     l22211:
 27627                           
 27628                           ; BSR set to: 0
 27629   00164E  0E10               	movlw	low _servoState
 27630   001650  0101               	movlb	1	; () banked
 27631   001652  25DB               	addwf	pollServos@io& (0+255),w,b
 27632   001654  6ED9               	movwf	fsr2l,c
 27633   001656  6ADA               	clrf	fsr2h,c
 27634   001658  0E01               	movlw	high _servoState
 27635   00165A  22DA               	addwfc	fsr2h,f,c
 27636   00165C  50DF               	movf	indf2,w,c
 27637   00165E  6FD0               	movwf	??_pollServos& (0+255),b
 27638   001660  6BD1               	clrf	(??_pollServos+1)& (0+255),b
 27639                           
 27640                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27641                           ; Switch size 1, requested type "simple"
 27642                           ; Number of cases is 1, Range of values is 0 to 0
 27643                           ; switch strategies available:
 27644                           ; Name         Instructions Cycles
 27645                           ; simple_byte            4     3 (average)
 27646                           ;	Chosen strategy is simple_byte
 27647   001662  51D1               	movf	(??_pollServos+1)& (0+255),w,b
 27648   001664  0A00               	xorlw	0	; case 0
 27649   001666  A4D8               	btfss	status,2,c
 27650   001668  D093               	goto	l22231
 27651                           
 27652                           ; BSR set to: 1
 27653                           ; Switch size 1, requested type "simple"
 27654                           ; Number of cases is 4, Range of values is 0 to 3
 27655                           ; switch strategies available:
 27656                           ; Name         Instructions Cycles
 27657                           ; simple_byte           13     7 (average)
 27658                           ;	Chosen strategy is simple_byte
 27659   00166A  51D0               	movf	??_pollServos& (0+255),w,b
 27660   00166C  0A00               	xorlw	0	; case 0
 27661   00166E  B4D8               	btfsc	status,2,c
 27662   001670  D08F               	goto	l22231
 27663   001672  0A01               	xorlw	1	; case 1
 27664   001674  B4D8               	btfsc	status,2,c
 27665   001676  D08C               	goto	l22231
 27666   001678  0A03               	xorlw	3	; case 2
 27667   00167A  B4D8               	btfsc	status,2,c
 27668   00167C  D5BF               	goto	l22147
 27669   00167E  0A01               	xorlw	1	; case 3
 27670   001680  B4D8               	btfsc	status,2,c
 27671   001682  D4F4               	goto	l22129
 27672   001684  D085               	goto	l22231
 27673   001686                     l22215:
 27674                           
 27675                           ; BSR set to: 1
 27676   001686  51DB               	movf	pollServos@io& (0+255),w,b
 27677   001688  0D07               	mullw	7
 27678   00168A  50F3               	movf	243,w,c
 27679   00168C  0F10               	addlw	16
 27680   00168E  ECD2  F05F         	call	_getNV
 27681                           
 27682                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27683                           ; Switch size 1, requested type "simple"
 27684                           ; Number of cases is 1, Range of values is 0 to 0
 27685                           ; switch strategies available:
 27686                           ; Name         Instructions Cycles
 27687                           ; simple_byte            4     3 (average)
 27688                           ;	Chosen strategy is simple_byte
 27689   001692  0100               	movlb	0	; () banked
 27690   001694  518E               	movf	(?_getNV+1)& (0+255),w,b
 27691   001696  0A00               	xorlw	0	; case 0
 27692   001698  A4D8               	btfss	status,2,c
 27693   00169A  D07A               	goto	l22231
 27694                           
 27695                           ; BSR set to: 0
 27696                           ; Switch size 1, requested type "simple"
 27697                           ; Number of cases is 3, Range of values is 2 to 4
 27698                           ; switch strategies available:
 27699                           ; Name         Instructions Cycles
 27700                           ; simple_byte           10     6 (average)
 27701                           ;	Chosen strategy is simple_byte
 27702   00169C  518D               	movf	?_getNV& (0+255),w,b
 27703   00169E  0A02               	xorlw	2	; case 2
 27704   0016A0  B4D8               	btfsc	status,2,c
 27705   0016A2  EF2D  F004         	goto	l21983
 27706   0016A6  0A01               	xorlw	1	; case 3
 27707   0016A8  B4D8               	btfsc	status,2,c
 27708   0016AA  D4C4               	goto	l22127
 27709   0016AC  0A07               	xorlw	7	; case 4
 27710   0016AE  B4D8               	btfsc	status,2,c
 27711   0016B0  D7CE               	goto	l22211
 27712                           
 27713                           ; BSR set to: 1
 27714                           ;../servo.c: 519:         switch (getNV((16 + 7*(io) + 0))) {
 27715   0016B2  D06E               	goto	l22231
 27716   0016B4                     l22217:
 27717                           
 27718                           ; BSR set to: 1
 27719                           ;../servo.c: 530:                         if (getNV((16 + 7*(io) + 1)) & 0x02) {
 27720   0016B4  51DB               	movf	pollServos@io& (0+255),w,b
 27721   0016B6  0D07               	mullw	7
 27722   0016B8  50F3               	movf	243,w,c
 27723   0016BA  0F11               	addlw	17
 27724   0016BC  ECD2  F05F         	call	_getNV
 27725   0016C0  0100               	movlb	0	; () banked
 27726   0016C2  A38D               	btfss	?_getNV& (0+255),1,b
 27727   0016C4  D07B               	goto	l22233
 27728                           
 27729                           ; BSR set to: 0
 27730                           ;../servo.c: 531:                             if ((tickGet() - ticksWhenStopped[io].val)
      +                           > 62500) {
 27731   0016C6  0101               	movlb	1	; () banked
 27732   0016C8  51DB               	movf	pollServos@io& (0+255),w,b
 27733   0016CA  0D04               	mullw	4
 27734   0016CC  0E88               	movlw	low _ticksWhenStopped
 27735   0016CE  24F3               	addwf	243,w,c
 27736   0016D0  6ED9               	movwf	fsr2l,c
 27737   0016D2  0E03               	movlw	high _ticksWhenStopped
 27738   0016D4  20F4               	addwfc	prodh,w,c
 27739   0016D6  6EDA               	movwf	fsr2h,c
 27740   0016D8  CFDE F1D0          	movff	postinc2,??_pollServos
 27741   0016DC  CFDE F1D1          	movff	postinc2,??_pollServos+1
 27742   0016E0  CFDE F1D2          	movff	postinc2,??_pollServos+2
 27743   0016E4  CFDE F1D3          	movff	postinc2,??_pollServos+3
 27744   0016E8  EC45  F05C         	call	_tickGet	;wreg free
 27745   0016EC  0101               	movlb	1	; () banked
 27746   0016EE  51D0               	movf	??_pollServos& (0+255),w,b
 27747   0016F0  0100               	movlb	0	; () banked
 27748   0016F2  5D8D               	subwf	?_tickGet& (0+255),w,b
 27749   0016F4  0101               	movlb	1	; () banked
 27750   0016F6  6FD4               	movwf	(??_pollServos+4)& (0+255),b
 27751   0016F8  51D1               	movf	(??_pollServos+1)& (0+255),w,b
 27752   0016FA  0100               	movlb	0	; () banked
 27753   0016FC  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 27754   0016FE  0101               	movlb	1	; () banked
 27755   001700  6FD5               	movwf	(??_pollServos+5)& (0+255),b
 27756   001702  51D2               	movf	(??_pollServos+2)& (0+255),w,b
 27757   001704  0100               	movlb	0	; () banked
 27758   001706  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 27759   001708  0101               	movlb	1	; () banked
 27760   00170A  6FD6               	movwf	(??_pollServos+6)& (0+255),b
 27761   00170C  51D3               	movf	(??_pollServos+3)& (0+255),w,b
 27762   00170E  0100               	movlb	0	; () banked
 27763   001710  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 27764   001712  0101               	movlb	1	; () banked
 27765   001714  6FD7               	movwf	(??_pollServos+7)& (0+255),b
 27766   001716  51D7               	movf	(??_pollServos+7)& (0+255),w,b
 27767   001718  11D6               	iorwf	(??_pollServos+6)& (0+255),w,b
 27768   00171A  E106               	bnz	u23760
 27769   00171C  0E25               	movlw	37
 27770   00171E  5DD4               	subwf	(??_pollServos+4)& (0+255),w,b
 27771   001720  0EF4               	movlw	244
 27772   001722  59D5               	subwfb	(??_pollServos+5)& (0+255),w,b
 27773   001724  A0D8               	btfss	status,0,c
 27774   001726  D04A               	goto	l22233
 27775   001728                     u23760:
 27776                           
 27777                           ; BSR set to: 1
 27778                           ;../servo.c: 532:                                 servoState[io] = SS_OFF;
 27779   001728  0E10               	movlw	low _servoState
 27780   00172A  25DB               	addwf	pollServos@io& (0+255),w,b
 27781   00172C  6ED9               	movwf	fsr2l,c
 27782   00172E  6ADA               	clrf	fsr2h,c
 27783   001730  0E01               	movlw	high _servoState
 27784   001732  22DA               	addwfc	fsr2h,f,c
 27785   001734  6ADF               	clrf	indf2,c
 27786   001736  D042               	goto	l22233
 27787   001738                     l22223:
 27788                           
 27789                           ; BSR set to: 1
 27790                           ;../servo.c: 539:                         setOutputPin(io, !(getNV((16 + 7*(io) + 1)) & 
      +                          0x20));
 27791   001738  51DB               	movf	pollServos@io& (0+255),w,b
 27792   00173A  0D07               	mullw	7
 27793   00173C  50F3               	movf	243,w,c
 27794   00173E  0F11               	addlw	17
 27795   001740  ECD2  F05F         	call	_getNV
 27796   001744  0100               	movlb	0	; () banked
 27797   001746  BB8D               	btfsc	?_getNV& (0+255),5,b
 27798   001748  D002               	goto	u23770
 27799   00174A  0E01               	movlw	1
 27800   00174C  D001               	goto	u23780
 27801   00174E                     u23770:
 27802   00174E  0E00               	movlw	0
 27803   001750                     u23780:
 27804   001750  6F91               	movwf	setOutputPin@state& (0+255),b
 27805   001752  0101               	movlb	1	; () banked
 27806   001754  51DB               	movf	pollServos@io& (0+255),w,b
 27807   001756  ECBC  F037         	call	_setOutputPin
 27808                           
 27809                           ;../servo.c: 541:                         break;
 27810   00175A  D030               	goto	l22233
 27811   00175C                     l22227:
 27812                           
 27813                           ; BSR set to: 0
 27814   00175C  0E10               	movlw	low _servoState
 27815   00175E  0101               	movlb	1	; () banked
 27816   001760  25DB               	addwf	pollServos@io& (0+255),w,b
 27817   001762  6ED9               	movwf	fsr2l,c
 27818   001764  6ADA               	clrf	fsr2h,c
 27819   001766  0E01               	movlw	high _servoState
 27820   001768  22DA               	addwfc	fsr2h,f,c
 27821   00176A  50DF               	movf	indf2,w,c
 27822   00176C  6FD0               	movwf	??_pollServos& (0+255),b
 27823   00176E  6BD1               	clrf	(??_pollServos+1)& (0+255),b
 27824                           
 27825                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27826                           ; Switch size 1, requested type "simple"
 27827                           ; Number of cases is 1, Range of values is 0 to 0
 27828                           ; switch strategies available:
 27829                           ; Name         Instructions Cycles
 27830                           ; simple_byte            4     3 (average)
 27831                           ;	Chosen strategy is simple_byte
 27832   001770  51D1               	movf	(??_pollServos+1)& (0+255),w,b
 27833   001772  0A00               	xorlw	0	; case 0
 27834   001774  A4D8               	btfss	status,2,c
 27835   001776  D022               	goto	l22233
 27836                           
 27837                           ; BSR set to: 1
 27838                           ; Switch size 1, requested type "simple"
 27839                           ; Number of cases is 4, Range of values is 0 to 3
 27840                           ; switch strategies available:
 27841                           ; Name         Instructions Cycles
 27842                           ; simple_byte           13     7 (average)
 27843                           ;	Chosen strategy is simple_byte
 27844   001778  51D0               	movf	??_pollServos& (0+255),w,b
 27845   00177A  0A00               	xorlw	0	; case 0
 27846   00177C  B4D8               	btfsc	status,2,c
 27847   00177E  D7DC               	goto	l22223
 27848   001780  0A01               	xorlw	1	; case 1
 27849   001782  B4D8               	btfsc	status,2,c
 27850   001784  D797               	goto	l22217
 27851   001786  0A03               	xorlw	3	; case 2
 27852   001788  B4D8               	btfsc	status,2,c
 27853   00178A  D018               	goto	l22233
 27854   00178C  0A01               	xorlw	1	; case 3
 27855                           
 27856                           ; BSR set to: 1
 27857                           ;../servo.c: 543:                 break;
 27858   00178E  D016               	goto	l22233
 27859   001790                     l22231:
 27860   001790  0101               	movlb	1	; () banked
 27861   001792  51DB               	movf	pollServos@io& (0+255),w,b
 27862   001794  0D07               	mullw	7
 27863   001796  50F3               	movf	243,w,c
 27864   001798  0F10               	addlw	16
 27865   00179A  ECD2  F05F         	call	_getNV
 27866                           
 27867                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27868                           ; Switch size 1, requested type "simple"
 27869                           ; Number of cases is 1, Range of values is 0 to 0
 27870                           ; switch strategies available:
 27871                           ; Name         Instructions Cycles
 27872                           ; simple_byte            4     3 (average)
 27873                           ;	Chosen strategy is simple_byte
 27874   00179E  0100               	movlb	0	; () banked
 27875   0017A0  518E               	movf	(?_getNV+1)& (0+255),w,b
 27876   0017A2  0A00               	xorlw	0	; case 0
 27877   0017A4  A4D8               	btfss	status,2,c
 27878   0017A6  D00A               	goto	l22233
 27879                           
 27880                           ; BSR set to: 0
 27881                           ; Switch size 1, requested type "simple"
 27882                           ; Number of cases is 3, Range of values is 2 to 4
 27883                           ; switch strategies available:
 27884                           ; Name         Instructions Cycles
 27885                           ; simple_byte           10     6 (average)
 27886                           ;	Chosen strategy is simple_byte
 27887   0017A8  518D               	movf	?_getNV& (0+255),w,b
 27888   0017AA  0A02               	xorlw	2	; case 2
 27889   0017AC  B4D8               	btfsc	status,2,c
 27890   0017AE  D7D6               	goto	l22227
 27891   0017B0  0A01               	xorlw	1	; case 3
 27892   0017B2  B4D8               	btfsc	status,2,c
 27893   0017B4  D7D3               	goto	l22227
 27894   0017B6  0A07               	xorlw	7	; case 4
 27895   0017B8  B4D8               	btfsc	status,2,c
 27896   0017BA  D7D0               	goto	l22227
 27897   0017BC                     l22233:
 27898                           
 27899                           ;../servo.c: 545:     }
 27900   0017BC  0101               	movlb	1	; () banked
 27901   0017BE  2BDB               	incf	pollServos@io& (0+255),f,b
 27902                           
 27903                           ; BSR set to: 1
 27904   0017C0  0E0F               	movlw	15
 27905   0017C2  65DB               	cpfsgt	pollServos@io& (0+255),b
 27906   0017C4  D760               	goto	l22215
 27907   0017C6  0012               	return	
 27908   0017C8                     __end_of_pollServos:
 27909                           	callstack 0
 27910                           
 27911 ;; *************** function _initBounce *****************
 27912 ;; Defined at:
 27913 ;;		line 89 in file "../bounce.c"
 27914 ;; Parameters:    Size  Location     Type
 27915 ;;  io              1    wreg     unsigned char 
 27916 ;; Auto vars:     Size  Location     Type
 27917 ;;  io              1   45[BANK0 ] unsigned char 
 27918 ;; Return value:  Size  Location     Type
 27919 ;;                  1    wreg      void 
 27920 ;; Registers used:
 27921 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27922 ;; Tracked objects:
 27923 ;;		On entry : 0/0
 27924 ;;		On exit  : 0/0
 27925 ;;		Unchanged: 0/0
 27926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27928 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27930 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27931 ;;Total ram usage:        1 bytes
 27932 ;; Hardware stack levels used: 1
 27933 ;; Hardware stack levels required when called: 12
 27934 ;; This function calls:
 27935 ;;		Nothing
 27936 ;; This function is called by:
 27937 ;;		_pollServos
 27938 ;; This function uses a non-reentrant model
 27939 ;;
 27940                           
 27941                           	psect	text101
 27942   00C428                     __ptext101:
 27943                           	callstack 0
 27944   00C428                     _initBounce:
 27945                           	callstack 15
 27946                           
 27947                           ; BSR set to: 1
 27948                           ;incstack = 0
 27949                           ;initBounce@io stored from wreg
 27950   00C428  0100               	movlb	0	; () banked
 27951   00C42A  6F8D               	movwf	initBounce@io& (0+255),b
 27952                           
 27953                           ;../bounce.c: 90:     bounceState[io] = STATE_FIRST_PULL;
 27954   00C42C  0E44               	movlw	low _bounceState
 27955   00C42E  0100               	movlb	0	; () banked
 27956   00C430  258D               	addwf	initBounce@io& (0+255),w,b
 27957   00C432  6ED9               	movwf	fsr2l,c
 27958   00C434  6ADA               	clrf	fsr2h,c
 27959   00C436  0E02               	movlw	high _bounceState
 27960   00C438  22DA               	addwfc	fsr2h,f,c
 27961   00C43A  6ADF               	clrf	indf2,c
 27962                           
 27963                           ; BSR set to: 0
 27964                           ;../bounce.c: 91:     speed[io] = 0;
 27965   00C43C  518D               	movf	initBounce@io& (0+255),w,b
 27966   00C43E  0D02               	mullw	2
 27967   00C440  0E00               	movlw	low _speed
 27968   00C442  24F3               	addwf	243,w,c
 27969   00C444  6ED9               	movwf	fsr2l,c
 27970   00C446  0E02               	movlw	high _speed
 27971   00C448  20F4               	addwfc	prodh,w,c
 27972   00C44A  6EDA               	movwf	fsr2h,c
 27973   00C44C  6ADE               	clrf	postinc2,c
 27974   00C44E  6ADD               	clrf	postdec2,c
 27975                           
 27976                           ; BSR set to: 0
 27977   00C450  0012               	return		;funcret
 27978   00C452                     __end_of_initBounce:
 27979                           	callstack 0
 27980                           
 27981 ;; *************** function _bounceUp *****************
 27982 ;; Defined at:
 27983 ;;		line 161 in file "../bounce.c"
 27984 ;; Parameters:    Size  Location     Type
 27985 ;;  io              1    wreg     unsigned char 
 27986 ;; Auto vars:     Size  Location     Type
 27987 ;;  io              1   71[BANK0 ] unsigned char 
 27988 ;;  midway          1   70[BANK0 ] unsigned char 
 27989 ;;  reversed        1   69[BANK0 ] enum E12716
 27990 ;; Return value:  Size  Location     Type
 27991 ;;                  1    wreg      enum E12716
 27992 ;; Registers used:
 27993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27994 ;; Tracked objects:
 27995 ;;		On entry : 0/0
 27996 ;;		On exit  : 0/0
 27997 ;;		Unchanged: 0/0
 27998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28000 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28001 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28002 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28003 ;;Total ram usage:        9 bytes
 28004 ;; Hardware stack levels used: 1
 28005 ;; Hardware stack levels required when called: 13
 28006 ;; This function calls:
 28007 ;;		___awdiv
 28008 ;;		_getNV
 28009 ;; This function is called by:
 28010 ;;		_pollServos
 28011 ;; This function uses a non-reentrant model
 28012 ;;
 28013                           
 28014                           	psect	text102
 28015   0059B4                     __ptext102:
 28016                           	callstack 0
 28017   0059B4                     _bounceUp:
 28018                           	callstack 14
 28019                           
 28020                           ; BSR set to: 0
 28021                           ;incstack = 0
 28022                           ;bounceUp@io stored from wreg
 28023   0059B4  0100               	movlb	0	; () banked
 28024   0059B6  6FA7               	movwf	bounceUp@io& (0+255),b
 28025                           
 28026                           ;../bounce.c: 162:     Boolean reversed = ((uint8_t)getNV((16 + 7*(io) + 3)) > (uint8_t)
      +                          getNV((16 + 7*(io) + 2)));
 28027   0059B8  0100               	movlb	0	; () banked
 28028   0059BA  51A7               	movf	bounceUp@io& (0+255),w,b
 28029   0059BC  0D07               	mullw	7
 28030   0059BE  50F3               	movf	243,w,c
 28031   0059C0  0F12               	addlw	18
 28032   0059C2  ECD2  F05F         	call	_getNV
 28033   0059C6  C08D  F09F         	movff	?_getNV,??_bounceUp
 28034   0059CA  C08E  F0A0         	movff	?_getNV+1,??_bounceUp+1
 28035   0059CE  0100               	movlb	0	; () banked
 28036   0059D0  51A7               	movf	bounceUp@io& (0+255),w,b
 28037   0059D2  0D07               	mullw	7
 28038   0059D4  50F3               	movf	243,w,c
 28039   0059D6  0F13               	addlw	19
 28040   0059D8  ECD2  F05F         	call	_getNV
 28041   0059DC  0100               	movlb	0	; () banked
 28042   0059DE  518D               	movf	?_getNV& (0+255),w,b
 28043   0059E0  5D9F               	subwf	??_bounceUp& (0+255),w,b
 28044   0059E2  B0D8               	btfsc	status,0,c
 28045   0059E4  D002               	goto	u22060
 28046   0059E6  0E01               	movlw	1
 28047   0059E8  D001               	goto	u22070
 28048   0059EA                     u22060:
 28049   0059EA  0E00               	movlw	0
 28050   0059EC                     u22070:
 28051   0059EC  6FA5               	movwf	bounceUp@reversed& (0+255),b
 28052                           
 28053                           ;../bounce.c: 163:     uint8_t midway;;../bounce.c: 164:     switch(bounceState[io]) {
 28054   0059EE  D116               	goto	l21097
 28055   0059F0                     l21047:
 28056                           
 28057                           ; BSR set to: 0
 28058                           ;../bounce.c: 167:         midway = ((uint8_t)getNV((16 + 7*(io) + 3)))/2 +
 28059   0059F0  51A7               	movf	bounceUp@io& (0+255),w,b
 28060   0059F2  0D07               	mullw	7
 28061   0059F4  50F3               	movf	243,w,c
 28062   0059F6  0F12               	addlw	18
 28063   0059F8  ECD2  F05F         	call	_getNV
 28064   0059FC  0100               	movlb	0	; () banked
 28065   0059FE  518D               	movf	?_getNV& (0+255),w,b
 28066   005A00  6F97               	movwf	___awdiv@dividend& (0+255),b
 28067   005A02  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 28068   005A04  0E00               	movlw	0
 28069   005A06  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28070   005A08  0E02               	movlw	2
 28071   005A0A  6F99               	movwf	___awdiv@divisor& (0+255),b
 28072   005A0C  EC7B  F054         	call	___awdiv	;wreg free
 28073   005A10  C097  F09F         	movff	?___awdiv,??_bounceUp
 28074   005A14  C098  F0A0         	movff	?___awdiv+1,??_bounceUp+1
 28075   005A18  0100               	movlb	0	; () banked
 28076   005A1A  51A7               	movf	bounceUp@io& (0+255),w,b
 28077   005A1C  0D07               	mullw	7
 28078   005A1E  50F3               	movf	243,w,c
 28079   005A20  0F13               	addlw	19
 28080   005A22  ECD2  F05F         	call	_getNV
 28081   005A26  0100               	movlb	0	; () banked
 28082   005A28  518D               	movf	?_getNV& (0+255),w,b
 28083   005A2A  6F97               	movwf	___awdiv@dividend& (0+255),b
 28084   005A2C  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 28085   005A2E  0E00               	movlw	0
 28086   005A30  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28087   005A32  0E02               	movlw	2
 28088   005A34  6F99               	movwf	___awdiv@divisor& (0+255),b
 28089   005A36  EC7B  F054         	call	___awdiv	;wreg free
 28090   005A3A  0100               	movlb	0	; () banked
 28091   005A3C  5197               	movf	?___awdiv& (0+255),w,b
 28092   005A3E  259F               	addwf	??_bounceUp& (0+255),w,b
 28093   005A40  6FA6               	movwf	bounceUp@midway& (0+255),b
 28094                           
 28095                           ; BSR set to: 0
 28096                           ;../bounce.c: 169:         if (reversed) {
 28097   005A42  51A5               	movf	bounceUp@reversed& (0+255),w,b
 28098   005A44  B4D8               	btfsc	status,2,c
 28099   005A46  D028               	goto	l21059
 28100                           
 28101                           ; BSR set to: 0
 28102                           ;../bounce.c: 170:             currentPos[io] -= (uint8_t)getNV((16 + 7*(io) + 5));
 28103   005A48  51A7               	movf	bounceUp@io& (0+255),w,b
 28104   005A4A  0D07               	mullw	7
 28105   005A4C  50F3               	movf	243,w,c
 28106   005A4E  0F15               	addlw	21
 28107   005A50  ECD2  F05F         	call	_getNV
 28108   005A54  0E30               	movlw	low _currentPos
 28109   005A56  0100               	movlb	0	; () banked
 28110   005A58  25A7               	addwf	bounceUp@io& (0+255),w,b
 28111   005A5A  6ED9               	movwf	fsr2l,c
 28112   005A5C  6ADA               	clrf	fsr2h,c
 28113   005A5E  0E01               	movlw	high _currentPos
 28114   005A60  22DA               	addwfc	fsr2h,f,c
 28115   005A62  518D               	movf	?_getNV& (0+255),w,b
 28116   005A64  5EDF               	subwf	indf2,f,c
 28117                           
 28118                           ; BSR set to: 0
 28119                           ;../bounce.c: 171:             if (currentPos[io] <= midway) {
 28120   005A66  0E30               	movlw	low _currentPos
 28121   005A68  25A7               	addwf	bounceUp@io& (0+255),w,b
 28122   005A6A  6ED9               	movwf	fsr2l,c
 28123   005A6C  6ADA               	clrf	fsr2h,c
 28124   005A6E  0E01               	movlw	high _currentPos
 28125   005A70  22DA               	addwfc	fsr2h,f,c
 28126   005A72  50DE               	movf	postinc2,w,c
 28127   005A74  5DA6               	subwf	bounceUp@midway& (0+255),w,b
 28128   005A76  A0D8               	btfss	status,0,c
 28129   005A78  D0E9               	goto	l21099
 28130                           
 28131                           ; BSR set to: 0
 28132                           ;../bounce.c: 172:                 bounceState[io] = STATE_PAUSE;
 28133   005A7A  0E44               	movlw	low _bounceState
 28134   005A7C  25A7               	addwf	bounceUp@io& (0+255),w,b
 28135   005A7E  6ED9               	movwf	fsr2l,c
 28136   005A80  6ADA               	clrf	fsr2h,c
 28137   005A82  0E02               	movlw	high _bounceState
 28138   005A84  22DA               	addwfc	fsr2h,f,c
 28139   005A86  0E01               	movlw	1
 28140   005A88  6EDF               	movwf	indf2,c
 28141                           
 28142                           ; BSR set to: 0
 28143                           ;../bounce.c: 173:                 speed[io] = (uint8_t)getNV((16 + 7*(io) + 6));
 28144   005A8A  51A7               	movf	bounceUp@io& (0+255),w,b
 28145   005A8C  0D07               	mullw	7
 28146   005A8E  50F3               	movf	243,w,c
 28147   005A90  0F16               	addlw	22
 28148   005A92  ECD2  F05F         	call	_getNV
 28149   005A96  D027               	goto	L7
 28150   005A98                     l21059:
 28151                           
 28152                           ; BSR set to: 0
 28153                           ;../bounce.c: 176:             currentPos[io] += (uint8_t)getNV((16 + 7*(io) + 5));
 28154   005A98  51A7               	movf	bounceUp@io& (0+255),w,b
 28155   005A9A  0D07               	mullw	7
 28156   005A9C  50F3               	movf	243,w,c
 28157   005A9E  0F15               	addlw	21
 28158   005AA0  ECD2  F05F         	call	_getNV
 28159   005AA4  0E30               	movlw	low _currentPos
 28160   005AA6  0100               	movlb	0	; () banked
 28161   005AA8  25A7               	addwf	bounceUp@io& (0+255),w,b
 28162   005AAA  6ED9               	movwf	fsr2l,c
 28163   005AAC  6ADA               	clrf	fsr2h,c
 28164   005AAE  0E01               	movlw	high _currentPos
 28165   005AB0  22DA               	addwfc	fsr2h,f,c
 28166   005AB2  518D               	movf	?_getNV& (0+255),w,b
 28167   005AB4  26DF               	addwf	indf2,f,c
 28168                           
 28169                           ; BSR set to: 0
 28170                           ;../bounce.c: 177:             if (currentPos[io] >= midway) {
 28171   005AB6  0E30               	movlw	low _currentPos
 28172   005AB8  25A7               	addwf	bounceUp@io& (0+255),w,b
 28173   005ABA  6ED9               	movwf	fsr2l,c
 28174   005ABC  6ADA               	clrf	fsr2h,c
 28175   005ABE  0E01               	movlw	high _currentPos
 28176   005AC0  22DA               	addwfc	fsr2h,f,c
 28177   005AC2  51A6               	movf	bounceUp@midway& (0+255),w,b
 28178   005AC4  5CDE               	subwf	postinc2,w,c
 28179   005AC6  A0D8               	btfss	status,0,c
 28180   005AC8  D0C1               	goto	l21099
 28181                           
 28182                           ; BSR set to: 0
 28183                           ;../bounce.c: 178:                 bounceState[io] = STATE_PAUSE;
 28184   005ACA  0E44               	movlw	low _bounceState
 28185   005ACC  25A7               	addwf	bounceUp@io& (0+255),w,b
 28186   005ACE  6ED9               	movwf	fsr2l,c
 28187   005AD0  6ADA               	clrf	fsr2h,c
 28188   005AD2  0E02               	movlw	high _bounceState
 28189   005AD4  22DA               	addwfc	fsr2h,f,c
 28190   005AD6  0E01               	movlw	1
 28191   005AD8  6EDF               	movwf	indf2,c
 28192                           
 28193                           ; BSR set to: 0
 28194                           ;../bounce.c: 179:                 speed[io] = (uint8_t)getNV((16 + 7*(io) + 6));
 28195   005ADA  51A7               	movf	bounceUp@io& (0+255),w,b
 28196   005ADC  0D07               	mullw	7
 28197   005ADE  50F3               	movf	243,w,c
 28198   005AE0  0F16               	addlw	22
 28199   005AE2  ECD2  F05F         	call	_getNV
 28200   005AE6                     L7:
 28201   005AE6  0100               	movlb	0	; () banked
 28202   005AE8  518D               	movf	?_getNV& (0+255),w,b
 28203   005AEA  6F9F               	movwf	??_bounceUp& (0+255),b
 28204   005AEC  6BA0               	clrf	(??_bounceUp+1)& (0+255),b
 28205   005AEE  51A7               	movf	bounceUp@io& (0+255),w,b
 28206   005AF0  0D02               	mullw	2
 28207   005AF2  0E00               	movlw	low _speed
 28208   005AF4  24F3               	addwf	243,w,c
 28209   005AF6  6ED9               	movwf	fsr2l,c
 28210   005AF8  0E02               	movlw	high _speed
 28211   005AFA  20F4               	addwfc	prodh,w,c
 28212   005AFC  6EDA               	movwf	fsr2h,c
 28213   005AFE  C09F  FFDE         	movff	??_bounceUp,postinc2
 28214   005B02  C0A0  FFDD         	movff	??_bounceUp+1,postdec2
 28215   005B06  D0A2               	goto	l21099
 28216   005B08                     l21067:
 28217                           
 28218                           ; BSR set to: 0
 28219                           ;../bounce.c: 185:         if (speed[io] == 0) bounceState[io] = STATE_SECOND_PULL;
 28220   005B08  51A7               	movf	bounceUp@io& (0+255),w,b
 28221   005B0A  0D02               	mullw	2
 28222   005B0C  0E00               	movlw	low _speed
 28223   005B0E  24F3               	addwf	243,w,c
 28224   005B10  6ED9               	movwf	fsr2l,c
 28225   005B12  0E02               	movlw	high _speed
 28226   005B14  20F4               	addwfc	prodh,w,c
 28227   005B16  6EDA               	movwf	fsr2h,c
 28228   005B18  50DE               	movf	postinc2,w,c
 28229   005B1A  10DE               	iorwf	postinc2,w,c
 28230   005B1C  A4D8               	btfss	status,2,c
 28231   005B1E  D008               	goto	l21071
 28232                           
 28233                           ; BSR set to: 0
 28234   005B20  0E44               	movlw	low _bounceState
 28235   005B22  25A7               	addwf	bounceUp@io& (0+255),w,b
 28236   005B24  6ED9               	movwf	fsr2l,c
 28237   005B26  6ADA               	clrf	fsr2h,c
 28238   005B28  0E02               	movlw	high _bounceState
 28239   005B2A  22DA               	addwfc	fsr2h,f,c
 28240   005B2C  0E02               	movlw	2
 28241   005B2E  6EDF               	movwf	indf2,c
 28242   005B30                     l21071:
 28243                           
 28244                           ; BSR set to: 0
 28245                           ;../bounce.c: 186:         speed[io]--;
 28246   005B30  51A7               	movf	bounceUp@io& (0+255),w,b
 28247   005B32  0D02               	mullw	2
 28248   005B34  0E00               	movlw	low _speed
 28249   005B36  24F3               	addwf	243,w,c
 28250   005B38  6ED9               	movwf	fsr2l,c
 28251   005B3A  0E02               	movlw	high _speed
 28252   005B3C  20F4               	addwfc	prodh,w,c
 28253   005B3E  6EDA               	movwf	fsr2h,c
 28254   005B40  06DE               	decf	postinc2,f,c
 28255   005B42  0E00               	movlw	0
 28256   005B44  5ADD               	subwfb	postdec2,f,c
 28257                           
 28258                           ;../bounce.c: 187:         break;
 28259   005B46  D082               	goto	l21099
 28260   005B48                     l21073:
 28261                           
 28262                           ; BSR set to: 0
 28263                           ;../bounce.c: 190:         if (reversed) {
 28264   005B48  51A5               	movf	bounceUp@reversed& (0+255),w,b
 28265   005B4A  B4D8               	btfsc	status,2,c
 28266   005B4C  D038               	goto	l21085
 28267                           
 28268                           ; BSR set to: 0
 28269                           ;../bounce.c: 191:             currentPos[io] -= (uint8_t)getNV((16 + 7*(io) + 5));
 28270   005B4E  51A7               	movf	bounceUp@io& (0+255),w,b
 28271   005B50  0D07               	mullw	7
 28272   005B52  50F3               	movf	243,w,c
 28273   005B54  0F15               	addlw	21
 28274   005B56  ECD2  F05F         	call	_getNV
 28275   005B5A  0E30               	movlw	low _currentPos
 28276   005B5C  0100               	movlb	0	; () banked
 28277   005B5E  25A7               	addwf	bounceUp@io& (0+255),w,b
 28278   005B60  6ED9               	movwf	fsr2l,c
 28279   005B62  6ADA               	clrf	fsr2h,c
 28280   005B64  0E01               	movlw	high _currentPos
 28281   005B66  22DA               	addwfc	fsr2h,f,c
 28282   005B68  518D               	movf	?_getNV& (0+255),w,b
 28283   005B6A  5EDF               	subwf	indf2,f,c
 28284                           
 28285                           ; BSR set to: 0
 28286                           ;../bounce.c: 192:             if (currentPos[io]<=targetPos[io]-3) {
 28287   005B6C  0E30               	movlw	low _currentPos
 28288   005B6E  25A7               	addwf	bounceUp@io& (0+255),w,b
 28289   005B70  6ED9               	movwf	fsr2l,c
 28290   005B72  6ADA               	clrf	fsr2h,c
 28291   005B74  0E01               	movlw	high _currentPos
 28292   005B76  22DA               	addwfc	fsr2h,f,c
 28293   005B78  50DF               	movf	indf2,w,c
 28294   005B7A  6F9F               	movwf	??_bounceUp& (0+255),b
 28295   005B7C  6BA0               	clrf	(??_bounceUp+1)& (0+255),b
 28296   005B7E  51A7               	movf	bounceUp@io& (0+255),w,b
 28297   005B80  0F01               	addlw	low _targetPos
 28298   005B82  6ED9               	movwf	fsr2l,c
 28299   005B84  6ADA               	clrf	fsr2h,c
 28300   005B86  50DF               	movf	indf2,w,c
 28301   005B88  6FA1               	movwf	(??_bounceUp+2)& (0+255),b
 28302   005B8A  0EFD               	movlw	253
 28303   005B8C  25A1               	addwf	(??_bounceUp+2)& (0+255),w,b
 28304   005B8E  6FA2               	movwf	(??_bounceUp+3)& (0+255),b
 28305   005B90  6BA3               	clrf	(??_bounceUp+4)& (0+255),b
 28306   005B92  0EFF               	movlw	255
 28307   005B94  23A3               	addwfc	(??_bounceUp+4)& (0+255),f,b
 28308   005B96  519F               	movf	??_bounceUp& (0+255),w,b
 28309   005B98  5DA2               	subwf	(??_bounceUp+3)& (0+255),w,b
 28310   005B9A  51A3               	movf	(??_bounceUp+4)& (0+255),w,b
 28311   005B9C  0A80               	xorlw	128
 28312   005B9E  6FA4               	movwf	(??_bounceUp+5)& (0+255),b
 28313   005BA0  51A0               	movf	(??_bounceUp+1)& (0+255),w,b
 28314   005BA2  0A80               	xorlw	128
 28315   005BA4  59A4               	subwfb	(??_bounceUp+5)& (0+255),w,b
 28316   005BA6  A0D8               	btfss	status,0,c
 28317   005BA8  D051               	goto	l21099
 28318   005BAA                     u22130:
 28319                           
 28320                           ; BSR set to: 0
 28321                           ;../bounce.c: 193:                 bounceState[io] = STATE_DONE;
 28322   005BAA  0E44               	movlw	low _bounceState
 28323   005BAC  25A7               	addwf	bounceUp@io& (0+255),w,b
 28324   005BAE  6ED9               	movwf	fsr2l,c
 28325   005BB0  6ADA               	clrf	fsr2h,c
 28326   005BB2  0E02               	movlw	high _bounceState
 28327   005BB4  22DA               	addwfc	fsr2h,f,c
 28328   005BB6  0E03               	movlw	3
 28329   005BB8  6EDF               	movwf	indf2,c
 28330                           
 28331                           ; BSR set to: 0
 28332                           ;../bounce.c: 194:                 return TRUE;
 28333   005BBA  0E01               	movlw	1
 28334   005BBC  0012               	return	
 28335   005BBE                     l21085:
 28336                           
 28337                           ; BSR set to: 0
 28338                           ;../bounce.c: 197:             currentPos[io] += (uint8_t)getNV((16 + 7*(io) + 5));
 28339   005BBE  51A7               	movf	bounceUp@io& (0+255),w,b
 28340   005BC0  0D07               	mullw	7
 28341   005BC2  50F3               	movf	243,w,c
 28342   005BC4  0F15               	addlw	21
 28343   005BC6  ECD2  F05F         	call	_getNV
 28344   005BCA  0E30               	movlw	low _currentPos
 28345   005BCC  0100               	movlb	0	; () banked
 28346   005BCE  25A7               	addwf	bounceUp@io& (0+255),w,b
 28347   005BD0  6ED9               	movwf	fsr2l,c
 28348   005BD2  6ADA               	clrf	fsr2h,c
 28349   005BD4  0E01               	movlw	high _currentPos
 28350   005BD6  22DA               	addwfc	fsr2h,f,c
 28351   005BD8  518D               	movf	?_getNV& (0+255),w,b
 28352   005BDA  26DF               	addwf	indf2,f,c
 28353                           
 28354                           ; BSR set to: 0
 28355                           ;../bounce.c: 198:             if (currentPos[io]>=targetPos[io]-3) {
 28356   005BDC  51A7               	movf	bounceUp@io& (0+255),w,b
 28357   005BDE  0F01               	addlw	low _targetPos
 28358   005BE0  6ED9               	movwf	fsr2l,c
 28359   005BE2  6ADA               	clrf	fsr2h,c
 28360   005BE4  50DF               	movf	indf2,w,c
 28361   005BE6  6F9F               	movwf	??_bounceUp& (0+255),b
 28362   005BE8  0EFD               	movlw	253
 28363   005BEA  259F               	addwf	??_bounceUp& (0+255),w,b
 28364   005BEC  6FA0               	movwf	(??_bounceUp+1)& (0+255),b
 28365   005BEE  6BA1               	clrf	(??_bounceUp+2)& (0+255),b
 28366   005BF0  0EFF               	movlw	255
 28367   005BF2  23A1               	addwfc	(??_bounceUp+2)& (0+255),f,b
 28368   005BF4  0E30               	movlw	low _currentPos
 28369   005BF6  25A7               	addwf	bounceUp@io& (0+255),w,b
 28370   005BF8  6ED9               	movwf	fsr2l,c
 28371   005BFA  6ADA               	clrf	fsr2h,c
 28372   005BFC  0E01               	movlw	high _currentPos
 28373   005BFE  22DA               	addwfc	fsr2h,f,c
 28374   005C00  50DF               	movf	indf2,w,c
 28375   005C02  6FA2               	movwf	(??_bounceUp+3)& (0+255),b
 28376   005C04  6BA3               	clrf	(??_bounceUp+4)& (0+255),b
 28377   005C06  51A0               	movf	(??_bounceUp+1)& (0+255),w,b
 28378   005C08  5DA2               	subwf	(??_bounceUp+3)& (0+255),w,b
 28379   005C0A  51A3               	movf	(??_bounceUp+4)& (0+255),w,b
 28380   005C0C  0A80               	xorlw	128
 28381   005C0E  6FA4               	movwf	(??_bounceUp+5)& (0+255),b
 28382   005C10  51A1               	movf	(??_bounceUp+2)& (0+255),w,b
 28383   005C12  0A80               	xorlw	128
 28384   005C14  59A4               	subwfb	(??_bounceUp+5)& (0+255),w,b
 28385   005C16  B0D8               	btfsc	status,0,c
 28386   005C18  D7C8               	goto	u22130
 28387   005C1A  D018               	goto	l21099
 28388   005C1C                     l21097:
 28389                           
 28390                           ; BSR set to: 0
 28391   005C1C  0E44               	movlw	low _bounceState
 28392   005C1E  25A7               	addwf	bounceUp@io& (0+255),w,b
 28393   005C20  6ED9               	movwf	fsr2l,c
 28394   005C22  6ADA               	clrf	fsr2h,c
 28395   005C24  0E02               	movlw	high _bounceState
 28396   005C26  22DA               	addwfc	fsr2h,f,c
 28397   005C28  50DF               	movf	indf2,w,c
 28398   005C2A  6F9F               	movwf	??_bounceUp& (0+255),b
 28399   005C2C  6BA0               	clrf	(??_bounceUp+1)& (0+255),b
 28400                           
 28401                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28402                           ; Switch size 1, requested type "simple"
 28403                           ; Number of cases is 1, Range of values is 0 to 0
 28404                           ; switch strategies available:
 28405                           ; Name         Instructions Cycles
 28406                           ; simple_byte            4     3 (average)
 28407                           ;	Chosen strategy is simple_byte
 28408   005C2E  51A0               	movf	(??_bounceUp+1)& (0+255),w,b
 28409   005C30  0A00               	xorlw	0	; case 0
 28410   005C32  A4D8               	btfss	status,2,c
 28411   005C34  D00B               	goto	l21099
 28412                           
 28413                           ; BSR set to: 0
 28414                           ; Switch size 1, requested type "simple"
 28415                           ; Number of cases is 4, Range of values is 0 to 3
 28416                           ; switch strategies available:
 28417                           ; Name         Instructions Cycles
 28418                           ; simple_byte           13     7 (average)
 28419                           ;	Chosen strategy is simple_byte
 28420   005C36  519F               	movf	??_bounceUp& (0+255),w,b
 28421   005C38  0A00               	xorlw	0	; case 0
 28422   005C3A  B4D8               	btfsc	status,2,c
 28423   005C3C  D6D9               	goto	l21047
 28424   005C3E  0A01               	xorlw	1	; case 1
 28425   005C40  B4D8               	btfsc	status,2,c
 28426   005C42  D762               	goto	l21067
 28427   005C44  0A03               	xorlw	3	; case 2
 28428   005C46  B4D8               	btfsc	status,2,c
 28429   005C48  D77F               	goto	l21073
 28430   005C4A  0A01               	xorlw	1	; case 3
 28431   005C4C                     l21099:
 28432                           
 28433                           ; BSR set to: 0
 28434                           ;../bounce.c: 207:     return FALSE;
 28435   005C4C  0E00               	movlw	0
 28436                           
 28437                           ; BSR set to: 0
 28438   005C4E  0012               	return		;funcret
 28439   005C50                     __end_of_bounceUp:
 28440                           	callstack 0
 28441                           
 28442 ;; *************** function _bounceDown *****************
 28443 ;; Defined at:
 28444 ;;		line 103 in file "../bounce.c"
 28445 ;; Parameters:    Size  Location     Type
 28446 ;;  io              1    wreg     unsigned char 
 28447 ;; Auto vars:     Size  Location     Type
 28448 ;;  io              1   73[BANK0 ] unsigned char 
 28449 ;;  tmp             2   71[BANK0 ] int 
 28450 ;;  reversed        1   70[BANK0 ] enum E12716
 28451 ;; Return value:  Size  Location     Type
 28452 ;;                  1    wreg      enum E12716
 28453 ;; Registers used:
 28454 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28455 ;; Tracked objects:
 28456 ;;		On entry : 0/0
 28457 ;;		On exit  : 0/0
 28458 ;;		Unchanged: 0/0
 28459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28461 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28462 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28463 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28464 ;;Total ram usage:       11 bytes
 28465 ;; Hardware stack levels used: 1
 28466 ;; Hardware stack levels required when called: 13
 28467 ;; This function calls:
 28468 ;;		___awdiv
 28469 ;;		___wmul
 28470 ;;		_getNV
 28471 ;; This function is called by:
 28472 ;;		_pollServos
 28473 ;; This function uses a non-reentrant model
 28474 ;;
 28475                           
 28476                           	psect	text103
 28477   002E2A                     __ptext103:
 28478                           	callstack 0
 28479   002E2A                     _bounceDown:
 28480                           	callstack 14
 28481                           
 28482                           ; BSR set to: 0
 28483                           ;incstack = 0
 28484                           ;bounceDown@io stored from wreg
 28485   002E2A  0100               	movlb	0	; () banked
 28486   002E2C  6FA9               	movwf	bounceDown@io& (0+255),b
 28487                           
 28488                           ;../bounce.c: 105:     if ((currentPos[io]>targetPos[io]+3) || (currentPos[io]<targetPos
      +                          [io]-3) || (speed[io]>3) || (speed[io]<-3)) {
 28489   002E2E  0E30               	movlw	low _currentPos
 28490   002E30  0100               	movlb	0	; () banked
 28491   002E32  25A9               	addwf	bounceDown@io& (0+255),w,b
 28492   002E34  6ED9               	movwf	fsr2l,c
 28493   002E36  6ADA               	clrf	fsr2h,c
 28494   002E38  0E01               	movlw	high _currentPos
 28495   002E3A  22DA               	addwfc	fsr2h,f,c
 28496   002E3C  50DF               	movf	indf2,w,c
 28497   002E3E  6F9F               	movwf	??_bounceDown& (0+255),b
 28498   002E40  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 28499   002E42  51A9               	movf	bounceDown@io& (0+255),w,b
 28500   002E44  0F01               	addlw	low _targetPos
 28501   002E46  6ED9               	movwf	fsr2l,c
 28502   002E48  6ADA               	clrf	fsr2h,c
 28503   002E4A  50DF               	movf	indf2,w,c
 28504   002E4C  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 28505   002E4E  6BA2               	clrf	(??_bounceDown+3)& (0+255),b
 28506   002E50  0E03               	movlw	3
 28507   002E52  27A1               	addwf	(??_bounceDown+2)& (0+255),f,b
 28508   002E54  0E00               	movlw	0
 28509   002E56  23A2               	addwfc	(??_bounceDown+3)& (0+255),f,b
 28510   002E58  519F               	movf	??_bounceDown& (0+255),w,b
 28511   002E5A  5DA1               	subwf	(??_bounceDown+2)& (0+255),w,b
 28512   002E5C  51A2               	movf	(??_bounceDown+3)& (0+255),w,b
 28513   002E5E  0A80               	xorlw	128
 28514   002E60  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 28515   002E62  51A0               	movf	(??_bounceDown+1)& (0+255),w,b
 28516   002E64  0A80               	xorlw	128
 28517   002E66  59A3               	subwfb	(??_bounceDown+4)& (0+255),w,b
 28518   002E68  A0D8               	btfss	status,0,c
 28519   002E6A  D042               	goto	u22180
 28520                           
 28521                           ; BSR set to: 0
 28522   002E6C  51A9               	movf	bounceDown@io& (0+255),w,b
 28523   002E6E  0F01               	addlw	low _targetPos
 28524   002E70  6ED9               	movwf	fsr2l,c
 28525   002E72  6ADA               	clrf	fsr2h,c
 28526   002E74  50DF               	movf	indf2,w,c
 28527   002E76  6F9F               	movwf	??_bounceDown& (0+255),b
 28528   002E78  0EFD               	movlw	253
 28529   002E7A  259F               	addwf	??_bounceDown& (0+255),w,b
 28530   002E7C  6FA0               	movwf	(??_bounceDown+1)& (0+255),b
 28531   002E7E  6BA1               	clrf	(??_bounceDown+2)& (0+255),b
 28532   002E80  0EFF               	movlw	255
 28533   002E82  23A1               	addwfc	(??_bounceDown+2)& (0+255),f,b
 28534   002E84  0E30               	movlw	low _currentPos
 28535   002E86  25A9               	addwf	bounceDown@io& (0+255),w,b
 28536   002E88  6ED9               	movwf	fsr2l,c
 28537   002E8A  6ADA               	clrf	fsr2h,c
 28538   002E8C  0E01               	movlw	high _currentPos
 28539   002E8E  22DA               	addwfc	fsr2h,f,c
 28540   002E90  50DF               	movf	indf2,w,c
 28541   002E92  6FA2               	movwf	(??_bounceDown+3)& (0+255),b
 28542   002E94  6BA3               	clrf	(??_bounceDown+4)& (0+255),b
 28543   002E96  51A0               	movf	(??_bounceDown+1)& (0+255),w,b
 28544   002E98  5DA2               	subwf	(??_bounceDown+3)& (0+255),w,b
 28545   002E9A  51A3               	movf	(??_bounceDown+4)& (0+255),w,b
 28546   002E9C  0A80               	xorlw	128
 28547   002E9E  6FA4               	movwf	(??_bounceDown+5)& (0+255),b
 28548   002EA0  51A1               	movf	(??_bounceDown+2)& (0+255),w,b
 28549   002EA2  0A80               	xorlw	128
 28550   002EA4  59A4               	subwfb	(??_bounceDown+5)& (0+255),w,b
 28551   002EA6  A0D8               	btfss	status,0,c
 28552   002EA8  D023               	goto	u22180
 28553                           
 28554                           ; BSR set to: 0
 28555   002EAA  51A9               	movf	bounceDown@io& (0+255),w,b
 28556   002EAC  0D02               	mullw	2
 28557   002EAE  0E00               	movlw	low _speed
 28558   002EB0  24F3               	addwf	243,w,c
 28559   002EB2  6ED9               	movwf	fsr2l,c
 28560   002EB4  0E02               	movlw	high _speed
 28561   002EB6  20F4               	addwfc	prodh,w,c
 28562   002EB8  6EDA               	movwf	fsr2h,c
 28563   002EBA  0E01               	movlw	1
 28564   002EBC  BEDB               	btfsc	plusw2,7,c
 28565   002EBE  D007               	goto	u22170
 28566   002EC0  0E01               	movlw	1
 28567   002EC2  50DB               	movf	plusw2,w,c
 28568   002EC4  E115               	bnz	l21115
 28569   002EC6  0E04               	movlw	4
 28570   002EC8  5CDE               	subwf	postinc2,w,c
 28571   002ECA  B0D8               	btfsc	status,0,c
 28572   002ECC  D011               	goto	u22180
 28573   002ECE                     u22170:
 28574                           
 28575                           ; BSR set to: 0
 28576   002ECE  51A9               	movf	bounceDown@io& (0+255),w,b
 28577   002ED0  0D02               	mullw	2
 28578   002ED2  0E00               	movlw	low _speed
 28579   002ED4  24F3               	addwf	243,w,c
 28580   002ED6  6ED9               	movwf	fsr2l,c
 28581   002ED8  0E02               	movlw	high _speed
 28582   002EDA  20F4               	addwfc	prodh,w,c
 28583   002EDC  6EDA               	movwf	fsr2h,c
 28584   002EDE  0E01               	movlw	1
 28585   002EE0  AEDB               	btfss	plusw2,7,c
 28586   002EE2  D1DA               	goto	l21143
 28587   002EE4  0EFD               	movlw	253
 28588   002EE6  5CDE               	subwf	postinc2,w,c
 28589   002EE8  0EFF               	movlw	255
 28590   002EEA  58DE               	subwfb	postinc2,w,c
 28591   002EEC  B0D8               	btfsc	status,0,c
 28592   002EEE  D1D4               	goto	l21143
 28593   002EF0                     u22180:
 28594   002EF0                     l21115:
 28595                           
 28596                           ; BSR set to: 0
 28597                           ;../bounce.c: 106:         Boolean reversed = ((uint8_t)getNV((16 + 7*(io) + 3)) > (uint
      +                          8_t)getNV((16 + 7*(io) + 2)));
 28598   002EF0  51A9               	movf	bounceDown@io& (0+255),w,b
 28599   002EF2  0D07               	mullw	7
 28600   002EF4  50F3               	movf	243,w,c
 28601   002EF6  0F12               	addlw	18
 28602   002EF8  ECD2  F05F         	call	_getNV
 28603   002EFC  C08D  F09F         	movff	?_getNV,??_bounceDown
 28604   002F00  C08E  F0A0         	movff	?_getNV+1,??_bounceDown+1
 28605   002F04  0100               	movlb	0	; () banked
 28606   002F06  51A9               	movf	bounceDown@io& (0+255),w,b
 28607   002F08  0D07               	mullw	7
 28608   002F0A  50F3               	movf	243,w,c
 28609   002F0C  0F13               	addlw	19
 28610   002F0E  ECD2  F05F         	call	_getNV
 28611   002F12  0100               	movlb	0	; () banked
 28612   002F14  518D               	movf	?_getNV& (0+255),w,b
 28613   002F16  5D9F               	subwf	??_bounceDown& (0+255),w,b
 28614   002F18  B0D8               	btfsc	status,0,c
 28615   002F1A  D002               	goto	u22190
 28616   002F1C  0E01               	movlw	1
 28617   002F1E  D001               	goto	u22200
 28618   002F20                     u22190:
 28619   002F20  0E00               	movlw	0
 28620   002F22                     u22200:
 28621   002F22  6FA6               	movwf	bounceDown@reversed& (0+255),b
 28622                           
 28623                           ; BSR set to: 0
 28624                           ;../bounce.c: 107:         int tmp;;../bounce.c: 109:         if (! reversed) {
 28625   002F24  51A6               	movf	bounceDown@reversed& (0+255),w,b
 28626   002F26  A4D8               	btfss	status,2,c
 28627   002F28  D0DD               	goto	l21129
 28628                           
 28629                           ; BSR set to: 0
 28630                           ;../bounce.c: 112:             if (currentPos[io] < (uint8_t)getNV((16 + 7*(io) + 3)) + 
      +                          speed[io]/30) {
 28631   002F2A  51A9               	movf	bounceDown@io& (0+255),w,b
 28632   002F2C  0D02               	mullw	2
 28633   002F2E  0E00               	movlw	low _speed
 28634   002F30  24F3               	addwf	243,w,c
 28635   002F32  6ED9               	movwf	fsr2l,c
 28636   002F34  0E02               	movlw	high _speed
 28637   002F36  20F4               	addwfc	prodh,w,c
 28638   002F38  6EDA               	movwf	fsr2h,c
 28639   002F3A  CFDE F097          	movff	postinc2,___awdiv@dividend
 28640   002F3E  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 28641   002F42  0E00               	movlw	0
 28642   002F44  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28643   002F46  0E1E               	movlw	30
 28644   002F48  6F99               	movwf	___awdiv@divisor& (0+255),b
 28645   002F4A  EC7B  F054         	call	___awdiv	;wreg free
 28646   002F4E  C097  F09F         	movff	?___awdiv,??_bounceDown
 28647   002F52  C098  F0A0         	movff	?___awdiv+1,??_bounceDown+1
 28648   002F56  0100               	movlb	0	; () banked
 28649   002F58  51A9               	movf	bounceDown@io& (0+255),w,b
 28650   002F5A  0D07               	mullw	7
 28651   002F5C  50F3               	movf	243,w,c
 28652   002F5E  0F13               	addlw	19
 28653   002F60  ECD2  F05F         	call	_getNV
 28654   002F64  0100               	movlb	0	; () banked
 28655   002F66  518D               	movf	?_getNV& (0+255),w,b
 28656   002F68  259F               	addwf	??_bounceDown& (0+255),w,b
 28657   002F6A  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 28658   002F6C  0E00               	movlw	0
 28659   002F6E  21A0               	addwfc	(??_bounceDown+1)& (0+255),w,b
 28660   002F70  6FA2               	movwf	(??_bounceDown+3)& (0+255),b
 28661   002F72  0E30               	movlw	low _currentPos
 28662   002F74  25A9               	addwf	bounceDown@io& (0+255),w,b
 28663   002F76  6ED9               	movwf	fsr2l,c
 28664   002F78  6ADA               	clrf	fsr2h,c
 28665   002F7A  0E01               	movlw	high _currentPos
 28666   002F7C  22DA               	addwfc	fsr2h,f,c
 28667   002F7E  50DF               	movf	indf2,w,c
 28668   002F80  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 28669   002F82  6BA4               	clrf	(??_bounceDown+5)& (0+255),b
 28670   002F84  51A1               	movf	(??_bounceDown+2)& (0+255),w,b
 28671   002F86  5DA3               	subwf	(??_bounceDown+4)& (0+255),w,b
 28672   002F88  51A4               	movf	(??_bounceDown+5)& (0+255),w,b
 28673   002F8A  0A80               	xorlw	128
 28674   002F8C  6FA5               	movwf	(??_bounceDown+6)& (0+255),b
 28675   002F8E  51A2               	movf	(??_bounceDown+3)& (0+255),w,b
 28676   002F90  0A80               	xorlw	128
 28677   002F92  59A5               	subwfb	(??_bounceDown+6)& (0+255),w,b
 28678   002F94  B0D8               	btfsc	status,0,c
 28679   002F96  D07C               	goto	l21125
 28680                           
 28681                           ; BSR set to: 0
 28682                           ;../bounce.c: 115:                 speed[io] = (-speed[io]*getNV((16 + 7*(io) + 4)))/100
      +                          ;
 28683   002F98  51A9               	movf	bounceDown@io& (0+255),w,b
 28684   002F9A  0D07               	mullw	7
 28685   002F9C  50F3               	movf	243,w,c
 28686   002F9E  0F14               	addlw	20
 28687   002FA0  ECD2  F05F         	call	_getNV
 28688   002FA4  C08D  F091         	movff	?_getNV,___wmul@multiplier
 28689   002FA8  C08E  F092         	movff	?_getNV+1,___wmul@multiplier+1
 28690   002FAC  0100               	movlb	0	; () banked
 28691   002FAE  51A9               	movf	bounceDown@io& (0+255),w,b
 28692   002FB0  0D02               	mullw	2
 28693   002FB2  0E00               	movlw	low _speed
 28694   002FB4  24F3               	addwf	243,w,c
 28695   002FB6  6ED9               	movwf	fsr2l,c
 28696   002FB8  0E02               	movlw	high _speed
 28697   002FBA  20F4               	addwfc	prodh,w,c
 28698   002FBC  6EDA               	movwf	fsr2h,c
 28699   002FBE  CFDE F09F          	movff	postinc2,??_bounceDown
 28700   002FC2  CFDD F0A0          	movff	postdec2,??_bounceDown+1
 28701   002FC6  1F9F               	comf	??_bounceDown& (0+255),f,b
 28702   002FC8  1FA0               	comf	(??_bounceDown+1)& (0+255),f,b
 28703   002FCA  4B9F               	infsnz	??_bounceDown& (0+255),f,b
 28704   002FCC  2BA0               	incf	(??_bounceDown+1)& (0+255),f,b
 28705   002FCE  C09F  F093         	movff	??_bounceDown,___wmul@multiplicand
 28706   002FD2  C0A0  F094         	movff	??_bounceDown+1,___wmul@multiplicand+1
 28707   002FD6  ECB5  F062         	call	___wmul	;wreg free
 28708   002FDA  C091  F097         	movff	?___wmul,___awdiv@dividend
 28709   002FDE  C092  F098         	movff	?___wmul+1,___awdiv@dividend+1
 28710   002FE2  0E00               	movlw	0
 28711   002FE4  0100               	movlb	0	; () banked
 28712   002FE6  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28713   002FE8  0E64               	movlw	100
 28714   002FEA  6F99               	movwf	___awdiv@divisor& (0+255),b
 28715   002FEC  EC7B  F054         	call	___awdiv	;wreg free
 28716   002FF0  0100               	movlb	0	; () banked
 28717   002FF2  51A9               	movf	bounceDown@io& (0+255),w,b
 28718   002FF4  0D02               	mullw	2
 28719   002FF6  0E00               	movlw	low _speed
 28720   002FF8  24F3               	addwf	243,w,c
 28721   002FFA  6ED9               	movwf	fsr2l,c
 28722   002FFC  0E02               	movlw	high _speed
 28723   002FFE  20F4               	addwfc	prodh,w,c
 28724   003000  6EDA               	movwf	fsr2h,c
 28725   003002  C097  FFDE         	movff	?___awdiv,postinc2
 28726   003006  C098  FFDD         	movff	?___awdiv+1,postdec2
 28727                           
 28728                           ;../bounce.c: 117:                 tmp = (uint8_t)getNV((16 + 7*(io) + 3)) -
 28729   00300A  51A9               	movf	bounceDown@io& (0+255),w,b
 28730   00300C  0D07               	mullw	7
 28731   00300E  50F3               	movf	243,w,c
 28732   003010  0F13               	addlw	19
 28733   003012  ECD2  F05F         	call	_getNV
 28734   003016  0100               	movlb	0	; () banked
 28735   003018  518D               	movf	?_getNV& (0+255),w,b
 28736   00301A  6F9F               	movwf	??_bounceDown& (0+255),b
 28737   00301C  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 28738   00301E  51A9               	movf	bounceDown@io& (0+255),w,b
 28739   003020  0D07               	mullw	7
 28740   003022  50F3               	movf	243,w,c
 28741   003024  0F13               	addlw	19
 28742   003026  ECD2  F05F         	call	_getNV
 28743   00302A  0100               	movlb	0	; () banked
 28744   00302C  518D               	movf	?_getNV& (0+255),w,b
 28745   00302E  279F               	addwf	??_bounceDown& (0+255),f,b
 28746   003030  0E00               	movlw	0
 28747   003032  23A0               	addwfc	(??_bounceDown+1)& (0+255),f,b
 28748   003034  0E30               	movlw	low _currentPos
 28749   003036  25A9               	addwf	bounceDown@io& (0+255),w,b
 28750   003038  6ED9               	movwf	fsr2l,c
 28751   00303A  6ADA               	clrf	fsr2h,c
 28752   00303C  0E01               	movlw	high _currentPos
 28753   00303E  22DA               	addwfc	fsr2h,f,c
 28754   003040  50DF               	movf	indf2,w,c
 28755   003042  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 28756   003044  51A1               	movf	(??_bounceDown+2)& (0+255),w,b
 28757   003046  5F9F               	subwf	??_bounceDown& (0+255),f,b
 28758   003048  0E00               	movlw	0
 28759   00304A  5BA0               	subwfb	(??_bounceDown+1)& (0+255),f,b
 28760   00304C  51A9               	movf	bounceDown@io& (0+255),w,b
 28761   00304E  0D02               	mullw	2
 28762   003050  0E00               	movlw	low _speed
 28763   003052  24F3               	addwf	243,w,c
 28764   003054  6ED9               	movwf	fsr2l,c
 28765   003056  0E02               	movlw	high _speed
 28766   003058  20F4               	addwfc	prodh,w,c
 28767   00305A  6EDA               	movwf	fsr2h,c
 28768   00305C  CFDE F097          	movff	postinc2,___awdiv@dividend
 28769   003060  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 28770   003064  0E00               	movlw	0
 28771   003066  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28772   003068  0E1E               	movlw	30
 28773   00306A  6F99               	movwf	___awdiv@divisor& (0+255),b
 28774   00306C  EC7B  F054         	call	___awdiv	;wreg free
 28775   003070  0100               	movlb	0	; () banked
 28776   003072  5197               	movf	?___awdiv& (0+255),w,b
 28777   003074  5D9F               	subwf	??_bounceDown& (0+255),w,b
 28778   003076  6FA7               	movwf	bounceDown@tmp& (0+255),b
 28779   003078  5198               	movf	(?___awdiv+1)& (0+255),w,b
 28780   00307A  59A0               	subwfb	(??_bounceDown+1)& (0+255),w,b
 28781   00307C  6FA8               	movwf	(bounceDown@tmp+1)& (0+255),b
 28782                           
 28783                           ; BSR set to: 0
 28784                           ;../bounce.c: 120:                 currentPos[io] = (uint8_t)tmp;
 28785   00307E  0E30               	movlw	low _currentPos
 28786   003080  25A9               	addwf	bounceDown@io& (0+255),w,b
 28787   003082  6ED9               	movwf	fsr2l,c
 28788   003084  6ADA               	clrf	fsr2h,c
 28789   003086  0E01               	movlw	high _currentPos
 28790   003088  22DA               	addwfc	fsr2h,f,c
 28791   00308A  C0A7  FFDF         	movff	bounceDown@tmp,indf2
 28792                           
 28793                           ;../bounce.c: 121:             } else {
 28794   00308E  D102               	goto	l21139
 28795   003090                     l21125:
 28796                           
 28797                           ; BSR set to: 0
 28798                           ;../bounce.c: 124:                 speed[io] += 3;
 28799   003090  51A9               	movf	bounceDown@io& (0+255),w,b
 28800   003092  0D02               	mullw	2
 28801   003094  0E00               	movlw	low _speed
 28802   003096  24F3               	addwf	243,w,c
 28803   003098  6ED9               	movwf	fsr2l,c
 28804   00309A  0E02               	movlw	high _speed
 28805   00309C  20F4               	addwfc	prodh,w,c
 28806   00309E  6EDA               	movwf	fsr2h,c
 28807   0030A0  0E03               	movlw	3
 28808   0030A2  26DE               	addwf	postinc2,f,c
 28809   0030A4  0E00               	movlw	0
 28810   0030A6  22DD               	addwfc	postdec2,f,c
 28811                           
 28812                           ; BSR set to: 0
 28813                           ;../bounce.c: 125:                 currentPos[io] -= ((speed[io]/30)+1);
 28814   0030A8  51A9               	movf	bounceDown@io& (0+255),w,b
 28815   0030AA  0D02               	mullw	2
 28816   0030AC  0E00               	movlw	low _speed
 28817   0030AE  24F3               	addwf	243,w,c
 28818   0030B0  6ED9               	movwf	fsr2l,c
 28819   0030B2  0E02               	movlw	high _speed
 28820   0030B4  20F4               	addwfc	prodh,w,c
 28821   0030B6  6EDA               	movwf	fsr2h,c
 28822   0030B8  CFDE F097          	movff	postinc2,___awdiv@dividend
 28823   0030BC  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 28824   0030C0  0E00               	movlw	0
 28825   0030C2  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28826   0030C4  0E1E               	movlw	30
 28827   0030C6  6F99               	movwf	___awdiv@divisor& (0+255),b
 28828   0030C8  EC7B  F054         	call	___awdiv	;wreg free
 28829   0030CC  0E01               	movlw	1
 28830   0030CE  0100               	movlb	0	; () banked
 28831   0030D0  2797               	addwf	?___awdiv& (0+255),f,b
 28832   0030D2  0E30               	movlw	low _currentPos
 28833   0030D4  25A9               	addwf	bounceDown@io& (0+255),w,b
 28834   0030D6  6ED9               	movwf	fsr2l,c
 28835   0030D8  6ADA               	clrf	fsr2h,c
 28836   0030DA  0E01               	movlw	high _currentPos
 28837   0030DC  22DA               	addwfc	fsr2h,f,c
 28838   0030DE  5197               	movf	?___awdiv& (0+255),w,b
 28839   0030E0  5EDF               	subwf	indf2,f,c
 28840   0030E2  D0D8               	goto	l21139
 28841   0030E4                     l21129:
 28842                           
 28843                           ; BSR set to: 0
 28844                           ;../bounce.c: 130:             if (currentPos[io] > (uint8_t)getNV((16 + 7*(io) + 3)) - 
      +                          speed[io]/30) {
 28845   0030E4  0E30               	movlw	low _currentPos
 28846   0030E6  25A9               	addwf	bounceDown@io& (0+255),w,b
 28847   0030E8  6ED9               	movwf	fsr2l,c
 28848   0030EA  6ADA               	clrf	fsr2h,c
 28849   0030EC  0E01               	movlw	high _currentPos
 28850   0030EE  22DA               	addwfc	fsr2h,f,c
 28851   0030F0  50DF               	movf	indf2,w,c
 28852   0030F2  6F9F               	movwf	??_bounceDown& (0+255),b
 28853   0030F4  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 28854   0030F6  51A9               	movf	bounceDown@io& (0+255),w,b
 28855   0030F8  0D07               	mullw	7
 28856   0030FA  50F3               	movf	243,w,c
 28857   0030FC  0F13               	addlw	19
 28858   0030FE  ECD2  F05F         	call	_getNV
 28859   003102  C08D  F0A1         	movff	?_getNV,??_bounceDown+2
 28860   003106  C08E  F0A2         	movff	?_getNV+1,??_bounceDown+3
 28861   00310A  0100               	movlb	0	; () banked
 28862   00310C  51A9               	movf	bounceDown@io& (0+255),w,b
 28863   00310E  0D02               	mullw	2
 28864   003110  0E00               	movlw	low _speed
 28865   003112  24F3               	addwf	243,w,c
 28866   003114  6ED9               	movwf	fsr2l,c
 28867   003116  0E02               	movlw	high _speed
 28868   003118  20F4               	addwfc	prodh,w,c
 28869   00311A  6EDA               	movwf	fsr2h,c
 28870   00311C  CFDE F097          	movff	postinc2,___awdiv@dividend
 28871   003120  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 28872   003124  0E00               	movlw	0
 28873   003126  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28874   003128  0E1E               	movlw	30
 28875   00312A  6F99               	movwf	___awdiv@divisor& (0+255),b
 28876   00312C  EC7B  F054         	call	___awdiv	;wreg free
 28877   003130  0100               	movlb	0	; () banked
 28878   003132  5197               	movf	?___awdiv& (0+255),w,b
 28879   003134  5DA1               	subwf	(??_bounceDown+2)& (0+255),w,b
 28880   003136  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 28881   003138  5198               	movf	(?___awdiv+1)& (0+255),w,b
 28882   00313A  A0D8               	btfss	status,0,c
 28883   00313C  2998               	incf	(?___awdiv+1)& (0+255),w,b
 28884   00313E  6BA4               	clrf	(??_bounceDown+5)& (0+255),b
 28885   003140  5FA4               	subwf	(??_bounceDown+5)& (0+255),f,b
 28886   003142  519F               	movf	??_bounceDown& (0+255),w,b
 28887   003144  5DA3               	subwf	(??_bounceDown+4)& (0+255),w,b
 28888   003146  51A4               	movf	(??_bounceDown+5)& (0+255),w,b
 28889   003148  0A80               	xorlw	128
 28890   00314A  6FA5               	movwf	(??_bounceDown+6)& (0+255),b
 28891   00314C  51A0               	movf	(??_bounceDown+1)& (0+255),w,b
 28892   00314E  0A80               	xorlw	128
 28893   003150  59A5               	subwfb	(??_bounceDown+6)& (0+255),w,b
 28894   003152  B0D8               	btfsc	status,0,c
 28895   003154  D076               	goto	l21135
 28896                           
 28897                           ; BSR set to: 0
 28898                           ;../bounce.c: 133:                 speed[io] = (-speed[io]*getNV((16 + 7*(io) + 4)))/100
      +                          ;
 28899   003156  51A9               	movf	bounceDown@io& (0+255),w,b
 28900   003158  0D07               	mullw	7
 28901   00315A  50F3               	movf	243,w,c
 28902   00315C  0F14               	addlw	20
 28903   00315E  ECD2  F05F         	call	_getNV
 28904   003162  C08D  F091         	movff	?_getNV,___wmul@multiplier
 28905   003166  C08E  F092         	movff	?_getNV+1,___wmul@multiplier+1
 28906   00316A  0100               	movlb	0	; () banked
 28907   00316C  51A9               	movf	bounceDown@io& (0+255),w,b
 28908   00316E  0D02               	mullw	2
 28909   003170  0E00               	movlw	low _speed
 28910   003172  24F3               	addwf	243,w,c
 28911   003174  6ED9               	movwf	fsr2l,c
 28912   003176  0E02               	movlw	high _speed
 28913   003178  20F4               	addwfc	prodh,w,c
 28914   00317A  6EDA               	movwf	fsr2h,c
 28915   00317C  CFDE F09F          	movff	postinc2,??_bounceDown
 28916   003180  CFDD F0A0          	movff	postdec2,??_bounceDown+1
 28917   003184  1F9F               	comf	??_bounceDown& (0+255),f,b
 28918   003186  1FA0               	comf	(??_bounceDown+1)& (0+255),f,b
 28919   003188  4B9F               	infsnz	??_bounceDown& (0+255),f,b
 28920   00318A  2BA0               	incf	(??_bounceDown+1)& (0+255),f,b
 28921   00318C  C09F  F093         	movff	??_bounceDown,___wmul@multiplicand
 28922   003190  C0A0  F094         	movff	??_bounceDown+1,___wmul@multiplicand+1
 28923   003194  ECB5  F062         	call	___wmul	;wreg free
 28924   003198  C091  F097         	movff	?___wmul,___awdiv@dividend
 28925   00319C  C092  F098         	movff	?___wmul+1,___awdiv@dividend+1
 28926   0031A0  0E00               	movlw	0
 28927   0031A2  0100               	movlb	0	; () banked
 28928   0031A4  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28929   0031A6  0E64               	movlw	100
 28930   0031A8  6F99               	movwf	___awdiv@divisor& (0+255),b
 28931   0031AA  EC7B  F054         	call	___awdiv	;wreg free
 28932   0031AE  0100               	movlb	0	; () banked
 28933   0031B0  51A9               	movf	bounceDown@io& (0+255),w,b
 28934   0031B2  0D02               	mullw	2
 28935   0031B4  0E00               	movlw	low _speed
 28936   0031B6  24F3               	addwf	243,w,c
 28937   0031B8  6ED9               	movwf	fsr2l,c
 28938   0031BA  0E02               	movlw	high _speed
 28939   0031BC  20F4               	addwfc	prodh,w,c
 28940   0031BE  6EDA               	movwf	fsr2h,c
 28941   0031C0  C097  FFDE         	movff	?___awdiv,postinc2
 28942   0031C4  C098  FFDD         	movff	?___awdiv+1,postdec2
 28943                           
 28944                           ;../bounce.c: 135:                 tmp = (uint8_t)getNV((16 + 7*(io) + 3)) +
 28945   0031C8  51A9               	movf	bounceDown@io& (0+255),w,b
 28946   0031CA  0D07               	mullw	7
 28947   0031CC  50F3               	movf	243,w,c
 28948   0031CE  0F13               	addlw	19
 28949   0031D0  ECD2  F05F         	call	_getNV
 28950   0031D4  0100               	movlb	0	; () banked
 28951   0031D6  518D               	movf	?_getNV& (0+255),w,b
 28952   0031D8  6F9F               	movwf	??_bounceDown& (0+255),b
 28953   0031DA  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 28954   0031DC  51A9               	movf	bounceDown@io& (0+255),w,b
 28955   0031DE  0D07               	mullw	7
 28956   0031E0  50F3               	movf	243,w,c
 28957   0031E2  0F13               	addlw	19
 28958   0031E4  ECD2  F05F         	call	_getNV
 28959   0031E8  0100               	movlb	0	; () banked
 28960   0031EA  518D               	movf	?_getNV& (0+255),w,b
 28961   0031EC  279F               	addwf	??_bounceDown& (0+255),f,b
 28962   0031EE  0E00               	movlw	0
 28963   0031F0  23A0               	addwfc	(??_bounceDown+1)& (0+255),f,b
 28964   0031F2  51A9               	movf	bounceDown@io& (0+255),w,b
 28965   0031F4  0D02               	mullw	2
 28966   0031F6  0E00               	movlw	low _speed
 28967   0031F8  24F3               	addwf	243,w,c
 28968   0031FA  6ED9               	movwf	fsr2l,c
 28969   0031FC  0E02               	movlw	high _speed
 28970   0031FE  20F4               	addwfc	prodh,w,c
 28971   003200  6EDA               	movwf	fsr2h,c
 28972   003202  CFDE F097          	movff	postinc2,___awdiv@dividend
 28973   003206  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 28974   00320A  0E00               	movlw	0
 28975   00320C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28976   00320E  0E1E               	movlw	30
 28977   003210  6F99               	movwf	___awdiv@divisor& (0+255),b
 28978   003212  EC7B  F054         	call	___awdiv	;wreg free
 28979   003216  0100               	movlb	0	; () banked
 28980   003218  5197               	movf	?___awdiv& (0+255),w,b
 28981   00321A  259F               	addwf	??_bounceDown& (0+255),w,b
 28982   00321C  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 28983   00321E  5198               	movf	(?___awdiv+1)& (0+255),w,b
 28984   003220  21A0               	addwfc	(??_bounceDown+1)& (0+255),w,b
 28985   003222  6FA2               	movwf	(??_bounceDown+3)& (0+255),b
 28986   003224  0E30               	movlw	low _currentPos
 28987   003226  25A9               	addwf	bounceDown@io& (0+255),w,b
 28988   003228  6ED9               	movwf	fsr2l,c
 28989   00322A  6ADA               	clrf	fsr2h,c
 28990   00322C  0E01               	movlw	high _currentPos
 28991   00322E  22DA               	addwfc	fsr2h,f,c
 28992   003230  50DF               	movf	indf2,w,c
 28993   003232  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 28994   003234  51A3               	movf	(??_bounceDown+4)& (0+255),w,b
 28995   003236  5DA1               	subwf	(??_bounceDown+2)& (0+255),w,b
 28996   003238  6FA7               	movwf	bounceDown@tmp& (0+255),b
 28997   00323A  51A2               	movf	(??_bounceDown+3)& (0+255),w,b
 28998   00323C  A0D8               	btfss	status,0,c
 28999   00323E  05A2               	decf	(??_bounceDown+3)& (0+255),w,b
 29000   003240  D71D               	goto	L8
 29001   003242                     l21135:
 29002                           
 29003                           ; BSR set to: 0
 29004                           ;../bounce.c: 142:                 speed[io] += 3;
 29005   003242  51A9               	movf	bounceDown@io& (0+255),w,b
 29006   003244  0D02               	mullw	2
 29007   003246  0E00               	movlw	low _speed
 29008   003248  24F3               	addwf	243,w,c
 29009   00324A  6ED9               	movwf	fsr2l,c
 29010   00324C  0E02               	movlw	high _speed
 29011   00324E  20F4               	addwfc	prodh,w,c
 29012   003250  6EDA               	movwf	fsr2h,c
 29013   003252  0E03               	movlw	3
 29014   003254  26DE               	addwf	postinc2,f,c
 29015   003256  0E00               	movlw	0
 29016   003258  22DD               	addwfc	postdec2,f,c
 29017                           
 29018                           ; BSR set to: 0
 29019                           ;../bounce.c: 143:                 currentPos[io] += ((speed[io]/30)+1);
 29020   00325A  51A9               	movf	bounceDown@io& (0+255),w,b
 29021   00325C  0D02               	mullw	2
 29022   00325E  0E00               	movlw	low _speed
 29023   003260  24F3               	addwf	243,w,c
 29024   003262  6ED9               	movwf	fsr2l,c
 29025   003264  0E02               	movlw	high _speed
 29026   003266  20F4               	addwfc	prodh,w,c
 29027   003268  6EDA               	movwf	fsr2h,c
 29028   00326A  CFDE F097          	movff	postinc2,___awdiv@dividend
 29029   00326E  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 29030   003272  0E00               	movlw	0
 29031   003274  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 29032   003276  0E1E               	movlw	30
 29033   003278  6F99               	movwf	___awdiv@divisor& (0+255),b
 29034   00327A  EC7B  F054         	call	___awdiv	;wreg free
 29035   00327E  0E01               	movlw	1
 29036   003280  0100               	movlb	0	; () banked
 29037   003282  2797               	addwf	?___awdiv& (0+255),f,b
 29038   003284  0E30               	movlw	low _currentPos
 29039   003286  25A9               	addwf	bounceDown@io& (0+255),w,b
 29040   003288  6ED9               	movwf	fsr2l,c
 29041   00328A  6ADA               	clrf	fsr2h,c
 29042   00328C  0E01               	movlw	high _currentPos
 29043   00328E  22DA               	addwfc	fsr2h,f,c
 29044   003290  5197               	movf	?___awdiv& (0+255),w,b
 29045   003292  26DF               	addwf	indf2,f,c
 29046   003294                     l21139:
 29047                           
 29048                           ; BSR set to: 0
 29049                           ;../bounce.c: 147:         return FALSE;
 29050   003294  0E00               	movlw	0
 29051   003296  0012               	return	
 29052   003298                     l21143:
 29053                           
 29054                           ; BSR set to: 0
 29055                           ;../bounce.c: 149:     return TRUE;
 29056   003298  0E01               	movlw	1
 29057                           
 29058                           ; BSR set to: 0
 29059   00329A  0012               	return		;funcret
 29060   00329C                     __end_of_bounceDown:
 29061                           	callstack 0
 29062                           
 29063 ;; *************** function _processOutputs *****************
 29064 ;; Defined at:
 29065 ;;		line 178 in file "../digitalOut.c"
 29066 ;; Parameters:    Size  Location     Type
 29067 ;;		None
 29068 ;; Auto vars:     Size  Location     Type
 29069 ;;  io              1   19[BANK1 ] unsigned char 
 29070 ;; Return value:  Size  Location     Type
 29071 ;;                  1    wreg      void 
 29072 ;; Registers used:
 29073 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 29074 ;; Tracked objects:
 29075 ;;		On entry : 0/0
 29076 ;;		On exit  : 0/0
 29077 ;;		Unchanged: 0/0
 29078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29080 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29081 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29082 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29083 ;;Total ram usage:        2 bytes
 29084 ;; Hardware stack levels used: 1
 29085 ;; Hardware stack levels required when called: 18
 29086 ;; This function calls:
 29087 ;;		_getNV
 29088 ;;		_sendProducedEvent
 29089 ;;		_setOutputPin
 29090 ;; This function is called by:
 29091 ;;		_loop
 29092 ;; This function uses a non-reentrant model
 29093 ;;
 29094                           
 29095                           	psect	text104
 29096   006BD8                     __ptext104:
 29097                           	callstack 0
 29098   006BD8                     _processOutputs:
 29099                           	callstack 11
 29100                           
 29101                           ;../digitalOut.c: 179:     uint8_t io;;../digitalOut.c: 180:     for (io=0; io<16; io++)
      +                           {
 29102                           
 29103                           ; BSR set to: 0
 29104                           ;incstack = 0
 29105   006BD8  0E00               	movlw	0
 29106   006BDA  0101               	movlb	1	; () banked
 29107   006BDC  6FD1               	movwf	processOutputs@io& (0+255),b
 29108   006BDE                     l23409:
 29109                           
 29110                           ; BSR set to: 1
 29111                           ;../digitalOut.c: 181:         if (getNV((16 + 7*(io) + 0)) == 1) {
 29112   006BDE  51D1               	movf	processOutputs@io& (0+255),w,b
 29113   006BE0  0D07               	mullw	7
 29114   006BE2  50F3               	movf	243,w,c
 29115   006BE4  0F10               	addlw	16
 29116   006BE6  ECD2  F05F         	call	_getNV
 29117   006BEA  0100               	movlb	0	; () banked
 29118   006BEC  058D               	decf	?_getNV& (0+255),w,b
 29119   006BEE  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 29120   006BF0  A4D8               	btfss	status,2,c
 29121   006BF2  D0D8               	goto	l282
 29122                           
 29123                           ; BSR set to: 0
 29124                           ;../digitalOut.c: 183:             if (flashDelays[io] == 1) {
 29125   006BF4  0E20               	movlw	low _flashDelays
 29126   006BF6  0101               	movlb	1	; () banked
 29127   006BF8  25D1               	addwf	processOutputs@io& (0+255),w,b
 29128   006BFA  6ED9               	movwf	fsr2l,c
 29129   006BFC  6ADA               	clrf	fsr2h,c
 29130   006BFE  0E01               	movlw	high _flashDelays
 29131   006C00  22DA               	addwfc	fsr2h,f,c
 29132   006C02  04DE               	decf	postinc2,w,c
 29133   006C04  A4D8               	btfss	status,2,c
 29134   006C06  D02F               	goto	l23419
 29135                           
 29136                           ; BSR set to: 1
 29137                           ;../digitalOut.c: 184:                 setOutputPin(io, getNV((16 + 7*(io) + 1)) & 0x20)
      +                          ;
 29138   006C08  51D1               	movf	processOutputs@io& (0+255),w,b
 29139   006C0A  0D07               	mullw	7
 29140   006C0C  50F3               	movf	243,w,c
 29141   006C0E  0F11               	addlw	17
 29142   006C10  ECD2  F05F         	call	_getNV
 29143   006C14  0100               	movlb	0	; () banked
 29144   006C16  518D               	movf	?_getNV& (0+255),w,b
 29145   006C18  0B20               	andlw	32
 29146   006C1A  6F91               	movwf	setOutputPin@state& (0+255),b
 29147   006C1C  0101               	movlb	1	; () banked
 29148   006C1E  51D1               	movf	processOutputs@io& (0+255),w,b
 29149   006C20  ECBC  F037         	call	_setOutputPin
 29150                           
 29151                           ;../digitalOut.c: 185:                 flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3)
      +                          );
 29152   006C24  0101               	movlb	1	; () banked
 29153   006C26  51D1               	movf	processOutputs@io& (0+255),w,b
 29154   006C28  0D07               	mullw	7
 29155   006C2A  50F3               	movf	243,w,c
 29156   006C2C  0F13               	addlw	19
 29157   006C2E  ECD2  F05F         	call	_getNV
 29158   006C32  0E20               	movlw	low _flashDelays
 29159   006C34  0101               	movlb	1	; () banked
 29160   006C36  25D1               	addwf	processOutputs@io& (0+255),w,b
 29161   006C38  6ED9               	movwf	fsr2l,c
 29162   006C3A  6ADA               	clrf	fsr2h,c
 29163   006C3C  0E01               	movlw	high _flashDelays
 29164   006C3E  22DA               	addwfc	fsr2h,f,c
 29165   006C40  0100               	movlb	0	; () banked
 29166   006C42  C08D  FFDF         	movff	?_getNV,indf2
 29167                           
 29168                           ; BSR set to: 0
 29169                           ;../digitalOut.c: 186:                 flashDelays[io] = - flashDelays[io];
 29170   006C46  0E20               	movlw	low _flashDelays
 29171   006C48  0101               	movlb	1	; () banked
 29172   006C4A  25D1               	addwf	processOutputs@io& (0+255),w,b
 29173   006C4C  6ED9               	movwf	fsr2l,c
 29174   006C4E  6ADA               	clrf	fsr2h,c
 29175   006C50  0E01               	movlw	high _flashDelays
 29176   006C52  22DA               	addwfc	fsr2h,f,c
 29177   006C54  0E20               	movlw	low _flashDelays
 29178   006C56  25D1               	addwf	processOutputs@io& (0+255),w,b
 29179   006C58  6EE1               	movwf	fsr1l,c
 29180   006C5A  6AE2               	clrf	fsr1h,c
 29181   006C5C  0E01               	movlw	high _flashDelays
 29182   006C5E  22E2               	addwfc	fsr1h,f,c
 29183   006C60  50E7               	movf	indf1,w,c
 29184   006C62  0800               	sublw	0
 29185   006C64  6EDF               	movwf	indf2,c
 29186   006C66                     l23419:
 29187                           
 29188                           ; BSR set to: 1
 29189                           ;../digitalOut.c: 188:             if (flashDelays[io] == -1) {
 29190   006C66  0E20               	movlw	low _flashDelays
 29191   006C68  25D1               	addwf	processOutputs@io& (0+255),w,b
 29192   006C6A  6ED9               	movwf	fsr2l,c
 29193   006C6C  6ADA               	clrf	fsr2h,c
 29194   006C6E  0E01               	movlw	high _flashDelays
 29195   006C70  22DA               	addwfc	fsr2h,f,c
 29196   006C72  28DE               	incf	postinc2,w,c
 29197   006C74  A4D8               	btfss	status,2,c
 29198   006C76  D022               	goto	l23425
 29199                           
 29200                           ; BSR set to: 1
 29201                           ;../digitalOut.c: 189:                 setOutputPin(io, ! (getNV((16 + 7*(io) + 1)) & 0x
      +                          20));
 29202   006C78  51D1               	movf	processOutputs@io& (0+255),w,b
 29203   006C7A  0D07               	mullw	7
 29204   006C7C  50F3               	movf	243,w,c
 29205   006C7E  0F11               	addlw	17
 29206   006C80  ECD2  F05F         	call	_getNV
 29207   006C84  0100               	movlb	0	; () banked
 29208   006C86  BB8D               	btfsc	?_getNV& (0+255),5,b
 29209   006C88  D002               	goto	u25420
 29210   006C8A  0E01               	movlw	1
 29211   006C8C  D001               	goto	u25430
 29212   006C8E                     u25420:
 29213   006C8E  0E00               	movlw	0
 29214   006C90                     u25430:
 29215   006C90  6F91               	movwf	setOutputPin@state& (0+255),b
 29216   006C92  0101               	movlb	1	; () banked
 29217   006C94  51D1               	movf	processOutputs@io& (0+255),w,b
 29218   006C96  ECBC  F037         	call	_setOutputPin
 29219                           
 29220                           ;../digitalOut.c: 190:                 flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3)
      +                          );
 29221   006C9A  0101               	movlb	1	; () banked
 29222   006C9C  51D1               	movf	processOutputs@io& (0+255),w,b
 29223   006C9E  0D07               	mullw	7
 29224   006CA0  50F3               	movf	243,w,c
 29225   006CA2  0F13               	addlw	19
 29226   006CA4  ECD2  F05F         	call	_getNV
 29227   006CA8  0E20               	movlw	low _flashDelays
 29228   006CAA  0101               	movlb	1	; () banked
 29229   006CAC  25D1               	addwf	processOutputs@io& (0+255),w,b
 29230   006CAE  6ED9               	movwf	fsr2l,c
 29231   006CB0  6ADA               	clrf	fsr2h,c
 29232   006CB2  0E01               	movlw	high _flashDelays
 29233   006CB4  22DA               	addwfc	fsr2h,f,c
 29234   006CB6  0100               	movlb	0	; () banked
 29235   006CB8  C08D  FFDF         	movff	?_getNV,indf2
 29236   006CBC                     l23425:
 29237                           
 29238                           ;../digitalOut.c: 192:             if (flashDelays[io] > 1) {
 29239   006CBC  0E20               	movlw	low _flashDelays
 29240   006CBE  0101               	movlb	1	; () banked
 29241   006CC0  25D1               	addwf	processOutputs@io& (0+255),w,b
 29242   006CC2  6ED9               	movwf	fsr2l,c
 29243   006CC4  6ADA               	clrf	fsr2h,c
 29244   006CC6  0E01               	movlw	high _flashDelays
 29245   006CC8  22DA               	addwfc	fsr2h,f,c
 29246   006CCA  50DF               	movf	indf2,w,c
 29247   006CCC  0A80               	xorlw	128
 29248   006CCE  0F7E               	addlw	-130
 29249   006CD0  A0D8               	btfss	status,0,c
 29250   006CD2  D008               	goto	l23429
 29251                           
 29252                           ; BSR set to: 1
 29253                           ;../digitalOut.c: 193:                 flashDelays[io]--;
 29254   006CD4  0E20               	movlw	low _flashDelays
 29255   006CD6  25D1               	addwf	processOutputs@io& (0+255),w,b
 29256   006CD8  6ED9               	movwf	fsr2l,c
 29257   006CDA  6ADA               	clrf	fsr2h,c
 29258   006CDC  0E01               	movlw	high _flashDelays
 29259   006CDE  22DA               	addwfc	fsr2h,f,c
 29260   006CE0  06DF               	decf	indf2,f,c
 29261                           
 29262                           ;../digitalOut.c: 194:             } else if (flashDelays[io] < -1) {
 29263   006CE2  D012               	goto	l280
 29264   006CE4                     l23429:
 29265                           
 29266                           ; BSR set to: 1
 29267   006CE4  0E20               	movlw	low _flashDelays
 29268   006CE6  25D1               	addwf	processOutputs@io& (0+255),w,b
 29269   006CE8  6ED9               	movwf	fsr2l,c
 29270   006CEA  6ADA               	clrf	fsr2h,c
 29271   006CEC  0E01               	movlw	high _flashDelays
 29272   006CEE  22DA               	addwfc	fsr2h,f,c
 29273   006CF0  50DF               	movf	indf2,w,c
 29274   006CF2  0A80               	xorlw	128
 29275   006CF4  0F81               	addlw	129
 29276   006CF6  B0D8               	btfsc	status,0,c
 29277   006CF8  D007               	goto	l280
 29278                           
 29279                           ; BSR set to: 1
 29280                           ;../digitalOut.c: 195:                 flashDelays[io]++;
 29281   006CFA  0E20               	movlw	low _flashDelays
 29282   006CFC  25D1               	addwf	processOutputs@io& (0+255),w,b
 29283   006CFE  6ED9               	movwf	fsr2l,c
 29284   006D00  6ADA               	clrf	fsr2h,c
 29285   006D02  0E01               	movlw	high _flashDelays
 29286   006D04  22DA               	addwfc	fsr2h,f,c
 29287   006D06  2ADF               	incf	indf2,f,c
 29288   006D08                     l280:
 29289                           
 29290                           ; BSR set to: 1
 29291                           ;../digitalOut.c: 198:             if (pulseDelays[io] != 0) {
 29292   006D08  0EA4               	movlw	low _pulseDelays
 29293   006D0A  25D1               	addwf	processOutputs@io& (0+255),w,b
 29294   006D0C  6ED9               	movwf	fsr2l,c
 29295   006D0E  6ADA               	clrf	fsr2h,c
 29296   006D10  0E02               	movlw	high _pulseDelays
 29297   006D12  22DA               	addwfc	fsr2h,f,c
 29298   006D14  50DF               	movf	indf2,w,c
 29299   006D16  B4D8               	btfsc	status,2,c
 29300   006D18  D045               	goto	l282
 29301                           
 29302                           ; BSR set to: 1
 29303                           ;../digitalOut.c: 199:                 pulseDelays[io]--;
 29304   006D1A  0EA4               	movlw	low _pulseDelays
 29305   006D1C  25D1               	addwf	processOutputs@io& (0+255),w,b
 29306   006D1E  6ED9               	movwf	fsr2l,c
 29307   006D20  6ADA               	clrf	fsr2h,c
 29308   006D22  0E02               	movlw	high _pulseDelays
 29309   006D24  22DA               	addwfc	fsr2h,f,c
 29310   006D26  06DF               	decf	indf2,f,c
 29311                           
 29312                           ;../digitalOut.c: 202:                 if (pulseDelays[io] == 1) {
 29313   006D28  0EA4               	movlw	low _pulseDelays
 29314   006D2A  25D1               	addwf	processOutputs@io& (0+255),w,b
 29315   006D2C  6ED9               	movwf	fsr2l,c
 29316   006D2E  6ADA               	clrf	fsr2h,c
 29317   006D30  0E02               	movlw	high _pulseDelays
 29318   006D32  22DA               	addwfc	fsr2h,f,c
 29319   006D34  04DE               	decf	postinc2,w,c
 29320   006D36  A4D8               	btfss	status,2,c
 29321   006D38  D035               	goto	l282
 29322                           
 29323                           ; BSR set to: 1
 29324                           ;../digitalOut.c: 204:                     if (getNV((16 + 7*(io) + 1)) & 0x20) {
 29325   006D3A  51D1               	movf	processOutputs@io& (0+255),w,b
 29326   006D3C  0D07               	mullw	7
 29327   006D3E  50F3               	movf	243,w,c
 29328   006D40  0F11               	addlw	17
 29329   006D42  ECD2  F05F         	call	_getNV
 29330   006D46  0100               	movlb	0	; () banked
 29331   006D48  AB8D               	btfss	?_getNV& (0+255),5,b
 29332   006D4A  D007               	goto	l23439
 29333                           
 29334                           ; BSR set to: 0
 29335                           ;../digitalOut.c: 205:                         setOutputPin(io, TRUE);
 29336   006D4C  0E01               	movlw	1
 29337   006D4E  6F91               	movwf	setOutputPin@state& (0+255),b
 29338   006D50  0101               	movlb	1	; () banked
 29339   006D52  51D1               	movf	processOutputs@io& (0+255),w,b
 29340   006D54  ECBC  F037         	call	_setOutputPin
 29341                           
 29342                           ;../digitalOut.c: 206:                     } else {
 29343   006D58  D006               	goto	l23441
 29344   006D5A                     l23439:
 29345                           
 29346                           ; BSR set to: 0
 29347                           ;../digitalOut.c: 207:                         setOutputPin(io, FALSE);
 29348   006D5A  0E00               	movlw	0
 29349   006D5C  6F91               	movwf	setOutputPin@state& (0+255),b
 29350   006D5E  0101               	movlb	1	; () banked
 29351   006D60  51D1               	movf	processOutputs@io& (0+255),w,b
 29352   006D62  ECBC  F037         	call	_setOutputPin
 29353   006D66                     l23441:
 29354                           
 29355                           ;../digitalOut.c: 210:                     if ( ! (getNV((16 + 7*(io) + 1)) & 0x08)) {
 29356   006D66  0101               	movlb	1	; () banked
 29357   006D68  51D1               	movf	processOutputs@io& (0+255),w,b
 29358   006D6A  0D07               	mullw	7
 29359   006D6C  50F3               	movf	243,w,c
 29360   006D6E  0F11               	addlw	17
 29361   006D70  ECD2  F05F         	call	_getNV
 29362   006D74  0100               	movlb	0	; () banked
 29363   006D76  B78D               	btfsc	?_getNV& (0+255),3,b
 29364   006D78  D015               	goto	l282
 29365                           
 29366                           ; BSR set to: 0
 29367                           ;../digitalOut.c: 212:                         sendProducedEvent(((8 + 4*(io))+0), (getN
      +                          V((16 + 7*(io) + 1)) & 0x40)?EVENT_ON:EVENT_OFF);
 29368   006D7A  0101               	movlb	1	; () banked
 29369   006D7C  51D1               	movf	processOutputs@io& (0+255),w,b
 29370   006D7E  0D07               	mullw	7
 29371   006D80  50F3               	movf	243,w,c
 29372   006D82  0F11               	addlw	17
 29373   006D84  ECD2  F05F         	call	_getNV
 29374   006D88  0100               	movlb	0	; () banked
 29375   006D8A  AD8D               	btfss	?_getNV& (0+255),6,b
 29376   006D8C  D002               	goto	u25500
 29377   006D8E  0E01               	movlw	1
 29378   006D90  D001               	goto	u25510
 29379   006D92                     u25500:
 29380   006D92  0E00               	movlw	0
 29381   006D94                     u25510:
 29382   006D94  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 29383   006D96  0101               	movlb	1	; () banked
 29384   006D98  51D1               	movf	processOutputs@io& (0+255),w,b
 29385   006D9A  0D04               	mullw	4
 29386   006D9C  50F3               	movf	243,w,c
 29387   006D9E  0F08               	addlw	8
 29388   006DA0  EC64  F04C         	call	_sendProducedEvent
 29389   006DA4                     l282:
 29390                           
 29391                           ;../digitalOut.c: 217:     }
 29392                           
 29393                           ; BSR set to: 0
 29394   006DA4  0101               	movlb	1	; () banked
 29395   006DA6  2BD1               	incf	processOutputs@io& (0+255),f,b
 29396                           
 29397                           ; BSR set to: 1
 29398   006DA8  0E0F               	movlw	15
 29399   006DAA  65D1               	cpfsgt	processOutputs@io& (0+255),b
 29400   006DAC  D718               	goto	l23409
 29401   006DAE  0012               	return	
 29402   006DB0                     __end_of_processOutputs:
 29403                           	callstack 0
 29404                           
 29405 ;; *************** function _processActions *****************
 29406 ;; Defined at:
 29407 ;;		line 233 in file "../universalEvents.c"
 29408 ;; Parameters:    Size  Location     Type
 29409 ;;		None
 29410 ;; Auto vars:     Size  Location     Type
 29411 ;;  nextAction      1   43[BANK1 ] unsigned char 
 29412 ;;  nextIo          1   40[BANK1 ] unsigned char 
 29413 ;;  nextType        1   39[BANK1 ] unsigned char 
 29414 ;;  action          1   45[BANK1 ] unsigned char 
 29415 ;;  io              1   44[BANK1 ] unsigned char 
 29416 ;;  ioAction        1   42[BANK1 ] unsigned char 
 29417 ;;  type            1   41[BANK1 ] unsigned char 
 29418 ;;  peekItem        1   38[BANK1 ] unsigned char 
 29419 ;;  simultaneous    1   37[BANK1 ] unsigned char 
 29420 ;; Return value:  Size  Location     Type
 29421 ;;                  1    wreg      void 
 29422 ;; Registers used:
 29423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 29424 ;; Tracked objects:
 29425 ;;		On entry : 0/0
 29426 ;;		On exit  : 0/0
 29427 ;;		Unchanged: 0/0
 29428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29430 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29432 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29433 ;;Total ram usage:        9 bytes
 29434 ;; Hardware stack levels used: 1
 29435 ;; Hardware stack levels required when called: 21
 29436 ;; This function calls:
 29437 ;;		___awdiv
 29438 ;;		___awmod
 29439 ;;		_completed
 29440 ;;		_deleteTwoActionQueue
 29441 ;;		_doSOD
 29442 ;;		_doWait
 29443 ;;		_doneTwoAction
 29444 ;;		_finaliseOutput
 29445 ;;		_getNV
 29446 ;;		_getTwoAction
 29447 ;;		_needsStarting
 29448 ;;		_peekTwoActionQueue
 29449 ;;		_setOutputState
 29450 ;;		_startOutput
 29451 ;; This function is called by:
 29452 ;;		_loop
 29453 ;; This function uses a non-reentrant model
 29454 ;;
 29455                           
 29456                           	psect	text105
 29457   0063C2                     __ptext105:
 29458                           	callstack 0
 29459   0063C2                     _processActions:
 29460                           	callstack 8
 29461                           
 29462                           ;../universalEvents.c: 242:         action = getTwoAction();
 29463                           
 29464                           ; BSR set to: 1
 29465                           ;incstack = 0
 29466                           ;../universalEvents.c: 234:     uint8_t io;;../universalEvents.c: 235:     uint8_t type;
      +                          ;../universalEvents.c: 236:     uint8_t action;;../universalEvents.c: 237:     uint8_t i
      +                          oAction;;../universalEvents.c: 238:     uint8_t simultaneous;;../universalEvents.c: 239:
      +                               uint8_t peekItem;;../universalEvents.c: 241:     while (1) {
 29467   0063C2  EC7C  F064         	call	_getTwoAction	;wreg free
 29468   0063C6  0101               	movlb	1	; () banked
 29469   0063C8  6FEB               	movwf	processActions@action& (0+255),b
 29470                           
 29471                           ; BSR set to: 1
 29472                           ;../universalEvents.c: 244:         if (action == 0) {
 29473   0063CA  51EB               	movf	processActions@action& (0+255),w,b
 29474   0063CC  A4D8               	btfss	status,2,c
 29475   0063CE  D003               	goto	l23311
 29476   0063D0                     u25240:
 29477                           
 29478                           ;../universalEvents.c: 245:             doneTwoAction();
 29479   0063D0  EC8D  F064         	call	_doneTwoAction	;wreg free
 29480   0063D4  0012               	return	
 29481   0063D6                     l23311:
 29482                           
 29483                           ; BSR set to: 1
 29484                           ;../universalEvents.c: 249:         if (action == 1) {
 29485   0063D6  05EB               	decf	processActions@action& (0+255),w,b
 29486   0063D8  A4D8               	btfss	status,2,c
 29487   0063DA  D003               	goto	l23319
 29488                           
 29489                           ; BSR set to: 1
 29490                           ;../universalEvents.c: 251:             doSOD();
 29491   0063DC  ECF5  F063         	call	_doSOD	;wreg free
 29492   0063E0  D7F7               	goto	u25240
 29493   0063E2                     l23319:
 29494                           
 29495                           ; BSR set to: 1
 29496                           ;../universalEvents.c: 255:         if (action == 2) {
 29497   0063E2  0E02               	movlw	2
 29498   0063E4  19EB               	xorwf	processActions@action& (0+255),w,b
 29499   0063E6  A4D8               	btfss	status,2,c
 29500   0063E8  D008               	goto	l23325
 29501                           
 29502                           ; BSR set to: 1
 29503                           ;../universalEvents.c: 256:             doWait(5);
 29504   0063EA  0E00               	movlw	0
 29505   0063EC  0100               	movlb	0	; () banked
 29506   0063EE  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 29507   0063F0  0E05               	movlw	5
 29508   0063F2  6F9D               	movwf	doWait@duration& (0+255),b
 29509   0063F4  ECF0  F053         	call	_doWait	;wreg free
 29510   0063F8  0012               	return	
 29511   0063FA                     l23325:
 29512                           
 29513                           ; BSR set to: 1
 29514                           ;../universalEvents.c: 259:         if (action == 3) {
 29515   0063FA  0E03               	movlw	3
 29516   0063FC  19EB               	xorwf	processActions@action& (0+255),w,b
 29517   0063FE  A4D8               	btfss	status,2,c
 29518   006400  D008               	goto	l23331
 29519                           
 29520                           ; BSR set to: 1
 29521                           ;../universalEvents.c: 260:             doWait(10);
 29522   006402  0E00               	movlw	0
 29523   006404  0100               	movlb	0	; () banked
 29524   006406  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 29525   006408  0E0A               	movlw	10
 29526   00640A  6F9D               	movwf	doWait@duration& (0+255),b
 29527   00640C  ECF0  F053         	call	_doWait	;wreg free
 29528   006410  0012               	return	
 29529   006412                     l23331:
 29530                           
 29531                           ; BSR set to: 1
 29532                           ;../universalEvents.c: 263:         if (action == 4) {
 29533   006412  0E04               	movlw	4
 29534   006414  19EB               	xorwf	processActions@action& (0+255),w,b
 29535   006416  A4D8               	btfss	status,2,c
 29536   006418  D008               	goto	l23337
 29537                           
 29538                           ; BSR set to: 1
 29539                           ;../universalEvents.c: 264:             doWait(20);
 29540   00641A  0E00               	movlw	0
 29541   00641C  0100               	movlb	0	; () banked
 29542   00641E  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 29543   006420  0E14               	movlw	20
 29544   006422  6F9D               	movwf	doWait@duration& (0+255),b
 29545   006424  ECF0  F053         	call	_doWait	;wreg free
 29546   006428  0012               	return	
 29547   00642A                     l23337:
 29548                           
 29549                           ; BSR set to: 1
 29550                           ;../universalEvents.c: 267:         if (action == 5) {
 29551   00642A  0E05               	movlw	5
 29552   00642C  19EB               	xorwf	processActions@action& (0+255),w,b
 29553   00642E  A4D8               	btfss	status,2,c
 29554   006430  D008               	goto	l23343
 29555                           
 29556                           ; BSR set to: 1
 29557                           ;../universalEvents.c: 268:             doWait(50);
 29558   006432  0E00               	movlw	0
 29559   006434  0100               	movlb	0	; () banked
 29560   006436  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 29561   006438  0E32               	movlw	50
 29562   00643A  6F9D               	movwf	doWait@duration& (0+255),b
 29563   00643C  ECF0  F053         	call	_doWait	;wreg free
 29564   006440  0012               	return	
 29565   006442                     l23343:
 29566                           
 29567                           ; BSR set to: 1
 29568                           ;../universalEvents.c: 271:         simultaneous = action & 0x80;
 29569   006442  51EB               	movf	processActions@action& (0+255),w,b
 29570   006444  0B80               	andlw	128
 29571   006446  6FE3               	movwf	processActions@simultaneous& (0+255),b
 29572                           
 29573                           ;../universalEvents.c: 272:         ioAction = action&0x7F;
 29574   006448  51EB               	movf	processActions@action& (0+255),w,b
 29575   00644A  0B7F               	andlw	127
 29576   00644C  6FE8               	movwf	processActions@ioAction& (0+255),b
 29577                           
 29578                           ;../universalEvents.c: 273:         if ((ioAction >= 8) && (ioAction < (8 + 5 * 16))) {
 29579   00644E  0E07               	movlw	7
 29580   006450  65E8               	cpfsgt	processActions@ioAction& (0+255),b
 29581   006452  D0D0               	goto	l23401
 29582                           
 29583                           ; BSR set to: 1
 29584   006454  0E58               	movlw	88
 29585   006456  61E8               	cpfslt	processActions@ioAction& (0+255),b
 29586   006458  D0CD               	goto	l23401
 29587                           
 29588                           ; BSR set to: 1
 29589                           ;../universalEvents.c: 276:             io = (((ioAction)-8)/5);
 29590   00645A  0EF8               	movlw	248
 29591   00645C  25E8               	addwf	processActions@ioAction& (0+255),w,b
 29592   00645E  0100               	movlb	0	; () banked
 29593   006460  6F97               	movwf	___awdiv@dividend& (0+255),b
 29594   006462  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 29595   006464  0EFF               	movlw	255
 29596   006466  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 29597   006468  0E00               	movlw	0
 29598   00646A  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 29599   00646C  0E05               	movlw	5
 29600   00646E  6F99               	movwf	___awdiv@divisor& (0+255),b
 29601   006470  EC7B  F054         	call	___awdiv	;wreg free
 29602   006474  0100               	movlb	0	; () banked
 29603   006476  5197               	movf	?___awdiv& (0+255),w,b
 29604   006478  0101               	movlb	1	; () banked
 29605   00647A  6FEA               	movwf	processActions@io& (0+255),b
 29606                           
 29607                           ;../universalEvents.c: 277:             ioAction = (((ioAction)-8)%5);
 29608   00647C  0EF8               	movlw	248
 29609   00647E  25E8               	addwf	processActions@ioAction& (0+255),w,b
 29610   006480  0100               	movlb	0	; () banked
 29611   006482  6F8D               	movwf	___awmod@dividend& (0+255),b
 29612   006484  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 29613   006486  0EFF               	movlw	255
 29614   006488  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 29615   00648A  0E00               	movlw	0
 29616   00648C  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 29617   00648E  0E05               	movlw	5
 29618   006490  6F8F               	movwf	___awmod@divisor& (0+255),b
 29619   006492  EC90  F058         	call	___awmod	;wreg free
 29620   006496  0100               	movlb	0	; () banked
 29621   006498  518D               	movf	?___awmod& (0+255),w,b
 29622   00649A  0101               	movlb	1	; () banked
 29623   00649C  6FE8               	movwf	processActions@ioAction& (0+255),b
 29624                           
 29625                           ; BSR set to: 1
 29626                           ;../universalEvents.c: 278:             type = (uint8_t)getNV((16 + 7*(io) + 0));
 29627   00649E  51EA               	movf	processActions@io& (0+255),w,b
 29628   0064A0  0D07               	mullw	7
 29629   0064A2  50F3               	movf	243,w,c
 29630   0064A4  0F10               	addlw	16
 29631   0064A6  ECD2  F05F         	call	_getNV
 29632   0064AA  0100               	movlb	0	; () banked
 29633   0064AC  518D               	movf	?_getNV& (0+255),w,b
 29634   0064AE  0101               	movlb	1	; () banked
 29635   0064B0  6FE7               	movwf	processActions@type& (0+255),b
 29636                           
 29637                           ; BSR set to: 1
 29638                           ;../universalEvents.c: 280:             setOutputState(io, ioAction, type);
 29639   0064B2  C1E8  F093         	movff	processActions@ioAction,setOutputState@act
 29640   0064B6  C1E7  F094         	movff	processActions@type,setOutputState@type
 29641   0064BA  51EA               	movf	processActions@io& (0+255),w,b
 29642   0064BC  ECC9  F05C         	call	_setOutputState
 29643                           
 29644                           ;../universalEvents.c: 281:             if (needsStarting(io, ioAction, type)) {
 29645   0064C0  C1E8  F08D         	movff	processActions@ioAction,needsStarting@act
 29646   0064C4  C1E7  F08E         	movff	processActions@type,needsStarting@type
 29647   0064C8  0101               	movlb	1	; () banked
 29648   0064CA  51EA               	movf	processActions@io& (0+255),w,b
 29649   0064CC  EC43  F055         	call	_needsStarting
 29650   0064D0  0900               	iorlw	0
 29651   0064D2  B4D8               	btfsc	status,2,c
 29652   0064D4  D008               	goto	l23357
 29653                           
 29654                           ;../universalEvents.c: 282:                 startOutput(io, ioAction, type);
 29655   0064D6  C1E8  F1E0         	movff	processActions@ioAction,startOutput@act
 29656   0064DA  C1E7  F1E1         	movff	processActions@type,startOutput@type
 29657   0064DE  0101               	movlb	1	; () banked
 29658   0064E0  51EA               	movf	processActions@io& (0+255),w,b
 29659   0064E2  ECBF  F05B         	call	_startOutput
 29660   0064E6                     l23357:
 29661                           
 29662                           ;../universalEvents.c: 285:             peekItem = 1;
 29663   0064E6  0E01               	movlw	1
 29664   0064E8  0101               	movlb	1	; () banked
 29665   0064EA  6FE4               	movwf	processActions@peekItem& (0+255),b
 29666                           
 29667                           ;../universalEvents.c: 286:             while (simultaneous) {
 29668   0064EC  D06D               	goto	l23393
 29669   0064EE                     l23359:
 29670                           
 29671                           ; BSR set to: 1
 29672                           ;../universalEvents.c: 287:                 uint8_t nextAction;;../universalEvents.c: 28
      +                          8:                 uint8_t nextIo;;../universalEvents.c: 289:                 uint8_t ne
      +                          xtType;;../universalEvents.c: 291:                 nextAction = peekTwoActionQueue(peekI
      +                          tem);
 29673   0064EE  51E4               	movf	processActions@peekItem& (0+255),w,b
 29674   0064F0  EC36  F054         	call	_peekTwoActionQueue
 29675   0064F4  0101               	movlb	1	; () banked
 29676   0064F6  6FE9               	movwf	processActions@nextAction& (0+255),b
 29677                           
 29678                           ; BSR set to: 1
 29679                           ;../universalEvents.c: 293:                 if (nextAction == 0) break;
 29680   0064F8  51E9               	movf	processActions@nextAction& (0+255),w,b
 29681   0064FA  B4D8               	btfsc	status,2,c
 29682   0064FC  D068               	goto	u25370
 29683                           
 29684                           ; BSR set to: 1
 29685                           ;../universalEvents.c: 294:                 simultaneous = nextAction & 0x80;
 29686   0064FE  51E9               	movf	processActions@nextAction& (0+255),w,b
 29687   006500  0B80               	andlw	128
 29688   006502  6FE3               	movwf	processActions@simultaneous& (0+255),b
 29689                           
 29690                           ; BSR set to: 1
 29691                           ;../universalEvents.c: 295:                 nextAction &= 0x7F;
 29692   006504  9FE9               	bcf	processActions@nextAction& (0+255),7,b
 29693                           
 29694                           ; BSR set to: 1
 29695                           ;../universalEvents.c: 296:                 nextIo = (((nextAction)-8)/5);
 29696   006506  0EF8               	movlw	248
 29697   006508  25E9               	addwf	processActions@nextAction& (0+255),w,b
 29698   00650A  0100               	movlb	0	; () banked
 29699   00650C  6F97               	movwf	___awdiv@dividend& (0+255),b
 29700   00650E  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 29701   006510  0EFF               	movlw	255
 29702   006512  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 29703   006514  0E00               	movlw	0
 29704   006516  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 29705   006518  0E05               	movlw	5
 29706   00651A  6F99               	movwf	___awdiv@divisor& (0+255),b
 29707   00651C  EC7B  F054         	call	___awdiv	;wreg free
 29708   006520  0100               	movlb	0	; () banked
 29709   006522  5197               	movf	?___awdiv& (0+255),w,b
 29710   006524  0101               	movlb	1	; () banked
 29711   006526  6FE6               	movwf	processActions@nextIo& (0+255),b
 29712                           
 29713                           ; BSR set to: 1
 29714                           ;../universalEvents.c: 297:                 if (nextIo == io) {
 29715   006528  51EA               	movf	processActions@io& (0+255),w,b
 29716   00652A  19E6               	xorwf	processActions@nextIo& (0+255),w,b
 29717   00652C  B4D8               	btfsc	status,2,c
 29718   00652E  D04F               	goto	u25370
 29719                           
 29720                           ; BSR set to: 1
 29721                           ;../universalEvents.c: 303:                 nextAction = (((nextAction)-8)%5);
 29722   006530  0EF8               	movlw	248
 29723   006532  25E9               	addwf	processActions@nextAction& (0+255),w,b
 29724   006534  0100               	movlb	0	; () banked
 29725   006536  6F8D               	movwf	___awmod@dividend& (0+255),b
 29726   006538  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 29727   00653A  0EFF               	movlw	255
 29728   00653C  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 29729   00653E  0E00               	movlw	0
 29730   006540  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 29731   006542  0E05               	movlw	5
 29732   006544  6F8F               	movwf	___awmod@divisor& (0+255),b
 29733   006546  EC90  F058         	call	___awmod	;wreg free
 29734   00654A  0100               	movlb	0	; () banked
 29735   00654C  518D               	movf	?___awmod& (0+255),w,b
 29736   00654E  0101               	movlb	1	; () banked
 29737   006550  6FE9               	movwf	processActions@nextAction& (0+255),b
 29738                           
 29739                           ; BSR set to: 1
 29740                           ;../universalEvents.c: 304:                 nextType = (uint8_t)getNV((16 + 7*(io) + 0))
      +                          ;
 29741   006552  51EA               	movf	processActions@io& (0+255),w,b
 29742   006554  0D07               	mullw	7
 29743   006556  50F3               	movf	243,w,c
 29744   006558  0F10               	addlw	16
 29745   00655A  ECD2  F05F         	call	_getNV
 29746   00655E  0100               	movlb	0	; () banked
 29747   006560  518D               	movf	?_getNV& (0+255),w,b
 29748   006562  0101               	movlb	1	; () banked
 29749   006564  6FE5               	movwf	processActions@nextType& (0+255),b
 29750                           
 29751                           ; BSR set to: 1
 29752                           ;../universalEvents.c: 305:                 setOutputState(nextIo, nextAction, nextType)
      +                          ;
 29753   006566  C1E9  F093         	movff	processActions@nextAction,setOutputState@act
 29754   00656A  C1E5  F094         	movff	processActions@nextType,setOutputState@type
 29755   00656E  51E6               	movf	processActions@nextIo& (0+255),w,b
 29756   006570  ECC9  F05C         	call	_setOutputState
 29757                           
 29758                           ;../universalEvents.c: 306:                 if (needsStarting(nextIo, nextAction, nextTy
      +                          pe)) {
 29759   006574  C1E9  F08D         	movff	processActions@nextAction,needsStarting@act
 29760   006578  C1E5  F08E         	movff	processActions@nextType,needsStarting@type
 29761   00657C  0101               	movlb	1	; () banked
 29762   00657E  51E6               	movf	processActions@nextIo& (0+255),w,b
 29763   006580  EC43  F055         	call	_needsStarting
 29764   006584  0900               	iorlw	0
 29765   006586  B4D8               	btfsc	status,2,c
 29766   006588  D008               	goto	l23385
 29767                           
 29768                           ;../universalEvents.c: 307:                     startOutput(nextIo, nextAction, nextType
      +                          );
 29769   00658A  C1E9  F1E0         	movff	processActions@nextAction,startOutput@act
 29770   00658E  C1E5  F1E1         	movff	processActions@nextType,startOutput@type
 29771   006592  0101               	movlb	1	; () banked
 29772   006594  51E6               	movf	processActions@nextIo& (0+255),w,b
 29773   006596  ECBF  F05B         	call	_startOutput
 29774   00659A                     l23385:
 29775                           
 29776                           ;../universalEvents.c: 309:                 if (completed(nextIo, nextAction, nextType))
      +                           {
 29777   00659A  C1E9  F08D         	movff	processActions@nextAction,completed@action
 29778   00659E  C1E5  F08E         	movff	processActions@nextType,completed@type
 29779   0065A2  0101               	movlb	1	; () banked
 29780   0065A4  51E6               	movf	processActions@nextIo& (0+255),w,b
 29781   0065A6  EC87  F052         	call	_completed
 29782   0065AA  0900               	iorlw	0
 29783   0065AC  B4D8               	btfsc	status,2,c
 29784   0065AE  D00A               	goto	l23391
 29785                           
 29786                           ;../universalEvents.c: 310:                     deleteTwoActionQueue(peekItem);
 29787   0065B0  0101               	movlb	1	; () banked
 29788   0065B2  51E4               	movf	processActions@peekItem& (0+255),w,b
 29789   0065B4  ECC3  F055         	call	_deleteTwoActionQueue
 29790                           
 29791                           ;../universalEvents.c: 311:                     finaliseOutput(io, type);
 29792   0065B8  C1E7  F08D         	movff	processActions@type,finaliseOutput@type
 29793   0065BC  0101               	movlb	1	; () banked
 29794   0065BE  51EA               	movf	processActions@io& (0+255),w,b
 29795   0065C0  EC80  F064         	call	_finaliseOutput
 29796   0065C4                     l23391:
 29797                           
 29798                           ;../universalEvents.c: 313:                 peekItem++;
 29799   0065C4  0101               	movlb	1	; () banked
 29800   0065C6  2BE4               	incf	processActions@peekItem& (0+255),f,b
 29801   0065C8                     l23393:
 29802                           
 29803                           ; BSR set to: 1
 29804                           ;../universalEvents.c: 286:             while (simultaneous) {
 29805   0065C8  51E3               	movf	processActions@simultaneous& (0+255),w,b
 29806   0065CA  A4D8               	btfss	status,2,c
 29807   0065CC  D790               	goto	l23359
 29808   0065CE                     u25370:
 29809                           
 29810                           ; BSR set to: 1
 29811                           ;../universalEvents.c: 316:             if (completed(io, action, type)) {
 29812   0065CE  C1EB  F08D         	movff	processActions@action,completed@action
 29813   0065D2  C1E7  F08E         	movff	processActions@type,completed@type
 29814   0065D6  51EA               	movf	processActions@io& (0+255),w,b
 29815   0065D8  EC87  F052         	call	_completed
 29816   0065DC  0900               	iorlw	0
 29817   0065DE  B4D8               	btfsc	status,2,c
 29818   0065E0  0012               	return	
 29819                           
 29820                           ;../universalEvents.c: 317:                 doneTwoAction();
 29821   0065E2  EC8D  F064         	call	_doneTwoAction	;wreg free
 29822                           
 29823                           ;../universalEvents.c: 318:                 finaliseOutput(io, type);
 29824   0065E6  C1E7  F08D         	movff	processActions@type,finaliseOutput@type
 29825   0065EA  0101               	movlb	1	; () banked
 29826   0065EC  51EA               	movf	processActions@io& (0+255),w,b
 29827   0065EE  EC80  F064         	call	_finaliseOutput
 29828                           
 29829                           ;../universalEvents.c: 319:             } else {
 29830   0065F2  D6E7               	goto	__ptext105
 29831   0065F4                     l23401:
 29832                           
 29833                           ; BSR set to: 1
 29834                           ;../universalEvents.c: 327:             doneTwoAction();
 29835   0065F4  EC8D  F064         	call	_doneTwoAction	;wreg free
 29836   0065F8  D6E4               	goto	__ptext105
 29837   0065FA                     __end_of_processActions:
 29838                           	callstack 0
 29839                           
 29840 ;; *************** function _startOutput *****************
 29841 ;; Defined at:
 29842 ;;		line 72 in file "../outputs.c"
 29843 ;; Parameters:    Size  Location     Type
 29844 ;;  io              1    wreg     unsigned char 
 29845 ;;  act             1   34[BANK1 ] unsigned char 
 29846 ;;  type            1   35[BANK1 ] unsigned char 
 29847 ;; Auto vars:     Size  Location     Type
 29848 ;;  io              1   36[BANK1 ] unsigned char 
 29849 ;; Return value:  Size  Location     Type
 29850 ;;                  1    wreg      void 
 29851 ;; Registers used:
 29852 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 29853 ;; Tracked objects:
 29854 ;;		On entry : 0/0
 29855 ;;		On exit  : 0/0
 29856 ;;		Unchanged: 0/0
 29857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29858 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29859 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29861 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29862 ;;Total ram usage:        3 bytes
 29863 ;; Hardware stack levels used: 1
 29864 ;; Hardware stack levels required when called: 20
 29865 ;; This function calls:
 29866 ;;		_startBounceOutput
 29867 ;;		_startDigitalOutput
 29868 ;;		_startMultiOutput
 29869 ;;		_startServoOutput
 29870 ;; This function is called by:
 29871 ;;		_processActions
 29872 ;; This function uses a non-reentrant model
 29873 ;;
 29874                           
 29875                           	psect	text106
 29876   00B77E                     __ptext106:
 29877                           	callstack 0
 29878   00B77E                     _startOutput:
 29879                           	callstack 8
 29880                           
 29881                           ;incstack = 0
 29882                           ;startOutput@io stored from wreg
 29883   00B77E  0101               	movlb	1	; () banked
 29884   00B780  6FE2               	movwf	startOutput@io& (0+255),b
 29885                           
 29886                           ;../outputs.c: 73:     switch(type) {
 29887   00B782  D018               	goto	l21867
 29888   00B784                     l21849:
 29889                           
 29890                           ; BSR set to: 1
 29891                           ;../outputs.c: 78:             startDigitalOutput(io, act);
 29892   00B784  C1E0  F1D8         	movff	startOutput@act,startDigitalOutput@state
 29893   00B788  51E2               	movf	startOutput@io& (0+255),w,b
 29894   00B78A  EC7F  F02B         	call	_startDigitalOutput
 29895   00B78E  0012               	return	
 29896   00B790                     l21853:
 29897                           
 29898                           ; BSR set to: 1
 29899                           ;../outputs.c: 82:             startBounceOutput(io, act);
 29900   00B790  C1E0  F08D         	movff	startOutput@act,startBounceOutput@action
 29901   00B794  51E2               	movf	startOutput@io& (0+255),w,b
 29902   00B796  EC08  F05A         	call	_startBounceOutput
 29903   00B79A  0012               	return	
 29904   00B79C                     l21857:
 29905                           
 29906                           ; BSR set to: 1
 29907                           ;../outputs.c: 87:             startServoOutput(io, act);
 29908   00B79C  C1E0  F091         	movff	startOutput@act,startServoOutput@action
 29909   00B7A0  51E2               	movf	startOutput@io& (0+255),w,b
 29910   00B7A2  EC45  F04B         	call	_startServoOutput
 29911   00B7A6  0012               	return	
 29912   00B7A8                     l21861:
 29913                           
 29914                           ; BSR set to: 1
 29915                           ;../outputs.c: 92:             startMultiOutput(io, act);
 29916   00B7A8  C1E0  F091         	movff	startOutput@act,startMultiOutput@action
 29917   00B7AC  51E2               	movf	startOutput@io& (0+255),w,b
 29918   00B7AE  EC0B  F051         	call	_startMultiOutput
 29919   00B7B2  0012               	return	
 29920   00B7B4                     l21867:
 29921   00B7B4  0101               	movlb	1	; () banked
 29922   00B7B6  51E1               	movf	startOutput@type& (0+255),w,b
 29923                           
 29924                           ; Switch size 1, requested type "simple"
 29925                           ; Number of cases is 5, Range of values is 0 to 4
 29926                           ; switch strategies available:
 29927                           ; Name         Instructions Cycles
 29928                           ; simple_byte           16     9 (average)
 29929                           ;	Chosen strategy is simple_byte
 29930   00B7B8  0A00               	xorlw	0	; case 0
 29931   00B7BA  B4D8               	btfsc	status,2,c
 29932   00B7BC  0012               	return	
 29933   00B7BE  0A01               	xorlw	1	; case 1
 29934   00B7C0  B4D8               	btfsc	status,2,c
 29935   00B7C2  D7E0               	goto	l21849
 29936   00B7C4  0A03               	xorlw	3	; case 2
 29937   00B7C6  B4D8               	btfsc	status,2,c
 29938   00B7C8  D7E9               	goto	l21857
 29939   00B7CA  0A01               	xorlw	1	; case 3
 29940   00B7CC  B4D8               	btfsc	status,2,c
 29941   00B7CE  D7E0               	goto	l21853
 29942   00B7D0  0A07               	xorlw	7	; case 4
 29943   00B7D2  A4D8               	btfss	status,2,c
 29944   00B7D4  0012               	return	
 29945   00B7D6  D7E8               	goto	l21861
 29946   00B7D8                     __end_of_startOutput:
 29947                           	callstack 0
 29948                           
 29949 ;; *************** function _startServoOutput *****************
 29950 ;; Defined at:
 29951 ;;		line 557 in file "../servo.c"
 29952 ;; Parameters:    Size  Location     Type
 29953 ;;  io              1    wreg     unsigned char 
 29954 ;;  action          1   49[BANK0 ] unsigned char 
 29955 ;; Auto vars:     Size  Location     Type
 29956 ;;  io              1   51[BANK0 ] unsigned char 
 29957 ;; Return value:  Size  Location     Type
 29958 ;;                  1    wreg      void 
 29959 ;; Registers used:
 29960 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29961 ;; Tracked objects:
 29962 ;;		On entry : 0/0
 29963 ;;		On exit  : 0/0
 29964 ;;		Unchanged: 0/0
 29965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29966 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29967 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29968 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29969 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29970 ;;Total ram usage:        3 bytes
 29971 ;; Hardware stack levels used: 1
 29972 ;; Hardware stack levels required when called: 13
 29973 ;; This function calls:
 29974 ;;		_getNV
 29975 ;; This function is called by:
 29976 ;;		_APP_nvValueChanged
 29977 ;;		_startOutput
 29978 ;; This function uses a non-reentrant model
 29979 ;;
 29980                           
 29981                           	psect	text107
 29982   00968A                     __ptext107:
 29983                           	callstack 0
 29984   00968A                     _startServoOutput:
 29985                           	callstack 13
 29986                           
 29987                           ;incstack = 0
 29988                           ;startServoOutput@io stored from wreg
 29989   00968A  0100               	movlb	0	; () banked
 29990   00968C  6F93               	movwf	startServoOutput@io& (0+255),b
 29991                           
 29992                           ;../servo.c: 558:     switch (action) {
 29993   00968E  D017               	goto	l20355
 29994   009690                     l20349:
 29995                           
 29996                           ; BSR set to: 0
 29997                           ;../servo.c: 560:             stepsPerPollSpeed[io] = (uint8_t)getNV((16 + 7*(io) + 5));
 29998   009690  5193               	movf	startServoOutput@io& (0+255),w,b
 29999   009692  0D07               	mullw	7
 30000   009694  50F3               	movf	243,w,c
 30001   009696  0F15               	addlw	21
 30002   009698  ECD2  F05F         	call	_getNV
 30003   00969C  D006               	goto	L9
 30004   00969E                     l20351:
 30005                           
 30006                           ; BSR set to: 0
 30007                           ;../servo.c: 563:             stepsPerPollSpeed[io] = (uint8_t)getNV((16 + 7*(io) + 4));
 30008   00969E  5193               	movf	startServoOutput@io& (0+255),w,b
 30009   0096A0  0D07               	mullw	7
 30010   0096A2  50F3               	movf	243,w,c
 30011   0096A4  0F14               	addlw	20
 30012   0096A6  ECD2  F05F         	call	_getNV
 30013   0096AA                     L9:
 30014   0096AA  0E00               	movlw	low _stepsPerPollSpeed
 30015   0096AC  0100               	movlb	0	; () banked
 30016   0096AE  2593               	addwf	startServoOutput@io& (0+255),w,b
 30017   0096B0  6ED9               	movwf	fsr2l,c
 30018   0096B2  6ADA               	clrf	fsr2h,c
 30019   0096B4  0E01               	movlw	high _stepsPerPollSpeed
 30020   0096B6  22DA               	addwfc	fsr2h,f,c
 30021   0096B8  C08D  FFDF         	movff	?_getNV,indf2
 30022                           
 30023                           ;../servo.c: 564:             break;
 30024   0096BC  D008               	goto	l20357
 30025   0096BE                     l20355:
 30026   0096BE  0100               	movlb	0	; () banked
 30027   0096C0  5191               	movf	startServoOutput@action& (0+255),w,b
 30028                           
 30029                           ; Switch size 1, requested type "simple"
 30030                           ; Number of cases is 2, Range of values is 1 to 2
 30031                           ; switch strategies available:
 30032                           ; Name         Instructions Cycles
 30033                           ; simple_byte            7     4 (average)
 30034                           ;	Chosen strategy is simple_byte
 30035   0096C2  0A01               	xorlw	1	; case 1
 30036   0096C4  B4D8               	btfsc	status,2,c
 30037   0096C6  D7EB               	goto	l20351
 30038   0096C8  0A03               	xorlw	3	; case 2
 30039   0096CA  B4D8               	btfsc	status,2,c
 30040   0096CC  D7E1               	goto	l20349
 30041   0096CE                     l20357:
 30042                           
 30043                           ; BSR set to: 0
 30044                           ;../servo.c: 566:     if (stepsPerPollSpeed[io] > 234) {
 30045   0096CE  0E00               	movlw	low _stepsPerPollSpeed
 30046   0096D0  2593               	addwf	startServoOutput@io& (0+255),w,b
 30047   0096D2  6ED9               	movwf	fsr2l,c
 30048   0096D4  6ADA               	clrf	fsr2h,c
 30049   0096D6  0E01               	movlw	high _stepsPerPollSpeed
 30050   0096D8  22DA               	addwfc	fsr2h,f,c
 30051   0096DA  0EEA               	movlw	234
 30052   0096DC  64DF               	cpfsgt	indf2,c
 30053   0096DE  D00E               	goto	l20361
 30054                           
 30055                           ; BSR set to: 0
 30056                           ;../servo.c: 567:         stepsPerPollSpeed[io] -= 234;
 30057   0096E0  0E00               	movlw	low _stepsPerPollSpeed
 30058   0096E2  2593               	addwf	startServoOutput@io& (0+255),w,b
 30059   0096E4  6ED9               	movwf	fsr2l,c
 30060   0096E6  6ADA               	clrf	fsr2h,c
 30061   0096E8  0E01               	movlw	high _stepsPerPollSpeed
 30062   0096EA  22DA               	addwfc	fsr2h,f,c
 30063   0096EC  0EEA               	movlw	234
 30064   0096EE  5EDF               	subwf	indf2,f,c
 30065                           
 30066                           ;../servo.c: 568:         pollsPerStepSpeed[io] = 0;
 30067   0096F0  0E74               	movlw	low _pollsPerStepSpeed
 30068   0096F2  2593               	addwf	startServoOutput@io& (0+255),w,b
 30069   0096F4  6ED9               	movwf	fsr2l,c
 30070   0096F6  6ADA               	clrf	fsr2h,c
 30071   0096F8  0E02               	movlw	high _pollsPerStepSpeed
 30072   0096FA  D01E               	goto	L10
 30073   0096FC                     l20361:
 30074                           
 30075                           ; BSR set to: 0
 30076                           ;../servo.c: 570:         pollsPerStepSpeed[io] = 234 - stepsPerPollSpeed[io] +1;
 30077   0096FC  0E74               	movlw	low _pollsPerStepSpeed
 30078   0096FE  2593               	addwf	startServoOutput@io& (0+255),w,b
 30079   009700  6ED9               	movwf	fsr2l,c
 30080   009702  6ADA               	clrf	fsr2h,c
 30081   009704  0E02               	movlw	high _pollsPerStepSpeed
 30082   009706  22DA               	addwfc	fsr2h,f,c
 30083   009708  0E00               	movlw	low _stepsPerPollSpeed
 30084   00970A  2593               	addwf	startServoOutput@io& (0+255),w,b
 30085   00970C  6EE1               	movwf	fsr1l,c
 30086   00970E  6AE2               	clrf	fsr1h,c
 30087   009710  0E01               	movlw	high _stepsPerPollSpeed
 30088   009712  22E2               	addwfc	fsr1h,f,c
 30089   009714  50E7               	movf	indf1,w,c
 30090   009716  6F92               	movwf	??_startServoOutput& (0+255),b
 30091   009718  5192               	movf	??_startServoOutput& (0+255),w,b
 30092   00971A  08EB               	sublw	235
 30093   00971C  6EDF               	movwf	indf2,c
 30094                           
 30095                           ; BSR set to: 0
 30096                           ;../servo.c: 571:         pollCount[io] = 1;
 30097   00971E  0E64               	movlw	low _pollCount
 30098   009720  2593               	addwf	startServoOutput@io& (0+255),w,b
 30099   009722  6ED9               	movwf	fsr2l,c
 30100   009724  6ADA               	clrf	fsr2h,c
 30101   009726  0E02               	movlw	high _pollCount
 30102   009728  22DA               	addwfc	fsr2h,f,c
 30103   00972A  0E01               	movlw	1
 30104   00972C  6EDF               	movwf	indf2,c
 30105                           
 30106                           ; BSR set to: 0
 30107                           ;../servo.c: 572:         stepsPerPollSpeed[io] = 0;
 30108   00972E  0E00               	movlw	low _stepsPerPollSpeed
 30109   009730  2593               	addwf	startServoOutput@io& (0+255),w,b
 30110   009732  6ED9               	movwf	fsr2l,c
 30111   009734  6ADA               	clrf	fsr2h,c
 30112   009736  0E01               	movlw	high _stepsPerPollSpeed
 30113   009738                     L10:
 30114   009738  22DA               	addwfc	fsr2h,f,c
 30115   00973A  6ADF               	clrf	indf2,c
 30116                           
 30117                           ; BSR set to: 0
 30118                           ;../servo.c: 574:     servoState[io] = SS_STARTING;
 30119   00973C  0E10               	movlw	low _servoState
 30120   00973E  2593               	addwf	startServoOutput@io& (0+255),w,b
 30121   009740  6ED9               	movwf	fsr2l,c
 30122   009742  6ADA               	clrf	fsr2h,c
 30123   009744  0E01               	movlw	high _servoState
 30124   009746  22DA               	addwfc	fsr2h,f,c
 30125   009748  0E03               	movlw	3
 30126   00974A  6EDF               	movwf	indf2,c
 30127                           
 30128                           ; BSR set to: 0
 30129   00974C  0012               	return		;funcret
 30130   00974E                     __end_of_startServoOutput:
 30131                           	callstack 0
 30132                           
 30133 ;; *************** function _startMultiOutput *****************
 30134 ;; Defined at:
 30135 ;;		line 603 in file "../servo.c"
 30136 ;; Parameters:    Size  Location     Type
 30137 ;;  io              1    wreg     unsigned char 
 30138 ;;  action          1   49[BANK0 ] unsigned char 
 30139 ;; Auto vars:     Size  Location     Type
 30140 ;;  io              1   51[BANK0 ] unsigned char 
 30141 ;; Return value:  Size  Location     Type
 30142 ;;                  1    wreg      void 
 30143 ;; Registers used:
 30144 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 30145 ;; Tracked objects:
 30146 ;;		On entry : 0/0
 30147 ;;		On exit  : 0/0
 30148 ;;		Unchanged: 0/0
 30149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30150 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30151 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30152 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30153 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30154 ;;Total ram usage:        3 bytes
 30155 ;; Hardware stack levels used: 1
 30156 ;; Hardware stack levels required when called: 13
 30157 ;; This function calls:
 30158 ;;		_getNV
 30159 ;; This function is called by:
 30160 ;;		_APP_nvValueChanged
 30161 ;;		_startOutput
 30162 ;; This function uses a non-reentrant model
 30163 ;;
 30164                           
 30165                           	psect	text108
 30166   00A216                     __ptext108:
 30167                           	callstack 0
 30168   00A216                     _startMultiOutput:
 30169                           	callstack 13
 30170                           
 30171                           ; BSR set to: 0
 30172                           ;incstack = 0
 30173                           ;startMultiOutput@io stored from wreg
 30174   00A216  0100               	movlb	0	; () banked
 30175   00A218  6F93               	movwf	startMultiOutput@io& (0+255),b
 30176                           
 30177                           ;../servo.c: 605:     stepsPerPollSpeed[io] = (uint8_t)getNV(3);
 30178   00A21A  0E03               	movlw	3
 30179   00A21C  ECD2  F05F         	call	_getNV
 30180   00A220  0E00               	movlw	low _stepsPerPollSpeed
 30181   00A222  0100               	movlb	0	; () banked
 30182   00A224  2593               	addwf	startMultiOutput@io& (0+255),w,b
 30183   00A226  6ED9               	movwf	fsr2l,c
 30184   00A228  6ADA               	clrf	fsr2h,c
 30185   00A22A  0E01               	movlw	high _stepsPerPollSpeed
 30186   00A22C  22DA               	addwfc	fsr2h,f,c
 30187   00A22E  C08D  FFDF         	movff	?_getNV,indf2
 30188                           
 30189                           ; BSR set to: 0
 30190                           ;../servo.c: 606:     if (stepsPerPollSpeed[io] > 234) {
 30191   00A232  0E00               	movlw	low _stepsPerPollSpeed
 30192   00A234  2593               	addwf	startMultiOutput@io& (0+255),w,b
 30193   00A236  6ED9               	movwf	fsr2l,c
 30194   00A238  6ADA               	clrf	fsr2h,c
 30195   00A23A  0E01               	movlw	high _stepsPerPollSpeed
 30196   00A23C  22DA               	addwfc	fsr2h,f,c
 30197   00A23E  0EEA               	movlw	234
 30198   00A240  64DF               	cpfsgt	indf2,c
 30199   00A242  D00E               	goto	l20425
 30200                           
 30201                           ; BSR set to: 0
 30202                           ;../servo.c: 607:         stepsPerPollSpeed[io] -= 234;
 30203   00A244  0E00               	movlw	low _stepsPerPollSpeed
 30204   00A246  2593               	addwf	startMultiOutput@io& (0+255),w,b
 30205   00A248  6ED9               	movwf	fsr2l,c
 30206   00A24A  6ADA               	clrf	fsr2h,c
 30207   00A24C  0E01               	movlw	high _stepsPerPollSpeed
 30208   00A24E  22DA               	addwfc	fsr2h,f,c
 30209   00A250  0EEA               	movlw	234
 30210   00A252  5EDF               	subwf	indf2,f,c
 30211                           
 30212                           ;../servo.c: 608:         pollsPerStepSpeed[io] = 0;
 30213   00A254  0E74               	movlw	low _pollsPerStepSpeed
 30214   00A256  2593               	addwf	startMultiOutput@io& (0+255),w,b
 30215   00A258  6ED9               	movwf	fsr2l,c
 30216   00A25A  6ADA               	clrf	fsr2h,c
 30217   00A25C  0E02               	movlw	high _pollsPerStepSpeed
 30218   00A25E  D01E               	goto	L11
 30219   00A260                     l20425:
 30220                           
 30221                           ; BSR set to: 0
 30222                           ;../servo.c: 610:         pollsPerStepSpeed[io] = 234 - stepsPerPollSpeed[io] +1;
 30223   00A260  0E74               	movlw	low _pollsPerStepSpeed
 30224   00A262  2593               	addwf	startMultiOutput@io& (0+255),w,b
 30225   00A264  6ED9               	movwf	fsr2l,c
 30226   00A266  6ADA               	clrf	fsr2h,c
 30227   00A268  0E02               	movlw	high _pollsPerStepSpeed
 30228   00A26A  22DA               	addwfc	fsr2h,f,c
 30229   00A26C  0E00               	movlw	low _stepsPerPollSpeed
 30230   00A26E  2593               	addwf	startMultiOutput@io& (0+255),w,b
 30231   00A270  6EE1               	movwf	fsr1l,c
 30232   00A272  6AE2               	clrf	fsr1h,c
 30233   00A274  0E01               	movlw	high _stepsPerPollSpeed
 30234   00A276  22E2               	addwfc	fsr1h,f,c
 30235   00A278  50E7               	movf	indf1,w,c
 30236   00A27A  6F92               	movwf	??_startMultiOutput& (0+255),b
 30237   00A27C  5192               	movf	??_startMultiOutput& (0+255),w,b
 30238   00A27E  08EB               	sublw	235
 30239   00A280  6EDF               	movwf	indf2,c
 30240                           
 30241                           ; BSR set to: 0
 30242                           ;../servo.c: 611:         pollCount[io] = 1;
 30243   00A282  0E64               	movlw	low _pollCount
 30244   00A284  2593               	addwf	startMultiOutput@io& (0+255),w,b
 30245   00A286  6ED9               	movwf	fsr2l,c
 30246   00A288  6ADA               	clrf	fsr2h,c
 30247   00A28A  0E02               	movlw	high _pollCount
 30248   00A28C  22DA               	addwfc	fsr2h,f,c
 30249   00A28E  0E01               	movlw	1
 30250   00A290  6EDF               	movwf	indf2,c
 30251                           
 30252                           ; BSR set to: 0
 30253                           ;../servo.c: 612:         stepsPerPollSpeed[io] = 0;
 30254   00A292  0E00               	movlw	low _stepsPerPollSpeed
 30255   00A294  2593               	addwf	startMultiOutput@io& (0+255),w,b
 30256   00A296  6ED9               	movwf	fsr2l,c
 30257   00A298  6ADA               	clrf	fsr2h,c
 30258   00A29A  0E01               	movlw	high _stepsPerPollSpeed
 30259   00A29C                     L11:
 30260   00A29C  22DA               	addwfc	fsr2h,f,c
 30261   00A29E  6ADF               	clrf	indf2,c
 30262                           
 30263                           ; BSR set to: 0
 30264                           ;../servo.c: 614:     servoState[io] = SS_STARTING;
 30265   00A2A0  0E10               	movlw	low _servoState
 30266   00A2A2  2593               	addwf	startMultiOutput@io& (0+255),w,b
 30267   00A2A4  6ED9               	movwf	fsr2l,c
 30268   00A2A6  6ADA               	clrf	fsr2h,c
 30269   00A2A8  0E01               	movlw	high _servoState
 30270   00A2AA  22DA               	addwfc	fsr2h,f,c
 30271   00A2AC  0E03               	movlw	3
 30272   00A2AE  6EDF               	movwf	indf2,c
 30273                           
 30274                           ; BSR set to: 0
 30275   00A2B0  0012               	return		;funcret
 30276   00A2B2                     __end_of_startMultiOutput:
 30277                           	callstack 0
 30278                           
 30279 ;; *************** function _startDigitalOutput *****************
 30280 ;; Defined at:
 30281 ;;		line 107 in file "../digitalOut.c"
 30282 ;; Parameters:    Size  Location     Type
 30283 ;;  io              1    wreg     unsigned char 
 30284 ;;  state           1   26[BANK1 ] unsigned char 
 30285 ;; Auto vars:     Size  Location     Type
 30286 ;;  io              1   33[BANK1 ] unsigned char 
 30287 ;;  actionState     1   32[BANK1 ] enum E12766
 30288 ;;  pinState        1   31[BANK1 ] enum E12766
 30289 ;; Return value:  Size  Location     Type
 30290 ;;                  1    wreg      void 
 30291 ;; Registers used:
 30292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30293 ;; Tracked objects:
 30294 ;;		On entry : 0/0
 30295 ;;		On exit  : 0/0
 30296 ;;		Unchanged: 0/0
 30297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30298 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30299 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30300 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30301 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30302 ;;Total ram usage:        8 bytes
 30303 ;; Hardware stack levels used: 1
 30304 ;; Hardware stack levels required when called: 19
 30305 ;; This function calls:
 30306 ;;		_getNV
 30307 ;;		_sendInvertedProducedEvent
 30308 ;;		_setOutputPin
 30309 ;;		_writeNVM
 30310 ;; This function is called by:
 30311 ;;		_startOutput
 30312 ;; This function uses a non-reentrant model
 30313 ;;
 30314                           
 30315                           	psect	text109
 30316   0056FE                     __ptext109:
 30317                           	callstack 0
 30318   0056FE                     _startDigitalOutput:
 30319                           	callstack 8
 30320                           
 30321                           ; BSR set to: 0
 30322                           ;incstack = 0
 30323                           ;startDigitalOutput@io stored from wreg
 30324   0056FE  0101               	movlb	1	; () banked
 30325   005700  6FDF               	movwf	startDigitalOutput@io& (0+255),b
 30326                           
 30327                           ;../digitalOut.c: 108:     Boolean pinState;;../digitalOut.c: 109:     Boolean actionSta
      +                          te;;../digitalOut.c: 116:     if (state == 3) {
 30328   005702  0E03               	movlw	3
 30329   005704  0101               	movlb	1	; () banked
 30330   005706  19D8               	xorwf	startDigitalOutput@state& (0+255),w,b
 30331   005708  A4D8               	btfss	status,2,c
 30332   00570A  D058               	goto	l20763
 30333                           
 30334                           ; BSR set to: 1
 30335                           ;../digitalOut.c: 117:         flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3));
 30336   00570C  51DF               	movf	startDigitalOutput@io& (0+255),w,b
 30337   00570E  0D07               	mullw	7
 30338   005710  50F3               	movf	243,w,c
 30339   005712  0F13               	addlw	19
 30340   005714  ECD2  F05F         	call	_getNV
 30341   005718  0E20               	movlw	low _flashDelays
 30342   00571A  0101               	movlb	1	; () banked
 30343   00571C  25DF               	addwf	startDigitalOutput@io& (0+255),w,b
 30344   00571E  6ED9               	movwf	fsr2l,c
 30345   005720  6ADA               	clrf	fsr2h,c
 30346   005722  0E01               	movlw	high _flashDelays
 30347   005724  22DA               	addwfc	fsr2h,f,c
 30348   005726  0100               	movlb	0	; () banked
 30349   005728  C08D  FFDF         	movff	?_getNV,indf2
 30350                           
 30351                           ; BSR set to: 0
 30352                           ;../digitalOut.c: 118:         pulseDelays[io] = 1;
 30353   00572C  0EA4               	movlw	low _pulseDelays
 30354   00572E  0101               	movlb	1	; () banked
 30355   005730  25DF               	addwf	startDigitalOutput@io& (0+255),w,b
 30356   005732  6ED9               	movwf	fsr2l,c
 30357   005734  6ADA               	clrf	fsr2h,c
 30358   005736  0E02               	movlw	high _pulseDelays
 30359   005738  22DA               	addwfc	fsr2h,f,c
 30360   00573A  0E01               	movlw	1
 30361   00573C  6EDF               	movwf	indf2,c
 30362                           
 30363                           ; BSR set to: 1
 30364                           ;../digitalOut.c: 119:         setOutputPin(io, ! getNV((16 + 7*(io) + 1) & 0x20));
 30365   00573E  51DF               	movf	startDigitalOutput@io& (0+255),w,b
 30366   005740  0D07               	mullw	7
 30367   005742  50F3               	movf	243,w,c
 30368   005744  0F11               	addlw	17
 30369   005746  0B20               	andlw	32
 30370   005748  ECD2  F05F         	call	_getNV
 30371   00574C  0100               	movlb	0	; () banked
 30372   00574E  518D               	movf	?_getNV& (0+255),w,b
 30373   005750  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 30374   005752  A4D8               	btfss	status,2,c
 30375   005754  D002               	goto	u21400
 30376   005756  0E01               	movlw	1
 30377   005758  D001               	goto	u21410
 30378   00575A                     u21400:
 30379   00575A  0E00               	movlw	0
 30380   00575C                     u21410:
 30381   00575C  6F91               	movwf	setOutputPin@state& (0+255),b
 30382   00575E  0101               	movlb	1	; () banked
 30383   005760  51DF               	movf	startDigitalOutput@io& (0+255),w,b
 30384   005762  ECBC  F037         	call	_setOutputPin
 30385                           
 30386                           ;../digitalOut.c: 120:         writeNVM(EEPROM_NVM_TYPE, (eeprom_address_t)((eeprom_addr
      +                          ess_t)((0x3FF -8))-25)+io, state);
 30387   005766  0EDE               	movlw	222
 30388   005768  0101               	movlb	1	; () banked
 30389   00576A  25DF               	addwf	startDigitalOutput@io& (0+255),w,b
 30390   00576C  6FD9               	movwf	??_startDigitalOutput& (0+255),b
 30391   00576E  6BDA               	clrf	(??_startDigitalOutput+1)& (0+255),b
 30392   005770  0E03               	movlw	3
 30393   005772  23DA               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
 30394   005774  C1D9  F0A4         	movff	??_startDigitalOutput,writeNVM@index
 30395   005778  C1DA  F0A5         	movff	??_startDigitalOutput+1,writeNVM@index+1
 30396   00577C  0100               	movlb	0	; () banked
 30397   00577E  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 30398   005780  C1D8  F0A7         	movff	startDigitalOutput@state,writeNVM@value
 30399   005784  0E00               	movlw	0
 30400   005786  ECC1  F05D         	call	_writeNVM
 30401                           
 30402                           ;../digitalOut.c: 121:         sendInvertedProducedEvent(((8 + 4*(io))+0), EVENT_ON,
 30403   00578A  0E01               	movlw	1
 30404   00578C  0101               	movlb	1	; () banked
 30405   00578E  6FD0               	movwf	sendInvertedProducedEvent@state& (0+255),b
 30406   005790  51DF               	movf	startDigitalOutput@io& (0+255),w,b
 30407   005792  0D07               	mullw	7
 30408   005794  50F3               	movf	243,w,c
 30409   005796  0F11               	addlw	17
 30410   005798  ECD2  F05F         	call	_getNV
 30411   00579C  0100               	movlb	0	; () banked
 30412   00579E  518D               	movf	?_getNV& (0+255),w,b
 30413   0057A0  0B40               	andlw	64
 30414   0057A2  0101               	movlb	1	; () banked
 30415   0057A4  6FD1               	movwf	sendInvertedProducedEvent@invert& (0+255),b
 30416   0057A6  0E01               	movlw	1
 30417   0057A8  6FD2               	movwf	sendInvertedProducedEvent@can_send_on& (0+255),b
 30418   0057AA  0E01               	movlw	1
 30419   0057AC  6FD3               	movwf	sendInvertedProducedEvent@can_send_off& (0+255),b
 30420   0057AE  51DF               	movf	startDigitalOutput@io& (0+255),w,b
 30421   0057B0  0D04               	mullw	4
 30422   0057B2  50F3               	movf	243,w,c
 30423   0057B4  0F08               	addlw	8
 30424   0057B6  EC58  F05E         	call	_sendInvertedProducedEvent
 30425   0057BA  0012               	return	
 30426   0057BC                     l20763:
 30427                           
 30428                           ; BSR set to: 1
 30429                           ;../digitalOut.c: 125:     flashDelays[io] = 0;
 30430   0057BC  0E20               	movlw	low _flashDelays
 30431   0057BE  25DF               	addwf	startDigitalOutput@io& (0+255),w,b
 30432   0057C0  6ED9               	movwf	fsr2l,c
 30433   0057C2  6ADA               	clrf	fsr2h,c
 30434   0057C4  0E01               	movlw	high _flashDelays
 30435   0057C6  22DA               	addwfc	fsr2h,f,c
 30436   0057C8  6ADF               	clrf	indf2,c
 30437                           
 30438                           ; BSR set to: 1
 30439                           ;../digitalOut.c: 127:     actionState = (state == 1);
 30440   0057CA  05D8               	decf	startDigitalOutput@state& (0+255),w,b
 30441   0057CC  A4D8               	btfss	status,2,c
 30442   0057CE  D002               	goto	u21420
 30443   0057D0  0E01               	movlw	1
 30444   0057D2  D001               	goto	u21430
 30445   0057D4                     u21420:
 30446   0057D4  0E00               	movlw	0
 30447   0057D6                     u21430:
 30448   0057D6  6FDE               	movwf	startDigitalOutput@actionState& (0+255),b
 30449                           
 30450                           ; BSR set to: 1
 30451                           ;../digitalOut.c: 130:     if (getNV((16 + 7*(io) + 1)) & 0x01) {
 30452   0057D8  51DF               	movf	startDigitalOutput@io& (0+255),w,b
 30453   0057DA  0D07               	mullw	7
 30454   0057DC  50F3               	movf	243,w,c
 30455   0057DE  0F11               	addlw	17
 30456   0057E0  ECD2  F05F         	call	_getNV
 30457   0057E4  0100               	movlb	0	; () banked
 30458   0057E6  A18D               	btfss	?_getNV& (0+255),0,b
 30459   0057E8  D008               	goto	l260
 30460                           
 30461                           ; BSR set to: 0
 30462                           ;../digitalOut.c: 131:         actionState = !actionState;
 30463   0057EA  0101               	movlb	1	; () banked
 30464   0057EC  51DE               	movf	startDigitalOutput@actionState& (0+255),w,b
 30465   0057EE  A4D8               	btfss	status,2,c
 30466   0057F0  D002               	goto	u21450
 30467   0057F2  0E01               	movlw	1
 30468   0057F4  D001               	goto	u21460
 30469   0057F6                     u21450:
 30470   0057F6  0E00               	movlw	0
 30471   0057F8                     u21460:
 30472   0057F8  6FDE               	movwf	startDigitalOutput@actionState& (0+255),b
 30473   0057FA                     l260:
 30474                           
 30475                           ;../digitalOut.c: 135:     if (( ! actionState) && getNV((16 + 7*(io) + 2))) {
 30476   0057FA  0101               	movlb	1	; () banked
 30477   0057FC  51DE               	movf	startDigitalOutput@actionState& (0+255),w,b
 30478   0057FE  A4D8               	btfss	status,2,c
 30479   005800  D015               	goto	l20777
 30480                           
 30481                           ; BSR set to: 1
 30482   005802  51DF               	movf	startDigitalOutput@io& (0+255),w,b
 30483   005804  0D07               	mullw	7
 30484   005806  50F3               	movf	243,w,c
 30485   005808  0F12               	addlw	18
 30486   00580A  ECD2  F05F         	call	_getNV
 30487   00580E  0100               	movlb	0	; () banked
 30488   005810  518D               	movf	?_getNV& (0+255),w,b
 30489   005812  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 30490   005814  B4D8               	btfsc	status,2,c
 30491   005816  D00A               	goto	l20777
 30492                           
 30493                           ; BSR set to: 0
 30494                           ;../digitalOut.c: 136:         pulseDelays[io] = 1;
 30495   005818  0EA4               	movlw	low _pulseDelays
 30496   00581A  0101               	movlb	1	; () banked
 30497   00581C  25DF               	addwf	startDigitalOutput@io& (0+255),w,b
 30498   00581E  6ED9               	movwf	fsr2l,c
 30499   005820  6ADA               	clrf	fsr2h,c
 30500   005822  0E02               	movlw	high _pulseDelays
 30501   005824  22DA               	addwfc	fsr2h,f,c
 30502   005826  0E01               	movlw	1
 30503   005828  6EDF               	movwf	indf2,c
 30504   00582A  0012               	return	
 30505   00582C                     l20777:
 30506                           
 30507                           ;../digitalOut.c: 142:     if ((actionState) && getNV((16 + 7*(io) + 2)) && (pulseDelays
      +                          [io] == 0)) {
 30508   00582C  0101               	movlb	1	; () banked
 30509   00582E  51DE               	movf	startDigitalOutput@actionState& (0+255),w,b
 30510   005830  B4D8               	btfsc	status,2,c
 30511   005832  D038               	goto	l20787
 30512                           
 30513                           ; BSR set to: 1
 30514   005834  51DF               	movf	startDigitalOutput@io& (0+255),w,b
 30515   005836  0D07               	mullw	7
 30516   005838  50F3               	movf	243,w,c
 30517   00583A  0F12               	addlw	18
 30518   00583C  ECD2  F05F         	call	_getNV
 30519   005840  0100               	movlb	0	; () banked
 30520   005842  518D               	movf	?_getNV& (0+255),w,b
 30521   005844  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 30522   005846  B4D8               	btfsc	status,2,c
 30523   005848  D02D               	goto	l20787
 30524                           
 30525                           ; BSR set to: 0
 30526   00584A  0EA4               	movlw	low _pulseDelays
 30527   00584C  0101               	movlb	1	; () banked
 30528   00584E  25DF               	addwf	startDigitalOutput@io& (0+255),w,b
 30529   005850  6ED9               	movwf	fsr2l,c
 30530   005852  6ADA               	clrf	fsr2h,c
 30531   005854  0E02               	movlw	high _pulseDelays
 30532   005856  22DA               	addwfc	fsr2h,f,c
 30533   005858  50DF               	movf	indf2,w,c
 30534   00585A  A4D8               	btfss	status,2,c
 30535   00585C  D023               	goto	l20787
 30536                           
 30537                           ; BSR set to: 1
 30538                           ;../digitalOut.c: 143:         pulseDelays[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 30539   00585E  51DF               	movf	startDigitalOutput@io& (0+255),w,b
 30540   005860  0D07               	mullw	7
 30541   005862  50F3               	movf	243,w,c
 30542   005864  0F12               	addlw	18
 30543   005866  ECD2  F05F         	call	_getNV
 30544   00586A  0EA4               	movlw	low _pulseDelays
 30545   00586C  0101               	movlb	1	; () banked
 30546   00586E  25DF               	addwf	startDigitalOutput@io& (0+255),w,b
 30547   005870  6ED9               	movwf	fsr2l,c
 30548   005872  6ADA               	clrf	fsr2h,c
 30549   005874  0E02               	movlw	high _pulseDelays
 30550   005876  22DA               	addwfc	fsr2h,f,c
 30551   005878  0100               	movlb	0	; () banked
 30552   00587A  C08D  FFDF         	movff	?_getNV,indf2
 30553                           
 30554                           ; BSR set to: 0
 30555                           ;../digitalOut.c: 146:         writeNVM(EEPROM_NVM_TYPE, ((eeprom_address_t)((0x3FF -8))
      +                          -25)+io, 2);
 30556   00587E  0EDE               	movlw	222
 30557   005880  0101               	movlb	1	; () banked
 30558   005882  25DF               	addwf	startDigitalOutput@io& (0+255),w,b
 30559   005884  6FD9               	movwf	??_startDigitalOutput& (0+255),b
 30560   005886  6BDA               	clrf	(??_startDigitalOutput+1)& (0+255),b
 30561   005888  0E03               	movlw	3
 30562   00588A  23DA               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
 30563   00588C  C1D9  F0A4         	movff	??_startDigitalOutput,writeNVM@index
 30564   005890  C1DA  F0A5         	movff	??_startDigitalOutput+1,writeNVM@index+1
 30565   005894  0100               	movlb	0	; () banked
 30566   005896  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 30567   005898  0E02               	movlw	2
 30568   00589A  6FA7               	movwf	writeNVM@value& (0+255),b
 30569   00589C  0E00               	movlw	0
 30570   00589E  ECC1  F05D         	call	_writeNVM
 30571                           
 30572                           ;../digitalOut.c: 147:     } else {
 30573   0058A2  D025               	goto	l20797
 30574   0058A4                     l20787:
 30575                           
 30576                           ;../digitalOut.c: 148:         pulseDelays[io] = 1;
 30577   0058A4  0EA4               	movlw	low _pulseDelays
 30578   0058A6  0101               	movlb	1	; () banked
 30579   0058A8  25DF               	addwf	startDigitalOutput@io& (0+255),w,b
 30580   0058AA  6ED9               	movwf	fsr2l,c
 30581   0058AC  6ADA               	clrf	fsr2h,c
 30582   0058AE  0E02               	movlw	high _pulseDelays
 30583   0058B0  22DA               	addwfc	fsr2h,f,c
 30584   0058B2  0E01               	movlw	1
 30585   0058B4  6EDF               	movwf	indf2,c
 30586                           
 30587                           ; BSR set to: 1
 30588                           ;../digitalOut.c: 149:         writeNVM(EEPROM_NVM_TYPE, ((eeprom_address_t)((0x3FF -8))
      +                          -25)+io, actionState?1:2);
 30589   0058B6  51DE               	movf	startDigitalOutput@actionState& (0+255),w,b
 30590   0058B8  A4D8               	btfss	status,2,c
 30591   0058BA  D004               	goto	l20793
 30592                           
 30593                           ; BSR set to: 1
 30594   0058BC  0E00               	movlw	0
 30595   0058BE  6FDC               	movwf	(_startDigitalOutput$808+1)& (0+255),b
 30596   0058C0  0E02               	movlw	2
 30597   0058C2  D003               	goto	L12
 30598   0058C4                     l20793:
 30599                           
 30600                           ; BSR set to: 1
 30601   0058C4  0E00               	movlw	0
 30602   0058C6  6FDC               	movwf	(_startDigitalOutput$808+1)& (0+255),b
 30603   0058C8  0E01               	movlw	1
 30604   0058CA                     L12:
 30605   0058CA  6FDB               	movwf	_startDigitalOutput$808& (0+255),b
 30606                           
 30607                           ; BSR set to: 1
 30608   0058CC  0EDE               	movlw	222
 30609   0058CE  25DF               	addwf	startDigitalOutput@io& (0+255),w,b
 30610   0058D0  6FD9               	movwf	??_startDigitalOutput& (0+255),b
 30611   0058D2  6BDA               	clrf	(??_startDigitalOutput+1)& (0+255),b
 30612   0058D4  0E03               	movlw	3
 30613   0058D6  23DA               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
 30614   0058D8  C1D9  F0A4         	movff	??_startDigitalOutput,writeNVM@index
 30615   0058DC  C1DA  F0A5         	movff	??_startDigitalOutput+1,writeNVM@index+1
 30616   0058E0  0100               	movlb	0	; () banked
 30617   0058E2  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 30618   0058E4  C1DB  F0A7         	movff	_startDigitalOutput$808,writeNVM@value
 30619   0058E8  0E00               	movlw	0
 30620   0058EA  ECC1  F05D         	call	_writeNVM
 30621   0058EE                     l20797:
 30622                           
 30623                           ;../digitalOut.c: 152:     pinState = actionState;
 30624   0058EE  C1DE  F1DD         	movff	startDigitalOutput@actionState,startDigitalOutput@pinState
 30625                           
 30626                           ;../digitalOut.c: 153:     if (getNV((16 + 7*(io) + 1)) & 0x20) {
 30627   0058F2  0101               	movlb	1	; () banked
 30628   0058F4  51DF               	movf	startDigitalOutput@io& (0+255),w,b
 30629   0058F6  0D07               	mullw	7
 30630   0058F8  50F3               	movf	243,w,c
 30631   0058FA  0F11               	addlw	17
 30632   0058FC  ECD2  F05F         	call	_getNV
 30633   005900  0100               	movlb	0	; () banked
 30634   005902  AB8D               	btfss	?_getNV& (0+255),5,b
 30635   005904  D008               	goto	l20803
 30636                           
 30637                           ; BSR set to: 0
 30638                           ;../digitalOut.c: 154:         pinState = !pinState;
 30639   005906  0101               	movlb	1	; () banked
 30640   005908  51DD               	movf	startDigitalOutput@pinState& (0+255),w,b
 30641   00590A  A4D8               	btfss	status,2,c
 30642   00590C  D002               	goto	u21540
 30643   00590E  0E01               	movlw	1
 30644   005910  D001               	goto	u21550
 30645   005912                     u21540:
 30646   005912  0E00               	movlw	0
 30647   005914                     u21550:
 30648   005914  6FDD               	movwf	startDigitalOutput@pinState& (0+255),b
 30649   005916                     l20803:
 30650                           
 30651                           ;../digitalOut.c: 156:     setOutputPin(io, pinState);
 30652   005916  C1DD  F091         	movff	startDigitalOutput@pinState,setOutputPin@state
 30653   00591A  0101               	movlb	1	; () banked
 30654   00591C  51DF               	movf	startDigitalOutput@io& (0+255),w,b
 30655   00591E  ECBC  F037         	call	_setOutputPin
 30656                           
 30657                           ;../digitalOut.c: 161:     if (getNV((16 + 7*(io) + 1)) & 0x08) {
 30658   005922  0101               	movlb	1	; () banked
 30659   005924  51DF               	movf	startDigitalOutput@io& (0+255),w,b
 30660   005926  0D07               	mullw	7
 30661   005928  50F3               	movf	243,w,c
 30662   00592A  0F11               	addlw	17
 30663   00592C  ECD2  F05F         	call	_getNV
 30664   005930  0100               	movlb	0	; () banked
 30665   005932  A78D               	btfss	?_getNV& (0+255),3,b
 30666   005934  D021               	goto	l20811
 30667                           
 30668                           ; BSR set to: 0
 30669                           ;../digitalOut.c: 162:         if (actionState) {
 30670   005936  0101               	movlb	1	; () banked
 30671   005938  51DE               	movf	startDigitalOutput@actionState& (0+255),w,b
 30672   00593A  B4D8               	btfsc	status,2,c
 30673   00593C  0012               	return	
 30674                           
 30675                           ; BSR set to: 1
 30676                           ;../digitalOut.c: 165:             sendInvertedProducedEvent(((8 + 4*(io))+0), actionSta
      +                          te?EVENT_ON:EVENT_OFF,
 30677   00593E  51DE               	movf	startDigitalOutput@actionState& (0+255),w,b
 30678   005940  B4D8               	btfsc	status,2,c
 30679   005942  D002               	goto	u21580
 30680   005944  0E01               	movlw	1
 30681   005946  D001               	goto	u21590
 30682   005948                     u21580:
 30683   005948  0E00               	movlw	0
 30684   00594A                     u21590:
 30685   00594A  6FD0               	movwf	sendInvertedProducedEvent@state& (0+255),b
 30686   00594C  51DF               	movf	startDigitalOutput@io& (0+255),w,b
 30687   00594E  0D07               	mullw	7
 30688   005950  50F3               	movf	243,w,c
 30689   005952  0F11               	addlw	17
 30690   005954  ECD2  F05F         	call	_getNV
 30691   005958  0100               	movlb	0	; () banked
 30692   00595A  518D               	movf	?_getNV& (0+255),w,b
 30693   00595C  0B40               	andlw	64
 30694   00595E  0101               	movlb	1	; () banked
 30695   005960  6FD1               	movwf	sendInvertedProducedEvent@invert& (0+255),b
 30696   005962  0E01               	movlw	1
 30697   005964  6FD2               	movwf	sendInvertedProducedEvent@can_send_on& (0+255),b
 30698   005966  0E01               	movlw	1
 30699   005968  6FD3               	movwf	sendInvertedProducedEvent@can_send_off& (0+255),b
 30700   00596A  51DF               	movf	startDigitalOutput@io& (0+255),w,b
 30701   00596C  0D04               	mullw	4
 30702   00596E  50F3               	movf	243,w,c
 30703   005970  0F08               	addlw	8
 30704   005972  EC58  F05E         	call	_sendInvertedProducedEvent
 30705   005976  0012               	return	
 30706   005978                     l20811:
 30707                           
 30708                           ; BSR set to: 0
 30709                           ;../digitalOut.c: 170:         sendInvertedProducedEvent(((8 + 4*(io))+0), actionState?E
      +                          VENT_ON:EVENT_OFF,
 30710   005978  0101               	movlb	1	; () banked
 30711   00597A  51DE               	movf	startDigitalOutput@actionState& (0+255),w,b
 30712   00597C  B4D8               	btfsc	status,2,c
 30713   00597E  D002               	goto	u21600
 30714   005980  0E01               	movlw	1
 30715   005982  D001               	goto	u21610
 30716   005984                     u21600:
 30717   005984  0E00               	movlw	0
 30718   005986                     u21610:
 30719   005986  6FD0               	movwf	sendInvertedProducedEvent@state& (0+255),b
 30720   005988  51DF               	movf	startDigitalOutput@io& (0+255),w,b
 30721   00598A  0D07               	mullw	7
 30722   00598C  50F3               	movf	243,w,c
 30723   00598E  0F11               	addlw	17
 30724   005990  ECD2  F05F         	call	_getNV
 30725   005994  0100               	movlb	0	; () banked
 30726   005996  518D               	movf	?_getNV& (0+255),w,b
 30727   005998  0B40               	andlw	64
 30728   00599A  0101               	movlb	1	; () banked
 30729   00599C  6FD1               	movwf	sendInvertedProducedEvent@invert& (0+255),b
 30730   00599E  0E01               	movlw	1
 30731   0059A0  6FD2               	movwf	sendInvertedProducedEvent@can_send_on& (0+255),b
 30732   0059A2  0E01               	movlw	1
 30733   0059A4  6FD3               	movwf	sendInvertedProducedEvent@can_send_off& (0+255),b
 30734   0059A6  51DF               	movf	startDigitalOutput@io& (0+255),w,b
 30735   0059A8  0D04               	mullw	4
 30736   0059AA  50F3               	movf	243,w,c
 30737   0059AC  0F08               	addlw	8
 30738   0059AE  EC58  F05E         	call	_sendInvertedProducedEvent
 30739   0059B2  0012               	return		;funcret
 30740   0059B4                     __end_of_startDigitalOutput:
 30741                           	callstack 0
 30742                           
 30743 ;; *************** function _sendInvertedProducedEvent *****************
 30744 ;; Defined at:
 30745 ;;		line 362 in file "../universalEvents.c"
 30746 ;; Parameters:    Size  Location     Type
 30747 ;;  happening       1    wreg     unsigned char 
 30748 ;;  state           1   18[BANK1 ] enum E12787
 30749 ;;  invert          1   19[BANK1 ] enum E12767
 30750 ;;  can_send_on     1   20[BANK1 ] enum E12767
 30751 ;;  can_send_off    1   21[BANK1 ] enum E12767
 30752 ;; Auto vars:     Size  Location     Type
 30753 ;;  happening       1   22[BANK1 ] unsigned char 
 30754 ;;  state_to_sen    1   25[BANK1 ] enum E12787
 30755 ;; Return value:  Size  Location     Type
 30756 ;;                  1    wreg      enum E12766
 30757 ;; Registers used:
 30758 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30759 ;; Tracked objects:
 30760 ;;		On entry : 0/0
 30761 ;;		On exit  : 0/0
 30762 ;;		Unchanged: 0/0
 30763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30764 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30765 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30767 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30768 ;;Total ram usage:        8 bytes
 30769 ;; Hardware stack levels used: 1
 30770 ;; Hardware stack levels required when called: 18
 30771 ;; This function calls:
 30772 ;;		_sendProducedEvent
 30773 ;; This function is called by:
 30774 ;;		_startDigitalOutput
 30775 ;;		_sodTRCallback
 30776 ;; This function uses a non-reentrant model
 30777 ;;
 30778                           
 30779                           	psect	text110
 30780   00BCB0                     __ptext110:
 30781                           	callstack 0
 30782   00BCB0                     _sendInvertedProducedEvent:
 30783                           	callstack 9
 30784                           
 30785                           ;incstack = 0
 30786                           ;sendInvertedProducedEvent@happening stored from wreg
 30787   00BCB0  0101               	movlb	1	; () banked
 30788   00BCB2  6FD4               	movwf	sendInvertedProducedEvent@happening& (0+255),b
 30789                           
 30790                           ;../universalEvents.c: 363:  EventState state_to_send = invert?!state:state;
 30791   00BCB4  0101               	movlb	1	; () banked
 30792   00BCB6  51D1               	movf	sendInvertedProducedEvent@invert& (0+255),w,b
 30793   00BCB8  A4D8               	btfss	status,2,c
 30794   00BCBA  D003               	goto	l20237
 30795                           
 30796                           ; BSR set to: 1
 30797   00BCBC  C1D0  F1D5         	movff	sendInvertedProducedEvent@state,_sendInvertedProducedEvent$1404
 30798   00BCC0  D007               	goto	L13
 30799   00BCC2                     l20237:
 30800                           
 30801                           ; BSR set to: 1
 30802   00BCC2  51D0               	movf	sendInvertedProducedEvent@state& (0+255),w,b
 30803   00BCC4  A4D8               	btfss	status,2,c
 30804   00BCC6  D002               	goto	u20690
 30805   00BCC8  0E01               	movlw	1
 30806   00BCCA  D001               	goto	u20700
 30807   00BCCC                     u20690:
 30808   00BCCC  0E00               	movlw	0
 30809   00BCCE                     u20700:
 30810   00BCCE  6FD5               	movwf	_sendInvertedProducedEvent$1404& (0+255),b
 30811   00BCD0                     L13:
 30812   00BCD0  6BD6               	clrf	(_sendInvertedProducedEvent$1404+1)& (0+255),b
 30813                           
 30814                           ; BSR set to: 1
 30815   00BCD2  C1D5  F1D7         	movff	_sendInvertedProducedEvent$1404,sendInvertedProducedEvent@state_to_send
 30816                           
 30817                           ;../universalEvents.c: 364:  if ((state_to_send && can_send_on) || (!state_to_send && ca
      +                          n_send_off)) {
 30818   00BCD6  51D7               	movf	sendInvertedProducedEvent@state_to_send& (0+255),w,b
 30819   00BCD8  B4D8               	btfsc	status,2,c
 30820   00BCDA  D003               	goto	u20720
 30821                           
 30822                           ; BSR set to: 1
 30823   00BCDC  51D2               	movf	sendInvertedProducedEvent@can_send_on& (0+255),w,b
 30824   00BCDE  A4D8               	btfss	status,2,c
 30825   00BCE0  D006               	goto	u20740
 30826   00BCE2                     u20720:
 30827                           
 30828                           ; BSR set to: 1
 30829   00BCE2  51D7               	movf	sendInvertedProducedEvent@state_to_send& (0+255),w,b
 30830   00BCE4  A4D8               	btfss	status,2,c
 30831   00BCE6  0012               	return	
 30832                           
 30833                           ; BSR set to: 1
 30834   00BCE8  51D3               	movf	sendInvertedProducedEvent@can_send_off& (0+255),w,b
 30835   00BCEA  B4D8               	btfsc	status,2,c
 30836   00BCEC  0012               	return	
 30837   00BCEE                     u20740:
 30838                           
 30839                           ; BSR set to: 1
 30840                           ;../universalEvents.c: 365:   return sendProducedEvent(happening, state_to_send);;	Retur
      +                          n value of _sendInvertedProducedEvent is never used
 30841   00BCEE  C1D7  F0A8         	movff	sendInvertedProducedEvent@state_to_send,sendProducedEvent@onOff
 30842   00BCF2  51D4               	movf	sendInvertedProducedEvent@happening& (0+255),w,b
 30843   00BCF4  EC64  F04C         	call	_sendProducedEvent
 30844   00BCF8  0012               	return		;funcret
 30845   00BCFA                     __end_of_sendInvertedProducedEvent:
 30846                           	callstack 0
 30847                           
 30848 ;; *************** function _startBounceOutput *****************
 30849 ;; Defined at:
 30850 ;;		line 585 in file "../servo.c"
 30851 ;; Parameters:    Size  Location     Type
 30852 ;;  io              1    wreg     unsigned char 
 30853 ;;  action          1   45[BANK0 ] unsigned char 
 30854 ;; Auto vars:     Size  Location     Type
 30855 ;;  io              1   46[BANK0 ] unsigned char 
 30856 ;; Return value:  Size  Location     Type
 30857 ;;                  1    wreg      void 
 30858 ;; Registers used:
 30859 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30860 ;; Tracked objects:
 30861 ;;		On entry : 0/0
 30862 ;;		On exit  : 0/0
 30863 ;;		Unchanged: 0/0
 30864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30865 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30866 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30868 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30869 ;;Total ram usage:        2 bytes
 30870 ;; Hardware stack levels used: 1
 30871 ;; Hardware stack levels required when called: 12
 30872 ;; This function calls:
 30873 ;;		Nothing
 30874 ;; This function is called by:
 30875 ;;		_APP_nvValueChanged
 30876 ;;		_startOutput
 30877 ;; This function uses a non-reentrant model
 30878 ;;
 30879                           
 30880                           	psect	text111
 30881   00B410                     __ptext111:
 30882                           	callstack 0
 30883   00B410                     _startBounceOutput:
 30884                           	callstack 14
 30885                           
 30886                           ;incstack = 0
 30887                           ;startBounceOutput@io stored from wreg
 30888   00B410  0100               	movlb	0	; () banked
 30889   00B412  6F8E               	movwf	startBounceOutput@io& (0+255),b
 30890                           
 30891                           ;../servo.c: 586:     switch (action) {
 30892   00B414  D018               	goto	l20397
 30893   00B416                     l20391:
 30894                           
 30895                           ; BSR set to: 0
 30896                           ;../servo.c: 588:             speed[io] = 0;
 30897   00B416  518E               	movf	startBounceOutput@io& (0+255),w,b
 30898   00B418  0D02               	mullw	2
 30899   00B41A  0E00               	movlw	low _speed
 30900   00B41C  24F3               	addwf	243,w,c
 30901   00B41E  6ED9               	movwf	fsr2l,c
 30902   00B420  0E02               	movlw	high _speed
 30903   00B422  20F4               	addwfc	prodh,w,c
 30904   00B424  6EDA               	movwf	fsr2h,c
 30905   00B426  6ADE               	clrf	postinc2,c
 30906   00B428  6ADD               	clrf	postdec2,c
 30907                           
 30908                           ;../servo.c: 589:             break;
 30909   00B42A  D015               	goto	l20399
 30910   00B42C                     l20393:
 30911                           
 30912                           ; BSR set to: 0
 30913                           ;../servo.c: 591:             speed[io] = 12;
 30914   00B42C  518E               	movf	startBounceOutput@io& (0+255),w,b
 30915   00B42E  0D02               	mullw	2
 30916   00B430  0E00               	movlw	low _speed
 30917   00B432  24F3               	addwf	243,w,c
 30918   00B434  6ED9               	movwf	fsr2l,c
 30919   00B436  0E02               	movlw	high _speed
 30920   00B438  20F4               	addwfc	prodh,w,c
 30921   00B43A  6EDA               	movwf	fsr2h,c
 30922   00B43C  0E0C               	movlw	12
 30923   00B43E  6EDE               	movwf	postinc2,c
 30924   00B440  0E00               	movlw	0
 30925   00B442  6EDD               	movwf	postdec2,c
 30926                           
 30927                           ;../servo.c: 592:             break;
 30928   00B444  D008               	goto	l20399
 30929   00B446                     l20397:
 30930   00B446  0100               	movlb	0	; () banked
 30931   00B448  518D               	movf	startBounceOutput@action& (0+255),w,b
 30932                           
 30933                           ; Switch size 1, requested type "simple"
 30934                           ; Number of cases is 2, Range of values is 1 to 2
 30935                           ; switch strategies available:
 30936                           ; Name         Instructions Cycles
 30937                           ; simple_byte            7     4 (average)
 30938                           ;	Chosen strategy is simple_byte
 30939   00B44A  0A01               	xorlw	1	; case 1
 30940   00B44C  B4D8               	btfsc	status,2,c
 30941   00B44E  D7EE               	goto	l20393
 30942   00B450  0A03               	xorlw	3	; case 2
 30943   00B452  B4D8               	btfsc	status,2,c
 30944   00B454  D7E0               	goto	l20391
 30945   00B456                     l20399:
 30946                           
 30947                           ; BSR set to: 0
 30948                           ;../servo.c: 594:     servoState[io] = SS_STARTING;
 30949   00B456  0E10               	movlw	low _servoState
 30950   00B458  258E               	addwf	startBounceOutput@io& (0+255),w,b
 30951   00B45A  6ED9               	movwf	fsr2l,c
 30952   00B45C  6ADA               	clrf	fsr2h,c
 30953   00B45E  0E01               	movlw	high _servoState
 30954   00B460  22DA               	addwfc	fsr2h,f,c
 30955   00B462  0E03               	movlw	3
 30956   00B464  6EDF               	movwf	indf2,c
 30957                           
 30958                           ;../servo.c: 595:     loopCount[io] = 0;
 30959   00B466  0E54               	movlw	low _loopCount
 30960   00B468  258E               	addwf	startBounceOutput@io& (0+255),w,b
 30961   00B46A  6ED9               	movwf	fsr2l,c
 30962   00B46C  6ADA               	clrf	fsr2h,c
 30963   00B46E  0E02               	movlw	high _loopCount
 30964   00B470  22DA               	addwfc	fsr2h,f,c
 30965   00B472  6ADF               	clrf	indf2,c
 30966                           
 30967                           ; BSR set to: 0
 30968   00B474  0012               	return		;funcret
 30969   00B476                     __end_of_startBounceOutput:
 30970                           	callstack 0
 30971                           
 30972 ;; *************** function _setOutputState *****************
 30973 ;; Defined at:
 30974 ;;		line 110 in file "../outputs.c"
 30975 ;; Parameters:    Size  Location     Type
 30976 ;;  io              1    wreg     unsigned char 
 30977 ;;  act             1   51[BANK0 ] unsigned char 
 30978 ;;  type            1   52[BANK0 ] unsigned char 
 30979 ;; Auto vars:     Size  Location     Type
 30980 ;;  io              1   53[BANK0 ] unsigned char 
 30981 ;; Return value:  Size  Location     Type
 30982 ;;                  1    wreg      void 
 30983 ;; Registers used:
 30984 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30985 ;; Tracked objects:
 30986 ;;		On entry : 0/0
 30987 ;;		On exit  : 0/0
 30988 ;;		Unchanged: 0/0
 30989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30990 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30991 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30993 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30994 ;;Total ram usage:        3 bytes
 30995 ;; Hardware stack levels used: 1
 30996 ;; Hardware stack levels required when called: 14
 30997 ;; This function calls:
 30998 ;;		_setBounceState
 30999 ;;		_setMultiState
 31000 ;;		_setServoState
 31001 ;; This function is called by:
 31002 ;;		_processActions
 31003 ;; This function uses a non-reentrant model
 31004 ;;
 31005                           
 31006                           	psect	text112
 31007   00B992                     __ptext112:
 31008                           	callstack 0
 31009   00B992                     _setOutputState:
 31010                           	callstack 14
 31011                           
 31012                           ; BSR set to: 0
 31013                           ;incstack = 0
 31014                           ;setOutputState@io stored from wreg
 31015   00B992  0100               	movlb	0	; () banked
 31016   00B994  6F95               	movwf	setOutputState@io& (0+255),b
 31017                           
 31018                           ;../outputs.c: 111:     switch(type) {
 31019   00B996  D012               	goto	l21817
 31020   00B998                     l21803:
 31021                           
 31022                           ; BSR set to: 0
 31023                           ;../outputs.c: 124:             setBounceState(io, act);
 31024   00B998  C093  F091         	movff	setOutputState@act,setBounceState@action
 31025   00B99C  5195               	movf	setOutputState@io& (0+255),w,b
 31026   00B99E  EC1E  F04E         	call	_setBounceState
 31027   00B9A2  0012               	return	
 31028   00B9A4                     l21807:
 31029                           
 31030                           ; BSR set to: 0
 31031                           ;../outputs.c: 129:             setServoState(io, act);
 31032   00B9A4  C093  F091         	movff	setOutputState@act,setServoState@action
 31033   00B9A8  5195               	movf	setOutputState@io& (0+255),w,b
 31034   00B9AA  ECC8  F04D         	call	_setServoState
 31035   00B9AE  0012               	return	
 31036   00B9B0                     l21811:
 31037                           
 31038                           ; BSR set to: 0
 31039                           ;../outputs.c: 134:             setMultiState(io, act);
 31040   00B9B0  C093  F091         	movff	setOutputState@act,setMultiState@action
 31041   00B9B4  5195               	movf	setOutputState@io& (0+255),w,b
 31042   00B9B6  EC18  F048         	call	_setMultiState
 31043   00B9BA  0012               	return	
 31044   00B9BC                     l21817:
 31045   00B9BC  0100               	movlb	0	; () banked
 31046   00B9BE  5194               	movf	setOutputState@type& (0+255),w,b
 31047                           
 31048                           ; Switch size 1, requested type "simple"
 31049                           ; Number of cases is 7, Range of values is 0 to 6
 31050                           ; switch strategies available:
 31051                           ; Name         Instructions Cycles
 31052                           ; simple_byte           22    12 (average)
 31053                           ;	Chosen strategy is simple_byte
 31054   00B9C0  0A00               	xorlw	0	; case 0
 31055   00B9C2  B4D8               	btfsc	status,2,c
 31056   00B9C4  0012               	return	
 31057   00B9C6  0A01               	xorlw	1	; case 1
 31058   00B9C8  B4D8               	btfsc	status,2,c
 31059   00B9CA  0012               	return	
 31060   00B9CC  0A03               	xorlw	3	; case 2
 31061   00B9CE  B4D8               	btfsc	status,2,c
 31062   00B9D0  D7E9               	goto	l21807
 31063   00B9D2  0A01               	xorlw	1	; case 3
 31064   00B9D4  B4D8               	btfsc	status,2,c
 31065   00B9D6  D7E0               	goto	l21803
 31066   00B9D8  0A07               	xorlw	7	; case 4
 31067   00B9DA  B4D8               	btfsc	status,2,c
 31068   00B9DC  D7E9               	goto	l21811
 31069   00B9DE  0A01               	xorlw	1	; case 5
 31070   00B9E0  B4D8               	btfsc	status,2,c
 31071   00B9E2  0012               	return	
 31072   00B9E4  0A03               	xorlw	3	; case 6
 31073   00B9E6  0012               	return	
 31074   00B9E8                     __end_of_setOutputState:
 31075                           	callstack 0
 31076                           
 31077 ;; *************** function _setServoState *****************
 31078 ;; Defined at:
 31079 ;;		line 625 in file "../servo.c"
 31080 ;; Parameters:    Size  Location     Type
 31081 ;;  io              1    wreg     unsigned char 
 31082 ;;  action          1   49[BANK0 ] unsigned char 
 31083 ;; Auto vars:     Size  Location     Type
 31084 ;;  io              1   50[BANK0 ] unsigned char 
 31085 ;; Return value:  Size  Location     Type
 31086 ;;                  1    wreg      void 
 31087 ;; Registers used:
 31088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31089 ;; Tracked objects:
 31090 ;;		On entry : 0/0
 31091 ;;		On exit  : 0/0
 31092 ;;		Unchanged: 0/0
 31093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31094 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31095 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31097 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31098 ;;Total ram usage:        2 bytes
 31099 ;; Hardware stack levels used: 1
 31100 ;; Hardware stack levels required when called: 13
 31101 ;; This function calls:
 31102 ;;		_getNV
 31103 ;; This function is called by:
 31104 ;;		_APP_nvValueChanged
 31105 ;;		_setOutputState
 31106 ;; This function uses a non-reentrant model
 31107 ;;
 31108                           
 31109                           	psect	text113
 31110   009B90                     __ptext113:
 31111                           	callstack 0
 31112   009B90                     _setServoState:
 31113                           	callstack 13
 31114                           
 31115                           ;incstack = 0
 31116                           ;setServoState@io stored from wreg
 31117   009B90  0100               	movlb	0	; () banked
 31118   009B92  6F92               	movwf	setServoState@io& (0+255),b
 31119                           
 31120                           ;../servo.c: 626:     switch (action) {
 31121   009B94  D04A               	goto	l20345
 31122   009B96                     l20331:
 31123                           
 31124                           ; BSR set to: 0
 31125                           ;../servo.c: 628:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 31126   009B96  5192               	movf	setServoState@io& (0+255),w,b
 31127   009B98  0D07               	mullw	7
 31128   009B9A  50F3               	movf	243,w,c
 31129   009B9C  0F11               	addlw	17
 31130   009B9E  ECD2  F05F         	call	_getNV
 31131   009BA2  0100               	movlb	0	; () banked
 31132   009BA4  A18D               	btfss	?_getNV& (0+255),0,b
 31133   009BA6  D00E               	goto	l20335
 31134                           
 31135                           ; BSR set to: 0
 31136                           ;../servo.c: 629:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 31137   009BA8  5192               	movf	setServoState@io& (0+255),w,b
 31138   009BAA  0D07               	mullw	7
 31139   009BAC  50F3               	movf	243,w,c
 31140   009BAE  0F13               	addlw	19
 31141   009BB0  ECD2  F05F         	call	_getNV
 31142   009BB4  0100               	movlb	0	; () banked
 31143   009BB6  5192               	movf	setServoState@io& (0+255),w,b
 31144   009BB8  0F01               	addlw	low _targetPos
 31145   009BBA  6ED9               	movwf	fsr2l,c
 31146   009BBC  6ADA               	clrf	fsr2h,c
 31147   009BBE  C08D  FFDF         	movff	?_getNV,indf2
 31148                           
 31149                           ;../servo.c: 630:             } else {
 31150   009BC2  0012               	return	
 31151   009BC4                     l20335:
 31152                           
 31153                           ; BSR set to: 0
 31154                           ;../servo.c: 631:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 31155   009BC4  5192               	movf	setServoState@io& (0+255),w,b
 31156   009BC6  0D07               	mullw	7
 31157   009BC8  50F3               	movf	243,w,c
 31158   009BCA  0F12               	addlw	18
 31159   009BCC  ECD2  F05F         	call	_getNV
 31160   009BD0  0100               	movlb	0	; () banked
 31161   009BD2  5192               	movf	setServoState@io& (0+255),w,b
 31162   009BD4  0F01               	addlw	low _targetPos
 31163   009BD6  6ED9               	movwf	fsr2l,c
 31164   009BD8  6ADA               	clrf	fsr2h,c
 31165   009BDA  C08D  FFDF         	movff	?_getNV,indf2
 31166   009BDE  0012               	return	
 31167   009BE0                     l20337:
 31168                           
 31169                           ; BSR set to: 0
 31170                           ;../servo.c: 635:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 31171   009BE0  5192               	movf	setServoState@io& (0+255),w,b
 31172   009BE2  0D07               	mullw	7
 31173   009BE4  50F3               	movf	243,w,c
 31174   009BE6  0F11               	addlw	17
 31175   009BE8  ECD2  F05F         	call	_getNV
 31176   009BEC  0100               	movlb	0	; () banked
 31177   009BEE  A18D               	btfss	?_getNV& (0+255),0,b
 31178   009BF0  D00E               	goto	l20341
 31179                           
 31180                           ; BSR set to: 0
 31181                           ;../servo.c: 636:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 31182   009BF2  5192               	movf	setServoState@io& (0+255),w,b
 31183   009BF4  0D07               	mullw	7
 31184   009BF6  50F3               	movf	243,w,c
 31185   009BF8  0F12               	addlw	18
 31186   009BFA  ECD2  F05F         	call	_getNV
 31187   009BFE  0100               	movlb	0	; () banked
 31188   009C00  5192               	movf	setServoState@io& (0+255),w,b
 31189   009C02  0F01               	addlw	low _targetPos
 31190   009C04  6ED9               	movwf	fsr2l,c
 31191   009C06  6ADA               	clrf	fsr2h,c
 31192   009C08  C08D  FFDF         	movff	?_getNV,indf2
 31193                           
 31194                           ;../servo.c: 637:             } else {
 31195   009C0C  0012               	return	
 31196   009C0E                     l20341:
 31197                           
 31198                           ; BSR set to: 0
 31199                           ;../servo.c: 638:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 31200   009C0E  5192               	movf	setServoState@io& (0+255),w,b
 31201   009C10  0D07               	mullw	7
 31202   009C12  50F3               	movf	243,w,c
 31203   009C14  0F13               	addlw	19
 31204   009C16  ECD2  F05F         	call	_getNV
 31205   009C1A  0100               	movlb	0	; () banked
 31206   009C1C  5192               	movf	setServoState@io& (0+255),w,b
 31207   009C1E  0F01               	addlw	low _targetPos
 31208   009C20  6ED9               	movwf	fsr2l,c
 31209   009C22  6ADA               	clrf	fsr2h,c
 31210   009C24  C08D  FFDF         	movff	?_getNV,indf2
 31211   009C28  0012               	return	
 31212   009C2A                     l20345:
 31213   009C2A  0100               	movlb	0	; () banked
 31214   009C2C  5191               	movf	setServoState@action& (0+255),w,b
 31215                           
 31216                           ; Switch size 1, requested type "simple"
 31217                           ; Number of cases is 2, Range of values is 1 to 2
 31218                           ; switch strategies available:
 31219                           ; Name         Instructions Cycles
 31220                           ; simple_byte            7     4 (average)
 31221                           ;	Chosen strategy is simple_byte
 31222   009C2E  0A01               	xorlw	1	; case 1
 31223   009C30  B4D8               	btfsc	status,2,c
 31224   009C32  D7D6               	goto	l20337
 31225   009C34  0A03               	xorlw	3	; case 2
 31226   009C36  A4D8               	btfss	status,2,c
 31227   009C38  0012               	return	
 31228   009C3A  D7AD               	goto	l20331
 31229   009C3C                     __end_of_setServoState:
 31230                           	callstack 0
 31231                           
 31232 ;; *************** function _setMultiState *****************
 31233 ;; Defined at:
 31234 ;;		line 676 in file "../servo.c"
 31235 ;; Parameters:    Size  Location     Type
 31236 ;;  io              1    wreg     unsigned char 
 31237 ;;  action          1   49[BANK0 ] unsigned char 
 31238 ;; Auto vars:     Size  Location     Type
 31239 ;;  io              1   50[BANK0 ] unsigned char 
 31240 ;; Return value:  Size  Location     Type
 31241 ;;                  1    wreg      void 
 31242 ;; Registers used:
 31243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31244 ;; Tracked objects:
 31245 ;;		On entry : 0/0
 31246 ;;		On exit  : 0/0
 31247 ;;		Unchanged: 0/0
 31248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31249 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31250 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31252 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31253 ;;Total ram usage:        2 bytes
 31254 ;; Hardware stack levels used: 1
 31255 ;; Hardware stack levels required when called: 13
 31256 ;; This function calls:
 31257 ;;		_getNV
 31258 ;; This function is called by:
 31259 ;;		_APP_nvValueChanged
 31260 ;;		_setOutputState
 31261 ;; This function uses a non-reentrant model
 31262 ;;
 31263                           
 31264                           	psect	text114
 31265   009030                     __ptext114:
 31266                           	callstack 0
 31267   009030                     _setMultiState:
 31268                           	callstack 13
 31269                           
 31270                           ; BSR set to: 0
 31271                           ;incstack = 0
 31272                           ;setMultiState@io stored from wreg
 31273   009030  0100               	movlb	0	; () banked
 31274   009032  6F92               	movwf	setMultiState@io& (0+255),b
 31275                           
 31276                           ;../servo.c: 677:     switch (action) {
 31277   009034  D056               	goto	l20417
 31278   009036                     l20403:
 31279                           
 31280                           ; BSR set to: 0
 31281                           ;../servo.c: 679:             targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 31282   009036  5192               	movf	setMultiState@io& (0+255),w,b
 31283   009038  0D07               	mullw	7
 31284   00903A  50F3               	movf	243,w,c
 31285   00903C  0F13               	addlw	19
 31286   00903E  ECD2  F05F         	call	_getNV
 31287   009042  0100               	movlb	0	; () banked
 31288   009044  5192               	movf	setMultiState@io& (0+255),w,b
 31289   009046  0F01               	addlw	low _targetPos
 31290   009048  6ED9               	movwf	fsr2l,c
 31291   00904A  6ADA               	clrf	fsr2h,c
 31292   00904C  C08D  FFDF         	movff	?_getNV,indf2
 31293                           
 31294                           ;../servo.c: 680:             break;
 31295   009050  0012               	return	
 31296   009052                     l20405:
 31297                           
 31298                           ; BSR set to: 0
 31299                           ;../servo.c: 682:             targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 4));
 31300   009052  5192               	movf	setMultiState@io& (0+255),w,b
 31301   009054  0D07               	mullw	7
 31302   009056  50F3               	movf	243,w,c
 31303   009058  0F14               	addlw	20
 31304   00905A  ECD2  F05F         	call	_getNV
 31305   00905E  0100               	movlb	0	; () banked
 31306   009060  5192               	movf	setMultiState@io& (0+255),w,b
 31307   009062  0F01               	addlw	low _targetPos
 31308   009064  6ED9               	movwf	fsr2l,c
 31309   009066  6ADA               	clrf	fsr2h,c
 31310   009068  C08D  FFDF         	movff	?_getNV,indf2
 31311                           
 31312                           ;../servo.c: 683:             break;
 31313   00906C  0012               	return	
 31314   00906E                     l20407:
 31315                           
 31316                           ; BSR set to: 0
 31317                           ;../servo.c: 685:             if (getNV((16 + 7*(io) + 2)) >= 3) {
 31318   00906E  5192               	movf	setMultiState@io& (0+255),w,b
 31319   009070  0D07               	mullw	7
 31320   009072  50F3               	movf	243,w,c
 31321   009074  0F12               	addlw	18
 31322   009076  ECD2  F05F         	call	_getNV
 31323   00907A  0100               	movlb	0	; () banked
 31324   00907C  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 31325   00907E  0012               	return	
 31326   009080  518E               	movf	(?_getNV+1)& (0+255),w,b
 31327   009082  E104               	bnz	u20850
 31328   009084  0E03               	movlw	3
 31329   009086  5D8D               	subwf	?_getNV& (0+255),w,b
 31330   009088  A0D8               	btfss	status,0,c
 31331   00908A  0012               	return	
 31332   00908C                     u20850:
 31333                           
 31334                           ; BSR set to: 0
 31335                           ;../servo.c: 686:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 5));
 31336   00908C  5192               	movf	setMultiState@io& (0+255),w,b
 31337   00908E  0D07               	mullw	7
 31338   009090  50F3               	movf	243,w,c
 31339   009092  0F15               	addlw	21
 31340   009094  ECD2  F05F         	call	_getNV
 31341   009098  0100               	movlb	0	; () banked
 31342   00909A  5192               	movf	setMultiState@io& (0+255),w,b
 31343   00909C  0F01               	addlw	low _targetPos
 31344   00909E  6ED9               	movwf	fsr2l,c
 31345   0090A0  6ADA               	clrf	fsr2h,c
 31346   0090A2  C08D  FFDF         	movff	?_getNV,indf2
 31347   0090A6  0012               	return	
 31348   0090A8                     l20411:
 31349                           
 31350                           ; BSR set to: 0
 31351                           ;../servo.c: 690:             if (getNV((16 + 7*(io) + 2)) >= 4) {
 31352   0090A8  5192               	movf	setMultiState@io& (0+255),w,b
 31353   0090AA  0D07               	mullw	7
 31354   0090AC  50F3               	movf	243,w,c
 31355   0090AE  0F12               	addlw	18
 31356   0090B0  ECD2  F05F         	call	_getNV
 31357   0090B4  0100               	movlb	0	; () banked
 31358   0090B6  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 31359   0090B8  0012               	return	
 31360   0090BA  518E               	movf	(?_getNV+1)& (0+255),w,b
 31361   0090BC  E104               	bnz	u20860
 31362   0090BE  0E04               	movlw	4
 31363   0090C0  5D8D               	subwf	?_getNV& (0+255),w,b
 31364   0090C2  A0D8               	btfss	status,0,c
 31365   0090C4  0012               	return	
 31366   0090C6                     u20860:
 31367                           
 31368                           ; BSR set to: 0
 31369                           ;../servo.c: 691:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 6));
 31370   0090C6  5192               	movf	setMultiState@io& (0+255),w,b
 31371   0090C8  0D07               	mullw	7
 31372   0090CA  50F3               	movf	243,w,c
 31373   0090CC  0F16               	addlw	22
 31374   0090CE  ECD2  F05F         	call	_getNV
 31375   0090D2  0100               	movlb	0	; () banked
 31376   0090D4  5192               	movf	setMultiState@io& (0+255),w,b
 31377   0090D6  0F01               	addlw	low _targetPos
 31378   0090D8  6ED9               	movwf	fsr2l,c
 31379   0090DA  6ADA               	clrf	fsr2h,c
 31380   0090DC  C08D  FFDF         	movff	?_getNV,indf2
 31381   0090E0  0012               	return	
 31382   0090E2                     l20417:
 31383   0090E2  0100               	movlb	0	; () banked
 31384   0090E4  5191               	movf	setMultiState@action& (0+255),w,b
 31385                           
 31386                           ; Switch size 1, requested type "simple"
 31387                           ; Number of cases is 4, Range of values is 0 to 3
 31388                           ; switch strategies available:
 31389                           ; Name         Instructions Cycles
 31390                           ; simple_byte           13     7 (average)
 31391                           ;	Chosen strategy is simple_byte
 31392   0090E6  0A00               	xorlw	0	; case 0
 31393   0090E8  B4D8               	btfsc	status,2,c
 31394   0090EA  D7A5               	goto	l20403
 31395   0090EC  0A01               	xorlw	1	; case 1
 31396   0090EE  B4D8               	btfsc	status,2,c
 31397   0090F0  D7B0               	goto	l20405
 31398   0090F2  0A03               	xorlw	3	; case 2
 31399   0090F4  B4D8               	btfsc	status,2,c
 31400   0090F6  D7BB               	goto	l20407
 31401   0090F8  0A01               	xorlw	1	; case 3
 31402   0090FA  A4D8               	btfss	status,2,c
 31403   0090FC  0012               	return	
 31404   0090FE  D7D4               	goto	l20411
 31405   009100                     __end_of_setMultiState:
 31406                           	callstack 0
 31407                           
 31408 ;; *************** function _setBounceState *****************
 31409 ;; Defined at:
 31410 ;;		line 652 in file "../servo.c"
 31411 ;; Parameters:    Size  Location     Type
 31412 ;;  io              1    wreg     unsigned char 
 31413 ;;  action          1   49[BANK0 ] unsigned char 
 31414 ;; Auto vars:     Size  Location     Type
 31415 ;;  io              1   50[BANK0 ] unsigned char 
 31416 ;; Return value:  Size  Location     Type
 31417 ;;                  1    wreg      void 
 31418 ;; Registers used:
 31419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31420 ;; Tracked objects:
 31421 ;;		On entry : 0/0
 31422 ;;		On exit  : 0/0
 31423 ;;		Unchanged: 0/0
 31424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31425 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31426 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31428 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31429 ;;Total ram usage:        2 bytes
 31430 ;; Hardware stack levels used: 1
 31431 ;; Hardware stack levels required when called: 13
 31432 ;; This function calls:
 31433 ;;		_getNV
 31434 ;; This function is called by:
 31435 ;;		_APP_nvValueChanged
 31436 ;;		_setOutputState
 31437 ;; This function uses a non-reentrant model
 31438 ;;
 31439                           
 31440                           	psect	text115
 31441   009C3C                     __ptext115:
 31442                           	callstack 0
 31443   009C3C                     _setBounceState:
 31444                           	callstack 13
 31445                           
 31446                           ; BSR set to: 0
 31447                           ;incstack = 0
 31448                           ;setBounceState@io stored from wreg
 31449   009C3C  0100               	movlb	0	; () banked
 31450   009C3E  6F92               	movwf	setBounceState@io& (0+255),b
 31451                           
 31452                           ;../servo.c: 653:     switch (action) {
 31453   009C40  D04A               	goto	l20387
 31454   009C42                     l20373:
 31455                           
 31456                           ; BSR set to: 0
 31457                           ;../servo.c: 655:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 31458   009C42  5192               	movf	setBounceState@io& (0+255),w,b
 31459   009C44  0D07               	mullw	7
 31460   009C46  50F3               	movf	243,w,c
 31461   009C48  0F11               	addlw	17
 31462   009C4A  ECD2  F05F         	call	_getNV
 31463   009C4E  0100               	movlb	0	; () banked
 31464   009C50  A18D               	btfss	?_getNV& (0+255),0,b
 31465   009C52  D00E               	goto	l20377
 31466                           
 31467                           ; BSR set to: 0
 31468                           ;../servo.c: 656:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 31469   009C54  5192               	movf	setBounceState@io& (0+255),w,b
 31470   009C56  0D07               	mullw	7
 31471   009C58  50F3               	movf	243,w,c
 31472   009C5A  0F12               	addlw	18
 31473   009C5C  ECD2  F05F         	call	_getNV
 31474   009C60  0100               	movlb	0	; () banked
 31475   009C62  5192               	movf	setBounceState@io& (0+255),w,b
 31476   009C64  0F01               	addlw	low _targetPos
 31477   009C66  6ED9               	movwf	fsr2l,c
 31478   009C68  6ADA               	clrf	fsr2h,c
 31479   009C6A  C08D  FFDF         	movff	?_getNV,indf2
 31480                           
 31481                           ;../servo.c: 657:             } else {
 31482   009C6E  0012               	return	
 31483   009C70                     l20377:
 31484                           
 31485                           ; BSR set to: 0
 31486                           ;../servo.c: 658:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 31487   009C70  5192               	movf	setBounceState@io& (0+255),w,b
 31488   009C72  0D07               	mullw	7
 31489   009C74  50F3               	movf	243,w,c
 31490   009C76  0F13               	addlw	19
 31491   009C78  ECD2  F05F         	call	_getNV
 31492   009C7C  0100               	movlb	0	; () banked
 31493   009C7E  5192               	movf	setBounceState@io& (0+255),w,b
 31494   009C80  0F01               	addlw	low _targetPos
 31495   009C82  6ED9               	movwf	fsr2l,c
 31496   009C84  6ADA               	clrf	fsr2h,c
 31497   009C86  C08D  FFDF         	movff	?_getNV,indf2
 31498   009C8A  0012               	return	
 31499   009C8C                     l20379:
 31500                           
 31501                           ; BSR set to: 0
 31502                           ;../servo.c: 662:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 31503   009C8C  5192               	movf	setBounceState@io& (0+255),w,b
 31504   009C8E  0D07               	mullw	7
 31505   009C90  50F3               	movf	243,w,c
 31506   009C92  0F11               	addlw	17
 31507   009C94  ECD2  F05F         	call	_getNV
 31508   009C98  0100               	movlb	0	; () banked
 31509   009C9A  A18D               	btfss	?_getNV& (0+255),0,b
 31510   009C9C  D00E               	goto	l20383
 31511                           
 31512                           ; BSR set to: 0
 31513                           ;../servo.c: 663:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 31514   009C9E  5192               	movf	setBounceState@io& (0+255),w,b
 31515   009CA0  0D07               	mullw	7
 31516   009CA2  50F3               	movf	243,w,c
 31517   009CA4  0F13               	addlw	19
 31518   009CA6  ECD2  F05F         	call	_getNV
 31519   009CAA  0100               	movlb	0	; () banked
 31520   009CAC  5192               	movf	setBounceState@io& (0+255),w,b
 31521   009CAE  0F01               	addlw	low _targetPos
 31522   009CB0  6ED9               	movwf	fsr2l,c
 31523   009CB2  6ADA               	clrf	fsr2h,c
 31524   009CB4  C08D  FFDF         	movff	?_getNV,indf2
 31525                           
 31526                           ;../servo.c: 664:             } else {
 31527   009CB8  0012               	return	
 31528   009CBA                     l20383:
 31529                           
 31530                           ; BSR set to: 0
 31531                           ;../servo.c: 665:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 31532   009CBA  5192               	movf	setBounceState@io& (0+255),w,b
 31533   009CBC  0D07               	mullw	7
 31534   009CBE  50F3               	movf	243,w,c
 31535   009CC0  0F12               	addlw	18
 31536   009CC2  ECD2  F05F         	call	_getNV
 31537   009CC6  0100               	movlb	0	; () banked
 31538   009CC8  5192               	movf	setBounceState@io& (0+255),w,b
 31539   009CCA  0F01               	addlw	low _targetPos
 31540   009CCC  6ED9               	movwf	fsr2l,c
 31541   009CCE  6ADA               	clrf	fsr2h,c
 31542   009CD0  C08D  FFDF         	movff	?_getNV,indf2
 31543   009CD4  0012               	return	
 31544   009CD6                     l20387:
 31545   009CD6  0100               	movlb	0	; () banked
 31546   009CD8  5191               	movf	setBounceState@action& (0+255),w,b
 31547                           
 31548                           ; Switch size 1, requested type "simple"
 31549                           ; Number of cases is 2, Range of values is 1 to 2
 31550                           ; switch strategies available:
 31551                           ; Name         Instructions Cycles
 31552                           ; simple_byte            7     4 (average)
 31553                           ;	Chosen strategy is simple_byte
 31554   009CDA  0A01               	xorlw	1	; case 1
 31555   009CDC  B4D8               	btfsc	status,2,c
 31556   009CDE  D7D6               	goto	l20379
 31557   009CE0  0A03               	xorlw	3	; case 2
 31558   009CE2  A4D8               	btfss	status,2,c
 31559   009CE4  0012               	return	
 31560   009CE6  D7AD               	goto	l20373
 31561   009CE8                     __end_of_setBounceState:
 31562                           	callstack 0
 31563                           
 31564 ;; *************** function _needsStarting *****************
 31565 ;; Defined at:
 31566 ;;		line 182 in file "../outputs.c"
 31567 ;; Parameters:    Size  Location     Type
 31568 ;;  io              1    wreg     unsigned char 
 31569 ;;  act             1   45[BANK0 ] unsigned char 
 31570 ;;  type            1   46[BANK0 ] unsigned char 
 31571 ;; Auto vars:     Size  Location     Type
 31572 ;;  io              1   49[BANK0 ] unsigned char 
 31573 ;; Return value:  Size  Location     Type
 31574 ;;                  1    wreg      enum E12767
 31575 ;; Registers used:
 31576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 31577 ;; Tracked objects:
 31578 ;;		On entry : 0/0
 31579 ;;		On exit  : 0/0
 31580 ;;		Unchanged: 0/0
 31581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31582 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31583 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31584 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31585 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31586 ;;Total ram usage:        5 bytes
 31587 ;; Hardware stack levels used: 1
 31588 ;; Hardware stack levels required when called: 12
 31589 ;; This function calls:
 31590 ;;		Nothing
 31591 ;; This function is called by:
 31592 ;;		_processActions
 31593 ;; This function uses a non-reentrant model
 31594 ;;
 31595                           
 31596                           	psect	text116
 31597   00AA86                     __ptext116:
 31598                           	callstack 0
 31599   00AA86                     _needsStarting:
 31600                           	callstack 16
 31601                           
 31602                           ; BSR set to: 0
 31603                           ;incstack = 0
 31604                           ;needsStarting@io stored from wreg
 31605   00AA86  0100               	movlb	0	; () banked
 31606   00AA88  6F91               	movwf	needsStarting@io& (0+255),b
 31607                           
 31608                           ;../outputs.c: 183:     switch(type) {
 31609   00AA8A  D02B               	goto	l21841
 31610   00AA8C                     l21821:
 31611                           
 31612                           ; BSR set to: 0
 31613                           ;../outputs.c: 186:             return FALSE;
 31614   00AA8C  0E00               	movlw	0
 31615   00AA8E  0012               	return	
 31616   00AA90                     l21825:
 31617                           
 31618                           ; BSR set to: 0
 31619                           ;../outputs.c: 195:             return (pulseDelays[io] == 0);
 31620   00AA90  0EA4               	movlw	low _pulseDelays
 31621   00AA92  2591               	addwf	needsStarting@io& (0+255),w,b
 31622   00AA94  6ED9               	movwf	fsr2l,c
 31623   00AA96  6ADA               	clrf	fsr2h,c
 31624   00AA98  0E02               	movlw	high _pulseDelays
 31625   00AA9A  22DA               	addwfc	fsr2h,f,c
 31626   00AA9C  50DF               	movf	indf2,w,c
 31627   00AA9E  A4D8               	btfss	status,2,c
 31628   00AAA0  D002               	goto	u22780
 31629   00AAA2  0E01               	movlw	1
 31630   00AAA4  0012               	return	
 31631   00AAA6                     u22780:
 31632   00AAA6  0E00               	movlw	0
 31633   00AAA8  0012               	return	
 31634   00AAAA                     l21829:
 31635                           
 31636                           ; BSR set to: 0
 31637                           ;../outputs.c: 205:             if (targetPos[io] == currentPos[io]) {
 31638   00AAAA  0E30               	movlw	low _currentPos
 31639   00AAAC  2591               	addwf	needsStarting@io& (0+255),w,b
 31640   00AAAE  6ED9               	movwf	fsr2l,c
 31641   00AAB0  6ADA               	clrf	fsr2h,c
 31642   00AAB2  0E01               	movlw	high _currentPos
 31643   00AAB4  22DA               	addwfc	fsr2h,f,c
 31644   00AAB6  5191               	movf	needsStarting@io& (0+255),w,b
 31645   00AAB8  0F01               	addlw	low _targetPos
 31646   00AABA  6EE1               	movwf	fsr1l,c
 31647   00AABC  6AE2               	clrf	fsr1h,c
 31648   00AABE  50DE               	movf	postinc2,w,c
 31649   00AAC0  18E6               	xorwf	postinc1,w,c
 31650   00AAC2  B4D8               	btfsc	status,2,c
 31651   00AAC4  D7E3               	goto	l21821
 31652                           
 31653                           ; BSR set to: 0
 31654                           ;../outputs.c: 209:             return (servoState[io] != SS_MOVING);
 31655   00AAC6  0E10               	movlw	low _servoState
 31656   00AAC8  2591               	addwf	needsStarting@io& (0+255),w,b
 31657   00AACA  6ED9               	movwf	fsr2l,c
 31658   00AACC  6ADA               	clrf	fsr2h,c
 31659   00AACE  0E01               	movlw	high _servoState
 31660   00AAD0  22DA               	addwfc	fsr2h,f,c
 31661   00AAD2  0E02               	movlw	2
 31662   00AAD4  18DE               	xorwf	postinc2,w,c
 31663   00AAD6  B4D8               	btfsc	status,2,c
 31664   00AAD8  D002               	goto	u22810
 31665   00AADA  0E01               	movlw	1
 31666   00AADC  0012               	return	
 31667   00AADE                     u22810:
 31668   00AADE  0E00               	movlw	0
 31669   00AAE0  0012               	return	
 31670   00AAE2                     l21841:
 31671   00AAE2  0100               	movlb	0	; () banked
 31672   00AAE4  518E               	movf	needsStarting@type& (0+255),w,b
 31673                           
 31674                           ; Switch size 1, requested type "simple"
 31675                           ; Number of cases is 5, Range of values is 0 to 4
 31676                           ; switch strategies available:
 31677                           ; Name         Instructions Cycles
 31678                           ; simple_byte           16     9 (average)
 31679                           ;	Chosen strategy is simple_byte
 31680   00AAE6  0A00               	xorlw	0	; case 0
 31681   00AAE8  B4D8               	btfsc	status,2,c
 31682   00AAEA  D7D0               	goto	l21821
 31683   00AAEC  0A01               	xorlw	1	; case 1
 31684   00AAEE  B4D8               	btfsc	status,2,c
 31685   00AAF0  D7CF               	goto	l21825
 31686   00AAF2  0A03               	xorlw	3	; case 2
 31687   00AAF4  B4D8               	btfsc	status,2,c
 31688   00AAF6  D7D9               	goto	l21829
 31689   00AAF8  0A01               	xorlw	1	; case 3
 31690   00AAFA  B4D8               	btfsc	status,2,c
 31691   00AAFC  D7D6               	goto	l21829
 31692   00AAFE  0A07               	xorlw	7	; case 4
 31693   00AB00  B4D8               	btfsc	status,2,c
 31694   00AB02  D7D3               	goto	l21829
 31695                           
 31696                           ; BSR set to: 0
 31697                           ;../outputs.c: 212:     return TRUE;
 31698   00AB04  0E01               	movlw	1
 31699                           
 31700                           ; BSR set to: 0
 31701   00AB06  0012               	return		;funcret
 31702   00AB08                     __end_of_needsStarting:
 31703                           	callstack 0
 31704                           
 31705 ;; *************** function _getTwoAction *****************
 31706 ;; Defined at:
 31707 ;;		line 414 in file "../event_consumerDualActionQueue.c"
 31708 ;; Parameters:    Size  Location     Type
 31709 ;;		None
 31710 ;; Auto vars:     Size  Location     Type
 31711 ;;		None
 31712 ;; Return value:  Size  Location     Type
 31713 ;;                  1    wreg      unsigned char 
 31714 ;; Registers used:
 31715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31716 ;; Tracked objects:
 31717 ;;		On entry : 0/0
 31718 ;;		On exit  : 0/0
 31719 ;;		Unchanged: 0/0
 31720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31725 ;;Total ram usage:        0 bytes
 31726 ;; Hardware stack levels used: 1
 31727 ;; Hardware stack levels required when called: 13
 31728 ;; This function calls:
 31729 ;;		_peekTwoActionQueue
 31730 ;; This function is called by:
 31731 ;;		_processActions
 31732 ;; This function uses a non-reentrant model
 31733 ;;
 31734                           
 31735                           	psect	text117
 31736   00C8F8                     __ptext117:
 31737                           	callstack 0
 31738   00C8F8                     _getTwoAction:
 31739                           	callstack 15
 31740                           
 31741                           ;../event_consumerDualActionQueue.c: 415:  return peekTwoActionQueue(0);
 31742                           
 31743                           ; BSR set to: 0
 31744                           ;incstack = 0
 31745   00C8F8  0E00               	movlw	0
 31746   00C8FA  EC36  F054         	call	_peekTwoActionQueue
 31747   00C8FE  0012               	return		;funcret
 31748   00C900                     __end_of_getTwoAction:
 31749                           	callstack 0
 31750                           
 31751 ;; *************** function _peekTwoActionQueue *****************
 31752 ;; Defined at:
 31753 ;;		line 453 in file "../event_consumerDualActionQueue.c"
 31754 ;; Parameters:    Size  Location     Type
 31755 ;;  index           1    wreg     unsigned char 
 31756 ;; Auto vars:     Size  Location     Type
 31757 ;;  index           1   46[BANK0 ] unsigned char 
 31758 ;;  qty             1   45[BANK0 ] unsigned char 
 31759 ;; Return value:  Size  Location     Type
 31760 ;;                  1    wreg      unsigned char 
 31761 ;; Registers used:
 31762 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31763 ;; Tracked objects:
 31764 ;;		On entry : 0/0
 31765 ;;		On exit  : 0/0
 31766 ;;		Unchanged: 0/0
 31767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31769 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31771 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31772 ;;Total ram usage:        2 bytes
 31773 ;; Hardware stack levels used: 1
 31774 ;; Hardware stack levels required when called: 12
 31775 ;; This function calls:
 31776 ;;		Nothing
 31777 ;; This function is called by:
 31778 ;;		_getTwoAction
 31779 ;;		_processActions
 31780 ;; This function uses a non-reentrant model
 31781 ;;
 31782                           
 31783                           	psect	text118
 31784   00A86C                     __ptext118:
 31785                           	callstack 0
 31786   00A86C                     _peekTwoActionQueue:
 31787                           	callstack 16
 31788                           
 31789                           ;incstack = 0
 31790                           ;peekTwoActionQueue@index stored from wreg
 31791   00A86C  0100               	movlb	0	; () banked
 31792   00A86E  6F8E               	movwf	peekTwoActionQueue@index& (0+255),b
 31793                           
 31794                           ;../event_consumerDualActionQueue.c: 454:     uint8_t qty;;../event_consumerDualActionQu
      +                          eue.c: 455:     qty = (expeditedWriteIndex - expeditedReadIndex) & (8 -1);
 31795   00A870  0100               	movlb	0	; () banked
 31796   00A872  51CB               	movf	_expeditedReadIndex& (0+255),w,b
 31797   00A874  5DCA               	subwf	_expeditedWriteIndex& (0+255),w,b
 31798   00A876  0B07               	andlw	7
 31799   00A878  6F8D               	movwf	peekTwoActionQueue@qty& (0+255),b
 31800                           
 31801                           ;../event_consumerDualActionQueue.c: 456:     if (index < qty) {
 31802   00A87A  518D               	movf	peekTwoActionQueue@qty& (0+255),w,b
 31803   00A87C  5D8E               	subwf	peekTwoActionQueue@index& (0+255),w,b
 31804   00A87E  B0D8               	btfsc	status,0,c
 31805   00A880  D019               	goto	l20843
 31806                           
 31807                           ; BSR set to: 0
 31808                           ;../event_consumerDualActionQueue.c: 457:         if (expeditedReadIndex == expeditedWri
      +                          teIndex) return 0;
 31809   00A882  51CA               	movf	_expeditedWriteIndex& (0+255),w,b
 31810   00A884  19CB               	xorwf	_expeditedReadIndex& (0+255),w,b
 31811   00A886  A4D8               	btfss	status,2,c
 31812   00A888  D002               	goto	l20831
 31813   00A88A                     u21640:
 31814                           
 31815                           ; BSR set to: 0
 31816   00A88A  0E00               	movlw	0
 31817   00A88C  0012               	return	
 31818   00A88E                     l20831:
 31819                           
 31820                           ; BSR set to: 0
 31821                           ;../event_consumerDualActionQueue.c: 458:         index += expeditedReadIndex;
 31822   00A88E  51CB               	movf	_expeditedReadIndex& (0+255),w,b
 31823   00A890  278E               	addwf	peekTwoActionQueue@index& (0+255),f,b
 31824                           
 31825                           ;../event_consumerDualActionQueue.c: 459:         if (index >= 8) {
 31826   00A892  0E07               	movlw	7
 31827   00A894  658E               	cpfsgt	peekTwoActionQueue@index& (0+255),b
 31828   00A896  D002               	goto	l547
 31829                           
 31830                           ; BSR set to: 0
 31831                           ;../event_consumerDualActionQueue.c: 460:             index -= 8;
 31832   00A898  0E08               	movlw	8
 31833   00A89A  5F8E               	subwf	peekTwoActionQueue@index& (0+255),f,b
 31834   00A89C                     l547:
 31835                           
 31836                           ; BSR set to: 0
 31837                           ;../event_consumerDualActionQueue.c: 462:         if (index == expeditedWriteIndex) retu
      +                          rn 0;
 31838   00A89C  51CA               	movf	_expeditedWriteIndex& (0+255),w,b
 31839   00A89E  198E               	xorwf	peekTwoActionQueue@index& (0+255),w,b
 31840   00A8A0  B4D8               	btfsc	status,2,c
 31841   00A8A2  D7F3               	goto	u21640
 31842                           
 31843                           ; BSR set to: 0
 31844                           ;../event_consumerDualActionQueue.c: 463:         return expeditedQueueBuf[index];
 31845   00A8A4  0EC4               	movlw	low _expeditedQueueBuf
 31846   00A8A6  258E               	addwf	peekTwoActionQueue@index& (0+255),w,b
 31847   00A8A8  6ED9               	movwf	fsr2l,c
 31848   00A8AA  6ADA               	clrf	fsr2h,c
 31849   00A8AC  0E02               	movlw	high _expeditedQueueBuf
 31850   00A8AE  22DA               	addwfc	fsr2h,f,c
 31851   00A8B0  50DF               	movf	indf2,w,c
 31852   00A8B2  0012               	return	
 31853   00A8B4                     l20843:
 31854                           
 31855                           ; BSR set to: 0
 31856                           ;../event_consumerDualActionQueue.c: 465:     index -= qty;
 31857   00A8B4  518D               	movf	peekTwoActionQueue@qty& (0+255),w,b
 31858   00A8B6  5F8E               	subwf	peekTwoActionQueue@index& (0+255),f,b
 31859                           
 31860                           ;../event_consumerDualActionQueue.c: 466:     qty = (normalWriteIndex - normalReadIndex)
      +                           & (64 -1);
 31861   00A8B8  51CD               	movf	_normalReadIndex& (0+255),w,b
 31862   00A8BA  5DCC               	subwf	_normalWriteIndex& (0+255),w,b
 31863   00A8BC  0B3F               	andlw	63
 31864   00A8BE  6F8D               	movwf	peekTwoActionQueue@qty& (0+255),b
 31865                           
 31866                           ;../event_consumerDualActionQueue.c: 467:     if (index < qty) {
 31867   00A8C0  518D               	movf	peekTwoActionQueue@qty& (0+255),w,b
 31868   00A8C2  5D8E               	subwf	peekTwoActionQueue@index& (0+255),w,b
 31869   00A8C4  B0D8               	btfsc	status,0,c
 31870   00A8C6  D7E1               	goto	u21640
 31871                           
 31872                           ; BSR set to: 0
 31873                           ;../event_consumerDualActionQueue.c: 468:         if (normalReadIndex == normalWriteInde
      +                          x) return 0;
 31874   00A8C8  51CC               	movf	_normalWriteIndex& (0+255),w,b
 31875   00A8CA  19CD               	xorwf	_normalReadIndex& (0+255),w,b
 31876   00A8CC  B4D8               	btfsc	status,2,c
 31877   00A8CE  D7DD               	goto	u21640
 31878                           
 31879                           ; BSR set to: 0
 31880                           ;../event_consumerDualActionQueue.c: 469:         index += normalReadIndex;
 31881   00A8D0  51CD               	movf	_normalReadIndex& (0+255),w,b
 31882   00A8D2  278E               	addwf	peekTwoActionQueue@index& (0+255),f,b
 31883                           
 31884                           ;../event_consumerDualActionQueue.c: 470:         if (index >= 64) {
 31885   00A8D4  0E3F               	movlw	63
 31886   00A8D6  658E               	cpfsgt	peekTwoActionQueue@index& (0+255),b
 31887   00A8D8  D002               	goto	l551
 31888                           
 31889                           ; BSR set to: 0
 31890                           ;../event_consumerDualActionQueue.c: 471:             index -= 64;
 31891   00A8DA  0E40               	movlw	64
 31892   00A8DC  5F8E               	subwf	peekTwoActionQueue@index& (0+255),f,b
 31893   00A8DE                     l551:
 31894                           
 31895                           ; BSR set to: 0
 31896                           ;../event_consumerDualActionQueue.c: 473:         if (index == normalWriteIndex) return 
      +                          0;
 31897   00A8DE  51CC               	movf	_normalWriteIndex& (0+255),w,b
 31898   00A8E0  198E               	xorwf	peekTwoActionQueue@index& (0+255),w,b
 31899   00A8E2  B4D8               	btfsc	status,2,c
 31900   00A8E4  D7D2               	goto	u21640
 31901                           
 31902                           ; BSR set to: 0
 31903                           ;../event_consumerDualActionQueue.c: 474:         return normalQueueBuf[index];
 31904   00A8E6  0E80               	movlw	low _normalQueueBuf
 31905   00A8E8  258E               	addwf	peekTwoActionQueue@index& (0+255),w,b
 31906   00A8EA  6ED9               	movwf	fsr2l,c
 31907   00A8EC  6ADA               	clrf	fsr2h,c
 31908   00A8EE  0E04               	movlw	high _normalQueueBuf
 31909   00A8F0  22DA               	addwfc	fsr2h,f,c
 31910   00A8F2  50DF               	movf	indf2,w,c
 31911                           
 31912                           ; BSR set to: 0
 31913   00A8F4  0012               	return		;funcret
 31914   00A8F6                     __end_of_peekTwoActionQueue:
 31915                           	callstack 0
 31916                           
 31917 ;; *************** function _finaliseOutput *****************
 31918 ;; Defined at:
 31919 ;;		line 253 in file "../outputs.c"
 31920 ;; Parameters:    Size  Location     Type
 31921 ;;  io              1    wreg     unsigned char 
 31922 ;;  type            1   45[BANK0 ] unsigned char 
 31923 ;; Auto vars:     Size  Location     Type
 31924 ;;  io              1    0[COMRAM] unsigned char 
 31925 ;; Return value:  Size  Location     Type
 31926 ;;                  1    wreg      void 
 31927 ;; Registers used:
 31928 ;;		wreg, status,2, status,0
 31929 ;; Tracked objects:
 31930 ;;		On entry : 0/0
 31931 ;;		On exit  : 0/0
 31932 ;;		Unchanged: 0/0
 31933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31934 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31937 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31938 ;;Total ram usage:        1 bytes
 31939 ;; Hardware stack levels used: 1
 31940 ;; Hardware stack levels required when called: 12
 31941 ;; This function calls:
 31942 ;;		Nothing
 31943 ;; This function is called by:
 31944 ;;		_processActions
 31945 ;; This function uses a non-reentrant model
 31946 ;;
 31947                           
 31948                           	psect	text119
 31949   00C900                     __ptext119:
 31950                           	callstack 0
 31951   00C900                     _finaliseOutput:
 31952                           	callstack 16
 31953                           
 31954                           ;../outputs.c: 254:     switch(type) {
 31955                           
 31956                           ; BSR set to: 0
 31957                           ;incstack = 0
 31958   00C900  0100               	movlb	0	; () banked
 31959   00C902  518D               	movf	finaliseOutput@type& (0+255),w,b
 31960                           
 31961                           ; Switch size 1, requested type "simple"
 31962                           ; Number of cases is 1, Range of values is 1 to 1
 31963                           ; switch strategies available:
 31964                           ; Name         Instructions Cycles
 31965                           ; simple_byte            4     3 (average)
 31966                           ;	Chosen strategy is simple_byte
 31967   00C904  0A01               	xorlw	1	; case 1
 31968   00C906  0012               	return	
 31969   00C908                     __end_of_finaliseOutput:
 31970                           	callstack 0
 31971                           
 31972 ;; *************** function _doWait *****************
 31973 ;; Defined at:
 31974 ;;		line 337 in file "../universalEvents.c"
 31975 ;; Parameters:    Size  Location     Type
 31976 ;;  duration        2   61[BANK0 ] unsigned short 
 31977 ;; Auto vars:     Size  Location     Type
 31978 ;;		None
 31979 ;; Return value:  Size  Location     Type
 31980 ;;                  1    wreg      void 
 31981 ;; Registers used:
 31982 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31983 ;; Tracked objects:
 31984 ;;		On entry : 0/0
 31985 ;;		On exit  : 0/0
 31986 ;;		Unchanged: 0/0
 31987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31988 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31990 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31991 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31992 ;;Total ram usage:        6 bytes
 31993 ;; Hardware stack levels used: 1
 31994 ;; Hardware stack levels required when called: 14
 31995 ;; This function calls:
 31996 ;;		___lmul
 31997 ;;		_doneTwoAction
 31998 ;;		_tickGet
 31999 ;; This function is called by:
 32000 ;;		_processActions
 32001 ;; This function uses a non-reentrant model
 32002 ;;
 32003                           
 32004                           	psect	text120
 32005   00A7E0                     __ptext120:
 32006                           	callstack 0
 32007   00A7E0                     _doWait:
 32008                           	callstack 14
 32009                           
 32010                           ;../universalEvents.c: 339:     if (startWait.val == 0) {
 32011                           
 32012                           ; BSR set to: 0
 32013                           ;incstack = 0
 32014   00A7E0  5019               	movf	_startWait^0,w,c
 32015   00A7E2  101A               	iorwf	(_startWait+1)^0,w,c
 32016   00A7E4  101B               	iorwf	(_startWait+2)^0,w,c
 32017   00A7E6  101C               	iorwf	(_startWait+3)^0,w,c
 32018   00A7E8  A4D8               	btfss	status,2,c
 32019   00A7EA  D00B               	goto	l21793
 32020                           
 32021                           ;../universalEvents.c: 340:         startWait.val = tickGet();
 32022   00A7EC  EC45  F05C         	call	_tickGet	;wreg free
 32023   00A7F0  C08D  F019         	movff	?_tickGet,_startWait
 32024   00A7F4  C08E  F01A         	movff	?_tickGet+1,_startWait+1
 32025   00A7F8  C08F  F01B         	movff	?_tickGet+2,_startWait+2
 32026   00A7FC  C090  F01C         	movff	?_tickGet+3,_startWait+3
 32027   00A800  0012               	return	
 32028   00A802                     l21793:
 32029                           
 32030                           ;../universalEvents.c: 344:         if (((tickGet() - startWait.val) > ((long)duration *
      +                           (long)(62500/10)))) {
 32031   00A802  EC45  F05C         	call	_tickGet	;wreg free
 32032   00A806  5019               	movf	_startWait^0,w,c
 32033   00A808  0100               	movlb	0	; () banked
 32034   00A80A  5D8D               	subwf	?_tickGet& (0+255),w,b
 32035   00A80C  6F9F               	movwf	??_doWait& (0+255),b
 32036   00A80E  501A               	movf	(_startWait+1)^0,w,c
 32037   00A810  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 32038   00A812  6FA0               	movwf	(??_doWait+1)& (0+255),b
 32039   00A814  501B               	movf	(_startWait+2)^0,w,c
 32040   00A816  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 32041   00A818  6FA1               	movwf	(??_doWait+2)& (0+255),b
 32042   00A81A  501C               	movf	(_startWait+3)^0,w,c
 32043   00A81C  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 32044   00A81E  6FA2               	movwf	(??_doWait+3)& (0+255),b
 32045   00A820  C09D  F091         	movff	doWait@duration,___lmul@multiplier
 32046   00A824  C09E  F092         	movff	doWait@duration+1,___lmul@multiplier+1
 32047   00A828  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
 32048   00A82A  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
 32049   00A82C  0E6A               	movlw	106
 32050   00A82E  6F95               	movwf	___lmul@multiplicand& (0+255),b
 32051   00A830  0E18               	movlw	24
 32052   00A832  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 32053   00A834  0E00               	movlw	0
 32054   00A836  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 32055   00A838  0E00               	movlw	0
 32056   00A83A  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 32057   00A83C  EC71  F05C         	call	___lmul	;wreg free
 32058   00A840  0100               	movlb	0	; () banked
 32059   00A842  519F               	movf	??_doWait& (0+255),w,b
 32060   00A844  5D91               	subwf	?___lmul& (0+255),w,b
 32061   00A846  51A0               	movf	(??_doWait+1)& (0+255),w,b
 32062   00A848  5992               	subwfb	(?___lmul+1)& (0+255),w,b
 32063   00A84A  51A1               	movf	(??_doWait+2)& (0+255),w,b
 32064   00A84C  5993               	subwfb	(?___lmul+2)& (0+255),w,b
 32065   00A84E  51A2               	movf	(??_doWait+3)& (0+255),w,b
 32066   00A850  5994               	subwfb	(?___lmul+3)& (0+255),w,b
 32067   00A852  B0D8               	btfsc	status,0,c
 32068   00A854  0012               	return	
 32069                           
 32070                           ; BSR set to: 0
 32071                           ;../universalEvents.c: 345:             doneTwoAction();
 32072   00A856  EC8D  F064         	call	_doneTwoAction	;wreg free
 32073                           
 32074                           ;../universalEvents.c: 346:             startWait.val = 0;
 32075   00A85A  0E00               	movlw	0
 32076   00A85C  6E19               	movwf	_startWait^0,c
 32077   00A85E  0E00               	movlw	0
 32078   00A860  6E1A               	movwf	(_startWait+1)^0,c
 32079   00A862  0E00               	movlw	0
 32080   00A864  6E1B               	movwf	(_startWait+2)^0,c
 32081   00A866  0E00               	movlw	0
 32082   00A868  6E1C               	movwf	(_startWait+3)^0,c
 32083   00A86A  0012               	return		;funcret
 32084   00A86C                     __end_of_doWait:
 32085                           	callstack 0
 32086                           
 32087 ;; *************** function _doneTwoAction *****************
 32088 ;; Defined at:
 32089 ;;		line 444 in file "../event_consumerDualActionQueue.c"
 32090 ;; Parameters:    Size  Location     Type
 32091 ;;		None
 32092 ;; Auto vars:     Size  Location     Type
 32093 ;;		None
 32094 ;; Return value:  Size  Location     Type
 32095 ;;                  1    wreg      void 
 32096 ;; Registers used:
 32097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32098 ;; Tracked objects:
 32099 ;;		On entry : 0/0
 32100 ;;		On exit  : 0/0
 32101 ;;		Unchanged: 0/0
 32102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32107 ;;Total ram usage:        0 bytes
 32108 ;; Hardware stack levels used: 1
 32109 ;; Hardware stack levels required when called: 13
 32110 ;; This function calls:
 32111 ;;		_popTwoAction
 32112 ;; This function is called by:
 32113 ;;		_processActions
 32114 ;;		_doWait
 32115 ;; This function uses a non-reentrant model
 32116 ;;
 32117                           
 32118                           	psect	text121
 32119   00C91A                     __ptext121:
 32120                           	callstack 0
 32121   00C91A                     _doneTwoAction:
 32122                           	callstack 15
 32123                           
 32124                           ;../event_consumerDualActionQueue.c: 445:  popTwoAction();
 32125                           
 32126                           ;incstack = 0
 32127   00C91A  ECBC  F061         	call	_popTwoAction	;wreg free
 32128   00C91E  0012               	return		;funcret
 32129   00C920                     __end_of_doneTwoAction:
 32130                           	callstack 0
 32131                           
 32132 ;; *************** function _popTwoAction *****************
 32133 ;; Defined at:
 32134 ;;		line 423 in file "../event_consumerDualActionQueue.c"
 32135 ;; Parameters:    Size  Location     Type
 32136 ;;		None
 32137 ;; Auto vars:     Size  Location     Type
 32138 ;;  ret             1    0        unsigned char 
 32139 ;; Return value:  Size  Location     Type
 32140 ;;                  1    wreg      unsigned char 
 32141 ;; Registers used:
 32142 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32143 ;; Tracked objects:
 32144 ;;		On entry : 0/0
 32145 ;;		On exit  : 0/0
 32146 ;;		Unchanged: 0/0
 32147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32152 ;;Total ram usage:        0 bytes
 32153 ;; Hardware stack levels used: 1
 32154 ;; Hardware stack levels required when called: 12
 32155 ;; This function calls:
 32156 ;;		Nothing
 32157 ;; This function is called by:
 32158 ;;		_doneTwoAction
 32159 ;; This function uses a non-reentrant model
 32160 ;;
 32161                           
 32162                           	psect	text122
 32163   00C378                     __ptext122:
 32164                           	callstack 0
 32165   00C378                     _popTwoAction:
 32166                           	callstack 15
 32167                           
 32168                           ;../event_consumerDualActionQueue.c: 424:     uint8_t ret;;../event_consumerDualActionQu
      +                          eue.c: 426:  if (expeditedWriteIndex != expeditedReadIndex) {
 32169                           
 32170                           ;incstack = 0
 32171   00C378  0100               	movlb	0	; () banked
 32172   00C37A  51CB               	movf	_expeditedReadIndex& (0+255),w,b
 32173   00C37C  19CA               	xorwf	_expeditedWriteIndex& (0+255),w,b
 32174   00C37E  B4D8               	btfsc	status,2,c
 32175   00C380  D007               	goto	l20265
 32176                           
 32177                           ; BSR set to: 0
 32178                           
 32179                           ; BSR set to: 0
 32180   00C382  2BCB               	incf	_expeditedReadIndex& (0+255),f,b
 32181                           
 32182                           ; BSR set to: 0
 32183                           ;../event_consumerDualActionQueue.c: 429:         if (expeditedReadIndex >= 8) expedited
      +                          ReadIndex = 0;
 32184   00C384  0E07               	movlw	7
 32185   00C386  65CB               	cpfsgt	_expeditedReadIndex& (0+255),b
 32186   00C388  0012               	return	
 32187                           
 32188                           ; BSR set to: 0
 32189   00C38A  0E00               	movlw	0
 32190   00C38C  6FCB               	movwf	_expeditedReadIndex& (0+255),b
 32191   00C38E  0012               	return	
 32192   00C390                     l20265:
 32193                           
 32194                           ; BSR set to: 0
 32195                           ;../event_consumerDualActionQueue.c: 433:  if (normalWriteIndex == normalReadIndex) {
 32196   00C390  51CD               	movf	_normalReadIndex& (0+255),w,b
 32197   00C392  19CC               	xorwf	_normalWriteIndex& (0+255),w,b
 32198   00C394  B4D8               	btfsc	status,2,c
 32199   00C396  0012               	return	
 32200                           
 32201                           ; BSR set to: 0
 32202                           
 32203                           ; BSR set to: 0
 32204   00C398  2BCD               	incf	_normalReadIndex& (0+255),f,b
 32205                           
 32206                           ; BSR set to: 0
 32207                           ;../event_consumerDualActionQueue.c: 437:  if (normalReadIndex >= 64) normalReadIndex = 
      +                          0;
 32208   00C39A  0E3F               	movlw	63
 32209   00C39C  65CD               	cpfsgt	_normalReadIndex& (0+255),b
 32210   00C39E  0012               	return	
 32211                           
 32212                           ; BSR set to: 0
 32213   00C3A0  0E00               	movlw	0
 32214   00C3A2  6FCD               	movwf	_normalReadIndex& (0+255),b
 32215                           
 32216                           ; BSR set to: 0
 32217   00C3A4  0012               	return		;funcret
 32218   00C3A6                     __end_of_popTwoAction:
 32219                           	callstack 0
 32220                           
 32221 ;; *************** function _doSOD *****************
 32222 ;; Defined at:
 32223 ;;		line 387 in file "../universalEvents.c"
 32224 ;; Parameters:    Size  Location     Type
 32225 ;;		None
 32226 ;; Auto vars:     Size  Location     Type
 32227 ;;		None
 32228 ;; Return value:  Size  Location     Type
 32229 ;;                  1    wreg      void 
 32230 ;; Registers used:
 32231 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32232 ;; Tracked objects:
 32233 ;;		On entry : 0/0
 32234 ;;		On exit  : 0/0
 32235 ;;		Unchanged: 0/0
 32236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32241 ;;Total ram usage:        0 bytes
 32242 ;; Hardware stack levels used: 1
 32243 ;; Hardware stack levels required when called: 13
 32244 ;; This function calls:
 32245 ;;		_findServiceIndex
 32246 ;;		_startTimedResponse
 32247 ;; This function is called by:
 32248 ;;		_processActions
 32249 ;; This function uses a non-reentrant model
 32250 ;;
 32251                           
 32252                           	psect	text123
 32253   00C7EA                     __ptext123:
 32254                           	callstack 0
 32255   00C7EA                     _doSOD:
 32256                           	callstack 15
 32257                           
 32258                           ;../universalEvents.c: 388:     startTimedResponse(1, findServiceIndex(SERVICE_ID_PRODUC
      +                          ER), sodTRCallback);
 32259                           
 32260                           ; BSR set to: 0
 32261                           ;incstack = 0
 32262   00C7EA  0E05               	movlw	5
 32263   00C7EC  EC1E  F058         	call	_findServiceIndex
 32264   00C7F0  0100               	movlb	0	; () banked
 32265   00C7F2  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 32266   00C7F4  0EB2               	movlw	low _sodTRCallback
 32267   00C7F6  6F92               	movwf	startTimedResponse@callback& (0+255),b
 32268   00C7F8  0E85               	movlw	high _sodTRCallback
 32269   00C7FA  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 32270   00C7FC  0E01               	movlw	1
 32271   00C7FE  EC75  F05F         	call	_startTimedResponse
 32272   00C802  0012               	return		;funcret
 32273   00C804                     __end_of_doSOD:
 32274                           	callstack 0
 32275                           
 32276 ;; *************** function _startTimedResponse *****************
 32277 ;; Defined at:
 32278 ;;		line 85 in file "../../VLCBlib_PIC/timedResponse.c"
 32279 ;; Parameters:    Size  Location     Type
 32280 ;;  type            1    wreg     unsigned char 
 32281 ;;  serviceIndex    1   49[BANK0 ] unsigned char 
 32282 ;;  callback        2   50[BANK0 ] PTR FTN(unsigned char ,u
 32283 ;;		 -> reqevCallback(1), nerdCallback(1), nvTRnvrdCallback(1), mnsTRserviceDiscoveryCallback(1), 
 32284 ;;		 -> mnsTRallDiagnosticsCallback(1), mnsTRrqnpnCallback(1), sodTRCallback(1), 
 32285 ;; Auto vars:     Size  Location     Type
 32286 ;;  type            1   52[BANK0 ] unsigned char 
 32287 ;; Return value:  Size  Location     Type
 32288 ;;                  1    wreg      void 
 32289 ;; Registers used:
 32290 ;;		wreg, status,2, status,0
 32291 ;; Tracked objects:
 32292 ;;		On entry : 0/0
 32293 ;;		On exit  : 0/0
 32294 ;;		Unchanged: 0/0
 32295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32296 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32297 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32299 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32300 ;;Total ram usage:        4 bytes
 32301 ;; Hardware stack levels used: 1
 32302 ;; Hardware stack levels required when called: 12
 32303 ;; This function calls:
 32304 ;;		Nothing
 32305 ;; This function is called by:
 32306 ;;		_doSOD
 32307 ;;		_mnsProcessMessage
 32308 ;;		_nvProcessMessage
 32309 ;;		_doNerd
 32310 ;;		_doReval
 32311 ;;		_doReqev
 32312 ;; This function uses a non-reentrant model
 32313 ;;
 32314                           
 32315                           	psect	text124
 32316   00BEEA                     __ptext124:
 32317                           	callstack 0
 32318   00BEEA                     _startTimedResponse:
 32319                           	callstack 15
 32320                           
 32321                           ;incstack = 0
 32322                           ;startTimedResponse@type stored from wreg
 32323   00BEEA  0100               	movlb	0	; () banked
 32324   00BEEC  6F94               	movwf	startTimedResponse@type& (0+255),b
 32325                           
 32326                           ;../../VLCBlib_PIC/timedResponse.c: 86:     timedResponseType = type;
 32327   00BEEE  C094  F0BC         	movff	startTimedResponse@type,_timedResponseType
 32328                           
 32329                           ;../../VLCBlib_PIC/timedResponse.c: 87:     if (serviceIndex == 0) {
 32330   00BEF2  0100               	movlb	0	; () banked
 32331   00BEF4  5191               	movf	startTimedResponse@serviceIndex& (0+255),w,b
 32332   00BEF6  A4D8               	btfss	status,2,c
 32333   00BEF8  D004               	goto	l20913
 32334                           
 32335                           ; BSR set to: 0
 32336                           ;../../VLCBlib_PIC/timedResponse.c: 89:         timedResponseAllServicesFlag = 1;
 32337   00BEFA  0E01               	movlw	1
 32338   00BEFC  6FBD               	movwf	_timedResponseAllServicesFlag& (0+255),b
 32339                           
 32340                           ;../../VLCBlib_PIC/timedResponse.c: 90:         timedResponseServiceIndex = 0;
 32341   00BEFE  0E00               	movlw	0
 32342   00BF00  D00B               	goto	L14
 32343   00BF02                     l20913:
 32344                           
 32345                           ; BSR set to: 0
 32346                           ;../../VLCBlib_PIC/timedResponse.c: 92:         timedResponseAllServicesFlag = 0;
 32347   00BF02  0E00               	movlw	0
 32348   00BF04  6FBD               	movwf	_timedResponseAllServicesFlag& (0+255),b
 32349                           
 32350                           ;../../VLCBlib_PIC/timedResponse.c: 93:         if ((serviceIndex < 1) || (serviceIndex 
      +                          > 9)) {
 32351   00BF06  5191               	movf	startTimedResponse@serviceIndex& (0+255),w,b
 32352   00BF08  B4D8               	btfsc	status,2,c
 32353   00BF0A  D003               	goto	u21810
 32354                           
 32355                           ; BSR set to: 0
 32356   00BF0C  0E09               	movlw	9
 32357   00BF0E  6591               	cpfsgt	startTimedResponse@serviceIndex& (0+255),b
 32358   00BF10  D002               	goto	l20917
 32359   00BF12                     u21810:
 32360                           
 32361                           ; BSR set to: 0
 32362                           ;../../VLCBlib_PIC/timedResponse.c: 95:             timedResponseType = 0xFF;
 32363   00BF12  69BC               	setf	_timedResponseType& (0+255),b
 32364                           
 32365                           ;../../VLCBlib_PIC/timedResponse.c: 96:             return;
 32366   00BF14  0012               	return	
 32367   00BF16                     l20917:
 32368                           
 32369                           ; BSR set to: 0
 32370                           ;../../VLCBlib_PIC/timedResponse.c: 98:         timedResponseServiceIndex = (uint8_t)ser
      +                          viceIndex-1;
 32371   00BF16  0591               	decf	startTimedResponse@serviceIndex& (0+255),w,b
 32372   00BF18                     L14:
 32373   00BF18  6FBE               	movwf	_timedResponseServiceIndex& (0+255),b
 32374                           
 32375                           ; BSR set to: 0
 32376                           ;../../VLCBlib_PIC/timedResponse.c: 100:     timedResponseStep = 0;
 32377   00BF1A  0E00               	movlw	0
 32378   00BF1C  6FBB               	movwf	_timedResponseStep& (0+255),b
 32379                           
 32380                           ; BSR set to: 0
 32381                           ;../../VLCBlib_PIC/timedResponse.c: 101:     timedResponseCallback = callback;
 32382   00BF1E  C092  F021         	movff	startTimedResponse@callback,_timedResponseCallback
 32383   00BF22  C093  F022         	movff	startTimedResponse@callback+1,_timedResponseCallback+1
 32384                           
 32385                           ; BSR set to: 0
 32386   00BF26  0012               	return		;funcret
 32387   00BF28                     __end_of_startTimedResponse:
 32388                           	callstack 0
 32389                           
 32390 ;; *************** function _findServiceIndex *****************
 32391 ;; Defined at:
 32392 ;;		line 823 in file "../../VLCBlib_PIC/vlcb.c"
 32393 ;; Parameters:    Size  Location     Type
 32394 ;;  serviceType     1    wreg     unsigned char 
 32395 ;; Auto vars:     Size  Location     Type
 32396 ;;  serviceType     1   47[BANK0 ] unsigned char 
 32397 ;;  i               1   48[BANK0 ] unsigned char 
 32398 ;; Return value:  Size  Location     Type
 32399 ;;                  1    wreg      unsigned char 
 32400 ;; Registers used:
 32401 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 32402 ;; Tracked objects:
 32403 ;;		On entry : 0/0
 32404 ;;		On exit  : 0/0
 32405 ;;		Unchanged: 0/0
 32406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32408 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32409 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32410 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32411 ;;Total ram usage:        4 bytes
 32412 ;; Hardware stack levels used: 1
 32413 ;; Hardware stack levels required when called: 12
 32414 ;; This function calls:
 32415 ;;		Nothing
 32416 ;; This function is called by:
 32417 ;;		_doSOD
 32418 ;;		_mnsProcessMessage
 32419 ;;		_nvProcessMessage
 32420 ;;		_doNerd
 32421 ;;		_doReval
 32422 ;;		_doReqev
 32423 ;; This function uses a non-reentrant model
 32424 ;;
 32425                           
 32426                           	psect	text125
 32427   00B03C                     __ptext125:
 32428                           	callstack 0
 32429   00B03C                     _findServiceIndex:
 32430                           	callstack 15
 32431                           
 32432                           ; BSR set to: 0
 32433                           ;incstack = 0
 32434                           ;findServiceIndex@serviceType stored from wreg
 32435   00B03C  0100               	movlb	0	; () banked
 32436   00B03E  6F8F               	movwf	findServiceIndex@serviceType& (0+255),b
 32437                           
 32438                           ;../../VLCBlib_PIC/vlcb.c: 824:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 825:     for (i
      +                          =0; i<9; i++) {
 32439   00B040  0E00               	movlw	0
 32440   00B042  0100               	movlb	0	; () banked
 32441   00B044  6F90               	movwf	findServiceIndex@i& (0+255),b
 32442   00B046                     l20891:
 32443                           
 32444                           ; BSR set to: 0
 32445                           ;../../VLCBlib_PIC/vlcb.c: 826:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == serviceType)) {
 32446   00B046  5190               	movf	findServiceIndex@i& (0+255),w,b
 32447   00B048  0D02               	mullw	2
 32448   00B04A  0E69               	movlw	low _services
 32449   00B04C  24F3               	addwf	243,w,c
 32450   00B04E  6EF6               	movwf	tblptrl,c
 32451   00B050  0EEE               	movlw	high _services
 32452   00B052  20F4               	addwfc	244,w,c
 32453   00B054  6EF7               	movwf	tblptrh,c
 32454   00B056                     	if	1	;There are 3 active tblptr bytes
 32455   00B056  6AF8               	clrf	tblptru,c
 32456   00B058  0E00               	movlw	low (__mediumconst shr (0+16))
 32457   00B05A  22F8               	addwfc	tblptru,f,c
 32458   00B05C                     	endif
 32459   00B05C  0009               	tblrd		*+
 32460   00B05E  50F5               	movf	tablat,w,c
 32461   00B060  0009               	tblrd		*+
 32462   00B062  10F5               	iorwf	tablat,w,c
 32463   00B064  B4D8               	btfsc	status,2,c
 32464   00B066  D01D               	goto	l20899
 32465                           
 32466                           ; BSR set to: 0
 32467   00B068  5190               	movf	findServiceIndex@i& (0+255),w,b
 32468   00B06A  0D02               	mullw	2
 32469   00B06C  0E69               	movlw	low _services
 32470   00B06E  24F3               	addwf	243,w,c
 32471   00B070  6EF6               	movwf	tblptrl,c
 32472   00B072  0EEE               	movlw	high _services
 32473   00B074  20F4               	addwfc	244,w,c
 32474   00B076  6EF7               	movwf	tblptrh,c
 32475   00B078                     	if	1	;There are 3 active tblptr bytes
 32476   00B078  6AF8               	clrf	tblptru,c
 32477   00B07A  0E00               	movlw	low (__mediumconst shr (0+16))
 32478   00B07C  22F8               	addwfc	tblptru,f,c
 32479   00B07E                     	endif
 32480   00B07E  0009               	tblrd		*+
 32481   00B080  CFF5 F08D          	movff	tablat,??_findServiceIndex
 32482   00B084  0009               	tblrd		*+
 32483   00B086  CFF5 F08E          	movff	tablat,??_findServiceIndex+1
 32484   00B08A  C08D  FFF6         	movff	??_findServiceIndex,tblptrl
 32485   00B08E  C08E  FFF7         	movff	??_findServiceIndex+1,tblptrh
 32486   00B092                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 32487   00B092  6AF8               	clrf	tblptru,c
 32488   00B094                     	endif
 32489   00B094                     	if	0	;tblptru may be non-zero
 32490   00B094                     	endif
 32491   00B094  0008               	tblrd		*
 32492   00B096  50F5               	movf	tablat,w,c
 32493   00B098  198F               	xorwf	findServiceIndex@serviceType& (0+255),w,b
 32494   00B09A  A4D8               	btfss	status,2,c
 32495   00B09C  D002               	goto	l20899
 32496                           
 32497                           ; BSR set to: 0
 32498                           ;../../VLCBlib_PIC/vlcb.c: 827:             return i;
 32499   00B09E  5190               	movf	findServiceIndex@i& (0+255),w,b
 32500   00B0A0  0012               	return	
 32501   00B0A2                     l20899:
 32502                           
 32503                           ; BSR set to: 0
 32504                           ;../../VLCBlib_PIC/vlcb.c: 829:     }
 32505   00B0A2  2B90               	incf	findServiceIndex@i& (0+255),f,b
 32506                           
 32507                           ; BSR set to: 0
 32508   00B0A4  0E08               	movlw	8
 32509   00B0A6  6590               	cpfsgt	findServiceIndex@i& (0+255),b
 32510   00B0A8  D7CE               	goto	l20891
 32511                           
 32512                           ; BSR set to: 0
 32513                           ;../../VLCBlib_PIC/vlcb.c: 830:     return 0xFF;
 32514   00B0AA  0EFF               	movlw	255
 32515                           
 32516                           ; BSR set to: 0
 32517   00B0AC  0012               	return		;funcret
 32518   00B0AE                     __end_of_findServiceIndex:
 32519                           	callstack 0
 32520                           
 32521 ;; *************** function _deleteTwoActionQueue *****************
 32522 ;; Defined at:
 32523 ;;		line 483 in file "../event_consumerDualActionQueue.c"
 32524 ;; Parameters:    Size  Location     Type
 32525 ;;  index           1    wreg     unsigned char 
 32526 ;; Auto vars:     Size  Location     Type
 32527 ;;  index           1   46[BANK0 ] unsigned char 
 32528 ;;  qty             1   45[BANK0 ] unsigned char 
 32529 ;; Return value:  Size  Location     Type
 32530 ;;                  1    wreg      void 
 32531 ;; Registers used:
 32532 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32533 ;; Tracked objects:
 32534 ;;		On entry : 0/0
 32535 ;;		On exit  : 0/0
 32536 ;;		Unchanged: 0/0
 32537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32539 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32541 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32542 ;;Total ram usage:        2 bytes
 32543 ;; Hardware stack levels used: 1
 32544 ;; Hardware stack levels required when called: 12
 32545 ;; This function calls:
 32546 ;;		Nothing
 32547 ;; This function is called by:
 32548 ;;		_processActions
 32549 ;; This function uses a non-reentrant model
 32550 ;;
 32551                           
 32552                           	psect	text126
 32553   00AB86                     __ptext126:
 32554                           	callstack 0
 32555   00AB86                     _deleteTwoActionQueue:
 32556                           	callstack 16
 32557                           
 32558                           ; BSR set to: 0
 32559                           ;incstack = 0
 32560                           ;deleteTwoActionQueue@index stored from wreg
 32561   00AB86  0100               	movlb	0	; () banked
 32562   00AB88  6F8E               	movwf	deleteTwoActionQueue@index& (0+255),b
 32563                           
 32564                           ;../event_consumerDualActionQueue.c: 484:     uint8_t qty;;../event_consumerDualActionQu
      +                          eue.c: 485:     qty = (expeditedWriteIndex - expeditedReadIndex) & (8 -1);
 32565   00AB8A  0100               	movlb	0	; () banked
 32566   00AB8C  51CB               	movf	_expeditedReadIndex& (0+255),w,b
 32567   00AB8E  5DCA               	subwf	_expeditedWriteIndex& (0+255),w,b
 32568   00AB90  0B07               	andlw	7
 32569   00AB92  6F8D               	movwf	deleteTwoActionQueue@qty& (0+255),b
 32570                           
 32571                           ;../event_consumerDualActionQueue.c: 486:     if (index < qty) {
 32572   00AB94  518D               	movf	deleteTwoActionQueue@qty& (0+255),w,b
 32573   00AB96  5D8E               	subwf	deleteTwoActionQueue@index& (0+255),w,b
 32574   00AB98  B0D8               	btfsc	status,0,c
 32575   00AB9A  D013               	goto	l21767
 32576                           
 32577                           ; BSR set to: 0
 32578                           ;../event_consumerDualActionQueue.c: 487:         index += expeditedReadIndex;
 32579   00AB9C  51CB               	movf	_expeditedReadIndex& (0+255),w,b
 32580   00AB9E  278E               	addwf	deleteTwoActionQueue@index& (0+255),f,b
 32581                           
 32582                           ;../event_consumerDualActionQueue.c: 488:         if (index >= 8) {
 32583   00ABA0  0E07               	movlw	7
 32584   00ABA2  658E               	cpfsgt	deleteTwoActionQueue@index& (0+255),b
 32585   00ABA4  D002               	goto	l556
 32586                           
 32587                           ; BSR set to: 0
 32588                           ;../event_consumerDualActionQueue.c: 489:             index -= 8;
 32589   00ABA6  0E08               	movlw	8
 32590   00ABA8  5F8E               	subwf	deleteTwoActionQueue@index& (0+255),f,b
 32591   00ABAA                     l556:
 32592                           
 32593                           ; BSR set to: 0
 32594                           ;../event_consumerDualActionQueue.c: 491:         if (index == expeditedWriteIndex) retu
      +                          rn;
 32595   00ABAA  51CA               	movf	_expeditedWriteIndex& (0+255),w,b
 32596   00ABAC  198E               	xorwf	deleteTwoActionQueue@index& (0+255),w,b
 32597   00ABAE  B4D8               	btfsc	status,2,c
 32598   00ABB0  0012               	return	
 32599                           
 32600                           ; BSR set to: 0
 32601                           ;../event_consumerDualActionQueue.c: 492:         expeditedQueueBuf[index] = 0;
 32602   00ABB2  0EC4               	movlw	low _expeditedQueueBuf
 32603   00ABB4  258E               	addwf	deleteTwoActionQueue@index& (0+255),w,b
 32604   00ABB6  6ED9               	movwf	fsr2l,c
 32605   00ABB8  6ADA               	clrf	fsr2h,c
 32606   00ABBA  0E02               	movlw	high _expeditedQueueBuf
 32607   00ABBC  22DA               	addwfc	fsr2h,f,c
 32608   00ABBE  6ADF               	clrf	indf2,c
 32609   00ABC0  0012               	return	
 32610   00ABC2                     l21767:
 32611                           
 32612                           ; BSR set to: 0
 32613                           ;../event_consumerDualActionQueue.c: 495:     index -= qty;
 32614   00ABC2  518D               	movf	deleteTwoActionQueue@qty& (0+255),w,b
 32615   00ABC4  5F8E               	subwf	deleteTwoActionQueue@index& (0+255),f,b
 32616                           
 32617                           ;../event_consumerDualActionQueue.c: 496:     qty = (normalWriteIndex - normalReadIndex)
      +                           & (64 -1);
 32618   00ABC6  51CD               	movf	_normalReadIndex& (0+255),w,b
 32619   00ABC8  5DCC               	subwf	_normalWriteIndex& (0+255),w,b
 32620   00ABCA  0B3F               	andlw	63
 32621   00ABCC  6F8D               	movwf	deleteTwoActionQueue@qty& (0+255),b
 32622                           
 32623                           ;../event_consumerDualActionQueue.c: 497:     if (index < qty) {
 32624   00ABCE  518D               	movf	deleteTwoActionQueue@qty& (0+255),w,b
 32625   00ABD0  5D8E               	subwf	deleteTwoActionQueue@index& (0+255),w,b
 32626   00ABD2  B0D8               	btfsc	status,0,c
 32627   00ABD4  0012               	return	
 32628                           
 32629                           ; BSR set to: 0
 32630                           ;../event_consumerDualActionQueue.c: 498:         if (normalReadIndex == normalWriteInde
      +                          x) return;
 32631   00ABD6  51CC               	movf	_normalWriteIndex& (0+255),w,b
 32632   00ABD8  19CD               	xorwf	_normalReadIndex& (0+255),w,b
 32633   00ABDA  B4D8               	btfsc	status,2,c
 32634   00ABDC  0012               	return	
 32635                           
 32636                           ; BSR set to: 0
 32637                           ;../event_consumerDualActionQueue.c: 499:         index += normalReadIndex;
 32638   00ABDE  51CD               	movf	_normalReadIndex& (0+255),w,b
 32639   00ABE0  278E               	addwf	deleteTwoActionQueue@index& (0+255),f,b
 32640                           
 32641                           ;../event_consumerDualActionQueue.c: 500:         if (index >= 64) {
 32642   00ABE2  0E3F               	movlw	63
 32643   00ABE4  658E               	cpfsgt	deleteTwoActionQueue@index& (0+255),b
 32644   00ABE6  D002               	goto	l561
 32645                           
 32646                           ; BSR set to: 0
 32647                           ;../event_consumerDualActionQueue.c: 501:             index -= 64;
 32648   00ABE8  0E40               	movlw	64
 32649   00ABEA  5F8E               	subwf	deleteTwoActionQueue@index& (0+255),f,b
 32650   00ABEC                     l561:
 32651                           
 32652                           ; BSR set to: 0
 32653                           ;../event_consumerDualActionQueue.c: 503:         if (index == normalWriteIndex) return;
 32654   00ABEC  51CC               	movf	_normalWriteIndex& (0+255),w,b
 32655   00ABEE  198E               	xorwf	deleteTwoActionQueue@index& (0+255),w,b
 32656   00ABF0  B4D8               	btfsc	status,2,c
 32657   00ABF2  0012               	return	
 32658                           
 32659                           ; BSR set to: 0
 32660                           ;../event_consumerDualActionQueue.c: 504:         normalQueueBuf[index] = 0;
 32661   00ABF4  0E80               	movlw	low _normalQueueBuf
 32662   00ABF6  258E               	addwf	deleteTwoActionQueue@index& (0+255),w,b
 32663   00ABF8  6ED9               	movwf	fsr2l,c
 32664   00ABFA  6ADA               	clrf	fsr2h,c
 32665   00ABFC  0E04               	movlw	high _normalQueueBuf
 32666   00ABFE  22DA               	addwfc	fsr2h,f,c
 32667   00AC00  6ADF               	clrf	indf2,c
 32668                           
 32669                           ; BSR set to: 0
 32670   00AC02  0012               	return		;funcret
 32671   00AC04                     __end_of_deleteTwoActionQueue:
 32672                           	callstack 0
 32673                           
 32674 ;; *************** function _completed *****************
 32675 ;; Defined at:
 32676 ;;		line 219 in file "../outputs.c"
 32677 ;; Parameters:    Size  Location     Type
 32678 ;;  io              1    wreg     unsigned char 
 32679 ;;  action          1   45[BANK0 ] unsigned char 
 32680 ;;  type            1   46[BANK0 ] unsigned char 
 32681 ;; Auto vars:     Size  Location     Type
 32682 ;;  io              1   50[BANK0 ] unsigned char 
 32683 ;; Return value:  Size  Location     Type
 32684 ;;                  1    wreg      enum E12767
 32685 ;; Registers used:
 32686 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 32687 ;; Tracked objects:
 32688 ;;		On entry : 0/0
 32689 ;;		On exit  : 0/0
 32690 ;;		Unchanged: 0/0
 32691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32692 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32693 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32694 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32695 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32696 ;;Total ram usage:        6 bytes
 32697 ;; Hardware stack levels used: 1
 32698 ;; Hardware stack levels required when called: 12
 32699 ;; This function calls:
 32700 ;;		Nothing
 32701 ;; This function is called by:
 32702 ;;		_processActions
 32703 ;; This function uses a non-reentrant model
 32704 ;;
 32705                           
 32706                           	psect	text127
 32707   00A50E                     __ptext127:
 32708                           	callstack 0
 32709   00A50E                     _completed:
 32710                           	callstack 16
 32711                           
 32712                           ; BSR set to: 0
 32713                           ;incstack = 0
 32714                           ;completed@io stored from wreg
 32715   00A50E  0100               	movlb	0	; () banked
 32716   00A510  6F92               	movwf	completed@io& (0+255),b
 32717                           
 32718                           ;../outputs.c: 220:     switch(type) {
 32719   00A512  D035               	goto	l21893
 32720   00A514                     l21871:
 32721                           
 32722                           ; BSR set to: 0
 32723                           ;../outputs.c: 223:             return TRUE;
 32724   00A514  0E01               	movlw	1
 32725   00A516  0012               	return	
 32726   00A518                     l21875:
 32727                           
 32728                           ; BSR set to: 0
 32729                           ;../outputs.c: 226:             return pulseDelays[io] == 1;
 32730   00A518  0EA4               	movlw	low _pulseDelays
 32731   00A51A  2592               	addwf	completed@io& (0+255),w,b
 32732   00A51C  6ED9               	movwf	fsr2l,c
 32733   00A51E  6ADA               	clrf	fsr2h,c
 32734   00A520  0E02               	movlw	high _pulseDelays
 32735   00A522  22DA               	addwfc	fsr2h,f,c
 32736   00A524  04DE               	decf	postinc2,w,c
 32737   00A526  A4D8               	btfss	status,2,c
 32738   00A528  D002               	goto	u22830
 32739   00A52A  0E01               	movlw	1
 32740   00A52C  0012               	return	
 32741   00A52E                     u22830:
 32742   00A52E  0E00               	movlw	0
 32743   00A530  0012               	return	
 32744   00A532                     l21879:
 32745                           
 32746                           ; BSR set to: 0
 32747                           ;../outputs.c: 235:             return (targetPos[io] == currentPos[io]) && ((servoState
      +                          [io] == SS_STOPPED) || (servoState[io] == SS_OFF));
 32748   00A532  0E00               	movlw	0
 32749   00A534  6F91               	movwf	_completed$1545& (0+255),b
 32750                           
 32751                           ; BSR set to: 0
 32752   00A536  0E30               	movlw	low _currentPos
 32753   00A538  2592               	addwf	completed@io& (0+255),w,b
 32754   00A53A  6ED9               	movwf	fsr2l,c
 32755   00A53C  6ADA               	clrf	fsr2h,c
 32756   00A53E  0E01               	movlw	high _currentPos
 32757   00A540  22DA               	addwfc	fsr2h,f,c
 32758   00A542  5192               	movf	completed@io& (0+255),w,b
 32759   00A544  0F01               	addlw	low _targetPos
 32760   00A546  6EE1               	movwf	fsr1l,c
 32761   00A548  6AE2               	clrf	fsr1h,c
 32762   00A54A  50DE               	movf	postinc2,w,c
 32763   00A54C  18E6               	xorwf	postinc1,w,c
 32764   00A54E  A4D8               	btfss	status,2,c
 32765   00A550  D014               	goto	l917
 32766                           
 32767                           ; BSR set to: 0
 32768   00A552  0E10               	movlw	low _servoState
 32769   00A554  2592               	addwf	completed@io& (0+255),w,b
 32770   00A556  6ED9               	movwf	fsr2l,c
 32771   00A558  6ADA               	clrf	fsr2h,c
 32772   00A55A  0E01               	movlw	high _servoState
 32773   00A55C  22DA               	addwfc	fsr2h,f,c
 32774   00A55E  04DE               	decf	postinc2,w,c
 32775   00A560  B4D8               	btfsc	status,2,c
 32776   00A562  D009               	goto	u22870
 32777                           
 32778                           ; BSR set to: 0
 32779   00A564  0E10               	movlw	low _servoState
 32780   00A566  2592               	addwf	completed@io& (0+255),w,b
 32781   00A568  6ED9               	movwf	fsr2l,c
 32782   00A56A  6ADA               	clrf	fsr2h,c
 32783   00A56C  0E01               	movlw	high _servoState
 32784   00A56E  22DA               	addwfc	fsr2h,f,c
 32785   00A570  50DF               	movf	indf2,w,c
 32786   00A572  A4D8               	btfss	status,2,c
 32787   00A574  D002               	goto	l917
 32788   00A576                     u22870:
 32789                           
 32790                           ; BSR set to: 0
 32791   00A576  0E01               	movlw	1
 32792   00A578  6F91               	movwf	_completed$1545& (0+255),b
 32793   00A57A                     l917:
 32794                           
 32795                           ; BSR set to: 0
 32796   00A57A  5191               	movf	_completed$1545& (0+255),w,b
 32797   00A57C  0012               	return	
 32798   00A57E                     l21893:
 32799   00A57E  0100               	movlb	0	; () banked
 32800   00A580  518E               	movf	completed@type& (0+255),w,b
 32801                           
 32802                           ; Switch size 1, requested type "simple"
 32803                           ; Number of cases is 5, Range of values is 0 to 4
 32804                           ; switch strategies available:
 32805                           ; Name         Instructions Cycles
 32806                           ; simple_byte           16     9 (average)
 32807                           ;	Chosen strategy is simple_byte
 32808   00A582  0A00               	xorlw	0	; case 0
 32809   00A584  B4D8               	btfsc	status,2,c
 32810   00A586  D7C6               	goto	l21871
 32811   00A588  0A01               	xorlw	1	; case 1
 32812   00A58A  B4D8               	btfsc	status,2,c
 32813   00A58C  D7C5               	goto	l21875
 32814   00A58E  0A03               	xorlw	3	; case 2
 32815   00A590  B4D8               	btfsc	status,2,c
 32816   00A592  D7CF               	goto	l21879
 32817   00A594  0A01               	xorlw	1	; case 3
 32818   00A596  B4D8               	btfsc	status,2,c
 32819   00A598  D7CC               	goto	l21879
 32820   00A59A  0A07               	xorlw	7	; case 4
 32821   00A59C  B4D8               	btfsc	status,2,c
 32822   00A59E  D7C9               	goto	l21879
 32823   00A5A0  D7B9               	goto	l21871
 32824   00A5A2                     __end_of_completed:
 32825                           	callstack 0
 32826                           
 32827 ;; *************** function _inputScan *****************
 32828 ;; Defined at:
 32829 ;;		line 101 in file "../inputs.c"
 32830 ;; Parameters:    Size  Location     Type
 32831 ;;		None
 32832 ;; Auto vars:     Size  Location     Type
 32833 ;;  change          1   20[BANK1 ] enum E12717
 32834 ;;  input           1   21[BANK1 ] unsigned char 
 32835 ;; Return value:  Size  Location     Type
 32836 ;;                  1    wreg      void 
 32837 ;; Registers used:
 32838 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32839 ;; Tracked objects:
 32840 ;;		On entry : 0/0
 32841 ;;		On exit  : 0/0
 32842 ;;		Unchanged: 0/0
 32843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32845 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32846 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32847 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32848 ;;Total ram usage:        4 bytes
 32849 ;; Hardware stack levels used: 1
 32850 ;; Hardware stack levels required when called: 18
 32851 ;; This function calls:
 32852 ;;		_getNV
 32853 ;;		_readInput
 32854 ;;		_sendProducedEvent
 32855 ;;		_writeNVM
 32856 ;; This function is called by:
 32857 ;;		_loop
 32858 ;; This function uses a non-reentrant model
 32859 ;;
 32860                           
 32861                           	psect	text128
 32862   005166                     __ptext128:
 32863                           	callstack 0
 32864   005166                     _inputScan:
 32865                           	callstack 11
 32866                           
 32867                           ;../inputs.c: 102:     for (io=0; io< 16; io++) {
 32868                           
 32869                           ; BSR set to: 0
 32870                           ;incstack = 0
 32871   005166  0E00               	movlw	0
 32872   005168  0100               	movlb	0	; () banked
 32873   00516A  6FCE               	movwf	_io@inputs$F849& (0+255),b
 32874   00516C                     l23233:
 32875                           
 32876                           ; BSR set to: 0
 32877   00516C  0E0F               	movlw	15
 32878   00516E  65CE               	cpfsgt	_io@inputs$F849& (0+255),b
 32879   005170  D001               	goto	l23237
 32880   005172  0012               	return	
 32881   005174                     l23237:
 32882                           
 32883                           ; BSR set to: 0
 32884                           ;../inputs.c: 103:         if (getNV((16 + 7*(io) + 0)) == 0) {
 32885   005174  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32886   005176  0D07               	mullw	7
 32887   005178  50F3               	movf	243,w,c
 32888   00517A  0F10               	addlw	16
 32889   00517C  ECD2  F05F         	call	_getNV
 32890   005180  0100               	movlb	0	; () banked
 32891   005182  518D               	movf	?_getNV& (0+255),w,b
 32892   005184  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 32893   005186  A4D8               	btfss	status,2,c
 32894   005188  D156               	goto	l23299
 32895                           
 32896                           ; BSR set to: 0
 32897                           ;../inputs.c: 104:             uint8_t input = readInput(io);
 32898   00518A  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32899   00518C  ECCD  F040         	call	_readInput
 32900   005190  0101               	movlb	1	; () banked
 32901   005192  6FD3               	movwf	inputScan@input& (0+255),b
 32902                           
 32903                           ; BSR set to: 1
 32904                           ;../inputs.c: 105:             if (input != inputState[io]) {
 32905   005194  0E94               	movlw	low _inputState
 32906   005196  0100               	movlb	0	; () banked
 32907   005198  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32908   00519A  6ED9               	movwf	fsr2l,c
 32909   00519C  6ADA               	clrf	fsr2h,c
 32910   00519E  0E02               	movlw	high _inputState
 32911   0051A0  22DA               	addwfc	fsr2h,f,c
 32912   0051A2  0101               	movlb	1	; () banked
 32913   0051A4  51D3               	movf	inputScan@input& (0+255),w,b
 32914   0051A6  18DE               	xorwf	postinc2,w,c
 32915   0051A8  B4D8               	btfsc	status,2,c
 32916   0051AA  D13D               	goto	l23297
 32917                           
 32918                           ; BSR set to: 1
 32919                           ;../inputs.c: 106:                 Boolean change = FALSE;
 32920   0051AC  0E00               	movlw	0
 32921   0051AE  6FD2               	movwf	inputScan@change& (0+255),b
 32922                           
 32923                           ; BSR set to: 1
 32924                           ;../inputs.c: 108:                 if (inputState[io] && (delayCount[io] == getNV((16 + 
      +                          7*(io) + 2)))) {
 32925   0051B0  0E94               	movlw	low _inputState
 32926   0051B2  0100               	movlb	0	; () banked
 32927   0051B4  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32928   0051B6  6ED9               	movwf	fsr2l,c
 32929   0051B8  6ADA               	clrf	fsr2h,c
 32930   0051BA  0E02               	movlw	high _inputState
 32931   0051BC  22DA               	addwfc	fsr2h,f,c
 32932   0051BE  50DF               	movf	indf2,w,c
 32933   0051C0  B4D8               	btfsc	status,2,c
 32934   0051C2  D01E               	goto	l23251
 32935                           
 32936                           ; BSR set to: 0
 32937   0051C4  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32938   0051C6  0D07               	mullw	7
 32939   0051C8  50F3               	movf	243,w,c
 32940   0051CA  0F12               	addlw	18
 32941   0051CC  ECD2  F05F         	call	_getNV
 32942   0051D0  0E84               	movlw	low _delayCount
 32943   0051D2  0100               	movlb	0	; () banked
 32944   0051D4  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32945   0051D6  6ED9               	movwf	fsr2l,c
 32946   0051D8  6ADA               	clrf	fsr2h,c
 32947   0051DA  0E02               	movlw	high _delayCount
 32948   0051DC  22DA               	addwfc	fsr2h,f,c
 32949   0051DE  50DF               	movf	indf2,w,c
 32950   0051E0  0101               	movlb	1	; () banked
 32951   0051E2  6FD0               	movwf	??_inputScan& (0+255),b
 32952   0051E4  6BD1               	clrf	(??_inputScan+1)& (0+255),b
 32953   0051E6  0100               	movlb	0	; () banked
 32954   0051E8  518D               	movf	?_getNV& (0+255),w,b
 32955   0051EA  0101               	movlb	1	; () banked
 32956   0051EC  19D0               	xorwf	??_inputScan& (0+255),w,b
 32957   0051EE  E108               	bnz	l23251
 32958   0051F0  0100               	movlb	0	; () banked
 32959   0051F2  518E               	movf	(?_getNV+1)& (0+255),w,b
 32960   0051F4  0101               	movlb	1	; () banked
 32961   0051F6  19D1               	xorwf	(??_inputScan+1)& (0+255),w,b
 32962   0051F8  A4D8               	btfss	status,2,c
 32963   0051FA  D002               	goto	l23251
 32964                           
 32965                           ; BSR set to: 1
 32966                           ;../inputs.c: 109:                     change = TRUE;
 32967   0051FC  0E01               	movlw	1
 32968   0051FE  6FD2               	movwf	inputScan@change& (0+255),b
 32969   005200                     l23251:
 32970                           
 32971                           ;../inputs.c: 111:                 if (!inputState[io] && (delayCount[io] == getNV((16 +
      +                           7*(io) + 3)))) {
 32972   005200  0E94               	movlw	low _inputState
 32973   005202  0100               	movlb	0	; () banked
 32974   005204  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32975   005206  6ED9               	movwf	fsr2l,c
 32976   005208  6ADA               	clrf	fsr2h,c
 32977   00520A  0E02               	movlw	high _inputState
 32978   00520C  22DA               	addwfc	fsr2h,f,c
 32979   00520E  50DF               	movf	indf2,w,c
 32980   005210  A4D8               	btfss	status,2,c
 32981   005212  D01E               	goto	l353
 32982                           
 32983                           ; BSR set to: 0
 32984   005214  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32985   005216  0D07               	mullw	7
 32986   005218  50F3               	movf	243,w,c
 32987   00521A  0F13               	addlw	19
 32988   00521C  ECD2  F05F         	call	_getNV
 32989   005220  0E84               	movlw	low _delayCount
 32990   005222  0100               	movlb	0	; () banked
 32991   005224  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32992   005226  6ED9               	movwf	fsr2l,c
 32993   005228  6ADA               	clrf	fsr2h,c
 32994   00522A  0E02               	movlw	high _delayCount
 32995   00522C  22DA               	addwfc	fsr2h,f,c
 32996   00522E  50DF               	movf	indf2,w,c
 32997   005230  0101               	movlb	1	; () banked
 32998   005232  6FD0               	movwf	??_inputScan& (0+255),b
 32999   005234  6BD1               	clrf	(??_inputScan+1)& (0+255),b
 33000   005236  0100               	movlb	0	; () banked
 33001   005238  518D               	movf	?_getNV& (0+255),w,b
 33002   00523A  0101               	movlb	1	; () banked
 33003   00523C  19D0               	xorwf	??_inputScan& (0+255),w,b
 33004   00523E  E108               	bnz	l353
 33005   005240  0100               	movlb	0	; () banked
 33006   005242  518E               	movf	(?_getNV+1)& (0+255),w,b
 33007   005244  0101               	movlb	1	; () banked
 33008   005246  19D1               	xorwf	(??_inputScan+1)& (0+255),w,b
 33009   005248  A4D8               	btfss	status,2,c
 33010   00524A  D002               	goto	l353
 33011                           
 33012                           ; BSR set to: 1
 33013                           ;../inputs.c: 112:                     change = TRUE;
 33014   00524C  0E01               	movlw	1
 33015   00524E  6FD2               	movwf	inputScan@change& (0+255),b
 33016   005250                     l353:
 33017                           
 33018                           ;../inputs.c: 114:                 if (change) {
 33019   005250  0101               	movlb	1	; () banked
 33020   005252  51D2               	movf	inputScan@change& (0+255),w,b
 33021   005254  B4D8               	btfsc	status,2,c
 33022   005256  D0DE               	goto	l23295
 33023                           
 33024                           ; BSR set to: 1
 33025                           ;../inputs.c: 116:                     delayCount[io] = 0;
 33026   005258  0E84               	movlw	low _delayCount
 33027   00525A  0100               	movlb	0	; () banked
 33028   00525C  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 33029   00525E  6ED9               	movwf	fsr2l,c
 33030   005260  6ADA               	clrf	fsr2h,c
 33031   005262  0E02               	movlw	high _delayCount
 33032   005264  22DA               	addwfc	fsr2h,f,c
 33033   005266  6ADF               	clrf	indf2,c
 33034                           
 33035                           ;../inputs.c: 117:                     inputState[io] = input;
 33036   005268  0E94               	movlw	low _inputState
 33037   00526A  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 33038   00526C  6ED9               	movwf	fsr2l,c
 33039   00526E  6ADA               	clrf	fsr2h,c
 33040   005270  0E02               	movlw	high _inputState
 33041   005272  22DA               	addwfc	fsr2h,f,c
 33042   005274  C1D3  FFDF         	movff	inputScan@input,indf2
 33043                           
 33044                           ; BSR set to: 0
 33045                           ;../inputs.c: 119:                     if (!(getNV((16 + 7*(io) + 1)) & 0x01)) {
 33046   005278  51CE               	movf	_io@inputs$F849& (0+255),w,b
 33047   00527A  0D07               	mullw	7
 33048   00527C  50F3               	movf	243,w,c
 33049   00527E  0F11               	addlw	17
 33050   005280  ECD2  F05F         	call	_getNV
 33051   005284  0100               	movlb	0	; () banked
 33052   005286  B18D               	btfsc	?_getNV& (0+255),0,b
 33053   005288  D008               	goto	l23263
 33054                           
 33055                           ; BSR set to: 0
 33056                           ;../inputs.c: 120:                         input = !input;
 33057   00528A  0101               	movlb	1	; () banked
 33058   00528C  51D3               	movf	inputScan@input& (0+255),w,b
 33059   00528E  A4D8               	btfss	status,2,c
 33060   005290  D002               	goto	u25090
 33061   005292  0E01               	movlw	1
 33062   005294  D001               	goto	u25100
 33063   005296                     u25090:
 33064   005296  0E00               	movlw	0
 33065   005298                     u25100:
 33066   005298  6FD3               	movwf	inputScan@input& (0+255),b
 33067   00529A                     l23263:
 33068                           
 33069                           ;../inputs.c: 123:                     if (getNV((16 + 7*(io) + 1)) & 0x10) {
 33070   00529A  0100               	movlb	0	; () banked
 33071   00529C  51CE               	movf	_io@inputs$F849& (0+255),w,b
 33072   00529E  0D07               	mullw	7
 33073   0052A0  50F3               	movf	243,w,c
 33074   0052A2  0F11               	addlw	17
 33075   0052A4  ECD2  F05F         	call	_getNV
 33076   0052A8  0100               	movlb	0	; () banked
 33077   0052AA  A98D               	btfss	?_getNV& (0+255),4,b
 33078   0052AC  D031               	goto	l23271
 33079                           
 33080                           ; BSR set to: 0
 33081                           ;../inputs.c: 124:                         if (input) {
 33082   0052AE  0101               	movlb	1	; () banked
 33083   0052B0  51D3               	movf	inputScan@input& (0+255),w,b
 33084   0052B2  B4D8               	btfsc	status,2,c
 33085   0052B4  D0C0               	goto	l23299
 33086                           
 33087                           ; BSR set to: 1
 33088                           ;../inputs.c: 125:                             outputState[io] = ! outputState[io];
 33089   0052B6  0EB4               	movlw	low _outputState
 33090   0052B8  0100               	movlb	0	; () banked
 33091   0052BA  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 33092   0052BC  6ED9               	movwf	fsr2l,c
 33093   0052BE  6ADA               	clrf	fsr2h,c
 33094   0052C0  0E02               	movlw	high _outputState
 33095   0052C2  22DA               	addwfc	fsr2h,f,c
 33096   0052C4  0EB4               	movlw	low _outputState
 33097   0052C6  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 33098   0052C8  6EE1               	movwf	fsr1l,c
 33099   0052CA  6AE2               	clrf	fsr1h,c
 33100   0052CC  0E02               	movlw	high _outputState
 33101   0052CE  22E2               	addwfc	fsr1h,f,c
 33102   0052D0  50E7               	movf	indf1,w,c
 33103   0052D2  A4D8               	btfss	status,2,c
 33104   0052D4  D002               	goto	u25130
 33105   0052D6  0E01               	movlw	1
 33106   0052D8  D001               	goto	u25140
 33107   0052DA                     u25130:
 33108   0052DA  0E00               	movlw	0
 33109   0052DC                     u25140:
 33110   0052DC  6EDF               	movwf	indf2,c
 33111                           
 33112                           ; BSR set to: 0
 33113                           ;../inputs.c: 129:                         writeNVM(EEPROM_NVM_TYPE, ((eeprom_address_t)
      +                          ((0x3FF -8))-25)+io, outputState[io]);
 33114                           
 33115                           ;../inputs.c: 126:                         } else {
 33116   0052DE  0EDE               	movlw	222
 33117   0052E0  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 33118   0052E2  0101               	movlb	1	; () banked
 33119   0052E4  6FD0               	movwf	??_inputScan& (0+255),b
 33120   0052E6  6BD1               	clrf	(??_inputScan+1)& (0+255),b
 33121   0052E8  0E03               	movlw	3
 33122   0052EA  23D1               	addwfc	(??_inputScan+1)& (0+255),f,b
 33123   0052EC  C1D0  F0A4         	movff	??_inputScan,writeNVM@index
 33124   0052F0  C1D1  F0A5         	movff	??_inputScan+1,writeNVM@index+1
 33125   0052F4  0100               	movlb	0	; () banked
 33126   0052F6  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 33127   0052F8  0EB4               	movlw	low _outputState
 33128   0052FA  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 33129   0052FC  6ED9               	movwf	fsr2l,c
 33130   0052FE  6ADA               	clrf	fsr2h,c
 33131   005300  0E02               	movlw	high _outputState
 33132   005302  22DA               	addwfc	fsr2h,f,c
 33133   005304  50DF               	movf	indf2,w,c
 33134   005306  6FA7               	movwf	writeNVM@value& (0+255),b
 33135   005308  0E00               	movlw	0
 33136   00530A  ECC1  F05D         	call	_writeNVM
 33137                           
 33138                           ;../inputs.c: 130:                      } else {
 33139   00530E  D008               	goto	l23273
 33140   005310                     l23271:
 33141                           
 33142                           ; BSR set to: 0
 33143                           ;../inputs.c: 131:                         outputState[io] = input;
 33144   005310  0EB4               	movlw	low _outputState
 33145   005312  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 33146   005314  6ED9               	movwf	fsr2l,c
 33147   005316  6ADA               	clrf	fsr2h,c
 33148   005318  0E02               	movlw	high _outputState
 33149   00531A  22DA               	addwfc	fsr2h,f,c
 33150   00531C  C1D3  FFDF         	movff	inputScan@input,indf2
 33151   005320                     l23273:
 33152                           
 33153                           ;../inputs.c: 135:                     if (getNV((16 + 7*(io) + 1)) & 0x08) {
 33154   005320  0100               	movlb	0	; () banked
 33155   005322  51CE               	movf	_io@inputs$F849& (0+255),w,b
 33156   005324  0D07               	mullw	7
 33157   005326  50F3               	movf	243,w,c
 33158   005328  0F11               	addlw	17
 33159   00532A  ECD2  F05F         	call	_getNV
 33160   00532E  0100               	movlb	0	; () banked
 33161   005330  A78D               	btfss	?_getNV& (0+255),3,b
 33162   005332  D03F               	goto	l23289
 33163                           
 33164                           ; BSR set to: 0
 33165                           ;../inputs.c: 136:                         if (outputState[io]) {
 33166   005334  0EB4               	movlw	low _outputState
 33167   005336  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 33168   005338  6ED9               	movwf	fsr2l,c
 33169   00533A  6ADA               	clrf	fsr2h,c
 33170   00533C  0E02               	movlw	high _outputState
 33171   00533E  22DA               	addwfc	fsr2h,f,c
 33172   005340  50DF               	movf	indf2,w,c
 33173   005342  B4D8               	btfsc	status,2,c
 33174   005344  D01B               	goto	l23283
 33175                           
 33176                           ; BSR set to: 0
 33177                           ;../inputs.c: 139:                             if (getNV((16 + 7*(io) + 1)) & 0x40) {
 33178   005346  51CE               	movf	_io@inputs$F849& (0+255),w,b
 33179   005348  0D07               	mullw	7
 33180   00534A  50F3               	movf	243,w,c
 33181   00534C  0F11               	addlw	17
 33182   00534E  ECD2  F05F         	call	_getNV
 33183   005352  0100               	movlb	0	; () banked
 33184   005354  AD8D               	btfss	?_getNV& (0+255),6,b
 33185   005356  D009               	goto	l23281
 33186                           
 33187                           ; BSR set to: 0
 33188                           ;../inputs.c: 140:                                 sendProducedEvent(((8 + 4*(io))+0), E
      +                          VENT_OFF);
 33189   005358  0E00               	movlw	0
 33190   00535A  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 33191   00535C  51CE               	movf	_io@inputs$F849& (0+255),w,b
 33192   00535E  0D04               	mullw	4
 33193   005360  50F3               	movf	243,w,c
 33194   005362  0F08               	addlw	8
 33195   005364  EC64  F04C         	call	_sendProducedEvent
 33196                           
 33197                           ;../inputs.c: 141:                             } else {
 33198   005368  D066               	goto	l23299
 33199   00536A                     l23281:
 33200                           
 33201                           ; BSR set to: 0
 33202                           ;../inputs.c: 142:                                 sendProducedEvent(((8 + 4*(io))+0), E
      +                          VENT_ON);
 33203   00536A  0E01               	movlw	1
 33204   00536C  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 33205   00536E  51CE               	movf	_io@inputs$F849& (0+255),w,b
 33206   005370  0D04               	mullw	4
 33207   005372  50F3               	movf	243,w,c
 33208   005374  0F08               	addlw	8
 33209   005376  EC64  F04C         	call	_sendProducedEvent
 33210   00537A  D05D               	goto	l23299
 33211   00537C                     l23283:
 33212                           
 33213                           ; BSR set to: 0
 33214                           ;../inputs.c: 145:                             if (getNV((16 + 7*(io) + 1)) & 0x40) {
 33215   00537C  51CE               	movf	_io@inputs$F849& (0+255),w,b
 33216   00537E  0D07               	mullw	7
 33217   005380  50F3               	movf	243,w,c
 33218   005382  0F11               	addlw	17
 33219   005384  ECD2  F05F         	call	_getNV
 33220   005388  0100               	movlb	0	; () banked
 33221   00538A  AD8D               	btfss	?_getNV& (0+255),6,b
 33222   00538C  D009               	goto	l23287
 33223                           
 33224                           ; BSR set to: 0
 33225                           ;../inputs.c: 146:                                 sendProducedEvent(((8 + 4*(io))+1), E
      +                          VENT_OFF);
 33226   00538E  0E00               	movlw	0
 33227   005390  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 33228   005392  51CE               	movf	_io@inputs$F849& (0+255),w,b
 33229   005394  0D04               	mullw	4
 33230   005396  50F3               	movf	243,w,c
 33231   005398  0F09               	addlw	9
 33232   00539A  EC64  F04C         	call	_sendProducedEvent
 33233                           
 33234                           ;../inputs.c: 147:                             } else {
 33235   00539E  D04B               	goto	l23299
 33236   0053A0                     l23287:
 33237                           
 33238                           ; BSR set to: 0
 33239                           ;../inputs.c: 148:                                 sendProducedEvent(((8 + 4*(io))+1), E
      +                          VENT_ON);
 33240   0053A0  0E01               	movlw	1
 33241   0053A2  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 33242   0053A4  51CE               	movf	_io@inputs$F849& (0+255),w,b
 33243   0053A6  0D04               	mullw	4
 33244   0053A8  50F3               	movf	243,w,c
 33245   0053AA  0F09               	addlw	9
 33246   0053AC  EC64  F04C         	call	_sendProducedEvent
 33247   0053B0  D042               	goto	l23299
 33248   0053B2                     l23289:
 33249                           
 33250                           ; BSR set to: 0
 33251                           ;../inputs.c: 153:                         if (getNV((16 + 7*(io) + 1)) & 0x40) {
 33252   0053B2  51CE               	movf	_io@inputs$F849& (0+255),w,b
 33253   0053B4  0D07               	mullw	7
 33254   0053B6  50F3               	movf	243,w,c
 33255   0053B8  0F11               	addlw	17
 33256   0053BA  ECD2  F05F         	call	_getNV
 33257   0053BE  0100               	movlb	0	; () banked
 33258   0053C0  AD8D               	btfss	?_getNV& (0+255),6,b
 33259   0053C2  D014               	goto	l23293
 33260                           
 33261                           ; BSR set to: 0
 33262                           ;../inputs.c: 154:                             sendProducedEvent(((8 + 4*(io))+0), outpu
      +                          tState[io]?EVENT_OFF:EVENT_ON);
 33263   0053C4  0EB4               	movlw	low _outputState
 33264   0053C6  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 33265   0053C8  6ED9               	movwf	fsr2l,c
 33266   0053CA  6ADA               	clrf	fsr2h,c
 33267   0053CC  0E02               	movlw	high _outputState
 33268   0053CE  22DA               	addwfc	fsr2h,f,c
 33269   0053D0  50DF               	movf	indf2,w,c
 33270   0053D2  A4D8               	btfss	status,2,c
 33271   0053D4  D002               	goto	u25200
 33272   0053D6  0E01               	movlw	1
 33273   0053D8  D001               	goto	u25210
 33274   0053DA                     u25200:
 33275   0053DA  0E00               	movlw	0
 33276   0053DC                     u25210:
 33277   0053DC  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 33278   0053DE  51CE               	movf	_io@inputs$F849& (0+255),w,b
 33279   0053E0  0D04               	mullw	4
 33280   0053E2  50F3               	movf	243,w,c
 33281   0053E4  0F08               	addlw	8
 33282   0053E6  EC64  F04C         	call	_sendProducedEvent
 33283                           
 33284                           ;../inputs.c: 155:                         } else {
 33285   0053EA  D025               	goto	l23299
 33286   0053EC                     l23293:
 33287                           
 33288                           ; BSR set to: 0
 33289                           ;../inputs.c: 156:                             sendProducedEvent(((8 + 4*(io))+0), outpu
      +                          tState[io]?EVENT_ON:EVENT_OFF);
 33290   0053EC  0EB4               	movlw	low _outputState
 33291   0053EE  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 33292   0053F0  6ED9               	movwf	fsr2l,c
 33293   0053F2  6ADA               	clrf	fsr2h,c
 33294   0053F4  0E02               	movlw	high _outputState
 33295   0053F6  22DA               	addwfc	fsr2h,f,c
 33296   0053F8  50DF               	movf	indf2,w,c
 33297   0053FA  B4D8               	btfsc	status,2,c
 33298   0053FC  D002               	goto	u25220
 33299   0053FE  0E01               	movlw	1
 33300   005400  D001               	goto	u25230
 33301   005402                     u25220:
 33302   005402  0E00               	movlw	0
 33303   005404                     u25230:
 33304   005404  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 33305   005406  51CE               	movf	_io@inputs$F849& (0+255),w,b
 33306   005408  0D04               	mullw	4
 33307   00540A  50F3               	movf	243,w,c
 33308   00540C  0F08               	addlw	8
 33309   00540E  EC64  F04C         	call	_sendProducedEvent
 33310   005412  D011               	goto	l23299
 33311   005414                     l23295:
 33312                           
 33313                           ; BSR set to: 1
 33314                           ;../inputs.c: 160:                     delayCount[io]++;
 33315   005414  0E84               	movlw	low _delayCount
 33316   005416  0100               	movlb	0	; () banked
 33317   005418  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 33318   00541A  6ED9               	movwf	fsr2l,c
 33319   00541C  6ADA               	clrf	fsr2h,c
 33320   00541E  0E02               	movlw	high _delayCount
 33321   005420  22DA               	addwfc	fsr2h,f,c
 33322   005422  2ADF               	incf	indf2,f,c
 33323   005424  D008               	goto	l23299
 33324   005426                     l23297:
 33325                           
 33326                           ; BSR set to: 1
 33327                           ;../inputs.c: 163:                 delayCount[io] = 0;
 33328   005426  0E84               	movlw	low _delayCount
 33329   005428  0100               	movlb	0	; () banked
 33330   00542A  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 33331   00542C  6ED9               	movwf	fsr2l,c
 33332   00542E  6ADA               	clrf	fsr2h,c
 33333   005430  0E02               	movlw	high _delayCount
 33334   005432  22DA               	addwfc	fsr2h,f,c
 33335   005434  6ADF               	clrf	indf2,c
 33336   005436                     l23299:
 33337   005436  0100               	movlb	0	; () banked
 33338   005438  2BCE               	incf	_io@inputs$F849& (0+255),f,b
 33339   00543A  D698               	goto	l23233
 33340   00543C                     __end_of_inputScan:
 33341                           	callstack 0
 33342                           
 33343 ;; *************** function _sendProducedEvent *****************
 33344 ;; Defined at:
 33345 ;;		line 217 in file "../../VLCBlib_PIC/event_producer_happening.c"
 33346 ;; Parameters:    Size  Location     Type
 33347 ;;  happening       1    wreg     unsigned char 
 33348 ;;  onOff           1   72[BANK0 ] enum E12736
 33349 ;; Auto vars:     Size  Location     Type
 33350 ;;  happening       1   17[BANK1 ] unsigned char 
 33351 ;;  producedEven    2   15[BANK1 ] struct Word
 33352 ;;  producedEven    2   13[BANK1 ] struct Word
 33353 ;;  opc             1   12[BANK1 ] unsigned char 
 33354 ;; Return value:  Size  Location     Type
 33355 ;;                  1    wreg      enum E12716
 33356 ;; Registers used:
 33357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 33358 ;; Tracked objects:
 33359 ;;		On entry : 0/0
 33360 ;;		On exit  : 0/0
 33361 ;;		Unchanged: 0/0
 33362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33363 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33364 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33365 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33366 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33367 ;;Total ram usage:        8 bytes
 33368 ;; Hardware stack levels used: 1
 33369 ;; Hardware stack levels required when called: 17
 33370 ;; This function calls:
 33371 ;;		_getEN
 33372 ;;		_getNN
 33373 ;;		_sendMessage4
 33374 ;; This function is called by:
 33375 ;;		_loop
 33376 ;;		_processOutputs
 33377 ;;		_inputScan
 33378 ;;		_sendInvertedProducedEvent
 33379 ;;		_pollServos
 33380 ;;		_alwaysSendInvertedProducedEvent
 33381 ;; This function uses a non-reentrant model
 33382 ;;
 33383                           
 33384                           	psect	text129
 33385   0098C8                     __ptext129:
 33386                           	callstack 0
 33387   0098C8                     _sendProducedEvent:
 33388                           	callstack 9
 33389                           
 33390                           ; BSR set to: 0
 33391                           ;incstack = 0
 33392                           ;sendProducedEvent@happening stored from wreg
 33393   0098C8  0101               	movlb	1	; () banked
 33394   0098CA  6FCF               	movwf	sendProducedEvent@happening& (0+255),b
 33395                           
 33396                           ;../../VLCBlib_PIC/event_producer_happening.c: 218:     Word producedEventNN;;../../VLCB
      +                          lib_PIC/event_producer_happening.c: 219:     Word producedEventEN;;../../VLCBlib_PIC/eve
      +                          nt_producer_happening.c: 220:     uint8_t opc;;../../VLCBlib_PIC/event_producer_happenin
      +                          g.c: 226:     if ((happening < 1) || (happening > (7+16*4))) return FALSE;
 33397   0098CC  0101               	movlb	1	; () banked
 33398   0098CE  51CF               	movf	sendProducedEvent@happening& (0+255),w,b
 33399   0098D0  B4D8               	btfsc	status,2,c
 33400   0098D2  D003               	goto	u20470
 33401                           
 33402                           ; BSR set to: 1
 33403   0098D4  0E47               	movlw	71
 33404   0098D6  65CF               	cpfsgt	sendProducedEvent@happening& (0+255),b
 33405   0098D8  D002               	goto	l20021
 33406   0098DA                     u20470:
 33407                           
 33408                           ; BSR set to: 1
 33409   0098DA  0E00               	movlw	0
 33410   0098DC  0012               	return	
 33411   0098DE                     l20021:
 33412                           
 33413                           ; BSR set to: 1
 33414                           ;../../VLCBlib_PIC/event_producer_happening.c: 227:     if (happening2Event[happening-1]
      +                           == 0xff) return FALSE;
 33415   0098DE  0EFF               	movlw	low (_happening2Event+65535)
 33416   0098E0  25CF               	addwf	sendProducedEvent@happening& (0+255),w,b
 33417   0098E2  6ED9               	movwf	fsr2l,c
 33418   0098E4  6ADA               	clrf	fsr2h,c
 33419   0098E6  0E02               	movlw	high (_happening2Event+65535)
 33420   0098E8  22DA               	addwfc	fsr2h,f,c
 33421   0098EA  28DE               	incf	postinc2,w,c
 33422   0098EC  B4D8               	btfsc	status,2,c
 33423   0098EE  D7F5               	goto	u20470
 33424                           
 33425                           ; BSR set to: 1
 33426                           ;../../VLCBlib_PIC/event_producer_happening.c: 228:     producedEventNN.word = getNN(hap
      +                          pening2Event[happening-1]);
 33427   0098F0  0EFF               	movlw	low (_happening2Event+65535)
 33428   0098F2  25CF               	addwf	sendProducedEvent@happening& (0+255),w,b
 33429   0098F4  6ED9               	movwf	fsr2l,c
 33430   0098F6  6ADA               	clrf	fsr2h,c
 33431   0098F8  0E02               	movlw	high (_happening2Event+65535)
 33432   0098FA  22DA               	addwfc	fsr2h,f,c
 33433   0098FC  50DF               	movf	indf2,w,c
 33434   0098FE  ECA7  F04B         	call	_getNN
 33435   009902  C097  F1CD         	movff	?_getNN,sendProducedEvent@producedEventNN
 33436   009906  C098  F1CE         	movff	?_getNN+1,sendProducedEvent@producedEventNN+1
 33437                           
 33438                           ;../../VLCBlib_PIC/event_producer_happening.c: 229:     producedEventEN.word = getEN(hap
      +                          pening2Event[happening-1]);
 33439   00990A  0EFF               	movlw	low (_happening2Event+65535)
 33440   00990C  0101               	movlb	1	; () banked
 33441   00990E  25CF               	addwf	sendProducedEvent@happening& (0+255),w,b
 33442   009910  6ED9               	movwf	fsr2l,c
 33443   009912  6ADA               	clrf	fsr2h,c
 33444   009914  0E02               	movlw	high (_happening2Event+65535)
 33445   009916  22DA               	addwfc	fsr2h,f,c
 33446   009918  50DF               	movf	indf2,w,c
 33447   00991A  ECFA  F056         	call	_getEN
 33448   00991E  C097  F1CB         	movff	?_getEN,sendProducedEvent@producedEventEN
 33449   009922  C098  F1CC         	movff	?_getEN+1,sendProducedEvent@producedEventEN+1
 33450                           
 33451                           ;../../VLCBlib_PIC/event_producer_happening.c: 253:                 if (producedEventNN.
      +                          word == 0) {
 33452   009926  0101               	movlb	1	; () banked
 33453   009928  51CD               	movf	sendProducedEvent@producedEventNN& (0+255),w,b
 33454   00992A  11CE               	iorwf	(sendProducedEvent@producedEventNN+1)& (0+255),w,b
 33455   00992C  A4D8               	btfss	status,2,c
 33456   00992E  D00E               	goto	l20039
 33457                           
 33458                           ; BSR set to: 1
 33459                           ;../../VLCBlib_PIC/event_producer_happening.c: 255:                     if (onOff == EVE
      +                          NT_ON) {
 33460   009930  0100               	movlb	0	; () banked
 33461   009932  05A8               	decf	sendProducedEvent@onOff& (0+255),w,b
 33462   009934  A4D8               	btfss	status,2,c
 33463   009936  D002               	goto	l20035
 33464                           
 33465                           ; BSR set to: 0
 33466                           ;../../VLCBlib_PIC/event_producer_happening.c: 256:                         opc = OPC_AS
      +                          ON;
 33467   009938  0E98               	movlw	152
 33468   00993A  D001               	goto	L15
 33469   00993C                     l20035:
 33470                           
 33471                           ; BSR set to: 0
 33472                           ;../../VLCBlib_PIC/event_producer_happening.c: 258:                         opc = OPC_AS
      +                          OF;
 33473   00993C  0E99               	movlw	153
 33474   00993E                     L15:
 33475   00993E  0101               	movlb	1	; () banked
 33476   009940  6FCA               	movwf	sendProducedEvent@opc& (0+255),b
 33477                           
 33478                           ; BSR set to: 1
 33479                           ;../../VLCBlib_PIC/event_producer_happening.c: 260:                     producedEventNN.
      +                          word = nn.word;
 33480   009942  C0B4  F1CD         	movff	_nn,sendProducedEvent@producedEventNN
 33481   009946  C0B5  F1CE         	movff	_nn+1,sendProducedEvent@producedEventNN+1
 33482                           
 33483                           ;../../VLCBlib_PIC/event_producer_happening.c: 261:                 } else {
 33484   00994A  D009               	goto	l20045
 33485   00994C                     l20039:
 33486                           
 33487                           ; BSR set to: 1
 33488                           ;../../VLCBlib_PIC/event_producer_happening.c: 263:                     if (onOff == EVE
      +                          NT_ON) {
 33489   00994C  0100               	movlb	0	; () banked
 33490   00994E  05A8               	decf	sendProducedEvent@onOff& (0+255),w,b
 33491   009950  A4D8               	btfss	status,2,c
 33492   009952  D002               	goto	l20043
 33493                           
 33494                           ; BSR set to: 0
 33495                           ;../../VLCBlib_PIC/event_producer_happening.c: 264:                         opc = OPC_AC
      +                          ON;
 33496   009954  0E90               	movlw	144
 33497   009956  D001               	goto	L16
 33498   009958                     l20043:
 33499                           
 33500                           ; BSR set to: 0
 33501                           ;../../VLCBlib_PIC/event_producer_happening.c: 266:                         opc = OPC_AC
      +                          OF;
 33502   009958  0E91               	movlw	145
 33503   00995A                     L16:
 33504   00995A  0101               	movlb	1	; () banked
 33505   00995C  6FCA               	movwf	sendProducedEvent@opc& (0+255),b
 33506   00995E                     l20045:
 33507                           
 33508                           ; BSR set to: 1
 33509                           ;../../VLCBlib_PIC/event_producer_happening.c: 269:                 sendMessage4(opc, pr
      +                          oducedEventNN.bytes.hi, producedEventNN.bytes.lo, producedEventEN.bytes.hi, producedEven
      +                          tEN.bytes.lo);
 33510   00995E  C1CE  F1C6         	movff	sendProducedEvent@producedEventNN+1,sendMessage4@data1
 33511   009962  C1CD  F1C7         	movff	sendProducedEvent@producedEventNN,sendMessage4@data2
 33512   009966  C1CC  F1C8         	movff	sendProducedEvent@producedEventEN+1,sendMessage4@data3
 33513   00996A  C1CB  F1C9         	movff	sendProducedEvent@producedEventEN,sendMessage4@data4
 33514   00996E  51CA               	movf	sendProducedEvent@opc& (0+255),w,b
 33515   009970  EC5F  F061         	call	_sendMessage4
 33516                           
 33517                           ;../../VLCBlib_PIC/event_producer_happening.c: 271:                 producerDiagnostics[
      +                          1].asUint++;
 33518   009974  0101               	movlb	1	; () banked
 33519   009976  4BB0               	infsnz	(_producerDiagnostics+2)& (0+255),f,b
 33520   009978  2BB1               	incf	(_producerDiagnostics+3)& (0+255),f,b
 33521                           
 33522                           ; BSR set to: 1
 33523                           ;../../VLCBlib_PIC/event_producer_happening.c: 273:                 return TRUE;
 33524   00997A  0E01               	movlw	1
 33525                           
 33526                           ; BSR set to: 1
 33527   00997C  0012               	return		;funcret
 33528   00997E                     __end_of_sendProducedEvent:
 33529                           	callstack 0
 33530                           
 33531 ;; *************** function _sendMessage4 *****************
 33532 ;; Defined at:
 33533 ;;		line 1168 in file "../../VLCBlib_PIC/vlcb.c"
 33534 ;; Parameters:    Size  Location     Type
 33535 ;;  opc             1    wreg     enum E12392
 33536 ;;  data1           1    8[BANK1 ] unsigned char 
 33537 ;;  data2           1    9[BANK1 ] unsigned char 
 33538 ;;  data3           1   10[BANK1 ] unsigned char 
 33539 ;;  data4           1   11[BANK1 ] unsigned char 
 33540 ;; Auto vars:     Size  Location     Type
 33541 ;;  opc             1   71[BANK0 ] enum E12392
 33542 ;; Return value:  Size  Location     Type
 33543 ;;                  1    wreg      void 
 33544 ;; Registers used:
 33545 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 33546 ;; Tracked objects:
 33547 ;;		On entry : 0/0
 33548 ;;		On exit  : 0/0
 33549 ;;		Unchanged: 0/0
 33550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33551 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33552 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33554 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33555 ;;Total ram usage:        5 bytes
 33556 ;; Hardware stack levels used: 1
 33557 ;; Hardware stack levels required when called: 16
 33558 ;; This function calls:
 33559 ;;		_sendMessage
 33560 ;; This function is called by:
 33561 ;;		_mnsProcessMessage
 33562 ;;		_mnsTRrqnpnCallback
 33563 ;;		_nvProcessMessage
 33564 ;;		_nvTRnvrdCallback
 33565 ;;		_producerProcessMessage
 33566 ;;		_sendProducedEvent
 33567 ;; This function uses a non-reentrant model
 33568 ;;
 33569                           
 33570                           	psect	text130
 33571   00C2BE                     __ptext130:
 33572                           	callstack 0
 33573   00C2BE                     _sendMessage4:
 33574                           	callstack 12
 33575                           
 33576                           ; BSR set to: 1
 33577                           ;incstack = 0
 33578                           ;sendMessage4@opc stored from wreg
 33579   00C2BE  0100               	movlb	0	; () banked
 33580   00C2C0  6FA7               	movwf	sendMessage4@opc& (0+255),b
 33581                           
 33582                           ;../../VLCBlib_PIC/vlcb.c: 1169:     sendMessage(opc, 5, data1, data2, data3, data4, 0,0
      +                          ,0);
 33583   00C2C2  0E05               	movlw	5
 33584   00C2C4  0101               	movlb	1	; () banked
 33585   00C2C6  6FBE               	movwf	sendMessage@len& (0+255),b
 33586   00C2C8  C1C6  F1BF         	movff	sendMessage4@data1,sendMessage@data1
 33587   00C2CC  C1C7  F1C0         	movff	sendMessage4@data2,sendMessage@data2
 33588   00C2D0  C1C8  F1C1         	movff	sendMessage4@data3,sendMessage@data3
 33589   00C2D4  C1C9  F1C2         	movff	sendMessage4@data4,sendMessage@data4
 33590   00C2D8  0E00               	movlw	0
 33591   00C2DA  6FC3               	movwf	sendMessage@data5& (0+255),b
 33592   00C2DC  0E00               	movlw	0
 33593   00C2DE  6FC4               	movwf	sendMessage@data6& (0+255),b
 33594   00C2E0  0E00               	movlw	0
 33595   00C2E2  6FC5               	movwf	sendMessage@data7& (0+255),b
 33596   00C2E4  0100               	movlb	0	; () banked
 33597   00C2E6  51A7               	movf	sendMessage4@opc& (0+255),w,b
 33598   00C2E8  EC02  F056         	call	_sendMessage
 33599   00C2EC  0012               	return		;funcret
 33600   00C2EE                     __end_of_sendMessage4:
 33601                           	callstack 0
 33602                           
 33603 ;; *************** function _sendMessage *****************
 33604 ;; Defined at:
 33605 ;;		line 1226 in file "../../VLCBlib_PIC/vlcb.c"
 33606 ;; Parameters:    Size  Location     Type
 33607 ;;  opc             1    wreg     enum E12392
 33608 ;;  len             1    0[BANK1 ] unsigned char 
 33609 ;;  data1           1    1[BANK1 ] unsigned char 
 33610 ;;  data2           1    2[BANK1 ] unsigned char 
 33611 ;;  data3           1    3[BANK1 ] unsigned char 
 33612 ;;  data4           1    4[BANK1 ] unsigned char 
 33613 ;;  data5           1    5[BANK1 ] unsigned char 
 33614 ;;  data6           1    6[BANK1 ] unsigned char 
 33615 ;;  data7           1    7[BANK1 ] unsigned char 
 33616 ;; Auto vars:     Size  Location     Type
 33617 ;;  opc             1   70[BANK0 ] enum E12392
 33618 ;; Return value:  Size  Location     Type
 33619 ;;                  1    wreg      void 
 33620 ;; Registers used:
 33621 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 33622 ;; Tracked objects:
 33623 ;;		On entry : 0/0
 33624 ;;		On exit  : 0/0
 33625 ;;		Unchanged: 0/0
 33626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33627 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33628 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33629 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33630 ;;      Totals:         0       3       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33631 ;;Total ram usage:       11 bytes
 33632 ;; Hardware stack levels used: 1
 33633 ;; Hardware stack levels required when called: 15
 33634 ;; This function calls:
 33635 ;;		_canSendMessage
 33636 ;; This function is called by:
 33637 ;;		_sendMessage2
 33638 ;;		_sendMessage3
 33639 ;;		_sendMessage4
 33640 ;;		_sendMessage5
 33641 ;;		_sendMessage6
 33642 ;;		_sendMessage7
 33643 ;;		_sendMessage0
 33644 ;;		_sendMessage1
 33645 ;; This function uses a non-reentrant model
 33646 ;;
 33647                           
 33648                           	psect	text131
 33649   00AC04                     __ptext131:
 33650                           	callstack 0
 33651   00AC04                     _sendMessage:
 33652                           	callstack 11
 33653                           
 33654                           ;incstack = 0
 33655                           ;sendMessage@opc stored from wreg
 33656   00AC04  0100               	movlb	0	; () banked
 33657   00AC06  6FA6               	movwf	sendMessage@opc& (0+255),b
 33658                           
 33659                           ;../../VLCBlib_PIC/vlcb.c: 1227:     tmpMessage.opc = opc;
 33660   00AC08  C0A6  F19B         	movff	sendMessage@opc,_tmpMessage+1
 33661                           
 33662                           ;../../VLCBlib_PIC/vlcb.c: 1228:     tmpMessage.len = len;
 33663   00AC0C  C1BE  F19A         	movff	sendMessage@len,_tmpMessage
 33664                           
 33665                           ;../../VLCBlib_PIC/vlcb.c: 1229:     tmpMessage.bytes[0] = data1;
 33666   00AC10  C1BF  F19C         	movff	sendMessage@data1,_tmpMessage+2
 33667                           
 33668                           ;../../VLCBlib_PIC/vlcb.c: 1230:     tmpMessage.bytes[1] = data2;
 33669   00AC14  C1C0  F19D         	movff	sendMessage@data2,_tmpMessage+3
 33670                           
 33671                           ;../../VLCBlib_PIC/vlcb.c: 1231:     tmpMessage.bytes[2] = data3;
 33672   00AC18  C1C1  F19E         	movff	sendMessage@data3,_tmpMessage+4
 33673                           
 33674                           ;../../VLCBlib_PIC/vlcb.c: 1232:     tmpMessage.bytes[3] = data4;
 33675   00AC1C  C1C2  F19F         	movff	sendMessage@data4,_tmpMessage+5
 33676                           
 33677                           ;../../VLCBlib_PIC/vlcb.c: 1233:     tmpMessage.bytes[4] = data5;
 33678   00AC20  C1C3  F1A0         	movff	sendMessage@data5,_tmpMessage+6
 33679                           
 33680                           ;../../VLCBlib_PIC/vlcb.c: 1234:     tmpMessage.bytes[5] = data6;
 33681   00AC24  C1C4  F1A1         	movff	sendMessage@data6,_tmpMessage+7
 33682                           
 33683                           ;../../VLCBlib_PIC/vlcb.c: 1235:     tmpMessage.bytes[6] = data7;
 33684   00AC28  C1C5  F1A2         	movff	sendMessage@data7,_tmpMessage+8
 33685                           
 33686                           ;../../VLCBlib_PIC/vlcb.c: 1236:     if (transport != ((void*)0)) {
 33687   00AC2C  0101               	movlb	1	; () banked
 33688   00AC2E  5162               	movf	_transport& (0+255),w,b
 33689   00AC30  1163               	iorwf	(_transport+1)& (0+255),w,b
 33690   00AC32  B4D8               	btfsc	status,2,c
 33691   00AC34  0012               	return	
 33692                           
 33693                           ; BSR set to: 1
 33694                           ;../../VLCBlib_PIC/vlcb.c: 1237:         if (transport->sendMessage != ((void*)0)) {
 33695   00AC36  C162  FFF6         	movff	_transport,tblptrl
 33696   00AC3A  C163  FFF7         	movff	_transport+1,tblptrh
 33697   00AC3E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 33698   00AC3E  6AF8               	clrf	tblptru,c
 33699   00AC40                     	endif
 33700   00AC40                     	if	0	;tblptru may be non-zero
 33701   00AC40                     	endif
 33702   00AC40  0009               	tblrd		*+
 33703   00AC42  50F5               	movf	tablat,w,c
 33704   00AC44  0009               	tblrd		*+
 33705   00AC46  10F5               	iorwf	tablat,w,c
 33706   00AC48  B4D8               	btfsc	status,2,c
 33707   00AC4A  0012               	return	
 33708                           
 33709                           ; BSR set to: 1
 33710                           ;../../VLCBlib_PIC/vlcb.c: 1238:             transport->sendMessage(&tmpMessage);
 33711   00AC4C  0E9A               	movlw	low _tmpMessage
 33712   00AC4E  0100               	movlb	0	; () banked
 33713   00AC50  6F9A               	movwf	canSendMessage@mp& (0+255),b
 33714   00AC52  0E01               	movlw	high _tmpMessage
 33715   00AC54  6F9B               	movwf	(canSendMessage@mp+1)& (0+255),b
 33716   00AC56  C162  FFF6         	movff	_transport,tblptrl
 33717   00AC5A  C163  FFF7         	movff	_transport+1,tblptrh
 33718   00AC5E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 33719   00AC5E  6AF8               	clrf	tblptru,c
 33720   00AC60                     	endif
 33721   00AC60                     	if	0	;tblptru may be non-zero
 33722   00AC60                     	endif
 33723   00AC60  0009               	tblrd		*+
 33724   00AC62  CFF5 F0A4          	movff	tablat,??_sendMessage
 33725   00AC66  0009               	tblrd		*+
 33726   00AC68  CFF5 F0A5          	movff	tablat,??_sendMessage+1
 33727   00AC6C  D801               	call	u20128
 33728   00AC6E  0012               	return	
 33729   00AC70                     u20128:
 33730   00AC70  0005               	push	
 33731   00AC72  6EFA               	movwf	pclath,c
 33732   00AC74  51A4               	movf	??_sendMessage& (0+255),w,b
 33733   00AC76  6EFD               	movwf	tosl,c
 33734   00AC78  51A5               	movf	(??_sendMessage+1)& (0+255),w,b
 33735   00AC7A  6EFE               	movwf	tosh,c
 33736   00AC7C  6AFF               	clrf	tosu,c
 33737   00AC7E  50FA               	movf	pclath,w,c
 33738   00AC80  0012               	return		;indir
 33739   00AC82                     __end_of_sendMessage:
 33740                           	callstack 0
 33741                           
 33742 ;; *************** function _canSendMessage *****************
 33743 ;; Defined at:
 33744 ;;		line 493 in file "../../VLCBlib_PIC/can18_ecan.c"
 33745 ;; Parameters:    Size  Location     Type
 33746 ;;  mp              2   58[BANK0 ] PTR struct Message
 33747 ;;		 -> tmpMessage(9), 
 33748 ;; Auto vars:     Size  Location     Type
 33749 ;;  m               2   66[BANK0 ] PTR struct Message
 33750 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 33751 ;;  no              1   65[BANK0 ] unsigned char 
 33752 ;; Return value:  Size  Location     Type
 33753 ;;                  1    wreg      enum E13081
 33754 ;; Registers used:
 33755 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33756 ;; Tracked objects:
 33757 ;;		On entry : 0/0
 33758 ;;		On exit  : 0/0
 33759 ;;		Unchanged: 0/0
 33760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33761 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33762 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33763 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33764 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33765 ;;Total ram usage:       10 bytes
 33766 ;; Hardware stack levels used: 1
 33767 ;; Hardware stack levels required when called: 14
 33768 ;; This function calls:
 33769 ;;		_getNextWriteMessage
 33770 ;;		_getNumTxBuffersInUse
 33771 ;;		_have
 33772 ;;		_isEvent
 33773 ;;		_push
 33774 ;;		_quantity
 33775 ;;		_updateModuleErrorStatus
 33776 ;; This function is called by:
 33777 ;;		_sendMessage
 33778 ;; This function uses a non-reentrant model
 33779 ;;
 33780                           
 33781                           	psect	text132
 33782   004B84                     __ptext132:
 33783                           	callstack 0
 33784   004B84                     _canSendMessage:
 33785                           	callstack 11
 33786                           
 33787                           ;../../VLCBlib_PIC/can18_ecan.c: 495:     Message * m;;../../VLCBlib_PIC/can18_ecan.c: 4
      +                          98:     uint8_t no;;../../VLCBlib_PIC/can18_ecan.c: 502:     PIE5bits.TXBnIE = 0;
 33788                           
 33789                           ;incstack = 0
 33790   004B84  9876               	bcf	118,4,c	;volatile
 33791                           
 33792                           ;../../VLCBlib_PIC/can18_ecan.c: 503:     if (quantity(&txQueue) == 0) {
 33793   004B86  0EA9               	movlw	low _txQueue
 33794   004B88  0100               	movlb	0	; () banked
 33795   004B8A  6F8D               	movwf	quantity@q& (0+255),b
 33796   004B8C  0E01               	movlw	high _txQueue
 33797   004B8E  6F8E               	movwf	(quantity@q+1)& (0+255),b
 33798   004B90  EC94  F05F         	call	_quantity	;wreg free
 33799   004B94  0900               	iorlw	0
 33800   004B96  A4D8               	btfss	status,2,c
 33801   004B98  D150               	goto	l19653
 33802                           
 33803                           ;../../VLCBlib_PIC/can18_ecan.c: 505:         if (TXB0CONbits.TXREQ == 0) {
 33804   004B9A  010F               	movlb	15	; () banked
 33805   004B9C  B720               	btfsc	32,3,b	;volatile
 33806   004B9E  D14D               	goto	l19653
 33807                           
 33808                           ; BSR set to: 15
 33809                           ;../../VLCBlib_PIC/can18_ecan.c: 507:             if ((canId == 0) && (enumerationState 
      +                          == NO_ENUMERATION)) {
 33810   004BA0  0100               	movlb	0	; () banked
 33811   004BA2  51B9               	movf	_canId& (0+255),w,b
 33812   004BA4  A4D8               	btfss	status,2,c
 33813   004BA6  D007               	goto	l19589
 33814                           
 33815                           ; BSR set to: 0
 33816   004BA8  51B7               	movf	_enumerationState& (0+255),w,b
 33817   004BAA  A4D8               	btfss	status,2,c
 33818   004BAC  D004               	goto	l19589
 33819                           
 33820                           ; BSR set to: 0
 33821                           ;../../VLCBlib_PIC/can18_ecan.c: 508:                 enumerationState = ENUMERATION_REQ
      +                          UIRED;
 33822   004BAE  0E01               	movlw	1
 33823   004BB0  6FB7               	movwf	_enumerationState& (0+255),b
 33824                           
 33825                           ;../../VLCBlib_PIC/can18_ecan.c: 509:                 canId = 1;
 33826   004BB2  0E01               	movlw	1
 33827   004BB4  6FB9               	movwf	_canId& (0+255),b
 33828   004BB6                     l19589:
 33829                           
 33830                           ; BSR set to: 0
 33831                           ;../../VLCBlib_PIC/can18_ecan.c: 511:             PIE5bits.TXBnIE = 1;
 33832   004BB6  8876               	bsf	118,4,c	;volatile
 33833                           
 33834                           ; BSR set to: 0
 33835                           ;../../VLCBlib_PIC/can18_ecan.c: 513:             if (mp->len >8) mp->len = 8;
 33836   004BB8  C09A  FFD9         	movff	canSendMessage@mp,fsr2l
 33837   004BBC  C09B  FFDA         	movff	canSendMessage@mp+1,fsr2h
 33838   004BC0  0E08               	movlw	8
 33839   004BC2  64DF               	cpfsgt	indf2,c
 33840   004BC4  D006               	goto	l19595
 33841                           
 33842                           ; BSR set to: 0
 33843   004BC6  C09A  FFD9         	movff	canSendMessage@mp,fsr2l
 33844   004BCA  C09B  FFDA         	movff	canSendMessage@mp+1,fsr2h
 33845   004BCE  0E08               	movlw	8
 33846   004BD0  6EDF               	movwf	indf2,c
 33847   004BD2                     l19595:
 33848                           
 33849                           ; BSR set to: 0
 33850                           ;../../VLCBlib_PIC/can18_ecan.c: 515:             TXB0SIDH = canPri[priorities[mp->opc]]
      +                           | ((canId & 0x78) >> 3);
 33851   004BD2  EE20 F001          	lfsr	2,1
 33852   004BD6  519A               	movf	canSendMessage@mp& (0+255),w,b
 33853   004BD8  26D9               	addwf	fsr2l,f,c
 33854   004BDA  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33855   004BDC  22DA               	addwfc	fsr2h,f,c
 33856   004BDE  50DF               	movf	indf2,w,c
 33857   004BE0  6F9C               	movwf	??_canSendMessage& (0+255),b
 33858   004BE2  6B9D               	clrf	(??_canSendMessage+1)& (0+255),b
 33859   004BE4  0E29               	movlw	low _priorities
 33860   004BE6  259C               	addwf	??_canSendMessage& (0+255),w,b
 33861   004BE8  6EF6               	movwf	tblptrl,c
 33862   004BEA  0EED               	movlw	high _priorities
 33863   004BEC  219D               	addwfc	(??_canSendMessage+1)& (0+255),w,b
 33864   004BEE  6EF7               	movwf	tblptrh,c
 33865   004BF0                     	if	1	;There are 3 active tblptr bytes
 33866   004BF0  6AF8               	clrf	tblptru,c
 33867   004BF2  0E00               	movlw	low (__mediumconst shr (0+16))
 33868   004BF4  22F8               	addwfc	tblptru,f,c
 33869   004BF6                     	endif
 33870   004BF6  0008               	tblrd		*
 33871   004BF8  50F5               	movf	tablat,w,c
 33872   004BFA  6F9E               	movwf	(??_canSendMessage+2)& (0+255),b
 33873   004BFC  6B9F               	clrf	(??_canSendMessage+3)& (0+255),b
 33874   004BFE  0E86               	movlw	low _canPri
 33875   004C00  259E               	addwf	(??_canSendMessage+2)& (0+255),w,b
 33876   004C02  6EF6               	movwf	tblptrl,c
 33877   004C04  0EEE               	movlw	high _canPri
 33878   004C06  219F               	addwfc	(??_canSendMessage+3)& (0+255),w,b
 33879   004C08  6EF7               	movwf	tblptrh,c
 33880   004C0A                     	if	1	;There are 3 active tblptr bytes
 33881   004C0A  6AF8               	clrf	tblptru,c
 33882   004C0C  0E00               	movlw	low (__mediumconst shr (0+16))
 33883   004C0E  22F8               	addwfc	tblptru,f,c
 33884   004C10                     	endif
 33885   004C10  0008               	tblrd		*
 33886   004C12  CFF5 F0A0          	movff	tablat,??_canSendMessage+4
 33887   004C16  39B9               	swapf	_canId& (0+255),w,b
 33888   004C18  46E8               	rlncf	wreg,f,c
 33889   004C1A  0B1F               	andlw	31
 33890   004C1C  0B0F               	andlw	15
 33891   004C1E  11A0               	iorwf	(??_canSendMessage+4)& (0+255),w,b
 33892   004C20  010F               	movlb	15	; () banked
 33893   004C22  6F21               	movwf	33,b	;volatile
 33894                           
 33895                           ; BSR set to: 15
 33896                           ;../../VLCBlib_PIC/can18_ecan.c: 516:             TXB0SIDL = (uint8_t)((canId & 0x07) <<
      +                           5);
 33897   004C24  C0B9  F09C         	movff	_canId,??_canSendMessage
 33898   004C28  0E07               	movlw	7
 33899   004C2A  0100               	movlb	0	; () banked
 33900   004C2C  179C               	andwf	??_canSendMessage& (0+255),f,b
 33901   004C2E  0E05               	movlw	5
 33902   004C30  6F9D               	movwf	(??_canSendMessage+1)& (0+255),b
 33903   004C32                     u19785:
 33904   004C32  90D8               	bcf	status,0,c
 33905   004C34  379C               	rlcf	??_canSendMessage& (0+255),f,b
 33906   004C36  2F9D               	decfsz	(??_canSendMessage+1)& (0+255),f,b
 33907   004C38  D7FC               	goto	u19785
 33908   004C3A  519C               	movf	??_canSendMessage& (0+255),w,b
 33909   004C3C  010F               	movlb	15	; () banked
 33910   004C3E  6F22               	movwf	34,b	;volatile
 33911                           
 33912                           ; BSR set to: 15
 33913                           ;../../VLCBlib_PIC/can18_ecan.c: 517:             TXB0D0 = mp->opc;
 33914   004C40  0100               	movlb	0	; () banked
 33915   004C42  EE20 F001          	lfsr	2,1
 33916   004C46  519A               	movf	canSendMessage@mp& (0+255),w,b
 33917   004C48  26D9               	addwf	fsr2l,f,c
 33918   004C4A  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33919   004C4C  22DA               	addwfc	fsr2h,f,c
 33920   004C4E  50DF               	movf	indf2,w,c
 33921   004C50  010F               	movlb	15	; () banked
 33922   004C52  6F26               	movwf	38,b	;volatile
 33923                           
 33924                           ; BSR set to: 15
 33925                           ;../../VLCBlib_PIC/can18_ecan.c: 518:             TXB0D1 = mp->bytes[0];
 33926   004C54  0100               	movlb	0	; () banked
 33927   004C56  EE20 F002          	lfsr	2,2
 33928   004C5A  519A               	movf	canSendMessage@mp& (0+255),w,b
 33929   004C5C  26D9               	addwf	fsr2l,f,c
 33930   004C5E  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33931   004C60  22DA               	addwfc	fsr2h,f,c
 33932   004C62  50DF               	movf	indf2,w,c
 33933   004C64  010F               	movlb	15	; () banked
 33934   004C66  6F27               	movwf	39,b	;volatile
 33935                           
 33936                           ; BSR set to: 15
 33937                           ;../../VLCBlib_PIC/can18_ecan.c: 519:             TXB0D2 = mp->bytes[1];
 33938   004C68  0100               	movlb	0	; () banked
 33939   004C6A  EE20 F003          	lfsr	2,3
 33940   004C6E  519A               	movf	canSendMessage@mp& (0+255),w,b
 33941   004C70  26D9               	addwf	fsr2l,f,c
 33942   004C72  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33943   004C74  22DA               	addwfc	fsr2h,f,c
 33944   004C76  50DF               	movf	indf2,w,c
 33945   004C78  010F               	movlb	15	; () banked
 33946   004C7A  6F28               	movwf	40,b	;volatile
 33947                           
 33948                           ; BSR set to: 15
 33949                           ;../../VLCBlib_PIC/can18_ecan.c: 520:             TXB0D3 = mp->bytes[2];
 33950   004C7C  0100               	movlb	0	; () banked
 33951   004C7E  EE20 F004          	lfsr	2,4
 33952   004C82  519A               	movf	canSendMessage@mp& (0+255),w,b
 33953   004C84  26D9               	addwf	fsr2l,f,c
 33954   004C86  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33955   004C88  22DA               	addwfc	fsr2h,f,c
 33956   004C8A  50DF               	movf	indf2,w,c
 33957   004C8C  010F               	movlb	15	; () banked
 33958   004C8E  6F29               	movwf	41,b	;volatile
 33959                           
 33960                           ; BSR set to: 15
 33961                           ;../../VLCBlib_PIC/can18_ecan.c: 521:             TXB0D4 = mp->bytes[3];
 33962   004C90  0100               	movlb	0	; () banked
 33963   004C92  EE20 F005          	lfsr	2,5
 33964   004C96  519A               	movf	canSendMessage@mp& (0+255),w,b
 33965   004C98  26D9               	addwf	fsr2l,f,c
 33966   004C9A  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33967   004C9C  22DA               	addwfc	fsr2h,f,c
 33968   004C9E  50DF               	movf	indf2,w,c
 33969   004CA0  010F               	movlb	15	; () banked
 33970   004CA2  6F2A               	movwf	42,b	;volatile
 33971                           
 33972                           ; BSR set to: 15
 33973                           ;../../VLCBlib_PIC/can18_ecan.c: 522:             TXB0D5 = mp->bytes[4];
 33974   004CA4  0100               	movlb	0	; () banked
 33975   004CA6  EE20 F006          	lfsr	2,6
 33976   004CAA  519A               	movf	canSendMessage@mp& (0+255),w,b
 33977   004CAC  26D9               	addwf	fsr2l,f,c
 33978   004CAE  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33979   004CB0  22DA               	addwfc	fsr2h,f,c
 33980   004CB2  50DF               	movf	indf2,w,c
 33981   004CB4  010F               	movlb	15	; () banked
 33982   004CB6  6F2B               	movwf	43,b	;volatile
 33983                           
 33984                           ; BSR set to: 15
 33985                           ;../../VLCBlib_PIC/can18_ecan.c: 523:             TXB0D6 = mp->bytes[5];
 33986   004CB8  0100               	movlb	0	; () banked
 33987   004CBA  EE20 F007          	lfsr	2,7
 33988   004CBE  519A               	movf	canSendMessage@mp& (0+255),w,b
 33989   004CC0  26D9               	addwf	fsr2l,f,c
 33990   004CC2  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33991   004CC4  22DA               	addwfc	fsr2h,f,c
 33992   004CC6  50DF               	movf	indf2,w,c
 33993   004CC8  010F               	movlb	15	; () banked
 33994   004CCA  6F2C               	movwf	44,b	;volatile
 33995                           
 33996                           ; BSR set to: 15
 33997                           ;../../VLCBlib_PIC/can18_ecan.c: 524:             TXB0D7 = mp->bytes[6];
 33998   004CCC  0100               	movlb	0	; () banked
 33999   004CCE  EE20 F008          	lfsr	2,8
 34000   004CD2  519A               	movf	canSendMessage@mp& (0+255),w,b
 34001   004CD4  26D9               	addwf	fsr2l,f,c
 34002   004CD6  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 34003   004CD8  22DA               	addwfc	fsr2h,f,c
 34004   004CDA  50DF               	movf	indf2,w,c
 34005   004CDC  010F               	movlb	15	; () banked
 34006   004CDE  6F2D               	movwf	45,b	;volatile
 34007                           
 34008                           ; BSR set to: 15
 34009                           ;../../VLCBlib_PIC/can18_ecan.c: 525:             TXB0DLC = mp->len & 0x0F;
 34010   004CE0  C09A  FFD9         	movff	canSendMessage@mp,fsr2l
 34011   004CE4  C09B  FFDA         	movff	canSendMessage@mp+1,fsr2h
 34012   004CE8  50DF               	movf	indf2,w,c
 34013   004CEA  0B0F               	andlw	15
 34014   004CEC  6F25               	movwf	37,b	;volatile
 34015                           
 34016                           ; BSR set to: 15
 34017                           ;../../VLCBlib_PIC/can18_ecan.c: 527:             TXB0CONbits.TXREQ = 1;
 34018   004CEE  8720               	bsf	32,3,b	;volatile
 34019                           
 34020                           ; BSR set to: 15
 34021                           ;../../VLCBlib_PIC/can18_ecan.c: 529:             canDiagnostics[0x06].asUint++;
 34022   004CF0  0101               	movlb	1	; () banked
 34023   004CF2  4B72               	infsnz	(_canDiagnostics+12)& (0+255),f,b
 34024   004CF4  2B73               	incf	(_canDiagnostics+13)& (0+255),f,b
 34025                           
 34026                           ; BSR set to: 1
 34027                           ;../../VLCBlib_PIC/can18_ecan.c: 534:             if (isEvent(mp->opc)) {
 34028   004CF6  0100               	movlb	0	; () banked
 34029   004CF8  EE20 F001          	lfsr	2,1
 34030   004CFC  519A               	movf	canSendMessage@mp& (0+255),w,b
 34031   004CFE  26D9               	addwf	fsr2l,f,c
 34032   004D00  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 34033   004D02  22DA               	addwfc	fsr2h,f,c
 34034   004D04  50DF               	movf	indf2,w,c
 34035   004D06  ECA1  F062         	call	_isEvent
 34036   004D0A  0900               	iorlw	0
 34037   004D0C  B4D8               	btfsc	status,2,c
 34038   004D0E  0012               	return	
 34039                           
 34040                           ;../../VLCBlib_PIC/can18_ecan.c: 535:                 if (have(SERVICE_ID_CONSUME_OWN_EV
      +                          ENTS)) {
 34041   004D10  0E08               	movlw	8
 34042   004D12  EC57  F058         	call	_have
 34043   004D16  0900               	iorlw	0
 34044   004D18  B4D8               	btfsc	status,2,c
 34045   004D1A  0012               	return	
 34046                           
 34047                           ;../../VLCBlib_PIC/can18_ecan.c: 537:                     m = getNextWriteMessage(&rxQue
      +                          ue);
 34048   004D1C  0E26               	movlw	low _rxQueue
 34049   004D1E  0100               	movlb	0	; () banked
 34050   004D20  6F8D               	movwf	getNextWriteMessage@q& (0+255),b
 34051   004D22  ECDD  F046         	call	_getNextWriteMessage	;wreg free
 34052   004D26  C08D  F0A2         	movff	?_getNextWriteMessage,canSendMessage@m
 34053   004D2A  C08E  F0A3         	movff	?_getNextWriteMessage+1,canSendMessage@m+1
 34054                           
 34055                           ;../../VLCBlib_PIC/can18_ecan.c: 538:                     if (m == ((void*)0)) {
 34056   004D2E  0100               	movlb	0	; () banked
 34057   004D30  51A2               	movf	canSendMessage@m& (0+255),w,b
 34058   004D32  11A3               	iorwf	(canSendMessage@m+1)& (0+255),w,b
 34059   004D34  A4D8               	btfss	status,2,c
 34060   004D36  D006               	goto	l19633
 34061                           
 34062                           ; BSR set to: 0
 34063                           ;../../VLCBlib_PIC/can18_ecan.c: 540:                         canDiagnostics[0x08].asUin
      +                          t++;
 34064   004D38  0101               	movlb	1	; () banked
 34065   004D3A  4B76               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 34066   004D3C  2B77               	incf	(_canDiagnostics+17)& (0+255),f,b
 34067                           
 34068                           ; BSR set to: 1
 34069                           ;../../VLCBlib_PIC/can18_ecan.c: 541:                         updateModuleErrorStatus();
 34070   004D3E  EC5B  F064         	call	_updateModuleErrorStatus	;wreg free
 34071                           
 34072                           ;../../VLCBlib_PIC/can18_ecan.c: 543:                     } else {
 34073   004D42  0012               	return	
 34074   004D44                     l19633:
 34075                           
 34076                           ; BSR set to: 0
 34077                           ;../../VLCBlib_PIC/can18_ecan.c: 545:                         m->opc = mp->opc;
 34078   004D44  EE20 F001          	lfsr	2,1
 34079   004D48  519A               	movf	canSendMessage@mp& (0+255),w,b
 34080   004D4A  26D9               	addwf	fsr2l,f,c
 34081   004D4C  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 34082   004D4E  22DA               	addwfc	fsr2h,f,c
 34083   004D50  EE10 F001          	lfsr	1,1
 34084   004D54  51A2               	movf	canSendMessage@m& (0+255),w,b
 34085   004D56  26E1               	addwf	fsr1l,f,c
 34086   004D58  51A3               	movf	(canSendMessage@m+1)& (0+255),w,b
 34087   004D5A  22E2               	addwfc	fsr1h,f,c
 34088   004D5C  CFDF FFE7          	movff	indf2,indf1
 34089                           
 34090                           ; BSR set to: 0
 34091                           ;../../VLCBlib_PIC/can18_ecan.c: 546:                         m->len = mp->len;
 34092   004D60  C09A  FFD9         	movff	canSendMessage@mp,fsr2l
 34093   004D64  C09B  FFDA         	movff	canSendMessage@mp+1,fsr2h
 34094   004D68  C0A2  FFE1         	movff	canSendMessage@m,fsr1l
 34095   004D6C  C0A3  FFE2         	movff	canSendMessage@m+1,fsr1h
 34096   004D70  CFDF FFE7          	movff	indf2,indf1
 34097                           
 34098                           ; BSR set to: 0
 34099                           ;../../VLCBlib_PIC/can18_ecan.c: 547:                         m->bytes[0] = mp->bytes[0]
      +                          ;
 34100   004D74  EE20 F002          	lfsr	2,2
 34101   004D78  519A               	movf	canSendMessage@mp& (0+255),w,b
 34102   004D7A  26D9               	addwf	fsr2l,f,c
 34103   004D7C  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 34104   004D7E  22DA               	addwfc	fsr2h,f,c
 34105   004D80  EE10 F002          	lfsr	1,2
 34106   004D84  51A2               	movf	canSendMessage@m& (0+255),w,b
 34107   004D86  26E1               	addwf	fsr1l,f,c
 34108   004D88  51A3               	movf	(canSendMessage@m+1)& (0+255),w,b
 34109   004D8A  22E2               	addwfc	fsr1h,f,c
 34110   004D8C  CFDF FFE7          	movff	indf2,indf1
 34111                           
 34112                           ; BSR set to: 0
 34113                           ;../../VLCBlib_PIC/can18_ecan.c: 548:                         m->bytes[1] = mp->bytes[1]
      +                          ;
 34114   004D90  EE20 F003          	lfsr	2,3
 34115   004D94  519A               	movf	canSendMessage@mp& (0+255),w,b
 34116   004D96  26D9               	addwf	fsr2l,f,c
 34117   004D98  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 34118   004D9A  22DA               	addwfc	fsr2h,f,c
 34119   004D9C  EE10 F003          	lfsr	1,3
 34120   004DA0  51A2               	movf	canSendMessage@m& (0+255),w,b
 34121   004DA2  26E1               	addwf	fsr1l,f,c
 34122   004DA4  51A3               	movf	(canSendMessage@m+1)& (0+255),w,b
 34123   004DA6  22E2               	addwfc	fsr1h,f,c
 34124   004DA8  CFDF FFE7          	movff	indf2,indf1
 34125                           
 34126                           ; BSR set to: 0
 34127                           ;../../VLCBlib_PIC/can18_ecan.c: 549:                         m->bytes[2] = mp->bytes[2]
      +                          ;
 34128   004DAC  EE20 F004          	lfsr	2,4
 34129   004DB0  519A               	movf	canSendMessage@mp& (0+255),w,b
 34130   004DB2  26D9               	addwf	fsr2l,f,c
 34131   004DB4  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 34132   004DB6  22DA               	addwfc	fsr2h,f,c
 34133   004DB8  EE10 F004          	lfsr	1,4
 34134   004DBC  51A2               	movf	canSendMessage@m& (0+255),w,b
 34135   004DBE  26E1               	addwf	fsr1l,f,c
 34136   004DC0  51A3               	movf	(canSendMessage@m+1)& (0+255),w,b
 34137   004DC2  22E2               	addwfc	fsr1h,f,c
 34138   004DC4  CFDF FFE7          	movff	indf2,indf1
 34139                           
 34140                           ; BSR set to: 0
 34141                           ;../../VLCBlib_PIC/can18_ecan.c: 550:                         m->bytes[3] = mp->bytes[3]
      +                          ;
 34142   004DC8  EE20 F005          	lfsr	2,5
 34143   004DCC  519A               	movf	canSendMessage@mp& (0+255),w,b
 34144   004DCE  26D9               	addwf	fsr2l,f,c
 34145   004DD0  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 34146   004DD2  22DA               	addwfc	fsr2h,f,c
 34147   004DD4  EE10 F005          	lfsr	1,5
 34148   004DD8  51A2               	movf	canSendMessage@m& (0+255),w,b
 34149   004DDA  26E1               	addwf	fsr1l,f,c
 34150   004DDC  51A3               	movf	(canSendMessage@m+1)& (0+255),w,b
 34151   004DDE  22E2               	addwfc	fsr1h,f,c
 34152   004DE0  CFDF FFE7          	movff	indf2,indf1
 34153                           
 34154                           ; BSR set to: 0
 34155                           ;../../VLCBlib_PIC/can18_ecan.c: 551:                         m->bytes[4] = mp->bytes[4]
      +                          ;
 34156   004DE4  EE20 F006          	lfsr	2,6
 34157   004DE8  519A               	movf	canSendMessage@mp& (0+255),w,b
 34158   004DEA  26D9               	addwf	fsr2l,f,c
 34159   004DEC  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 34160   004DEE  22DA               	addwfc	fsr2h,f,c
 34161   004DF0  EE10 F006          	lfsr	1,6
 34162   004DF4  51A2               	movf	canSendMessage@m& (0+255),w,b
 34163   004DF6  26E1               	addwf	fsr1l,f,c
 34164   004DF8  51A3               	movf	(canSendMessage@m+1)& (0+255),w,b
 34165   004DFA  22E2               	addwfc	fsr1h,f,c
 34166   004DFC  CFDF FFE7          	movff	indf2,indf1
 34167                           
 34168                           ; BSR set to: 0
 34169                           ;../../VLCBlib_PIC/can18_ecan.c: 552:                         m->bytes[5] = mp->bytes[5]
      +                          ;
 34170   004E00  EE20 F007          	lfsr	2,7
 34171   004E04  519A               	movf	canSendMessage@mp& (0+255),w,b
 34172   004E06  26D9               	addwf	fsr2l,f,c
 34173   004E08  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 34174   004E0A  22DA               	addwfc	fsr2h,f,c
 34175   004E0C  EE10 F007          	lfsr	1,7
 34176   004E10  51A2               	movf	canSendMessage@m& (0+255),w,b
 34177   004E12  26E1               	addwf	fsr1l,f,c
 34178   004E14  51A3               	movf	(canSendMessage@m+1)& (0+255),w,b
 34179   004E16  22E2               	addwfc	fsr1h,f,c
 34180   004E18  CFDF FFE7          	movff	indf2,indf1
 34181                           
 34182                           ; BSR set to: 0
 34183                           ;../../VLCBlib_PIC/can18_ecan.c: 553:                         m->bytes[6] = mp->bytes[6]
      +                          ;
 34184   004E1C  EE20 F008          	lfsr	2,8
 34185   004E20  519A               	movf	canSendMessage@mp& (0+255),w,b
 34186   004E22  26D9               	addwf	fsr2l,f,c
 34187   004E24  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 34188   004E26  22DA               	addwfc	fsr2h,f,c
 34189   004E28  EE10 F008          	lfsr	1,8
 34190   004E2C  51A2               	movf	canSendMessage@m& (0+255),w,b
 34191   004E2E  26E1               	addwf	fsr1l,f,c
 34192   004E30  51A3               	movf	(canSendMessage@m+1)& (0+255),w,b
 34193   004E32  22E2               	addwfc	fsr1h,f,c
 34194   004E34  CFDF FFE7          	movff	indf2,indf1
 34195   004E38  0012               	return	
 34196   004E3A                     l19653:
 34197                           
 34198                           ;../../VLCBlib_PIC/can18_ecan.c: 562:     if (push(&txQueue, mp) == QUEUE_FAIL) {
 34199   004E3A  0EA9               	movlw	low _txQueue
 34200   004E3C  0100               	movlb	0	; () banked
 34201   004E3E  6F8D               	movwf	push@q& (0+255),b
 34202   004E40  0E01               	movlw	high _txQueue
 34203   004E42  6F8E               	movwf	(push@q+1)& (0+255),b
 34204   004E44  C09A  F08F         	movff	canSendMessage@mp,push@m
 34205   004E48  C09B  F090         	movff	canSendMessage@mp+1,push@m+1
 34206   004E4C  ECFB  F01E         	call	_push	;wreg free
 34207   004E50  0900               	iorlw	0
 34208   004E52  A4D8               	btfss	status,2,c
 34209   004E54  D007               	goto	l19663
 34210                           
 34211                           ;../../VLCBlib_PIC/can18_ecan.c: 564:         canDiagnostics[0x05].asUint++;
 34212   004E56  0101               	movlb	1	; () banked
 34213   004E58  4B70               	infsnz	(_canDiagnostics+10)& (0+255),f,b
 34214   004E5A  2B71               	incf	(_canDiagnostics+11)& (0+255),f,b
 34215                           
 34216                           ; BSR set to: 1
 34217                           ;../../VLCBlib_PIC/can18_ecan.c: 565:         updateModuleErrorStatus();
 34218   004E5C  EC5B  F064         	call	_updateModuleErrorStatus	;wreg free
 34219                           
 34220                           ;../../VLCBlib_PIC/can18_ecan.c: 567:         PIE5bits.TXBnIE = 1;
 34221   004E60  8876               	bsf	118,4,c	;volatile
 34222   004E62  0012               	return	
 34223   004E64                     l19663:
 34224                           
 34225                           ;../../VLCBlib_PIC/can18_ecan.c: 571:     no = getNumTxBuffersInUse();
 34226   004E64  EC4B  F064         	call	_getNumTxBuffersInUse	;wreg free
 34227   004E68  0100               	movlb	0	; () banked
 34228   004E6A  6FA1               	movwf	canSendMessage@no& (0+255),b
 34229                           
 34230                           ; BSR set to: 0
 34231                           ;../../VLCBlib_PIC/can18_ecan.c: 572:     if (canDiagnostics[0x11].asUint < no) {
 34232   004E6C  51A1               	movf	canSendMessage@no& (0+255),w,b
 34233   004E6E  0101               	movlb	1	; () banked
 34234   004E70  5D88               	subwf	(_canDiagnostics+34)& (0+255),w,b
 34235   004E72  0E00               	movlw	0
 34236   004E74  5989               	subwfb	(_canDiagnostics+35)& (0+255),w,b
 34237   004E76  B0D8               	btfsc	status,0,c
 34238   004E78  D003               	goto	l2531
 34239                           
 34240                           ; BSR set to: 1
 34241                           ;../../VLCBlib_PIC/can18_ecan.c: 573:         canDiagnostics[0x11].asUint = no;
 34242   004E7A  C0A1  F188         	movff	canSendMessage@no,_canDiagnostics+34
 34243   004E7E  6B89               	clrf	(_canDiagnostics+35)& (0+255),b
 34244   004E80                     l2531:
 34245                           
 34246                           ; BSR set to: 1
 34247                           ;../../VLCBlib_PIC/can18_ecan.c: 576:     PIE5bits.TXBnIE = 1;
 34248   004E80  8876               	bsf	118,4,c	;volatile
 34249                           
 34250                           ;../../VLCBlib_PIC/can18_ecan.c: 577:     return SEND_OK;;	Return value of _canSendMessa
      +                          ge is never used
 34251   004E82  0012               	return		;funcret
 34252   004E84                     __end_of_canSendMessage:
 34253                           	callstack 0
 34254                           
 34255 ;; *************** function _push *****************
 34256 ;; Defined at:
 34257 ;;		line 58 in file "../../VLCBlib_PIC/messageQueue.c"
 34258 ;; Parameters:    Size  Location     Type
 34259 ;;  q               2   45[BANK0 ] PTR struct MessageQueue
 34260 ;;		 -> txQueue(5), 
 34261 ;;  m               2   47[BANK0 ] PTR struct Message
 34262 ;;		 -> tmpMessage(9), 
 34263 ;; Auto vars:     Size  Location     Type
 34264 ;;		None
 34265 ;; Return value:  Size  Location     Type
 34266 ;;                  1    wreg      enum E12934
 34267 ;; Registers used:
 34268 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34269 ;; Tracked objects:
 34270 ;;		On entry : 0/0
 34271 ;;		On exit  : 0/0
 34272 ;;		Unchanged: 0/0
 34273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34274 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34276 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34277 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34278 ;;Total ram usage:       13 bytes
 34279 ;; Hardware stack levels used: 1
 34280 ;; Hardware stack levels required when called: 12
 34281 ;; This function calls:
 34282 ;;		Nothing
 34283 ;; This function is called by:
 34284 ;;		_canSendMessage
 34285 ;; This function uses a non-reentrant model
 34286 ;;
 34287                           
 34288                           	psect	text133
 34289   003DF6                     __ptext133:
 34290                           	callstack 0
 34291   003DF6                     _push:
 34292                           	callstack 12
 34293                           
 34294                           ;incstack = 0
 34295   003DF6  0100               	movlb	0	; () banked
 34296   003DF8  EE20 F002          	lfsr	2,2
 34297   003DFC  518D               	movf	push@q& (0+255),w,b
 34298   003DFE  26D9               	addwf	fsr2l,f,c
 34299   003E00  518E               	movf	(push@q+1)& (0+255),w,b
 34300   003E02  22DA               	addwfc	fsr2h,f,c
 34301   003E04  50DF               	movf	indf2,w,c
 34302   003E06  6F91               	movwf	??_push& (0+255),b
 34303   003E08  6B92               	clrf	(??_push+1)& (0+255),b
 34304   003E0A  EE20 F004          	lfsr	2,4
 34305   003E0E  518D               	movf	push@q& (0+255),w,b
 34306   003E10  26D9               	addwf	fsr2l,f,c
 34307   003E12  518E               	movf	(push@q+1)& (0+255),w,b
 34308   003E14  22DA               	addwfc	fsr2h,f,c
 34309   003E16  50DF               	movf	indf2,w,c
 34310   003E18  6F93               	movwf	(??_push+2)& (0+255),b
 34311   003E1A  0EFF               	movlw	255
 34312   003E1C  2593               	addwf	(??_push+2)& (0+255),w,b
 34313   003E1E  6F94               	movwf	(??_push+3)& (0+255),b
 34314   003E20  6B95               	clrf	(??_push+4)& (0+255),b
 34315   003E22  0EFF               	movlw	255
 34316   003E24  2395               	addwfc	(??_push+4)& (0+255),f,b
 34317   003E26  EE20 F003          	lfsr	2,3
 34318   003E2A  518D               	movf	push@q& (0+255),w,b
 34319   003E2C  26D9               	addwf	fsr2l,f,c
 34320   003E2E  518E               	movf	(push@q+1)& (0+255),w,b
 34321   003E30  22DA               	addwfc	fsr2h,f,c
 34322   003E32  50DF               	movf	indf2,w,c
 34323   003E34  6F96               	movwf	(??_push+5)& (0+255),b
 34324   003E36  6B97               	clrf	(??_push+6)& (0+255),b
 34325   003E38  0E01               	movlw	1
 34326   003E3A  2796               	addwf	(??_push+5)& (0+255),f,b
 34327   003E3C  0E00               	movlw	0
 34328   003E3E  2397               	addwfc	(??_push+6)& (0+255),f,b
 34329   003E40  5194               	movf	(??_push+3)& (0+255),w,b
 34330   003E42  1596               	andwf	(??_push+5)& (0+255),w,b
 34331   003E44  6F98               	movwf	(??_push+7)& (0+255),b
 34332   003E46  5195               	movf	(??_push+4)& (0+255),w,b
 34333   003E48  1597               	andwf	(??_push+6)& (0+255),w,b
 34334   003E4A  6F99               	movwf	(??_push+8)& (0+255),b
 34335   003E4C  5191               	movf	??_push& (0+255),w,b
 34336   003E4E  1998               	xorwf	(??_push+7)& (0+255),w,b
 34337   003E50  E106               	bnz	l19455
 34338   003E52  5192               	movf	(??_push+1)& (0+255),w,b
 34339   003E54  1999               	xorwf	(??_push+8)& (0+255),w,b
 34340   003E56  A4D8               	btfss	status,2,c
 34341   003E58  D002               	goto	l19455
 34342                           
 34343                           ; BSR set to: 0
 34344   003E5A  0E00               	movlw	0
 34345   003E5C  0012               	return	
 34346   003E5E                     l19455:
 34347                           
 34348                           ; BSR set to: 0
 34349   003E5E  EE20 F001          	lfsr	2,1
 34350   003E62  518F               	movf	push@m& (0+255),w,b
 34351   003E64  26D9               	addwf	fsr2l,f,c
 34352   003E66  5190               	movf	(push@m+1)& (0+255),w,b
 34353   003E68  22DA               	addwfc	fsr2h,f,c
 34354   003E6A  EE10 F003          	lfsr	1,3
 34355   003E6E  518D               	movf	push@q& (0+255),w,b
 34356   003E70  26E1               	addwf	fsr1l,f,c
 34357   003E72  518E               	movf	(push@q+1)& (0+255),w,b
 34358   003E74  22E2               	addwfc	fsr1h,f,c
 34359   003E76  50E7               	movf	indf1,w,c
 34360   003E78  6F91               	movwf	??_push& (0+255),b
 34361   003E7A  5191               	movf	??_push& (0+255),w,b
 34362   003E7C  0D09               	mullw	9
 34363   003E7E  CFF3 F092          	movff	prodl,??_push+1
 34364   003E82  CFF4 F093          	movff	prodh,??_push+2
 34365   003E86  C08D  FFE1         	movff	push@q,fsr1l
 34366   003E8A  C08E  FFE2         	movff	push@q+1,fsr1h
 34367   003E8E  CFE6 F094          	movff	postinc1,??_push+3
 34368   003E92  CFE5 F095          	movff	postdec1,??_push+4
 34369   003E96  5192               	movf	(??_push+1)& (0+255),w,b
 34370   003E98  2594               	addwf	(??_push+3)& (0+255),w,b
 34371   003E9A  6F96               	movwf	(??_push+5)& (0+255),b
 34372   003E9C  5193               	movf	(??_push+2)& (0+255),w,b
 34373   003E9E  2195               	addwfc	(??_push+4)& (0+255),w,b
 34374   003EA0  6F97               	movwf	(??_push+6)& (0+255),b
 34375   003EA2  0E01               	movlw	1
 34376   003EA4  2596               	addwf	(??_push+5)& (0+255),w,b
 34377   003EA6  6EE1               	movwf	fsr1l,c
 34378   003EA8  0E00               	movlw	0
 34379   003EAA  2197               	addwfc	(??_push+6)& (0+255),w,b
 34380   003EAC  6EE2               	movwf	fsr1h,c
 34381   003EAE  CFDF FFE7          	movff	indf2,indf1
 34382   003EB2  EE20 F002          	lfsr	2,2
 34383   003EB6  518F               	movf	push@m& (0+255),w,b
 34384   003EB8  26D9               	addwf	fsr2l,f,c
 34385   003EBA  5190               	movf	(push@m+1)& (0+255),w,b
 34386   003EBC  22DA               	addwfc	fsr2h,f,c
 34387   003EBE  EE10 F003          	lfsr	1,3
 34388   003EC2  518D               	movf	push@q& (0+255),w,b
 34389   003EC4  26E1               	addwf	fsr1l,f,c
 34390   003EC6  518E               	movf	(push@q+1)& (0+255),w,b
 34391   003EC8  22E2               	addwfc	fsr1h,f,c
 34392   003ECA  50E7               	movf	indf1,w,c
 34393   003ECC  6F91               	movwf	??_push& (0+255),b
 34394   003ECE  5191               	movf	??_push& (0+255),w,b
 34395   003ED0  0D09               	mullw	9
 34396   003ED2  CFF3 F092          	movff	prodl,??_push+1
 34397   003ED6  CFF4 F093          	movff	prodh,??_push+2
 34398   003EDA  C08D  FFE1         	movff	push@q,fsr1l
 34399   003EDE  C08E  FFE2         	movff	push@q+1,fsr1h
 34400   003EE2  CFE6 F094          	movff	postinc1,??_push+3
 34401   003EE6  CFE5 F095          	movff	postdec1,??_push+4
 34402   003EEA  5192               	movf	(??_push+1)& (0+255),w,b
 34403   003EEC  2594               	addwf	(??_push+3)& (0+255),w,b
 34404   003EEE  6F96               	movwf	(??_push+5)& (0+255),b
 34405   003EF0  5193               	movf	(??_push+2)& (0+255),w,b
 34406   003EF2  2195               	addwfc	(??_push+4)& (0+255),w,b
 34407   003EF4  6F97               	movwf	(??_push+6)& (0+255),b
 34408   003EF6  0E02               	movlw	2
 34409   003EF8  2596               	addwf	(??_push+5)& (0+255),w,b
 34410   003EFA  6EE1               	movwf	fsr1l,c
 34411   003EFC  0E00               	movlw	0
 34412   003EFE  2197               	addwfc	(??_push+6)& (0+255),w,b
 34413   003F00  6EE2               	movwf	fsr1h,c
 34414   003F02  CFDF FFE7          	movff	indf2,indf1
 34415   003F06  EE20 F003          	lfsr	2,3
 34416   003F0A  518F               	movf	push@m& (0+255),w,b
 34417   003F0C  26D9               	addwf	fsr2l,f,c
 34418   003F0E  5190               	movf	(push@m+1)& (0+255),w,b
 34419   003F10  22DA               	addwfc	fsr2h,f,c
 34420   003F12  EE10 F003          	lfsr	1,3
 34421   003F16  518D               	movf	push@q& (0+255),w,b
 34422   003F18  26E1               	addwf	fsr1l,f,c
 34423   003F1A  518E               	movf	(push@q+1)& (0+255),w,b
 34424   003F1C  22E2               	addwfc	fsr1h,f,c
 34425   003F1E  50E7               	movf	indf1,w,c
 34426   003F20  6F91               	movwf	??_push& (0+255),b
 34427   003F22  5191               	movf	??_push& (0+255),w,b
 34428   003F24  0D09               	mullw	9
 34429   003F26  CFF3 F092          	movff	prodl,??_push+1
 34430   003F2A  CFF4 F093          	movff	prodh,??_push+2
 34431   003F2E  C08D  FFE1         	movff	push@q,fsr1l
 34432   003F32  C08E  FFE2         	movff	push@q+1,fsr1h
 34433   003F36  CFE6 F094          	movff	postinc1,??_push+3
 34434   003F3A  CFE5 F095          	movff	postdec1,??_push+4
 34435   003F3E  5192               	movf	(??_push+1)& (0+255),w,b
 34436   003F40  2594               	addwf	(??_push+3)& (0+255),w,b
 34437   003F42  6F96               	movwf	(??_push+5)& (0+255),b
 34438   003F44  5193               	movf	(??_push+2)& (0+255),w,b
 34439   003F46  2195               	addwfc	(??_push+4)& (0+255),w,b
 34440   003F48  6F97               	movwf	(??_push+6)& (0+255),b
 34441   003F4A  0E03               	movlw	3
 34442   003F4C  2596               	addwf	(??_push+5)& (0+255),w,b
 34443   003F4E  6EE1               	movwf	fsr1l,c
 34444   003F50  0E00               	movlw	0
 34445   003F52  2197               	addwfc	(??_push+6)& (0+255),w,b
 34446   003F54  6EE2               	movwf	fsr1h,c
 34447   003F56  CFDF FFE7          	movff	indf2,indf1
 34448   003F5A  EE20 F004          	lfsr	2,4
 34449   003F5E  518F               	movf	push@m& (0+255),w,b
 34450   003F60  26D9               	addwf	fsr2l,f,c
 34451   003F62  5190               	movf	(push@m+1)& (0+255),w,b
 34452   003F64  22DA               	addwfc	fsr2h,f,c
 34453   003F66  EE10 F003          	lfsr	1,3
 34454   003F6A  518D               	movf	push@q& (0+255),w,b
 34455   003F6C  26E1               	addwf	fsr1l,f,c
 34456   003F6E  518E               	movf	(push@q+1)& (0+255),w,b
 34457   003F70  22E2               	addwfc	fsr1h,f,c
 34458   003F72  50E7               	movf	indf1,w,c
 34459   003F74  6F91               	movwf	??_push& (0+255),b
 34460   003F76  5191               	movf	??_push& (0+255),w,b
 34461   003F78  0D09               	mullw	9
 34462   003F7A  CFF3 F092          	movff	prodl,??_push+1
 34463   003F7E  CFF4 F093          	movff	prodh,??_push+2
 34464   003F82  C08D  FFE1         	movff	push@q,fsr1l
 34465   003F86  C08E  FFE2         	movff	push@q+1,fsr1h
 34466   003F8A  CFE6 F094          	movff	postinc1,??_push+3
 34467   003F8E  CFE5 F095          	movff	postdec1,??_push+4
 34468   003F92  5192               	movf	(??_push+1)& (0+255),w,b
 34469   003F94  2594               	addwf	(??_push+3)& (0+255),w,b
 34470   003F96  6F96               	movwf	(??_push+5)& (0+255),b
 34471   003F98  5193               	movf	(??_push+2)& (0+255),w,b
 34472   003F9A  2195               	addwfc	(??_push+4)& (0+255),w,b
 34473   003F9C  6F97               	movwf	(??_push+6)& (0+255),b
 34474   003F9E  0E04               	movlw	4
 34475   003FA0  2596               	addwf	(??_push+5)& (0+255),w,b
 34476   003FA2  6EE1               	movwf	fsr1l,c
 34477   003FA4  0E00               	movlw	0
 34478   003FA6  2197               	addwfc	(??_push+6)& (0+255),w,b
 34479   003FA8  6EE2               	movwf	fsr1h,c
 34480   003FAA  CFDF FFE7          	movff	indf2,indf1
 34481   003FAE  EE20 F005          	lfsr	2,5
 34482   003FB2  518F               	movf	push@m& (0+255),w,b
 34483   003FB4  26D9               	addwf	fsr2l,f,c
 34484   003FB6  5190               	movf	(push@m+1)& (0+255),w,b
 34485   003FB8  22DA               	addwfc	fsr2h,f,c
 34486   003FBA  EE10 F003          	lfsr	1,3
 34487   003FBE  518D               	movf	push@q& (0+255),w,b
 34488   003FC0  26E1               	addwf	fsr1l,f,c
 34489   003FC2  518E               	movf	(push@q+1)& (0+255),w,b
 34490   003FC4  22E2               	addwfc	fsr1h,f,c
 34491   003FC6  50E7               	movf	indf1,w,c
 34492   003FC8  6F91               	movwf	??_push& (0+255),b
 34493   003FCA  5191               	movf	??_push& (0+255),w,b
 34494   003FCC  0D09               	mullw	9
 34495   003FCE  CFF3 F092          	movff	prodl,??_push+1
 34496   003FD2  CFF4 F093          	movff	prodh,??_push+2
 34497   003FD6  C08D  FFE1         	movff	push@q,fsr1l
 34498   003FDA  C08E  FFE2         	movff	push@q+1,fsr1h
 34499   003FDE  CFE6 F094          	movff	postinc1,??_push+3
 34500   003FE2  CFE5 F095          	movff	postdec1,??_push+4
 34501   003FE6  5192               	movf	(??_push+1)& (0+255),w,b
 34502   003FE8  2594               	addwf	(??_push+3)& (0+255),w,b
 34503   003FEA  6F96               	movwf	(??_push+5)& (0+255),b
 34504   003FEC  5193               	movf	(??_push+2)& (0+255),w,b
 34505   003FEE  2195               	addwfc	(??_push+4)& (0+255),w,b
 34506   003FF0  6F97               	movwf	(??_push+6)& (0+255),b
 34507   003FF2  0E05               	movlw	5
 34508   003FF4  2596               	addwf	(??_push+5)& (0+255),w,b
 34509   003FF6  6EE1               	movwf	fsr1l,c
 34510   003FF8  0E00               	movlw	0
 34511   003FFA  2197               	addwfc	(??_push+6)& (0+255),w,b
 34512   003FFC  6EE2               	movwf	fsr1h,c
 34513   003FFE  CFDF FFE7          	movff	indf2,indf1
 34514   004002  EE20 F006          	lfsr	2,6
 34515   004006  518F               	movf	push@m& (0+255),w,b
 34516   004008  26D9               	addwf	fsr2l,f,c
 34517   00400A  5190               	movf	(push@m+1)& (0+255),w,b
 34518   00400C  22DA               	addwfc	fsr2h,f,c
 34519   00400E  EE10 F003          	lfsr	1,3
 34520   004012  518D               	movf	push@q& (0+255),w,b
 34521   004014  26E1               	addwf	fsr1l,f,c
 34522   004016  518E               	movf	(push@q+1)& (0+255),w,b
 34523   004018  22E2               	addwfc	fsr1h,f,c
 34524   00401A  50E7               	movf	indf1,w,c
 34525   00401C  6F91               	movwf	??_push& (0+255),b
 34526   00401E  5191               	movf	??_push& (0+255),w,b
 34527   004020  0D09               	mullw	9
 34528   004022  CFF3 F092          	movff	prodl,??_push+1
 34529   004026  CFF4 F093          	movff	prodh,??_push+2
 34530   00402A  C08D  FFE1         	movff	push@q,fsr1l
 34531   00402E  C08E  FFE2         	movff	push@q+1,fsr1h
 34532   004032  CFE6 F094          	movff	postinc1,??_push+3
 34533   004036  CFE5 F095          	movff	postdec1,??_push+4
 34534   00403A  5192               	movf	(??_push+1)& (0+255),w,b
 34535   00403C  2594               	addwf	(??_push+3)& (0+255),w,b
 34536   00403E  6F96               	movwf	(??_push+5)& (0+255),b
 34537   004040  5193               	movf	(??_push+2)& (0+255),w,b
 34538   004042  2195               	addwfc	(??_push+4)& (0+255),w,b
 34539   004044  6F97               	movwf	(??_push+6)& (0+255),b
 34540   004046  0E06               	movlw	6
 34541   004048  2596               	addwf	(??_push+5)& (0+255),w,b
 34542   00404A  6EE1               	movwf	fsr1l,c
 34543   00404C  0E00               	movlw	0
 34544   00404E  2197               	addwfc	(??_push+6)& (0+255),w,b
 34545   004050  6EE2               	movwf	fsr1h,c
 34546   004052  CFDF FFE7          	movff	indf2,indf1
 34547   004056  EE20 F007          	lfsr	2,7
 34548   00405A  518F               	movf	push@m& (0+255),w,b
 34549   00405C  26D9               	addwf	fsr2l,f,c
 34550   00405E  5190               	movf	(push@m+1)& (0+255),w,b
 34551   004060  22DA               	addwfc	fsr2h,f,c
 34552   004062  EE10 F003          	lfsr	1,3
 34553   004066  518D               	movf	push@q& (0+255),w,b
 34554   004068  26E1               	addwf	fsr1l,f,c
 34555   00406A  518E               	movf	(push@q+1)& (0+255),w,b
 34556   00406C  22E2               	addwfc	fsr1h,f,c
 34557   00406E  50E7               	movf	indf1,w,c
 34558   004070  6F91               	movwf	??_push& (0+255),b
 34559   004072  5191               	movf	??_push& (0+255),w,b
 34560   004074  0D09               	mullw	9
 34561   004076  CFF3 F092          	movff	prodl,??_push+1
 34562   00407A  CFF4 F093          	movff	prodh,??_push+2
 34563   00407E  C08D  FFE1         	movff	push@q,fsr1l
 34564   004082  C08E  FFE2         	movff	push@q+1,fsr1h
 34565   004086  CFE6 F094          	movff	postinc1,??_push+3
 34566   00408A  CFE5 F095          	movff	postdec1,??_push+4
 34567   00408E  5192               	movf	(??_push+1)& (0+255),w,b
 34568   004090  2594               	addwf	(??_push+3)& (0+255),w,b
 34569   004092  6F96               	movwf	(??_push+5)& (0+255),b
 34570   004094  5193               	movf	(??_push+2)& (0+255),w,b
 34571   004096  2195               	addwfc	(??_push+4)& (0+255),w,b
 34572   004098  6F97               	movwf	(??_push+6)& (0+255),b
 34573   00409A  0E07               	movlw	7
 34574   00409C  2596               	addwf	(??_push+5)& (0+255),w,b
 34575   00409E  6EE1               	movwf	fsr1l,c
 34576   0040A0  0E00               	movlw	0
 34577   0040A2  2197               	addwfc	(??_push+6)& (0+255),w,b
 34578   0040A4  6EE2               	movwf	fsr1h,c
 34579   0040A6  CFDF FFE7          	movff	indf2,indf1
 34580   0040AA  EE20 F008          	lfsr	2,8
 34581   0040AE  518F               	movf	push@m& (0+255),w,b
 34582   0040B0  26D9               	addwf	fsr2l,f,c
 34583   0040B2  5190               	movf	(push@m+1)& (0+255),w,b
 34584   0040B4  22DA               	addwfc	fsr2h,f,c
 34585   0040B6  EE10 F003          	lfsr	1,3
 34586   0040BA  518D               	movf	push@q& (0+255),w,b
 34587   0040BC  26E1               	addwf	fsr1l,f,c
 34588   0040BE  518E               	movf	(push@q+1)& (0+255),w,b
 34589   0040C0  22E2               	addwfc	fsr1h,f,c
 34590   0040C2  50E7               	movf	indf1,w,c
 34591   0040C4  6F91               	movwf	??_push& (0+255),b
 34592   0040C6  5191               	movf	??_push& (0+255),w,b
 34593   0040C8  0D09               	mullw	9
 34594   0040CA  CFF3 F092          	movff	prodl,??_push+1
 34595   0040CE  CFF4 F093          	movff	prodh,??_push+2
 34596   0040D2  C08D  FFE1         	movff	push@q,fsr1l
 34597   0040D6  C08E  FFE2         	movff	push@q+1,fsr1h
 34598   0040DA  CFE6 F094          	movff	postinc1,??_push+3
 34599   0040DE  CFE5 F095          	movff	postdec1,??_push+4
 34600   0040E2  5192               	movf	(??_push+1)& (0+255),w,b
 34601   0040E4  2594               	addwf	(??_push+3)& (0+255),w,b
 34602   0040E6  6F96               	movwf	(??_push+5)& (0+255),b
 34603   0040E8  5193               	movf	(??_push+2)& (0+255),w,b
 34604   0040EA  2195               	addwfc	(??_push+4)& (0+255),w,b
 34605   0040EC  6F97               	movwf	(??_push+6)& (0+255),b
 34606   0040EE  0E08               	movlw	8
 34607   0040F0  2596               	addwf	(??_push+5)& (0+255),w,b
 34608   0040F2  6EE1               	movwf	fsr1l,c
 34609   0040F4  0E00               	movlw	0
 34610   0040F6  2197               	addwfc	(??_push+6)& (0+255),w,b
 34611   0040F8  6EE2               	movwf	fsr1h,c
 34612   0040FA  CFDF FFE7          	movff	indf2,indf1
 34613   0040FE  C08F  FFD9         	movff	push@m,fsr2l
 34614   004102  C090  FFDA         	movff	push@m+1,fsr2h
 34615   004106  EE10 F003          	lfsr	1,3
 34616   00410A  518D               	movf	push@q& (0+255),w,b
 34617   00410C  26E1               	addwf	fsr1l,f,c
 34618   00410E  518E               	movf	(push@q+1)& (0+255),w,b
 34619   004110  22E2               	addwfc	fsr1h,f,c
 34620   004112  50E7               	movf	indf1,w,c
 34621   004114  6F91               	movwf	??_push& (0+255),b
 34622   004116  5191               	movf	??_push& (0+255),w,b
 34623   004118  0D09               	mullw	9
 34624   00411A  CFF3 F092          	movff	prodl,??_push+1
 34625   00411E  CFF4 F093          	movff	prodh,??_push+2
 34626   004122  C08D  FFE1         	movff	push@q,fsr1l
 34627   004126  C08E  FFE2         	movff	push@q+1,fsr1h
 34628   00412A  CFE6 F094          	movff	postinc1,??_push+3
 34629   00412E  CFE5 F095          	movff	postdec1,??_push+4
 34630   004132  5192               	movf	(??_push+1)& (0+255),w,b
 34631   004134  2594               	addwf	(??_push+3)& (0+255),w,b
 34632   004136  6EE1               	movwf	fsr1l,c
 34633   004138  5193               	movf	(??_push+2)& (0+255),w,b
 34634   00413A  2195               	addwfc	(??_push+4)& (0+255),w,b
 34635   00413C  6EE2               	movwf	fsr1h,c
 34636   00413E  CFDF FFE7          	movff	indf2,indf1
 34637                           
 34638                           ; BSR set to: 0
 34639   004142  EE20 F003          	lfsr	2,3
 34640   004146  518D               	movf	push@q& (0+255),w,b
 34641   004148  26D9               	addwf	fsr2l,f,c
 34642   00414A  518E               	movf	(push@q+1)& (0+255),w,b
 34643   00414C  22DA               	addwfc	fsr2h,f,c
 34644   00414E  2ADF               	incf	indf2,f,c
 34645                           
 34646                           ; BSR set to: 0
 34647   004150  EE20 F004          	lfsr	2,4
 34648   004154  518D               	movf	push@q& (0+255),w,b
 34649   004156  26D9               	addwf	fsr2l,f,c
 34650   004158  518E               	movf	(push@q+1)& (0+255),w,b
 34651   00415A  22DA               	addwfc	fsr2h,f,c
 34652   00415C  EE10 F003          	lfsr	1,3
 34653   004160  518D               	movf	push@q& (0+255),w,b
 34654   004162  26E1               	addwf	fsr1l,f,c
 34655   004164  518E               	movf	(push@q+1)& (0+255),w,b
 34656   004166  22E2               	addwfc	fsr1h,f,c
 34657   004168  50DE               	movf	postinc2,w,c
 34658   00416A  5CE6               	subwf	postinc1,w,c
 34659   00416C  A0D8               	btfss	status,0,c
 34660   00416E  D007               	goto	l19463
 34661                           
 34662                           ; BSR set to: 0
 34663   004170  EE20 F003          	lfsr	2,3
 34664   004174  518D               	movf	push@q& (0+255),w,b
 34665   004176  26D9               	addwf	fsr2l,f,c
 34666   004178  518E               	movf	(push@q+1)& (0+255),w,b
 34667   00417A  22DA               	addwfc	fsr2h,f,c
 34668   00417C  6ADF               	clrf	indf2,c
 34669   00417E                     l19463:
 34670                           
 34671                           ; BSR set to: 0
 34672   00417E  0E01               	movlw	1
 34673                           
 34674                           ; BSR set to: 0
 34675   004180  0012               	return		;funcret
 34676   004182                     __end_of_push:
 34677                           	callstack 0
 34678                           
 34679 ;; *************** function _isEvent *****************
 34680 ;; Defined at:
 34681 ;;		line 1118 in file "../../VLCBlib_PIC/vlcb.c"
 34682 ;; Parameters:    Size  Location     Type
 34683 ;;  opc             1    wreg     unsigned char 
 34684 ;; Auto vars:     Size  Location     Type
 34685 ;;  opc             1   46[BANK0 ] unsigned char 
 34686 ;; Return value:  Size  Location     Type
 34687 ;;                  1    wreg      enum E12766
 34688 ;; Registers used:
 34689 ;;		wreg, status,2, status,0
 34690 ;; Tracked objects:
 34691 ;;		On entry : 0/0
 34692 ;;		On exit  : 0/0
 34693 ;;		Unchanged: 0/0
 34694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34696 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34698 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34699 ;;Total ram usage:        2 bytes
 34700 ;; Hardware stack levels used: 1
 34701 ;; Hardware stack levels required when called: 12
 34702 ;; This function calls:
 34703 ;;		Nothing
 34704 ;; This function is called by:
 34705 ;;		_canSendMessage
 34706 ;; This function uses a non-reentrant model
 34707 ;;
 34708                           
 34709                           	psect	text134
 34710   00C542                     __ptext134:
 34711                           	callstack 0
 34712   00C542                     _isEvent:
 34713                           	callstack 12
 34714                           
 34715                           ; BSR set to: 0
 34716                           ;incstack = 0
 34717                           ;isEvent@opc stored from wreg
 34718   00C542  0100               	movlb	0	; () banked
 34719   00C544  6F8E               	movwf	isEvent@opc& (0+255),b
 34720                           
 34721                           ;../../VLCBlib_PIC/vlcb.c: 1119:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 34722   00C546  0E00               	movlw	0
 34723   00C548  0100               	movlb	0	; () banked
 34724   00C54A  6F8D               	movwf	_isEvent$4896& (0+255),b
 34725                           
 34726                           ; BSR set to: 0
 34727   00C54C  518E               	movf	isEvent@opc& (0+255),w,b
 34728   00C54E  0B90               	andlw	144
 34729   00C550  0A90               	xorlw	144
 34730   00C552  A4D8               	btfss	status,2,c
 34731   00C554  D008               	goto	l2069
 34732                           
 34733                           ; BSR set to: 0
 34734   00C556  518E               	movf	isEvent@opc& (0+255),w,b
 34735   00C558  0AFF               	xorlw	255
 34736   00C55A  0B06               	andlw	6
 34737   00C55C  0A06               	xorlw	6
 34738   00C55E  A4D8               	btfss	status,2,c
 34739   00C560  D002               	goto	l2069
 34740                           
 34741                           ; BSR set to: 0
 34742   00C562  0E01               	movlw	1
 34743   00C564  6F8D               	movwf	_isEvent$4896& (0+255),b
 34744   00C566                     l2069:
 34745                           
 34746                           ; BSR set to: 0
 34747   00C566  518D               	movf	_isEvent$4896& (0+255),w,b
 34748                           
 34749                           ; BSR set to: 0
 34750   00C568  0012               	return		;funcret
 34751   00C56A                     __end_of_isEvent:
 34752                           	callstack 0
 34753                           
 34754 ;; *************** function _have *****************
 34755 ;; Defined at:
 34756 ;;		line 838 in file "../../VLCBlib_PIC/vlcb.c"
 34757 ;; Parameters:    Size  Location     Type
 34758 ;;  id              1    wreg     unsigned char 
 34759 ;; Auto vars:     Size  Location     Type
 34760 ;;  id              1   47[BANK0 ] unsigned char 
 34761 ;;  i               1   48[BANK0 ] unsigned char 
 34762 ;; Return value:  Size  Location     Type
 34763 ;;                  1    wreg      enum E12897
 34764 ;; Registers used:
 34765 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 34766 ;; Tracked objects:
 34767 ;;		On entry : 0/0
 34768 ;;		On exit  : 0/0
 34769 ;;		Unchanged: 0/0
 34770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34772 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34773 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34774 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34775 ;;Total ram usage:        4 bytes
 34776 ;; Hardware stack levels used: 1
 34777 ;; Hardware stack levels required when called: 12
 34778 ;; This function calls:
 34779 ;;		Nothing
 34780 ;; This function is called by:
 34781 ;;		_getParameterFlags
 34782 ;;		_getParameter
 34783 ;;		_canSendMessage
 34784 ;; This function uses a non-reentrant model
 34785 ;;
 34786                           
 34787                           	psect	text135
 34788   00B0AE                     __ptext135:
 34789                           	callstack 0
 34790   00B0AE                     _have:
 34791                           	callstack 12
 34792                           
 34793                           ; BSR set to: 0
 34794                           ;incstack = 0
 34795                           ;have@id stored from wreg
 34796   00B0AE  0100               	movlb	0	; () banked
 34797   00B0B0  6F8F               	movwf	have@id& (0+255),b
 34798                           
 34799                           ;../../VLCBlib_PIC/vlcb.c: 839:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 840:     for (i
      +                          =0; i<9; i++) {
 34800   00B0B2  0E00               	movlw	0
 34801   00B0B4  0100               	movlb	0	; () banked
 34802   00B0B6  6F90               	movwf	have@i& (0+255),b
 34803   00B0B8                     l19423:
 34804                           
 34805                           ; BSR set to: 0
 34806                           ;../../VLCBlib_PIC/vlcb.c: 841:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == id)) {
 34807   00B0B8  5190               	movf	have@i& (0+255),w,b
 34808   00B0BA  0D02               	mullw	2
 34809   00B0BC  0E69               	movlw	low _services
 34810   00B0BE  24F3               	addwf	243,w,c
 34811   00B0C0  6EF6               	movwf	tblptrl,c
 34812   00B0C2  0EEE               	movlw	high _services
 34813   00B0C4  20F4               	addwfc	244,w,c
 34814   00B0C6  6EF7               	movwf	tblptrh,c
 34815   00B0C8                     	if	1	;There are 3 active tblptr bytes
 34816   00B0C8  6AF8               	clrf	tblptru,c
 34817   00B0CA  0E00               	movlw	low (__mediumconst shr (0+16))
 34818   00B0CC  22F8               	addwfc	tblptru,f,c
 34819   00B0CE                     	endif
 34820   00B0CE  0009               	tblrd		*+
 34821   00B0D0  50F5               	movf	tablat,w,c
 34822   00B0D2  0009               	tblrd		*+
 34823   00B0D4  10F5               	iorwf	tablat,w,c
 34824   00B0D6  B4D8               	btfsc	status,2,c
 34825   00B0D8  D01D               	goto	l19431
 34826                           
 34827                           ; BSR set to: 0
 34828   00B0DA  5190               	movf	have@i& (0+255),w,b
 34829   00B0DC  0D02               	mullw	2
 34830   00B0DE  0E69               	movlw	low _services
 34831   00B0E0  24F3               	addwf	243,w,c
 34832   00B0E2  6EF6               	movwf	tblptrl,c
 34833   00B0E4  0EEE               	movlw	high _services
 34834   00B0E6  20F4               	addwfc	244,w,c
 34835   00B0E8  6EF7               	movwf	tblptrh,c
 34836   00B0EA                     	if	1	;There are 3 active tblptr bytes
 34837   00B0EA  6AF8               	clrf	tblptru,c
 34838   00B0EC  0E00               	movlw	low (__mediumconst shr (0+16))
 34839   00B0EE  22F8               	addwfc	tblptru,f,c
 34840   00B0F0                     	endif
 34841   00B0F0  0009               	tblrd		*+
 34842   00B0F2  CFF5 F08D          	movff	tablat,??_have
 34843   00B0F6  0009               	tblrd		*+
 34844   00B0F8  CFF5 F08E          	movff	tablat,??_have+1
 34845   00B0FC  C08D  FFF6         	movff	??_have,tblptrl
 34846   00B100  C08E  FFF7         	movff	??_have+1,tblptrh
 34847   00B104                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 34848   00B104  6AF8               	clrf	tblptru,c
 34849   00B106                     	endif
 34850   00B106                     	if	0	;tblptru may be non-zero
 34851   00B106                     	endif
 34852   00B106  0008               	tblrd		*
 34853   00B108  50F5               	movf	tablat,w,c
 34854   00B10A  198F               	xorwf	have@id& (0+255),w,b
 34855   00B10C  A4D8               	btfss	status,2,c
 34856   00B10E  D002               	goto	l19431
 34857                           
 34858                           ; BSR set to: 0
 34859                           ;../../VLCBlib_PIC/vlcb.c: 842:             return PRESENT;
 34860   00B110  0E01               	movlw	1
 34861   00B112  0012               	return	
 34862   00B114                     l19431:
 34863                           
 34864                           ; BSR set to: 0
 34865                           ;../../VLCBlib_PIC/vlcb.c: 844:     }
 34866   00B114  2B90               	incf	have@i& (0+255),f,b
 34867                           
 34868                           ; BSR set to: 0
 34869   00B116  0E08               	movlw	8
 34870   00B118  6590               	cpfsgt	have@i& (0+255),b
 34871   00B11A  D7CE               	goto	l19423
 34872                           
 34873                           ; BSR set to: 0
 34874                           ;../../VLCBlib_PIC/vlcb.c: 845:     return NOT_PRESENT;
 34875   00B11C  0E00               	movlw	0
 34876                           
 34877                           ; BSR set to: 0
 34878   00B11E  0012               	return		;funcret
 34879   00B120                     __end_of_have:
 34880                           	callstack 0
 34881                           
 34882 ;; *************** function _getNumTxBuffersInUse *****************
 34883 ;; Defined at:
 34884 ;;		line 461 in file "../../VLCBlib_PIC/can18_ecan.c"
 34885 ;; Parameters:    Size  Location     Type
 34886 ;;		None
 34887 ;; Auto vars:     Size  Location     Type
 34888 ;;		None
 34889 ;; Return value:  Size  Location     Type
 34890 ;;                  1    wreg      unsigned char 
 34891 ;; Registers used:
 34892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34893 ;; Tracked objects:
 34894 ;;		On entry : 0/0
 34895 ;;		On exit  : 0/0
 34896 ;;		Unchanged: 0/0
 34897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34902 ;;Total ram usage:        0 bytes
 34903 ;; Hardware stack levels used: 1
 34904 ;; Hardware stack levels required when called: 13
 34905 ;; This function calls:
 34906 ;;		_quantity
 34907 ;; This function is called by:
 34908 ;;		_canGetDiagnostic
 34909 ;;		_canSendMessage
 34910 ;; This function uses a non-reentrant model
 34911 ;;
 34912                           
 34913                           	psect	text136
 34914   00C896                     __ptext136:
 34915                           	callstack 0
 34916   00C896                     _getNumTxBuffersInUse:
 34917                           	callstack 11
 34918                           
 34919                           ;../../VLCBlib_PIC/can18_ecan.c: 462:     return quantity(&txQueue);
 34920                           
 34921                           ; BSR set to: 0
 34922                           ;incstack = 0
 34923   00C896  0EA9               	movlw	low _txQueue
 34924   00C898  0100               	movlb	0	; () banked
 34925   00C89A  6F8D               	movwf	quantity@q& (0+255),b
 34926   00C89C  0E01               	movlw	high _txQueue
 34927   00C89E  6F8E               	movwf	(quantity@q+1)& (0+255),b
 34928   00C8A0  EC94  F05F         	call	_quantity	;wreg free
 34929   00C8A4  0012               	return		;funcret
 34930   00C8A6                     __end_of_getNumTxBuffersInUse:
 34931                           	callstack 0
 34932                           
 34933 ;; *************** function _quantity *****************
 34934 ;; Defined at:
 34935 ;;		line 130 in file "../../VLCBlib_PIC/messageQueue.c"
 34936 ;; Parameters:    Size  Location     Type
 34937 ;;  q               2   45[BANK0 ] PTR struct MessageQueue
 34938 ;;		 -> txQueue(5), rxQueue(5), 
 34939 ;; Auto vars:     Size  Location     Type
 34940 ;;		None
 34941 ;; Return value:  Size  Location     Type
 34942 ;;                  1    wreg      unsigned char 
 34943 ;; Registers used:
 34944 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34945 ;; Tracked objects:
 34946 ;;		On entry : 0/0
 34947 ;;		On exit  : 0/0
 34948 ;;		Unchanged: 0/0
 34949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34950 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34952 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34953 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34954 ;;Total ram usage:        6 bytes
 34955 ;; Hardware stack levels used: 1
 34956 ;; Hardware stack levels required when called: 12
 34957 ;; This function calls:
 34958 ;;		Nothing
 34959 ;; This function is called by:
 34960 ;;		_getNumTxBuffersInUse
 34961 ;;		_getNumRxBuffersInUse
 34962 ;;		_canSendMessage
 34963 ;; This function uses a non-reentrant model
 34964 ;;
 34965                           
 34966                           	psect	text137
 34967   00BF28                     __ptext137:
 34968                           	callstack 0
 34969   00BF28                     _quantity:
 34970                           	callstack 12
 34971                           
 34972                           ;../../VLCBlib_PIC/messageQueue.c: 131:     return (q->writeIndex - q->readIndex) & (q->
      +                          size -1);
 34973                           
 34974                           ;incstack = 0
 34975   00BF28  0100               	movlb	0	; () banked
 34976   00BF2A  EE20 F002          	lfsr	2,2
 34977   00BF2E  518D               	movf	quantity@q& (0+255),w,b
 34978   00BF30  26D9               	addwf	fsr2l,f,c
 34979   00BF32  518E               	movf	(quantity@q+1)& (0+255),w,b
 34980   00BF34  22DA               	addwfc	fsr2h,f,c
 34981   00BF36  50DF               	movf	indf2,w,c
 34982   00BF38  6F8F               	movwf	??_quantity& (0+255),b
 34983   00BF3A  EE20 F003          	lfsr	2,3
 34984   00BF3E  518D               	movf	quantity@q& (0+255),w,b
 34985   00BF40  26D9               	addwf	fsr2l,f,c
 34986   00BF42  518E               	movf	(quantity@q+1)& (0+255),w,b
 34987   00BF44  22DA               	addwfc	fsr2h,f,c
 34988   00BF46  50DF               	movf	indf2,w,c
 34989   00BF48  6F90               	movwf	(??_quantity+1)& (0+255),b
 34990   00BF4A  518F               	movf	??_quantity& (0+255),w,b
 34991   00BF4C  5D90               	subwf	(??_quantity+1)& (0+255),w,b
 34992   00BF4E  6F91               	movwf	(??_quantity+2)& (0+255),b
 34993   00BF50  EE20 F004          	lfsr	2,4
 34994   00BF54  518D               	movf	quantity@q& (0+255),w,b
 34995   00BF56  26D9               	addwf	fsr2l,f,c
 34996   00BF58  518E               	movf	(quantity@q+1)& (0+255),w,b
 34997   00BF5A  22DA               	addwfc	fsr2h,f,c
 34998   00BF5C  50DF               	movf	indf2,w,c
 34999   00BF5E  6F92               	movwf	(??_quantity+3)& (0+255),b
 35000   00BF60  0592               	decf	(??_quantity+3)& (0+255),w,b
 35001   00BF62  1591               	andwf	(??_quantity+2)& (0+255),w,b
 35002                           
 35003                           ; BSR set to: 0
 35004   00BF64  0012               	return		;funcret
 35005   00BF66                     __end_of_quantity:
 35006                           	callstack 0
 35007                           
 35008 ;; *************** function _getNextWriteMessage *****************
 35009 ;; Defined at:
 35010 ;;		line 80 in file "../../VLCBlib_PIC/messageQueue.c"
 35011 ;; Parameters:    Size  Location     Type
 35012 ;;  q               1   45[BANK0 ] PTR struct MessageQueue
 35013 ;;		 -> rxQueue(5), 
 35014 ;; Auto vars:     Size  Location     Type
 35015 ;;  wr              1   56[BANK0 ] unsigned char 
 35016 ;; Return value:  Size  Location     Type
 35017 ;;                  2   45[BANK0 ] PTR struct Message
 35018 ;; Registers used:
 35019 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35020 ;; Tracked objects:
 35021 ;;		On entry : 0/0
 35022 ;;		On exit  : 0/0
 35023 ;;		Unchanged: 0/0
 35024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35025 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35026 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35027 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35028 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35029 ;;Total ram usage:       12 bytes
 35030 ;; Hardware stack levels used: 1
 35031 ;; Hardware stack levels required when called: 12
 35032 ;; This function calls:
 35033 ;;		Nothing
 35034 ;; This function is called by:
 35035 ;;		_canSendMessage
 35036 ;; This function uses a non-reentrant model
 35037 ;;
 35038                           
 35039                           	psect	text138
 35040   008DBA                     __ptext138:
 35041                           	callstack 0
 35042   008DBA                     _getNextWriteMessage:
 35043                           	callstack 12
 35044                           
 35045                           ; BSR set to: 0
 35046                           ;incstack = 0
 35047   008DBA  0100               	movlb	0	; () banked
 35048   008DBC  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 35049   008DBE  6ED9               	movwf	fsr2l,c
 35050   008DC0  6ADA               	clrf	fsr2h,c
 35051   008DC2  0E02               	movlw	2
 35052   008DC4  26D9               	addwf	fsr2l,f,c
 35053   008DC6  50DF               	movf	indf2,w,c
 35054   008DC8  6F8F               	movwf	??_getNextWriteMessage& (0+255),b
 35055   008DCA  6B90               	clrf	(??_getNextWriteMessage+1)& (0+255),b
 35056   008DCC  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 35057   008DCE  6ED9               	movwf	fsr2l,c
 35058   008DD0  6ADA               	clrf	fsr2h,c
 35059   008DD2  0E04               	movlw	4
 35060   008DD4  26D9               	addwf	fsr2l,f,c
 35061   008DD6  50DF               	movf	indf2,w,c
 35062   008DD8  6F91               	movwf	(??_getNextWriteMessage+2)& (0+255),b
 35063   008DDA  0EFF               	movlw	255
 35064   008DDC  2591               	addwf	(??_getNextWriteMessage+2)& (0+255),w,b
 35065   008DDE  6F92               	movwf	(??_getNextWriteMessage+3)& (0+255),b
 35066   008DE0  6B93               	clrf	(??_getNextWriteMessage+4)& (0+255),b
 35067   008DE2  0EFF               	movlw	255
 35068   008DE4  2393               	addwfc	(??_getNextWriteMessage+4)& (0+255),f,b
 35069   008DE6  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 35070   008DE8  6ED9               	movwf	fsr2l,c
 35071   008DEA  6ADA               	clrf	fsr2h,c
 35072   008DEC  0E03               	movlw	3
 35073   008DEE  26D9               	addwf	fsr2l,f,c
 35074   008DF0  50DF               	movf	indf2,w,c
 35075   008DF2  6F94               	movwf	(??_getNextWriteMessage+5)& (0+255),b
 35076   008DF4  6B95               	clrf	(??_getNextWriteMessage+6)& (0+255),b
 35077   008DF6  0E01               	movlw	1
 35078   008DF8  2794               	addwf	(??_getNextWriteMessage+5)& (0+255),f,b
 35079   008DFA  0E00               	movlw	0
 35080   008DFC  2395               	addwfc	(??_getNextWriteMessage+6)& (0+255),f,b
 35081   008DFE  5192               	movf	(??_getNextWriteMessage+3)& (0+255),w,b
 35082   008E00  1594               	andwf	(??_getNextWriteMessage+5)& (0+255),w,b
 35083   008E02  6F96               	movwf	(??_getNextWriteMessage+7)& (0+255),b
 35084   008E04  5193               	movf	(??_getNextWriteMessage+4)& (0+255),w,b
 35085   008E06  1595               	andwf	(??_getNextWriteMessage+6)& (0+255),w,b
 35086   008E08  6F97               	movwf	(??_getNextWriteMessage+8)& (0+255),b
 35087   008E0A  518F               	movf	??_getNextWriteMessage& (0+255),w,b
 35088   008E0C  1996               	xorwf	(??_getNextWriteMessage+7)& (0+255),w,b
 35089   008E0E  E109               	bnz	l19473
 35090   008E10  5190               	movf	(??_getNextWriteMessage+1)& (0+255),w,b
 35091   008E12  1997               	xorwf	(??_getNextWriteMessage+8)& (0+255),w,b
 35092   008E14  A4D8               	btfss	status,2,c
 35093   008E16  D005               	goto	l19473
 35094                           
 35095                           ; BSR set to: 0
 35096   008E18  0E00               	movlw	0
 35097   008E1A  6F8D               	movwf	?_getNextWriteMessage& (0+255),b
 35098   008E1C  0E00               	movlw	0
 35099   008E1E  6F8E               	movwf	(?_getNextWriteMessage+1)& (0+255),b
 35100   008E20  0012               	return	
 35101   008E22                     l19473:
 35102                           
 35103                           ; BSR set to: 0
 35104   008E22  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 35105   008E24  6ED9               	movwf	fsr2l,c
 35106   008E26  6ADA               	clrf	fsr2h,c
 35107   008E28  0E03               	movlw	3
 35108   008E2A  26D9               	addwf	fsr2l,f,c
 35109   008E2C  50DF               	movf	indf2,w,c
 35110   008E2E  6F98               	movwf	getNextWriteMessage@wr& (0+255),b
 35111   008E30  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 35112   008E32  6ED9               	movwf	fsr2l,c
 35113   008E34  6ADA               	clrf	fsr2h,c
 35114   008E36  0E03               	movlw	3
 35115   008E38  26D9               	addwf	fsr2l,f,c
 35116   008E3A  2ADF               	incf	indf2,f,c
 35117                           
 35118                           ; BSR set to: 0
 35119   008E3C  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 35120   008E3E  6ED9               	movwf	fsr2l,c
 35121   008E40  6ADA               	clrf	fsr2h,c
 35122   008E42  0E04               	movlw	4
 35123   008E44  26D9               	addwf	fsr2l,f,c
 35124   008E46  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 35125   008E48  6EE1               	movwf	fsr1l,c
 35126   008E4A  6AE2               	clrf	fsr1h,c
 35127   008E4C  0E03               	movlw	3
 35128   008E4E  26E1               	addwf	fsr1l,f,c
 35129   008E50  50DE               	movf	postinc2,w,c
 35130   008E52  5CE6               	subwf	postinc1,w,c
 35131   008E54  A0D8               	btfss	status,0,c
 35132   008E56  D006               	goto	l19479
 35133                           
 35134                           ; BSR set to: 0
 35135   008E58  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 35136   008E5A  6ED9               	movwf	fsr2l,c
 35137   008E5C  6ADA               	clrf	fsr2h,c
 35138   008E5E  0E03               	movlw	3
 35139   008E60  26D9               	addwf	fsr2l,f,c
 35140   008E62  6ADF               	clrf	indf2,c
 35141   008E64                     l19479:
 35142                           
 35143                           ; BSR set to: 0
 35144   008E64  5198               	movf	getNextWriteMessage@wr& (0+255),w,b
 35145   008E66  0D09               	mullw	9
 35146   008E68  CFF3 F08F          	movff	prodl,??_getNextWriteMessage
 35147   008E6C  CFF4 F090          	movff	prodh,??_getNextWriteMessage+1
 35148   008E70  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 35149   008E72  6ED9               	movwf	fsr2l,c
 35150   008E74  6ADA               	clrf	fsr2h,c
 35151   008E76  CFDE F091          	movff	postinc2,??_getNextWriteMessage+2
 35152   008E7A  CFDD F092          	movff	postdec2,??_getNextWriteMessage+3
 35153   008E7E  518F               	movf	??_getNextWriteMessage& (0+255),w,b
 35154   008E80  2591               	addwf	(??_getNextWriteMessage+2)& (0+255),w,b
 35155   008E82  6F8D               	movwf	?_getNextWriteMessage& (0+255),b
 35156   008E84  5190               	movf	(??_getNextWriteMessage+1)& (0+255),w,b
 35157   008E86  2192               	addwfc	(??_getNextWriteMessage+3)& (0+255),w,b
 35158   008E88  6F8E               	movwf	(?_getNextWriteMessage+1)& (0+255),b
 35159                           
 35160                           ; BSR set to: 0
 35161   008E8A  0012               	return		;funcret
 35162   008E8C                     __end_of_getNextWriteMessage:
 35163                           	callstack 0
 35164                           
 35165 ;; *************** function _readInput *****************
 35166 ;; Defined at:
 35167 ;;		line 174 in file "../inputs.c"
 35168 ;; Parameters:    Size  Location     Type
 35169 ;;  io              1    wreg     unsigned char 
 35170 ;; Auto vars:     Size  Location     Type
 35171 ;;  io              1   51[BANK0 ] unsigned char 
 35172 ;; Return value:  Size  Location     Type
 35173 ;;                  1    wreg      enum E12717
 35174 ;; Registers used:
 35175 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35176 ;; Tracked objects:
 35177 ;;		On entry : 0/0
 35178 ;;		On exit  : 0/0
 35179 ;;		Unchanged: 0/0
 35180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35182 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35183 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35184 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35185 ;;Total ram usage:        3 bytes
 35186 ;; Hardware stack levels used: 1
 35187 ;; Hardware stack levels required when called: 13
 35188 ;; This function calls:
 35189 ;;		_getNV
 35190 ;; This function is called by:
 35191 ;;		_initInputScan
 35192 ;;		_inputScan
 35193 ;; This function uses a non-reentrant model
 35194 ;;
 35195                           
 35196                           	psect	text139
 35197   00819A                     __ptext139:
 35198                           	callstack 0
 35199   00819A                     _readInput:
 35200                           	callstack 15
 35201                           
 35202                           ; BSR set to: 0
 35203                           ;incstack = 0
 35204                           ;readInput@io stored from wreg
 35205   00819A  0100               	movlb	0	; () banked
 35206   00819C  6F93               	movwf	readInput@io& (0+255),b
 35207                           
 35208                           ;../inputs.c: 175:     if (getNV((16 + 7*(io) + 0)) == 0) {
 35209   00819E  0100               	movlb	0	; () banked
 35210   0081A0  5193               	movf	readInput@io& (0+255),w,b
 35211   0081A2  0D07               	mullw	7
 35212   0081A4  50F3               	movf	243,w,c
 35213   0081A6  0F10               	addlw	16
 35214   0081A8  ECD2  F05F         	call	_getNV
 35215   0081AC  0100               	movlb	0	; () banked
 35216   0081AE  518D               	movf	?_getNV& (0+255),w,b
 35217   0081B0  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 35218   0081B2  B4D8               	btfsc	status,2,c
 35219   0081B4  D05B               	goto	l21687
 35220   0081B6  D074               	goto	l21689
 35221   0081B8                     l21673:
 35222                           
 35223                           ; BSR set to: 0
 35224                           ;../inputs.c: 178:                 return PORTA & (1<<configs[io].no);
 35225   0081B8  5193               	movf	readInput@io& (0+255),w,b
 35226   0081BA  0D04               	mullw	4
 35227   0081BC  0E02               	movlw	2
 35228   0081BE  26F3               	addwf	243,f,c
 35229   0081C0  0E00               	movlw	0
 35230   0081C2  22F4               	addwfc	244,f,c
 35231   0081C4  0E29               	movlw	low _configs
 35232   0081C6  24F3               	addwf	243,w,c
 35233   0081C8  6EF6               	movwf	tblptrl,c
 35234   0081CA  0EEE               	movlw	high _configs
 35235   0081CC  20F4               	addwfc	244,w,c
 35236   0081CE  6EF7               	movwf	tblptrh,c
 35237   0081D0                     	if	1	;There are 3 active tblptr bytes
 35238   0081D0  6AF8               	clrf	tblptru,c
 35239   0081D2  0E00               	movlw	low (__mediumconst shr (0+16))
 35240   0081D4  22F8               	addwfc	tblptru,f,c
 35241   0081D6                     	endif
 35242   0081D6  0008               	tblrd		*
 35243   0081D8  CFF5 F091          	movff	tablat,??_readInput
 35244   0081DC  0E01               	movlw	1
 35245   0081DE  6F92               	movwf	(??_readInput+1)& (0+255),b
 35246   0081E0  2B91               	incf	??_readInput& (0+255),f,b
 35247   0081E2  D002               	goto	u22594
 35248   0081E4                     u22595:
 35249   0081E4  90D8               	bcf	status,0,c
 35250   0081E6  3792               	rlcf	(??_readInput+1)& (0+255),f,b
 35251   0081E8                     u22594:
 35252   0081E8  2F91               	decfsz	??_readInput& (0+255),f,b
 35253   0081EA  D7FC               	goto	u22595
 35254   0081EC  0100               	movlb	0	; () banked
 35255   0081EE  5192               	movf	(??_readInput+1)& (0+255),w,b
 35256   0081F0  1480               	andwf	128,w,c	;volatile
 35257   0081F2  0012               	return	
 35258   0081F4                     l21677:
 35259                           
 35260                           ; BSR set to: 0
 35261                           ;../inputs.c: 180:                 return PORTB & (1<<configs[io].no);
 35262   0081F4  5193               	movf	readInput@io& (0+255),w,b
 35263   0081F6  0D04               	mullw	4
 35264   0081F8  0E02               	movlw	2
 35265   0081FA  26F3               	addwf	243,f,c
 35266   0081FC  0E00               	movlw	0
 35267   0081FE  22F4               	addwfc	244,f,c
 35268   008200  0E29               	movlw	low _configs
 35269   008202  24F3               	addwf	243,w,c
 35270   008204  6EF6               	movwf	tblptrl,c
 35271   008206  0EEE               	movlw	high _configs
 35272   008208  20F4               	addwfc	244,w,c
 35273   00820A  6EF7               	movwf	tblptrh,c
 35274   00820C                     	if	1	;There are 3 active tblptr bytes
 35275   00820C  6AF8               	clrf	tblptru,c
 35276   00820E  0E00               	movlw	low (__mediumconst shr (0+16))
 35277   008210  22F8               	addwfc	tblptru,f,c
 35278   008212                     	endif
 35279   008212  0008               	tblrd		*
 35280   008214  CFF5 F091          	movff	tablat,??_readInput
 35281   008218  0E01               	movlw	1
 35282   00821A  6F92               	movwf	(??_readInput+1)& (0+255),b
 35283   00821C  2B91               	incf	??_readInput& (0+255),f,b
 35284   00821E  D002               	goto	u22604
 35285   008220                     u22605:
 35286   008220  90D8               	bcf	status,0,c
 35287   008222  3792               	rlcf	(??_readInput+1)& (0+255),f,b
 35288   008224                     u22604:
 35289   008224  2F91               	decfsz	??_readInput& (0+255),f,b
 35290   008226  D7FC               	goto	u22605
 35291   008228  0100               	movlb	0	; () banked
 35292   00822A  5192               	movf	(??_readInput+1)& (0+255),w,b
 35293   00822C  1481               	andwf	129,w,c	;volatile
 35294   00822E  0012               	return	
 35295   008230                     l21681:
 35296                           
 35297                           ; BSR set to: 0
 35298                           ;../inputs.c: 182:                 return PORTC & (1<<configs[io].no);
 35299   008230  5193               	movf	readInput@io& (0+255),w,b
 35300   008232  0D04               	mullw	4
 35301   008234  0E02               	movlw	2
 35302   008236  26F3               	addwf	243,f,c
 35303   008238  0E00               	movlw	0
 35304   00823A  22F4               	addwfc	244,f,c
 35305   00823C  0E29               	movlw	low _configs
 35306   00823E  24F3               	addwf	243,w,c
 35307   008240  6EF6               	movwf	tblptrl,c
 35308   008242  0EEE               	movlw	high _configs
 35309   008244  20F4               	addwfc	244,w,c
 35310   008246  6EF7               	movwf	tblptrh,c
 35311   008248                     	if	1	;There are 3 active tblptr bytes
 35312   008248  6AF8               	clrf	tblptru,c
 35313   00824A  0E00               	movlw	low (__mediumconst shr (0+16))
 35314   00824C  22F8               	addwfc	tblptru,f,c
 35315   00824E                     	endif
 35316   00824E  0008               	tblrd		*
 35317   008250  CFF5 F091          	movff	tablat,??_readInput
 35318   008254  0E01               	movlw	1
 35319   008256  6F92               	movwf	(??_readInput+1)& (0+255),b
 35320   008258  2B91               	incf	??_readInput& (0+255),f,b
 35321   00825A  D002               	goto	u22614
 35322   00825C                     u22615:
 35323   00825C  90D8               	bcf	status,0,c
 35324   00825E  3792               	rlcf	(??_readInput+1)& (0+255),f,b
 35325   008260                     u22614:
 35326   008260  2F91               	decfsz	??_readInput& (0+255),f,b
 35327   008262  D7FC               	goto	u22615
 35328   008264  0100               	movlb	0	; () banked
 35329   008266  5192               	movf	(??_readInput+1)& (0+255),w,b
 35330   008268  1482               	andwf	130,w,c	;volatile
 35331   00826A  0012               	return	
 35332   00826C                     l21687:
 35333                           
 35334                           ; BSR set to: 0
 35335   00826C  5193               	movf	readInput@io& (0+255),w,b
 35336   00826E  0D04               	mullw	4
 35337   008270  0E01               	movlw	1
 35338   008272  26F3               	addwf	243,f,c
 35339   008274  0E00               	movlw	0
 35340   008276  22F4               	addwfc	244,f,c
 35341   008278  0E29               	movlw	low _configs
 35342   00827A  24F3               	addwf	243,w,c
 35343   00827C  6EF6               	movwf	tblptrl,c
 35344   00827E  0EEE               	movlw	high _configs
 35345   008280  20F4               	addwfc	244,w,c
 35346   008282  6EF7               	movwf	tblptrh,c
 35347   008284                     	if	1	;There are 3 active tblptr bytes
 35348   008284  6AF8               	clrf	tblptru,c
 35349   008286  0E00               	movlw	low (__mediumconst shr (0+16))
 35350   008288  22F8               	addwfc	tblptru,f,c
 35351   00828A                     	endif
 35352   00828A  0008               	tblrd		*
 35353   00828C  50F5               	movf	tablat,w,c
 35354                           
 35355                           ; Switch size 1, requested type "simple"
 35356                           ; Number of cases is 3, Range of values is 65 to 67
 35357                           ; switch strategies available:
 35358                           ; Name         Instructions Cycles
 35359                           ; simple_byte           10     6 (average)
 35360                           ;	Chosen strategy is simple_byte
 35361   00828E  0A41               	xorlw	65	; case 65
 35362   008290  B4D8               	btfsc	status,2,c
 35363   008292  D792               	goto	l21673
 35364   008294  0A03               	xorlw	3	; case 66
 35365   008296  B4D8               	btfsc	status,2,c
 35366   008298  D7AD               	goto	l21677
 35367   00829A  0A01               	xorlw	1	; case 67
 35368   00829C  B4D8               	btfsc	status,2,c
 35369   00829E  D7C8               	goto	l21681
 35370   0082A0                     l21689:
 35371                           
 35372                           ; BSR set to: 0
 35373                           ;../inputs.c: 191:     return FALSE;
 35374   0082A0  0E00               	movlw	0
 35375                           
 35376                           ; BSR set to: 0
 35377   0082A2  0012               	return		;funcret
 35378   0082A4                     __end_of_readInput:
 35379                           	callstack 0
 35380                           
 35381 ;; *************** function _initRomOps *****************
 35382 ;; Defined at:
 35383 ;;		line 156 in file "../../VLCBlib_PIC/nvm.c"
 35384 ;; Parameters:    Size  Location     Type
 35385 ;;		None
 35386 ;; Auto vars:     Size  Location     Type
 35387 ;;		None
 35388 ;; Return value:  Size  Location     Type
 35389 ;;                  1    wreg      void 
 35390 ;; Registers used:
 35391 ;;		wreg, status,2
 35392 ;; Tracked objects:
 35393 ;;		On entry : 0/0
 35394 ;;		On exit  : 0/0
 35395 ;;		Unchanged: 0/0
 35396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35401 ;;Total ram usage:        0 bytes
 35402 ;; Hardware stack levels used: 1
 35403 ;; Hardware stack levels required when called: 12
 35404 ;; This function calls:
 35405 ;;		Nothing
 35406 ;; This function is called by:
 35407 ;;		_main
 35408 ;; This function uses a non-reentrant model
 35409 ;;
 35410                           
 35411                           	psect	text140
 35412   00C84A                     __ptext140:
 35413                           	callstack 0
 35414   00C84A                     _initRomOps:
 35415                           	callstack 18
 35416                           
 35417                           ;../../VLCBlib_PIC/nvm.c: 157:     flashFlags.asByte = 0;
 35418                           
 35419                           ; BSR set to: 0
 35420                           ;incstack = 0
 35421   00C84A  0E00               	movlw	0
 35422   00C84C  0100               	movlb	0	; () banked
 35423   00C84E  6FBA               	movwf	_flashFlags& (0+255),b
 35424                           
 35425                           ;../../VLCBlib_PIC/nvm.c: 158:     flashBlock = 0x0800;
 35426   00C850  0E08               	movlw	8
 35427   00C852  6FD2               	movwf	(_flashBlock+1)& (0+255),b
 35428   00C854  0E00               	movlw	0
 35429   00C856  6FD1               	movwf	_flashBlock& (0+255),b
 35430                           
 35431                           ;../../VLCBlib_PIC/nvm.c: 160:     TBLPTRU = 0;
 35432   00C858  0E00               	movlw	0
 35433   00C85A  6EF8               	movwf	248,c	;volatile
 35434                           
 35435                           ; BSR set to: 0
 35436   00C85C  0012               	return		;funcret
 35437   00C85E                     __end_of_initRomOps:
 35438                           	callstack 0
 35439                           
 35440 ;; *************** function _checkPowerOnPb *****************
 35441 ;; Defined at:
 35442 ;;		line 954 in file "../../VLCBlib_PIC/vlcb.c"
 35443 ;; Parameters:    Size  Location     Type
 35444 ;;		None
 35445 ;; Auto vars:     Size  Location     Type
 35446 ;;  i               1   57[BANK1 ] unsigned char 
 35447 ;; Return value:  Size  Location     Type
 35448 ;;                  1    wreg      void 
 35449 ;; Registers used:
 35450 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35451 ;; Tracked objects:
 35452 ;;		On entry : 0/0
 35453 ;;		On exit  : 0/0
 35454 ;;		Unchanged: 0/0
 35455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35457 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35459 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35460 ;;Total ram usage:        1 bytes
 35461 ;; Hardware stack levels used: 1
 35462 ;; Hardware stack levels required when called: 27
 35463 ;; This function calls:
 35464 ;;		_APP_testMode
 35465 ;;		_factoryReset
 35466 ;;		_pbDownTimer
 35467 ;;		_pbUpTimer
 35468 ;;		_showStatus
 35469 ;; This function is called by:
 35470 ;;		_main
 35471 ;; This function uses a non-reentrant model
 35472 ;;
 35473                           
 35474                           	psect	text141
 35475   00B720                     __ptext141:
 35476                           	callstack 0
 35477   00B720                     _checkPowerOnPb:
 35478                           	callstack 3
 35479                           
 35480                           ;../../VLCBlib_PIC/vlcb.c: 955:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 958:     if ((!
      +                          (PORTAbits.RA2))) {
 35481                           
 35482                           ; BSR set to: 0
 35483                           ;incstack = 0
 35484   00B720  B480               	btfsc	128,2,c	;volatile
 35485   00B722  0012               	return	
 35486                           
 35487                           ;../../VLCBlib_PIC/vlcb.c: 960:         i = pbDownTimer(30);
 35488   00B724  0E1E               	movlw	30
 35489   00B726  EC70  F04D         	call	_pbDownTimer
 35490   00B72A  0101               	movlb	1	; () banked
 35491   00B72C  6FF7               	movwf	checkPowerOnPb@i& (0+255),b
 35492                           
 35493                           ; BSR set to: 1
 35494                           ;../../VLCBlib_PIC/vlcb.c: 961:         if (i == 0) {
 35495   00B72E  51F7               	movf	checkPowerOnPb@i& (0+255),w,b
 35496   00B730  B4D8               	btfsc	status,2,c
 35497   00B732  0012               	return	
 35498                           
 35499                           ; BSR set to: 1
 35500                           
 35501                           ; BSR set to: 1
 35502                           ;../../VLCBlib_PIC/vlcb.c: 963:             return;
 35503   00B734  0E01               	movlw	1
 35504   00B736  65F7               	cpfsgt	checkPowerOnPb@i& (0+255),b
 35505   00B738  D006               	goto	l25285
 35506                           
 35507                           ; BSR set to: 1
 35508   00B73A  0E06               	movlw	6
 35509   00B73C  61F7               	cpfslt	checkPowerOnPb@i& (0+255),b
 35510   00B73E  D003               	goto	l25285
 35511                           
 35512                           ; BSR set to: 1
 35513                           ;../../VLCBlib_PIC/vlcb.c: 965:             APP_testMode();
 35514   00B740  EC98  F064         	call	_APP_testMode	;wreg free
 35515                           
 35516                           ;../../VLCBlib_PIC/vlcb.c: 966:         } else if (i >= 10) {
 35517   00B744  0012               	return	
 35518   00B746                     l25285:
 35519                           
 35520                           ; BSR set to: 1
 35521   00B746  0E09               	movlw	9
 35522   00B748  65F7               	cpfsgt	checkPowerOnPb@i& (0+255),b
 35523   00B74A  0012               	return	
 35524                           
 35525                           ; BSR set to: 1
 35526                           ;../../VLCBlib_PIC/vlcb.c: 967:             showStatus(STATUS_RESET_WARNING);
 35527   00B74C  0E04               	movlw	4
 35528   00B74E  ECB3  F044         	call	_showStatus
 35529                           
 35530                           ;../../VLCBlib_PIC/vlcb.c: 969:             i = pbUpTimer(5);
 35531   00B752  0E05               	movlw	5
 35532   00B754  EC18  F04D         	call	_pbUpTimer
 35533   00B758  0101               	movlb	1	; () banked
 35534   00B75A  6FF7               	movwf	checkPowerOnPb@i& (0+255),b
 35535                           
 35536                           ; BSR set to: 1
 35537                           ;../../VLCBlib_PIC/vlcb.c: 970:             if (i == 0) {
 35538   00B75C  51F7               	movf	checkPowerOnPb@i& (0+255),w,b
 35539   00B75E  B4D8               	btfsc	status,2,c
 35540   00B760  0012               	return	
 35541                           
 35542                           ; BSR set to: 1
 35543                           ;../../VLCBlib_PIC/vlcb.c: 974:             i = pbDownTimer(5);
 35544   00B762  0E05               	movlw	5
 35545   00B764  EC70  F04D         	call	_pbDownTimer
 35546   00B768  0101               	movlb	1	; () banked
 35547   00B76A  6FF7               	movwf	checkPowerOnPb@i& (0+255),b
 35548                           
 35549                           ; BSR set to: 1
 35550                           ;../../VLCBlib_PIC/vlcb.c: 975:             if ((i>=2) && (i < 4)) {
 35551   00B76C  0E01               	movlw	1
 35552   00B76E  65F7               	cpfsgt	checkPowerOnPb@i& (0+255),b
 35553   00B770  0012               	return	
 35554                           
 35555                           ; BSR set to: 1
 35556   00B772  0E04               	movlw	4
 35557   00B774  61F7               	cpfslt	checkPowerOnPb@i& (0+255),b
 35558   00B776  0012               	return	
 35559                           
 35560                           ; BSR set to: 1
 35561                           ;../../VLCBlib_PIC/vlcb.c: 976:                 factoryReset();
 35562   00B778  ECCE  F043         	call	_factoryReset	;wreg free
 35563   00B77C  0012               	return		;funcret
 35564   00B77E                     __end_of_checkPowerOnPb:
 35565                           	callstack 0
 35566                           
 35567 ;; *************** function _showStatus *****************
 35568 ;; Defined at:
 35569 ;;		line 235 in file "../../VLCBlib_PIC/statusLeds2.c"
 35570 ;; Parameters:    Size  Location     Type
 35571 ;;  s               1    wreg     enum E12897
 35572 ;; Auto vars:     Size  Location     Type
 35573 ;;  s               1   47[BANK0 ] enum E12897
 35574 ;; Return value:  Size  Location     Type
 35575 ;;                  1    wreg      void 
 35576 ;; Registers used:
 35577 ;;		wreg, status,2, status,0
 35578 ;; Tracked objects:
 35579 ;;		On entry : 0/0
 35580 ;;		On exit  : 0/0
 35581 ;;		Unchanged: 0/0
 35582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35584 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35585 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35586 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35587 ;;Total ram usage:        3 bytes
 35588 ;; Hardware stack levels used: 1
 35589 ;; Hardware stack levels required when called: 12
 35590 ;; This function calls:
 35591 ;;		Nothing
 35592 ;; This function is called by:
 35593 ;;		_setLEDsByMode
 35594 ;;		_checkPowerOnPb
 35595 ;;		_poll
 35596 ;; This function uses a non-reentrant model
 35597 ;;
 35598                           
 35599                           	psect	text142
 35600   008966                     __ptext142:
 35601                           	callstack 0
 35602   008966                     _showStatus:
 35603                           	callstack 15
 35604                           
 35605                           ;incstack = 0
 35606                           ;showStatus@s stored from wreg
 35607   008966  0100               	movlb	0	; () banked
 35608   008968  6F8F               	movwf	showStatus@s& (0+255),b
 35609                           
 35610                           ;../../VLCBlib_PIC/statusLeds2.c: 236:     switch (s) {
 35611   00896A  D03E               	goto	l21329
 35612   00896C                     l21299:
 35613                           
 35614                           ; BSR set to: 0
 35615                           ;../../VLCBlib_PIC/statusLeds2.c: 238:             ledState[0] = LED_OFF;
 35616   00896C  0E00               	movlw	0
 35617   00896E  6FB0               	movwf	_ledState& (0+255),b
 35618                           
 35619                           ;../../VLCBlib_PIC/statusLeds2.c: 239:             ledState[1] = LED_OFF;
 35620   008970  0E00               	movlw	0
 35621   008972  6FB1               	movwf	(_ledState+1)& (0+255),b
 35622                           
 35623                           ;../../VLCBlib_PIC/statusLeds2.c: 240:             break;
 35624   008974  0012               	return	
 35625   008976                     l21301:
 35626                           
 35627                           ; BSR set to: 0
 35628                           ;../../VLCBlib_PIC/statusLeds2.c: 242:             ledState[0] = LED_ON;
 35629   008976  0E01               	movlw	1
 35630   008978  6FB0               	movwf	_ledState& (0+255),b
 35631                           
 35632                           ;../../VLCBlib_PIC/statusLeds2.c: 243:             ledState[1] = LED_OFF;
 35633   00897A  0E00               	movlw	0
 35634   00897C  6FB1               	movwf	(_ledState+1)& (0+255),b
 35635                           
 35636                           ;../../VLCBlib_PIC/statusLeds2.c: 244:             break;
 35637   00897E  0012               	return	
 35638   008980                     l21303:
 35639                           
 35640                           ; BSR set to: 0
 35641                           ;../../VLCBlib_PIC/statusLeds2.c: 246:             ledState[0] = LED_OFF;
 35642   008980  0E00               	movlw	0
 35643   008982  6FB0               	movwf	_ledState& (0+255),b
 35644                           
 35645                           ;../../VLCBlib_PIC/statusLeds2.c: 247:             ledState[1] = LED_FLASH_50_1HZ;
 35646   008984  0E03               	movlw	3
 35647   008986  6FB1               	movwf	(_ledState+1)& (0+255),b
 35648                           
 35649                           ;../../VLCBlib_PIC/statusLeds2.c: 248:             break;
 35650   008988  0012               	return	
 35651   00898A                     l1822:
 35652                           
 35653                           ; BSR set to: 0
 35654                           ;../../VLCBlib_PIC/statusLeds2.c: 254:             ledState[0] = LED_OFF;
 35655                           
 35656                           ; BSR set to: 0
 35657   00898A  0E00               	movlw	0
 35658   00898C  6FB0               	movwf	_ledState& (0+255),b
 35659                           
 35660                           ;../../VLCBlib_PIC/statusLeds2.c: 255:             ledState[1] = LED_ON;
 35661   00898E  0E01               	movlw	1
 35662   008990  6FB1               	movwf	(_ledState+1)& (0+255),b
 35663                           
 35664                           ;../../VLCBlib_PIC/statusLeds2.c: 256:             break;
 35665   008992  0012               	return	
 35666   008994                     l21307:
 35667                           
 35668                           ; BSR set to: 0
 35669                           ;../../VLCBlib_PIC/statusLeds2.c: 258:             flashCounter[1] = 0;
 35670   008994  0E00               	movlw	0
 35671   008996  6FAF               	movwf	(_flashCounter+1)& (0+255),b
 35672                           
 35673                           ;../../VLCBlib_PIC/statusLeds2.c: 259:             flashCounter[0] = 25;
 35674   008998  0E19               	movlw	25
 35675   00899A  6FAE               	movwf	_flashCounter& (0+255),b
 35676                           
 35677                           ;../../VLCBlib_PIC/statusLeds2.c: 260:             ledState[0] = LED_FLASH_50_2HZ;
 35678   00899C  0E02               	movlw	2
 35679   00899E  6FB0               	movwf	_ledState& (0+255),b
 35680                           
 35681                           ;../../VLCBlib_PIC/statusLeds2.c: 261:             ledState[1] = LED_FLASH_50_2HZ;
 35682   0089A0  0E02               	movlw	2
 35683   0089A2  6FB1               	movwf	(_ledState+1)& (0+255),b
 35684                           
 35685                           ;../../VLCBlib_PIC/statusLeds2.c: 262:             break;
 35686   0089A4  0012               	return	
 35687   0089A6                     l21309:
 35688                           
 35689                           ; BSR set to: 0
 35690                           ;../../VLCBlib_PIC/statusLeds2.c: 264:             if (mode_state == MODE_UNINITIALISED)
      +                           {
 35691   0089A6  29C4               	incf	_mode_state& (0+255),w,b
 35692   0089A8  A4D8               	btfss	status,2,c
 35693   0089AA  D003               	goto	l21313
 35694                           
 35695                           ; BSR set to: 0
 35696                           ;../../VLCBlib_PIC/statusLeds2.c: 265:                 ledState[1] = LED_SINGLE_FLICKER_
      +                          ON;
 35697   0089AC  0E06               	movlw	6
 35698   0089AE  6FB1               	movwf	(_ledState+1)& (0+255),b
 35699                           
 35700                           ;../../VLCBlib_PIC/statusLeds2.c: 266:             } else if (mode_state == MODE_NORMAL)
      +                           {
 35701   0089B0  0012               	return	
 35702   0089B2                     l21313:
 35703                           
 35704                           ; BSR set to: 0
 35705   0089B2  05C4               	decf	_mode_state& (0+255),w,b
 35706   0089B4  A4D8               	btfss	status,2,c
 35707   0089B6  0012               	return	
 35708                           
 35709                           ; BSR set to: 0
 35710                           ;../../VLCBlib_PIC/statusLeds2.c: 267:                 ledState[0] = LED_SINGLE_FLICKER_
      +                          ON;
 35711   0089B8  0E06               	movlw	6
 35712   0089BA  6FB0               	movwf	_ledState& (0+255),b
 35713   0089BC  0012               	return	
 35714   0089BE                     l21317:
 35715                           
 35716                           ; BSR set to: 0
 35717                           ;../../VLCBlib_PIC/statusLeds2.c: 271:             if (mode_state == MODE_UNINITIALISED)
      +                           {
 35718   0089BE  29C4               	incf	_mode_state& (0+255),w,b
 35719   0089C0  A4D8               	btfss	status,2,c
 35720   0089C2  D003               	goto	l21321
 35721                           
 35722                           ; BSR set to: 0
 35723                           ;../../VLCBlib_PIC/statusLeds2.c: 272:                 ledState[1] = LED_LONG_FLICKER_ON
      +                          ;
 35724   0089C4  0E08               	movlw	8
 35725   0089C6  6FB1               	movwf	(_ledState+1)& (0+255),b
 35726                           
 35727                           ;../../VLCBlib_PIC/statusLeds2.c: 273:             } else if (mode_state == MODE_NORMAL)
      +                           {
 35728   0089C8  0012               	return	
 35729   0089CA                     l21321:
 35730                           
 35731                           ; BSR set to: 0
 35732   0089CA  05C4               	decf	_mode_state& (0+255),w,b
 35733   0089CC  A4D8               	btfss	status,2,c
 35734   0089CE  0012               	return	
 35735                           
 35736                           ; BSR set to: 0
 35737                           ;../../VLCBlib_PIC/statusLeds2.c: 274:                 ledState[0] = LED_LONG_FLICKER_ON
      +                          ;
 35738   0089D0  0E08               	movlw	8
 35739   0089D2  6FB0               	movwf	_ledState& (0+255),b
 35740   0089D4  0012               	return	
 35741   0089D6                     l21325:
 35742                           
 35743                           ; BSR set to: 0
 35744                           ;../../VLCBlib_PIC/statusLeds2.c: 279:             flashCounter[1] = 0;
 35745   0089D6  0E00               	movlw	0
 35746   0089D8  6FAF               	movwf	(_flashCounter+1)& (0+255),b
 35747                           
 35748                           ;../../VLCBlib_PIC/statusLeds2.c: 280:             flashCounter[0] = 0;
 35749   0089DA  0E00               	movlw	0
 35750   0089DC  6FAE               	movwf	_flashCounter& (0+255),b
 35751                           
 35752                           ;../../VLCBlib_PIC/statusLeds2.c: 281:             ledState[0] = LED_FLASH_50_2HZ;
 35753   0089DE  0E02               	movlw	2
 35754   0089E0  6FB0               	movwf	_ledState& (0+255),b
 35755                           
 35756                           ;../../VLCBlib_PIC/statusLeds2.c: 282:             ledState[1] = LED_FLASH_50_2HZ;
 35757   0089E2  0E02               	movlw	2
 35758   0089E4  6FB1               	movwf	(_ledState+1)& (0+255),b
 35759                           
 35760                           ;../../VLCBlib_PIC/statusLeds2.c: 283:             break;
 35761   0089E6  0012               	return	
 35762   0089E8                     l21329:
 35763   0089E8  0100               	movlb	0	; () banked
 35764   0089EA  518F               	movf	showStatus@s& (0+255),w,b
 35765   0089EC  6F8D               	movwf	??_showStatus& (0+255),b
 35766   0089EE  6B8E               	clrf	(??_showStatus+1)& (0+255),b
 35767                           
 35768                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35769                           ; Switch size 1, requested type "simple"
 35770                           ; Number of cases is 1, Range of values is 0 to 0
 35771                           ; switch strategies available:
 35772                           ; Name         Instructions Cycles
 35773                           ; simple_byte            4     3 (average)
 35774                           ;	Chosen strategy is simple_byte
 35775   0089F0  518E               	movf	(??_showStatus+1)& (0+255),w,b
 35776   0089F2  0A00               	xorlw	0	; case 0
 35777   0089F4  A4D8               	btfss	status,2,c
 35778   0089F6  0012               	return	
 35779                           
 35780                           ; BSR set to: 0
 35781                           ; Switch size 1, requested type "simple"
 35782                           ; Number of cases is 13, Range of values is 0 to 12
 35783                           ; switch strategies available:
 35784                           ; Name         Instructions Cycles
 35785                           ; simple_byte           40    21 (average)
 35786                           ;	Chosen strategy is simple_byte
 35787   0089F8  518D               	movf	??_showStatus& (0+255),w,b
 35788   0089FA  0A00               	xorlw	0	; case 0
 35789   0089FC  B4D8               	btfsc	status,2,c
 35790   0089FE  D7B6               	goto	l21299
 35791   008A00  0A01               	xorlw	1	; case 1
 35792   008A02  B4D8               	btfsc	status,2,c
 35793   008A04  D7B8               	goto	l21301
 35794   008A06  0A03               	xorlw	3	; case 2
 35795   008A08  B4D8               	btfsc	status,2,c
 35796   008A0A  D7BA               	goto	l21303
 35797   008A0C  0A01               	xorlw	1	; case 3
 35798   008A0E  B4D8               	btfsc	status,2,c
 35799   008A10  D7BC               	goto	l1822
 35800   008A12  0A07               	xorlw	7	; case 4
 35801   008A14  B4D8               	btfsc	status,2,c
 35802   008A16  D7BE               	goto	l21307
 35803   008A18  0A01               	xorlw	1	; case 5
 35804   008A1A  B4D8               	btfsc	status,2,c
 35805   008A1C  D7B6               	goto	l1822
 35806   008A1E  0A03               	xorlw	3	; case 6
 35807   008A20  B4D8               	btfsc	status,2,c
 35808   008A22  D7B3               	goto	l1822
 35809   008A24  0A01               	xorlw	1	; case 7
 35810   008A26  B4D8               	btfsc	status,2,c
 35811   008A28  D7BE               	goto	l21309
 35812   008A2A  0A0F               	xorlw	15	; case 8
 35813   008A2C  B4D8               	btfsc	status,2,c
 35814   008A2E  D7C7               	goto	l21317
 35815   008A30  0A01               	xorlw	1	; case 9
 35816   008A32  B4D8               	btfsc	status,2,c
 35817   008A34  D7AA               	goto	l1822
 35818   008A36  0A03               	xorlw	3	; case 10
 35819   008A38  B4D8               	btfsc	status,2,c
 35820   008A3A  D7A7               	goto	l1822
 35821   008A3C  0A01               	xorlw	1	; case 11
 35822   008A3E  B4D8               	btfsc	status,2,c
 35823   008A40  D7CA               	goto	l21325
 35824   008A42  0A07               	xorlw	7	; case 12
 35825   008A44  A4D8               	btfss	status,2,c
 35826   008A46  0012               	return	
 35827   008A48  D7C6               	goto	l21325
 35828   008A4A                     __end_of_showStatus:
 35829                           	callstack 0
 35830                           
 35831 ;; *************** function _pbUpTimer *****************
 35832 ;; Defined at:
 35833 ;;		line 931 in file "../../VLCBlib_PIC/vlcb.c"
 35834 ;; Parameters:    Size  Location     Type
 35835 ;;  timeout         1    wreg     unsigned char 
 35836 ;; Auto vars:     Size  Location     Type
 35837 ;;  timeout         1   72[BANK0 ] unsigned char 
 35838 ;; Return value:  Size  Location     Type
 35839 ;;                  1    wreg      unsigned char 
 35840 ;; Registers used:
 35841 ;;		wreg, status,2, status,0, cstack
 35842 ;; Tracked objects:
 35843 ;;		On entry : 0/0
 35844 ;;		On exit  : 0/0
 35845 ;;		Unchanged: 0/0
 35846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35848 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35849 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35850 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35851 ;;Total ram usage:        5 bytes
 35852 ;; Hardware stack levels used: 1
 35853 ;; Hardware stack levels required when called: 14
 35854 ;; This function calls:
 35855 ;;		___lldiv
 35856 ;;		___lmul
 35857 ;;		_leds_poll
 35858 ;;		_tickGet
 35859 ;; This function is called by:
 35860 ;;		_checkPowerOnPb
 35861 ;; This function uses a non-reentrant model
 35862 ;;
 35863                           
 35864                           	psect	text143
 35865   009A30                     __ptext143:
 35866                           	callstack 0
 35867   009A30                     _pbUpTimer:
 35868                           	callstack 15
 35869                           
 35870                           ; BSR set to: 0
 35871                           ;incstack = 0
 35872                           ;pbUpTimer@timeout stored from wreg
 35873   009A30  0100               	movlb	0	; () banked
 35874   009A32  6FA8               	movwf	pbUpTimer@timeout& (0+255),b
 35875                           
 35876                           ;../../VLCBlib_PIC/vlcb.c: 933:     pbTimer.val = tickGet();
 35877   009A34  EC45  F05C         	call	_tickGet	;wreg free
 35878   009A38  C08D  F0AA         	movff	?_tickGet,_pbTimer
 35879   009A3C  C08E  F0AB         	movff	?_tickGet+1,_pbTimer+1
 35880   009A40  C08F  F0AC         	movff	?_tickGet+2,_pbTimer+2
 35881   009A44  C090  F0AD         	movff	?_tickGet+3,_pbTimer+3
 35882                           
 35883                           ;../../VLCBlib_PIC/vlcb.c: 934:     while (! ((!(PORTAbits.RA2)))) {
 35884   009A48  D02D               	goto	l2013
 35885   009A4A                     l24551:
 35886                           
 35887                           ;../../VLCBlib_PIC/vlcb.c: 935:         leds_poll();
 35888   009A4A  ECAA  F030         	call	_leds_poll	;wreg free
 35889                           
 35890                           ;../../VLCBlib_PIC/vlcb.c: 936:         if ((tickGet() - pbTimer.val) > timeout*62500) {
 35891   009A4E  EC45  F05C         	call	_tickGet	;wreg free
 35892   009A52  0100               	movlb	0	; () banked
 35893   009A54  51AA               	movf	_pbTimer& (0+255),w,b
 35894   009A56  5D8D               	subwf	?_tickGet& (0+255),w,b
 35895   009A58  6FA4               	movwf	??_pbUpTimer& (0+255),b
 35896   009A5A  51AB               	movf	(_pbTimer+1)& (0+255),w,b
 35897   009A5C  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 35898   009A5E  6FA5               	movwf	(??_pbUpTimer+1)& (0+255),b
 35899   009A60  51AC               	movf	(_pbTimer+2)& (0+255),w,b
 35900   009A62  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 35901   009A64  6FA6               	movwf	(??_pbUpTimer+2)& (0+255),b
 35902   009A66  51AD               	movf	(_pbTimer+3)& (0+255),w,b
 35903   009A68  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 35904   009A6A  6FA7               	movwf	(??_pbUpTimer+3)& (0+255),b
 35905   009A6C  51A8               	movf	pbUpTimer@timeout& (0+255),w,b
 35906   009A6E  6F91               	movwf	___lmul@multiplier& (0+255),b
 35907   009A70  6B92               	clrf	(___lmul@multiplier+1)& (0+255),b
 35908   009A72  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
 35909   009A74  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
 35910   009A76  0E24               	movlw	36
 35911   009A78  6F95               	movwf	___lmul@multiplicand& (0+255),b
 35912   009A7A  0EF4               	movlw	244
 35913   009A7C  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 35914   009A7E  0E00               	movlw	0
 35915   009A80  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 35916   009A82  0E00               	movlw	0
 35917   009A84  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 35918   009A86  EC71  F05C         	call	___lmul	;wreg free
 35919   009A8A  0100               	movlb	0	; () banked
 35920   009A8C  51A4               	movf	??_pbUpTimer& (0+255),w,b
 35921   009A8E  5D91               	subwf	?___lmul& (0+255),w,b
 35922   009A90  51A5               	movf	(??_pbUpTimer+1)& (0+255),w,b
 35923   009A92  5992               	subwfb	(?___lmul+1)& (0+255),w,b
 35924   009A94  51A6               	movf	(??_pbUpTimer+2)& (0+255),w,b
 35925   009A96  5993               	subwfb	(?___lmul+2)& (0+255),w,b
 35926   009A98  51A7               	movf	(??_pbUpTimer+3)& (0+255),w,b
 35927   009A9A  5994               	subwfb	(?___lmul+3)& (0+255),w,b
 35928   009A9C  B0D8               	btfsc	status,0,c
 35929   009A9E  D002               	goto	l2013
 35930                           
 35931                           ; BSR set to: 0
 35932                           ;../../VLCBlib_PIC/vlcb.c: 937:             return 0;
 35933   009AA0  0E00               	movlw	0
 35934   009AA2  0012               	return	
 35935   009AA4                     l2013:
 35936                           
 35937                           ;../../VLCBlib_PIC/vlcb.c: 934:     while (! ((!(PORTAbits.RA2)))) {
 35938   009AA4  B480               	btfsc	128,2,c	;volatile
 35939   009AA6  D7D1               	goto	l24551
 35940                           
 35941                           ;../../VLCBlib_PIC/vlcb.c: 941:     return (uint8_t)((tickGet() - pbTimer.val)/62500);
 35942   009AA8  EC45  F05C         	call	_tickGet	;wreg free
 35943   009AAC  0100               	movlb	0	; () banked
 35944   009AAE  51AA               	movf	_pbTimer& (0+255),w,b
 35945   009AB0  5D8D               	subwf	?_tickGet& (0+255),w,b
 35946   009AB2  6F97               	movwf	___lldiv@dividend& (0+255),b
 35947   009AB4  51AB               	movf	(_pbTimer+1)& (0+255),w,b
 35948   009AB6  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 35949   009AB8  6F98               	movwf	(___lldiv@dividend+1)& (0+255),b
 35950   009ABA  51AC               	movf	(_pbTimer+2)& (0+255),w,b
 35951   009ABC  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 35952   009ABE  6F99               	movwf	(___lldiv@dividend+2)& (0+255),b
 35953   009AC0  51AD               	movf	(_pbTimer+3)& (0+255),w,b
 35954   009AC2  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 35955   009AC4  6F9A               	movwf	(___lldiv@dividend+3)& (0+255),b
 35956   009AC6  0E24               	movlw	36
 35957   009AC8  6F9B               	movwf	___lldiv@divisor& (0+255),b
 35958   009ACA  0EF4               	movlw	244
 35959   009ACC  6F9C               	movwf	(___lldiv@divisor+1)& (0+255),b
 35960   009ACE  0E00               	movlw	0
 35961   009AD0  6F9D               	movwf	(___lldiv@divisor+2)& (0+255),b
 35962   009AD2  0E00               	movlw	0
 35963   009AD4  6F9E               	movwf	(___lldiv@divisor+3)& (0+255),b
 35964   009AD6  EC01  F055         	call	___lldiv	;wreg free
 35965   009ADA  0100               	movlb	0	; () banked
 35966   009ADC  5197               	movf	?___lldiv& (0+255),w,b
 35967                           
 35968                           ; BSR set to: 0
 35969   009ADE  0012               	return		;funcret
 35970   009AE0                     __end_of_pbUpTimer:
 35971                           	callstack 0
 35972                           
 35973 ;; *************** function _pbDownTimer *****************
 35974 ;; Defined at:
 35975 ;;		line 912 in file "../../VLCBlib_PIC/vlcb.c"
 35976 ;; Parameters:    Size  Location     Type
 35977 ;;  timeout         1    wreg     unsigned char 
 35978 ;; Auto vars:     Size  Location     Type
 35979 ;;  timeout         1   72[BANK0 ] unsigned char 
 35980 ;; Return value:  Size  Location     Type
 35981 ;;                  1    wreg      unsigned char 
 35982 ;; Registers used:
 35983 ;;		wreg, status,2, status,0, cstack
 35984 ;; Tracked objects:
 35985 ;;		On entry : 0/0
 35986 ;;		On exit  : 0/0
 35987 ;;		Unchanged: 0/0
 35988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35990 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35991 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35992 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35993 ;;Total ram usage:        5 bytes
 35994 ;; Hardware stack levels used: 1
 35995 ;; Hardware stack levels required when called: 14
 35996 ;; This function calls:
 35997 ;;		___lldiv
 35998 ;;		___lmul
 35999 ;;		_leds_poll
 36000 ;;		_tickGet
 36001 ;; This function is called by:
 36002 ;;		_checkPowerOnPb
 36003 ;; This function uses a non-reentrant model
 36004 ;;
 36005                           
 36006                           	psect	text144
 36007   009AE0                     __ptext144:
 36008                           	callstack 0
 36009   009AE0                     _pbDownTimer:
 36010                           	callstack 15
 36011                           
 36012                           ; BSR set to: 0
 36013                           ;incstack = 0
 36014                           ;pbDownTimer@timeout stored from wreg
 36015   009AE0  0100               	movlb	0	; () banked
 36016   009AE2  6FA8               	movwf	pbDownTimer@timeout& (0+255),b
 36017                           
 36018                           ;../../VLCBlib_PIC/vlcb.c: 914:     pbTimer.val = tickGet();
 36019   009AE4  EC45  F05C         	call	_tickGet	;wreg free
 36020   009AE8  C08D  F0AA         	movff	?_tickGet,_pbTimer
 36021   009AEC  C08E  F0AB         	movff	?_tickGet+1,_pbTimer+1
 36022   009AF0  C08F  F0AC         	movff	?_tickGet+2,_pbTimer+2
 36023   009AF4  C090  F0AD         	movff	?_tickGet+3,_pbTimer+3
 36024                           
 36025                           ;../../VLCBlib_PIC/vlcb.c: 915:     while ((!(PORTAbits.RA2))) {
 36026   009AF8  D02D               	goto	l2006
 36027   009AFA                     l24539:
 36028                           
 36029                           ;../../VLCBlib_PIC/vlcb.c: 916:         leds_poll();
 36030   009AFA  ECAA  F030         	call	_leds_poll	;wreg free
 36031                           
 36032                           ;../../VLCBlib_PIC/vlcb.c: 917:         if ((tickGet() - pbTimer.val) > timeout*62500) {
 36033   009AFE  EC45  F05C         	call	_tickGet	;wreg free
 36034   009B02  0100               	movlb	0	; () banked
 36035   009B04  51AA               	movf	_pbTimer& (0+255),w,b
 36036   009B06  5D8D               	subwf	?_tickGet& (0+255),w,b
 36037   009B08  6FA4               	movwf	??_pbDownTimer& (0+255),b
 36038   009B0A  51AB               	movf	(_pbTimer+1)& (0+255),w,b
 36039   009B0C  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 36040   009B0E  6FA5               	movwf	(??_pbDownTimer+1)& (0+255),b
 36041   009B10  51AC               	movf	(_pbTimer+2)& (0+255),w,b
 36042   009B12  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 36043   009B14  6FA6               	movwf	(??_pbDownTimer+2)& (0+255),b
 36044   009B16  51AD               	movf	(_pbTimer+3)& (0+255),w,b
 36045   009B18  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 36046   009B1A  6FA7               	movwf	(??_pbDownTimer+3)& (0+255),b
 36047   009B1C  51A8               	movf	pbDownTimer@timeout& (0+255),w,b
 36048   009B1E  6F91               	movwf	___lmul@multiplier& (0+255),b
 36049   009B20  6B92               	clrf	(___lmul@multiplier+1)& (0+255),b
 36050   009B22  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
 36051   009B24  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
 36052   009B26  0E24               	movlw	36
 36053   009B28  6F95               	movwf	___lmul@multiplicand& (0+255),b
 36054   009B2A  0EF4               	movlw	244
 36055   009B2C  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 36056   009B2E  0E00               	movlw	0
 36057   009B30  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 36058   009B32  0E00               	movlw	0
 36059   009B34  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 36060   009B36  EC71  F05C         	call	___lmul	;wreg free
 36061   009B3A  0100               	movlb	0	; () banked
 36062   009B3C  51A4               	movf	??_pbDownTimer& (0+255),w,b
 36063   009B3E  5D91               	subwf	?___lmul& (0+255),w,b
 36064   009B40  51A5               	movf	(??_pbDownTimer+1)& (0+255),w,b
 36065   009B42  5992               	subwfb	(?___lmul+1)& (0+255),w,b
 36066   009B44  51A6               	movf	(??_pbDownTimer+2)& (0+255),w,b
 36067   009B46  5993               	subwfb	(?___lmul+2)& (0+255),w,b
 36068   009B48  51A7               	movf	(??_pbDownTimer+3)& (0+255),w,b
 36069   009B4A  5994               	subwfb	(?___lmul+3)& (0+255),w,b
 36070   009B4C  B0D8               	btfsc	status,0,c
 36071   009B4E  D002               	goto	l2006
 36072                           
 36073                           ; BSR set to: 0
 36074                           ;../../VLCBlib_PIC/vlcb.c: 918:             return 0;
 36075   009B50  0E00               	movlw	0
 36076   009B52  0012               	return	
 36077   009B54                     l2006:
 36078                           
 36079                           ;../../VLCBlib_PIC/vlcb.c: 915:     while ((!(PORTAbits.RA2))) {
 36080   009B54  A480               	btfss	128,2,c	;volatile
 36081   009B56  D7D1               	goto	l24539
 36082                           
 36083                           ;../../VLCBlib_PIC/vlcb.c: 922:     return (uint8_t)((tickGet() - pbTimer.val)/62500);
 36084   009B58  EC45  F05C         	call	_tickGet	;wreg free
 36085   009B5C  0100               	movlb	0	; () banked
 36086   009B5E  51AA               	movf	_pbTimer& (0+255),w,b
 36087   009B60  5D8D               	subwf	?_tickGet& (0+255),w,b
 36088   009B62  6F97               	movwf	___lldiv@dividend& (0+255),b
 36089   009B64  51AB               	movf	(_pbTimer+1)& (0+255),w,b
 36090   009B66  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 36091   009B68  6F98               	movwf	(___lldiv@dividend+1)& (0+255),b
 36092   009B6A  51AC               	movf	(_pbTimer+2)& (0+255),w,b
 36093   009B6C  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 36094   009B6E  6F99               	movwf	(___lldiv@dividend+2)& (0+255),b
 36095   009B70  51AD               	movf	(_pbTimer+3)& (0+255),w,b
 36096   009B72  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 36097   009B74  6F9A               	movwf	(___lldiv@dividend+3)& (0+255),b
 36098   009B76  0E24               	movlw	36
 36099   009B78  6F9B               	movwf	___lldiv@divisor& (0+255),b
 36100   009B7A  0EF4               	movlw	244
 36101   009B7C  6F9C               	movwf	(___lldiv@divisor+1)& (0+255),b
 36102   009B7E  0E00               	movlw	0
 36103   009B80  6F9D               	movwf	(___lldiv@divisor+2)& (0+255),b
 36104   009B82  0E00               	movlw	0
 36105   009B84  6F9E               	movwf	(___lldiv@divisor+3)& (0+255),b
 36106   009B86  EC01  F055         	call	___lldiv	;wreg free
 36107   009B8A  0100               	movlb	0	; () banked
 36108   009B8C  5197               	movf	?___lldiv& (0+255),w,b
 36109                           
 36110                           ; BSR set to: 0
 36111   009B8E  0012               	return		;funcret
 36112   009B90                     __end_of_pbDownTimer:
 36113                           	callstack 0
 36114                           
 36115 ;; *************** function _leds_poll *****************
 36116 ;; Defined at:
 36117 ;;		line 89 in file "../../VLCBlib_PIC/statusLeds2.c"
 36118 ;; Parameters:    Size  Location     Type
 36119 ;;		None
 36120 ;; Auto vars:     Size  Location     Type
 36121 ;;		None
 36122 ;; Return value:  Size  Location     Type
 36123 ;;                  1    wreg      void 
 36124 ;; Registers used:
 36125 ;;		wreg, status,2, status,0, cstack
 36126 ;; Tracked objects:
 36127 ;;		On entry : 0/0
 36128 ;;		On exit  : 0/0
 36129 ;;		Unchanged: 0/0
 36130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36133 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36134 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36135 ;;Total ram usage:        4 bytes
 36136 ;; Hardware stack levels used: 1
 36137 ;; Hardware stack levels required when called: 13
 36138 ;; This function calls:
 36139 ;;		___awdiv
 36140 ;;		_tickGet
 36141 ;; This function is called by:
 36142 ;;		_pbDownTimer
 36143 ;;		_pbUpTimer
 36144 ;;		_poll
 36145 ;; This function uses a non-reentrant model
 36146 ;;
 36147                           
 36148                           	psect	text145
 36149   006154                     __ptext145:
 36150                           	callstack 0
 36151   006154                     _leds_poll:
 36152                           	callstack 16
 36153                           
 36154                           ;../../VLCBlib_PIC/statusLeds2.c: 90:     if ((tickGet() - ledTimer.val) > (62500/100)) 
      +                          {
 36155                           
 36156                           ; BSR set to: 0
 36157                           ;incstack = 0
 36158   006154  EC45  F05C         	call	_tickGet	;wreg free
 36159   006158  0101               	movlb	1	; () banked
 36160   00615A  5148               	movf	_ledTimer& (0+255),w,b
 36161   00615C  0100               	movlb	0	; () banked
 36162   00615E  5D8D               	subwf	?_tickGet& (0+255),w,b
 36163   006160  6F9F               	movwf	??_leds_poll& (0+255),b
 36164   006162  0101               	movlb	1	; () banked
 36165   006164  5149               	movf	(_ledTimer+1)& (0+255),w,b
 36166   006166  0100               	movlb	0	; () banked
 36167   006168  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 36168   00616A  6FA0               	movwf	(??_leds_poll+1)& (0+255),b
 36169   00616C  0101               	movlb	1	; () banked
 36170   00616E  514A               	movf	(_ledTimer+2)& (0+255),w,b
 36171   006170  0100               	movlb	0	; () banked
 36172   006172  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 36173   006174  6FA1               	movwf	(??_leds_poll+2)& (0+255),b
 36174   006176  0101               	movlb	1	; () banked
 36175   006178  514B               	movf	(_ledTimer+3)& (0+255),w,b
 36176   00617A  0100               	movlb	0	; () banked
 36177   00617C  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 36178   00617E  6FA2               	movwf	(??_leds_poll+3)& (0+255),b
 36179   006180  51A2               	movf	(??_leds_poll+3)& (0+255),w,b
 36180   006182  11A1               	iorwf	(??_leds_poll+2)& (0+255),w,b
 36181   006184  E106               	bnz	u24020
 36182   006186  0E72               	movlw	114
 36183   006188  5D9F               	subwf	??_leds_poll& (0+255),w,b
 36184   00618A  0E02               	movlw	2
 36185   00618C  59A0               	subwfb	(??_leds_poll+1)& (0+255),w,b
 36186   00618E  A0D8               	btfss	status,0,c
 36187   006190  D06B               	goto	l22531
 36188   006192                     u24020:
 36189                           
 36190                           ; BSR set to: 0
 36191                           ;../../VLCBlib_PIC/statusLeds2.c: 91:         flashCounter[0]++;
 36192   006192  2BAE               	incf	_flashCounter& (0+255),f,b
 36193                           
 36194                           ;../../VLCBlib_PIC/statusLeds2.c: 92:         flashCounter[1]++;
 36195   006194  2BAF               	incf	(_flashCounter+1)& (0+255),f,b
 36196                           
 36197                           ; BSR set to: 0
 36198                           ;../../VLCBlib_PIC/statusLeds2.c: 93:         ledTimer.val = tickGet();
 36199   006196  EC45  F05C         	call	_tickGet	;wreg free
 36200   00619A  C08D  F148         	movff	?_tickGet,_ledTimer
 36201   00619E  C08E  F149         	movff	?_tickGet+1,_ledTimer+1
 36202   0061A2  C08F  F14A         	movff	?_tickGet+2,_ledTimer+2
 36203   0061A6  C090  F14B         	movff	?_tickGet+3,_ledTimer+3
 36204   0061AA  D05E               	goto	l22531
 36205   0061AC                     l1772:
 36206                           
 36207                           ; BSR set to: 0
 36208                           ;../../VLCBlib_PIC/statusLeds2.c: 98:             (LATBbits.LATB6=1);
 36209   0061AC  8C8A               	bsf	138,6,c	;volatile
 36210   0061AE                     l22487:
 36211                           
 36212                           ; BSR set to: 0
 36213                           ;../../VLCBlib_PIC/statusLeds2.c: 99:             flashCounter[1] = 0;
 36214   0061AE  0E00               	movlw	0
 36215   0061B0  6FAF               	movwf	(_flashCounter+1)& (0+255),b
 36216                           
 36217                           ;../../VLCBlib_PIC/statusLeds2.c: 100:             break;
 36218   0061B2  D0E0               	goto	l22577
 36219   0061B4                     l1774:
 36220                           
 36221                           ; BSR set to: 0
 36222                           ;../../VLCBlib_PIC/statusLeds2.c: 102:             (LATBbits.LATB6=0);
 36223   0061B4  9C8A               	bcf	138,6,c	;volatile
 36224   0061B6  D7FB               	goto	l22487
 36225   0061B8                     l22491:
 36226                           
 36227                           ; BSR set to: 0
 36228                           ;../../VLCBlib_PIC/statusLeds2.c: 107:             (LATBbits.LATB6=flashCounter[1]/25);
 36229   0061B8  C0AF  F097         	movff	_flashCounter+1,___awdiv@dividend
 36230   0061BC  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 36231   0061BE  0E00               	movlw	0
 36232   0061C0  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 36233   0061C2  0E19               	movlw	25
 36234   0061C4  6F99               	movwf	___awdiv@divisor& (0+255),b
 36235   0061C6  EC7B  F054         	call	___awdiv	;wreg free
 36236   0061CA  0100               	movlb	0	; () banked
 36237   0061CC  3B97               	swapf	?___awdiv& (0+255),f,b
 36238   0061CE  4797               	rlncf	?___awdiv& (0+255),f,b
 36239   0061D0  4797               	rlncf	?___awdiv& (0+255),f,b
 36240   0061D2  508A               	movf	138,w,c	;volatile
 36241   0061D4  1997               	xorwf	?___awdiv& (0+255),w,b
 36242   0061D6  0BBF               	andlw	-65
 36243   0061D8  1997               	xorwf	?___awdiv& (0+255),w,b
 36244   0061DA  6E8A               	movwf	138,c	;volatile
 36245                           
 36246                           ; BSR set to: 0
 36247                           ;../../VLCBlib_PIC/statusLeds2.c: 108:             if (flashCounter[1] >= 50) {
 36248   0061DC  0E31               	movlw	49
 36249   0061DE                     L17:
 36250   0061DE  65AF               	cpfsgt	(_flashCounter+1)& (0+255),b
 36251   0061E0  D0C9               	goto	l22577
 36252   0061E2  D7E5               	goto	l22487
 36253   0061E4                     l22497:
 36254                           
 36255                           ; BSR set to: 0
 36256                           ;../../VLCBlib_PIC/statusLeds2.c: 114:             (LATBbits.LATB6=flashCounter[1]/50);
 36257   0061E4  C0AF  F097         	movff	_flashCounter+1,___awdiv@dividend
 36258   0061E8  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 36259   0061EA  0E00               	movlw	0
 36260   0061EC  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 36261   0061EE  0E32               	movlw	50
 36262   0061F0  6F99               	movwf	___awdiv@divisor& (0+255),b
 36263   0061F2  EC7B  F054         	call	___awdiv	;wreg free
 36264   0061F6  0100               	movlb	0	; () banked
 36265   0061F8  3B97               	swapf	?___awdiv& (0+255),f,b
 36266   0061FA  4797               	rlncf	?___awdiv& (0+255),f,b
 36267   0061FC  4797               	rlncf	?___awdiv& (0+255),f,b
 36268   0061FE  508A               	movf	138,w,c	;volatile
 36269   006200  1997               	xorwf	?___awdiv& (0+255),w,b
 36270   006202  0BBF               	andlw	-65
 36271   006204  1997               	xorwf	?___awdiv& (0+255),w,b
 36272   006206  6E8A               	movwf	138,c	;volatile
 36273                           
 36274                           ; BSR set to: 0
 36275                           ;../../VLCBlib_PIC/statusLeds2.c: 115:             if (flashCounter[1] >= 100) {
 36276   006208  0E63               	movlw	99
 36277   00620A  D7E9               	goto	L17
 36278   00620C                     l22503:
 36279                           
 36280                           ; BSR set to: 0
 36281                           ;../../VLCBlib_PIC/statusLeds2.c: 120:             (LATBbits.LATB6=flashCounter[1]/100);
 36282   00620C  C0AF  F097         	movff	_flashCounter+1,___awdiv@dividend
 36283   006210  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 36284   006212  0E00               	movlw	0
 36285   006214  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 36286   006216  0E64               	movlw	100
 36287   006218  6F99               	movwf	___awdiv@divisor& (0+255),b
 36288   00621A  EC7B  F054         	call	___awdiv	;wreg free
 36289   00621E  0100               	movlb	0	; () banked
 36290   006220  3B97               	swapf	?___awdiv& (0+255),f,b
 36291   006222  4797               	rlncf	?___awdiv& (0+255),f,b
 36292   006224  4797               	rlncf	?___awdiv& (0+255),f,b
 36293   006226  508A               	movf	138,w,c	;volatile
 36294   006228  1997               	xorwf	?___awdiv& (0+255),w,b
 36295   00622A  0BBF               	andlw	-65
 36296   00622C  1997               	xorwf	?___awdiv& (0+255),w,b
 36297   00622E  6E8A               	movwf	138,c	;volatile
 36298                           
 36299                           ; BSR set to: 0
 36300                           ;../../VLCBlib_PIC/statusLeds2.c: 121:             if (flashCounter[1] >= 200) {
 36301   006230  0EC7               	movlw	199
 36302   006232  D7D5               	goto	L17
 36303   006234                     l1781:
 36304                           
 36305                           ; BSR set to: 0
 36306                           ;../../VLCBlib_PIC/statusLeds2.c: 126:             (LATBbits.LATB6=1);
 36307   006234  8C8A               	bsf	138,6,c	;volatile
 36308                           
 36309                           ; BSR set to: 0
 36310                           ;../../VLCBlib_PIC/statusLeds2.c: 127:             if (flashCounter[1] >= 25) {
 36311   006236  0E18               	movlw	24
 36312   006238  65AF               	cpfsgt	(_flashCounter+1)& (0+255),b
 36313   00623A  D09C               	goto	l22577
 36314                           
 36315                           ; BSR set to: 0
 36316                           ;../../VLCBlib_PIC/statusLeds2.c: 128:                 flashCounter[1] = 0;
 36317   00623C  0E00               	movlw	0
 36318   00623E  6FAF               	movwf	(_flashCounter+1)& (0+255),b
 36319                           
 36320                           ;../../VLCBlib_PIC/statusLeds2.c: 129:                 ledState[1] = LED_OFF;
 36321   006240  0E00               	movlw	0
 36322   006242  D007               	goto	L18
 36323   006244                     l1783:
 36324                           
 36325                           ; BSR set to: 0
 36326                           ;../../VLCBlib_PIC/statusLeds2.c: 133:             (LATBbits.LATB6=0);
 36327   006244  9C8A               	bcf	138,6,c	;volatile
 36328                           
 36329                           ; BSR set to: 0
 36330                           ;../../VLCBlib_PIC/statusLeds2.c: 134:             if (flashCounter[1] >= 25) {
 36331   006246  0E18               	movlw	24
 36332   006248  65AF               	cpfsgt	(_flashCounter+1)& (0+255),b
 36333   00624A  D094               	goto	l22577
 36334                           
 36335                           ; BSR set to: 0
 36336                           ;../../VLCBlib_PIC/statusLeds2.c: 135:                 flashCounter[1] = 0;
 36337   00624C  0E00               	movlw	0
 36338   00624E  6FAF               	movwf	(_flashCounter+1)& (0+255),b
 36339                           
 36340                           ;../../VLCBlib_PIC/statusLeds2.c: 136:                 ledState[1] = LED_ON;
 36341   006250  0E01               	movlw	1
 36342   006252                     L18:
 36343   006252  6FB1               	movwf	(_ledState+1)& (0+255),b
 36344   006254  D08F               	goto	l22577
 36345   006256                     l1785:
 36346                           
 36347                           ; BSR set to: 0
 36348                           ;../../VLCBlib_PIC/statusLeds2.c: 140:             (LATBbits.LATB6=1);
 36349   006256  8C8A               	bsf	138,6,c	;volatile
 36350                           
 36351                           ; BSR set to: 0
 36352                           ;../../VLCBlib_PIC/statusLeds2.c: 141:             if (flashCounter[1] >= 50) {
 36353   006258  0E31               	movlw	49
 36354   00625A  D7EE               	goto	L21
 36355   00625C                     l1787:
 36356                           
 36357                           ; BSR set to: 0
 36358                           ;../../VLCBlib_PIC/statusLeds2.c: 147:             (LATBbits.LATB6=0);
 36359   00625C  9C8A               	bcf	138,6,c	;volatile
 36360                           
 36361                           ; BSR set to: 0
 36362                           ;../../VLCBlib_PIC/statusLeds2.c: 148:             if (flashCounter[1] >= 50) {
 36363   00625E  0E31               	movlw	49
 36364   006260  D7F3               	goto	L22
 36365   006262                     l1789:
 36366                           
 36367                           ; BSR set to: 0
 36368                           ;../../VLCBlib_PIC/statusLeds2.c: 154:             (LATBbits.LATB6=0);
 36369   006262  9C8A               	bcf	138,6,c	;volatile
 36370                           
 36371                           ; BSR set to: 0
 36372                           ;../../VLCBlib_PIC/statusLeds2.c: 155:             if (flashCounter[1] >= 100) {
 36373   006264  0E63               	movlw	99
 36374   006266  D7F0               	goto	L22
 36375   006268                     l22531:
 36376   006268  0100               	movlb	0	; () banked
 36377   00626A  51B1               	movf	(_ledState+1)& (0+255),w,b
 36378   00626C  6F9F               	movwf	??_leds_poll& (0+255),b
 36379   00626E  6BA0               	clrf	(??_leds_poll+1)& (0+255),b
 36380                           
 36381                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 36382                           ; Switch size 1, requested type "simple"
 36383                           ; Number of cases is 1, Range of values is 0 to 0
 36384                           ; switch strategies available:
 36385                           ; Name         Instructions Cycles
 36386                           ; simple_byte            4     3 (average)
 36387                           ;	Chosen strategy is simple_byte
 36388   006270  51A0               	movf	(??_leds_poll+1)& (0+255),w,b
 36389   006272  0A00               	xorlw	0	; case 0
 36390   006274  A4D8               	btfss	status,2,c
 36391   006276  D07E               	goto	l22577
 36392                           
 36393                           ; BSR set to: 0
 36394                           ; Switch size 1, requested type "simple"
 36395                           ; Number of cases is 10, Range of values is 0 to 9
 36396                           ; switch strategies available:
 36397                           ; Name         Instructions Cycles
 36398                           ; simple_byte           31    16 (average)
 36399                           ;	Chosen strategy is simple_byte
 36400   006278  519F               	movf	??_leds_poll& (0+255),w,b
 36401   00627A  0A00               	xorlw	0	; case 0
 36402   00627C  B4D8               	btfsc	status,2,c
 36403   00627E  D79A               	goto	l1774
 36404   006280  0A01               	xorlw	1	; case 1
 36405   006282  B4D8               	btfsc	status,2,c
 36406   006284  D793               	goto	l1772
 36407   006286  0A03               	xorlw	3	; case 2
 36408   006288  B4D8               	btfsc	status,2,c
 36409   00628A  D796               	goto	l22491
 36410   00628C  0A01               	xorlw	1	; case 3
 36411   00628E  B4D8               	btfsc	status,2,c
 36412   006290  D7A9               	goto	l22497
 36413   006292  0A07               	xorlw	7	; case 4
 36414   006294  B4D8               	btfsc	status,2,c
 36415   006296  D7BA               	goto	l22503
 36416   006298  0A01               	xorlw	1	; case 5
 36417   00629A  B4D8               	btfsc	status,2,c
 36418   00629C  D7D3               	goto	l1783
 36419   00629E  0A03               	xorlw	3	; case 6
 36420   0062A0  B4D8               	btfsc	status,2,c
 36421   0062A2  D7C8               	goto	l1781
 36422   0062A4  0A01               	xorlw	1	; case 7
 36423   0062A6  B4D8               	btfsc	status,2,c
 36424   0062A8  D7D9               	goto	l1787
 36425   0062AA  0A0F               	xorlw	15	; case 8
 36426   0062AC  B4D8               	btfsc	status,2,c
 36427   0062AE  D7D3               	goto	l1785
 36428   0062B0  0A01               	xorlw	1	; case 9
 36429   0062B2  B4D8               	btfsc	status,2,c
 36430   0062B4  D7D6               	goto	l1789
 36431   0062B6  D05E               	goto	l22577
 36432   0062B8                     l1792:
 36433                           
 36434                           ; BSR set to: 0
 36435                           ;../../VLCBlib_PIC/statusLeds2.c: 164:             (LATBbits.LATB7=1);
 36436   0062B8  8E8A               	bsf	138,7,c	;volatile
 36437   0062BA                     l22533:
 36438                           
 36439                           ; BSR set to: 0
 36440                           ;../../VLCBlib_PIC/statusLeds2.c: 165:             flashCounter[0] = 0;
 36441   0062BA  0E00               	movlw	0
 36442   0062BC  6FAE               	movwf	_flashCounter& (0+255),b
 36443                           
 36444                           ;../../VLCBlib_PIC/statusLeds2.c: 166:             break;
 36445   0062BE  0012               	return	
 36446   0062C0                     l1794:
 36447                           
 36448                           ; BSR set to: 0
 36449                           ;../../VLCBlib_PIC/statusLeds2.c: 168:             (LATBbits.LATB7=0);
 36450   0062C0  9E8A               	bcf	138,7,c	;volatile
 36451   0062C2  D7FB               	goto	l22533
 36452   0062C4                     l22537:
 36453                           
 36454                           ; BSR set to: 0
 36455                           ;../../VLCBlib_PIC/statusLeds2.c: 173:             (LATBbits.LATB7=flashCounter[0]/25);
 36456   0062C4  C0AE  F097         	movff	_flashCounter,___awdiv@dividend
 36457   0062C8  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 36458   0062CA  0E00               	movlw	0
 36459   0062CC  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 36460   0062CE  0E19               	movlw	25
 36461   0062D0  6F99               	movwf	___awdiv@divisor& (0+255),b
 36462   0062D2  EC7B  F054         	call	___awdiv	;wreg free
 36463   0062D6  0100               	movlb	0	; () banked
 36464   0062D8  3397               	rrcf	?___awdiv& (0+255),f,b
 36465   0062DA  3397               	rrcf	?___awdiv& (0+255),f,b
 36466   0062DC  508A               	movf	138,w,c	;volatile
 36467   0062DE  1997               	xorwf	?___awdiv& (0+255),w,b
 36468   0062E0  0B7F               	andlw	-129
 36469   0062E2  1997               	xorwf	?___awdiv& (0+255),w,b
 36470   0062E4  6E8A               	movwf	138,c	;volatile
 36471                           
 36472                           ; BSR set to: 0
 36473                           ;../../VLCBlib_PIC/statusLeds2.c: 174:             if (flashCounter[0] >= 50) {
 36474   0062E6  0E31               	movlw	49
 36475   0062E8                     L20:
 36476   0062E8  65AE               	cpfsgt	_flashCounter& (0+255),b
 36477   0062EA  0012               	return	
 36478   0062EC  D7E6               	goto	l22533
 36479   0062EE                     l22543:
 36480                           
 36481                           ; BSR set to: 0
 36482                           ;../../VLCBlib_PIC/statusLeds2.c: 180:             (LATBbits.LATB7=flashCounter[0]/50);
 36483   0062EE  C0AE  F097         	movff	_flashCounter,___awdiv@dividend
 36484   0062F2  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 36485   0062F4  0E00               	movlw	0
 36486   0062F6  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 36487   0062F8  0E32               	movlw	50
 36488   0062FA  6F99               	movwf	___awdiv@divisor& (0+255),b
 36489   0062FC  EC7B  F054         	call	___awdiv	;wreg free
 36490   006300  0100               	movlb	0	; () banked
 36491   006302  3397               	rrcf	?___awdiv& (0+255),f,b
 36492   006304  3397               	rrcf	?___awdiv& (0+255),f,b
 36493   006306  508A               	movf	138,w,c	;volatile
 36494   006308  1997               	xorwf	?___awdiv& (0+255),w,b
 36495   00630A  0B7F               	andlw	-129
 36496   00630C  1997               	xorwf	?___awdiv& (0+255),w,b
 36497   00630E  6E8A               	movwf	138,c	;volatile
 36498                           
 36499                           ; BSR set to: 0
 36500                           ;../../VLCBlib_PIC/statusLeds2.c: 181:             if (flashCounter[0] >= 100) {
 36501   006310  0E63               	movlw	99
 36502   006312  D7EA               	goto	L20
 36503   006314                     l22549:
 36504                           
 36505                           ; BSR set to: 0
 36506                           ;../../VLCBlib_PIC/statusLeds2.c: 186:             (LATBbits.LATB7=flashCounter[0]/100);
 36507   006314  C0AE  F097         	movff	_flashCounter,___awdiv@dividend
 36508   006318  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 36509   00631A  0E00               	movlw	0
 36510   00631C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 36511   00631E  0E64               	movlw	100
 36512   006320  6F99               	movwf	___awdiv@divisor& (0+255),b
 36513   006322  EC7B  F054         	call	___awdiv	;wreg free
 36514   006326  0100               	movlb	0	; () banked
 36515   006328  3397               	rrcf	?___awdiv& (0+255),f,b
 36516   00632A  3397               	rrcf	?___awdiv& (0+255),f,b
 36517   00632C  508A               	movf	138,w,c	;volatile
 36518   00632E  1997               	xorwf	?___awdiv& (0+255),w,b
 36519   006330  0B7F               	andlw	-129
 36520   006332  1997               	xorwf	?___awdiv& (0+255),w,b
 36521   006334  6E8A               	movwf	138,c	;volatile
 36522                           
 36523                           ; BSR set to: 0
 36524                           ;../../VLCBlib_PIC/statusLeds2.c: 187:             if (flashCounter[0] >= 200) {
 36525   006336  0EC7               	movlw	199
 36526   006338  D7D7               	goto	L20
 36527   00633A                     l1801:
 36528                           
 36529                           ; BSR set to: 0
 36530                           ;../../VLCBlib_PIC/statusLeds2.c: 192:             (LATBbits.LATB7=1);
 36531   00633A  8E8A               	bsf	138,7,c	;volatile
 36532                           
 36533                           ; BSR set to: 0
 36534                           ;../../VLCBlib_PIC/statusLeds2.c: 193:             if (flashCounter[0] >= 25) {
 36535   00633C  0E18               	movlw	24
 36536   00633E  D00F               	goto	L24
 36537   006340                     u24140:
 36538                           
 36539                           ; BSR set to: 0
 36540                           ;../../VLCBlib_PIC/statusLeds2.c: 194:                 flashCounter[0] = 0;
 36541   006340  0E00               	movlw	0
 36542   006342  6FAE               	movwf	_flashCounter& (0+255),b
 36543                           
 36544                           ;../../VLCBlib_PIC/statusLeds2.c: 195:                 ledState[0] = LED_OFF;
 36545   006344  0E00               	movlw	0
 36546   006346  6FB0               	movwf	_ledState& (0+255),b
 36547   006348  0012               	return	
 36548   00634A                     l1803:
 36549                           
 36550                           ; BSR set to: 0
 36551                           ;../../VLCBlib_PIC/statusLeds2.c: 199:             (LATBbits.LATB7=0);
 36552   00634A  9E8A               	bcf	138,7,c	;volatile
 36553                           
 36554                           ; BSR set to: 0
 36555                           ;../../VLCBlib_PIC/statusLeds2.c: 200:             if (flashCounter[0] >= 25) {
 36556   00634C  0E18               	movlw	24
 36557   00634E  D00C               	goto	L23
 36558   006350                     u24150:
 36559                           
 36560                           ; BSR set to: 0
 36561                           ;../../VLCBlib_PIC/statusLeds2.c: 201:                 flashCounter[0] = 0;
 36562   006350  0E00               	movlw	0
 36563   006352  6FAE               	movwf	_flashCounter& (0+255),b
 36564                           
 36565                           ;../../VLCBlib_PIC/statusLeds2.c: 202:                 ledState[0] = LED_ON;
 36566   006354  0E01               	movlw	1
 36567   006356  6FB0               	movwf	_ledState& (0+255),b
 36568   006358  0012               	return	
 36569   00635A                     l1805:
 36570                           
 36571                           ; BSR set to: 0
 36572                           ;../../VLCBlib_PIC/statusLeds2.c: 206:             (LATBbits.LATB7=1);
 36573   00635A  8E8A               	bsf	138,7,c	;volatile
 36574                           
 36575                           ; BSR set to: 0
 36576                           ;../../VLCBlib_PIC/statusLeds2.c: 207:             if (flashCounter[0] >= 50) {
 36577   00635C  0E31               	movlw	49
 36578   00635E                     L24:
 36579   00635E  65AE               	cpfsgt	_flashCounter& (0+255),b
 36580   006360  0012               	return	
 36581   006362  D7EE               	goto	u24140
 36582   006364                     l1807:
 36583                           
 36584                           ; BSR set to: 0
 36585                           ;../../VLCBlib_PIC/statusLeds2.c: 213:             (LATBbits.LATB7=0);
 36586   006364  9E8A               	bcf	138,7,c	;volatile
 36587                           
 36588                           ; BSR set to: 0
 36589                           ;../../VLCBlib_PIC/statusLeds2.c: 214:             if (flashCounter[0] >= 50) {
 36590   006366  0E31               	movlw	49
 36591   006368                     L23:
 36592   006368  65AE               	cpfsgt	_flashCounter& (0+255),b
 36593   00636A  0012               	return	
 36594   00636C  D7F1               	goto	u24150
 36595   00636E                     l1809:
 36596                           
 36597                           ; BSR set to: 0
 36598                           ;../../VLCBlib_PIC/statusLeds2.c: 220:             (LATBbits.LATB7=0);
 36599   00636E  9E8A               	bcf	138,7,c	;volatile
 36600                           
 36601                           ; BSR set to: 0
 36602                           ;../../VLCBlib_PIC/statusLeds2.c: 221:             if (flashCounter[0] >= 100) {
 36603   006370  0E63               	movlw	99
 36604   006372  D7FA               	goto	L23
 36605   006374                     l22577:
 36606                           
 36607                           ; BSR set to: 0
 36608   006374  51B0               	movf	_ledState& (0+255),w,b
 36609   006376  6F9F               	movwf	??_leds_poll& (0+255),b
 36610   006378  6BA0               	clrf	(??_leds_poll+1)& (0+255),b
 36611                           
 36612                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 36613                           ; Switch size 1, requested type "simple"
 36614                           ; Number of cases is 1, Range of values is 0 to 0
 36615                           ; switch strategies available:
 36616                           ; Name         Instructions Cycles
 36617                           ; simple_byte            4     3 (average)
 36618                           ;	Chosen strategy is simple_byte
 36619   00637A  51A0               	movf	(??_leds_poll+1)& (0+255),w,b
 36620   00637C  0A00               	xorlw	0	; case 0
 36621   00637E  A4D8               	btfss	status,2,c
 36622   006380  0012               	return	
 36623                           
 36624                           ; BSR set to: 0
 36625                           ; Switch size 1, requested type "simple"
 36626                           ; Number of cases is 10, Range of values is 0 to 9
 36627                           ; switch strategies available:
 36628                           ; Name         Instructions Cycles
 36629                           ; simple_byte           31    16 (average)
 36630                           ;	Chosen strategy is simple_byte
 36631   006382  519F               	movf	??_leds_poll& (0+255),w,b
 36632   006384  0A00               	xorlw	0	; case 0
 36633   006386  B4D8               	btfsc	status,2,c
 36634   006388  D79B               	goto	l1794
 36635   00638A  0A01               	xorlw	1	; case 1
 36636   00638C  B4D8               	btfsc	status,2,c
 36637   00638E  D794               	goto	l1792
 36638   006390  0A03               	xorlw	3	; case 2
 36639   006392  B4D8               	btfsc	status,2,c
 36640   006394  D797               	goto	l22537
 36641   006396  0A01               	xorlw	1	; case 3
 36642   006398  B4D8               	btfsc	status,2,c
 36643   00639A  D7A9               	goto	l22543
 36644   00639C  0A07               	xorlw	7	; case 4
 36645   00639E  B4D8               	btfsc	status,2,c
 36646   0063A0  D7B9               	goto	l22549
 36647   0063A2  0A01               	xorlw	1	; case 5
 36648   0063A4  B4D8               	btfsc	status,2,c
 36649   0063A6  D7D1               	goto	l1803
 36650   0063A8  0A03               	xorlw	3	; case 6
 36651   0063AA  B4D8               	btfsc	status,2,c
 36652   0063AC  D7C6               	goto	l1801
 36653   0063AE  0A01               	xorlw	1	; case 7
 36654   0063B0  B4D8               	btfsc	status,2,c
 36655   0063B2  D7D8               	goto	l1807
 36656   0063B4  0A0F               	xorlw	15	; case 8
 36657   0063B6  B4D8               	btfsc	status,2,c
 36658   0063B8  D7D0               	goto	l1805
 36659   0063BA  0A01               	xorlw	1	; case 9
 36660   0063BC  A4D8               	btfss	status,2,c
 36661   0063BE  0012               	return	
 36662   0063C0  D7D6               	goto	l1809
 36663   0063C2                     __end_of_leds_poll:
 36664                           	callstack 0
 36665                           
 36666 ;; *************** function _tickGet *****************
 36667 ;; Defined at:
 36668 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 36669 ;; Parameters:    Size  Location     Type
 36670 ;;		None
 36671 ;; Auto vars:     Size  Location     Type
 36672 ;;  currentTime     4   51[BANK0 ] struct _TickValue
 36673 ;;  IntFlag1        1   50[BANK0 ] unsigned char 
 36674 ;;  IntFlag2        1   49[BANK0 ] unsigned char 
 36675 ;; Return value:  Size  Location     Type
 36676 ;;                  4   45[BANK0 ] unsigned long 
 36677 ;; Registers used:
 36678 ;;		wreg, status,2, status,0
 36679 ;; Tracked objects:
 36680 ;;		On entry : 0/0
 36681 ;;		On exit  : 0/0
 36682 ;;		Unchanged: 0/0
 36683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36684 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36685 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36687 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36688 ;;Total ram usage:       10 bytes
 36689 ;; Hardware stack levels used: 1
 36690 ;; Hardware stack levels required when called: 12
 36691 ;; This function calls:
 36692 ;;		Nothing
 36693 ;; This function is called by:
 36694 ;;		_setup
 36695 ;;		_loop
 36696 ;;		_doWait
 36697 ;;		_initServos
 36698 ;;		_pollServos
 36699 ;;		_mnsPowerUp
 36700 ;;		_mnsPoll
 36701 ;;		_leds_powerUp
 36702 ;;		_leds_poll
 36703 ;;		_pbDownTimer
 36704 ;;		_pbUpTimer
 36705 ;;		_poll
 36706 ;;		_canPowerUp
 36707 ;;		_handleSelfEnumeration
 36708 ;;		_processEnumeration
 36709 ;; This function uses a non-reentrant model
 36710 ;;
 36711                           
 36712                           	psect	text146
 36713   00B88A                     __ptext146:
 36714                           	callstack 0
 36715   00B88A                     _tickGet:
 36716                           	callstack 17
 36717                           
 36718                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 36719                           
 36720                           ; BSR set to: 0
 36721                           ;incstack = 0
 36722   00B88A  0E00               	movlw	0
 36723   00B88C  0100               	movlb	0	; () banked
 36724   00B88E  6F95               	movwf	(tickGet@currentTime+2)& (0+255),b
 36725                           
 36726                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 36727   00B890  0E00               	movlw	0
 36728   00B892  6F96               	movwf	(tickGet@currentTime+3)& (0+255),b
 36729                           
 36730                           ; BSR set to: 0
 36731                           ;../../VLCBlib_PIC/ticktime.c: 169:     INTCONbits.TMR0IE = 0;
 36732   00B894  9AF2               	bcf	242,5,c	;volatile
 36733   00B896                     l20627:
 36734                           
 36735                           ; BSR set to: 0
 36736                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = INTCONbits.TMR0IF;
 36737   00B896  0E00               	movlw	0
 36738   00B898  B4F2               	btfsc	242,2,c	;volatile
 36739   00B89A  0E01               	movlw	1
 36740   00B89C  6F92               	movwf	tickGet@IntFlag1& (0+255),b
 36741                           
 36742                           ; BSR set to: 0
 36743                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 36744   00B89E  CFD6 F093          	movff	4054,tickGet@currentTime	;volatile
 36745                           
 36746                           ; BSR set to: 0
 36747                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 36748   00B8A2  CFD7 F094          	movff	4055,tickGet@currentTime+1	;volatile
 36749                           
 36750                           ; BSR set to: 0
 36751                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = INTCONbits.TMR0IF;
 36752   00B8A6  0E00               	movlw	0
 36753   00B8A8  B4F2               	btfsc	242,2,c	;volatile
 36754   00B8AA  0E01               	movlw	1
 36755   00B8AC  6F91               	movwf	tickGet@IntFlag2& (0+255),b
 36756                           
 36757                           ; BSR set to: 0
 36758                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 36759   00B8AE  5191               	movf	tickGet@IntFlag2& (0+255),w,b
 36760   00B8B0  1992               	xorwf	tickGet@IntFlag1& (0+255),w,b
 36761   00B8B2  A4D8               	btfss	status,2,c
 36762   00B8B4  D7F0               	goto	l20627
 36763                           
 36764                           ; BSR set to: 0
 36765                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 36766   00B8B6  5192               	movf	tickGet@IntFlag1& (0+255),w,b
 36767   00B8B8  B4D8               	btfsc	status,2,c
 36768   00B8BA  D005               	goto	l20647
 36769                           
 36770                           ; BSR set to: 0
 36771                           ;../../VLCBlib_PIC/ticktime.c: 178:         INTCONbits.TMR0IF = 0;
 36772   00B8BC  94F2               	bcf	242,2,c	;volatile
 36773                           
 36774                           ; BSR set to: 0
 36775                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 36776   00B8BE  2BC6               	incf	_timerExtension1& (0+255),f,b	;volatile
 36777                           
 36778                           ; BSR set to: 0
 36779                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 36780   00B8C0  51C6               	movf	_timerExtension1& (0+255),w,b	;volatile
 36781   00B8C2  B4D8               	btfsc	status,2,c
 36782                           
 36783                           ; BSR set to: 0
 36784                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 36785   00B8C4  2BC5               	incf	_timerExtension2& (0+255),f,b	;volatile
 36786   00B8C6                     l20647:
 36787                           
 36788                           ; BSR set to: 0
 36789                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 36790   00B8C6  51C6               	movf	_timerExtension1& (0+255),w,b	;volatile
 36791   00B8C8  2795               	addwf	(tickGet@currentTime+2)& (0+255),f,b
 36792                           
 36793                           ; BSR set to: 0
 36794                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 36795   00B8CA  51C5               	movf	_timerExtension2& (0+255),w,b	;volatile
 36796   00B8CC  2796               	addwf	(tickGet@currentTime+3)& (0+255),f,b
 36797                           
 36798                           ; BSR set to: 0
 36799                           ;../../VLCBlib_PIC/ticktime.c: 191:     INTCONbits.TMR0IE = 1;
 36800   00B8CE  8AF2               	bsf	242,5,c	;volatile
 36801                           
 36802                           ; BSR set to: 0
 36803                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 36804   00B8D0  C093  F08D         	movff	tickGet@currentTime,?_tickGet
 36805   00B8D4  C094  F08E         	movff	tickGet@currentTime+1,?_tickGet+1
 36806   00B8D8  C095  F08F         	movff	tickGet@currentTime+2,?_tickGet+2
 36807   00B8DC  C096  F090         	movff	tickGet@currentTime+3,?_tickGet+3
 36808                           
 36809                           ; BSR set to: 0
 36810   00B8E0  0012               	return		;funcret
 36811   00B8E2                     __end_of_tickGet:
 36812                           	callstack 0
 36813                           
 36814 ;; *************** function ___lmul *****************
 36815 ;; Defined at:
 36816 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul32.c"
 36817 ;; Parameters:    Size  Location     Type
 36818 ;;  multiplier      4   49[BANK0 ] unsigned long 
 36819 ;;  multiplicand    4   53[BANK0 ] unsigned long 
 36820 ;; Auto vars:     Size  Location     Type
 36821 ;;  product         4   57[BANK0 ] unsigned long 
 36822 ;; Return value:  Size  Location     Type
 36823 ;;                  4   49[BANK0 ] unsigned long 
 36824 ;; Registers used:
 36825 ;;		wreg, status,2, status,0
 36826 ;; Tracked objects:
 36827 ;;		On entry : 0/0
 36828 ;;		On exit  : 0/0
 36829 ;;		Unchanged: 0/0
 36830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36831 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36832 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36834 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36835 ;;Total ram usage:       12 bytes
 36836 ;; Hardware stack levels used: 1
 36837 ;; Hardware stack levels required when called: 12
 36838 ;; This function calls:
 36839 ;;		Nothing
 36840 ;; This function is called by:
 36841 ;;		_loop
 36842 ;;		_doWait
 36843 ;;		_pbDownTimer
 36844 ;;		_pbUpTimer
 36845 ;;		_poll
 36846 ;; This function uses a non-reentrant model
 36847 ;;
 36848                           
 36849                           	psect	text147
 36850   00B8E2                     __ptext147:
 36851                           	callstack 0
 36852   00B8E2                     ___lmul:
 36853                           	callstack 17
 36854                           
 36855                           ; BSR set to: 0
 36856                           ;incstack = 0
 36857   00B8E2  0E00               	movlw	0
 36858   00B8E4  0100               	movlb	0	; () banked
 36859   00B8E6  6F99               	movwf	___lmul@product& (0+255),b
 36860   00B8E8  0E00               	movlw	0
 36861   00B8EA  6F9A               	movwf	(___lmul@product+1)& (0+255),b
 36862   00B8EC  0E00               	movlw	0
 36863   00B8EE  6F9B               	movwf	(___lmul@product+2)& (0+255),b
 36864   00B8F0  0E00               	movlw	0
 36865   00B8F2  6F9C               	movwf	(___lmul@product+3)& (0+255),b
 36866   00B8F4                     l21547:
 36867                           
 36868                           ; BSR set to: 0
 36869   00B8F4  A191               	btfss	___lmul@multiplier& (0+255),0,b
 36870   00B8F6  D008               	goto	l21551
 36871                           
 36872                           ; BSR set to: 0
 36873   00B8F8  5195               	movf	___lmul@multiplicand& (0+255),w,b
 36874   00B8FA  2799               	addwf	___lmul@product& (0+255),f,b
 36875   00B8FC  5196               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 36876   00B8FE  239A               	addwfc	(___lmul@product+1)& (0+255),f,b
 36877   00B900  5197               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 36878   00B902  239B               	addwfc	(___lmul@product+2)& (0+255),f,b
 36879   00B904  5198               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 36880   00B906  239C               	addwfc	(___lmul@product+3)& (0+255),f,b
 36881   00B908                     l21551:
 36882                           
 36883                           ; BSR set to: 0
 36884   00B908  90D8               	bcf	status,0,c
 36885   00B90A  3795               	rlcf	___lmul@multiplicand& (0+255),f,b
 36886   00B90C  3796               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 36887   00B90E  3797               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 36888   00B910  3798               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 36889                           
 36890                           ; BSR set to: 0
 36891   00B912  90D8               	bcf	status,0,c
 36892   00B914  3394               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 36893   00B916  3393               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 36894   00B918  3392               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 36895   00B91A  3391               	rrcf	___lmul@multiplier& (0+255),f,b
 36896   00B91C  5191               	movf	___lmul@multiplier& (0+255),w,b
 36897   00B91E  1192               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 36898   00B920  1193               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 36899   00B922  1194               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 36900   00B924  A4D8               	btfss	status,2,c
 36901   00B926  D7E6               	goto	l21547
 36902                           
 36903                           ; BSR set to: 0
 36904   00B928  C099  F091         	movff	___lmul@product,?___lmul
 36905   00B92C  C09A  F092         	movff	___lmul@product+1,?___lmul+1
 36906   00B930  C09B  F093         	movff	___lmul@product+2,?___lmul+2
 36907   00B934  C09C  F094         	movff	___lmul@product+3,?___lmul+3
 36908                           
 36909                           ; BSR set to: 0
 36910   00B938  0012               	return		;funcret
 36911   00B93A                     __end_of___lmul:
 36912                           	callstack 0
 36913                           
 36914 ;; *************** function ___lldiv *****************
 36915 ;; Defined at:
 36916 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__lldiv.c"
 36917 ;; Parameters:    Size  Location     Type
 36918 ;;  dividend        4   55[BANK0 ] unsigned long 
 36919 ;;  divisor         4   59[BANK0 ] unsigned long 
 36920 ;; Auto vars:     Size  Location     Type
 36921 ;;  quotient        4   63[BANK0 ] unsigned long 
 36922 ;;  counter         1   67[BANK0 ] unsigned char 
 36923 ;; Return value:  Size  Location     Type
 36924 ;;                  4   55[BANK0 ] unsigned long 
 36925 ;; Registers used:
 36926 ;;		wreg, status,2, status,0
 36927 ;; Tracked objects:
 36928 ;;		On entry : 0/0
 36929 ;;		On exit  : 0/0
 36930 ;;		Unchanged: 0/0
 36931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36932 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36933 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36935 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36936 ;;Total ram usage:       13 bytes
 36937 ;; Hardware stack levels used: 1
 36938 ;; Hardware stack levels required when called: 12
 36939 ;; This function calls:
 36940 ;;		Nothing
 36941 ;; This function is called by:
 36942 ;;		_pbDownTimer
 36943 ;;		_pbUpTimer
 36944 ;; This function uses a non-reentrant model
 36945 ;;
 36946                           
 36947                           	psect	text148
 36948   00AA02                     __ptext148:
 36949                           	callstack 0
 36950   00AA02                     ___lldiv:
 36951                           	callstack 16
 36952                           
 36953                           ; BSR set to: 0
 36954                           ;incstack = 0
 36955   00AA02  0E00               	movlw	0
 36956   00AA04  0100               	movlb	0	; () banked
 36957   00AA06  6F9F               	movwf	___lldiv@quotient& (0+255),b
 36958   00AA08  0E00               	movlw	0
 36959   00AA0A  6FA0               	movwf	(___lldiv@quotient+1)& (0+255),b
 36960   00AA0C  0E00               	movlw	0
 36961   00AA0E  6FA1               	movwf	(___lldiv@quotient+2)& (0+255),b
 36962   00AA10  0E00               	movlw	0
 36963   00AA12  6FA2               	movwf	(___lldiv@quotient+3)& (0+255),b
 36964                           
 36965                           ; BSR set to: 0
 36966   00AA14  519B               	movf	___lldiv@divisor& (0+255),w,b
 36967   00AA16  119C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 36968   00AA18  119D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 36969   00AA1A  119E               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 36970   00AA1C  B4D8               	btfsc	status,2,c
 36971   00AA1E  D02A               	goto	l3151
 36972                           
 36973                           ; BSR set to: 0
 36974   00AA20  0E01               	movlw	1
 36975   00AA22  6FA3               	movwf	___lldiv@counter& (0+255),b
 36976   00AA24  D006               	goto	l15647
 36977   00AA26                     l15645:
 36978                           
 36979                           ; BSR set to: 0
 36980   00AA26  90D8               	bcf	status,0,c
 36981   00AA28  379B               	rlcf	___lldiv@divisor& (0+255),f,b
 36982   00AA2A  379C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 36983   00AA2C  379D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 36984   00AA2E  379E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 36985   00AA30  2BA3               	incf	___lldiv@counter& (0+255),f,b
 36986   00AA32                     l15647:
 36987                           
 36988                           ; BSR set to: 0
 36989   00AA32  AF9E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 36990   00AA34  D7F8               	goto	l15645
 36991   00AA36                     u15510:
 36992                           
 36993                           ; BSR set to: 0
 36994   00AA36  90D8               	bcf	status,0,c
 36995   00AA38  379F               	rlcf	___lldiv@quotient& (0+255),f,b
 36996   00AA3A  37A0               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 36997   00AA3C  37A1               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 36998   00AA3E  37A2               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 36999                           
 37000                           ; BSR set to: 0
 37001   00AA40  519B               	movf	___lldiv@divisor& (0+255),w,b
 37002   00AA42  5D97               	subwf	___lldiv@dividend& (0+255),w,b
 37003   00AA44  519C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 37004   00AA46  5998               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 37005   00AA48  519D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 37006   00AA4A  5999               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 37007   00AA4C  519E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 37008   00AA4E  599A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 37009   00AA50  A0D8               	btfss	status,0,c
 37010   00AA52  D009               	goto	l15657
 37011                           
 37012                           ; BSR set to: 0
 37013   00AA54  519B               	movf	___lldiv@divisor& (0+255),w,b
 37014   00AA56  5F97               	subwf	___lldiv@dividend& (0+255),f,b
 37015   00AA58  519C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 37016   00AA5A  5B98               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 37017   00AA5C  519D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 37018   00AA5E  5B99               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 37019   00AA60  519E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 37020   00AA62  5B9A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 37021                           
 37022                           ; BSR set to: 0
 37023   00AA64  819F               	bsf	___lldiv@quotient& (0+255),0,b
 37024   00AA66                     l15657:
 37025                           
 37026                           ; BSR set to: 0
 37027   00AA66  90D8               	bcf	status,0,c
 37028   00AA68  339E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 37029   00AA6A  339D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 37030   00AA6C  339C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 37031   00AA6E  339B               	rrcf	___lldiv@divisor& (0+255),f,b
 37032                           
 37033                           ; BSR set to: 0
 37034   00AA70  2FA3               	decfsz	___lldiv@counter& (0+255),f,b
 37035   00AA72  D7E1               	goto	u15510
 37036   00AA74                     l3151:
 37037                           
 37038                           ; BSR set to: 0
 37039   00AA74  C09F  F097         	movff	___lldiv@quotient,?___lldiv
 37040   00AA78  C0A0  F098         	movff	___lldiv@quotient+1,?___lldiv+1
 37041   00AA7C  C0A1  F099         	movff	___lldiv@quotient+2,?___lldiv+2
 37042   00AA80  C0A2  F09A         	movff	___lldiv@quotient+3,?___lldiv+3
 37043                           
 37044                           ; BSR set to: 0
 37045   00AA84  0012               	return		;funcret
 37046   00AA86                     __end_of___lldiv:
 37047                           	callstack 0
 37048                           
 37049 ;; *************** function _factoryReset *****************
 37050 ;; Defined at:
 37051 ;;		line 857 in file "../../VLCBlib_PIC/vlcb.c"
 37052 ;; Parameters:    Size  Location     Type
 37053 ;;		None
 37054 ;; Auto vars:     Size  Location     Type
 37055 ;;  i               1   56[BANK1 ] unsigned char 
 37056 ;; Return value:  Size  Location     Type
 37057 ;;                  1    wreg      void 
 37058 ;; Registers used:
 37059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37060 ;; Tracked objects:
 37061 ;;		On entry : 0/0
 37062 ;;		On exit  : 0/0
 37063 ;;		Unchanged: 0/0
 37064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37066 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37067 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37068 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37069 ;;Total ram usage:        5 bytes
 37070 ;; Hardware stack levels used: 1
 37071 ;; Hardware stack levels required when called: 26
 37072 ;; This function calls:
 37073 ;;		NULL
 37074 ;;		_APP_factoryReset
 37075 ;;		_canFactoryReset
 37076 ;;		_mnsFactoryReset
 37077 ;;		_nvFactoryReset
 37078 ;;		_teachFactoryReset
 37079 ;;		_writeNVM
 37080 ;; This function is called by:
 37081 ;;		_mnsProcessMessage
 37082 ;;		_checkPowerOnPb
 37083 ;;		_main
 37084 ;; This function uses a non-reentrant model
 37085 ;;
 37086                           
 37087                           	psect	text149
 37088   00879C                     __ptext149:
 37089                           	callstack 0
 37090   00879C                     _factoryReset:
 37091                           	callstack 2
 37092                           
 37093                           ;../../VLCBlib_PIC/vlcb.c: 858:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 860:     for (i
      +                          =0; i<9; i++) {
 37094                           
 37095                           ; BSR set to: 0
 37096                           ;incstack = 0
 37097   00879C  0E00               	movlw	0
 37098   00879E  0101               	movlb	1	; () banked
 37099   0087A0  6FF6               	movwf	factoryReset@i& (0+255),b
 37100   0087A2                     l22363:
 37101                           
 37102                           ; BSR set to: 1
 37103                           ;../../VLCBlib_PIC/vlcb.c: 861:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >factoryReset != ((void*)0))) {
 37104   0087A2  51F6               	movf	factoryReset@i& (0+255),w,b
 37105   0087A4  0D02               	mullw	2
 37106   0087A6  0E69               	movlw	low _services
 37107   0087A8  24F3               	addwf	243,w,c
 37108   0087AA  6EF6               	movwf	tblptrl,c
 37109   0087AC  0EEE               	movlw	high _services
 37110   0087AE  20F4               	addwfc	244,w,c
 37111   0087B0  6EF7               	movwf	tblptrh,c
 37112   0087B2                     	if	1	;There are 3 active tblptr bytes
 37113   0087B2  6AF8               	clrf	tblptru,c
 37114   0087B4  0E00               	movlw	low (__mediumconst shr (0+16))
 37115   0087B6  22F8               	addwfc	tblptru,f,c
 37116   0087B8                     	endif
 37117   0087B8  0009               	tblrd		*+
 37118   0087BA  50F5               	movf	tablat,w,c
 37119   0087BC  0009               	tblrd		*+
 37120   0087BE  10F5               	iorwf	tablat,w,c
 37121   0087C0  B4D8               	btfsc	status,2,c
 37122   0087C2  D04B               	goto	u23919
 37123                           
 37124                           ; BSR set to: 1
 37125   0087C4  51F6               	movf	factoryReset@i& (0+255),w,b
 37126   0087C6  0D02               	mullw	2
 37127   0087C8  0E69               	movlw	low _services
 37128   0087CA  24F3               	addwf	243,w,c
 37129   0087CC  6EF6               	movwf	tblptrl,c
 37130   0087CE  0EEE               	movlw	high _services
 37131   0087D0  20F4               	addwfc	244,w,c
 37132   0087D2  6EF7               	movwf	tblptrh,c
 37133   0087D4                     	if	1	;There are 3 active tblptr bytes
 37134   0087D4  6AF8               	clrf	tblptru,c
 37135   0087D6  0E00               	movlw	low (__mediumconst shr (0+16))
 37136   0087D8  22F8               	addwfc	tblptru,f,c
 37137   0087DA                     	endif
 37138   0087DA  0009               	tblrd		*+
 37139   0087DC  CFF5 F1F2          	movff	tablat,??_factoryReset
 37140   0087E0  0009               	tblrd		*+
 37141   0087E2  CFF5 F1F3          	movff	tablat,??_factoryReset+1
 37142   0087E6  0E02               	movlw	2
 37143   0087E8  27F2               	addwf	??_factoryReset& (0+255),f,b
 37144   0087EA  0E00               	movlw	0
 37145   0087EC  23F3               	addwfc	(??_factoryReset+1)& (0+255),f,b
 37146   0087EE  C1F2  FFF6         	movff	??_factoryReset,tblptrl
 37147   0087F2  C1F3  FFF7         	movff	??_factoryReset+1,tblptrh
 37148   0087F6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37149   0087F6  6AF8               	clrf	tblptru,c
 37150   0087F8                     	endif
 37151   0087F8                     	if	0	;tblptru may be non-zero
 37152   0087F8                     	endif
 37153   0087F8  0009               	tblrd		*+
 37154   0087FA  50F5               	movf	tablat,w,c
 37155   0087FC  0009               	tblrd		*+
 37156   0087FE  10F5               	iorwf	tablat,w,c
 37157   008800  B4D8               	btfsc	status,2,c
 37158   008802  D02B               	goto	u23919
 37159                           
 37160                           ; BSR set to: 1
 37161                           ;../../VLCBlib_PIC/vlcb.c: 862:             services[i]->factoryReset();
 37162   008804  51F6               	movf	factoryReset@i& (0+255),w,b
 37163   008806  0D02               	mullw	2
 37164   008808  0E69               	movlw	low _services
 37165   00880A  24F3               	addwf	243,w,c
 37166   00880C  6EF6               	movwf	tblptrl,c
 37167   00880E  0EEE               	movlw	high _services
 37168   008810  20F4               	addwfc	244,w,c
 37169   008812  6EF7               	movwf	tblptrh,c
 37170   008814                     	if	1	;There are 3 active tblptr bytes
 37171   008814  6AF8               	clrf	tblptru,c
 37172   008816  0E00               	movlw	low (__mediumconst shr (0+16))
 37173   008818  22F8               	addwfc	tblptru,f,c
 37174   00881A                     	endif
 37175   00881A  0009               	tblrd		*+
 37176   00881C  CFF5 F1F2          	movff	tablat,??_factoryReset
 37177   008820  0009               	tblrd		*+
 37178   008822  CFF5 F1F3          	movff	tablat,??_factoryReset+1
 37179   008826  0E02               	movlw	2
 37180   008828  27F2               	addwf	??_factoryReset& (0+255),f,b
 37181   00882A  0E00               	movlw	0
 37182   00882C  23F3               	addwfc	(??_factoryReset+1)& (0+255),f,b
 37183   00882E  C1F2  FFF6         	movff	??_factoryReset,tblptrl
 37184   008832  C1F3  FFF7         	movff	??_factoryReset+1,tblptrh
 37185   008836                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37186   008836  6AF8               	clrf	tblptru,c
 37187   008838                     	endif
 37188   008838                     	if	0	;tblptru may be non-zero
 37189   008838                     	endif
 37190   008838  0009               	tblrd		*+
 37191   00883A  CFF5 F1F4          	movff	tablat,??_factoryReset+2
 37192   00883E  0009               	tblrd		*+
 37193   008840  CFF5 F1F5          	movff	tablat,??_factoryReset+3
 37194   008844  D801               	call	u23918
 37195   008846  D009               	goto	u23919
 37196   008848                     u23918:
 37197   008848  0005               	push	
 37198   00884A  6EFA               	movwf	pclath,c
 37199   00884C  51F4               	movf	(??_factoryReset+2)& (0+255),w,b
 37200   00884E  6EFD               	movwf	tosl,c
 37201   008850  51F5               	movf	(??_factoryReset+3)& (0+255),w,b
 37202   008852  6EFE               	movwf	tosh,c
 37203   008854  6AFF               	clrf	tosu,c
 37204   008856  50FA               	movf	pclath,w,c
 37205   008858  0012               	return		;indir
 37206   00885A                     u23919:
 37207                           
 37208                           ;../../VLCBlib_PIC/vlcb.c: 864:     }
 37209   00885A  0101               	movlb	1	; () banked
 37210   00885C  2BF6               	incf	factoryReset@i& (0+255),f,b
 37211                           
 37212                           ; BSR set to: 1
 37213   00885E  0E08               	movlw	8
 37214   008860  65F6               	cpfsgt	factoryReset@i& (0+255),b
 37215   008862  D79F               	goto	l22363
 37216                           
 37217                           ; BSR set to: 1
 37218                           ;../../VLCBlib_PIC/vlcb.c: 866:     writeNVM(EEPROM_NVM_TYPE, 0x3FA, 1);
 37219   008864  0EFA               	movlw	250
 37220   008866  0100               	movlb	0	; () banked
 37221   008868  6FA4               	movwf	writeNVM@index& (0+255),b
 37222   00886A  0E03               	movlw	3
 37223   00886C  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 37224   00886E  0E00               	movlw	0
 37225   008870  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 37226   008872  0E01               	movlw	1
 37227   008874  6FA7               	movwf	writeNVM@value& (0+255),b
 37228   008876  0E00               	movlw	0
 37229   008878  ECC1  F05D         	call	_writeNVM
 37230                           
 37231                           ;../../VLCBlib_PIC/vlcb.c: 868:     APP_factoryReset();
 37232   00887C  EC4C  F063         	call	_APP_factoryReset	;wreg free
 37233   008880  0012               	return		;funcret
 37234   008882                     __end_of_factoryReset:
 37235                           	callstack 0
 37236                           
 37237 ;; *************** function _canFactoryReset *****************
 37238 ;; Defined at:
 37239 ;;		line 204 in file "../../VLCBlib_PIC/can18_ecan.c"
 37240 ;; Parameters:    Size  Location     Type
 37241 ;;		None
 37242 ;; Auto vars:     Size  Location     Type
 37243 ;;		None
 37244 ;; Return value:  Size  Location     Type
 37245 ;;                  1    wreg      void 
 37246 ;; Registers used:
 37247 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37248 ;; Tracked objects:
 37249 ;;		On entry : 0/0
 37250 ;;		On exit  : 0/0
 37251 ;;		Unchanged: 0/0
 37252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37257 ;;Total ram usage:        0 bytes
 37258 ;; Hardware stack levels used: 1
 37259 ;; Hardware stack levels required when called: 18
 37260 ;; This function calls:
 37261 ;;		_writeNVM
 37262 ;; This function is called by:
 37263 ;;		_factoryReset
 37264 ;; This function uses a non-reentrant model
 37265 ;;
 37266                           
 37267                           	psect	text150
 37268   00C760                     __ptext150:
 37269                           	callstack 0
 37270   00C760                     _canFactoryReset:
 37271                           	callstack 9
 37272                           
 37273                           ;../../VLCBlib_PIC/can18_ecan.c: 205:     canId = 0;
 37274                           
 37275                           ;incstack = 0
 37276   00C760  0E00               	movlw	0
 37277   00C762  0100               	movlb	0	; () banked
 37278   00C764  6FB9               	movwf	_canId& (0+255),b
 37279                           
 37280                           ; BSR set to: 0
 37281                           ;../../VLCBlib_PIC/can18_ecan.c: 206:     writeNVM(EEPROM_NVM_TYPE, 0x3FE, canId);
 37282   00C766  0EFE               	movlw	254
 37283   00C768  6FA4               	movwf	writeNVM@index& (0+255),b
 37284   00C76A  0E03               	movlw	3
 37285   00C76C  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 37286   00C76E  0E00               	movlw	0
 37287   00C770  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 37288   00C772  C0B9  F0A7         	movff	_canId,writeNVM@value
 37289   00C776  0E00               	movlw	0
 37290   00C778  ECC1  F05D         	call	_writeNVM
 37291   00C77C  0012               	return		;funcret
 37292   00C77E                     __end_of_canFactoryReset:
 37293                           	callstack 0
 37294                           
 37295 ;; *************** function _nvFactoryReset *****************
 37296 ;; Defined at:
 37297 ;;		line 126 in file "../../VLCBlib_PIC/nv.c"
 37298 ;; Parameters:    Size  Location     Type
 37299 ;;		None
 37300 ;; Auto vars:     Size  Location     Type
 37301 ;;  i               1    3[BANK1 ] unsigned char 
 37302 ;; Return value:  Size  Location     Type
 37303 ;;                  1    wreg      void 
 37304 ;; Registers used:
 37305 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37306 ;; Tracked objects:
 37307 ;;		On entry : 0/0
 37308 ;;		On exit  : 0/0
 37309 ;;		Unchanged: 0/0
 37310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37312 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37313 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37314 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37315 ;;Total ram usage:        3 bytes
 37316 ;; Hardware stack levels used: 1
 37317 ;; Hardware stack levels required when called: 18
 37318 ;; This function calls:
 37319 ;;		_APP_nvDefault
 37320 ;;		_writeNVM
 37321 ;; This function is called by:
 37322 ;;		_factoryReset
 37323 ;; This function uses a non-reentrant model
 37324 ;;
 37325                           
 37326                           	psect	text151
 37327   00C01E                     __ptext151:
 37328                           	callstack 0
 37329   00C01E                     _nvFactoryReset:
 37330                           	callstack 9
 37331                           
 37332                           ;../../VLCBlib_PIC/nv.c: 127:     uint8_t i;;../../VLCBlib_PIC/nv.c: 128:     for (i=1; 
      +                          i<= (15+7*16); i++) {
 37333                           
 37334                           ;incstack = 0
 37335   00C01E  0E01               	movlw	1
 37336   00C020  0101               	movlb	1	; () banked
 37337   00C022  6FC1               	movwf	nvFactoryReset@i& (0+255),b
 37338   00C024                     l21343:
 37339                           
 37340                           ; BSR set to: 1
 37341                           ;../../VLCBlib_PIC/nv.c: 129:         writeNVM(FLASH_NVM_TYPE, 0xFF80 +i, APP_nvDefault(
      +                          i));
 37342   00C024  0E80               	movlw	128
 37343   00C026  25C1               	addwf	nvFactoryReset@i& (0+255),w,b
 37344   00C028  6FBF               	movwf	??_nvFactoryReset& (0+255),b
 37345   00C02A  6BC0               	clrf	(??_nvFactoryReset+1)& (0+255),b
 37346   00C02C  0EFF               	movlw	255
 37347   00C02E  23C0               	addwfc	(??_nvFactoryReset+1)& (0+255),f,b
 37348   00C030  C1BF  F0A4         	movff	??_nvFactoryReset,writeNVM@index
 37349   00C034  C1C0  F0A5         	movff	??_nvFactoryReset+1,writeNVM@index+1
 37350   00C038  0100               	movlb	0	; () banked
 37351   00C03A  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 37352   00C03C  0101               	movlb	1	; () banked
 37353   00C03E  51C1               	movf	nvFactoryReset@i& (0+255),w,b
 37354   00C040  EC46  F047         	call	_APP_nvDefault
 37355   00C044  0100               	movlb	0	; () banked
 37356   00C046  6FA7               	movwf	writeNVM@value& (0+255),b
 37357   00C048  0E01               	movlw	1
 37358   00C04A  ECC1  F05D         	call	_writeNVM
 37359                           
 37360                           ;../../VLCBlib_PIC/nv.c: 130:     }
 37361   00C04E  0101               	movlb	1	; () banked
 37362   00C050  2BC1               	incf	nvFactoryReset@i& (0+255),f,b
 37363                           
 37364                           ; BSR set to: 1
 37365   00C052  0E7F               	movlw	127
 37366   00C054  65C1               	cpfsgt	nvFactoryReset@i& (0+255),b
 37367   00C056  D7E6               	goto	l21343
 37368   00C058  0012               	return	
 37369   00C05A                     __end_of_nvFactoryReset:
 37370                           	callstack 0
 37371                           
 37372 ;; *************** function _mnsFactoryReset *****************
 37373 ;; Defined at:
 37374 ;;		line 280 in file "../../VLCBlib_PIC/mns.c"
 37375 ;; Parameters:    Size  Location     Type
 37376 ;;		None
 37377 ;; Auto vars:     Size  Location     Type
 37378 ;;		None
 37379 ;; Return value:  Size  Location     Type
 37380 ;;                  1    wreg      void 
 37381 ;; Registers used:
 37382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37383 ;; Tracked objects:
 37384 ;;		On entry : 0/0
 37385 ;;		On exit  : 0/0
 37386 ;;		Unchanged: 0/0
 37387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37392 ;;Total ram usage:        0 bytes
 37393 ;; Hardware stack levels used: 1
 37394 ;; Hardware stack levels required when called: 18
 37395 ;; This function calls:
 37396 ;;		_writeNVM
 37397 ;; This function is called by:
 37398 ;;		_factoryReset
 37399 ;; This function uses a non-reentrant model
 37400 ;;
 37401                           
 37402                           	psect	text152
 37403   00AE6E                     __ptext152:
 37404                           	callstack 0
 37405   00AE6E                     _mnsFactoryReset:
 37406                           	callstack 9
 37407                           
 37408                           ;../../VLCBlib_PIC/mns.c: 281:     nn.bytes.hi = 0;
 37409                           
 37410                           ; BSR set to: 1
 37411                           ;incstack = 0
 37412   00AE6E  0E00               	movlw	0
 37413   00AE70  0100               	movlb	0	; () banked
 37414   00AE72  6FB5               	movwf	(_nn+1)& (0+255),b
 37415                           
 37416                           ;../../VLCBlib_PIC/mns.c: 282:     nn.bytes.lo = 0;
 37417   00AE74  0E00               	movlw	0
 37418   00AE76  6FB4               	movwf	_nn& (0+255),b
 37419                           
 37420                           ; BSR set to: 0
 37421                           ;../../VLCBlib_PIC/mns.c: 283:     writeNVM(EEPROM_NVM_TYPE, 0x3FC +1, nn.bytes.hi);
 37422   00AE78  0EFD               	movlw	253
 37423   00AE7A  6FA4               	movwf	writeNVM@index& (0+255),b
 37424   00AE7C  0E03               	movlw	3
 37425   00AE7E  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 37426   00AE80  0E00               	movlw	0
 37427   00AE82  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 37428   00AE84  C0B5  F0A7         	movff	_nn+1,writeNVM@value
 37429   00AE88  0E00               	movlw	0
 37430   00AE8A  ECC1  F05D         	call	_writeNVM
 37431                           
 37432                           ;../../VLCBlib_PIC/mns.c: 284:     writeNVM(EEPROM_NVM_TYPE, 0x3FC, nn.bytes.lo);
 37433   00AE8E  0EFC               	movlw	252
 37434   00AE90  0100               	movlb	0	; () banked
 37435   00AE92  6FA4               	movwf	writeNVM@index& (0+255),b
 37436   00AE94  0E03               	movlw	3
 37437   00AE96  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 37438   00AE98  0E00               	movlw	0
 37439   00AE9A  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 37440   00AE9C  C0B4  F0A7         	movff	_nn,writeNVM@value
 37441   00AEA0  0E00               	movlw	0
 37442   00AEA2  ECC1  F05D         	call	_writeNVM
 37443                           
 37444                           ;../../VLCBlib_PIC/mns.c: 286:     last_mode_state = mode_state = MODE_UNINITIALISED;
 37445   00AEA6  0100               	movlb	0	; () banked
 37446   00AEA8  69C4               	setf	_mode_state& (0+255),b
 37447   00AEAA  69C3               	setf	_last_mode_state& (0+255),b
 37448                           
 37449                           ; BSR set to: 0
 37450                           ;../../VLCBlib_PIC/mns.c: 287:     writeNVM(EEPROM_NVM_TYPE, 0x3FB, mode_state);
 37451   00AEAC  0EFB               	movlw	251
 37452   00AEAE  6FA4               	movwf	writeNVM@index& (0+255),b
 37453   00AEB0  0E03               	movlw	3
 37454   00AEB2  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 37455   00AEB4  0E00               	movlw	0
 37456   00AEB6  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 37457   00AEB8  C0C4  F0A7         	movff	_mode_state,writeNVM@value
 37458   00AEBC  0E00               	movlw	0
 37459   00AEBE  ECC1  F05D         	call	_writeNVM
 37460                           
 37461                           ;../../VLCBlib_PIC/mns.c: 290:     last_mode_flags = mode_flags = 0;
 37462   00AEC2  0E00               	movlw	0
 37463   00AEC4  0101               	movlb	1	; () banked
 37464   00AEC6  6F65               	movwf	_mode_flags& (0+255),b
 37465   00AEC8  C165  F0C2         	movff	_mode_flags,_last_mode_flags
 37466                           
 37467                           ;../../VLCBlib_PIC/mns.c: 291:     writeNVM(EEPROM_NVM_TYPE, 0x3F9, mode_flags);
 37468   00AECC  0EF9               	movlw	249
 37469   00AECE  0100               	movlb	0	; () banked
 37470   00AED0  6FA4               	movwf	writeNVM@index& (0+255),b
 37471   00AED2  0E03               	movlw	3
 37472   00AED4  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 37473   00AED6  0E00               	movlw	0
 37474   00AED8  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 37475   00AEDA  C165  F0A7         	movff	_mode_flags,writeNVM@value
 37476   00AEDE  0E00               	movlw	0
 37477   00AEE0  ECC1  F05D         	call	_writeNVM
 37478   00AEE4  0012               	return		;funcret
 37479   00AEE6                     __end_of_mnsFactoryReset:
 37480                           	callstack 0
 37481                           
 37482 ;; *************** function _teachFactoryReset *****************
 37483 ;; Defined at:
 37484 ;;		line 354 in file "../../VLCBlib_PIC/event_teach_large.c"
 37485 ;; Parameters:    Size  Location     Type
 37486 ;;		None
 37487 ;; Auto vars:     Size  Location     Type
 37488 ;;		None
 37489 ;; Return value:  Size  Location     Type
 37490 ;;                  1    wreg      void 
 37491 ;; Registers used:
 37492 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37493 ;; Tracked objects:
 37494 ;;		On entry : 0/0
 37495 ;;		On exit  : 0/0
 37496 ;;		Unchanged: 0/0
 37497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37502 ;;Total ram usage:        0 bytes
 37503 ;; Hardware stack levels used: 1
 37504 ;; Hardware stack levels required when called: 19
 37505 ;; This function calls:
 37506 ;;		_clearAllEvents
 37507 ;; This function is called by:
 37508 ;;		_factoryReset
 37509 ;; This function uses a non-reentrant model
 37510 ;;
 37511                           
 37512                           	psect	text153
 37513   00C920                     __ptext153:
 37514                           	callstack 0
 37515   00C920                     _teachFactoryReset:
 37516                           	callstack 8
 37517                           
 37518                           ;../../VLCBlib_PIC/event_teach_large.c: 355:     clearAllEvents();
 37519                           
 37520                           ;incstack = 0
 37521   00C920  ECF4  F05C         	call	_clearAllEvents	;wreg free
 37522   00C924  0012               	return		;funcret
 37523   00C926                     __end_of_teachFactoryReset:
 37524                           	callstack 0
 37525                           
 37526 ;; *************** function _clearAllEvents *****************
 37527 ;; Defined at:
 37528 ;;		line 560 in file "../../VLCBlib_PIC/event_teach_large.c"
 37529 ;; Parameters:    Size  Location     Type
 37530 ;;		None
 37531 ;; Auto vars:     Size  Location     Type
 37532 ;;  tableIndex      1   13[BANK1 ] unsigned char 
 37533 ;; Return value:  Size  Location     Type
 37534 ;;                  1    wreg      void 
 37535 ;; Registers used:
 37536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37537 ;; Tracked objects:
 37538 ;;		On entry : 0/0
 37539 ;;		On exit  : 0/0
 37540 ;;		Unchanged: 0/0
 37541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37543 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37544 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37545 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37546 ;;Total ram usage:        5 bytes
 37547 ;; Hardware stack levels used: 1
 37548 ;; Hardware stack levels required when called: 18
 37549 ;; This function calls:
 37550 ;;		_flushFlashBlock
 37551 ;;		_rebuildHashtable
 37552 ;;		_writeNVM
 37553 ;; This function is called by:
 37554 ;;		_teachFactoryReset
 37555 ;;		_doNnclr
 37556 ;; This function uses a non-reentrant model
 37557 ;;
 37558                           
 37559                           	psect	text154
 37560   00B9E8                     __ptext154:
 37561                           	callstack 0
 37562   00B9E8                     _clearAllEvents:
 37563                           	callstack 9
 37564                           
 37565                           ;../../VLCBlib_PIC/event_teach_large.c: 561:     uint8_t tableIndex;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 562:     for (tableIndex=0; tableIndex<255; tableIndex++) {
 37566                           
 37567                           ;incstack = 0
 37568   00B9E8  0E00               	movlw	0
 37569   00B9EA  0101               	movlb	1	; () banked
 37570   00B9EC  6FCB               	movwf	clearAllEvents@tableIndex& (0+255),b
 37571   00B9EE                     l20491:
 37572                           
 37573                           ; BSR set to: 1
 37574                           ;../../VLCBlib_PIC/event_teach_large.c: 564:         writeNVM(FLASH_NVM_TYPE, 0xEF80 + 1
      +                          6*tableIndex + 0, 0xff);
 37575   00B9EE  51CB               	movf	clearAllEvents@tableIndex& (0+255),w,b
 37576   00B9F0  6FC7               	movwf	??_clearAllEvents& (0+255),b
 37577   00B9F2  6BC8               	clrf	(??_clearAllEvents+1)& (0+255),b
 37578   00B9F4  3BC7               	swapf	??_clearAllEvents& (0+255),f,b
 37579   00B9F6  3BC8               	swapf	(??_clearAllEvents+1)& (0+255),f,b
 37580   00B9F8  0EF0               	movlw	240
 37581   00B9FA  17C8               	andwf	(??_clearAllEvents+1)& (0+255),f,b
 37582   00B9FC  51C7               	movf	??_clearAllEvents& (0+255),w,b
 37583   00B9FE  0B0F               	andlw	15
 37584   00BA00  13C8               	iorwf	(??_clearAllEvents+1)& (0+255),f,b
 37585   00BA02  0EF0               	movlw	240
 37586   00BA04  17C7               	andwf	??_clearAllEvents& (0+255),f,b
 37587   00BA06  0E80               	movlw	128
 37588   00BA08  25C7               	addwf	??_clearAllEvents& (0+255),w,b
 37589   00BA0A  6FC9               	movwf	(??_clearAllEvents+2)& (0+255),b
 37590   00BA0C  0EEF               	movlw	239
 37591   00BA0E  21C8               	addwfc	(??_clearAllEvents+1)& (0+255),w,b
 37592   00BA10  6FCA               	movwf	(??_clearAllEvents+3)& (0+255),b
 37593   00BA12  C1C9  F0A4         	movff	??_clearAllEvents+2,writeNVM@index
 37594   00BA16  C1CA  F0A5         	movff	??_clearAllEvents+3,writeNVM@index+1
 37595   00BA1A  0100               	movlb	0	; () banked
 37596   00BA1C  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 37597   00BA1E  0EFF               	movlw	255
 37598   00BA20  6FA7               	movwf	writeNVM@value& (0+255),b
 37599   00BA22  0E01               	movlw	1
 37600   00BA24  ECC1  F05D         	call	_writeNVM
 37601                           
 37602                           ;../../VLCBlib_PIC/event_teach_large.c: 565:     }
 37603   00BA28  0101               	movlb	1	; () banked
 37604   00BA2A  2BCB               	incf	clearAllEvents@tableIndex& (0+255),f,b
 37605                           
 37606                           ; BSR set to: 1
 37607   00BA2C  29CB               	incf	clearAllEvents@tableIndex& (0+255),w,b
 37608   00BA2E  A4D8               	btfss	status,2,c
 37609   00BA30  D7DE               	goto	l20491
 37610                           
 37611                           ; BSR set to: 1
 37612                           ;../../VLCBlib_PIC/event_teach_large.c: 566:     flushFlashBlock();
 37613   00BA32  ECBE  F054         	call	_flushFlashBlock	;wreg free
 37614                           
 37615                           ;../../VLCBlib_PIC/event_teach_large.c: 568:     rebuildHashtable();
 37616   00BA36  ECAC  F03F         	call	_rebuildHashtable	;wreg free
 37617   00BA3A  0012               	return		;funcret
 37618   00BA3C                     __end_of_clearAllEvents:
 37619                           	callstack 0
 37620                           
 37621 ;; *************** function _APP_nvDefault *****************
 37622 ;; Defined at:
 37623 ;;		line 73 in file "../universalNv.c"
 37624 ;; Parameters:    Size  Location     Type
 37625 ;;  index           1    wreg     unsigned char 
 37626 ;; Auto vars:     Size  Location     Type
 37627 ;;  index           1   67[BANK0 ] unsigned char 
 37628 ;; Return value:  Size  Location     Type
 37629 ;;                  1    wreg      unsigned char 
 37630 ;; Registers used:
 37631 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37632 ;; Tracked objects:
 37633 ;;		On entry : 0/0
 37634 ;;		On exit  : 0/0
 37635 ;;		Unchanged: 0/0
 37636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37638 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37639 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37640 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37641 ;;Total ram usage:        5 bytes
 37642 ;; Hardware stack levels used: 1
 37643 ;; Hardware stack levels required when called: 13
 37644 ;; This function calls:
 37645 ;;		___awdiv
 37646 ;;		___awmod
 37647 ;;		___wmul
 37648 ;; This function is called by:
 37649 ;;		_nvFactoryReset
 37650 ;; This function uses a non-reentrant model
 37651 ;;
 37652                           
 37653                           	psect	text155
 37654   008E8C                     __ptext155:
 37655                           	callstack 0
 37656   008E8C                     _APP_nvDefault:
 37657                           	callstack 13
 37658                           
 37659                           ;incstack = 0
 37660                           ;APP_nvDefault@index stored from wreg
 37661   008E8C  0100               	movlb	0	; () banked
 37662   008E8E  6FA3               	movwf	APP_nvDefault@index& (0+255),b
 37663                           
 37664                           ;../universalNv.c: 74:     if (index < 16) {
 37665   008E90  0E10               	movlw	16
 37666   008E92  0100               	movlb	0	; () banked
 37667   008E94  61A3               	cpfslt	APP_nvDefault@index& (0+255),b
 37668   008E96  D02A               	goto	l20319
 37669   008E98  D00C               	goto	l20317
 37670   008E9A                     l20283:
 37671                           
 37672                           ; BSR set to: 0
 37673                           ;../universalNv.c: 78:                 return 0;
 37674   008E9A  0E00               	movlw	0
 37675   008E9C  0012               	return	
 37676   008E9E                     l20291:
 37677                           
 37678                           ; BSR set to: 0
 37679                           ;../universalNv.c: 82:                 return 234;
 37680   008E9E  0EEA               	movlw	234
 37681   008EA0  0012               	return	
 37682   008EA2                     l20295:
 37683                           
 37684                           ; BSR set to: 0
 37685                           ;../universalNv.c: 84:                 return 0x33;
 37686   008EA2  0E33               	movlw	51
 37687   008EA4  0012               	return	
 37688   008EA6                     l20299:
 37689                           
 37690                           ; BSR set to: 0
 37691                           ;../universalNv.c: 86:                 return 2;
 37692   008EA6  0E02               	movlw	2
 37693   008EA8  0012               	return	
 37694   008EAA                     l20303:
 37695                           
 37696                           ; BSR set to: 0
 37697                           ;../universalNv.c: 90:                 return 0xFF;
 37698   008EAA  0EFF               	movlw	255
 37699   008EAC  0012               	return	
 37700   008EAE                     l20307:
 37701                           
 37702                           ; BSR set to: 0
 37703                           ;../universalNv.c: 92:                 return 20;
 37704   008EAE  0E14               	movlw	20
 37705   008EB0  0012               	return	
 37706   008EB2                     l20317:
 37707                           
 37708                           ; BSR set to: 0
 37709   008EB2  51A3               	movf	APP_nvDefault@index& (0+255),w,b
 37710                           
 37711                           ; Switch size 1, requested type "simple"
 37712                           ; Number of cases is 9, Range of values is 1 to 9
 37713                           ; switch strategies available:
 37714                           ; Name         Instructions Cycles
 37715                           ; simple_byte           28    15 (average)
 37716                           ;	Chosen strategy is simple_byte
 37717   008EB4  0A01               	xorlw	1	; case 1
 37718   008EB6  B4D8               	btfsc	status,2,c
 37719   008EB8  D7F0               	goto	l20283
 37720   008EBA  0A03               	xorlw	3	; case 2
 37721   008EBC  B4D8               	btfsc	status,2,c
 37722   008EBE  D7ED               	goto	l20283
 37723   008EC0  0A01               	xorlw	1	; case 3
 37724   008EC2  B4D8               	btfsc	status,2,c
 37725   008EC4  D7EC               	goto	l20291
 37726   008EC6  0A07               	xorlw	7	; case 4
 37727   008EC8  B4D8               	btfsc	status,2,c
 37728   008ECA  D7EB               	goto	l20295
 37729   008ECC  0A01               	xorlw	1	; case 5
 37730   008ECE  B4D8               	btfsc	status,2,c
 37731   008ED0  D7EA               	goto	l20299
 37732   008ED2  0A03               	xorlw	3	; case 6
 37733   008ED4  B4D8               	btfsc	status,2,c
 37734   008ED6  D7E9               	goto	l20303
 37735   008ED8  0A01               	xorlw	1	; case 7
 37736   008EDA  B4D8               	btfsc	status,2,c
 37737   008EDC  D7E6               	goto	l20303
 37738   008EDE  0A0F               	xorlw	15	; case 8
 37739   008EE0  B4D8               	btfsc	status,2,c
 37740   008EE2  D7E3               	goto	l20303
 37741   008EE4  0A01               	xorlw	1	; case 9
 37742   008EE6  B4D8               	btfsc	status,2,c
 37743   008EE8  D7E2               	goto	l20307
 37744   008EEA  D7D7               	goto	l20283
 37745   008EEC                     l20319:
 37746                           
 37747                           ; BSR set to: 0
 37748                           ;../universalNv.c: 98:     return channelDefaultNVs[(((uint8_t)((index-16)/7)) < 8) ? 0 
      +                          : 0][(index-16) % 7];
 37749   008EEC  0EF0               	movlw	240
 37750   008EEE  25A3               	addwf	APP_nvDefault@index& (0+255),w,b
 37751   008EF0  6F97               	movwf	___awdiv@dividend& (0+255),b
 37752   008EF2  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 37753   008EF4  0EFF               	movlw	255
 37754   008EF6  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 37755   008EF8  0E00               	movlw	0
 37756   008EFA  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 37757   008EFC  0E07               	movlw	7
 37758   008EFE  6F99               	movwf	___awdiv@divisor& (0+255),b
 37759   008F00  EC7B  F054         	call	___awdiv	;wreg free
 37760   008F04  0E00               	movlw	0
 37761   008F06  0100               	movlb	0	; () banked
 37762   008F08  6F92               	movwf	(___wmul@multiplier+1)& (0+255),b
 37763   008F0A  0E00               	movlw	0
 37764   008F0C  6F91               	movwf	___wmul@multiplier& (0+255),b
 37765   008F0E  0E00               	movlw	0
 37766   008F10  6F94               	movwf	(___wmul@multiplicand+1)& (0+255),b
 37767   008F12  0E07               	movlw	7
 37768   008F14  6F93               	movwf	___wmul@multiplicand& (0+255),b
 37769   008F16  ECB5  F062         	call	___wmul	;wreg free
 37770   008F1A  0E8B               	movlw	low _channelDefaultNVs
 37771   008F1C  0100               	movlb	0	; () banked
 37772   008F1E  2591               	addwf	?___wmul& (0+255),w,b
 37773   008F20  6F9F               	movwf	??_APP_nvDefault& (0+255),b
 37774   008F22  0EEE               	movlw	high _channelDefaultNVs
 37775   008F24  2192               	addwfc	(?___wmul+1)& (0+255),w,b
 37776   008F26  6FA0               	movwf	(??_APP_nvDefault+1)& (0+255),b
 37777   008F28  0EF0               	movlw	240
 37778   008F2A  25A3               	addwf	APP_nvDefault@index& (0+255),w,b
 37779   008F2C  6F8D               	movwf	___awmod@dividend& (0+255),b
 37780   008F2E  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 37781   008F30  0EFF               	movlw	255
 37782   008F32  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 37783   008F34  0E00               	movlw	0
 37784   008F36  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 37785   008F38  0E07               	movlw	7
 37786   008F3A  6F8F               	movwf	___awmod@divisor& (0+255),b
 37787   008F3C  EC90  F058         	call	___awmod	;wreg free
 37788   008F40  0100               	movlb	0	; () banked
 37789   008F42  518D               	movf	?___awmod& (0+255),w,b
 37790   008F44  259F               	addwf	??_APP_nvDefault& (0+255),w,b
 37791   008F46  6FA1               	movwf	(??_APP_nvDefault+2)& (0+255),b
 37792   008F48  518E               	movf	(?___awmod+1)& (0+255),w,b
 37793   008F4A  21A0               	addwfc	(??_APP_nvDefault+1)& (0+255),w,b
 37794   008F4C  6FA2               	movwf	(??_APP_nvDefault+3)& (0+255),b
 37795   008F4E  C0A1  FFF6         	movff	??_APP_nvDefault+2,tblptrl
 37796   008F52  C0A2  FFF7         	movff	??_APP_nvDefault+3,tblptrh
 37797   008F56                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37798   008F56  6AF8               	clrf	tblptru,c
 37799   008F58                     	endif
 37800   008F58                     	if	0	;tblptru may be non-zero
 37801   008F58                     	endif
 37802   008F58  0008               	tblrd		*
 37803   008F5A  50F5               	movf	tablat,w,c
 37804                           
 37805                           ; BSR set to: 0
 37806   008F5C  0012               	return		;funcret
 37807   008F5E                     __end_of_APP_nvDefault:
 37808                           	callstack 0
 37809                           
 37810 ;; *************** function ___wmul *****************
 37811 ;; Defined at:
 37812 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
 37813 ;; Parameters:    Size  Location     Type
 37814 ;;  multiplier      2   49[BANK0 ] unsigned int 
 37815 ;;  multiplicand    2   51[BANK0 ] unsigned int 
 37816 ;; Auto vars:     Size  Location     Type
 37817 ;;  product         2   53[BANK0 ] unsigned int 
 37818 ;; Return value:  Size  Location     Type
 37819 ;;                  2   49[BANK0 ] unsigned int 
 37820 ;; Registers used:
 37821 ;;		wreg, status,2, status,0, prodl, prodh
 37822 ;; Tracked objects:
 37823 ;;		On entry : 0/0
 37824 ;;		On exit  : 0/0
 37825 ;;		Unchanged: 0/0
 37826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37827 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37828 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37830 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37831 ;;Total ram usage:        6 bytes
 37832 ;; Hardware stack levels used: 1
 37833 ;; Hardware stack levels required when called: 12
 37834 ;; This function calls:
 37835 ;;		Nothing
 37836 ;; This function is called by:
 37837 ;;		_APP_nvDefault
 37838 ;;		_bounceDown
 37839 ;; This function uses a non-reentrant model
 37840 ;;
 37841                           
 37842                           	psect	text156
 37843   00C56A                     __ptext156:
 37844                           	callstack 0
 37845   00C56A                     ___wmul:
 37846                           	callstack 13
 37847                           
 37848                           ; BSR set to: 0
 37849                           ;incstack = 0
 37850   00C56A  0100               	movlb	0	; () banked
 37851   00C56C  5191               	movf	___wmul@multiplier& (0+255),w,b
 37852   00C56E  0393               	mulwf	___wmul@multiplicand& (0+255),b
 37853   00C570  CFF3 F095          	movff	prodl,___wmul@product
 37854   00C574  CFF4 F096          	movff	prodh,___wmul@product+1
 37855   00C578  5191               	movf	___wmul@multiplier& (0+255),w,b
 37856   00C57A  0394               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 37857   00C57C  50F3               	movf	243,w,c
 37858   00C57E  2796               	addwf	(___wmul@product+1)& (0+255),f,b
 37859   00C580  5192               	movf	(___wmul@multiplier+1)& (0+255),w,b
 37860   00C582  0393               	mulwf	___wmul@multiplicand& (0+255),b
 37861   00C584  50F3               	movf	243,w,c
 37862   00C586  2796               	addwf	(___wmul@product+1)& (0+255),f,b
 37863                           
 37864                           ; BSR set to: 0
 37865   00C588  C095  F091         	movff	___wmul@product,?___wmul
 37866   00C58C  C096  F092         	movff	___wmul@product+1,?___wmul+1
 37867                           
 37868                           ; BSR set to: 0
 37869   00C590  0012               	return		;funcret
 37870   00C592                     __end_of___wmul:
 37871                           	callstack 0
 37872                           
 37873 ;; *************** function ___awmod *****************
 37874 ;; Defined at:
 37875 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
 37876 ;; Parameters:    Size  Location     Type
 37877 ;;  dividend        2   45[BANK0 ] int 
 37878 ;;  divisor         2   47[BANK0 ] int 
 37879 ;; Auto vars:     Size  Location     Type
 37880 ;;  sign            1   50[BANK0 ] unsigned char 
 37881 ;;  counter         1   49[BANK0 ] unsigned char 
 37882 ;; Return value:  Size  Location     Type
 37883 ;;                  2   45[BANK0 ] int 
 37884 ;; Registers used:
 37885 ;;		wreg, status,2, status,0
 37886 ;; Tracked objects:
 37887 ;;		On entry : 0/0
 37888 ;;		On exit  : 0/0
 37889 ;;		Unchanged: 0/0
 37890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37891 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37892 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37894 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37895 ;;Total ram usage:        6 bytes
 37896 ;; Hardware stack levels used: 1
 37897 ;; Hardware stack levels required when called: 12
 37898 ;; This function calls:
 37899 ;;		Nothing
 37900 ;; This function is called by:
 37901 ;;		_consumer2QProcessMessage
 37902 ;;		_processActions
 37903 ;;		_APP_nvDefault
 37904 ;;		_APP_nvValueChanged
 37905 ;;		_APP_nvValidate
 37906 ;; This function uses a non-reentrant model
 37907 ;;
 37908                           
 37909                           	psect	text157
 37910   00B120                     __ptext157:
 37911                           	callstack 0
 37912   00B120                     ___awmod:
 37913                           	callstack 14
 37914                           
 37915                           ; BSR set to: 0
 37916                           ;incstack = 0
 37917   00B120  0E00               	movlw	0
 37918   00B122  0100               	movlb	0	; () banked
 37919   00B124  6F92               	movwf	___awmod@sign& (0+255),b
 37920                           
 37921                           ; BSR set to: 0
 37922   00B126  AF8E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 37923   00B128  D006               	goto	l20185
 37924                           
 37925                           ; BSR set to: 0
 37926   00B12A  6D8D               	negf	___awmod@dividend& (0+255),b
 37927   00B12C  1F8E               	comf	(___awmod@dividend+1)& (0+255),f,b
 37928   00B12E  B0D8               	btfsc	status,0,c
 37929   00B130  2B8E               	incf	(___awmod@dividend+1)& (0+255),f,b
 37930                           
 37931                           ; BSR set to: 0
 37932   00B132  0E01               	movlw	1
 37933   00B134  6F92               	movwf	___awmod@sign& (0+255),b
 37934   00B136                     l20185:
 37935                           
 37936                           ; BSR set to: 0
 37937   00B136  AF90               	btfss	(___awmod@divisor+1)& (0+255),7,b
 37938   00B138  D004               	goto	l20189
 37939                           
 37940                           ; BSR set to: 0
 37941   00B13A  6D8F               	negf	___awmod@divisor& (0+255),b
 37942   00B13C  1F90               	comf	(___awmod@divisor+1)& (0+255),f,b
 37943   00B13E  B0D8               	btfsc	status,0,c
 37944   00B140  2B90               	incf	(___awmod@divisor+1)& (0+255),f,b
 37945   00B142                     l20189:
 37946                           
 37947                           ; BSR set to: 0
 37948   00B142  518F               	movf	___awmod@divisor& (0+255),w,b
 37949   00B144  1190               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 37950   00B146  B4D8               	btfsc	status,2,c
 37951   00B148  D018               	goto	l20205
 37952                           
 37953                           ; BSR set to: 0
 37954   00B14A  0E01               	movlw	1
 37955   00B14C  6F91               	movwf	___awmod@counter& (0+255),b
 37956   00B14E  D004               	goto	l20195
 37957   00B150                     l20193:
 37958                           
 37959                           ; BSR set to: 0
 37960   00B150  90D8               	bcf	status,0,c
 37961   00B152  378F               	rlcf	___awmod@divisor& (0+255),f,b
 37962   00B154  3790               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 37963   00B156  2B91               	incf	___awmod@counter& (0+255),f,b
 37964   00B158                     l20195:
 37965                           
 37966                           ; BSR set to: 0
 37967   00B158  AF90               	btfss	(___awmod@divisor+1)& (0+255),7,b
 37968   00B15A  D7FA               	goto	l20193
 37969   00B15C                     u20620:
 37970                           
 37971                           ; BSR set to: 0
 37972   00B15C  518F               	movf	___awmod@divisor& (0+255),w,b
 37973   00B15E  5D8D               	subwf	___awmod@dividend& (0+255),w,b
 37974   00B160  5190               	movf	(___awmod@divisor+1)& (0+255),w,b
 37975   00B162  598E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 37976   00B164  A0D8               	btfss	status,0,c
 37977   00B166  D004               	goto	l20201
 37978                           
 37979                           ; BSR set to: 0
 37980   00B168  518F               	movf	___awmod@divisor& (0+255),w,b
 37981   00B16A  5F8D               	subwf	___awmod@dividend& (0+255),f,b
 37982   00B16C  5190               	movf	(___awmod@divisor+1)& (0+255),w,b
 37983   00B16E  5B8E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 37984   00B170                     l20201:
 37985                           
 37986                           ; BSR set to: 0
 37987   00B170  90D8               	bcf	status,0,c
 37988   00B172  3390               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 37989   00B174  338F               	rrcf	___awmod@divisor& (0+255),f,b
 37990                           
 37991                           ; BSR set to: 0
 37992   00B176  2F91               	decfsz	___awmod@counter& (0+255),f,b
 37993   00B178  D7F1               	goto	u20620
 37994   00B17A                     l20205:
 37995                           
 37996                           ; BSR set to: 0
 37997   00B17A  5192               	movf	___awmod@sign& (0+255),w,b
 37998   00B17C  B4D8               	btfsc	status,2,c
 37999   00B17E  D004               	goto	l20209
 38000                           
 38001                           ; BSR set to: 0
 38002   00B180  6D8D               	negf	___awmod@dividend& (0+255),b
 38003   00B182  1F8E               	comf	(___awmod@dividend+1)& (0+255),f,b
 38004   00B184  B0D8               	btfsc	status,0,c
 38005   00B186  2B8E               	incf	(___awmod@dividend+1)& (0+255),f,b
 38006   00B188                     l20209:
 38007                           
 38008                           ; BSR set to: 0
 38009   00B188  C08D  F08D         	movff	___awmod@dividend,?___awmod
 38010   00B18C  C08E  F08E         	movff	___awmod@dividend+1,?___awmod+1
 38011                           
 38012                           ; BSR set to: 0
 38013   00B190  0012               	return		;funcret
 38014   00B192                     __end_of___awmod:
 38015                           	callstack 0
 38016                           
 38017 ;; *************** function ___awdiv *****************
 38018 ;; Defined at:
 38019 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
 38020 ;; Parameters:    Size  Location     Type
 38021 ;;  dividend        2   55[BANK0 ] int 
 38022 ;;  divisor         2   57[BANK0 ] int 
 38023 ;; Auto vars:     Size  Location     Type
 38024 ;;  quotient        2   61[BANK0 ] int 
 38025 ;;  sign            1   60[BANK0 ] unsigned char 
 38026 ;;  counter         1   59[BANK0 ] unsigned char 
 38027 ;; Return value:  Size  Location     Type
 38028 ;;                  2   55[BANK0 ] int 
 38029 ;; Registers used:
 38030 ;;		wreg, status,2, status,0
 38031 ;; Tracked objects:
 38032 ;;		On entry : 0/0
 38033 ;;		On exit  : 0/0
 38034 ;;		Unchanged: 0/0
 38035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38036 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38037 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38039 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38040 ;;Total ram usage:        8 bytes
 38041 ;; Hardware stack levels used: 1
 38042 ;; Hardware stack levels required when called: 12
 38043 ;; This function calls:
 38044 ;;		Nothing
 38045 ;; This function is called by:
 38046 ;;		_APP_GetEventState
 38047 ;;		_consumer2QProcessMessage
 38048 ;;		_processActions
 38049 ;;		_sodTRCallback
 38050 ;;		_APP_nvDefault
 38051 ;;		_APP_nvValueChanged
 38052 ;;		_APP_nvValidate
 38053 ;;		_pollServos
 38054 ;;		_bounceDown
 38055 ;;		_bounceUp
 38056 ;;		_leds_poll
 38057 ;; This function uses a non-reentrant model
 38058 ;;
 38059                           
 38060                           	psect	text158
 38061   00A8F6                     __ptext158:
 38062                           	callstack 0
 38063   00A8F6                     ___awdiv:
 38064                           	callstack 15
 38065                           
 38066                           ; BSR set to: 0
 38067                           ;incstack = 0
 38068   00A8F6  0E00               	movlw	0
 38069   00A8F8  0100               	movlb	0	; () banked
 38070   00A8FA  6F9C               	movwf	___awdiv@sign& (0+255),b
 38071                           
 38072                           ; BSR set to: 0
 38073   00A8FC  AF9A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 38074   00A8FE  D006               	goto	l20141
 38075                           
 38076                           ; BSR set to: 0
 38077   00A900  6D99               	negf	___awdiv@divisor& (0+255),b
 38078   00A902  1F9A               	comf	(___awdiv@divisor+1)& (0+255),f,b
 38079   00A904  B0D8               	btfsc	status,0,c
 38080   00A906  2B9A               	incf	(___awdiv@divisor+1)& (0+255),f,b
 38081                           
 38082                           ; BSR set to: 0
 38083   00A908  0E01               	movlw	1
 38084   00A90A  6F9C               	movwf	___awdiv@sign& (0+255),b
 38085   00A90C                     l20141:
 38086                           
 38087                           ; BSR set to: 0
 38088   00A90C  AF98               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 38089   00A90E  D006               	goto	l20147
 38090                           
 38091                           ; BSR set to: 0
 38092   00A910  6D97               	negf	___awdiv@dividend& (0+255),b
 38093   00A912  1F98               	comf	(___awdiv@dividend+1)& (0+255),f,b
 38094   00A914  B0D8               	btfsc	status,0,c
 38095   00A916  2B98               	incf	(___awdiv@dividend+1)& (0+255),f,b
 38096                           
 38097                           ; BSR set to: 0
 38098   00A918  0E01               	movlw	1
 38099   00A91A  1B9C               	xorwf	___awdiv@sign& (0+255),f,b
 38100   00A91C                     l20147:
 38101                           
 38102                           ; BSR set to: 0
 38103   00A91C  0E00               	movlw	0
 38104   00A91E  6F9E               	movwf	(___awdiv@quotient+1)& (0+255),b
 38105   00A920  0E00               	movlw	0
 38106   00A922  6F9D               	movwf	___awdiv@quotient& (0+255),b
 38107                           
 38108                           ; BSR set to: 0
 38109   00A924  5199               	movf	___awdiv@divisor& (0+255),w,b
 38110   00A926  119A               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 38111   00A928  B4D8               	btfsc	status,2,c
 38112   00A92A  D01C               	goto	l20169
 38113                           
 38114                           ; BSR set to: 0
 38115   00A92C  0E01               	movlw	1
 38116   00A92E  6F9B               	movwf	___awdiv@counter& (0+255),b
 38117   00A930  D004               	goto	l20155
 38118   00A932                     l20153:
 38119                           
 38120                           ; BSR set to: 0
 38121   00A932  90D8               	bcf	status,0,c
 38122   00A934  3799               	rlcf	___awdiv@divisor& (0+255),f,b
 38123   00A936  379A               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 38124   00A938  2B9B               	incf	___awdiv@counter& (0+255),f,b
 38125   00A93A                     l20155:
 38126                           
 38127                           ; BSR set to: 0
 38128   00A93A  AF9A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 38129   00A93C  D7FA               	goto	l20153
 38130   00A93E                     u20560:
 38131                           
 38132                           ; BSR set to: 0
 38133   00A93E  90D8               	bcf	status,0,c
 38134   00A940  379D               	rlcf	___awdiv@quotient& (0+255),f,b
 38135   00A942  379E               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 38136                           
 38137                           ; BSR set to: 0
 38138   00A944  5199               	movf	___awdiv@divisor& (0+255),w,b
 38139   00A946  5D97               	subwf	___awdiv@dividend& (0+255),w,b
 38140   00A948  519A               	movf	(___awdiv@divisor+1)& (0+255),w,b
 38141   00A94A  5998               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 38142   00A94C  A0D8               	btfss	status,0,c
 38143   00A94E  D005               	goto	l20165
 38144                           
 38145                           ; BSR set to: 0
 38146   00A950  5199               	movf	___awdiv@divisor& (0+255),w,b
 38147   00A952  5F97               	subwf	___awdiv@dividend& (0+255),f,b
 38148   00A954  519A               	movf	(___awdiv@divisor+1)& (0+255),w,b
 38149   00A956  5B98               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 38150                           
 38151                           ; BSR set to: 0
 38152   00A958  819D               	bsf	___awdiv@quotient& (0+255),0,b
 38153   00A95A                     l20165:
 38154                           
 38155                           ; BSR set to: 0
 38156   00A95A  90D8               	bcf	status,0,c
 38157   00A95C  339A               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 38158   00A95E  3399               	rrcf	___awdiv@divisor& (0+255),f,b
 38159                           
 38160                           ; BSR set to: 0
 38161   00A960  2F9B               	decfsz	___awdiv@counter& (0+255),f,b
 38162   00A962  D7ED               	goto	u20560
 38163   00A964                     l20169:
 38164                           
 38165                           ; BSR set to: 0
 38166   00A964  519C               	movf	___awdiv@sign& (0+255),w,b
 38167   00A966  B4D8               	btfsc	status,2,c
 38168   00A968  D004               	goto	l20173
 38169                           
 38170                           ; BSR set to: 0
 38171   00A96A  6D9D               	negf	___awdiv@quotient& (0+255),b
 38172   00A96C  1F9E               	comf	(___awdiv@quotient+1)& (0+255),f,b
 38173   00A96E  B0D8               	btfsc	status,0,c
 38174   00A970  2B9E               	incf	(___awdiv@quotient+1)& (0+255),f,b
 38175   00A972                     l20173:
 38176                           
 38177                           ; BSR set to: 0
 38178   00A972  C09D  F097         	movff	___awdiv@quotient,?___awdiv
 38179   00A976  C09E  F098         	movff	___awdiv@quotient+1,?___awdiv+1
 38180                           
 38181                           ; BSR set to: 0
 38182   00A97A  0012               	return		;funcret
 38183   00A97C                     __end_of___awdiv:
 38184                           	callstack 0
 38185                           
 38186 ;; *************** function _APP_factoryReset *****************
 38187 ;; Defined at:
 38188 ;;		line 214 in file "../main.c"
 38189 ;; Parameters:    Size  Location     Type
 38190 ;;		None
 38191 ;; Auto vars:     Size  Location     Type
 38192 ;;  io              1   51[BANK1 ] unsigned char 
 38193 ;; Return value:  Size  Location     Type
 38194 ;;                  1    wreg      void 
 38195 ;; Registers used:
 38196 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38197 ;; Tracked objects:
 38198 ;;		On entry : 0/0
 38199 ;;		On exit  : 0/0
 38200 ;;		Unchanged: 0/0
 38201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38203 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38205 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38206 ;;Total ram usage:        1 bytes
 38207 ;; Hardware stack levels used: 1
 38208 ;; Hardware stack levels required when called: 25
 38209 ;; This function calls:
 38210 ;;		_factoryResetGlobalEvents
 38211 ;;		_flushFlashBlock
 38212 ;;		_setType
 38213 ;; This function is called by:
 38214 ;;		_factoryReset
 38215 ;; This function uses a non-reentrant model
 38216 ;;
 38217                           
 38218                           	psect	text159
 38219   00C698                     __ptext159:
 38220                           	callstack 0
 38221   00C698                     _APP_factoryReset:
 38222                           	callstack 2
 38223                           
 38224                           ;../main.c: 215:     uint8_t io;;../main.c: 217:     factoryResetGlobalEvents();
 38225                           
 38226                           ; BSR set to: 0
 38227                           ;incstack = 0
 38228   00C698  EC97  F064         	call	_factoryResetGlobalEvents	;wreg free
 38229                           
 38230                           ;../main.c: 219:     for (io=0; io<16; io++) {
 38231   00C69C  0E00               	movlw	0
 38232   00C69E  0101               	movlb	1	; () banked
 38233   00C6A0  6FF1               	movwf	APP_factoryReset@io& (0+255),b
 38234   00C6A2                     l20609:
 38235                           
 38236                           ; BSR set to: 1
 38237                           
 38238                           ; BSR set to: 1
 38239                           
 38240                           ; BSR set to: 1
 38241   00C6A2  0E00               	movlw	0
 38242   00C6A4  6FEE               	movwf	setType@type& (0+255),b
 38243   00C6A6  51F1               	movf	APP_factoryReset@io& (0+255),w,b
 38244   00C6A8  EC6D  F05A         	call	_setType
 38245                           
 38246                           ;../main.c: 221:     }
 38247   00C6AC  0101               	movlb	1	; () banked
 38248   00C6AE  2BF1               	incf	APP_factoryReset@io& (0+255),f,b
 38249                           
 38250                           ; BSR set to: 1
 38251   00C6B0  0E0F               	movlw	15
 38252   00C6B2  65F1               	cpfsgt	APP_factoryReset@io& (0+255),b
 38253   00C6B4  D7F6               	goto	l20609
 38254                           
 38255                           ; BSR set to: 1
 38256                           ;../main.c: 222:     flushFlashBlock();
 38257   00C6B6  ECBE  F054         	call	_flushFlashBlock	;wreg free
 38258   00C6BA  0012               	return		;funcret
 38259   00C6BC                     __end_of_APP_factoryReset:
 38260                           	callstack 0
 38261                           
 38262 ;; *************** function _setType *****************
 38263 ;; Defined at:
 38264 ;;		line 528 in file "../main.c"
 38265 ;; Parameters:    Size  Location     Type
 38266 ;;  io              1    wreg     unsigned char 
 38267 ;;  type            1   48[BANK1 ] unsigned char 
 38268 ;; Auto vars:     Size  Location     Type
 38269 ;;  io              1   50[BANK1 ] unsigned char 
 38270 ;;  index           1   49[BANK1 ] unsigned char 
 38271 ;; Return value:  Size  Location     Type
 38272 ;;                  1    wreg      void 
 38273 ;; Registers used:
 38274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38275 ;; Tracked objects:
 38276 ;;		On entry : 0/0
 38277 ;;		On exit  : 0/0
 38278 ;;		Unchanged: 0/0
 38279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38280 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38281 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38283 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38284 ;;Total ram usage:        3 bytes
 38285 ;; Hardware stack levels used: 1
 38286 ;; Hardware stack levels required when called: 24
 38287 ;; This function calls:
 38288 ;;		_configIO
 38289 ;;		_defaultEvents
 38290 ;;		_defaultNVs
 38291 ;;		_saveNV
 38292 ;; This function is called by:
 38293 ;;		_APP_factoryReset
 38294 ;;		_APP_nvValueChanged
 38295 ;; This function uses a non-reentrant model
 38296 ;;
 38297                           
 38298                           	psect	text160
 38299   00B4DA                     __ptext160:
 38300                           	callstack 0
 38301   00B4DA                     _setType:
 38302                           	callstack 2
 38303                           
 38304                           ;incstack = 0
 38305                           ;setType@io stored from wreg
 38306   00B4DA  0101               	movlb	1	; () banked
 38307   00B4DC  6FF0               	movwf	setType@io& (0+255),b
 38308                           
 38309                           ;../main.c: 529:     uint8_t index;;../main.c: 531:     index = (16 + 7*(io) + 0);
 38310   00B4DE  0101               	movlb	1	; () banked
 38311   00B4E0  51F0               	movf	setType@io& (0+255),w,b
 38312   00B4E2  0D07               	mullw	7
 38313   00B4E4  50F3               	movf	243,w,c
 38314   00B4E6  0F10               	addlw	16
 38315   00B4E8  6FEF               	movwf	setType@index& (0+255),b
 38316                           
 38317                           ; BSR set to: 1
 38318                           ;../main.c: 532:     saveNV((uint8_t)index, type);
 38319   00B4EA  C1EE  F1BF         	movff	setType@type,saveNV@value
 38320   00B4EE  51EF               	movf	setType@index& (0+255),w,b
 38321   00B4F0  EC2D  F060         	call	_saveNV
 38322                           
 38323                           ;../main.c: 535:     defaultNVs(io, type);
 38324   00B4F4  C1EE  F1C3         	movff	setType@type,defaultNVs@type
 38325   00B4F8  0101               	movlb	1	; () banked
 38326   00B4FA  51F0               	movf	setType@io& (0+255),w,b
 38327   00B4FC  EC72  F05D         	call	_defaultNVs
 38328                           
 38329                           ;../main.c: 538:     configIO(io);
 38330   00B500  0101               	movlb	1	; () banked
 38331   00B502  51F0               	movf	setType@io& (0+255),w,b
 38332   00B504  EC42  F027         	call	_configIO
 38333                           
 38334                           ;../main.c: 540:     if ((type == 2) || (type== 3) || (type == 4)) {
 38335   00B508  0E02               	movlw	2
 38336   00B50A  0101               	movlb	1	; () banked
 38337   00B50C  19EE               	xorwf	setType@type& (0+255),w,b
 38338   00B50E  B4D8               	btfsc	status,2,c
 38339   00B510  D008               	goto	u20670
 38340                           
 38341                           ; BSR set to: 1
 38342   00B512  0E03               	movlw	3
 38343   00B514  19EE               	xorwf	setType@type& (0+255),w,b
 38344   00B516  B4D8               	btfsc	status,2,c
 38345   00B518  D004               	goto	u20670
 38346                           
 38347                           ; BSR set to: 1
 38348   00B51A  0E04               	movlw	4
 38349   00B51C  19EE               	xorwf	setType@type& (0+255),w,b
 38350   00B51E  A4D8               	btfss	status,2,c
 38351   00B520  D008               	goto	l20229
 38352   00B522                     u20670:
 38353                           
 38354                           ; BSR set to: 1
 38355                           ;../main.c: 541:         currentPos[io] = 128;
 38356   00B522  0E30               	movlw	low _currentPos
 38357   00B524  25F0               	addwf	setType@io& (0+255),w,b
 38358   00B526  6ED9               	movwf	fsr2l,c
 38359   00B528  6ADA               	clrf	fsr2h,c
 38360   00B52A  0E01               	movlw	high _currentPos
 38361   00B52C  22DA               	addwfc	fsr2h,f,c
 38362   00B52E  0E80               	movlw	128
 38363   00B530  6EDF               	movwf	indf2,c
 38364   00B532                     l20229:
 38365                           
 38366                           ; BSR set to: 1
 38367                           ;../main.c: 545:     defaultEvents(io, type);
 38368   00B532  C1EE  F1EA         	movff	setType@type,defaultEvents@type
 38369   00B536  51F0               	movf	setType@io& (0+255),w,b
 38370   00B538  ECBE  F03B         	call	_defaultEvents
 38371   00B53C  0012               	return		;funcret
 38372   00B53E                     __end_of_setType:
 38373                           	callstack 0
 38374                           
 38375 ;; *************** function _defaultNVs *****************
 38376 ;; Defined at:
 38377 ;;		line 342 in file "../universalNv.c"
 38378 ;; Parameters:    Size  Location     Type
 38379 ;;  io              1    wreg     unsigned char 
 38380 ;;  type            1    5[BANK1 ] unsigned char 
 38381 ;; Auto vars:     Size  Location     Type
 38382 ;;  io              1    8[BANK1 ] unsigned char 
 38383 ;;  i               1    9[BANK1 ] unsigned char 
 38384 ;; Return value:  Size  Location     Type
 38385 ;;                  1    wreg      void 
 38386 ;; Registers used:
 38387 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38388 ;; Tracked objects:
 38389 ;;		On entry : 0/0
 38390 ;;		On exit  : 0/0
 38391 ;;		Unchanged: 0/0
 38392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38393 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38394 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38395 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38396 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38397 ;;Total ram usage:        5 bytes
 38398 ;; Hardware stack levels used: 1
 38399 ;; Hardware stack levels required when called: 19
 38400 ;; This function calls:
 38401 ;;		_loadNvCache
 38402 ;;		_saveNV
 38403 ;; This function is called by:
 38404 ;;		_setType
 38405 ;; This function uses a non-reentrant model
 38406 ;;
 38407                           
 38408                           	psect	text161
 38409   00BAE4                     __ptext161:
 38410                           	callstack 0
 38411   00BAE4                     _defaultNVs:
 38412                           	callstack 6
 38413                           
 38414                           ;incstack = 0
 38415                           ;defaultNVs@io stored from wreg
 38416   00BAE4  0101               	movlb	1	; () banked
 38417   00BAE6  6FC6               	movwf	defaultNVs@io& (0+255),b
 38418                           
 38419                           ;../universalNv.c: 343:     uint8_t i;;../universalNv.c: 345:     for (i=1; i<7; i++) {
 38420   00BAE8  0E01               	movlw	1
 38421   00BAEA  0101               	movlb	1	; () banked
 38422   00BAEC  6FC7               	movwf	defaultNVs@i& (0+255),b
 38423   00BAEE                     l20063:
 38424                           
 38425                           ; BSR set to: 1
 38426                           ;../universalNv.c: 346:         saveNV((16 + 7*(io) + 0)+i , channelDefaultNVs[type][i])
      +                          ;
 38427   00BAEE  51C3               	movf	defaultNVs@type& (0+255),w,b
 38428   00BAF0  0D07               	mullw	7
 38429   00BAF2  0E8B               	movlw	low _channelDefaultNVs
 38430   00BAF4  24F3               	addwf	243,w,c
 38431   00BAF6  6FC4               	movwf	??_defaultNVs& (0+255),b
 38432   00BAF8  0EEE               	movlw	high _channelDefaultNVs
 38433   00BAFA  20F4               	addwfc	prodh,w,c
 38434   00BAFC  6FC5               	movwf	(??_defaultNVs+1)& (0+255),b
 38435   00BAFE  51C7               	movf	defaultNVs@i& (0+255),w,b
 38436   00BB00  27C4               	addwf	??_defaultNVs& (0+255),f,b
 38437   00BB02  0E00               	movlw	0
 38438   00BB04  23C5               	addwfc	(??_defaultNVs+1)& (0+255),f,b
 38439   00BB06  C1C4  FFF6         	movff	??_defaultNVs,tblptrl
 38440   00BB0A  C1C5  FFF7         	movff	??_defaultNVs+1,tblptrh
 38441   00BB0E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 38442   00BB0E  6AF8               	clrf	tblptru,c
 38443   00BB10                     	endif
 38444   00BB10                     	if	0	;tblptru may be non-zero
 38445   00BB10                     	endif
 38446   00BB10  0008               	tblrd		*
 38447   00BB12  CFF5 F1BF          	movff	tablat,saveNV@value
 38448   00BB16  51C6               	movf	defaultNVs@io& (0+255),w,b
 38449   00BB18  0D07               	mullw	7
 38450   00BB1A  50F3               	movf	243,w,c
 38451   00BB1C  25C7               	addwf	defaultNVs@i& (0+255),w,b
 38452   00BB1E  0F10               	addlw	16
 38453   00BB20  EC2D  F060         	call	_saveNV
 38454                           
 38455                           ;../universalNv.c: 347:     }
 38456   00BB24  0101               	movlb	1	; () banked
 38457   00BB26  2BC7               	incf	defaultNVs@i& (0+255),f,b
 38458                           
 38459                           ; BSR set to: 1
 38460   00BB28  0E06               	movlw	6
 38461   00BB2A  65C7               	cpfsgt	defaultNVs@i& (0+255),b
 38462   00BB2C  D7E0               	goto	l20063
 38463                           
 38464                           ; BSR set to: 1
 38465                           ;../universalNv.c: 348:     loadNvCache();
 38466   00BB2E  EC7D  F05E         	call	_loadNvCache	;wreg free
 38467   00BB32  0012               	return		;funcret
 38468   00BB34                     __end_of_defaultNVs:
 38469                           	callstack 0
 38470                           
 38471 ;; *************** function _saveNV *****************
 38472 ;; Defined at:
 38473 ;;		line 199 in file "../../VLCBlib_PIC/nv.c"
 38474 ;; Parameters:    Size  Location     Type
 38475 ;;  index           1    wreg     unsigned char 
 38476 ;;  value           1    1[BANK1 ] unsigned char 
 38477 ;; Auto vars:     Size  Location     Type
 38478 ;;  index           1    4[BANK1 ] unsigned char 
 38479 ;; Return value:  Size  Location     Type
 38480 ;;                  1    wreg      void 
 38481 ;; Registers used:
 38482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 38483 ;; Tracked objects:
 38484 ;;		On entry : 0/0
 38485 ;;		On exit  : 0/0
 38486 ;;		Unchanged: 0/0
 38487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38488 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38489 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38490 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38491 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38492 ;;Total ram usage:        4 bytes
 38493 ;; Hardware stack levels used: 1
 38494 ;; Hardware stack levels required when called: 18
 38495 ;; This function calls:
 38496 ;;		_writeNVM
 38497 ;; This function is called by:
 38498 ;;		_setType
 38499 ;;		_defaultNVs
 38500 ;; This function uses a non-reentrant model
 38501 ;;
 38502                           
 38503                           	psect	text162
 38504   00C05A                     __ptext162:
 38505                           	callstack 0
 38506   00C05A                     _saveNV:
 38507                           	callstack 7
 38508                           
 38509                           ;incstack = 0
 38510                           ;saveNV@index stored from wreg
 38511   00C05A  0101               	movlb	1	; () banked
 38512   00C05C  6FC2               	movwf	saveNV@index& (0+255),b
 38513                           
 38514                           ;../../VLCBlib_PIC/nv.c: 201:     nvCache[index] = value;
 38515   00C05E  0E00               	movlw	low _nvCache
 38516   00C060  0101               	movlb	1	; () banked
 38517   00C062  25C2               	addwf	saveNV@index& (0+255),w,b
 38518   00C064  6ED9               	movwf	fsr2l,c
 38519   00C066  6ADA               	clrf	fsr2h,c
 38520   00C068  0E04               	movlw	high _nvCache
 38521   00C06A  22DA               	addwfc	fsr2h,f,c
 38522   00C06C  C1BF  FFDF         	movff	saveNV@value,indf2
 38523                           
 38524                           ; BSR set to: 1
 38525                           ;../../VLCBlib_PIC/nv.c: 203:     writeNVM(FLASH_NVM_TYPE, 0xFF80 +index, value);
 38526   00C070  0E80               	movlw	128
 38527   00C072  25C2               	addwf	saveNV@index& (0+255),w,b
 38528   00C074  6FC0               	movwf	??_saveNV& (0+255),b
 38529   00C076  6BC1               	clrf	(??_saveNV+1)& (0+255),b
 38530   00C078  0EFF               	movlw	255
 38531   00C07A  23C1               	addwfc	(??_saveNV+1)& (0+255),f,b
 38532   00C07C  C1C0  F0A4         	movff	??_saveNV,writeNVM@index
 38533   00C080  C1C1  F0A5         	movff	??_saveNV+1,writeNVM@index+1
 38534   00C084  0100               	movlb	0	; () banked
 38535   00C086  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38536   00C088  C1BF  F0A7         	movff	saveNV@value,writeNVM@value
 38537   00C08C  0E01               	movlw	1
 38538   00C08E  ECC1  F05D         	call	_writeNVM
 38539   00C092  0012               	return		;funcret
 38540   00C094                     __end_of_saveNV:
 38541                           	callstack 0
 38542                           
 38543 ;; *************** function _loadNvCache *****************
 38544 ;; Defined at:
 38545 ;;		line 162 in file "../../VLCBlib_PIC/nv.c"
 38546 ;; Parameters:    Size  Location     Type
 38547 ;;		None
 38548 ;; Auto vars:     Size  Location     Type
 38549 ;;  temp            2   57[BANK0 ] short 
 38550 ;;  i               1   59[BANK0 ] unsigned char 
 38551 ;; Return value:  Size  Location     Type
 38552 ;;                  1    wreg      void 
 38553 ;; Registers used:
 38554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 38555 ;; Tracked objects:
 38556 ;;		On entry : 0/0
 38557 ;;		On exit  : 0/0
 38558 ;;		Unchanged: 0/0
 38559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38561 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38562 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38563 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38564 ;;Total ram usage:        5 bytes
 38565 ;; Hardware stack levels used: 1
 38566 ;; Hardware stack levels required when called: 14
 38567 ;; This function calls:
 38568 ;;		_readNVM
 38569 ;; This function is called by:
 38570 ;;		_defaultNVs
 38571 ;;		_nvPowerUp
 38572 ;; This function uses a non-reentrant model
 38573 ;;
 38574                           
 38575                           	psect	text163
 38576   00BCFA                     __ptext163:
 38577                           	callstack 0
 38578   00BCFA                     _loadNvCache:
 38579                           	callstack 14
 38580                           
 38581                           ;../../VLCBlib_PIC/nv.c: 163:     uint8_t i;;../../VLCBlib_PIC/nv.c: 164:     int16_t te
      +                          mp;;../../VLCBlib_PIC/nv.c: 166:     for (i=1; i<= (15+7*16); i++) {
 38582                           
 38583                           ;incstack = 0
 38584   00BCFA  0E01               	movlw	1
 38585   00BCFC  0100               	movlb	0	; () banked
 38586   00BCFE  6F9B               	movwf	loadNvCache@i& (0+255),b
 38587   00BD00                     l19935:
 38588                           
 38589                           ; BSR set to: 0
 38590                           ;../../VLCBlib_PIC/nv.c: 167:         temp = readNVM(FLASH_NVM_TYPE, 0xFF80 +i);
 38591   00BD00  0E80               	movlw	128
 38592   00BD02  259B               	addwf	loadNvCache@i& (0+255),w,b
 38593   00BD04  6F97               	movwf	??_loadNvCache& (0+255),b
 38594   00BD06  6B98               	clrf	(??_loadNvCache+1)& (0+255),b
 38595   00BD08  0EFF               	movlw	255
 38596   00BD0A  2398               	addwfc	(??_loadNvCache+1)& (0+255),f,b
 38597   00BD0C  C097  F091         	movff	??_loadNvCache,readNVM@index
 38598   00BD10  C098  F092         	movff	??_loadNvCache+1,readNVM@index+1
 38599   00BD14  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38600   00BD16  0E01               	movlw	1
 38601   00BD18  EC31  F05B         	call	_readNVM
 38602   00BD1C  C091  F099         	movff	?_readNVM,loadNvCache@temp
 38603   00BD20  C092  F09A         	movff	?_readNVM+1,loadNvCache@temp+1
 38604                           
 38605                           ;../../VLCBlib_PIC/nv.c: 168:         if (temp < 0) {
 38606   00BD24  0100               	movlb	0	; () banked
 38607   00BD26  BF9A               	btfsc	(loadNvCache@temp+1)& (0+255),7,b
 38608   00BD28  D008               	goto	l19943
 38609                           
 38610                           ; BSR set to: 0
 38611                           ;../../VLCBlib_PIC/nv.c: 171:             nvCache[i] = (uint8_t)temp;
 38612   00BD2A  0E00               	movlw	low _nvCache
 38613   00BD2C  259B               	addwf	loadNvCache@i& (0+255),w,b
 38614   00BD2E  6ED9               	movwf	fsr2l,c
 38615   00BD30  6ADA               	clrf	fsr2h,c
 38616   00BD32  0E04               	movlw	high _nvCache
 38617   00BD34  22DA               	addwfc	fsr2h,f,c
 38618   00BD36  C099  FFDF         	movff	loadNvCache@temp,indf2
 38619   00BD3A                     l19943:
 38620                           
 38621                           ; BSR set to: 0
 38622                           ;../../VLCBlib_PIC/nv.c: 173:     }
 38623   00BD3A  2B9B               	incf	loadNvCache@i& (0+255),f,b
 38624                           
 38625                           ; BSR set to: 0
 38626   00BD3C  0E7F               	movlw	127
 38627   00BD3E  659B               	cpfsgt	loadNvCache@i& (0+255),b
 38628   00BD40  D7DF               	goto	l19935
 38629   00BD42  0012               	return	
 38630   00BD44                     __end_of_loadNvCache:
 38631                           	callstack 0
 38632                           
 38633 ;; *************** function _defaultEvents *****************
 38634 ;; Defined at:
 38635 ;;		line 110 in file "../universalEvents.c"
 38636 ;; Parameters:    Size  Location     Type
 38637 ;;  io              1    wreg     unsigned char 
 38638 ;;  type            1   44[BANK1 ] unsigned char 
 38639 ;; Auto vars:     Size  Location     Type
 38640 ;;  io              1   47[BANK1 ] unsigned char 
 38641 ;;  en              2   45[BANK1 ] unsigned short 
 38642 ;;  b               1    0        unsigned char 
 38643 ;; Return value:  Size  Location     Type
 38644 ;;                  1    wreg      void 
 38645 ;; Registers used:
 38646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38647 ;; Tracked objects:
 38648 ;;		On entry : 0/0
 38649 ;;		On exit  : 0/0
 38650 ;;		Unchanged: 0/0
 38651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38652 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38653 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38655 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38656 ;;Total ram usage:        4 bytes
 38657 ;; Hardware stack levels used: 1
 38658 ;; Hardware stack levels required when called: 23
 38659 ;; This function calls:
 38660 ;;		_addEvent
 38661 ;;		_clearEvents
 38662 ;; This function is called by:
 38663 ;;		_setType
 38664 ;; This function uses a non-reentrant model
 38665 ;;
 38666                           
 38667                           	psect	text164
 38668   00777C                     __ptext164:
 38669                           	callstack 0
 38670   00777C                     _defaultEvents:
 38671                           	callstack 2
 38672                           
 38673                           ; BSR set to: 0
 38674                           ;incstack = 0
 38675                           ;defaultEvents@io stored from wreg
 38676   00777C  0101               	movlb	1	; () banked
 38677   00777E  6FED               	movwf	defaultEvents@io& (0+255),b
 38678                           
 38679                           ;../universalEvents.c: 111:     uint16_t en = io+1;
 38680   007780  0E01               	movlw	1
 38681   007782  0101               	movlb	1	; () banked
 38682   007784  25ED               	addwf	defaultEvents@io& (0+255),w,b
 38683   007786  6FEB               	movwf	defaultEvents@en& (0+255),b
 38684   007788  6BEC               	clrf	(defaultEvents@en+1)& (0+255),b
 38685   00778A  0E00               	movlw	0
 38686   00778C  23EC               	addwfc	(defaultEvents@en+1)& (0+255),f,b
 38687                           
 38688                           ; BSR set to: 1
 38689                           ;../universalEvents.c: 112:     uint8_t b;;../universalEvents.c: 120:         clearEvent
      +                          s(io);
 38690   00778E  51ED               	movf	defaultEvents@io& (0+255),w,b
 38691   007790  ECB3  F05F         	call	_clearEvents
 38692                           
 38693                           ;../universalEvents.c: 125:     switch(type) {
 38694   007794  D094               	goto	l20083
 38695   007796                     l20075:
 38696                           
 38697                           ; BSR set to: 1
 38698                           ;../universalEvents.c: 129:              addEvent(nn.word, 100+en, 0, ((8 + 4*(io))+0), 
      +                          TRUE);
 38699   007796  C0B4  F1DB         	movff	_nn,addEvent@nodeNumber
 38700   00779A  C0B5  F1DC         	movff	_nn+1,addEvent@nodeNumber+1
 38701   00779E  0E64               	movlw	100
 38702   0077A0  25EB               	addwf	defaultEvents@en& (0+255),w,b
 38703   0077A2  6FDD               	movwf	addEvent@eventNumber& (0+255),b
 38704   0077A4  0E00               	movlw	0
 38705   0077A6  21EC               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 38706   0077A8  6FDE               	movwf	(addEvent@eventNumber+1)& (0+255),b
 38707   0077AA  0E00               	movlw	0
 38708   0077AC  6FDF               	movwf	addEvent@evNum& (0+255),b
 38709   0077AE  51ED               	movf	defaultEvents@io& (0+255),w,b
 38710   0077B0  0D04               	mullw	4
 38711   0077B2  50F3               	movf	243,w,c
 38712   0077B4  0F08               	addlw	8
 38713   0077B6  6FE0               	movwf	addEvent@evVal& (0+255),b
 38714   0077B8  0E01               	movlw	1
 38715   0077BA  6FE1               	movwf	addEvent@forceOwnNN& (0+255),b
 38716   0077BC  ECFD  F032         	call	_addEvent	;wreg free
 38717   0077C0                     l646:
 38718                           
 38719                           ;../universalEvents.c: 134:             addEvent(nn.word, en, 1, ((8 + 5*(io))+0), TRUE)
      +                          ;
 38720   0077C0  C0B4  F1DB         	movff	_nn,addEvent@nodeNumber
 38721   0077C4  C0B5  F1DC         	movff	_nn+1,addEvent@nodeNumber+1
 38722   0077C8  C1EB  F1DD         	movff	defaultEvents@en,addEvent@eventNumber
 38723   0077CC  C1EC  F1DE         	movff	defaultEvents@en+1,addEvent@eventNumber+1
 38724   0077D0  0E01               	movlw	1
 38725   0077D2  0101               	movlb	1	; () banked
 38726   0077D4  6FDF               	movwf	addEvent@evNum& (0+255),b
 38727   0077D6  51ED               	movf	defaultEvents@io& (0+255),w,b
 38728   0077D8  0D05               	mullw	5
 38729   0077DA  50F3               	movf	243,w,c
 38730   0077DC  0F08               	addlw	8
 38731   0077DE  6FE0               	movwf	addEvent@evVal& (0+255),b
 38732   0077E0  0E01               	movlw	1
 38733   0077E2  6FE1               	movwf	addEvent@forceOwnNN& (0+255),b
 38734   0077E4  ECFD  F032         	call	_addEvent	;wreg free
 38735                           
 38736                           ;../universalEvents.c: 137:             break;
 38737   0077E8  0012               	return	
 38738   0077EA                     l20077:
 38739                           
 38740                           ; BSR set to: 1
 38741                           ;../universalEvents.c: 140:             addEvent(nn.word, en, 0, ((8 + 4*(io))+0), TRUE)
      +                          ;
 38742   0077EA  C0B4  F1DB         	movff	_nn,addEvent@nodeNumber
 38743   0077EE  C0B5  F1DC         	movff	_nn+1,addEvent@nodeNumber+1
 38744   0077F2  C1EB  F1DD         	movff	defaultEvents@en,addEvent@eventNumber
 38745   0077F6  C1EC  F1DE         	movff	defaultEvents@en+1,addEvent@eventNumber+1
 38746   0077FA  0E00               	movlw	0
 38747   0077FC  6FDF               	movwf	addEvent@evNum& (0+255),b
 38748   0077FE  51ED               	movf	defaultEvents@io& (0+255),w,b
 38749   007800  0D04               	mullw	4
 38750   007802  50F3               	movf	243,w,c
 38751   007804  0F08               	addlw	8
 38752   007806  6FE0               	movwf	addEvent@evVal& (0+255),b
 38753   007808  0E01               	movlw	1
 38754   00780A  6FE1               	movwf	addEvent@forceOwnNN& (0+255),b
 38755   00780C  ECFD  F032         	call	_addEvent	;wreg free
 38756                           
 38757                           ;../universalEvents.c: 141:             break;
 38758   007810  0012               	return	
 38759   007812                     l20079:
 38760                           
 38761                           ; BSR set to: 1
 38762                           ;../universalEvents.c: 145:             addEvent(nn.word, 100+en, 0, ((8 + 4*(io))+0), T
      +                          RUE);
 38763   007812  C0B4  F1DB         	movff	_nn,addEvent@nodeNumber
 38764   007816  C0B5  F1DC         	movff	_nn+1,addEvent@nodeNumber+1
 38765   00781A  0E64               	movlw	100
 38766   00781C  25EB               	addwf	defaultEvents@en& (0+255),w,b
 38767   00781E  6FDD               	movwf	addEvent@eventNumber& (0+255),b
 38768   007820  0E00               	movlw	0
 38769   007822  21EC               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 38770   007824  6FDE               	movwf	(addEvent@eventNumber+1)& (0+255),b
 38771   007826  0E00               	movlw	0
 38772   007828  6FDF               	movwf	addEvent@evNum& (0+255),b
 38773   00782A  51ED               	movf	defaultEvents@io& (0+255),w,b
 38774   00782C  0D04               	mullw	4
 38775   00782E  50F3               	movf	243,w,c
 38776   007830  0F08               	addlw	8
 38777   007832  6FE0               	movwf	addEvent@evVal& (0+255),b
 38778   007834  0E01               	movlw	1
 38779   007836  6FE1               	movwf	addEvent@forceOwnNN& (0+255),b
 38780   007838  ECFD  F032         	call	_addEvent	;wreg free
 38781                           
 38782                           ;../universalEvents.c: 146:             addEvent(nn.word, 300+en, 0, ((8 + 4*(io))+1), T
      +                          RUE);
 38783   00783C  C0B4  F1DB         	movff	_nn,addEvent@nodeNumber
 38784   007840  C0B5  F1DC         	movff	_nn+1,addEvent@nodeNumber+1
 38785   007844  0E2C               	movlw	44
 38786   007846  0101               	movlb	1	; () banked
 38787   007848  25EB               	addwf	defaultEvents@en& (0+255),w,b
 38788   00784A  6FDD               	movwf	addEvent@eventNumber& (0+255),b
 38789   00784C  0E01               	movlw	1
 38790   00784E  21EC               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 38791   007850  6FDE               	movwf	(addEvent@eventNumber+1)& (0+255),b
 38792   007852  0E00               	movlw	0
 38793   007854  6FDF               	movwf	addEvent@evNum& (0+255),b
 38794   007856  51ED               	movf	defaultEvents@io& (0+255),w,b
 38795   007858  0D04               	mullw	4
 38796   00785A  50F3               	movf	243,w,c
 38797   00785C  0F09               	addlw	9
 38798   00785E  6FE0               	movwf	addEvent@evVal& (0+255),b
 38799   007860  0E01               	movlw	1
 38800   007862  6FE1               	movwf	addEvent@forceOwnNN& (0+255),b
 38801   007864  ECFD  F032         	call	_addEvent	;wreg free
 38802                           
 38803                           ;../universalEvents.c: 147:             addEvent(nn.word, 200+en, 0, ((8 + 4*(io))+2), T
      +                          RUE);
 38804   007868  C0B4  F1DB         	movff	_nn,addEvent@nodeNumber
 38805   00786C  C0B5  F1DC         	movff	_nn+1,addEvent@nodeNumber+1
 38806   007870  0EC8               	movlw	200
 38807   007872  0101               	movlb	1	; () banked
 38808   007874  25EB               	addwf	defaultEvents@en& (0+255),w,b
 38809   007876  6FDD               	movwf	addEvent@eventNumber& (0+255),b
 38810   007878  0E00               	movlw	0
 38811   00787A  21EC               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 38812   00787C  6FDE               	movwf	(addEvent@eventNumber+1)& (0+255),b
 38813   00787E  0E00               	movlw	0
 38814   007880  6FDF               	movwf	addEvent@evNum& (0+255),b
 38815   007882  51ED               	movf	defaultEvents@io& (0+255),w,b
 38816   007884  0D04               	mullw	4
 38817   007886  50F3               	movf	243,w,c
 38818   007888  0F0A               	addlw	10
 38819   00788A  6FE0               	movwf	addEvent@evVal& (0+255),b
 38820   00788C  0E01               	movlw	1
 38821   00788E  6FE1               	movwf	addEvent@forceOwnNN& (0+255),b
 38822   007890  ECFD  F032         	call	_addEvent	;wreg free
 38823                           
 38824                           ;../universalEvents.c: 149:             addEvent(nn.word, en, 1, ((8 + 5*(io))+0), TRUE)
      +                          ;
 38825   007894  C0B4  F1DB         	movff	_nn,addEvent@nodeNumber
 38826   007898  C0B5  F1DC         	movff	_nn+1,addEvent@nodeNumber+1
 38827   00789C  C1EB  F1DD         	movff	defaultEvents@en,addEvent@eventNumber
 38828   0078A0  C1EC  F1DE         	movff	defaultEvents@en+1,addEvent@eventNumber+1
 38829   0078A4  0E01               	movlw	1
 38830   0078A6  0101               	movlb	1	; () banked
 38831   0078A8  6FDF               	movwf	addEvent@evNum& (0+255),b
 38832   0078AA  51ED               	movf	defaultEvents@io& (0+255),w,b
 38833   0078AC  0D05               	mullw	5
 38834   0078AE  50F3               	movf	243,w,c
 38835   0078B0  0F08               	addlw	8
 38836   0078B2  6FE0               	movwf	addEvent@evVal& (0+255),b
 38837   0078B4  0E01               	movlw	1
 38838   0078B6  6FE1               	movwf	addEvent@forceOwnNN& (0+255),b
 38839   0078B8  ECFD  F032         	call	_addEvent	;wreg free
 38840                           
 38841                           ;../universalEvents.c: 150:             break;
 38842   0078BC  0012               	return	
 38843   0078BE                     l20083:
 38844   0078BE  0101               	movlb	1	; () banked
 38845   0078C0  51EA               	movf	defaultEvents@type& (0+255),w,b
 38846                           
 38847                           ; Switch size 1, requested type "simple"
 38848                           ; Number of cases is 5, Range of values is 0 to 4
 38849                           ; switch strategies available:
 38850                           ; Name         Instructions Cycles
 38851                           ; simple_byte           16     9 (average)
 38852                           ;	Chosen strategy is simple_byte
 38853   0078C2  0A00               	xorlw	0	; case 0
 38854   0078C4  B4D8               	btfsc	status,2,c
 38855   0078C6  D791               	goto	l20077
 38856   0078C8  0A01               	xorlw	1	; case 1
 38857   0078CA  B4D8               	btfsc	status,2,c
 38858   0078CC  D779               	goto	l646
 38859   0078CE  0A03               	xorlw	3	; case 2
 38860   0078D0  B4D8               	btfsc	status,2,c
 38861   0078D2  D79F               	goto	l20079
 38862   0078D4  0A01               	xorlw	1	; case 3
 38863   0078D6  B4D8               	btfsc	status,2,c
 38864   0078D8  D75E               	goto	l20075
 38865   0078DA  0A07               	xorlw	7	; case 4
 38866   0078DC  0012               	return	
 38867   0078DE                     __end_of_defaultEvents:
 38868                           	callstack 0
 38869                           
 38870 ;; *************** function _clearEvents *****************
 38871 ;; Defined at:
 38872 ;;		line 222 in file "../universalEvents.c"
 38873 ;; Parameters:    Size  Location     Type
 38874 ;;  io              1    wreg     unsigned char 
 38875 ;; Auto vars:     Size  Location     Type
 38876 ;;  io              1   39[BANK1 ] unsigned char 
 38877 ;; Return value:  Size  Location     Type
 38878 ;;                  1    wreg      void 
 38879 ;; Registers used:
 38880 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38881 ;; Tracked objects:
 38882 ;;		On entry : 0/0
 38883 ;;		On exit  : 0/0
 38884 ;;		Unchanged: 0/0
 38885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38887 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38889 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38890 ;;Total ram usage:        1 bytes
 38891 ;; Hardware stack levels used: 1
 38892 ;; Hardware stack levels required when called: 22
 38893 ;; This function calls:
 38894 ;;		_deleteActionRange
 38895 ;;		_deleteHappeningRange
 38896 ;; This function is called by:
 38897 ;;		_defaultEvents
 38898 ;; This function uses a non-reentrant model
 38899 ;;
 38900                           
 38901                           	psect	text165
 38902   00BF66                     __ptext165:
 38903                           	callstack 0
 38904   00BF66                     _clearEvents:
 38905                           	callstack 2
 38906                           
 38907                           ;incstack = 0
 38908                           ;clearEvents@io stored from wreg
 38909   00BF66  0101               	movlb	1	; () banked
 38910   00BF68  6FE5               	movwf	clearEvents@io& (0+255),b
 38911                           
 38912                           ;../universalEvents.c: 223:     deleteActionRange((uint8_t)(uint8_t)(8 + 5*(io)), 5);
 38913   00BF6A  0E05               	movlw	5
 38914   00BF6C  0101               	movlb	1	; () banked
 38915   00BF6E  6FDB               	movwf	deleteActionRange@number& (0+255),b
 38916   00BF70  51E5               	movf	clearEvents@io& (0+255),w,b
 38917   00BF72  0D05               	mullw	5
 38918   00BF74  50F3               	movf	243,w,c
 38919   00BF76  0F08               	addlw	8
 38920   00BF78  ECBF  F04C         	call	_deleteActionRange
 38921                           
 38922                           ;../universalEvents.c: 224:     deleteActionRange((uint8_t)(uint8_t)((8 + 5*(io)) | 0x80
      +                          ), 5);
 38923   00BF7C  0E05               	movlw	5
 38924   00BF7E  0101               	movlb	1	; () banked
 38925   00BF80  6FDB               	movwf	deleteActionRange@number& (0+255),b
 38926   00BF82  51E5               	movf	clearEvents@io& (0+255),w,b
 38927   00BF84  0D05               	mullw	5
 38928   00BF86  50F3               	movf	243,w,c
 38929   00BF88  0F08               	addlw	8
 38930   00BF8A  0980               	iorlw	128
 38931   00BF8C  ECBF  F04C         	call	_deleteActionRange
 38932                           
 38933                           ;../universalEvents.c: 225:     deleteHappeningRange((8 + 4*(io)), 4);
 38934   00BF90  0E04               	movlw	4
 38935   00BF92  0101               	movlb	1	; () banked
 38936   00BF94  6FDB               	movwf	deleteHappeningRange@number& (0+255),b
 38937   00BF96  51E5               	movf	clearEvents@io& (0+255),w,b
 38938   00BF98  0D04               	mullw	4
 38939   00BF9A  50F3               	movf	243,w,c
 38940   00BF9C  0F08               	addlw	8
 38941   00BF9E  EC03  F046         	call	_deleteHappeningRange
 38942   00BFA2  0012               	return		;funcret
 38943   00BFA4                     __end_of_clearEvents:
 38944                           	callstack 0
 38945                           
 38946 ;; *************** function _deleteHappeningRange *****************
 38947 ;; Defined at:
 38948 ;;		line 287 in file "../../VLCBlib_PIC/event_producer_happening.c"
 38949 ;; Parameters:    Size  Location     Type
 38950 ;;  happening       1    wreg     unsigned char 
 38951 ;;  number          1   29[BANK1 ] unsigned char 
 38952 ;; Auto vars:     Size  Location     Type
 38953 ;;  happening       1   35[BANK1 ] unsigned char 
 38954 ;;  h               1   36[BANK1 ] unsigned char 
 38955 ;;  f               1    0        struct .
 38956 ;;  tableIndex      1   37[BANK1 ] unsigned char 
 38957 ;; Return value:  Size  Location     Type
 38958 ;;                  1    wreg      void 
 38959 ;; Registers used:
 38960 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38961 ;; Tracked objects:
 38962 ;;		On entry : 0/0
 38963 ;;		On exit  : 0/0
 38964 ;;		Unchanged: 0/0
 38965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38966 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38967 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38968 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38969 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38970 ;;Total ram usage:        9 bytes
 38971 ;; Hardware stack levels used: 1
 38972 ;; Hardware stack levels required when called: 21
 38973 ;; This function calls:
 38974 ;;		_checkRemoveTableEntry
 38975 ;;		_flushFlashBlock
 38976 ;;		_readNVM
 38977 ;;		_rebuildHashtable
 38978 ;;		_validStart
 38979 ;;		_writeEv
 38980 ;; This function is called by:
 38981 ;;		_clearEvents
 38982 ;; This function uses a non-reentrant model
 38983 ;;
 38984                           
 38985                           	psect	text166
 38986   008C06                     __ptext166:
 38987                           	callstack 0
 38988   008C06                     _deleteHappeningRange:
 38989                           	callstack 2
 38990                           
 38991                           ;incstack = 0
 38992                           ;deleteHappeningRange@happening stored from wreg
 38993   008C06  0101               	movlb	1	; () banked
 38994   008C08  6FE1               	movwf	deleteHappeningRange@happening& (0+255),b
 38995                           
 38996                           ;../../VLCBlib_PIC/event_producer_happening.c: 288:     uint8_t tableIndex;;../../VLCBli
      +                          b_PIC/event_producer_happening.c: 289:     for (tableIndex=0; tableIndex < 255; tableInd
      +                          ex++) {
 38997   008C0A  0E00               	movlw	0
 38998   008C0C  0101               	movlb	1	; () banked
 38999   008C0E  6FE3               	movwf	deleteHappeningRange@tableIndex& (0+255),b
 39000   008C10                     l19793:
 39001                           
 39002                           ; BSR set to: 1
 39003                           ;../../VLCBlib_PIC/event_producer_happening.c: 290:         if ( validStart(tableIndex))
      +                           {
 39004   008C10  51E3               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 39005   008C12  EC9A  F05D         	call	_validStart
 39006   008C16  0900               	iorlw	0
 39007   008C18  B4D8               	btfsc	status,2,c
 39008   008C1A  D059               	goto	l19805
 39009   008C1C  0101               	movlb	1	; () banked
 39010   008C1E  51E3               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 39011   008C20  6FDC               	movwf	??_deleteHappeningRange& (0+255),b
 39012   008C22  6BDD               	clrf	(??_deleteHappeningRange+1)& (0+255),b
 39013   008C24  3BDC               	swapf	??_deleteHappeningRange& (0+255),f,b
 39014   008C26  3BDD               	swapf	(??_deleteHappeningRange+1)& (0+255),f,b
 39015   008C28  0EF0               	movlw	240
 39016   008C2A  17DD               	andwf	(??_deleteHappeningRange+1)& (0+255),f,b
 39017   008C2C  51DC               	movf	??_deleteHappeningRange& (0+255),w,b
 39018   008C2E  0B0F               	andlw	15
 39019   008C30  13DD               	iorwf	(??_deleteHappeningRange+1)& (0+255),f,b
 39020   008C32  0EF0               	movlw	240
 39021   008C34  17DC               	andwf	??_deleteHappeningRange& (0+255),f,b
 39022   008C36  0E80               	movlw	128
 39023   008C38  25DC               	addwf	??_deleteHappeningRange& (0+255),w,b
 39024   008C3A  6FDE               	movwf	(??_deleteHappeningRange+2)& (0+255),b
 39025   008C3C  0EEF               	movlw	239
 39026   008C3E  21DD               	addwfc	(??_deleteHappeningRange+1)& (0+255),w,b
 39027   008C40  6FDF               	movwf	(??_deleteHappeningRange+3)& (0+255),b
 39028   008C42  C1DE  F091         	movff	??_deleteHappeningRange+2,readNVM@index
 39029   008C46  C1DF  F092         	movff	??_deleteHappeningRange+3,readNVM@index+1
 39030   008C4A  0100               	movlb	0	; () banked
 39031   008C4C  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39032   008C4E  0E01               	movlw	1
 39033   008C50  EC31  F05B         	call	_readNVM
 39034                           
 39035                           ;../../VLCBlib_PIC/event_producer_happening.c: 295:             h = (Happening)readNVM(F
      +                          LASH_NVM_TYPE,
 39036   008C54  0101               	movlb	1	; () banked
 39037   008C56  51E3               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 39038   008C58  0D10               	mullw	16
 39039   008C5A  CFF3 F1DC          	movff	prodl,??_deleteHappeningRange
 39040   008C5E  CFF4 F1DD          	movff	prodh,??_deleteHappeningRange+1
 39041   008C62  0E86               	movlw	134
 39042   008C64  25DC               	addwf	??_deleteHappeningRange& (0+255),w,b
 39043   008C66  6FDE               	movwf	(??_deleteHappeningRange+2)& (0+255),b
 39044   008C68  0EEF               	movlw	239
 39045   008C6A  21DD               	addwfc	(??_deleteHappeningRange+1)& (0+255),w,b
 39046   008C6C  6FDF               	movwf	(??_deleteHappeningRange+3)& (0+255),b
 39047   008C6E  C1DE  F091         	movff	??_deleteHappeningRange+2,readNVM@index
 39048   008C72  C1DF  F092         	movff	??_deleteHappeningRange+3,readNVM@index+1
 39049   008C76  0100               	movlb	0	; () banked
 39050   008C78  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39051   008C7A  0E01               	movlw	1
 39052   008C7C  EC31  F05B         	call	_readNVM
 39053   008C80  0100               	movlb	0	; () banked
 39054   008C82  5191               	movf	?_readNVM& (0+255),w,b
 39055   008C84  0101               	movlb	1	; () banked
 39056   008C86  6FE2               	movwf	deleteHappeningRange@h& (0+255),b
 39057                           
 39058                           ; BSR set to: 1
 39059                           ;../../VLCBlib_PIC/event_producer_happening.c: 297:             if ((h >= happening) && 
      +                          (h < happening+number)) {
 39060   008C88  51E1               	movf	deleteHappeningRange@happening& (0+255),w,b
 39061   008C8A  5DE2               	subwf	deleteHappeningRange@h& (0+255),w,b
 39062   008C8C  A0D8               	btfss	status,0,c
 39063   008C8E  D01F               	goto	l19805
 39064                           
 39065                           ; BSR set to: 1
 39066   008C90  51DB               	movf	deleteHappeningRange@number& (0+255),w,b
 39067   008C92  C1E1  F1DC         	movff	deleteHappeningRange@happening,??_deleteHappeningRange
 39068   008C96  6BDD               	clrf	(??_deleteHappeningRange+1)& (0+255),b
 39069   008C98  27DC               	addwf	??_deleteHappeningRange& (0+255),f,b
 39070   008C9A  0E00               	movlw	0
 39071   008C9C  23DD               	addwfc	(??_deleteHappeningRange+1)& (0+255),f,b
 39072   008C9E  51E2               	movf	deleteHappeningRange@h& (0+255),w,b
 39073   008CA0  6FDE               	movwf	(??_deleteHappeningRange+2)& (0+255),b
 39074   008CA2  6BDF               	clrf	(??_deleteHappeningRange+3)& (0+255),b
 39075   008CA4  51DC               	movf	??_deleteHappeningRange& (0+255),w,b
 39076   008CA6  5DDE               	subwf	(??_deleteHappeningRange+2)& (0+255),w,b
 39077   008CA8  51DF               	movf	(??_deleteHappeningRange+3)& (0+255),w,b
 39078   008CAA  0A80               	xorlw	128
 39079   008CAC  6FE0               	movwf	(??_deleteHappeningRange+4)& (0+255),b
 39080   008CAE  51DD               	movf	(??_deleteHappeningRange+1)& (0+255),w,b
 39081   008CB0  0A80               	xorlw	128
 39082   008CB2  59E0               	subwfb	(??_deleteHappeningRange+4)& (0+255),w,b
 39083   008CB4  B0D8               	btfsc	status,0,c
 39084   008CB6  D00B               	goto	l19805
 39085                           
 39086                           ; BSR set to: 1
 39087                           ;../../VLCBlib_PIC/event_producer_happening.c: 298:                 writeEv(tableIndex, 
      +                          0, 0);
 39088   008CB8  0E00               	movlw	0
 39089   008CBA  6FCF               	movwf	writeEv@evNum& (0+255),b
 39090   008CBC  0E00               	movlw	0
 39091   008CBE  6FD0               	movwf	writeEv@evVal& (0+255),b
 39092   008CC0  51E3               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 39093   008CC2  EC69  F01B         	call	_writeEv
 39094                           
 39095                           ;../../VLCBlib_PIC/event_producer_happening.c: 299:                 checkRemoveTableEntr
      +                          y(tableIndex);
 39096   008CC6  0101               	movlb	1	; () banked
 39097   008CC8  51E3               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 39098   008CCA  ECEB  F05E         	call	_checkRemoveTableEntry
 39099   008CCE                     l19805:
 39100                           
 39101                           ;../../VLCBlib_PIC/event_producer_happening.c: 302:     }
 39102   008CCE  0101               	movlb	1	; () banked
 39103   008CD0  2BE3               	incf	deleteHappeningRange@tableIndex& (0+255),f,b
 39104                           
 39105                           ; BSR set to: 1
 39106   008CD2  29E3               	incf	deleteHappeningRange@tableIndex& (0+255),w,b
 39107   008CD4  A4D8               	btfss	status,2,c
 39108   008CD6  D79C               	goto	l19793
 39109                           
 39110                           ; BSR set to: 1
 39111                           ;../../VLCBlib_PIC/event_producer_happening.c: 303:     flushFlashBlock();
 39112   008CD8  ECBE  F054         	call	_flushFlashBlock	;wreg free
 39113                           
 39114                           ;../../VLCBlib_PIC/event_producer_happening.c: 304:     rebuildHashtable();
 39115   008CDC  ECAC  F03F         	call	_rebuildHashtable	;wreg free
 39116   008CE0  0012               	return		;funcret
 39117   008CE2                     __end_of_deleteHappeningRange:
 39118                           	callstack 0
 39119                           
 39120 ;; *************** function _deleteActionRange *****************
 39121 ;; Defined at:
 39122 ;;		line 529 in file "../event_consumerDualActionQueue.c"
 39123 ;; Parameters:    Size  Location     Type
 39124 ;;  action          1    wreg     unsigned char 
 39125 ;;  number          1   29[BANK1 ] unsigned char 
 39126 ;; Auto vars:     Size  Location     Type
 39127 ;;  action          1   36[BANK1 ] unsigned char 
 39128 ;;  e               1   37[BANK1 ] unsigned char 
 39129 ;;  updated         1   35[BANK1 ] enum E12766
 39130 ;;  tableIndex      1   38[BANK1 ] unsigned char 
 39131 ;; Return value:  Size  Location     Type
 39132 ;;                  1    wreg      void 
 39133 ;; Registers used:
 39134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39135 ;; Tracked objects:
 39136 ;;		On entry : 0/0
 39137 ;;		On exit  : 0/0
 39138 ;;		Unchanged: 0/0
 39139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39140 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39141 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39142 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39143 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39144 ;;Total ram usage:       10 bytes
 39145 ;; Hardware stack levels used: 1
 39146 ;; Hardware stack levels required when called: 21
 39147 ;; This function calls:
 39148 ;;		_checkRemoveTableEntry
 39149 ;;		_flushFlashBlock
 39150 ;;		_getEVs
 39151 ;;		_rebuildHashtable
 39152 ;;		_validStart
 39153 ;;		_writeEv
 39154 ;; This function is called by:
 39155 ;;		_clearEvents
 39156 ;; This function uses a non-reentrant model
 39157 ;;
 39158                           
 39159                           	psect	text167
 39160   00997E                     __ptext167:
 39161                           	callstack 0
 39162   00997E                     _deleteActionRange:
 39163                           	callstack 2
 39164                           
 39165                           ;incstack = 0
 39166                           ;deleteActionRange@action stored from wreg
 39167   00997E  0101               	movlb	1	; () banked
 39168   009980  6FE2               	movwf	deleteActionRange@action& (0+255),b
 39169                           
 39170                           ;../event_consumerDualActionQueue.c: 530:     uint8_t tableIndex;;../event_consumerDualA
      +                          ctionQueue.c: 531:     for (tableIndex=0; tableIndex < 255; tableIndex++) {
 39171   009982  0E00               	movlw	0
 39172   009984  0101               	movlb	1	; () banked
 39173   009986  6FE4               	movwf	deleteActionRange@tableIndex& (0+255),b
 39174   009988                     l19749:
 39175                           
 39176                           ; BSR set to: 1
 39177                           ;../event_consumerDualActionQueue.c: 532:         if (validStart(tableIndex)) {
 39178   009988  51E4               	movf	deleteActionRange@tableIndex& (0+255),w,b
 39179   00998A  EC9A  F05D         	call	_validStart
 39180   00998E  0900               	iorlw	0
 39181   009990  B4D8               	btfsc	status,2,c
 39182   009992  D044               	goto	l19779
 39183                           
 39184                           ;../event_consumerDualActionQueue.c: 533:             Boolean updated = FALSE;
 39185   009994  0E00               	movlw	0
 39186   009996  0101               	movlb	1	; () banked
 39187   009998  6FE1               	movwf	deleteActionRange@updated& (0+255),b
 39188                           
 39189                           ; BSR set to: 1
 39190                           ;../event_consumerDualActionQueue.c: 534:             uint8_t e;;../event_consumerDualAc
      +                          tionQueue.c: 535:             if (getEVs(tableIndex)) {
 39191   00999A  51E4               	movf	deleteActionRange@tableIndex& (0+255),w,b
 39192   00999C  EC57  F042         	call	_getEVs
 39193   0099A0  0900               	iorlw	0
 39194   0099A2  A4D8               	btfss	status,2,c
 39195   0099A4  0012               	return	
 39196                           
 39197                           ;../event_consumerDualActionQueue.c: 539:             for (e=1; e<20; e++) {
 39198   0099A6  0E01               	movlw	1
 39199   0099A8  0101               	movlb	1	; () banked
 39200   0099AA  6FE3               	movwf	deleteActionRange@e& (0+255),b
 39201   0099AC                     l19763:
 39202                           
 39203                           ; BSR set to: 1
 39204                           ;../event_consumerDualActionQueue.c: 540:                 if ((evs[e] >= action) && (evs
      +                          [e] < action+number)) {
 39205   0099AC  0E20               	movlw	low _evs
 39206   0099AE  25E3               	addwf	deleteActionRange@e& (0+255),w,b
 39207   0099B0  6ED9               	movwf	fsr2l,c
 39208   0099B2  6ADA               	clrf	fsr2h,c
 39209   0099B4  0E02               	movlw	high _evs
 39210   0099B6  22DA               	addwfc	fsr2h,f,c
 39211   0099B8  51E2               	movf	deleteActionRange@action& (0+255),w,b
 39212   0099BA  5CDE               	subwf	postinc2,w,c
 39213   0099BC  A0D8               	btfss	status,0,c
 39214   0099BE  D024               	goto	l19771
 39215                           
 39216                           ; BSR set to: 1
 39217   0099C0  51DB               	movf	deleteActionRange@number& (0+255),w,b
 39218   0099C2  C1E2  F1DC         	movff	deleteActionRange@action,??_deleteActionRange
 39219   0099C6  6BDD               	clrf	(??_deleteActionRange+1)& (0+255),b
 39220   0099C8  27DC               	addwf	??_deleteActionRange& (0+255),f,b
 39221   0099CA  0E00               	movlw	0
 39222   0099CC  23DD               	addwfc	(??_deleteActionRange+1)& (0+255),f,b
 39223   0099CE  0E20               	movlw	low _evs
 39224   0099D0  25E3               	addwf	deleteActionRange@e& (0+255),w,b
 39225   0099D2  6ED9               	movwf	fsr2l,c
 39226   0099D4  6ADA               	clrf	fsr2h,c
 39227   0099D6  0E02               	movlw	high _evs
 39228   0099D8  22DA               	addwfc	fsr2h,f,c
 39229   0099DA  50DF               	movf	indf2,w,c
 39230   0099DC  6FDE               	movwf	(??_deleteActionRange+2)& (0+255),b
 39231   0099DE  6BDF               	clrf	(??_deleteActionRange+3)& (0+255),b
 39232   0099E0  51DC               	movf	??_deleteActionRange& (0+255),w,b
 39233   0099E2  5DDE               	subwf	(??_deleteActionRange+2)& (0+255),w,b
 39234   0099E4  51DF               	movf	(??_deleteActionRange+3)& (0+255),w,b
 39235   0099E6  0A80               	xorlw	128
 39236   0099E8  6FE0               	movwf	(??_deleteActionRange+4)& (0+255),b
 39237   0099EA  51DD               	movf	(??_deleteActionRange+1)& (0+255),w,b
 39238   0099EC  0A80               	xorlw	128
 39239   0099EE  59E0               	subwfb	(??_deleteActionRange+4)& (0+255),w,b
 39240   0099F0  B0D8               	btfsc	status,0,c
 39241   0099F2  D00A               	goto	l19771
 39242                           
 39243                           ; BSR set to: 1
 39244                           ;../event_consumerDualActionQueue.c: 541:                     writeEv(tableIndex, e, 0);
 39245   0099F4  C1E3  F1CF         	movff	deleteActionRange@e,writeEv@evNum
 39246   0099F8  0E00               	movlw	0
 39247   0099FA  6FD0               	movwf	writeEv@evVal& (0+255),b
 39248   0099FC  51E4               	movf	deleteActionRange@tableIndex& (0+255),w,b
 39249   0099FE  EC69  F01B         	call	_writeEv
 39250                           
 39251                           ;../event_consumerDualActionQueue.c: 542:                     updated = TRUE;
 39252   009A02  0E01               	movlw	1
 39253   009A04  0101               	movlb	1	; () banked
 39254   009A06  6FE1               	movwf	deleteActionRange@updated& (0+255),b
 39255   009A08                     l19771:
 39256                           
 39257                           ; BSR set to: 1
 39258                           ;../event_consumerDualActionQueue.c: 544:             }
 39259   009A08  2BE3               	incf	deleteActionRange@e& (0+255),f,b
 39260                           
 39261                           ; BSR set to: 1
 39262   009A0A  0E13               	movlw	19
 39263   009A0C  65E3               	cpfsgt	deleteActionRange@e& (0+255),b
 39264   009A0E  D7CE               	goto	l19763
 39265                           
 39266                           ; BSR set to: 1
 39267                           ;../event_consumerDualActionQueue.c: 545:             if (updated) {
 39268   009A10  51E1               	movf	deleteActionRange@updated& (0+255),w,b
 39269   009A12  B4D8               	btfsc	status,2,c
 39270   009A14  D003               	goto	l19779
 39271                           
 39272                           ; BSR set to: 1
 39273                           ;../event_consumerDualActionQueue.c: 546:                 checkRemoveTableEntry(tableInd
      +                          ex);
 39274   009A16  51E4               	movf	deleteActionRange@tableIndex& (0+255),w,b
 39275   009A18  ECEB  F05E         	call	_checkRemoveTableEntry
 39276   009A1C                     l19779:
 39277                           
 39278                           ;../event_consumerDualActionQueue.c: 549:     }
 39279   009A1C  0101               	movlb	1	; () banked
 39280   009A1E  2BE4               	incf	deleteActionRange@tableIndex& (0+255),f,b
 39281                           
 39282                           ; BSR set to: 1
 39283   009A20  29E4               	incf	deleteActionRange@tableIndex& (0+255),w,b
 39284   009A22  A4D8               	btfss	status,2,c
 39285   009A24  D7B1               	goto	l19749
 39286                           
 39287                           ; BSR set to: 1
 39288                           ;../event_consumerDualActionQueue.c: 550:     flushFlashBlock();
 39289   009A26  ECBE  F054         	call	_flushFlashBlock	;wreg free
 39290                           
 39291                           ;../event_consumerDualActionQueue.c: 552:     rebuildHashtable();
 39292   009A2A  ECAC  F03F         	call	_rebuildHashtable	;wreg free
 39293   009A2E  0012               	return		;funcret
 39294   009A30                     __end_of_deleteActionRange:
 39295                           	callstack 0
 39296                           
 39297 ;; *************** function _addEvent *****************
 39298 ;; Defined at:
 39299 ;;		line 951 in file "../../VLCBlib_PIC/event_teach_large.c"
 39300 ;; Parameters:    Size  Location     Type
 39301 ;;  nodeNumber      2   29[BANK1 ] unsigned short 
 39302 ;;  eventNumber     2   31[BANK1 ] unsigned short 
 39303 ;;  evNum           1   33[BANK1 ] unsigned char 
 39304 ;;  evVal           1   34[BANK1 ] unsigned char 
 39305 ;;  forceOwnNN      1   35[BANK1 ] enum E12766
 39306 ;; Auto vars:     Size  Location     Type
 39307 ;;  e               1   42[BANK1 ] unsigned char 
 39308 ;;  f               1   41[BANK1 ] struct .
 39309 ;;  tableIndex      1   43[BANK1 ] unsigned char 
 39310 ;;  error           1   40[BANK1 ] unsigned char 
 39311 ;; Return value:  Size  Location     Type
 39312 ;;                  1    wreg      unsigned char 
 39313 ;; Registers used:
 39314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39315 ;; Tracked objects:
 39316 ;;		On entry : 0/0
 39317 ;;		On exit  : 0/0
 39318 ;;		Unchanged: 0/0
 39319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39320 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39321 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39322 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39323 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39324 ;;Total ram usage:       15 bytes
 39325 ;; Hardware stack levels used: 1
 39326 ;; Hardware stack levels required when called: 21
 39327 ;; This function calls:
 39328 ;;		_findEvent
 39329 ;;		_flushFlashBlock
 39330 ;;		_readNVM
 39331 ;;		_rebuildHashtable
 39332 ;;		_writeEv
 39333 ;;		_writeNVM
 39334 ;; This function is called by:
 39335 ;;		_defaultEvents
 39336 ;;		_APP_addEvent
 39337 ;; This function uses a non-reentrant model
 39338 ;;
 39339                           
 39340                           	psect	text168
 39341   0065FA                     __ptext168:
 39342                           	callstack 0
 39343   0065FA                     _addEvent:
 39344                           	callstack 5
 39345                           
 39346                           ;../../VLCBlib_PIC/event_teach_large.c: 952:     uint8_t tableIndex;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 953:     uint8_t error;;../../VLCBlib_PIC/event_teach_large.c: 955: 
      +                              tableIndex = findEvent(nodeNumber, eventNumber);
 39347                           
 39348                           ;incstack = 0
 39349   0065FA  C1DB  F1BE         	movff	addEvent@nodeNumber,findEvent@nodeNumber
 39350   0065FE  C1DC  F1BF         	movff	addEvent@nodeNumber+1,findEvent@nodeNumber+1
 39351   006602  C1DD  F1C0         	movff	addEvent@eventNumber,findEvent@eventNumber
 39352   006606  C1DE  F1C1         	movff	addEvent@eventNumber+1,findEvent@eventNumber+1
 39353   00660A  EC1A  F053         	call	_findEvent	;wreg free
 39354   00660E  0101               	movlb	1	; () banked
 39355   006610  6FE9               	movwf	addEvent@tableIndex& (0+255),b
 39356                           
 39357                           ; BSR set to: 1
 39358                           ;../../VLCBlib_PIC/event_teach_large.c: 956:     if (tableIndex == 0xff) {
 39359   006612  29E9               	incf	addEvent@tableIndex& (0+255),w,b
 39360   006614  A4D8               	btfss	status,2,c
 39361   006616  D0E2               	goto	l19915
 39362                           
 39363                           ; BSR set to: 1
 39364                           ;../../VLCBlib_PIC/event_teach_large.c: 962:         if (evVal == 0) {
 39365   006618  51E0               	movf	addEvent@evVal& (0+255),w,b
 39366   00661A  A4D8               	btfss	status,2,c
 39367   00661C  D002               	goto	l19873
 39368   00661E                     u20190:
 39369                           
 39370                           ;../../VLCBlib_PIC/event_teach_large.c: 963:             return 0;
 39371   00661E  0E00               	movlw	0
 39372   006620  0012               	return	
 39373   006622                     l19873:
 39374                           
 39375                           ; BSR set to: 1
 39376                           ;../../VLCBlib_PIC/event_teach_large.c: 965:         error = 1;
 39377   006622  0E01               	movlw	1
 39378   006624  6FE6               	movwf	addEvent@error& (0+255),b
 39379                           
 39380                           ;../../VLCBlib_PIC/event_teach_large.c: 967:         for (tableIndex=0; tableIndex<255; 
      +                          tableIndex++) {
 39381   006626  0E00               	movlw	0
 39382   006628  6FE9               	movwf	addEvent@tableIndex& (0+255),b
 39383   00662A                     l19879:
 39384                           
 39385                           ; BSR set to: 1
 39386                           ;../../VLCBlib_PIC/event_teach_large.c: 968:             EventTableFlags f;;../../VLCBli
      +                          b_PIC/event_teach_large.c: 969:             f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*tableIndex+0);
 39387   00662A  51E9               	movf	addEvent@tableIndex& (0+255),w,b
 39388   00662C  6FE2               	movwf	??_addEvent& (0+255),b
 39389   00662E  6BE3               	clrf	(??_addEvent+1)& (0+255),b
 39390   006630  3BE2               	swapf	??_addEvent& (0+255),f,b
 39391   006632  3BE3               	swapf	(??_addEvent+1)& (0+255),f,b
 39392   006634  0EF0               	movlw	240
 39393   006636  17E3               	andwf	(??_addEvent+1)& (0+255),f,b
 39394   006638  51E2               	movf	??_addEvent& (0+255),w,b
 39395   00663A  0B0F               	andlw	15
 39396   00663C  13E3               	iorwf	(??_addEvent+1)& (0+255),f,b
 39397   00663E  0EF0               	movlw	240
 39398   006640  17E2               	andwf	??_addEvent& (0+255),f,b
 39399   006642  0E80               	movlw	128
 39400   006644  25E2               	addwf	??_addEvent& (0+255),w,b
 39401   006646  6FE4               	movwf	(??_addEvent+2)& (0+255),b
 39402   006648  0EEF               	movlw	239
 39403   00664A  21E3               	addwfc	(??_addEvent+1)& (0+255),w,b
 39404   00664C  6FE5               	movwf	(??_addEvent+3)& (0+255),b
 39405   00664E  C1E4  F091         	movff	??_addEvent+2,readNVM@index
 39406   006652  C1E5  F092         	movff	??_addEvent+3,readNVM@index+1
 39407   006656  0100               	movlb	0	; () banked
 39408   006658  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39409   00665A  0E01               	movlw	1
 39410   00665C  EC31  F05B         	call	_readNVM
 39411   006660  0100               	movlb	0	; () banked
 39412   006662  5191               	movf	?_readNVM& (0+255),w,b
 39413   006664  0101               	movlb	1	; () banked
 39414   006666  6FE7               	movwf	addEvent@f& (0+255),b
 39415                           
 39416                           ; BSR set to: 1
 39417                           ;../../VLCBlib_PIC/event_teach_large.c: 970:             if (f.freeEntry) {
 39418   006668  AFE7               	btfss	addEvent@f& (0+255),7,b
 39419   00666A  D0AF               	goto	l19905
 39420                           
 39421                           ; BSR set to: 1
 39422                           ;../../VLCBlib_PIC/event_teach_large.c: 971:                 uint8_t e;;../../VLCBlib_PI
      +                          C/event_teach_large.c: 973:                 writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tableIn
      +                          dex+2, nodeNumber&0xFF);
 39423   00666C  51E9               	movf	addEvent@tableIndex& (0+255),w,b
 39424   00666E  0D10               	mullw	16
 39425   006670  CFF3 F1E2          	movff	prodl,??_addEvent
 39426   006674  CFF4 F1E3          	movff	prodh,??_addEvent+1
 39427   006678  0E82               	movlw	130
 39428   00667A  25E2               	addwf	??_addEvent& (0+255),w,b
 39429   00667C  6FE4               	movwf	(??_addEvent+2)& (0+255),b
 39430   00667E  0EEF               	movlw	239
 39431   006680  21E3               	addwfc	(??_addEvent+1)& (0+255),w,b
 39432   006682  6FE5               	movwf	(??_addEvent+3)& (0+255),b
 39433   006684  C1E4  F0A4         	movff	??_addEvent+2,writeNVM@index
 39434   006688  C1E5  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 39435   00668C  0100               	movlb	0	; () banked
 39436   00668E  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39437   006690  C1DB  F0A7         	movff	addEvent@nodeNumber,writeNVM@value
 39438   006694  0E01               	movlw	1
 39439   006696  ECC1  F05D         	call	_writeNVM
 39440                           
 39441                           ;../../VLCBlib_PIC/event_teach_large.c: 974:                 writeNVM(FLASH_NVM_TYPE, 0x
      +                          EF80 + 16*tableIndex+2 +1, nodeNumber>>8);
 39442   00669A  0101               	movlb	1	; () banked
 39443   00669C  51E9               	movf	addEvent@tableIndex& (0+255),w,b
 39444   00669E  0D10               	mullw	16
 39445   0066A0  CFF3 F1E2          	movff	prodl,??_addEvent
 39446   0066A4  CFF4 F1E3          	movff	prodh,??_addEvent+1
 39447   0066A8  0E83               	movlw	131
 39448   0066AA  25E2               	addwf	??_addEvent& (0+255),w,b
 39449   0066AC  6FE4               	movwf	(??_addEvent+2)& (0+255),b
 39450   0066AE  0EEF               	movlw	239
 39451   0066B0  21E3               	addwfc	(??_addEvent+1)& (0+255),w,b
 39452   0066B2  6FE5               	movwf	(??_addEvent+3)& (0+255),b
 39453   0066B4  C1E4  F0A4         	movff	??_addEvent+2,writeNVM@index
 39454   0066B8  C1E5  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 39455   0066BC  0100               	movlb	0	; () banked
 39456   0066BE  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39457   0066C0  0101               	movlb	1	; () banked
 39458   0066C2  51DC               	movf	(addEvent@nodeNumber+1)& (0+255),w,b
 39459   0066C4  0100               	movlb	0	; () banked
 39460   0066C6  6FA7               	movwf	writeNVM@value& (0+255),b
 39461   0066C8  0E01               	movlw	1
 39462   0066CA  ECC1  F05D         	call	_writeNVM
 39463                           
 39464                           ;../../VLCBlib_PIC/event_teach_large.c: 975:                 writeNVM(FLASH_NVM_TYPE, 0x
      +                          EF80 + 16*tableIndex+4, eventNumber&0xFF);
 39465   0066CE  0101               	movlb	1	; () banked
 39466   0066D0  51E9               	movf	addEvent@tableIndex& (0+255),w,b
 39467   0066D2  0D10               	mullw	16
 39468   0066D4  CFF3 F1E2          	movff	prodl,??_addEvent
 39469   0066D8  CFF4 F1E3          	movff	prodh,??_addEvent+1
 39470   0066DC  0E84               	movlw	132
 39471   0066DE  25E2               	addwf	??_addEvent& (0+255),w,b
 39472   0066E0  6FE4               	movwf	(??_addEvent+2)& (0+255),b
 39473   0066E2  0EEF               	movlw	239
 39474   0066E4  21E3               	addwfc	(??_addEvent+1)& (0+255),w,b
 39475   0066E6  6FE5               	movwf	(??_addEvent+3)& (0+255),b
 39476   0066E8  C1E4  F0A4         	movff	??_addEvent+2,writeNVM@index
 39477   0066EC  C1E5  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 39478   0066F0  0100               	movlb	0	; () banked
 39479   0066F2  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39480   0066F4  C1DD  F0A7         	movff	addEvent@eventNumber,writeNVM@value
 39481   0066F8  0E01               	movlw	1
 39482   0066FA  ECC1  F05D         	call	_writeNVM
 39483                           
 39484                           ;../../VLCBlib_PIC/event_teach_large.c: 976:                 writeNVM(FLASH_NVM_TYPE, 0x
      +                          EF80 + 16*tableIndex+4 +1, eventNumber>>8);
 39485   0066FE  0101               	movlb	1	; () banked
 39486   006700  51E9               	movf	addEvent@tableIndex& (0+255),w,b
 39487   006702  0D10               	mullw	16
 39488   006704  CFF3 F1E2          	movff	prodl,??_addEvent
 39489   006708  CFF4 F1E3          	movff	prodh,??_addEvent+1
 39490   00670C  0E85               	movlw	133
 39491   00670E  25E2               	addwf	??_addEvent& (0+255),w,b
 39492   006710  6FE4               	movwf	(??_addEvent+2)& (0+255),b
 39493   006712  0EEF               	movlw	239
 39494   006714  21E3               	addwfc	(??_addEvent+1)& (0+255),w,b
 39495   006716  6FE5               	movwf	(??_addEvent+3)& (0+255),b
 39496   006718  C1E4  F0A4         	movff	??_addEvent+2,writeNVM@index
 39497   00671C  C1E5  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 39498   006720  0100               	movlb	0	; () banked
 39499   006722  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39500   006724  0101               	movlb	1	; () banked
 39501   006726  51DE               	movf	(addEvent@eventNumber+1)& (0+255),w,b
 39502   006728  0100               	movlb	0	; () banked
 39503   00672A  6FA7               	movwf	writeNVM@value& (0+255),b
 39504   00672C  0E01               	movlw	1
 39505   00672E  ECC1  F05D         	call	_writeNVM
 39506                           
 39507                           ;../../VLCBlib_PIC/event_teach_large.c: 977:                 f.asByte = 0;
 39508   006732  0E00               	movlw	0
 39509   006734  0101               	movlb	1	; () banked
 39510   006736  6FE7               	movwf	addEvent@f& (0+255),b
 39511                           
 39512                           ; BSR set to: 1
 39513                           ;../../VLCBlib_PIC/event_teach_large.c: 978:                 f.forceOwnNN = forceOwnNN;
 39514   006738  B1E1               	btfsc	addEvent@forceOwnNN& (0+255),0,b
 39515   00673A  D002               	bra	u20215
 39516   00673C  9DE7               	bcf	addEvent@f& (0+255),6,b
 39517   00673E  D002               	bra	u20216
 39518   006740                     u20215:
 39519   006740  0101               	movlb	1	; () banked
 39520   006742  8DE7               	bsf	addEvent@f& (0+255),6,b
 39521   006744                     u20216:
 39522                           
 39523                           ; BSR set to: 1
 39524                           ;../../VLCBlib_PIC/event_teach_large.c: 979:                 writeNVM(FLASH_NVM_TYPE, 0x
      +                          EF80 + 16*tableIndex+0, f.asByte);
 39525   006744  51E9               	movf	addEvent@tableIndex& (0+255),w,b
 39526   006746  6FE2               	movwf	??_addEvent& (0+255),b
 39527   006748  6BE3               	clrf	(??_addEvent+1)& (0+255),b
 39528   00674A  3BE2               	swapf	??_addEvent& (0+255),f,b
 39529   00674C  3BE3               	swapf	(??_addEvent+1)& (0+255),f,b
 39530   00674E  0EF0               	movlw	240
 39531   006750  17E3               	andwf	(??_addEvent+1)& (0+255),f,b
 39532   006752  51E2               	movf	??_addEvent& (0+255),w,b
 39533   006754  0B0F               	andlw	15
 39534   006756  13E3               	iorwf	(??_addEvent+1)& (0+255),f,b
 39535   006758  0EF0               	movlw	240
 39536   00675A  17E2               	andwf	??_addEvent& (0+255),f,b
 39537   00675C  0E80               	movlw	128
 39538   00675E  25E2               	addwf	??_addEvent& (0+255),w,b
 39539   006760  6FE4               	movwf	(??_addEvent+2)& (0+255),b
 39540   006762  0EEF               	movlw	239
 39541   006764  21E3               	addwfc	(??_addEvent+1)& (0+255),w,b
 39542   006766  6FE5               	movwf	(??_addEvent+3)& (0+255),b
 39543   006768  C1E4  F0A4         	movff	??_addEvent+2,writeNVM@index
 39544   00676C  C1E5  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 39545   006770  0100               	movlb	0	; () banked
 39546   006772  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39547   006774  C1E7  F0A7         	movff	addEvent@f,writeNVM@value
 39548   006778  0E01               	movlw	1
 39549   00677A  ECC1  F05D         	call	_writeNVM
 39550                           
 39551                           ;../../VLCBlib_PIC/event_teach_large.c: 981:                 for (e = 0; e < 10; e++) {
 39552   00677E  0E00               	movlw	0
 39553   006780  0101               	movlb	1	; () banked
 39554   006782  6FE8               	movwf	addEvent@e& (0+255),b
 39555   006784                     l19897:
 39556                           
 39557                           ; BSR set to: 1
 39558                           ;../../VLCBlib_PIC/event_teach_large.c: 982:                     writeNVM(FLASH_NVM_TYPE
      +                          , 0xEF80 + 16*tableIndex+6 +e, 0);
 39559   006784  51E9               	movf	addEvent@tableIndex& (0+255),w,b
 39560   006786  0D10               	mullw	16
 39561   006788  CFF3 F1E2          	movff	prodl,??_addEvent
 39562   00678C  CFF4 F1E3          	movff	prodh,??_addEvent+1
 39563   006790  51E8               	movf	addEvent@e& (0+255),w,b
 39564   006792  27E2               	addwf	??_addEvent& (0+255),f,b
 39565   006794  0E00               	movlw	0
 39566   006796  23E3               	addwfc	(??_addEvent+1)& (0+255),f,b
 39567   006798  0E86               	movlw	134
 39568   00679A  25E2               	addwf	??_addEvent& (0+255),w,b
 39569   00679C  6FE4               	movwf	(??_addEvent+2)& (0+255),b
 39570   00679E  0EEF               	movlw	239
 39571   0067A0  21E3               	addwfc	(??_addEvent+1)& (0+255),w,b
 39572   0067A2  6FE5               	movwf	(??_addEvent+3)& (0+255),b
 39573   0067A4  C1E4  F0A4         	movff	??_addEvent+2,writeNVM@index
 39574   0067A8  C1E5  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 39575   0067AC  0100               	movlb	0	; () banked
 39576   0067AE  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39577   0067B0  0E00               	movlw	0
 39578   0067B2  6FA7               	movwf	writeNVM@value& (0+255),b
 39579   0067B4  0E01               	movlw	1
 39580   0067B6  ECC1  F05D         	call	_writeNVM
 39581                           
 39582                           ;../../VLCBlib_PIC/event_teach_large.c: 983:                 }
 39583   0067BA  0101               	movlb	1	; () banked
 39584   0067BC  2BE8               	incf	addEvent@e& (0+255),f,b
 39585                           
 39586                           ; BSR set to: 1
 39587   0067BE  0E09               	movlw	9
 39588   0067C0  65E8               	cpfsgt	addEvent@e& (0+255),b
 39589   0067C2  D7E0               	goto	l19897
 39590                           
 39591                           ; BSR set to: 1
 39592                           ;../../VLCBlib_PIC/event_teach_large.c: 984:                 error = 0;
 39593   0067C4  0E00               	movlw	0
 39594   0067C6  6FE6               	movwf	addEvent@error& (0+255),b
 39595                           
 39596                           ;../../VLCBlib_PIC/event_teach_large.c: 985:                 break;
 39597   0067C8  D004               	goto	u20230
 39598   0067CA                     l19905:
 39599                           
 39600                           ; BSR set to: 1
 39601                           ;../../VLCBlib_PIC/event_teach_large.c: 987:         }
 39602   0067CA  2BE9               	incf	addEvent@tableIndex& (0+255),f,b
 39603                           
 39604                           ; BSR set to: 1
 39605   0067CC  29E9               	incf	addEvent@tableIndex& (0+255),w,b
 39606   0067CE  A4D8               	btfss	status,2,c
 39607   0067D0  D72C               	goto	l19879
 39608   0067D2                     u20230:
 39609                           
 39610                           ; BSR set to: 1
 39611                           ;../../VLCBlib_PIC/event_teach_large.c: 988:         if (error) {
 39612   0067D2  51E6               	movf	addEvent@error& (0+255),w,b
 39613   0067D4  B4D8               	btfsc	status,2,c
 39614   0067D6  D002               	goto	l19915
 39615                           
 39616                           ; BSR set to: 1
 39617                           ;../../VLCBlib_PIC/event_teach_large.c: 989:             return CMDERR_TOO_MANY_EVENTS;
 39618   0067D8  0E04               	movlw	4
 39619   0067DA  0012               	return	
 39620   0067DC                     l19915:
 39621                           
 39622                           ; BSR set to: 1
 39623                           ;../../VLCBlib_PIC/event_teach_large.c: 993:     if (writeEv(tableIndex, evNum, evVal)) 
      +                          {
 39624   0067DC  C1DF  F1CF         	movff	addEvent@evNum,writeEv@evNum
 39625   0067E0  C1E0  F1D0         	movff	addEvent@evVal,writeEv@evVal
 39626   0067E4  51E9               	movf	addEvent@tableIndex& (0+255),w,b
 39627   0067E6  EC69  F01B         	call	_writeEv
 39628   0067EA  0900               	iorlw	0
 39629   0067EC  B4D8               	btfsc	status,2,c
 39630   0067EE  D002               	goto	l19921
 39631                           
 39632                           ;../../VLCBlib_PIC/event_teach_large.c: 995:         return CMDERR_INV_EV_IDX;
 39633   0067F0  0E06               	movlw	6
 39634   0067F2  0012               	return	
 39635   0067F4                     l19921:
 39636                           
 39637                           ;../../VLCBlib_PIC/event_teach_large.c: 998:     flushFlashBlock();
 39638   0067F4  ECBE  F054         	call	_flushFlashBlock	;wreg free
 39639                           
 39640                           ;../../VLCBlib_PIC/event_teach_large.c: 1000:     rebuildHashtable();
 39641   0067F8  ECAC  F03F         	call	_rebuildHashtable	;wreg free
 39642   0067FC  D710               	goto	u20190
 39643   0067FE                     __end_of_addEvent:
 39644                           	callstack 0
 39645                           
 39646 ;; *************** function _writeEv *****************
 39647 ;; Defined at:
 39648 ;;		line 1052 in file "../../VLCBlib_PIC/event_teach_large.c"
 39649 ;; Parameters:    Size  Location     Type
 39650 ;;  tableIndex      1    wreg     unsigned char 
 39651 ;;  evNum           1   17[BANK1 ] unsigned char 
 39652 ;;  evVal           1   18[BANK1 ] unsigned char 
 39653 ;; Auto vars:     Size  Location     Type
 39654 ;;  tableIndex      1   27[BANK1 ] unsigned char 
 39655 ;;  e               1   25[BANK1 ] unsigned char 
 39656 ;;  nextF           1   24[BANK1 ] struct .
 39657 ;;  nextIdx         1   28[BANK1 ] unsigned char 
 39658 ;;  f               1   26[BANK1 ] struct .
 39659 ;;  startIndex      1   23[BANK1 ] unsigned char 
 39660 ;; Return value:  Size  Location     Type
 39661 ;;                  1    wreg      unsigned char 
 39662 ;; Registers used:
 39663 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39664 ;; Tracked objects:
 39665 ;;		On entry : 0/0
 39666 ;;		On exit  : 0/0
 39667 ;;		Unchanged: 0/0
 39668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39669 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39670 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39671 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39672 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39673 ;;Total ram usage:       12 bytes
 39674 ;; Hardware stack levels used: 1
 39675 ;; Hardware stack levels required when called: 20
 39676 ;; This function calls:
 39677 ;;		_checkRemoveTableEntry
 39678 ;;		_readNVM
 39679 ;;		_writeNVM
 39680 ;; This function is called by:
 39681 ;;		_deleteActionRange
 39682 ;;		_APP_addEvent
 39683 ;;		_addEvent
 39684 ;;		_deleteHappeningRange
 39685 ;; This function uses a non-reentrant model
 39686 ;;
 39687                           
 39688                           	psect	text169
 39689   0036D2                     __ptext169:
 39690                           	callstack 0
 39691   0036D2                     _writeEv:
 39692                           	callstack 6
 39693                           
 39694                           ;incstack = 0
 39695                           ;writeEv@tableIndex stored from wreg
 39696   0036D2  0101               	movlb	1	; () banked
 39697   0036D4  6FD9               	movwf	writeEv@tableIndex& (0+255),b
 39698                           
 39699                           ;../../VLCBlib_PIC/event_teach_large.c: 1053:     EventTableFlags f;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1054:     uint8_t startIndex = tableIndex;
 39700   0036D6  C1D9  F1D5         	movff	writeEv@tableIndex,writeEv@startIndex
 39701                           
 39702                           ;../../VLCBlib_PIC/event_teach_large.c: 1055:     if (evNum >= 20) {
 39703   0036DA  0E13               	movlw	19
 39704   0036DC  0101               	movlb	1	; () banked
 39705   0036DE  65CF               	cpfsgt	writeEv@evNum& (0+255),b
 39706   0036E0  D14F               	goto	l19557
 39707                           
 39708                           ; BSR set to: 1
 39709                           ;../../VLCBlib_PIC/event_teach_large.c: 1056:         return CMDERR_INV_EV_IDX;
 39710   0036E2  0E06               	movlw	6
 39711   0036E4  0012               	return	
 39712   0036E6                     l19495:
 39713                           
 39714                           ; BSR set to: 1
 39715                           ;../../VLCBlib_PIC/event_teach_large.c: 1059:         uint8_t nextIdx;;../../VLCBlib_PIC
      +                          /event_teach_large.c: 1062:         evNum -= 10;
 39716   0036E6  0E0A               	movlw	10
 39717   0036E8  5FCF               	subwf	writeEv@evNum& (0+255),f,b
 39718                           
 39719                           ; BSR set to: 1
 39720                           ;../../VLCBlib_PIC/event_teach_large.c: 1063:         f.asByte = (uint8_t)readNVM(FLASH_
      +                          NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 39721   0036EA  51D9               	movf	writeEv@tableIndex& (0+255),w,b
 39722   0036EC  6FD1               	movwf	??_writeEv& (0+255),b
 39723   0036EE  6BD2               	clrf	(??_writeEv+1)& (0+255),b
 39724   0036F0  3BD1               	swapf	??_writeEv& (0+255),f,b
 39725   0036F2  3BD2               	swapf	(??_writeEv+1)& (0+255),f,b
 39726   0036F4  0EF0               	movlw	240
 39727   0036F6  17D2               	andwf	(??_writeEv+1)& (0+255),f,b
 39728   0036F8  51D1               	movf	??_writeEv& (0+255),w,b
 39729   0036FA  0B0F               	andlw	15
 39730   0036FC  13D2               	iorwf	(??_writeEv+1)& (0+255),f,b
 39731   0036FE  0EF0               	movlw	240
 39732   003700  17D1               	andwf	??_writeEv& (0+255),f,b
 39733   003702  0E80               	movlw	128
 39734   003704  25D1               	addwf	??_writeEv& (0+255),w,b
 39735   003706  6FD3               	movwf	(??_writeEv+2)& (0+255),b
 39736   003708  0EEF               	movlw	239
 39737   00370A  21D2               	addwfc	(??_writeEv+1)& (0+255),w,b
 39738   00370C  6FD4               	movwf	(??_writeEv+3)& (0+255),b
 39739   00370E  C1D3  F091         	movff	??_writeEv+2,readNVM@index
 39740   003712  C1D4  F092         	movff	??_writeEv+3,readNVM@index+1
 39741   003716  0100               	movlb	0	; () banked
 39742   003718  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39743   00371A  0E01               	movlw	1
 39744   00371C  EC31  F05B         	call	_readNVM
 39745   003720  0100               	movlb	0	; () banked
 39746   003722  5191               	movf	?_readNVM& (0+255),w,b
 39747   003724  0101               	movlb	1	; () banked
 39748   003726  6FD8               	movwf	writeEv@f& (0+255),b
 39749                           
 39750                           ; BSR set to: 1
 39751                           ;../../VLCBlib_PIC/event_teach_large.c: 1065:         if (f.continued) {
 39752   003728  A9D8               	btfss	writeEv@f& (0+255),4,b
 39753   00372A  D01E               	goto	l19509
 39754                           
 39755                           ; BSR set to: 1
 39756                           ;../../VLCBlib_PIC/event_teach_large.c: 1066:             tableIndex = (uint8_t)readNVM(
      +                          FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+1);
 39757   00372C  51D9               	movf	writeEv@tableIndex& (0+255),w,b
 39758   00372E  0D10               	mullw	16
 39759   003730  CFF3 F1D1          	movff	prodl,??_writeEv
 39760   003734  CFF4 F1D2          	movff	prodh,??_writeEv+1
 39761   003738  0E81               	movlw	129
 39762   00373A  25D1               	addwf	??_writeEv& (0+255),w,b
 39763   00373C  6FD3               	movwf	(??_writeEv+2)& (0+255),b
 39764   00373E  0EEF               	movlw	239
 39765   003740  21D2               	addwfc	(??_writeEv+1)& (0+255),w,b
 39766   003742  6FD4               	movwf	(??_writeEv+3)& (0+255),b
 39767   003744  C1D3  F091         	movff	??_writeEv+2,readNVM@index
 39768   003748  C1D4  F092         	movff	??_writeEv+3,readNVM@index+1
 39769   00374C  0100               	movlb	0	; () banked
 39770   00374E  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39771   003750  0E01               	movlw	1
 39772   003752  EC31  F05B         	call	_readNVM
 39773   003756  0100               	movlb	0	; () banked
 39774   003758  5191               	movf	?_readNVM& (0+255),w,b
 39775   00375A  0101               	movlb	1	; () banked
 39776   00375C  6FD9               	movwf	writeEv@tableIndex& (0+255),b
 39777                           
 39778                           ; BSR set to: 1
 39779                           ;../../VLCBlib_PIC/event_teach_large.c: 1067:             if (tableIndex == 0xff) {
 39780   00375E  29D9               	incf	writeEv@tableIndex& (0+255),w,b
 39781   003760  A4D8               	btfss	status,2,c
 39782   003762  D10E               	goto	l19557
 39783                           
 39784                           ; BSR set to: 1
 39785                           ;../../VLCBlib_PIC/event_teach_large.c: 1068:                 return CMDERR_INVALID_EVEN
      +                          T;
 39786   003764  0E07               	movlw	7
 39787   003766  0012               	return	
 39788   003768                     l19509:
 39789                           
 39790                           ; BSR set to: 1
 39791                           ;../../VLCBlib_PIC/event_teach_large.c: 1077:             if (evVal == 0) {
 39792   003768  51D0               	movf	writeEv@evVal& (0+255),w,b
 39793   00376A  A4D8               	btfss	status,2,c
 39794   00376C  D002               	goto	l19515
 39795   00376E                     u19640:
 39796                           
 39797                           ;../../VLCBlib_PIC/event_teach_large.c: 1078:                 return 0;
 39798   00376E  0E00               	movlw	0
 39799   003770  0012               	return	
 39800   003772                     l19515:
 39801                           
 39802                           ; BSR set to: 1
 39803                           ;../../VLCBlib_PIC/event_teach_large.c: 1081:             for (nextIdx = tableIndex+1 ; 
      +                          nextIdx < 255; nextIdx++) {
 39804   003772  29D9               	incf	writeEv@tableIndex& (0+255),w,b
 39805   003774  6FDA               	movwf	writeEv@nextIdx& (0+255),b
 39806   003776  D0FB               	goto	l19549
 39807   003778                     l19519:
 39808                           
 39809                           ; BSR set to: 1
 39810                           ;../../VLCBlib_PIC/event_teach_large.c: 1082:                 EventTableFlags nextF;;../
      +                          ../VLCBlib_PIC/event_teach_large.c: 1083:                 nextF.asByte = (uint8_t)readNV
      +                          M(FLASH_NVM_TYPE, 0xEF80 + 16*nextIdx+0);
 39811   003778  51DA               	movf	writeEv@nextIdx& (0+255),w,b
 39812   00377A  6FD1               	movwf	??_writeEv& (0+255),b
 39813   00377C  6BD2               	clrf	(??_writeEv+1)& (0+255),b
 39814   00377E  3BD1               	swapf	??_writeEv& (0+255),f,b
 39815   003780  3BD2               	swapf	(??_writeEv+1)& (0+255),f,b
 39816   003782  0EF0               	movlw	240
 39817   003784  17D2               	andwf	(??_writeEv+1)& (0+255),f,b
 39818   003786  51D1               	movf	??_writeEv& (0+255),w,b
 39819   003788  0B0F               	andlw	15
 39820   00378A  13D2               	iorwf	(??_writeEv+1)& (0+255),f,b
 39821   00378C  0EF0               	movlw	240
 39822   00378E  17D1               	andwf	??_writeEv& (0+255),f,b
 39823   003790  0E80               	movlw	128
 39824   003792  25D1               	addwf	??_writeEv& (0+255),w,b
 39825   003794  6FD3               	movwf	(??_writeEv+2)& (0+255),b
 39826   003796  0EEF               	movlw	239
 39827   003798  21D2               	addwfc	(??_writeEv+1)& (0+255),w,b
 39828   00379A  6FD4               	movwf	(??_writeEv+3)& (0+255),b
 39829   00379C  C1D3  F091         	movff	??_writeEv+2,readNVM@index
 39830   0037A0  C1D4  F092         	movff	??_writeEv+3,readNVM@index+1
 39831   0037A4  0100               	movlb	0	; () banked
 39832   0037A6  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39833   0037A8  0E01               	movlw	1
 39834   0037AA  EC31  F05B         	call	_readNVM
 39835   0037AE  0100               	movlb	0	; () banked
 39836   0037B0  5191               	movf	?_readNVM& (0+255),w,b
 39837   0037B2  0101               	movlb	1	; () banked
 39838   0037B4  6FD6               	movwf	writeEv@nextF& (0+255),b
 39839                           
 39840                           ; BSR set to: 1
 39841                           ;../../VLCBlib_PIC/event_teach_large.c: 1084:                 if (nextF.freeEntry) {
 39842   0037B6  AFD6               	btfss	writeEv@nextF& (0+255),7,b
 39843   0037B8  D0D9               	goto	l19547
 39844                           
 39845                           ; BSR set to: 1
 39846                           ;../../VLCBlib_PIC/event_teach_large.c: 1085:                     uint8_t e;;../../VLCBl
      +                          ib_PIC/event_teach_large.c: 1087:                     writeNVM(FLASH_NVM_TYPE, 0xEF80 + 
      +                          16*nextIdx+2, 0xff);
 39847   0037BA  51DA               	movf	writeEv@nextIdx& (0+255),w,b
 39848   0037BC  0D10               	mullw	16
 39849   0037BE  CFF3 F1D1          	movff	prodl,??_writeEv
 39850   0037C2  CFF4 F1D2          	movff	prodh,??_writeEv+1
 39851   0037C6  0E82               	movlw	130
 39852   0037C8  25D1               	addwf	??_writeEv& (0+255),w,b
 39853   0037CA  6FD3               	movwf	(??_writeEv+2)& (0+255),b
 39854   0037CC  0EEF               	movlw	239
 39855   0037CE  21D2               	addwfc	(??_writeEv+1)& (0+255),w,b
 39856   0037D0  6FD4               	movwf	(??_writeEv+3)& (0+255),b
 39857   0037D2  C1D3  F0A4         	movff	??_writeEv+2,writeNVM@index
 39858   0037D6  C1D4  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39859   0037DA  0100               	movlb	0	; () banked
 39860   0037DC  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39861   0037DE  0EFF               	movlw	255
 39862   0037E0  6FA7               	movwf	writeNVM@value& (0+255),b
 39863   0037E2  0E01               	movlw	1
 39864   0037E4  ECC1  F05D         	call	_writeNVM
 39865                           
 39866                           ;../../VLCBlib_PIC/event_teach_large.c: 1088:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*nextIdx+2 +1, 0xff);
 39867   0037E8  0101               	movlb	1	; () banked
 39868   0037EA  51DA               	movf	writeEv@nextIdx& (0+255),w,b
 39869   0037EC  0D10               	mullw	16
 39870   0037EE  CFF3 F1D1          	movff	prodl,??_writeEv
 39871   0037F2  CFF4 F1D2          	movff	prodh,??_writeEv+1
 39872   0037F6  0E83               	movlw	131
 39873   0037F8  25D1               	addwf	??_writeEv& (0+255),w,b
 39874   0037FA  6FD3               	movwf	(??_writeEv+2)& (0+255),b
 39875   0037FC  0EEF               	movlw	239
 39876   0037FE  21D2               	addwfc	(??_writeEv+1)& (0+255),w,b
 39877   003800  6FD4               	movwf	(??_writeEv+3)& (0+255),b
 39878   003802  C1D3  F0A4         	movff	??_writeEv+2,writeNVM@index
 39879   003806  C1D4  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39880   00380A  0100               	movlb	0	; () banked
 39881   00380C  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39882   00380E  0EFF               	movlw	255
 39883   003810  6FA7               	movwf	writeNVM@value& (0+255),b
 39884   003812  0E01               	movlw	1
 39885   003814  ECC1  F05D         	call	_writeNVM
 39886                           
 39887                           ;../../VLCBlib_PIC/event_teach_large.c: 1089:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*nextIdx+4, 0xff);
 39888   003818  0101               	movlb	1	; () banked
 39889   00381A  51DA               	movf	writeEv@nextIdx& (0+255),w,b
 39890   00381C  0D10               	mullw	16
 39891   00381E  CFF3 F1D1          	movff	prodl,??_writeEv
 39892   003822  CFF4 F1D2          	movff	prodh,??_writeEv+1
 39893   003826  0E84               	movlw	132
 39894   003828  25D1               	addwf	??_writeEv& (0+255),w,b
 39895   00382A  6FD3               	movwf	(??_writeEv+2)& (0+255),b
 39896   00382C  0EEF               	movlw	239
 39897   00382E  21D2               	addwfc	(??_writeEv+1)& (0+255),w,b
 39898   003830  6FD4               	movwf	(??_writeEv+3)& (0+255),b
 39899   003832  C1D3  F0A4         	movff	??_writeEv+2,writeNVM@index
 39900   003836  C1D4  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39901   00383A  0100               	movlb	0	; () banked
 39902   00383C  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39903   00383E  0EFF               	movlw	255
 39904   003840  6FA7               	movwf	writeNVM@value& (0+255),b
 39905   003842  0E01               	movlw	1
 39906   003844  ECC1  F05D         	call	_writeNVM
 39907                           
 39908                           ;../../VLCBlib_PIC/event_teach_large.c: 1090:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*nextIdx+4 +1, 0xff);
 39909   003848  0101               	movlb	1	; () banked
 39910   00384A  51DA               	movf	writeEv@nextIdx& (0+255),w,b
 39911   00384C  0D10               	mullw	16
 39912   00384E  CFF3 F1D1          	movff	prodl,??_writeEv
 39913   003852  CFF4 F1D2          	movff	prodh,??_writeEv+1
 39914   003856  0E85               	movlw	133
 39915   003858  25D1               	addwf	??_writeEv& (0+255),w,b
 39916   00385A  6FD3               	movwf	(??_writeEv+2)& (0+255),b
 39917   00385C  0EEF               	movlw	239
 39918   00385E  21D2               	addwfc	(??_writeEv+1)& (0+255),w,b
 39919   003860  6FD4               	movwf	(??_writeEv+3)& (0+255),b
 39920   003862  C1D3  F0A4         	movff	??_writeEv+2,writeNVM@index
 39921   003866  C1D4  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39922   00386A  0100               	movlb	0	; () banked
 39923   00386C  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39924   00386E  0EFF               	movlw	255
 39925   003870  6FA7               	movwf	writeNVM@value& (0+255),b
 39926   003872  0E01               	movlw	1
 39927   003874  ECC1  F05D         	call	_writeNVM
 39928                           
 39929                           ;../../VLCBlib_PIC/event_teach_large.c: 1091:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*nextIdx+0, 0x20);
 39930   003878  0101               	movlb	1	; () banked
 39931   00387A  51DA               	movf	writeEv@nextIdx& (0+255),w,b
 39932   00387C  6FD1               	movwf	??_writeEv& (0+255),b
 39933   00387E  6BD2               	clrf	(??_writeEv+1)& (0+255),b
 39934   003880  3BD1               	swapf	??_writeEv& (0+255),f,b
 39935   003882  3BD2               	swapf	(??_writeEv+1)& (0+255),f,b
 39936   003884  0EF0               	movlw	240
 39937   003886  17D2               	andwf	(??_writeEv+1)& (0+255),f,b
 39938   003888  51D1               	movf	??_writeEv& (0+255),w,b
 39939   00388A  0B0F               	andlw	15
 39940   00388C  13D2               	iorwf	(??_writeEv+1)& (0+255),f,b
 39941   00388E  0EF0               	movlw	240
 39942   003890  17D1               	andwf	??_writeEv& (0+255),f,b
 39943   003892  0E80               	movlw	128
 39944   003894  25D1               	addwf	??_writeEv& (0+255),w,b
 39945   003896  6FD3               	movwf	(??_writeEv+2)& (0+255),b
 39946   003898  0EEF               	movlw	239
 39947   00389A  21D2               	addwfc	(??_writeEv+1)& (0+255),w,b
 39948   00389C  6FD4               	movwf	(??_writeEv+3)& (0+255),b
 39949   00389E  C1D3  F0A4         	movff	??_writeEv+2,writeNVM@index
 39950   0038A2  C1D4  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39951   0038A6  0100               	movlb	0	; () banked
 39952   0038A8  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39953   0038AA  0E20               	movlw	32
 39954   0038AC  6FA7               	movwf	writeNVM@value& (0+255),b
 39955   0038AE  0E01               	movlw	1
 39956   0038B0  ECC1  F05D         	call	_writeNVM
 39957                           
 39958                           ;../../VLCBlib_PIC/event_teach_large.c: 1092:                     for (e = 0; e < 10; e+
      +                          +) {
 39959   0038B4  0E00               	movlw	0
 39960   0038B6  0101               	movlb	1	; () banked
 39961   0038B8  6FD7               	movwf	writeEv@e& (0+255),b
 39962   0038BA                     l19533:
 39963                           
 39964                           ; BSR set to: 1
 39965                           ;../../VLCBlib_PIC/event_teach_large.c: 1093:                         writeNVM(FLASH_NVM
      +                          _TYPE, 0xEF80 + 16*nextIdx+6 +e, 0);
 39966   0038BA  51DA               	movf	writeEv@nextIdx& (0+255),w,b
 39967   0038BC  0D10               	mullw	16
 39968   0038BE  CFF3 F1D1          	movff	prodl,??_writeEv
 39969   0038C2  CFF4 F1D2          	movff	prodh,??_writeEv+1
 39970   0038C6  51D7               	movf	writeEv@e& (0+255),w,b
 39971   0038C8  27D1               	addwf	??_writeEv& (0+255),f,b
 39972   0038CA  0E00               	movlw	0
 39973   0038CC  23D2               	addwfc	(??_writeEv+1)& (0+255),f,b
 39974   0038CE  0E86               	movlw	134
 39975   0038D0  25D1               	addwf	??_writeEv& (0+255),w,b
 39976   0038D2  6FD3               	movwf	(??_writeEv+2)& (0+255),b
 39977   0038D4  0EEF               	movlw	239
 39978   0038D6  21D2               	addwfc	(??_writeEv+1)& (0+255),w,b
 39979   0038D8  6FD4               	movwf	(??_writeEv+3)& (0+255),b
 39980   0038DA  C1D3  F0A4         	movff	??_writeEv+2,writeNVM@index
 39981   0038DE  C1D4  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39982   0038E2  0100               	movlb	0	; () banked
 39983   0038E4  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39984   0038E6  0E00               	movlw	0
 39985   0038E8  6FA7               	movwf	writeNVM@value& (0+255),b
 39986   0038EA  0E01               	movlw	1
 39987   0038EC  ECC1  F05D         	call	_writeNVM
 39988                           
 39989                           ;../../VLCBlib_PIC/event_teach_large.c: 1094:                     }
 39990   0038F0  0101               	movlb	1	; () banked
 39991   0038F2  2BD7               	incf	writeEv@e& (0+255),f,b
 39992                           
 39993                           ; BSR set to: 1
 39994   0038F4  0E09               	movlw	9
 39995   0038F6  65D7               	cpfsgt	writeEv@e& (0+255),b
 39996   0038F8  D7E0               	goto	l19533
 39997                           
 39998                           ; BSR set to: 1
 39999                           ;../../VLCBlib_PIC/event_teach_large.c: 1096:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*tableIndex+1, nextIdx);
 40000   0038FA  51D9               	movf	writeEv@tableIndex& (0+255),w,b
 40001   0038FC  0D10               	mullw	16
 40002   0038FE  CFF3 F1D1          	movff	prodl,??_writeEv
 40003   003902  CFF4 F1D2          	movff	prodh,??_writeEv+1
 40004   003906  0E81               	movlw	129
 40005   003908  25D1               	addwf	??_writeEv& (0+255),w,b
 40006   00390A  6FD3               	movwf	(??_writeEv+2)& (0+255),b
 40007   00390C  0EEF               	movlw	239
 40008   00390E  21D2               	addwfc	(??_writeEv+1)& (0+255),w,b
 40009   003910  6FD4               	movwf	(??_writeEv+3)& (0+255),b
 40010   003912  C1D3  F0A4         	movff	??_writeEv+2,writeNVM@index
 40011   003916  C1D4  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 40012   00391A  0100               	movlb	0	; () banked
 40013   00391C  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 40014   00391E  C1DA  F0A7         	movff	writeEv@nextIdx,writeNVM@value
 40015   003922  0E01               	movlw	1
 40016   003924  ECC1  F05D         	call	_writeNVM
 40017                           
 40018                           ;../../VLCBlib_PIC/event_teach_large.c: 1098:                     f.continued = 1;
 40019   003928  0101               	movlb	1	; () banked
 40020   00392A  89D8               	bsf	writeEv@f& (0+255),4,b
 40021                           
 40022                           ; BSR set to: 1
 40023                           ;../../VLCBlib_PIC/event_teach_large.c: 1099:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*tableIndex+0, f.asByte);
 40024   00392C  51D9               	movf	writeEv@tableIndex& (0+255),w,b
 40025   00392E  6FD1               	movwf	??_writeEv& (0+255),b
 40026   003930  6BD2               	clrf	(??_writeEv+1)& (0+255),b
 40027   003932  3BD1               	swapf	??_writeEv& (0+255),f,b
 40028   003934  3BD2               	swapf	(??_writeEv+1)& (0+255),f,b
 40029   003936  0EF0               	movlw	240
 40030   003938  17D2               	andwf	(??_writeEv+1)& (0+255),f,b
 40031   00393A  51D1               	movf	??_writeEv& (0+255),w,b
 40032   00393C  0B0F               	andlw	15
 40033   00393E  13D2               	iorwf	(??_writeEv+1)& (0+255),f,b
 40034   003940  0EF0               	movlw	240
 40035   003942  17D1               	andwf	??_writeEv& (0+255),f,b
 40036   003944  0E80               	movlw	128
 40037   003946  25D1               	addwf	??_writeEv& (0+255),w,b
 40038   003948  6FD3               	movwf	(??_writeEv+2)& (0+255),b
 40039   00394A  0EEF               	movlw	239
 40040   00394C  21D2               	addwfc	(??_writeEv+1)& (0+255),w,b
 40041   00394E  6FD4               	movwf	(??_writeEv+3)& (0+255),b
 40042   003950  C1D3  F0A4         	movff	??_writeEv+2,writeNVM@index
 40043   003954  C1D4  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 40044   003958  0100               	movlb	0	; () banked
 40045   00395A  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 40046   00395C  C1D8  F0A7         	movff	writeEv@f,writeNVM@value
 40047   003960  0E01               	movlw	1
 40048   003962  ECC1  F05D         	call	_writeNVM
 40049                           
 40050                           ;../../VLCBlib_PIC/event_teach_large.c: 1100:                     tableIndex = nextIdx;
 40051   003966  C1DA  F1D9         	movff	writeEv@nextIdx,writeEv@tableIndex
 40052                           
 40053                           ;../../VLCBlib_PIC/event_teach_large.c: 1101:                     break;
 40054   00396A  D004               	goto	u19680
 40055   00396C                     l19547:
 40056                           
 40057                           ; BSR set to: 1
 40058                           ;../../VLCBlib_PIC/event_teach_large.c: 1103:             }
 40059   00396C  2BDA               	incf	writeEv@nextIdx& (0+255),f,b
 40060   00396E                     l19549:
 40061                           
 40062                           ; BSR set to: 1
 40063   00396E  29DA               	incf	writeEv@nextIdx& (0+255),w,b
 40064   003970  A4D8               	btfss	status,2,c
 40065   003972  D702               	goto	l19519
 40066   003974                     u19680:
 40067                           
 40068                           ;../../VLCBlib_PIC/event_teach_large.c: 1104:             if (nextIdx >= 255) {
 40069   003974  0101               	movlb	1	; () banked
 40070   003976  29DA               	incf	writeEv@nextIdx& (0+255),w,b
 40071   003978  A4D8               	btfss	status,2,c
 40072   00397A  D002               	goto	l19557
 40073                           
 40074                           ; BSR set to: 1
 40075                           ;../../VLCBlib_PIC/event_teach_large.c: 1106:                 return CMDERR_TOO_MANY_EVE
      +                          NTS;
 40076   00397C  0E04               	movlw	4
 40077   00397E  0012               	return	
 40078   003980                     l19557:
 40079                           
 40080                           ; BSR set to: 1
 40081                           ;../../VLCBlib_PIC/event_teach_large.c: 1058:     while (evNum >= 10) {
 40082   003980  0E0A               	movlw	10
 40083   003982  61CF               	cpfslt	writeEv@evNum& (0+255),b
 40084   003984  D6B0               	goto	l19495
 40085                           
 40086                           ; BSR set to: 1
 40087                           ;../../VLCBlib_PIC/event_teach_large.c: 1111:     writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*t
      +                          ableIndex+6 +evNum, evVal);
 40088   003986  51D9               	movf	writeEv@tableIndex& (0+255),w,b
 40089   003988  0D10               	mullw	16
 40090   00398A  CFF3 F1D1          	movff	prodl,??_writeEv
 40091   00398E  CFF4 F1D2          	movff	prodh,??_writeEv+1
 40092   003992  51CF               	movf	writeEv@evNum& (0+255),w,b
 40093   003994  27D1               	addwf	??_writeEv& (0+255),f,b
 40094   003996  0E00               	movlw	0
 40095   003998  23D2               	addwfc	(??_writeEv+1)& (0+255),f,b
 40096   00399A  0E86               	movlw	134
 40097   00399C  25D1               	addwf	??_writeEv& (0+255),w,b
 40098   00399E  6FD3               	movwf	(??_writeEv+2)& (0+255),b
 40099   0039A0  0EEF               	movlw	239
 40100   0039A2  21D2               	addwfc	(??_writeEv+1)& (0+255),w,b
 40101   0039A4  6FD4               	movwf	(??_writeEv+3)& (0+255),b
 40102   0039A6  C1D3  F0A4         	movff	??_writeEv+2,writeNVM@index
 40103   0039AA  C1D4  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 40104   0039AE  0100               	movlb	0	; () banked
 40105   0039B0  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 40106   0039B2  C1D0  F0A7         	movff	writeEv@evVal,writeNVM@value
 40107   0039B6  0E01               	movlw	1
 40108   0039B8  ECC1  F05D         	call	_writeNVM
 40109                           
 40110                           ;../../VLCBlib_PIC/event_teach_large.c: 1113:     f.asByte = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, 0xEF80 + 16*tableIndex+0);
 40111   0039BC  0101               	movlb	1	; () banked
 40112   0039BE  51D9               	movf	writeEv@tableIndex& (0+255),w,b
 40113   0039C0  6FD1               	movwf	??_writeEv& (0+255),b
 40114   0039C2  6BD2               	clrf	(??_writeEv+1)& (0+255),b
 40115   0039C4  3BD1               	swapf	??_writeEv& (0+255),f,b
 40116   0039C6  3BD2               	swapf	(??_writeEv+1)& (0+255),f,b
 40117   0039C8  0EF0               	movlw	240
 40118   0039CA  17D2               	andwf	(??_writeEv+1)& (0+255),f,b
 40119   0039CC  51D1               	movf	??_writeEv& (0+255),w,b
 40120   0039CE  0B0F               	andlw	15
 40121   0039D0  13D2               	iorwf	(??_writeEv+1)& (0+255),f,b
 40122   0039D2  0EF0               	movlw	240
 40123   0039D4  17D1               	andwf	??_writeEv& (0+255),f,b
 40124   0039D6  0E80               	movlw	128
 40125   0039D8  25D1               	addwf	??_writeEv& (0+255),w,b
 40126   0039DA  6FD3               	movwf	(??_writeEv+2)& (0+255),b
 40127   0039DC  0EEF               	movlw	239
 40128   0039DE  21D2               	addwfc	(??_writeEv+1)& (0+255),w,b
 40129   0039E0  6FD4               	movwf	(??_writeEv+3)& (0+255),b
 40130   0039E2  C1D3  F091         	movff	??_writeEv+2,readNVM@index
 40131   0039E6  C1D4  F092         	movff	??_writeEv+3,readNVM@index+1
 40132   0039EA  0100               	movlb	0	; () banked
 40133   0039EC  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40134   0039EE  0E01               	movlw	1
 40135   0039F0  EC31  F05B         	call	_readNVM
 40136   0039F4  0100               	movlb	0	; () banked
 40137   0039F6  5191               	movf	?_readNVM& (0+255),w,b
 40138   0039F8  0101               	movlb	1	; () banked
 40139   0039FA  6FD8               	movwf	writeEv@f& (0+255),b
 40140                           
 40141                           ; BSR set to: 1
 40142                           ;../../VLCBlib_PIC/event_teach_large.c: 1114:     if (f.eVsUsed <= evNum) {
 40143   0039FC  51D8               	movf	writeEv@f& (0+255),w,b
 40144   0039FE  0B0F               	andlw	15
 40145   003A00  6FD1               	movwf	??_writeEv& (0+255),b
 40146   003A02  51D1               	movf	??_writeEv& (0+255),w,b
 40147   003A04  5DCF               	subwf	writeEv@evNum& (0+255),w,b
 40148   003A06  A0D8               	btfss	status,0,c
 40149   003A08  D026               	goto	l19569
 40150                           
 40151                           ; BSR set to: 1
 40152                           ;../../VLCBlib_PIC/event_teach_large.c: 1115:         f.eVsUsed = evNum+1U;
 40153   003A0A  C1CF  F1D1         	movff	writeEv@evNum,??_writeEv
 40154   003A0E  0E01               	movlw	1
 40155   003A10  27D1               	addwf	??_writeEv& (0+255),f,b
 40156   003A12  51D8               	movf	writeEv@f& (0+255),w,b
 40157   003A14  19D1               	xorwf	??_writeEv& (0+255),w,b
 40158   003A16  0BF0               	andlw	-16
 40159   003A18  19D1               	xorwf	??_writeEv& (0+255),w,b
 40160   003A1A  6FD8               	movwf	writeEv@f& (0+255),b
 40161                           
 40162                           ; BSR set to: 1
 40163                           ;../../VLCBlib_PIC/event_teach_large.c: 1116:         writeNVM(FLASH_NVM_TYPE, 0xEF80 + 
      +                          16*tableIndex+0, f.asByte);
 40164   003A1C  51D9               	movf	writeEv@tableIndex& (0+255),w,b
 40165   003A1E  6FD1               	movwf	??_writeEv& (0+255),b
 40166   003A20  6BD2               	clrf	(??_writeEv+1)& (0+255),b
 40167   003A22  3BD1               	swapf	??_writeEv& (0+255),f,b
 40168   003A24  3BD2               	swapf	(??_writeEv+1)& (0+255),f,b
 40169   003A26  0EF0               	movlw	240
 40170   003A28  17D2               	andwf	(??_writeEv+1)& (0+255),f,b
 40171   003A2A  51D1               	movf	??_writeEv& (0+255),w,b
 40172   003A2C  0B0F               	andlw	15
 40173   003A2E  13D2               	iorwf	(??_writeEv+1)& (0+255),f,b
 40174   003A30  0EF0               	movlw	240
 40175   003A32  17D1               	andwf	??_writeEv& (0+255),f,b
 40176   003A34  0E80               	movlw	128
 40177   003A36  25D1               	addwf	??_writeEv& (0+255),w,b
 40178   003A38  6FD3               	movwf	(??_writeEv+2)& (0+255),b
 40179   003A3A  0EEF               	movlw	239
 40180   003A3C  21D2               	addwfc	(??_writeEv+1)& (0+255),w,b
 40181   003A3E  6FD4               	movwf	(??_writeEv+3)& (0+255),b
 40182   003A40  C1D3  F0A4         	movff	??_writeEv+2,writeNVM@index
 40183   003A44  C1D4  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 40184   003A48  0100               	movlb	0	; () banked
 40185   003A4A  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 40186   003A4C  C1D8  F0A7         	movff	writeEv@f,writeNVM@value
 40187   003A50  0E01               	movlw	1
 40188   003A52  ECC1  F05D         	call	_writeNVM
 40189   003A56                     l19569:
 40190                           
 40191                           ;../../VLCBlib_PIC/event_teach_large.c: 1119:     if (evVal == 0) {
 40192   003A56  0101               	movlb	1	; () banked
 40193   003A58  51D0               	movf	writeEv@evVal& (0+255),w,b
 40194   003A5A  A4D8               	btfss	status,2,c
 40195   003A5C  D688               	goto	u19640
 40196                           
 40197                           ; BSR set to: 1
 40198                           ;../../VLCBlib_PIC/event_teach_large.c: 1120:         checkRemoveTableEntry(startIndex);
 40199   003A5E  51D5               	movf	writeEv@startIndex& (0+255),w,b
 40200   003A60  ECEB  F05E         	call	_checkRemoveTableEntry
 40201   003A64  D684               	goto	u19640
 40202   003A66                     __end_of_writeEv:
 40203                           	callstack 0
 40204                           
 40205 ;; *************** function _checkRemoveTableEntry *****************
 40206 ;; Defined at:
 40207 ;;		line 921 in file "../../VLCBlib_PIC/event_teach_large.c"
 40208 ;; Parameters:    Size  Location     Type
 40209 ;;  tableIndex      1    wreg     unsigned char 
 40210 ;; Auto vars:     Size  Location     Type
 40211 ;;  tableIndex      1   15[BANK1 ] unsigned char 
 40212 ;;  e               1   16[BANK1 ] unsigned char 
 40213 ;; Return value:  Size  Location     Type
 40214 ;;                  1    wreg      void 
 40215 ;; Registers used:
 40216 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40217 ;; Tracked objects:
 40218 ;;		On entry : 0/0
 40219 ;;		On exit  : 0/0
 40220 ;;		Unchanged: 0/0
 40221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40223 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40225 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40226 ;;Total ram usage:        2 bytes
 40227 ;; Hardware stack levels used: 1
 40228 ;; Hardware stack levels required when called: 19
 40229 ;; This function calls:
 40230 ;;		_getEVs
 40231 ;;		_removeTableEntry
 40232 ;;		_validStart
 40233 ;; This function is called by:
 40234 ;;		_deleteActionRange
 40235 ;;		_APP_addEvent
 40236 ;;		_writeEv
 40237 ;;		_deleteHappeningRange
 40238 ;; This function uses a non-reentrant model
 40239 ;;
 40240                           
 40241                           	psect	text170
 40242   00BDD6                     __ptext170:
 40243                           	callstack 0
 40244   00BDD6                     _checkRemoveTableEntry:
 40245                           	callstack 6
 40246                           
 40247                           ;incstack = 0
 40248                           ;checkRemoveTableEntry@tableIndex stored from wreg
 40249   00BDD6  0101               	movlb	1	; () banked
 40250   00BDD8  6FCD               	movwf	checkRemoveTableEntry@tableIndex& (0+255),b
 40251                           
 40252                           ;../../VLCBlib_PIC/event_teach_large.c: 922:     uint8_t e;;../../VLCBlib_PIC/event_teac
      +                          h_large.c: 924:     if ( validStart(tableIndex)) {
 40253   00BDDA  0101               	movlb	1	; () banked
 40254   00BDDC  51CD               	movf	checkRemoveTableEntry@tableIndex& (0+255),w,b
 40255   00BDDE  EC9A  F05D         	call	_validStart
 40256   00BDE2  0900               	iorlw	0
 40257   00BDE4  B4D8               	btfsc	status,2,c
 40258   00BDE6  0012               	return	
 40259                           
 40260                           ;../../VLCBlib_PIC/event_teach_large.c: 925:         if (getEVs(tableIndex)) {
 40261   00BDE8  0101               	movlb	1	; () banked
 40262   00BDEA  51CD               	movf	checkRemoveTableEntry@tableIndex& (0+255),w,b
 40263   00BDEC  EC57  F042         	call	_getEVs
 40264   00BDF0  0900               	iorlw	0
 40265   00BDF2  A4D8               	btfss	status,2,c
 40266   00BDF4  0012               	return	
 40267                           
 40268                           ;../../VLCBlib_PIC/event_teach_large.c: 928:         for (e=0; e<20; e++) {
 40269   00BDF6  0E00               	movlw	0
 40270   00BDF8  0101               	movlb	1	; () banked
 40271   00BDFA  6FCE               	movwf	checkRemoveTableEntry@e& (0+255),b
 40272   00BDFC                     l19407:
 40273                           
 40274                           ; BSR set to: 1
 40275                           ;../../VLCBlib_PIC/event_teach_large.c: 929:             if (evs[e] != 0) {
 40276   00BDFC  0E20               	movlw	low _evs
 40277   00BDFE  25CE               	addwf	checkRemoveTableEntry@e& (0+255),w,b
 40278   00BE00  6ED9               	movwf	fsr2l,c
 40279   00BE02  6ADA               	clrf	fsr2h,c
 40280   00BE04  0E02               	movlw	high _evs
 40281   00BE06  22DA               	addwfc	fsr2h,f,c
 40282   00BE08  50DF               	movf	indf2,w,c
 40283   00BE0A  A4D8               	btfss	status,2,c
 40284   00BE0C  0012               	return	
 40285                           
 40286                           ; BSR set to: 1
 40287                           ;../../VLCBlib_PIC/event_teach_large.c: 932:         }
 40288   00BE0E  2BCE               	incf	checkRemoveTableEntry@e& (0+255),f,b
 40289                           
 40290                           ; BSR set to: 1
 40291   00BE10  0E13               	movlw	19
 40292   00BE12  65CE               	cpfsgt	checkRemoveTableEntry@e& (0+255),b
 40293   00BE14  D7F3               	goto	l19407
 40294                           
 40295                           ; BSR set to: 1
 40296                           ;../../VLCBlib_PIC/event_teach_large.c: 933:         removeTableEntry(tableIndex);
 40297   00BE16  51CD               	movf	checkRemoveTableEntry@tableIndex& (0+255),w,b
 40298   00BE18  ECC7  F03D         	call	_removeTableEntry
 40299   00BE1C  0012               	return		;funcret
 40300   00BE1E                     __end_of_checkRemoveTableEntry:
 40301                           	callstack 0
 40302                           
 40303 ;; *************** function _removeTableEntry *****************
 40304 ;; Defined at:
 40305 ;;		line 885 in file "../../VLCBlib_PIC/event_teach_large.c"
 40306 ;; Parameters:    Size  Location     Type
 40307 ;;  tableIndex      1    wreg     unsigned char 
 40308 ;; Auto vars:     Size  Location     Type
 40309 ;;  tableIndex      1   14[BANK1 ] unsigned char 
 40310 ;;  f               1   13[BANK1 ] struct .
 40311 ;; Return value:  Size  Location     Type
 40312 ;;                  1    wreg      unsigned char 
 40313 ;; Registers used:
 40314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40315 ;; Tracked objects:
 40316 ;;		On entry : 0/0
 40317 ;;		On exit  : 0/0
 40318 ;;		Unchanged: 0/0
 40319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40321 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40322 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40323 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40324 ;;Total ram usage:        6 bytes
 40325 ;; Hardware stack levels used: 1
 40326 ;; Hardware stack levels required when called: 18
 40327 ;; This function calls:
 40328 ;;		_flushFlashBlock
 40329 ;;		_readNVM
 40330 ;;		_rebuildHashtable
 40331 ;;		_validStart
 40332 ;;		_writeNVM
 40333 ;; This function is called by:
 40334 ;;		_removeEvent
 40335 ;;		_checkRemoveTableEntry
 40336 ;; This function uses a non-reentrant model
 40337 ;;
 40338                           
 40339                           	psect	text171
 40340   007B8E                     __ptext171:
 40341                           	callstack 0
 40342   007B8E                     _removeTableEntry:
 40343                           	callstack 8
 40344                           
 40345                           ;incstack = 0
 40346                           ;removeTableEntry@tableIndex stored from wreg
 40347   007B8E  0101               	movlb	1	; () banked
 40348   007B90  6FCC               	movwf	removeTableEntry@tableIndex& (0+255),b
 40349                           
 40350                           ;../../VLCBlib_PIC/event_teach_large.c: 886:     EventTableFlags f;;../../VLCBlib_PIC/ev
      +                          ent_teach_large.c: 891:     if (validStart(tableIndex)) {
 40351   007B92  0101               	movlb	1	; () banked
 40352   007B94  51CC               	movf	removeTableEntry@tableIndex& (0+255),w,b
 40353   007B96  EC9A  F05D         	call	_validStart
 40354   007B9A  0900               	iorlw	0
 40355   007B9C  B4D8               	btfsc	status,2,c
 40356   007B9E  D09F               	goto	l19391
 40357                           
 40358                           ;../../VLCBlib_PIC/event_teach_large.c: 892:         f.asByte = (uint8_t)readNVM(FLASH_N
      +                          VM_TYPE, 0xEF80 + 16*tableIndex+0);
 40359   007BA0  0101               	movlb	1	; () banked
 40360   007BA2  51CC               	movf	removeTableEntry@tableIndex& (0+255),w,b
 40361   007BA4  6FC7               	movwf	??_removeTableEntry& (0+255),b
 40362   007BA6  6BC8               	clrf	(??_removeTableEntry+1)& (0+255),b
 40363   007BA8  3BC7               	swapf	??_removeTableEntry& (0+255),f,b
 40364   007BAA  3BC8               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 40365   007BAC  0EF0               	movlw	240
 40366   007BAE  17C8               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 40367   007BB0  51C7               	movf	??_removeTableEntry& (0+255),w,b
 40368   007BB2  0B0F               	andlw	15
 40369   007BB4  13C8               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 40370   007BB6  0EF0               	movlw	240
 40371   007BB8  17C7               	andwf	??_removeTableEntry& (0+255),f,b
 40372   007BBA  0E80               	movlw	128
 40373   007BBC  25C7               	addwf	??_removeTableEntry& (0+255),w,b
 40374   007BBE  6FC9               	movwf	(??_removeTableEntry+2)& (0+255),b
 40375   007BC0  0EEF               	movlw	239
 40376   007BC2  21C8               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 40377   007BC4  6FCA               	movwf	(??_removeTableEntry+3)& (0+255),b
 40378   007BC6  C1C9  F091         	movff	??_removeTableEntry+2,readNVM@index
 40379   007BCA  C1CA  F092         	movff	??_removeTableEntry+3,readNVM@index+1
 40380   007BCE  0100               	movlb	0	; () banked
 40381   007BD0  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40382   007BD2  0E01               	movlw	1
 40383   007BD4  EC31  F05B         	call	_readNVM
 40384   007BD8  0100               	movlb	0	; () banked
 40385   007BDA  5191               	movf	?_readNVM& (0+255),w,b
 40386   007BDC  0101               	movlb	1	; () banked
 40387   007BDE  6FCB               	movwf	removeTableEntry@f& (0+255),b
 40388                           
 40389                           ;../../VLCBlib_PIC/event_teach_large.c: 894:         writeNVM(FLASH_NVM_TYPE, 0xEF80 + 1
      +                          6*tableIndex+0, 0xff);
 40390   007BE0  51CC               	movf	removeTableEntry@tableIndex& (0+255),w,b
 40391   007BE2  6FC7               	movwf	??_removeTableEntry& (0+255),b
 40392   007BE4  6BC8               	clrf	(??_removeTableEntry+1)& (0+255),b
 40393   007BE6  3BC7               	swapf	??_removeTableEntry& (0+255),f,b
 40394   007BE8  3BC8               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 40395   007BEA  0EF0               	movlw	240
 40396   007BEC  17C8               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 40397   007BEE  51C7               	movf	??_removeTableEntry& (0+255),w,b
 40398   007BF0  0B0F               	andlw	15
 40399   007BF2  13C8               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 40400   007BF4  0EF0               	movlw	240
 40401   007BF6  17C7               	andwf	??_removeTableEntry& (0+255),f,b
 40402   007BF8  0E80               	movlw	128
 40403   007BFA  25C7               	addwf	??_removeTableEntry& (0+255),w,b
 40404   007BFC  6FC9               	movwf	(??_removeTableEntry+2)& (0+255),b
 40405   007BFE  0EEF               	movlw	239
 40406   007C00  21C8               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 40407   007C02  6FCA               	movwf	(??_removeTableEntry+3)& (0+255),b
 40408   007C04  C1C9  F0A4         	movff	??_removeTableEntry+2,writeNVM@index
 40409   007C08  C1CA  F0A5         	movff	??_removeTableEntry+3,writeNVM@index+1
 40410   007C0C  0100               	movlb	0	; () banked
 40411   007C0E  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 40412   007C10  0EFF               	movlw	255
 40413   007C12  6FA7               	movwf	writeNVM@value& (0+255),b
 40414   007C14  0E01               	movlw	1
 40415   007C16  ECC1  F05D         	call	_writeNVM
 40416                           
 40417                           ;../../VLCBlib_PIC/event_teach_large.c: 896:         while (f.continued) {
 40418   007C1A  D05A               	goto	l19385
 40419   007C1C                     l19373:
 40420                           
 40421                           ; BSR set to: 1
 40422                           ;../../VLCBlib_PIC/event_teach_large.c: 897:             tableIndex = (uint8_t)readNVM(F
      +                          LASH_NVM_TYPE, 0xEF80 + 16*tableIndex+1);
 40423   007C1C  51CC               	movf	removeTableEntry@tableIndex& (0+255),w,b
 40424   007C1E  0D10               	mullw	16
 40425   007C20  CFF3 F1C7          	movff	prodl,??_removeTableEntry
 40426   007C24  CFF4 F1C8          	movff	prodh,??_removeTableEntry+1
 40427   007C28  0E81               	movlw	129
 40428   007C2A  25C7               	addwf	??_removeTableEntry& (0+255),w,b
 40429   007C2C  6FC9               	movwf	(??_removeTableEntry+2)& (0+255),b
 40430   007C2E  0EEF               	movlw	239
 40431   007C30  21C8               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 40432   007C32  6FCA               	movwf	(??_removeTableEntry+3)& (0+255),b
 40433   007C34  C1C9  F091         	movff	??_removeTableEntry+2,readNVM@index
 40434   007C38  C1CA  F092         	movff	??_removeTableEntry+3,readNVM@index+1
 40435   007C3C  0100               	movlb	0	; () banked
 40436   007C3E  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40437   007C40  0E01               	movlw	1
 40438   007C42  EC31  F05B         	call	_readNVM
 40439   007C46  0100               	movlb	0	; () banked
 40440   007C48  5191               	movf	?_readNVM& (0+255),w,b
 40441   007C4A  0101               	movlb	1	; () banked
 40442   007C4C  6FCC               	movwf	removeTableEntry@tableIndex& (0+255),b
 40443                           
 40444                           ; BSR set to: 1
 40445                           ;../../VLCBlib_PIC/event_teach_large.c: 898:             f.asByte = (uint8_t)readNVM(FLA
      +                          SH_NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 40446   007C4E  51CC               	movf	removeTableEntry@tableIndex& (0+255),w,b
 40447   007C50  6FC7               	movwf	??_removeTableEntry& (0+255),b
 40448   007C52  6BC8               	clrf	(??_removeTableEntry+1)& (0+255),b
 40449   007C54  3BC7               	swapf	??_removeTableEntry& (0+255),f,b
 40450   007C56  3BC8               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 40451   007C58  0EF0               	movlw	240
 40452   007C5A  17C8               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 40453   007C5C  51C7               	movf	??_removeTableEntry& (0+255),w,b
 40454   007C5E  0B0F               	andlw	15
 40455   007C60  13C8               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 40456   007C62  0EF0               	movlw	240
 40457   007C64  17C7               	andwf	??_removeTableEntry& (0+255),f,b
 40458   007C66  0E80               	movlw	128
 40459   007C68  25C7               	addwf	??_removeTableEntry& (0+255),w,b
 40460   007C6A  6FC9               	movwf	(??_removeTableEntry+2)& (0+255),b
 40461   007C6C  0EEF               	movlw	239
 40462   007C6E  21C8               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 40463   007C70  6FCA               	movwf	(??_removeTableEntry+3)& (0+255),b
 40464   007C72  C1C9  F091         	movff	??_removeTableEntry+2,readNVM@index
 40465   007C76  C1CA  F092         	movff	??_removeTableEntry+3,readNVM@index+1
 40466   007C7A  0100               	movlb	0	; () banked
 40467   007C7C  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40468   007C7E  0E01               	movlw	1
 40469   007C80  EC31  F05B         	call	_readNVM
 40470   007C84  0100               	movlb	0	; () banked
 40471   007C86  5191               	movf	?_readNVM& (0+255),w,b
 40472   007C88  0101               	movlb	1	; () banked
 40473   007C8A  6FCB               	movwf	removeTableEntry@f& (0+255),b
 40474                           
 40475                           ; BSR set to: 1
 40476                           ;../../VLCBlib_PIC/event_teach_large.c: 900:             if (tableIndex >= 255) return C
      +                          MDERR_INV_EV_IDX;
 40477   007C8C  29CC               	incf	removeTableEntry@tableIndex& (0+255),w,b
 40478   007C8E  A4D8               	btfss	status,2,c
 40479   007C90  D002               	goto	l19383
 40480                           
 40481                           ; BSR set to: 1
 40482   007C92  0E06               	movlw	6
 40483   007C94  0012               	return	
 40484   007C96                     l19383:
 40485                           
 40486                           ; BSR set to: 1
 40487                           ;../../VLCBlib_PIC/event_teach_large.c: 903:             writeNVM(FLASH_NVM_TYPE, 0xEF80
      +                           + 16*tableIndex+0, 0xff);
 40488   007C96  51CC               	movf	removeTableEntry@tableIndex& (0+255),w,b
 40489   007C98  6FC7               	movwf	??_removeTableEntry& (0+255),b
 40490   007C9A  6BC8               	clrf	(??_removeTableEntry+1)& (0+255),b
 40491   007C9C  3BC7               	swapf	??_removeTableEntry& (0+255),f,b
 40492   007C9E  3BC8               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 40493   007CA0  0EF0               	movlw	240
 40494   007CA2  17C8               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 40495   007CA4  51C7               	movf	??_removeTableEntry& (0+255),w,b
 40496   007CA6  0B0F               	andlw	15
 40497   007CA8  13C8               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 40498   007CAA  0EF0               	movlw	240
 40499   007CAC  17C7               	andwf	??_removeTableEntry& (0+255),f,b
 40500   007CAE  0E80               	movlw	128
 40501   007CB0  25C7               	addwf	??_removeTableEntry& (0+255),w,b
 40502   007CB2  6FC9               	movwf	(??_removeTableEntry+2)& (0+255),b
 40503   007CB4  0EEF               	movlw	239
 40504   007CB6  21C8               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 40505   007CB8  6FCA               	movwf	(??_removeTableEntry+3)& (0+255),b
 40506   007CBA  C1C9  F0A4         	movff	??_removeTableEntry+2,writeNVM@index
 40507   007CBE  C1CA  F0A5         	movff	??_removeTableEntry+3,writeNVM@index+1
 40508   007CC2  0100               	movlb	0	; () banked
 40509   007CC4  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 40510   007CC6  0EFF               	movlw	255
 40511   007CC8  6FA7               	movwf	writeNVM@value& (0+255),b
 40512   007CCA  0E01               	movlw	1
 40513   007CCC  ECC1  F05D         	call	_writeNVM
 40514   007CD0                     l19385:
 40515                           
 40516                           ;../../VLCBlib_PIC/event_teach_large.c: 896:         while (f.continued) {
 40517   007CD0  0101               	movlb	1	; () banked
 40518   007CD2  B9CB               	btfsc	removeTableEntry@f& (0+255),4,b
 40519   007CD4  D7A3               	goto	l19373
 40520                           
 40521                           ; BSR set to: 1
 40522                           ;../../VLCBlib_PIC/event_teach_large.c: 906:         flushFlashBlock();
 40523   007CD6  ECBE  F054         	call	_flushFlashBlock	;wreg free
 40524                           
 40525                           ;../../VLCBlib_PIC/event_teach_large.c: 909:         rebuildHashtable();
 40526   007CDA  ECAC  F03F         	call	_rebuildHashtable	;wreg free
 40527   007CDE                     l19391:
 40528                           
 40529                           ;../../VLCBlib_PIC/event_teach_large.c: 912:     return 0;
 40530   007CDE  0E00               	movlw	0
 40531   007CE0  0012               	return		;funcret
 40532   007CE2                     __end_of_removeTableEntry:
 40533                           	callstack 0
 40534                           
 40535 ;; *************** function _rebuildHashtable *****************
 40536 ;; Defined at:
 40537 ;;		line 1341 in file "../../VLCBlib_PIC/event_teach_large.c"
 40538 ;; Parameters:    Size  Location     Type
 40539 ;;		None
 40540 ;; Auto vars:     Size  Location     Type
 40541 ;;  ev              2    3[BANK1 ] short 
 40542 ;;  a               2    0        int 
 40543 ;;  tableIndex      1    8[BANK1 ] unsigned char 
 40544 ;;  chainIdx        1    7[BANK1 ] unsigned char 
 40545 ;;  happening       1    6[BANK1 ] unsigned char 
 40546 ;;  hash            1    5[BANK1 ] unsigned char 
 40547 ;; Return value:  Size  Location     Type
 40548 ;;                  1    wreg      void 
 40549 ;; Registers used:
 40550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40551 ;; Tracked objects:
 40552 ;;		On entry : 0/0
 40553 ;;		On exit  : 0/0
 40554 ;;		Unchanged: 0/0
 40555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40557 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40558 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40559 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40560 ;;Total ram usage:        9 bytes
 40561 ;; Hardware stack levels used: 1
 40562 ;; Hardware stack levels required when called: 16
 40563 ;; This function calls:
 40564 ;;		_getEN
 40565 ;;		_getEv
 40566 ;;		_getHash
 40567 ;;		_getNN
 40568 ;;		_validStart
 40569 ;; This function is called by:
 40570 ;;		_deleteActionRange
 40571 ;;		_APP_addEvent
 40572 ;;		_mnsProcessMessage
 40573 ;;		_teachPowerUp
 40574 ;;		_clearAllEvents
 40575 ;;		_removeTableEntry
 40576 ;;		_addEvent
 40577 ;;		_deleteHappeningRange
 40578 ;; This function uses a non-reentrant model
 40579 ;;
 40580                           
 40581                           	psect	text172
 40582   007F58                     __ptext172:
 40583                           	callstack 0
 40584   007F58                     _rebuildHashtable:
 40585                           	callstack 12
 40586                           
 40587                           ;../../VLCBlib_PIC/event_teach_large.c: 1343:     uint8_t hash;;../../VLCBlib_PIC/event_
      +                          teach_large.c: 1344:     uint8_t chainIdx;;../../VLCBlib_PIC/event_teach_large.c: 1345: 
      +                              uint8_t tableIndex;;../../VLCBlib_PIC/event_teach_large.c: 1346:     int a;;../../VL
      +                          CBlib_PIC/event_teach_large.c: 1349:     Happening happening;;../../VLCBlib_PIC/event_te
      +                          ach_large.c: 1350:     for (happening=0; happening<=(1+(7+16*4)-1); happening++) {
 40588                           
 40589                           ;incstack = 0
 40590   007F58  0E00               	movlw	0
 40591   007F5A  0101               	movlb	1	; () banked
 40592   007F5C  6FC4               	movwf	rebuildHashtable@happening& (0+255),b
 40593   007F5E                     l19239:
 40594                           
 40595                           ; BSR set to: 1
 40596                           ;../../VLCBlib_PIC/event_teach_large.c: 1351:         happening2Event[happening] = 0xff;
 40597   007F5E  0E00               	movlw	low _happening2Event
 40598   007F60  25C4               	addwf	rebuildHashtable@happening& (0+255),w,b
 40599   007F62  6ED9               	movwf	fsr2l,c
 40600   007F64  6ADA               	clrf	fsr2h,c
 40601   007F66  0E03               	movlw	high _happening2Event
 40602   007F68  22DA               	addwfc	fsr2h,f,c
 40603   007F6A  0EFF               	movlw	255
 40604   007F6C  6EDF               	movwf	indf2,c
 40605                           
 40606                           ; BSR set to: 1
 40607                           ;../../VLCBlib_PIC/event_teach_large.c: 1352:     }
 40608   007F6E  2BC4               	incf	rebuildHashtable@happening& (0+255),f,b
 40609                           
 40610                           ; BSR set to: 1
 40611   007F70  0E47               	movlw	71
 40612   007F72  65C4               	cpfsgt	rebuildHashtable@happening& (0+255),b
 40613   007F74  D7F4               	goto	l19239
 40614                           
 40615                           ; BSR set to: 1
 40616                           ;../../VLCBlib_PIC/event_teach_large.c: 1354:     for (hash=0; hash<32; hash++) {
 40617   007F76  0E00               	movlw	0
 40618   007F78  6FC3               	movwf	rebuildHashtable@hash& (0+255),b
 40619   007F7A                     l19251:
 40620                           
 40621                           ; BSR set to: 1
 40622                           ;../../VLCBlib_PIC/event_teach_large.c: 1355:         for (chainIdx=0; chainIdx < 20; ch
      +                          ainIdx++) {
 40623   007F7A  0E00               	movlw	0
 40624   007F7C  6FC5               	movwf	rebuildHashtable@chainIdx& (0+255),b
 40625   007F7E                     l19257:
 40626                           
 40627                           ; BSR set to: 1
 40628                           ;../../VLCBlib_PIC/event_teach_large.c: 1356:             eventChains[hash][chainIdx] = 
      +                          0xff;
 40629   007F7E  51C3               	movf	rebuildHashtable@hash& (0+255),w,b
 40630   007F80  0D14               	mullw	20
 40631   007F82  0E48               	movlw	low _eventChains
 40632   007F84  24F3               	addwf	243,w,c
 40633   007F86  6FBE               	movwf	??_rebuildHashtable& (0+255),b
 40634   007F88  0E05               	movlw	high _eventChains
 40635   007F8A  20F4               	addwfc	prodh,w,c
 40636   007F8C  6FBF               	movwf	(??_rebuildHashtable+1)& (0+255),b
 40637   007F8E  51C5               	movf	rebuildHashtable@chainIdx& (0+255),w,b
 40638   007F90  25BE               	addwf	??_rebuildHashtable& (0+255),w,b
 40639   007F92  6ED9               	movwf	fsr2l,c
 40640   007F94  0E00               	movlw	0
 40641   007F96  21BF               	addwfc	(??_rebuildHashtable+1)& (0+255),w,b
 40642   007F98  6EDA               	movwf	fsr2h,c
 40643   007F9A  0EFF               	movlw	255
 40644   007F9C  6EDF               	movwf	indf2,c
 40645                           
 40646                           ; BSR set to: 1
 40647                           ;../../VLCBlib_PIC/event_teach_large.c: 1357:         }
 40648   007F9E  2BC5               	incf	rebuildHashtable@chainIdx& (0+255),f,b
 40649                           
 40650                           ; BSR set to: 1
 40651   007FA0  0E13               	movlw	19
 40652   007FA2  65C5               	cpfsgt	rebuildHashtable@chainIdx& (0+255),b
 40653   007FA4  D7EC               	goto	l19257
 40654                           
 40655                           ; BSR set to: 1
 40656                           ;../../VLCBlib_PIC/event_teach_large.c: 1358:     }
 40657   007FA6  2BC3               	incf	rebuildHashtable@hash& (0+255),f,b
 40658                           
 40659                           ; BSR set to: 1
 40660   007FA8  0E1F               	movlw	31
 40661   007FAA  65C3               	cpfsgt	rebuildHashtable@hash& (0+255),b
 40662   007FAC  D7E6               	goto	l19251
 40663                           
 40664                           ; BSR set to: 1
 40665                           ;../../VLCBlib_PIC/event_teach_large.c: 1361:     for (tableIndex=0; tableIndex<255; tab
      +                          leIndex++) {
 40666   007FAE  0E00               	movlw	0
 40667   007FB0  6FC6               	movwf	rebuildHashtable@tableIndex& (0+255),b
 40668   007FB2                     l19273:
 40669                           
 40670                           ; BSR set to: 1
 40671                           ;../../VLCBlib_PIC/event_teach_large.c: 1362:         if (validStart(tableIndex)) {
 40672   007FB2  51C6               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 40673   007FB4  EC9A  F05D         	call	_validStart
 40674   007FB8  0900               	iorlw	0
 40675   007FBA  B4D8               	btfsc	status,2,c
 40676   007FBC  D059               	goto	u19370
 40677                           
 40678                           ;../../VLCBlib_PIC/event_teach_large.c: 1363:             int16_t ev;;../../VLCBlib_PIC/
      +                          event_teach_large.c: 1378:             ev = getEv(tableIndex, 0);
 40679   007FBE  0E00               	movlw	0
 40680   007FC0  0100               	movlb	0	; () banked
 40681   007FC2  6F9D               	movwf	getEv@evNum& (0+255),b
 40682   007FC4  0101               	movlb	1	; () banked
 40683   007FC6  51C6               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 40684   007FC8  EC1C  F03D         	call	_getEv
 40685   007FCC  C09D  F1C1         	movff	?_getEv,rebuildHashtable@ev
 40686   007FD0  C09E  F1C2         	movff	?_getEv+1,rebuildHashtable@ev+1
 40687                           
 40688                           ;../../VLCBlib_PIC/event_teach_large.c: 1379:             if (ev < 0) continue;
 40689   007FD4  0101               	movlb	1	; () banked
 40690   007FD6  BFC2               	btfsc	(rebuildHashtable@ev+1)& (0+255),7,b
 40691   007FD8  D04B               	goto	u19370
 40692                           
 40693                           ; BSR set to: 1
 40694                           ;../../VLCBlib_PIC/event_teach_large.c: 1380:             happening = (uint8_t) ev;
 40695   007FDA  C1C1  F1C4         	movff	rebuildHashtable@ev,rebuildHashtable@happening
 40696                           
 40697                           ; BSR set to: 1
 40698                           ;../../VLCBlib_PIC/event_teach_large.c: 1382:             if ((happening<= (7+16*4)) && 
      +                          (happening >= 1)) {
 40699   007FDE  0E48               	movlw	72
 40700   007FE0  61C4               	cpfslt	rebuildHashtable@happening& (0+255),b
 40701   007FE2  D00B               	goto	l19287
 40702                           
 40703                           ; BSR set to: 1
 40704   007FE4  51C4               	movf	rebuildHashtable@happening& (0+255),w,b
 40705   007FE6  B4D8               	btfsc	status,2,c
 40706   007FE8  D008               	goto	l19287
 40707                           
 40708                           ; BSR set to: 1
 40709                           ;../../VLCBlib_PIC/event_teach_large.c: 1383:                 happening2Event[happening-
      +                          1] = tableIndex;
 40710   007FEA  0EFF               	movlw	low (_happening2Event+65535)
 40711   007FEC  25C4               	addwf	rebuildHashtable@happening& (0+255),w,b
 40712   007FEE  6ED9               	movwf	fsr2l,c
 40713   007FF0  6ADA               	clrf	fsr2h,c
 40714   007FF2  0E02               	movlw	high (_happening2Event+65535)
 40715   007FF4  22DA               	addwfc	fsr2h,f,c
 40716   007FF6  C1C6  FFDF         	movff	rebuildHashtable@tableIndex,indf2
 40717   007FFA                     l19287:
 40718                           
 40719                           ; BSR set to: 1
 40720                           ;../../VLCBlib_PIC/event_teach_large.c: 1386:             hash = getHash(getNN(tableInde
      +                          x), getEN(tableIndex));
 40721   007FFA  51C6               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 40722   007FFC  ECA7  F04B         	call	_getNN
 40723   008000  C097  F0A3         	movff	?_getNN,getHash@nn
 40724   008004  C098  F0A4         	movff	?_getNN+1,getHash@nn+1
 40725   008008  0101               	movlb	1	; () banked
 40726   00800A  51C6               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 40727   00800C  ECFA  F056         	call	_getEN
 40728   008010  C097  F0A5         	movff	?_getEN,getHash@en
 40729   008014  C098  F0A6         	movff	?_getEN+1,getHash@en+1
 40730   008018  EC90  F063         	call	_getHash	;wreg free
 40731   00801C  0101               	movlb	1	; () banked
 40732   00801E  6FC3               	movwf	rebuildHashtable@hash& (0+255),b
 40733                           
 40734                           ; BSR set to: 1
 40735                           ;../../VLCBlib_PIC/event_teach_large.c: 1388:             for (chainIdx=0; chainIdx<20; 
      +                          chainIdx++) {
 40736   008020  0E00               	movlw	0
 40737   008022  6FC5               	movwf	rebuildHashtable@chainIdx& (0+255),b
 40738   008024                     l19295:
 40739                           
 40740                           ; BSR set to: 1
 40741                           ;../../VLCBlib_PIC/event_teach_large.c: 1389:                 if (eventChains[hash][chai
      +                          nIdx] == 0xff) {
 40742   008024  51C3               	movf	rebuildHashtable@hash& (0+255),w,b
 40743   008026  0D14               	mullw	20
 40744   008028  0E48               	movlw	low _eventChains
 40745   00802A  24F3               	addwf	243,w,c
 40746   00802C  6FBE               	movwf	??_rebuildHashtable& (0+255),b
 40747   00802E  0E05               	movlw	high _eventChains
 40748   008030  20F4               	addwfc	prodh,w,c
 40749   008032  6FBF               	movwf	(??_rebuildHashtable+1)& (0+255),b
 40750   008034  51C5               	movf	rebuildHashtable@chainIdx& (0+255),w,b
 40751   008036  25BE               	addwf	??_rebuildHashtable& (0+255),w,b
 40752   008038  6ED9               	movwf	fsr2l,c
 40753   00803A  0E00               	movlw	0
 40754   00803C  21BF               	addwfc	(??_rebuildHashtable+1)& (0+255),w,b
 40755   00803E  6EDA               	movwf	fsr2h,c
 40756   008040  28DE               	incf	postinc2,w,c
 40757   008042  A4D8               	btfss	status,2,c
 40758   008044  D011               	goto	l19299
 40759                           
 40760                           ; BSR set to: 1
 40761                           ;../../VLCBlib_PIC/event_teach_large.c: 1391:                     eventChains[hash][chai
      +                          nIdx] = tableIndex;
 40762   008046  51C3               	movf	rebuildHashtable@hash& (0+255),w,b
 40763   008048  0D14               	mullw	20
 40764   00804A  0E48               	movlw	low _eventChains
 40765   00804C  24F3               	addwf	243,w,c
 40766   00804E  6FBE               	movwf	??_rebuildHashtable& (0+255),b
 40767   008050  0E05               	movlw	high _eventChains
 40768   008052  20F4               	addwfc	prodh,w,c
 40769   008054  6FBF               	movwf	(??_rebuildHashtable+1)& (0+255),b
 40770   008056  51C5               	movf	rebuildHashtable@chainIdx& (0+255),w,b
 40771   008058  25BE               	addwf	??_rebuildHashtable& (0+255),w,b
 40772   00805A  6ED9               	movwf	fsr2l,c
 40773   00805C  0E00               	movlw	0
 40774   00805E  21BF               	addwfc	(??_rebuildHashtable+1)& (0+255),w,b
 40775   008060  6EDA               	movwf	fsr2h,c
 40776   008062  C1C6  FFDF         	movff	rebuildHashtable@tableIndex,indf2
 40777                           
 40778                           ;../../VLCBlib_PIC/event_teach_large.c: 1392:                     break;
 40779   008066  D004               	goto	u19370
 40780   008068                     l19299:
 40781                           
 40782                           ; BSR set to: 1
 40783                           ;../../VLCBlib_PIC/event_teach_large.c: 1394:             }
 40784   008068  2BC5               	incf	rebuildHashtable@chainIdx& (0+255),f,b
 40785                           
 40786                           ; BSR set to: 1
 40787   00806A  0E13               	movlw	19
 40788   00806C  65C5               	cpfsgt	rebuildHashtable@chainIdx& (0+255),b
 40789   00806E  D7DA               	goto	l19295
 40790   008070                     u19370:
 40791   008070  0101               	movlb	1	; () banked
 40792   008072  2BC6               	incf	rebuildHashtable@tableIndex& (0+255),f,b
 40793                           
 40794                           ; BSR set to: 1
 40795   008074  29C6               	incf	rebuildHashtable@tableIndex& (0+255),w,b
 40796   008076  B4D8               	btfsc	status,2,c
 40797   008078  0012               	return	
 40798   00807A  D79B               	goto	l19273
 40799   00807C                     __end_of_rebuildHashtable:
 40800                           	callstack 0
 40801                           
 40802 ;; *************** function _getEv *****************
 40803 ;; Defined at:
 40804 ;;		line 1132 in file "../../VLCBlib_PIC/event_teach_large.c"
 40805 ;; Parameters:    Size  Location     Type
 40806 ;;  tableIndex      1    wreg     unsigned char 
 40807 ;;  evNum           1   61[BANK0 ] unsigned char 
 40808 ;; Auto vars:     Size  Location     Type
 40809 ;;  tableIndex      1   69[BANK0 ] unsigned char 
 40810 ;;  f               1   68[BANK0 ] struct .
 40811 ;; Return value:  Size  Location     Type
 40812 ;;                  2   61[BANK0 ] short 
 40813 ;; Registers used:
 40814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40815 ;; Tracked objects:
 40816 ;;		On entry : 0/0
 40817 ;;		On exit  : 0/0
 40818 ;;		Unchanged: 0/0
 40819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40820 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40821 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40822 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40823 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40824 ;;Total ram usage:        9 bytes
 40825 ;; Hardware stack levels used: 1
 40826 ;; Hardware stack levels required when called: 15
 40827 ;; This function calls:
 40828 ;;		_readNVM
 40829 ;;		_validStart
 40830 ;; This function is called by:
 40831 ;;		_isConsumedEvent
 40832 ;;		_doReval
 40833 ;;		_doReqev
 40834 ;;		_reqevCallback
 40835 ;;		_rebuildHashtable
 40836 ;;		_producerProcessMessage
 40837 ;; This function uses a non-reentrant model
 40838 ;;
 40839                           
 40840                           	psect	text173
 40841   007A38                     __ptext173:
 40842                           	callstack 0
 40843   007A38                     _getEv:
 40844                           	callstack 12
 40845                           
 40846                           ; BSR set to: 1
 40847                           ;incstack = 0
 40848                           ;getEv@tableIndex stored from wreg
 40849   007A38  0100               	movlb	0	; () banked
 40850   007A3A  6FA5               	movwf	getEv@tableIndex& (0+255),b
 40851                           
 40852                           ;../../VLCBlib_PIC/event_teach_large.c: 1133:     EventTableFlags f;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1134:     if ( ! validStart(tableIndex)) {
 40853   007A3C  0100               	movlb	0	; () banked
 40854   007A3E  51A5               	movf	getEv@tableIndex& (0+255),w,b
 40855   007A40  EC9A  F05D         	call	_validStart
 40856   007A44  0900               	iorlw	0
 40857   007A46  A4D8               	btfss	status,2,c
 40858   007A48  D006               	goto	l19081
 40859   007A4A                     u19120:
 40860                           
 40861                           ;../../VLCBlib_PIC/event_teach_large.c: 1136:         return -CMDERR_INVALID_EVENT;
 40862   007A4A  0EFF               	movlw	255
 40863   007A4C  0100               	movlb	0	; () banked
 40864   007A4E  6F9E               	movwf	(?_getEv+1)& (0+255),b
 40865   007A50  0EF9               	movlw	249
 40866   007A52  6F9D               	movwf	?_getEv& (0+255),b
 40867   007A54  0012               	return	
 40868   007A56                     l19081:
 40869                           
 40870                           ;../../VLCBlib_PIC/event_teach_large.c: 1138:     if (evNum >= 20) {
 40871   007A56  0E13               	movlw	19
 40872   007A58  0100               	movlb	0	; () banked
 40873   007A5A  659D               	cpfsgt	getEv@evNum& (0+255),b
 40874   007A5C  D005               	goto	l19087
 40875                           
 40876                           ; BSR set to: 0
 40877                           ;../../VLCBlib_PIC/event_teach_large.c: 1139:         return -CMDERR_INV_EV_IDX;
 40878   007A5E  0EFF               	movlw	255
 40879   007A60  6F9E               	movwf	(?_getEv+1)& (0+255),b
 40880   007A62  0EFA               	movlw	250
 40881   007A64  6F9D               	movwf	?_getEv& (0+255),b
 40882   007A66  0012               	return	
 40883   007A68                     l19087:
 40884                           
 40885                           ; BSR set to: 0
 40886                           ;../../VLCBlib_PIC/event_teach_large.c: 1141:     f.asByte = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, 0xEF80 + 16*tableIndex+0);
 40887   007A68  51A5               	movf	getEv@tableIndex& (0+255),w,b
 40888   007A6A  6F9F               	movwf	??_getEv& (0+255),b
 40889   007A6C  6BA0               	clrf	(??_getEv+1)& (0+255),b
 40890   007A6E  3B9F               	swapf	??_getEv& (0+255),f,b
 40891   007A70  3BA0               	swapf	(??_getEv+1)& (0+255),f,b
 40892   007A72  0EF0               	movlw	240
 40893   007A74  17A0               	andwf	(??_getEv+1)& (0+255),f,b
 40894   007A76  519F               	movf	??_getEv& (0+255),w,b
 40895   007A78  0B0F               	andlw	15
 40896   007A7A  13A0               	iorwf	(??_getEv+1)& (0+255),f,b
 40897   007A7C  0EF0               	movlw	240
 40898   007A7E  179F               	andwf	??_getEv& (0+255),f,b
 40899   007A80  0E80               	movlw	128
 40900   007A82  259F               	addwf	??_getEv& (0+255),w,b
 40901   007A84  6FA1               	movwf	(??_getEv+2)& (0+255),b
 40902   007A86  0EEF               	movlw	239
 40903   007A88  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 40904   007A8A  6FA2               	movwf	(??_getEv+3)& (0+255),b
 40905   007A8C  C0A1  F091         	movff	??_getEv+2,readNVM@index
 40906   007A90  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 40907   007A94  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40908   007A96  0E01               	movlw	1
 40909   007A98  EC31  F05B         	call	_readNVM
 40910   007A9C  0100               	movlb	0	; () banked
 40911   007A9E  5191               	movf	?_readNVM& (0+255),w,b
 40912   007AA0  6FA4               	movwf	getEv@f& (0+255),b
 40913                           
 40914                           ;../../VLCBlib_PIC/event_teach_large.c: 1142:     while (evNum >= 10) {
 40915   007AA2  D040               	goto	l19105
 40916   007AA4                     l2958:
 40917                           
 40918                           ; BSR set to: 0
 40919                           ;../../VLCBlib_PIC/event_teach_large.c: 1144:         if (! f.continued) {
 40920   007AA4  B9A4               	btfsc	getEv@f& (0+255),4,b
 40921   007AA6  D005               	goto	l19093
 40922   007AA8                     u19140:
 40923                           
 40924                           ; BSR set to: 0
 40925                           ;../../VLCBlib_PIC/event_teach_large.c: 1145:             return -CMDERR_NO_EV;
 40926   007AA8  0EFF               	movlw	255
 40927   007AAA  6F9E               	movwf	(?_getEv+1)& (0+255),b
 40928   007AAC  0EFB               	movlw	251
 40929   007AAE  6F9D               	movwf	?_getEv& (0+255),b
 40930   007AB0  0012               	return	
 40931   007AB2                     l19093:
 40932                           
 40933                           ; BSR set to: 0
 40934                           ;../../VLCBlib_PIC/event_teach_large.c: 1147:         tableIndex = (uint8_t)readNVM(FLAS
      +                          H_NVM_TYPE, 0xEF80 + 16*tableIndex+1);
 40935   007AB2  51A5               	movf	getEv@tableIndex& (0+255),w,b
 40936   007AB4  0D10               	mullw	16
 40937   007AB6  CFF3 F09F          	movff	prodl,??_getEv
 40938   007ABA  CFF4 F0A0          	movff	prodh,??_getEv+1
 40939   007ABE  0E81               	movlw	129
 40940   007AC0  259F               	addwf	??_getEv& (0+255),w,b
 40941   007AC2  6FA1               	movwf	(??_getEv+2)& (0+255),b
 40942   007AC4  0EEF               	movlw	239
 40943   007AC6  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 40944   007AC8  6FA2               	movwf	(??_getEv+3)& (0+255),b
 40945   007ACA  C0A1  F091         	movff	??_getEv+2,readNVM@index
 40946   007ACE  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 40947   007AD2  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40948   007AD4  0E01               	movlw	1
 40949   007AD6  EC31  F05B         	call	_readNVM
 40950   007ADA  0100               	movlb	0	; () banked
 40951   007ADC  5191               	movf	?_readNVM& (0+255),w,b
 40952   007ADE  6FA5               	movwf	getEv@tableIndex& (0+255),b
 40953                           
 40954                           ; BSR set to: 0
 40955                           ;../../VLCBlib_PIC/event_teach_large.c: 1148:         if (tableIndex == 0xff) {
 40956   007AE0  29A5               	incf	getEv@tableIndex& (0+255),w,b
 40957   007AE2  B4D8               	btfsc	status,2,c
 40958   007AE4  D7B2               	goto	u19120
 40959                           
 40960                           ; BSR set to: 0
 40961                           ;../../VLCBlib_PIC/event_teach_large.c: 1151:         f.asByte = (uint8_t)readNVM(FLASH_
      +                          NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 40962   007AE6  51A5               	movf	getEv@tableIndex& (0+255),w,b
 40963   007AE8  6F9F               	movwf	??_getEv& (0+255),b
 40964   007AEA  6BA0               	clrf	(??_getEv+1)& (0+255),b
 40965   007AEC  3B9F               	swapf	??_getEv& (0+255),f,b
 40966   007AEE  3BA0               	swapf	(??_getEv+1)& (0+255),f,b
 40967   007AF0  0EF0               	movlw	240
 40968   007AF2  17A0               	andwf	(??_getEv+1)& (0+255),f,b
 40969   007AF4  519F               	movf	??_getEv& (0+255),w,b
 40970   007AF6  0B0F               	andlw	15
 40971   007AF8  13A0               	iorwf	(??_getEv+1)& (0+255),f,b
 40972   007AFA  0EF0               	movlw	240
 40973   007AFC  179F               	andwf	??_getEv& (0+255),f,b
 40974   007AFE  0E80               	movlw	128
 40975   007B00  259F               	addwf	??_getEv& (0+255),w,b
 40976   007B02  6FA1               	movwf	(??_getEv+2)& (0+255),b
 40977   007B04  0EEF               	movlw	239
 40978   007B06  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 40979   007B08  6FA2               	movwf	(??_getEv+3)& (0+255),b
 40980   007B0A  C0A1  F091         	movff	??_getEv+2,readNVM@index
 40981   007B0E  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 40982   007B12  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40983   007B14  0E01               	movlw	1
 40984   007B16  EC31  F05B         	call	_readNVM
 40985   007B1A  0100               	movlb	0	; () banked
 40986   007B1C  5191               	movf	?_readNVM& (0+255),w,b
 40987   007B1E  6FA4               	movwf	getEv@f& (0+255),b
 40988                           
 40989                           ; BSR set to: 0
 40990                           ;../../VLCBlib_PIC/event_teach_large.c: 1152:         evNum -= 10;
 40991   007B20  0E0A               	movlw	10
 40992   007B22  5F9D               	subwf	getEv@evNum& (0+255),f,b
 40993   007B24                     l19105:
 40994                           
 40995                           ; BSR set to: 0
 40996                           ;../../VLCBlib_PIC/event_teach_large.c: 1142:     while (evNum >= 10) {
 40997   007B24  0E0A               	movlw	10
 40998   007B26  619D               	cpfslt	getEv@evNum& (0+255),b
 40999   007B28  D7BD               	goto	l2958
 41000                           
 41001                           ; BSR set to: 0
 41002                           ;../../VLCBlib_PIC/event_teach_large.c: 1154:     if (evNum+1 > f.eVsUsed) {
 41003   007B2A  519D               	movf	getEv@evNum& (0+255),w,b
 41004   007B2C  6F9F               	movwf	??_getEv& (0+255),b
 41005   007B2E  6BA0               	clrf	(??_getEv+1)& (0+255),b
 41006   007B30  0E01               	movlw	1
 41007   007B32  279F               	addwf	??_getEv& (0+255),f,b
 41008   007B34  0E00               	movlw	0
 41009   007B36  23A0               	addwfc	(??_getEv+1)& (0+255),f,b
 41010   007B38  51A4               	movf	getEv@f& (0+255),w,b
 41011   007B3A  0B0F               	andlw	15
 41012   007B3C  6FA1               	movwf	(??_getEv+2)& (0+255),b
 41013   007B3E  6BA2               	clrf	(??_getEv+3)& (0+255),b
 41014   007B40  519F               	movf	??_getEv& (0+255),w,b
 41015   007B42  5DA1               	subwf	(??_getEv+2)& (0+255),w,b
 41016   007B44  51A2               	movf	(??_getEv+3)& (0+255),w,b
 41017   007B46  0A80               	xorlw	128
 41018   007B48  6FA3               	movwf	(??_getEv+4)& (0+255),b
 41019   007B4A  51A0               	movf	(??_getEv+1)& (0+255),w,b
 41020   007B4C  0A80               	xorlw	128
 41021   007B4E  59A3               	subwfb	(??_getEv+4)& (0+255),w,b
 41022   007B50  A0D8               	btfss	status,0,c
 41023   007B52  D7AA               	goto	u19140
 41024                           
 41025                           ; BSR set to: 0
 41026                           ;../../VLCBlib_PIC/event_teach_large.c: 1158:     return (uint8_t)readNVM(FLASH_NVM_TYPE
      +                          , 0xEF80 + 16*tableIndex+6 +evNum);
 41027   007B54  51A5               	movf	getEv@tableIndex& (0+255),w,b
 41028   007B56  0D10               	mullw	16
 41029   007B58  CFF3 F09F          	movff	prodl,??_getEv
 41030   007B5C  CFF4 F0A0          	movff	prodh,??_getEv+1
 41031   007B60  519D               	movf	getEv@evNum& (0+255),w,b
 41032   007B62  279F               	addwf	??_getEv& (0+255),f,b
 41033   007B64  0E00               	movlw	0
 41034   007B66  23A0               	addwfc	(??_getEv+1)& (0+255),f,b
 41035   007B68  0E86               	movlw	134
 41036   007B6A  259F               	addwf	??_getEv& (0+255),w,b
 41037   007B6C  6FA1               	movwf	(??_getEv+2)& (0+255),b
 41038   007B6E  0EEF               	movlw	239
 41039   007B70  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 41040   007B72  6FA2               	movwf	(??_getEv+3)& (0+255),b
 41041   007B74  C0A1  F091         	movff	??_getEv+2,readNVM@index
 41042   007B78  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 41043   007B7C  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41044   007B7E  0E01               	movlw	1
 41045   007B80  EC31  F05B         	call	_readNVM
 41046   007B84  0100               	movlb	0	; () banked
 41047   007B86  5191               	movf	?_readNVM& (0+255),w,b
 41048   007B88  6F9D               	movwf	?_getEv& (0+255),b
 41049   007B8A  6B9E               	clrf	(?_getEv+1)& (0+255),b
 41050                           
 41051                           ; BSR set to: 0
 41052   007B8C  0012               	return		;funcret
 41053   007B8E                     __end_of_getEv:
 41054                           	callstack 0
 41055                           
 41056 ;; *************** function _getEVs *****************
 41057 ;; Defined at:
 41058 ;;		line 1197 in file "../../VLCBlib_PIC/event_teach_large.c"
 41059 ;; Parameters:    Size  Location     Type
 41060 ;;  tableIndex      1    wreg     unsigned char 
 41061 ;; Auto vars:     Size  Location     Type
 41062 ;;  tableIndex      1   67[BANK0 ] unsigned char 
 41063 ;;  evIdx           1   66[BANK0 ] unsigned char 
 41064 ;;  evNum           1   68[BANK0 ] unsigned char 
 41065 ;;  f               1   65[BANK0 ] struct .
 41066 ;; Return value:  Size  Location     Type
 41067 ;;                  1    wreg      unsigned char 
 41068 ;; Registers used:
 41069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41070 ;; Tracked objects:
 41071 ;;		On entry : 0/0
 41072 ;;		On exit  : 0/0
 41073 ;;		Unchanged: 0/0
 41074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41076 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41077 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41078 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41079 ;;Total ram usage:        8 bytes
 41080 ;; Hardware stack levels used: 1
 41081 ;; Hardware stack levels required when called: 15
 41082 ;; This function calls:
 41083 ;;		_readNVM
 41084 ;;		_validStart
 41085 ;; This function is called by:
 41086 ;;		_consumer2QProcessMessage
 41087 ;;		_deleteActionRange
 41088 ;;		_checkRemoveTableEntry
 41089 ;; This function uses a non-reentrant model
 41090 ;;
 41091                           
 41092                           	psect	text174
 41093   0084AE                     __ptext174:
 41094                           	callstack 0
 41095   0084AE                     _getEVs:
 41096                           	callstack 9
 41097                           
 41098                           ; BSR set to: 0
 41099                           ;incstack = 0
 41100                           ;getEVs@tableIndex stored from wreg
 41101   0084AE  0100               	movlb	0	; () banked
 41102   0084B0  6FA3               	movwf	getEVs@tableIndex& (0+255),b
 41103                           
 41104                           ;../../VLCBlib_PIC/event_teach_large.c: 1198:     EventTableFlags f;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1199:     uint8_t evNum;;../../VLCBlib_PIC/event_teach_large.c: 1201
      +                          :     if ( ! validStart(tableIndex)) {
 41105   0084B2  0100               	movlb	0	; () banked
 41106   0084B4  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 41107   0084B6  EC9A  F05D         	call	_validStart
 41108   0084BA  0900               	iorlw	0
 41109   0084BC  A4D8               	btfss	status,2,c
 41110   0084BE  D002               	goto	l19313
 41111   0084C0                     u19390:
 41112                           
 41113                           ;../../VLCBlib_PIC/event_teach_large.c: 1203:         return CMDERR_INVALID_EVENT;
 41114   0084C0  0E07               	movlw	7
 41115   0084C2  0012               	return	
 41116   0084C4                     l19313:
 41117                           
 41118                           ;../../VLCBlib_PIC/event_teach_large.c: 1205:     for (evNum=0; evNum < 20; ) {
 41119   0084C4  0E00               	movlw	0
 41120   0084C6  0100               	movlb	0	; () banked
 41121   0084C8  6FA4               	movwf	getEVs@evNum& (0+255),b
 41122   0084CA                     l19319:
 41123                           
 41124                           ; BSR set to: 0
 41125                           ;../../VLCBlib_PIC/event_teach_large.c: 1206:         uint8_t evIdx;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1207:         for (evIdx=0; evIdx < 10; evIdx++) {
 41126   0084CA  0E00               	movlw	0
 41127   0084CC  6FA2               	movwf	getEVs@evIdx& (0+255),b
 41128   0084CE                     l19325:
 41129                           
 41130                           ; BSR set to: 0
 41131                           ;../../VLCBlib_PIC/event_teach_large.c: 1208:             evs[evNum] = (uint8_t)readNVM(
      +                          FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+6 +evIdx);
 41132   0084CE  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 41133   0084D0  0D10               	mullw	16
 41134   0084D2  CFF3 F09D          	movff	prodl,??_getEVs
 41135   0084D6  CFF4 F09E          	movff	prodh,??_getEVs+1
 41136   0084DA  51A2               	movf	getEVs@evIdx& (0+255),w,b
 41137   0084DC  279D               	addwf	??_getEVs& (0+255),f,b
 41138   0084DE  0E00               	movlw	0
 41139   0084E0  239E               	addwfc	(??_getEVs+1)& (0+255),f,b
 41140   0084E2  0E86               	movlw	134
 41141   0084E4  259D               	addwf	??_getEVs& (0+255),w,b
 41142   0084E6  6F9F               	movwf	(??_getEVs+2)& (0+255),b
 41143   0084E8  0EEF               	movlw	239
 41144   0084EA  219E               	addwfc	(??_getEVs+1)& (0+255),w,b
 41145   0084EC  6FA0               	movwf	(??_getEVs+3)& (0+255),b
 41146   0084EE  C09F  F091         	movff	??_getEVs+2,readNVM@index
 41147   0084F2  C0A0  F092         	movff	??_getEVs+3,readNVM@index+1
 41148   0084F6  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41149   0084F8  0E01               	movlw	1
 41150   0084FA  EC31  F05B         	call	_readNVM
 41151   0084FE  0E20               	movlw	low _evs
 41152   008500  0100               	movlb	0	; () banked
 41153   008502  25A4               	addwf	getEVs@evNum& (0+255),w,b
 41154   008504  6ED9               	movwf	fsr2l,c
 41155   008506  6ADA               	clrf	fsr2h,c
 41156   008508  0E02               	movlw	high _evs
 41157   00850A  22DA               	addwfc	fsr2h,f,c
 41158   00850C  C091  FFDF         	movff	?_readNVM,indf2
 41159                           
 41160                           ; BSR set to: 0
 41161                           ;../../VLCBlib_PIC/event_teach_large.c: 1209:             evNum++;
 41162   008510  2BA4               	incf	getEVs@evNum& (0+255),f,b
 41163                           
 41164                           ; BSR set to: 0
 41165                           ;../../VLCBlib_PIC/event_teach_large.c: 1210:         }
 41166   008512  2BA2               	incf	getEVs@evIdx& (0+255),f,b
 41167                           
 41168                           ; BSR set to: 0
 41169   008514  0E09               	movlw	9
 41170   008516  65A2               	cpfsgt	getEVs@evIdx& (0+255),b
 41171   008518  D7DA               	goto	l19325
 41172                           
 41173                           ; BSR set to: 0
 41174                           ;../../VLCBlib_PIC/event_teach_large.c: 1211:         f.asByte = (uint8_t)readNVM(FLASH_
      +                          NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 41175   00851A  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 41176   00851C  6F9D               	movwf	??_getEVs& (0+255),b
 41177   00851E  6B9E               	clrf	(??_getEVs+1)& (0+255),b
 41178   008520  3B9D               	swapf	??_getEVs& (0+255),f,b
 41179   008522  3B9E               	swapf	(??_getEVs+1)& (0+255),f,b
 41180   008524  0EF0               	movlw	240
 41181   008526  179E               	andwf	(??_getEVs+1)& (0+255),f,b
 41182   008528  519D               	movf	??_getEVs& (0+255),w,b
 41183   00852A  0B0F               	andlw	15
 41184   00852C  139E               	iorwf	(??_getEVs+1)& (0+255),f,b
 41185   00852E  0EF0               	movlw	240
 41186   008530  179D               	andwf	??_getEVs& (0+255),f,b
 41187   008532  0E80               	movlw	128
 41188   008534  259D               	addwf	??_getEVs& (0+255),w,b
 41189   008536  6F9F               	movwf	(??_getEVs+2)& (0+255),b
 41190   008538  0EEF               	movlw	239
 41191   00853A  219E               	addwfc	(??_getEVs+1)& (0+255),w,b
 41192   00853C  6FA0               	movwf	(??_getEVs+3)& (0+255),b
 41193   00853E  C09F  F091         	movff	??_getEVs+2,readNVM@index
 41194   008542  C0A0  F092         	movff	??_getEVs+3,readNVM@index+1
 41195   008546  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41196   008548  0E01               	movlw	1
 41197   00854A  EC31  F05B         	call	_readNVM
 41198   00854E  0100               	movlb	0	; () banked
 41199   008550  5191               	movf	?_readNVM& (0+255),w,b
 41200   008552  6FA1               	movwf	getEVs@f& (0+255),b
 41201                           
 41202                           ; BSR set to: 0
 41203                           ;../../VLCBlib_PIC/event_teach_large.c: 1212:         if (! f.continued) {
 41204   008554  B9A1               	btfsc	getEVs@f& (0+255),4,b
 41205   008556  D00F               	goto	l19351
 41206   008558                     u19410:
 41207                           
 41208                           ; BSR set to: 0
 41209                           ;../../VLCBlib_PIC/event_teach_large.c: 1213:             for (; evNum < 20; evNum++) {
 41210   008558  0E13               	movlw	19
 41211   00855A  65A4               	cpfsgt	getEVs@evNum& (0+255),b
 41212   00855C  D001               	goto	l19341
 41213   00855E  D009               	goto	l19347
 41214   008560                     l19341:
 41215                           
 41216                           ; BSR set to: 0
 41217                           ;../../VLCBlib_PIC/event_teach_large.c: 1214:                 evs[evNum] = 0;
 41218   008560  0E20               	movlw	low _evs
 41219   008562  25A4               	addwf	getEVs@evNum& (0+255),w,b
 41220   008564  6ED9               	movwf	fsr2l,c
 41221   008566  6ADA               	clrf	fsr2h,c
 41222   008568  0E02               	movlw	high _evs
 41223   00856A  22DA               	addwfc	fsr2h,f,c
 41224   00856C  6ADF               	clrf	indf2,c
 41225                           
 41226                           ; BSR set to: 0
 41227                           ;../../VLCBlib_PIC/event_teach_large.c: 1215:             }
 41228   00856E  2BA4               	incf	getEVs@evNum& (0+255),f,b
 41229   008570  D7F3               	goto	u19410
 41230   008572                     l19347:
 41231                           
 41232                           ; BSR set to: 0
 41233                           ;../../VLCBlib_PIC/event_teach_large.c: 1216:             return 0;
 41234   008572  0E00               	movlw	0
 41235   008574  0012               	return	
 41236   008576                     l19351:
 41237                           
 41238                           ; BSR set to: 0
 41239                           ;../../VLCBlib_PIC/event_teach_large.c: 1218:         tableIndex = (uint8_t)readNVM(FLAS
      +                          H_NVM_TYPE, 0xEF80 + 16*tableIndex+1);
 41240   008576  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 41241   008578  0D10               	mullw	16
 41242   00857A  CFF3 F09D          	movff	prodl,??_getEVs
 41243   00857E  CFF4 F09E          	movff	prodh,??_getEVs+1
 41244   008582  0E81               	movlw	129
 41245   008584  259D               	addwf	??_getEVs& (0+255),w,b
 41246   008586  6F9F               	movwf	(??_getEVs+2)& (0+255),b
 41247   008588  0EEF               	movlw	239
 41248   00858A  219E               	addwfc	(??_getEVs+1)& (0+255),w,b
 41249   00858C  6FA0               	movwf	(??_getEVs+3)& (0+255),b
 41250   00858E  C09F  F091         	movff	??_getEVs+2,readNVM@index
 41251   008592  C0A0  F092         	movff	??_getEVs+3,readNVM@index+1
 41252   008596  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41253   008598  0E01               	movlw	1
 41254   00859A  EC31  F05B         	call	_readNVM
 41255   00859E  0100               	movlb	0	; () banked
 41256   0085A0  5191               	movf	?_readNVM& (0+255),w,b
 41257   0085A2  6FA3               	movwf	getEVs@tableIndex& (0+255),b
 41258                           
 41259                           ; BSR set to: 0
 41260                           ;../../VLCBlib_PIC/event_teach_large.c: 1219:         if (tableIndex == 0xff) {
 41261   0085A4  29A3               	incf	getEVs@tableIndex& (0+255),w,b
 41262   0085A6  B4D8               	btfsc	status,2,c
 41263   0085A8  D78B               	goto	u19390
 41264                           
 41265                           ; BSR set to: 0
 41266                           ;../../VLCBlib_PIC/event_teach_large.c: 1222:     }
 41267   0085AA  0E13               	movlw	19
 41268   0085AC  65A4               	cpfsgt	getEVs@evNum& (0+255),b
 41269   0085AE  D78D               	goto	l19319
 41270   0085B0  D7E0               	goto	l19347
 41271   0085B2                     __end_of_getEVs:
 41272                           	callstack 0
 41273                           
 41274 ;; *************** function _validStart *****************
 41275 ;; Defined at:
 41276 ;;		line 1296 in file "../../VLCBlib_PIC/event_teach_large.c"
 41277 ;; Parameters:    Size  Location     Type
 41278 ;;  tableIndex      1    wreg     unsigned char 
 41279 ;; Auto vars:     Size  Location     Type
 41280 ;;  tableIndex      1   59[BANK0 ] unsigned char 
 41281 ;;  f               1   60[BANK0 ] struct .
 41282 ;; Return value:  Size  Location     Type
 41283 ;;                  1    wreg      enum E12766
 41284 ;; Registers used:
 41285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41286 ;; Tracked objects:
 41287 ;;		On entry : 0/0
 41288 ;;		On exit  : 0/0
 41289 ;;		Unchanged: 0/0
 41290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41292 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41293 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41294 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41295 ;;Total ram usage:        6 bytes
 41296 ;; Hardware stack levels used: 1
 41297 ;; Hardware stack levels required when called: 14
 41298 ;; This function calls:
 41299 ;;		_readNVM
 41300 ;; This function is called by:
 41301 ;;		_deleteActionRange
 41302 ;;		_nerdCallback
 41303 ;;		_doNenrd
 41304 ;;		_doRqevn
 41305 ;;		_doReval
 41306 ;;		_removeTableEntry
 41307 ;;		_checkRemoveTableEntry
 41308 ;;		_getEv
 41309 ;;		_numEv
 41310 ;;		_getEVs
 41311 ;;		_rebuildHashtable
 41312 ;;		_deleteHappeningRange
 41313 ;; This function uses a non-reentrant model
 41314 ;;
 41315                           
 41316                           	psect	text175
 41317   00BB34                     __ptext175:
 41318                           	callstack 0
 41319   00BB34                     _validStart:
 41320                           	callstack 13
 41321                           
 41322                           ;incstack = 0
 41323                           ;validStart@tableIndex stored from wreg
 41324   00BB34  0100               	movlb	0	; () banked
 41325   00BB36  6F9B               	movwf	validStart@tableIndex& (0+255),b
 41326                           
 41327                           ;../../VLCBlib_PIC/event_teach_large.c: 1297:     EventTableFlags f;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1301:     f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80 + 16*ta
      +                          bleIndex+0);
 41328   00BB38  0100               	movlb	0	; () banked
 41329   00BB3A  519B               	movf	validStart@tableIndex& (0+255),w,b
 41330   00BB3C  6F97               	movwf	??_validStart& (0+255),b
 41331   00BB3E  6B98               	clrf	(??_validStart+1)& (0+255),b
 41332   00BB40  3B97               	swapf	??_validStart& (0+255),f,b
 41333   00BB42  3B98               	swapf	(??_validStart+1)& (0+255),f,b
 41334   00BB44  0EF0               	movlw	240
 41335   00BB46  1798               	andwf	(??_validStart+1)& (0+255),f,b
 41336   00BB48  5197               	movf	??_validStart& (0+255),w,b
 41337   00BB4A  0B0F               	andlw	15
 41338   00BB4C  1398               	iorwf	(??_validStart+1)& (0+255),f,b
 41339   00BB4E  0EF0               	movlw	240
 41340   00BB50  1797               	andwf	??_validStart& (0+255),f,b
 41341   00BB52  0E80               	movlw	128
 41342   00BB54  2597               	addwf	??_validStart& (0+255),w,b
 41343   00BB56  6F99               	movwf	(??_validStart+2)& (0+255),b
 41344   00BB58  0EEF               	movlw	239
 41345   00BB5A  2198               	addwfc	(??_validStart+1)& (0+255),w,b
 41346   00BB5C  6F9A               	movwf	(??_validStart+3)& (0+255),b
 41347   00BB5E  C099  F091         	movff	??_validStart+2,readNVM@index
 41348   00BB62  C09A  F092         	movff	??_validStart+3,readNVM@index+1
 41349   00BB66  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41350   00BB68  0E01               	movlw	1
 41351   00BB6A  EC31  F05B         	call	_readNVM
 41352   00BB6E  0100               	movlb	0	; () banked
 41353   00BB70  5191               	movf	?_readNVM& (0+255),w,b
 41354   00BB72  6F9C               	movwf	validStart@f& (0+255),b
 41355                           
 41356                           ; BSR set to: 0
 41357                           ;../../VLCBlib_PIC/event_teach_large.c: 1302:     if (( !f.freeEntry) && ( ! f.continuat
      +                          ion)) {
 41358   00BB74  AF9C               	btfss	validStart@f& (0+255),7,b
 41359                           
 41360                           ; BSR set to: 0
 41361   00BB76  BB9C               	btfsc	validStart@f& (0+255),5,b
 41362   00BB78  D002               	goto	l19043
 41363                           
 41364                           ; BSR set to: 0
 41365                           ;../../VLCBlib_PIC/event_teach_large.c: 1303:         return TRUE;
 41366   00BB7A  0E01               	movlw	1
 41367   00BB7C  0012               	return	
 41368   00BB7E                     l19043:
 41369                           
 41370                           ; BSR set to: 0
 41371                           ;../../VLCBlib_PIC/event_teach_large.c: 1305:         return FALSE;
 41372   00BB7E  0E00               	movlw	0
 41373                           
 41374                           ; BSR set to: 0
 41375   00BB80  0012               	return		;funcret
 41376   00BB82                     __end_of_validStart:
 41377                           	callstack 0
 41378                           
 41379 ;; *************** function _findEvent *****************
 41380 ;; Defined at:
 41381 ;;		line 1012 in file "../../VLCBlib_PIC/event_teach_large.c"
 41382 ;; Parameters:    Size  Location     Type
 41383 ;;  nodeNumber      2    0[BANK1 ] unsigned short 
 41384 ;;  eventNumber     2    2[BANK1 ] unsigned short 
 41385 ;; Auto vars:     Size  Location     Type
 41386 ;;  en              2    8[BANK1 ] unsigned short 
 41387 ;;  nn              2    6[BANK1 ] unsigned short 
 41388 ;;  tableIndex      1   12[BANK1 ] unsigned char 
 41389 ;;  chainIdx        1   11[BANK1 ] unsigned char 
 41390 ;;  hash            1   10[BANK1 ] unsigned char 
 41391 ;; Return value:  Size  Location     Type
 41392 ;;                  1    wreg      unsigned char 
 41393 ;; Registers used:
 41394 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41395 ;; Tracked objects:
 41396 ;;		On entry : 0/0
 41397 ;;		On exit  : 0/0
 41398 ;;		Unchanged: 0/0
 41399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41400 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41401 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41402 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41403 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41404 ;;Total ram usage:       13 bytes
 41405 ;; Hardware stack levels used: 1
 41406 ;; Hardware stack levels required when called: 15
 41407 ;; This function calls:
 41408 ;;		_getEN
 41409 ;;		_getHash
 41410 ;;		_getNN
 41411 ;; This function is called by:
 41412 ;;		_consumer2QProcessMessage
 41413 ;;		_ackEventProcessMessage
 41414 ;;		_doReqev
 41415 ;;		_removeEvent
 41416 ;;		_addEvent
 41417 ;;		_producerProcessMessage
 41418 ;; This function uses a non-reentrant model
 41419 ;;
 41420                           
 41421                           	psect	text176
 41422   00A634                     __ptext176:
 41423                           	callstack 0
 41424   00A634                     _findEvent:
 41425                           	callstack 12
 41426                           
 41427                           ;../../VLCBlib_PIC/event_teach_large.c: 1014:     uint8_t hash = getHash(nodeNumber, eve
      +                          ntNumber);
 41428                           
 41429                           ; BSR set to: 0
 41430                           ;incstack = 0
 41431   00A634  C1BE  F0A3         	movff	findEvent@nodeNumber,getHash@nn
 41432   00A638  C1BF  F0A4         	movff	findEvent@nodeNumber+1,getHash@nn+1
 41433   00A63C  C1C0  F0A5         	movff	findEvent@eventNumber,getHash@en
 41434   00A640  C1C1  F0A6         	movff	findEvent@eventNumber+1,getHash@en+1
 41435   00A644  EC90  F063         	call	_getHash	;wreg free
 41436   00A648  0101               	movlb	1	; () banked
 41437   00A64A  6FC8               	movwf	findEvent@hash& (0+255),b
 41438                           
 41439                           ; BSR set to: 1
 41440                           ;../../VLCBlib_PIC/event_teach_large.c: 1015:     uint8_t chainIdx;;../../VLCBlib_PIC/ev
      +                          ent_teach_large.c: 1016:     for (chainIdx=0; chainIdx<20; chainIdx++) {
 41441   00A64C  0E00               	movlw	0
 41442   00A64E  6FC9               	movwf	findEvent@chainIdx& (0+255),b
 41443   00A650                     l19717:
 41444                           
 41445                           ; BSR set to: 1
 41446                           ;../../VLCBlib_PIC/event_teach_large.c: 1017:         uint8_t tableIndex = eventChains[h
      +                          ash][chainIdx];
 41447   00A650  51C8               	movf	findEvent@hash& (0+255),w,b
 41448   00A652  0D14               	mullw	20
 41449   00A654  0E48               	movlw	low _eventChains
 41450   00A656  24F3               	addwf	243,w,c
 41451   00A658  6FC2               	movwf	??_findEvent& (0+255),b
 41452   00A65A  0E05               	movlw	high _eventChains
 41453   00A65C  20F4               	addwfc	prodh,w,c
 41454   00A65E  6FC3               	movwf	(??_findEvent+1)& (0+255),b
 41455   00A660  51C9               	movf	findEvent@chainIdx& (0+255),w,b
 41456   00A662  25C2               	addwf	??_findEvent& (0+255),w,b
 41457   00A664  6ED9               	movwf	fsr2l,c
 41458   00A666  0E00               	movlw	0
 41459   00A668  21C3               	addwfc	(??_findEvent+1)& (0+255),w,b
 41460   00A66A  6EDA               	movwf	fsr2h,c
 41461   00A66C  50DF               	movf	indf2,w,c
 41462   00A66E  6FCA               	movwf	findEvent@tableIndex& (0+255),b
 41463                           
 41464                           ; BSR set to: 1
 41465                           ;../../VLCBlib_PIC/event_teach_large.c: 1018:         uint16_t nn, en;;../../VLCBlib_PIC
      +                          /event_teach_large.c: 1019:         if (tableIndex == 0xff) return 0xff;
 41466   00A670  29CA               	incf	findEvent@tableIndex& (0+255),w,b
 41467   00A672  A4D8               	btfss	status,2,c
 41468   00A674  D002               	goto	l19725
 41469   00A676                     u19950:
 41470                           
 41471                           ; BSR set to: 1
 41472   00A676  0EFF               	movlw	255
 41473   00A678  0012               	return	
 41474   00A67A                     l19725:
 41475                           
 41476                           ; BSR set to: 1
 41477                           ;../../VLCBlib_PIC/event_teach_large.c: 1020:         nn = getNN(tableIndex);
 41478   00A67A  51CA               	movf	findEvent@tableIndex& (0+255),w,b
 41479   00A67C  ECA7  F04B         	call	_getNN
 41480   00A680  C097  F1C4         	movff	?_getNN,findEvent@nn
 41481   00A684  C098  F1C5         	movff	?_getNN+1,findEvent@nn+1
 41482                           
 41483                           ;../../VLCBlib_PIC/event_teach_large.c: 1021:         en = getEN(tableIndex);
 41484   00A688  0101               	movlb	1	; () banked
 41485   00A68A  51CA               	movf	findEvent@tableIndex& (0+255),w,b
 41486   00A68C  ECFA  F056         	call	_getEN
 41487   00A690  C097  F1C6         	movff	?_getEN,findEvent@en
 41488   00A694  C098  F1C7         	movff	?_getEN+1,findEvent@en+1
 41489                           
 41490                           ;../../VLCBlib_PIC/event_teach_large.c: 1022:         if ((nn == nodeNumber) && (en == e
      +                          ventNumber)) {
 41491   00A698  0101               	movlb	1	; () banked
 41492   00A69A  51BE               	movf	findEvent@nodeNumber& (0+255),w,b
 41493   00A69C  19C4               	xorwf	findEvent@nn& (0+255),w,b
 41494   00A69E  E10D               	bnz	l19735
 41495   00A6A0  51BF               	movf	(findEvent@nodeNumber+1)& (0+255),w,b
 41496   00A6A2  19C5               	xorwf	(findEvent@nn+1)& (0+255),w,b
 41497   00A6A4  A4D8               	btfss	status,2,c
 41498   00A6A6  D009               	goto	l19735
 41499                           
 41500                           ; BSR set to: 1
 41501   00A6A8  51C0               	movf	findEvent@eventNumber& (0+255),w,b
 41502   00A6AA  19C6               	xorwf	findEvent@en& (0+255),w,b
 41503   00A6AC  E106               	bnz	l19735
 41504   00A6AE  51C1               	movf	(findEvent@eventNumber+1)& (0+255),w,b
 41505   00A6B0  19C7               	xorwf	(findEvent@en+1)& (0+255),w,b
 41506   00A6B2  A4D8               	btfss	status,2,c
 41507   00A6B4  D002               	goto	l19735
 41508                           
 41509                           ; BSR set to: 1
 41510                           ;../../VLCBlib_PIC/event_teach_large.c: 1023:             return tableIndex;
 41511   00A6B6  51CA               	movf	findEvent@tableIndex& (0+255),w,b
 41512   00A6B8  0012               	return	
 41513   00A6BA                     l19735:
 41514                           
 41515                           ; BSR set to: 1
 41516                           ;../../VLCBlib_PIC/event_teach_large.c: 1025:     }
 41517   00A6BA  2BC9               	incf	findEvent@chainIdx& (0+255),f,b
 41518                           
 41519                           ; BSR set to: 1
 41520   00A6BC  0E13               	movlw	19
 41521   00A6BE  65C9               	cpfsgt	findEvent@chainIdx& (0+255),b
 41522   00A6C0  D7C7               	goto	l19717
 41523   00A6C2  D7D9               	goto	u19950
 41524   00A6C4                     __end_of_findEvent:
 41525                           	callstack 0
 41526                           
 41527 ;; *************** function _getNN *****************
 41528 ;; Defined at:
 41529 ;;		line 1233 in file "../../VLCBlib_PIC/event_teach_large.c"
 41530 ;; Parameters:    Size  Location     Type
 41531 ;;  tableIndex      1    wreg     unsigned char 
 41532 ;; Auto vars:     Size  Location     Type
 41533 ;;  tableIndex      1   66[BANK0 ] unsigned char 
 41534 ;;  lo              2   63[BANK0 ] unsigned short 
 41535 ;;  hi              2   61[BANK0 ] unsigned short 
 41536 ;;  f               1   65[BANK0 ] struct .
 41537 ;; Return value:  Size  Location     Type
 41538 ;;                  2   55[BANK0 ] unsigned short 
 41539 ;; Registers used:
 41540 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41541 ;; Tracked objects:
 41542 ;;		On entry : 0/0
 41543 ;;		On exit  : 0/0
 41544 ;;		Unchanged: 0/0
 41545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41546 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41547 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41548 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41549 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41550 ;;Total ram usage:       12 bytes
 41551 ;; Hardware stack levels used: 1
 41552 ;; Hardware stack levels required when called: 14
 41553 ;; This function calls:
 41554 ;;		_readNVM
 41555 ;; This function is called by:
 41556 ;;		_nerdCallback
 41557 ;;		_doNenrd
 41558 ;;		_reqevCallback
 41559 ;;		_findEvent
 41560 ;;		_rebuildHashtable
 41561 ;;		_sendProducedEvent
 41562 ;; This function uses a non-reentrant model
 41563 ;;
 41564                           
 41565                           	psect	text177
 41566   00974E                     __ptext177:
 41567                           	callstack 0
 41568   00974E                     _getNN:
 41569                           	callstack 13
 41570                           
 41571                           ; BSR set to: 1
 41572                           ;incstack = 0
 41573                           ;getNN@tableIndex stored from wreg
 41574   00974E  0100               	movlb	0	; () banked
 41575   009750  6FA2               	movwf	getNN@tableIndex& (0+255),b
 41576                           
 41577                           ;../../VLCBlib_PIC/event_teach_large.c: 1234:     uint16_t hi;;../../VLCBlib_PIC/event_t
      +                          each_large.c: 1235:     uint16_t lo;;../../VLCBlib_PIC/event_teach_large.c: 1236:     Ev
      +                          entTableFlags f;;../../VLCBlib_PIC/event_teach_large.c: 1238:     f.asByte = (uint8_t)re
      +                          adNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 41578   009752  0100               	movlb	0	; () banked
 41579   009754  51A2               	movf	getNN@tableIndex& (0+255),w,b
 41580   009756  6F99               	movwf	??_getNN& (0+255),b
 41581   009758  6B9A               	clrf	(??_getNN+1)& (0+255),b
 41582   00975A  3B99               	swapf	??_getNN& (0+255),f,b
 41583   00975C  3B9A               	swapf	(??_getNN+1)& (0+255),f,b
 41584   00975E  0EF0               	movlw	240
 41585   009760  179A               	andwf	(??_getNN+1)& (0+255),f,b
 41586   009762  5199               	movf	??_getNN& (0+255),w,b
 41587   009764  0B0F               	andlw	15
 41588   009766  139A               	iorwf	(??_getNN+1)& (0+255),f,b
 41589   009768  0EF0               	movlw	240
 41590   00976A  1799               	andwf	??_getNN& (0+255),f,b
 41591   00976C  0E80               	movlw	128
 41592   00976E  2599               	addwf	??_getNN& (0+255),w,b
 41593   009770  6F9B               	movwf	(??_getNN+2)& (0+255),b
 41594   009772  0EEF               	movlw	239
 41595   009774  219A               	addwfc	(??_getNN+1)& (0+255),w,b
 41596   009776  6F9C               	movwf	(??_getNN+3)& (0+255),b
 41597   009778  C09B  F091         	movff	??_getNN+2,readNVM@index
 41598   00977C  C09C  F092         	movff	??_getNN+3,readNVM@index+1
 41599   009780  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41600   009782  0E01               	movlw	1
 41601   009784  EC31  F05B         	call	_readNVM
 41602   009788  0100               	movlb	0	; () banked
 41603   00978A  5191               	movf	?_readNVM& (0+255),w,b
 41604   00978C  6FA1               	movwf	getNN@f& (0+255),b
 41605                           
 41606                           ; BSR set to: 0
 41607                           ;../../VLCBlib_PIC/event_teach_large.c: 1239:     if (f.forceOwnNN) {
 41608   00978E  ADA1               	btfss	getNN@f& (0+255),6,b
 41609   009790  D005               	goto	l19191
 41610                           
 41611                           ; BSR set to: 0
 41612                           ;../../VLCBlib_PIC/event_teach_large.c: 1240:         return nn.word;
 41613   009792  C0B4  F097         	movff	_nn,?_getNN
 41614   009796  C0B5  F098         	movff	_nn+1,?_getNN+1
 41615   00979A  0012               	return	
 41616   00979C                     l19191:
 41617                           
 41618                           ; BSR set to: 0
 41619                           ;../../VLCBlib_PIC/event_teach_large.c: 1242:     lo = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*tableIndex+2);
 41620   00979C  51A2               	movf	getNN@tableIndex& (0+255),w,b
 41621   00979E  0D10               	mullw	16
 41622   0097A0  CFF3 F099          	movff	prodl,??_getNN
 41623   0097A4  CFF4 F09A          	movff	prodh,??_getNN+1
 41624   0097A8  0E82               	movlw	130
 41625   0097AA  2599               	addwf	??_getNN& (0+255),w,b
 41626   0097AC  6F9B               	movwf	(??_getNN+2)& (0+255),b
 41627   0097AE  0EEF               	movlw	239
 41628   0097B0  219A               	addwfc	(??_getNN+1)& (0+255),w,b
 41629   0097B2  6F9C               	movwf	(??_getNN+3)& (0+255),b
 41630   0097B4  C09B  F091         	movff	??_getNN+2,readNVM@index
 41631   0097B8  C09C  F092         	movff	??_getNN+3,readNVM@index+1
 41632   0097BC  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41633   0097BE  0E01               	movlw	1
 41634   0097C0  EC31  F05B         	call	_readNVM
 41635   0097C4  0100               	movlb	0	; () banked
 41636   0097C6  5191               	movf	?_readNVM& (0+255),w,b
 41637   0097C8  6F9F               	movwf	getNN@lo& (0+255),b
 41638   0097CA  6BA0               	clrf	(getNN@lo+1)& (0+255),b
 41639                           
 41640                           ;../../VLCBlib_PIC/event_teach_large.c: 1243:     hi = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*tableIndex+2 +1);
 41641   0097CC  51A2               	movf	getNN@tableIndex& (0+255),w,b
 41642   0097CE  0D10               	mullw	16
 41643   0097D0  CFF3 F099          	movff	prodl,??_getNN
 41644   0097D4  CFF4 F09A          	movff	prodh,??_getNN+1
 41645   0097D8  0E83               	movlw	131
 41646   0097DA  2599               	addwf	??_getNN& (0+255),w,b
 41647   0097DC  6F9B               	movwf	(??_getNN+2)& (0+255),b
 41648   0097DE  0EEF               	movlw	239
 41649   0097E0  219A               	addwfc	(??_getNN+1)& (0+255),w,b
 41650   0097E2  6F9C               	movwf	(??_getNN+3)& (0+255),b
 41651   0097E4  C09B  F091         	movff	??_getNN+2,readNVM@index
 41652   0097E8  C09C  F092         	movff	??_getNN+3,readNVM@index+1
 41653   0097EC  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41654   0097EE  0E01               	movlw	1
 41655   0097F0  EC31  F05B         	call	_readNVM
 41656   0097F4  0100               	movlb	0	; () banked
 41657   0097F6  5191               	movf	?_readNVM& (0+255),w,b
 41658   0097F8  6F9D               	movwf	getNN@hi& (0+255),b
 41659   0097FA  6B9E               	clrf	(getNN@hi+1)& (0+255),b
 41660                           
 41661                           ; BSR set to: 0
 41662                           ;../../VLCBlib_PIC/event_teach_large.c: 1244:     return lo | (hi << 8);
 41663   0097FC  519D               	movf	getNN@hi& (0+255),w,b
 41664   0097FE  6F9A               	movwf	(??_getNN+1)& (0+255),b
 41665   009800  6B99               	clrf	??_getNN& (0+255),b
 41666   009802  519F               	movf	getNN@lo& (0+255),w,b
 41667   009804  1199               	iorwf	??_getNN& (0+255),w,b
 41668   009806  6F97               	movwf	?_getNN& (0+255),b
 41669   009808  51A0               	movf	(getNN@lo+1)& (0+255),w,b
 41670   00980A  119A               	iorwf	(??_getNN+1)& (0+255),w,b
 41671   00980C  6F98               	movwf	(?_getNN+1)& (0+255),b
 41672                           
 41673                           ; BSR set to: 0
 41674   00980E  0012               	return		;funcret
 41675   009810                     __end_of_getNN:
 41676                           	callstack 0
 41677                           
 41678 ;; *************** function _getHash *****************
 41679 ;; Defined at:
 41680 ;;		line 1327 in file "../../VLCBlib_PIC/event_teach_large.c"
 41681 ;; Parameters:    Size  Location     Type
 41682 ;;  nn              2   67[BANK0 ] unsigned short 
 41683 ;;  en              2   69[BANK0 ] unsigned short 
 41684 ;; Auto vars:     Size  Location     Type
 41685 ;;  hash            1   72[BANK0 ] unsigned char 
 41686 ;; Return value:  Size  Location     Type
 41687 ;;                  1    wreg      unsigned char 
 41688 ;; Registers used:
 41689 ;;		wreg, status,2, status,0, prodl, prodh
 41690 ;; Tracked objects:
 41691 ;;		On entry : 0/0
 41692 ;;		On exit  : 0/0
 41693 ;;		Unchanged: 0/0
 41694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41695 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41696 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41697 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41698 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41699 ;;Total ram usage:        6 bytes
 41700 ;; Hardware stack levels used: 1
 41701 ;; Hardware stack levels required when called: 12
 41702 ;; This function calls:
 41703 ;;		Nothing
 41704 ;; This function is called by:
 41705 ;;		_findEvent
 41706 ;;		_rebuildHashtable
 41707 ;; This function uses a non-reentrant model
 41708 ;;
 41709                           
 41710                           	psect	text178
 41711   00C720                     __ptext178:
 41712                           	callstack 0
 41713   00C720                     _getHash:
 41714                           	callstack 15
 41715                           
 41716                           ;../../VLCBlib_PIC/event_teach_large.c: 1328:     uint8_t hash;;../../VLCBlib_PIC/event_
      +                          teach_large.c: 1330:     hash = (uint8_t)(nn ^ (nn >> 8U));
 41717                           
 41718                           ; BSR set to: 0
 41719                           ;incstack = 0
 41720   00C720  0100               	movlb	0	; () banked
 41721   00C722  51A4               	movf	(getHash@nn+1)& (0+255),w,b
 41722   00C724  19A3               	xorwf	getHash@nn& (0+255),w,b
 41723   00C726  6FA8               	movwf	getHash@hash& (0+255),b
 41724                           
 41725                           ; BSR set to: 0
 41726                           ;../../VLCBlib_PIC/event_teach_large.c: 1331:     hash = (uint8_t)(7U*hash + (en ^ (en>>
      +                          8U)));
 41727   00C728  51A6               	movf	(getHash@en+1)& (0+255),w,b
 41728   00C72A  19A5               	xorwf	getHash@en& (0+255),w,b
 41729   00C72C  6FA7               	movwf	??_getHash& (0+255),b
 41730   00C72E  51A8               	movf	getHash@hash& (0+255),w,b
 41731   00C730  0D07               	mullw	7
 41732   00C732  50F3               	movf	243,w,c
 41733   00C734  25A7               	addwf	??_getHash& (0+255),w,b
 41734   00C736  6FA8               	movwf	getHash@hash& (0+255),b
 41735                           
 41736                           ; BSR set to: 0
 41737                           ;../../VLCBlib_PIC/event_teach_large.c: 1333:     hash %= 32;
 41738   00C738  0E1F               	movlw	31
 41739   00C73A  17A8               	andwf	getHash@hash& (0+255),f,b
 41740                           
 41741                           ; BSR set to: 0
 41742                           ;../../VLCBlib_PIC/event_teach_large.c: 1334:     return hash;
 41743   00C73C  51A8               	movf	getHash@hash& (0+255),w,b
 41744                           
 41745                           ; BSR set to: 0
 41746   00C73E  0012               	return		;funcret
 41747   00C740                     __end_of_getHash:
 41748                           	callstack 0
 41749                           
 41750 ;; *************** function _getEN *****************
 41751 ;; Defined at:
 41752 ;;		line 1254 in file "../../VLCBlib_PIC/event_teach_large.c"
 41753 ;; Parameters:    Size  Location     Type
 41754 ;;  tableIndex      1    wreg     unsigned char 
 41755 ;; Auto vars:     Size  Location     Type
 41756 ;;  tableIndex      1   65[BANK0 ] unsigned char 
 41757 ;;  lo              2   63[BANK0 ] unsigned short 
 41758 ;;  hi              2   61[BANK0 ] unsigned short 
 41759 ;; Return value:  Size  Location     Type
 41760 ;;                  2   55[BANK0 ] unsigned short 
 41761 ;; Registers used:
 41762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41763 ;; Tracked objects:
 41764 ;;		On entry : 0/0
 41765 ;;		On exit  : 0/0
 41766 ;;		Unchanged: 0/0
 41767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41768 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41769 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41770 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41771 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41772 ;;Total ram usage:       11 bytes
 41773 ;; Hardware stack levels used: 1
 41774 ;; Hardware stack levels required when called: 14
 41775 ;; This function calls:
 41776 ;;		_readNVM
 41777 ;; This function is called by:
 41778 ;;		_nerdCallback
 41779 ;;		_doNenrd
 41780 ;;		_reqevCallback
 41781 ;;		_findEvent
 41782 ;;		_rebuildHashtable
 41783 ;;		_sendProducedEvent
 41784 ;; This function uses a non-reentrant model
 41785 ;;
 41786                           
 41787                           	psect	text179
 41788   00ADF4                     __ptext179:
 41789                           	callstack 0
 41790   00ADF4                     _getEN:
 41791                           	callstack 13
 41792                           
 41793                           ; BSR set to: 0
 41794                           ;incstack = 0
 41795                           ;getEN@tableIndex stored from wreg
 41796   00ADF4  0100               	movlb	0	; () banked
 41797   00ADF6  6FA1               	movwf	getEN@tableIndex& (0+255),b
 41798                           
 41799                           ;../../VLCBlib_PIC/event_teach_large.c: 1255:     uint16_t hi;;../../VLCBlib_PIC/event_t
      +                          each_large.c: 1256:     uint16_t lo;;../../VLCBlib_PIC/event_teach_large.c: 1258:     lo
      +                           = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+4);
 41800   00ADF8  0100               	movlb	0	; () banked
 41801   00ADFA  51A1               	movf	getEN@tableIndex& (0+255),w,b
 41802   00ADFC  0D10               	mullw	16
 41803   00ADFE  CFF3 F099          	movff	prodl,??_getEN
 41804   00AE02  CFF4 F09A          	movff	prodh,??_getEN+1
 41805   00AE06  0E84               	movlw	132
 41806   00AE08  2599               	addwf	??_getEN& (0+255),w,b
 41807   00AE0A  6F9B               	movwf	(??_getEN+2)& (0+255),b
 41808   00AE0C  0EEF               	movlw	239
 41809   00AE0E  219A               	addwfc	(??_getEN+1)& (0+255),w,b
 41810   00AE10  6F9C               	movwf	(??_getEN+3)& (0+255),b
 41811   00AE12  C09B  F091         	movff	??_getEN+2,readNVM@index
 41812   00AE16  C09C  F092         	movff	??_getEN+3,readNVM@index+1
 41813   00AE1A  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41814   00AE1C  0E01               	movlw	1
 41815   00AE1E  EC31  F05B         	call	_readNVM
 41816   00AE22  0100               	movlb	0	; () banked
 41817   00AE24  5191               	movf	?_readNVM& (0+255),w,b
 41818   00AE26  6F9F               	movwf	getEN@lo& (0+255),b
 41819   00AE28  6BA0               	clrf	(getEN@lo+1)& (0+255),b
 41820                           
 41821                           ;../../VLCBlib_PIC/event_teach_large.c: 1259:     hi = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*tableIndex+4 +1);
 41822   00AE2A  51A1               	movf	getEN@tableIndex& (0+255),w,b
 41823   00AE2C  0D10               	mullw	16
 41824   00AE2E  CFF3 F099          	movff	prodl,??_getEN
 41825   00AE32  CFF4 F09A          	movff	prodh,??_getEN+1
 41826   00AE36  0E85               	movlw	133
 41827   00AE38  2599               	addwf	??_getEN& (0+255),w,b
 41828   00AE3A  6F9B               	movwf	(??_getEN+2)& (0+255),b
 41829   00AE3C  0EEF               	movlw	239
 41830   00AE3E  219A               	addwfc	(??_getEN+1)& (0+255),w,b
 41831   00AE40  6F9C               	movwf	(??_getEN+3)& (0+255),b
 41832   00AE42  C09B  F091         	movff	??_getEN+2,readNVM@index
 41833   00AE46  C09C  F092         	movff	??_getEN+3,readNVM@index+1
 41834   00AE4A  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41835   00AE4C  0E01               	movlw	1
 41836   00AE4E  EC31  F05B         	call	_readNVM
 41837   00AE52  0100               	movlb	0	; () banked
 41838   00AE54  5191               	movf	?_readNVM& (0+255),w,b
 41839   00AE56  6F9D               	movwf	getEN@hi& (0+255),b
 41840   00AE58  6B9E               	clrf	(getEN@hi+1)& (0+255),b
 41841                           
 41842                           ; BSR set to: 0
 41843                           ;../../VLCBlib_PIC/event_teach_large.c: 1260:     return lo | (hi << 8);
 41844   00AE5A  519D               	movf	getEN@hi& (0+255),w,b
 41845   00AE5C  6F9A               	movwf	(??_getEN+1)& (0+255),b
 41846   00AE5E  6B99               	clrf	??_getEN& (0+255),b
 41847   00AE60  519F               	movf	getEN@lo& (0+255),w,b
 41848   00AE62  1199               	iorwf	??_getEN& (0+255),w,b
 41849   00AE64  6F97               	movwf	?_getEN& (0+255),b
 41850   00AE66  51A0               	movf	(getEN@lo+1)& (0+255),w,b
 41851   00AE68  119A               	iorwf	(??_getEN+1)& (0+255),w,b
 41852   00AE6A  6F98               	movwf	(?_getEN+1)& (0+255),b
 41853                           
 41854                           ; BSR set to: 0
 41855   00AE6C  0012               	return		;funcret
 41856   00AE6E                     __end_of_getEN:
 41857                           	callstack 0
 41858                           
 41859 ;; *************** function _configIO *****************
 41860 ;; Defined at:
 41861 ;;		line 559 in file "../main.c"
 41862 ;; Parameters:    Size  Location     Type
 41863 ;;  i               1    wreg     unsigned char 
 41864 ;; Auto vars:     Size  Location     Type
 41865 ;;  i               1    8[BANK1 ] unsigned char 
 41866 ;;  type            1    7[BANK1 ] unsigned char 
 41867 ;;  action          1    6[BANK1 ] unsigned char 
 41868 ;; Return value:  Size  Location     Type
 41869 ;;                  1    wreg      void 
 41870 ;; Registers used:
 41871 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41872 ;; Tracked objects:
 41873 ;;		On entry : 0/0
 41874 ;;		On exit  : 0/0
 41875 ;;		Unchanged: 0/0
 41876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41878 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41879 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41880 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41881 ;;Total ram usage:        8 bytes
 41882 ;; Hardware stack levels used: 1
 41883 ;; Hardware stack levels required when called: 18
 41884 ;; This function calls:
 41885 ;;		_getNV
 41886 ;;		_readNVM
 41887 ;;		_setDigitalOutput
 41888 ;;		_writeNVM
 41889 ;; This function is called by:
 41890 ;;		_setup
 41891 ;;		_setType
 41892 ;; This function uses a non-reentrant model
 41893 ;;
 41894                           
 41895                           	psect	text180
 41896   004E84                     __ptext180:
 41897                           	callstack 0
 41898   004E84                     _configIO:
 41899                           	callstack 11
 41900                           
 41901                           ; BSR set to: 0
 41902                           ;incstack = 0
 41903                           ;configIO@i stored from wreg
 41904   004E84  0101               	movlb	1	; () banked
 41905   004E86  6FC6               	movwf	configIO@i& (0+255),b
 41906                           
 41907                           ;../main.c: 560:     uint8_t action;;../main.c: 561:     uint8_t type;;../main.c: 563:  
      +                             if (i >= 16) return;
 41908   004E88  0E0F               	movlw	15
 41909   004E8A  0101               	movlb	1	; () banked
 41910   004E8C  65C6               	cpfsgt	configIO@i& (0+255),b
 41911   004E8E  D001               	goto	l19953
 41912   004E90  0012               	return	
 41913   004E92                     l19953:
 41914                           
 41915                           ; BSR set to: 1
 41916                           ;../main.c: 566:     type = (uint8_t)getNV((16 + 7*(i) + 0));
 41917   004E92  51C6               	movf	configIO@i& (0+255),w,b
 41918   004E94  0D07               	mullw	7
 41919   004E96  50F3               	movf	243,w,c
 41920   004E98  0F10               	addlw	16
 41921   004E9A  ECD2  F05F         	call	_getNV
 41922   004E9E  0100               	movlb	0	; () banked
 41923   004EA0  518D               	movf	?_getNV& (0+255),w,b
 41924   004EA2  0101               	movlb	1	; () banked
 41925   004EA4  6FC5               	movwf	configIO@type& (0+255),b
 41926                           
 41927                           ;../main.c: 567:     switch (type) {
 41928   004EA6  D060               	goto	l19977
 41929   004EA8                     l19955:
 41930                           
 41931                           ; BSR set to: 1
 41932                           ;../main.c: 569:             if (getNV((16 + 7*(i) + 1)) & 0x04) {
 41933   004EA8  51C6               	movf	configIO@i& (0+255),w,b
 41934   004EAA  0D07               	mullw	7
 41935   004EAC  50F3               	movf	243,w,c
 41936   004EAE  0F11               	addlw	17
 41937   004EB0  ECD2  F05F         	call	_getNV
 41938   004EB4  0100               	movlb	0	; () banked
 41939   004EB6  A58D               	btfss	?_getNV& (0+255),2,b
 41940   004EB8  D018               	goto	l19959
 41941                           
 41942                           ; BSR set to: 0
 41943                           ;../main.c: 570:                 setDigitalOutput(i, (uint8_t)readNVM(EEPROM_NVM_TYPE, (
      +                          eeprom_address_t)((eeprom_address_t)((0x3FF -8))-25)+i));
 41944   004EBA  0EDE               	movlw	222
 41945   004EBC  0101               	movlb	1	; () banked
 41946   004EBE  25C6               	addwf	configIO@i& (0+255),w,b
 41947   004EC0  6FBF               	movwf	??_configIO& (0+255),b
 41948   004EC2  6BC0               	clrf	(??_configIO+1)& (0+255),b
 41949   004EC4  0E03               	movlw	3
 41950   004EC6  23C0               	addwfc	(??_configIO+1)& (0+255),f,b
 41951   004EC8  C1BF  F091         	movff	??_configIO,readNVM@index
 41952   004ECC  C1C0  F092         	movff	??_configIO+1,readNVM@index+1
 41953   004ED0  0100               	movlb	0	; () banked
 41954   004ED2  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41955   004ED4  0E00               	movlw	0
 41956   004ED6  EC31  F05B         	call	_readNVM
 41957   004EDA  0100               	movlb	0	; () banked
 41958   004EDC  5191               	movf	?_readNVM& (0+255),w,b
 41959   004EDE  6F97               	movwf	setDigitalOutput@state& (0+255),b
 41960   004EE0  0101               	movlb	1	; () banked
 41961   004EE2  51C6               	movf	configIO@i& (0+255),w,b
 41962   004EE4  ECA9  F053         	call	_setDigitalOutput
 41963                           
 41964                           ;../main.c: 571:             } else {
 41965   004EE8  D122               	goto	l20011
 41966   004EEA                     l19959:
 41967                           
 41968                           ; BSR set to: 0
 41969                           ;../main.c: 572:                 action = (getNV((16 + 7*(i) + 1)) & 0x20) ? 1 : 2;
 41970   004EEA  0101               	movlb	1	; () banked
 41971   004EEC  51C6               	movf	configIO@i& (0+255),w,b
 41972   004EEE  0D07               	mullw	7
 41973   004EF0  50F3               	movf	243,w,c
 41974   004EF2  0F11               	addlw	17
 41975   004EF4  ECD2  F05F         	call	_getNV
 41976   004EF8  0100               	movlb	0	; () banked
 41977   004EFA  BB8D               	btfsc	?_getNV& (0+255),5,b
 41978   004EFC  D005               	goto	l19963
 41979                           
 41980                           ; BSR set to: 0
 41981   004EFE  0E00               	movlw	0
 41982   004F00  0101               	movlb	1	; () banked
 41983   004F02  6FC3               	movwf	(_configIO$746+1)& (0+255),b
 41984   004F04  0E02               	movlw	2
 41985   004F06  D004               	goto	L25
 41986   004F08                     l19963:
 41987                           
 41988                           ; BSR set to: 0
 41989   004F08  0E00               	movlw	0
 41990   004F0A  0101               	movlb	1	; () banked
 41991   004F0C  6FC3               	movwf	(_configIO$746+1)& (0+255),b
 41992   004F0E  0E01               	movlw	1
 41993   004F10                     L25:
 41994   004F10  6FC2               	movwf	_configIO$746& (0+255),b
 41995                           
 41996                           ; BSR set to: 1
 41997   004F12  C1C2  F1C4         	movff	_configIO$746,configIO@action
 41998                           
 41999                           ; BSR set to: 1
 42000                           ;../main.c: 573:                 setDigitalOutput(i, action);
 42001   004F16  C1C4  F097         	movff	configIO@action,setDigitalOutput@state
 42002   004F1A  51C6               	movf	configIO@i& (0+255),w,b
 42003   004F1C  ECA9  F053         	call	_setDigitalOutput
 42004                           
 42005                           ;../main.c: 575:                 writeNVM(EEPROM_NVM_TYPE, (eeprom_address_t)(((eeprom_a
      +                          ddress_t)((0x3FF -8))-25)+i), action);
 42006   004F20  0EDE               	movlw	222
 42007   004F22  0101               	movlb	1	; () banked
 42008   004F24  25C6               	addwf	configIO@i& (0+255),w,b
 42009   004F26  6FBF               	movwf	??_configIO& (0+255),b
 42010   004F28  6BC0               	clrf	(??_configIO+1)& (0+255),b
 42011   004F2A  0E03               	movlw	3
 42012   004F2C  23C0               	addwfc	(??_configIO+1)& (0+255),f,b
 42013   004F2E  C1BF  F0A4         	movff	??_configIO,writeNVM@index
 42014   004F32  C1C0  F0A5         	movff	??_configIO+1,writeNVM@index+1
 42015   004F36  0100               	movlb	0	; () banked
 42016   004F38  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 42017   004F3A  C1C4  F0A7         	movff	configIO@action,writeNVM@value
 42018   004F3E  0E00               	movlw	0
 42019   004F40  ECC1  F05D         	call	_writeNVM
 42020   004F44  D0F4               	goto	l20011
 42021   004F46                     l19971:
 42022                           
 42023                           ; BSR set to: 1
 42024                           ;../main.c: 584:             setDigitalOutput(i, getNV((16 + 7*(i) + 1)) & 0x10);
 42025   004F46  51C6               	movf	configIO@i& (0+255),w,b
 42026   004F48  0D07               	mullw	7
 42027   004F4A  50F3               	movf	243,w,c
 42028   004F4C  0F11               	addlw	17
 42029   004F4E  ECD2  F05F         	call	_getNV
 42030   004F52  0100               	movlb	0	; () banked
 42031   004F54  518D               	movf	?_getNV& (0+255),w,b
 42032   004F56  0B10               	andlw	16
 42033   004F58  0101               	movlb	1	; () banked
 42034   004F5A  6FC1               	movwf	_configIO$8093& (0+255),b
 42035                           
 42036                           ; BSR set to: 1
 42037                           ;../main.c: 584:             setDigitalOutput(i, getNV((16 + 7*(i) + 1)) & 0x10);
 42038   004F5C  C1C1  F097         	movff	_configIO$8093,setDigitalOutput@state
 42039   004F60  51C6               	movf	configIO@i& (0+255),w,b
 42040   004F62  ECA9  F053         	call	_setDigitalOutput
 42041                           
 42042                           ;../main.c: 585:             break;
 42043   004F66  D0E3               	goto	l20011
 42044   004F68                     l19977:
 42045                           
 42046                           ; BSR set to: 1
 42047   004F68  51C5               	movf	configIO@type& (0+255),w,b
 42048                           
 42049                           ; Switch size 1, requested type "simple"
 42050                           ; Number of cases is 3, Range of values is 1 to 3
 42051                           ; switch strategies available:
 42052                           ; Name         Instructions Cycles
 42053                           ; simple_byte           10     6 (average)
 42054                           ;	Chosen strategy is simple_byte
 42055   004F6A  0A01               	xorlw	1	; case 1
 42056   004F6C  B4D8               	btfsc	status,2,c
 42057   004F6E  D79C               	goto	l19955
 42058   004F70  0A03               	xorlw	3	; case 2
 42059   004F72  B4D8               	btfsc	status,2,c
 42060   004F74  D7E8               	goto	l19971
 42061   004F76  0A01               	xorlw	1	; case 3
 42062   004F78  B4D8               	btfsc	status,2,c
 42063   004F7A  D7E5               	goto	l19971
 42064   004F7C  D0D8               	goto	l20011
 42065   004F7E                     l19979:
 42066                           
 42067                           ; BSR set to: 1
 42068                           ;../main.c: 599:             if ((type == 0) || (type == 5) || (type == 6)) {
 42069   004F7E  51C5               	movf	configIO@type& (0+255),w,b
 42070   004F80  B4D8               	btfsc	status,2,c
 42071   004F82  D008               	goto	u20330
 42072                           
 42073                           ; BSR set to: 1
 42074   004F84  0E05               	movlw	5
 42075   004F86  19C5               	xorwf	configIO@type& (0+255),w,b
 42076   004F88  B4D8               	btfsc	status,2,c
 42077   004F8A  D004               	goto	u20330
 42078                           
 42079                           ; BSR set to: 1
 42080   004F8C  0E06               	movlw	6
 42081   004F8E  19C5               	xorwf	configIO@type& (0+255),w,b
 42082   004F90  A4D8               	btfss	status,2,c
 42083   004F92  D01E               	goto	l19987
 42084   004F94                     u20330:
 42085                           
 42086                           ; BSR set to: 1
 42087                           ;../main.c: 600:                 TRISA |= (1 << configs[i].no);
 42088   004F94  51C6               	movf	configIO@i& (0+255),w,b
 42089   004F96  0D04               	mullw	4
 42090   004F98  0E02               	movlw	2
 42091   004F9A  26F3               	addwf	243,f,c
 42092   004F9C  0E00               	movlw	0
 42093   004F9E  22F4               	addwfc	244,f,c
 42094   004FA0  0E29               	movlw	low _configs
 42095   004FA2  24F3               	addwf	243,w,c
 42096   004FA4  6EF6               	movwf	tblptrl,c
 42097   004FA6  0EEE               	movlw	high _configs
 42098   004FA8  20F4               	addwfc	244,w,c
 42099   004FAA  6EF7               	movwf	tblptrh,c
 42100   004FAC                     	if	1	;There are 3 active tblptr bytes
 42101   004FAC  6AF8               	clrf	tblptru,c
 42102   004FAE  0E00               	movlw	low (__mediumconst shr (0+16))
 42103   004FB0  22F8               	addwfc	tblptru,f,c
 42104   004FB2                     	endif
 42105   004FB2  0008               	tblrd		*
 42106   004FB4  CFF5 F1BF          	movff	tablat,??_configIO
 42107   004FB8  0E01               	movlw	1
 42108   004FBA  6FC0               	movwf	(??_configIO+1)& (0+255),b
 42109   004FBC  2BBF               	incf	??_configIO& (0+255),f,b
 42110   004FBE  D002               	goto	u20344
 42111   004FC0                     u20345:
 42112   004FC0  90D8               	bcf	status,0,c
 42113   004FC2  37C0               	rlcf	(??_configIO+1)& (0+255),f,b
 42114   004FC4                     u20344:
 42115   004FC4  2FBF               	decfsz	??_configIO& (0+255),f,b
 42116   004FC6  D7FC               	goto	u20345
 42117   004FC8  0101               	movlb	1	; () banked
 42118   004FCA  51C0               	movf	(??_configIO+1)& (0+255),w,b
 42119   004FCC  1292               	iorwf	146,f,c	;volatile
 42120                           
 42121                           ;../main.c: 601:             } else {
 42122   004FCE  0012               	return	
 42123   004FD0                     l19987:
 42124                           
 42125                           ; BSR set to: 1
 42126                           ;../main.c: 602:                 TRISA &= ~(1 << configs[i].no);
 42127   004FD0  51C6               	movf	configIO@i& (0+255),w,b
 42128   004FD2  0D04               	mullw	4
 42129   004FD4  0E02               	movlw	2
 42130   004FD6  26F3               	addwf	243,f,c
 42131   004FD8  0E00               	movlw	0
 42132   004FDA  22F4               	addwfc	244,f,c
 42133   004FDC  0E29               	movlw	low _configs
 42134   004FDE  24F3               	addwf	243,w,c
 42135   004FE0  6EF6               	movwf	tblptrl,c
 42136   004FE2  0EEE               	movlw	high _configs
 42137   004FE4  20F4               	addwfc	244,w,c
 42138   004FE6  6EF7               	movwf	tblptrh,c
 42139   004FE8                     	if	1	;There are 3 active tblptr bytes
 42140   004FE8  6AF8               	clrf	tblptru,c
 42141   004FEA  0E00               	movlw	low (__mediumconst shr (0+16))
 42142   004FEC  22F8               	addwfc	tblptru,f,c
 42143   004FEE                     	endif
 42144   004FEE  0008               	tblrd		*
 42145   004FF0  CFF5 F1BF          	movff	tablat,??_configIO
 42146   004FF4  0E01               	movlw	1
 42147   004FF6  6FC0               	movwf	(??_configIO+1)& (0+255),b
 42148   004FF8  2BBF               	incf	??_configIO& (0+255),f,b
 42149   004FFA  D002               	goto	u20354
 42150   004FFC                     u20355:
 42151   004FFC  90D8               	bcf	status,0,c
 42152   004FFE  37C0               	rlcf	(??_configIO+1)& (0+255),f,b
 42153   005000                     u20354:
 42154   005000  2FBF               	decfsz	??_configIO& (0+255),f,b
 42155   005002  D7FC               	goto	u20355
 42156   005004  0101               	movlb	1	; () banked
 42157   005006  51C0               	movf	(??_configIO+1)& (0+255),w,b
 42158   005008  0AFF               	xorlw	255
 42159   00500A  1692               	andwf	146,f,c	;volatile
 42160   00500C  0012               	return	
 42161   00500E                     l19989:
 42162                           
 42163                           ; BSR set to: 1
 42164                           ;../main.c: 606:             if ((type == 0) || (type == 5) || (type == 6)) {
 42165   00500E  51C5               	movf	configIO@type& (0+255),w,b
 42166   005010  B4D8               	btfsc	status,2,c
 42167   005012  D008               	goto	u20380
 42168                           
 42169                           ; BSR set to: 1
 42170   005014  0E05               	movlw	5
 42171   005016  19C5               	xorwf	configIO@type& (0+255),w,b
 42172   005018  B4D8               	btfsc	status,2,c
 42173   00501A  D004               	goto	u20380
 42174                           
 42175                           ; BSR set to: 1
 42176   00501C  0E06               	movlw	6
 42177   00501E  19C5               	xorwf	configIO@type& (0+255),w,b
 42178   005020  A4D8               	btfss	status,2,c
 42179   005022  D01E               	goto	l19997
 42180   005024                     u20380:
 42181                           
 42182                           ; BSR set to: 1
 42183                           ;../main.c: 607:                 TRISB |= (1 << configs[i].no);
 42184   005024  51C6               	movf	configIO@i& (0+255),w,b
 42185   005026  0D04               	mullw	4
 42186   005028  0E02               	movlw	2
 42187   00502A  26F3               	addwf	243,f,c
 42188   00502C  0E00               	movlw	0
 42189   00502E  22F4               	addwfc	244,f,c
 42190   005030  0E29               	movlw	low _configs
 42191   005032  24F3               	addwf	243,w,c
 42192   005034  6EF6               	movwf	tblptrl,c
 42193   005036  0EEE               	movlw	high _configs
 42194   005038  20F4               	addwfc	244,w,c
 42195   00503A  6EF7               	movwf	tblptrh,c
 42196   00503C                     	if	1	;There are 3 active tblptr bytes
 42197   00503C  6AF8               	clrf	tblptru,c
 42198   00503E  0E00               	movlw	low (__mediumconst shr (0+16))
 42199   005040  22F8               	addwfc	tblptru,f,c
 42200   005042                     	endif
 42201   005042  0008               	tblrd		*
 42202   005044  CFF5 F1BF          	movff	tablat,??_configIO
 42203   005048  0E01               	movlw	1
 42204   00504A  6FC0               	movwf	(??_configIO+1)& (0+255),b
 42205   00504C  2BBF               	incf	??_configIO& (0+255),f,b
 42206   00504E  D002               	goto	u20394
 42207   005050                     u20395:
 42208   005050  90D8               	bcf	status,0,c
 42209   005052  37C0               	rlcf	(??_configIO+1)& (0+255),f,b
 42210   005054                     u20394:
 42211   005054  2FBF               	decfsz	??_configIO& (0+255),f,b
 42212   005056  D7FC               	goto	u20395
 42213   005058  0101               	movlb	1	; () banked
 42214   00505A  51C0               	movf	(??_configIO+1)& (0+255),w,b
 42215   00505C  1293               	iorwf	147,f,c	;volatile
 42216                           
 42217                           ;../main.c: 608:             } else {
 42218   00505E  0012               	return	
 42219   005060                     l19997:
 42220                           
 42221                           ; BSR set to: 1
 42222                           ;../main.c: 609:                 TRISB &= ~(1 << configs[i].no);
 42223   005060  51C6               	movf	configIO@i& (0+255),w,b
 42224   005062  0D04               	mullw	4
 42225   005064  0E02               	movlw	2
 42226   005066  26F3               	addwf	243,f,c
 42227   005068  0E00               	movlw	0
 42228   00506A  22F4               	addwfc	244,f,c
 42229   00506C  0E29               	movlw	low _configs
 42230   00506E  24F3               	addwf	243,w,c
 42231   005070  6EF6               	movwf	tblptrl,c
 42232   005072  0EEE               	movlw	high _configs
 42233   005074  20F4               	addwfc	244,w,c
 42234   005076  6EF7               	movwf	tblptrh,c
 42235   005078                     	if	1	;There are 3 active tblptr bytes
 42236   005078  6AF8               	clrf	tblptru,c
 42237   00507A  0E00               	movlw	low (__mediumconst shr (0+16))
 42238   00507C  22F8               	addwfc	tblptru,f,c
 42239   00507E                     	endif
 42240   00507E  0008               	tblrd		*
 42241   005080  CFF5 F1BF          	movff	tablat,??_configIO
 42242   005084  0E01               	movlw	1
 42243   005086  6FC0               	movwf	(??_configIO+1)& (0+255),b
 42244   005088  2BBF               	incf	??_configIO& (0+255),f,b
 42245   00508A  D002               	goto	u20404
 42246   00508C                     u20405:
 42247   00508C  90D8               	bcf	status,0,c
 42248   00508E  37C0               	rlcf	(??_configIO+1)& (0+255),f,b
 42249   005090                     u20404:
 42250   005090  2FBF               	decfsz	??_configIO& (0+255),f,b
 42251   005092  D7FC               	goto	u20405
 42252   005094  0101               	movlb	1	; () banked
 42253   005096  51C0               	movf	(??_configIO+1)& (0+255),w,b
 42254   005098  0AFF               	xorlw	255
 42255   00509A  1693               	andwf	147,f,c	;volatile
 42256   00509C  0012               	return	
 42257   00509E                     l19999:
 42258                           
 42259                           ; BSR set to: 1
 42260                           ;../main.c: 613:             if ((type == 0) || (type == 5) || (type == 6)) {
 42261   00509E  51C5               	movf	configIO@type& (0+255),w,b
 42262   0050A0  B4D8               	btfsc	status,2,c
 42263   0050A2  D008               	goto	u20430
 42264                           
 42265                           ; BSR set to: 1
 42266   0050A4  0E05               	movlw	5
 42267   0050A6  19C5               	xorwf	configIO@type& (0+255),w,b
 42268   0050A8  B4D8               	btfsc	status,2,c
 42269   0050AA  D004               	goto	u20430
 42270                           
 42271                           ; BSR set to: 1
 42272   0050AC  0E06               	movlw	6
 42273   0050AE  19C5               	xorwf	configIO@type& (0+255),w,b
 42274   0050B0  A4D8               	btfss	status,2,c
 42275   0050B2  D01E               	goto	l20007
 42276   0050B4                     u20430:
 42277                           
 42278                           ; BSR set to: 1
 42279                           ;../main.c: 614:                 TRISC |= (1 << configs[i].no);
 42280   0050B4  51C6               	movf	configIO@i& (0+255),w,b
 42281   0050B6  0D04               	mullw	4
 42282   0050B8  0E02               	movlw	2
 42283   0050BA  26F3               	addwf	243,f,c
 42284   0050BC  0E00               	movlw	0
 42285   0050BE  22F4               	addwfc	244,f,c
 42286   0050C0  0E29               	movlw	low _configs
 42287   0050C2  24F3               	addwf	243,w,c
 42288   0050C4  6EF6               	movwf	tblptrl,c
 42289   0050C6  0EEE               	movlw	high _configs
 42290   0050C8  20F4               	addwfc	244,w,c
 42291   0050CA  6EF7               	movwf	tblptrh,c
 42292   0050CC                     	if	1	;There are 3 active tblptr bytes
 42293   0050CC  6AF8               	clrf	tblptru,c
 42294   0050CE  0E00               	movlw	low (__mediumconst shr (0+16))
 42295   0050D0  22F8               	addwfc	tblptru,f,c
 42296   0050D2                     	endif
 42297   0050D2  0008               	tblrd		*
 42298   0050D4  CFF5 F1BF          	movff	tablat,??_configIO
 42299   0050D8  0E01               	movlw	1
 42300   0050DA  6FC0               	movwf	(??_configIO+1)& (0+255),b
 42301   0050DC  2BBF               	incf	??_configIO& (0+255),f,b
 42302   0050DE  D002               	goto	u20444
 42303   0050E0                     u20445:
 42304   0050E0  90D8               	bcf	status,0,c
 42305   0050E2  37C0               	rlcf	(??_configIO+1)& (0+255),f,b
 42306   0050E4                     u20444:
 42307   0050E4  2FBF               	decfsz	??_configIO& (0+255),f,b
 42308   0050E6  D7FC               	goto	u20445
 42309   0050E8  0101               	movlb	1	; () banked
 42310   0050EA  51C0               	movf	(??_configIO+1)& (0+255),w,b
 42311   0050EC  1294               	iorwf	148,f,c	;volatile
 42312                           
 42313                           ;../main.c: 615:             } else {
 42314   0050EE  0012               	return	
 42315   0050F0                     l20007:
 42316                           
 42317                           ; BSR set to: 1
 42318                           ;../main.c: 616:                 TRISC &= ~(1 << configs[i].no);
 42319   0050F0  51C6               	movf	configIO@i& (0+255),w,b
 42320   0050F2  0D04               	mullw	4
 42321   0050F4  0E02               	movlw	2
 42322   0050F6  26F3               	addwf	243,f,c
 42323   0050F8  0E00               	movlw	0
 42324   0050FA  22F4               	addwfc	244,f,c
 42325   0050FC  0E29               	movlw	low _configs
 42326   0050FE  24F3               	addwf	243,w,c
 42327   005100  6EF6               	movwf	tblptrl,c
 42328   005102  0EEE               	movlw	high _configs
 42329   005104  20F4               	addwfc	244,w,c
 42330   005106  6EF7               	movwf	tblptrh,c
 42331   005108                     	if	1	;There are 3 active tblptr bytes
 42332   005108  6AF8               	clrf	tblptru,c
 42333   00510A  0E00               	movlw	low (__mediumconst shr (0+16))
 42334   00510C  22F8               	addwfc	tblptru,f,c
 42335   00510E                     	endif
 42336   00510E  0008               	tblrd		*
 42337   005110  CFF5 F1BF          	movff	tablat,??_configIO
 42338   005114  0E01               	movlw	1
 42339   005116  6FC0               	movwf	(??_configIO+1)& (0+255),b
 42340   005118  2BBF               	incf	??_configIO& (0+255),f,b
 42341   00511A  D002               	goto	u20454
 42342   00511C                     u20455:
 42343   00511C  90D8               	bcf	status,0,c
 42344   00511E  37C0               	rlcf	(??_configIO+1)& (0+255),f,b
 42345   005120                     u20454:
 42346   005120  2FBF               	decfsz	??_configIO& (0+255),f,b
 42347   005122  D7FC               	goto	u20455
 42348   005124  0101               	movlb	1	; () banked
 42349   005126  51C0               	movf	(??_configIO+1)& (0+255),w,b
 42350   005128  0AFF               	xorlw	255
 42351   00512A  1694               	andwf	148,f,c	;volatile
 42352   00512C  0012               	return	
 42353   00512E                     l20011:
 42354   00512E  0101               	movlb	1	; () banked
 42355   005130  51C6               	movf	configIO@i& (0+255),w,b
 42356   005132  0D04               	mullw	4
 42357   005134  0E01               	movlw	1
 42358   005136  26F3               	addwf	243,f,c
 42359   005138  0E00               	movlw	0
 42360   00513A  22F4               	addwfc	244,f,c
 42361   00513C  0E29               	movlw	low _configs
 42362   00513E  24F3               	addwf	243,w,c
 42363   005140  6EF6               	movwf	tblptrl,c
 42364   005142  0EEE               	movlw	high _configs
 42365   005144  20F4               	addwfc	244,w,c
 42366   005146  6EF7               	movwf	tblptrh,c
 42367   005148                     	if	1	;There are 3 active tblptr bytes
 42368   005148  6AF8               	clrf	tblptru,c
 42369   00514A  0E00               	movlw	low (__mediumconst shr (0+16))
 42370   00514C  22F8               	addwfc	tblptru,f,c
 42371   00514E                     	endif
 42372   00514E  0008               	tblrd		*
 42373   005150  50F5               	movf	tablat,w,c
 42374                           
 42375                           ; Switch size 1, requested type "simple"
 42376                           ; Number of cases is 3, Range of values is 65 to 67
 42377                           ; switch strategies available:
 42378                           ; Name         Instructions Cycles
 42379                           ; simple_byte           10     6 (average)
 42380                           ;	Chosen strategy is simple_byte
 42381   005152  0A41               	xorlw	65	; case 65
 42382   005154  B4D8               	btfsc	status,2,c
 42383   005156  D713               	goto	l19979
 42384   005158  0A03               	xorlw	3	; case 66
 42385   00515A  B4D8               	btfsc	status,2,c
 42386   00515C  D758               	goto	l19989
 42387   00515E  0A01               	xorlw	1	; case 67
 42388   005160  A4D8               	btfss	status,2,c
 42389   005162  0012               	return	
 42390   005164  D79C               	goto	l19999
 42391   005166                     __end_of_configIO:
 42392                           	callstack 0
 42393                           
 42394 ;; *************** function _writeNVM *****************
 42395 ;; Defined at:
 42396 ;;		line 533 in file "../../VLCBlib_PIC/nvm.c"
 42397 ;; Parameters:    Size  Location     Type
 42398 ;;  type            1    wreg     enum E12738
 42399 ;;  index           3   68[BANK0 ] unsigned um
 42400 ;;  value           1   71[BANK0 ] unsigned char 
 42401 ;; Auto vars:     Size  Location     Type
 42402 ;;  type            1    0[BANK1 ] enum E12738
 42403 ;; Return value:  Size  Location     Type
 42404 ;;                  1    wreg      unsigned char 
 42405 ;; Registers used:
 42406 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 42407 ;; Tracked objects:
 42408 ;;		On entry : 0/0
 42409 ;;		On exit  : 0/0
 42410 ;;		Unchanged: 0/0
 42411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42412 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42413 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42414 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42415 ;;      Totals:         0       6       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42416 ;;Total ram usage:        7 bytes
 42417 ;; Hardware stack levels used: 1
 42418 ;; Hardware stack levels required when called: 17
 42419 ;; This function calls:
 42420 ;;		_EEPROM_Write
 42421 ;;		_FLASH_Write
 42422 ;; This function is called by:
 42423 ;;		_configIO
 42424 ;;		_startDigitalOutput
 42425 ;;		_inputScan
 42426 ;;		_pollServos
 42427 ;;		_bootProcessMessage
 42428 ;;		_mnsFactoryReset
 42429 ;;		_mnsProcessMessage
 42430 ;;		_mnsPoll
 42431 ;;		_nvFactoryReset
 42432 ;;		_saveNV
 42433 ;;		_setNV
 42434 ;;		_factoryReset
 42435 ;;		_canFactoryReset
 42436 ;;		_setNewCanId
 42437 ;;		_clearAllEvents
 42438 ;;		_removeTableEntry
 42439 ;;		_addEvent
 42440 ;;		_writeEv
 42441 ;; This function uses a non-reentrant model
 42442 ;;
 42443                           
 42444                           	psect	text181
 42445   00BB82                     __ptext181:
 42446                           	callstack 0
 42447   00BB82                     _writeNVM:
 42448                           	callstack 11
 42449                           
 42450                           ; BSR set to: 1
 42451                           ;incstack = 0
 42452                           ;writeNVM@type stored from wreg
 42453   00BB82  0101               	movlb	1	; () banked
 42454   00BB84  6FBE               	movwf	writeNVM@type& (0+255),b
 42455                           
 42456                           ;../../VLCBlib_PIC/nvm.c: 534:     switch(type) {
 42457   00BB86  D012               	goto	l19225
 42458   00BB88                     l19215:
 42459                           
 42460                           ; BSR set to: 0
 42461                           ;../../VLCBlib_PIC/nvm.c: 536:             return EEPROM_Write((eeprom_address_t)index, 
      +                          value);;	Return value of _writeNVM is never used
 42462   00BB88  C0A4  F08F         	movff	writeNVM@index,EEPROM_Write@index
 42463   00BB8C  C0A5  F090         	movff	writeNVM@index+1,EEPROM_Write@index+1
 42464   00BB90  C0A7  F091         	movff	writeNVM@value,EEPROM_Write@value
 42465   00BB94  ECA1  F059         	call	_EEPROM_Write	;wreg free
 42466   00BB98  0012               	return	
 42467   00BB9A                     l19219:
 42468                           
 42469                           ; BSR set to: 0
 42470                           ;../../VLCBlib_PIC/nvm.c: 538:             return FLASH_Write((flash_address_t)index, va
      +                          lue);;	Return value of _writeNVM is never used
 42471   00BB9A  C0A4  F090         	movff	writeNVM@index,FLASH_Write@index
 42472   00BB9E  C0A5  F091         	movff	writeNVM@index+1,FLASH_Write@index+1
 42473   00BBA2  C0A7  F092         	movff	writeNVM@value,FLASH_Write@value
 42474   00BBA6  ECE8  F048         	call	_FLASH_Write	;wreg free
 42475   00BBAA  0012               	return	
 42476   00BBAC                     l19225:
 42477   00BBAC  0101               	movlb	1	; () banked
 42478   00BBAE  51BE               	movf	writeNVM@type& (0+255),w,b
 42479   00BBB0  0100               	movlb	0	; () banked
 42480   00BBB2  6FA8               	movwf	??_writeNVM& (0+255),b
 42481   00BBB4  6BA9               	clrf	(??_writeNVM+1)& (0+255),b
 42482                           
 42483                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 42484                           ; Switch size 1, requested type "simple"
 42485                           ; Number of cases is 1, Range of values is 0 to 0
 42486                           ; switch strategies available:
 42487                           ; Name         Instructions Cycles
 42488                           ; simple_byte            4     3 (average)
 42489                           ;	Chosen strategy is simple_byte
 42490   00BBB6  51A9               	movf	(??_writeNVM+1)& (0+255),w,b
 42491   00BBB8  0A00               	xorlw	0	; case 0
 42492   00BBBA  A4D8               	btfss	status,2,c
 42493   00BBBC  0012               	return	
 42494                           
 42495                           ; BSR set to: 0
 42496                           ; Switch size 1, requested type "simple"
 42497                           ; Number of cases is 2, Range of values is 0 to 1
 42498                           ; switch strategies available:
 42499                           ; Name         Instructions Cycles
 42500                           ; simple_byte            7     4 (average)
 42501                           ;	Chosen strategy is simple_byte
 42502   00BBBE  51A8               	movf	??_writeNVM& (0+255),w,b
 42503   00BBC0  0A00               	xorlw	0	; case 0
 42504   00BBC2  B4D8               	btfsc	status,2,c
 42505   00BBC4  D7E1               	goto	l19215
 42506   00BBC6  0A01               	xorlw	1	; case 1
 42507   00BBC8  A4D8               	btfss	status,2,c
 42508   00BBCA  0012               	return	
 42509   00BBCC  D7E6               	goto	l19219
 42510   00BBCE                     __end_of_writeNVM:
 42511                           	callstack 0
 42512                           
 42513 ;; *************** function _FLASH_Write *****************
 42514 ;; Defined at:
 42515 ;;		line 487 in file "../../VLCBlib_PIC/nvm.c"
 42516 ;; Parameters:    Size  Location     Type
 42517 ;;  index           2   48[BANK0 ] unsigned short 
 42518 ;;  value           1   50[BANK0 ] unsigned char 
 42519 ;; Auto vars:     Size  Location     Type
 42520 ;;  oldValue        1    0        unsigned char 
 42521 ;; Return value:  Size  Location     Type
 42522 ;;                  1    wreg      unsigned char 
 42523 ;; Registers used:
 42524 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 42525 ;; Tracked objects:
 42526 ;;		On entry : 0/0
 42527 ;;		On exit  : 0/0
 42528 ;;		Unchanged: 0/0
 42529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42530 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42532 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42533 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42534 ;;Total ram usage:        7 bytes
 42535 ;; Hardware stack levels used: 1
 42536 ;; Hardware stack levels required when called: 16
 42537 ;; This function calls:
 42538 ;;		_eraseFlashBlock
 42539 ;;		_flushFlashBlock
 42540 ;;		_loadFlashBlock
 42541 ;; This function is called by:
 42542 ;;		_writeNVM
 42543 ;; This function uses a non-reentrant model
 42544 ;;
 42545                           
 42546                           	psect	text182
 42547   0091D0                     __ptext182:
 42548                           	callstack 0
 42549   0091D0                     _FLASH_Write:
 42550                           	callstack 11
 42551                           
 42552                           ;../../VLCBlib_PIC/nvm.c: 488:     uint8_t oldValue;;../../VLCBlib_PIC/nvm.c: 503:     i
      +                          f ((index&(~((flash_address_t)64 -1))) != flashBlock) {
 42553                           
 42554                           ;incstack = 0
 42555   0091D0  0EC0               	movlw	192
 42556   0091D2  0100               	movlb	0	; () banked
 42557   0091D4  1590               	andwf	FLASH_Write@index& (0+255),w,b
 42558   0091D6  6F93               	movwf	??_FLASH_Write& (0+255),b
 42559   0091D8  0EFF               	movlw	255
 42560   0091DA  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 42561   0091DC  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 42562   0091DE  51D1               	movf	_flashBlock& (0+255),w,b
 42563   0091E0  1993               	xorwf	??_FLASH_Write& (0+255),w,b
 42564   0091E2  E104               	bnz	u19220
 42565   0091E4  51D2               	movf	(_flashBlock+1)& (0+255),w,b
 42566   0091E6  1994               	xorwf	(??_FLASH_Write+1)& (0+255),w,b
 42567   0091E8  B4D8               	btfsc	status,2,c
 42568   0091EA  D015               	goto	l19173
 42569   0091EC                     u19220:
 42570                           
 42571                           ; BSR set to: 0
 42572                           ;../../VLCBlib_PIC/nvm.c: 504:         if (flashBlock != 0) {
 42573   0091EC  51D1               	movf	_flashBlock& (0+255),w,b
 42574   0091EE  11D2               	iorwf	(_flashBlock+1)& (0+255),w,b
 42575   0091F0  B4D8               	btfsc	status,2,c
 42576   0091F2  D008               	goto	l19169
 42577                           
 42578                           ; BSR set to: 0
 42579                           ;../../VLCBlib_PIC/nvm.c: 506:             if (flashFlags.eraseNeeded) {
 42580   0091F4  A3BA               	btfss	_flashFlags& (0+255),1,b
 42581   0091F6  D004               	goto	l19167
 42582                           
 42583                           ; BSR set to: 0
 42584                           ;../../VLCBlib_PIC/nvm.c: 507:                 eraseFlashBlock();
 42585   0091F8  ECE7  F05D         	call	_eraseFlashBlock	;wreg free
 42586                           
 42587                           ;../../VLCBlib_PIC/nvm.c: 508:                 flashFlags.eraseNeeded = 0;
 42588   0091FC  0100               	movlb	0	; () banked
 42589   0091FE  93BA               	bcf	_flashFlags& (0+255),1,b
 42590   009200                     l19167:
 42591                           
 42592                           ; BSR set to: 0
 42593                           ;../../VLCBlib_PIC/nvm.c: 511:             flushFlashBlock();
 42594   009200  ECBE  F054         	call	_flushFlashBlock	;wreg free
 42595   009204                     l19169:
 42596                           
 42597                           ;../../VLCBlib_PIC/nvm.c: 515:         flashBlock = (index&(~((flash_address_t)64 -1)));
 42598   009204  0EC0               	movlw	192
 42599   009206  0100               	movlb	0	; () banked
 42600   009208  1590               	andwf	FLASH_Write@index& (0+255),w,b
 42601   00920A  6FD1               	movwf	_flashBlock& (0+255),b
 42602   00920C  0EFF               	movlw	255
 42603   00920E  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 42604   009210  6FD2               	movwf	(_flashBlock+1)& (0+255),b
 42605                           
 42606                           ; BSR set to: 0
 42607                           ;../../VLCBlib_PIC/nvm.c: 516:         loadFlashBlock();
 42608   009212  ECA2  F05E         	call	_loadFlashBlock	;wreg free
 42609   009216                     l19173:
 42610                           
 42611                           ;../../VLCBlib_PIC/nvm.c: 518:     flashFlags.eraseNeeded |= (value & ~flashBuffer[(inde
      +                          x&(64 -1))])?1:0;
 42612   009216  0E3F               	movlw	63
 42613   009218  0100               	movlb	0	; () banked
 42614   00921A  1590               	andwf	FLASH_Write@index& (0+255),w,b
 42615   00921C  6F93               	movwf	??_FLASH_Write& (0+255),b
 42616   00921E  0E00               	movlw	0
 42617   009220  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 42618   009222  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 42619   009224  0E48               	movlw	low _flashBuffer
 42620   009226  2593               	addwf	??_FLASH_Write& (0+255),w,b
 42621   009228  6ED9               	movwf	fsr2l,c
 42622   00922A  0E03               	movlw	high _flashBuffer
 42623   00922C  2194               	addwfc	(??_FLASH_Write+1)& (0+255),w,b
 42624   00922E  6EDA               	movwf	fsr2h,c
 42625   009230  50DF               	movf	indf2,w,c
 42626   009232  0AFF               	xorlw	255
 42627   009234  1592               	andwf	FLASH_Write@value& (0+255),w,b
 42628   009236  0900               	iorlw	0
 42629   009238  B4D8               	btfsc	status,2,c
 42630   00923A  D003               	goto	u19250
 42631   00923C  6B95               	clrf	(??_FLASH_Write+2)& (0+255),b
 42632   00923E  2B95               	incf	(??_FLASH_Write+2)& (0+255),f,b
 42633   009240  D002               	goto	u19268
 42634   009242                     u19250:
 42635   009242  0100               	movlb	0	; () banked
 42636   009244  6B95               	clrf	(??_FLASH_Write+2)& (0+255),b
 42637   009246                     u19268:
 42638   009246  31BA               	rrcf	_flashFlags& (0+255),w,b
 42639   009248  0B01               	andlw	1
 42640   00924A  6F96               	movwf	(??_FLASH_Write+3)& (0+255),b
 42641   00924C  5195               	movf	(??_FLASH_Write+2)& (0+255),w,b
 42642   00924E  1396               	iorwf	(??_FLASH_Write+3)& (0+255),f,b
 42643   009250  3796               	rlcf	(??_FLASH_Write+3)& (0+255),f,b
 42644   009252  51BA               	movf	_flashFlags& (0+255),w,b
 42645   009254  1996               	xorwf	(??_FLASH_Write+3)& (0+255),w,b
 42646   009256  0BFD               	andlw	-3
 42647   009258  1996               	xorwf	(??_FLASH_Write+3)& (0+255),w,b
 42648   00925A  6FBA               	movwf	_flashFlags& (0+255),b
 42649                           
 42650                           ; BSR set to: 0
 42651                           ;../../VLCBlib_PIC/nvm.c: 519:     if (flashBuffer[(index&(64 -1))] != value) {
 42652   00925C  0E3F               	movlw	63
 42653   00925E  1590               	andwf	FLASH_Write@index& (0+255),w,b
 42654   009260  6F93               	movwf	??_FLASH_Write& (0+255),b
 42655   009262  0E00               	movlw	0
 42656   009264  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 42657   009266  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 42658   009268  0E48               	movlw	low _flashBuffer
 42659   00926A  2593               	addwf	??_FLASH_Write& (0+255),w,b
 42660   00926C  6ED9               	movwf	fsr2l,c
 42661   00926E  0E03               	movlw	high _flashBuffer
 42662   009270  2194               	addwfc	(??_FLASH_Write+1)& (0+255),w,b
 42663   009272  6EDA               	movwf	fsr2h,c
 42664   009274  5192               	movf	FLASH_Write@value& (0+255),w,b
 42665   009276  18DE               	xorwf	postinc2,w,c
 42666   009278  B4D8               	btfsc	status,2,c
 42667   00927A  D00F               	goto	l19181
 42668                           
 42669                           ; BSR set to: 0
 42670                           ;../../VLCBlib_PIC/nvm.c: 520:         flashFlags.writeNeeded = 1;
 42671   00927C  81BA               	bsf	_flashFlags& (0+255),0,b
 42672                           
 42673                           ; BSR set to: 0
 42674                           ;../../VLCBlib_PIC/nvm.c: 521:         flashBuffer[(index&(64 -1))] = value;
 42675   00927E  0E3F               	movlw	63
 42676   009280  1590               	andwf	FLASH_Write@index& (0+255),w,b
 42677   009282  6F93               	movwf	??_FLASH_Write& (0+255),b
 42678   009284  0E00               	movlw	0
 42679   009286  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 42680   009288  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 42681   00928A  0E48               	movlw	low _flashBuffer
 42682   00928C  2593               	addwf	??_FLASH_Write& (0+255),w,b
 42683   00928E  6ED9               	movwf	fsr2l,c
 42684   009290  0E03               	movlw	high _flashBuffer
 42685   009292  2194               	addwfc	(??_FLASH_Write+1)& (0+255),w,b
 42686   009294  6EDA               	movwf	fsr2h,c
 42687   009296  C092  FFDF         	movff	FLASH_Write@value,indf2
 42688   00929A                     l19181:
 42689                           
 42690                           ; BSR set to: 0
 42691                           ;../../VLCBlib_PIC/nvm.c: 523:     return GRSP_OK;
 42692   00929A  0E00               	movlw	0
 42693                           
 42694                           ; BSR set to: 0
 42695   00929C  0012               	return		;funcret
 42696   00929E                     __end_of_FLASH_Write:
 42697                           	callstack 0
 42698                           
 42699 ;; *************** function _loadFlashBlock *****************
 42700 ;; Defined at:
 42701 ;;		line 449 in file "../../VLCBlib_PIC/nvm.c"
 42702 ;; Parameters:    Size  Location     Type
 42703 ;;		None
 42704 ;; Auto vars:     Size  Location     Type
 42705 ;;  i               1   45[BANK0 ] unsigned char 
 42706 ;; Return value:  Size  Location     Type
 42707 ;;                  1    wreg      void 
 42708 ;; Registers used:
 42709 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 42710 ;; Tracked objects:
 42711 ;;		On entry : 0/0
 42712 ;;		On exit  : 0/0
 42713 ;;		Unchanged: 0/0
 42714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42716 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42718 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42719 ;;Total ram usage:        1 bytes
 42720 ;; Hardware stack levels used: 1
 42721 ;; Hardware stack levels required when called: 12
 42722 ;; This function calls:
 42723 ;;		Nothing
 42724 ;; This function is called by:
 42725 ;;		_FLASH_Write
 42726 ;; This function uses a non-reentrant model
 42727 ;;
 42728                           
 42729                           	psect	text183
 42730   00BD44                     __ptext183:
 42731                           	callstack 0
 42732   00BD44                     _loadFlashBlock:
 42733                           	callstack 14
 42734                           
 42735                           ;../../VLCBlib_PIC/nvm.c: 451:     EECON1=0X80;
 42736                           
 42737                           ; BSR set to: 0
 42738                           ;incstack = 0
 42739   00BD44  0E80               	movlw	128
 42740   00BD46  6E7F               	movwf	127,c	;volsfr
 42741                           
 42742                           ;../../VLCBlib_PIC/nvm.c: 452:     TBLPTR = flashBlock;
 42743   00BD48  C0D1  FFF6         	movff	_flashBlock,tblptrl	;volatile
 42744   00BD4C  C0D2  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 42745   00BD50  6AF8               	clrf	248,c	;volatile
 42746                           
 42747                           ;../../VLCBlib_PIC/nvm.c: 453:     TBLPTRU = 0;
 42748   00BD52  0E00               	movlw	0
 42749   00BD54  6EF8               	movwf	248,c	;volatile
 42750                           
 42751                           ;../../VLCBlib_PIC/nvm.c: 454:     for (uint8_t i=0; i<64; i++) {
 42752   00BD56  0E00               	movlw	0
 42753   00BD58  0100               	movlb	0	; () banked
 42754   00BD5A  6F8D               	movwf	loadFlashBlock@i& (0+255),b
 42755   00BD5C                     l2232:
 42756                           
 42757                           ; BSR set to: 0
 42758   00BD5C  0009               	tblrd		*+	;# 
 42759                           
 42760                           ;../../VLCBlib_PIC/nvm.c: 456:         __nop();
 42761   00BD5E  0000               	nop	
 42762                           
 42763                           ;../../VLCBlib_PIC/nvm.c: 457:         flashBuffer[i] = TABLAT;
 42764   00BD60  0E48               	movlw	low _flashBuffer
 42765   00BD62  0100               	movlb	0	; () banked
 42766   00BD64  258D               	addwf	loadFlashBlock@i& (0+255),w,b
 42767   00BD66  6ED9               	movwf	fsr2l,c
 42768   00BD68  6ADA               	clrf	fsr2h,c
 42769   00BD6A  0E03               	movlw	high _flashBuffer
 42770   00BD6C  22DA               	addwfc	fsr2h,f,c
 42771   00BD6E  CFF5 FFDF          	movff	tablat,indf2	;volatile
 42772                           
 42773                           ; BSR set to: 0
 42774                           ;../../VLCBlib_PIC/nvm.c: 458:     }
 42775   00BD72  2B8D               	incf	loadFlashBlock@i& (0+255),f,b
 42776                           
 42777                           ; BSR set to: 0
 42778   00BD74  0E3F               	movlw	63
 42779   00BD76  658D               	cpfsgt	loadFlashBlock@i& (0+255),b
 42780   00BD78  D7F1               	goto	l2232
 42781                           
 42782                           ; BSR set to: 0
 42783                           ;../../VLCBlib_PIC/nvm.c: 459:     TBLPTR = flashBlock;
 42784   00BD7A  C0D1  FFF6         	movff	_flashBlock,tblptrl	;volatile
 42785   00BD7E  C0D2  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 42786   00BD82  6AF8               	clrf	248,c	;volatile
 42787                           
 42788                           ; BSR set to: 0
 42789                           ;../../VLCBlib_PIC/nvm.c: 460:     TBLPTRU = 0;
 42790   00BD84  0E00               	movlw	0
 42791   00BD86  6EF8               	movwf	248,c	;volatile
 42792                           
 42793                           ; BSR set to: 0
 42794                           ;../../VLCBlib_PIC/nvm.c: 476:     flashFlags.asByte = 0;
 42795   00BD88  0E00               	movlw	0
 42796   00BD8A  6FBA               	movwf	_flashFlags& (0+255),b
 42797                           
 42798                           ; BSR set to: 0
 42799   00BD8C  0012               	return		;funcret
 42800   00BD8E                     __end_of_loadFlashBlock:
 42801                           	callstack 0
 42802                           
 42803 ;; *************** function _flushFlashBlock *****************
 42804 ;; Defined at:
 42805 ;;		line 375 in file "../../VLCBlib_PIC/nvm.c"
 42806 ;; Parameters:    Size  Location     Type
 42807 ;;		None
 42808 ;; Auto vars:     Size  Location     Type
 42809 ;;  i               1   47[BANK0 ] unsigned char 
 42810 ;;  interruptEna    1   46[BANK0 ] unsigned char 
 42811 ;; Return value:  Size  Location     Type
 42812 ;;                  1    wreg      void 
 42813 ;; Registers used:
 42814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 42815 ;; Tracked objects:
 42816 ;;		On entry : 0/0
 42817 ;;		On exit  : 0/0
 42818 ;;		Unchanged: 0/0
 42819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42821 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42823 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42824 ;;Total ram usage:        2 bytes
 42825 ;; Hardware stack levels used: 1
 42826 ;; Hardware stack levels required when called: 15
 42827 ;; This function calls:
 42828 ;;		_APP_isSuitableTimeToWriteFlash
 42829 ;;		_eraseFlashBlock
 42830 ;; This function is called by:
 42831 ;;		_APP_factoryReset
 42832 ;;		_deleteActionRange
 42833 ;;		_poll
 42834 ;;		_FLASH_Write
 42835 ;;		_clearAllEvents
 42836 ;;		_removeTableEntry
 42837 ;;		_addEvent
 42838 ;;		_deleteHappeningRange
 42839 ;; This function uses a non-reentrant model
 42840 ;;
 42841                           
 42842                           	psect	text184
 42843   00A97C                     __ptext184:
 42844                           	callstack 0
 42845   00A97C                     _flushFlashBlock:
 42846                           	callstack 11
 42847                           
 42848                           ;../../VLCBlib_PIC/nvm.c: 376:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 37
      +                          8:     TBLPTR = flashBlock;
 42849                           
 42850                           ; BSR set to: 0
 42851                           ;incstack = 0
 42852   00A97C  C0D1  FFF6         	movff	_flashBlock,tblptrl	;volatile
 42853   00A980  C0D2  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 42854   00A984  6AF8               	clrf	248,c	;volatile
 42855                           
 42856                           ;../../VLCBlib_PIC/nvm.c: 379:     TBLPTRU = 0;
 42857   00A986  0E00               	movlw	0
 42858   00A988  6EF8               	movwf	248,c	;volatile
 42859                           
 42860                           ;../../VLCBlib_PIC/nvm.c: 384:     if (! flashFlags.writeNeeded) return;
 42861   00A98A  0100               	movlb	0	; () banked
 42862   00A98C  A1BA               	btfss	_flashFlags& (0+255),0,b
 42863   00A98E  0012               	return	
 42864   00A990                     l18983:
 42865                           
 42866                           ;../../VLCBlib_PIC/nvm.c: 387:     while (APP_isSuitableTimeToWriteFlash() == BAD_TIME)
 42867   00A990  EC42  F064         	call	_APP_isSuitableTimeToWriteFlash	;wreg free
 42868   00A994  0900               	iorlw	0
 42869   00A996  B4D8               	btfsc	status,2,c
 42870   00A998  D7FB               	goto	l18983
 42871                           
 42872                           ;../../VLCBlib_PIC/nvm.c: 390:     if (flashFlags.eraseNeeded) {
 42873   00A99A  0100               	movlb	0	; () banked
 42874   00A99C  B3BA               	btfsc	_flashFlags& (0+255),1,b
 42875                           
 42876                           ; BSR set to: 0
 42877                           ;../../VLCBlib_PIC/nvm.c: 391:         eraseFlashBlock();
 42878   00A99E  ECE7  F05D         	call	_eraseFlashBlock	;wreg free
 42879                           
 42880                           ;../../VLCBlib_PIC/nvm.c: 394:     interruptEnabled = (INTCONbits.GIEH);
 42881   00A9A2  0E00               	movlw	0
 42882   00A9A4  BEF2               	btfsc	242,7,c	;volatile
 42883   00A9A6  0E01               	movlw	1
 42884   00A9A8  0100               	movlb	0	; () banked
 42885   00A9AA  6F8E               	movwf	flushFlashBlock@interruptEnabled& (0+255),b
 42886                           
 42887                           ; BSR set to: 0
 42888                           ;../../VLCBlib_PIC/nvm.c: 395:     {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
 42889   00A9AC  9EF2               	bcf	242,7,c	;volatile
 42890                           
 42891                           ; BSR set to: 0
 42892   00A9AE  9CF2               	bcf	242,6,c	;volatile
 42893                           
 42894                           ; BSR set to: 0
 42895                           ;../../VLCBlib_PIC/nvm.c: 397:     for (uint8_t i=0; i<64; i++) {
 42896   00A9B0  0E00               	movlw	0
 42897   00A9B2  6F8F               	movwf	flushFlashBlock@i& (0+255),b
 42898   00A9B4                     l18999:
 42899                           
 42900                           ; BSR set to: 0
 42901                           ;../../VLCBlib_PIC/nvm.c: 398:         TABLAT = flashBuffer[i];
 42902   00A9B4  0E48               	movlw	low _flashBuffer
 42903   00A9B6  258F               	addwf	flushFlashBlock@i& (0+255),w,b
 42904   00A9B8  6ED9               	movwf	fsr2l,c
 42905   00A9BA  6ADA               	clrf	fsr2h,c
 42906   00A9BC  0E03               	movlw	high _flashBuffer
 42907   00A9BE  22DA               	addwfc	fsr2h,f,c
 42908   00A9C0  50DF               	movf	indf2,w,c
 42909   00A9C2  6EF5               	movwf	245,c	;volatile
 42910   00A9C4  000D               	tblwt		*+	;# 
 42911                           
 42912                           ;../../VLCBlib_PIC/nvm.c: 400:     }
 42913   00A9C6  0100               	movlb	0	; () banked
 42914   00A9C8  2B8F               	incf	flushFlashBlock@i& (0+255),f,b
 42915                           
 42916                           ; BSR set to: 0
 42917   00A9CA  0E3F               	movlw	63
 42918   00A9CC  658F               	cpfsgt	flushFlashBlock@i& (0+255),b
 42919   00A9CE  D7F2               	goto	l18999
 42920                           
 42921                           ; BSR set to: 0
 42922                           ;../../VLCBlib_PIC/nvm.c: 407:     TBLPTR = flashBlock;
 42923   00A9D0  C0D1  FFF6         	movff	_flashBlock,tblptrl	;volatile
 42924   00A9D4  C0D2  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 42925   00A9D8  6AF8               	clrf	248,c	;volatile
 42926                           
 42927                           ; BSR set to: 0
 42928                           ;../../VLCBlib_PIC/nvm.c: 408:     TBLPTRU = 0;
 42929   00A9DA  0E00               	movlw	0
 42930   00A9DC  6EF8               	movwf	248,c	;volatile
 42931                           
 42932                           ; BSR set to: 0
 42933                           ;../../VLCBlib_PIC/nvm.c: 409:     EECON1bits.EEPGD = 1;
 42934   00A9DE  8E7F               	bsf	127,7,c	;volsfr
 42935                           
 42936                           ; BSR set to: 0
 42937                           ;../../VLCBlib_PIC/nvm.c: 410:     EECON1bits.CFGS = 0;
 42938   00A9E0  9C7F               	bcf	127,6,c	;volsfr
 42939                           
 42940                           ; BSR set to: 0
 42941                           ;../../VLCBlib_PIC/nvm.c: 411:     EECON1bits.FREE = 0;
 42942   00A9E2  987F               	bcf	127,4,c	;volsfr
 42943                           
 42944                           ; BSR set to: 0
 42945                           ;../../VLCBlib_PIC/nvm.c: 412:     EECON1bits.WREN = 1;
 42946   00A9E4  847F               	bsf	127,2,c	;volsfr
 42947                           
 42948                           ; BSR set to: 0
 42949                           ;../../VLCBlib_PIC/nvm.c: 414:     EECON2 = 0x55;
 42950   00A9E6  0E55               	movlw	85
 42951   00A9E8  6E7E               	movwf	126,c	;volsfr
 42952                           
 42953                           ; BSR set to: 0
 42954                           ;../../VLCBlib_PIC/nvm.c: 415:     EECON2 = 0xAA;
 42955   00A9EA  0EAA               	movlw	170
 42956   00A9EC  6E7E               	movwf	126,c	;volsfr
 42957                           
 42958                           ; BSR set to: 0
 42959                           ;../../VLCBlib_PIC/nvm.c: 416:     EECON1bits.WR = 1;
 42960   00A9EE  827F               	bsf	127,1,c	;volsfr
 42961                           
 42962                           ; BSR set to: 0
 42963                           ;../../VLCBlib_PIC/nvm.c: 417:     EECON1bits.WREN = 0;
 42964   00A9F0  947F               	bcf	127,2,c	;volsfr
 42965                           
 42966                           ; BSR set to: 0
 42967                           ;../../VLCBlib_PIC/nvm.c: 440:     if (interruptEnabled) {
 42968   00A9F2  518E               	movf	flushFlashBlock@interruptEnabled& (0+255),w,b
 42969   00A9F4  B4D8               	btfsc	status,2,c
 42970   00A9F6  D002               	goto	l19029
 42971                           
 42972                           ; BSR set to: 0
 42973                           ;../../VLCBlib_PIC/nvm.c: 441:         {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
 42974   00A9F8  8EF2               	bsf	242,7,c	;volatile
 42975   00A9FA  8CF2               	bsf	242,6,c	;volatile
 42976   00A9FC                     l19029:
 42977                           
 42978                           ; BSR set to: 0
 42979                           ;../../VLCBlib_PIC/nvm.c: 443:     flashFlags.asByte = 0;
 42980   00A9FC  0E00               	movlw	0
 42981   00A9FE  6FBA               	movwf	_flashFlags& (0+255),b
 42982                           
 42983                           ; BSR set to: 0
 42984   00AA00  0012               	return		;funcret
 42985   00AA02                     __end_of_flushFlashBlock:
 42986                           	callstack 0
 42987                           
 42988 ;; *************** function _eraseFlashBlock *****************
 42989 ;; Defined at:
 42990 ;;		line 324 in file "../../VLCBlib_PIC/nvm.c"
 42991 ;; Parameters:    Size  Location     Type
 42992 ;;		None
 42993 ;; Auto vars:     Size  Location     Type
 42994 ;;  interruptEna    1   45[BANK0 ] unsigned char 
 42995 ;; Return value:  Size  Location     Type
 42996 ;;                  1    wreg      void 
 42997 ;; Registers used:
 42998 ;;		wreg, status,2, cstack
 42999 ;; Tracked objects:
 43000 ;;		On entry : 0/0
 43001 ;;		On exit  : 0/0
 43002 ;;		Unchanged: 0/0
 43003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43005 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43007 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43008 ;;Total ram usage:        1 bytes
 43009 ;; Hardware stack levels used: 1
 43010 ;; Hardware stack levels required when called: 14
 43011 ;; This function calls:
 43012 ;;		_APP_isSuitableTimeToWriteFlash
 43013 ;; This function is called by:
 43014 ;;		_flushFlashBlock
 43015 ;;		_FLASH_Write
 43016 ;; This function uses a non-reentrant model
 43017 ;;
 43018                           
 43019                           	psect	text185
 43020   00BBCE                     __ptext185:
 43021                           	callstack 0
 43022   00BBCE                     _eraseFlashBlock:
 43023                           	callstack 11
 43024                           
 43025                           ;../../VLCBlib_PIC/nvm.c: 328:     while (! APP_isSuitableTimeToWriteFlash())
 43026                           
 43027                           ;../../VLCBlib_PIC/nvm.c: 325:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 32
      +                          8:     while (! APP_isSuitableTimeToWriteFlash())
 43028                           
 43029                           ; BSR set to: 0
 43030                           ;incstack = 0
 43031   00BBCE  EC42  F064         	call	_APP_isSuitableTimeToWriteFlash	;wreg free
 43032   00BBD2  0900               	iorlw	0
 43033   00BBD4  B4D8               	btfsc	status,2,c
 43034   00BBD6  D7FB               	goto	__ptext185
 43035                           
 43036                           ;../../VLCBlib_PIC/nvm.c: 331:     interruptEnabled = (INTCONbits.GIEH);
 43037   00BBD8  0E00               	movlw	0
 43038   00BBDA  BEF2               	btfsc	242,7,c	;volatile
 43039   00BBDC  0E01               	movlw	1
 43040   00BBDE  0100               	movlb	0	; () banked
 43041   00BBE0  6F8D               	movwf	eraseFlashBlock@interruptEnabled& (0+255),b
 43042                           
 43043                           ; BSR set to: 0
 43044                           ;../../VLCBlib_PIC/nvm.c: 333:     TBLPTR = flashBlock;
 43045   00BBE2  C0D1  FFF6         	movff	_flashBlock,tblptrl	;volatile
 43046   00BBE6  C0D2  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 43047   00BBEA  6AF8               	clrf	248,c	;volatile
 43048                           
 43049                           ;../../VLCBlib_PIC/nvm.c: 334:     TBLPTRU = 0;
 43050   00BBEC  0E00               	movlw	0
 43051   00BBEE  6EF8               	movwf	248,c	;volatile
 43052                           
 43053                           ; BSR set to: 0
 43054                           ;../../VLCBlib_PIC/nvm.c: 335:     EECON1bits.EEPGD = 1;
 43055   00BBF0  8E7F               	bsf	127,7,c	;volsfr
 43056                           
 43057                           ; BSR set to: 0
 43058                           ;../../VLCBlib_PIC/nvm.c: 336:     EECON1bits.CFGS = 0;
 43059   00BBF2  9C7F               	bcf	127,6,c	;volsfr
 43060                           
 43061                           ; BSR set to: 0
 43062                           ;../../VLCBlib_PIC/nvm.c: 337:     EECON1bits.WREN = 1;
 43063   00BBF4  847F               	bsf	127,2,c	;volsfr
 43064                           
 43065                           ; BSR set to: 0
 43066                           ;../../VLCBlib_PIC/nvm.c: 338:     EECON1bits.FREE = 1;
 43067   00BBF6  887F               	bsf	127,4,c	;volsfr
 43068                           
 43069                           ; BSR set to: 0
 43070                           ;../../VLCBlib_PIC/nvm.c: 339:     {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
 43071   00BBF8  9EF2               	bcf	242,7,c	;volatile
 43072                           
 43073                           ; BSR set to: 0
 43074   00BBFA  9CF2               	bcf	242,6,c	;volatile
 43075                           
 43076                           ;../../VLCBlib_PIC/nvm.c: 340:     EECON2 = 0x55;
 43077   00BBFC  0E55               	movlw	85
 43078   00BBFE  6E7E               	movwf	126,c	;volsfr
 43079                           
 43080                           ;../../VLCBlib_PIC/nvm.c: 341:     EECON2 = 0xaa;
 43081   00BC00  0EAA               	movlw	170
 43082   00BC02  6E7E               	movwf	126,c	;volsfr
 43083                           
 43084                           ; BSR set to: 0
 43085                           ;../../VLCBlib_PIC/nvm.c: 342:     EECON1bits.WR = 1;
 43086   00BC04  827F               	bsf	127,1,c	;volsfr
 43087   00BC06                     l2214:
 43088                           
 43089                           ;../../VLCBlib_PIC/nvm.c: 343:     while(EECON1bits.WR)
 43090   00BC06  B27F               	btfsc	127,1,c	;volsfr
 43091   00BC08  D7FE               	goto	l2214
 43092                           
 43093                           ;../../VLCBlib_PIC/nvm.c: 345:     EECON1bits.WREN = 0;
 43094   00BC0A  947F               	bcf	127,2,c	;volsfr
 43095                           
 43096                           ;../../VLCBlib_PIC/nvm.c: 365:     if (interruptEnabled) {
 43097   00BC0C  0100               	movlb	0	; () banked
 43098   00BC0E  518D               	movf	eraseFlashBlock@interruptEnabled& (0+255),w,b
 43099   00BC10  B4D8               	btfsc	status,2,c
 43100   00BC12  0012               	return	
 43101                           
 43102                           ; BSR set to: 0
 43103                           ;../../VLCBlib_PIC/nvm.c: 366:         {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
 43104   00BC14  8EF2               	bsf	242,7,c	;volatile
 43105   00BC16  8CF2               	bsf	242,6,c	;volatile
 43106                           
 43107                           ; BSR set to: 0
 43108   00BC18  0012               	return		;funcret
 43109   00BC1A                     __end_of_eraseFlashBlock:
 43110                           	callstack 0
 43111                           
 43112 ;; *************** function _APP_isSuitableTimeToWriteFlash *****************
 43113 ;; Defined at:
 43114 ;;		line 403 in file "../main.c"
 43115 ;; Parameters:    Size  Location     Type
 43116 ;;		None
 43117 ;; Auto vars:     Size  Location     Type
 43118 ;;		None
 43119 ;; Return value:  Size  Location     Type
 43120 ;;                  1    wreg      enum E12692
 43121 ;; Registers used:
 43122 ;;		wreg, status,2, cstack
 43123 ;; Tracked objects:
 43124 ;;		On entry : 0/0
 43125 ;;		On exit  : 0/0
 43126 ;;		Unchanged: 0/0
 43127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43132 ;;Total ram usage:        0 bytes
 43133 ;; Hardware stack levels used: 1
 43134 ;; Hardware stack levels required when called: 13
 43135 ;; This function calls:
 43136 ;;		_isNoServoPulses
 43137 ;; This function is called by:
 43138 ;;		_eraseFlashBlock
 43139 ;;		_flushFlashBlock
 43140 ;; This function uses a non-reentrant model
 43141 ;;
 43142                           
 43143                           	psect	text186
 43144   00C884                     __ptext186:
 43145                           	callstack 0
 43146   00C884                     _APP_isSuitableTimeToWriteFlash:
 43147                           	callstack 11
 43148                           
 43149                           ;../main.c: 405:     return isNoServoPulses() ? GOOD_TIME : BAD_TIME;
 43150                           
 43151                           ; BSR set to: 0
 43152                           ;incstack = 0
 43153   00C884  EC53  F064         	call	_isNoServoPulses	;wreg free
 43154   00C888  0900               	iorlw	0
 43155   00C88A  B4D8               	btfsc	status,2,c
 43156   00C88C  D002               	goto	u18950
 43157   00C88E  0E01               	movlw	1
 43158   00C890  0012               	return	
 43159   00C892                     u18950:
 43160   00C892  0E00               	movlw	0
 43161   00C894  0012               	return		;funcret
 43162   00C896                     __end_of_APP_isSuitableTimeToWriteFlash:
 43163                           	callstack 0
 43164                           
 43165 ;; *************** function _isNoServoPulses *****************
 43166 ;; Defined at:
 43167 ;;		line 713 in file "../servo.c"
 43168 ;; Parameters:    Size  Location     Type
 43169 ;;		None
 43170 ;; Auto vars:     Size  Location     Type
 43171 ;;		None
 43172 ;; Return value:  Size  Location     Type
 43173 ;;                  1    wreg      enum E12716
 43174 ;; Registers used:
 43175 ;;		wreg
 43176 ;; Tracked objects:
 43177 ;;		On entry : 0/0
 43178 ;;		On exit  : 0/0
 43179 ;;		Unchanged: 0/0
 43180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43185 ;;Total ram usage:        0 bytes
 43186 ;; Hardware stack levels used: 1
 43187 ;; Hardware stack levels required when called: 12
 43188 ;; This function calls:
 43189 ;;		Nothing
 43190 ;; This function is called by:
 43191 ;;		_APP_isSuitableTimeToWriteFlash
 43192 ;; This function uses a non-reentrant model
 43193 ;;
 43194                           
 43195                           	psect	text187
 43196   00C8A6                     __ptext187:
 43197                           	callstack 0
 43198   00C8A6                     _isNoServoPulses:
 43199                           	callstack 11
 43200                           
 43201                           ;../servo.c: 715:     if (T1CONbits.TMR1ON) return FALSE;
 43202                           
 43203                           ;incstack = 0
 43204   00C8A6  A0CD               	btfss	205,0,c	;volatile
 43205   00C8A8  D002               	goto	l1193
 43206   00C8AA                     u18930:
 43207   00C8AA  0E00               	movlw	0
 43208   00C8AC  0012               	return	
 43209   00C8AE                     l1193:
 43210                           
 43211                           ;../servo.c: 716:     if (T3CONbits.TMR3ON) return FALSE;
 43212   00C8AE  B0B1               	btfsc	177,0,c	;volatile
 43213   00C8B0  D7FC               	goto	u18930
 43214                           
 43215                           ;../servo.c: 718:     return TRUE;
 43216   00C8B2  0E01               	movlw	1
 43217   00C8B4  0012               	return		;funcret
 43218   00C8B6                     __end_of_isNoServoPulses:
 43219                           	callstack 0
 43220                           
 43221 ;; *************** function _EEPROM_Write *****************
 43222 ;; Defined at:
 43223 ;;		line 216 in file "../../VLCBlib_PIC/nvm.c"
 43224 ;; Parameters:    Size  Location     Type
 43225 ;;  index           2   47[BANK0 ] unsigned short 
 43226 ;;  value           1   49[BANK0 ] unsigned char 
 43227 ;; Auto vars:     Size  Location     Type
 43228 ;;  interruptEna    1   50[BANK0 ] unsigned char 
 43229 ;; Return value:  Size  Location     Type
 43230 ;;                  1    wreg      unsigned char 
 43231 ;; Registers used:
 43232 ;;		wreg, status,2, status,0, cstack
 43233 ;; Tracked objects:
 43234 ;;		On entry : 0/0
 43235 ;;		On exit  : 0/0
 43236 ;;		Unchanged: 0/0
 43237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43238 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43239 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43241 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43242 ;;Total ram usage:        4 bytes
 43243 ;; Hardware stack levels used: 1
 43244 ;; Hardware stack levels required when called: 13
 43245 ;; This function calls:
 43246 ;;		_EEPROM_Read
 43247 ;;		_updateModuleErrorStatus
 43248 ;; This function is called by:
 43249 ;;		_writeNVM
 43250 ;; This function uses a non-reentrant model
 43251 ;;
 43252                           
 43253                           	psect	text188
 43254   00B342                     __ptext188:
 43255                           	callstack 0
 43256   00B342                     _EEPROM_Write:
 43257                           	callstack 14
 43258                           
 43259                           ;../../VLCBlib_PIC/nvm.c: 217:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 21
      +                          8:     interruptEnabled = (INTCONbits.GIEH);
 43260                           
 43261                           ;incstack = 0
 43262   00B342  0E00               	movlw	0
 43263   00B344  BEF2               	btfsc	242,7,c	;volatile
 43264   00B346  0E01               	movlw	1
 43265   00B348  0100               	movlb	0	; () banked
 43266   00B34A  6F92               	movwf	EEPROM_Write@interruptEnabled& (0+255),b
 43267   00B34C                     l19119:
 43268                           
 43269                           ;../../VLCBlib_PIC/nvm.c: 221:         EEADRH = (index >> 8)&0xFF;
 43270   00B34C  0100               	movlb	0	; () banked
 43271   00B34E  5190               	movf	(EEPROM_Write@index+1)& (0+255),w,b
 43272   00B350  6E75               	movwf	117,c	;volatile
 43273                           
 43274                           ; BSR set to: 0
 43275                           ;../../VLCBlib_PIC/nvm.c: 222:         EEADR = index & 0xFF;
 43276   00B352  C08F  FF74         	movff	EEPROM_Write@index,3956	;volatile
 43277                           
 43278                           ; BSR set to: 0
 43279                           ;../../VLCBlib_PIC/nvm.c: 223:         EEDATA = value;
 43280   00B356  C091  FF73         	movff	EEPROM_Write@value,3955	;volatile
 43281                           
 43282                           ; BSR set to: 0
 43283                           ;../../VLCBlib_PIC/nvm.c: 224:         EECON1bits.EEPGD = 0;
 43284   00B35A  9E7F               	bcf	127,7,c	;volsfr
 43285                           
 43286                           ; BSR set to: 0
 43287                           ;../../VLCBlib_PIC/nvm.c: 225:         EECON1bits.CFGS = 0;
 43288   00B35C  9C7F               	bcf	127,6,c	;volsfr
 43289                           
 43290                           ; BSR set to: 0
 43291                           ;../../VLCBlib_PIC/nvm.c: 226:         EECON1bits.WREN = 1;
 43292   00B35E  847F               	bsf	127,2,c	;volsfr
 43293                           
 43294                           ; BSR set to: 0
 43295                           ;../../VLCBlib_PIC/nvm.c: 228:         {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
 43296   00B360  9EF2               	bcf	242,7,c	;volatile
 43297                           
 43298                           ; BSR set to: 0
 43299   00B362  9CF2               	bcf	242,6,c	;volatile
 43300                           
 43301                           ; BSR set to: 0
 43302                           ;../../VLCBlib_PIC/nvm.c: 229:         EECON2 = 0x55;
 43303   00B364  0E55               	movlw	85
 43304   00B366  6E7E               	movwf	126,c	;volsfr
 43305                           
 43306                           ; BSR set to: 0
 43307                           ;../../VLCBlib_PIC/nvm.c: 230:         EECON2 = 0xAA;
 43308   00B368  0EAA               	movlw	170
 43309   00B36A  6E7E               	movwf	126,c	;volsfr
 43310                           
 43311                           ; BSR set to: 0
 43312                           ;../../VLCBlib_PIC/nvm.c: 231:         EECON1bits.WR = 1;
 43313   00B36C  827F               	bsf	127,1,c	;volsfr
 43314   00B36E                     l2194:
 43315                           
 43316                           ;../../VLCBlib_PIC/nvm.c: 232:         while (EECON1bits.WR)
 43317   00B36E  B27F               	btfsc	127,1,c	;volsfr
 43318   00B370  D7FE               	goto	l2194
 43319   00B372                     u19180:
 43320                           
 43321                           ;../../VLCBlib_PIC/nvm.c: 234:         while (!EEIF)
 43322                           
 43323                           ;../../VLCBlib_PIC/nvm.c: 235:             ;
 43324   00B372  ACB7               	btfss	4023,6,c	;volatile
 43325   00B374  D7FE               	goto	u19180
 43326                           
 43327                           ;../../VLCBlib_PIC/nvm.c: 236:         EEIF = 0;
 43328   00B376  9CB7               	bcf	4023,6,c	;volatile
 43329                           
 43330                           ;../../VLCBlib_PIC/nvm.c: 237:         if (interruptEnabled) {
 43331   00B378  0100               	movlb	0	; () banked
 43332   00B37A  5192               	movf	EEPROM_Write@interruptEnabled& (0+255),w,b
 43333   00B37C  B4D8               	btfsc	status,2,c
 43334   00B37E  D002               	goto	l2200
 43335                           
 43336                           ; BSR set to: 0
 43337                           ;../../VLCBlib_PIC/nvm.c: 239:             {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
 43338   00B380  8EF2               	bsf	242,7,c	;volatile
 43339   00B382  8CF2               	bsf	242,6,c	;volatile
 43340   00B384                     l2200:
 43341                           
 43342                           ; BSR set to: 0
 43343                           ;../../VLCBlib_PIC/nvm.c: 241:         EECON1bits.WREN = 0;
 43344   00B384  947F               	bcf	127,2,c	;volsfr
 43345                           
 43346                           ; BSR set to: 0
 43347                           ;../../VLCBlib_PIC/nvm.c: 277:         if (EEPROM_Read(index) == value) {
 43348   00B386  C08F  F08D         	movff	EEPROM_Write@index,EEPROM_Read@index
 43349   00B38A  C090  F08E         	movff	EEPROM_Write@index+1,EEPROM_Read@index+1
 43350   00B38E  ECBF  F063         	call	_EEPROM_Read	;wreg free
 43351   00B392  0100               	movlb	0	; () banked
 43352   00B394  1991               	xorwf	EEPROM_Write@value& (0+255),w,b
 43353   00B396  B4D8               	btfsc	status,2,c
 43354   00B398  D006               	goto	l19153
 43355                           
 43356                           ; BSR set to: 0
 43357                           ;../../VLCBlib_PIC/nvm.c: 281:         mnsDiagnostics[0x04].asUint++;
 43358   00B39A  0101               	movlb	1	; () banked
 43359   00B39C  4B94               	infsnz	(_mnsDiagnostics+8)& (0+255),f,b
 43360   00B39E  2B95               	incf	(_mnsDiagnostics+9)& (0+255),f,b
 43361                           
 43362                           ; BSR set to: 1
 43363                           ;../../VLCBlib_PIC/nvm.c: 282:         updateModuleErrorStatus();
 43364   00B3A0  EC5B  F064         	call	_updateModuleErrorStatus	;wreg free
 43365                           
 43366                           ;../../VLCBlib_PIC/nvm.c: 284:     } while (1);
 43367   00B3A4  D7D3               	goto	l19119
 43368   00B3A6                     l19153:
 43369                           
 43370                           ; BSR set to: 0
 43371                           ;../../VLCBlib_PIC/nvm.c: 285:     return GRSP_OK;
 43372   00B3A6  0E00               	movlw	0
 43373                           
 43374                           ; BSR set to: 0
 43375   00B3A8  0012               	return		;funcret
 43376   00B3AA                     __end_of_EEPROM_Write:
 43377                           	callstack 0
 43378                           
 43379 ;; *************** function _updateModuleErrorStatus *****************
 43380 ;; Defined at:
 43381 ;;		line 617 in file "../../VLCBlib_PIC/mns.c"
 43382 ;; Parameters:    Size  Location     Type
 43383 ;;		None
 43384 ;; Auto vars:     Size  Location     Type
 43385 ;;		None
 43386 ;; Return value:  Size  Location     Type
 43387 ;;                  1    wreg      void 
 43388 ;; Registers used:
 43389 ;;		wreg, status,2, status,0
 43390 ;; Tracked objects:
 43391 ;;		On entry : 0/0
 43392 ;;		On exit  : 0/0
 43393 ;;		Unchanged: 0/0
 43394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43399 ;;Total ram usage:        0 bytes
 43400 ;; Hardware stack levels used: 1
 43401 ;; Hardware stack levels required when called: 12
 43402 ;; This function calls:
 43403 ;;		Nothing
 43404 ;; This function is called by:
 43405 ;;		_EEPROM_Write
 43406 ;;		_canSendMessage
 43407 ;;		_processEnumeration
 43408 ;; This function uses a non-reentrant model
 43409 ;;
 43410                           
 43411                           	psect	text189
 43412   00C8B6                     __ptext189:
 43413                           	callstack 0
 43414   00C8B6                     _updateModuleErrorStatus:
 43415                           	callstack 14
 43416                           
 43417                           ;../../VLCBlib_PIC/mns.c: 618:     if (mnsDiagnostics[0x01].asBytes.lo < 0xFF) {
 43418                           
 43419                           ; BSR set to: 0
 43420                           ;incstack = 0
 43421   00C8B6  0101               	movlb	1	; () banked
 43422   00C8B8  298E               	incf	(_mnsDiagnostics+2)& (0+255),w,b
 43423   00C8BA  B4D8               	btfsc	status,2,c
 43424   00C8BC  0012               	return	
 43425                           
 43426                           ; BSR set to: 1
 43427                           ;../../VLCBlib_PIC/mns.c: 619:         mnsDiagnostics[0x01].asBytes.lo++;
 43428   00C8BE  2B8E               	incf	(_mnsDiagnostics+2)& (0+255),f,b
 43429                           
 43430                           ; BSR set to: 1
 43431   00C8C0  0012               	return		;funcret
 43432   00C8C2                     __end_of_updateModuleErrorStatus:
 43433                           	callstack 0
 43434                           
 43435 ;; *************** function _setDigitalOutput *****************
 43436 ;; Defined at:
 43437 ;;		line 226 in file "../digitalOut.c"
 43438 ;; Parameters:    Size  Location     Type
 43439 ;;  io              1    wreg     unsigned char 
 43440 ;;  state           1   55[BANK0 ] unsigned char 
 43441 ;; Auto vars:     Size  Location     Type
 43442 ;;  io              1   57[BANK0 ] unsigned char 
 43443 ;;  pinState        1   56[BANK0 ] enum E12766
 43444 ;; Return value:  Size  Location     Type
 43445 ;;                  1    wreg      void 
 43446 ;; Registers used:
 43447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43448 ;; Tracked objects:
 43449 ;;		On entry : 0/0
 43450 ;;		On exit  : 0/0
 43451 ;;		Unchanged: 0/0
 43452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43453 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43454 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43456 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43457 ;;Total ram usage:        3 bytes
 43458 ;; Hardware stack levels used: 1
 43459 ;; Hardware stack levels required when called: 13
 43460 ;; This function calls:
 43461 ;;		_getNV
 43462 ;;		_setOutputPin
 43463 ;; This function is called by:
 43464 ;;		_configIO
 43465 ;;		_setOutputPosition
 43466 ;; This function uses a non-reentrant model
 43467 ;;
 43468                           
 43469                           	psect	text190
 43470   00A752                     __ptext190:
 43471                           	callstack 0
 43472   00A752                     _setDigitalOutput:
 43473                           	callstack 14
 43474                           
 43475                           ; BSR set to: 1
 43476                           ;incstack = 0
 43477                           ;setDigitalOutput@io stored from wreg
 43478   00A752  0100               	movlb	0	; () banked
 43479   00A754  6F99               	movwf	setDigitalOutput@io& (0+255),b
 43480                           
 43481                           ;../digitalOut.c: 227:     Boolean pinState;;../digitalOut.c: 228:     switch (state) {
 43482   00A756  D038               	goto	l19859
 43483   00A758                     l19843:
 43484                           
 43485                           ; BSR set to: 0
 43486                           ;../digitalOut.c: 230:             state = 2;
 43487   00A758  0E02               	movlw	2
 43488   00A75A  6F97               	movwf	setDigitalOutput@state& (0+255),b
 43489   00A75C                     l19845:
 43490                           
 43491                           ; BSR set to: 0
 43492                           ;../digitalOut.c: 234:             pinState = (state == 1);
 43493   00A75C  0597               	decf	setDigitalOutput@state& (0+255),w,b
 43494   00A75E  A4D8               	btfss	status,2,c
 43495   00A760  D002               	goto	u20130
 43496   00A762  0E01               	movlw	1
 43497   00A764  D001               	goto	u20140
 43498   00A766                     u20130:
 43499   00A766  0E00               	movlw	0
 43500   00A768                     u20140:
 43501   00A768  6F98               	movwf	setDigitalOutput@pinState& (0+255),b
 43502                           
 43503                           ; BSR set to: 0
 43504                           ;../digitalOut.c: 238:             if (getNV((16 + 7*(io) + 1)) & 0x20) {
 43505   00A76A  5199               	movf	setDigitalOutput@io& (0+255),w,b
 43506   00A76C  0D07               	mullw	7
 43507   00A76E  50F3               	movf	243,w,c
 43508   00A770  0F11               	addlw	17
 43509   00A772  ECD2  F05F         	call	_getNV
 43510   00A776  0100               	movlb	0	; () banked
 43511   00A778  AB8D               	btfss	?_getNV& (0+255),5,b
 43512   00A77A  D00B               	goto	l19851
 43513                           
 43514                           ; BSR set to: 0
 43515                           ;../digitalOut.c: 239:                 setOutputPin(io, ! pinState);
 43516   00A77C  5198               	movf	setDigitalOutput@pinState& (0+255),w,b
 43517   00A77E  A4D8               	btfss	status,2,c
 43518   00A780  D002               	goto	u20160
 43519   00A782  0E01               	movlw	1
 43520   00A784  D001               	goto	u20170
 43521   00A786                     u20160:
 43522   00A786  0E00               	movlw	0
 43523   00A788                     u20170:
 43524   00A788  6F91               	movwf	setOutputPin@state& (0+255),b
 43525   00A78A  5199               	movf	setDigitalOutput@io& (0+255),w,b
 43526   00A78C  ECBC  F037         	call	_setOutputPin
 43527                           
 43528                           ;../digitalOut.c: 240:             } else {
 43529   00A790  0012               	return	
 43530   00A792                     l19851:
 43531                           
 43532                           ; BSR set to: 0
 43533                           ;../digitalOut.c: 241:                 setOutputPin(io, pinState);
 43534   00A792  C098  F091         	movff	setDigitalOutput@pinState,setOutputPin@state
 43535   00A796  5199               	movf	setDigitalOutput@io& (0+255),w,b
 43536   00A798  ECBC  F037         	call	_setOutputPin
 43537   00A79C  0012               	return	
 43538   00A79E                     l19853:
 43539                           
 43540                           ; BSR set to: 0
 43541                           ;../digitalOut.c: 245:             flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3));
 43542   00A79E  5199               	movf	setDigitalOutput@io& (0+255),w,b
 43543   00A7A0  0D07               	mullw	7
 43544   00A7A2  50F3               	movf	243,w,c
 43545   00A7A4  0F13               	addlw	19
 43546   00A7A6  ECD2  F05F         	call	_getNV
 43547   00A7AA  0E20               	movlw	low _flashDelays
 43548   00A7AC  0100               	movlb	0	; () banked
 43549   00A7AE  2599               	addwf	setDigitalOutput@io& (0+255),w,b
 43550   00A7B0  6ED9               	movwf	fsr2l,c
 43551   00A7B2  6ADA               	clrf	fsr2h,c
 43552   00A7B4  0E01               	movlw	high _flashDelays
 43553   00A7B6  22DA               	addwfc	fsr2h,f,c
 43554   00A7B8  C08D  FFDF         	movff	?_getNV,indf2
 43555                           
 43556                           ; BSR set to: 0
 43557                           ;../digitalOut.c: 246:             setOutputPin(io, TRUE);
 43558   00A7BC  0E01               	movlw	1
 43559   00A7BE  6F91               	movwf	setOutputPin@state& (0+255),b
 43560   00A7C0  5199               	movf	setDigitalOutput@io& (0+255),w,b
 43561   00A7C2  ECBC  F037         	call	_setOutputPin
 43562                           
 43563                           ;../digitalOut.c: 247:             break;
 43564   00A7C6  0012               	return	
 43565   00A7C8                     l19859:
 43566   00A7C8  0100               	movlb	0	; () banked
 43567   00A7CA  5197               	movf	setDigitalOutput@state& (0+255),w,b
 43568                           
 43569                           ; Switch size 1, requested type "simple"
 43570                           ; Number of cases is 3, Range of values is 1 to 3
 43571                           ; switch strategies available:
 43572                           ; Name         Instructions Cycles
 43573                           ; simple_byte           10     6 (average)
 43574                           ;	Chosen strategy is simple_byte
 43575   00A7CC  0A01               	xorlw	1	; case 1
 43576   00A7CE  B4D8               	btfsc	status,2,c
 43577   00A7D0  D7C5               	goto	l19845
 43578   00A7D2  0A03               	xorlw	3	; case 2
 43579   00A7D4  B4D8               	btfsc	status,2,c
 43580   00A7D6  D7C2               	goto	l19845
 43581   00A7D8  0A01               	xorlw	1	; case 3
 43582   00A7DA  B4D8               	btfsc	status,2,c
 43583   00A7DC  D7E0               	goto	l19853
 43584   00A7DE  D7BC               	goto	l19843
 43585   00A7E0                     __end_of_setDigitalOutput:
 43586                           	callstack 0
 43587                           
 43588 ;; *************** function _setOutputPin *****************
 43589 ;; Defined at:
 43590 ;;		line 256 in file "../digitalOut.c"
 43591 ;; Parameters:    Size  Location     Type
 43592 ;;  io              1    wreg     unsigned char 
 43593 ;;  state           1   49[BANK0 ] enum E12766
 43594 ;; Auto vars:     Size  Location     Type
 43595 ;;  io              1   52[BANK0 ] unsigned char 
 43596 ;; Return value:  Size  Location     Type
 43597 ;;                  1    wreg      void 
 43598 ;; Registers used:
 43599 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 43600 ;; Tracked objects:
 43601 ;;		On entry : 0/0
 43602 ;;		On exit  : 0/0
 43603 ;;		Unchanged: 0/0
 43604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43605 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43606 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43607 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43608 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43609 ;;Total ram usage:        4 bytes
 43610 ;; Hardware stack levels used: 1
 43611 ;; Hardware stack levels required when called: 12
 43612 ;; This function calls:
 43613 ;;		Nothing
 43614 ;; This function is called by:
 43615 ;;		_startDigitalOutput
 43616 ;;		_processOutputs
 43617 ;;		_setDigitalOutput
 43618 ;;		_setOutputPosition
 43619 ;;		_setupTimer1
 43620 ;;		_setupTimer3
 43621 ;;		_pollServos
 43622 ;; This function uses a non-reentrant model
 43623 ;;
 43624                           
 43625                           	psect	text191
 43626   006F78                     __ptext191:
 43627                           	callstack 0
 43628   006F78                     _setOutputPin:
 43629                           	callstack 15
 43630                           
 43631                           ;incstack = 0
 43632                           ;setOutputPin@io stored from wreg
 43633   006F78  0100               	movlb	0	; () banked
 43634   006F7A  6F94               	movwf	setOutputPin@io& (0+255),b
 43635                           
 43636                           ;../digitalOut.c: 257:     switch (configs[io].port) {
 43637   006F7C  D0C0               	goto	l19707
 43638   006F7E                     l19687:
 43639                           
 43640                           ; BSR set to: 0
 43641                           ;../digitalOut.c: 259:             if (state) {
 43642   006F7E  5191               	movf	setOutputPin@state& (0+255),w,b
 43643   006F80  B4D8               	btfsc	status,2,c
 43644   006F82  D01E               	goto	l19691
 43645                           
 43646                           ; BSR set to: 0
 43647                           ;../digitalOut.c: 261:                LATA |= (1<<configs[io].no);
 43648   006F84  5194               	movf	setOutputPin@io& (0+255),w,b
 43649   006F86  0D04               	mullw	4
 43650   006F88  0E02               	movlw	2
 43651   006F8A  26F3               	addwf	243,f,c
 43652   006F8C  0E00               	movlw	0
 43653   006F8E  22F4               	addwfc	244,f,c
 43654   006F90  0E29               	movlw	low _configs
 43655   006F92  24F3               	addwf	243,w,c
 43656   006F94  6EF6               	movwf	tblptrl,c
 43657   006F96  0EEE               	movlw	high _configs
 43658   006F98  20F4               	addwfc	244,w,c
 43659   006F9A  6EF7               	movwf	tblptrh,c
 43660   006F9C                     	if	1	;There are 3 active tblptr bytes
 43661   006F9C  6AF8               	clrf	tblptru,c
 43662   006F9E  0E00               	movlw	low (__mediumconst shr (0+16))
 43663   006FA0  22F8               	addwfc	tblptru,f,c
 43664   006FA2                     	endif
 43665   006FA2  0008               	tblrd		*
 43666   006FA4  CFF5 F092          	movff	tablat,??_setOutputPin
 43667   006FA8  0E01               	movlw	1
 43668   006FAA  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 43669   006FAC  2B92               	incf	??_setOutputPin& (0+255),f,b
 43670   006FAE  D002               	goto	u19874
 43671   006FB0                     u19875:
 43672   006FB0  90D8               	bcf	status,0,c
 43673   006FB2  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 43674   006FB4                     u19874:
 43675   006FB4  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 43676   006FB6  D7FC               	goto	u19875
 43677   006FB8  0100               	movlb	0	; () banked
 43678   006FBA  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 43679   006FBC  1289               	iorwf	137,f,c	;volatile
 43680                           
 43681                           ;../digitalOut.c: 262:             } else {
 43682   006FBE  0012               	return	
 43683   006FC0                     l19691:
 43684                           
 43685                           ; BSR set to: 0
 43686                           ;../digitalOut.c: 264:                 LATA &= ~(1<<configs[io].no);
 43687   006FC0  5194               	movf	setOutputPin@io& (0+255),w,b
 43688   006FC2  0D04               	mullw	4
 43689   006FC4  0E02               	movlw	2
 43690   006FC6  26F3               	addwf	243,f,c
 43691   006FC8  0E00               	movlw	0
 43692   006FCA  22F4               	addwfc	244,f,c
 43693   006FCC  0E29               	movlw	low _configs
 43694   006FCE  24F3               	addwf	243,w,c
 43695   006FD0  6EF6               	movwf	tblptrl,c
 43696   006FD2  0EEE               	movlw	high _configs
 43697   006FD4  20F4               	addwfc	244,w,c
 43698   006FD6  6EF7               	movwf	tblptrh,c
 43699   006FD8                     	if	1	;There are 3 active tblptr bytes
 43700   006FD8  6AF8               	clrf	tblptru,c
 43701   006FDA  0E00               	movlw	low (__mediumconst shr (0+16))
 43702   006FDC  22F8               	addwfc	tblptru,f,c
 43703   006FDE                     	endif
 43704   006FDE  0008               	tblrd		*
 43705   006FE0  CFF5 F092          	movff	tablat,??_setOutputPin
 43706   006FE4  0E01               	movlw	1
 43707   006FE6  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 43708   006FE8  2B92               	incf	??_setOutputPin& (0+255),f,b
 43709   006FEA  D002               	goto	u19884
 43710   006FEC                     u19885:
 43711   006FEC  90D8               	bcf	status,0,c
 43712   006FEE  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 43713   006FF0                     u19884:
 43714   006FF0  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 43715   006FF2  D7FC               	goto	u19885
 43716   006FF4  0100               	movlb	0	; () banked
 43717   006FF6  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 43718   006FF8  0AFF               	xorlw	255
 43719   006FFA  1689               	andwf	137,f,c	;volatile
 43720   006FFC  0012               	return	
 43721   006FFE                     l19693:
 43722                           
 43723                           ; BSR set to: 0
 43724                           ;../digitalOut.c: 268:             if (state) {
 43725   006FFE  5191               	movf	setOutputPin@state& (0+255),w,b
 43726   007000  B4D8               	btfsc	status,2,c
 43727   007002  D01E               	goto	l19697
 43728                           
 43729                           ; BSR set to: 0
 43730                           ;../digitalOut.c: 270:                 LATB |= (1<<configs[io].no);
 43731   007004  5194               	movf	setOutputPin@io& (0+255),w,b
 43732   007006  0D04               	mullw	4
 43733   007008  0E02               	movlw	2
 43734   00700A  26F3               	addwf	243,f,c
 43735   00700C  0E00               	movlw	0
 43736   00700E  22F4               	addwfc	244,f,c
 43737   007010  0E29               	movlw	low _configs
 43738   007012  24F3               	addwf	243,w,c
 43739   007014  6EF6               	movwf	tblptrl,c
 43740   007016  0EEE               	movlw	high _configs
 43741   007018  20F4               	addwfc	244,w,c
 43742   00701A  6EF7               	movwf	tblptrh,c
 43743   00701C                     	if	1	;There are 3 active tblptr bytes
 43744   00701C  6AF8               	clrf	tblptru,c
 43745   00701E  0E00               	movlw	low (__mediumconst shr (0+16))
 43746   007020  22F8               	addwfc	tblptru,f,c
 43747   007022                     	endif
 43748   007022  0008               	tblrd		*
 43749   007024  CFF5 F092          	movff	tablat,??_setOutputPin
 43750   007028  0E01               	movlw	1
 43751   00702A  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 43752   00702C  2B92               	incf	??_setOutputPin& (0+255),f,b
 43753   00702E  D002               	goto	u19904
 43754   007030                     u19905:
 43755   007030  90D8               	bcf	status,0,c
 43756   007032  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 43757   007034                     u19904:
 43758   007034  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 43759   007036  D7FC               	goto	u19905
 43760   007038  0100               	movlb	0	; () banked
 43761   00703A  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 43762   00703C  128A               	iorwf	138,f,c	;volatile
 43763                           
 43764                           ;../digitalOut.c: 271:             } else {
 43765   00703E  0012               	return	
 43766   007040                     l19697:
 43767                           
 43768                           ; BSR set to: 0
 43769                           ;../digitalOut.c: 273:                 LATB &= ~(1<<configs[io].no);
 43770   007040  5194               	movf	setOutputPin@io& (0+255),w,b
 43771   007042  0D04               	mullw	4
 43772   007044  0E02               	movlw	2
 43773   007046  26F3               	addwf	243,f,c
 43774   007048  0E00               	movlw	0
 43775   00704A  22F4               	addwfc	244,f,c
 43776   00704C  0E29               	movlw	low _configs
 43777   00704E  24F3               	addwf	243,w,c
 43778   007050  6EF6               	movwf	tblptrl,c
 43779   007052  0EEE               	movlw	high _configs
 43780   007054  20F4               	addwfc	244,w,c
 43781   007056  6EF7               	movwf	tblptrh,c
 43782   007058                     	if	1	;There are 3 active tblptr bytes
 43783   007058  6AF8               	clrf	tblptru,c
 43784   00705A  0E00               	movlw	low (__mediumconst shr (0+16))
 43785   00705C  22F8               	addwfc	tblptru,f,c
 43786   00705E                     	endif
 43787   00705E  0008               	tblrd		*
 43788   007060  CFF5 F092          	movff	tablat,??_setOutputPin
 43789   007064  0E01               	movlw	1
 43790   007066  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 43791   007068  2B92               	incf	??_setOutputPin& (0+255),f,b
 43792   00706A  D002               	goto	u19914
 43793   00706C                     u19915:
 43794   00706C  90D8               	bcf	status,0,c
 43795   00706E  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 43796   007070                     u19914:
 43797   007070  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 43798   007072  D7FC               	goto	u19915
 43799   007074  0100               	movlb	0	; () banked
 43800   007076  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 43801   007078  0AFF               	xorlw	255
 43802   00707A  168A               	andwf	138,f,c	;volatile
 43803   00707C  0012               	return	
 43804   00707E                     l19699:
 43805                           
 43806                           ; BSR set to: 0
 43807                           ;../digitalOut.c: 277:             if (state) {
 43808   00707E  5191               	movf	setOutputPin@state& (0+255),w,b
 43809   007080  B4D8               	btfsc	status,2,c
 43810   007082  D01E               	goto	l19703
 43811                           
 43812                           ; BSR set to: 0
 43813                           ;../digitalOut.c: 279:                 LATC |= (1<<configs[io].no);
 43814   007084  5194               	movf	setOutputPin@io& (0+255),w,b
 43815   007086  0D04               	mullw	4
 43816   007088  0E02               	movlw	2
 43817   00708A  26F3               	addwf	243,f,c
 43818   00708C  0E00               	movlw	0
 43819   00708E  22F4               	addwfc	244,f,c
 43820   007090  0E29               	movlw	low _configs
 43821   007092  24F3               	addwf	243,w,c
 43822   007094  6EF6               	movwf	tblptrl,c
 43823   007096  0EEE               	movlw	high _configs
 43824   007098  20F4               	addwfc	244,w,c
 43825   00709A  6EF7               	movwf	tblptrh,c
 43826   00709C                     	if	1	;There are 3 active tblptr bytes
 43827   00709C  6AF8               	clrf	tblptru,c
 43828   00709E  0E00               	movlw	low (__mediumconst shr (0+16))
 43829   0070A0  22F8               	addwfc	tblptru,f,c
 43830   0070A2                     	endif
 43831   0070A2  0008               	tblrd		*
 43832   0070A4  CFF5 F092          	movff	tablat,??_setOutputPin
 43833   0070A8  0E01               	movlw	1
 43834   0070AA  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 43835   0070AC  2B92               	incf	??_setOutputPin& (0+255),f,b
 43836   0070AE  D002               	goto	u19934
 43837   0070B0                     u19935:
 43838   0070B0  90D8               	bcf	status,0,c
 43839   0070B2  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 43840   0070B4                     u19934:
 43841   0070B4  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 43842   0070B6  D7FC               	goto	u19935
 43843   0070B8  0100               	movlb	0	; () banked
 43844   0070BA  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 43845   0070BC  128B               	iorwf	139,f,c	;volatile
 43846                           
 43847                           ;../digitalOut.c: 280:             } else {
 43848   0070BE  0012               	return	
 43849   0070C0                     l19703:
 43850                           
 43851                           ; BSR set to: 0
 43852                           ;../digitalOut.c: 282:                 LATC &= ~(1<<configs[io].no);
 43853   0070C0  5194               	movf	setOutputPin@io& (0+255),w,b
 43854   0070C2  0D04               	mullw	4
 43855   0070C4  0E02               	movlw	2
 43856   0070C6  26F3               	addwf	243,f,c
 43857   0070C8  0E00               	movlw	0
 43858   0070CA  22F4               	addwfc	244,f,c
 43859   0070CC  0E29               	movlw	low _configs
 43860   0070CE  24F3               	addwf	243,w,c
 43861   0070D0  6EF6               	movwf	tblptrl,c
 43862   0070D2  0EEE               	movlw	high _configs
 43863   0070D4  20F4               	addwfc	244,w,c
 43864   0070D6  6EF7               	movwf	tblptrh,c
 43865   0070D8                     	if	1	;There are 3 active tblptr bytes
 43866   0070D8  6AF8               	clrf	tblptru,c
 43867   0070DA  0E00               	movlw	low (__mediumconst shr (0+16))
 43868   0070DC  22F8               	addwfc	tblptru,f,c
 43869   0070DE                     	endif
 43870   0070DE  0008               	tblrd		*
 43871   0070E0  CFF5 F092          	movff	tablat,??_setOutputPin
 43872   0070E4  0E01               	movlw	1
 43873   0070E6  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 43874   0070E8  2B92               	incf	??_setOutputPin& (0+255),f,b
 43875   0070EA  D002               	goto	u19944
 43876   0070EC                     u19945:
 43877   0070EC  90D8               	bcf	status,0,c
 43878   0070EE  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 43879   0070F0                     u19944:
 43880   0070F0  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 43881   0070F2  D7FC               	goto	u19945
 43882   0070F4  0100               	movlb	0	; () banked
 43883   0070F6  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 43884   0070F8  0AFF               	xorlw	255
 43885   0070FA  168B               	andwf	139,f,c	;volatile
 43886   0070FC  0012               	return	
 43887   0070FE                     l19707:
 43888   0070FE  0100               	movlb	0	; () banked
 43889   007100  5194               	movf	setOutputPin@io& (0+255),w,b
 43890   007102  0D04               	mullw	4
 43891   007104  0E01               	movlw	1
 43892   007106  26F3               	addwf	243,f,c
 43893   007108  0E00               	movlw	0
 43894   00710A  22F4               	addwfc	244,f,c
 43895   00710C  0E29               	movlw	low _configs
 43896   00710E  24F3               	addwf	243,w,c
 43897   007110  6EF6               	movwf	tblptrl,c
 43898   007112  0EEE               	movlw	high _configs
 43899   007114  20F4               	addwfc	244,w,c
 43900   007116  6EF7               	movwf	tblptrh,c
 43901   007118                     	if	1	;There are 3 active tblptr bytes
 43902   007118  6AF8               	clrf	tblptru,c
 43903   00711A  0E00               	movlw	low (__mediumconst shr (0+16))
 43904   00711C  22F8               	addwfc	tblptru,f,c
 43905   00711E                     	endif
 43906   00711E  0008               	tblrd		*
 43907   007120  50F5               	movf	tablat,w,c
 43908                           
 43909                           ; Switch size 1, requested type "simple"
 43910                           ; Number of cases is 3, Range of values is 65 to 67
 43911                           ; switch strategies available:
 43912                           ; Name         Instructions Cycles
 43913                           ; simple_byte           10     6 (average)
 43914                           ;	Chosen strategy is simple_byte
 43915   007122  0A41               	xorlw	65	; case 65
 43916   007124  B4D8               	btfsc	status,2,c
 43917   007126  D72B               	goto	l19687
 43918   007128  0A03               	xorlw	3	; case 66
 43919   00712A  B4D8               	btfsc	status,2,c
 43920   00712C  D768               	goto	l19693
 43921   00712E  0A01               	xorlw	1	; case 67
 43922   007130  A4D8               	btfss	status,2,c
 43923   007132  0012               	return	
 43924   007134  D7A4               	goto	l19699
 43925   007136                     __end_of_setOutputPin:
 43926                           	callstack 0
 43927                           
 43928 ;; *************** function _getNV *****************
 43929 ;; Defined at:
 43930 ;;		line 182 in file "../../VLCBlib_PIC/nv.c"
 43931 ;; Parameters:    Size  Location     Type
 43932 ;;  index           1    wreg     unsigned char 
 43933 ;; Auto vars:     Size  Location     Type
 43934 ;;  index           1   48[BANK0 ] unsigned char 
 43935 ;; Return value:  Size  Location     Type
 43936 ;;                  2   45[BANK0 ] short 
 43937 ;; Registers used:
 43938 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 43939 ;; Tracked objects:
 43940 ;;		On entry : 0/0
 43941 ;;		On exit  : 0/0
 43942 ;;		Unchanged: 0/0
 43943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43944 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43945 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43946 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43947 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43948 ;;Total ram usage:        4 bytes
 43949 ;; Hardware stack levels used: 1
 43950 ;; Hardware stack levels required when called: 12
 43951 ;; This function calls:
 43952 ;;		Nothing
 43953 ;; This function is called by:
 43954 ;;		_setup
 43955 ;;		_loop
 43956 ;;		_APP_GetEventState
 43957 ;;		_configIO
 43958 ;;		_startDigitalOutput
 43959 ;;		_processOutputs
 43960 ;;		_setDigitalOutput
 43961 ;;		_initInputScan
 43962 ;;		_inputScan
 43963 ;;		_readInput
 43964 ;;		_consumer2QProcessMessage
 43965 ;;		_processActions
 43966 ;;		_sodTRCallback
 43967 ;;		_APP_nvValueChanged
 43968 ;;		_setOutputPosition
 43969 ;;		_initServos
 43970 ;;		_startServos
 43971 ;;		_setupTimer1
 43972 ;;		_setupTimer3
 43973 ;;		_pollServos
 43974 ;;		_startServoOutput
 43975 ;;		_startMultiOutput
 43976 ;;		_setServoState
 43977 ;;		_setBounceState
 43978 ;;		_setMultiState
 43979 ;;		_bounceDown
 43980 ;;		_bounceUp
 43981 ;;		_nvProcessMessage
 43982 ;;		_nvTRnvrdCallback
 43983 ;; This function uses a non-reentrant model
 43984 ;;
 43985                           
 43986                           	psect	text192
 43987   00BFA4                     __ptext192:
 43988                           	callstack 0
 43989   00BFA4                     _getNV:
 43990                           	callstack 14
 43991                           
 43992                           ; BSR set to: 0
 43993                           ;incstack = 0
 43994                           ;getNV@index stored from wreg
 43995   00BFA4  0100               	movlb	0	; () banked
 43996   00BFA6  6F90               	movwf	getNV@index& (0+255),b
 43997                           
 43998                           ;../../VLCBlib_PIC/nv.c: 183:     if (index == 0) return (15+7*16);
 43999   00BFA8  0100               	movlb	0	; () banked
 44000   00BFAA  5190               	movf	getNV@index& (0+255),w,b
 44001   00BFAC  A4D8               	btfss	status,2,c
 44002   00BFAE  D005               	goto	l19675
 44003                           
 44004                           ; BSR set to: 0
 44005   00BFB0  0E00               	movlw	0
 44006   00BFB2  6F8E               	movwf	(?_getNV+1)& (0+255),b
 44007   00BFB4  0E7F               	movlw	127
 44008   00BFB6  6F8D               	movwf	?_getNV& (0+255),b
 44009   00BFB8  0012               	return	
 44010   00BFBA                     l19675:
 44011                           
 44012                           ; BSR set to: 0
 44013                           ;../../VLCBlib_PIC/nv.c: 184:     if (index > (15+7*16)) return -CMDERR_INV_NV_IDX;
 44014   00BFBA  0E7F               	movlw	127
 44015   00BFBC  6590               	cpfsgt	getNV@index& (0+255),b
 44016   00BFBE  D005               	goto	l19681
 44017                           
 44018                           ; BSR set to: 0
 44019   00BFC0  0EFF               	movlw	255
 44020   00BFC2  6F8E               	movwf	(?_getNV+1)& (0+255),b
 44021   00BFC4  0EF6               	movlw	246
 44022   00BFC6  6F8D               	movwf	?_getNV& (0+255),b
 44023   00BFC8  0012               	return	
 44024   00BFCA                     l19681:
 44025                           
 44026                           ; BSR set to: 0
 44027                           ;../../VLCBlib_PIC/nv.c: 186:     return nvCache[index];
 44028   00BFCA  0E00               	movlw	low _nvCache
 44029   00BFCC  2590               	addwf	getNV@index& (0+255),w,b
 44030   00BFCE  6ED9               	movwf	fsr2l,c
 44031   00BFD0  6ADA               	clrf	fsr2h,c
 44032   00BFD2  0E04               	movlw	high _nvCache
 44033   00BFD4  22DA               	addwfc	fsr2h,f,c
 44034   00BFD6  50DF               	movf	indf2,w,c
 44035   00BFD8  6F8F               	movwf	??_getNV& (0+255),b
 44036   00BFDA  518F               	movf	??_getNV& (0+255),w,b
 44037   00BFDC  6F8D               	movwf	?_getNV& (0+255),b
 44038   00BFDE  6B8E               	clrf	(?_getNV+1)& (0+255),b
 44039                           
 44040                           ; BSR set to: 0
 44041   00BFE0  0012               	return		;funcret
 44042   00BFE2                     __end_of_getNV:
 44043                           	callstack 0
 44044                           
 44045 ;; *************** function _readNVM *****************
 44046 ;; Defined at:
 44047 ;;		line 550 in file "../../VLCBlib_PIC/nvm.c"
 44048 ;; Parameters:    Size  Location     Type
 44049 ;;  type            1    wreg     enum E12738
 44050 ;;  index           3   49[BANK0 ] unsigned um
 44051 ;; Auto vars:     Size  Location     Type
 44052 ;;  type            1   54[BANK0 ] enum E12738
 44053 ;; Return value:  Size  Location     Type
 44054 ;;                  2   49[BANK0 ] short 
 44055 ;; Registers used:
 44056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 44057 ;; Tracked objects:
 44058 ;;		On entry : 0/0
 44059 ;;		On exit  : 0/0
 44060 ;;		Unchanged: 0/0
 44061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44062 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44063 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44064 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44065 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44066 ;;Total ram usage:        6 bytes
 44067 ;; Hardware stack levels used: 1
 44068 ;; Hardware stack levels required when called: 13
 44069 ;; This function calls:
 44070 ;;		_EEPROM_Read
 44071 ;;		_FLASH_Read
 44072 ;; This function is called by:
 44073 ;;		_APP_GetEventState
 44074 ;;		_configIO
 44075 ;;		_initInputScan
 44076 ;;		_initServos
 44077 ;;		_bootPowerUp
 44078 ;;		_mnsPowerUp
 44079 ;;		_loadNvCache
 44080 ;;		_main
 44081 ;;		_canPowerUp
 44082 ;;		_doNnevn
 44083 ;;		_removeTableEntry
 44084 ;;		_addEvent
 44085 ;;		_writeEv
 44086 ;;		_getEv
 44087 ;;		_numEv
 44088 ;;		_getEVs
 44089 ;;		_getNN
 44090 ;;		_getEN
 44091 ;;		_validStart
 44092 ;;		_deleteHappeningRange
 44093 ;; This function uses a non-reentrant model
 44094 ;;
 44095                           
 44096                           	psect	text193
 44097   00B662                     __ptext193:
 44098                           	callstack 0
 44099   00B662                     _readNVM:
 44100                           	callstack 15
 44101                           
 44102                           ; BSR set to: 0
 44103                           ;incstack = 0
 44104                           ;readNVM@type stored from wreg
 44105   00B662  0100               	movlb	0	; () banked
 44106   00B664  6F96               	movwf	readNVM@type& (0+255),b
 44107                           
 44108                           ;../../VLCBlib_PIC/nvm.c: 551:     switch(type) {
 44109   00B666  D01D               	goto	l18943
 44110   00B668                     l18929:
 44111                           
 44112                           ; BSR set to: 0
 44113                           ;../../VLCBlib_PIC/nvm.c: 553:             return EEPROM_Read((uint16_t)index);
 44114   00B668  C091  F08D         	movff	readNVM@index,EEPROM_Read@index
 44115   00B66C  C092  F08E         	movff	readNVM@index+1,EEPROM_Read@index+1
 44116   00B670  ECBF  F063         	call	_EEPROM_Read	;wreg free
 44117   00B674  0100               	movlb	0	; () banked
 44118   00B676  6F94               	movwf	??_readNVM& (0+255),b
 44119   00B678  5194               	movf	??_readNVM& (0+255),w,b
 44120   00B67A  6F91               	movwf	?_readNVM& (0+255),b
 44121   00B67C  6B92               	clrf	(?_readNVM+1)& (0+255),b
 44122   00B67E  0012               	return	
 44123   00B680                     l18933:
 44124                           
 44125                           ; BSR set to: 0
 44126                           ;../../VLCBlib_PIC/nvm.c: 556:             return FLASH_Read((uint16_t)index);
 44127   00B680  C091  F08D         	movff	readNVM@index,FLASH_Read@address
 44128   00B684  C092  F08E         	movff	readNVM@index+1,FLASH_Read@address+1
 44129   00B688  EC0D  F05E         	call	_FLASH_Read	;wreg free
 44130   00B68C  0100               	movlb	0	; () banked
 44131   00B68E  6F94               	movwf	??_readNVM& (0+255),b
 44132   00B690  5194               	movf	??_readNVM& (0+255),w,b
 44133   00B692  6F91               	movwf	?_readNVM& (0+255),b
 44134   00B694  6B92               	clrf	(?_readNVM+1)& (0+255),b
 44135   00B696  0012               	return	
 44136   00B698                     l18937:
 44137                           
 44138                           ; BSR set to: 0
 44139                           ;../../VLCBlib_PIC/nvm.c: 562:             return -GRSP_UNKNOWN_NVM_TYPE;
 44140   00B698  0EFF               	movlw	255
 44141   00B69A  6F92               	movwf	(?_readNVM+1)& (0+255),b
 44142   00B69C  0E02               	movlw	2
 44143   00B69E  6F91               	movwf	?_readNVM& (0+255),b
 44144   00B6A0  0012               	return	
 44145   00B6A2                     l18943:
 44146   00B6A2  0100               	movlb	0	; () banked
 44147   00B6A4  5196               	movf	readNVM@type& (0+255),w,b
 44148   00B6A6  6F94               	movwf	??_readNVM& (0+255),b
 44149   00B6A8  6B95               	clrf	(??_readNVM+1)& (0+255),b
 44150                           
 44151                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 44152                           ; Switch size 1, requested type "simple"
 44153                           ; Number of cases is 1, Range of values is 0 to 0
 44154                           ; switch strategies available:
 44155                           ; Name         Instructions Cycles
 44156                           ; simple_byte            4     3 (average)
 44157                           ;	Chosen strategy is simple_byte
 44158   00B6AA  5195               	movf	(??_readNVM+1)& (0+255),w,b
 44159   00B6AC  0A00               	xorlw	0	; case 0
 44160   00B6AE  A4D8               	btfss	status,2,c
 44161   00B6B0  D7F3               	goto	l18937
 44162                           
 44163                           ; BSR set to: 0
 44164                           ; Switch size 1, requested type "simple"
 44165                           ; Number of cases is 2, Range of values is 0 to 1
 44166                           ; switch strategies available:
 44167                           ; Name         Instructions Cycles
 44168                           ; simple_byte            7     4 (average)
 44169                           ;	Chosen strategy is simple_byte
 44170   00B6B2  5194               	movf	??_readNVM& (0+255),w,b
 44171   00B6B4  0A00               	xorlw	0	; case 0
 44172   00B6B6  B4D8               	btfsc	status,2,c
 44173   00B6B8  D7D7               	goto	l18929
 44174   00B6BA  0A01               	xorlw	1	; case 1
 44175   00B6BC  B4D8               	btfsc	status,2,c
 44176   00B6BE  D7E0               	goto	l18933
 44177   00B6C0  D7EB               	goto	l18937
 44178   00B6C2                     __end_of_readNVM:
 44179                           	callstack 0
 44180                           
 44181 ;; *************** function _FLASH_Read *****************
 44182 ;; Defined at:
 44183 ;;		line 295 in file "../../VLCBlib_PIC/nvm.c"
 44184 ;; Parameters:    Size  Location     Type
 44185 ;;  address         2   45[BANK0 ] unsigned short 
 44186 ;; Auto vars:     Size  Location     Type
 44187 ;;		None
 44188 ;; Return value:  Size  Location     Type
 44189 ;;                  1    wreg      unsigned char 
 44190 ;; Registers used:
 44191 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 44192 ;; Tracked objects:
 44193 ;;		On entry : 0/0
 44194 ;;		On exit  : 0/0
 44195 ;;		Unchanged: 0/0
 44196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44197 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44199 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44200 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44201 ;;Total ram usage:        4 bytes
 44202 ;; Hardware stack levels used: 1
 44203 ;; Hardware stack levels required when called: 12
 44204 ;; This function calls:
 44205 ;;		Nothing
 44206 ;; This function is called by:
 44207 ;;		_readNVM
 44208 ;; This function uses a non-reentrant model
 44209 ;;
 44210                           
 44211                           	psect	text194
 44212   00BC1A                     __ptext194:
 44213                           	callstack 0
 44214   00BC1A                     _FLASH_Read:
 44215                           	callstack 15
 44216                           
 44217                           ;../../VLCBlib_PIC/nvm.c: 297:     if ((address&(~((flash_address_t)64 -1))) == flashBlo
      +                          ck) {
 44218                           
 44219                           ; BSR set to: 0
 44220                           ;incstack = 0
 44221   00BC1A  0EC0               	movlw	192
 44222   00BC1C  0100               	movlb	0	; () banked
 44223   00BC1E  158D               	andwf	FLASH_Read@address& (0+255),w,b
 44224   00BC20  6F8F               	movwf	??_FLASH_Read& (0+255),b
 44225   00BC22  0EFF               	movlw	255
 44226   00BC24  158E               	andwf	(FLASH_Read@address+1)& (0+255),w,b
 44227   00BC26  6F90               	movwf	(??_FLASH_Read+1)& (0+255),b
 44228   00BC28  51D1               	movf	_flashBlock& (0+255),w,b
 44229   00BC2A  198F               	xorwf	??_FLASH_Read& (0+255),w,b
 44230   00BC2C  E112               	bnz	l18919
 44231   00BC2E  51D2               	movf	(_flashBlock+1)& (0+255),w,b
 44232   00BC30  1990               	xorwf	(??_FLASH_Read+1)& (0+255),w,b
 44233   00BC32  A4D8               	btfss	status,2,c
 44234   00BC34  D00E               	goto	l18919
 44235                           
 44236                           ; BSR set to: 0
 44237                           ;../../VLCBlib_PIC/nvm.c: 299:         return flashBuffer[(address&(64 -1))];
 44238   00BC36  0E3F               	movlw	63
 44239   00BC38  158D               	andwf	FLASH_Read@address& (0+255),w,b
 44240   00BC3A  6F8F               	movwf	??_FLASH_Read& (0+255),b
 44241   00BC3C  0E00               	movlw	0
 44242   00BC3E  158E               	andwf	(FLASH_Read@address+1)& (0+255),w,b
 44243   00BC40  6F90               	movwf	(??_FLASH_Read+1)& (0+255),b
 44244   00BC42  0E48               	movlw	low _flashBuffer
 44245   00BC44  258F               	addwf	??_FLASH_Read& (0+255),w,b
 44246   00BC46  6ED9               	movwf	fsr2l,c
 44247   00BC48  0E03               	movlw	high _flashBuffer
 44248   00BC4A  2190               	addwfc	(??_FLASH_Read+1)& (0+255),w,b
 44249   00BC4C  6EDA               	movwf	fsr2h,c
 44250   00BC4E  50DF               	movf	indf2,w,c
 44251   00BC50  0012               	return	
 44252   00BC52                     l18919:
 44253                           
 44254                           ; BSR set to: 0
 44255                           ;../../VLCBlib_PIC/nvm.c: 303:         TBLPTR = address;
 44256   00BC52  C08D  FFF6         	movff	FLASH_Read@address,tblptrl	;volatile
 44257   00BC56  C08E  FFF7         	movff	FLASH_Read@address+1,tblptrh	;volatile
 44258   00BC5A  6AF8               	clrf	248,c	;volatile
 44259                           
 44260                           ; BSR set to: 0
 44261                           ;../../VLCBlib_PIC/nvm.c: 304:         TBLPTRU = 0;
 44262   00BC5C  0E00               	movlw	0
 44263   00BC5E  6EF8               	movwf	248,c	;volatile
 44264   00BC60  0008               	tblrd		*	;# 
 44265                           
 44266                           ;../../VLCBlib_PIC/nvm.c: 315:         return TABLAT;
 44267   00BC62  50F5               	movf	245,w,c	;volatile
 44268   00BC64  0012               	return		;funcret
 44269   00BC66                     __end_of_FLASH_Read:
 44270                           	callstack 0
 44271                           
 44272 ;; *************** function _EEPROM_Read *****************
 44273 ;; Defined at:
 44274 ;;		line 171 in file "../../VLCBlib_PIC/nvm.c"
 44275 ;; Parameters:    Size  Location     Type
 44276 ;;  index           2   45[BANK0 ] unsigned short 
 44277 ;; Auto vars:     Size  Location     Type
 44278 ;;		None
 44279 ;; Return value:  Size  Location     Type
 44280 ;;                  1    wreg      unsigned char 
 44281 ;; Registers used:
 44282 ;;		wreg, status,2
 44283 ;; Tracked objects:
 44284 ;;		On entry : 0/0
 44285 ;;		On exit  : 0/0
 44286 ;;		Unchanged: 0/0
 44287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44288 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44291 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44292 ;;Total ram usage:        2 bytes
 44293 ;; Hardware stack levels used: 1
 44294 ;; Hardware stack levels required when called: 12
 44295 ;; This function calls:
 44296 ;;		Nothing
 44297 ;; This function is called by:
 44298 ;;		_EEPROM_Write
 44299 ;;		_readNVM
 44300 ;; This function uses a non-reentrant model
 44301 ;;
 44302                           
 44303                           	psect	text195
 44304   00C77E                     __ptext195:
 44305                           	callstack 0
 44306   00C77E                     _EEPROM_Read:
 44307                           	callstack 15
 44308                           
 44309                           ;../../VLCBlib_PIC/nvm.c: 174:     while (EECON1bits.WR)
 44310                           
 44311                           ;../../VLCBlib_PIC/nvm.c: 175:         ;
 44312                           
 44313                           ;incstack = 0
 44314   00C77E  B27F               	btfsc	127,1,c	;volsfr
 44315   00C780  D7FE               	goto	__ptext195
 44316                           
 44317                           ;../../VLCBlib_PIC/nvm.c: 177:     EEADRH = (index >> 8)&0xFF;
 44318   00C782  0100               	movlb	0	; () banked
 44319   00C784  518E               	movf	(EEPROM_Read@index+1)& (0+255),w,b
 44320   00C786  6E75               	movwf	117,c	;volatile
 44321                           
 44322                           ; BSR set to: 0
 44323                           ;../../VLCBlib_PIC/nvm.c: 178:     EEADR = index & 0xFF;
 44324   00C788  C08D  FF74         	movff	EEPROM_Read@index,3956	;volatile
 44325                           
 44326                           ; BSR set to: 0
 44327                           ;../../VLCBlib_PIC/nvm.c: 179:     EECON1bits.EEPGD = 0;
 44328   00C78C  9E7F               	bcf	127,7,c	;volsfr
 44329                           
 44330                           ; BSR set to: 0
 44331                           ;../../VLCBlib_PIC/nvm.c: 180:     EECON1bits.CFGS = 0;
 44332   00C78E  9C7F               	bcf	127,6,c	;volsfr
 44333                           
 44334                           ; BSR set to: 0
 44335                           ;../../VLCBlib_PIC/nvm.c: 181:     EECON1bits.RD = 1;
 44336   00C790  807F               	bsf	127,0,c	;volsfr
 44337   00C792                     l2187:
 44338                           
 44339                           ;../../VLCBlib_PIC/nvm.c: 182:     while (EECON1bits.RD)
 44340   00C792  B07F               	btfsc	127,0,c	;volsfr
 44341   00C794  D7FE               	goto	l2187
 44342   00C796  0000               	nop		;# 
 44343                           
 44344                           ;../../VLCBlib_PIC/nvm.c: 187:     return EEDATA;
 44345   00C798  5073               	movf	115,w,c	;volatile
 44346   00C79A  0012               	return		;funcret
 44347   00C79C                     __end_of_EEPROM_Read:
 44348                           	callstack 0
 44349                           
 44350 ;; *************** function _factoryResetGlobalEvents *****************
 44351 ;; Defined at:
 44352 ;;		line 100 in file "../universalEvents.c"
 44353 ;; Parameters:    Size  Location     Type
 44354 ;;		None
 44355 ;; Auto vars:     Size  Location     Type
 44356 ;;		None
 44357 ;; Return value:  Size  Location     Type
 44358 ;;                  1    wreg      void 
 44359 ;; Registers used:
 44360 ;;		None
 44361 ;; Tracked objects:
 44362 ;;		On entry : 0/0
 44363 ;;		On exit  : 0/0
 44364 ;;		Unchanged: 0/0
 44365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44370 ;;Total ram usage:        0 bytes
 44371 ;; Hardware stack levels used: 1
 44372 ;; Hardware stack levels required when called: 12
 44373 ;; This function calls:
 44374 ;;		Nothing
 44375 ;; This function is called by:
 44376 ;;		_APP_factoryReset
 44377 ;; This function uses a non-reentrant model
 44378 ;;
 44379                           
 44380                           	psect	text196
 44381   00C92E                     __ptext196:
 44382                           	callstack 0
 44383   00C92E                     _factoryResetGlobalEvents:
 44384                           	callstack 14
 44385                           
 44386                           ;incstack = 0
 44387   00C92E  0012               	return		;funcret
 44388   00C930                     __end_of_factoryResetGlobalEvents:
 44389                           	callstack 0
 44390                           
 44391 ;; *************** function _APP_testMode *****************
 44392 ;; Defined at:
 44393 ;;		line 229 in file "../main.c"
 44394 ;; Parameters:    Size  Location     Type
 44395 ;;		None
 44396 ;; Auto vars:     Size  Location     Type
 44397 ;;		None
 44398 ;; Return value:  Size  Location     Type
 44399 ;;                  1    wreg      void 
 44400 ;; Registers used:
 44401 ;;		None
 44402 ;; Tracked objects:
 44403 ;;		On entry : 0/0
 44404 ;;		On exit  : 0/0
 44405 ;;		Unchanged: 0/0
 44406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44411 ;;Total ram usage:        0 bytes
 44412 ;; Hardware stack levels used: 1
 44413 ;; Hardware stack levels required when called: 12
 44414 ;; This function calls:
 44415 ;;		Nothing
 44416 ;; This function is called by:
 44417 ;;		_checkPowerOnPb
 44418 ;; This function uses a non-reentrant model
 44419 ;;
 44420                           
 44421                           	psect	text197
 44422   00C930                     __ptext197:
 44423                           	callstack 0
 44424   00C930                     _APP_testMode:
 44425                           	callstack 17
 44426                           
 44427                           ;incstack = 0
 44428   00C930  0012               	return		;funcret
 44429   00C932                     __end_of_APP_testMode:
 44430                           	callstack 0
 44431                           
 44432 ;; *************** function _isrLow *****************
 44433 ;; Defined at:
 44434 ;;		line 1332 in file "../../VLCBlib_PIC/vlcb.c"
 44435 ;; Parameters:    Size  Location     Type
 44436 ;;		None
 44437 ;; Auto vars:     Size  Location     Type
 44438 ;;		None
 44439 ;; Return value:  Size  Location     Type
 44440 ;;                  1    wreg      void 
 44441 ;; Registers used:
 44442 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 44443 ;; Tracked objects:
 44444 ;;		On entry : 0/0
 44445 ;;		On exit  : 0/0
 44446 ;;		Unchanged: 0/0
 44447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44450 ;;      Temps:          0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44451 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44452 ;;Total ram usage:       15 bytes
 44453 ;; Hardware stack levels used: 1
 44454 ;; Hardware stack levels required when called: 11
 44455 ;; This function calls:
 44456 ;;		_lowIsr
 44457 ;; This function is called by:
 44458 ;;		Interrupt level 1
 44459 ;; This function uses a non-reentrant model
 44460 ;;
 44461                           
 44462 ;; *************** function _isrHigh *****************
 44463 ;; Defined at:
 44464 ;;		line 1325 in file "../../VLCBlib_PIC/vlcb.c"
 44465 ;; Parameters:    Size  Location     Type
 44466 ;;		None
 44467 ;; Auto vars:     Size  Location     Type
 44468 ;;		None
 44469 ;; Return value:  Size  Location     Type
 44470 ;;                  1    wreg      void 
 44471 ;; Registers used:
 44472 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 44473 ;; Tracked objects:
 44474 ;;		On entry : 0/0
 44475 ;;		On exit  : 0/0
 44476 ;;		Unchanged: 0/0
 44477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44480 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44481 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44482 ;;Total ram usage:       12 bytes
 44483 ;; Hardware stack levels used: 1
 44484 ;; Hardware stack levels required when called: 5
 44485 ;; This function calls:
 44486 ;;		_highIsr
 44487 ;; This function is called by:
 44488 ;;		Interrupt level 2
 44489 ;; This function uses a non-reentrant model
 44490 ;;
 44491                           
 44492                           	psect	mainSec
 44493   0086B0                     __pmainSec:
 44494                           	callstack 0
 44495   0086B0                     _isrLow:
 44496                           	callstack 2
 44497                           
 44498                           ;incstack = 0
 44499   0086B0  8055               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
 44500   0086B2  CFD8 F07E          	movff	status,??_isrLow
 44501   0086B6  CFE8 F07F          	movff	wreg,??_isrLow+1
 44502   0086BA  CFE0 F080          	movff	bsr,??_isrLow+2
 44503   0086BE  CFFA F081          	movff	pclath,??_isrLow+3
 44504   0086C2  CFFB F082          	movff	pclatu,??_isrLow+4
 44505   0086C6  CFE1 F083          	movff	fsr1l,??_isrLow+5
 44506   0086CA  CFE2 F084          	movff	fsr1h,??_isrLow+6
 44507   0086CE  CFD9 F085          	movff	fsr2l,??_isrLow+7
 44508   0086D2  CFDA F086          	movff	fsr2h,??_isrLow+8
 44509   0086D6  CFF3 F087          	movff	prodl,??_isrLow+9
 44510   0086DA  CFF4 F088          	movff	prodh,??_isrLow+10
 44511   0086DE  CFF6 F089          	movff	tblptrl,??_isrLow+11
 44512   0086E2  CFF7 F08A          	movff	tblptrh,??_isrLow+12
 44513   0086E6  CFF8 F08B          	movff	tblptru,??_isrLow+13
 44514   0086EA  CFF5 F08C          	movff	tablat,??_isrLow+14
 44515   0086EE                     
 44516                           ;../../VLCBlib_PIC/vlcb.c: 1333:     lowIsr();
 44517   0086EE  EC4F  F049         	call	_lowIsr	;wreg free
 44518   0086F2  C08C  FFF5         	movff	??_isrLow+14,tablat
 44519   0086F6  C08B  FFF8         	movff	??_isrLow+13,tblptru
 44520   0086FA  C08A  FFF7         	movff	??_isrLow+12,tblptrh
 44521   0086FE  C089  FFF6         	movff	??_isrLow+11,tblptrl
 44522   008702  C088  FFF4         	movff	??_isrLow+10,prodh
 44523   008706  C087  FFF3         	movff	??_isrLow+9,prodl
 44524   00870A  C086  FFDA         	movff	??_isrLow+8,fsr2h
 44525   00870E  C085  FFD9         	movff	??_isrLow+7,fsr2l
 44526   008712  C084  FFE2         	movff	??_isrLow+6,fsr1h
 44527   008716  C083  FFE1         	movff	??_isrLow+5,fsr1l
 44528   00871A  C082  FFFB         	movff	??_isrLow+4,pclatu
 44529   00871E  C081  FFFA         	movff	??_isrLow+3,pclath
 44530   008722  C080  FFE0         	movff	??_isrLow+2,bsr
 44531   008726  C07F  FFE8         	movff	??_isrLow+1,wreg
 44532   00872A  C07E  FFD8         	movff	??_isrLow,status
 44533   00872E  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 44534   008730  0010               	retfie	
 44535   008732                     __end_of_isrLow:
 44536                           	callstack 0
 44537   008732                     _isrHigh:
 44538                           	callstack 2
 44539                           
 44540                           ;incstack = 0
 44541   008732  8255               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 44542   008734  CFFA F049          	movff	pclath,??_isrHigh
 44543   008738  CFFB F04A          	movff	pclatu,??_isrHigh+1
 44544   00873C  CFE1 F04B          	movff	fsr1l,??_isrHigh+2
 44545   008740  CFE2 F04C          	movff	fsr1h,??_isrHigh+3
 44546   008744  CFD9 F04D          	movff	fsr2l,??_isrHigh+4
 44547   008748  CFDA F04E          	movff	fsr2h,??_isrHigh+5
 44548   00874C  CFF3 F04F          	movff	prodl,??_isrHigh+6
 44549   008750  CFF4 F050          	movff	prodh,??_isrHigh+7
 44550   008754  CFF6 F051          	movff	tblptrl,??_isrHigh+8
 44551   008758  CFF7 F052          	movff	tblptrh,??_isrHigh+9
 44552   00875C  CFF8 F053          	movff	tblptru,??_isrHigh+10
 44553   008760  CFF5 F054          	movff	tablat,??_isrHigh+11
 44554   008764                     
 44555                           ;../../VLCBlib_PIC/vlcb.c: 1326:     highIsr();
 44556   008764  ECB6  F049         	call	_highIsr	;wreg free
 44557   008768  C054  FFF5         	movff	??_isrHigh+11,tablat
 44558   00876C  C053  FFF8         	movff	??_isrHigh+10,tblptru
 44559   008770  C052  FFF7         	movff	??_isrHigh+9,tblptrh
 44560   008774  C051  FFF6         	movff	??_isrHigh+8,tblptrl
 44561   008778  C050  FFF4         	movff	??_isrHigh+7,prodh
 44562   00877C  C04F  FFF3         	movff	??_isrHigh+6,prodl
 44563   008780  C04E  FFDA         	movff	??_isrHigh+5,fsr2h
 44564   008784  C04D  FFD9         	movff	??_isrHigh+4,fsr2l
 44565   008788  C04C  FFE2         	movff	??_isrHigh+3,fsr1h
 44566   00878C  C04B  FFE1         	movff	??_isrHigh+2,fsr1l
 44567   008790  C04A  FFFB         	movff	??_isrHigh+1,pclatu
 44568   008794  C049  FFFA         	movff	??_isrHigh,pclath
 44569   008798  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 44570   00879A  0011               	retfie		f
 44571   00879C                     __end_of_isrHigh:
 44572                           	callstack 0
 44573                           
 44574                           	psect	intcodelo
 44575   000818                     __pintcodelo:
 44576                           	callstack 2
 44577   000818  EF58  F043         	goto	_isrLow
 44578                           
 44579 ;; *************** function _lowIsr *****************
 44580 ;; Defined at:
 44581 ;;		line 1077 in file "../../VLCBlib_PIC/vlcb.c"
 44582 ;; Parameters:    Size  Location     Type
 44583 ;;		None
 44584 ;; Auto vars:     Size  Location     Type
 44585 ;;  i               1   29[BANK0 ] unsigned char 
 44586 ;; Return value:  Size  Location     Type
 44587 ;;                  1    wreg      void 
 44588 ;; Registers used:
 44589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 44590 ;; Tracked objects:
 44591 ;;		On entry : 0/0
 44592 ;;		On exit  : 0/0
 44593 ;;		Unchanged: 0/0
 44594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44596 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44597 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44598 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44599 ;;Total ram usage:        5 bytes
 44600 ;; Hardware stack levels used: 1
 44601 ;; Hardware stack levels required when called: 10
 44602 ;; This function calls:
 44603 ;;		NULL
 44604 ;;		_APP_lowIsr
 44605 ;;		_canIsr
 44606 ;;		_mnsLowIsr
 44607 ;; This function is called by:
 44608 ;;		_isrLow
 44609 ;; This function uses a non-reentrant model
 44610 ;;
 44611                           
 44612                           	psect	text199
 44613   00929E                     __ptext199:
 44614                           	callstack 0
 44615   00929E                     _lowIsr:
 44616                           	callstack 2
 44617                           
 44618                           ;../../VLCBlib_PIC/vlcb.c: 1078:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1080:     for 
      +                          (i=0; i<9; i++) {
 44619                           
 44620                           ;incstack = 0
 44621   00929E  0E00               	movlw	0
 44622   0092A0  0100               	movlb	0	; () banked
 44623   0092A2  6F7D               	movwf	lowIsr@i& (0+255),b
 44624   0092A4                     i1l25397:
 44625                           
 44626                           ; BSR set to: 0
 44627                           ;../../VLCBlib_PIC/vlcb.c: 1081:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->lowIsr != ((void*)0))) {
 44628   0092A4  517D               	movf	lowIsr@i& (0+255),w,b
 44629   0092A6  0D02               	mullw	2
 44630   0092A8  0E69               	movlw	low _services
 44631   0092AA  24F3               	addwf	243,w,c
 44632   0092AC  6EF6               	movwf	tblptrl,c
 44633   0092AE  0EEE               	movlw	high _services
 44634   0092B0  20F4               	addwfc	244,w,c
 44635   0092B2  6EF7               	movwf	tblptrh,c
 44636   0092B4                     	if	1	;There are 3 active tblptr bytes
 44637   0092B4  6AF8               	clrf	tblptru,c
 44638   0092B6  0E00               	movlw	low (__mediumconst shr (0+16))
 44639   0092B8  22F8               	addwfc	tblptru,f,c
 44640   0092BA                     	endif
 44641   0092BA  0009               	tblrd		*+
 44642   0092BC  50F5               	movf	tablat,w,c
 44643   0092BE  0009               	tblrd		*+
 44644   0092C0  10F5               	iorwf	tablat,w,c
 44645   0092C2  B4D8               	btfsc	status,2,c
 44646   0092C4  D04B               	goto	i1u2801_29
 44647                           
 44648                           ; BSR set to: 0
 44649   0092C6  517D               	movf	lowIsr@i& (0+255),w,b
 44650   0092C8  0D02               	mullw	2
 44651   0092CA  0E69               	movlw	low _services
 44652   0092CC  24F3               	addwf	243,w,c
 44653   0092CE  6EF6               	movwf	tblptrl,c
 44654   0092D0  0EEE               	movlw	high _services
 44655   0092D2  20F4               	addwfc	244,w,c
 44656   0092D4  6EF7               	movwf	tblptrh,c
 44657   0092D6                     	if	1	;There are 3 active tblptr bytes
 44658   0092D6  6AF8               	clrf	tblptru,c
 44659   0092D8  0E00               	movlw	low (__mediumconst shr (0+16))
 44660   0092DA  22F8               	addwfc	tblptru,f,c
 44661   0092DC                     	endif
 44662   0092DC  0009               	tblrd		*+
 44663   0092DE  CFF5 F079          	movff	tablat,??_lowIsr
 44664   0092E2  0009               	tblrd		*+
 44665   0092E4  CFF5 F07A          	movff	tablat,??_lowIsr+1
 44666   0092E8  0E0C               	movlw	12
 44667   0092EA  2779               	addwf	??_lowIsr& (0+255),f,b
 44668   0092EC  0E00               	movlw	0
 44669   0092EE  237A               	addwfc	(??_lowIsr+1)& (0+255),f,b
 44670   0092F0  C079  FFF6         	movff	??_lowIsr,tblptrl
 44671   0092F4  C07A  FFF7         	movff	??_lowIsr+1,tblptrh
 44672   0092F8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 44673   0092F8  6AF8               	clrf	tblptru,c
 44674   0092FA                     	endif
 44675   0092FA                     	if	0	;tblptru may be non-zero
 44676   0092FA                     	endif
 44677   0092FA  0009               	tblrd		*+
 44678   0092FC  50F5               	movf	tablat,w,c
 44679   0092FE  0009               	tblrd		*+
 44680   009300  10F5               	iorwf	tablat,w,c
 44681   009302  B4D8               	btfsc	status,2,c
 44682   009304  D02B               	goto	i1u2801_29
 44683                           
 44684                           ; BSR set to: 0
 44685                           ;../../VLCBlib_PIC/vlcb.c: 1082:             services[i]->lowIsr();
 44686   009306  517D               	movf	lowIsr@i& (0+255),w,b
 44687   009308  0D02               	mullw	2
 44688   00930A  0E69               	movlw	low _services
 44689   00930C  24F3               	addwf	243,w,c
 44690   00930E  6EF6               	movwf	tblptrl,c
 44691   009310  0EEE               	movlw	high _services
 44692   009312  20F4               	addwfc	244,w,c
 44693   009314  6EF7               	movwf	tblptrh,c
 44694   009316                     	if	1	;There are 3 active tblptr bytes
 44695   009316  6AF8               	clrf	tblptru,c
 44696   009318  0E00               	movlw	low (__mediumconst shr (0+16))
 44697   00931A  22F8               	addwfc	tblptru,f,c
 44698   00931C                     	endif
 44699   00931C  0009               	tblrd		*+
 44700   00931E  CFF5 F079          	movff	tablat,??_lowIsr
 44701   009322  0009               	tblrd		*+
 44702   009324  CFF5 F07A          	movff	tablat,??_lowIsr+1
 44703   009328  0E0C               	movlw	12
 44704   00932A  2779               	addwf	??_lowIsr& (0+255),f,b
 44705   00932C  0E00               	movlw	0
 44706   00932E  237A               	addwfc	(??_lowIsr+1)& (0+255),f,b
 44707   009330  C079  FFF6         	movff	??_lowIsr,tblptrl
 44708   009334  C07A  FFF7         	movff	??_lowIsr+1,tblptrh
 44709   009338                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 44710   009338  6AF8               	clrf	tblptru,c
 44711   00933A                     	endif
 44712   00933A                     	if	0	;tblptru may be non-zero
 44713   00933A                     	endif
 44714   00933A  0009               	tblrd		*+
 44715   00933C  CFF5 F07B          	movff	tablat,??_lowIsr+2
 44716   009340  0009               	tblrd		*+
 44717   009342  CFF5 F07C          	movff	tablat,??_lowIsr+3
 44718   009346  D801               	call	i1u2801_28
 44719   009348  D009               	goto	i1u2801_29
 44720   00934A                     i1u2801_28:
 44721   00934A  0005               	push	
 44722   00934C  6EFA               	movwf	pclath,c
 44723   00934E  517B               	movf	(??_lowIsr+2)& (0+255),w,b
 44724   009350  6EFD               	movwf	tosl,c
 44725   009352  517C               	movf	(??_lowIsr+3)& (0+255),w,b
 44726   009354  6EFE               	movwf	tosh,c
 44727   009356  6AFF               	clrf	tosu,c
 44728   009358  50FA               	movf	pclath,w,c
 44729   00935A  0012               	return		;indir
 44730   00935C                     i1u2801_29:
 44731                           
 44732                           ;../../VLCBlib_PIC/vlcb.c: 1084:     }
 44733   00935C  0100               	movlb	0	; () banked
 44734   00935E  2B7D               	incf	lowIsr@i& (0+255),f,b
 44735                           
 44736                           ; BSR set to: 0
 44737   009360  0E08               	movlw	8
 44738   009362  657D               	cpfsgt	lowIsr@i& (0+255),b
 44739   009364  D79F               	goto	i1l25397
 44740                           
 44741                           ; BSR set to: 0
 44742                           ;../../VLCBlib_PIC/vlcb.c: 1085:     APP_lowIsr();
 44743   009366  EC99  F064         	call	_APP_lowIsr	;wreg free
 44744   00936A  0012               	return		;funcret
 44745   00936C                     __end_of_lowIsr:
 44746                           	callstack 0
 44747                           
 44748 ;; *************** function _canIsr *****************
 44749 ;; Defined at:
 44750 ;;		line 402 in file "../../VLCBlib_PIC/can18_ecan.c"
 44751 ;; Parameters:    Size  Location     Type
 44752 ;;		None
 44753 ;; Auto vars:     Size  Location     Type
 44754 ;;		None
 44755 ;; Return value:  Size  Location     Type
 44756 ;;                  1    wreg      void 
 44757 ;; Registers used:
 44758 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 44759 ;; Tracked objects:
 44760 ;;		On entry : 0/0
 44761 ;;		On exit  : 0/0
 44762 ;;		Unchanged: 0/0
 44763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44768 ;;Total ram usage:        0 bytes
 44769 ;; Hardware stack levels used: 1
 44770 ;; Hardware stack levels required when called: 9
 44771 ;; This function calls:
 44772 ;;		_canFillRxFifo
 44773 ;;		_canTxError
 44774 ;;		_checkCANTimeout
 44775 ;;		_checkTxFifo
 44776 ;; This function is called by:
 44777 ;;		_highIsr
 44778 ;;		_lowIsr
 44779 ;; This function uses a non-reentrant model
 44780 ;;
 44781                           
 44782                           	psect	text200
 44783   00C740                     __ptext200:
 44784                           	callstack 0
 44785   00C740                     _canIsr:
 44786                           	callstack 0
 44787                           
 44788                           ;Skip over the trampoline to the duplicate function for level 2
 44789   00C740  A255               	btfss	btemp,1,c
 44790   00C742  D002               	goto	_canIsr$intlevel1
 44791   00C744  EF0E  F064         	goto	i2_canIsr
 44792   00C748                     _canIsr$intlevel1:
 44793                           	callstack 2
 44794                           
 44795                           ;../../VLCBlib_PIC/can18_ecan.c: 404:     if (PIR5bits.FIFOWMIF) {
 44796                           
 44797                           ;incstack = 0
 44798   00C748  B077               	btfsc	119,0,c	;volatile
 44799                           
 44800                           ;../../VLCBlib_PIC/can18_ecan.c: 405:         canFillRxFifo();
 44801   00C74A  EC50  F03A         	call	_canFillRxFifo	;wreg free
 44802                           
 44803                           ;../../VLCBlib_PIC/can18_ecan.c: 407:     if (PIR5bits.ERRIF) {
 44804   00C74E  BA77               	btfsc	119,5,c	;volatile
 44805                           
 44806                           ;../../VLCBlib_PIC/can18_ecan.c: 408:         canTxError();
 44807   00C750  EC9F  F05A         	call	_canTxError	;wreg free
 44808                           
 44809                           ;../../VLCBlib_PIC/can18_ecan.c: 410:     if (PIR5bits.TXBnIF) {
 44810   00C754  B877               	btfsc	119,4,c	;volatile
 44811                           
 44812                           ;../../VLCBlib_PIC/can18_ecan.c: 411:         checkTxFifo();
 44813   00C756  EC1E  F02A         	call	_checkTxFifo	;wreg free
 44814                           
 44815                           ;../../VLCBlib_PIC/can18_ecan.c: 413:     checkCANTimeout();
 44816                           
 44817                           ;../../VLCBlib_PIC/can18_ecan.c: 412:     }
 44818   00C75A  EC1E  F05D         	call	_checkCANTimeout	;wreg free
 44819   00C75E  0012               	return		;funcret
 44820   00C760                     __end_of_canIsr:
 44821                           	callstack 0
 44822                           
 44823 ;; *************** function _mnsLowIsr *****************
 44824 ;; Defined at:
 44825 ;;		line 764 in file "../../VLCBlib_PIC/mns.c"
 44826 ;; Parameters:    Size  Location     Type
 44827 ;;		None
 44828 ;; Auto vars:     Size  Location     Type
 44829 ;;		None
 44830 ;; Return value:  Size  Location     Type
 44831 ;;                  1    wreg      void 
 44832 ;; Registers used:
 44833 ;;		wreg, status,2, status,0
 44834 ;; Tracked objects:
 44835 ;;		On entry : 0/0
 44836 ;;		On exit  : 0/0
 44837 ;;		Unchanged: 0/0
 44838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44843 ;;Total ram usage:        0 bytes
 44844 ;; Hardware stack levels used: 1
 44845 ;; Hardware stack levels required when called: 6
 44846 ;; This function calls:
 44847 ;;		Nothing
 44848 ;; This function is called by:
 44849 ;;		_lowIsr
 44850 ;; This function uses a non-reentrant model
 44851 ;;
 44852                           
 44853                           	psect	text201
 44854   00C85E                     __ptext201:
 44855                           	callstack 0
 44856   00C85E                     _mnsLowIsr:
 44857                           	callstack 5
 44858                           
 44859                           ;../../VLCBlib_PIC/mns.c: 767:     if(INTCONbits.TMR0IF) {
 44860                           
 44861                           ;incstack = 0
 44862   00C85E  A4F2               	btfss	242,2,c	;volatile
 44863   00C860  0012               	return	
 44864                           
 44865                           ;../../VLCBlib_PIC/mns.c: 769:         INTCONbits.TMR0IF = 0;
 44866   00C862  94F2               	bcf	242,2,c	;volatile
 44867                           
 44868                           ;../../VLCBlib_PIC/mns.c: 770:         timerExtension1++;
 44869   00C864  0100               	movlb	0	; () banked
 44870   00C866  2BC6               	incf	_timerExtension1& (0+255),f,b	;volatile
 44871                           
 44872                           ; BSR set to: 0
 44873                           ;../../VLCBlib_PIC/mns.c: 771:         if(timerExtension1 == 0) {
 44874   00C868  51C6               	movf	_timerExtension1& (0+255),w,b	;volatile
 44875   00C86A  A4D8               	btfss	status,2,c
 44876   00C86C  0012               	return	
 44877                           
 44878                           ; BSR set to: 0
 44879                           ;../../VLCBlib_PIC/mns.c: 772:             timerExtension2++;
 44880   00C86E  2BC5               	incf	_timerExtension2& (0+255),f,b	;volatile
 44881   00C870  0012               	return		;funcret
 44882   00C872                     __end_of_mnsLowIsr:
 44883                           	callstack 0
 44884                           
 44885 ;; *************** function _checkCANTimeout *****************
 44886 ;; Defined at:
 44887 ;;		line 766 in file "../../VLCBlib_PIC/can18_ecan.c"
 44888 ;; Parameters:    Size  Location     Type
 44889 ;;		None
 44890 ;; Auto vars:     Size  Location     Type
 44891 ;;		None
 44892 ;; Return value:  Size  Location     Type
 44893 ;;                  1    wreg      void 
 44894 ;; Registers used:
 44895 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 44896 ;; Tracked objects:
 44897 ;;		On entry : 0/0
 44898 ;;		On exit  : 0/0
 44899 ;;		Unchanged: 0/0
 44900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44903 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44904 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44905 ;;Total ram usage:        4 bytes
 44906 ;; Hardware stack levels used: 1
 44907 ;; Hardware stack levels required when called: 8
 44908 ;; This function calls:
 44909 ;;		_checkTxFifo
 44910 ;;		i1_tickGet
 44911 ;;		i1_updateModuleErrorStatus
 44912 ;; This function is called by:
 44913 ;;		_canIsr
 44914 ;; This function uses a non-reentrant model
 44915 ;;
 44916                           
 44917                           	psect	text202
 44918   00BA3C                     __ptext202:
 44919                           	callstack 0
 44920   00BA3C                     _checkCANTimeout:
 44921                           	callstack 2
 44922                           
 44923                           ;../../VLCBlib_PIC/can18_ecan.c: 767:     if (canTransmitTimeout.val != 0) {
 44924                           
 44925                           ;incstack = 0
 44926   00BA3C  5015               	movf	_canTransmitTimeout^0,w,c
 44927   00BA3E  1016               	iorwf	(_canTransmitTimeout+1)^0,w,c
 44928   00BA40  1017               	iorwf	(_canTransmitTimeout+2)^0,w,c
 44929   00BA42  1018               	iorwf	(_canTransmitTimeout+3)^0,w,c
 44930   00BA44  B4D8               	btfsc	status,2,c
 44931   00BA46  0012               	return	
 44932                           
 44933                           ;../../VLCBlib_PIC/can18_ecan.c: 768:         if ((tickGet() - canTransmitTimeout.val) >
      +                           62500) {
 44934   00BA48  EC9D  F05C         	call	i1_tickGet	;wreg free
 44935   00BA4C  5015               	movf	_canTransmitTimeout^0,w,c
 44936   00BA4E  0100               	movlb	0	; () banked
 44937   00BA50  5D60               	subwf	?i1_tickGet& (0+255),w,b
 44938   00BA52  6F75               	movwf	??_checkCANTimeout& (0+255),b
 44939   00BA54  5016               	movf	(_canTransmitTimeout+1)^0,w,c
 44940   00BA56  5961               	subwfb	(?i1_tickGet+1)& (0+255),w,b
 44941   00BA58  6F76               	movwf	(??_checkCANTimeout+1)& (0+255),b
 44942   00BA5A  5017               	movf	(_canTransmitTimeout+2)^0,w,c
 44943   00BA5C  5962               	subwfb	(?i1_tickGet+2)& (0+255),w,b
 44944   00BA5E  6F77               	movwf	(??_checkCANTimeout+2)& (0+255),b
 44945   00BA60  5018               	movf	(_canTransmitTimeout+3)^0,w,c
 44946   00BA62  5963               	subwfb	(?i1_tickGet+3)& (0+255),w,b
 44947   00BA64  6F78               	movwf	(??_checkCANTimeout+3)& (0+255),b
 44948   00BA66  5178               	movf	(??_checkCANTimeout+3)& (0+255),w,b
 44949   00BA68  1177               	iorwf	(??_checkCANTimeout+2)& (0+255),w,b
 44950   00BA6A  E106               	bnz	i1u2431_20
 44951   00BA6C  0E25               	movlw	37
 44952   00BA6E  5D75               	subwf	??_checkCANTimeout& (0+255),w,b
 44953   00BA70  0EF4               	movlw	244
 44954   00BA72  5976               	subwfb	(??_checkCANTimeout+1)& (0+255),w,b
 44955   00BA74  A0D8               	btfss	status,0,c
 44956   00BA76  0012               	return	
 44957   00BA78                     i1u2431_20:
 44958                           
 44959                           ; BSR set to: 0
 44960                           ;../../VLCBlib_PIC/can18_ecan.c: 769:             canTransmitFailed = 1;
 44961   00BA78  0E01               	movlw	1
 44962   00BA7A  6FB8               	movwf	_canTransmitFailed& (0+255),b
 44963                           
 44964                           ; BSR set to: 0
 44965                           ;../../VLCBlib_PIC/can18_ecan.c: 770:             TXB0CONbits.TXREQ = 0;
 44966   00BA7C  010F               	movlb	15	; () banked
 44967   00BA7E  9720               	bcf	32,3,b	;volatile
 44968                           
 44969                           ; BSR set to: 15
 44970                           ;../../VLCBlib_PIC/can18_ecan.c: 771:             checkTxFifo();
 44971   00BA80  EC1E  F02A         	call	_checkTxFifo	;wreg free
 44972                           
 44973                           ;../../VLCBlib_PIC/can18_ecan.c: 773:             canDiagnostics[0x02].asUint++;
 44974   00BA84  0101               	movlb	1	; () banked
 44975   00BA86  4B6A               	infsnz	(_canDiagnostics+4)& (0+255),f,b
 44976   00BA88  2B6B               	incf	(_canDiagnostics+5)& (0+255),f,b
 44977                           
 44978                           ; BSR set to: 1
 44979                           ;../../VLCBlib_PIC/can18_ecan.c: 774:             updateModuleErrorStatus();
 44980   00BA8A  EC61  F064         	call	i1_updateModuleErrorStatus	;wreg free
 44981   00BA8E  0012               	return		;funcret
 44982   00BA90                     __end_of_checkCANTimeout:
 44983                           	callstack 0
 44984                           
 44985 ;; *************** function _canTxError *****************
 44986 ;; Defined at:
 44987 ;;		line 785 in file "../../VLCBlib_PIC/can18_ecan.c"
 44988 ;; Parameters:    Size  Location     Type
 44989 ;;		None
 44990 ;; Auto vars:     Size  Location     Type
 44991 ;;		None
 44992 ;; Return value:  Size  Location     Type
 44993 ;;                  1    wreg      void 
 44994 ;; Registers used:
 44995 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 44996 ;; Tracked objects:
 44997 ;;		On entry : 0/0
 44998 ;;		On exit  : 0/0
 44999 ;;		Unchanged: 0/0
 45000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45005 ;;Total ram usage:        0 bytes
 45006 ;; Hardware stack levels used: 1
 45007 ;; Hardware stack levels required when called: 8
 45008 ;; This function calls:
 45009 ;;		_checkTxFifo
 45010 ;;		i1_updateModuleErrorStatus
 45011 ;; This function is called by:
 45012 ;;		_canIsr
 45013 ;; This function uses a non-reentrant model
 45014 ;;
 45015                           
 45016                           	psect	text203
 45017   00B53E                     __ptext203:
 45018                           	callstack 0
 45019   00B53E                     _canTxError:
 45020                           	callstack 2
 45021                           
 45022                           ;../../VLCBlib_PIC/can18_ecan.c: 786:     if (TXB0CONbits.TXLARB) {
 45023                           
 45024                           ;incstack = 0
 45025   00B53E  010F               	movlb	15	; () banked
 45026   00B540  AB20               	btfss	32,5,b	;volatile
 45027   00B542  D012               	goto	i1l22661
 45028                           
 45029                           ; BSR set to: 15
 45030                           ;../../VLCBlib_PIC/can18_ecan.c: 787:         canTransmitFailed = 1;
 45031   00B544  0E01               	movlw	1
 45032   00B546  0100               	movlb	0	; () banked
 45033   00B548  6FB8               	movwf	_canTransmitFailed& (0+255),b
 45034                           
 45035                           ;../../VLCBlib_PIC/can18_ecan.c: 788:         canTransmitTimeout.val = 0;
 45036   00B54A  0E00               	movlw	0
 45037   00B54C  6E15               	movwf	_canTransmitTimeout^0,c
 45038   00B54E  0E00               	movlw	0
 45039   00B550  6E16               	movwf	(_canTransmitTimeout+1)^0,c
 45040   00B552  0E00               	movlw	0
 45041   00B554  6E17               	movwf	(_canTransmitTimeout+2)^0,c
 45042   00B556  0E00               	movlw	0
 45043   00B558  6E18               	movwf	(_canTransmitTimeout+3)^0,c
 45044                           
 45045                           ; BSR set to: 0
 45046                           ;../../VLCBlib_PIC/can18_ecan.c: 789:         TXB0CONbits.TXREQ = 0;
 45047   00B55A  010F               	movlb	15	; () banked
 45048   00B55C  9720               	bcf	32,3,b	;volatile
 45049                           
 45050                           ; BSR set to: 15
 45051                           ;../../VLCBlib_PIC/can18_ecan.c: 791:         canDiagnostics[0x0C].asUint++;
 45052   00B55E  0101               	movlb	1	; () banked
 45053   00B560  4B7E               	infsnz	(_canDiagnostics+24)& (0+255),f,b
 45054   00B562  2B7F               	incf	(_canDiagnostics+25)& (0+255),f,b
 45055                           
 45056                           ; BSR set to: 1
 45057                           ;../../VLCBlib_PIC/can18_ecan.c: 792:         updateModuleErrorStatus();
 45058   00B564  EC61  F064         	call	i1_updateModuleErrorStatus	;wreg free
 45059   00B568                     i1l22661:
 45060                           
 45061                           ;../../VLCBlib_PIC/can18_ecan.c: 795:     if (TXB0CONbits.TXERR) {
 45062   00B568  010F               	movlb	15	; () banked
 45063   00B56A  A920               	btfss	32,4,b	;volatile
 45064   00B56C  D012               	goto	i1l22671
 45065                           
 45066                           ; BSR set to: 15
 45067                           ;../../VLCBlib_PIC/can18_ecan.c: 796:         canTransmitFailed = 1;
 45068   00B56E  0E01               	movlw	1
 45069   00B570  0100               	movlb	0	; () banked
 45070   00B572  6FB8               	movwf	_canTransmitFailed& (0+255),b
 45071                           
 45072                           ;../../VLCBlib_PIC/can18_ecan.c: 797:         canTransmitTimeout.val = 0;
 45073   00B574  0E00               	movlw	0
 45074   00B576  6E15               	movwf	_canTransmitTimeout^0,c
 45075   00B578  0E00               	movlw	0
 45076   00B57A  6E16               	movwf	(_canTransmitTimeout+1)^0,c
 45077   00B57C  0E00               	movlw	0
 45078   00B57E  6E17               	movwf	(_canTransmitTimeout+2)^0,c
 45079   00B580  0E00               	movlw	0
 45080   00B582  6E18               	movwf	(_canTransmitTimeout+3)^0,c
 45081                           
 45082                           ; BSR set to: 0
 45083                           ;../../VLCBlib_PIC/can18_ecan.c: 798:         TXB0CONbits.TXREQ = 0;
 45084   00B584  010F               	movlb	15	; () banked
 45085   00B586  9720               	bcf	32,3,b	;volatile
 45086                           
 45087                           ; BSR set to: 15
 45088                           ;../../VLCBlib_PIC/can18_ecan.c: 800:         canDiagnostics[0x02].asUint++;
 45089   00B588  0101               	movlb	1	; () banked
 45090   00B58A  4B6A               	infsnz	(_canDiagnostics+4)& (0+255),f,b
 45091   00B58C  2B6B               	incf	(_canDiagnostics+5)& (0+255),f,b
 45092                           
 45093                           ; BSR set to: 1
 45094                           ;../../VLCBlib_PIC/can18_ecan.c: 801:         updateModuleErrorStatus();
 45095   00B58E  EC61  F064         	call	i1_updateModuleErrorStatus	;wreg free
 45096   00B592                     i1l22671:
 45097                           
 45098                           ;../../VLCBlib_PIC/can18_ecan.c: 804:     if (canTransmitFailed) {
 45099   00B592  0100               	movlb	0	; () banked
 45100   00B594  51B8               	movf	_canTransmitFailed& (0+255),w,b
 45101   00B596  A4D8               	btfss	status,2,c
 45102                           
 45103                           ; BSR set to: 0
 45104                           ;../../VLCBlib_PIC/can18_ecan.c: 805:         checkTxFifo();
 45105   00B598  EC1E  F02A         	call	_checkTxFifo	;wreg free
 45106                           
 45107                           ;../../VLCBlib_PIC/can18_ecan.c: 807:     PIR5bits.ERRIF = 0;
 45108   00B59C  9A77               	bcf	119,5,c	;volatile
 45109   00B59E  0012               	return		;funcret
 45110   00B5A0                     __end_of_canTxError:
 45111                           	callstack 0
 45112                           
 45113 ;; *************** function _checkTxFifo *****************
 45114 ;; Defined at:
 45115 ;;		line 695 in file "../../VLCBlib_PIC/can18_ecan.c"
 45116 ;; Parameters:    Size  Location     Type
 45117 ;;		None
 45118 ;; Auto vars:     Size  Location     Type
 45119 ;;  mp              2   19[BANK0 ] PTR struct Message
 45120 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 45121 ;;  m               2   17[BANK0 ] PTR struct Message
 45122 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 45123 ;; Return value:  Size  Location     Type
 45124 ;;                  1    wreg      void 
 45125 ;; Registers used:
 45126 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45127 ;; Tracked objects:
 45128 ;;		On entry : 0/0
 45129 ;;		On exit  : 0/0
 45130 ;;		Unchanged: 0/0
 45131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45133 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45134 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45135 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45136 ;;Total ram usage:        9 bytes
 45137 ;; Hardware stack levels used: 1
 45138 ;; Hardware stack levels required when called: 7
 45139 ;; This function calls:
 45140 ;;		i1_getNextWriteMessage
 45141 ;;		i1_isEvent
 45142 ;;		i1_pop
 45143 ;;		i1_tickGet
 45144 ;;		i1_updateModuleErrorStatus
 45145 ;; This function is called by:
 45146 ;;		_canIsr
 45147 ;;		_checkCANTimeout
 45148 ;;		_canTxError
 45149 ;; This function uses a non-reentrant model
 45150 ;;
 45151                           
 45152                           	psect	text204
 45153   00543C                     __ptext204:
 45154                           	callstack 0
 45155   00543C                     _checkTxFifo:
 45156                           	callstack 3
 45157                           
 45158                           ;../../VLCBlib_PIC/can18_ecan.c: 696:     Message * mp;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          698:     Message * m;;../../VLCBlib_PIC/can18_ecan.c: 701:     PIR5bits.TXBnIF = 0;
 45159                           
 45160                           ;incstack = 0
 45161   00543C  9877               	bcf	119,4,c	;volatile
 45162                           
 45163                           ;../../VLCBlib_PIC/can18_ecan.c: 702:     if (!TXB0CONbits.TXREQ) {
 45164   00543E  010F               	movlb	15	; () banked
 45165   005440  B720               	btfsc	32,3,b	;volatile
 45166   005442  D15A               	goto	i1l2561
 45167                           
 45168                           ; BSR set to: 15
 45169                           ;../../VLCBlib_PIC/can18_ecan.c: 703:         mp = pop(&txQueue);
 45170   005444  0EA9               	movlw	low _txQueue
 45171   005446  0100               	movlb	0	; () banked
 45172   005448  6F60               	movwf	i1pop@q& (0+255),b
 45173   00544A  0E01               	movlw	high _txQueue
 45174   00544C  6F61               	movwf	(i1pop@q+1)& (0+255),b
 45175   00544E  EC73  F04F         	call	i1_pop	;wreg free
 45176   005452  C060  F073         	movff	?i1_pop,checkTxFifo@mp
 45177   005456  C061  F074         	movff	?i1_pop+1,checkTxFifo@mp+1
 45178                           
 45179                           ;../../VLCBlib_PIC/can18_ecan.c: 704:         if (mp != ((void*)0)) {
 45180   00545A  0100               	movlb	0	; () banked
 45181   00545C  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45182   00545E  1174               	iorwf	(checkTxFifo@mp+1)& (0+255),w,b
 45183   005460  B4D8               	btfsc	status,2,c
 45184   005462  D13C               	goto	i1l21429
 45185                           
 45186                           ; BSR set to: 0
 45187                           ;../../VLCBlib_PIC/can18_ecan.c: 706:             TXB0SIDH = canPri[priorities[mp->opc]]
      +                           | ((canId & 0x78) >> 3);
 45188   005464  EE20 F001          	lfsr	2,1
 45189   005468  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45190   00546A  26D9               	addwf	fsr2l,f,c
 45191   00546C  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45192   00546E  22DA               	addwfc	fsr2h,f,c
 45193   005470  50DF               	movf	indf2,w,c
 45194   005472  6F6C               	movwf	??_checkTxFifo& (0+255),b
 45195   005474  6B6D               	clrf	(??_checkTxFifo+1)& (0+255),b
 45196   005476  0E29               	movlw	low _priorities
 45197   005478  256C               	addwf	??_checkTxFifo& (0+255),w,b
 45198   00547A  6EF6               	movwf	tblptrl,c
 45199   00547C  0EED               	movlw	high _priorities
 45200   00547E  216D               	addwfc	(??_checkTxFifo+1)& (0+255),w,b
 45201   005480  6EF7               	movwf	tblptrh,c
 45202   005482                     	if	1	;There are 3 active tblptr bytes
 45203   005482  6AF8               	clrf	tblptru,c
 45204   005484  0E00               	movlw	low (__mediumconst shr (0+16))
 45205   005486  22F8               	addwfc	tblptru,f,c
 45206   005488                     	endif
 45207   005488  0008               	tblrd		*
 45208   00548A  50F5               	movf	tablat,w,c
 45209   00548C  6F6E               	movwf	(??_checkTxFifo+2)& (0+255),b
 45210   00548E  6B6F               	clrf	(??_checkTxFifo+3)& (0+255),b
 45211   005490  0E86               	movlw	low _canPri
 45212   005492  256E               	addwf	(??_checkTxFifo+2)& (0+255),w,b
 45213   005494  6EF6               	movwf	tblptrl,c
 45214   005496  0EEE               	movlw	high _canPri
 45215   005498  216F               	addwfc	(??_checkTxFifo+3)& (0+255),w,b
 45216   00549A  6EF7               	movwf	tblptrh,c
 45217   00549C                     	if	1	;There are 3 active tblptr bytes
 45218   00549C  6AF8               	clrf	tblptru,c
 45219   00549E  0E00               	movlw	low (__mediumconst shr (0+16))
 45220   0054A0  22F8               	addwfc	tblptru,f,c
 45221   0054A2                     	endif
 45222   0054A2  0008               	tblrd		*
 45223   0054A4  CFF5 F070          	movff	tablat,??_checkTxFifo+4
 45224   0054A8  39B9               	swapf	_canId& (0+255),w,b
 45225   0054AA  46E8               	rlncf	wreg,f,c
 45226   0054AC  0B1F               	andlw	31
 45227   0054AE  0B0F               	andlw	15
 45228   0054B0  1170               	iorwf	(??_checkTxFifo+4)& (0+255),w,b
 45229   0054B2  010F               	movlb	15	; () banked
 45230   0054B4  6F21               	movwf	33,b	;volatile
 45231                           
 45232                           ; BSR set to: 15
 45233                           ;../../VLCBlib_PIC/can18_ecan.c: 707:             TXB0SIDL = (uint8_t)((canId & 0x07) <<
      +                           5);
 45234   0054B6  C0B9  F06C         	movff	_canId,??_checkTxFifo
 45235   0054BA  0E07               	movlw	7
 45236   0054BC  0100               	movlb	0	; () banked
 45237   0054BE  176C               	andwf	??_checkTxFifo& (0+255),f,b
 45238   0054C0  0E05               	movlw	5
 45239   0054C2  6F6D               	movwf	(??_checkTxFifo+1)& (0+255),b
 45240   0054C4                     i1u2239_25:
 45241   0054C4  90D8               	bcf	status,0,c
 45242   0054C6  376C               	rlcf	??_checkTxFifo& (0+255),f,b
 45243   0054C8  2F6D               	decfsz	(??_checkTxFifo+1)& (0+255),f,b
 45244   0054CA  D7FC               	goto	i1u2239_25
 45245   0054CC  516C               	movf	??_checkTxFifo& (0+255),w,b
 45246   0054CE  010F               	movlb	15	; () banked
 45247   0054D0  6F22               	movwf	34,b	;volatile
 45248                           
 45249                           ; BSR set to: 15
 45250                           ;../../VLCBlib_PIC/can18_ecan.c: 708:             TXB0D0 = mp->opc;
 45251   0054D2  0100               	movlb	0	; () banked
 45252   0054D4  EE20 F001          	lfsr	2,1
 45253   0054D8  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45254   0054DA  26D9               	addwf	fsr2l,f,c
 45255   0054DC  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45256   0054DE  22DA               	addwfc	fsr2h,f,c
 45257   0054E0  50DF               	movf	indf2,w,c
 45258   0054E2  010F               	movlb	15	; () banked
 45259   0054E4  6F26               	movwf	38,b	;volatile
 45260                           
 45261                           ; BSR set to: 15
 45262                           ;../../VLCBlib_PIC/can18_ecan.c: 709:             TXB0D1 = mp->bytes[0];
 45263   0054E6  0100               	movlb	0	; () banked
 45264   0054E8  EE20 F002          	lfsr	2,2
 45265   0054EC  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45266   0054EE  26D9               	addwf	fsr2l,f,c
 45267   0054F0  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45268   0054F2  22DA               	addwfc	fsr2h,f,c
 45269   0054F4  50DF               	movf	indf2,w,c
 45270   0054F6  010F               	movlb	15	; () banked
 45271   0054F8  6F27               	movwf	39,b	;volatile
 45272                           
 45273                           ; BSR set to: 15
 45274                           ;../../VLCBlib_PIC/can18_ecan.c: 710:             TXB0D2 = mp->bytes[1];
 45275   0054FA  0100               	movlb	0	; () banked
 45276   0054FC  EE20 F003          	lfsr	2,3
 45277   005500  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45278   005502  26D9               	addwf	fsr2l,f,c
 45279   005504  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45280   005506  22DA               	addwfc	fsr2h,f,c
 45281   005508  50DF               	movf	indf2,w,c
 45282   00550A  010F               	movlb	15	; () banked
 45283   00550C  6F28               	movwf	40,b	;volatile
 45284                           
 45285                           ; BSR set to: 15
 45286                           ;../../VLCBlib_PIC/can18_ecan.c: 711:             TXB0D3 = mp->bytes[2];
 45287   00550E  0100               	movlb	0	; () banked
 45288   005510  EE20 F004          	lfsr	2,4
 45289   005514  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45290   005516  26D9               	addwf	fsr2l,f,c
 45291   005518  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45292   00551A  22DA               	addwfc	fsr2h,f,c
 45293   00551C  50DF               	movf	indf2,w,c
 45294   00551E  010F               	movlb	15	; () banked
 45295   005520  6F29               	movwf	41,b	;volatile
 45296                           
 45297                           ; BSR set to: 15
 45298                           ;../../VLCBlib_PIC/can18_ecan.c: 712:             TXB0D4 = mp->bytes[3];
 45299   005522  0100               	movlb	0	; () banked
 45300   005524  EE20 F005          	lfsr	2,5
 45301   005528  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45302   00552A  26D9               	addwf	fsr2l,f,c
 45303   00552C  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45304   00552E  22DA               	addwfc	fsr2h,f,c
 45305   005530  50DF               	movf	indf2,w,c
 45306   005532  010F               	movlb	15	; () banked
 45307   005534  6F2A               	movwf	42,b	;volatile
 45308                           
 45309                           ; BSR set to: 15
 45310                           ;../../VLCBlib_PIC/can18_ecan.c: 713:             TXB0D5 = mp->bytes[4];
 45311   005536  0100               	movlb	0	; () banked
 45312   005538  EE20 F006          	lfsr	2,6
 45313   00553C  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45314   00553E  26D9               	addwf	fsr2l,f,c
 45315   005540  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45316   005542  22DA               	addwfc	fsr2h,f,c
 45317   005544  50DF               	movf	indf2,w,c
 45318   005546  010F               	movlb	15	; () banked
 45319   005548  6F2B               	movwf	43,b	;volatile
 45320                           
 45321                           ; BSR set to: 15
 45322                           ;../../VLCBlib_PIC/can18_ecan.c: 714:             TXB0D6 = mp->bytes[5];
 45323   00554A  0100               	movlb	0	; () banked
 45324   00554C  EE20 F007          	lfsr	2,7
 45325   005550  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45326   005552  26D9               	addwf	fsr2l,f,c
 45327   005554  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45328   005556  22DA               	addwfc	fsr2h,f,c
 45329   005558  50DF               	movf	indf2,w,c
 45330   00555A  010F               	movlb	15	; () banked
 45331   00555C  6F2C               	movwf	44,b	;volatile
 45332                           
 45333                           ; BSR set to: 15
 45334                           ;../../VLCBlib_PIC/can18_ecan.c: 715:             TXB0D7 = mp->bytes[6];
 45335   00555E  0100               	movlb	0	; () banked
 45336   005560  EE20 F008          	lfsr	2,8
 45337   005564  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45338   005566  26D9               	addwf	fsr2l,f,c
 45339   005568  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45340   00556A  22DA               	addwfc	fsr2h,f,c
 45341   00556C  50DF               	movf	indf2,w,c
 45342   00556E  010F               	movlb	15	; () banked
 45343   005570  6F2D               	movwf	45,b	;volatile
 45344                           
 45345                           ; BSR set to: 15
 45346                           ;../../VLCBlib_PIC/can18_ecan.c: 716:             TXB0DLC = mp->len;
 45347   005572  C073  FFD9         	movff	checkTxFifo@mp,fsr2l
 45348   005576  C074  FFDA         	movff	checkTxFifo@mp+1,fsr2h
 45349   00557A  50DF               	movf	indf2,w,c
 45350   00557C  6F25               	movwf	37,b	;volatile
 45351                           
 45352                           ; BSR set to: 15
 45353                           ;../../VLCBlib_PIC/can18_ecan.c: 718:             canTransmitTimeout.val = tickGet();
 45354   00557E  EC9D  F05C         	call	i1_tickGet	;wreg free
 45355   005582  C060  F015         	movff	?i1_tickGet,_canTransmitTimeout
 45356   005586  C061  F016         	movff	?i1_tickGet+1,_canTransmitTimeout+1
 45357   00558A  C062  F017         	movff	?i1_tickGet+2,_canTransmitTimeout+2
 45358   00558E  C063  F018         	movff	?i1_tickGet+3,_canTransmitTimeout+3
 45359                           
 45360                           ;../../VLCBlib_PIC/can18_ecan.c: 719:             canTransmitFailed = 0;
 45361   005592  0E00               	movlw	0
 45362   005594  0100               	movlb	0	; () banked
 45363   005596  6FB8               	movwf	_canTransmitFailed& (0+255),b
 45364                           
 45365                           ; BSR set to: 0
 45366                           ;../../VLCBlib_PIC/can18_ecan.c: 720:             TXB0CONbits.TXREQ = 1;
 45367   005598  010F               	movlb	15	; () banked
 45368   00559A  8720               	bsf	32,3,b	;volatile
 45369                           
 45370                           ; BSR set to: 15
 45371                           ;../../VLCBlib_PIC/can18_ecan.c: 721:             PIE5bits.TXBnIE = 1;
 45372   00559C  8876               	bsf	118,4,c	;volatile
 45373                           
 45374                           ; BSR set to: 15
 45375                           ;../../VLCBlib_PIC/can18_ecan.c: 722:             canDiagnostics[0x06].asUint++;
 45376   00559E  0101               	movlb	1	; () banked
 45377   0055A0  4B72               	infsnz	(_canDiagnostics+12)& (0+255),f,b
 45378   0055A2  2B73               	incf	(_canDiagnostics+13)& (0+255),f,b
 45379                           
 45380                           ; BSR set to: 1
 45381                           ;../../VLCBlib_PIC/can18_ecan.c: 725:             if (isEvent(mp->opc)) {
 45382   0055A4  0100               	movlb	0	; () banked
 45383   0055A6  EE20 F001          	lfsr	2,1
 45384   0055AA  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45385   0055AC  26D9               	addwf	fsr2l,f,c
 45386   0055AE  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45387   0055B0  22DA               	addwfc	fsr2h,f,c
 45388   0055B2  50DF               	movf	indf2,w,c
 45389   0055B4  ECC9  F062         	call	i1_isEvent
 45390   0055B8  0900               	iorlw	0
 45391   0055BA  B4D8               	btfsc	status,2,c
 45392   0055BC  0012               	return	
 45393                           
 45394                           ;../../VLCBlib_PIC/can18_ecan.c: 727:                 m = getNextWriteMessage(&rxQueue);
 45395   0055BE  0E26               	movlw	low _rxQueue
 45396   0055C0  0100               	movlb	0	; () banked
 45397   0055C2  6F60               	movwf	i1getNextWriteMessage@q& (0+255),b
 45398   0055C4  ECAF  F047         	call	i1_getNextWriteMessage	;wreg free
 45399   0055C8  C060  F071         	movff	?i1_getNextWriteMessage,checkTxFifo@m
 45400   0055CC  C061  F072         	movff	?i1_getNextWriteMessage+1,checkTxFifo@m+1
 45401                           
 45402                           ;../../VLCBlib_PIC/can18_ecan.c: 728:                 if (m == ((void*)0)) {
 45403   0055D0  0100               	movlb	0	; () banked
 45404   0055D2  5171               	movf	checkTxFifo@m& (0+255),w,b
 45405   0055D4  1172               	iorwf	(checkTxFifo@m+1)& (0+255),w,b
 45406   0055D6  A4D8               	btfss	status,2,c
 45407   0055D8  D006               	goto	i1l21411
 45408                           
 45409                           ; BSR set to: 0
 45410                           ;../../VLCBlib_PIC/can18_ecan.c: 730:                     canDiagnostics[0x08].asUint++;
 45411   0055DA  0101               	movlb	1	; () banked
 45412   0055DC  4B76               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 45413   0055DE  2B77               	incf	(_canDiagnostics+17)& (0+255),f,b
 45414                           
 45415                           ; BSR set to: 1
 45416                           ;../../VLCBlib_PIC/can18_ecan.c: 731:                     updateModuleErrorStatus();
 45417   0055E0  EC61  F064         	call	i1_updateModuleErrorStatus	;wreg free
 45418                           
 45419                           ;../../VLCBlib_PIC/can18_ecan.c: 733:                 } else {
 45420   0055E4  0012               	return	
 45421   0055E6                     i1l21411:
 45422                           
 45423                           ; BSR set to: 0
 45424                           ;../../VLCBlib_PIC/can18_ecan.c: 735:                     m->opc = mp->opc;
 45425   0055E6  EE20 F001          	lfsr	2,1
 45426   0055EA  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45427   0055EC  26D9               	addwf	fsr2l,f,c
 45428   0055EE  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45429   0055F0  22DA               	addwfc	fsr2h,f,c
 45430   0055F2  EE10 F001          	lfsr	1,1
 45431   0055F6  5171               	movf	checkTxFifo@m& (0+255),w,b
 45432   0055F8  26E1               	addwf	fsr1l,f,c
 45433   0055FA  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 45434   0055FC  22E2               	addwfc	fsr1h,f,c
 45435   0055FE  CFDF FFE7          	movff	indf2,indf1
 45436                           
 45437                           ; BSR set to: 0
 45438                           ;../../VLCBlib_PIC/can18_ecan.c: 736:                     m->len = mp->len;
 45439   005602  C073  FFD9         	movff	checkTxFifo@mp,fsr2l
 45440   005606  C074  FFDA         	movff	checkTxFifo@mp+1,fsr2h
 45441   00560A  C071  FFE1         	movff	checkTxFifo@m,fsr1l
 45442   00560E  C072  FFE2         	movff	checkTxFifo@m+1,fsr1h
 45443   005612  CFDF FFE7          	movff	indf2,indf1
 45444                           
 45445                           ; BSR set to: 0
 45446                           ;../../VLCBlib_PIC/can18_ecan.c: 737:                     m->bytes[0] = mp->bytes[0];
 45447   005616  EE20 F002          	lfsr	2,2
 45448   00561A  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45449   00561C  26D9               	addwf	fsr2l,f,c
 45450   00561E  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45451   005620  22DA               	addwfc	fsr2h,f,c
 45452   005622  EE10 F002          	lfsr	1,2
 45453   005626  5171               	movf	checkTxFifo@m& (0+255),w,b
 45454   005628  26E1               	addwf	fsr1l,f,c
 45455   00562A  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 45456   00562C  22E2               	addwfc	fsr1h,f,c
 45457   00562E  CFDF FFE7          	movff	indf2,indf1
 45458                           
 45459                           ; BSR set to: 0
 45460                           ;../../VLCBlib_PIC/can18_ecan.c: 738:                     m->bytes[1] = mp->bytes[1];
 45461   005632  EE20 F003          	lfsr	2,3
 45462   005636  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45463   005638  26D9               	addwf	fsr2l,f,c
 45464   00563A  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45465   00563C  22DA               	addwfc	fsr2h,f,c
 45466   00563E  EE10 F003          	lfsr	1,3
 45467   005642  5171               	movf	checkTxFifo@m& (0+255),w,b
 45468   005644  26E1               	addwf	fsr1l,f,c
 45469   005646  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 45470   005648  22E2               	addwfc	fsr1h,f,c
 45471   00564A  CFDF FFE7          	movff	indf2,indf1
 45472                           
 45473                           ; BSR set to: 0
 45474                           ;../../VLCBlib_PIC/can18_ecan.c: 739:                     m->bytes[2] = mp->bytes[2];
 45475   00564E  EE20 F004          	lfsr	2,4
 45476   005652  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45477   005654  26D9               	addwf	fsr2l,f,c
 45478   005656  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45479   005658  22DA               	addwfc	fsr2h,f,c
 45480   00565A  EE10 F004          	lfsr	1,4
 45481   00565E  5171               	movf	checkTxFifo@m& (0+255),w,b
 45482   005660  26E1               	addwf	fsr1l,f,c
 45483   005662  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 45484   005664  22E2               	addwfc	fsr1h,f,c
 45485   005666  CFDF FFE7          	movff	indf2,indf1
 45486                           
 45487                           ; BSR set to: 0
 45488                           ;../../VLCBlib_PIC/can18_ecan.c: 740:                     m->bytes[3] = mp->bytes[3];
 45489   00566A  EE20 F005          	lfsr	2,5
 45490   00566E  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45491   005670  26D9               	addwf	fsr2l,f,c
 45492   005672  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45493   005674  22DA               	addwfc	fsr2h,f,c
 45494   005676  EE10 F005          	lfsr	1,5
 45495   00567A  5171               	movf	checkTxFifo@m& (0+255),w,b
 45496   00567C  26E1               	addwf	fsr1l,f,c
 45497   00567E  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 45498   005680  22E2               	addwfc	fsr1h,f,c
 45499   005682  CFDF FFE7          	movff	indf2,indf1
 45500                           
 45501                           ; BSR set to: 0
 45502                           ;../../VLCBlib_PIC/can18_ecan.c: 741:                     m->bytes[4] = mp->bytes[4];
 45503   005686  EE20 F006          	lfsr	2,6
 45504   00568A  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45505   00568C  26D9               	addwf	fsr2l,f,c
 45506   00568E  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45507   005690  22DA               	addwfc	fsr2h,f,c
 45508   005692  EE10 F006          	lfsr	1,6
 45509   005696  5171               	movf	checkTxFifo@m& (0+255),w,b
 45510   005698  26E1               	addwf	fsr1l,f,c
 45511   00569A  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 45512   00569C  22E2               	addwfc	fsr1h,f,c
 45513   00569E  CFDF FFE7          	movff	indf2,indf1
 45514                           
 45515                           ; BSR set to: 0
 45516                           ;../../VLCBlib_PIC/can18_ecan.c: 742:                     m->bytes[5] = mp->bytes[5];
 45517   0056A2  EE20 F007          	lfsr	2,7
 45518   0056A6  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45519   0056A8  26D9               	addwf	fsr2l,f,c
 45520   0056AA  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45521   0056AC  22DA               	addwfc	fsr2h,f,c
 45522   0056AE  EE10 F007          	lfsr	1,7
 45523   0056B2  5171               	movf	checkTxFifo@m& (0+255),w,b
 45524   0056B4  26E1               	addwf	fsr1l,f,c
 45525   0056B6  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 45526   0056B8  22E2               	addwfc	fsr1h,f,c
 45527   0056BA  CFDF FFE7          	movff	indf2,indf1
 45528                           
 45529                           ; BSR set to: 0
 45530                           ;../../VLCBlib_PIC/can18_ecan.c: 743:                     m->bytes[6] = mp->bytes[6];
 45531   0056BE  EE20 F008          	lfsr	2,8
 45532   0056C2  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45533   0056C4  26D9               	addwf	fsr2l,f,c
 45534   0056C6  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45535   0056C8  22DA               	addwfc	fsr2h,f,c
 45536   0056CA  EE10 F008          	lfsr	1,8
 45537   0056CE  5171               	movf	checkTxFifo@m& (0+255),w,b
 45538   0056D0  26E1               	addwf	fsr1l,f,c
 45539   0056D2  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 45540   0056D4  22E2               	addwfc	fsr1h,f,c
 45541   0056D6  CFDF FFE7          	movff	indf2,indf1
 45542   0056DA  0012               	return	
 45543   0056DC                     i1l21429:
 45544                           
 45545                           ; BSR set to: 0
 45546                           ;../../VLCBlib_PIC/can18_ecan.c: 749:             canTransmitTimeout.val = 0;
 45547   0056DC  0E00               	movlw	0
 45548   0056DE  6E15               	movwf	_canTransmitTimeout^0,c
 45549   0056E0  0E00               	movlw	0
 45550   0056E2  6E16               	movwf	(_canTransmitTimeout+1)^0,c
 45551   0056E4  0E00               	movlw	0
 45552   0056E6  6E17               	movwf	(_canTransmitTimeout+2)^0,c
 45553   0056E8  0E00               	movlw	0
 45554   0056EA  6E18               	movwf	(_canTransmitTimeout+3)^0,c
 45555                           
 45556                           ;../../VLCBlib_PIC/can18_ecan.c: 750:             TXB0CON = 0;
 45557   0056EC  0E00               	movlw	0
 45558   0056EE  010F               	movlb	15	; () banked
 45559   0056F0  6F20               	movwf	32,b	;volatile
 45560                           
 45561                           ; BSR set to: 15
 45562                           ;../../VLCBlib_PIC/can18_ecan.c: 751:             PIR5bits.TXBnIF = 0;
 45563   0056F2  9877               	bcf	119,4,c	;volatile
 45564                           
 45565                           ; BSR set to: 15
 45566                           ;../../VLCBlib_PIC/can18_ecan.c: 752:             PIE5bits.TXBnIE = 0;
 45567   0056F4  9876               	bcf	118,4,c	;volatile
 45568   0056F6  0012               	return	
 45569   0056F8                     i1l2561:
 45570                           
 45571                           ; BSR set to: 15
 45572                           ;../../VLCBlib_PIC/can18_ecan.c: 756:         PIR5bits.TXBnIF = 0;
 45573   0056F8  9877               	bcf	119,4,c	;volatile
 45574                           
 45575                           ;../../VLCBlib_PIC/can18_ecan.c: 757:         PIE5bits.TXBnIE = 1;
 45576   0056FA  8876               	bsf	118,4,c	;volatile
 45577   0056FC  0012               	return		;funcret
 45578   0056FE                     __end_of_checkTxFifo:
 45579                           	callstack 0
 45580                           
 45581 ;; *************** function i1_tickGet *****************
 45582 ;; Defined at:
 45583 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 45584 ;; Parameters:    Size  Location     Type
 45585 ;;		None
 45586 ;; Auto vars:     Size  Location     Type
 45587 ;;  currentTime     4    6[BANK0 ] struct _TickValue
 45588 ;;  IntFlag1        1    5[BANK0 ] unsigned char 
 45589 ;;  IntFlag2        1    4[BANK0 ] unsigned char 
 45590 ;; Return value:  Size  Location     Type
 45591 ;;                  4    0[BANK0 ] unsigned long 
 45592 ;; Registers used:
 45593 ;;		wreg, status,2, status,0
 45594 ;; Tracked objects:
 45595 ;;		On entry : 0/0
 45596 ;;		On exit  : 0/0
 45597 ;;		Unchanged: 0/0
 45598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45599 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45600 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45602 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45603 ;;Total ram usage:       10 bytes
 45604 ;; Hardware stack levels used: 1
 45605 ;; Hardware stack levels required when called: 6
 45606 ;; This function calls:
 45607 ;;		Nothing
 45608 ;; This function is called by:
 45609 ;;		_checkTxFifo
 45610 ;;		_checkCANTimeout
 45611 ;; This function uses a non-reentrant model
 45612 ;;
 45613                           
 45614                           	psect	text205
 45615   00B93A                     __ptext205:
 45616                           	callstack 0
 45617   00B93A                     i1_tickGet:
 45618                           	callstack 3
 45619                           
 45620                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 45621                           
 45622                           ;incstack = 0
 45623   00B93A  0E00               	movlw	0
 45624   00B93C  0100               	movlb	0	; () banked
 45625   00B93E  6F68               	movwf	(i1tickGet@currentTime+2)& (0+255),b
 45626                           
 45627                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 45628   00B940  0E00               	movlw	0
 45629   00B942  6F69               	movwf	(i1tickGet@currentTime+3)& (0+255),b
 45630                           
 45631                           ; BSR set to: 0
 45632                           ;../../VLCBlib_PIC/ticktime.c: 169:     INTCONbits.TMR0IE = 0;
 45633   00B944  9AF2               	bcf	242,5,c	;volatile
 45634   00B946                     i1l20509:
 45635                           
 45636                           ; BSR set to: 0
 45637                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = INTCONbits.TMR0IF;
 45638   00B946  0E00               	movlw	0
 45639   00B948  B4F2               	btfsc	242,2,c	;volatile
 45640   00B94A  0E01               	movlw	1
 45641   00B94C  6F65               	movwf	i1tickGet@IntFlag1& (0+255),b
 45642                           
 45643                           ; BSR set to: 0
 45644                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 45645   00B94E  CFD6 F066          	movff	4054,i1tickGet@currentTime	;volatile
 45646                           
 45647                           ; BSR set to: 0
 45648                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 45649   00B952  CFD7 F067          	movff	4055,i1tickGet@currentTime+1	;volatile
 45650                           
 45651                           ; BSR set to: 0
 45652                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = INTCONbits.TMR0IF;
 45653   00B956  0E00               	movlw	0
 45654   00B958  B4F2               	btfsc	242,2,c	;volatile
 45655   00B95A  0E01               	movlw	1
 45656   00B95C  6F64               	movwf	i1tickGet@IntFlag2& (0+255),b
 45657                           
 45658                           ; BSR set to: 0
 45659                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 45660   00B95E  5164               	movf	i1tickGet@IntFlag2& (0+255),w,b
 45661   00B960  1965               	xorwf	i1tickGet@IntFlag1& (0+255),w,b
 45662   00B962  A4D8               	btfss	status,2,c
 45663   00B964  D7F0               	goto	i1l20509
 45664                           
 45665                           ; BSR set to: 0
 45666                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 45667   00B966  5165               	movf	i1tickGet@IntFlag1& (0+255),w,b
 45668   00B968  B4D8               	btfsc	status,2,c
 45669   00B96A  D005               	goto	i1l20529
 45670                           
 45671                           ; BSR set to: 0
 45672                           ;../../VLCBlib_PIC/ticktime.c: 178:         INTCONbits.TMR0IF = 0;
 45673   00B96C  94F2               	bcf	242,2,c	;volatile
 45674                           
 45675                           ; BSR set to: 0
 45676                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 45677   00B96E  2BC6               	incf	_timerExtension1& (0+255),f,b	;volatile
 45678                           
 45679                           ; BSR set to: 0
 45680                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 45681   00B970  51C6               	movf	_timerExtension1& (0+255),w,b	;volatile
 45682   00B972  B4D8               	btfsc	status,2,c
 45683                           
 45684                           ; BSR set to: 0
 45685                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 45686   00B974  2BC5               	incf	_timerExtension2& (0+255),f,b	;volatile
 45687   00B976                     i1l20529:
 45688                           
 45689                           ; BSR set to: 0
 45690                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 45691   00B976  51C6               	movf	_timerExtension1& (0+255),w,b	;volatile
 45692   00B978  2768               	addwf	(i1tickGet@currentTime+2)& (0+255),f,b
 45693                           
 45694                           ; BSR set to: 0
 45695                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 45696   00B97A  51C5               	movf	_timerExtension2& (0+255),w,b	;volatile
 45697   00B97C  2769               	addwf	(i1tickGet@currentTime+3)& (0+255),f,b
 45698                           
 45699                           ; BSR set to: 0
 45700                           ;../../VLCBlib_PIC/ticktime.c: 191:     INTCONbits.TMR0IE = 1;
 45701   00B97E  8AF2               	bsf	242,5,c	;volatile
 45702                           
 45703                           ; BSR set to: 0
 45704                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 45705   00B980  C066  F060         	movff	i1tickGet@currentTime,?i1_tickGet
 45706   00B984  C067  F061         	movff	i1tickGet@currentTime+1,?i1_tickGet+1
 45707   00B988  C068  F062         	movff	i1tickGet@currentTime+2,?i1_tickGet+2
 45708   00B98C  C069  F063         	movff	i1tickGet@currentTime+3,?i1_tickGet+3
 45709                           
 45710                           ; BSR set to: 0
 45711   00B990  0012               	return		;funcret
 45712   00B992                     __end_ofi1_tickGet:
 45713                           	callstack 0
 45714                           
 45715 ;; *************** function i1_pop *****************
 45716 ;; Defined at:
 45717 ;;		line 96 in file "../../VLCBlib_PIC/messageQueue.c"
 45718 ;; Parameters:    Size  Location     Type
 45719 ;;  q               2    0[BANK0 ] PTR struct MessageQueue
 45720 ;;		 -> txQueue(5), rxQueue(5), 
 45721 ;; Auto vars:     Size  Location     Type
 45722 ;;  ret             2    7[BANK0 ] PTR struct Message
 45723 ;;		 -> txBuffers(72), rxBuffers(288), 
 45724 ;; Return value:  Size  Location     Type
 45725 ;;                  2    0[BANK0 ] PTR struct Message
 45726 ;; Registers used:
 45727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 45728 ;; Tracked objects:
 45729 ;;		On entry : 0/0
 45730 ;;		On exit  : 0/0
 45731 ;;		Unchanged: 0/0
 45732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45733 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45734 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45735 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45736 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45737 ;;Total ram usage:        9 bytes
 45738 ;; Hardware stack levels used: 1
 45739 ;; Hardware stack levels required when called: 6
 45740 ;; This function calls:
 45741 ;;		Nothing
 45742 ;; This function is called by:
 45743 ;;		_checkTxFifo
 45744 ;; This function uses a non-reentrant model
 45745 ;;
 45746                           
 45747                           	psect	text206
 45748   009EE6                     __ptext206:
 45749                           	callstack 0
 45750   009EE6                     i1_pop:
 45751                           	callstack 3
 45752                           
 45753                           ;../../VLCBlib_PIC/messageQueue.c: 97:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 98:  if (q->writeIndex == q->readIndex) {
 45754                           
 45755                           ; BSR set to: 0
 45756                           ;incstack = 0
 45757   009EE6  0100               	movlb	0	; () banked
 45758   009EE8  EE20 F002          	lfsr	2,2
 45759   009EEC  5160               	movf	i1pop@q& (0+255),w,b
 45760   009EEE  26D9               	addwf	fsr2l,f,c
 45761   009EF0  5161               	movf	(i1pop@q+1)& (0+255),w,b
 45762   009EF2  22DA               	addwfc	fsr2h,f,c
 45763   009EF4  EE10 F003          	lfsr	1,3
 45764   009EF8  5160               	movf	i1pop@q& (0+255),w,b
 45765   009EFA  26E1               	addwf	fsr1l,f,c
 45766   009EFC  5161               	movf	(i1pop@q+1)& (0+255),w,b
 45767   009EFE  22E2               	addwfc	fsr1h,f,c
 45768   009F00  50DE               	movf	postinc2,w,c
 45769   009F02  18E6               	xorwf	postinc1,w,c
 45770   009F04  A4D8               	btfss	status,2,c
 45771   009F06  D005               	goto	i1l20571
 45772                           
 45773                           ; BSR set to: 0
 45774                           ;../../VLCBlib_PIC/messageQueue.c: 99:         return ((void*)0);
 45775   009F08  0E00               	movlw	0
 45776   009F0A  6F60               	movwf	?i1_pop& (0+255),b
 45777   009F0C  0E00               	movlw	0
 45778   009F0E  6F61               	movwf	(?i1_pop+1)& (0+255),b
 45779   009F10  0012               	return	
 45780   009F12                     i1l20571:
 45781                           
 45782                           ; BSR set to: 0
 45783                           ;../../VLCBlib_PIC/messageQueue.c: 101:  ret = &(q->messages[q->readIndex++]);
 45784   009F12  EE20 F002          	lfsr	2,2
 45785   009F16  5160               	movf	i1pop@q& (0+255),w,b
 45786   009F18  26D9               	addwf	fsr2l,f,c
 45787   009F1A  5161               	movf	(i1pop@q+1)& (0+255),w,b
 45788   009F1C  22DA               	addwfc	fsr2h,f,c
 45789   009F1E  50DF               	movf	indf2,w,c
 45790   009F20  6F62               	movwf	??i1_pop& (0+255),b
 45791   009F22  5162               	movf	??i1_pop& (0+255),w,b
 45792   009F24  0D09               	mullw	9
 45793   009F26  CFF3 F063          	movff	prodl,??i1_pop+1
 45794   009F2A  CFF4 F064          	movff	prodh,??i1_pop+2
 45795   009F2E  C060  FFD9         	movff	i1pop@q,fsr2l
 45796   009F32  C061  FFDA         	movff	i1pop@q+1,fsr2h
 45797   009F36  CFDE F065          	movff	postinc2,??i1_pop+3
 45798   009F3A  CFDD F066          	movff	postdec2,??i1_pop+4
 45799   009F3E  5163               	movf	(??i1_pop+1)& (0+255),w,b
 45800   009F40  2565               	addwf	(??i1_pop+3)& (0+255),w,b
 45801   009F42  6F67               	movwf	i1pop@ret& (0+255),b
 45802   009F44  5164               	movf	(??i1_pop+2)& (0+255),w,b
 45803   009F46  2166               	addwfc	(??i1_pop+4)& (0+255),w,b
 45804   009F48  6F68               	movwf	(i1pop@ret+1)& (0+255),b
 45805                           
 45806                           ; BSR set to: 0
 45807   009F4A  EE20 F002          	lfsr	2,2
 45808   009F4E  5160               	movf	i1pop@q& (0+255),w,b
 45809   009F50  26D9               	addwf	fsr2l,f,c
 45810   009F52  5161               	movf	(i1pop@q+1)& (0+255),w,b
 45811   009F54  22DA               	addwfc	fsr2h,f,c
 45812   009F56  2ADF               	incf	indf2,f,c
 45813                           
 45814                           ; BSR set to: 0
 45815                           ;../../VLCBlib_PIC/messageQueue.c: 102:  if (q->readIndex >= q->size) q->readIndex = 0;
 45816   009F58  EE20 F004          	lfsr	2,4
 45817   009F5C  5160               	movf	i1pop@q& (0+255),w,b
 45818   009F5E  26D9               	addwf	fsr2l,f,c
 45819   009F60  5161               	movf	(i1pop@q+1)& (0+255),w,b
 45820   009F62  22DA               	addwfc	fsr2h,f,c
 45821   009F64  EE10 F002          	lfsr	1,2
 45822   009F68  5160               	movf	i1pop@q& (0+255),w,b
 45823   009F6A  26E1               	addwf	fsr1l,f,c
 45824   009F6C  5161               	movf	(i1pop@q+1)& (0+255),w,b
 45825   009F6E  22E2               	addwfc	fsr1h,f,c
 45826   009F70  50DE               	movf	postinc2,w,c
 45827   009F72  5CE6               	subwf	postinc1,w,c
 45828   009F74  A0D8               	btfss	status,0,c
 45829   009F76  D007               	goto	i1l20579
 45830                           
 45831                           ; BSR set to: 0
 45832   009F78  EE20 F002          	lfsr	2,2
 45833   009F7C  5160               	movf	i1pop@q& (0+255),w,b
 45834   009F7E  26D9               	addwf	fsr2l,f,c
 45835   009F80  5161               	movf	(i1pop@q+1)& (0+255),w,b
 45836   009F82  22DA               	addwfc	fsr2h,f,c
 45837   009F84  6ADF               	clrf	indf2,c
 45838   009F86                     i1l20579:
 45839                           
 45840                           ; BSR set to: 0
 45841                           ;../../VLCBlib_PIC/messageQueue.c: 103:  return ret;
 45842   009F86  C067  F060         	movff	i1pop@ret,?i1_pop
 45843   009F8A  C068  F061         	movff	i1pop@ret+1,?i1_pop+1
 45844                           
 45845                           ; BSR set to: 0
 45846   009F8E  0012               	return		;funcret
 45847   009F90                     __end_ofi1_pop:
 45848                           	callstack 0
 45849                           
 45850 ;; *************** function i1_isEvent *****************
 45851 ;; Defined at:
 45852 ;;		line 1118 in file "../../VLCBlib_PIC/vlcb.c"
 45853 ;; Parameters:    Size  Location     Type
 45854 ;;  opc             1    wreg     unsigned char 
 45855 ;; Auto vars:     Size  Location     Type
 45856 ;;  opc             1    1[BANK0 ] unsigned char 
 45857 ;; Return value:  Size  Location     Type
 45858 ;;                  1    wreg      enum E12766
 45859 ;; Registers used:
 45860 ;;		wreg, status,2, status,0
 45861 ;; Tracked objects:
 45862 ;;		On entry : 0/0
 45863 ;;		On exit  : 0/0
 45864 ;;		Unchanged: 0/0
 45865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45867 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45869 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45870 ;;Total ram usage:        2 bytes
 45871 ;; Hardware stack levels used: 1
 45872 ;; Hardware stack levels required when called: 6
 45873 ;; This function calls:
 45874 ;;		Nothing
 45875 ;; This function is called by:
 45876 ;;		_checkTxFifo
 45877 ;; This function uses a non-reentrant model
 45878 ;;
 45879                           
 45880                           	psect	text207
 45881   00C592                     __ptext207:
 45882                           	callstack 0
 45883   00C592                     i1_isEvent:
 45884                           	callstack 3
 45885                           
 45886                           ; BSR set to: 0
 45887                           ;incstack = 0
 45888                           ;i1isEvent@opc stored from wreg
 45889   00C592  0100               	movlb	0	; () banked
 45890   00C594  6F61               	movwf	i1isEvent@opc& (0+255),b
 45891                           
 45892                           ;../../VLCBlib_PIC/vlcb.c: 1119:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 45893   00C596  0E00               	movlw	0
 45894   00C598  0100               	movlb	0	; () banked
 45895   00C59A  6F60               	movwf	i1_isEvent$4896& (0+255),b
 45896                           
 45897                           ; BSR set to: 0
 45898   00C59C  5161               	movf	i1isEvent@opc& (0+255),w,b
 45899   00C59E  0B90               	andlw	144
 45900   00C5A0  0A90               	xorlw	144
 45901   00C5A2  A4D8               	btfss	status,2,c
 45902   00C5A4  D008               	goto	i1l2069
 45903                           
 45904                           ; BSR set to: 0
 45905   00C5A6  5161               	movf	i1isEvent@opc& (0+255),w,b
 45906   00C5A8  0AFF               	xorlw	255
 45907   00C5AA  0B06               	andlw	6
 45908   00C5AC  0A06               	xorlw	6
 45909   00C5AE  A4D8               	btfss	status,2,c
 45910   00C5B0  D002               	goto	i1l2069
 45911                           
 45912                           ; BSR set to: 0
 45913   00C5B2  0E01               	movlw	1
 45914   00C5B4  6F60               	movwf	i1_isEvent$4896& (0+255),b
 45915   00C5B6                     i1l2069:
 45916                           
 45917                           ; BSR set to: 0
 45918   00C5B6  5160               	movf	i1_isEvent$4896& (0+255),w,b
 45919                           
 45920                           ; BSR set to: 0
 45921   00C5B8  0012               	return		;funcret
 45922   00C5BA                     __end_ofi1_isEvent:
 45923                           	callstack 0
 45924                           
 45925 ;; *************** function _canFillRxFifo *****************
 45926 ;; Defined at:
 45927 ;;		line 848 in file "../../VLCBlib_PIC/can18_ecan.c"
 45928 ;; Parameters:    Size  Location     Type
 45929 ;;		None
 45930 ;; Auto vars:     Size  Location     Type
 45931 ;;  ptr             2   14[BANK0 ] PTR unsigned char 
 45932 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 45933 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 45934 ;;		 -> NULL(0), 
 45935 ;;  m               2   12[BANK0 ] PTR struct Message
 45936 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 45937 ;;  hiIndex         1    0        unsigned char 
 45938 ;; Return value:  Size  Location     Type
 45939 ;;                  1    wreg      void 
 45940 ;; Registers used:
 45941 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45942 ;; Tracked objects:
 45943 ;;		On entry : 0/0
 45944 ;;		On exit  : 0/0
 45945 ;;		Unchanged: 0/0
 45946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45948 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45950 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45951 ;;Total ram usage:        4 bytes
 45952 ;; Hardware stack levels used: 1
 45953 ;; Hardware stack levels required when called: 7
 45954 ;; This function calls:
 45955 ;;		i1_getBufferPointer
 45956 ;;		i1_getNextWriteMessage
 45957 ;;		i1_updateModuleErrorStatus
 45958 ;; This function is called by:
 45959 ;;		_canIsr
 45960 ;; This function uses a non-reentrant model
 45961 ;;
 45962                           
 45963                           	psect	text208
 45964   0074A0                     __ptext208:
 45965                           	callstack 0
 45966   0074A0                     _canFillRxFifo:
 45967                           	callstack 3
 45968                           
 45969                           ;../../VLCBlib_PIC/can18_ecan.c: 849:     uint8_t *ptr;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          850:     uint8_t hiIndex;;../../VLCBlib_PIC/can18_ecan.c: 851:     Message * m;;../../VL
      +                          CBlib_PIC/can18_ecan.c: 853:     while (COMSTATbits.NOT_FIFOEMPTY) {
 45970                           
 45971                           ; BSR set to: 0
 45972                           ;incstack = 0
 45973   0074A0  D0B4               	goto	i1l22649
 45974   0074A2                     i1l22611:
 45975                           
 45976                           ;../../VLCBlib_PIC/can18_ecan.c: 854:         ptr = getBufferPointer(CANCON & 0x07U);
 45977   0074A2  506F               	movf	111,w,c	;volatile
 45978   0074A4  0B07               	andlw	7
 45979   0074A6  EC3C  F052         	call	i1_getBufferPointer
 45980   0074AA  C060  F06E         	movff	?i1_getBufferPointer,canFillRxFifo@ptr
 45981   0074AE  C061  F06F         	movff	?i1_getBufferPointer+1,canFillRxFifo@ptr+1
 45982                           
 45983                           ;../../VLCBlib_PIC/can18_ecan.c: 855:         PIR5bits.RXBnIF = 0;
 45984   0074B2  9277               	bcf	119,1,c	;volatile
 45985                           
 45986                           ;../../VLCBlib_PIC/can18_ecan.c: 856:         if (COMSTATbits.RXB1OVFL) {
 45987   0074B4  BC71               	btfsc	113,6,c	;volatile
 45988                           
 45989                           ;../../VLCBlib_PIC/can18_ecan.c: 857:             COMSTATbits.RXB1OVFL = 0;
 45990   0074B6  9C71               	bcf	113,6,c	;volatile
 45991                           
 45992                           ;../../VLCBlib_PIC/can18_ecan.c: 859:         if ((ptr[2] & 0x08) == 0) {
 45993   0074B8  0100               	movlb	0	; () banked
 45994   0074BA  EE20 F002          	lfsr	2,2
 45995   0074BE  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 45996   0074C0  26D9               	addwf	fsr2l,f,c
 45997   0074C2  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 45998   0074C4  22DA               	addwfc	fsr2h,f,c
 45999   0074C6  B6DF               	btfsc	indf2,3,c
 46000   0074C8  D093               	goto	i1l22639
 46001                           
 46002                           ; BSR set to: 0
 46003                           ;../../VLCBlib_PIC/can18_ecan.c: 862:             m = getNextWriteMessage(&rxQueue);
 46004   0074CA  0E26               	movlw	low _rxQueue
 46005   0074CC  6F60               	movwf	i1getNextWriteMessage@q& (0+255),b
 46006   0074CE  ECAF  F047         	call	i1_getNextWriteMessage	;wreg free
 46007   0074D2  C060  F06C         	movff	?i1_getNextWriteMessage,canFillRxFifo@m
 46008   0074D6  C061  F06D         	movff	?i1_getNextWriteMessage+1,canFillRxFifo@m+1
 46009                           
 46010                           ;../../VLCBlib_PIC/can18_ecan.c: 863:             if (m == ((void*)0)) {
 46011   0074DA  0100               	movlb	0	; () banked
 46012   0074DC  516C               	movf	canFillRxFifo@m& (0+255),w,b
 46013   0074DE  116D               	iorwf	(canFillRxFifo@m+1)& (0+255),w,b
 46014   0074E0  A4D8               	btfss	status,2,c
 46015   0074E2  D009               	goto	i1l22635
 46016                           
 46017                           ; BSR set to: 0
 46018                           ;../../VLCBlib_PIC/can18_ecan.c: 865:                 canDiagnostics[0x08].asUint++;
 46019   0074E4  0101               	movlb	1	; () banked
 46020   0074E6  4B76               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 46021   0074E8  2B77               	incf	(_canDiagnostics+17)& (0+255),f,b
 46022                           
 46023                           ; BSR set to: 1
 46024                           ;../../VLCBlib_PIC/can18_ecan.c: 866:                 updateModuleErrorStatus();
 46025   0074EA  EC61  F064         	call	i1_updateModuleErrorStatus	;wreg free
 46026                           
 46027                           ;../../VLCBlib_PIC/can18_ecan.c: 869:                 if (PIR5bits.IRXIF) {
 46028   0074EE  AE77               	btfss	119,7,c	;volatile
 46029   0074F0  0012               	return	
 46030                           
 46031                           ;../../VLCBlib_PIC/can18_ecan.c: 870:                     PIR5bits.IRXIF = 0;
 46032   0074F2  9E77               	bcf	119,7,c	;volatile
 46033   0074F4  0012               	return	
 46034   0074F6                     i1l22635:
 46035                           
 46036                           ; BSR set to: 0
 46037                           ;../../VLCBlib_PIC/can18_ecan.c: 875:                 m->opc = ptr[6];
 46038   0074F6  EE20 F006          	lfsr	2,6
 46039   0074FA  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 46040   0074FC  26D9               	addwf	fsr2l,f,c
 46041   0074FE  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 46042   007500  22DA               	addwfc	fsr2h,f,c
 46043   007502  EE10 F001          	lfsr	1,1
 46044   007506  516C               	movf	canFillRxFifo@m& (0+255),w,b
 46045   007508  26E1               	addwf	fsr1l,f,c
 46046   00750A  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 46047   00750C  22E2               	addwfc	fsr1h,f,c
 46048   00750E  CFDF FFE7          	movff	indf2,indf1
 46049                           
 46050                           ;../../VLCBlib_PIC/can18_ecan.c: 876:                 m->bytes[0] = ptr[7];
 46051   007512  EE20 F007          	lfsr	2,7
 46052   007516  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 46053   007518  26D9               	addwf	fsr2l,f,c
 46054   00751A  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 46055   00751C  22DA               	addwfc	fsr2h,f,c
 46056   00751E  EE10 F002          	lfsr	1,2
 46057   007522  516C               	movf	canFillRxFifo@m& (0+255),w,b
 46058   007524  26E1               	addwf	fsr1l,f,c
 46059   007526  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 46060   007528  22E2               	addwfc	fsr1h,f,c
 46061   00752A  CFDF FFE7          	movff	indf2,indf1
 46062                           
 46063                           ;../../VLCBlib_PIC/can18_ecan.c: 877:                 m->bytes[1] = ptr[8];
 46064   00752E  EE20 F008          	lfsr	2,8
 46065   007532  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 46066   007534  26D9               	addwf	fsr2l,f,c
 46067   007536  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 46068   007538  22DA               	addwfc	fsr2h,f,c
 46069   00753A  EE10 F003          	lfsr	1,3
 46070   00753E  516C               	movf	canFillRxFifo@m& (0+255),w,b
 46071   007540  26E1               	addwf	fsr1l,f,c
 46072   007542  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 46073   007544  22E2               	addwfc	fsr1h,f,c
 46074   007546  CFDF FFE7          	movff	indf2,indf1
 46075                           
 46076                           ;../../VLCBlib_PIC/can18_ecan.c: 878:                 m->bytes[2] = ptr[9];
 46077   00754A  EE20 F009          	lfsr	2,9
 46078   00754E  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 46079   007550  26D9               	addwf	fsr2l,f,c
 46080   007552  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 46081   007554  22DA               	addwfc	fsr2h,f,c
 46082   007556  EE10 F004          	lfsr	1,4
 46083   00755A  516C               	movf	canFillRxFifo@m& (0+255),w,b
 46084   00755C  26E1               	addwf	fsr1l,f,c
 46085   00755E  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 46086   007560  22E2               	addwfc	fsr1h,f,c
 46087   007562  CFDF FFE7          	movff	indf2,indf1
 46088                           
 46089                           ;../../VLCBlib_PIC/can18_ecan.c: 879:                 m->bytes[3] = ptr[10];
 46090   007566  EE20 F00A          	lfsr	2,10
 46091   00756A  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 46092   00756C  26D9               	addwf	fsr2l,f,c
 46093   00756E  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 46094   007570  22DA               	addwfc	fsr2h,f,c
 46095   007572  EE10 F005          	lfsr	1,5
 46096   007576  516C               	movf	canFillRxFifo@m& (0+255),w,b
 46097   007578  26E1               	addwf	fsr1l,f,c
 46098   00757A  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 46099   00757C  22E2               	addwfc	fsr1h,f,c
 46100   00757E  CFDF FFE7          	movff	indf2,indf1
 46101                           
 46102                           ;../../VLCBlib_PIC/can18_ecan.c: 880:                 m->bytes[4] = ptr[11];
 46103   007582  EE20 F00B          	lfsr	2,11
 46104   007586  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 46105   007588  26D9               	addwf	fsr2l,f,c
 46106   00758A  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 46107   00758C  22DA               	addwfc	fsr2h,f,c
 46108   00758E  EE10 F006          	lfsr	1,6
 46109   007592  516C               	movf	canFillRxFifo@m& (0+255),w,b
 46110   007594  26E1               	addwf	fsr1l,f,c
 46111   007596  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 46112   007598  22E2               	addwfc	fsr1h,f,c
 46113   00759A  CFDF FFE7          	movff	indf2,indf1
 46114                           
 46115                           ;../../VLCBlib_PIC/can18_ecan.c: 881:                 m->bytes[5] = ptr[12];
 46116   00759E  EE20 F00C          	lfsr	2,12
 46117   0075A2  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 46118   0075A4  26D9               	addwf	fsr2l,f,c
 46119   0075A6  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 46120   0075A8  22DA               	addwfc	fsr2h,f,c
 46121   0075AA  EE10 F007          	lfsr	1,7
 46122   0075AE  516C               	movf	canFillRxFifo@m& (0+255),w,b
 46123   0075B0  26E1               	addwf	fsr1l,f,c
 46124   0075B2  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 46125   0075B4  22E2               	addwfc	fsr1h,f,c
 46126   0075B6  CFDF FFE7          	movff	indf2,indf1
 46127                           
 46128                           ;../../VLCBlib_PIC/can18_ecan.c: 882:                 m->bytes[6] = ptr[13];
 46129   0075BA  EE20 F00D          	lfsr	2,13
 46130   0075BE  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 46131   0075C0  26D9               	addwf	fsr2l,f,c
 46132   0075C2  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 46133   0075C4  22DA               	addwfc	fsr2h,f,c
 46134   0075C6  EE10 F008          	lfsr	1,8
 46135   0075CA  516C               	movf	canFillRxFifo@m& (0+255),w,b
 46136   0075CC  26E1               	addwf	fsr1l,f,c
 46137   0075CE  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 46138   0075D0  22E2               	addwfc	fsr1h,f,c
 46139   0075D2  CFDF FFE7          	movff	indf2,indf1
 46140                           
 46141                           ; BSR set to: 0
 46142                           ;../../VLCBlib_PIC/can18_ecan.c: 883:                 m->len = ptr[5]&0xF;
 46143   0075D6  EE20 F005          	lfsr	2,5
 46144   0075DA  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 46145   0075DC  26D9               	addwf	fsr2l,f,c
 46146   0075DE  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 46147   0075E0  22DA               	addwfc	fsr2h,f,c
 46148   0075E2  50DF               	movf	indf2,w,c
 46149   0075E4  0B0F               	andlw	15
 46150   0075E6  C06C  FFD9         	movff	canFillRxFifo@m,fsr2l
 46151   0075EA  C06D  FFDA         	movff	canFillRxFifo@m+1,fsr2h
 46152   0075EE  6EDF               	movwf	indf2,c
 46153   0075F0                     i1l22639:
 46154                           
 46155                           ; BSR set to: 0
 46156                           ;../../VLCBlib_PIC/can18_ecan.c: 887:         if (PIR5bits.IRXIF) {
 46157   0075F0  AE77               	btfss	119,7,c	;volatile
 46158   0075F2  D004               	goto	i1l22645
 46159                           
 46160                           ; BSR set to: 0
 46161                           ;../../VLCBlib_PIC/can18_ecan.c: 889:             canDiagnostics[0x01].asUint++;
 46162   0075F4  0101               	movlb	1	; () banked
 46163   0075F6  4B68               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 46164   0075F8  2B69               	incf	(_canDiagnostics+3)& (0+255),f,b
 46165                           
 46166                           ; BSR set to: 1
 46167                           ;../../VLCBlib_PIC/can18_ecan.c: 891:             PIR5bits.IRXIF = 0;
 46168   0075FA  9E77               	bcf	119,7,c	;volatile
 46169   0075FC                     i1l22645:
 46170                           
 46171                           ;../../VLCBlib_PIC/can18_ecan.c: 894:         ptr[0] &= 0x7f;
 46172   0075FC  C06E  FFD9         	movff	canFillRxFifo@ptr,fsr2l
 46173   007600  C06F  FFDA         	movff	canFillRxFifo@ptr+1,fsr2h
 46174   007604  0E7F               	movlw	127
 46175   007606  16DF               	andwf	indf2,f,c
 46176                           
 46177                           ;../../VLCBlib_PIC/can18_ecan.c: 895:         PIR5bits.FIFOWMIF = 0;
 46178   007608  9077               	bcf	119,0,c	;volatile
 46179   00760A                     i1l22649:
 46180                           
 46181                           ;../../VLCBlib_PIC/can18_ecan.c: 853:     while (COMSTATbits.NOT_FIFOEMPTY) {
 46182   00760A  AE71               	btfss	113,7,c	;volatile
 46183   00760C  0012               	return	
 46184   00760E  D749               	goto	i1l22611
 46185   007610                     __end_of_canFillRxFifo:
 46186                           	callstack 0
 46187                           
 46188 ;; *************** function i1_updateModuleErrorStatus *****************
 46189 ;; Defined at:
 46190 ;;		line 617 in file "../../VLCBlib_PIC/mns.c"
 46191 ;; Parameters:    Size  Location     Type
 46192 ;;		None
 46193 ;; Auto vars:     Size  Location     Type
 46194 ;;		None
 46195 ;; Return value:  Size  Location     Type
 46196 ;;                  1    wreg      void 
 46197 ;; Registers used:
 46198 ;;		wreg, status,2, status,0
 46199 ;; Tracked objects:
 46200 ;;		On entry : 0/0
 46201 ;;		On exit  : 0/0
 46202 ;;		Unchanged: 0/0
 46203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46208 ;;Total ram usage:        0 bytes
 46209 ;; Hardware stack levels used: 1
 46210 ;; Hardware stack levels required when called: 6
 46211 ;; This function calls:
 46212 ;;		Nothing
 46213 ;; This function is called by:
 46214 ;;		_checkTxFifo
 46215 ;;		_checkCANTimeout
 46216 ;;		_canTxError
 46217 ;;		_canFillRxFifo
 46218 ;; This function uses a non-reentrant model
 46219 ;;
 46220                           
 46221                           	psect	text209
 46222   00C8C2                     __ptext209:
 46223                           	callstack 0
 46224   00C8C2                     i1_updateModuleErrorStatus:
 46225                           	callstack 3
 46226                           
 46227                           ;../../VLCBlib_PIC/mns.c: 618:     if (mnsDiagnostics[0x01].asBytes.lo < 0xFF) {
 46228                           
 46229                           ;incstack = 0
 46230   00C8C2  0101               	movlb	1	; () banked
 46231   00C8C4  298E               	incf	(_mnsDiagnostics+2)& (0+255),w,b
 46232   00C8C6  B4D8               	btfsc	status,2,c
 46233   00C8C8  0012               	return	
 46234                           
 46235                           ; BSR set to: 1
 46236                           ;../../VLCBlib_PIC/mns.c: 619:         mnsDiagnostics[0x01].asBytes.lo++;
 46237   00C8CA  2B8E               	incf	(_mnsDiagnostics+2)& (0+255),f,b
 46238                           
 46239                           ; BSR set to: 1
 46240   00C8CC  0012               	return		;funcret
 46241   00C8CE                     __end_ofi1_updateModuleErrorStatus:
 46242                           	callstack 0
 46243                           
 46244 ;; *************** function i1_getNextWriteMessage *****************
 46245 ;; Defined at:
 46246 ;;		line 80 in file "../../VLCBlib_PIC/messageQueue.c"
 46247 ;; Parameters:    Size  Location     Type
 46248 ;;  q               1    0[BANK0 ] PTR struct MessageQueue
 46249 ;;		 -> rxQueue(5), 
 46250 ;; Auto vars:     Size  Location     Type
 46251 ;;  wr              1   11[BANK0 ] unsigned char 
 46252 ;; Return value:  Size  Location     Type
 46253 ;;                  2    0[BANK0 ] PTR struct Message
 46254 ;; Registers used:
 46255 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 46256 ;; Tracked objects:
 46257 ;;		On entry : 0/0
 46258 ;;		On exit  : 0/0
 46259 ;;		Unchanged: 0/0
 46260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46261 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46262 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46263 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46264 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46265 ;;Total ram usage:       12 bytes
 46266 ;; Hardware stack levels used: 1
 46267 ;; Hardware stack levels required when called: 6
 46268 ;; This function calls:
 46269 ;;		Nothing
 46270 ;; This function is called by:
 46271 ;;		_checkTxFifo
 46272 ;;		_canFillRxFifo
 46273 ;; This function uses a non-reentrant model
 46274 ;;
 46275                           
 46276                           	psect	text210
 46277   008F5E                     __ptext210:
 46278                           	callstack 0
 46279   008F5E                     i1_getNextWriteMessage:
 46280                           	callstack 3
 46281                           
 46282                           ; BSR set to: 1
 46283                           ;incstack = 0
 46284   008F5E  0100               	movlb	0	; () banked
 46285   008F60  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 46286   008F62  6ED9               	movwf	fsr2l,c
 46287   008F64  6ADA               	clrf	fsr2h,c
 46288   008F66  0E02               	movlw	2
 46289   008F68  26D9               	addwf	fsr2l,f,c
 46290   008F6A  50DF               	movf	indf2,w,c
 46291   008F6C  6F62               	movwf	??i1_getNextWriteMessage& (0+255),b
 46292   008F6E  6B63               	clrf	(??i1_getNextWriteMessage+1)& (0+255),b
 46293   008F70  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 46294   008F72  6ED9               	movwf	fsr2l,c
 46295   008F74  6ADA               	clrf	fsr2h,c
 46296   008F76  0E04               	movlw	4
 46297   008F78  26D9               	addwf	fsr2l,f,c
 46298   008F7A  50DF               	movf	indf2,w,c
 46299   008F7C  6F64               	movwf	(??i1_getNextWriteMessage+2)& (0+255),b
 46300   008F7E  0EFF               	movlw	255
 46301   008F80  2564               	addwf	(??i1_getNextWriteMessage+2)& (0+255),w,b
 46302   008F82  6F65               	movwf	(??i1_getNextWriteMessage+3)& (0+255),b
 46303   008F84  6B66               	clrf	(??i1_getNextWriteMessage+4)& (0+255),b
 46304   008F86  0EFF               	movlw	255
 46305   008F88  2366               	addwfc	(??i1_getNextWriteMessage+4)& (0+255),f,b
 46306   008F8A  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 46307   008F8C  6ED9               	movwf	fsr2l,c
 46308   008F8E  6ADA               	clrf	fsr2h,c
 46309   008F90  0E03               	movlw	3
 46310   008F92  26D9               	addwf	fsr2l,f,c
 46311   008F94  50DF               	movf	indf2,w,c
 46312   008F96  6F67               	movwf	(??i1_getNextWriteMessage+5)& (0+255),b
 46313   008F98  6B68               	clrf	(??i1_getNextWriteMessage+6)& (0+255),b
 46314   008F9A  0E01               	movlw	1
 46315   008F9C  2767               	addwf	(??i1_getNextWriteMessage+5)& (0+255),f,b
 46316   008F9E  0E00               	movlw	0
 46317   008FA0  2368               	addwfc	(??i1_getNextWriteMessage+6)& (0+255),f,b
 46318   008FA2  5165               	movf	(??i1_getNextWriteMessage+3)& (0+255),w,b
 46319   008FA4  1567               	andwf	(??i1_getNextWriteMessage+5)& (0+255),w,b
 46320   008FA6  6F69               	movwf	(??i1_getNextWriteMessage+7)& (0+255),b
 46321   008FA8  5166               	movf	(??i1_getNextWriteMessage+4)& (0+255),w,b
 46322   008FAA  1568               	andwf	(??i1_getNextWriteMessage+6)& (0+255),w,b
 46323   008FAC  6F6A               	movwf	(??i1_getNextWriteMessage+8)& (0+255),b
 46324   008FAE  5162               	movf	??i1_getNextWriteMessage& (0+255),w,b
 46325   008FB0  1969               	xorwf	(??i1_getNextWriteMessage+7)& (0+255),w,b
 46326   008FB2  E109               	bnz	i1l20555
 46327   008FB4  5163               	movf	(??i1_getNextWriteMessage+1)& (0+255),w,b
 46328   008FB6  196A               	xorwf	(??i1_getNextWriteMessage+8)& (0+255),w,b
 46329   008FB8  A4D8               	btfss	status,2,c
 46330   008FBA  D005               	goto	i1l20555
 46331                           
 46332                           ; BSR set to: 0
 46333   008FBC  0E00               	movlw	0
 46334   008FBE  6F60               	movwf	?i1_getNextWriteMessage& (0+255),b
 46335   008FC0  0E00               	movlw	0
 46336   008FC2  6F61               	movwf	(?i1_getNextWriteMessage+1)& (0+255),b
 46337   008FC4  0012               	return	
 46338   008FC6                     i1l20555:
 46339                           
 46340                           ; BSR set to: 0
 46341   008FC6  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 46342   008FC8  6ED9               	movwf	fsr2l,c
 46343   008FCA  6ADA               	clrf	fsr2h,c
 46344   008FCC  0E03               	movlw	3
 46345   008FCE  26D9               	addwf	fsr2l,f,c
 46346   008FD0  50DF               	movf	indf2,w,c
 46347   008FD2  6F6B               	movwf	i1getNextWriteMessage@wr& (0+255),b
 46348   008FD4  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 46349   008FD6  6ED9               	movwf	fsr2l,c
 46350   008FD8  6ADA               	clrf	fsr2h,c
 46351   008FDA  0E03               	movlw	3
 46352   008FDC  26D9               	addwf	fsr2l,f,c
 46353   008FDE  2ADF               	incf	indf2,f,c
 46354                           
 46355                           ; BSR set to: 0
 46356   008FE0  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 46357   008FE2  6ED9               	movwf	fsr2l,c
 46358   008FE4  6ADA               	clrf	fsr2h,c
 46359   008FE6  0E04               	movlw	4
 46360   008FE8  26D9               	addwf	fsr2l,f,c
 46361   008FEA  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 46362   008FEC  6EE1               	movwf	fsr1l,c
 46363   008FEE  6AE2               	clrf	fsr1h,c
 46364   008FF0  0E03               	movlw	3
 46365   008FF2  26E1               	addwf	fsr1l,f,c
 46366   008FF4  50DE               	movf	postinc2,w,c
 46367   008FF6  5CE6               	subwf	postinc1,w,c
 46368   008FF8  A0D8               	btfss	status,0,c
 46369   008FFA  D006               	goto	i1l20561
 46370                           
 46371                           ; BSR set to: 0
 46372   008FFC  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 46373   008FFE  6ED9               	movwf	fsr2l,c
 46374   009000  6ADA               	clrf	fsr2h,c
 46375   009002  0E03               	movlw	3
 46376   009004  26D9               	addwf	fsr2l,f,c
 46377   009006  6ADF               	clrf	indf2,c
 46378   009008                     i1l20561:
 46379                           
 46380                           ; BSR set to: 0
 46381   009008  516B               	movf	i1getNextWriteMessage@wr& (0+255),w,b
 46382   00900A  0D09               	mullw	9
 46383   00900C  CFF3 F062          	movff	prodl,??i1_getNextWriteMessage
 46384   009010  CFF4 F063          	movff	prodh,??i1_getNextWriteMessage+1
 46385   009014  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 46386   009016  6ED9               	movwf	fsr2l,c
 46387   009018  6ADA               	clrf	fsr2h,c
 46388   00901A  CFDE F064          	movff	postinc2,??i1_getNextWriteMessage+2
 46389   00901E  CFDD F065          	movff	postdec2,??i1_getNextWriteMessage+3
 46390   009022  5162               	movf	??i1_getNextWriteMessage& (0+255),w,b
 46391   009024  2564               	addwf	(??i1_getNextWriteMessage+2)& (0+255),w,b
 46392   009026  6F60               	movwf	?i1_getNextWriteMessage& (0+255),b
 46393   009028  5163               	movf	(??i1_getNextWriteMessage+1)& (0+255),w,b
 46394   00902A  2165               	addwfc	(??i1_getNextWriteMessage+3)& (0+255),w,b
 46395   00902C  6F61               	movwf	(?i1_getNextWriteMessage+1)& (0+255),b
 46396                           
 46397                           ; BSR set to: 0
 46398   00902E  0012               	return		;funcret
 46399   009030                     __end_ofi1_getNextWriteMessage:
 46400                           	callstack 0
 46401                           
 46402 ;; *************** function i1_getBufferPointer *****************
 46403 ;; Defined at:
 46404 ;;		line 667 in file "../../VLCBlib_PIC/can18_ecan.c"
 46405 ;; Parameters:    Size  Location     Type
 46406 ;;  b               1    wreg     unsigned char 
 46407 ;; Auto vars:     Size  Location     Type
 46408 ;;  b               1    2[BANK0 ] unsigned char 
 46409 ;; Return value:  Size  Location     Type
 46410 ;;                  2    0[BANK0 ] PTR unsigned char 
 46411 ;; Registers used:
 46412 ;;		wreg, status,2, status,0
 46413 ;; Tracked objects:
 46414 ;;		On entry : 0/0
 46415 ;;		On exit  : 0/0
 46416 ;;		Unchanged: 0/0
 46417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46418 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46419 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46421 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46422 ;;Total ram usage:        3 bytes
 46423 ;; Hardware stack levels used: 1
 46424 ;; Hardware stack levels required when called: 6
 46425 ;; This function calls:
 46426 ;;		Nothing
 46427 ;; This function is called by:
 46428 ;;		_canFillRxFifo
 46429 ;; This function uses a non-reentrant model
 46430 ;;
 46431                           
 46432                           	psect	text211
 46433   00A478                     __ptext211:
 46434                           	callstack 0
 46435   00A478                     i1_getBufferPointer:
 46436                           	callstack 3
 46437                           
 46438                           ; BSR set to: 0
 46439                           ;incstack = 0
 46440                           ;i1getBufferPointer@b stored from wreg
 46441   00A478  0100               	movlb	0	; () banked
 46442   00A47A  6F62               	movwf	i1getBufferPointer@b& (0+255),b
 46443                           
 46444                           ;../../VLCBlib_PIC/can18_ecan.c: 668:     switch (b) {
 46445   00A47C  D02D               	goto	i1l21595
 46446   00A47E                     i1l21557:
 46447                           
 46448                           ; BSR set to: 0
 46449                           ;../../VLCBlib_PIC/can18_ecan.c: 670:             return (uint8_t*) & RXB0CON;
 46450   00A47E  0E60               	movlw	96
 46451   00A480  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46452   00A482  0E0F               	movlw	15
 46453   00A484  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46454   00A486  0012               	return	
 46455   00A488                     i1l21561:
 46456                           
 46457                           ; BSR set to: 0
 46458                           ;../../VLCBlib_PIC/can18_ecan.c: 672:             return (uint8_t*) & RXB1CON;
 46459   00A488  0E30               	movlw	48
 46460   00A48A  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46461   00A48C  0E0F               	movlw	15
 46462   00A48E  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46463   00A490  0012               	return	
 46464   00A492                     i1l21565:
 46465                           
 46466                           ; BSR set to: 0
 46467                           ;../../VLCBlib_PIC/can18_ecan.c: 674:             return (uint8_t*) & B0CON;
 46468   00A492  0E80               	movlw	128
 46469   00A494  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46470   00A496  0E0E               	movlw	14
 46471   00A498  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46472   00A49A  0012               	return	
 46473   00A49C                     i1l21569:
 46474                           
 46475                           ; BSR set to: 0
 46476                           ;../../VLCBlib_PIC/can18_ecan.c: 676:             return (uint8_t*) & B1CON;
 46477   00A49C  0E90               	movlw	144
 46478   00A49E  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46479   00A4A0  0E0E               	movlw	14
 46480   00A4A2  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46481   00A4A4  0012               	return	
 46482   00A4A6                     i1l21573:
 46483                           
 46484                           ; BSR set to: 0
 46485                           ;../../VLCBlib_PIC/can18_ecan.c: 678:             return (uint8_t*) & B2CON;
 46486   00A4A6  0EA0               	movlw	160
 46487   00A4A8  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46488   00A4AA  0E0E               	movlw	14
 46489   00A4AC  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46490   00A4AE  0012               	return	
 46491   00A4B0                     i1l21577:
 46492                           
 46493                           ; BSR set to: 0
 46494                           ;../../VLCBlib_PIC/can18_ecan.c: 680:             return (uint8_t*) & B3CON;
 46495   00A4B0  0EB0               	movlw	176
 46496   00A4B2  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46497   00A4B4  0E0E               	movlw	14
 46498   00A4B6  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46499   00A4B8  0012               	return	
 46500   00A4BA                     i1l21581:
 46501                           
 46502                           ; BSR set to: 0
 46503                           ;../../VLCBlib_PIC/can18_ecan.c: 682:             return (uint8_t*) & B4CON;
 46504   00A4BA  0EC0               	movlw	192
 46505   00A4BC  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46506   00A4BE  0E0E               	movlw	14
 46507   00A4C0  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46508   00A4C2  0012               	return	
 46509   00A4C4                     i1l21585:
 46510                           
 46511                           ; BSR set to: 0
 46512                           ;../../VLCBlib_PIC/can18_ecan.c: 684:             return (uint8_t*) & B5CON;
 46513   00A4C4  0ED0               	movlw	208
 46514   00A4C6  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46515   00A4C8  0E0E               	movlw	14
 46516   00A4CA  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46517   00A4CC  0012               	return	
 46518   00A4CE                     i1l21589:
 46519                           
 46520                           ; BSR set to: 0
 46521                           ;../../VLCBlib_PIC/can18_ecan.c: 686:             return ((void*)0);
 46522   00A4CE  0E00               	movlw	0
 46523   00A4D0  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46524   00A4D2  0E00               	movlw	0
 46525   00A4D4  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46526   00A4D6  0012               	return	
 46527   00A4D8                     i1l21595:
 46528   00A4D8  0100               	movlb	0	; () banked
 46529   00A4DA  5162               	movf	i1getBufferPointer@b& (0+255),w,b
 46530                           
 46531                           ; Switch size 1, requested type "simple"
 46532                           ; Number of cases is 8, Range of values is 0 to 7
 46533                           ; switch strategies available:
 46534                           ; Name         Instructions Cycles
 46535                           ; simple_byte           25    13 (average)
 46536                           ;	Chosen strategy is simple_byte
 46537   00A4DC  0A00               	xorlw	0	; case 0
 46538   00A4DE  B4D8               	btfsc	status,2,c
 46539   00A4E0  D7CE               	goto	i1l21557
 46540   00A4E2  0A01               	xorlw	1	; case 1
 46541   00A4E4  B4D8               	btfsc	status,2,c
 46542   00A4E6  D7D0               	goto	i1l21561
 46543   00A4E8  0A03               	xorlw	3	; case 2
 46544   00A4EA  B4D8               	btfsc	status,2,c
 46545   00A4EC  D7D2               	goto	i1l21565
 46546   00A4EE  0A01               	xorlw	1	; case 3
 46547   00A4F0  B4D8               	btfsc	status,2,c
 46548   00A4F2  D7D4               	goto	i1l21569
 46549   00A4F4  0A07               	xorlw	7	; case 4
 46550   00A4F6  B4D8               	btfsc	status,2,c
 46551   00A4F8  D7D6               	goto	i1l21573
 46552   00A4FA  0A01               	xorlw	1	; case 5
 46553   00A4FC  B4D8               	btfsc	status,2,c
 46554   00A4FE  D7D8               	goto	i1l21577
 46555   00A500  0A03               	xorlw	3	; case 6
 46556   00A502  B4D8               	btfsc	status,2,c
 46557   00A504  D7DA               	goto	i1l21581
 46558   00A506  0A01               	xorlw	1	; case 7
 46559   00A508  B4D8               	btfsc	status,2,c
 46560   00A50A  D7DC               	goto	i1l21585
 46561   00A50C  D7E0               	goto	i1l21589
 46562   00A50E                     __end_ofi1_getBufferPointer:
 46563                           	callstack 0
 46564                           
 46565 ;; *************** function _APP_lowIsr *****************
 46566 ;; Defined at:
 46567 ;;		line 708 in file "../main.c"
 46568 ;; Parameters:    Size  Location     Type
 46569 ;;		None
 46570 ;; Auto vars:     Size  Location     Type
 46571 ;;		None
 46572 ;; Return value:  Size  Location     Type
 46573 ;;                  1    wreg      void 
 46574 ;; Registers used:
 46575 ;;		None
 46576 ;; Tracked objects:
 46577 ;;		On entry : 0/0
 46578 ;;		On exit  : 0/0
 46579 ;;		Unchanged: 0/0
 46580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46585 ;;Total ram usage:        0 bytes
 46586 ;; Hardware stack levels used: 1
 46587 ;; Hardware stack levels required when called: 6
 46588 ;; This function calls:
 46589 ;;		Nothing
 46590 ;; This function is called by:
 46591 ;;		_lowIsr
 46592 ;; This function uses a non-reentrant model
 46593 ;;
 46594                           
 46595                           	psect	text212
 46596   00C932                     __ptext212:
 46597                           	callstack 0
 46598   00C932                     _APP_lowIsr:
 46599                           	callstack 5
 46600                           
 46601                           ; BSR set to: 0
 46602                           ;incstack = 0
 46603   00C932  0012               	return		;funcret
 46604   00C934                     __end_of_APP_lowIsr:
 46605                           	callstack 0
 46606                           
 46607                           	psect	intcode
 46608   000808                     __pintcode:
 46609                           	callstack 2
 46610   000808  EF99  F043         	goto	_isrHigh
 46611                           
 46612 ;; *************** function _highIsr *****************
 46613 ;; Defined at:
 46614 ;;		line 1057 in file "../../VLCBlib_PIC/vlcb.c"
 46615 ;; Parameters:    Size  Location     Type
 46616 ;;		None
 46617 ;; Auto vars:     Size  Location     Type
 46618 ;;  i               1   29[COMRAM] unsigned char 
 46619 ;; Return value:  Size  Location     Type
 46620 ;;                  1    wreg      void 
 46621 ;; Registers used:
 46622 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 46623 ;; Tracked objects:
 46624 ;;		On entry : 0/0
 46625 ;;		On exit  : 0/0
 46626 ;;		Unchanged: 0/0
 46627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46629 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46630 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46631 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46632 ;;Total ram usage:        5 bytes
 46633 ;; Hardware stack levels used: 1
 46634 ;; Hardware stack levels required when called: 4
 46635 ;; This function calls:
 46636 ;;		NULL
 46637 ;;		_APP_highIsr
 46638 ;;		i2_canIsr
 46639 ;; This function is called by:
 46640 ;;		_isrHigh
 46641 ;; This function uses a non-reentrant model
 46642 ;;
 46643                           
 46644                           	psect	text214
 46645   00936C                     __ptext214:
 46646                           	callstack 0
 46647   00936C                     _highIsr:
 46648                           	callstack 2
 46649                           
 46650                           ;../../VLCBlib_PIC/vlcb.c: 1058:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1060:     for 
      +                          (i=0; i<9; i++) {
 46651                           
 46652                           ;incstack = 0
 46653   00936C  0E00               	movlw	0
 46654   00936E  6E48               	movwf	highIsr@i^0,c
 46655   009370                     i2l25379:
 46656                           
 46657                           ;../../VLCBlib_PIC/vlcb.c: 1061:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->highIsr != ((void*)0))) {
 46658   009370  5048               	movf	highIsr@i^0,w,c
 46659   009372  0D02               	mullw	2
 46660   009374  0E69               	movlw	low _services
 46661   009376  24F3               	addwf	243,w,c
 46662   009378  6EF6               	movwf	tblptrl,c
 46663   00937A  0EEE               	movlw	high _services
 46664   00937C  20F4               	addwfc	244,w,c
 46665   00937E  6EF7               	movwf	tblptrh,c
 46666   009380                     	if	1	;There are 3 active tblptr bytes
 46667   009380  6AF8               	clrf	tblptru,c
 46668   009382  0E00               	movlw	low (__mediumconst shr (0+16))
 46669   009384  22F8               	addwfc	tblptru,f,c
 46670   009386                     	endif
 46671   009386  0009               	tblrd		*+
 46672   009388  50F5               	movf	tablat,w,c
 46673   00938A  0009               	tblrd		*+
 46674   00938C  10F5               	iorwf	tablat,w,c
 46675   00938E  B4D8               	btfsc	status,2,c
 46676   009390  D04B               	goto	i2u2797_49
 46677   009392  5048               	movf	highIsr@i^0,w,c
 46678   009394  0D02               	mullw	2
 46679   009396  0E69               	movlw	low _services
 46680   009398  24F3               	addwf	243,w,c
 46681   00939A  6EF6               	movwf	tblptrl,c
 46682   00939C  0EEE               	movlw	high _services
 46683   00939E  20F4               	addwfc	244,w,c
 46684   0093A0  6EF7               	movwf	tblptrh,c
 46685   0093A2                     	if	1	;There are 3 active tblptr bytes
 46686   0093A2  6AF8               	clrf	tblptru,c
 46687   0093A4  0E00               	movlw	low (__mediumconst shr (0+16))
 46688   0093A6  22F8               	addwfc	tblptru,f,c
 46689   0093A8                     	endif
 46690   0093A8  0009               	tblrd		*+
 46691   0093AA  CFF5 F044          	movff	tablat,??_highIsr
 46692   0093AE  0009               	tblrd		*+
 46693   0093B0  CFF5 F045          	movff	tablat,??_highIsr+1
 46694   0093B4  0E0A               	movlw	10
 46695   0093B6  2644               	addwf	??_highIsr^0,f,c
 46696   0093B8  0E00               	movlw	0
 46697   0093BA  2245               	addwfc	(??_highIsr+1)^0,f,c
 46698   0093BC  C044  FFF6         	movff	??_highIsr,tblptrl
 46699   0093C0  C045  FFF7         	movff	??_highIsr+1,tblptrh
 46700   0093C4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 46701   0093C4  6AF8               	clrf	tblptru,c
 46702   0093C6                     	endif
 46703   0093C6                     	if	0	;tblptru may be non-zero
 46704   0093C6                     	endif
 46705   0093C6  0009               	tblrd		*+
 46706   0093C8  50F5               	movf	tablat,w,c
 46707   0093CA  0009               	tblrd		*+
 46708   0093CC  10F5               	iorwf	tablat,w,c
 46709   0093CE  B4D8               	btfsc	status,2,c
 46710   0093D0  D02B               	goto	i2u2797_49
 46711                           
 46712                           ;../../VLCBlib_PIC/vlcb.c: 1062:             services[i]->highIsr();
 46713   0093D2  5048               	movf	highIsr@i^0,w,c
 46714   0093D4  0D02               	mullw	2
 46715   0093D6  0E69               	movlw	low _services
 46716   0093D8  24F3               	addwf	243,w,c
 46717   0093DA  6EF6               	movwf	tblptrl,c
 46718   0093DC  0EEE               	movlw	high _services
 46719   0093DE  20F4               	addwfc	244,w,c
 46720   0093E0  6EF7               	movwf	tblptrh,c
 46721   0093E2                     	if	1	;There are 3 active tblptr bytes
 46722   0093E2  6AF8               	clrf	tblptru,c
 46723   0093E4  0E00               	movlw	low (__mediumconst shr (0+16))
 46724   0093E6  22F8               	addwfc	tblptru,f,c
 46725   0093E8                     	endif
 46726   0093E8  0009               	tblrd		*+
 46727   0093EA  CFF5 F044          	movff	tablat,??_highIsr
 46728   0093EE  0009               	tblrd		*+
 46729   0093F0  CFF5 F045          	movff	tablat,??_highIsr+1
 46730   0093F4  0E0A               	movlw	10
 46731   0093F6  2644               	addwf	??_highIsr^0,f,c
 46732   0093F8  0E00               	movlw	0
 46733   0093FA  2245               	addwfc	(??_highIsr+1)^0,f,c
 46734   0093FC  C044  FFF6         	movff	??_highIsr,tblptrl
 46735   009400  C045  FFF7         	movff	??_highIsr+1,tblptrh
 46736   009404                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 46737   009404  6AF8               	clrf	tblptru,c
 46738   009406                     	endif
 46739   009406                     	if	0	;tblptru may be non-zero
 46740   009406                     	endif
 46741   009406  0009               	tblrd		*+
 46742   009408  CFF5 F046          	movff	tablat,??_highIsr+2
 46743   00940C  0009               	tblrd		*+
 46744   00940E  CFF5 F047          	movff	tablat,??_highIsr+3
 46745   009412  D801               	call	i2u2797_48
 46746   009414  D009               	goto	i2u2797_49
 46747   009416                     i2u2797_48:
 46748   009416  0005               	push	
 46749   009418  6EFA               	movwf	pclath,c
 46750   00941A  5046               	movf	(??_highIsr+2)^0,w,c
 46751   00941C  6EFD               	movwf	tosl,c
 46752   00941E  5047               	movf	(??_highIsr+3)^0,w,c
 46753   009420  6EFE               	movwf	tosh,c
 46754   009422  6AFF               	clrf	tosu,c
 46755   009424  50FA               	movf	pclath,w,c
 46756   009426  0012               	return		;indir
 46757   009428                     i2u2797_49:
 46758                           
 46759                           ;../../VLCBlib_PIC/vlcb.c: 1064:     }
 46760   009428  2A48               	incf	highIsr@i^0,f,c
 46761   00942A  0E08               	movlw	8
 46762   00942C  6448               	cpfsgt	highIsr@i^0,c
 46763   00942E  D7A0               	goto	i2l25379
 46764                           
 46765                           ;../../VLCBlib_PIC/vlcb.c: 1065:     APP_highIsr();
 46766   009430  EC1A  F064         	call	_APP_highIsr	;wreg free
 46767   009434  0012               	return		;funcret
 46768   009436                     __end_of_highIsr:
 46769                           	callstack 0
 46770                           
 46771 ;; *************** function i2_canIsr *****************
 46772 ;; Defined at:
 46773 ;;		line 402 in file "../../VLCBlib_PIC/can18_ecan.c"
 46774 ;; Parameters:    Size  Location     Type
 46775 ;;		None
 46776 ;; Auto vars:     Size  Location     Type
 46777 ;;		None
 46778 ;; Return value:  Size  Location     Type
 46779 ;;                  1    wreg      void 
 46780 ;; Registers used:
 46781 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46782 ;; Tracked objects:
 46783 ;;		On entry : 0/0
 46784 ;;		On exit  : 0/0
 46785 ;;		Unchanged: 0/0
 46786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46791 ;;Total ram usage:        0 bytes
 46792 ;; Hardware stack levels used: 1
 46793 ;; Hardware stack levels required when called: 3
 46794 ;; This function calls:
 46795 ;;		i2_canFillRxFifo
 46796 ;;		i2_canTxError
 46797 ;;		i2_checkCANTimeout
 46798 ;;		i2_checkTxFifo
 46799 ;; This function is called by:
 46800 ;;		_highIsr
 46801 ;;		_lowIsr
 46802 ;; This function uses a non-reentrant model
 46803 ;;
 46804                           
 46805                           	psect	text215
 46806   00C81C                     __ptext215:
 46807                           	callstack 0
 46808   00C81C                     i2_canIsr:
 46809                           	callstack 2
 46810                           
 46811                           ;../../VLCBlib_PIC/can18_ecan.c: 404:     if (PIR5bits.FIFOWMIF) {
 46812                           
 46813                           ;incstack = 0
 46814   00C81C  B077               	btfsc	119,0,c	;volatile
 46815                           
 46816                           ;../../VLCBlib_PIC/can18_ecan.c: 405:         canFillRxFifo();
 46817   00C81E  EC08  F03B         	call	i2_canFillRxFifo	;wreg free
 46818                           
 46819                           ;../../VLCBlib_PIC/can18_ecan.c: 407:     if (PIR5bits.ERRIF) {
 46820   00C822  BA77               	btfsc	119,5,c	;volatile
 46821                           
 46822                           ;../../VLCBlib_PIC/can18_ecan.c: 408:         canTxError();
 46823   00C824  ECD0  F05A         	call	i2_canTxError	;wreg free
 46824                           
 46825                           ;../../VLCBlib_PIC/can18_ecan.c: 410:     if (PIR5bits.TXBnIF) {
 46826   00C828  B877               	btfsc	119,4,c	;volatile
 46827                           
 46828                           ;../../VLCBlib_PIC/can18_ecan.c: 411:         checkTxFifo();
 46829   00C82A  EC28  F02E         	call	i2_checkTxFifo	;wreg free
 46830                           
 46831                           ;../../VLCBlib_PIC/can18_ecan.c: 413:     checkCANTimeout();
 46832                           
 46833                           ;../../VLCBlib_PIC/can18_ecan.c: 412:     }
 46834   00C82E  EC48  F05D         	call	i2_checkCANTimeout	;wreg free
 46835   00C832  0012               	return		;funcret
 46836   00C834                     __end_ofi2_canIsr:
 46837                           	callstack 0
 46838                           
 46839 ;; *************** function i2_checkCANTimeout *****************
 46840 ;; Defined at:
 46841 ;;		line 766 in file "../../VLCBlib_PIC/can18_ecan.c"
 46842 ;; Parameters:    Size  Location     Type
 46843 ;;		None
 46844 ;; Auto vars:     Size  Location     Type
 46845 ;;		None
 46846 ;; Return value:  Size  Location     Type
 46847 ;;                  1    wreg      void 
 46848 ;; Registers used:
 46849 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46850 ;; Tracked objects:
 46851 ;;		On entry : 0/0
 46852 ;;		On exit  : 0/0
 46853 ;;		Unchanged: 0/0
 46854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46857 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46858 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46859 ;;Total ram usage:        4 bytes
 46860 ;; Hardware stack levels used: 1
 46861 ;; Hardware stack levels required when called: 2
 46862 ;; This function calls:
 46863 ;;		i2_checkTxFifo
 46864 ;;		i2_tickGet
 46865 ;;		i2_updateModuleErrorStatus
 46866 ;; This function is called by:
 46867 ;;		i2_canIsr
 46868 ;; This function uses a non-reentrant model
 46869 ;;
 46870                           
 46871                           	psect	text216
 46872   00BA90                     __ptext216:
 46873                           	callstack 0
 46874   00BA90                     i2_checkCANTimeout:
 46875                           	callstack 2
 46876                           
 46877                           ;../../VLCBlib_PIC/can18_ecan.c: 767:     if (canTransmitTimeout.val != 0) {
 46878                           
 46879                           ;incstack = 0
 46880   00BA90  5015               	movf	_canTransmitTimeout^0,w,c
 46881   00BA92  1016               	iorwf	(_canTransmitTimeout+1)^0,w,c
 46882   00BA94  1017               	iorwf	(_canTransmitTimeout+2)^0,w,c
 46883   00BA96  1018               	iorwf	(_canTransmitTimeout+3)^0,w,c
 46884   00BA98  B4D8               	btfsc	status,2,c
 46885   00BA9A  0012               	return	
 46886                           
 46887                           ;../../VLCBlib_PIC/can18_ecan.c: 768:         if ((tickGet() - canTransmitTimeout.val) >
      +                           62500) {
 46888   00BA9C  ECEC  F05B         	call	i2_tickGet	;wreg free
 46889   00BAA0  5015               	movf	_canTransmitTimeout^0,w,c
 46890   00BAA2  5C2B               	subwf	?i2_tickGet^0,w,c
 46891   00BAA4  6E40               	movwf	??i2_checkCANTimeout^0,c
 46892   00BAA6  5016               	movf	(_canTransmitTimeout+1)^0,w,c
 46893   00BAA8  582C               	subwfb	(?i2_tickGet+1)^0,w,c
 46894   00BAAA  6E41               	movwf	(??i2_checkCANTimeout+1)^0,c
 46895   00BAAC  5017               	movf	(_canTransmitTimeout+2)^0,w,c
 46896   00BAAE  582D               	subwfb	(?i2_tickGet+2)^0,w,c
 46897   00BAB0  6E42               	movwf	(??i2_checkCANTimeout+2)^0,c
 46898   00BAB2  5018               	movf	(_canTransmitTimeout+3)^0,w,c
 46899   00BAB4  582E               	subwfb	(?i2_tickGet+3)^0,w,c
 46900   00BAB6  6E43               	movwf	(??i2_checkCANTimeout+3)^0,c
 46901   00BAB8  5043               	movf	(??i2_checkCANTimeout+3)^0,w,c
 46902   00BABA  1042               	iorwf	(??i2_checkCANTimeout+2)^0,w,c
 46903   00BABC  E106               	bnz	i2u2477_40
 46904   00BABE  0E25               	movlw	37
 46905   00BAC0  5C40               	subwf	??i2_checkCANTimeout^0,w,c
 46906   00BAC2  0EF4               	movlw	244
 46907   00BAC4  5841               	subwfb	(??i2_checkCANTimeout+1)^0,w,c
 46908   00BAC6  A0D8               	btfss	status,0,c
 46909   00BAC8  0012               	return	
 46910   00BACA                     i2u2477_40:
 46911                           
 46912                           ;../../VLCBlib_PIC/can18_ecan.c: 769:             canTransmitFailed = 1;
 46913   00BACA  0E01               	movlw	1
 46914   00BACC  0100               	movlb	0	; () banked
 46915   00BACE  6FB8               	movwf	_canTransmitFailed& (0+255),b
 46916                           
 46917                           ; BSR set to: 0
 46918                           ;../../VLCBlib_PIC/can18_ecan.c: 770:             TXB0CONbits.TXREQ = 0;
 46919   00BAD0  010F               	movlb	15	; () banked
 46920   00BAD2  9720               	bcf	32,3,b	;volatile
 46921                           
 46922                           ; BSR set to: 15
 46923                           ;../../VLCBlib_PIC/can18_ecan.c: 771:             checkTxFifo();
 46924   00BAD4  EC28  F02E         	call	i2_checkTxFifo	;wreg free
 46925                           
 46926                           ;../../VLCBlib_PIC/can18_ecan.c: 773:             canDiagnostics[0x02].asUint++;
 46927   00BAD8  0101               	movlb	1	; () banked
 46928   00BADA  4B6A               	infsnz	(_canDiagnostics+4)& (0+255),f,b
 46929   00BADC  2B6B               	incf	(_canDiagnostics+5)& (0+255),f,b
 46930                           
 46931                           ; BSR set to: 1
 46932                           ;../../VLCBlib_PIC/can18_ecan.c: 774:             updateModuleErrorStatus();
 46933   00BADE  EC67  F064         	call	i2_updateModuleErrorStatus	;wreg free
 46934   00BAE2  0012               	return		;funcret
 46935   00BAE4                     __end_ofi2_checkCANTimeout:
 46936                           	callstack 0
 46937                           
 46938 ;; *************** function i2_canTxError *****************
 46939 ;; Defined at:
 46940 ;;		line 785 in file "../../VLCBlib_PIC/can18_ecan.c"
 46941 ;; Parameters:    Size  Location     Type
 46942 ;;		None
 46943 ;; Auto vars:     Size  Location     Type
 46944 ;;		None
 46945 ;; Return value:  Size  Location     Type
 46946 ;;                  1    wreg      void 
 46947 ;; Registers used:
 46948 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46949 ;; Tracked objects:
 46950 ;;		On entry : 0/0
 46951 ;;		On exit  : 0/0
 46952 ;;		Unchanged: 0/0
 46953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46958 ;;Total ram usage:        0 bytes
 46959 ;; Hardware stack levels used: 1
 46960 ;; Hardware stack levels required when called: 2
 46961 ;; This function calls:
 46962 ;;		i2_checkTxFifo
 46963 ;;		i2_updateModuleErrorStatus
 46964 ;; This function is called by:
 46965 ;;		i2_canIsr
 46966 ;; This function uses a non-reentrant model
 46967 ;;
 46968                           
 46969                           	psect	text217
 46970   00B5A0                     __ptext217:
 46971                           	callstack 0
 46972   00B5A0                     i2_canTxError:
 46973                           	callstack 2
 46974                           
 46975                           ;../../VLCBlib_PIC/can18_ecan.c: 786:     if (TXB0CONbits.TXLARB) {
 46976                           
 46977                           ;incstack = 0
 46978   00B5A0  010F               	movlb	15	; () banked
 46979   00B5A2  AB20               	btfss	32,5,b	;volatile
 46980   00B5A4  D012               	goto	i2l23093
 46981                           
 46982                           ; BSR set to: 15
 46983                           ;../../VLCBlib_PIC/can18_ecan.c: 787:         canTransmitFailed = 1;
 46984   00B5A6  0E01               	movlw	1
 46985   00B5A8  0100               	movlb	0	; () banked
 46986   00B5AA  6FB8               	movwf	_canTransmitFailed& (0+255),b
 46987                           
 46988                           ;../../VLCBlib_PIC/can18_ecan.c: 788:         canTransmitTimeout.val = 0;
 46989   00B5AC  0E00               	movlw	0
 46990   00B5AE  6E15               	movwf	_canTransmitTimeout^0,c
 46991   00B5B0  0E00               	movlw	0
 46992   00B5B2  6E16               	movwf	(_canTransmitTimeout+1)^0,c
 46993   00B5B4  0E00               	movlw	0
 46994   00B5B6  6E17               	movwf	(_canTransmitTimeout+2)^0,c
 46995   00B5B8  0E00               	movlw	0
 46996   00B5BA  6E18               	movwf	(_canTransmitTimeout+3)^0,c
 46997                           
 46998                           ; BSR set to: 0
 46999                           ;../../VLCBlib_PIC/can18_ecan.c: 789:         TXB0CONbits.TXREQ = 0;
 47000   00B5BC  010F               	movlb	15	; () banked
 47001   00B5BE  9720               	bcf	32,3,b	;volatile
 47002                           
 47003                           ; BSR set to: 15
 47004                           ;../../VLCBlib_PIC/can18_ecan.c: 791:         canDiagnostics[0x0C].asUint++;
 47005   00B5C0  0101               	movlb	1	; () banked
 47006   00B5C2  4B7E               	infsnz	(_canDiagnostics+24)& (0+255),f,b
 47007   00B5C4  2B7F               	incf	(_canDiagnostics+25)& (0+255),f,b
 47008                           
 47009                           ; BSR set to: 1
 47010                           ;../../VLCBlib_PIC/can18_ecan.c: 792:         updateModuleErrorStatus();
 47011   00B5C6  EC67  F064         	call	i2_updateModuleErrorStatus	;wreg free
 47012   00B5CA                     i2l23093:
 47013                           
 47014                           ;../../VLCBlib_PIC/can18_ecan.c: 795:     if (TXB0CONbits.TXERR) {
 47015   00B5CA  010F               	movlb	15	; () banked
 47016   00B5CC  A920               	btfss	32,4,b	;volatile
 47017   00B5CE  D012               	goto	i2l23103
 47018                           
 47019                           ; BSR set to: 15
 47020                           ;../../VLCBlib_PIC/can18_ecan.c: 796:         canTransmitFailed = 1;
 47021   00B5D0  0E01               	movlw	1
 47022   00B5D2  0100               	movlb	0	; () banked
 47023   00B5D4  6FB8               	movwf	_canTransmitFailed& (0+255),b
 47024                           
 47025                           ;../../VLCBlib_PIC/can18_ecan.c: 797:         canTransmitTimeout.val = 0;
 47026   00B5D6  0E00               	movlw	0
 47027   00B5D8  6E15               	movwf	_canTransmitTimeout^0,c
 47028   00B5DA  0E00               	movlw	0
 47029   00B5DC  6E16               	movwf	(_canTransmitTimeout+1)^0,c
 47030   00B5DE  0E00               	movlw	0
 47031   00B5E0  6E17               	movwf	(_canTransmitTimeout+2)^0,c
 47032   00B5E2  0E00               	movlw	0
 47033   00B5E4  6E18               	movwf	(_canTransmitTimeout+3)^0,c
 47034                           
 47035                           ; BSR set to: 0
 47036                           ;../../VLCBlib_PIC/can18_ecan.c: 798:         TXB0CONbits.TXREQ = 0;
 47037   00B5E6  010F               	movlb	15	; () banked
 47038   00B5E8  9720               	bcf	32,3,b	;volatile
 47039                           
 47040                           ; BSR set to: 15
 47041                           ;../../VLCBlib_PIC/can18_ecan.c: 800:         canDiagnostics[0x02].asUint++;
 47042   00B5EA  0101               	movlb	1	; () banked
 47043   00B5EC  4B6A               	infsnz	(_canDiagnostics+4)& (0+255),f,b
 47044   00B5EE  2B6B               	incf	(_canDiagnostics+5)& (0+255),f,b
 47045                           
 47046                           ; BSR set to: 1
 47047                           ;../../VLCBlib_PIC/can18_ecan.c: 801:         updateModuleErrorStatus();
 47048   00B5F0  EC67  F064         	call	i2_updateModuleErrorStatus	;wreg free
 47049   00B5F4                     i2l23103:
 47050                           
 47051                           ;../../VLCBlib_PIC/can18_ecan.c: 804:     if (canTransmitFailed) {
 47052   00B5F4  0100               	movlb	0	; () banked
 47053   00B5F6  51B8               	movf	_canTransmitFailed& (0+255),w,b
 47054   00B5F8  A4D8               	btfss	status,2,c
 47055                           
 47056                           ; BSR set to: 0
 47057                           ;../../VLCBlib_PIC/can18_ecan.c: 805:         checkTxFifo();
 47058   00B5FA  EC28  F02E         	call	i2_checkTxFifo	;wreg free
 47059                           
 47060                           ;../../VLCBlib_PIC/can18_ecan.c: 807:     PIR5bits.ERRIF = 0;
 47061   00B5FE  9A77               	bcf	119,5,c	;volatile
 47062   00B600  0012               	return		;funcret
 47063   00B602                     __end_ofi2_canTxError:
 47064                           	callstack 0
 47065                           
 47066 ;; *************** function i2_checkTxFifo *****************
 47067 ;; Defined at:
 47068 ;;		line 695 in file "../../VLCBlib_PIC/can18_ecan.c"
 47069 ;; Parameters:    Size  Location     Type
 47070 ;;		None
 47071 ;; Auto vars:     Size  Location     Type
 47072 ;;  mp              2   19[COMRAM] PTR struct Message
 47073 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 47074 ;;  m               2   17[COMRAM] PTR struct Message
 47075 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 47076 ;; Return value:  Size  Location     Type
 47077 ;;                  1    wreg      void 
 47078 ;; Registers used:
 47079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 47080 ;; Tracked objects:
 47081 ;;		On entry : 0/0
 47082 ;;		On exit  : 0/0
 47083 ;;		Unchanged: 0/0
 47084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47086 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47087 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47088 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47089 ;;Total ram usage:        9 bytes
 47090 ;; Hardware stack levels used: 1
 47091 ;; Hardware stack levels required when called: 1
 47092 ;; This function calls:
 47093 ;;		i2_getNextWriteMessage
 47094 ;;		i2_isEvent
 47095 ;;		i2_pop
 47096 ;;		i2_tickGet
 47097 ;;		i2_updateModuleErrorStatus
 47098 ;; This function is called by:
 47099 ;;		i2_canIsr
 47100 ;;		i2_checkCANTimeout
 47101 ;;		i2_canTxError
 47102 ;; This function uses a non-reentrant model
 47103 ;;
 47104                           
 47105                           	psect	text218
 47106   005C50                     __ptext218:
 47107                           	callstack 0
 47108   005C50                     i2_checkTxFifo:
 47109                           	callstack 3
 47110                           
 47111                           ;../../VLCBlib_PIC/can18_ecan.c: 696:     Message * mp;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          698:     Message * m;;../../VLCBlib_PIC/can18_ecan.c: 701:     PIR5bits.TXBnIF = 0;
 47112                           
 47113                           ;incstack = 0
 47114   005C50  9877               	bcf	119,4,c	;volatile
 47115                           
 47116                           ;../../VLCBlib_PIC/can18_ecan.c: 702:     if (!TXB0CONbits.TXREQ) {
 47117   005C52  010F               	movlb	15	; () banked
 47118   005C54  B720               	btfsc	32,3,b	;volatile
 47119   005C56  D144               	goto	i2l2561
 47120                           
 47121                           ; BSR set to: 15
 47122                           ;../../VLCBlib_PIC/can18_ecan.c: 703:         mp = pop(&txQueue);
 47123   005C58  0EA9               	movlw	low _txQueue
 47124   005C5A  6E2B               	movwf	i2pop@q^0,c
 47125   005C5C  0E01               	movlw	high _txQueue
 47126   005C5E  6E2C               	movwf	(i2pop@q+1)^0,c
 47127   005C60  ECC8  F04F         	call	i2_pop	;wreg free
 47128   005C64  C02B  F03E         	movff	?i2_pop,i2checkTxFifo@mp
 47129   005C68  C02C  F03F         	movff	?i2_pop+1,i2checkTxFifo@mp+1
 47130                           
 47131                           ;../../VLCBlib_PIC/can18_ecan.c: 704:         if (mp != ((void*)0)) {
 47132   005C6C  503E               	movf	i2checkTxFifo@mp^0,w,c
 47133   005C6E  103F               	iorwf	(i2checkTxFifo@mp+1)^0,w,c
 47134   005C70  B4D8               	btfsc	status,2,c
 47135   005C72  D128               	goto	i2l21663
 47136                           
 47137                           ;../../VLCBlib_PIC/can18_ecan.c: 706:             TXB0SIDH = canPri[priorities[mp->opc]]
      +                           | ((canId & 0x78) >> 3);
 47138   005C74  EE20 F001          	lfsr	2,1
 47139   005C78  503E               	movf	i2checkTxFifo@mp^0,w,c
 47140   005C7A  26D9               	addwf	fsr2l,f,c
 47141   005C7C  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47142   005C7E  22DA               	addwfc	fsr2h,f,c
 47143   005C80  50DF               	movf	indf2,w,c
 47144   005C82  6E37               	movwf	??i2_checkTxFifo^0,c
 47145   005C84  6A38               	clrf	(??i2_checkTxFifo+1)^0,c
 47146   005C86  0E29               	movlw	low _priorities
 47147   005C88  2437               	addwf	??i2_checkTxFifo^0,w,c
 47148   005C8A  6EF6               	movwf	tblptrl,c
 47149   005C8C  0EED               	movlw	high _priorities
 47150   005C8E  2038               	addwfc	(??i2_checkTxFifo+1)^0,w,c
 47151   005C90  6EF7               	movwf	tblptrh,c
 47152   005C92                     	if	1	;There are 3 active tblptr bytes
 47153   005C92  6AF8               	clrf	tblptru,c
 47154   005C94  0E00               	movlw	low (__mediumconst shr (0+16))
 47155   005C96  22F8               	addwfc	tblptru,f,c
 47156   005C98                     	endif
 47157   005C98  0008               	tblrd		*
 47158   005C9A  50F5               	movf	tablat,w,c
 47159   005C9C  6E39               	movwf	(??i2_checkTxFifo+2)^0,c
 47160   005C9E  6A3A               	clrf	(??i2_checkTxFifo+3)^0,c
 47161   005CA0  0E86               	movlw	low _canPri
 47162   005CA2  2439               	addwf	(??i2_checkTxFifo+2)^0,w,c
 47163   005CA4  6EF6               	movwf	tblptrl,c
 47164   005CA6  0EEE               	movlw	high _canPri
 47165   005CA8  203A               	addwfc	(??i2_checkTxFifo+3)^0,w,c
 47166   005CAA  6EF7               	movwf	tblptrh,c
 47167   005CAC                     	if	1	;There are 3 active tblptr bytes
 47168   005CAC  6AF8               	clrf	tblptru,c
 47169   005CAE  0E00               	movlw	low (__mediumconst shr (0+16))
 47170   005CB0  22F8               	addwfc	tblptru,f,c
 47171   005CB2                     	endif
 47172   005CB2  0008               	tblrd		*
 47173   005CB4  CFF5 F03B          	movff	tablat,??i2_checkTxFifo+4
 47174   005CB8  0100               	movlb	0	; () banked
 47175   005CBA  39B9               	swapf	_canId& (0+255),w,b
 47176   005CBC  46E8               	rlncf	wreg,f,c
 47177   005CBE  0B1F               	andlw	31
 47178   005CC0  0B0F               	andlw	15
 47179   005CC2  103B               	iorwf	(??i2_checkTxFifo+4)^0,w,c
 47180   005CC4  010F               	movlb	15	; () banked
 47181   005CC6  6F21               	movwf	33,b	;volatile
 47182                           
 47183                           ; BSR set to: 15
 47184                           ;../../VLCBlib_PIC/can18_ecan.c: 707:             TXB0SIDL = (uint8_t)((canId & 0x07) <<
      +                           5);
 47185   005CC8  C0B9  F037         	movff	_canId,??i2_checkTxFifo
 47186   005CCC  0E07               	movlw	7
 47187   005CCE  1637               	andwf	??i2_checkTxFifo^0,f,c
 47188   005CD0  0E05               	movlw	5
 47189   005CD2  6E38               	movwf	(??i2_checkTxFifo+1)^0,c
 47190   005CD4                     i2u2255_45:
 47191   005CD4  90D8               	bcf	status,0,c
 47192   005CD6  3637               	rlcf	??i2_checkTxFifo^0,f,c
 47193   005CD8  2E38               	decfsz	(??i2_checkTxFifo+1)^0,f,c
 47194   005CDA  D7FC               	goto	i2u2255_45
 47195   005CDC  5037               	movf	??i2_checkTxFifo^0,w,c
 47196   005CDE  6F22               	movwf	34,b	;volatile
 47197                           
 47198                           ; BSR set to: 15
 47199                           ;../../VLCBlib_PIC/can18_ecan.c: 708:             TXB0D0 = mp->opc;
 47200   005CE0  EE20 F001          	lfsr	2,1
 47201   005CE4  503E               	movf	i2checkTxFifo@mp^0,w,c
 47202   005CE6  26D9               	addwf	fsr2l,f,c
 47203   005CE8  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47204   005CEA  22DA               	addwfc	fsr2h,f,c
 47205   005CEC  50DF               	movf	indf2,w,c
 47206   005CEE  6F26               	movwf	38,b	;volatile
 47207                           
 47208                           ; BSR set to: 15
 47209                           ;../../VLCBlib_PIC/can18_ecan.c: 709:             TXB0D1 = mp->bytes[0];
 47210   005CF0  EE20 F002          	lfsr	2,2
 47211   005CF4  503E               	movf	i2checkTxFifo@mp^0,w,c
 47212   005CF6  26D9               	addwf	fsr2l,f,c
 47213   005CF8  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47214   005CFA  22DA               	addwfc	fsr2h,f,c
 47215   005CFC  50DF               	movf	indf2,w,c
 47216   005CFE  6F27               	movwf	39,b	;volatile
 47217                           
 47218                           ; BSR set to: 15
 47219                           ;../../VLCBlib_PIC/can18_ecan.c: 710:             TXB0D2 = mp->bytes[1];
 47220   005D00  EE20 F003          	lfsr	2,3
 47221   005D04  503E               	movf	i2checkTxFifo@mp^0,w,c
 47222   005D06  26D9               	addwf	fsr2l,f,c
 47223   005D08  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47224   005D0A  22DA               	addwfc	fsr2h,f,c
 47225   005D0C  50DF               	movf	indf2,w,c
 47226   005D0E  6F28               	movwf	40,b	;volatile
 47227                           
 47228                           ; BSR set to: 15
 47229                           ;../../VLCBlib_PIC/can18_ecan.c: 711:             TXB0D3 = mp->bytes[2];
 47230   005D10  EE20 F004          	lfsr	2,4
 47231   005D14  503E               	movf	i2checkTxFifo@mp^0,w,c
 47232   005D16  26D9               	addwf	fsr2l,f,c
 47233   005D18  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47234   005D1A  22DA               	addwfc	fsr2h,f,c
 47235   005D1C  50DF               	movf	indf2,w,c
 47236   005D1E  6F29               	movwf	41,b	;volatile
 47237                           
 47238                           ; BSR set to: 15
 47239                           ;../../VLCBlib_PIC/can18_ecan.c: 712:             TXB0D4 = mp->bytes[3];
 47240   005D20  EE20 F005          	lfsr	2,5
 47241   005D24  503E               	movf	i2checkTxFifo@mp^0,w,c
 47242   005D26  26D9               	addwf	fsr2l,f,c
 47243   005D28  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47244   005D2A  22DA               	addwfc	fsr2h,f,c
 47245   005D2C  50DF               	movf	indf2,w,c
 47246   005D2E  6F2A               	movwf	42,b	;volatile
 47247                           
 47248                           ; BSR set to: 15
 47249                           ;../../VLCBlib_PIC/can18_ecan.c: 713:             TXB0D5 = mp->bytes[4];
 47250   005D30  EE20 F006          	lfsr	2,6
 47251   005D34  503E               	movf	i2checkTxFifo@mp^0,w,c
 47252   005D36  26D9               	addwf	fsr2l,f,c
 47253   005D38  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47254   005D3A  22DA               	addwfc	fsr2h,f,c
 47255   005D3C  50DF               	movf	indf2,w,c
 47256   005D3E  6F2B               	movwf	43,b	;volatile
 47257                           
 47258                           ; BSR set to: 15
 47259                           ;../../VLCBlib_PIC/can18_ecan.c: 714:             TXB0D6 = mp->bytes[5];
 47260   005D40  EE20 F007          	lfsr	2,7
 47261   005D44  503E               	movf	i2checkTxFifo@mp^0,w,c
 47262   005D46  26D9               	addwf	fsr2l,f,c
 47263   005D48  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47264   005D4A  22DA               	addwfc	fsr2h,f,c
 47265   005D4C  50DF               	movf	indf2,w,c
 47266   005D4E  6F2C               	movwf	44,b	;volatile
 47267                           
 47268                           ; BSR set to: 15
 47269                           ;../../VLCBlib_PIC/can18_ecan.c: 715:             TXB0D7 = mp->bytes[6];
 47270   005D50  EE20 F008          	lfsr	2,8
 47271   005D54  503E               	movf	i2checkTxFifo@mp^0,w,c
 47272   005D56  26D9               	addwf	fsr2l,f,c
 47273   005D58  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47274   005D5A  22DA               	addwfc	fsr2h,f,c
 47275   005D5C  50DF               	movf	indf2,w,c
 47276   005D5E  6F2D               	movwf	45,b	;volatile
 47277                           
 47278                           ; BSR set to: 15
 47279                           ;../../VLCBlib_PIC/can18_ecan.c: 716:             TXB0DLC = mp->len;
 47280   005D60  C03E  FFD9         	movff	i2checkTxFifo@mp,fsr2l
 47281   005D64  C03F  FFDA         	movff	i2checkTxFifo@mp+1,fsr2h
 47282   005D68  50DF               	movf	indf2,w,c
 47283   005D6A  6F25               	movwf	37,b	;volatile
 47284                           
 47285                           ; BSR set to: 15
 47286                           ;../../VLCBlib_PIC/can18_ecan.c: 718:             canTransmitTimeout.val = tickGet();
 47287   005D6C  ECEC  F05B         	call	i2_tickGet	;wreg free
 47288   005D70  C02B  F015         	movff	?i2_tickGet,_canTransmitTimeout
 47289   005D74  C02C  F016         	movff	?i2_tickGet+1,_canTransmitTimeout+1
 47290   005D78  C02D  F017         	movff	?i2_tickGet+2,_canTransmitTimeout+2
 47291   005D7C  C02E  F018         	movff	?i2_tickGet+3,_canTransmitTimeout+3
 47292                           
 47293                           ;../../VLCBlib_PIC/can18_ecan.c: 719:             canTransmitFailed = 0;
 47294   005D80  0E00               	movlw	0
 47295   005D82  0100               	movlb	0	; () banked
 47296   005D84  6FB8               	movwf	_canTransmitFailed& (0+255),b
 47297                           
 47298                           ; BSR set to: 0
 47299                           ;../../VLCBlib_PIC/can18_ecan.c: 720:             TXB0CONbits.TXREQ = 1;
 47300   005D86  010F               	movlb	15	; () banked
 47301   005D88  8720               	bsf	32,3,b	;volatile
 47302                           
 47303                           ; BSR set to: 15
 47304                           ;../../VLCBlib_PIC/can18_ecan.c: 721:             PIE5bits.TXBnIE = 1;
 47305   005D8A  8876               	bsf	118,4,c	;volatile
 47306                           
 47307                           ; BSR set to: 15
 47308                           ;../../VLCBlib_PIC/can18_ecan.c: 722:             canDiagnostics[0x06].asUint++;
 47309   005D8C  0101               	movlb	1	; () banked
 47310   005D8E  4B72               	infsnz	(_canDiagnostics+12)& (0+255),f,b
 47311   005D90  2B73               	incf	(_canDiagnostics+13)& (0+255),f,b
 47312                           
 47313                           ; BSR set to: 1
 47314                           ;../../VLCBlib_PIC/can18_ecan.c: 725:             if (isEvent(mp->opc)) {
 47315   005D92  EE20 F001          	lfsr	2,1
 47316   005D96  503E               	movf	i2checkTxFifo@mp^0,w,c
 47317   005D98  26D9               	addwf	fsr2l,f,c
 47318   005D9A  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47319   005D9C  22DA               	addwfc	fsr2h,f,c
 47320   005D9E  50DF               	movf	indf2,w,c
 47321   005DA0  EC5E  F063         	call	i2_isEvent
 47322   005DA4  0900               	iorlw	0
 47323   005DA6  B4D8               	btfsc	status,2,c
 47324   005DA8  0012               	return	
 47325                           
 47326                           ;../../VLCBlib_PIC/can18_ecan.c: 727:                 m = getNextWriteMessage(&rxQueue);
 47327   005DAA  0E26               	movlw	low _rxQueue
 47328   005DAC  6E2B               	movwf	i2getNextWriteMessage@q^0,c
 47329   005DAE  EC80  F048         	call	i2_getNextWriteMessage	;wreg free
 47330   005DB2  C02B  F03C         	movff	?i2_getNextWriteMessage,i2checkTxFifo@m
 47331   005DB6  C02C  F03D         	movff	?i2_getNextWriteMessage+1,i2checkTxFifo@m+1
 47332                           
 47333                           ;../../VLCBlib_PIC/can18_ecan.c: 728:                 if (m == ((void*)0)) {
 47334   005DBA  503C               	movf	i2checkTxFifo@m^0,w,c
 47335   005DBC  103D               	iorwf	(i2checkTxFifo@m+1)^0,w,c
 47336   005DBE  A4D8               	btfss	status,2,c
 47337   005DC0  D006               	goto	i2l21645
 47338                           
 47339                           ;../../VLCBlib_PIC/can18_ecan.c: 730:                     canDiagnostics[0x08].asUint++;
 47340   005DC2  0101               	movlb	1	; () banked
 47341   005DC4  4B76               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 47342   005DC6  2B77               	incf	(_canDiagnostics+17)& (0+255),f,b
 47343                           
 47344                           ; BSR set to: 1
 47345                           ;../../VLCBlib_PIC/can18_ecan.c: 731:                     updateModuleErrorStatus();
 47346   005DC8  EC67  F064         	call	i2_updateModuleErrorStatus	;wreg free
 47347                           
 47348                           ;../../VLCBlib_PIC/can18_ecan.c: 733:                 } else {
 47349   005DCC  0012               	return	
 47350   005DCE                     i2l21645:
 47351                           
 47352                           ;../../VLCBlib_PIC/can18_ecan.c: 735:                     m->opc = mp->opc;
 47353   005DCE  EE20 F001          	lfsr	2,1
 47354   005DD2  503E               	movf	i2checkTxFifo@mp^0,w,c
 47355   005DD4  26D9               	addwf	fsr2l,f,c
 47356   005DD6  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47357   005DD8  22DA               	addwfc	fsr2h,f,c
 47358   005DDA  EE10 F001          	lfsr	1,1
 47359   005DDE  503C               	movf	i2checkTxFifo@m^0,w,c
 47360   005DE0  26E1               	addwf	fsr1l,f,c
 47361   005DE2  503D               	movf	(i2checkTxFifo@m+1)^0,w,c
 47362   005DE4  22E2               	addwfc	fsr1h,f,c
 47363   005DE6  CFDF FFE7          	movff	indf2,indf1
 47364                           
 47365                           ;../../VLCBlib_PIC/can18_ecan.c: 736:                     m->len = mp->len;
 47366   005DEA  C03E  FFD9         	movff	i2checkTxFifo@mp,fsr2l
 47367   005DEE  C03F  FFDA         	movff	i2checkTxFifo@mp+1,fsr2h
 47368   005DF2  C03C  FFE1         	movff	i2checkTxFifo@m,fsr1l
 47369   005DF6  C03D  FFE2         	movff	i2checkTxFifo@m+1,fsr1h
 47370   005DFA  CFDF FFE7          	movff	indf2,indf1
 47371                           
 47372                           ;../../VLCBlib_PIC/can18_ecan.c: 737:                     m->bytes[0] = mp->bytes[0];
 47373   005DFE  EE20 F002          	lfsr	2,2
 47374   005E02  503E               	movf	i2checkTxFifo@mp^0,w,c
 47375   005E04  26D9               	addwf	fsr2l,f,c
 47376   005E06  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47377   005E08  22DA               	addwfc	fsr2h,f,c
 47378   005E0A  EE10 F002          	lfsr	1,2
 47379   005E0E  503C               	movf	i2checkTxFifo@m^0,w,c
 47380   005E10  26E1               	addwf	fsr1l,f,c
 47381   005E12  503D               	movf	(i2checkTxFifo@m+1)^0,w,c
 47382   005E14  22E2               	addwfc	fsr1h,f,c
 47383   005E16  CFDF FFE7          	movff	indf2,indf1
 47384                           
 47385                           ;../../VLCBlib_PIC/can18_ecan.c: 738:                     m->bytes[1] = mp->bytes[1];
 47386   005E1A  EE20 F003          	lfsr	2,3
 47387   005E1E  503E               	movf	i2checkTxFifo@mp^0,w,c
 47388   005E20  26D9               	addwf	fsr2l,f,c
 47389   005E22  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47390   005E24  22DA               	addwfc	fsr2h,f,c
 47391   005E26  EE10 F003          	lfsr	1,3
 47392   005E2A  503C               	movf	i2checkTxFifo@m^0,w,c
 47393   005E2C  26E1               	addwf	fsr1l,f,c
 47394   005E2E  503D               	movf	(i2checkTxFifo@m+1)^0,w,c
 47395   005E30  22E2               	addwfc	fsr1h,f,c
 47396   005E32  CFDF FFE7          	movff	indf2,indf1
 47397                           
 47398                           ;../../VLCBlib_PIC/can18_ecan.c: 739:                     m->bytes[2] = mp->bytes[2];
 47399   005E36  EE20 F004          	lfsr	2,4
 47400   005E3A  503E               	movf	i2checkTxFifo@mp^0,w,c
 47401   005E3C  26D9               	addwf	fsr2l,f,c
 47402   005E3E  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47403   005E40  22DA               	addwfc	fsr2h,f,c
 47404   005E42  EE10 F004          	lfsr	1,4
 47405   005E46  503C               	movf	i2checkTxFifo@m^0,w,c
 47406   005E48  26E1               	addwf	fsr1l,f,c
 47407   005E4A  503D               	movf	(i2checkTxFifo@m+1)^0,w,c
 47408   005E4C  22E2               	addwfc	fsr1h,f,c
 47409   005E4E  CFDF FFE7          	movff	indf2,indf1
 47410                           
 47411                           ;../../VLCBlib_PIC/can18_ecan.c: 740:                     m->bytes[3] = mp->bytes[3];
 47412   005E52  EE20 F005          	lfsr	2,5
 47413   005E56  503E               	movf	i2checkTxFifo@mp^0,w,c
 47414   005E58  26D9               	addwf	fsr2l,f,c
 47415   005E5A  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47416   005E5C  22DA               	addwfc	fsr2h,f,c
 47417   005E5E  EE10 F005          	lfsr	1,5
 47418   005E62  503C               	movf	i2checkTxFifo@m^0,w,c
 47419   005E64  26E1               	addwf	fsr1l,f,c
 47420   005E66  503D               	movf	(i2checkTxFifo@m+1)^0,w,c
 47421   005E68  22E2               	addwfc	fsr1h,f,c
 47422   005E6A  CFDF FFE7          	movff	indf2,indf1
 47423                           
 47424                           ;../../VLCBlib_PIC/can18_ecan.c: 741:                     m->bytes[4] = mp->bytes[4];
 47425   005E6E  EE20 F006          	lfsr	2,6
 47426   005E72  503E               	movf	i2checkTxFifo@mp^0,w,c
 47427   005E74  26D9               	addwf	fsr2l,f,c
 47428   005E76  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47429   005E78  22DA               	addwfc	fsr2h,f,c
 47430   005E7A  EE10 F006          	lfsr	1,6
 47431   005E7E  503C               	movf	i2checkTxFifo@m^0,w,c
 47432   005E80  26E1               	addwf	fsr1l,f,c
 47433   005E82  503D               	movf	(i2checkTxFifo@m+1)^0,w,c
 47434   005E84  22E2               	addwfc	fsr1h,f,c
 47435   005E86  CFDF FFE7          	movff	indf2,indf1
 47436                           
 47437                           ;../../VLCBlib_PIC/can18_ecan.c: 742:                     m->bytes[5] = mp->bytes[5];
 47438   005E8A  EE20 F007          	lfsr	2,7
 47439   005E8E  503E               	movf	i2checkTxFifo@mp^0,w,c
 47440   005E90  26D9               	addwf	fsr2l,f,c
 47441   005E92  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47442   005E94  22DA               	addwfc	fsr2h,f,c
 47443   005E96  EE10 F007          	lfsr	1,7
 47444   005E9A  503C               	movf	i2checkTxFifo@m^0,w,c
 47445   005E9C  26E1               	addwf	fsr1l,f,c
 47446   005E9E  503D               	movf	(i2checkTxFifo@m+1)^0,w,c
 47447   005EA0  22E2               	addwfc	fsr1h,f,c
 47448   005EA2  CFDF FFE7          	movff	indf2,indf1
 47449                           
 47450                           ;../../VLCBlib_PIC/can18_ecan.c: 743:                     m->bytes[6] = mp->bytes[6];
 47451   005EA6  EE20 F008          	lfsr	2,8
 47452   005EAA  503E               	movf	i2checkTxFifo@mp^0,w,c
 47453   005EAC  26D9               	addwf	fsr2l,f,c
 47454   005EAE  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47455   005EB0  22DA               	addwfc	fsr2h,f,c
 47456   005EB2  EE10 F008          	lfsr	1,8
 47457   005EB6  503C               	movf	i2checkTxFifo@m^0,w,c
 47458   005EB8  26E1               	addwf	fsr1l,f,c
 47459   005EBA  503D               	movf	(i2checkTxFifo@m+1)^0,w,c
 47460   005EBC  22E2               	addwfc	fsr1h,f,c
 47461   005EBE  CFDF FFE7          	movff	indf2,indf1
 47462   005EC2  0012               	return	
 47463   005EC4                     i2l21663:
 47464                           
 47465                           ;../../VLCBlib_PIC/can18_ecan.c: 749:             canTransmitTimeout.val = 0;
 47466   005EC4  0E00               	movlw	0
 47467   005EC6  6E15               	movwf	_canTransmitTimeout^0,c
 47468   005EC8  0E00               	movlw	0
 47469   005ECA  6E16               	movwf	(_canTransmitTimeout+1)^0,c
 47470   005ECC  0E00               	movlw	0
 47471   005ECE  6E17               	movwf	(_canTransmitTimeout+2)^0,c
 47472   005ED0  0E00               	movlw	0
 47473   005ED2  6E18               	movwf	(_canTransmitTimeout+3)^0,c
 47474                           
 47475                           ;../../VLCBlib_PIC/can18_ecan.c: 750:             TXB0CON = 0;
 47476   005ED4  0E00               	movlw	0
 47477   005ED6  010F               	movlb	15	; () banked
 47478   005ED8  6F20               	movwf	32,b	;volatile
 47479                           
 47480                           ; BSR set to: 15
 47481                           ;../../VLCBlib_PIC/can18_ecan.c: 751:             PIR5bits.TXBnIF = 0;
 47482   005EDA  9877               	bcf	119,4,c	;volatile
 47483                           
 47484                           ; BSR set to: 15
 47485                           ;../../VLCBlib_PIC/can18_ecan.c: 752:             PIE5bits.TXBnIE = 0;
 47486   005EDC  9876               	bcf	118,4,c	;volatile
 47487   005EDE  0012               	return	
 47488   005EE0                     i2l2561:
 47489                           
 47490                           ; BSR set to: 15
 47491                           ;../../VLCBlib_PIC/can18_ecan.c: 756:         PIR5bits.TXBnIF = 0;
 47492   005EE0  9877               	bcf	119,4,c	;volatile
 47493                           
 47494                           ;../../VLCBlib_PIC/can18_ecan.c: 757:         PIE5bits.TXBnIE = 1;
 47495   005EE2  8876               	bsf	118,4,c	;volatile
 47496   005EE4  0012               	return		;funcret
 47497   005EE6                     __end_ofi2_checkTxFifo:
 47498                           	callstack 0
 47499                           
 47500 ;; *************** function i2_tickGet *****************
 47501 ;; Defined at:
 47502 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 47503 ;; Parameters:    Size  Location     Type
 47504 ;;		None
 47505 ;; Auto vars:     Size  Location     Type
 47506 ;;  currentTime     4    6[COMRAM] struct _TickValue
 47507 ;;  IntFlag1        1    5[COMRAM] unsigned char 
 47508 ;;  IntFlag2        1    4[COMRAM] unsigned char 
 47509 ;; Return value:  Size  Location     Type
 47510 ;;                  4    0[COMRAM] unsigned long 
 47511 ;; Registers used:
 47512 ;;		wreg, status,2, status,0
 47513 ;; Tracked objects:
 47514 ;;		On entry : 0/0
 47515 ;;		On exit  : 0/0
 47516 ;;		Unchanged: 0/0
 47517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47518 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47519 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47521 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47522 ;;Total ram usage:       10 bytes
 47523 ;; Hardware stack levels used: 1
 47524 ;; This function calls:
 47525 ;;		Nothing
 47526 ;; This function is called by:
 47527 ;;		i2_checkTxFifo
 47528 ;;		i2_checkCANTimeout
 47529 ;; This function uses a non-reentrant model
 47530 ;;
 47531                           
 47532                           	psect	text219
 47533   00B7D8                     __ptext219:
 47534                           	callstack 0
 47535   00B7D8                     i2_tickGet:
 47536                           	callstack 3
 47537                           
 47538                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 47539                           
 47540                           ;incstack = 0
 47541   00B7D8  0E00               	movlw	0
 47542   00B7DA  6E33               	movwf	(i2tickGet@currentTime+2)^0,c
 47543                           
 47544                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 47545   00B7DC  0E00               	movlw	0
 47546   00B7DE  6E34               	movwf	(i2tickGet@currentTime+3)^0,c
 47547                           
 47548                           ;../../VLCBlib_PIC/ticktime.c: 169:     INTCONbits.TMR0IE = 0;
 47549   00B7E0  9AF2               	bcf	242,5,c	;volatile
 47550   00B7E2                     i2l12959:
 47551                           
 47552                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = INTCONbits.TMR0IF;
 47553   00B7E2  0E00               	movlw	0
 47554   00B7E4  B4F2               	btfsc	242,2,c	;volatile
 47555   00B7E6  0E01               	movlw	1
 47556   00B7E8  6E30               	movwf	i2tickGet@IntFlag1^0,c
 47557                           
 47558                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 47559   00B7EA  CFD6 F031          	movff	4054,i2tickGet@currentTime	;volatile
 47560                           
 47561                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 47562   00B7EE  CFD7 F032          	movff	4055,i2tickGet@currentTime+1	;volatile
 47563                           
 47564                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = INTCONbits.TMR0IF;
 47565   00B7F2  0E00               	movlw	0
 47566   00B7F4  B4F2               	btfsc	242,2,c	;volatile
 47567   00B7F6  0E01               	movlw	1
 47568   00B7F8  6E2F               	movwf	i2tickGet@IntFlag2^0,c
 47569                           
 47570                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 47571   00B7FA  502F               	movf	i2tickGet@IntFlag2^0,w,c
 47572   00B7FC  1830               	xorwf	i2tickGet@IntFlag1^0,w,c
 47573   00B7FE  A4D8               	btfss	status,2,c
 47574   00B800  D7F0               	goto	i2l12959
 47575                           
 47576                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 47577   00B802  5030               	movf	i2tickGet@IntFlag1^0,w,c
 47578   00B804  B4D8               	btfsc	status,2,c
 47579   00B806  D006               	goto	i2l12979
 47580                           
 47581                           ;../../VLCBlib_PIC/ticktime.c: 178:         INTCONbits.TMR0IF = 0;
 47582   00B808  94F2               	bcf	242,2,c	;volatile
 47583                           
 47584                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 47585   00B80A  0100               	movlb	0	; () banked
 47586   00B80C  2BC6               	incf	_timerExtension1& (0+255),f,b	;volatile
 47587                           
 47588                           ; BSR set to: 0
 47589                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 47590   00B80E  51C6               	movf	_timerExtension1& (0+255),w,b	;volatile
 47591   00B810  B4D8               	btfsc	status,2,c
 47592                           
 47593                           ; BSR set to: 0
 47594                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 47595   00B812  2BC5               	incf	_timerExtension2& (0+255),f,b	;volatile
 47596   00B814                     i2l12979:
 47597                           
 47598                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 47599   00B814  0100               	movlb	0	; () banked
 47600   00B816  51C6               	movf	_timerExtension1& (0+255),w,b	;volatile
 47601   00B818  2633               	addwf	(i2tickGet@currentTime+2)^0,f,c
 47602                           
 47603                           ; BSR set to: 0
 47604                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 47605   00B81A  51C5               	movf	_timerExtension2& (0+255),w,b	;volatile
 47606   00B81C  2634               	addwf	(i2tickGet@currentTime+3)^0,f,c
 47607                           
 47608                           ; BSR set to: 0
 47609                           ;../../VLCBlib_PIC/ticktime.c: 191:     INTCONbits.TMR0IE = 1;
 47610   00B81E  8AF2               	bsf	242,5,c	;volatile
 47611                           
 47612                           ; BSR set to: 0
 47613                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 47614   00B820  C031  F02B         	movff	i2tickGet@currentTime,?i2_tickGet
 47615   00B824  C032  F02C         	movff	i2tickGet@currentTime+1,?i2_tickGet+1
 47616   00B828  C033  F02D         	movff	i2tickGet@currentTime+2,?i2_tickGet+2
 47617   00B82C  C034  F02E         	movff	i2tickGet@currentTime+3,?i2_tickGet+3
 47618                           
 47619                           ; BSR set to: 0
 47620   00B830  0012               	return		;funcret
 47621   00B832                     __end_ofi2_tickGet:
 47622                           	callstack 0
 47623                           
 47624 ;; *************** function i2_pop *****************
 47625 ;; Defined at:
 47626 ;;		line 96 in file "../../VLCBlib_PIC/messageQueue.c"
 47627 ;; Parameters:    Size  Location     Type
 47628 ;;  q               2    0[COMRAM] PTR struct MessageQueue
 47629 ;;		 -> txQueue(5), rxQueue(5), 
 47630 ;; Auto vars:     Size  Location     Type
 47631 ;;  ret             2    7[COMRAM] PTR struct Message
 47632 ;;		 -> txBuffers(72), rxBuffers(288), 
 47633 ;; Return value:  Size  Location     Type
 47634 ;;                  2    0[COMRAM] PTR struct Message
 47635 ;; Registers used:
 47636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 47637 ;; Tracked objects:
 47638 ;;		On entry : 0/0
 47639 ;;		On exit  : 0/0
 47640 ;;		Unchanged: 0/0
 47641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47642 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47643 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47644 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47645 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47646 ;;Total ram usage:        9 bytes
 47647 ;; Hardware stack levels used: 1
 47648 ;; This function calls:
 47649 ;;		Nothing
 47650 ;; This function is called by:
 47651 ;;		i2_checkTxFifo
 47652 ;; This function uses a non-reentrant model
 47653 ;;
 47654                           
 47655                           	psect	text220
 47656   009F90                     __ptext220:
 47657                           	callstack 0
 47658   009F90                     i2_pop:
 47659                           	callstack 3
 47660                           
 47661                           ;../../VLCBlib_PIC/messageQueue.c: 97:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 98:  if (q->writeIndex == q->readIndex) {
 47662                           
 47663                           ; BSR set to: 0
 47664                           ;incstack = 0
 47665   009F90  EE20 F002          	lfsr	2,2
 47666   009F94  502B               	movf	i2pop@q^0,w,c
 47667   009F96  26D9               	addwf	fsr2l,f,c
 47668   009F98  502C               	movf	(i2pop@q+1)^0,w,c
 47669   009F9A  22DA               	addwfc	fsr2h,f,c
 47670   009F9C  EE10 F003          	lfsr	1,3
 47671   009FA0  502B               	movf	i2pop@q^0,w,c
 47672   009FA2  26E1               	addwf	fsr1l,f,c
 47673   009FA4  502C               	movf	(i2pop@q+1)^0,w,c
 47674   009FA6  22E2               	addwfc	fsr1h,f,c
 47675   009FA8  50DE               	movf	postinc2,w,c
 47676   009FAA  18E6               	xorwf	postinc1,w,c
 47677   009FAC  A4D8               	btfss	status,2,c
 47678   009FAE  D005               	goto	i2l20589
 47679                           
 47680                           ;../../VLCBlib_PIC/messageQueue.c: 99:         return ((void*)0);
 47681   009FB0  0E00               	movlw	0
 47682   009FB2  6E2B               	movwf	?i2_pop^0,c
 47683   009FB4  0E00               	movlw	0
 47684   009FB6  6E2C               	movwf	(?i2_pop+1)^0,c
 47685   009FB8  0012               	return	
 47686   009FBA                     i2l20589:
 47687                           
 47688                           ;../../VLCBlib_PIC/messageQueue.c: 101:  ret = &(q->messages[q->readIndex++]);
 47689   009FBA  EE20 F002          	lfsr	2,2
 47690   009FBE  502B               	movf	i2pop@q^0,w,c
 47691   009FC0  26D9               	addwf	fsr2l,f,c
 47692   009FC2  502C               	movf	(i2pop@q+1)^0,w,c
 47693   009FC4  22DA               	addwfc	fsr2h,f,c
 47694   009FC6  50DF               	movf	indf2,w,c
 47695   009FC8  6E2D               	movwf	??i2_pop^0,c
 47696   009FCA  502D               	movf	??i2_pop^0,w,c
 47697   009FCC  0D09               	mullw	9
 47698   009FCE  CFF3 F02E          	movff	prodl,??i2_pop+1
 47699   009FD2  CFF4 F02F          	movff	prodh,??i2_pop+2
 47700   009FD6  C02B  FFD9         	movff	i2pop@q,fsr2l
 47701   009FDA  C02C  FFDA         	movff	i2pop@q+1,fsr2h
 47702   009FDE  CFDE F030          	movff	postinc2,??i2_pop+3
 47703   009FE2  CFDD F031          	movff	postdec2,??i2_pop+4
 47704   009FE6  502E               	movf	(??i2_pop+1)^0,w,c
 47705   009FE8  2430               	addwf	(??i2_pop+3)^0,w,c
 47706   009FEA  6E32               	movwf	i2pop@ret^0,c
 47707   009FEC  502F               	movf	(??i2_pop+2)^0,w,c
 47708   009FEE  2031               	addwfc	(??i2_pop+4)^0,w,c
 47709   009FF0  6E33               	movwf	(i2pop@ret+1)^0,c
 47710   009FF2  EE20 F002          	lfsr	2,2
 47711   009FF6  502B               	movf	i2pop@q^0,w,c
 47712   009FF8  26D9               	addwf	fsr2l,f,c
 47713   009FFA  502C               	movf	(i2pop@q+1)^0,w,c
 47714   009FFC  22DA               	addwfc	fsr2h,f,c
 47715   009FFE  2ADF               	incf	indf2,f,c
 47716                           
 47717                           ;../../VLCBlib_PIC/messageQueue.c: 102:  if (q->readIndex >= q->size) q->readIndex = 0;
 47718   00A000  EE20 F004          	lfsr	2,4
 47719   00A004  502B               	movf	i2pop@q^0,w,c
 47720   00A006  26D9               	addwf	fsr2l,f,c
 47721   00A008  502C               	movf	(i2pop@q+1)^0,w,c
 47722   00A00A  22DA               	addwfc	fsr2h,f,c
 47723   00A00C  EE10 F002          	lfsr	1,2
 47724   00A010  502B               	movf	i2pop@q^0,w,c
 47725   00A012  26E1               	addwf	fsr1l,f,c
 47726   00A014  502C               	movf	(i2pop@q+1)^0,w,c
 47727   00A016  22E2               	addwfc	fsr1h,f,c
 47728   00A018  50DE               	movf	postinc2,w,c
 47729   00A01A  5CE6               	subwf	postinc1,w,c
 47730   00A01C  A0D8               	btfss	status,0,c
 47731   00A01E  D007               	goto	i2l20597
 47732   00A020  EE20 F002          	lfsr	2,2
 47733   00A024  502B               	movf	i2pop@q^0,w,c
 47734   00A026  26D9               	addwf	fsr2l,f,c
 47735   00A028  502C               	movf	(i2pop@q+1)^0,w,c
 47736   00A02A  22DA               	addwfc	fsr2h,f,c
 47737   00A02C  6ADF               	clrf	indf2,c
 47738   00A02E                     i2l20597:
 47739                           
 47740                           ;../../VLCBlib_PIC/messageQueue.c: 103:  return ret;
 47741   00A02E  C032  F02B         	movff	i2pop@ret,?i2_pop
 47742   00A032  C033  F02C         	movff	i2pop@ret+1,?i2_pop+1
 47743   00A036  0012               	return		;funcret
 47744   00A038                     __end_ofi2_pop:
 47745                           	callstack 0
 47746                           
 47747 ;; *************** function i2_isEvent *****************
 47748 ;; Defined at:
 47749 ;;		line 1118 in file "../../VLCBlib_PIC/vlcb.c"
 47750 ;; Parameters:    Size  Location     Type
 47751 ;;  opc             1    wreg     unsigned char 
 47752 ;; Auto vars:     Size  Location     Type
 47753 ;;  opc             1    1[COMRAM] unsigned char 
 47754 ;; Return value:  Size  Location     Type
 47755 ;;                  1    wreg      enum E12766
 47756 ;; Registers used:
 47757 ;;		wreg, status,2, status,0
 47758 ;; Tracked objects:
 47759 ;;		On entry : 0/0
 47760 ;;		On exit  : 0/0
 47761 ;;		Unchanged: 0/0
 47762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47764 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47766 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47767 ;;Total ram usage:        2 bytes
 47768 ;; Hardware stack levels used: 1
 47769 ;; This function calls:
 47770 ;;		Nothing
 47771 ;; This function is called by:
 47772 ;;		i2_checkTxFifo
 47773 ;; This function uses a non-reentrant model
 47774 ;;
 47775                           
 47776                           	psect	text221
 47777   00C6BC                     __ptext221:
 47778                           	callstack 0
 47779   00C6BC                     i2_isEvent:
 47780                           	callstack 3
 47781                           
 47782                           ;incstack = 0
 47783                           ;i2isEvent@opc stored from wreg
 47784   00C6BC  6E2C               	movwf	i2isEvent@opc^0,c
 47785                           
 47786                           ;../../VLCBlib_PIC/vlcb.c: 1119:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 47787   00C6BE  0E00               	movlw	0
 47788   00C6C0  6E2B               	movwf	i2_isEvent$4896^0,c
 47789   00C6C2  502C               	movf	i2isEvent@opc^0,w,c
 47790   00C6C4  0B90               	andlw	144
 47791   00C6C6  0A90               	xorlw	144
 47792   00C6C8  A4D8               	btfss	status,2,c
 47793   00C6CA  D008               	goto	i2l2069
 47794   00C6CC  502C               	movf	i2isEvent@opc^0,w,c
 47795   00C6CE  0AFF               	xorlw	255
 47796   00C6D0  0B06               	andlw	6
 47797   00C6D2  0A06               	xorlw	6
 47798   00C6D4  A4D8               	btfss	status,2,c
 47799   00C6D6  D002               	goto	i2l2069
 47800   00C6D8  0E01               	movlw	1
 47801   00C6DA  6E2B               	movwf	i2_isEvent$4896^0,c
 47802   00C6DC                     i2l2069:
 47803   00C6DC  502B               	movf	i2_isEvent$4896^0,w,c
 47804   00C6DE  0012               	return		;funcret
 47805   00C6E0                     __end_ofi2_isEvent:
 47806                           	callstack 0
 47807                           
 47808 ;; *************** function i2_canFillRxFifo *****************
 47809 ;; Defined at:
 47810 ;;		line 848 in file "../../VLCBlib_PIC/can18_ecan.c"
 47811 ;; Parameters:    Size  Location     Type
 47812 ;;		None
 47813 ;; Auto vars:     Size  Location     Type
 47814 ;;  ptr             2   14[COMRAM] PTR unsigned char 
 47815 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 47816 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 47817 ;;		 -> NULL(0), 
 47818 ;;  m               2   12[COMRAM] PTR struct Message
 47819 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 47820 ;;  hiIndex         1    0        unsigned char 
 47821 ;; Return value:  Size  Location     Type
 47822 ;;                  1    wreg      void 
 47823 ;; Registers used:
 47824 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 47825 ;; Tracked objects:
 47826 ;;		On entry : 0/0
 47827 ;;		On exit  : 0/0
 47828 ;;		Unchanged: 0/0
 47829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47831 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47833 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47834 ;;Total ram usage:        4 bytes
 47835 ;; Hardware stack levels used: 1
 47836 ;; Hardware stack levels required when called: 1
 47837 ;; This function calls:
 47838 ;;		i2_getBufferPointer
 47839 ;;		i2_getNextWriteMessage
 47840 ;;		i2_updateModuleErrorStatus
 47841 ;; This function is called by:
 47842 ;;		i2_canIsr
 47843 ;; This function uses a non-reentrant model
 47844 ;;
 47845                           
 47846                           	psect	text222
 47847   007610                     __ptext222:
 47848                           	callstack 0
 47849   007610                     i2_canFillRxFifo:
 47850                           	callstack 3
 47851                           
 47852                           ;../../VLCBlib_PIC/can18_ecan.c: 849:     uint8_t *ptr;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          850:     uint8_t hiIndex;;../../VLCBlib_PIC/can18_ecan.c: 851:     Message * m;;../../VL
      +                          CBlib_PIC/can18_ecan.c: 853:     while (COMSTATbits.NOT_FIFOEMPTY) {
 47853                           
 47854                           ;incstack = 0
 47855   007610  D0B2               	goto	i2l15741
 47856   007612                     i2l15703:
 47857                           
 47858                           ;../../VLCBlib_PIC/can18_ecan.c: 854:         ptr = getBufferPointer(CANCON & 0x07U);
 47859   007612  506F               	movf	111,w,c	;volatile
 47860   007614  0B07               	andlw	7
 47861   007616  ECD1  F052         	call	i2_getBufferPointer
 47862   00761A  C02B  F039         	movff	?i2_getBufferPointer,i2canFillRxFifo@ptr
 47863   00761E  C02C  F03A         	movff	?i2_getBufferPointer+1,i2canFillRxFifo@ptr+1
 47864                           
 47865                           ;../../VLCBlib_PIC/can18_ecan.c: 855:         PIR5bits.RXBnIF = 0;
 47866   007622  9277               	bcf	119,1,c	;volatile
 47867                           
 47868                           ;../../VLCBlib_PIC/can18_ecan.c: 856:         if (COMSTATbits.RXB1OVFL) {
 47869   007624  BC71               	btfsc	113,6,c	;volatile
 47870                           
 47871                           ;../../VLCBlib_PIC/can18_ecan.c: 857:             COMSTATbits.RXB1OVFL = 0;
 47872   007626  9C71               	bcf	113,6,c	;volatile
 47873                           
 47874                           ;../../VLCBlib_PIC/can18_ecan.c: 859:         if ((ptr[2] & 0x08) == 0) {
 47875   007628  EE20 F002          	lfsr	2,2
 47876   00762C  5039               	movf	i2canFillRxFifo@ptr^0,w,c
 47877   00762E  26D9               	addwf	fsr2l,f,c
 47878   007630  503A               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47879   007632  22DA               	addwfc	fsr2h,f,c
 47880   007634  B6DF               	btfsc	indf2,3,c
 47881   007636  D092               	goto	i2l15731
 47882                           
 47883                           ;../../VLCBlib_PIC/can18_ecan.c: 862:             m = getNextWriteMessage(&rxQueue);
 47884   007638  0E26               	movlw	low _rxQueue
 47885   00763A  6E2B               	movwf	i2getNextWriteMessage@q^0,c
 47886   00763C  EC80  F048         	call	i2_getNextWriteMessage	;wreg free
 47887   007640  C02B  F037         	movff	?i2_getNextWriteMessage,i2canFillRxFifo@m
 47888   007644  C02C  F038         	movff	?i2_getNextWriteMessage+1,i2canFillRxFifo@m+1
 47889                           
 47890                           ;../../VLCBlib_PIC/can18_ecan.c: 863:             if (m == ((void*)0)) {
 47891   007648  5037               	movf	i2canFillRxFifo@m^0,w,c
 47892   00764A  1038               	iorwf	(i2canFillRxFifo@m+1)^0,w,c
 47893   00764C  A4D8               	btfss	status,2,c
 47894   00764E  D009               	goto	i2l15727
 47895                           
 47896                           ;../../VLCBlib_PIC/can18_ecan.c: 865:                 canDiagnostics[0x08].asUint++;
 47897   007650  0101               	movlb	1	; () banked
 47898   007652  4B76               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 47899   007654  2B77               	incf	(_canDiagnostics+17)& (0+255),f,b
 47900                           
 47901                           ; BSR set to: 1
 47902                           ;../../VLCBlib_PIC/can18_ecan.c: 866:                 updateModuleErrorStatus();
 47903   007656  EC67  F064         	call	i2_updateModuleErrorStatus	;wreg free
 47904                           
 47905                           ;../../VLCBlib_PIC/can18_ecan.c: 869:                 if (PIR5bits.IRXIF) {
 47906   00765A  AE77               	btfss	119,7,c	;volatile
 47907   00765C  0012               	return	
 47908                           
 47909                           ;../../VLCBlib_PIC/can18_ecan.c: 870:                     PIR5bits.IRXIF = 0;
 47910   00765E  9E77               	bcf	119,7,c	;volatile
 47911   007660  0012               	return	
 47912   007662                     i2l15727:
 47913                           
 47914                           ;../../VLCBlib_PIC/can18_ecan.c: 875:                 m->opc = ptr[6];
 47915   007662  EE20 F006          	lfsr	2,6
 47916   007666  5039               	movf	i2canFillRxFifo@ptr^0,w,c
 47917   007668  26D9               	addwf	fsr2l,f,c
 47918   00766A  503A               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47919   00766C  22DA               	addwfc	fsr2h,f,c
 47920   00766E  EE10 F001          	lfsr	1,1
 47921   007672  5037               	movf	i2canFillRxFifo@m^0,w,c
 47922   007674  26E1               	addwf	fsr1l,f,c
 47923   007676  5038               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47924   007678  22E2               	addwfc	fsr1h,f,c
 47925   00767A  CFDF FFE7          	movff	indf2,indf1
 47926                           
 47927                           ;../../VLCBlib_PIC/can18_ecan.c: 876:                 m->bytes[0] = ptr[7];
 47928   00767E  EE20 F007          	lfsr	2,7
 47929   007682  5039               	movf	i2canFillRxFifo@ptr^0,w,c
 47930   007684  26D9               	addwf	fsr2l,f,c
 47931   007686  503A               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47932   007688  22DA               	addwfc	fsr2h,f,c
 47933   00768A  EE10 F002          	lfsr	1,2
 47934   00768E  5037               	movf	i2canFillRxFifo@m^0,w,c
 47935   007690  26E1               	addwf	fsr1l,f,c
 47936   007692  5038               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47937   007694  22E2               	addwfc	fsr1h,f,c
 47938   007696  CFDF FFE7          	movff	indf2,indf1
 47939                           
 47940                           ;../../VLCBlib_PIC/can18_ecan.c: 877:                 m->bytes[1] = ptr[8];
 47941   00769A  EE20 F008          	lfsr	2,8
 47942   00769E  5039               	movf	i2canFillRxFifo@ptr^0,w,c
 47943   0076A0  26D9               	addwf	fsr2l,f,c
 47944   0076A2  503A               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47945   0076A4  22DA               	addwfc	fsr2h,f,c
 47946   0076A6  EE10 F003          	lfsr	1,3
 47947   0076AA  5037               	movf	i2canFillRxFifo@m^0,w,c
 47948   0076AC  26E1               	addwf	fsr1l,f,c
 47949   0076AE  5038               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47950   0076B0  22E2               	addwfc	fsr1h,f,c
 47951   0076B2  CFDF FFE7          	movff	indf2,indf1
 47952                           
 47953                           ;../../VLCBlib_PIC/can18_ecan.c: 878:                 m->bytes[2] = ptr[9];
 47954   0076B6  EE20 F009          	lfsr	2,9
 47955   0076BA  5039               	movf	i2canFillRxFifo@ptr^0,w,c
 47956   0076BC  26D9               	addwf	fsr2l,f,c
 47957   0076BE  503A               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47958   0076C0  22DA               	addwfc	fsr2h,f,c
 47959   0076C2  EE10 F004          	lfsr	1,4
 47960   0076C6  5037               	movf	i2canFillRxFifo@m^0,w,c
 47961   0076C8  26E1               	addwf	fsr1l,f,c
 47962   0076CA  5038               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47963   0076CC  22E2               	addwfc	fsr1h,f,c
 47964   0076CE  CFDF FFE7          	movff	indf2,indf1
 47965                           
 47966                           ;../../VLCBlib_PIC/can18_ecan.c: 879:                 m->bytes[3] = ptr[10];
 47967   0076D2  EE20 F00A          	lfsr	2,10
 47968   0076D6  5039               	movf	i2canFillRxFifo@ptr^0,w,c
 47969   0076D8  26D9               	addwf	fsr2l,f,c
 47970   0076DA  503A               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47971   0076DC  22DA               	addwfc	fsr2h,f,c
 47972   0076DE  EE10 F005          	lfsr	1,5
 47973   0076E2  5037               	movf	i2canFillRxFifo@m^0,w,c
 47974   0076E4  26E1               	addwf	fsr1l,f,c
 47975   0076E6  5038               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47976   0076E8  22E2               	addwfc	fsr1h,f,c
 47977   0076EA  CFDF FFE7          	movff	indf2,indf1
 47978                           
 47979                           ;../../VLCBlib_PIC/can18_ecan.c: 880:                 m->bytes[4] = ptr[11];
 47980   0076EE  EE20 F00B          	lfsr	2,11
 47981   0076F2  5039               	movf	i2canFillRxFifo@ptr^0,w,c
 47982   0076F4  26D9               	addwf	fsr2l,f,c
 47983   0076F6  503A               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47984   0076F8  22DA               	addwfc	fsr2h,f,c
 47985   0076FA  EE10 F006          	lfsr	1,6
 47986   0076FE  5037               	movf	i2canFillRxFifo@m^0,w,c
 47987   007700  26E1               	addwf	fsr1l,f,c
 47988   007702  5038               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47989   007704  22E2               	addwfc	fsr1h,f,c
 47990   007706  CFDF FFE7          	movff	indf2,indf1
 47991                           
 47992                           ;../../VLCBlib_PIC/can18_ecan.c: 881:                 m->bytes[5] = ptr[12];
 47993   00770A  EE20 F00C          	lfsr	2,12
 47994   00770E  5039               	movf	i2canFillRxFifo@ptr^0,w,c
 47995   007710  26D9               	addwf	fsr2l,f,c
 47996   007712  503A               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47997   007714  22DA               	addwfc	fsr2h,f,c
 47998   007716  EE10 F007          	lfsr	1,7
 47999   00771A  5037               	movf	i2canFillRxFifo@m^0,w,c
 48000   00771C  26E1               	addwf	fsr1l,f,c
 48001   00771E  5038               	movf	(i2canFillRxFifo@m+1)^0,w,c
 48002   007720  22E2               	addwfc	fsr1h,f,c
 48003   007722  CFDF FFE7          	movff	indf2,indf1
 48004                           
 48005                           ;../../VLCBlib_PIC/can18_ecan.c: 882:                 m->bytes[6] = ptr[13];
 48006   007726  EE20 F00D          	lfsr	2,13
 48007   00772A  5039               	movf	i2canFillRxFifo@ptr^0,w,c
 48008   00772C  26D9               	addwf	fsr2l,f,c
 48009   00772E  503A               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 48010   007730  22DA               	addwfc	fsr2h,f,c
 48011   007732  EE10 F008          	lfsr	1,8
 48012   007736  5037               	movf	i2canFillRxFifo@m^0,w,c
 48013   007738  26E1               	addwf	fsr1l,f,c
 48014   00773A  5038               	movf	(i2canFillRxFifo@m+1)^0,w,c
 48015   00773C  22E2               	addwfc	fsr1h,f,c
 48016   00773E  CFDF FFE7          	movff	indf2,indf1
 48017                           
 48018                           ;../../VLCBlib_PIC/can18_ecan.c: 883:                 m->len = ptr[5]&0xF;
 48019   007742  EE20 F005          	lfsr	2,5
 48020   007746  5039               	movf	i2canFillRxFifo@ptr^0,w,c
 48021   007748  26D9               	addwf	fsr2l,f,c
 48022   00774A  503A               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 48023   00774C  22DA               	addwfc	fsr2h,f,c
 48024   00774E  50DF               	movf	indf2,w,c
 48025   007750  0B0F               	andlw	15
 48026   007752  C037  FFD9         	movff	i2canFillRxFifo@m,fsr2l
 48027   007756  C038  FFDA         	movff	i2canFillRxFifo@m+1,fsr2h
 48028   00775A  6EDF               	movwf	indf2,c
 48029   00775C                     i2l15731:
 48030                           
 48031                           ;../../VLCBlib_PIC/can18_ecan.c: 887:         if (PIR5bits.IRXIF) {
 48032   00775C  AE77               	btfss	119,7,c	;volatile
 48033   00775E  D004               	goto	i2l15737
 48034                           
 48035                           ;../../VLCBlib_PIC/can18_ecan.c: 889:             canDiagnostics[0x01].asUint++;
 48036   007760  0101               	movlb	1	; () banked
 48037   007762  4B68               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 48038   007764  2B69               	incf	(_canDiagnostics+3)& (0+255),f,b
 48039                           
 48040                           ; BSR set to: 1
 48041                           ;../../VLCBlib_PIC/can18_ecan.c: 891:             PIR5bits.IRXIF = 0;
 48042   007766  9E77               	bcf	119,7,c	;volatile
 48043   007768                     i2l15737:
 48044                           
 48045                           ;../../VLCBlib_PIC/can18_ecan.c: 894:         ptr[0] &= 0x7f;
 48046   007768  C039  FFD9         	movff	i2canFillRxFifo@ptr,fsr2l
 48047   00776C  C03A  FFDA         	movff	i2canFillRxFifo@ptr+1,fsr2h
 48048   007770  0E7F               	movlw	127
 48049   007772  16DF               	andwf	indf2,f,c
 48050                           
 48051                           ;../../VLCBlib_PIC/can18_ecan.c: 895:         PIR5bits.FIFOWMIF = 0;
 48052   007774  9077               	bcf	119,0,c	;volatile
 48053   007776                     i2l15741:
 48054                           
 48055                           ;../../VLCBlib_PIC/can18_ecan.c: 853:     while (COMSTATbits.NOT_FIFOEMPTY) {
 48056   007776  AE71               	btfss	113,7,c	;volatile
 48057   007778  0012               	return	
 48058   00777A  D74B               	goto	i2l15703
 48059   00777C                     __end_ofi2_canFillRxFifo:
 48060                           	callstack 0
 48061                           
 48062 ;; *************** function i2_updateModuleErrorStatus *****************
 48063 ;; Defined at:
 48064 ;;		line 617 in file "../../VLCBlib_PIC/mns.c"
 48065 ;; Parameters:    Size  Location     Type
 48066 ;;		None
 48067 ;; Auto vars:     Size  Location     Type
 48068 ;;		None
 48069 ;; Return value:  Size  Location     Type
 48070 ;;                  1    wreg      void 
 48071 ;; Registers used:
 48072 ;;		wreg, status,2, status,0
 48073 ;; Tracked objects:
 48074 ;;		On entry : 0/0
 48075 ;;		On exit  : 0/0
 48076 ;;		Unchanged: 0/0
 48077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48082 ;;Total ram usage:        0 bytes
 48083 ;; Hardware stack levels used: 1
 48084 ;; This function calls:
 48085 ;;		Nothing
 48086 ;; This function is called by:
 48087 ;;		i2_checkTxFifo
 48088 ;;		i2_checkCANTimeout
 48089 ;;		i2_canTxError
 48090 ;;		i2_canFillRxFifo
 48091 ;; This function uses a non-reentrant model
 48092 ;;
 48093                           
 48094                           	psect	text223
 48095   00C8CE                     __ptext223:
 48096                           	callstack 0
 48097   00C8CE                     i2_updateModuleErrorStatus:
 48098                           	callstack 3
 48099                           
 48100                           ;../../VLCBlib_PIC/mns.c: 618:     if (mnsDiagnostics[0x01].asBytes.lo < 0xFF) {
 48101                           
 48102                           ;incstack = 0
 48103   00C8CE  0101               	movlb	1	; () banked
 48104   00C8D0  298E               	incf	(_mnsDiagnostics+2)& (0+255),w,b
 48105   00C8D2  B4D8               	btfsc	status,2,c
 48106   00C8D4  0012               	return	
 48107                           
 48108                           ; BSR set to: 1
 48109                           ;../../VLCBlib_PIC/mns.c: 619:         mnsDiagnostics[0x01].asBytes.lo++;
 48110   00C8D6  2B8E               	incf	(_mnsDiagnostics+2)& (0+255),f,b
 48111                           
 48112                           ; BSR set to: 1
 48113   00C8D8  0012               	return		;funcret
 48114   00C8DA                     __end_ofi2_updateModuleErrorStatus:
 48115                           	callstack 0
 48116                           
 48117 ;; *************** function i2_getNextWriteMessage *****************
 48118 ;; Defined at:
 48119 ;;		line 80 in file "../../VLCBlib_PIC/messageQueue.c"
 48120 ;; Parameters:    Size  Location     Type
 48121 ;;  q               1    0[COMRAM] PTR struct MessageQueue
 48122 ;;		 -> rxQueue(5), 
 48123 ;; Auto vars:     Size  Location     Type
 48124 ;;  wr              1   11[COMRAM] unsigned char 
 48125 ;; Return value:  Size  Location     Type
 48126 ;;                  2    0[COMRAM] PTR struct Message
 48127 ;; Registers used:
 48128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 48129 ;; Tracked objects:
 48130 ;;		On entry : 0/0
 48131 ;;		On exit  : 0/0
 48132 ;;		Unchanged: 0/0
 48133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48134 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48135 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48136 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48137 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48138 ;;Total ram usage:       12 bytes
 48139 ;; Hardware stack levels used: 1
 48140 ;; This function calls:
 48141 ;;		Nothing
 48142 ;; This function is called by:
 48143 ;;		i2_checkTxFifo
 48144 ;;		i2_canFillRxFifo
 48145 ;; This function uses a non-reentrant model
 48146 ;;
 48147                           
 48148                           	psect	text224
 48149   009100                     __ptext224:
 48150                           	callstack 0
 48151   009100                     i2_getNextWriteMessage:
 48152                           	callstack 3
 48153                           
 48154                           ; BSR set to: 1
 48155                           ;incstack = 0
 48156   009100  502B               	movf	i2getNextWriteMessage@q^0,w,c
 48157   009102  6ED9               	movwf	fsr2l,c
 48158   009104  6ADA               	clrf	fsr2h,c
 48159   009106  0E02               	movlw	2
 48160   009108  26D9               	addwf	fsr2l,f,c
 48161   00910A  50DF               	movf	indf2,w,c
 48162   00910C  6E2D               	movwf	??i2_getNextWriteMessage^0,c
 48163   00910E  6A2E               	clrf	(??i2_getNextWriteMessage+1)^0,c
 48164   009110  502B               	movf	i2getNextWriteMessage@q^0,w,c
 48165   009112  6ED9               	movwf	fsr2l,c
 48166   009114  6ADA               	clrf	fsr2h,c
 48167   009116  0E04               	movlw	4
 48168   009118  26D9               	addwf	fsr2l,f,c
 48169   00911A  50DF               	movf	indf2,w,c
 48170   00911C  6E2F               	movwf	(??i2_getNextWriteMessage+2)^0,c
 48171   00911E  0EFF               	movlw	255
 48172   009120  242F               	addwf	(??i2_getNextWriteMessage+2)^0,w,c
 48173   009122  6E30               	movwf	(??i2_getNextWriteMessage+3)^0,c
 48174   009124  6A31               	clrf	(??i2_getNextWriteMessage+4)^0,c
 48175   009126  0EFF               	movlw	255
 48176   009128  2231               	addwfc	(??i2_getNextWriteMessage+4)^0,f,c
 48177   00912A  502B               	movf	i2getNextWriteMessage@q^0,w,c
 48178   00912C  6ED9               	movwf	fsr2l,c
 48179   00912E  6ADA               	clrf	fsr2h,c
 48180   009130  0E03               	movlw	3
 48181   009132  26D9               	addwf	fsr2l,f,c
 48182   009134  50DF               	movf	indf2,w,c
 48183   009136  6E32               	movwf	(??i2_getNextWriteMessage+5)^0,c
 48184   009138  6A33               	clrf	(??i2_getNextWriteMessage+6)^0,c
 48185   00913A  0E01               	movlw	1
 48186   00913C  2632               	addwf	(??i2_getNextWriteMessage+5)^0,f,c
 48187   00913E  0E00               	movlw	0
 48188   009140  2233               	addwfc	(??i2_getNextWriteMessage+6)^0,f,c
 48189   009142  5030               	movf	(??i2_getNextWriteMessage+3)^0,w,c
 48190   009144  1432               	andwf	(??i2_getNextWriteMessage+5)^0,w,c
 48191   009146  6E34               	movwf	(??i2_getNextWriteMessage+7)^0,c
 48192   009148  5031               	movf	(??i2_getNextWriteMessage+4)^0,w,c
 48193   00914A  1433               	andwf	(??i2_getNextWriteMessage+6)^0,w,c
 48194   00914C  6E35               	movwf	(??i2_getNextWriteMessage+8)^0,c
 48195   00914E  502D               	movf	??i2_getNextWriteMessage^0,w,c
 48196   009150  1834               	xorwf	(??i2_getNextWriteMessage+7)^0,w,c
 48197   009152  E109               	bnz	i2l13031
 48198   009154  502E               	movf	(??i2_getNextWriteMessage+1)^0,w,c
 48199   009156  1835               	xorwf	(??i2_getNextWriteMessage+8)^0,w,c
 48200   009158  A4D8               	btfss	status,2,c
 48201   00915A  D005               	goto	i2l13031
 48202   00915C  0E00               	movlw	0
 48203   00915E  6E2B               	movwf	?i2_getNextWriteMessage^0,c
 48204   009160  0E00               	movlw	0
 48205   009162  6E2C               	movwf	(?i2_getNextWriteMessage+1)^0,c
 48206   009164  0012               	return	
 48207   009166                     i2l13031:
 48208   009166  502B               	movf	i2getNextWriteMessage@q^0,w,c
 48209   009168  6ED9               	movwf	fsr2l,c
 48210   00916A  6ADA               	clrf	fsr2h,c
 48211   00916C  0E03               	movlw	3
 48212   00916E  26D9               	addwf	fsr2l,f,c
 48213   009170  50DF               	movf	indf2,w,c
 48214   009172  6E36               	movwf	i2getNextWriteMessage@wr^0,c
 48215   009174  502B               	movf	i2getNextWriteMessage@q^0,w,c
 48216   009176  6ED9               	movwf	fsr2l,c
 48217   009178  6ADA               	clrf	fsr2h,c
 48218   00917A  0E03               	movlw	3
 48219   00917C  26D9               	addwf	fsr2l,f,c
 48220   00917E  2ADF               	incf	indf2,f,c
 48221   009180  502B               	movf	i2getNextWriteMessage@q^0,w,c
 48222   009182  6ED9               	movwf	fsr2l,c
 48223   009184  6ADA               	clrf	fsr2h,c
 48224   009186  0E04               	movlw	4
 48225   009188  26D9               	addwf	fsr2l,f,c
 48226   00918A  502B               	movf	i2getNextWriteMessage@q^0,w,c
 48227   00918C  6EE1               	movwf	fsr1l,c
 48228   00918E  6AE2               	clrf	fsr1h,c
 48229   009190  0E03               	movlw	3
 48230   009192  26E1               	addwf	fsr1l,f,c
 48231   009194  50DE               	movf	postinc2,w,c
 48232   009196  5CE6               	subwf	postinc1,w,c
 48233   009198  A0D8               	btfss	status,0,c
 48234   00919A  D006               	goto	i2l13037
 48235   00919C  502B               	movf	i2getNextWriteMessage@q^0,w,c
 48236   00919E  6ED9               	movwf	fsr2l,c
 48237   0091A0  6ADA               	clrf	fsr2h,c
 48238   0091A2  0E03               	movlw	3
 48239   0091A4  26D9               	addwf	fsr2l,f,c
 48240   0091A6  6ADF               	clrf	indf2,c
 48241   0091A8                     i2l13037:
 48242   0091A8  5036               	movf	i2getNextWriteMessage@wr^0,w,c
 48243   0091AA  0D09               	mullw	9
 48244   0091AC  CFF3 F02D          	movff	prodl,??i2_getNextWriteMessage
 48245   0091B0  CFF4 F02E          	movff	prodh,??i2_getNextWriteMessage+1
 48246   0091B4  502B               	movf	i2getNextWriteMessage@q^0,w,c
 48247   0091B6  6ED9               	movwf	fsr2l,c
 48248   0091B8  6ADA               	clrf	fsr2h,c
 48249   0091BA  CFDE F02F          	movff	postinc2,??i2_getNextWriteMessage+2
 48250   0091BE  CFDD F030          	movff	postdec2,??i2_getNextWriteMessage+3
 48251   0091C2  502D               	movf	??i2_getNextWriteMessage^0,w,c
 48252   0091C4  242F               	addwf	(??i2_getNextWriteMessage+2)^0,w,c
 48253   0091C6  6E2B               	movwf	?i2_getNextWriteMessage^0,c
 48254   0091C8  502E               	movf	(??i2_getNextWriteMessage+1)^0,w,c
 48255   0091CA  2030               	addwfc	(??i2_getNextWriteMessage+3)^0,w,c
 48256   0091CC  6E2C               	movwf	(?i2_getNextWriteMessage+1)^0,c
 48257   0091CE  0012               	return		;funcret
 48258   0091D0                     __end_ofi2_getNextWriteMessage:
 48259                           	callstack 0
 48260                           
 48261 ;; *************** function i2_getBufferPointer *****************
 48262 ;; Defined at:
 48263 ;;		line 667 in file "../../VLCBlib_PIC/can18_ecan.c"
 48264 ;; Parameters:    Size  Location     Type
 48265 ;;  b               1    wreg     unsigned char 
 48266 ;; Auto vars:     Size  Location     Type
 48267 ;;  b               1    2[COMRAM] unsigned char 
 48268 ;; Return value:  Size  Location     Type
 48269 ;;                  2    0[COMRAM] PTR unsigned char 
 48270 ;; Registers used:
 48271 ;;		wreg, status,2, status,0
 48272 ;; Tracked objects:
 48273 ;;		On entry : 0/0
 48274 ;;		On exit  : 0/0
 48275 ;;		Unchanged: 0/0
 48276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48277 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48278 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48280 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48281 ;;Total ram usage:        3 bytes
 48282 ;; Hardware stack levels used: 1
 48283 ;; This function calls:
 48284 ;;		Nothing
 48285 ;; This function is called by:
 48286 ;;		i2_canFillRxFifo
 48287 ;; This function uses a non-reentrant model
 48288 ;;
 48289                           
 48290                           	psect	text225
 48291   00A5A2                     __ptext225:
 48292                           	callstack 0
 48293   00A5A2                     i2_getBufferPointer:
 48294                           	callstack 3
 48295                           
 48296                           ;incstack = 0
 48297                           ;i2getBufferPointer@b stored from wreg
 48298   00A5A2  6E2D               	movwf	i2getBufferPointer@b^0,c
 48299                           
 48300                           ;../../VLCBlib_PIC/can18_ecan.c: 668:     switch (b) {
 48301   00A5A4  D02D               	goto	i2l14153
 48302   00A5A6                     i2l14115:
 48303                           
 48304                           ;../../VLCBlib_PIC/can18_ecan.c: 670:             return (uint8_t*) & RXB0CON;
 48305   00A5A6  0E60               	movlw	96
 48306   00A5A8  6E2B               	movwf	?i2_getBufferPointer^0,c
 48307   00A5AA  0E0F               	movlw	15
 48308   00A5AC  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 48309   00A5AE  0012               	return	
 48310   00A5B0                     i2l14119:
 48311                           
 48312                           ;../../VLCBlib_PIC/can18_ecan.c: 672:             return (uint8_t*) & RXB1CON;
 48313   00A5B0  0E30               	movlw	48
 48314   00A5B2  6E2B               	movwf	?i2_getBufferPointer^0,c
 48315   00A5B4  0E0F               	movlw	15
 48316   00A5B6  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 48317   00A5B8  0012               	return	
 48318   00A5BA                     i2l14123:
 48319                           
 48320                           ;../../VLCBlib_PIC/can18_ecan.c: 674:             return (uint8_t*) & B0CON;
 48321   00A5BA  0E80               	movlw	128
 48322   00A5BC  6E2B               	movwf	?i2_getBufferPointer^0,c
 48323   00A5BE  0E0E               	movlw	14
 48324   00A5C0  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 48325   00A5C2  0012               	return	
 48326   00A5C4                     i2l14127:
 48327                           
 48328                           ;../../VLCBlib_PIC/can18_ecan.c: 676:             return (uint8_t*) & B1CON;
 48329   00A5C4  0E90               	movlw	144
 48330   00A5C6  6E2B               	movwf	?i2_getBufferPointer^0,c
 48331   00A5C8  0E0E               	movlw	14
 48332   00A5CA  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 48333   00A5CC  0012               	return	
 48334   00A5CE                     i2l14131:
 48335                           
 48336                           ;../../VLCBlib_PIC/can18_ecan.c: 678:             return (uint8_t*) & B2CON;
 48337   00A5CE  0EA0               	movlw	160
 48338   00A5D0  6E2B               	movwf	?i2_getBufferPointer^0,c
 48339   00A5D2  0E0E               	movlw	14
 48340   00A5D4  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 48341   00A5D6  0012               	return	
 48342   00A5D8                     i2l14135:
 48343                           
 48344                           ;../../VLCBlib_PIC/can18_ecan.c: 680:             return (uint8_t*) & B3CON;
 48345   00A5D8  0EB0               	movlw	176
 48346   00A5DA  6E2B               	movwf	?i2_getBufferPointer^0,c
 48347   00A5DC  0E0E               	movlw	14
 48348   00A5DE  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 48349   00A5E0  0012               	return	
 48350   00A5E2                     i2l14139:
 48351                           
 48352                           ;../../VLCBlib_PIC/can18_ecan.c: 682:             return (uint8_t*) & B4CON;
 48353   00A5E2  0EC0               	movlw	192
 48354   00A5E4  6E2B               	movwf	?i2_getBufferPointer^0,c
 48355   00A5E6  0E0E               	movlw	14
 48356   00A5E8  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 48357   00A5EA  0012               	return	
 48358   00A5EC                     i2l14143:
 48359                           
 48360                           ;../../VLCBlib_PIC/can18_ecan.c: 684:             return (uint8_t*) & B5CON;
 48361   00A5EC  0ED0               	movlw	208
 48362   00A5EE  6E2B               	movwf	?i2_getBufferPointer^0,c
 48363   00A5F0  0E0E               	movlw	14
 48364   00A5F2  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 48365   00A5F4  0012               	return	
 48366   00A5F6                     i2l14147:
 48367                           
 48368                           ;../../VLCBlib_PIC/can18_ecan.c: 686:             return ((void*)0);
 48369   00A5F6  0E00               	movlw	0
 48370   00A5F8  6E2B               	movwf	?i2_getBufferPointer^0,c
 48371   00A5FA  0E00               	movlw	0
 48372   00A5FC  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 48373   00A5FE  0012               	return	
 48374   00A600                     i2l14153:
 48375   00A600  502D               	movf	i2getBufferPointer@b^0,w,c
 48376                           
 48377                           ; Switch size 1, requested type "simple"
 48378                           ; Number of cases is 8, Range of values is 0 to 7
 48379                           ; switch strategies available:
 48380                           ; Name         Instructions Cycles
 48381                           ; simple_byte           25    13 (average)
 48382                           ;	Chosen strategy is simple_byte
 48383   00A602  0A00               	xorlw	0	; case 0
 48384   00A604  B4D8               	btfsc	status,2,c
 48385   00A606  D7CF               	goto	i2l14115
 48386   00A608  0A01               	xorlw	1	; case 1
 48387   00A60A  B4D8               	btfsc	status,2,c
 48388   00A60C  D7D1               	goto	i2l14119
 48389   00A60E  0A03               	xorlw	3	; case 2
 48390   00A610  B4D8               	btfsc	status,2,c
 48391   00A612  D7D3               	goto	i2l14123
 48392   00A614  0A01               	xorlw	1	; case 3
 48393   00A616  B4D8               	btfsc	status,2,c
 48394   00A618  D7D5               	goto	i2l14127
 48395   00A61A  0A07               	xorlw	7	; case 4
 48396   00A61C  B4D8               	btfsc	status,2,c
 48397   00A61E  D7D7               	goto	i2l14131
 48398   00A620  0A01               	xorlw	1	; case 5
 48399   00A622  B4D8               	btfsc	status,2,c
 48400   00A624  D7D9               	goto	i2l14135
 48401   00A626  0A03               	xorlw	3	; case 6
 48402   00A628  B4D8               	btfsc	status,2,c
 48403   00A62A  D7DB               	goto	i2l14139
 48404   00A62C  0A01               	xorlw	1	; case 7
 48405   00A62E  B4D8               	btfsc	status,2,c
 48406   00A630  D7DD               	goto	i2l14143
 48407   00A632  D7E1               	goto	i2l14147
 48408   00A634                     __end_ofi2_getBufferPointer:
 48409                           	callstack 0
 48410                           
 48411 ;; *************** function _APP_highIsr *****************
 48412 ;; Defined at:
 48413 ;;		line 712 in file "../main.c"
 48414 ;; Parameters:    Size  Location     Type
 48415 ;;		None
 48416 ;; Auto vars:     Size  Location     Type
 48417 ;;		None
 48418 ;; Return value:  Size  Location     Type
 48419 ;;                  1    wreg      void 
 48420 ;; Registers used:
 48421 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 48422 ;; Tracked objects:
 48423 ;;		On entry : 0/0
 48424 ;;		On exit  : 0/0
 48425 ;;		Unchanged: 0/0
 48426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48431 ;;Total ram usage:        0 bytes
 48432 ;; Hardware stack levels used: 1
 48433 ;; Hardware stack levels required when called: 2
 48434 ;; This function calls:
 48435 ;;		_timer1DoneInterruptHandler
 48436 ;;		_timer3DoneInterruptHandler
 48437 ;; This function is called by:
 48438 ;;		_highIsr
 48439 ;; This function uses a non-reentrant model
 48440 ;;
 48441                           
 48442                           	psect	text226
 48443   00C834                     __ptext226:
 48444                           	callstack 0
 48445   00C834                     _APP_highIsr:
 48446                           	callstack 3
 48447                           
 48448                           ;../main.c: 715:     if (PIR1bits.TMR1IF) {
 48449                           
 48450                           ;incstack = 0
 48451   00C834  A09E               	btfss	158,0,c	;volatile
 48452   00C836  D003               	goto	i2l16111
 48453                           
 48454                           ;../main.c: 716:         timer1DoneInterruptHandler();
 48455   00C838  ECF1  F062         	call	_timer1DoneInterruptHandler	;wreg free
 48456                           
 48457                           ;../main.c: 717:         PIR1bits.TMR1IF = 0;
 48458   00C83C  909E               	bcf	158,0,c	;volatile
 48459   00C83E                     i2l16111:
 48460                           
 48461                           ;../main.c: 719:     if (PIR2bits.TMR3IF) {
 48462   00C83E  A2A1               	btfss	161,1,c	;volatile
 48463   00C840  0012               	return	
 48464                           
 48465                           ;../main.c: 720:         timer3DoneInterruptHandler();
 48466   00C842  ECDD  F062         	call	_timer3DoneInterruptHandler	;wreg free
 48467                           
 48468                           ;../main.c: 721:         PIR2bits.TMR3IF = 0;
 48469   00C846  92A1               	bcf	161,1,c	;volatile
 48470   00C848  0012               	return		;funcret
 48471   00C84A                     __end_of_APP_highIsr:
 48472                           	callstack 0
 48473                           
 48474 ;; *************** function _timer3DoneInterruptHandler *****************
 48475 ;; Defined at:
 48476 ;;		line 249 in file "../servo.c"
 48477 ;; Parameters:    Size  Location     Type
 48478 ;;		None
 48479 ;; Auto vars:     Size  Location     Type
 48480 ;;		None
 48481 ;; Return value:  Size  Location     Type
 48482 ;;                  1    wreg      void 
 48483 ;; Registers used:
 48484 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 48485 ;; Tracked objects:
 48486 ;;		On entry : 0/0
 48487 ;;		On exit  : 0/0
 48488 ;;		Unchanged: 0/0
 48489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48494 ;;Total ram usage:        0 bytes
 48495 ;; Hardware stack levels used: 1
 48496 ;; Hardware stack levels required when called: 1
 48497 ;; This function calls:
 48498 ;;		i2_getNV
 48499 ;;		i2_setOutputPin
 48500 ;; This function is called by:
 48501 ;;		_APP_highIsr
 48502 ;; This function uses a non-reentrant model
 48503 ;;
 48504                           
 48505                           	psect	text227
 48506   00C5BA                     __ptext227:
 48507                           	callstack 0
 48508   00C5BA                     _timer3DoneInterruptHandler:
 48509                           	callstack 3
 48510                           
 48511                           ;../servo.c: 250:     T3CONbits.TMR3ON = 0;
 48512                           
 48513                           ;incstack = 0
 48514   00C5BA  90B1               	bcf	177,0,c	;volatile
 48515                           
 48516                           ;../servo.c: 251:     setOutputPin(servoInBlock+8, (uint8_t)getNV((16 + 7*(servoInBlock+
      +                          8) + 1)) & 0x20);
 48517   00C5BC  0100               	movlb	0	; () banked
 48518   00C5BE  51C9               	movf	_servoInBlock& (0+255),w,b
 48519   00C5C0  0D07               	mullw	7
 48520   00C5C2  50F3               	movf	243,w,c
 48521   00C5C4  0F49               	addlw	73
 48522   00C5C6  EC4A  F060         	call	i2_getNV
 48523   00C5CA  502B               	movf	?i2_getNV^0,w,c
 48524   00C5CC  0B20               	andlw	32
 48525   00C5CE  6E2F               	movwf	i2setOutputPin@state^0,c
 48526   00C5D0  0100               	movlb	0	; () banked
 48527   00C5D2  51C9               	movf	_servoInBlock& (0+255),w,b
 48528   00C5D4  0F08               	addlw	8
 48529   00C5D6  EC79  F039         	call	i2_setOutputPin
 48530                           
 48531                           ;../servo.c: 252:     servoActive[1] = 0;
 48532   00C5DA  0E00               	movlw	0
 48533   00C5DC  0100               	movlb	0	; () banked
 48534   00C5DE  6FB3               	movwf	(_servoActive+1)& (0+255),b
 48535                           
 48536                           ; BSR set to: 0
 48537   00C5E0  0012               	return		;funcret
 48538   00C5E2                     __end_of_timer3DoneInterruptHandler:
 48539                           	callstack 0
 48540                           
 48541 ;; *************** function _timer1DoneInterruptHandler *****************
 48542 ;; Defined at:
 48543 ;;		line 243 in file "../servo.c"
 48544 ;; Parameters:    Size  Location     Type
 48545 ;;		None
 48546 ;; Auto vars:     Size  Location     Type
 48547 ;;		None
 48548 ;; Return value:  Size  Location     Type
 48549 ;;                  1    wreg      void 
 48550 ;; Registers used:
 48551 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 48552 ;; Tracked objects:
 48553 ;;		On entry : 0/0
 48554 ;;		On exit  : 0/0
 48555 ;;		Unchanged: 0/0
 48556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48561 ;;Total ram usage:        0 bytes
 48562 ;; Hardware stack levels used: 1
 48563 ;; Hardware stack levels required when called: 1
 48564 ;; This function calls:
 48565 ;;		i2_getNV
 48566 ;;		i2_setOutputPin
 48567 ;; This function is called by:
 48568 ;;		_APP_highIsr
 48569 ;; This function uses a non-reentrant model
 48570 ;;
 48571                           
 48572                           	psect	text228
 48573   00C5E2                     __ptext228:
 48574                           	callstack 0
 48575   00C5E2                     _timer1DoneInterruptHandler:
 48576                           	callstack 3
 48577                           
 48578                           ;../servo.c: 244:     T1CONbits.TMR1ON = 0;
 48579                           
 48580                           ; BSR set to: 0
 48581                           ;incstack = 0
 48582   00C5E2  90CD               	bcf	205,0,c	;volatile
 48583                           
 48584                           ;../servo.c: 245:     setOutputPin(servoInBlock, (uint8_t)getNV((16 + 7*(servoInBlock) +
      +                           1)) & 0x20);
 48585   00C5E4  0100               	movlb	0	; () banked
 48586   00C5E6  51C9               	movf	_servoInBlock& (0+255),w,b
 48587   00C5E8  0D07               	mullw	7
 48588   00C5EA  50F3               	movf	243,w,c
 48589   00C5EC  0F11               	addlw	17
 48590   00C5EE  EC4A  F060         	call	i2_getNV
 48591   00C5F2  502B               	movf	?i2_getNV^0,w,c
 48592   00C5F4  0B20               	andlw	32
 48593   00C5F6  6E2F               	movwf	i2setOutputPin@state^0,c
 48594   00C5F8  0100               	movlb	0	; () banked
 48595   00C5FA  51C9               	movf	_servoInBlock& (0+255),w,b
 48596   00C5FC  EC79  F039         	call	i2_setOutputPin
 48597                           
 48598                           ;../servo.c: 246:     servoActive[0] = 0;
 48599   00C600  0E00               	movlw	0
 48600   00C602  0100               	movlb	0	; () banked
 48601   00C604  6FB2               	movwf	_servoActive& (0+255),b
 48602                           
 48603                           ; BSR set to: 0
 48604   00C606  0012               	return		;funcret
 48605   00C608                     __end_of_timer1DoneInterruptHandler:
 48606                           	callstack 0
 48607                           
 48608 ;; *************** function i2_setOutputPin *****************
 48609 ;; Defined at:
 48610 ;;		line 256 in file "../digitalOut.c"
 48611 ;; Parameters:    Size  Location     Type
 48612 ;;  io              1    wreg     unsigned char 
 48613 ;;  state           1    4[COMRAM] enum E12766
 48614 ;; Auto vars:     Size  Location     Type
 48615 ;;  io              1    7[COMRAM] unsigned char 
 48616 ;; Return value:  Size  Location     Type
 48617 ;;                  1    wreg      void 
 48618 ;; Registers used:
 48619 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 48620 ;; Tracked objects:
 48621 ;;		On entry : 0/0
 48622 ;;		On exit  : 0/0
 48623 ;;		Unchanged: 0/0
 48624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48625 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48626 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48627 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48628 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48629 ;;Total ram usage:        4 bytes
 48630 ;; Hardware stack levels used: 1
 48631 ;; This function calls:
 48632 ;;		Nothing
 48633 ;; This function is called by:
 48634 ;;		_timer1DoneInterruptHandler
 48635 ;;		_timer3DoneInterruptHandler
 48636 ;; This function uses a non-reentrant model
 48637 ;;
 48638                           
 48639                           	psect	text229
 48640   0072F2                     __ptext229:
 48641                           	callstack 0
 48642   0072F2                     i2_setOutputPin:
 48643                           	callstack 3
 48644                           
 48645                           ; BSR set to: 0
 48646                           ;incstack = 0
 48647                           ;i2setOutputPin@io stored from wreg
 48648   0072F2  6E32               	movwf	i2setOutputPin@io^0,c
 48649                           
 48650                           ;../digitalOut.c: 257:     switch (configs[io].port) {
 48651   0072F4  D0BA               	goto	i2l14053
 48652   0072F6                     i2l14033:
 48653                           
 48654                           ;../digitalOut.c: 259:             if (state) {
 48655   0072F6  502F               	movf	i2setOutputPin@state^0,w,c
 48656   0072F8  B4D8               	btfsc	status,2,c
 48657   0072FA  D01D               	goto	i2l14037
 48658                           
 48659                           ;../digitalOut.c: 261:                LATA |= (1<<configs[io].no);
 48660   0072FC  5032               	movf	i2setOutputPin@io^0,w,c
 48661   0072FE  0D04               	mullw	4
 48662   007300  0E02               	movlw	2
 48663   007302  26F3               	addwf	243,f,c
 48664   007304  0E00               	movlw	0
 48665   007306  22F4               	addwfc	244,f,c
 48666   007308  0E29               	movlw	low _configs
 48667   00730A  24F3               	addwf	243,w,c
 48668   00730C  6EF6               	movwf	tblptrl,c
 48669   00730E  0EEE               	movlw	high _configs
 48670   007310  20F4               	addwfc	244,w,c
 48671   007312  6EF7               	movwf	tblptrh,c
 48672   007314                     	if	1	;There are 3 active tblptr bytes
 48673   007314  6AF8               	clrf	tblptru,c
 48674   007316  0E00               	movlw	low (__mediumconst shr (0+16))
 48675   007318  22F8               	addwfc	tblptru,f,c
 48676   00731A                     	endif
 48677   00731A  0008               	tblrd		*
 48678   00731C  CFF5 F030          	movff	tablat,??i2_setOutputPin
 48679   007320  0E01               	movlw	1
 48680   007322  6E31               	movwf	(??i2_setOutputPin+1)^0,c
 48681   007324  2A30               	incf	??i2_setOutputPin^0,f,c
 48682   007326  D002               	goto	i2u1317_44
 48683   007328                     i2u1317_45:
 48684   007328  90D8               	bcf	status,0,c
 48685   00732A  3631               	rlcf	(??i2_setOutputPin+1)^0,f,c
 48686   00732C                     i2u1317_44:
 48687   00732C  2E30               	decfsz	??i2_setOutputPin^0,f,c
 48688   00732E  D7FC               	goto	i2u1317_45
 48689   007330  5031               	movf	(??i2_setOutputPin+1)^0,w,c
 48690   007332  1289               	iorwf	137,f,c	;volatile
 48691                           
 48692                           ;../digitalOut.c: 262:             } else {
 48693   007334  0012               	return	
 48694   007336                     i2l14037:
 48695                           
 48696                           ;../digitalOut.c: 264:                 LATA &= ~(1<<configs[io].no);
 48697   007336  5032               	movf	i2setOutputPin@io^0,w,c
 48698   007338  0D04               	mullw	4
 48699   00733A  0E02               	movlw	2
 48700   00733C  26F3               	addwf	243,f,c
 48701   00733E  0E00               	movlw	0
 48702   007340  22F4               	addwfc	244,f,c
 48703   007342  0E29               	movlw	low _configs
 48704   007344  24F3               	addwf	243,w,c
 48705   007346  6EF6               	movwf	tblptrl,c
 48706   007348  0EEE               	movlw	high _configs
 48707   00734A  20F4               	addwfc	244,w,c
 48708   00734C  6EF7               	movwf	tblptrh,c
 48709   00734E                     	if	1	;There are 3 active tblptr bytes
 48710   00734E  6AF8               	clrf	tblptru,c
 48711   007350  0E00               	movlw	low (__mediumconst shr (0+16))
 48712   007352  22F8               	addwfc	tblptru,f,c
 48713   007354                     	endif
 48714   007354  0008               	tblrd		*
 48715   007356  CFF5 F030          	movff	tablat,??i2_setOutputPin
 48716   00735A  0E01               	movlw	1
 48717   00735C  6E31               	movwf	(??i2_setOutputPin+1)^0,c
 48718   00735E  2A30               	incf	??i2_setOutputPin^0,f,c
 48719   007360  D002               	goto	i2u1318_44
 48720   007362                     i2u1318_45:
 48721   007362  90D8               	bcf	status,0,c
 48722   007364  3631               	rlcf	(??i2_setOutputPin+1)^0,f,c
 48723   007366                     i2u1318_44:
 48724   007366  2E30               	decfsz	??i2_setOutputPin^0,f,c
 48725   007368  D7FC               	goto	i2u1318_45
 48726   00736A  5031               	movf	(??i2_setOutputPin+1)^0,w,c
 48727   00736C  0AFF               	xorlw	255
 48728   00736E  1689               	andwf	137,f,c	;volatile
 48729   007370  0012               	return	
 48730   007372                     i2l14039:
 48731                           
 48732                           ;../digitalOut.c: 268:             if (state) {
 48733   007372  502F               	movf	i2setOutputPin@state^0,w,c
 48734   007374  B4D8               	btfsc	status,2,c
 48735   007376  D01D               	goto	i2l14043
 48736                           
 48737                           ;../digitalOut.c: 270:                 LATB |= (1<<configs[io].no);
 48738   007378  5032               	movf	i2setOutputPin@io^0,w,c
 48739   00737A  0D04               	mullw	4
 48740   00737C  0E02               	movlw	2
 48741   00737E  26F3               	addwf	243,f,c
 48742   007380  0E00               	movlw	0
 48743   007382  22F4               	addwfc	244,f,c
 48744   007384  0E29               	movlw	low _configs
 48745   007386  24F3               	addwf	243,w,c
 48746   007388  6EF6               	movwf	tblptrl,c
 48747   00738A  0EEE               	movlw	high _configs
 48748   00738C  20F4               	addwfc	244,w,c
 48749   00738E  6EF7               	movwf	tblptrh,c
 48750   007390                     	if	1	;There are 3 active tblptr bytes
 48751   007390  6AF8               	clrf	tblptru,c
 48752   007392  0E00               	movlw	low (__mediumconst shr (0+16))
 48753   007394  22F8               	addwfc	tblptru,f,c
 48754   007396                     	endif
 48755   007396  0008               	tblrd		*
 48756   007398  CFF5 F030          	movff	tablat,??i2_setOutputPin
 48757   00739C  0E01               	movlw	1
 48758   00739E  6E31               	movwf	(??i2_setOutputPin+1)^0,c
 48759   0073A0  2A30               	incf	??i2_setOutputPin^0,f,c
 48760   0073A2  D002               	goto	i2u1320_44
 48761   0073A4                     i2u1320_45:
 48762   0073A4  90D8               	bcf	status,0,c
 48763   0073A6  3631               	rlcf	(??i2_setOutputPin+1)^0,f,c
 48764   0073A8                     i2u1320_44:
 48765   0073A8  2E30               	decfsz	??i2_setOutputPin^0,f,c
 48766   0073AA  D7FC               	goto	i2u1320_45
 48767   0073AC  5031               	movf	(??i2_setOutputPin+1)^0,w,c
 48768   0073AE  128A               	iorwf	138,f,c	;volatile
 48769                           
 48770                           ;../digitalOut.c: 271:             } else {
 48771   0073B0  0012               	return	
 48772   0073B2                     i2l14043:
 48773                           
 48774                           ;../digitalOut.c: 273:                 LATB &= ~(1<<configs[io].no);
 48775   0073B2  5032               	movf	i2setOutputPin@io^0,w,c
 48776   0073B4  0D04               	mullw	4
 48777   0073B6  0E02               	movlw	2
 48778   0073B8  26F3               	addwf	243,f,c
 48779   0073BA  0E00               	movlw	0
 48780   0073BC  22F4               	addwfc	244,f,c
 48781   0073BE  0E29               	movlw	low _configs
 48782   0073C0  24F3               	addwf	243,w,c
 48783   0073C2  6EF6               	movwf	tblptrl,c
 48784   0073C4  0EEE               	movlw	high _configs
 48785   0073C6  20F4               	addwfc	244,w,c
 48786   0073C8  6EF7               	movwf	tblptrh,c
 48787   0073CA                     	if	1	;There are 3 active tblptr bytes
 48788   0073CA  6AF8               	clrf	tblptru,c
 48789   0073CC  0E00               	movlw	low (__mediumconst shr (0+16))
 48790   0073CE  22F8               	addwfc	tblptru,f,c
 48791   0073D0                     	endif
 48792   0073D0  0008               	tblrd		*
 48793   0073D2  CFF5 F030          	movff	tablat,??i2_setOutputPin
 48794   0073D6  0E01               	movlw	1
 48795   0073D8  6E31               	movwf	(??i2_setOutputPin+1)^0,c
 48796   0073DA  2A30               	incf	??i2_setOutputPin^0,f,c
 48797   0073DC  D002               	goto	i2u1321_44
 48798   0073DE                     i2u1321_45:
 48799   0073DE  90D8               	bcf	status,0,c
 48800   0073E0  3631               	rlcf	(??i2_setOutputPin+1)^0,f,c
 48801   0073E2                     i2u1321_44:
 48802   0073E2  2E30               	decfsz	??i2_setOutputPin^0,f,c
 48803   0073E4  D7FC               	goto	i2u1321_45
 48804   0073E6  5031               	movf	(??i2_setOutputPin+1)^0,w,c
 48805   0073E8  0AFF               	xorlw	255
 48806   0073EA  168A               	andwf	138,f,c	;volatile
 48807   0073EC  0012               	return	
 48808   0073EE                     i2l14045:
 48809                           
 48810                           ;../digitalOut.c: 277:             if (state) {
 48811   0073EE  502F               	movf	i2setOutputPin@state^0,w,c
 48812   0073F0  B4D8               	btfsc	status,2,c
 48813   0073F2  D01D               	goto	i2l14049
 48814                           
 48815                           ;../digitalOut.c: 279:                 LATC |= (1<<configs[io].no);
 48816   0073F4  5032               	movf	i2setOutputPin@io^0,w,c
 48817   0073F6  0D04               	mullw	4
 48818   0073F8  0E02               	movlw	2
 48819   0073FA  26F3               	addwf	243,f,c
 48820   0073FC  0E00               	movlw	0
 48821   0073FE  22F4               	addwfc	244,f,c
 48822   007400  0E29               	movlw	low _configs
 48823   007402  24F3               	addwf	243,w,c
 48824   007404  6EF6               	movwf	tblptrl,c
 48825   007406  0EEE               	movlw	high _configs
 48826   007408  20F4               	addwfc	244,w,c
 48827   00740A  6EF7               	movwf	tblptrh,c
 48828   00740C                     	if	1	;There are 3 active tblptr bytes
 48829   00740C  6AF8               	clrf	tblptru,c
 48830   00740E  0E00               	movlw	low (__mediumconst shr (0+16))
 48831   007410  22F8               	addwfc	tblptru,f,c
 48832   007412                     	endif
 48833   007412  0008               	tblrd		*
 48834   007414  CFF5 F030          	movff	tablat,??i2_setOutputPin
 48835   007418  0E01               	movlw	1
 48836   00741A  6E31               	movwf	(??i2_setOutputPin+1)^0,c
 48837   00741C  2A30               	incf	??i2_setOutputPin^0,f,c
 48838   00741E  D002               	goto	i2u1323_44
 48839   007420                     i2u1323_45:
 48840   007420  90D8               	bcf	status,0,c
 48841   007422  3631               	rlcf	(??i2_setOutputPin+1)^0,f,c
 48842   007424                     i2u1323_44:
 48843   007424  2E30               	decfsz	??i2_setOutputPin^0,f,c
 48844   007426  D7FC               	goto	i2u1323_45
 48845   007428  5031               	movf	(??i2_setOutputPin+1)^0,w,c
 48846   00742A  128B               	iorwf	139,f,c	;volatile
 48847                           
 48848                           ;../digitalOut.c: 280:             } else {
 48849   00742C  0012               	return	
 48850   00742E                     i2l14049:
 48851                           
 48852                           ;../digitalOut.c: 282:                 LATC &= ~(1<<configs[io].no);
 48853   00742E  5032               	movf	i2setOutputPin@io^0,w,c
 48854   007430  0D04               	mullw	4
 48855   007432  0E02               	movlw	2
 48856   007434  26F3               	addwf	243,f,c
 48857   007436  0E00               	movlw	0
 48858   007438  22F4               	addwfc	244,f,c
 48859   00743A  0E29               	movlw	low _configs
 48860   00743C  24F3               	addwf	243,w,c
 48861   00743E  6EF6               	movwf	tblptrl,c
 48862   007440  0EEE               	movlw	high _configs
 48863   007442  20F4               	addwfc	244,w,c
 48864   007444  6EF7               	movwf	tblptrh,c
 48865   007446                     	if	1	;There are 3 active tblptr bytes
 48866   007446  6AF8               	clrf	tblptru,c
 48867   007448  0E00               	movlw	low (__mediumconst shr (0+16))
 48868   00744A  22F8               	addwfc	tblptru,f,c
 48869   00744C                     	endif
 48870   00744C  0008               	tblrd		*
 48871   00744E  CFF5 F030          	movff	tablat,??i2_setOutputPin
 48872   007452  0E01               	movlw	1
 48873   007454  6E31               	movwf	(??i2_setOutputPin+1)^0,c
 48874   007456  2A30               	incf	??i2_setOutputPin^0,f,c
 48875   007458  D002               	goto	i2u1324_44
 48876   00745A                     i2u1324_45:
 48877   00745A  90D8               	bcf	status,0,c
 48878   00745C  3631               	rlcf	(??i2_setOutputPin+1)^0,f,c
 48879   00745E                     i2u1324_44:
 48880   00745E  2E30               	decfsz	??i2_setOutputPin^0,f,c
 48881   007460  D7FC               	goto	i2u1324_45
 48882   007462  5031               	movf	(??i2_setOutputPin+1)^0,w,c
 48883   007464  0AFF               	xorlw	255
 48884   007466  168B               	andwf	139,f,c	;volatile
 48885   007468  0012               	return	
 48886   00746A                     i2l14053:
 48887   00746A  5032               	movf	i2setOutputPin@io^0,w,c
 48888   00746C  0D04               	mullw	4
 48889   00746E  0E01               	movlw	1
 48890   007470  26F3               	addwf	243,f,c
 48891   007472  0E00               	movlw	0
 48892   007474  22F4               	addwfc	244,f,c
 48893   007476  0E29               	movlw	low _configs
 48894   007478  24F3               	addwf	243,w,c
 48895   00747A  6EF6               	movwf	tblptrl,c
 48896   00747C  0EEE               	movlw	high _configs
 48897   00747E  20F4               	addwfc	244,w,c
 48898   007480  6EF7               	movwf	tblptrh,c
 48899   007482                     	if	1	;There are 3 active tblptr bytes
 48900   007482  6AF8               	clrf	tblptru,c
 48901   007484  0E00               	movlw	low (__mediumconst shr (0+16))
 48902   007486  22F8               	addwfc	tblptru,f,c
 48903   007488                     	endif
 48904   007488  0008               	tblrd		*
 48905   00748A  50F5               	movf	tablat,w,c
 48906                           
 48907                           ; Switch size 1, requested type "simple"
 48908                           ; Number of cases is 3, Range of values is 65 to 67
 48909                           ; switch strategies available:
 48910                           ; Name         Instructions Cycles
 48911                           ; simple_byte           10     6 (average)
 48912                           ;	Chosen strategy is simple_byte
 48913   00748C  0A41               	xorlw	65	; case 65
 48914   00748E  B4D8               	btfsc	status,2,c
 48915   007490  D732               	goto	i2l14033
 48916   007492  0A03               	xorlw	3	; case 66
 48917   007494  B4D8               	btfsc	status,2,c
 48918   007496  D76D               	goto	i2l14039
 48919   007498  0A01               	xorlw	1	; case 67
 48920   00749A  A4D8               	btfss	status,2,c
 48921   00749C  0012               	return	
 48922   00749E  D7A7               	goto	i2l14045
 48923   0074A0                     __end_ofi2_setOutputPin:
 48924                           	callstack 0
 48925                           
 48926 ;; *************** function i2_getNV *****************
 48927 ;; Defined at:
 48928 ;;		line 182 in file "../../VLCBlib_PIC/nv.c"
 48929 ;; Parameters:    Size  Location     Type
 48930 ;;  index           1    wreg     unsigned char 
 48931 ;; Auto vars:     Size  Location     Type
 48932 ;;  index           1    3[COMRAM] unsigned char 
 48933 ;; Return value:  Size  Location     Type
 48934 ;;                  2    0[COMRAM] short 
 48935 ;; Registers used:
 48936 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 48937 ;; Tracked objects:
 48938 ;;		On entry : 0/0
 48939 ;;		On exit  : 0/0
 48940 ;;		Unchanged: 0/0
 48941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48942 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48943 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48944 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48945 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48946 ;;Total ram usage:        4 bytes
 48947 ;; Hardware stack levels used: 1
 48948 ;; This function calls:
 48949 ;;		Nothing
 48950 ;; This function is called by:
 48951 ;;		_timer1DoneInterruptHandler
 48952 ;;		_timer3DoneInterruptHandler
 48953 ;; This function uses a non-reentrant model
 48954 ;;
 48955                           
 48956                           	psect	text230
 48957   00C094                     __ptext230:
 48958                           	callstack 0
 48959   00C094                     i2_getNV:
 48960                           	callstack 3
 48961                           
 48962                           ;incstack = 0
 48963                           ;i2getNV@index stored from wreg
 48964   00C094  6E2E               	movwf	i2getNV@index^0,c
 48965                           
 48966                           ;../../VLCBlib_PIC/nv.c: 183:     if (index == 0) return (15+7*16);
 48967   00C096  502E               	movf	i2getNV@index^0,w,c
 48968   00C098  A4D8               	btfss	status,2,c
 48969   00C09A  D005               	goto	i2l14061
 48970   00C09C  0E00               	movlw	0
 48971   00C09E  6E2C               	movwf	(?i2_getNV+1)^0,c
 48972   00C0A0  0E7F               	movlw	127
 48973   00C0A2  6E2B               	movwf	?i2_getNV^0,c
 48974   00C0A4  0012               	return	
 48975   00C0A6                     i2l14061:
 48976                           
 48977                           ;../../VLCBlib_PIC/nv.c: 184:     if (index > (15+7*16)) return -CMDERR_INV_NV_IDX;
 48978   00C0A6  0E7F               	movlw	127
 48979   00C0A8  642E               	cpfsgt	i2getNV@index^0,c
 48980   00C0AA  D005               	goto	i2l14067
 48981   00C0AC  0EFF               	movlw	255
 48982   00C0AE  6E2C               	movwf	(?i2_getNV+1)^0,c
 48983   00C0B0  0EF6               	movlw	246
 48984   00C0B2  6E2B               	movwf	?i2_getNV^0,c
 48985   00C0B4  0012               	return	
 48986   00C0B6                     i2l14067:
 48987                           
 48988                           ;../../VLCBlib_PIC/nv.c: 186:     return nvCache[index];
 48989   00C0B6  0E00               	movlw	low _nvCache
 48990   00C0B8  242E               	addwf	i2getNV@index^0,w,c
 48991   00C0BA  6ED9               	movwf	fsr2l,c
 48992   00C0BC  6ADA               	clrf	fsr2h,c
 48993   00C0BE  0E04               	movlw	high _nvCache
 48994   00C0C0  22DA               	addwfc	fsr2h,f,c
 48995   00C0C2  50DF               	movf	indf2,w,c
 48996   00C0C4  6E2D               	movwf	??i2_getNV^0,c
 48997   00C0C6  502D               	movf	??i2_getNV^0,w,c
 48998   00C0C8  6E2B               	movwf	?i2_getNV^0,c
 48999   00C0CA  6A2C               	clrf	(?i2_getNV+1)^0,c
 49000   00C0CC  0012               	return		;funcret
 49001   00C0CE                     __end_ofi2_getNV:
 49002                           	callstack 0
 49003                           
 49004                           	psect	rparam
 49005   000000                     
 49006                           	psect	temp
 49007   000055                     btemp:
 49008                           	callstack 0
 49009   000055                     	ds	1
 49010   000000                     int$flags	set	btemp
 49011   000000                     wtemp8	set	btemp+1
 49012   000000                     ttemp5	set	btemp+1
 49013   000000                     ttemp6	set	btemp+4
 49014   000000                     ttemp7	set	btemp+8
 49015                           
 49016                           	psect	config
 49017                           
 49018                           ;Config register CONFIG1L @ 0x300000
 49019                           ;	VREG Sleep Enable bit
 49020                           ;	RETEN = OFF, Ultra low-power regulator is Disabled (Controlled by REGSLP bit)
 49021                           ;	LF-INTOSC Low-power Enable bit
 49022                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
 49023                           ;	SOSC Power Selection and mode Configuration bits
 49024                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
 49025                           ;	Extended Instruction Set
 49026                           ;	XINST = OFF, Disabled
 49027   300000                     	org	3145728
 49028   300000  15                 	db	21
 49029                           
 49030                           ;Config register CONFIG1H @ 0x300001
 49031                           ;	Oscillator
 49032                           ;	FOSC = HS1, HS oscillator (Medium power, 4 MHz - 16 MHz)
 49033                           ;	PLL x4 Enable bit
 49034                           ;	PLLCFG = OFF, Disabled
 49035                           ;	Fail-Safe Clock Monitor
 49036                           ;	FCMEN = OFF, Disabled
 49037                           ;	Internal External Oscillator Switch Over Mode
 49038                           ;	IESO = OFF, Disabled
 49039   300001                     	org	3145729
 49040   300001  03                 	db	3
 49041                           
 49042                           ;Config register CONFIG2L @ 0x300002
 49043                           ;	Power Up Timer
 49044                           ;	PWRTEN = ON, Enabled
 49045                           ;	Brown Out Detect
 49046                           ;	BOREN = SBORDIS, Enabled in hardware, SBOREN disabled
 49047                           ;	Brown-out Reset Voltage bits
 49048                           ;	BORV = 0, 3.0V
 49049                           ;	BORMV Power level
 49050                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
 49051   300002                     	org	3145730
 49052   300002  66                 	db	102
 49053                           
 49054                           ;Config register CONFIG2H @ 0x300003
 49055                           ;	Watchdog Timer
 49056                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
 49057                           ;	Watchdog Postscaler
 49058                           ;	WDTPS = 1048576, 1:1048576
 49059   300003                     	org	3145731
 49060   300003  50                 	db	80
 49061                           
 49062                           ; Padding undefined space
 49063   300004                     	org	3145732
 49064   300004  FF                 	db	255
 49065                           
 49066                           ;Config register CONFIG3H @ 0x300005
 49067                           ;	ECAN Mux bit
 49068                           ;	CANMX = PORTB, ECAN TX and RX pins are located on RB2 and RB3, respectively
 49069                           ;	MSSP address masking
 49070                           ;	MSSPMSK = MSK7, 7 Bit address masking mode
 49071                           ;	Master Clear Enable
 49072                           ;	MCLRE = ON, MCLR Enabled, RE3 Disabled
 49073   300005                     	org	3145733
 49074   300005  89                 	db	137
 49075                           
 49076                           ;Config register CONFIG4L @ 0x300006
 49077                           ;	Stack Overflow Reset
 49078                           ;	STVREN = ON, Enabled
 49079                           ;	Boot Block Size
 49080                           ;	BBSIZ = BB1K, 1K word Boot Block size
 49081                           ;	Background Debugger
 49082                           ;	DEBUG = 0x1, unprogrammed default
 49083   300006                     	org	3145734
 49084   300006  81                 	db	129
 49085                           
 49086                           ; Padding undefined space
 49087   300007                     	org	3145735
 49088   300007  FF                 	db	255
 49089                           
 49090                           ;Config register CONFIG5L @ 0x300008
 49091                           ;	Code Protect 00800-03FFF
 49092                           ;	CP0 = OFF, Disabled
 49093                           ;	Code Protect 04000-07FFF
 49094                           ;	CP1 = OFF, Disabled
 49095                           ;	Code Protect 08000-0BFFF
 49096                           ;	CP2 = OFF, Disabled
 49097                           ;	Code Protect 0C000-0FFFF
 49098                           ;	CP3 = OFF, Disabled
 49099   300008                     	org	3145736
 49100   300008  0F                 	db	15
 49101                           
 49102                           ;Config register CONFIG5H @ 0x300009
 49103                           ;	Code Protect Boot
 49104                           ;	CPB = OFF, Disabled
 49105                           ;	Data EE Read Protect
 49106                           ;	CPD = OFF, Disabled
 49107   300009                     	org	3145737
 49108   300009  C0                 	db	192
 49109                           
 49110                           ;Config register CONFIG6L @ 0x30000A
 49111                           ;	Table Write Protect 00800-03FFF
 49112                           ;	WRT0 = OFF, Disabled
 49113                           ;	Table Write Protect 04000-07FFF
 49114                           ;	WRT1 = OFF, Disabled
 49115                           ;	Table Write Protect 08000-0BFFF
 49116                           ;	WRT2 = OFF, Disabled
 49117                           ;	Table Write Protect 0C000-0FFFF
 49118                           ;	WRT3 = OFF, Disabled
 49119   30000A                     	org	3145738
 49120   30000A  0F                 	db	15
 49121                           
 49122                           ;Config register CONFIG6H @ 0x30000B
 49123                           ;	Config. Write Protect
 49124                           ;	WRTC = OFF, Disabled
 49125                           ;	Table Write Protect Boot
 49126                           ;	WRTB = OFF, Disabled
 49127                           ;	Data EE Write Protect
 49128                           ;	WRTD = OFF, Disabled
 49129   30000B                     	org	3145739
 49130   30000B  E0                 	db	224
 49131                           
 49132                           ;Config register CONFIG7L @ 0x30000C
 49133                           ;	Table Read Protect 00800-03FFF
 49134                           ;	EBTR0 = OFF, Disabled
 49135                           ;	Table Read Protect 04000-07FFF
 49136                           ;	EBTR1 = OFF, Disabled
 49137                           ;	Table Read Protect 08000-0BFFF
 49138                           ;	EBTR2 = OFF, Disabled
 49139                           ;	Table Read Protect 0C000-0FFFF
 49140                           ;	EBTR3 = OFF, Disabled
 49141   30000C                     	org	3145740
 49142   30000C  0F                 	db	15
 49143                           
 49144                           ;Config register CONFIG7H @ 0x30000D
 49145                           ;	Table Read Protect Boot
 49146                           ;	EBTRB = OFF, Disabled
 49147   30000D                     	org	3145741
 49148   30000D  40                 	db	64
 49149                           tosu	equ	0xFFF
 49150                           tosh	equ	0xFFE
 49151                           tosl	equ	0xFFD
 49152                           stkptr	equ	0xFFC
 49153                           pclatu	equ	0xFFB
 49154                           pclath	equ	0xFFA
 49155                           pcl	equ	0xFF9
 49156                           tblptru	equ	0xFF8
 49157                           tblptrh	equ	0xFF7
 49158                           tblptrl	equ	0xFF6
 49159                           tablat	equ	0xFF5
 49160                           prodh	equ	0xFF4
 49161                           prodl	equ	0xFF3
 49162                           indf0	equ	0xFEF
 49163                           postinc0	equ	0xFEE
 49164                           postdec0	equ	0xFED
 49165                           preinc0	equ	0xFEC
 49166                           plusw0	equ	0xFEB
 49167                           fsr0h	equ	0xFEA
 49168                           fsr0l	equ	0xFE9
 49169                           wreg	equ	0xFE8
 49170                           indf1	equ	0xFE7
 49171                           postinc1	equ	0xFE6
 49172                           postdec1	equ	0xFE5
 49173                           preinc1	equ	0xFE4
 49174                           plusw1	equ	0xFE3
 49175                           fsr1h	equ	0xFE2
 49176                           fsr1l	equ	0xFE1
 49177                           bsr	equ	0xFE0
 49178                           indf2	equ	0xFDF
 49179                           postinc2	equ	0xFDE
 49180                           postdec2	equ	0xFDD
 49181                           preinc2	equ	0xFDC
 49182                           plusw2	equ	0xFDB
 49183                           fsr2h	equ	0xFDA
 49184                           fsr2l	equ	0xFD9
 49185                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    597
    Data        0
    BSS         1867
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      84
    BANK0           160     74     115
    BANK1           256     65     255
    BANK2           256     50     254
    BANK3           256      0     200
    BANK4           256      0     192
    BANK5           256      0      72
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    ackEventCheckLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    ackEventProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    APP_postProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    APP_preProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    bootProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    bootService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    bootService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    bootService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    bootService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    bootService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    bootService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    bootService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    bootService$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    canFillRxFifo@m	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    canFillRxFifo@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    canProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    canReceiveMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    canReceiveMessage@mp	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    canReceiveMessage@p	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    canSendMessage@m	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    canSendMessage@mp	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK1[9]), 

    canService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    canService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    canService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    canService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), i2_canIsr(), NULL(), 

    canService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), i2_canIsr(), mnsLowIsr(), NULL(), 

    canService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    canService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    canService$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    canTransport$receiveMessage	PTR FTN(PTR struct Message,)enum E12860 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    canTransport$sendMessage	PTR FTN(PTR struct Message,)enum E12864 size(2) Largest target is 1
		 -> canSendMessage(), 

    checkLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    checkTxFifo@m	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    checkTxFifo@mp	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    consumer2QProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    eventAckService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventAckService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventAckService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    eventAckService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventAckService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventAckService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventAckService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    eventAckService$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventCoeService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventCoeService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventCoeService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    eventCoeService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventCoeService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventCoeService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventCoeService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    eventCoeService$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventConsumer2QService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventConsumer2QService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventConsumer2QService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    eventConsumer2QService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventConsumer2QService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventConsumer2QService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventConsumer2QService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    eventConsumer2QService$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventProducerService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventProducerService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventProducerService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    eventProducerService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventProducerService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventProducerService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventProducerService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    eventProducerService$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventTeachService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventTeachService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventTeachService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    eventTeachService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventTeachService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventTeachService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventTeachService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    eventTeachService$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    factoryReset$8106	const PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    getNextWriteMessage@q	PTR struct MessageQueue size(1) Largest target is 6
		 -> rxQueue(COMRAM[5]), 

    getNextWriteMessage@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    getNumRxBuffersInUse@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    handleSelfEnumeration@p	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    memcpy@d1	PTR void  size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    mnsProcessMessage@d	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    mnsProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    mnsService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    mnsService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    mnsService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    mnsService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    mnsService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    mnsService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    mnsService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    mnsService$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    mnsTRallDiagnosticsCallback@d	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    nvProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    nvService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    nvService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    nvService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    nvService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    nvService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    nvService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    nvService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    nvService$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    peek@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    poll$8107	const PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    poll$8108	const PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    poll$8108$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    pop@q	PTR struct MessageQueue size(2) Largest target is 6
		 -> rxQueue(COMRAM[5]), txQueue(BANK1[5]), 

    pop@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    pop@ret	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    producerProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    push@m	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK1[9]), 

    push@q	PTR struct MessageQueue size(2) Largest target is 6
		 -> txQueue(BANK1[5]), 

    push@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    quantity@q	PTR struct MessageQueue size(2) Largest target is 6
		 -> rxQueue(COMRAM[5]), txQueue(BANK1[5]), 

    quantity@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    rxQueue$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    S208$4$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    S208Service$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    S208Service$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    S208Service$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    S208Service$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    S208Service$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    S208Service$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    S208Service$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    S208Service$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    S352$0$0	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK1[9]), 

    S352$1$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    S352Transport$receiveMessage	PTR FTN(PTR struct Message,)enum E12860 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    S352Transport$sendMessage	PTR FTN(PTR struct Message,)enum E12864 size(2) Largest target is 1
		 -> canSendMessage(), 

    S5136MessageQueue$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    services	const PTR const struct Service[9] size(2) Largest target is 18
		 -> bootService(CODE[18]), canService(CODE[18]), eventAckService(CODE[18]), eventCoeService(CODE[18]), 
		 -> eventConsumer2QService(CODE[18]), eventProducerService(CODE[18]), eventTeachService(CODE[18]), mnsService(CODE[18]), 
		 -> nvService(CODE[18]), 

    services$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    services$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    services$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    services$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    services$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    services$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    services$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    services$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    sp__ackGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    sp__canGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    sp__consumer2QGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    sp__findService	PTR const struct Service size(2) Largest target is 18
		 -> bootService(CODE[18]), canService(CODE[18]), eventAckService(CODE[18]), eventCoeService(CODE[18]), 
		 -> eventConsumer2QService(CODE[18]), eventProducerService(CODE[18]), eventTeachService(CODE[18]), mnsService(CODE[18]), 
		 -> nvService(CODE[18]), NULL(NULL[0]), 

    sp__getBufferPointer	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    sp__getNextWriteMessage	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    sp__mnsGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    sp__nvGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    sp__peek	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    sp__pop	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    sp__producerGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    sp__teachGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    sp_S208$9	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    startTimedResponse@callback	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)enum E12928 size(2) Largest target is 1
		 -> mnsTRallDiagnosticsCallback(), mnsTRrqnpnCallback(), mnsTRserviceDiscoveryCallback(), nerdCallback(), 
		 -> nvTRnvrdCallback(), reqevCallback(), sodTRCallback(), 

    teachCheckLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    teachProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    timedResponseCallback	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)enum E12928 size(2) Largest target is 1
		 -> mnsTRallDiagnosticsCallback(), mnsTRrqnpnCallback(), mnsTRserviceDiscoveryCallback(), nerdCallback(), 
		 -> nvTRnvrdCallback(), reqevCallback(), sodTRCallback(), NULL(), 

    transport	PTR const struct Transport size(2) Largest target is 4
		 -> canTransport(CODE[4]), NULL(NULL[0]), 

    transport$receiveMessage	PTR FTN(PTR struct Message,)enum E12860 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    transport$sendMessage	PTR FTN(PTR struct Message,)enum E12864 size(2) Largest target is 1
		 -> canSendMessage(), 

    txQueue$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isrLow in COMRAM

    None.

Critical Paths under _isrHigh in COMRAM

    _isrHigh->_highIsr
    i2_canIsr->i2_checkCANTimeout
    i2_checkCANTimeout->i2_checkTxFifo
    i2_canTxError->i2_checkTxFifo
    i2_checkTxFifo->i2_getNextWriteMessage
    i2_canFillRxFifo->i2_getNextWriteMessage
    _timer3DoneInterruptHandler->i2_setOutputPin
    _timer1DoneInterruptHandler->i2_setOutputPin
    i2_setOutputPin->i2_getNV

Critical Paths under _main in BANK0

    _initServos->_setOutputPosition
    _setOutputPosition->_setServoPosition
    _initInputScan->_readNVM
    _powerUp->_teachPowerUp
    _nvPowerUp->_loadNvCache
    _mnsPowerUp->_readNVM
    _mnsPowerUp->_tickGet
    _leds_powerUp->_tickGet
    _canPowerUp->_readNVM
    _canPowerUp->_tickGet
    _bootPowerUp->_readNVM
    _teachProcessMessage->_sendMessage3
    _teachProcessMessage->_teachCheckLen
    _teachCheckLen->_checkLen
    _doRqevn->_sendMessage3
    _doReval->_sendMessage3
    _doReqev->_sendMessage3
    _doNnevn->_sendMessage3
    _doNnclr->_sendMessage2
    _doNerd->_startTimedResponse
    _doNenrd->_sendMessage3
    _doEvuln->_sendMessage2
    _doEvuln->_sendMessage3
    _doEvlrn->_sendMessage2
    _doEvlrn->_sendMessage3
    _producerProcessMessage->_APP_GetEventState
    _producerProcessMessage->_sendMessage3
    _sodTRCallback->_APP_GetEventState
    _APP_GetEventState->___awdiv
    _numEv->_validStart
    _nvProcessMessage->_sendMessage2
    _nvProcessMessage->_sendMessage3
    _setNV->_writeNVM
    _setServoPosition->___awdiv
    _APP_nvValidate->___awdiv
    _mnsProcessMessage->_sendMessage2
    _mnsProcessMessage->_sendMessage3
    _mnsProcessMessage->_writeNVM
    _sendMessage6->_sendMessage
    _sendMessage3->_sendMessage
    _getParameter->_getParameterFlags
    _getParameterFlags->_have
    _canGetDiagnostic->_getNumRxBuffersInUse
    _mnsPoll->_sendMessage2
    _mnsPoll->_writeNVM
    _setLEDsByMode->_showStatus
    _sendMessage2->_sendMessage
    _setNewCanId->_writeNVM
    _handleSelfEnumeration->_tickGet
    _getNumRxBuffersInUse->_quantity
    _bootProcessMessage->_writeNVM
    _sendMessage7->_sendMessage
    _isConsumedEvent->_getEv
    _ackEventCheckLen->_checkLen
    _checkLen->_sendMessage5
    _sendMessage5->_sendMessage
    _loop->_sendProducedEvent
    _setupTimer3->_setOutputPin
    _setupTimer1->_setOutputPin
    _pollServos->_bounceDown
    _pollServos->_sendProducedEvent
    _pollServos->_writeNVM
    _bounceUp->___awdiv
    _bounceDown->___awdiv
    _processOutputs->_sendProducedEvent
    _startServoOutput->_getNV
    _startMultiOutput->_getNV
    _startDigitalOutput->_writeNVM
    _sendInvertedProducedEvent->_sendProducedEvent
    _setOutputState->_setBounceState
    _setOutputState->_setMultiState
    _setOutputState->_setServoState
    _setServoState->_getNV
    _setMultiState->_getNV
    _setBounceState->_getNV
    _getTwoAction->_peekTwoActionQueue
    _doWait->___lmul
    _doSOD->_startTimedResponse
    _startTimedResponse->_findServiceIndex
    _inputScan->_sendProducedEvent
    _inputScan->_writeNVM
    _sendProducedEvent->_sendMessage4
    _sendMessage4->_sendMessage
    _sendMessage->_canSendMessage
    _canSendMessage->_push
    _getNumTxBuffersInUse->_quantity
    _readInput->_getNV
    _pbUpTimer->___lldiv
    _pbDownTimer->___lldiv
    _leds_poll->___awdiv
    ___lmul->_getNV
    ___lldiv->_tickGet
    _factoryReset->_writeNVM
    _clearAllEvents->_writeNVM
    _nvFactoryReset->_writeNVM
    _APP_nvDefault->___awdiv
    ___wmul->_getNV
    ___awdiv->___wmul
    _mnsFactoryReset->_writeNVM
    _canFactoryReset->_writeNVM
    _saveNV->_writeNVM
    _loadNvCache->_readNVM
    _addEvent->_writeNVM
    _writeEv->_writeNVM
    _removeTableEntry->_writeNVM
    _rebuildHashtable->_getHash
    _getEv->_validStart
    _getEVs->_validStart
    _validStart->_readNVM
    _findEvent->_getHash
    _getNN->_readNVM
    _getHash->_getNN
    _getEN->_readNVM
    _configIO->_writeNVM
    _writeNVM->_APP_nvDefault
    _FLASH_Write->_flushFlashBlock
    _flushFlashBlock->_eraseFlashBlock
    _EEPROM_Write->_EEPROM_Read
    _setDigitalOutput->_readNVM
    _setOutputPin->_getNV
    _readNVM->_FLASH_Read

Critical Paths under _isrLow in BANK0

    _isrLow->_lowIsr
    _canIsr->_checkCANTimeout
    _checkCANTimeout->_checkTxFifo
    _canTxError->_checkTxFifo
    _checkTxFifo->i1_getNextWriteMessage
    _canFillRxFifo->i1_getNextWriteMessage

Critical Paths under _isrHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _setup->_configIO
    _teachPowerUp->_rebuildHashtable
    _poll->_ackEventProcessMessage
    _poll->_bootProcessMessage
    _poll->_canProcessMessage
    _poll->_consumer2QProcessMessage
    _poll->_mnsProcessMessage
    _poll->_nvProcessMessage
    _poll->_producerProcessMessage
    _poll->_teachProcessMessage
    _teachCheckLen->_checkLen
    _doRqevn->_sendMessage3
    _doReval->_sendMessage5
    _doReqev->_sendMessage6
    _doNnevn->_sendMessage3
    _doNnclr->_clearAllEvents
    _doNenrd->_sendMessage5
    _doEvuln->_removeEvent
    _removeEvent->_removeTableEntry
    _doEvlrn->_APP_addEvent
    _APP_addEvent->_addEvent
    _pollTimedResponse->_reqevCallback
    _sodTRCallback->_sendInvertedProducedEvent
    _nvProcessMessage->_setNV
    _setNV->_APP_nvValueChanged
    _APP_nvValueChanged->_setType
    _sendMessage6->_sendMessage
    _sendMessage3->_sendMessage
    _mnsPoll->_sendMessage5
    _sendMessage2->_sendMessage
    _canReceiveMessage->_processEnumeration
    _processEnumeration->_setNewCanId
    _setNewCanId->_writeNVM
    _sendMessage7->_sendMessage
    _ackEventCheckLen->_checkLen
    _checkLen->_sendMessage5
    _sendMessage5->_sendMessage
    _loop->_processActions
    _startServos->_pollServos
    _pollServos->_sendProducedEvent
    _processOutputs->_sendProducedEvent
    _processActions->_startOutput
    _startOutput->_startDigitalOutput
    _startDigitalOutput->_sendInvertedProducedEvent
    _sendInvertedProducedEvent->_sendProducedEvent
    _inputScan->_sendProducedEvent
    _sendProducedEvent->_sendMessage4
    _sendMessage4->_sendMessage
    _checkPowerOnPb->_factoryReset
    _factoryReset->_APP_factoryReset
    _teachFactoryReset->_clearAllEvents
    _clearAllEvents->_rebuildHashtable
    _nvFactoryReset->_writeNVM
    _mnsFactoryReset->_writeNVM
    _canFactoryReset->_writeNVM
    _APP_factoryReset->_setType
    _setType->_defaultEvents
    _defaultNVs->_saveNV
    _saveNV->_writeNVM
    _defaultEvents->_addEvent
    _clearEvents->_deleteActionRange
    _deleteHappeningRange->_writeEv
    _deleteActionRange->_writeEv
    _addEvent->_writeEv
    _writeEv->_checkRemoveTableEntry
    _checkRemoveTableEntry->_removeTableEntry
    _removeTableEntry->_rebuildHashtable
    _configIO->_writeNVM

Critical Paths under _isrLow in BANK1

    None.

Critical Paths under _isrHigh in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_poll
    _poll->_mnsProcessMessage

Critical Paths under _isrLow in BANK2

    None.

Critical Paths under _isrHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isrLow in BANK3

    None.

Critical Paths under _isrHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrLow in BANK4

    None.

Critical Paths under _isrHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrLow in BANK5

    None.

Critical Paths under _isrHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrLow in BANK6

    None.

Critical Paths under _isrHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrLow in BANK7

    None.

Critical Paths under _isrHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isrLow in BANK8

    None.

Critical Paths under _isrHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isrLow in BANK9

    None.

Critical Paths under _isrHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isrLow in BANK10

    None.

Critical Paths under _isrHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isrLow in BANK11

    None.

Critical Paths under _isrHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isrLow in BANK12

    None.

Critical Paths under _isrHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isrLow in BANK13

    None.

Critical Paths under _isrHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isrLow in BANK14

    None.

Critical Paths under _isrHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0 4245605
                     _checkPowerOnPb
                       _factoryReset
                         _initRomOps
                               _loop
                               _poll
                            _powerUp
                            _readNVM
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0   32975
                           _configIO
                              _getNV
                      _initInputScan
                        _initOutputs
                         _initServos
              _setTimedResponseDelay
                            _tickGet
                _universalEventsInit
 ---------------------------------------------------------------------------------
 (2) _universalEventsInit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initServos                                           5     5      0   10205
                                             68 BANK0      5     5      0
                              _getNV
                            _readNVM
                  _setOutputPosition
                            _tickGet
 ---------------------------------------------------------------------------------
 (3) _setOutputPosition                                    3     1      2    4923
                                             65 BANK0      3     1      2
                              _getNV
                            _readNVM (ARG)
                   _setDigitalOutput
                       _setOutputPin
                   _setServoPosition
 ---------------------------------------------------------------------------------
 (2) _initOutputs                                          1     1      0      90
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _initInputScan                                        3     3      0    4738
                                             55 BANK0      3     3      0
                              _getNV
                          _readInput
                            _readNVM
 ---------------------------------------------------------------------------------
 (1) _powerUp                                              6     6      0   44346
                                              9 BANK1      5     5      0
                                NULL *
                         _ackPowerUp *
                        _bootPowerUp *
                         _canPowerUp *
                  _consumer2QPowerUp *
                         _initTicker
                  _initTimedResponse
                       _leds_powerUp
                         _mnsPowerUp *
                          _nvPowerUp *
                    _producerPowerUp *
                       _teachPowerUp *
 ---------------------------------------------------------------------------------
 (2) _teachPowerUp                                         1     1      0   24492
                                             73 BANK0      1     1      0
                   _rebuildHashtable
 ---------------------------------------------------------------------------------
 (2) _producerPowerUp                                      1     1      0      99
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _nvPowerUp                                            1     1      0    4592
                                             60 BANK0      1     1      0
                        _loadNvCache
 ---------------------------------------------------------------------------------
 (2) _mnsPowerUp                                           3     3      0    5006
                                             55 BANK0      3     3      0
                            _readNVM
                      _setLEDsByMode
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _leds_powerUp                                         0     0      0     318
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _initTimedResponse                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initTicker                                           3     3      0     136
                                             45 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _consumer2QPowerUp                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _canPowerUp                                           3     3      0    4780
                                             55 BANK0      3     3      0
                            _readNVM
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _bootPowerUp                                          6     6      0    4663
                                             55 BANK0      6     6      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (2) _ackPowerUp                                           1     1      0      99
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _poll                                                15    15      0 2733364
                                             35 BANK2     15    15      0
                                NULL *
             _APP_postProcessMessage
              _APP_preProcessMessage
                             ___lmul
             _ackEventProcessMessage *
                 _bootProcessMessage *
                  _canProcessMessage *
                  _canReceiveMessage *
           _consumer2QProcessMessage *
                    _flushFlashBlock
                          _leds_poll
                            _mnsPoll *
                  _mnsProcessMessage *
                   _nvProcessMessage *
                  _pollTimedResponse
             _producerProcessMessage *
                         _showStatus
                _teachProcessMessage *
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _teachProcessMessage                                  8     6      2  899335
                                             63 BANK1      2     0      2
                                              0 BANK2      6     6      0
                            _doEvlrn
                            _doEvuln
                            _doNenrd
                             _doNerd
                            _doNnclr
                            _doNnevn
                            _doReqev
                            _doReval
                            _doRqevn
                       _sendMessage3
                       _sendMessage5
                      _teachCheckLen
 ---------------------------------------------------------------------------------
 (3) _teachCheckLen                                        5     1      4   62481
                                             73 BANK0      1     1      0
                                             17 BANK1      4     0      4
                           _checkLen
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _doRqevn                                              2     2      0   20252
                                              9 BANK1      2     2      0
                       _sendMessage3
                         _validStart
 ---------------------------------------------------------------------------------
 (3) _doReval                                              7     6      1   70300
                                             13 BANK1      7     6      1
                 _evtIdxToTableIndex
                   _findServiceIndex
                              _getEv
                              _numEv
                       _sendMessage3
                       _sendMessage5
                 _startTimedResponse
                         _validStart
 ---------------------------------------------------------------------------------
 (3) _doReqev                                              8     3      5   91019
                                             14 BANK1      8     3      5
                          _findEvent
                   _findServiceIndex
                              _getEv
                              _numEv
                       _sendMessage3
                       _sendMessage5
                       _sendMessage6
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doNnevn                                              7     7      0   20190
                                              9 BANK1      7     7      0
                            _readNVM
                       _sendMessage3
 ---------------------------------------------------------------------------------
 (3) _doNnclr                                              0     0      0   75448
                     _clearAllEvents
                       _sendMessage2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _doNerd                                               0     0      0    1998
                   _findServiceIndex
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doNenrd                                              6     6      0   58370
                                             13 BANK1      6     6      0
                 _evtIdxToTableIndex
                              _getEN
                              _getNN
                       _sendMessage3
                       _sendMessage5
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _evtIdxToTableIndex                                   1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _doEvuln                                              5     1      4  112033
                                             20 BANK1      5     1      4
                        _removeEvent
                       _sendMessage2
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _removeEvent                                          5     1      4   54958
                                             15 BANK1      5     1      4
                          _findEvent
                   _removeTableEntry
 ---------------------------------------------------------------------------------
 (3) _doEvlrn                                              7     1      6  340648
                                             52 BANK1      7     1      6
                       _APP_addEvent
                       _sendMessage2
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _APP_addEvent                                         8     1      7  282937
                                             44 BANK1      8     1      7
                           _addEvent
              _checkRemoveTableEntry
                   _rebuildHashtable
                            _writeEv
 ---------------------------------------------------------------------------------
 (2) _producerProcessMessage                              12    10      2   62938
                                             63 BANK1      2     0      2
                                              0 BANK2     10    10      0
                  _APP_GetEventState
                          _findEvent
                              _getEv
                       _sendMessage3
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (2) _pollTimedResponse                                    3     3      0  217272
                                             41 BANK1      3     3      0
                                NULL *
        _mnsTRallDiagnosticsCallback *
                 _mnsTRrqnpnCallback *
      _mnsTRserviceDiscoveryCallback *
                       _nerdCallback *
                   _nvTRnvrdCallback *
                      _reqevCallback *
                      _sodTRCallback *
 ---------------------------------------------------------------------------------
 (3) _sodTRCallback                                       14    12      2   46634
                                             26 BANK1     13    11      2
                  _APP_GetEventState
                            ___awdiv
                              _getNV
          _sendInvertedProducedEvent
 ---------------------------------------------------------------------------------
 (3) _APP_GetEventState                                   11    11      0   11604
                                             63 BANK0     11    11      0
                            ___awdiv
                              _getNV
                            _readNVM
 ---------------------------------------------------------------------------------
 (3) _reqevCallback                                       15    13      2   70665
                                             26 BANK1     15    13      2
                              _getEN
                              _getEv
                              _getNN
                              _numEv
                       _sendMessage5
                       _sendMessage6
                 _tableIndexToEvtIdx
 ---------------------------------------------------------------------------------
 (4) _numEv                                                7     7      0    8958
                                             61 BANK0      7     7      0
                            _readNVM
                         _validStart
 ---------------------------------------------------------------------------------
 (3) _nvTRnvrdCallback                                     5     3      2   13934
                                             26 BANK1      4     2      2
                              _getNV
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _nerdCallback                                         7     5      2   27593
                                             26 BANK1      6     4      2
                              _getEN
                              _getNN
                       _sendMessage7
                 _tableIndexToEvtIdx
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _tableIndexToEvtIdx                                   1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _mnsTRserviceDiscoveryCallback                        7     5      2   29138
                                             26 BANK1      6     4      2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _mnsTRrqnpnCallback                                   3     1      2   14215
                                             26 BANK1      2     0      2
                       _getParameter
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _mnsTRallDiagnosticsCallback                          9     7      2   15059
                                             26 BANK1      8     6      2
                                NULL *
                   _ackGetDiagnostic *
                   _canGetDiagnostic *
            _consumer2QGetDiagnostic *
                   _mnsGetDiagnostic *
                    _nvGetDiagnostic *
              _producerGetDiagnostic *
                       _sendMessage6
                 _teachGetDiagnostic *
 ---------------------------------------------------------------------------------
 (2) _nvProcessMessage                                     6     4      2  612608
                                             63 BANK1      2     0      2
                                              0 BANK2      4     4      0
                   _findServiceIndex
                              _getNV
                       _sendMessage2
                       _sendMessage3
                       _sendMessage4
                       _sendMessage5
                              _setNV
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _setNV                                                5     4      1  539186
                                             58 BANK1      5     4      1
                     _APP_nvValidate
                 _APP_nvValueChanged
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _APP_nvValueChanged                                   8     6      2  519873
                                             51 BANK1      7     5      2
                            ___awdiv
                            ___awmod
                              _getNV
                     _setBounceState
                      _setMultiState
                   _setServoPosition
                      _setServoState
              _setTimedResponseDelay
                            _setType
                  _startBounceOutput
                   _startMultiOutput
                   _startServoOutput
 ---------------------------------------------------------------------------------
 (2) _setTimedResponseDelay                                1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _setServoPosition                                     2     1      1     304
                                             63 BANK0      2     1      1
                            ___awdiv (ARG)
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (4) _APP_nvValidate                                       3     2      1    9015
                                             63 BANK0      2     1      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _mnsProcessMessage                                   38    36      2  729637
                                             63 BANK1      2     0      2
                                              0 BANK2     35    35      0
                                NULL *
                   _ackGetDiagnostic *
                        _bootEsdData *
                         _canEsdData *
                   _canGetDiagnostic *
                  _consumer2QEsdData *
            _consumer2QGetDiagnostic *
                       _factoryReset
                   _findServiceIndex
                       _getParameter
                  _getParameterFlags
                   _mnsGetDiagnostic *
                    _nvGetDiagnostic *
                       _nvGetESDdata *
                    _producerEsdData *
              _producerGetDiagnostic *
                   _rebuildHashtable
                       _sendMessage2
                       _sendMessage3
                       _sendMessage4
                       _sendMessage5
                       _sendMessage6
                       _sendMessage7
                      _setLEDsByMode
                 _startTimedResponse
                 _teachGetDiagnostic *
                    _teachGetESDdata *
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _teachGetESDdata                                      1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _teachGetDiagnostic                                   3     1      2      62
                                             55 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _sendMessage6                                         7     1      6   13385
                                             71 BANK0      1     1      0
                                              8 BANK1      6     0      6
                              _numEv (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (3) _sendMessage3                                         4     1      3   15722
                                             71 BANK0      3     0      3
                                              8 BANK1      1     1      0
                        _sendMessage
 ---------------------------------------------------------------------------------
 (4) _producerGetDiagnostic                                3     1      2      62
                                             55 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _producerEsdData                                      1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _nvGetESDdata                                         1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _nvGetDiagnostic                                      3     1      2      62
                                             55 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _mnsGetDiagnostic                                     3     1      2      62
                                             55 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _getParameter                                         2     2      0     439
                                             50 BANK0      1     1      0
                  _getParameterFlags
                               _have
 ---------------------------------------------------------------------------------
 (5) _getParameterFlags                                    1     1      0     247
                                             49 BANK0      1     1      0
                               _have
 ---------------------------------------------------------------------------------
 (4) _consumer2QGetDiagnostic                              3     1      2      62
                                             55 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _consumer2QEsdData                                    1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _canGetDiagnostic                                     4     2      2    1020
                                             55 BANK0      4     2      2
               _getNumRxBuffersInUse
               _getNumTxBuffersInUse
 ---------------------------------------------------------------------------------
 (3) _canEsdData                                           1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _bootEsdData                                          1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _ackGetDiagnostic                                     3     1      2      62
                                             55 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _mnsPoll                                              4     4      0   51138
                                             13 BANK1      4     4      0
                       _sendMessage2
                       _sendMessage5
                      _setLEDsByMode
                            _tickGet
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _setLEDsByMode                                        0     0      0      31
                         _showStatus
 ---------------------------------------------------------------------------------
 (4) _sendMessage2                                         3     1      2   12001
                                             71 BANK0      3     1      2
                        _sendMessage
 ---------------------------------------------------------------------------------
 (2) _consumer2QProcessMessage                            20    18      2   31318
                                             63 BANK1      2     0      2
                                              0 BANK2     17    17      0
                            ___awdiv
                            ___awmod
                          _findEvent
                             _getEVs
                              _getNV
                      _pushTwoAction
                _setExpeditedActions
                   _setNormalActions
 ---------------------------------------------------------------------------------
 (3) _setNormalActions                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _setExpeditedActions                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _pushTwoAction                                        1     1      0      62
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _canReceiveMessage                                   10     8      2   13809
                                              9 BANK1      9     7      2
                   _getBufferPointer
               _getNumRxBuffersInUse
              _handleSelfEnumeration
                             _memcpy
                                _pop
                 _processEnumeration
 ---------------------------------------------------------------------------------
 (3) _processEnumeration                                   7     7      0   10643
                                              2 BANK1      7     7      0
                        _setNewCanId
                            _tickGet
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (4) _setNewCanId                                          1     1      0    9960
                                              1 BANK1      1     1      0
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _pop                                                  9     7      2     427
                                             45 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              11     5      6     478
                                             45 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) _handleSelfEnumeration                                7     5      2     659
                                             55 BANK0      7     5      2
                            _tickGet
 ---------------------------------------------------------------------------------
 (5) _getNumRxBuffersInUse                                 4     4      0     564
                                             51 BANK0      4     4      0
                   _getBufferPointer
                           _quantity
 ---------------------------------------------------------------------------------
 (6) _getBufferPointer                                     3     1      2      31
                                             45 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _canProcessMessage                                    4     2      2   29169
                                             63 BANK1      2     0      2
                                              0 BANK2      2     2      0
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (2) _bootProcessMessage                                   4     2      2    9898
                                             63 BANK1      2     0      2
                                              0 BANK2      2     2      0
                           _writeNVM
 ---------------------------------------------------------------------------------
 (2) _ackEventProcessMessage                              11     9      2   65978
                                             63 BANK1      2     0      2
                                              0 BANK2      7     7      0
                   _ackEventCheckLen
                          _findEvent
                        _findService
                    _isConsumedEvent
                       _sendMessage7
 ---------------------------------------------------------------------------------
 (4) _sendMessage7                                         8     1      7   13956
                                             71 BANK0      1     1      0
                                              8 BANK1      7     0      7
                                NULL (ARG) *
                        _bootEsdData (ARG) *
                         _canEsdData (ARG) *
                  _consumer2QEsdData (ARG) *
                       _nvGetESDdata (ARG) *
                    _producerEsdData (ARG) *
                        _sendMessage
                 _tableIndexToEvtIdx (ARG)
                    _teachGetESDdata (ARG) *
 ---------------------------------------------------------------------------------
 (3) _isConsumedEvent                                      2     2      0    9681
                                             70 BANK0      2     2      0
                              _getEv
 ---------------------------------------------------------------------------------
 (3) _findService                                          6     4      2     192
                                             45 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _ackEventCheckLen                                     3     0      3   30013
                                             17 BANK1      3     0      3
                           _checkLen
 ---------------------------------------------------------------------------------
 (4) _checkLen                                             5     1      4   29771
                                             72 BANK0      1     1      0
                                             13 BANK1      4     0      4
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _sendMessage5                                         6     1      5   29014
                                             71 BANK0      1     1      0
                                              8 BANK1      5     0      5
                  _getParameterFlags (ARG)
                        _sendMessage
                 _tableIndexToEvtIdx (ARG)
 ---------------------------------------------------------------------------------
 (2) _APP_preProcessMessage                                2     0      2      90
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _APP_postProcessMessage                               2     0      2      90
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _loop                                                 8     8      0  228511
                                             46 BANK1      8     8      0
                             ___lmul
                              _getNV
                          _inputScan
                     _processActions
                     _processOutputs
                  _sendProducedEvent
                        _startServos
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _startServos                                          1     1      0   75278
                                             30 BANK1      1     1      0
                              _getNV
                         _pollServos
                        _setupTimer1
                        _setupTimer3
 ---------------------------------------------------------------------------------
 (3) _setupTimer3                                          8     8      0    1940
                                             53 BANK0      8     8      0
                              _getNV
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (3) _setupTimer1                                          8     8      0    1940
                                             53 BANK0      8     8      0
                              _getNV
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (3) _pollServos                                          12    12      0   71113
                                             18 BANK1     12    12      0
                            ___awdiv
                         _bounceDown
                           _bounceUp
                              _getNV
                         _initBounce
                  _sendProducedEvent
                       _setOutputPin
                            _tickGet
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _initBounce                                           1     1      0      62
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _bounceUp                                             9     9      0    8078
                                             63 BANK0      9     9      0
                            ___awdiv
                              _getNV
 ---------------------------------------------------------------------------------
 (4) _bounceDown                                          11    11      0   12774
                                             63 BANK0     11    11      0
                            ___awdiv
                             ___wmul
                              _getNV
 ---------------------------------------------------------------------------------
 (2) _processOutputs                                       2     2      0   28021
                                             18 BANK1      2     2      0
                              _getNV
                  _sendProducedEvent
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (2) _processActions                                       9     9      0   62381
                                             37 BANK1      9     9      0
                            ___awdiv
                            ___awmod
                          _completed
               _deleteTwoActionQueue
                              _doSOD
                             _doWait
                      _doneTwoAction
                     _finaliseOutput
                              _getNV
                       _getTwoAction
                      _needsStarting
                 _peekTwoActionQueue
                     _setOutputState
                        _startOutput
 ---------------------------------------------------------------------------------
 (3) _startOutput                                          3     1      2   42680
                                             34 BANK1      3     1      2
                  _startBounceOutput
                 _startDigitalOutput
                   _startMultiOutput
                   _startServoOutput
 ---------------------------------------------------------------------------------
 (5) _startServoOutput                                     3     2      1     766
                                             49 BANK0      3     2      1
                              _getNV
 ---------------------------------------------------------------------------------
 (5) _startMultiOutput                                     3     2      1     822
                                             49 BANK0      3     2      1
                              _getNV
 ---------------------------------------------------------------------------------
 (4) _startDigitalOutput                                   8     7      1   40028
                                             26 BANK1      8     7      1
                              _getNV
          _sendInvertedProducedEvent
                       _setOutputPin
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _sendInvertedProducedEvent                            8     4      4   27223
                                             18 BANK1      8     4      4
                              _getNV (ARG)
                  _sendProducedEvent
 ---------------------------------------------------------------------------------
 (5) _startBounceOutput                                    2     1      1     425
                                             45 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _setOutputState                                       3     1      2    2869
                                             51 BANK0      3     1      2
                     _setBounceState
                      _setMultiState
                      _setServoState
 ---------------------------------------------------------------------------------
 (5) _setServoState                                        2     1      1     704
                                             49 BANK0      2     1      1
                              _getNV
 ---------------------------------------------------------------------------------
 (5) _setMultiState                                        2     1      1     884
                                             49 BANK0      2     1      1
                              _getNV
 ---------------------------------------------------------------------------------
 (5) _setBounceState                                       2     1      1     704
                                             49 BANK0      2     1      1
                              _getNV
 ---------------------------------------------------------------------------------
 (3) _needsStarting                                        5     3      2     515
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _getTwoAction                                         0     0      0     362
                 _peekTwoActionQueue
 ---------------------------------------------------------------------------------
 (3) _peekTwoActionQueue                                   2     2      0     362
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _finaliseOutput                                       2     1      1     211
                                             45 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (3) _doWait                                               6     4      2    1905
                                             61 BANK0      6     4      2
                             ___lmul
                      _doneTwoAction
                            _tickGet
 ---------------------------------------------------------------------------------
 (3) _doneTwoAction                                        0     0      0      20
                       _popTwoAction
 ---------------------------------------------------------------------------------
 (4) _popTwoAction                                         1     1      0      20
 ---------------------------------------------------------------------------------
 (3) _doSOD                                                0     0      0    1998
                   _findServiceIndex
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (4) _startTimedResponse                                   4     1      3    1806
                                             49 BANK0      4     1      3
                   _findServiceIndex (ARG)
 ---------------------------------------------------------------------------------
 (4) _findServiceIndex                                     4     4      0     192
                                             45 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _deleteTwoActionQueue                                 2     2      0     362
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _completed                                            6     4      2     583
                                             45 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _inputScan                                            4     4      0   35780
                                             18 BANK1      4     4      0
                              _getNV
                          _readInput
                  _sendProducedEvent
                           _writeNVM
 ---------------------------------------------------------------------------------
 (5) _sendProducedEvent                                    8     7      1   25464
                                             72 BANK0      2     1      1
                                             12 BANK1      6     6      0
                              _getEN
                              _getNN
                              _getNV (ARG)
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _sendMessage4                                         5     1      4   13683
                                             71 BANK0      1     1      0
                                              8 BANK1      4     0      4
                       _getParameter (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (5) _sendMessage                                         11     3      8    9928
                                             68 BANK0      3     3      0
                                              0 BANK1      8     0      8
                     _canSendMessage *
 ---------------------------------------------------------------------------------
 (6) _canSendMessage                                      10     8      2    3889
                                             58 BANK0     10     8      2
                _getNextWriteMessage
               _getNumTxBuffersInUse
                               _have
                            _isEvent
                               _push
                           _quantity
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (7) _push                                                13     9      4    1234
                                             45 BANK0     13     9      4
 ---------------------------------------------------------------------------------
 (7) _isEvent                                              2     2      0      99
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _have                                                 4     4      0     161
                                             45 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (7) _getNumTxBuffersInUse                                 0     0      0     363
                           _quantity
 ---------------------------------------------------------------------------------
 (7) _quantity                                             6     4      2     363
                                             45 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (7) _getNextWriteMessage                                 12    10      2     513
                                             45 BANK0     12    10      2
 ---------------------------------------------------------------------------------
 (3) _readInput                                            3     3      0     248
                                             49 BANK0      3     3      0
                              _getNV
 ---------------------------------------------------------------------------------
 (1) _initRomOps                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkPowerOnPb                                       1     1      0  610418
                                             57 BANK1      1     1      0
                       _APP_testMode
                       _factoryReset
                        _pbDownTimer
                          _pbUpTimer
                         _showStatus
 ---------------------------------------------------------------------------------
 (4) _showStatus                                           3     3      0      31
                                             45 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _pbUpTimer                                            5     5      0    9234
                                             68 BANK0      5     5      0
                            ___lldiv
                             ___lmul
                          _leds_poll
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _pbDownTimer                                          5     5      0    9234
                                             68 BANK0      5     5      0
                            ___lldiv
                             ___lmul
                          _leds_poll
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _leds_poll                                            4     4      0    7243
                                             63 BANK0      4     4      0
                            ___awdiv
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _tickGet                                             10     6      4     318
                                             45 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1176
                                             49 BANK0     12     4      8
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     466
                                             55 BANK0     13     5      8
                            _tickGet (ARG)
 ---------------------------------------------------------------------------------
 (3) _factoryReset                                         5     5      0  591693
                                             52 BANK1      5     5      0
                                NULL *
                   _APP_factoryReset
                    _canFactoryReset *
                    _mnsFactoryReset *
                     _nvFactoryReset *
                  _teachFactoryReset *
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _teachFactoryReset                                    0     0      0   34433
                     _clearAllEvents
 ---------------------------------------------------------------------------------
 (4) _clearAllEvents                                       5     5      0   34433
                                              9 BANK1      5     5      0
                    _flushFlashBlock
                   _rebuildHashtable
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _nvFactoryReset                                       3     3      0   23401
                                              1 BANK1      3     3      0
                      _APP_nvDefault
                           _writeNVM
 ---------------------------------------------------------------------------------
 (5) _APP_nvDefault                                        7     7      0   13497
                                             63 BANK0      5     5      0
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    4538
                                             49 BANK0      6     2      4
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    1873
                                             45 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    6925
                                             55 BANK0      8     4      4
                             ___wmul (ARG)
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (4) _mnsFactoryReset                                      0     0      0    9774
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _canFactoryReset                                      0     0      0    9774
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _APP_factoryReset                                     3     3      0  504376
                                             51 BANK1      1     1      0
           _factoryResetGlobalEvents
                    _flushFlashBlock
                            _setType
 ---------------------------------------------------------------------------------
 (5) _setType                                              3     2      1  504042
                                             48 BANK1      3     2      1
                           _configIO
                      _defaultEvents
                         _defaultNVs
                             _saveNV
 ---------------------------------------------------------------------------------
 (6) _defaultNVs                                           5     4      1   14853
                                              5 BANK1      5     4      1
                        _loadNvCache
                             _saveNV
 ---------------------------------------------------------------------------------
 (6) _saveNV                                               4     3      1   10078
                                              1 BANK1      4     3      1
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _loadNvCache                                          5     5      0    4493
                                             55 BANK0      5     5      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (6) _defaultEvents                                        5     4      1  461056
                                             44 BANK1      4     3      1
                           _addEvent
                        _clearEvents
 ---------------------------------------------------------------------------------
 (7) _clearEvents                                          1     1      0  332882
                                             39 BANK1      1     1      0
                  _deleteActionRange
               _deleteHappeningRange
 ---------------------------------------------------------------------------------
 (8) _deleteHappeningRange                                10     9      1  163860
                                             29 BANK1      9     8      1
              _checkRemoveTableEntry
                    _flushFlashBlock
                            _readNVM
                   _rebuildHashtable
                         _validStart
                            _writeEv
 ---------------------------------------------------------------------------------
 (8) _deleteActionRange                                   10     9      1  168929
                                             29 BANK1     10     9      1
              _checkRemoveTableEntry
                    _flushFlashBlock
                             _getEVs
                   _rebuildHashtable
                         _validStart
                            _writeEv
 ---------------------------------------------------------------------------------
 (5) _addEvent                                            15     8      7  127554
                                             29 BANK1     15     8      7
                          _findEvent
                    _flushFlashBlock
                            _readNVM
                   _rebuildHashtable
                            _writeEv
                           _writeNVM
 ---------------------------------------------------------------------------------
 (5) _writeEv                                             12    10      2   73087
                                             17 BANK1     12    10      2
              _checkRemoveTableEntry
                            _readNVM
                           _writeNVM
 ---------------------------------------------------------------------------------
 (6) _checkRemoveTableEntry                                2     2      0   57047
                                             15 BANK1      2     2      0
                             _getEVs
                   _removeTableEntry
                         _validStart
 ---------------------------------------------------------------------------------
 (5) _removeTableEntry                                     6     6      0   43283
                                              9 BANK1      6     6      0
                    _flushFlashBlock
                            _readNVM
                   _rebuildHashtable
                         _validStart
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _rebuildHashtable                                    11    11      0   24393
                                              0 BANK1      9     9      0
                              _getEN
                              _getEv
                            _getHash
                              _getNN
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _getEv                                                9     7      2    9616
                                             61 BANK0      9     7      2
                            _readNVM
                         _validStart
 ---------------------------------------------------------------------------------
 (7) _getEVs                                               8     8      0    9178
                                             61 BANK0      8     8      0
                            _readNVM
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _validStart                                           6     6      0    4394
                                             55 BANK0      6     6      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (4) _findEvent                                           13     9      4   11368
                                              0 BANK1     13     9      4
                              _getEN
                            _getHash
                              _getNN
 ---------------------------------------------------------------------------------
 (4) _getNN                                               12    10      2    4493
                                             55 BANK0     12    10      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (4) _getHash                                              6     2      4     555
                                             67 BANK0      6     2      4
                              _getEN (ARG)
                              _getNN (ARG)
 ---------------------------------------------------------------------------------
 (4) _getEN                                               11     9      2    4428
                                             55 BANK0     11     9      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (2) _configIO                                             8     8      0   17500
                                              1 BANK1      8     8      0
                              _getNV
                            _readNVM
                   _setDigitalOutput
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _writeNVM                                             7     3      4    9774
                                             68 BANK0      6     2      4
                                              0 BANK1      1     1      0
                      _APP_nvDefault (ARG)
                       _EEPROM_Write
                        _FLASH_Write
 ---------------------------------------------------------------------------------
 (4) _FLASH_Write                                          8     5      3     728
                                             48 BANK0      7     4      3
                    _eraseFlashBlock
                    _flushFlashBlock
                     _loadFlashBlock
 ---------------------------------------------------------------------------------
 (5) _loadFlashBlock                                       1     1      0      99
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _flushFlashBlock                                      2     2      0     167
                                             46 BANK0      2     2      0
     _APP_isSuitableTimeToWriteFlash
                    _eraseFlashBlock
 ---------------------------------------------------------------------------------
 (6) _eraseFlashBlock                                      1     1      0      34
                                             45 BANK0      1     1      0
     _APP_isSuitableTimeToWriteFlash
 ---------------------------------------------------------------------------------
 (7) _APP_isSuitableTimeToWriteFlash                       0     0      0       0
                    _isNoServoPulses
 ---------------------------------------------------------------------------------
 (8) _isNoServoPulses                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EEPROM_Write                                         4     1      3     611
                                             47 BANK0      4     1      3
                        _EEPROM_Read
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (5) _updateModuleErrorStatus                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _setDigitalOutput                                     3     2      1    2359
                                             55 BANK0      3     2      1
                              _getNV
                            _readNVM (ARG)
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (4) _setOutputPin                                         4     3      1    1590
                                             49 BANK0      4     3      1
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (5) _getNV                                                4     2      2      93
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _readNVM                                              6     3      3    4298
                                             49 BANK0      6     3      3
                        _EEPROM_Read
                         _FLASH_Read
 ---------------------------------------------------------------------------------
 (4) _FLASH_Read                                           4     2      2     183
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) _EEPROM_Read                                          2     0      2     242
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _factoryResetGlobalEvents                             0     0      0       0
 ---------------------------------------------------------------------------------
 (26) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _APP_testMode                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _isrLow                                             15    15      0    7802
                                             30 BANK0     15    15      0
                             _lowIsr
 ---------------------------------------------------------------------------------
 (19) _lowIsr                                              5     5      0    7802
                                             25 BANK0      5     5      0
                                NULL *
                         _APP_lowIsr
                             _canIsr *
                          _mnsLowIsr *
 ---------------------------------------------------------------------------------
 (20) _mnsLowIsr                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (20) _canIsr                                              0     0      0    7641
                      _canFillRxFifo
                         _canTxError
                    _checkCANTimeout
                        _checkTxFifo
 ---------------------------------------------------------------------------------
 (21) _checkCANTimeout                                     4     4      0    2402
                                             21 BANK0      4     4      0
                        _checkTxFifo
                          i1_tickGet
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (21) _canTxError                                          0     0      0    2084
                        _checkTxFifo
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (21) _checkTxFifo                                         9     9      0    2084
                                             12 BANK0      9     9      0
              i1_getNextWriteMessage
                          i1_isEvent
                              i1_pop
                          i1_tickGet
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (22) i1_tickGet                                          10     6      4     318
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (22) i1_pop                                               9     7      2     317
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (22) i1_isEvent                                           2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (21) _canFillRxFifo                                       5     5      0    1071
                                             12 BANK0      4     4      0
                 i1_getBufferPointer
              i1_getNextWriteMessage
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (22) i1_updateModuleErrorStatus                           0     0      0       0
 ---------------------------------------------------------------------------------
 (22) i1_getNextWriteMessage                              12    10      2     383
                                              0 BANK0     12    10      2
 ---------------------------------------------------------------------------------
 (22) i1_getBufferPointer                                  3     1      2      31
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (20) _APP_lowIsr                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (26) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (24) _isrHigh                                            12    12      0    7315
                                             30 COMRAM    12    12      0
                            _highIsr
 ---------------------------------------------------------------------------------
 (25) _highIsr                                             5     5      0    7315
                                             25 COMRAM     5     5      0
                                NULL *
                        _APP_highIsr
                           i2_canIsr *
 ---------------------------------------------------------------------------------
 (26) i2_canIsr                                            0     0      0    6478
                    i2_canFillRxFifo
                       i2_canTxError
                  i2_checkCANTimeout
                      i2_checkTxFifo
 ---------------------------------------------------------------------------------
 (27) i2_checkCANTimeout                                   4     4      0    2047
                                             21 COMRAM     4     4      0
                      i2_checkTxFifo
                          i2_tickGet
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (27) i2_canTxError                                        0     0      0    1836
                      i2_checkTxFifo
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (27) i2_checkTxFifo                                       9     9      0    1836
                                             12 COMRAM     9     9      0
              i2_getNextWriteMessage
                          i2_isEvent
                              i2_pop
                          i2_tickGet
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (28) i2_tickGet                                          10     6      4     211
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (28) i2_pop                                               9     7      2     317
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (28) i2_isEvent                                           2     2      0      68
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (27) i2_canFillRxFifo                                     5     5      0     759
                                             12 COMRAM     4     4      0
                 i2_getBufferPointer
              i2_getNextWriteMessage
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (28) i2_updateModuleErrorStatus                           0     0      0       0
 ---------------------------------------------------------------------------------
 (28) i2_getNextWriteMessage                              12    10      2     273
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (28) i2_getBufferPointer                                  3     1      2      22
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (26) _APP_highIsr                                         0     0      0     676
         _timer1DoneInterruptHandler
         _timer3DoneInterruptHandler
 ---------------------------------------------------------------------------------
 (27) _timer3DoneInterruptHandler                          0     0      0     338
                            i2_getNV
                     i2_setOutputPin
 ---------------------------------------------------------------------------------
 (27) _timer1DoneInterruptHandler                          0     0      0     338
                            i2_getNV
                     i2_setOutputPin
 ---------------------------------------------------------------------------------
 (28) i2_setOutputPin                                      4     3      1     272
                                              4 COMRAM     4     3      1
                            i2_getNV (ARG)
 ---------------------------------------------------------------------------------
 (28) i2_getNV                                             4     2      2      66
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (26) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 28
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _checkPowerOnPb
     _APP_testMode
     _factoryReset
       NULL(Fake) *
       _APP_factoryReset *
         _factoryResetGlobalEvents
         _flushFlashBlock
           _APP_isSuitableTimeToWriteFlash
             _isNoServoPulses
           _eraseFlashBlock
             _APP_isSuitableTimeToWriteFlash
         _setType
           _configIO
             _getNV
             _readNVM
               _EEPROM_Read
               _FLASH_Read
             _setDigitalOutput
               _getNV
               _readNVM (ARG)
               _setOutputPin (ARG)
                 _getNV (ARG)
             _writeNVM
               _APP_nvDefault (ARG)
                 ___awdiv
                   ___wmul (ARG)
                     _getNV (ARG)
                   _getNV (ARG)
                 ___awmod
                 ___wmul
               _EEPROM_Write (ARG)
                 _EEPROM_Read
                 _updateModuleErrorStatus
               _FLASH_Write (ARG)
                 _eraseFlashBlock
                 _flushFlashBlock
                 _loadFlashBlock
           _defaultEvents
             _addEvent
               _findEvent
                 _getEN
                   _readNVM
                 _getHash
                   _getEN (ARG)
                   _getNN (ARG)
                     _readNVM
                 _getNN
               _flushFlashBlock
               _readNVM
               _rebuildHashtable
                 _getEN
                 _getEv
                   _readNVM
                   _validStart
                     _readNVM
                 _getHash
                 _getNN
                 _validStart
               _writeEv
                 _checkRemoveTableEntry
                   _getEVs
                     _readNVM
                     _validStart
                   _removeTableEntry
                     _flushFlashBlock
                     _readNVM
                     _rebuildHashtable
                     _validStart
                     _writeNVM
                   _validStart
                 _readNVM
                 _writeNVM
               _writeNVM
             _clearEvents
               _deleteActionRange
                 _checkRemoveTableEntry
                 _flushFlashBlock
                 _getEVs
                 _rebuildHashtable
                 _validStart
                 _writeEv
               _deleteHappeningRange
                 _checkRemoveTableEntry
                 _flushFlashBlock
                 _readNVM
                 _rebuildHashtable
                 _validStart
                 _writeEv
           _defaultNVs
             _loadNvCache
               _readNVM
             _saveNV
               _writeNVM
           _saveNV
       _canFactoryReset *
         _writeNVM
       _mnsFactoryReset *
         _writeNVM
       _nvFactoryReset *
         _APP_nvDefault
         _writeNVM
       _teachFactoryReset *
         _clearAllEvents
           _flushFlashBlock
           _rebuildHashtable
           _writeNVM
       _writeNVM *
     _pbDownTimer
       ___lldiv
         _tickGet (ARG)
       ___lmul
         _getNV (ARG)
       _leds_poll
         ___awdiv
         _tickGet
       _tickGet
     _pbUpTimer
       ___lldiv
       ___lmul
       _leds_poll
       _tickGet
     _showStatus
   _factoryReset
   _initRomOps
   _loop
     ___lmul
     _getNV
     _inputScan
       _getNV
       _readInput
         _getNV
       _sendProducedEvent
         _getEN
         _getNN
         _getNV (ARG)
         _sendMessage4 (ARG)
           _getParameter (ARG)
             _getParameterFlags
               _have
             _have
           _sendMessage (ARG)
             _canSendMessage *
               _getNextWriteMessage
               _getNumTxBuffersInUse
                 _quantity
               _have
               _isEvent
               _push
               _quantity
               _updateModuleErrorStatus
       _writeNVM
     _processActions
       ___awdiv
       ___awmod
       _completed
       _deleteTwoActionQueue
       _doSOD
         _findServiceIndex
         _startTimedResponse
           _findServiceIndex (ARG)
       _doWait
         ___lmul
         _doneTwoAction
           _popTwoAction
         _tickGet
       _doneTwoAction
       _finaliseOutput
       _getNV
       _getTwoAction
         _peekTwoActionQueue
       _needsStarting
       _peekTwoActionQueue
       _setOutputState
         _setBounceState
           _getNV
         _setMultiState
           _getNV
         _setServoState
           _getNV
       _startOutput
         _startBounceOutput
         _startDigitalOutput
           _getNV
           _sendInvertedProducedEvent
             _getNV (ARG)
             _sendProducedEvent (ARG)
           _setOutputPin
           _writeNVM
         _startMultiOutput
           _getNV
         _startServoOutput
           _getNV
     _processOutputs
       _getNV
       _sendProducedEvent
       _setOutputPin
     _sendProducedEvent
     _startServos
       _getNV
       _pollServos
         ___awdiv
         _bounceDown
           ___awdiv
           ___wmul
           _getNV
         _bounceUp
           ___awdiv
           _getNV
         _getNV
         _initBounce
         _sendProducedEvent
         _setOutputPin
         _tickGet
         _writeNVM
       _setupTimer1
         _getNV
         _setOutputPin
       _setupTimer3
         _getNV
         _setOutputPin
     _tickGet
   _poll
     NULL(Fake) *
     _APP_postProcessMessage *
     _APP_preProcessMessage *
     ___lmul *
     _ackEventProcessMessage *
       _ackEventCheckLen
         _checkLen
           _sendMessage5
             _getParameterFlags (ARG)
             _sendMessage (ARG)
             _tableIndexToEvtIdx (ARG)
       _findEvent
       _findService
       _isConsumedEvent
         _getEv
       _sendMessage7
         NULL(Fake) (ARG) *
         _bootEsdData (ARG) *
         _canEsdData (ARG) *
         _consumer2QEsdData (ARG) *
         _nvGetESDdata (ARG) *
         _producerEsdData (ARG) *
         _sendMessage (ARG) *
         _tableIndexToEvtIdx (ARG) *
         _teachGetESDdata (ARG) *
     _bootProcessMessage *
       _writeNVM
     _canProcessMessage *
       _sendMessage5
     _canReceiveMessage *
       _getBufferPointer
       _getNumRxBuffersInUse
         _getBufferPointer
         _quantity
       _handleSelfEnumeration
         _tickGet
       _memcpy
       _pop
       _processEnumeration
         _setNewCanId
           _writeNVM
         _tickGet
         _updateModuleErrorStatus
     _consumer2QProcessMessage *
       ___awdiv
       ___awmod
       _findEvent
       _getEVs
       _getNV
       _pushTwoAction
       _setExpeditedActions
       _setNormalActions
     _flushFlashBlock *
     _leds_poll *
     _mnsPoll *
       _sendMessage2
         _sendMessage
       _sendMessage5
       _setLEDsByMode
         _showStatus
       _tickGet
       _writeNVM
     _mnsProcessMessage *
       NULL(Fake) *
       _ackGetDiagnostic *
       _bootEsdData *
       _canEsdData *
       _canGetDiagnostic *
         _getNumRxBuffersInUse
         _getNumTxBuffersInUse
       _consumer2QEsdData *
       _consumer2QGetDiagnostic *
       _factoryReset *
       _findServiceIndex *
       _getParameter *
       _getParameterFlags *
       _mnsGetDiagnostic *
       _nvGetDiagnostic *
       _nvGetESDdata *
       _producerEsdData *
       _producerGetDiagnostic *
       _rebuildHashtable *
       _sendMessage2 *
       _sendMessage3 *
         _sendMessage
       _sendMessage4 *
       _sendMessage5 *
       _sendMessage6 *
         _numEv (ARG)
           _readNVM
           _validStart
         _sendMessage (ARG)
       _sendMessage7 *
       _setLEDsByMode *
       _startTimedResponse *
       _teachGetDiagnostic *
       _teachGetESDdata *
       _writeNVM *
     _nvProcessMessage *
       _findServiceIndex
       _getNV
       _sendMessage2
       _sendMessage3
       _sendMessage4
       _sendMessage5
       _setNV
         _APP_nvValidate
           ___awdiv
           ___awmod
         _APP_nvValueChanged
           ___awdiv
           ___awmod
           _getNV
           _setBounceState
           _setMultiState
           _setServoPosition
             ___awdiv (ARG)
             _getNV (ARG)
           _setServoState
           _setTimedResponseDelay
           _setType
           _startBounceOutput
           _startMultiOutput
           _startServoOutput
         _writeNVM
       _startTimedResponse
     _pollTimedResponse *
       NULL(Fake) *
       _mnsTRallDiagnosticsCallback *
         NULL(Fake) *
         _ackGetDiagnostic *
         _canGetDiagnostic *
         _consumer2QGetDiagnostic *
         _mnsGetDiagnostic *
         _nvGetDiagnostic *
         _producerGetDiagnostic *
         _sendMessage6 *
         _teachGetDiagnostic *
       _mnsTRrqnpnCallback *
         _getParameter
         _sendMessage4
       _mnsTRserviceDiscoveryCallback *
         _sendMessage5
       _nerdCallback *
         _getEN
         _getNN
         _sendMessage7
         _tableIndexToEvtIdx
         _validStart
       _nvTRnvrdCallback *
         _getNV
         _sendMessage4
       _reqevCallback *
         _getEN
         _getEv
         _getNN
         _numEv
         _sendMessage5
         _sendMessage6
         _tableIndexToEvtIdx
       _sodTRCallback *
         _APP_GetEventState
           ___awdiv
           _getNV
           _readNVM
         ___awdiv
         _getNV
         _sendInvertedProducedEvent
     _producerProcessMessage *
       _APP_GetEventState
       _findEvent
       _getEv
       _sendMessage3
       _sendMessage4
     _showStatus *
     _teachProcessMessage *
       _doEvlrn
         _APP_addEvent
           _addEvent
           _checkRemoveTableEntry
           _rebuildHashtable
           _writeEv
         _sendMessage2
         _sendMessage3
         _sendMessage5
       _doEvuln
         _removeEvent
           _findEvent
           _removeTableEntry
         _sendMessage2
         _sendMessage3
         _sendMessage5
       _doNenrd
         _evtIdxToTableIndex
         _getEN
         _getNN
         _sendMessage3
         _sendMessage5
         _validStart
       _doNerd
         _findServiceIndex
         _startTimedResponse
       _doNnclr
         _clearAllEvents
         _sendMessage2
         _sendMessage5
       _doNnevn
         _readNVM
         _sendMessage3
       _doReqev
         _findEvent
         _findServiceIndex
         _getEv
         _numEv
         _sendMessage3
         _sendMessage5
         _sendMessage6
         _startTimedResponse
       _doReval
         _evtIdxToTableIndex
         _findServiceIndex
         _getEv
         _numEv
         _sendMessage3
         _sendMessage5
         _startTimedResponse
         _validStart
       _doRqevn
         _sendMessage3
         _validStart
       _sendMessage3
       _sendMessage5
       _teachCheckLen
         _checkLen
         _sendMessage5
     _tickGet *
   _powerUp
     NULL(Fake) *
     _ackPowerUp *
     _bootPowerUp *
       _readNVM
     _canPowerUp *
       _readNVM
       _tickGet
     _consumer2QPowerUp *
     _initTicker *
     _initTimedResponse *
     _leds_powerUp *
       _tickGet
     _mnsPowerUp *
       _readNVM
       _setLEDsByMode
       _tickGet
     _nvPowerUp *
       _loadNvCache
     _producerPowerUp *
     _teachPowerUp *
       _rebuildHashtable
   _readNVM
   _setup
     _configIO
     _getNV
     _initInputScan
       _getNV
       _readInput
       _readNVM
     _initOutputs
     _initServos
       _getNV
       _readNVM
       _setOutputPosition
         _getNV
         _readNVM (ARG)
         _setDigitalOutput (ARG)
         _setOutputPin (ARG)
         _setServoPosition (ARG)
       _tickGet
     _setTimedResponseDelay
     _tickGet
     _universalEventsInit

 _isrLow (ROOT)
   _lowIsr
     NULL(Fake) *
     _APP_lowIsr *
     _canIsr *
       _canFillRxFifo
         i1_getBufferPointer
         i1_getNextWriteMessage
         i1_updateModuleErrorStatus
       _canTxError
         _checkTxFifo
           i1_getNextWriteMessage
           i1_isEvent
           i1_pop
           i1_tickGet
           i1_updateModuleErrorStatus
         i1_updateModuleErrorStatus
       _checkCANTimeout
         _checkTxFifo
         i1_tickGet
         i1_updateModuleErrorStatus
       _checkTxFifo
     _mnsLowIsr *

 _isrHigh (ROOT)
   _highIsr
     NULL(Fake) *
     _APP_highIsr *
       _timer1DoneInterruptHandler
         i2_getNV
         i2_setOutputPin
           i2_getNV (ARG)
       _timer3DoneInterruptHandler
         i2_getNV
         i2_setOutputPin
     i2_canIsr *
       i2_canFillRxFifo
         i2_getBufferPointer
         i2_getNextWriteMessage
         i2_updateModuleErrorStatus
       i2_canTxError
         i2_checkTxFifo
           i2_getNextWriteMessage
           i2_isEvent
           i2_pop
           i2_tickGet
           i2_updateModuleErrorStatus
         i2_updateModuleErrorStatus
       i2_checkCANTimeout
         i2_checkTxFifo
         i2_tickGet
         i2_updateModuleErrorStatus
       i2_checkTxFifo

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0     3A0      70       25.4%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      68        0.0%
BANK13             100      0       0      22        0.0%
BITBANK12          100      0       0      67        0.0%
BANK12             100      0       0      21        0.0%
BITBANK11          100      0       0      66        0.0%
BANK11             100      0       0      20        0.0%
BITBANK10          100      0       0      65        0.0%
BANK10             100      0       0      19        0.0%
BITBANK9           100      0       0      64        0.0%
BANK9              100      0       0      18        0.0%
BITBANK8           100      0       0      63        0.0%
BANK8              100      0       0      17        0.0%
BITBANK7           100      0       0      62        0.0%
BANK7              100      0       0      16        0.0%
BITBANK6           100      0       0      61        0.0%
BANK6              100      0       0      15        0.0%
BITBANK5           100      0       0      60        0.0%
BANK5              100      0      48      14       28.1%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      C0      13       75.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C8      11       78.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100     32      FE       9       99.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100     41      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4A      73       5       71.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      54       1       89.4%
BITBANK14           41      0       0      69        0.0%
BANK14              41      0       0      23        0.0%
BITBIGSFRllhhh      2A      0       0      40        0.0%
BITBIGSFRlllhl      2A      0       0      57        0.0%
BITBIGSFRlhhhhh     19      0       0      26        0.0%
BITBIGSFRllhlh      16      0       0      48        0.0%
BITBIGSFRlhhhhh     15      0       0      28        0.0%
BITBIGSFRllhllh     10      0       0      49        0.0%
BITBIGSFRllhllh      F      0       0      50        0.0%
BITBIGSFRllhllh      F      0       0      51        0.0%
BITBIGSFRllhllh      F      0       0      52        0.0%
BITBIGSFRllhllh      F      0       0      53        0.0%
BITBIGSFRllhllh      F      0       0      54        0.0%
BITBIGSFRlhhlll      D      0       0      38        0.0%
BITBIGSFRllhhll      A      0       0      45        0.0%
BITBIGSFRllhhll      A      0       0      43        0.0%
BITBIGSFRlhhhhh      8      0       0      31        0.0%
BITBIGSFRlllhhl      7      0       0      56        0.0%
BITBIGSFRhh          7      0       0      24        0.0%
BITBIGSFRlhhllh      6      0       0      36        0.0%
BITBIGSFRlhhlh       6      0       0      35        0.0%
BITBIGSFRlhhhll      6      0       0      34        0.0%
BITBIGSFRlhhlll      5      0       0      37        0.0%
BITBIGSFRlhhhhh      5      0       0      30        0.0%
BITBIGSFRllhhll      4      0       0      47        0.0%
BITBIGSFRlhhhhh      4      0       0      27        0.0%
BITBIGSFRlllhhh      3      0       0      55        0.0%
BITBIGSFRlhhhhh      3      0       0      29        0.0%
BITBIGSFRllhhll      2      0       0      46        0.0%
BITBIGSFRllhhll      2      0       0      44        0.0%
BITBIGSFRllhhlh      2      0       0      41        0.0%
BITBIGSFRllhhlh      2      0       0      42        0.0%
BITBIGSFRlhhlll      2      0       0      39        0.0%
BITBIGSFRhl          2      0       0      25        0.0%
BITBIGSFRllll        2      0       0      58        0.0%
BITBIGSFRlhhhlh      1      0       0      33        0.0%
BITBIGSFRlhhhhl      1      0       0      32        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     494      59        0.0%
DATA                 0      0     834       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Feb 19 10:33:17 2025

                   nerdCallback@nodeNumber 01DA                        findEvent@tableIndex 01CA  
                __end_of_pollTimedResponse ACFE                     ?_handleSelfEnumeration 0097  
                       APP_GetEventState@h 00A8                           sendMessage@data1 01BF  
                         sendMessage@data2 01C0                           sendMessage@data3 01C1  
                         sendMessage@data4 01C2                           sendMessage@data5 01C3  
                         sendMessage@data6 01C4                           sendMessage@data7 01C5  
                      findEvent@nodeNumber 01BE              __end_of_setTimedResponseDelay C8F8  
            __end_of_producerGetDiagnostic C47A                          ackEventCheckLen@m 01CF  
                           _completed$1545 0091                              ?_APP_addEvent 01EA  
                     _getNumRxBuffersInUse BFE2                      _timedResponseCallback 0021  
                      _timedResponseOpcode 00B6                               ___awdiv@sign 009C  
                          _normalReadIndex 00CD                                         _io 00CF  
                                       _nn 00B4                                         bsr 0FE0  
                              ?_APP_lowIsr 002B                        ___wmul@multiplicand 0093  
                             configIO@type 01C5                         i2_getBufferPointer A5A2  
           _sendInvertedProducedEvent$1404 01D5                           ?_flushFlashBlock 002B  
                   _eventConsumer2QService EF0E                               ?_APP_highIsr 002B  
                  __end_of_eraseFlashBlock BC1A                __end_of_universalEventsInit C884  
                ?_consumer2QProcessMessage 01FD                                _startServos 9810  
                           ??_getTwoAction 008F                  __end_of_deleteActionRange 9A30  
                                      l260 57FA                                        l501 3D88  
                                      l502 3D94                                        l280 6D08  
                                      l353 5250                                        l282 6DA4  
                                      l470 3CA4                                        l454 3AB2  
                                      l551 A8DE                                        l463 3AC4  
                                      l561 ABEC                                        l449 3AAA  
                                      l466 3CB0                                        l458 3ABC  
                                      l547 A89C                                        l491 3DE2  
                              _startOutput B77E                                        l556 ABAA  
                                      l820 B038                                        l646 77C0  
                                      l814 2E28                                        l654 B24C  
                                      l917 A57A                            checkPowerOnPb@i 01F7  
                       _enumerationResults 0234                      deleteHappeningRange@h 01E2  
          ?_APP_isSuitableTimeToWriteFlash 002B           ??_APP_isSuitableTimeToWriteFlash 008D  
                      _expeditedWriteIndex 00CA                            _initServos$8094 00A7  
                          _initServos$8095 00A6                                        _evs 0220  
                                      _pop 9E3C                              _APP_nvDefault 8E8C  
                             ___awmod@sign 0092                                        prod 0FF3  
                  i2getNextWriteMessage@wr 0036                                        tosl 0FFD  
                                      wreg 0FE8               tableIndexToEvtIdx@tableIndex 008D  
                      ?i2_getBufferPointer 002B       sendInvertedProducedEvent@can_send_on 01D2  
                  APP_nvValueChanged@index 01F6               APP_GetEventState@disable_off 00A7  
                  APP_nvValueChanged@value 01F1        __end_of_mnsTRallDiagnosticsCallback 84AE  
              _mnsTRallDiagnosticsCallback 83AA                                       l1104 1444  
                                     l2013 9AA4                                       l2006 9B54  
                                     l2200 B384                                       l1323 6894  
                                     l2214 BC06                                       l2038 44E2  
                                     l2232 BD5C                                       l1193 C8AE  
                                     l1450 80A8                                       l2069 C566  
                                     l1285 C632                                       l1525 2240  
                                     l1269 94E0                                       l1454 80F4  
                                     l3151 AA74                                       l1287 C636  
                                     l1455 80F8                                       l1456 8124  
                                     l1801 633A                                       l1529 22A0  
                                     l3081 5FF6                                       l2194 B36E  
                                     l1570 3574                                       l2506 B284  
                                     l2187 C792                                       l1803 634A  
                                     l2531 4E80                                       l1572 3596  
                                     l1564 344C                                       l1492 1B70  
                                     l1805 635A                                       l1493 1B94  
                                     l1822 898A                                       l1566 347E  
                                     l1807 6364                                       l2535 6A52  
                                     l1559 33E4                                       l2472 7246  
                                     l1809 636E                                       l2465 7188  
                                     l2539 6A76                                       l1772 61AC  
                                     l1781 6234                                       l2469 71D6  
                                     l1774 61B4                                       l1783 6244  
                                     l1792 62B8                                       l2760 2402  
                                     l1785 6256                                       l1794 62C0  
                                     l1787 625C                             _bootloaderType 00C8  
                                     l1789 6262                                       l2856 C0E8  
                                     l2958 7AA4              __end_ofi2_getNextWriteMessage 91D0  
                                     _BIE0 0E7E                         doEvuln@eventNumber 01D4  
                                     ?_pop 008D                           setOutputState@io 0095  
                                     _EEIF 7DBE                     __end_of_checkPowerOnPb B77E  
                                     _LATA 0F89                                       _LATB 0F8A  
                                     _LATC 0F8B                                       _IPR5 0F78  
                        doEvuln@nodeNumber 01D2                      __end_of_sodTRCallback 86B0  
                           configIO@action 01C4                                       _WPUB 0F5B  
                        setOutputPin@state 0091                             i2_setOutputPin 72F2  
                              _outputState 02B4                              _pushTwoAction B6C2  
                    i1_getNextWriteMessage 8F5E                                       _have B0AE  
                                     _main BC66                                       _name 0848  
                                     _loop 6DB0                                       _poll 4182  
               __end_of_mnsTRrqnpnCallback C3FE                                       fsr1h 0FE2  
                                     fsr2h 0FDA                                       indf1 0FE7  
                                     indf2 0FDF                                       fsr1l 0FE1  
                                     fsr2l 0FD9                                       _push 3DF6  
                      setMultiState@action 0091                                       btemp 0055  
                         ?_producerEsdData 002B                          ?_removeTableEntry 002B  
              sodTRCallback@happeningIndex 01DF                                       pop@q 008D  
                                     prodh 0FF4                                       prodl 0FF3  
                          __end_ofi2_getNV C0CE                                       start 081C  
                             ?_loadNvCache 002B                         bounceDown@reversed 00A6  
                             bootPowerUp@a 009A                               bootPowerUp@b 0097  
                             bootPowerUp@i 0099            APP_GetEventState@happeningIndex 00A9  
                            setupTimer1@io 009C                        _setExpeditedActions C914  
                            setupTimer3@io 009C                 __end_of_startDigitalOutput 59B4  
                           _setBounceState 9C3C                consumer2QProcessMessage@end 02CF  
              consumer2QProcessMessage@enn 02D2                       ??i2_getBufferPointer 002D  
              consumer2QProcessMessage@opc 02D1                         ??_removeTableEntry 01C7  
                            ?_APP_testMode 002B                            getEN@tableIndex 00A1  
                             ___param_bank 0000                             ??_APP_addEvent 00AA  
                    ?_getNumRxBuffersInUse 002B                      __end_of_defaultEvents 78DE  
                         ?_producerPowerUp 002B                          findServiceIndex@i 0090  
                              completed@io 0092                       __end_of_EEPROM_Write B3AA  
                              _uptimeTimer 014C                                      ??_pop 008F  
                                    l20011 512E                                      l20021 98DE  
                                    l20007 50F0                                      l20111 A424  
                                    l20103 A410                                      _B0CON 0E80  
                                    l20201 B170                                      l20043 9958  
                                    l20035 993C                                      l20115 A42E  
                                    l20107 A41A                                      l20141 A90C  
                                    l20205 B17A                                      l20045 995E  
                                    l20125 A442                                      l21005 2D68  
                                    l20063 BAEE                                      l20303 8EAA  
                                    l20039 994C                                      l20119 A438  
                                    l21015 2DFA                                      _B1CON 0E90  
                                    l20153 A932                                      l20209 B188  
                                    l22001 0984                                      l20075 7796  
                                    l20083 78BE                                      l20155 A93A  
                                    l20147 A91C                                      l20307 8EAE  
                                    l20411 90A8                                      l20403 9036  
                                    l20331 9B96                                      l21115 2EF0  
                                    l20091 A3F2                                      l21211 8898  
                                    l21203 8890                                      l21035 B016  
                                    l20077 77EA                                      l20229 B532  
                                    l20173 A972                                      l20165 A95A  
                                    l20317 8EB2                                      l21301 8976  
                                    l20405 9052                                      l20341 9C0E  
                                    l20237 BCC2                                      l21125 3090  
                                    l22021 0A90                                      l21029 B012  
                                    l20079 7812                                      l20319 8EEC  
                                    l21303 8980                                      l20407 906E  
                                    l20335 9BC4                                      l20351 969E  
                                    l21135 3242                                      l21143 3298  
                                    l21071 5B30                                      l21047 59F0  
                                    l22015 0A40                                      l22007 09DE  
                                    l20095 A3FC                                      l20087 A3E8  
                                    l21231 88AA                                      l21223 88A0  
                                    l21207 8894                                      _B2CON 0EA0  
                                    l20169 A964                                      l20193 B150  
                                    l20185 B136                                      l21321 89CA  
                                    l21313 89B2                                      l20265 C390  
                                    l20417 90E2                                      l20337 9BE0  
                                    l20345 9C2A                                      l20425 A260  
                                    l20361 96FC                                      l21129 30E4  
                                    l21073 5B48                                      l22113 0F74  
                                    l22041 0B6C                                      l22033 0B08  
                                    l22017 0A5C                                      l22009 0A00  
                                    l20441 B848                                      l21241 88BE  
                                    l23001 C65A                                      l20195 B158  
                                    l20291 8E9E                                      l20283 8E9A  
                                    l21307 8994                                      l20355 96BE  
                                    l21139 3294                                      l21067 5B08  
                                    l21059 5A98                                      l22211 164E  
                                    l22203 15B8                                      l22027 0AD4  
                                    l21163 AB82                                      l20099 A406  
                                    l21235 88AE                                      l21227 88A4  
                                    l21219 889C                                      l23011 C662  
                                    l20189 B142                                      l21325 89D6  
                                    l21317 89BE                                      l21309 89A6  
                                    l20373 9C42                                      l20357 96CE  
                                    l20349 9690                                      l21085 5BBE  
                                    l22141 118A                                      l22133 10CA  
                                    l22053 0BFC                                      l20453 B872  
                                    l20445 B858                                      l21261 88C6  
                                    l21173 C4E0                                      l23005 C65E  
                                    l21501 8CFC                                      l20701 4620  
                                    l20295 8EA2                                      l21343 C024  
                                    l20383 9CBA                                      l20391 B416  
                                    l22223 1738                                      l22207 1618  
                                    l22127 1034                                      l22071 0D20  
                                    l22231 1790                                      l22047 0BAC  
                                    l22039 0B4A                                      l22215 1686  
                                    l21159 AB7E                                      l22311 C63A  
                                    l21503 8D3A                                      _B3CON 0EB0  
                                    l20609 C6A2                                      l21329 89E8  
                                    l20377 9C70                                      l20393 B42C  
                                    l21097 5C1C                                      l22233 17BC  
                                    l22217 16B4                                      l22145 11EA  
                                    l22137 112A                                      l22129 106C  
                                    l22049 0BC8                                      l20473 BFF6  
                                    l20457 B87C                                      l21273 88EA  
                                    l21265 88D8                                      l21249 88C2  
                                    l21441 B28E                                      l20721 4720  
                                    l23025 B40C                                      l23121 7E60  
                                    l20299 8EA6                                      l20491 B9EE  
                                    l20627 B896                                      l20379 9C8C  
                                    l20387 9CD6                                      l20811 5978  
                                    l20803 5916                                      l21099 5C4C  
                                    l22227 175C                                      l22163 12F8  
                                    l22155 128C                                      l22147 11FC  
                                    l22083 0DBC                                      l22059 0C3E  
                                    l22075 0D58                                      l23203 9832  
                                    l21195 8888                                      l21283 88EE  
                                    l21355 C490                                      l21443 B2A0  
                                    l21515 8DAC                                      l20731 47AA  
                                    l20715 46E0                                      l20707 46A6  
                                    l23019 B3B6                                      l21531 C420  
                                    l23115 7E2E                                      l20397 B446  
                                    l22157 12AE                                      l22077 0D96  
                                    l22069 0CF8                                      l21293 C4B8  
                                    l21541 C468                                      l22317 C63E  
                                    l23061 C6EA                                      l23053 C6E6  
                                    l20725 4756                                      l20717 46EA  
                                    l20709 46BC                                      l23045 9664  
                                    l23037 9600                                      l23133 7F0A  
                                    l21551 B908                                      l20647 B8C6  
                                    l22503 620C                                      l20831 A88E  
                                    l20399 B456                                      l23311 63D6  
                                    l22183 1428                                      l22175 13BC  
                                    l22167 132E                                      l23215 987A  
                                    l22351 C17E                                      l21199 888C  
                                    l21447 B2B2                                      l20671 4548  
                                    l20743 481A                                      l23047 9686  
                                    l24031 1CA4                                      l24015 1BC2  
                                    l24007 1B96                                      l23119 7E52  
                                    _B4CON 0EC0                                      l23233 516C  
                                    l20913 BF02                                      l23401 65F4  
                                    l22177 13DE                                      l22097 0E8E  
                                    l22337 A3D0                                      l22329 A354  
                                    l24201 3324                                      l21481 C530  
                                    l21449 B2C6                                      l20665 4526  
                                    l22417 C3DE                                      l24121 223A  
                                    l24041 1CDA                                      l23129 7ED8  
                                    l22363 87A2                                      l21547 B8F4  
                                    l22531 6268                                      l21299 896C  
                                    l23251 5200                                      l20843 A8B4  
                                    l21811 B9B0                                      l21803 B998  
                                    l20763 57BC                                      l23331 6412  
                                    l22195 14F8                                      l23227 98C4  
                                    l22347 C16E                                      l22355 C186  
                                    l20819 C508                                      l22451 C7DA  
                                    l23067 C6EE                                      l22435 AD22  
                                    l20739 47FE                                      l20691 45C2  
                                    l20683 4582                                      l20675 4562  
                                    l25011 277C                                      l24027 1C1A  
                                    l24019 1BEC                                      l23163 9D98  
                                    l22533 62BA                                      l23237 5174  
                                    l20917 BF16                                      l21821 AA8C  
                                    l23325 63FA                                      l22277 A1B6  
                                    l22605 9EDC                                      l21709 B6F6  
                                    l22349 C176                                      l20933 29F4  
                                    l22429 AD0E                                      l20693 45CC  
                                    l20685 4592                                      l24141 2274  
                                    l24109 21C6                                      l24061 1E10  
                                    l24053 1DE4                                      l25101 5EE8  
                                    l23181 9E2A                                      l22543 62EE  
                                    l23271 5310                                      l23263 529A  
                                    l21807 B9A4                                      l23343 6442  
                                    l23319 63E2                                      l22199 1558  
                                    l22295 A118                                      l24215 3378  
                                    l24207 334C                                      l21743 C70E  
                                    l22447 C7D6                                      l22703 C7C4  
                                    l20951 2A94                                      l22383 A6D0  
                                    l25031 27DE                                      l24047 1D92  
                                    l23175 9DDA                                      l23167 9DA0  
                                    _B5CON 0ED0                                      l22537 62C4  
                                    l21681 8230                                      l21673 81B8  
                                    l23281 536A                                      l23273 5320  
                                    l21825 AA90                                      l21841 AAE2  
                                    l21817 B9BC                                      l20793 58C4  
                                    l20777 582C                                      l23337 642A  
                                    l23441 6D66                                      l23425 6CBC  
                                    l23409 6BDE                                      l24217 337C  
                                    l21737 C70A                                      l21729 C706  
                                    l22457 C7DE                                      l20945 2A54  
                                    l20937 2A04                                      l20697 45F6  
                                    l21913 85D8                                      l22393 840A  
                                    l22465 BEB6                                      l23513 3BB6  
                                    l24129 2248                                      l24081 1F68  
                                    l24161 22A6                                      l24401 49B4  
                                    l25113 5F8A                                      l25105 5F0A  
                                    l22491 61B8                                      l23283 537C  
                                    l20891 B046                                      l20787 58A4  
                                    l23419 6C66                                      l23195 9822  
                                    l22715 7922                                      l22707 78E0  
                                    l21931 8618                                      l25051 2850  
                                    l23611 3D9E                                      l23603 3D7C  
                                    l24067 1E54                                      l25203 9D40  
                                    l22549 6314                                      l21677 81F4  
                                    l23293 53EC                                      l21829 AAAA  
                                    l20797 58EE                                      l21861 B7A8  
                                    l21853 B790                                      l23357 64E6  
                                    l23429 6CE4                                      l22805 835C  
                                    l22733 79A8                                      l24229 33FE  
                                    l24309 36BA                                      l20981 2C6E  
                                    l20973 2BDC                                      l20965 2B5E  
                                    l20957 2AD2                                      l21941 8648  
                                    l22397 840E                                      l23613 3DA4  
                                    l23621 3DB2                                      l23541 3C5E  
                                    l23533 3C4A                                      l24077 1E82  
                                    l24413 4A04                                      l25141 60F2  
                                    l25109 5F0E                                      l22487 61AE  
                                    l21687 826C                                      l23287 53A0  
                                    l23295 5414                                      l21871 A514  
                                    l21767 ABC2                                      l23391 65C4  
                                    l23359 64EE                                      l23439 6D5A  
                                    l25231 6EBA                                      l22815 8388  
                                    l22743 79E2                                      l22735 79AA  
                                    l24263 3528                                      l21951 8660  
                                    l22831 B648                                      l23527 3BEE  
                                    l23703 A2FE                                      l24095 218A  
                                    l24087 215C                                      l25151 6150  
                                    l25135 6068                                      l23463 BD9C  
                                    l22497 61E4                                      l22577 6374  
                                    l21689 82A0                                      l23289 53B2  
                                    l23297 5426                                      l21793 A802  
                                    l21857 B79C                                      l21849 B784  
                                    l23385 659A                                      l23393 65C8  
                                    l25225 6E5E                                      l22729 7964  
                                    l24265 352C                                      l24273 3590  
                                    l20993 2CEC                                      l20969 2B9E  
                                    l21953 8688                                      l21937 8630  
                                    l25073 2924                                      l23545 3C6A  
                                    l23529 3C34                                      l23801 6976  
                                    l24441 4AC8                                      l24361 48CC  
                                    l24345 485C                                      l25137 60B2  
                                    l25313 4272                                      l24329 C140  
                                    l23299 5436                                      l21875 A518  
                                    l20899 B0A2                                      l21867 B7B4  
                                    l22747 79E8                                      l24195 3308  
                                    l20987 2CAE                                      l21947 8654  
                                    l24531 ACDA                                      l24515 AC96  
                                    l22907 7E08                                      l22827 B644  
                                    l22835 B64C                                      l23491 3ACA  
                                    l23715 A31C                                      l24419 4A30  
                                    l24363 48D2                                      l25307 4214  
                                    l23459 BD94                                      l25091 C2F4  
                                    l15803 C3AC                                      l21963 AF5E  
                                    l15645 AA26                                      l21893 A57E  
                                    l22597 9E68                                      l22765 7A0E  
                                    l22757 7A06                                      l24269 3570  
                                    l22693 C7BC                                      l24525 ACCE  
                                    l24517 ACBC                                      l22925 B2E4  
                                    l22941 C0D8                                      l23549 3C74  
                                    l23493 3B4C                                      l23477 3A78  
                                    l24453 4B24                                      l24429 4A5C  
                                    l24357 488E                                      l25149 6124  
                                    l23469 BDB4                                      l15647 AA32  
                                    l24551 9A4A                                      l21879 A532  
                                    l21991 0916                                      l21983 085A  
                                    l25239 6F1A                                      l20999 2D2A  
                                    l24527 ACD4                                      l22855 9594  
                                    l22847 953A                                      l22871 ADC8  
                                    l23559 3CB8                                      l24391 4988  
                                    l24367 48D6                                      l25351 43EE  
                                    l25319 4278                                      l23671 9490  
                                    l23663 9450                                      l21967 AF6A  
                                    l21975 AF9E                                      l19105 7B24  
                                    l15657 AA66                                      l21993 093E  
                                    l22777 BE76                                      l22785 BE96  
                                    l22769 7A16                                      l24289 364A  
                                    l22697 C7C0                                      l22881 7D32  
                                    l23593 3D16                                      l23569 3CDA  
                                    l23745 682E                                      l23913 1984  
                                    l23657 944C                                      l23729 C322  
                                    l23841 8128                                      l25193 9D2C  
                                    l19043 BB7E                                      l24539 9AFA  
                                    l21995 0950                                      l21987 08B6  
                                    l23595 3D5C                                      l23691 A2CE  
                                    l23907 1948                                      l24379 4932  
                                    l24467 4B50                                      l24643 A04A  
                                    l23851 814A                                      l25259 8B42  
                                    l19029 A9FC                                      l25285 B746  
                                    l22797 82D2                                      l24709 6A10  
                                    l22957 B1C4                                      l22981 8AC8  
                                    l24813 2314                                      l23909 1980  
                                    l23829 80D0                                      l25197 9D34  
                                    l25445 BCA6                                      l19119 B34C  
                                    l19215 BB88                                      l24751 6AF0  
                                    l22887 7D6A                                      l22983 8ADA  
                                    l24807 22F4                                      l23791 6920  
                                    l23759 6878                                      l23767 6890  
                                    l23943 1A18                                      l23927 19D2  
                                    l23919 19A6                                      l23863 17D2  
                                    l24655 A07C                                      l25359 44C0  
                                    l19153 B3A6                                      l19225 BBAC  
                                    l19313 84C4                                      l19081 7A56  
                                    l24729 6A72                                      l22993 8B14  
                                    l22969 8A76                                      l24825 2350  
                                    l23697 A2E8                                      l23961 1A62  
                                    l23881 1872                                      l23953 1A26  
                                    l24673 A0AC                                      l24489 BE2C  
                                    l24585 7194                                      l19219 BB9A  
                                    l19251 7F7A                                      l22899 7DB6  
                                    l24819 234A                                      l23787 68B8  
                                    l23955 1A52                                      l23883 1876  
                                    l23867 17FE                                      l24659 A080  
                                    l24579 718C                                      l19181 929A  
                                    l19173 9216                                      l19341 8560  
                                    l19325 84CE                                      l19093 7AB2  
                                    l24773 6BC4                                      l22997 C656  
                                    l22989 8AFC                                      l24909 25AE  
                                    l24853 23C8                                      l23789 690A  
                                    l23981 1AC2                                      l23973 1A96  
                                    l23893 18A0                                      l19167 9200  
                                    l19191 979C                                      l19351 8576  
                                    l19319 84CA                                      l19087 7A68  
                                    l19239 7F5E                                      l19407 BDFC  
                                    l19431 B114                                      l19423 B0B8  
                                    l24767 6BB8                                      l24951 2686  
                                    l24855 23CC                                      l23799 693C  
                                    l23887 187A                                      l19169 9204  
                                    l19273 7FB2                                      l19257 7F7E  
                                    l24929 25FC                                      l19347 8572  
                                    l19515 3772                                      l24971 26D8  
                                    l24859 23D0                                      l23899 1926  
                                    l24795 C110                                      l19373 7C1C  
                                    l19533 38BA                                      l19509 3768  
                                    l24949 2680                                      l24893 2516  
                                    l24877 248E                                      l23989 1B08  
                                    l19703 70C0                                      l19295 8024  
                                    l19287 7FFA                                      l19383 7C96  
                                    l19391 7CDE                                      l19519 3778  
                                    l19463 417E                                      l19455 3E5E  
                                    l24991 272A                                      l19385 7CD0  
                                    l19473 8E22                                      l19633 4D44  
                                    l19707 70FE                                      l19299 8068  
                                    l19547 396C                                      l18933 B680  
                                    l19725 A67A                                      l19717 A650  
                                    l19549 396E                                      l19557 3980  
                                    l19805 8CCE                                      l19653 4E3A  
                                    l18919 BC52                                      l18943 B6A2  
                                    l19735 A6BA                                      l19495 36E6  
                                    l19479 8E64                                      l19663 4E64  
                                    l18937 B698                                      l18929 B668  
                                    l19681 BFCA                                      l19569 3A56  
                                    l19921 67F4                                      l19905 67CA  
                                    l19675 BFBA                                      l19691 6FC0  
                                    l19851 A792                                      l19843 A758  
                                    l19915 67DC                                      l19771 9A08  
                                    l19763 99AC                                      l19595 4BD2  
                                    l19693 6FFE                                      l19853 A79E  
                                    l19845 A75C                                      l19749 9988  
                                    l19589 4BB6                                      l19687 6F7E  
                                    l18983 A990                                      l19943 BD3A  
                                    l19935 BD00                                      l19697 7040  
                                    l19953 4E92                                      l19873 6622  
                                    l19793 8C10                                      l19699 707E  
                                    l19859 A7C8                                      l19971 4F46  
                                    l19963 4F08                                      l19955 4EA8  
                                    l19779 9A1C                                      l18999 A9B4  
                                    l19959 4EEA                                      l19879 662A  
                                    l19977 4F68                                      l19897 6784  
                                    l19987 4FD0                                      l19979 4F7E  
                                    l19997 5060                                      l19989 500E  
                                    ?_have 002B                                      l19999 509E  
                                    ?_main 002B                  ??_consumer2QGetDiagnostic 0099  
                             ?_initOutputs 002B                        processEnumeration@i 01C6  
                          __end_of___awdiv A97C                                      _EEADR 0F74  
                                    ?_loop 002B                          setOutputState@act 0093  
                          __end_of___awmod B192                                      ?_poll 002B  
                                    ?_push 008D                                      _BSEL0 0E7D  
                          __end_of___lldiv AA86                                      _T0CON 0FD5  
                                    u20130 A766                                      u20140 A768  
                          ___awdiv@divisor 0099                                      u20230 67D2  
                                    u20215 6740                                      u20160 A786  
                                    u20216 6744                                      u20128 AC70  
                                    u20170 A788                                      u20330 4F94  
                                    u21210 45F2                                      u21130 4522  
                                    u20404 5090                                      u21140 455E  
                                    u20405 508C                                      u20430 50B4  
                                    u20190 661E                                      u21310 4752  
                                    u21230 461C                                      u20344 4FC4  
                                    u21400 575A                                      u22200 2F22  
                                    u23000 092C                                      u20345 4FC0  
                                    u20354 5000                                      u21410 575C  
                                    u22130 5BAA                                      u23010 092E  
                                    u21330 4774                                      u21250 46A2  
                                    u21170 457E                                      u20355 4FFC  
                                    u20444 50E4                                      u20380 5024  
                                    u20620 B15C                                      u20700 BCCE  
                                    u21420 57D4                                      u22060 59EA  
                                    u21340 47A6                                      u20445 50E0  
                                    u20454 5120                                      u20470 98DA  
                                    u21430 57D6                                      u22070 59EC  
                                    u23110 0AC0                                      u21190 45BE  
                                    u20455 511C                                      u20560 A93E  
                                    u20720 BCE2                                      u21600 5984  
                                    u23120 0AC2                                      u21360 47C8  
                                    u24000 BEB2                                      u20394 5054  
                                    u21610 5986                                      u21450 57F6  
                                    u22170 2ECE                                      u21370 47FA  
                                    u21290 471C                                      u20395 5050  
                                    u24020 6192                                      u20740 BCEE  
                                    u21540 5912                                      u21460 57F8  
                                    u22180 2EF0                                      u23220 0C2C  
                                    u20670 B522                                      u21550 5914  
                                    u22190 2F20                                      u23310 0E44  
                                    u23230 0C2E                                      u21640 A88A  
                                    u23320 0E46                                      u21810 BF12  
                                    u20850 908C                                      u20690 BCCC  
                                    u23410 10B8                                      u22290 88BA  
                                    u24140 6340                                      u22604 8224  
                                    u25100 5298                                      u20860 90C6  
                                    u21580 5948                                      u23500 11D8  
                                    u23420 10BA                                      u23260 0CE4  
                                    u22460 8CF8                                      u22605 8220  
                                    u15510 AA36                                      u24150 6350  
                                    u22614 8260                                      u21590 594A  
                                    u23510 11DA                                      u23350 0F2A  
                                    u23270 0CE6                                      u22615 825C  
                                    u25200 53DA                                      u23440 1118  
                                    u23360 0F2C                                      u23280 0D0E  
                                    u24320 791E                                      u25210 53DC  
                                    u25130 52DA                                      u22810 AADE  
                                    u23450 111A                                      u23290 0D10  
                                    u25220 5402                                      u25140 52DC  
                                    u23700 15A6                                      u23380 0FEC  
                                    u24340 79A2                                      u21941 2BFA  
                   APP_GetEventState@flags 00A6                                      u25230 5404  
                                    u22830 A52E                                      u23710 15A8  
                                    u23470 1178                                      u23390 0FEE  
                                    u22670 C694                                      u25240 63D0  
                                    u23640 14E6                                      u23560 1314  
                                    u23480 117A                                      u24360 79C2  
                                    u27000 6A70                                      u22594 81E8  
                                    u25090 5296                                      u23730 1606  
                                    u23650 14E8                                      u23810 A208  
                                    u24450 8326                                      u22930 8650  
                                    u22595 81E4                                      u24435 82E6  
                                    u21891 2AF0                                      u22780 AAA6  
                                    u25500 6D92                                      u25420 6C8E  
                                    u23740 1608                                      u23820 A20A  
                                    u22870 A576                                      u25510 6D94  
                                    u25430 6C90                                      u23670 1546  
                                    u22950 AF92                                      u19120 7A4A  
                                    u23760 1728                                      u23680 1548  
                                    u23840 A16A                                      u24464 833A  
                                    u26320 21BC                                      u26208 1D40  
                                    u22960 AF94                                      u24465 8336  
                                    u26209 1D62                                      u25370 65CE  
                                    u23770 174E                                      u23850 A16C  
                                    u24490 83A6                                      u19220 91EC  
                                    u19140 7AA8                                      u23780 1750  
                                    u22980 0902                                      u24900 981E  
                                    u27060 2310                                      u25540 3A74  
                                    u23918 8848                                      u22990 0904  
                                    u26510 34C0                                      u23919 885A  
                                    u26600 3692                                      u26440 3362  
                                    u27080 2344                                      u25800 94FC  
                                    u19250 9242                                      u19410 8558  
                                    u26450 33BC                                      u25810 A2CA  
                                    u19180 B372                                      u24940 9860  
                                    u26540 356C                                      u26380 32E6  
                                    u26268 203E                                      u24860 9DD6  
                                    u26269 2052                                      u26470 33E8  
                                    u23958 8452                                      u26278 20BC  
                                    u26710 49F0                                      u24870 9DD8  
                                    u23959 8466                                      u26279 20D0  
                                    u26480 343E                                      u25760 3DEC  
                                    u26288 213A                                      u26640 4858  
                                    u26289 214E                                      u19370 8070  
                                    u26570 35DE                                      u26730 4A98  
                                    u19268 9246                                      u24980 98A8  
                                    u27620 6F02                                      u25860 682A  
                                    u26900 A046                                      u25780 949C  
                                    u19390 84C0                                      u27630 6F5A  
                                    u19640 376E                                      u25960 809E  
                                    u18930 C8AA                            reqevCallback@ev 01E2  
                     __end_of_factoryReset 8882                                      u26780 AC92  
                                    u26765 BE50                                      u18950 C892  
                                    u27590 6E9C                                      u26766 BE52  
                                    u26870 71BE                                      u19904 7034  
                                    u19680 3974                                      u27920 44CA  
                                    u27808 431E                                      u19905 7030  
                                    u27809 4330                                      u19914 7070  
                                    u27770 425A                                      u19915 706C  
                                    u27908 44A0                                      u27668 8BE8  
                                    u27909 44B2                                      u27669 8BFA  
                                    u19934 70B4                                      u19950 A676  
                                    u26798 AC9A                                      u19935 70B0  
                                    u26799 ACB6                          _initTimedResponse C908  
                                    u19944 70F0                                      u27848 43AC  
                                    u19945 70EC                                      u19785 4C32  
                                    u27849 43BE                                      u19874 6FB4  
                                    u19875 6FB0                                      u19884 6FF0  
                                    u19885 6FEC                             ?_APP_nvDefault 002B  
                          ___awdiv@counter 009B                                      _MSEL0 0E79  
                 __end_of_nvTRnvrdCallback BEEA                               i2_canTxError B5A0  
         __end_of_factoryResetGlobalEvents C930                             _APP_nvValidate AFCA  
                                    _TMR0H 0FD7                                      _TMR1H 0FCF  
                                    _TMR0L 0FD6                                      _TMR1L 0FCE  
                                    _TMR3H 0FB3                                      _TMR3L 0FB2  
                                    _PORTA 0F80                                      _PORTB 0F81  
                                    _PORTC 0F82                           i2setOutputPin@io 0032  
                                    _TRISA 0F92                                      _TRISB 0F93  
                                    _TRISC 0F94                            __end_of_doEvlrn 95C4  
                          __end_of_doNenrd B202                       ?_setExpeditedActions 002B  
             nvProcessMessage@valueOrError 02CE                            __end_of_doEvuln ADF4  
                           _ackDiagnostics 01B6                            __end_of_doNnclr C1FE  
                          __end_of_doNnevn B342         sendInvertedProducedEvent@happening 01D4  
                          __end_of_doReqev 7E28                            __end_of_doReval 8B2A  
                                    i1_pop 9EE6                                      i2_pop 9F90  
                          __end_of_doRqevn C106                            __end_of_getHash C740  
                      ___lmul@multiplicand 0095                         _canTransmitTimeout 0015  
                       ?_initTimedResponse 002B                         __p_paramBlock_text 0820  
                          __end_of_highIsr 9436                              ?_leds_powerUp 002B  
                          __end_of_isEvent C56A                            __end_of_configs EE69  
                                    _canId 00B9                                      _doSOD C7EA  
              ??_sendInvertedProducedEvent 00AA                                      _getEN ADF4  
                                    _getNN 974E                                      _getNV BFA4  
                                    _getEv 7A38                           needsStarting@act 008D  
                     _enumerationStartTime 0011                            __end_of_readNVM B6C2  
                          __end_of_isrHigh 879C                                      _setNV ACFE  
                   __end_ofi2_setOutputPin 74A0                                      _numEv 8CE2  
                                    have@i 0090                                      _speed 0200  
                                    _setup 9CE8                        canReceiveMessage@mp 01CB  
                      canReceiveMessage@no 01CD               __end_of_getNumTxBuffersInUse C8A6  
                          __end_of_mnsPoll 36D2                              setNV@oldValue 01FB  
                   APP_preProcessMessage@m 008D                            __end_of_tickGet B8E2  
                          ?_checkPowerOnPb 002B                            __end_of_setType B53E  
                                    pclath 0FFA                                      pclatu 0FFB  
                                    tablat 0FF5                             ?_pushTwoAction 002B  
                      ??_initTimedResponse 008D                            ??_doneTwoAction 008D  
          mnsTRallDiagnosticsCallback@step 01D9            mnsTRallDiagnosticsCallback@type 002B  
                                    poll@i 02F4                                      poll@m 02F5  
                         __end_ofi2_canIsr C834                            __end_of_powerUp 8C06  
                                    plusw2 0FDB                                      push@m 008F  
                                    push@q 008D                    reqevCallback@tableIndex 01E6  
                                    ttemp5 0056                                      ttemp6 0059  
                                    ttemp7 005D                           _setServoPosition C608  
                                    status 0FD8                                      wtemp8 0056  
                            ?_nvGetESDdata 002B                     __end_of_setBounceState 9CE8  
                  reqevCallback@nodeNumber 01E4                            __end_of_writeEv 3A66  
                 ?_updateModuleErrorStatus 002B                 __end_of_startTimedResponse BF28  
                             bounceDown@io 00A9                           ?_nvGetDiagnostic 0097  
                        ?_startMultiOutput 0091                           bounceUp@reversed 00A5  
                           ??_APP_testMode 008D                          ?_startServoOutput 0091  
             processEnumeration@enumResult 01C4                            __initialization AEE6  
                       ??_startMultiOutput 0092                         ??_startServoOutput 0092  
                             __end_of_have B120                               __end_of_main BCB0  
                             __end_of_name 0850                               __end_of_loop 6F78  
                             __end_of_poll 44F8                               __end_of_push 4182  
                            ?_nerdCallback 01D8                           i2canFillRxFifo@m 0037  
                         _setupTimer1$1932 0098                           _setupTimer3$1936 0098  
                     __end_of_getParameter 8966                  __end_of_initTimedResponse C90E  
                   __end_of_APP_nvValidate B03C                                     ??_have 008D  
                             ?_setNewCanId 002B                                     ??_main 00AA  
                         ?_eraseFlashBlock 002B                                     ??_loop 01EC  
                             ?_sendMessage 01BE                                     ??_poll 02EF  
                                   ??_push 0091                      __end_of_reqevCallback 968A  
                 __end_of_ackEventCheckLen C81C                              __activetblptr 0003  
                              readNVM@type 0096                      ??_setExpeditedActions 008D  
                  ?_ackEventProcessMessage 01FD                          _pollsPerStepSpeed 0274  
                                   ?i1_pop 0060                                     ?i2_pop 002B  
                           ??_leds_powerUp 0097                           _normalWriteIndex 00CC  
                  APP_postProcessMessage@m 008D                   ??_APP_postProcessMessage 008F  
                    __end_of_setMultiState 9100                                     ?_doSOD 002B  
                    __end_of_setServoState 9C3C                          ?_getBufferPointer 008D  
                                   ?_getEN 0097                                     ?_getNN 0097  
                                   ?_getNV 008D                                     ?_getEv 009D  
                       _lastServoStartTime 015C                                     _CANCON 0F6F  
                                   _EEADRH 0F75                           __end_of_addEvent 67FE  
                                   ?_setNV 01F8                                     _EEDATA 0F73  
                                   _EECON1 0F7F                                     _EECON2 0F7E  
                             _canTransport EF7A                                     ?_numEv 002B  
                                   _ANCON0 0F5D                                     _ANCON1 0F5C  
                         ___awdiv@dividend 0097                            ?i2_setOutputPin 002F  
                                   _CIOCON 0F70                                     ?_setup 002B  
                      APP_nvValidate@index 00A0        consumer2QProcessMessage@firstAction 02D6  
                       ??_getBufferPointer 008F                        APP_nvValidate@value 009F  
                       setOutputState@type 0094                                  ??i2_getNV 002D  
                   ?i1_getNextWriteMessage 0060                           reqevCallback@nEv 01DF  
                                   i1l2118 86F2                                     i1l2069 C5B6  
                                   i1l2561 56F8                                     i2l2113 8768  
                                   i2l2069 C6DC                      getNumRxBuffersInUse@i 0096  
                                   i2l2561 5EE0                                     _TABLAT 0FF5  
                       rebuildHashtable@ev 01C1                     _producerProcessMessage 5EE6  
                  ackEventProcessMessage@m 01FD                                     _TBLPTR 0FF6  
                           ??_nvGetESDdata 008D                              _needsStarting AA86  
          __end_of_consumer2QGetDiagnostic C51A                                     _TXB0D0 0F26  
                                   _TXB0D1 0F27                                     _TXB0D2 0F28  
                                   _TXB0D3 0F29                                     _TXB0D4 0F2A  
                                   _TXB0D5 0F2B                                     _TXB0D6 0F2C  
                                   _TXB0D7 0F2D                           __end_of_checkLen AB86  
                             ?_removeEvent 01CD                            ?_setBounceState 0091  
                      setServoPosition@pos 009F                             _clearAllEvents B9E8  
                 __end_of_APP_factoryReset C6BC                       __end_of_getTwoAction C900  
                      setServoState@action 0091                            setMultiState@io 0092  
                            _canFillRxFifo 74A0                                initTicker@i 008F  
                        ?_findServiceIndex 002B                           _rebuildHashtable 7F58  
                         ??_processActions 00AA                          _canProcessMessage A038  
                                   i1pop@q 0060                              teachPowerUp@i 00A9  
                                   i2pop@q 002B                            completed@action 008D  
                       finaliseOutput@type 008D                   reqevCallback@eventNumber 01E0  
               __end_of_APP_nvValueChanged 2E2A                            setServoState@io 0092  
                         __end_of_configIO 5166                         ??_findServiceIndex 008D  
                _sendInvertedProducedEvent BCB0                         _processEnumeration 78DE  
                              readInput@io 0093                         ?_canProcessMessage 01FD  
                   ??_getNumRxBuffersInUse 0093                           pollServos@midway 01DA  
               startDigitalOutput@pinState 01DD                             teachCheckLen@m 01CF  
             ??_timer3DoneInterruptHandler 0033                           __end_of_bounceUp 5C50  
                         pollServos@target 01D8                                     ___lmul B8E2  
                 __end_of_mnsGetDiagnostic C4CA                             ??_nerdCallback 00AA  
                                   _canIsr C740            checkRemoveTableEntry@tableIndex 01CD  
                                   _canPri EE86                                     ___wmul C56A  
                                ??___awdiv 009B                                     _doNerd C79C  
                                ??___awmod 0091                      _APP_preProcessMessage C926  
                                   _doWait A7E0                           ??_finaliseOutput 008E  
                                   _getEVs 84AE                                  ??___lldiv 009F  
                deleteTwoActionQueue@index 008E                            sodTRCallback@io 01E4  
                            _nvDiagnostics 01A3                            getParameter@idx 0092  
                        needsStarting@type 008E                                     _memcpy BE64  
                                ??_doEvlrn 00AA                                  ??_doNenrd 00AA  
                                   _isrLow 86B0                                  ??_doEvuln 00AA  
                                   getNN@f 00A1                                  ??_doNnclr 00AA  
                                   clear_0 AEEE                                     clear_1 AF00  
                                   clear_2 AF0C                                  ??_doNnevn 01C7  
                                   clear_3 AF18                                     clear_4 AF24  
                                   clear_5 AF30                                     clear_6 AF3C  
                                   clear_7 AF48                                  ??_doReqev 00AA  
                                ??_doReval 01CC                                     _lowIsr 929E  
                                   _saveNV C05A                           ___awdiv@quotient 009D  
                                   getEv@f 00A4                   __end_of_setDigitalOutput A7E0  
                          ___awmod@divisor 008F                                  ??_doRqevn 00AA  
                         flushFlashBlock@i 008F                        ?_processEnumeration 002B  
                                   have@id 008F                                  ??_getHash 00A7  
                          ??_APP_nvDefault 009F                        ??_canProcessMessage 02CC  
                                   isa$std 0001                            ___awmod@counter 0091  
                          ?_APP_nvValidate 009F                           ??_processOutputs 01D0  
                                ??_highIsr 0044                                  ??_isEvent 008D  
           __end_of_ackEventProcessMessage 69F0                   __end_of_setNormalActions C914  
              producerProcessMessage@index 02D5                                  ??_readNVM 0094  
                 nerdCallback@serviceIndex 01D8                                  ??_isrHigh 0049  
                            i2_checkTxFifo 5C50                      ackGetDiagnostic@index 0099  
                        _canReceiveMessage 69F0                 __end_of_teachGetDiagnostic C542  
                         _nvProcessMessage 484A                                     numEv@f 00A2  
                                ??_mnsPoll 01CB                                     pop@ret 0094  
                         canFillRxFifo@ptr 006E                          ??_mnsFactoryReset 00AA  
                             __mediumconst ED28                                  ??_tickGet 0091  
                         __end_of_services EE7B                         _tableIndexToEvtIdx C8E4  
              findServiceIndex@serviceType 008F                                  ??_setType 00AA  
                                   tblptrh 0FF7                                     tblptrl 0FF6  
                        doEvlrn@nodeNumber 01F2                                     tblptru 0FF8  
                             ??_FLASH_Read 008F                              _initInputScan 9D92  
                         __end_of_quantity BF66                          nvProcessMessage@m 01FD  
                       ?_canReceiveMessage 01C7                                  ??_powerUp 01C7  
                        __end_ofi1_isEvent C5BA                               i2getNV@index 002E  
               __end_of_peekTwoActionQueue A8F6                     getParameterFlags@flags 0091  
                             ?_setupTimer1 002B          mnsTRserviceDiscoveryCallback@step 01D9  
                             ?_setupTimer3 002B                            ??_pushTwoAction 008D  
        mnsTRserviceDiscoveryCallback@type 002B                              checkTxFifo@mp 0073  
                        __end_ofi2_isEvent C6E0                          i2_checkCANTimeout BA90  
                     __end_of_APP_addEvent B26E                                  ??_writeEv 01D1  
                             __p_name_text 0848                      _checkRemoveTableEntry BDD6  
                      addEvent@eventNumber 01DD                          _expeditedQueueBuf 02C4  
             nvTRnvrdCallback@valueOrError 01DA                           __end_of_writeNVM BBCE  
                           ?_needsStarting 008D                        ?_tableIndexToEvtIdx 002B  
                   __end_of_clearAllEvents BA3C                      mnsGetDiagnostic@index 0099  
                        __end_ofi1_tickGet B992                     startServoOutput@action 0091  
                     ??_processEnumeration 01C0                         ?i2_checkCANTimeout 002B  
                               __accesstop 0060                    __end_of__initialization AF4E  
                __end_of_canProcessMessage A0DA                          __end_ofi2_tickGet B832  
                            bounceDown@tmp 00A7                        ??_canReceiveMessage 01C9  
                        EEPROM_Write@index 008F                             nvGetESDdata@id 008D  
                        EEPROM_Write@value 0091                             ?_canFillRxFifo 002B  
                           setOutputPin@io 0094                     checkRemoveTableEntry@e 01CE  
                            doEvuln@result 01D6                              ___rparam_used 0001  
                       teachCheckLen@learn 01D2                                 _eeBootFlag 0024  
                        i1tickGet@IntFlag1 0065                          i1tickGet@IntFlag2 0064  
                  ??_handleSelfEnumeration 0099                  ?_factoryResetGlobalEvents 002B  
                            ?_teachPowerUp 002B                           FLASH_Write@index 0090  
                        _getParameterFlags B832                              __end_ofi1_pop 9F90  
                         FLASH_Write@value 0092                              __end_ofi2_pop A038  
                      ??i2_checkCANTimeout 0040                             __pcstackCOMRAM 002B  
               ?i1_updateModuleErrorStatus 002B  mnsTRserviceDiscoveryCallback@serviceIndex 01D8  
                           _io@inputs$F849 00CE                                 _canEsdData C7B6  
                            __end_of_doSOD C804                         ?_getParameterFlags 002B  
                            __end_of_getEN AE6E                              __end_of_getNN 9810  
                            __end_of_getNV BFE2                              __end_of_getEv 7B8E  
                       __end_of_FLASH_Read BC66                                 _ackPowerUp C31C  
                   ackEventCheckLen@needed 01D1                              __end_of_setNV AD7A  
                            __end_of_numEv 8DBA                              __end_of_setup 9D92  
                     ??_tableIndexToEvtIdx 008D                               i1isEvent@opc 0061  
                             ??_APP_lowIsr 0060                       _getNumTxBuffersInUse C896  
                   consumer2QEsdData@index 008D                         APP_factoryReset@io 01F1  
                             ?_startServos 002B                  __end_of_canReceiveMessage 6BD8  
                             ?_startOutput 01E0               nvTRnvrdCallback@serviceIndex 01D8  
               __end_of_bootProcessMessage A34A                                  ?i2_canIsr 002B  
                      ??_getParameterFlags 0091                             ?i2_checkTxFifo 002B  
                               _canTxError B53E                                 _canService EF68  
                        ??_isConsumedEvent 00A6                                 _canPowerUp 7136  
                  producerProcessMessage@h 02D4                    producerProcessMessage@m 01FD  
                                  ??i1_pop 0062                                    ??i2_pop 002D  
                           ?_initInputScan 002B                  reqevCallback@serviceIndex 01D8  
                     __end_of_APP_testMode C932                 rebuildHashtable@tableIndex 01C6  
             __end_of_deleteHappeningRange 8CE2                  __end_ofi2_checkCANTimeout BAE4  
             consumer2QGetDiagnostic@index 0099                                    ??_doSOD 0095  
                            completed@type 008E                                    ??_getEN 0099  
                                  ??_getNN 0099                                    ??_getNV 008F  
                                  ??_getEv 009F                    startDigitalOutput@state 01D8  
                              saveNV@index 01C2                             canFillRxFifo@m 006C  
                                  ??_setNV 01F9                              ?_sendMessage2 00A7  
                            ?_sendMessage3 00A7                              ?_sendMessage4 01C6  
                            ?_sendMessage5 01C6                              ?_sendMessage6 01C6  
                            ?_sendMessage7 01C6                                    ??_numEv 009D  
                    _setupModePreviousMode 00C1                                    ??_setup 00AA  
                             canEsdData@id 008D                                saveNV@value 01BF  
                             readNVM@index 0091                   mnsProcessMessage@newMode 02EE  
                        initTicker@divider 008E                               _EEPROM_Write B342  
                               __pbssBANK0 00AA                                 __pbssBANK1 0100  
                               __pbssBANK2 0200                                 __pbssBANK3 0300  
                               __pbssBANK4 0400                                 __pbssBANK5 0500  
                             loadNvCache@i 009B                               i2isEvent@opc 002C  
                          ?_clearAllEvents 002B                 startTimedResponse@callback 0092  
                          canSendMessage@m 00A2                                 _defaultNVs BAE4  
                       __end_of_APP_lowIsr C934                        setNewCanId@newCanId 01BF  
                        ??_checkCANTimeout 0075                  __end_of_getParameterFlags B88A  
                               _delayCount 0284                             _loadFlashBlock BD44  
                             _factoryReset 879C                             ??_teachPowerUp 00A9  
                            _setLEDsByMode C16C                              addEvent@evVal 01E0  
                            addEvent@evNum 01DF                             _canDiagnostics 0166  
                            addEvent@error 01E6             __end_of_eventConsumer2QService EF20  
                   processActions@ioAction 01E8                                mnsPowerUp@i 0097  
                       mnsProcessMessage@d 02EC                         mnsProcessMessage@i 02EA  
                       mnsProcessMessage@m 01FD                       __end_of_leds_powerUp C1CE  
                               _bl_version EE7B                     ?_APP_preProcessMessage 008D  
                                  ?___lmul 0091                                    ?_canIsr 002B  
                     i2tickGet@currentTime 0031                                    ?___wmul 0091  
                        _bootloaderVersion 00C7                               initBounce@io 008D  
                                  ?_doNerd 002B                                    ?_doWait 009D  
        __end_ofi1_updateModuleErrorStatus C8CE                                    ?_getEVs 002B  
                        i2tickGet@IntFlag1 0030                          i2tickGet@IntFlag2 002F  
                    ?_getNumTxBuffersInUse 002B                                    ?_memcpy 008D  
                                ?_addEvent 01DB                                    _ECANCON 0F72  
                                  ?_isrLow 002B                         _mnsTRrqnpnCallback C3D2  
                           ___lmul@product 0099                        i1getBufferPointer@b 0062  
                                  ?_lowIsr 002B                                    ?_saveNV 01BF  
                      setOutputPosition@io 00A3                      _setTimedResponseDelay C8EE  
                    _producerGetDiagnostic C452                                    _BRGCON1 0E43  
                                  _BRGCON2 0E44                                    _BRGCON3 0E45  
                   processActions@peekItem 01E4                   __end_of_setServoPosition C62C  
                     __end_of_nvGetESDdata C7EA                                 ??i2_canIsr 0044  
                       _startDigitalOutput 56FE                                    _COMSTAT 0F71  
                         _canGetDiagnostic B26E                                 _flashBlock 00D1  
                               _flashFlags 00BA                                    i1l21411 55E6  
                                  i1l20509 B946                                    i1l20561 9008  
                                  i1l20529 B976                                    i1l20555 8FC6  
                                  i1l20571 9F12                                    i1l21429 56DC  
                                  i1l21561 A488                                    i1l22611 74A2  
                                  i1l20579 9F86                                    i1l21581 A4BA  
                                  i1l21573 A4A6                                    i1l21565 A492  
                                  i1l21557 A47E                                    i1l21585 A4C4  
                                  i1l21577 A4B0                                    i1l21569 A49C  
                                  i1l21595 A4D8                                    i1l22635 74F6  
                                  i1l21589 A4CE                                    i1l22645 75FC  
                                  i1l22661 B568                                    i1l22639 75F0  
                                  i1l22671 B592                                    i1l22649 760A  
                                  i1l25451 86EE                                    i1l25397 92A4  
                                  i2l13031 9166                                    i2l13037 91A8  
                                  i2l14033 72F6                                    i2l14043 73B2  
                                  i2l14131 A5CE                                    i2l14123 A5BA  
                                  i2l14115 A5A6                                    i2l14061 C0A6  
                                  i2l14045 73EE                                    i2l14037 7336  
                                  i2l14053 746A                                    i2l14039 7372  
                                  i2l14143 A5EC                                    i2l14135 A5D8  
                                  i2l14127 A5C4                                    i2l14119 A5B0  
                                  i2l23103 B5F4                                    i2l14049 742E  
                                  i2l14153 A600                                    i2l14067 C0B6  
                                  i2l14147 A5F6                                    i2l14139 A5E2  
                                  i2l16111 C83E                                    i2l20597 A02E  
                                  i2l20589 9FBA                                    i2l21645 5DCE  
                                  i2l23093 B5CA                                    i2l21663 5EC4  
                                  i2l15703 7612                                    i2l12959 B7E2  
                                  i2l15731 775C                                    i2l12979 B814  
                                  i2l15741 7776                                    i2l15727 7662  
                                  i2l15737 7768                                    i2l25449 8764  
                                  i2l25379 9370                                  ?_checkLen 01CB  
                           _setOutputState B992                     getNumRxBuffersInUse@no 0095  
                        ?_nvTRnvrdCallback 01D8                          reqevCallback@step 01D9  
                   processActions@nextType 01E5                        ?_mnsTRrqnpnCallback 01D8  
                         ??_checkPowerOnPb 00AA                          ??i2_canFillRxFifo 0037  
                                  _TBLPTRU 0FF8            flushFlashBlock@interruptEnabled 008E  
                                  _RXB0CON 0F60                                    _RXB1CON 0F30  
                       ??_nvTRnvrdCallback 00AA                                    _TXB0DLC 0F25  
                                  _TXB1DLC 0F15                                    _TXB0CON 0F20  
                                  _TXB2DLC 0F05                                    _TXB1CON 0F10  
                                  _TXB2CON 0F00                             ??_sendMessage2 00A9  
                           ??_sendMessage3 00AA                             ??_sendMessage4 00A7  
                           ??_sendMessage5 00A7                             ??_sendMessage6 00A7  
                           ??_sendMessage7 00A7                              ?_setOutputPin 0091  
                      ?_startDigitalOutput 01D8                     ?_checkRemoveTableEntry 002B  
                                  _RXFCON0 0E46                           _teachDiagnostics 01B2  
                          ??_needsStarting 008F                                  ?_configIO 002B  
                               _bounceDown 2E2A                       __end_of_nerdCallback B410  
                           inputScan@input 01D3                                  ?_bounceUp 002B  
                isConsumedEvent@eventIndex 00A6                                    i2_getNV C094  
                          loadFlashBlock@i 008D                            ??_canFillRxFifo 006C  
                           checkLen@needed 01CD                               _getParameter 8882  
                   __end_of_loadFlashBlock BD8E                          _sendProducedEvent 98C8  
                    i2_getNextWriteMessage 9100                            _timerExtension1 00C6  
                          _timerExtension2 00C5                             ?_setLEDsByMode 002B  
                   mnsTRrqnpnCallback@step 01D9                     mnsTRrqnpnCallback@type 002B  
                       ?_sendProducedEvent 00A8                                poll@handled 02F3  
                     ??_mnsTRrqnpnCallback 00AA                          __end_of_findEvent A6C4  
                                  __Hparam 0000                               initServos@io 00A8  
                    setOutputPosition@type 00A2                              ?_popTwoAction 002B  
                                  __Lparam 0000         __end_of_timer3DoneInterruptHandler C5E2  
               _timer3DoneInterruptHandler C5BA                                 _initBounce C428  
                   _APP_postProcessMessage C92A                                 _eventTable EF80  
                     ??_startDigitalOutput 01D9                         pbDownTimer@timeout 00A8  
                              ?_canEsdData 002B                          __end_of_pbUpTimer 9AE0  
                         pbUpTimer@timeout 00A8                                 _initTicker BE1E  
                                  ___awdiv A8F6                                 _initRomOps C84A  
                                  ___awmod B120                   _consumer2QProcessMessage 3A66  
                         _ackGetDiagnostic C4CA                                 _initServos 7E28  
                                ?_quantity 008D                                    ___lldiv AA02  
                      ??_sendProducedEvent 00A9                          __end_of_completed A5A2  
                              ?_ackPowerUp 002B                                validStart@f 009C  
             EEPROM_Write@interruptEnabled 0092                       startDigitalOutput@io 01DF  
                               ??_addEvent 01E2                                 _currentPos 0130  
                                  _doEvlrn 94FE                                 _paramBlock 0820  
                                  _doNenrd B192                         canProcessMessage@m 01FD  
                                  _doEvuln AD7A                                    _doNnclr C1CE  
                 sodTRCallback@disable_off 01E0                                    _doNnevn B2DA  
                                  _doReqev 7CE2                                    _doReval 8A4A  
                                  __pcinit AEE6                            ??i2_checkTxFifo 0037  
                              setType@type 01EE                              _teachCheckLen B602  
                                  _doRqevn C0CE                          __end_of_leds_poll 63C2  
                       _startTimedResponse BEEA                                    __ramtop 0F00  
                                  _getHash C720                                  ?_writeNVM 00A4  
                       doEvlrn@eventNumber 01F4                              ??_checkTxFifo 006C  
                                  __ptext0 BC66                                    __ptext1 9CE8  
                                  __ptext2 C872                                    __ptext3 7E28  
                                  __ptext4 AF58                                    __ptext5 C3A6  
                                  __ptext6 9D92                                    __ptext7 8B2A  
                                  __ptext8 C2EE                                    __ptext9 7136  
                   __end_of_setOutputState B9E8                                    _highIsr 936C  
                                  _isEvent C542                                    _configs EE29  
                                  _pbTimer 00AA                                  _T0CONbits 0FD5  
                       APP_nvDefault@index 00A3                            getEv@tableIndex 00A5  
                              ?_canTxError 002B                           _EnumerationState 0023  
                        ??_canFactoryReset 00AA                          _mnsProcessMessage 17C8  
                                  _nvCache 0400                            ??_initInputScan 0097  
                               _mode_flags 0165                                  _T1CONbits 0FCD  
                              ?_canPowerUp 002B                                    _readNVM B662  
                        __end_of_readInput 82A4                             _nvFactoryReset C01E  
                             _getTwoAction C8F8                                    getEN@hi 009D  
                                  getEN@lo 009F                          ?_ackEventCheckLen 01CF  
                                  _isrHigh 8732                          ??_teachGetESDdata 008D  
                 __end_of_rebuildHashtable 807C                                 ??_checkLen 00A8  
                         ??i2_setOutputPin 0030                                  _T3CONbits 0FB1  
                                  getNN@hi 009D                                    getNN@lo 009F  
                               _mode_state 00C4                                    getEVs@f 00A1  
                         ___awmod@dividend 008D                               _configIO$746 01C2  
                       doReqev@eventNumber 01CE                                    _mnsPoll 329C  
                       ?_mnsProcessMessage 01FD                                    _tickGet B88A  
                             _flashCounter 00AE                          doNenrd@tableIndex 01D0  
                      ?_startTimedResponse 0091                                    _setType B4DA  
                             _isEvent$4896 008D                         ??_ackEventCheckLen 00A9  
                           ??_setOutputPin 0092                    ??i1_getNextWriteMessage 0062  
                               getNV@index 0090                                 _inputState 0294  
                                  _rxQueue 0026                          doNenrd@nodeNumber 01CC  
                 processActions@nextAction 01E9                                    _powerUp 8B2A  
                        __end_of_inputScan 543C                          __end_of_mnsLowIsr C872  
                        _consumer2QEsdData C700                                    _txQueue 01A9  
                  ?_producerProcessMessage 01FD                            defaultEvents@en 01EB  
                          defaultEvents@io 01ED                                    _started 00D0  
                               ??_configIO 01BF                                 _mnsService EF56  
                        __end_of_nvService EF56                           ??_setBounceState 0092  
                               _mnsPowerUp 807C                          __end_of_nvPowerUp C16C  
                                  _writeEv 36D2                  __end_of_sendProducedEvent 997E  
                               ??_bounceUp 009F                       end_of_initialization AF4E  
                       _expeditedReadIndex 00CB                              startOutput@io 01E2  
                       ?_consumer2QEsdData 002B                        ??_mnsProcessMessage 02CC  
                             writeNVM@type 01BE                                 getEv@evNum 009D  
                         producerPowerUp@i 008D                                    memcpy@d 0094  
                                  memcpy@n 0091                                    memcpy@s 0096  
               APP_nvValueChanged@oldValue 01F2                                ?_defaultNVs 01C3  
                            ??_EEPROM_Read 008F                            ?_loadFlashBlock 002B  
                            ??_clearEvents 00AA                                  i1u2431_20 BA78  
                                i1u2239_25 54C4                      __end_of_doneTwoAction C920  
                                i1u2801_28 934A                                  i1u2801_29 935C  
                                  lowIsr@i 007D                                  i2u1320_44 73A8  
                                i2u1320_45 73A4                                  i2u1321_44 73E2  
                                i2u1321_45 73DE                          _consumer2QPowerUp BD8E  
                                i2u1323_44 7424                                  i2u1323_45 7420  
                                i2u1324_44 745E                                  i2u1324_45 745A  
                                i2u1317_44 732C                                  i2u1317_45 7328  
                                i2u1318_44 7366                                  i2u1318_45 7362  
                                i2u2255_45 5CD4                          ?_APP_factoryReset 002B  
                           ??_popTwoAction 008D                                  i2u2477_40 BACA  
                               _validStart BB34                            ___lldiv@divisor 009B  
                      ??_consumer2QEsdData 008D                                  i2u2797_48 9416  
                                i2u2797_49 9428                               writeEv@evVal 01D0  
                 __end_of_nvProcessMessage 4B84                               writeEv@evNum 01CF  
                          ___lldiv@counter 00A3                       ??_startTimedResponse 0094  
                       ?_consumer2QPowerUp 002B                               writeEv@nextF 01D6  
                  pollTimedResponse@result 01E9                         ??_APP_factoryReset 00AA  
          eraseFlashBlock@interruptEnabled 008D                                 _pollServos 0850  
                   pollServos@beforeMidway 01D9                           ??_APP_nvValidate 00A0  
                consumer2QProcessMessage@e 02DB                  consumer2QProcessMessage@m 01FD  
                     _deleteHappeningRange 8C06                              ??_FLASH_Write 0093  
                     nvGetDiagnostic@index 0099                                    postdec1 0FE5  
                                  postdec2 0FDD                     ??_getNumTxBuffersInUse 0093  
                                  postinc0 0FEE                                    postinc1 0FE6  
                                  postinc2 0FDE                   ?_consumer2QGetDiagnostic 0097  
                          _mnsFactoryReset AE6E                          ?_mnsGetDiagnostic 0097  
                               ??_quantity 008F                __end_of_setExpeditedActions C91A  
                   ?_setTimedResponseDelay 002B                               _APP_addEvent B202  
                        ??_isNoServoPulses 008D                     ?_producerGetDiagnostic 0097  
                           ?_teachCheckLen 01CF                        ??_consumer2QPowerUp 008D  
                __end_of_mnsProcessMessage 22F2                                 _tmpMessage 019A  
                       ??_mnsGetDiagnostic 0099             startTimedResponse@serviceIndex 0091  
                   __end_of_nvFactoryReset C05A                                 _servoState 0110  
                               ??_writeNVM 00A8                                 _showStatus 8966  
                                _PORTAbits 0F80                          ?_setDigitalOutput 0097  
                          ?_setOutputState 0093                                 _previousNN 0160  
           deleteHappeningRange@tableIndex 01E3                          ?_setNormalActions 002B  
                       _APP_nvValueChanged 2994                  _timedResponseServiceIndex 00BE  
                       setDigitalOutput@io 0099                         ??_setDigitalOutput 0098  
                       deleteActionRange@e 01E3                                 _priorities ED29  
                       _lastActionPollTime 0154                              ??_pbDownTimer 00A4  
        __end_of_sendInvertedProducedEvent BCFA                            sendMessage2@opc 00A9  
                     __end_of_teachPowerUp C13A                            sendMessage3@opc 01C6  
                __end_of_consumer2QEsdData C720                            sendMessage4@opc 00A7  
                          sendMessage5@opc 00A7                            sendMessage6@opc 00A7  
                          sendMessage7@opc 00A7                         _sodTRCallback$1424 01DD  
                       _sodTRCallback$1425 01DE                          _eventTeachService EF20  
           __end_of_producerProcessMessage 6154                           setupTimer1@ticks 009A  
                                _TRISAbits 0F92                                  _TRISBbits 0F93  
                                _TXBIEbits 0E7F                         ??_setNormalActions 008D  
        canReceiveMessage@messageAvailable 01CA                           setupTimer3@ticks 009A  
                   _mnsProcessMessage$3632 02EB                         _timedResponseDelay 0164  
                      __end_of_checkTxFifo 56FE                       APP_nvValueChanged@io 01F7  
                              showStatus@s 008F                              ??_findService 008F  
                          loadNvCache@temp 0099                                ?_bounceDown 002B  
                           i1_isEvent$4896 0060                        ?_APP_nvValueChanged 01F1  
                            clearEvents@io 01E5                              ??_bootEsdData 008D  
                               isEvent@opc 008E                     ?i2_getNextWriteMessage 002B  
                  peekTwoActionQueue@index 008E                     i2getNextWriteMessage@q 002B  
                          ??_setLEDsByMode 0090                  __end_of_consumer2QPowerUp BDD6  
                            _sodTRCallback 85B2                                  i1_isEvent C592  
                      teachCheckLen@needed 01D1            ??_mnsTRserviceDiscoveryCallback 01DA  
                        ??_flushFlashBlock 008E                                  i2_isEvent C6BC  
                       _teachGetDiagnostic C51A     sendInvertedProducedEvent@state_to_send 01D7  
               deleteHappeningRange@number 01DB                          _heartbeatSequence 00BF  
                      _teachProcessMessage 22F2           sendProducedEvent@producedEventEN 01CB  
         sendProducedEvent@producedEventNN 01CD                                  i1_tickGet B93A  
                        removeTableEntry@f 01CB                             bounceUp@midway 00A6  
                            ??_bootPowerUp 0097                             _normalQueueBuf 0480  
                       _peekTwoActionQueue A86C                 consumer2QProcessMessage@ca 02DA  
                                i2_tickGet B7D8                 consumer2QProcessMessage@io 02D8  
                               bounceUp@io 00A7                                ?_initBounce 002B  
        sodTRCallback@disable_SOD_response 01DA                               _APP_testMode C930  
                          _isConsumedEvent C674                      ?_deleteHappeningRange 01DB  
            __end_of_handleSelfEnumeration 83AA               ??_timer1DoneInterruptHandler 0033  
                      __end_of_EEPROM_Read C79C                        ?_teachGetDiagnostic 0097  
                      __end_of_clearEvents BFA4                          _canTransmitFailed 00B8  
              ??i1_updateModuleErrorStatus 0060                                ?_initTicker 002B  
                              ?_initRomOps 002B                       ??_APP_nvValueChanged 01F3  
                              ?_initServos 002B                       __end_of_sendMessage2 C25E  
                     __end_of_sendMessage3 C378                       __end_of_sendMessage4 C2EE  
                     __end_of_sendMessage5 C2BE                       __end_of_sendMessage6 C22E  
                     __end_of_sendMessage7 C28E                             __end_of___lmul B93A  
                            _defaultEvents 777C                             __end_of_canIsr C760  
                           __end_of_canPri EE8B                             __end_of___wmul C592  
                      ?_peekTwoActionQueue 002B                             __end_of_doNerd C7B6  
               removeTableEntry@tableIndex 01CC                             __end_of_doWait A86C  
                           __end_of_getEVs 85B2                              ??_APP_highIsr 0033  
                          ?_nvFactoryReset 002B                           _removeTableEntry 7B8E  
                          needsStarting@io 0091                             __end_of_memcpy BEAA  
                           __end_of_isrLow 8732                         canReceiveMessage@m 01C7  
                       canReceiveMessage@p 01CE                             __end_of_lowIsr 936C  
                           __end_of_saveNV C094                 __end_ofi1_getBufferPointer A50E  
                     ?_teachProcessMessage 01FD                  __end_of_eventTeachService EF32  
                      __end_of_FLASH_Write 929E                      __end_of_APP_nvDefault 8F5E  
                           _canSendMessage 4B84                          ??_producerEsdData 008D  
                             _name_absaddr 0848                        start_initialization AEE6  
                         ??_clearAllEvents 01C7                            _checkCANTimeout BA3C  
                             _leds_powerUp C19E                       ??_teachGetDiagnostic 0099  
                              __end_of_pop 9EE6                              factoryReset@i 01F6  
                              ?_mnsPowerUp 002B               ?_mnsTRallDiagnosticsCallback 01D8  
                     setBounceState@action 0091                   setDigitalOutput@pinState 0098  
                        ??_producerPowerUp 008D                       ??_peekTwoActionQueue 008D  
                              _CANSTATbits 0F6E                             ?_sodTRCallback 01D8  
                       i2canFillRxFifo@ptr 0039                      __end_of_pushTwoAction B720  
                      __end_of_pbDownTimer 9B90                         _bootProcessMessage A2B2  
                               ?i1_isEvent 002B                   producerProcessMessage@ev 02D2  
                      _getNextWriteMessage 8DBA                                 ?i2_isEvent 002B  
                             _nvGetESDdata C7D0                   __end_of_canGetDiagnostic B2DA  
                  ??_APP_preProcessMessage 008F                    __end_of_mnsFactoryReset AEE6  
                      __end_of_findService A3E2                              ??_loadNvCache 0097  
                               ?i1_tickGet 0060                                ?_validStart 002B  
                       setServoPosition@io 00A0                        __end_of_bootEsdData C650  
                        isConsumedEvent@ev 00A7                        ?_bootProcessMessage 01FD  
                               ?i2_tickGet 002B                               doEvlrn@evVal 01F7  
                             doEvlrn@evNum 01F6                            numEv@tableIndex 00A3  
                   startTimedResponse@type 0094               __end_of_deleteTwoActionQueue AC04  
                             doEvlrn@error 01F8                                ?_pollServos 002B  
               __end_of_evtIdxToTableIndex C8E4                   rebuildHashtable@chainIdx 01C5  
                     __end_of_setOutputPin 7136                                   ??___lmul 0099  
                          ??_teachCheckLen 00A9                                   ??_canIsr 0079  
                      _universalEventsInit C872                                   ??___wmul 0095  
                             doNenrd@index 01CB                                   ??_doNerd 0095  
                                 ??_doWait 009F                                   ??_getEVs 009D  
                           ?_defaultEvents 01EA                        bootProcessMessage@m 01FD  
                       addEvent@forceOwnNN 01E1                               _nerdCallback B3AA  
                          i2_canFillRxFifo 7610                 ?i2_updateModuleErrorStatus 002B  
                  _updateModuleErrorStatus C8B6                        __end_of_bootService EF44  
                                 ??_memcpy 0093                                   ??_isrLow 007E  
                      __end_of_bootPowerUp 94FE                                   ??_lowIsr 0079  
                                 ??_saveNV 01C0                     __end_of_canSendMessage 4E84  
                              ?_showStatus 002B                              ??_initOutputs 008D  
                 sodTRCallback@send_off_ok 01DC                       ?_getNextWriteMessage 008D  
                    ??_teachProcessMessage 02CC                               checkTxFifo@m 0071  
                              _checkTxFifo 543C                           _startMultiOutput A216  
                        ?_setServoPosition 009F                              ?i2_canTxError 002B  
                       startMultiOutput@io 0093                           _startServoOutput 968A  
                              __pbssBIGRAM 0548                              _reqevCallback 95C4  
       consumer2QProcessMessage@tableIndex 02D4                    ??_checkRemoveTableEntry 00AA  
    consumer2QProcessMessage@masked_action 02D9                       ??_bootProcessMessage 02CC  
                              __pbssCOMRAM 0001                      peekTwoActionQueue@qty 008D  
                        ??_nvGetDiagnostic 0099                       __end_of_popTwoAction C3A6  
                       ??_setServoPosition 00A0                           canSendMessage@mp 009A  
                         canSendMessage@no 00A1                              __pcstackBANK0 0060  
                            __pcstackBANK1 01BE                              __pcstackBANK2 02CC  
                      __end_of_APP_highIsr C84A                  i1_updateModuleErrorStatus C8C2  
       consumer2QProcessMessage@nextAction 02D5                       ?_universalEventsInit 002B  
                               setNV@index 01FC                              _setMultiState 9030  
                          _happening2Event 0300                              _setServoState 9B90  
                               setNV@value 01F8                         startServoOutput@io 0093  
                       addEvent@tableIndex 01E9                   __end_of_ackGetDiagnostic C4F2  
                           i2_isEvent$4896 002B                 setTimedResponseDelay@delay 008D  
                                addEvent@e 01E8                                  addEvent@f 01E7  
                                 ?i2_getNV 002B                         addEvent@nodeNumber 01DB  
            ??_mnsTRallDiagnosticsCallback 01DA                   _factoryResetGlobalEvents C92E  
                  __end_of_isConsumedEvent C698                         initInputScan@input 0099  
    sendInvertedProducedEvent@can_send_off 01D3                                _EEPROM_Read C77E  
               ??_consumer2QProcessMessage 02CC                         initTicker@priority 008D  
                              _clearEvents BF66                    ?_APP_postProcessMessage 008D  
                        ??_eraseFlashBlock 008D                                  __pnvBANK0 00D1  
                          i2checkTxFifo@mp 003E                           setBounceState@io 0092  
                   ??_deleteHappeningRange 01DC                             mnsPowerUp@temp 0098  
                             doNnevn@count 01CC                                  __pmainSec 86B0  
                     teachProcessMessage@m 01FD                           _getBufferPointer A3E2  
                          _canFactoryReset C760                ?_timer3DoneInterruptHandler 002B  
    __end_of_mnsTRserviceDiscoveryCallback A752              _mnsTRserviceDiscoveryCallback A6C4  
             mnsTRallDiagnosticsCallback@d 01DE                                 nvPowerUp@i 009C  
                          tickGet@IntFlag1 0092                            tickGet@IntFlag2 0091  
                                __pintcode 0808                            _teachGetESDdata C650  
                             ??_canEsdData 008D         handleSelfEnumeration@incomingCanId 009D  
                        _lastInputScanTime 0158                              __pmediumconst ED28  
                 ??_ackEventProcessMessage 02CC                       i1tickGet@currentTime 0066  
                              ackPowerUp@i 008D                           getEVs@tableIndex 00A3  
                                 ?___awdiv 0097                                  __ptext100 0850  
                                __ptext101 C428                                  __ptext110 BCB0  
                                __ptext102 59B4                                  __ptext111 B410  
                                __ptext103 2E2A                                  __ptext200 C740  
                                __ptext120 A7E0                                  __ptext112 B992  
                                __ptext104 6BD8                                  __ptext201 C85E  
                                __ptext121 C91A                                  __ptext113 9B90  
                                __ptext105 63C2                                  __ptext210 8F5E  
                                __ptext202 BA3C                                  __ptext130 C2BE  
                                __ptext122 C378                                  __ptext114 9030  
                                __ptext106 B77E                                  __ptext211 A478  
                                __ptext203 B53E                                  __ptext131 AC04  
                                __ptext123 C7EA                                  __ptext115 9C3C  
                                __ptext107 968A                                  __ptext220 9F90  
                                __ptext212 C932                                  __ptext204 543C  
                                __ptext140 C84A                                  __ptext132 4B84  
                                __ptext124 BEEA                                  __ptext116 AA86  
                                __ptext108 A216                                  __ptext221 C6BC  
                                __ptext205 B93A                                  __ptext141 B720  
                                __ptext133 3DF6                                  __ptext125 B03C  
                                __ptext117 C8F8                                  __ptext109 56FE  
                              _FLASH_Write 91D0                                  __ptext230 C094  
                                __ptext222 7610                                  __ptext214 936C  
                                __ptext206 9EE6                                  __ptext150 C760  
                                __ptext142 8966                                  __ptext134 C542  
                                __ptext126 AB86                                  __ptext118 A86C  
                                __ptext223 C8CE                                  __ptext215 C81C  
                                __ptext207 C592                                  __ptext151 C01E  
                                __ptext143 9A30                                  __ptext135 B0AE  
                                __ptext127 A50E                                  __ptext119 C900  
                                __ptext224 9100                                  __ptext216 BA90  
                                __ptext208 74A0                                  __ptext160 B4DA  
                                __ptext152 AE6E                                  __ptext144 9AE0  
                                __ptext136 C896                                  __ptext128 5166  
                                __ptext225 A5A2                                  __ptext217 B5A0  
                                __ptext209 C8C2                                  __ptext161 BAE4  
                                __ptext153 C920                                  __ptext145 6154  
                                __ptext137 BF28                                  __ptext129 98C8  
                                __ptext226 C834                                  __ptext218 5C50  
                                __ptext170 BDD6                                  __ptext162 C05A  
                                __ptext154 B9E8                                  __ptext146 B88A  
                                __ptext138 8DBA                                  __ptext227 C5BA  
                                __ptext219 B7D8                                  __ptext171 7B8E  
                                __ptext163 BCFA                                  __ptext155 8E8C  
                                __ptext147 B8E2                                  __ptext139 819A  
                                __ptext228 C5E2                                  __ptext180 4E84  
                                __ptext172 7F58                                  __ptext164 777C  
                                __ptext156 C56A                                  __ptext148 AA02  
                                __ptext229 72F2                                  __ptext181 BB82  
                                __ptext173 7A38                                  __ptext165 BF66  
                                __ptext157 B120                                  __ptext149 879C  
                                __ptext190 A752                                  __ptext182 91D0  
                                __ptext174 84AE                                  __ptext166 8C06  
                                __ptext158 A8F6                                  __ptext191 6F78  
                                __ptext183 BD44                                  __ptext175 BB34  
                                __ptext167 997E                                  __ptext159 C698  
                                __ptext192 BFA4                                  __ptext184 A97C  
                                __ptext176 A634                                  __ptext168 65FA  
                                __ptext193 B662                                  __ptext185 BBCE  
                                __ptext177 974E                                  __ptext169 36D2  
                                __ptext194 BC1A                                  __ptext186 C884  
                                __ptext178 C720                                  __ptext195 C77E  
                                __ptext187 C8A6                                  __ptext179 ADF4  
                                 ?___awmod 008D                                  __ptext196 C92E  
                                __ptext188 B342                                  __ptext197 C930  
                                __ptext189 C8B6                                  __ptext199 929E  
                             defaultNVs@io 01C6                                  _findEvent A634  
                                 ?___lldiv 0097                               ??_ackPowerUp 008D  
                   _startDigitalOutput$808 01DB                        __end_of_loadNvCache BD44  
                             doReqev@evVal 01D1                               doReqev@evNum 01D0  
                          getNN@tableIndex 00A2                           processActions@io 01EA  
                             doReval@enNum 01CE                         sodTRCallback@flags 01E3  
                             doReval@evVal 01CF                               doReval@evNum 01CB  
                                 ?_doEvlrn 01F2                                   ?_doNenrd 002B  
                                 ?_doEvuln 01D2                                __pintcodelo 0818  
                                 ?_doNnclr 002B                                   ?_doNnevn 002B  
                      i2getBufferPointer@b 002D                                   ?_doReqev 01CC  
                                 ?_doReval 01CB                          teachGetESDdata@id 008D  
                       sodTRCallback@value 01E1          __end_ofi2_updateModuleErrorStatus C8DA  
                                 ?_doRqevn 002B                      ??_getNextWriteMessage 008F  
                                 ?_getHash 00A3                   deleteActionRange@updated 01E1  
                  __end_of_checkCANTimeout BA90                              ??_setNewCanId 00AA  
                                _pbUpTimer 9A30                            ?_canSendMessage 009A  
                            ??_sendMessage 00A4                                   ?_highIsr 002B  
                           ??i2_canTxError 0040                                   ?_isEvent 002B  
                             ??_canTxError 0075                           _findServiceIndex B03C  
                                _completed A50E                           nerdCallback@step 01D9  
                         nerdCallback@type 002B                             ?_reqevCallback 01D8  
                             ??_canPowerUp 0097                             _heartbeatTimer 0150  
                                 ?_readNVM 0091                                   ?_isrHigh 002B  
                              _COMSTATbits 0F71                    i1getNextWriteMessage@wr 006B  
                                _leds_poll 6154                 producerGetDiagnostic@index 0099  
                                 ?_mnsPoll 002B                          ?_rebuildHashtable 002B  
                         _canIsr$intlevel1 C748                       setOutputPosition@pos 00A1  
                                 ?_tickGet 008D    mnsTRallDiagnosticsCallback@serviceIndex 01D8  
                              _pbDownTimer 9AE0                                  checkLen@m 01CB  
                                 ?_setType 01EE           ackEventProcessMessage@eventIndex 02D0  
                    ??_universalEventsInit 008D                             defaultNVs@type 01C3  
                           ?_setMultiState 0091                    startBounceOutput@action 008D  
                      __end_of_initOutputs C3D2                           ??_loadFlashBlock 008D  
                           ?_setServoState 0091                                   ?_powerUp 002B  
                                _readInput 819A                         ??_rebuildHashtable 01BE  
                          ??_sodTRCallback 00AA                                _findService A34A  
            __end_ofi1_getNextWriteMessage 9030                                   ?_writeEv 01CF  
                          startServos@type 01DC                                _flashDelays 0120  
                       processActions@type 01E7                                  _expedited 0025  
                              _bootEsdData C62C                         __end_of_canEsdData C7D0  
                    __end_of_needsStarting AB08                                _flashBuffer 0348  
                           doReval@evIndex 01CD                                ??i1_isEvent 0060  
            deleteHappeningRange@happening 01E1                               ??_defaultNVs 01C4  
                                _inputScan 5166             __end_of_APP_postProcessMessage C92E  
                          _eventAckService EED8                                  _mnsLowIsr C85E  
                       __end_of_ackPowerUp C34A                                  _nvService EF44  
                           ___wmul@product 0095                                  _loopCount 0254  
                            ??_removeEvent 00AA                                ??i2_isEvent 002B  
                     sendProducedEvent@opc 01CA                                   _LATBbits 0F8A  
                                _nvPowerUp C13A                      __end_of_canFillRxFifo 7610  
                        findEvent@chainIdx 01C9                            _isNoServoPulses C8A6  
               __end_ofi2_getBufferPointer A634                    getNumRxBuffersInUse@ptr 0093  
                                 _PIE1bits 0F9D                                   _PIE2bits 0FA0  
                     rebuildHashtable@hash 01C3                           ?_mnsFactoryReset 002B  
                                 _PIE5bits 0F76                                ??i1_tickGet 0064  
                                _rxBuffers 07C8                         __p_eventTable_text EF80  
                                getHash@en 00A5                                  getHash@nn 00A3  
                  __end_ofi2_canFillRxFifo 777C                             _flashFlushTime 0140  
   __end_of_APP_isSuitableTimeToWriteFlash C896             _APP_isSuitableTimeToWriteFlash C884  
                        _channelDefaultNVs EE8B                                  _targetPos 0001  
                              _bootService EF32         __end_of_timer1DoneInterruptHandler C608  
               _timer1DoneInterruptHandler C5E2                                ??i2_tickGet 002F  
                       __end_of_canTxError B5A0                         __end_of_canService EF7A  
                             _teachPowerUp C106                                  _pollCount 0264  
                              _bootPowerUp 9436                                   _PIR1bits 0F9E  
                                 _PIR2bits 0FA1                         __end_of_canPowerUp 72F2  
                        ?_nvProcessMessage 01FD                    ??_setTimedResponseDelay 008D  
                                 _PIR5bits 0F77                          doReqev@tableIndex 01D3  
                  ??_producerGetDiagnostic 0099                            ??_defaultEvents 00AA  
                                _txBuffers 0500                             _mnsDiagnostics 018C  
                ??_updateModuleErrorStatus 008D                                   _RCONbits 0FD0  
                        doReqev@nodeNumber 01CC                           ??_setOutputState 0095  
                              _pbWasPushed 00C0                                   _RXF0SIDL 0EE1  
            startDigitalOutput@actionState 01DE                         ??_nvProcessMessage 02CC  
                                 _RXM0EIDH 0EFA                                   _RXM0EIDL 0EFB  
                               ?_findEvent 01BE                                   _TXB0SIDH 0F21  
                                 _TXB0SIDL 0F22                                   _TXB1SIDH 0F11  
                                 _TXB1SIDL 0F12                                   _TXB2SIDH 0F01  
                                 _TXB2SIDL 0F02                                   _RXFBCON0 0E71  
                                 _RXM0SIDH 0EF8                                   _RXM0SIDL 0EF9  
                           pushTwoAction@a 008D                sodTRCallback@event_inverted 01E2  
                          inputScan@change 01D2                        i2setOutputPin@state 002F  
                        _stepsPerPollSpeed 0100                          _teachFactoryReset C920  
                               ?_pbUpTimer 002B                                  configIO@i 01C6  
                              _bounceState 0244                                _APP_highIsr C834  
                           sendMessage@len 01BE                             sendMessage@opc 00A6  
                        _timedResponseTime 0144                          ___wmul@multiplier 0091  
                        _timedResponseStep 00BB                          _timedResponseType 00BC  
                                _startWait 0019                                  _startTime 001D  
                               ?_completed 008D                                   i2_canIsr C81C  
                    __end_ofi2_checkTxFifo 5EE6                           _enumerationState 00B7  
                             doRqevn@count 01C7                                  _transport 0162  
                       ?_teachFactoryReset 002B                          defaultEvents@type 01EA  
                       __end_of_defaultNVs BB34                                 ?_leds_poll 002B  
                    __end_of_initInputScan 9E3C                            _flushFlashBlock A97C  
               processActions@simultaneous 01E3                    ??i2_getNextWriteMessage 002D  
                      __end_of_setNewCanId B4DA                        __end_of_sendMessage AC82  
                               ?_readInput 002B                             doWait@duration 009D  
                            ??_setupTimer1 0095                              ??_setupTimer3 0095  
                     _deleteTwoActionQueue AB86                            _eventCoeService EEEA  
                             ??_bounceDown 009F                        ??_teachFactoryReset 00AA  
                          checkLen@service 01CE                         __end_of_bl_version EE86  
                        ___lmul@multiplier 0091                                _INTCON2bits 0FF1  
                             _sendMessage2 C22E                               _sendMessage3 C34A  
                             _sendMessage4 C2BE                               _sendMessage5 C28E  
                             _sendMessage6 C1FE                               _sendMessage7 C25E  
                                 i1pop@ret 0067                                   i2pop@ret 0032  
                          startOutput@type 01E1                            nvFactoryReset@i 01C1  
                               ?_inputScan 002B                                 ?_mnsLowIsr 002B  
                  __end_of_canFactoryReset C77E                   __end_of_removeTableEntry 7CE2  
                         ?_isConsumedEvent 002B                    __end_of_teachGetESDdata C674  
                               ?_nvPowerUp 002B                  __end_of_channelDefaultNVs EED8  
             __end_of_eventProducerService EF0E                     handleSelfEnumeration@p 0097  
                               _EECON1bits 0F7F                        startBounceOutput@io 008E  
                              _loadNvCache BCFA                                   __Hrparam 0000  
                              _eventChains 0548                           finaliseOutput@io 002B  
                 evtIdxToTableIndex@evtIdx 008D                               ??_initBounce 008D  
                  APP_addEvent@eventNumber 01EC                                  memcpy@tmp 0093  
                                 __Lrparam 0000                          doReval@tableIndex 01D1  
                          _producerEsdData C6E0                           ??_nvFactoryReset 01BF  
                             ??_initTicker 008D                        __end_of_removeEvent C428  
                             ??_initRomOps 008D                     removeEvent@eventNumber 01CF  
 consumer2QProcessMessage@nextSimultaneous 02D7                               ??_initServos 00A4  
                __end_of_teachFactoryReset C926                    sodTRCallback@send_on_ok 01DB  
                                 _addEvent 65FA                          _startBounceOutput B410  
           ?_mnsTRserviceDiscoveryCallback 01D8                             _processActions 63C2  
                       __end_of_bounceDown 329C                            ??_reqevCallback 01DA  
                            ??_startServos 00AA                           ?_checkCANTimeout 002B  
                            ??_startOutput 00AA                                _initOutputs C3A6  
                       ?_startBounceOutput 008D                            _producerPowerUp C2EE  
                       doNenrd@eventNumber 01CE                  rebuildHashtable@happening 01C4  
                             setType@index 01EF                                   _checkLen AB08  
                          ??_setMultiState 0092                            ??_setServoState 0092  
                           i2checkTxFifo@m 003C                             _finaliseOutput C900  
                      _producerDiagnostics 01AE                    deleteActionRange@action 01E2  
                            initOutputs@io 008D                       processActions@action 01EB  
          __end_of_updateModuleErrorStatus C8C2                    __end_of_eventAckService EEEA  
                               _FLASH_Read BC1A                 ?_sendInvertedProducedEvent 01D0  
                    ?_deleteTwoActionQueue 002B                      getNextWriteMessage@wr 0098  
                                 __ptext10 C13A                                   __ptext11 807C  
                                 __ptext20 5EE6                                   __ptext12 C31C  
                                 __ptext21 A038                                   __ptext13 9436  
                               _T1GCONbits 0FAA                                   __ptext30 8A4A  
                                 __ptext22 484A                                   __ptext14 BD8E  
                                 __ptext31 7CE2                                   __ptext23 17C8  
                                 __ptext15 C106                                defaultNVs@i 01C7  
                                 __ptext40 B202                                   __ptext32 B2DA  
                                 __ptext24 67FE                                   __ptext16 C19E  
                                 __ptext41 AC82                                   __ptext33 C1CE  
                                 __ptext25 A2B2                                   __ptext17 C908  
                                 __ptext50 8CE2                                   __ptext42 95C4  
                                 __ptext34 C79C                                   __ptext26 3A66  
                                 __ptext18 BE1E                                   __ptext51 C8E4  
                                 __ptext43 B3AA                                   __ptext35 B192  
                                 __ptext27 22F2                                   __ptext19 4182  
                                 __ptext60 C62C                                   __ptext52 ACFE  
                                 __ptext44 BEAA                                   __ptext36 C8DA  
                                 __ptext28 B602                                   __ptext61 C700  
                                 __ptext53 2994                                   __ptext45 A6C4  
                                 __ptext37 AD7A                                   __ptext29 C0CE  
                                 __ptext70 C1FE                                   __ptext62 C650  
                                 __ptext54 C8EE                                   __ptext46 83AA  
                                 __ptext38 C3FE                                   __ptext71 C34A  
                                 __ptext63 C452                                   __ptext55 C608  
                                 __ptext47 C3D2                                   __ptext39 94FE  
                                 __ptext80 69F0                                   __ptext72 8882  
                                 __ptext64 B26E                                   __ptext56 AFCA  
                                 __ptext48 85B2                                   __ptext81 78DE  
                                 __ptext73 B832                                   __ptext65 C47A  
                                 __ptext57 C6E0                                   __ptext49 44F8  
                                 __ptext90 A34A                                   __ptext82 B476  
                                 __ptext74 329C                                   __ptext66 C4A2  
                                 __ptext58 C7B6                                   __ptext91 C804  
                                 __ptext83 9E3C                                   __ptext75 C16C  
                                 __ptext67 C4CA                                   __ptext59 C7D0  
                                 __ptext92 AB08                                   __ptext84 BE64  
                                 __ptext76 C22E                                   __ptext68 C4F2  
                                 __ptext93 C28E                                   __ptext85 82A4  
                                 __ptext77 C90E                                   __ptext69 C51A  
                                 __ptext94 C926                                   __ptext86 BFE2  
                                 __ptext78 C914                                   __ptext95 C92A  
                                 __ptext87 A3E2                                   __ptext79 B6C2  
                                 __ptext96 6DB0                                   __ptext88 C25E  
                                 __ptext97 9810                                   __ptext89 C674  
                                 __ptext98 A0DA                                   __ptext99 A178  
                      ??_startBounceOutput 008E               __end_of_getNumRxBuffersInUse C01E  
                  __end_of_isNoServoPulses C8B6                               _setOutputPin 6F78  
                     processActions@nextIo 01E6                               ??_mnsPowerUp 0097  
                                 _configIO 4E84                                   _ledTimer 0148  
                  deleteActionRange@number 01DB                             _processOutputs 6BD8  
                        _APP_GetEventState 44F8                                   _ledState 00B0  
                        sodTRCallback@step 01D9                         __end_of_initBounce C452  
                        sodTRCallback@type 002B                              ?_EEPROM_Write 008F  
                       __end_of_eventTable FF70                                   _bounceUp 59B4  
                               _T3GCONbits 0FB0                     i1getNextWriteMessage@q 0060  
                       __end_of_initTicker BE64                         __end_of_initRomOps C85E  
                       i1_getBufferPointer A478                         ?_APP_GetEventState 002B  
                       __end_of_initServos 7F58           __end_of_consumer2QProcessMessage 3DF6  
                                setType@io 01F0                                   doNnevn@f 01CB  
                                 doNnevn@i 01CD                 sendProducedEvent@happening 01CF  
                       __end_of_paramBlock 0840                             canPowerUp@temp 0098  
                    __end_of_setLEDsByMode C19E                        __end_of_setupTimer1 A216  
                      __end_of_setupTimer3 A178                       __end_ofi2_canTxError B602  
                            ?_factoryReset 002B                   __end_of_startMultiOutput A2B2  
                            _configIO$8093 01C1                           _nvTRnvrdCallback BEAA  
                            findEvent@hash 01C8                   __end_of_startServoOutput 974E  
                             ??_validStart 0097                                   doRqevn@i 01C8  
                        ?_canGetDiagnostic 0097                             writeEv@nextIdx 01DA  
                              getEVs@evIdx 00A2             consumer2QProcessMessage@change 02D0  
           consumer2QProcessMessage@action 02DC                           ?i2_canFillRxFifo 002B  
                              getEVs@evNum 00A4                        ?i1_getBufferPointer 0060  
                      ??_APP_GetEventState 009F              __end_of_APP_preProcessMessage C92A  
            ackEventProcessMessage@eventEN 02CE              ackEventProcessMessage@eventNN 02D1  
                             _popTwoAction C378                         ??_canGetDiagnostic 0099  
                             ??_pollServos 01D0                                   isa$xinst 0000  
                                 _services EE69                  __end_of_startBounceOutput B476  
                   __end_of_processActions 65FA                   clearAllEvents@tableIndex 01CB  
                                 int$flags 0055                            _nvGetDiagnostic C47A  
                                 highIsr@i 0048                                ??_findEvent 01C2  
                                 _quantity BF28                      _handleSelfEnumeration 82A4  
              ??i2_updateModuleErrorStatus 002B                                 _APP_lowIsr C932  
                   sendProducedEvent@onOff 00A8                         __end_of_mnsService EF68  
                  __end_of_flushFlashBlock AA02                          writeEv@tableIndex 01D9  
                       __end_of_mnsPowerUp 819A                          _setOutputPosition AF58  
                             ??_showStatus 008D                                ??_pbUpTimer 00A4  
                         processOutputs@io 01D1                                   _writeNVM BB82  
               processEnumeration@newCanId 01C5                     APP_addEvent@forceOwnNN 01F0  
                              _setNewCanId B476                               ?_checkTxFifo 002B  
                             pollServos@io 01DB                                ??_completed 008F  
                              _sendMessage AC04                     __end_of_finaliseOutput C908  
                           startOutput@act 01E0                    __end_of_eventCoeService EEFC  
                            writeNVM@index 00A4                         ?_setOutputPosition 00A1  
                                quantity@q 008D                              writeNVM@value 00A7  
                              _OSCTUNEbits 0F9B                                 _INTCONbits 0FF2  
                              ??_leds_poll 009F                 ??_factoryResetGlobalEvents 008D  
                       _evtIdxToTableIndex C8DA                       ??i1_getBufferPointer 0062  
                    canGetDiagnostic@index 009A                                   memcpy@d1 008D  
                                 memcpy@s1 008F                     __end_of_processOutputs 6DB0  
                __end_of_APP_GetEventState 484A                   __end_of_getBufferPointer A478  
                          _eraseFlashBlock BBCE                          APP_addEvent@evVal 01EF  
            __end_of_checkRemoveTableEntry BE1E                          APP_addEvent@evNum 01EE  
                       __end_of_validStart BB82                        __end_of_startServos 98C8  
                  teachGetDiagnostic@index 0099                                ??_readInput 0091  
                      __end_of_startOutput B7D8                     _ackEventProcessMessage 67FE  
                  deleteTwoActionQueue@qty 008D                             ??_EEPROM_Write 0092  
                      ??_setOutputPosition 00A3                 __end_of_processEnumeration 7A38  
                              getHash@hash 00A8                         __end_of_pollServos 17C8  
                        ?_ackGetDiagnostic 0097                                   intlevel1 0000  
                                 intlevel2 0000                        ?_evtIdxToTableIndex 002B  
                            ?_getParameter 002B                                ??_inputScan 01D0  
                             _servoInBlock 00C9                                ??_mnsLowIsr 0060  
                     getNextWriteMessage@q 008D                           ?_canFactoryReset 002B  
                   APP_addEvent@tableIndex 01F1                                   numEv@num 00A1  
                             ?_EEPROM_Read 008D                           ___lldiv@dividend 0097  
                       ??_ackGetDiagnostic 0099            sendInvertedProducedEvent@invert 01D1  
                           ??_factoryReset 01F2                    __end_of_producerEsdData C700  
                              ??_nvPowerUp 009C                               ?_clearEvents 002B  
                         _ackEventCheckLen C804                      removeEvent@tableIndex 01D1  
                         ?_teachGetESDdata 002B                   __end_of_findServiceIndex B0AE  
                              _removeEvent C3FE                     APP_addEvent@nodeNumber 01EA  
                              _TXB0CONbits 0F20                              _doneTwoAction C91A  
                       __end_of_showStatus 8A4A             mnsTRrqnpnCallback@serviceIndex 01D8  
                    removeEvent@nodeNumber 01CD                                _TXB1CONbits 0F10  
                              _TXB2CONbits 0F00                         _paramBlock_absaddr 0820  
              deleteActionRange@tableIndex 01E4                         __end_of_priorities EE29  
                         ??_canSendMessage 009C                __end_of_teachProcessMessage 2994  
               __end_of_tableIndexToEvtIdx C8EE                  sodTRCallback@serviceIndex 01D8  
                     __end_of_canTransport EF7E                               ?_FLASH_Write 0090  
                  __end_of_producerPowerUp C31C                         tickGet@currentTime 0093  
                          ?_processActions 002B                              findService@id 0091  
                __end_of_setOutputPosition AFCA                                   powerUp@i 01CB  
                     ??_evtIdxToTableIndex 008D                          _pollTimedResponse AC82  
                    __end_of_teachCheckLen B662                   ??_producerProcessMessage 02CC  
                    setDigitalOutput@state 0097                         _eventTable_absaddr EF80  
                       ?_pollTimedResponse 002B                          FLASH_Read@address 008D  
                         _APP_factoryReset C698                            ?_finaliseOutput 008D  
                  nerdCallback@eventNumber 01DC                              ?_getTwoAction 002B  
                              _servoActive 00B2                           _ticksWhenStopped 0388  
                         ___lldiv@quotient 009F                       producerEsdData@index 008D  
                     _eventProducerService EEFC             sendInvertedProducedEvent@state 01D0  
                  _consumer2QGetDiagnostic C4F2                     ??_deleteTwoActionQueue 008D  
                        _deleteActionRange 997E                               ?_pbDownTimer 002B  
                              findEvent@en 01C6                                findEvent@nn 01C4  
                        writeEv@startIndex 01D5                       findEvent@eventNumber 01C0  
                                 writeEv@e 01D7                                   writeEv@f 01D8  
                          ?_processOutputs 002B                                ?_FLASH_Read 008D  
                            bootEsdData@id 008D                        ??_pollTimedResponse 01E7  
                         _mnsGetDiagnostic C4A2                               findService@i 0092  
                       ?_deleteActionRange 01DB               _timedResponseAllServicesFlag 00BD  
                              _setupTimer1 A178                                _setupTimer3 A0DA  
                         ?_isNoServoPulses 002B                               ?_findService 008D  
                   startMultiOutput@action 0091                  i2_updateModuleErrorStatus C8CE  
                           ??_getParameter 0092                               ?_bootEsdData 002B  
                        sendMessage2@data1 00A7                          sendMessage2@data2 00A8  
                        sendMessage3@data1 00A7                          sendMessage3@data2 00A8  
                        sendMessage3@data3 00A9                          sendMessage4@data1 01C6  
                        sendMessage4@data2 01C7                          sendMessage4@data3 01C8  
                        sendMessage4@data4 01C9                           _setDigitalOutput A752  
                        getBufferPointer@b 008F                          sendMessage5@data1 01C6  
                        sendMessage5@data2 01C7                          sendMessage5@data3 01C8  
                        sendMessage5@data4 01C9                          sendMessage5@data5 01CA  
                    _consumer2QDiagnostics 01BA                          sendMessage6@data1 01C6  
                        sendMessage6@data2 01C7                          sendMessage6@data3 01C8  
                        sendMessage6@data4 01C9                          sendMessage6@data5 01CA  
                        sendMessage6@data6 01CB                           bootPowerUp@found 0098  
                          _last_mode_flags 00C2                          sendMessage7@data1 01C6  
                        sendMessage7@data2 01C7                          sendMessage7@data3 01C8  
                        sendMessage7@data4 01C9                          sendMessage7@data5 01CA  
                        sendMessage7@data6 01CB                          sendMessage7@data7 01CC  
                           _checkPowerOnPb B720                           EEPROM_Read@index 008D  
                      ??_deleteActionRange 01DC                           _setNormalActions C90E  
                           ?_doneTwoAction 002B                            _last_mode_state 00C3  
                  __end_of_nvGetDiagnostic C4A2                               ?_bootPowerUp 002B  
                     validStart@tableIndex 009B                       nvTRnvrdCallback@step 01D9  
              ?_timer1DoneInterruptHandler 002B                       nvTRnvrdCallback@type 002B  
                              _pulseDelays 02A4                __end_of_getNextWriteMessage 8E8C  
