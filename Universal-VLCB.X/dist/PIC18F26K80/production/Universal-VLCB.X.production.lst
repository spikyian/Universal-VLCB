

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri May 17 21:53:58 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	_eventTable_text,global,ovrld,reloc=2,class=CODE,delta=1,noexec
     8                           	psect	_paramBlock_text,global,ovrld,reloc=2,class=CODE,delta=1,noexec
     9                           	psect	_name_text,global,ovrld,reloc=2,class=CODE,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1
   149                           	psect	text126,global,reloc=2,class=CODE,delta=1
   150                           	psect	text127,global,reloc=2,class=CODE,delta=1
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1
   152                           	psect	text129,global,reloc=2,class=CODE,delta=1
   153                           	psect	text130,global,reloc=2,class=CODE,delta=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	text136,global,reloc=2,class=CODE,delta=1
   160                           	psect	text137,global,reloc=2,class=CODE,delta=1
   161                           	psect	text138,global,reloc=2,class=CODE,delta=1,group=1
   162                           	psect	text139,global,reloc=2,class=CODE,delta=1,group=1
   163                           	psect	text140,global,reloc=2,class=CODE,delta=1
   164                           	psect	text141,global,reloc=2,class=CODE,delta=1
   165                           	psect	text142,global,reloc=2,class=CODE,delta=1
   166                           	psect	text143,global,reloc=2,class=CODE,delta=1
   167                           	psect	text144,global,reloc=2,class=CODE,delta=1
   168                           	psect	text145,global,reloc=2,class=CODE,delta=1
   169                           	psect	text146,global,reloc=2,class=CODE,delta=1
   170                           	psect	text147,global,reloc=2,class=CODE,delta=1,group=1
   171                           	psect	text148,global,reloc=2,class=CODE,delta=1,group=1
   172                           	psect	text149,global,reloc=2,class=CODE,delta=1,group=1
   173                           	psect	text150,global,reloc=2,class=CODE,delta=1
   174                           	psect	text151,global,reloc=2,class=CODE,delta=1
   175                           	psect	text152,global,reloc=2,class=CODE,delta=1
   176                           	psect	text153,global,reloc=2,class=CODE,delta=1
   177                           	psect	text154,global,reloc=2,class=CODE,delta=1
   178                           	psect	text155,global,reloc=2,class=CODE,delta=1
   179                           	psect	text156,global,reloc=2,class=CODE,delta=1
   180                           	psect	text157,global,reloc=2,class=CODE,delta=1
   181                           	psect	text158,global,reloc=2,class=CODE,delta=1
   182                           	psect	text159,global,reloc=2,class=CODE,delta=1
   183                           	psect	text160,global,reloc=2,class=CODE,delta=1
   184                           	psect	text161,global,reloc=2,class=CODE,delta=1
   185                           	psect	text162,global,reloc=2,class=CODE,delta=1
   186                           	psect	text163,global,reloc=2,class=CODE,delta=1
   187                           	psect	text164,global,reloc=2,class=CODE,delta=1
   188                           	psect	text165,global,reloc=2,class=CODE,delta=1
   189                           	psect	text166,global,reloc=2,class=CODE,delta=1
   190                           	psect	text167,global,reloc=2,class=CODE,delta=1
   191                           	psect	text168,global,reloc=2,class=CODE,delta=1
   192                           	psect	text169,global,reloc=2,class=CODE,delta=1
   193                           	psect	text170,global,reloc=2,class=CODE,delta=1
   194                           	psect	text171,global,reloc=2,class=CODE,delta=1
   195                           	psect	text172,global,reloc=2,class=CODE,delta=1
   196                           	psect	text173,global,reloc=2,class=CODE,delta=1
   197                           	psect	text174,global,reloc=2,class=CODE,delta=1
   198                           	psect	text175,global,reloc=2,class=CODE,delta=1
   199                           	psect	text176,global,reloc=2,class=CODE,delta=1
   200                           	psect	text177,global,reloc=2,class=CODE,delta=1
   201                           	psect	text178,global,reloc=2,class=CODE,delta=1
   202                           	psect	text179,global,reloc=2,class=CODE,delta=1
   203                           	psect	text180,global,reloc=2,class=CODE,delta=1
   204                           	psect	text181,global,reloc=2,class=CODE,delta=1
   205                           	psect	text182,global,reloc=2,class=CODE,delta=1
   206                           	psect	text183,global,reloc=2,class=CODE,delta=1
   207                           	psect	text184,global,reloc=2,class=CODE,delta=1
   208                           	psect	text185,global,reloc=2,class=CODE,delta=1
   209                           	psect	text186,global,reloc=2,class=CODE,delta=1
   210                           	psect	text187,global,reloc=2,class=CODE,delta=1
   211                           	psect	text188,global,reloc=2,class=CODE,delta=1
   212                           	psect	mainSec,global,reloc=2,class=CODE,delta=1
   213                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   214                           	psect	text190,global,reloc=2,class=CODE,delta=1
   215                           	psect	text191,global,reloc=2,class=CODE,delta=1
   216                           	psect	text192,global,reloc=2,class=CODE,delta=1
   217                           	psect	text193,global,reloc=2,class=CODE,delta=1
   218                           	psect	text194,global,reloc=2,class=CODE,delta=1
   219                           	psect	text195,global,reloc=2,class=CODE,delta=1
   220                           	psect	text196,global,reloc=2,class=CODE,delta=1
   221                           	psect	text197,global,reloc=2,class=CODE,delta=1
   222                           	psect	text198,global,reloc=2,class=CODE,delta=1
   223                           	psect	text199,global,reloc=2,class=CODE,delta=1
   224                           	psect	text200,global,reloc=2,class=CODE,delta=1
   225                           	psect	text201,global,reloc=2,class=CODE,delta=1
   226                           	psect	text202,global,reloc=2,class=CODE,delta=1
   227                           	psect	text203,global,reloc=2,class=CODE,delta=1
   228                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   229                           	psect	text205,global,reloc=2,class=CODE,delta=1
   230                           	psect	text206,global,reloc=2,class=CODE,delta=1
   231                           	psect	text207,global,reloc=2,class=CODE,delta=1
   232                           	psect	text208,global,reloc=2,class=CODE,delta=1
   233                           	psect	text209,global,reloc=2,class=CODE,delta=1
   234                           	psect	text210,global,reloc=2,class=CODE,delta=1
   235                           	psect	text211,global,reloc=2,class=CODE,delta=1
   236                           	psect	text212,global,reloc=2,class=CODE,delta=1
   237                           	psect	text213,global,reloc=2,class=CODE,delta=1
   238                           	psect	text214,global,reloc=2,class=CODE,delta=1
   239                           	psect	text215,global,reloc=2,class=CODE,delta=1
   240                           	psect	text216,global,reloc=2,class=CODE,delta=1
   241                           	psect	text217,global,reloc=2,class=CODE,delta=1
   242                           	psect	text218,global,reloc=2,class=CODE,delta=1
   243                           	psect	text219,global,reloc=2,class=CODE,delta=1
   244                           	psect	text220,global,reloc=2,class=CODE,delta=1
   245                           	psect	text221,global,reloc=2,class=CODE,delta=1
   246                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   247                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   248                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
   249                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   250   000000                     
   251                           ; Generated 12/10/2023 GMT
   252                           ; 
   253                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   254                           ; All rights reserved.
   255                           ; 
   256                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   257                           ; 
   258                           ; Redistribution and use in source and binary forms, with or without modification, are
   259                           ; permitted provided that the following conditions are met:
   260                           ; 
   261                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   262                           ;        conditions and the following disclaimer.
   263                           ; 
   264                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   265                           ;        of conditions and the following disclaimer in the documentation and/or other
   266                           ;        materials provided with the distribution. Publication is not required when
   267                           ;        this file is used in an embedded application.
   268                           ; 
   269                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   270                           ;        software without specific prior written permission.
   271                           ; 
   272                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   273                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   274                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   275                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   276                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   277                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   278                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   279                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   280                           ; 
   281                           ; 
   282                           ; Code-generator required, PIC18F26K80 Definitions
   283                           ; 
   284                           ; SFR Addresses
   285   000000                     
   286                           	psect	eeprom_data
   287   F003FF                     	org	1023	;# 
   288   F003FF  00                 	db	0	;# 
   289   000000                     _eventTable_absaddr	set	61312
   290                           
   291                           	psect	mediumconst
   292   00ED34                     __pmediumconst:
   293                           	callstack 0
   294   00ED34  00                 	db	0
   295   00ED35                     _priorities:
   296                           	callstack 0
   297   00ED35  01                 	db	1
   298   00ED36  01                 	db	1
   299   00ED37  03                 	db	3
   300   00ED38  02                 	db	2
   301   00ED39  02                 	db	2
   302   00ED3A  02                 	db	2
   303   00ED3B  02                 	db	2
   304   00ED3C  03                 	db	3
   305   00ED3D  02                 	db	2
   306   00ED3E  02                 	db	2
   307   00ED3F  03                 	db	3
   308   00ED40  01                 	db	1
   309   00ED41  00                 	db	0
   310   00ED42  00                 	db	0
   311   00ED43  01                 	db	1
   312   00ED44  01                 	db	1
   313   00ED45  01                 	db	1
   314   00ED46  01                 	db	1
   315   00ED47  01                 	db	1
   316   00ED48  01                 	db	1
   317   00ED49  01                 	db	1
   318   00ED4A  01                 	db	1
   319   00ED4B  01                 	db	1
   320   00ED4C  01                 	db	1
   321   00ED4D  01                 	db	1
   322   00ED4E  01                 	db	1
   323   00ED4F  01                 	db	1
   324   00ED50  01                 	db	1
   325   00ED51  01                 	db	1
   326   00ED52  01                 	db	1
   327   00ED53  01                 	db	1
   328   00ED54  01                 	db	1
   329   00ED55  01                 	db	1
   330   00ED56  01                 	db	1
   331   00ED57  01                 	db	1
   332   00ED58  01                 	db	1
   333   00ED59  01                 	db	1
   334   00ED5A  01                 	db	1
   335   00ED5B  01                 	db	1
   336   00ED5C  01                 	db	1
   337   00ED5D  01                 	db	1
   338   00ED5E  01                 	db	1
   339   00ED5F  01                 	db	1
   340   00ED60  01                 	db	1
   341   00ED61  01                 	db	1
   342   00ED62  01                 	db	1
   343   00ED63  01                 	db	1
   344   00ED64  01                 	db	1
   345   00ED65  01                 	db	1
   346   00ED66  01                 	db	1
   347   00ED67  01                 	db	1
   348   00ED68  01                 	db	1
   349   00ED69  01                 	db	1
   350   00ED6A  01                 	db	1
   351   00ED6B  01                 	db	1
   352   00ED6C  01                 	db	1
   353   00ED6D  01                 	db	1
   354   00ED6E  01                 	db	1
   355   00ED6F  01                 	db	1
   356   00ED70  01                 	db	1
   357   00ED71  01                 	db	1
   358   00ED72  01                 	db	1
   359   00ED73  01                 	db	1
   360   00ED74  00                 	db	0
   361   00ED75  01                 	db	1
   362   00ED76  01                 	db	1
   363   00ED77  01                 	db	1
   364   00ED78  01                 	db	1
   365   00ED79  01                 	db	1
   366   00ED7A  01                 	db	1
   367   00ED7B  01                 	db	1
   368   00ED7C  01                 	db	1
   369   00ED7D  01                 	db	1
   370   00ED7E  00                 	db	0
   371   00ED7F  01                 	db	1
   372   00ED80  01                 	db	1
   373   00ED81  00                 	db	0
   374   00ED82  00                 	db	0
   375   00ED83  00                 	db	0
   376   00ED84  00                 	db	0
   377   00ED85  00                 	db	0
   378   00ED86  00                 	db	0
   379   00ED87  00                 	db	0
   380   00ED88  00                 	db	0
   381   00ED89  00                 	db	0
   382   00ED8A  00                 	db	0
   383   00ED8B  00                 	db	0
   384   00ED8C  00                 	db	0
   385   00ED8D  00                 	db	0
   386   00ED8E  00                 	db	0
   387   00ED8F  00                 	db	0
   388   00ED90  00                 	db	0
   389   00ED91  00                 	db	0
   390   00ED92  01                 	db	1
   391   00ED93  01                 	db	1
   392   00ED94  01                 	db	1
   393   00ED95  01                 	db	1
   394   00ED96  01                 	db	1
   395   00ED97  03                 	db	3
   396   00ED98  01                 	db	1
   397   00ED99  01                 	db	1
   398   00ED9A  01                 	db	1
   399   00ED9B  01                 	db	1
   400   00ED9C  01                 	db	1
   401   00ED9D  01                 	db	1
   402   00ED9E  01                 	db	1
   403   00ED9F  01                 	db	1
   404   00EDA0  00                 	db	0
   405   00EDA1  00                 	db	0
   406   00EDA2  00                 	db	0
   407   00EDA3  00                 	db	0
   408   00EDA4  00                 	db	0
   409   00EDA5  00                 	db	0
   410   00EDA6  00                 	db	0
   411   00EDA7  00                 	db	0
   412   00EDA8  01                 	db	1
   413   00EDA9  00                 	db	0
   414   00EDAA  01                 	db	1
   415   00EDAB  01                 	db	1
   416   00EDAC  01                 	db	1
   417   00EDAD  01                 	db	1
   418   00EDAE  01                 	db	1
   419   00EDAF  01                 	db	1
   420   00EDB0  00                 	db	0
   421   00EDB1  01                 	db	1
   422   00EDB2  01                 	db	1
   423   00EDB3  01                 	db	1
   424   00EDB4  01                 	db	1
   425   00EDB5  01                 	db	1
   426   00EDB6  01                 	db	1
   427   00EDB7  01                 	db	1
   428   00EDB8  00                 	db	0
   429   00EDB9  01                 	db	1
   430   00EDBA  01                 	db	1
   431   00EDBB  01                 	db	1
   432   00EDBC  01                 	db	1
   433   00EDBD  01                 	db	1
   434   00EDBE  01                 	db	1
   435   00EDBF  00                 	db	0
   436   00EDC0  01                 	db	1
   437   00EDC1  00                 	db	0
   438   00EDC2  00                 	db	0
   439   00EDC3  00                 	db	0
   440   00EDC4  00                 	db	0
   441   00EDC5  00                 	db	0
   442   00EDC6  00                 	db	0
   443   00EDC7  00                 	db	0
   444   00EDC8  00                 	db	0
   445   00EDC9  00                 	db	0
   446   00EDCA  00                 	db	0
   447   00EDCB  00                 	db	0
   448   00EDCC  00                 	db	0
   449   00EDCD  00                 	db	0
   450   00EDCE  00                 	db	0
   451   00EDCF  00                 	db	0
   452   00EDD0  00                 	db	0
   453   00EDD1  01                 	db	1
   454   00EDD2  01                 	db	1
   455   00EDD3  01                 	db	1
   456   00EDD4  01                 	db	1
   457   00EDD5  01                 	db	1
   458   00EDD6  01                 	db	1
   459   00EDD7  01                 	db	1
   460   00EDD8  01                 	db	1
   461   00EDD9  01                 	db	1
   462   00EDDA  01                 	db	1
   463   00EDDB  01                 	db	1
   464   00EDDC  00                 	db	0
   465   00EDDD  00                 	db	0
   466   00EDDE  01                 	db	1
   467   00EDDF  01                 	db	1
   468   00EDE0  00                 	db	0
   469   00EDE1  00                 	db	0
   470   00EDE2  00                 	db	0
   471   00EDE3  00                 	db	0
   472   00EDE4  00                 	db	0
   473   00EDE5  00                 	db	0
   474   00EDE6  00                 	db	0
   475   00EDE7  00                 	db	0
   476   00EDE8  01                 	db	1
   477   00EDE9  00                 	db	0
   478   00EDEA  00                 	db	0
   479   00EDEB  01                 	db	1
   480   00EDEC  01                 	db	1
   481   00EDED  01                 	db	1
   482   00EDEE  00                 	db	0
   483   00EDEF  00                 	db	0
   484   00EDF0  00                 	db	0
   485   00EDF1  01                 	db	1
   486   00EDF2  01                 	db	1
   487   00EDF3  01                 	db	1
   488   00EDF4  01                 	db	1
   489   00EDF5  01                 	db	1
   490   00EDF6  01                 	db	1
   491   00EDF7  01                 	db	1
   492   00EDF8  00                 	db	0
   493   00EDF9  01                 	db	1
   494   00EDFA  01                 	db	1
   495   00EDFB  01                 	db	1
   496   00EDFC  01                 	db	1
   497   00EDFD  01                 	db	1
   498   00EDFE  01                 	db	1
   499   00EDFF  01                 	db	1
   500   00EE00  01                 	db	1
   501   00EE01  00                 	db	0
   502   00EE02  00                 	db	0
   503   00EE03  00                 	db	0
   504   00EE04  00                 	db	0
   505   00EE05  00                 	db	0
   506   00EE06  00                 	db	0
   507   00EE07  01                 	db	1
   508   00EE08  01                 	db	1
   509   00EE09  00                 	db	0
   510   00EE0A  00                 	db	0
   511   00EE0B  01                 	db	1
   512   00EE0C  01                 	db	1
   513   00EE0D  01                 	db	1
   514   00EE0E  00                 	db	0
   515   00EE0F  00                 	db	0
   516   00EE10  00                 	db	0
   517   00EE11  01                 	db	1
   518   00EE12  01                 	db	1
   519   00EE13  00                 	db	0
   520   00EE14  01                 	db	1
   521   00EE15  01                 	db	1
   522   00EE16  01                 	db	1
   523   00EE17  00                 	db	0
   524   00EE18  00                 	db	0
   525   00EE19  01                 	db	1
   526   00EE1A  00                 	db	0
   527   00EE1B  01                 	db	1
   528   00EE1C  01                 	db	1
   529   00EE1D  01                 	db	1
   530   00EE1E  01                 	db	1
   531   00EE1F  01                 	db	1
   532   00EE20  00                 	db	0
   533   00EE21  00                 	db	0
   534   00EE22  00                 	db	0
   535   00EE23  00                 	db	0
   536   00EE24  00                 	db	0
   537   00EE25  00                 	db	0
   538   00EE26  00                 	db	0
   539   00EE27  00                 	db	0
   540   00EE28  00                 	db	0
   541   00EE29  00                 	db	0
   542   00EE2A  00                 	db	0
   543   00EE2B  00                 	db	0
   544   00EE2C  00                 	db	0
   545   00EE2D  00                 	db	0
   546   00EE2E  00                 	db	0
   547   00EE2F  01                 	db	1
   548   00EE30  00                 	db	0
   549   00EE31  00                 	db	0
   550   00EE32  00                 	db	0
   551   00EE33  00                 	db	0
   552   00EE34  00                 	db	0
   553   00EE35                     __end_of_priorities:
   554                           	callstack 0
   555   00EE35                     _configs:
   556                           	callstack 0
   557   00EE35  0B                 	db	11
   558   00EE36  43                 	db	67
   559   00EE37  00                 	db	0
   560   00EE38  FF                 	db	255
   561   00EE39  0C                 	db	12
   562   00EE3A  43                 	db	67
   563   00EE3B  01                 	db	1
   564   00EE3C  FF                 	db	255
   565   00EE3D  0D                 	db	13
   566   00EE3E  43                 	db	67
   567   00EE3F  02                 	db	2
   568   00EE40  FF                 	db	255
   569   00EE41  0E                 	db	14
   570   00EE42  43                 	db	67
   571   00EE43  03                 	db	3
   572   00EE44  FF                 	db	255
   573   00EE45  0F                 	db	15
   574   00EE46  43                 	db	67
   575   00EE47  04                 	db	4
   576   00EE48  FF                 	db	255
   577   00EE49  10                 	db	16
   578   00EE4A  43                 	db	67
   579   00EE4B  05                 	db	5
   580   00EE4C  FF                 	db	255
   581   00EE4D  11                 	db	17
   582   00EE4E  43                 	db	67
   583   00EE4F  06                 	db	6
   584   00EE50  FF                 	db	255
   585   00EE51  12                 	db	18
   586   00EE52  43                 	db	67
   587   00EE53  07                 	db	7
   588   00EE54  FF                 	db	255
   589   00EE55  15                 	db	21
   590   00EE56  42                 	db	66
   591   00EE57  00                 	db	0
   592   00EE58  0A                 	db	10
   593   00EE59  16                 	db	22
   594   00EE5A  42                 	db	66
   595   00EE5B  01                 	db	1
   596   00EE5C  08                 	db	8
   597   00EE5D  19                 	db	25
   598   00EE5E  42                 	db	66
   599   00EE5F  04                 	db	4
   600   00EE60  09                 	db	9
   601   00EE61  1A                 	db	26
   602   00EE62  42                 	db	66
   603   00EE63  05                 	db	5
   604   00EE64  FF                 	db	255
   605   00EE65  03                 	db	3
   606   00EE66  41                 	db	65
   607   00EE67  01                 	db	1
   608   00EE68  01                 	db	1
   609   00EE69  02                 	db	2
   610   00EE6A  41                 	db	65
   611   00EE6B  00                 	db	0
   612   00EE6C  00                 	db	0
   613   00EE6D  05                 	db	5
   614   00EE6E  41                 	db	65
   615   00EE6F  03                 	db	3
   616   00EE70  03                 	db	3
   617   00EE71  07                 	db	7
   618   00EE72  41                 	db	65
   619   00EE73  05                 	db	5
   620   00EE74  04                 	db	4
   621   00EE75                     __end_of_configs:
   622                           	callstack 0
   623   000000                     _paramBlock_absaddr	set	2080
   624   00EE75                     _services:
   625                           	callstack 0
   626   00EE75  69                 	db	low _canService
   627   00EE76  EF                 	db	high _canService
   628   00EE77  57                 	db	low _mnsService
   629   00EE78  EF                 	db	high _mnsService
   630   00EE79  45                 	db	low _nvService
   631   00EE7A  EF                 	db	high _nvService
   632   00EE7B  33                 	db	low _bootService
   633   00EE7C  EF                 	db	high _bootService
   634   00EE7D  21                 	db	low _eventTeachService
   635   00EE7E  EF                 	db	high _eventTeachService
   636   00EE7F  0F                 	db	low _eventConsumer2QService
   637   00EE80  EF                 	db	high _eventConsumer2QService
   638   00EE81  FD                 	db	low _eventProducerService
   639   00EE82  EE                 	db	high _eventProducerService
   640   00EE83  EB                 	db	low _eventCoeService
   641   00EE84  EE                 	db	high _eventCoeService
   642   00EE85  D9                 	db	low _eventAckService
   643   00EE86  EE                 	db	high _eventAckService
   644   00EE87                     __end_of_services:
   645                           	callstack 0
   646   000000                     _name_absaddr	set	2120
   647   00EE87                     _canPri:
   648                           	callstack 0
   649   00EE87  70                 	db	112
   650   00EE88  60                 	db	96
   651   00EE89  50                 	db	80
   652   00EE8A  40                 	db	64
   653   00EE8B  00                 	db	0
   654   00EE8C                     __end_of_canPri:
   655                           	callstack 0
   656   00EE8C                     _channelDefaultNVs:
   657                           	callstack 0
   658   00EE8C  00                 	db	0
   659   00EE8D  06                 	db	6
   660   00EE8E  04                 	db	4
   661   00EE8F  04                 	db	4
   662   00EE90  00                 	db	0
   663   00EE91  00                 	db	0
   664   00EE92  00                 	db	0
   665   00EE93  01                 	db	1
   666   00EE94  06                 	db	6
   667   00EE95  00                 	db	0
   668   00EE96  00                 	db	0
   669   00EE97  00                 	db	0
   670   00EE98  00                 	db	0
   671   00EE99  00                 	db	0
   672   00EE9A  02                 	db	2
   673   00EE9B  06                 	db	6
   674   00EE9C  80                 	db	128
   675   00EE9D  80                 	db	128
   676   00EE9E  EB                 	db	235
   677   00EE9F  EB                 	db	235
   678   00EEA0  00                 	db	0
   679   00EEA1  03                 	db	3
   680   00EEA2  06                 	db	6
   681   00EEA3  80                 	db	128
   682   00EEA4  7F                 	db	127
   683   00EEA5  40                 	db	64
   684   00EEA6  03                 	db	3
   685   00EEA7  3C                 	db	60
   686   00EEA8  04                 	db	4
   687   00EEA9  06                 	db	6
   688   00EEAA  03                 	db	3
   689   00EEAB  80                 	db	128
   690   00EEAC  80                 	db	128
   691   00EEAD  80                 	db	128
   692   00EEAE  00                 	db	0
   693   00EEAF  05                 	db	5
   694   00EEB0  06                 	db	6
   695   00EEB1  80                 	db	128
   696   00EEB2  10                 	db	16
   697   00EEB3  00                 	db	0
   698   00EEB4  00                 	db	0
   699   00EEB5  00                 	db	0
   700   00EEB6  06                 	db	6
   701   00EEB7  06                 	db	6
   702   00EEB8  00                 	db	0
   703   00EEB9  7B                 	db	123
   704   00EEBA  20                 	db	32
   705   00EEBB  07                 	db	7
   706   00EEBC  FF                 	db	255
   707   00EEBD  07                 	db	7
   708   00EEBE  00                 	db	0
   709   00EEBF  00                 	db	0
   710   00EEC0  00                 	db	0
   711   00EEC1  00                 	db	0
   712   00EEC2  00                 	db	0
   713   00EEC3  00                 	db	0
   714   00EEC4  08                 	db	8
   715   00EEC5  00                 	db	0
   716   00EEC6  00                 	db	0
   717   00EEC7  00                 	db	0
   718   00EEC8  00                 	db	0
   719   00EEC9  00                 	db	0
   720   00EECA  00                 	db	0
   721   00EECB  09                 	db	9
   722   00EECC  00                 	db	0
   723   00EECD  00                 	db	0
   724   00EECE  00                 	db	0
   725   00EECF  00                 	db	0
   726   00EED0  00                 	db	0
   727   00EED1  00                 	db	0
   728   00EED2  0A                 	db	10
   729   00EED3  00                 	db	0
   730   00EED4  00                 	db	0
   731   00EED5  00                 	db	0
   732   00EED6  00                 	db	0
   733   00EED7  00                 	db	0
   734   00EED8  00                 	db	0
   735   00EED9                     __end_of_channelDefaultNVs:
   736                           	callstack 0
   737   00EED9                     _eventAckService:
   738                           	callstack 0
   739   00EED9  09                 	db	9
   740   00EEDA  01                 	db	1
   741   00EEDB  00                 	db	0
   742   00EEDC  00                 	db	0
   743   00EEDD  82                 	db	low _ackPowerUp
   744   00EEDE  C1                 	db	high _ackPowerUp
   745   00EEDF  96                 	db	low _ackEventProcessMessage
   746   00EEE0  67                 	db	high _ackEventProcessMessage
   747   00EEE1  00                 	db	0
   748   00EEE2  00                 	db	0
   749   00EEE3  00                 	db	0
   750   00EEE4  00                 	db	0
   751   00EEE5  00                 	db	0
   752   00EEE6  00                 	db	0
   753   00EEE7  00                 	db	0
   754   00EEE8  00                 	db	0
   755   00EEE9  84                 	db	low _ackGetDiagnostic
   756   00EEEA  BE                 	db	high _ackGetDiagnostic
   757   00EEEB                     __end_of_eventAckService:
   758                           	callstack 0
   759   00EEEB                     _eventCoeService:
   760                           	callstack 0
   761   00EEEB  08                 	db	8
   762   00EEEC  01                 	db	1
   763   00EEED  00                 	db	0
   764   00EEEE  00                 	db	0
   765   00EEEF  00                 	db	0
   766   00EEF0  00                 	db	0
   767   00EEF1  00                 	db	0
   768   00EEF2  00                 	db	0
   769   00EEF3  00                 	db	0
   770   00EEF4  00                 	db	0
   771   00EEF5  00                 	db	0
   772   00EEF6  00                 	db	0
   773   00EEF7  00                 	db	0
   774   00EEF8  00                 	db	0
   775   00EEF9  00                 	db	0
   776   00EEFA  00                 	db	0
   777   00EEFB  00                 	db	0
   778   00EEFC  00                 	db	0
   779   00EEFD                     __end_of_eventCoeService:
   780                           	callstack 0
   781   00EEFD                     _eventProducerService:
   782                           	callstack 0
   783   00EEFD  05                 	db	5
   784   00EEFE  01                 	db	1
   785   00EEFF  00                 	db	0
   786   00EF00  00                 	db	0
   787   00EF01  00                 	db	0
   788   00EF02  00                 	db	0
   789   00EF03  96                 	db	low _producerProcessMessage
   790   00EF04  60                 	db	high _producerProcessMessage
   791   00EF05  00                 	db	0
   792   00EF06  00                 	db	0
   793   00EF07  00                 	db	0
   794   00EF08  00                 	db	0
   795   00EF09  00                 	db	0
   796   00EF0A  00                 	db	0
   797   00EF0B  00                 	db	0
   798   00EF0C  00                 	db	0
   799   00EF0D  34                 	db	low _producerGetDiagnostic
   800   00EF0E  BC                 	db	high _producerGetDiagnostic
   801   00EF0F                     __end_of_eventProducerService:
   802                           	callstack 0
   803   00EF0F                     _eventConsumer2QService:
   804                           	callstack 0
   805   00EF0F  06                 	db	6
   806   00EF10  01                 	db	1
   807   00EF11  00                 	db	0
   808   00EF12  00                 	db	0
   809   00EF13  8C                 	db	low _consumer2QPowerUp
   810   00EF14  C2                 	db	high _consumer2QPowerUp
   811   00EF15  16                 	db	low _consumer2QProcessMessage
   812   00EF16  36                 	db	high _consumer2QProcessMessage
   813   00EF17  00                 	db	0
   814   00EF18  00                 	db	0
   815   00EF19  00                 	db	0
   816   00EF1A  00                 	db	0
   817   00EF1B  00                 	db	0
   818   00EF1C  00                 	db	0
   819   00EF1D  00                 	db	0
   820   00EF1E  00                 	db	0
   821   00EF1F  6A                 	db	low _consumer2QGetDiagnostic
   822   00EF20  BC                 	db	high _consumer2QGetDiagnostic
   823   00EF21                     __end_of_eventConsumer2QService:
   824                           	callstack 0
   825   00EF21                     _eventTeachService:
   826                           	callstack 0
   827   00EF21  04                 	db	4
   828   00EF22  01                 	db	1
   829   00EF23  B6                 	db	low _teachFactoryReset
   830   00EF24  C3                 	db	high _teachFactoryReset
   831   00EF25  94                 	db	low _teachPowerUp
   832   00EF26  BF                 	db	high _teachPowerUp
   833   00EF27  92                 	db	low _teachProcessMessage
   834   00EF28  22                 	db	high _teachProcessMessage
   835   00EF29  00                 	db	0
   836   00EF2A  00                 	db	0
   837   00EF2B  00                 	db	0
   838   00EF2C  00                 	db	0
   839   00EF2D  00                 	db	0
   840   00EF2E  00                 	db	0
   841   00EF2F  D2                 	db	low _teachGetESDdata
   842   00EF30  C0                 	db	high _teachGetESDdata
   843   00EF31  A0                 	db	low _teachGetDiagnostic
   844   00EF32  BC                 	db	high _teachGetDiagnostic
   845   00EF33                     __end_of_eventTeachService:
   846                           	callstack 0
   847   00EF33                     _bootService:
   848                           	callstack 0
   849   00EF33  0A                 	db	10
   850   00EF34  01                 	db	1
   851   00EF35  00                 	db	0
   852   00EF36  00                 	db	0
   853   00EF37  00                 	db	0
   854   00EF38  00                 	db	0
   855   00EF39  2E                 	db	low _bootProcessMessage
   856   00EF3A  A1                 	db	high _bootProcessMessage
   857   00EF3B  00                 	db	0
   858   00EF3C  00                 	db	0
   859   00EF3D  00                 	db	0
   860   00EF3E  00                 	db	0
   861   00EF3F  00                 	db	0
   862   00EF40  00                 	db	0
   863   00EF41  00                 	db	0
   864   00EF42  00                 	db	0
   865   00EF43  00                 	db	0
   866   00EF44  00                 	db	0
   867   00EF45                     __end_of_bootService:
   868                           	callstack 0
   869   00EF45                     _nvService:
   870                           	callstack 0
   871   00EF45  02                 	db	2
   872   00EF46  01                 	db	1
   873   00EF47  A8                 	db	low _nvFactoryReset
   874   00EF48  BA                 	db	high _nvFactoryReset
   875   00EF49  8A                 	db	low _nvPowerUp
   876   00EF4A  C0                 	db	high _nvPowerUp
   877   00EF4B  74                 	db	low _nvProcessMessage
   878   00EF4C  47                 	db	high _nvProcessMessage
   879   00EF4D  00                 	db	0
   880   00EF4E  00                 	db	0
   881   00EF4F  00                 	db	0
   882   00EF50  00                 	db	0
   883   00EF51  00                 	db	0
   884   00EF52  00                 	db	0
   885   00EF53  72                 	db	low _nvGetESDdata
   886   00EF54  C2                 	db	high _nvGetESDdata
   887   00EF55  56                 	db	low _nvGetDiagnostic
   888   00EF56  BE                 	db	high _nvGetDiagnostic
   889   00EF57                     __end_of_nvService:
   890                           	callstack 0
   891   00EF57                     _mnsService:
   892                           	callstack 0
   893   00EF57  01                 	db	1
   894   00EF58  01                 	db	1
   895   00EF59  A8                 	db	low _mnsFactoryReset
   896   00EF5A  AA                 	db	high _mnsFactoryReset
   897   00EF5B  74                 	db	low _mnsPowerUp
   898   00EF5C  7F                 	db	high _mnsPowerUp
   899   00EF5D  66                 	db	low _mnsProcessMessage
   900   00EF5E  17                 	db	high _mnsProcessMessage
   901   00EF5F  48                 	db	low _mnsPoll
   902   00EF60  44                 	db	high _mnsPoll
   903   00EF61  00                 	db	0
   904   00EF62  00                 	db	0
   905   00EF63  12                 	db	low _mnsLowIsr
   906   00EF64  C3                 	db	high _mnsLowIsr
   907   00EF65  00                 	db	0
   908   00EF66  00                 	db	0
   909   00EF67  FE                 	db	low _mnsGetDiagnostic
   910   00EF68  BB                 	db	high _mnsGetDiagnostic
   911   00EF69                     __end_of_mnsService:
   912                           	callstack 0
   913   00EF69                     _canService:
   914                           	callstack 0
   915   00EF69  03                 	db	3
   916   00EF6A  01                 	db	1
   917   00EF6B  02                 	db	low _canFactoryReset
   918   00EF6C  C2                 	db	high _canFactoryReset
   919   00EF6D  82                 	db	low _canPowerUp
   920   00EF6E  69                 	db	high _canPowerUp
   921   00EF6F  FC                 	db	low _canProcessMessage
   922   00EF70  99                 	db	high _canProcessMessage
   923   00EF71  00                 	db	0
   924   00EF72  00                 	db	0
   925   00EF73  C2                 	db	low _canIsr
   926   00EF74  C1                 	db	high _canIsr
   927   00EF75  C2                 	db	low _canIsr
   928   00EF76  C1                 	db	high _canIsr
   929   00EF77  58                 	db	low _canEsdData
   930   00EF78  C2                 	db	high _canEsdData
   931   00EF79  C8                 	db	low _canGetDiagnostic
   932   00EF7A  BB                 	db	high _canGetDiagnostic
   933   00EF7B                     __end_of_canService:
   934                           	callstack 0
   935   00EF7B                     _canTransport:
   936                           	callstack 0
   937   00EF7B  62                 	db	low _canSendMessage
   938   00EF7C  50                 	db	high _canSendMessage
   939   00EF7D  B4                 	db	low _canReceiveMessage
   940   00EF7E  70                 	db	high _canReceiveMessage
   941   00EF7F                     __end_of_canTransport:
   942                           	callstack 0
   943   000000                     _eventTable_absaddr	set	61312
   944   00EF7F  00                 	db	0	; dummy byte at the end
   945   000000                     
   946                           	psect	_eventTable_text
   947   00EF80                     __p_eventTable_text:
   948                           	callstack 0
   949   00EF80                     _eventTable:
   950                           	callstack 0
   951   00EF80  FF                 	db	255
   952   00EF81  FF                 	db	255
   953   00EF82  FF                 	db	255
   954   00EF83  FF                 	db	255
   955   00EF84  FF                 	db	255
   956   00EF85  FF                 	db	255
   957   00EF86  FF                 	db	255
   958   00EF87  FF                 	db	255
   959   00EF88  FF                 	db	255
   960   00EF89  FF                 	db	255
   961   00EF8A  FF                 	db	255
   962   00EF8B  FF                 	db	255
   963   00EF8C  FF                 	db	255
   964   00EF8D  FF                 	db	255
   965   00EF8E  FF                 	db	255
   966   00EF8F  FF                 	db	255
   967   00EF90  FF                 	db	255
   968   00EF91  FF                 	db	255
   969   00EF92  FF                 	db	255
   970   00EF93  FF                 	db	255
   971   00EF94  FF                 	db	255
   972   00EF95  FF                 	db	255
   973   00EF96  FF                 	db	255
   974   00EF97  FF                 	db	255
   975   00EF98  FF                 	db	255
   976   00EF99  FF                 	db	255
   977   00EF9A  FF                 	db	255
   978   00EF9B  FF                 	db	255
   979   00EF9C  FF                 	db	255
   980   00EF9D  FF                 	db	255
   981   00EF9E  FF                 	db	255
   982   00EF9F  FF                 	db	255
   983   00EFA0  FF                 	db	255
   984   00EFA1  FF                 	db	255
   985   00EFA2  FF                 	db	255
   986   00EFA3  FF                 	db	255
   987   00EFA4  FF                 	db	255
   988   00EFA5  FF                 	db	255
   989   00EFA6  FF                 	db	255
   990   00EFA7  FF                 	db	255
   991   00EFA8  FF                 	db	255
   992   00EFA9  FF                 	db	255
   993   00EFAA  FF                 	db	255
   994   00EFAB  FF                 	db	255
   995   00EFAC  FF                 	db	255
   996   00EFAD  FF                 	db	255
   997   00EFAE  FF                 	db	255
   998   00EFAF  FF                 	db	255
   999   00EFB0  FF                 	db	255
  1000   00EFB1  FF                 	db	255
  1001   00EFB2  FF                 	db	255
  1002   00EFB3  FF                 	db	255
  1003   00EFB4  FF                 	db	255
  1004   00EFB5  FF                 	db	255
  1005   00EFB6  FF                 	db	255
  1006   00EFB7  FF                 	db	255
  1007   00EFB8  FF                 	db	255
  1008   00EFB9  FF                 	db	255
  1009   00EFBA  FF                 	db	255
  1010   00EFBB  FF                 	db	255
  1011   00EFBC  FF                 	db	255
  1012   00EFBD  FF                 	db	255
  1013   00EFBE  FF                 	db	255
  1014   00EFBF  FF                 	db	255
  1015   00EFC0  FF                 	db	255
  1016   00EFC1  FF                 	db	255
  1017   00EFC2  FF                 	db	255
  1018   00EFC3  FF                 	db	255
  1019   00EFC4  FF                 	db	255
  1020   00EFC5  FF                 	db	255
  1021   00EFC6  FF                 	db	255
  1022   00EFC7  FF                 	db	255
  1023   00EFC8  FF                 	db	255
  1024   00EFC9  FF                 	db	255
  1025   00EFCA  FF                 	db	255
  1026   00EFCB  FF                 	db	255
  1027   00EFCC  FF                 	db	255
  1028   00EFCD  FF                 	db	255
  1029   00EFCE  FF                 	db	255
  1030   00EFCF  FF                 	db	255
  1031   00EFD0  FF                 	db	255
  1032   00EFD1  FF                 	db	255
  1033   00EFD2  FF                 	db	255
  1034   00EFD3  FF                 	db	255
  1035   00EFD4  FF                 	db	255
  1036   00EFD5  FF                 	db	255
  1037   00EFD6  FF                 	db	255
  1038   00EFD7  FF                 	db	255
  1039   00EFD8  FF                 	db	255
  1040   00EFD9  FF                 	db	255
  1041   00EFDA  FF                 	db	255
  1042   00EFDB  FF                 	db	255
  1043   00EFDC  FF                 	db	255
  1044   00EFDD  FF                 	db	255
  1045   00EFDE  FF                 	db	255
  1046   00EFDF  FF                 	db	255
  1047   00EFE0  FF                 	db	255
  1048   00EFE1  FF                 	db	255
  1049   00EFE2  FF                 	db	255
  1050   00EFE3  FF                 	db	255
  1051   00EFE4  FF                 	db	255
  1052   00EFE5  FF                 	db	255
  1053   00EFE6  FF                 	db	255
  1054   00EFE7  FF                 	db	255
  1055   00EFE8  FF                 	db	255
  1056   00EFE9  FF                 	db	255
  1057   00EFEA  FF                 	db	255
  1058   00EFEB  FF                 	db	255
  1059   00EFEC  FF                 	db	255
  1060   00EFED  FF                 	db	255
  1061   00EFEE  FF                 	db	255
  1062   00EFEF  FF                 	db	255
  1063   00EFF0  FF                 	db	255
  1064   00EFF1  FF                 	db	255
  1065   00EFF2  FF                 	db	255
  1066   00EFF3  FF                 	db	255
  1067   00EFF4  FF                 	db	255
  1068   00EFF5  FF                 	db	255
  1069   00EFF6  FF                 	db	255
  1070   00EFF7  FF                 	db	255
  1071   00EFF8  FF                 	db	255
  1072   00EFF9  FF                 	db	255
  1073   00EFFA  FF                 	db	255
  1074   00EFFB  FF                 	db	255
  1075   00EFFC  FF                 	db	255
  1076   00EFFD  FF                 	db	255
  1077   00EFFE  FF                 	db	255
  1078   00EFFF  FF                 	db	255
  1079   00F000  FF                 	db	255
  1080   00F001  FF                 	db	255
  1081   00F002  FF                 	db	255
  1082   00F003  FF                 	db	255
  1083   00F004  FF                 	db	255
  1084   00F005  FF                 	db	255
  1085   00F006  FF                 	db	255
  1086   00F007  FF                 	db	255
  1087   00F008  FF                 	db	255
  1088   00F009  FF                 	db	255
  1089   00F00A  FF                 	db	255
  1090   00F00B  FF                 	db	255
  1091   00F00C  FF                 	db	255
  1092   00F00D  FF                 	db	255
  1093   00F00E  FF                 	db	255
  1094   00F00F  FF                 	db	255
  1095   00F010  FF                 	db	255
  1096   00F011  FF                 	db	255
  1097   00F012  FF                 	db	255
  1098   00F013  FF                 	db	255
  1099   00F014  FF                 	db	255
  1100   00F015  FF                 	db	255
  1101   00F016  FF                 	db	255
  1102   00F017  FF                 	db	255
  1103   00F018  FF                 	db	255
  1104   00F019  FF                 	db	255
  1105   00F01A  FF                 	db	255
  1106   00F01B  FF                 	db	255
  1107   00F01C  FF                 	db	255
  1108   00F01D  FF                 	db	255
  1109   00F01E  FF                 	db	255
  1110   00F01F  FF                 	db	255
  1111   00F020  FF                 	db	255
  1112   00F021  FF                 	db	255
  1113   00F022  FF                 	db	255
  1114   00F023  FF                 	db	255
  1115   00F024  FF                 	db	255
  1116   00F025  FF                 	db	255
  1117   00F026  FF                 	db	255
  1118   00F027  FF                 	db	255
  1119   00F028  FF                 	db	255
  1120   00F029  FF                 	db	255
  1121   00F02A  FF                 	db	255
  1122   00F02B  FF                 	db	255
  1123   00F02C  FF                 	db	255
  1124   00F02D  FF                 	db	255
  1125   00F02E  FF                 	db	255
  1126   00F02F  FF                 	db	255
  1127   00F030  FF                 	db	255
  1128   00F031  FF                 	db	255
  1129   00F032  FF                 	db	255
  1130   00F033  FF                 	db	255
  1131   00F034  FF                 	db	255
  1132   00F035  FF                 	db	255
  1133   00F036  FF                 	db	255
  1134   00F037  FF                 	db	255
  1135   00F038  FF                 	db	255
  1136   00F039  FF                 	db	255
  1137   00F03A  FF                 	db	255
  1138   00F03B  FF                 	db	255
  1139   00F03C  FF                 	db	255
  1140   00F03D  FF                 	db	255
  1141   00F03E  FF                 	db	255
  1142   00F03F  FF                 	db	255
  1143   00F040  FF                 	db	255
  1144   00F041  FF                 	db	255
  1145   00F042  FF                 	db	255
  1146   00F043  FF                 	db	255
  1147   00F044  FF                 	db	255
  1148   00F045  FF                 	db	255
  1149   00F046  FF                 	db	255
  1150   00F047  FF                 	db	255
  1151   00F048  FF                 	db	255
  1152   00F049  FF                 	db	255
  1153   00F04A  FF                 	db	255
  1154   00F04B  FF                 	db	255
  1155   00F04C  FF                 	db	255
  1156   00F04D  FF                 	db	255
  1157   00F04E  FF                 	db	255
  1158   00F04F  FF                 	db	255
  1159   00F050  FF                 	db	255
  1160   00F051  FF                 	db	255
  1161   00F052  FF                 	db	255
  1162   00F053  FF                 	db	255
  1163   00F054  FF                 	db	255
  1164   00F055  FF                 	db	255
  1165   00F056  FF                 	db	255
  1166   00F057  FF                 	db	255
  1167   00F058  FF                 	db	255
  1168   00F059  FF                 	db	255
  1169   00F05A  FF                 	db	255
  1170   00F05B  FF                 	db	255
  1171   00F05C  FF                 	db	255
  1172   00F05D  FF                 	db	255
  1173   00F05E  FF                 	db	255
  1174   00F05F  FF                 	db	255
  1175   00F060  FF                 	db	255
  1176   00F061  FF                 	db	255
  1177   00F062  FF                 	db	255
  1178   00F063  FF                 	db	255
  1179   00F064  FF                 	db	255
  1180   00F065  FF                 	db	255
  1181   00F066  FF                 	db	255
  1182   00F067  FF                 	db	255
  1183   00F068  FF                 	db	255
  1184   00F069  FF                 	db	255
  1185   00F06A  FF                 	db	255
  1186   00F06B  FF                 	db	255
  1187   00F06C  FF                 	db	255
  1188   00F06D  FF                 	db	255
  1189   00F06E  FF                 	db	255
  1190   00F06F  FF                 	db	255
  1191   00F070  FF                 	db	255
  1192   00F071  FF                 	db	255
  1193   00F072  FF                 	db	255
  1194   00F073  FF                 	db	255
  1195   00F074  FF                 	db	255
  1196   00F075  FF                 	db	255
  1197   00F076  FF                 	db	255
  1198   00F077  FF                 	db	255
  1199   00F078  FF                 	db	255
  1200   00F079  FF                 	db	255
  1201   00F07A  FF                 	db	255
  1202   00F07B  FF                 	db	255
  1203   00F07C  FF                 	db	255
  1204   00F07D  FF                 	db	255
  1205   00F07E  FF                 	db	255
  1206   00F07F  FF                 	db	255
  1207   00F080  FF                 	db	255
  1208   00F081  FF                 	db	255
  1209   00F082  FF                 	db	255
  1210   00F083  FF                 	db	255
  1211   00F084  FF                 	db	255
  1212   00F085  FF                 	db	255
  1213   00F086  FF                 	db	255
  1214   00F087  FF                 	db	255
  1215   00F088  FF                 	db	255
  1216   00F089  FF                 	db	255
  1217   00F08A  FF                 	db	255
  1218   00F08B  FF                 	db	255
  1219   00F08C  FF                 	db	255
  1220   00F08D  FF                 	db	255
  1221   00F08E  FF                 	db	255
  1222   00F08F  FF                 	db	255
  1223   00F090  FF                 	db	255
  1224   00F091  FF                 	db	255
  1225   00F092  FF                 	db	255
  1226   00F093  FF                 	db	255
  1227   00F094  FF                 	db	255
  1228   00F095  FF                 	db	255
  1229   00F096  FF                 	db	255
  1230   00F097  FF                 	db	255
  1231   00F098  FF                 	db	255
  1232   00F099  FF                 	db	255
  1233   00F09A  FF                 	db	255
  1234   00F09B  FF                 	db	255
  1235   00F09C  FF                 	db	255
  1236   00F09D  FF                 	db	255
  1237   00F09E  FF                 	db	255
  1238   00F09F  FF                 	db	255
  1239   00F0A0  FF                 	db	255
  1240   00F0A1  FF                 	db	255
  1241   00F0A2  FF                 	db	255
  1242   00F0A3  FF                 	db	255
  1243   00F0A4  FF                 	db	255
  1244   00F0A5  FF                 	db	255
  1245   00F0A6  FF                 	db	255
  1246   00F0A7  FF                 	db	255
  1247   00F0A8  FF                 	db	255
  1248   00F0A9  FF                 	db	255
  1249   00F0AA  FF                 	db	255
  1250   00F0AB  FF                 	db	255
  1251   00F0AC  FF                 	db	255
  1252   00F0AD  FF                 	db	255
  1253   00F0AE  FF                 	db	255
  1254   00F0AF  FF                 	db	255
  1255   00F0B0  FF                 	db	255
  1256   00F0B1  FF                 	db	255
  1257   00F0B2  FF                 	db	255
  1258   00F0B3  FF                 	db	255
  1259   00F0B4  FF                 	db	255
  1260   00F0B5  FF                 	db	255
  1261   00F0B6  FF                 	db	255
  1262   00F0B7  FF                 	db	255
  1263   00F0B8  FF                 	db	255
  1264   00F0B9  FF                 	db	255
  1265   00F0BA  FF                 	db	255
  1266   00F0BB  FF                 	db	255
  1267   00F0BC  FF                 	db	255
  1268   00F0BD  FF                 	db	255
  1269   00F0BE  FF                 	db	255
  1270   00F0BF  FF                 	db	255
  1271   00F0C0  FF                 	db	255
  1272   00F0C1  FF                 	db	255
  1273   00F0C2  FF                 	db	255
  1274   00F0C3  FF                 	db	255
  1275   00F0C4  FF                 	db	255
  1276   00F0C5  FF                 	db	255
  1277   00F0C6  FF                 	db	255
  1278   00F0C7  FF                 	db	255
  1279   00F0C8  FF                 	db	255
  1280   00F0C9  FF                 	db	255
  1281   00F0CA  FF                 	db	255
  1282   00F0CB  FF                 	db	255
  1283   00F0CC  FF                 	db	255
  1284   00F0CD  FF                 	db	255
  1285   00F0CE  FF                 	db	255
  1286   00F0CF  FF                 	db	255
  1287   00F0D0  FF                 	db	255
  1288   00F0D1  FF                 	db	255
  1289   00F0D2  FF                 	db	255
  1290   00F0D3  FF                 	db	255
  1291   00F0D4  FF                 	db	255
  1292   00F0D5  FF                 	db	255
  1293   00F0D6  FF                 	db	255
  1294   00F0D7  FF                 	db	255
  1295   00F0D8  FF                 	db	255
  1296   00F0D9  FF                 	db	255
  1297   00F0DA  FF                 	db	255
  1298   00F0DB  FF                 	db	255
  1299   00F0DC  FF                 	db	255
  1300   00F0DD  FF                 	db	255
  1301   00F0DE  FF                 	db	255
  1302   00F0DF  FF                 	db	255
  1303   00F0E0  FF                 	db	255
  1304   00F0E1  FF                 	db	255
  1305   00F0E2  FF                 	db	255
  1306   00F0E3  FF                 	db	255
  1307   00F0E4  FF                 	db	255
  1308   00F0E5  FF                 	db	255
  1309   00F0E6  FF                 	db	255
  1310   00F0E7  FF                 	db	255
  1311   00F0E8  FF                 	db	255
  1312   00F0E9  FF                 	db	255
  1313   00F0EA  FF                 	db	255
  1314   00F0EB  FF                 	db	255
  1315   00F0EC  FF                 	db	255
  1316   00F0ED  FF                 	db	255
  1317   00F0EE  FF                 	db	255
  1318   00F0EF  FF                 	db	255
  1319   00F0F0  FF                 	db	255
  1320   00F0F1  FF                 	db	255
  1321   00F0F2  FF                 	db	255
  1322   00F0F3  FF                 	db	255
  1323   00F0F4  FF                 	db	255
  1324   00F0F5  FF                 	db	255
  1325   00F0F6  FF                 	db	255
  1326   00F0F7  FF                 	db	255
  1327   00F0F8  FF                 	db	255
  1328   00F0F9  FF                 	db	255
  1329   00F0FA  FF                 	db	255
  1330   00F0FB  FF                 	db	255
  1331   00F0FC  FF                 	db	255
  1332   00F0FD  FF                 	db	255
  1333   00F0FE  FF                 	db	255
  1334   00F0FF  FF                 	db	255
  1335   00F100  FF                 	db	255
  1336   00F101  FF                 	db	255
  1337   00F102  FF                 	db	255
  1338   00F103  FF                 	db	255
  1339   00F104  FF                 	db	255
  1340   00F105  FF                 	db	255
  1341   00F106  FF                 	db	255
  1342   00F107  FF                 	db	255
  1343   00F108  FF                 	db	255
  1344   00F109  FF                 	db	255
  1345   00F10A  FF                 	db	255
  1346   00F10B  FF                 	db	255
  1347   00F10C  FF                 	db	255
  1348   00F10D  FF                 	db	255
  1349   00F10E  FF                 	db	255
  1350   00F10F  FF                 	db	255
  1351   00F110  FF                 	db	255
  1352   00F111  FF                 	db	255
  1353   00F112  FF                 	db	255
  1354   00F113  FF                 	db	255
  1355   00F114  FF                 	db	255
  1356   00F115  FF                 	db	255
  1357   00F116  FF                 	db	255
  1358   00F117  FF                 	db	255
  1359   00F118  FF                 	db	255
  1360   00F119  FF                 	db	255
  1361   00F11A  FF                 	db	255
  1362   00F11B  FF                 	db	255
  1363   00F11C  FF                 	db	255
  1364   00F11D  FF                 	db	255
  1365   00F11E  FF                 	db	255
  1366   00F11F  FF                 	db	255
  1367   00F120  FF                 	db	255
  1368   00F121  FF                 	db	255
  1369   00F122  FF                 	db	255
  1370   00F123  FF                 	db	255
  1371   00F124  FF                 	db	255
  1372   00F125  FF                 	db	255
  1373   00F126  FF                 	db	255
  1374   00F127  FF                 	db	255
  1375   00F128  FF                 	db	255
  1376   00F129  FF                 	db	255
  1377   00F12A  FF                 	db	255
  1378   00F12B  FF                 	db	255
  1379   00F12C  FF                 	db	255
  1380   00F12D  FF                 	db	255
  1381   00F12E  FF                 	db	255
  1382   00F12F  FF                 	db	255
  1383   00F130  FF                 	db	255
  1384   00F131  FF                 	db	255
  1385   00F132  FF                 	db	255
  1386   00F133  FF                 	db	255
  1387   00F134  FF                 	db	255
  1388   00F135  FF                 	db	255
  1389   00F136  FF                 	db	255
  1390   00F137  FF                 	db	255
  1391   00F138  FF                 	db	255
  1392   00F139  FF                 	db	255
  1393   00F13A  FF                 	db	255
  1394   00F13B  FF                 	db	255
  1395   00F13C  FF                 	db	255
  1396   00F13D  FF                 	db	255
  1397   00F13E  FF                 	db	255
  1398   00F13F  FF                 	db	255
  1399   00F140  FF                 	db	255
  1400   00F141  FF                 	db	255
  1401   00F142  FF                 	db	255
  1402   00F143  FF                 	db	255
  1403   00F144  FF                 	db	255
  1404   00F145  FF                 	db	255
  1405   00F146  FF                 	db	255
  1406   00F147  FF                 	db	255
  1407   00F148  FF                 	db	255
  1408   00F149  FF                 	db	255
  1409   00F14A  FF                 	db	255
  1410   00F14B  FF                 	db	255
  1411   00F14C  FF                 	db	255
  1412   00F14D  FF                 	db	255
  1413   00F14E  FF                 	db	255
  1414   00F14F  FF                 	db	255
  1415   00F150  FF                 	db	255
  1416   00F151  FF                 	db	255
  1417   00F152  FF                 	db	255
  1418   00F153  FF                 	db	255
  1419   00F154  FF                 	db	255
  1420   00F155  FF                 	db	255
  1421   00F156  FF                 	db	255
  1422   00F157  FF                 	db	255
  1423   00F158  FF                 	db	255
  1424   00F159  FF                 	db	255
  1425   00F15A  FF                 	db	255
  1426   00F15B  FF                 	db	255
  1427   00F15C  FF                 	db	255
  1428   00F15D  FF                 	db	255
  1429   00F15E  FF                 	db	255
  1430   00F15F  FF                 	db	255
  1431   00F160  FF                 	db	255
  1432   00F161  FF                 	db	255
  1433   00F162  FF                 	db	255
  1434   00F163  FF                 	db	255
  1435   00F164  FF                 	db	255
  1436   00F165  FF                 	db	255
  1437   00F166  FF                 	db	255
  1438   00F167  FF                 	db	255
  1439   00F168  FF                 	db	255
  1440   00F169  FF                 	db	255
  1441   00F16A  FF                 	db	255
  1442   00F16B  FF                 	db	255
  1443   00F16C  FF                 	db	255
  1444   00F16D  FF                 	db	255
  1445   00F16E  FF                 	db	255
  1446   00F16F  FF                 	db	255
  1447   00F170  FF                 	db	255
  1448   00F171  FF                 	db	255
  1449   00F172  FF                 	db	255
  1450   00F173  FF                 	db	255
  1451   00F174  FF                 	db	255
  1452   00F175  FF                 	db	255
  1453   00F176  FF                 	db	255
  1454   00F177  FF                 	db	255
  1455   00F178  FF                 	db	255
  1456   00F179  FF                 	db	255
  1457   00F17A  FF                 	db	255
  1458   00F17B  FF                 	db	255
  1459   00F17C  FF                 	db	255
  1460   00F17D  FF                 	db	255
  1461   00F17E  FF                 	db	255
  1462   00F17F  FF                 	db	255
  1463   00F180  FF                 	db	255
  1464   00F181  FF                 	db	255
  1465   00F182  FF                 	db	255
  1466   00F183  FF                 	db	255
  1467   00F184  FF                 	db	255
  1468   00F185  FF                 	db	255
  1469   00F186  FF                 	db	255
  1470   00F187  FF                 	db	255
  1471   00F188  FF                 	db	255
  1472   00F189  FF                 	db	255
  1473   00F18A  FF                 	db	255
  1474   00F18B  FF                 	db	255
  1475   00F18C  FF                 	db	255
  1476   00F18D  FF                 	db	255
  1477   00F18E  FF                 	db	255
  1478   00F18F  FF                 	db	255
  1479   00F190  FF                 	db	255
  1480   00F191  FF                 	db	255
  1481   00F192  FF                 	db	255
  1482   00F193  FF                 	db	255
  1483   00F194  FF                 	db	255
  1484   00F195  FF                 	db	255
  1485   00F196  FF                 	db	255
  1486   00F197  FF                 	db	255
  1487   00F198  FF                 	db	255
  1488   00F199  FF                 	db	255
  1489   00F19A  FF                 	db	255
  1490   00F19B  FF                 	db	255
  1491   00F19C  FF                 	db	255
  1492   00F19D  FF                 	db	255
  1493   00F19E  FF                 	db	255
  1494   00F19F  FF                 	db	255
  1495   00F1A0  FF                 	db	255
  1496   00F1A1  FF                 	db	255
  1497   00F1A2  FF                 	db	255
  1498   00F1A3  FF                 	db	255
  1499   00F1A4  FF                 	db	255
  1500   00F1A5  FF                 	db	255
  1501   00F1A6  FF                 	db	255
  1502   00F1A7  FF                 	db	255
  1503   00F1A8  FF                 	db	255
  1504   00F1A9  FF                 	db	255
  1505   00F1AA  FF                 	db	255
  1506   00F1AB  FF                 	db	255
  1507   00F1AC  FF                 	db	255
  1508   00F1AD  FF                 	db	255
  1509   00F1AE  FF                 	db	255
  1510   00F1AF  FF                 	db	255
  1511   00F1B0  FF                 	db	255
  1512   00F1B1  FF                 	db	255
  1513   00F1B2  FF                 	db	255
  1514   00F1B3  FF                 	db	255
  1515   00F1B4  FF                 	db	255
  1516   00F1B5  FF                 	db	255
  1517   00F1B6  FF                 	db	255
  1518   00F1B7  FF                 	db	255
  1519   00F1B8  FF                 	db	255
  1520   00F1B9  FF                 	db	255
  1521   00F1BA  FF                 	db	255
  1522   00F1BB  FF                 	db	255
  1523   00F1BC  FF                 	db	255
  1524   00F1BD  FF                 	db	255
  1525   00F1BE  FF                 	db	255
  1526   00F1BF  FF                 	db	255
  1527   00F1C0  FF                 	db	255
  1528   00F1C1  FF                 	db	255
  1529   00F1C2  FF                 	db	255
  1530   00F1C3  FF                 	db	255
  1531   00F1C4  FF                 	db	255
  1532   00F1C5  FF                 	db	255
  1533   00F1C6  FF                 	db	255
  1534   00F1C7  FF                 	db	255
  1535   00F1C8  FF                 	db	255
  1536   00F1C9  FF                 	db	255
  1537   00F1CA  FF                 	db	255
  1538   00F1CB  FF                 	db	255
  1539   00F1CC  FF                 	db	255
  1540   00F1CD  FF                 	db	255
  1541   00F1CE  FF                 	db	255
  1542   00F1CF  FF                 	db	255
  1543   00F1D0  FF                 	db	255
  1544   00F1D1  FF                 	db	255
  1545   00F1D2  FF                 	db	255
  1546   00F1D3  FF                 	db	255
  1547   00F1D4  FF                 	db	255
  1548   00F1D5  FF                 	db	255
  1549   00F1D6  FF                 	db	255
  1550   00F1D7  FF                 	db	255
  1551   00F1D8  FF                 	db	255
  1552   00F1D9  FF                 	db	255
  1553   00F1DA  FF                 	db	255
  1554   00F1DB  FF                 	db	255
  1555   00F1DC  FF                 	db	255
  1556   00F1DD  FF                 	db	255
  1557   00F1DE  FF                 	db	255
  1558   00F1DF  FF                 	db	255
  1559   00F1E0  FF                 	db	255
  1560   00F1E1  FF                 	db	255
  1561   00F1E2  FF                 	db	255
  1562   00F1E3  FF                 	db	255
  1563   00F1E4  FF                 	db	255
  1564   00F1E5  FF                 	db	255
  1565   00F1E6  FF                 	db	255
  1566   00F1E7  FF                 	db	255
  1567   00F1E8  FF                 	db	255
  1568   00F1E9  FF                 	db	255
  1569   00F1EA  FF                 	db	255
  1570   00F1EB  FF                 	db	255
  1571   00F1EC  FF                 	db	255
  1572   00F1ED  FF                 	db	255
  1573   00F1EE  FF                 	db	255
  1574   00F1EF  FF                 	db	255
  1575   00F1F0  FF                 	db	255
  1576   00F1F1  FF                 	db	255
  1577   00F1F2  FF                 	db	255
  1578   00F1F3  FF                 	db	255
  1579   00F1F4  FF                 	db	255
  1580   00F1F5  FF                 	db	255
  1581   00F1F6  FF                 	db	255
  1582   00F1F7  FF                 	db	255
  1583   00F1F8  FF                 	db	255
  1584   00F1F9  FF                 	db	255
  1585   00F1FA  FF                 	db	255
  1586   00F1FB  FF                 	db	255
  1587   00F1FC  FF                 	db	255
  1588   00F1FD  FF                 	db	255
  1589   00F1FE  FF                 	db	255
  1590   00F1FF  FF                 	db	255
  1591   00F200  FF                 	db	255
  1592   00F201  FF                 	db	255
  1593   00F202  FF                 	db	255
  1594   00F203  FF                 	db	255
  1595   00F204  FF                 	db	255
  1596   00F205  FF                 	db	255
  1597   00F206  FF                 	db	255
  1598   00F207  FF                 	db	255
  1599   00F208  FF                 	db	255
  1600   00F209  FF                 	db	255
  1601   00F20A  FF                 	db	255
  1602   00F20B  FF                 	db	255
  1603   00F20C  FF                 	db	255
  1604   00F20D  FF                 	db	255
  1605   00F20E  FF                 	db	255
  1606   00F20F  FF                 	db	255
  1607   00F210  FF                 	db	255
  1608   00F211  FF                 	db	255
  1609   00F212  FF                 	db	255
  1610   00F213  FF                 	db	255
  1611   00F214  FF                 	db	255
  1612   00F215  FF                 	db	255
  1613   00F216  FF                 	db	255
  1614   00F217  FF                 	db	255
  1615   00F218  FF                 	db	255
  1616   00F219  FF                 	db	255
  1617   00F21A  FF                 	db	255
  1618   00F21B  FF                 	db	255
  1619   00F21C  FF                 	db	255
  1620   00F21D  FF                 	db	255
  1621   00F21E  FF                 	db	255
  1622   00F21F  FF                 	db	255
  1623   00F220  FF                 	db	255
  1624   00F221  FF                 	db	255
  1625   00F222  FF                 	db	255
  1626   00F223  FF                 	db	255
  1627   00F224  FF                 	db	255
  1628   00F225  FF                 	db	255
  1629   00F226  FF                 	db	255
  1630   00F227  FF                 	db	255
  1631   00F228  FF                 	db	255
  1632   00F229  FF                 	db	255
  1633   00F22A  FF                 	db	255
  1634   00F22B  FF                 	db	255
  1635   00F22C  FF                 	db	255
  1636   00F22D  FF                 	db	255
  1637   00F22E  FF                 	db	255
  1638   00F22F  FF                 	db	255
  1639   00F230  FF                 	db	255
  1640   00F231  FF                 	db	255
  1641   00F232  FF                 	db	255
  1642   00F233  FF                 	db	255
  1643   00F234  FF                 	db	255
  1644   00F235  FF                 	db	255
  1645   00F236  FF                 	db	255
  1646   00F237  FF                 	db	255
  1647   00F238  FF                 	db	255
  1648   00F239  FF                 	db	255
  1649   00F23A  FF                 	db	255
  1650   00F23B  FF                 	db	255
  1651   00F23C  FF                 	db	255
  1652   00F23D  FF                 	db	255
  1653   00F23E  FF                 	db	255
  1654   00F23F  FF                 	db	255
  1655   00F240  FF                 	db	255
  1656   00F241  FF                 	db	255
  1657   00F242  FF                 	db	255
  1658   00F243  FF                 	db	255
  1659   00F244  FF                 	db	255
  1660   00F245  FF                 	db	255
  1661   00F246  FF                 	db	255
  1662   00F247  FF                 	db	255
  1663   00F248  FF                 	db	255
  1664   00F249  FF                 	db	255
  1665   00F24A  FF                 	db	255
  1666   00F24B  FF                 	db	255
  1667   00F24C  FF                 	db	255
  1668   00F24D  FF                 	db	255
  1669   00F24E  FF                 	db	255
  1670   00F24F  FF                 	db	255
  1671   00F250  FF                 	db	255
  1672   00F251  FF                 	db	255
  1673   00F252  FF                 	db	255
  1674   00F253  FF                 	db	255
  1675   00F254  FF                 	db	255
  1676   00F255  FF                 	db	255
  1677   00F256  FF                 	db	255
  1678   00F257  FF                 	db	255
  1679   00F258  FF                 	db	255
  1680   00F259  FF                 	db	255
  1681   00F25A  FF                 	db	255
  1682   00F25B  FF                 	db	255
  1683   00F25C  FF                 	db	255
  1684   00F25D  FF                 	db	255
  1685   00F25E  FF                 	db	255
  1686   00F25F  FF                 	db	255
  1687   00F260  FF                 	db	255
  1688   00F261  FF                 	db	255
  1689   00F262  FF                 	db	255
  1690   00F263  FF                 	db	255
  1691   00F264  FF                 	db	255
  1692   00F265  FF                 	db	255
  1693   00F266  FF                 	db	255
  1694   00F267  FF                 	db	255
  1695   00F268  FF                 	db	255
  1696   00F269  FF                 	db	255
  1697   00F26A  FF                 	db	255
  1698   00F26B  FF                 	db	255
  1699   00F26C  FF                 	db	255
  1700   00F26D  FF                 	db	255
  1701   00F26E  FF                 	db	255
  1702   00F26F  FF                 	db	255
  1703   00F270  FF                 	db	255
  1704   00F271  FF                 	db	255
  1705   00F272  FF                 	db	255
  1706   00F273  FF                 	db	255
  1707   00F274  FF                 	db	255
  1708   00F275  FF                 	db	255
  1709   00F276  FF                 	db	255
  1710   00F277  FF                 	db	255
  1711   00F278  FF                 	db	255
  1712   00F279  FF                 	db	255
  1713   00F27A  FF                 	db	255
  1714   00F27B  FF                 	db	255
  1715   00F27C  FF                 	db	255
  1716   00F27D  FF                 	db	255
  1717   00F27E  FF                 	db	255
  1718   00F27F  FF                 	db	255
  1719   00F280  FF                 	db	255
  1720   00F281  FF                 	db	255
  1721   00F282  FF                 	db	255
  1722   00F283  FF                 	db	255
  1723   00F284  FF                 	db	255
  1724   00F285  FF                 	db	255
  1725   00F286  FF                 	db	255
  1726   00F287  FF                 	db	255
  1727   00F288  FF                 	db	255
  1728   00F289  FF                 	db	255
  1729   00F28A  FF                 	db	255
  1730   00F28B  FF                 	db	255
  1731   00F28C  FF                 	db	255
  1732   00F28D  FF                 	db	255
  1733   00F28E  FF                 	db	255
  1734   00F28F  FF                 	db	255
  1735   00F290  FF                 	db	255
  1736   00F291  FF                 	db	255
  1737   00F292  FF                 	db	255
  1738   00F293  FF                 	db	255
  1739   00F294  FF                 	db	255
  1740   00F295  FF                 	db	255
  1741   00F296  FF                 	db	255
  1742   00F297  FF                 	db	255
  1743   00F298  FF                 	db	255
  1744   00F299  FF                 	db	255
  1745   00F29A  FF                 	db	255
  1746   00F29B  FF                 	db	255
  1747   00F29C  FF                 	db	255
  1748   00F29D  FF                 	db	255
  1749   00F29E  FF                 	db	255
  1750   00F29F  FF                 	db	255
  1751   00F2A0  FF                 	db	255
  1752   00F2A1  FF                 	db	255
  1753   00F2A2  FF                 	db	255
  1754   00F2A3  FF                 	db	255
  1755   00F2A4  FF                 	db	255
  1756   00F2A5  FF                 	db	255
  1757   00F2A6  FF                 	db	255
  1758   00F2A7  FF                 	db	255
  1759   00F2A8  FF                 	db	255
  1760   00F2A9  FF                 	db	255
  1761   00F2AA  FF                 	db	255
  1762   00F2AB  FF                 	db	255
  1763   00F2AC  FF                 	db	255
  1764   00F2AD  FF                 	db	255
  1765   00F2AE  FF                 	db	255
  1766   00F2AF  FF                 	db	255
  1767   00F2B0  FF                 	db	255
  1768   00F2B1  FF                 	db	255
  1769   00F2B2  FF                 	db	255
  1770   00F2B3  FF                 	db	255
  1771   00F2B4  FF                 	db	255
  1772   00F2B5  FF                 	db	255
  1773   00F2B6  FF                 	db	255
  1774   00F2B7  FF                 	db	255
  1775   00F2B8  FF                 	db	255
  1776   00F2B9  FF                 	db	255
  1777   00F2BA  FF                 	db	255
  1778   00F2BB  FF                 	db	255
  1779   00F2BC  FF                 	db	255
  1780   00F2BD  FF                 	db	255
  1781   00F2BE  FF                 	db	255
  1782   00F2BF  FF                 	db	255
  1783   00F2C0  FF                 	db	255
  1784   00F2C1  FF                 	db	255
  1785   00F2C2  FF                 	db	255
  1786   00F2C3  FF                 	db	255
  1787   00F2C4  FF                 	db	255
  1788   00F2C5  FF                 	db	255
  1789   00F2C6  FF                 	db	255
  1790   00F2C7  FF                 	db	255
  1791   00F2C8  FF                 	db	255
  1792   00F2C9  FF                 	db	255
  1793   00F2CA  FF                 	db	255
  1794   00F2CB  FF                 	db	255
  1795   00F2CC  FF                 	db	255
  1796   00F2CD  FF                 	db	255
  1797   00F2CE  FF                 	db	255
  1798   00F2CF  FF                 	db	255
  1799   00F2D0  FF                 	db	255
  1800   00F2D1  FF                 	db	255
  1801   00F2D2  FF                 	db	255
  1802   00F2D3  FF                 	db	255
  1803   00F2D4  FF                 	db	255
  1804   00F2D5  FF                 	db	255
  1805   00F2D6  FF                 	db	255
  1806   00F2D7  FF                 	db	255
  1807   00F2D8  FF                 	db	255
  1808   00F2D9  FF                 	db	255
  1809   00F2DA  FF                 	db	255
  1810   00F2DB  FF                 	db	255
  1811   00F2DC  FF                 	db	255
  1812   00F2DD  FF                 	db	255
  1813   00F2DE  FF                 	db	255
  1814   00F2DF  FF                 	db	255
  1815   00F2E0  FF                 	db	255
  1816   00F2E1  FF                 	db	255
  1817   00F2E2  FF                 	db	255
  1818   00F2E3  FF                 	db	255
  1819   00F2E4  FF                 	db	255
  1820   00F2E5  FF                 	db	255
  1821   00F2E6  FF                 	db	255
  1822   00F2E7  FF                 	db	255
  1823   00F2E8  FF                 	db	255
  1824   00F2E9  FF                 	db	255
  1825   00F2EA  FF                 	db	255
  1826   00F2EB  FF                 	db	255
  1827   00F2EC  FF                 	db	255
  1828   00F2ED  FF                 	db	255
  1829   00F2EE  FF                 	db	255
  1830   00F2EF  FF                 	db	255
  1831   00F2F0  FF                 	db	255
  1832   00F2F1  FF                 	db	255
  1833   00F2F2  FF                 	db	255
  1834   00F2F3  FF                 	db	255
  1835   00F2F4  FF                 	db	255
  1836   00F2F5  FF                 	db	255
  1837   00F2F6  FF                 	db	255
  1838   00F2F7  FF                 	db	255
  1839   00F2F8  FF                 	db	255
  1840   00F2F9  FF                 	db	255
  1841   00F2FA  FF                 	db	255
  1842   00F2FB  FF                 	db	255
  1843   00F2FC  FF                 	db	255
  1844   00F2FD  FF                 	db	255
  1845   00F2FE  FF                 	db	255
  1846   00F2FF  FF                 	db	255
  1847   00F300  FF                 	db	255
  1848   00F301  FF                 	db	255
  1849   00F302  FF                 	db	255
  1850   00F303  FF                 	db	255
  1851   00F304  FF                 	db	255
  1852   00F305  FF                 	db	255
  1853   00F306  FF                 	db	255
  1854   00F307  FF                 	db	255
  1855   00F308  FF                 	db	255
  1856   00F309  FF                 	db	255
  1857   00F30A  FF                 	db	255
  1858   00F30B  FF                 	db	255
  1859   00F30C  FF                 	db	255
  1860   00F30D  FF                 	db	255
  1861   00F30E  FF                 	db	255
  1862   00F30F  FF                 	db	255
  1863   00F310  FF                 	db	255
  1864   00F311  FF                 	db	255
  1865   00F312  FF                 	db	255
  1866   00F313  FF                 	db	255
  1867   00F314  FF                 	db	255
  1868   00F315  FF                 	db	255
  1869   00F316  FF                 	db	255
  1870   00F317  FF                 	db	255
  1871   00F318  FF                 	db	255
  1872   00F319  FF                 	db	255
  1873   00F31A  FF                 	db	255
  1874   00F31B  FF                 	db	255
  1875   00F31C  FF                 	db	255
  1876   00F31D  FF                 	db	255
  1877   00F31E  FF                 	db	255
  1878   00F31F  FF                 	db	255
  1879   00F320  FF                 	db	255
  1880   00F321  FF                 	db	255
  1881   00F322  FF                 	db	255
  1882   00F323  FF                 	db	255
  1883   00F324  FF                 	db	255
  1884   00F325  FF                 	db	255
  1885   00F326  FF                 	db	255
  1886   00F327  FF                 	db	255
  1887   00F328  FF                 	db	255
  1888   00F329  FF                 	db	255
  1889   00F32A  FF                 	db	255
  1890   00F32B  FF                 	db	255
  1891   00F32C  FF                 	db	255
  1892   00F32D  FF                 	db	255
  1893   00F32E  FF                 	db	255
  1894   00F32F  FF                 	db	255
  1895   00F330  FF                 	db	255
  1896   00F331  FF                 	db	255
  1897   00F332  FF                 	db	255
  1898   00F333  FF                 	db	255
  1899   00F334  FF                 	db	255
  1900   00F335  FF                 	db	255
  1901   00F336  FF                 	db	255
  1902   00F337  FF                 	db	255
  1903   00F338  FF                 	db	255
  1904   00F339  FF                 	db	255
  1905   00F33A  FF                 	db	255
  1906   00F33B  FF                 	db	255
  1907   00F33C  FF                 	db	255
  1908   00F33D  FF                 	db	255
  1909   00F33E  FF                 	db	255
  1910   00F33F  FF                 	db	255
  1911   00F340  FF                 	db	255
  1912   00F341  FF                 	db	255
  1913   00F342  FF                 	db	255
  1914   00F343  FF                 	db	255
  1915   00F344  FF                 	db	255
  1916   00F345  FF                 	db	255
  1917   00F346  FF                 	db	255
  1918   00F347  FF                 	db	255
  1919   00F348  FF                 	db	255
  1920   00F349  FF                 	db	255
  1921   00F34A  FF                 	db	255
  1922   00F34B  FF                 	db	255
  1923   00F34C  FF                 	db	255
  1924   00F34D  FF                 	db	255
  1925   00F34E  FF                 	db	255
  1926   00F34F  FF                 	db	255
  1927   00F350  FF                 	db	255
  1928   00F351  FF                 	db	255
  1929   00F352  FF                 	db	255
  1930   00F353  FF                 	db	255
  1931   00F354  FF                 	db	255
  1932   00F355  FF                 	db	255
  1933   00F356  FF                 	db	255
  1934   00F357  FF                 	db	255
  1935   00F358  FF                 	db	255
  1936   00F359  FF                 	db	255
  1937   00F35A  FF                 	db	255
  1938   00F35B  FF                 	db	255
  1939   00F35C  FF                 	db	255
  1940   00F35D  FF                 	db	255
  1941   00F35E  FF                 	db	255
  1942   00F35F  FF                 	db	255
  1943   00F360  FF                 	db	255
  1944   00F361  FF                 	db	255
  1945   00F362  FF                 	db	255
  1946   00F363  FF                 	db	255
  1947   00F364  FF                 	db	255
  1948   00F365  FF                 	db	255
  1949   00F366  FF                 	db	255
  1950   00F367  FF                 	db	255
  1951   00F368  FF                 	db	255
  1952   00F369  FF                 	db	255
  1953   00F36A  FF                 	db	255
  1954   00F36B  FF                 	db	255
  1955   00F36C  FF                 	db	255
  1956   00F36D  FF                 	db	255
  1957   00F36E  FF                 	db	255
  1958   00F36F  FF                 	db	255
  1959   00F370  FF                 	db	255
  1960   00F371  FF                 	db	255
  1961   00F372  FF                 	db	255
  1962   00F373  FF                 	db	255
  1963   00F374  FF                 	db	255
  1964   00F375  FF                 	db	255
  1965   00F376  FF                 	db	255
  1966   00F377  FF                 	db	255
  1967   00F378  FF                 	db	255
  1968   00F379  FF                 	db	255
  1969   00F37A  FF                 	db	255
  1970   00F37B  FF                 	db	255
  1971   00F37C  FF                 	db	255
  1972   00F37D  FF                 	db	255
  1973   00F37E  FF                 	db	255
  1974   00F37F  FF                 	db	255
  1975   00F380  FF                 	db	255
  1976   00F381  FF                 	db	255
  1977   00F382  FF                 	db	255
  1978   00F383  FF                 	db	255
  1979   00F384  FF                 	db	255
  1980   00F385  FF                 	db	255
  1981   00F386  FF                 	db	255
  1982   00F387  FF                 	db	255
  1983   00F388  FF                 	db	255
  1984   00F389  FF                 	db	255
  1985   00F38A  FF                 	db	255
  1986   00F38B  FF                 	db	255
  1987   00F38C  FF                 	db	255
  1988   00F38D  FF                 	db	255
  1989   00F38E  FF                 	db	255
  1990   00F38F  FF                 	db	255
  1991   00F390  FF                 	db	255
  1992   00F391  FF                 	db	255
  1993   00F392  FF                 	db	255
  1994   00F393  FF                 	db	255
  1995   00F394  FF                 	db	255
  1996   00F395  FF                 	db	255
  1997   00F396  FF                 	db	255
  1998   00F397  FF                 	db	255
  1999   00F398  FF                 	db	255
  2000   00F399  FF                 	db	255
  2001   00F39A  FF                 	db	255
  2002   00F39B  FF                 	db	255
  2003   00F39C  FF                 	db	255
  2004   00F39D  FF                 	db	255
  2005   00F39E  FF                 	db	255
  2006   00F39F  FF                 	db	255
  2007   00F3A0  FF                 	db	255
  2008   00F3A1  FF                 	db	255
  2009   00F3A2  FF                 	db	255
  2010   00F3A3  FF                 	db	255
  2011   00F3A4  FF                 	db	255
  2012   00F3A5  FF                 	db	255
  2013   00F3A6  FF                 	db	255
  2014   00F3A7  FF                 	db	255
  2015   00F3A8  FF                 	db	255
  2016   00F3A9  FF                 	db	255
  2017   00F3AA  FF                 	db	255
  2018   00F3AB  FF                 	db	255
  2019   00F3AC  FF                 	db	255
  2020   00F3AD  FF                 	db	255
  2021   00F3AE  FF                 	db	255
  2022   00F3AF  FF                 	db	255
  2023   00F3B0  FF                 	db	255
  2024   00F3B1  FF                 	db	255
  2025   00F3B2  FF                 	db	255
  2026   00F3B3  FF                 	db	255
  2027   00F3B4  FF                 	db	255
  2028   00F3B5  FF                 	db	255
  2029   00F3B6  FF                 	db	255
  2030   00F3B7  FF                 	db	255
  2031   00F3B8  FF                 	db	255
  2032   00F3B9  FF                 	db	255
  2033   00F3BA  FF                 	db	255
  2034   00F3BB  FF                 	db	255
  2035   00F3BC  FF                 	db	255
  2036   00F3BD  FF                 	db	255
  2037   00F3BE  FF                 	db	255
  2038   00F3BF  FF                 	db	255
  2039   00F3C0  FF                 	db	255
  2040   00F3C1  FF                 	db	255
  2041   00F3C2  FF                 	db	255
  2042   00F3C3  FF                 	db	255
  2043   00F3C4  FF                 	db	255
  2044   00F3C5  FF                 	db	255
  2045   00F3C6  FF                 	db	255
  2046   00F3C7  FF                 	db	255
  2047   00F3C8  FF                 	db	255
  2048   00F3C9  FF                 	db	255
  2049   00F3CA  FF                 	db	255
  2050   00F3CB  FF                 	db	255
  2051   00F3CC  FF                 	db	255
  2052   00F3CD  FF                 	db	255
  2053   00F3CE  FF                 	db	255
  2054   00F3CF  FF                 	db	255
  2055   00F3D0  FF                 	db	255
  2056   00F3D1  FF                 	db	255
  2057   00F3D2  FF                 	db	255
  2058   00F3D3  FF                 	db	255
  2059   00F3D4  FF                 	db	255
  2060   00F3D5  FF                 	db	255
  2061   00F3D6  FF                 	db	255
  2062   00F3D7  FF                 	db	255
  2063   00F3D8  FF                 	db	255
  2064   00F3D9  FF                 	db	255
  2065   00F3DA  FF                 	db	255
  2066   00F3DB  FF                 	db	255
  2067   00F3DC  FF                 	db	255
  2068   00F3DD  FF                 	db	255
  2069   00F3DE  FF                 	db	255
  2070   00F3DF  FF                 	db	255
  2071   00F3E0  FF                 	db	255
  2072   00F3E1  FF                 	db	255
  2073   00F3E2  FF                 	db	255
  2074   00F3E3  FF                 	db	255
  2075   00F3E4  FF                 	db	255
  2076   00F3E5  FF                 	db	255
  2077   00F3E6  FF                 	db	255
  2078   00F3E7  FF                 	db	255
  2079   00F3E8  FF                 	db	255
  2080   00F3E9  FF                 	db	255
  2081   00F3EA  FF                 	db	255
  2082   00F3EB  FF                 	db	255
  2083   00F3EC  FF                 	db	255
  2084   00F3ED  FF                 	db	255
  2085   00F3EE  FF                 	db	255
  2086   00F3EF  FF                 	db	255
  2087   00F3F0  FF                 	db	255
  2088   00F3F1  FF                 	db	255
  2089   00F3F2  FF                 	db	255
  2090   00F3F3  FF                 	db	255
  2091   00F3F4  FF                 	db	255
  2092   00F3F5  FF                 	db	255
  2093   00F3F6  FF                 	db	255
  2094   00F3F7  FF                 	db	255
  2095   00F3F8  FF                 	db	255
  2096   00F3F9  FF                 	db	255
  2097   00F3FA  FF                 	db	255
  2098   00F3FB  FF                 	db	255
  2099   00F3FC  FF                 	db	255
  2100   00F3FD  FF                 	db	255
  2101   00F3FE  FF                 	db	255
  2102   00F3FF  FF                 	db	255
  2103   00F400  FF                 	db	255
  2104   00F401  FF                 	db	255
  2105   00F402  FF                 	db	255
  2106   00F403  FF                 	db	255
  2107   00F404  FF                 	db	255
  2108   00F405  FF                 	db	255
  2109   00F406  FF                 	db	255
  2110   00F407  FF                 	db	255
  2111   00F408  FF                 	db	255
  2112   00F409  FF                 	db	255
  2113   00F40A  FF                 	db	255
  2114   00F40B  FF                 	db	255
  2115   00F40C  FF                 	db	255
  2116   00F40D  FF                 	db	255
  2117   00F40E  FF                 	db	255
  2118   00F40F  FF                 	db	255
  2119   00F410  FF                 	db	255
  2120   00F411  FF                 	db	255
  2121   00F412  FF                 	db	255
  2122   00F413  FF                 	db	255
  2123   00F414  FF                 	db	255
  2124   00F415  FF                 	db	255
  2125   00F416  FF                 	db	255
  2126   00F417  FF                 	db	255
  2127   00F418  FF                 	db	255
  2128   00F419  FF                 	db	255
  2129   00F41A  FF                 	db	255
  2130   00F41B  FF                 	db	255
  2131   00F41C  FF                 	db	255
  2132   00F41D  FF                 	db	255
  2133   00F41E  FF                 	db	255
  2134   00F41F  FF                 	db	255
  2135   00F420  FF                 	db	255
  2136   00F421  FF                 	db	255
  2137   00F422  FF                 	db	255
  2138   00F423  FF                 	db	255
  2139   00F424  FF                 	db	255
  2140   00F425  FF                 	db	255
  2141   00F426  FF                 	db	255
  2142   00F427  FF                 	db	255
  2143   00F428  FF                 	db	255
  2144   00F429  FF                 	db	255
  2145   00F42A  FF                 	db	255
  2146   00F42B  FF                 	db	255
  2147   00F42C  FF                 	db	255
  2148   00F42D  FF                 	db	255
  2149   00F42E  FF                 	db	255
  2150   00F42F  FF                 	db	255
  2151   00F430  FF                 	db	255
  2152   00F431  FF                 	db	255
  2153   00F432  FF                 	db	255
  2154   00F433  FF                 	db	255
  2155   00F434  FF                 	db	255
  2156   00F435  FF                 	db	255
  2157   00F436  FF                 	db	255
  2158   00F437  FF                 	db	255
  2159   00F438  FF                 	db	255
  2160   00F439  FF                 	db	255
  2161   00F43A  FF                 	db	255
  2162   00F43B  FF                 	db	255
  2163   00F43C  FF                 	db	255
  2164   00F43D  FF                 	db	255
  2165   00F43E  FF                 	db	255
  2166   00F43F  FF                 	db	255
  2167   00F440  FF                 	db	255
  2168   00F441  FF                 	db	255
  2169   00F442  FF                 	db	255
  2170   00F443  FF                 	db	255
  2171   00F444  FF                 	db	255
  2172   00F445  FF                 	db	255
  2173   00F446  FF                 	db	255
  2174   00F447  FF                 	db	255
  2175   00F448  FF                 	db	255
  2176   00F449  FF                 	db	255
  2177   00F44A  FF                 	db	255
  2178   00F44B  FF                 	db	255
  2179   00F44C  FF                 	db	255
  2180   00F44D  FF                 	db	255
  2181   00F44E  FF                 	db	255
  2182   00F44F  FF                 	db	255
  2183   00F450  FF                 	db	255
  2184   00F451  FF                 	db	255
  2185   00F452  FF                 	db	255
  2186   00F453  FF                 	db	255
  2187   00F454  FF                 	db	255
  2188   00F455  FF                 	db	255
  2189   00F456  FF                 	db	255
  2190   00F457  FF                 	db	255
  2191   00F458  FF                 	db	255
  2192   00F459  FF                 	db	255
  2193   00F45A  FF                 	db	255
  2194   00F45B  FF                 	db	255
  2195   00F45C  FF                 	db	255
  2196   00F45D  FF                 	db	255
  2197   00F45E  FF                 	db	255
  2198   00F45F  FF                 	db	255
  2199   00F460  FF                 	db	255
  2200   00F461  FF                 	db	255
  2201   00F462  FF                 	db	255
  2202   00F463  FF                 	db	255
  2203   00F464  FF                 	db	255
  2204   00F465  FF                 	db	255
  2205   00F466  FF                 	db	255
  2206   00F467  FF                 	db	255
  2207   00F468  FF                 	db	255
  2208   00F469  FF                 	db	255
  2209   00F46A  FF                 	db	255
  2210   00F46B  FF                 	db	255
  2211   00F46C  FF                 	db	255
  2212   00F46D  FF                 	db	255
  2213   00F46E  FF                 	db	255
  2214   00F46F  FF                 	db	255
  2215   00F470  FF                 	db	255
  2216   00F471  FF                 	db	255
  2217   00F472  FF                 	db	255
  2218   00F473  FF                 	db	255
  2219   00F474  FF                 	db	255
  2220   00F475  FF                 	db	255
  2221   00F476  FF                 	db	255
  2222   00F477  FF                 	db	255
  2223   00F478  FF                 	db	255
  2224   00F479  FF                 	db	255
  2225   00F47A  FF                 	db	255
  2226   00F47B  FF                 	db	255
  2227   00F47C  FF                 	db	255
  2228   00F47D  FF                 	db	255
  2229   00F47E  FF                 	db	255
  2230   00F47F  FF                 	db	255
  2231   00F480  FF                 	db	255
  2232   00F481  FF                 	db	255
  2233   00F482  FF                 	db	255
  2234   00F483  FF                 	db	255
  2235   00F484  FF                 	db	255
  2236   00F485  FF                 	db	255
  2237   00F486  FF                 	db	255
  2238   00F487  FF                 	db	255
  2239   00F488  FF                 	db	255
  2240   00F489  FF                 	db	255
  2241   00F48A  FF                 	db	255
  2242   00F48B  FF                 	db	255
  2243   00F48C  FF                 	db	255
  2244   00F48D  FF                 	db	255
  2245   00F48E  FF                 	db	255
  2246   00F48F  FF                 	db	255
  2247   00F490  FF                 	db	255
  2248   00F491  FF                 	db	255
  2249   00F492  FF                 	db	255
  2250   00F493  FF                 	db	255
  2251   00F494  FF                 	db	255
  2252   00F495  FF                 	db	255
  2253   00F496  FF                 	db	255
  2254   00F497  FF                 	db	255
  2255   00F498  FF                 	db	255
  2256   00F499  FF                 	db	255
  2257   00F49A  FF                 	db	255
  2258   00F49B  FF                 	db	255
  2259   00F49C  FF                 	db	255
  2260   00F49D  FF                 	db	255
  2261   00F49E  FF                 	db	255
  2262   00F49F  FF                 	db	255
  2263   00F4A0  FF                 	db	255
  2264   00F4A1  FF                 	db	255
  2265   00F4A2  FF                 	db	255
  2266   00F4A3  FF                 	db	255
  2267   00F4A4  FF                 	db	255
  2268   00F4A5  FF                 	db	255
  2269   00F4A6  FF                 	db	255
  2270   00F4A7  FF                 	db	255
  2271   00F4A8  FF                 	db	255
  2272   00F4A9  FF                 	db	255
  2273   00F4AA  FF                 	db	255
  2274   00F4AB  FF                 	db	255
  2275   00F4AC  FF                 	db	255
  2276   00F4AD  FF                 	db	255
  2277   00F4AE  FF                 	db	255
  2278   00F4AF  FF                 	db	255
  2279   00F4B0  FF                 	db	255
  2280   00F4B1  FF                 	db	255
  2281   00F4B2  FF                 	db	255
  2282   00F4B3  FF                 	db	255
  2283   00F4B4  FF                 	db	255
  2284   00F4B5  FF                 	db	255
  2285   00F4B6  FF                 	db	255
  2286   00F4B7  FF                 	db	255
  2287   00F4B8  FF                 	db	255
  2288   00F4B9  FF                 	db	255
  2289   00F4BA  FF                 	db	255
  2290   00F4BB  FF                 	db	255
  2291   00F4BC  FF                 	db	255
  2292   00F4BD  FF                 	db	255
  2293   00F4BE  FF                 	db	255
  2294   00F4BF  FF                 	db	255
  2295   00F4C0  FF                 	db	255
  2296   00F4C1  FF                 	db	255
  2297   00F4C2  FF                 	db	255
  2298   00F4C3  FF                 	db	255
  2299   00F4C4  FF                 	db	255
  2300   00F4C5  FF                 	db	255
  2301   00F4C6  FF                 	db	255
  2302   00F4C7  FF                 	db	255
  2303   00F4C8  FF                 	db	255
  2304   00F4C9  FF                 	db	255
  2305   00F4CA  FF                 	db	255
  2306   00F4CB  FF                 	db	255
  2307   00F4CC  FF                 	db	255
  2308   00F4CD  FF                 	db	255
  2309   00F4CE  FF                 	db	255
  2310   00F4CF  FF                 	db	255
  2311   00F4D0  FF                 	db	255
  2312   00F4D1  FF                 	db	255
  2313   00F4D2  FF                 	db	255
  2314   00F4D3  FF                 	db	255
  2315   00F4D4  FF                 	db	255
  2316   00F4D5  FF                 	db	255
  2317   00F4D6  FF                 	db	255
  2318   00F4D7  FF                 	db	255
  2319   00F4D8  FF                 	db	255
  2320   00F4D9  FF                 	db	255
  2321   00F4DA  FF                 	db	255
  2322   00F4DB  FF                 	db	255
  2323   00F4DC  FF                 	db	255
  2324   00F4DD  FF                 	db	255
  2325   00F4DE  FF                 	db	255
  2326   00F4DF  FF                 	db	255
  2327   00F4E0  FF                 	db	255
  2328   00F4E1  FF                 	db	255
  2329   00F4E2  FF                 	db	255
  2330   00F4E3  FF                 	db	255
  2331   00F4E4  FF                 	db	255
  2332   00F4E5  FF                 	db	255
  2333   00F4E6  FF                 	db	255
  2334   00F4E7  FF                 	db	255
  2335   00F4E8  FF                 	db	255
  2336   00F4E9  FF                 	db	255
  2337   00F4EA  FF                 	db	255
  2338   00F4EB  FF                 	db	255
  2339   00F4EC  FF                 	db	255
  2340   00F4ED  FF                 	db	255
  2341   00F4EE  FF                 	db	255
  2342   00F4EF  FF                 	db	255
  2343   00F4F0  FF                 	db	255
  2344   00F4F1  FF                 	db	255
  2345   00F4F2  FF                 	db	255
  2346   00F4F3  FF                 	db	255
  2347   00F4F4  FF                 	db	255
  2348   00F4F5  FF                 	db	255
  2349   00F4F6  FF                 	db	255
  2350   00F4F7  FF                 	db	255
  2351   00F4F8  FF                 	db	255
  2352   00F4F9  FF                 	db	255
  2353   00F4FA  FF                 	db	255
  2354   00F4FB  FF                 	db	255
  2355   00F4FC  FF                 	db	255
  2356   00F4FD  FF                 	db	255
  2357   00F4FE  FF                 	db	255
  2358   00F4FF  FF                 	db	255
  2359   00F500  FF                 	db	255
  2360   00F501  FF                 	db	255
  2361   00F502  FF                 	db	255
  2362   00F503  FF                 	db	255
  2363   00F504  FF                 	db	255
  2364   00F505  FF                 	db	255
  2365   00F506  FF                 	db	255
  2366   00F507  FF                 	db	255
  2367   00F508  FF                 	db	255
  2368   00F509  FF                 	db	255
  2369   00F50A  FF                 	db	255
  2370   00F50B  FF                 	db	255
  2371   00F50C  FF                 	db	255
  2372   00F50D  FF                 	db	255
  2373   00F50E  FF                 	db	255
  2374   00F50F  FF                 	db	255
  2375   00F510  FF                 	db	255
  2376   00F511  FF                 	db	255
  2377   00F512  FF                 	db	255
  2378   00F513  FF                 	db	255
  2379   00F514  FF                 	db	255
  2380   00F515  FF                 	db	255
  2381   00F516  FF                 	db	255
  2382   00F517  FF                 	db	255
  2383   00F518  FF                 	db	255
  2384   00F519  FF                 	db	255
  2385   00F51A  FF                 	db	255
  2386   00F51B  FF                 	db	255
  2387   00F51C  FF                 	db	255
  2388   00F51D  FF                 	db	255
  2389   00F51E  FF                 	db	255
  2390   00F51F  FF                 	db	255
  2391   00F520  FF                 	db	255
  2392   00F521  FF                 	db	255
  2393   00F522  FF                 	db	255
  2394   00F523  FF                 	db	255
  2395   00F524  FF                 	db	255
  2396   00F525  FF                 	db	255
  2397   00F526  FF                 	db	255
  2398   00F527  FF                 	db	255
  2399   00F528  FF                 	db	255
  2400   00F529  FF                 	db	255
  2401   00F52A  FF                 	db	255
  2402   00F52B  FF                 	db	255
  2403   00F52C  FF                 	db	255
  2404   00F52D  FF                 	db	255
  2405   00F52E  FF                 	db	255
  2406   00F52F  FF                 	db	255
  2407   00F530  FF                 	db	255
  2408   00F531  FF                 	db	255
  2409   00F532  FF                 	db	255
  2410   00F533  FF                 	db	255
  2411   00F534  FF                 	db	255
  2412   00F535  FF                 	db	255
  2413   00F536  FF                 	db	255
  2414   00F537  FF                 	db	255
  2415   00F538  FF                 	db	255
  2416   00F539  FF                 	db	255
  2417   00F53A  FF                 	db	255
  2418   00F53B  FF                 	db	255
  2419   00F53C  FF                 	db	255
  2420   00F53D  FF                 	db	255
  2421   00F53E  FF                 	db	255
  2422   00F53F  FF                 	db	255
  2423   00F540  FF                 	db	255
  2424   00F541  FF                 	db	255
  2425   00F542  FF                 	db	255
  2426   00F543  FF                 	db	255
  2427   00F544  FF                 	db	255
  2428   00F545  FF                 	db	255
  2429   00F546  FF                 	db	255
  2430   00F547  FF                 	db	255
  2431   00F548  FF                 	db	255
  2432   00F549  FF                 	db	255
  2433   00F54A  FF                 	db	255
  2434   00F54B  FF                 	db	255
  2435   00F54C  FF                 	db	255
  2436   00F54D  FF                 	db	255
  2437   00F54E  FF                 	db	255
  2438   00F54F  FF                 	db	255
  2439   00F550  FF                 	db	255
  2440   00F551  FF                 	db	255
  2441   00F552  FF                 	db	255
  2442   00F553  FF                 	db	255
  2443   00F554  FF                 	db	255
  2444   00F555  FF                 	db	255
  2445   00F556  FF                 	db	255
  2446   00F557  FF                 	db	255
  2447   00F558  FF                 	db	255
  2448   00F559  FF                 	db	255
  2449   00F55A  FF                 	db	255
  2450   00F55B  FF                 	db	255
  2451   00F55C  FF                 	db	255
  2452   00F55D  FF                 	db	255
  2453   00F55E  FF                 	db	255
  2454   00F55F  FF                 	db	255
  2455   00F560  FF                 	db	255
  2456   00F561  FF                 	db	255
  2457   00F562  FF                 	db	255
  2458   00F563  FF                 	db	255
  2459   00F564  FF                 	db	255
  2460   00F565  FF                 	db	255
  2461   00F566  FF                 	db	255
  2462   00F567  FF                 	db	255
  2463   00F568  FF                 	db	255
  2464   00F569  FF                 	db	255
  2465   00F56A  FF                 	db	255
  2466   00F56B  FF                 	db	255
  2467   00F56C  FF                 	db	255
  2468   00F56D  FF                 	db	255
  2469   00F56E  FF                 	db	255
  2470   00F56F  FF                 	db	255
  2471   00F570  FF                 	db	255
  2472   00F571  FF                 	db	255
  2473   00F572  FF                 	db	255
  2474   00F573  FF                 	db	255
  2475   00F574  FF                 	db	255
  2476   00F575  FF                 	db	255
  2477   00F576  FF                 	db	255
  2478   00F577  FF                 	db	255
  2479   00F578  FF                 	db	255
  2480   00F579  FF                 	db	255
  2481   00F57A  FF                 	db	255
  2482   00F57B  FF                 	db	255
  2483   00F57C  FF                 	db	255
  2484   00F57D  FF                 	db	255
  2485   00F57E  FF                 	db	255
  2486   00F57F  FF                 	db	255
  2487   00F580  FF                 	db	255
  2488   00F581  FF                 	db	255
  2489   00F582  FF                 	db	255
  2490   00F583  FF                 	db	255
  2491   00F584  FF                 	db	255
  2492   00F585  FF                 	db	255
  2493   00F586  FF                 	db	255
  2494   00F587  FF                 	db	255
  2495   00F588  FF                 	db	255
  2496   00F589  FF                 	db	255
  2497   00F58A  FF                 	db	255
  2498   00F58B  FF                 	db	255
  2499   00F58C  FF                 	db	255
  2500   00F58D  FF                 	db	255
  2501   00F58E  FF                 	db	255
  2502   00F58F  FF                 	db	255
  2503   00F590  FF                 	db	255
  2504   00F591  FF                 	db	255
  2505   00F592  FF                 	db	255
  2506   00F593  FF                 	db	255
  2507   00F594  FF                 	db	255
  2508   00F595  FF                 	db	255
  2509   00F596  FF                 	db	255
  2510   00F597  FF                 	db	255
  2511   00F598  FF                 	db	255
  2512   00F599  FF                 	db	255
  2513   00F59A  FF                 	db	255
  2514   00F59B  FF                 	db	255
  2515   00F59C  FF                 	db	255
  2516   00F59D  FF                 	db	255
  2517   00F59E  FF                 	db	255
  2518   00F59F  FF                 	db	255
  2519   00F5A0  FF                 	db	255
  2520   00F5A1  FF                 	db	255
  2521   00F5A2  FF                 	db	255
  2522   00F5A3  FF                 	db	255
  2523   00F5A4  FF                 	db	255
  2524   00F5A5  FF                 	db	255
  2525   00F5A6  FF                 	db	255
  2526   00F5A7  FF                 	db	255
  2527   00F5A8  FF                 	db	255
  2528   00F5A9  FF                 	db	255
  2529   00F5AA  FF                 	db	255
  2530   00F5AB  FF                 	db	255
  2531   00F5AC  FF                 	db	255
  2532   00F5AD  FF                 	db	255
  2533   00F5AE  FF                 	db	255
  2534   00F5AF  FF                 	db	255
  2535   00F5B0  FF                 	db	255
  2536   00F5B1  FF                 	db	255
  2537   00F5B2  FF                 	db	255
  2538   00F5B3  FF                 	db	255
  2539   00F5B4  FF                 	db	255
  2540   00F5B5  FF                 	db	255
  2541   00F5B6  FF                 	db	255
  2542   00F5B7  FF                 	db	255
  2543   00F5B8  FF                 	db	255
  2544   00F5B9  FF                 	db	255
  2545   00F5BA  FF                 	db	255
  2546   00F5BB  FF                 	db	255
  2547   00F5BC  FF                 	db	255
  2548   00F5BD  FF                 	db	255
  2549   00F5BE  FF                 	db	255
  2550   00F5BF  FF                 	db	255
  2551   00F5C0  FF                 	db	255
  2552   00F5C1  FF                 	db	255
  2553   00F5C2  FF                 	db	255
  2554   00F5C3  FF                 	db	255
  2555   00F5C4  FF                 	db	255
  2556   00F5C5  FF                 	db	255
  2557   00F5C6  FF                 	db	255
  2558   00F5C7  FF                 	db	255
  2559   00F5C8  FF                 	db	255
  2560   00F5C9  FF                 	db	255
  2561   00F5CA  FF                 	db	255
  2562   00F5CB  FF                 	db	255
  2563   00F5CC  FF                 	db	255
  2564   00F5CD  FF                 	db	255
  2565   00F5CE  FF                 	db	255
  2566   00F5CF  FF                 	db	255
  2567   00F5D0  FF                 	db	255
  2568   00F5D1  FF                 	db	255
  2569   00F5D2  FF                 	db	255
  2570   00F5D3  FF                 	db	255
  2571   00F5D4  FF                 	db	255
  2572   00F5D5  FF                 	db	255
  2573   00F5D6  FF                 	db	255
  2574   00F5D7  FF                 	db	255
  2575   00F5D8  FF                 	db	255
  2576   00F5D9  FF                 	db	255
  2577   00F5DA  FF                 	db	255
  2578   00F5DB  FF                 	db	255
  2579   00F5DC  FF                 	db	255
  2580   00F5DD  FF                 	db	255
  2581   00F5DE  FF                 	db	255
  2582   00F5DF  FF                 	db	255
  2583   00F5E0  FF                 	db	255
  2584   00F5E1  FF                 	db	255
  2585   00F5E2  FF                 	db	255
  2586   00F5E3  FF                 	db	255
  2587   00F5E4  FF                 	db	255
  2588   00F5E5  FF                 	db	255
  2589   00F5E6  FF                 	db	255
  2590   00F5E7  FF                 	db	255
  2591   00F5E8  FF                 	db	255
  2592   00F5E9  FF                 	db	255
  2593   00F5EA  FF                 	db	255
  2594   00F5EB  FF                 	db	255
  2595   00F5EC  FF                 	db	255
  2596   00F5ED  FF                 	db	255
  2597   00F5EE  FF                 	db	255
  2598   00F5EF  FF                 	db	255
  2599   00F5F0  FF                 	db	255
  2600   00F5F1  FF                 	db	255
  2601   00F5F2  FF                 	db	255
  2602   00F5F3  FF                 	db	255
  2603   00F5F4  FF                 	db	255
  2604   00F5F5  FF                 	db	255
  2605   00F5F6  FF                 	db	255
  2606   00F5F7  FF                 	db	255
  2607   00F5F8  FF                 	db	255
  2608   00F5F9  FF                 	db	255
  2609   00F5FA  FF                 	db	255
  2610   00F5FB  FF                 	db	255
  2611   00F5FC  FF                 	db	255
  2612   00F5FD  FF                 	db	255
  2613   00F5FE  FF                 	db	255
  2614   00F5FF  FF                 	db	255
  2615   00F600  FF                 	db	255
  2616   00F601  FF                 	db	255
  2617   00F602  FF                 	db	255
  2618   00F603  FF                 	db	255
  2619   00F604  FF                 	db	255
  2620   00F605  FF                 	db	255
  2621   00F606  FF                 	db	255
  2622   00F607  FF                 	db	255
  2623   00F608  FF                 	db	255
  2624   00F609  FF                 	db	255
  2625   00F60A  FF                 	db	255
  2626   00F60B  FF                 	db	255
  2627   00F60C  FF                 	db	255
  2628   00F60D  FF                 	db	255
  2629   00F60E  FF                 	db	255
  2630   00F60F  FF                 	db	255
  2631   00F610  FF                 	db	255
  2632   00F611  FF                 	db	255
  2633   00F612  FF                 	db	255
  2634   00F613  FF                 	db	255
  2635   00F614  FF                 	db	255
  2636   00F615  FF                 	db	255
  2637   00F616  FF                 	db	255
  2638   00F617  FF                 	db	255
  2639   00F618  FF                 	db	255
  2640   00F619  FF                 	db	255
  2641   00F61A  FF                 	db	255
  2642   00F61B  FF                 	db	255
  2643   00F61C  FF                 	db	255
  2644   00F61D  FF                 	db	255
  2645   00F61E  FF                 	db	255
  2646   00F61F  FF                 	db	255
  2647   00F620  FF                 	db	255
  2648   00F621  FF                 	db	255
  2649   00F622  FF                 	db	255
  2650   00F623  FF                 	db	255
  2651   00F624  FF                 	db	255
  2652   00F625  FF                 	db	255
  2653   00F626  FF                 	db	255
  2654   00F627  FF                 	db	255
  2655   00F628  FF                 	db	255
  2656   00F629  FF                 	db	255
  2657   00F62A  FF                 	db	255
  2658   00F62B  FF                 	db	255
  2659   00F62C  FF                 	db	255
  2660   00F62D  FF                 	db	255
  2661   00F62E  FF                 	db	255
  2662   00F62F  FF                 	db	255
  2663   00F630  FF                 	db	255
  2664   00F631  FF                 	db	255
  2665   00F632  FF                 	db	255
  2666   00F633  FF                 	db	255
  2667   00F634  FF                 	db	255
  2668   00F635  FF                 	db	255
  2669   00F636  FF                 	db	255
  2670   00F637  FF                 	db	255
  2671   00F638  FF                 	db	255
  2672   00F639  FF                 	db	255
  2673   00F63A  FF                 	db	255
  2674   00F63B  FF                 	db	255
  2675   00F63C  FF                 	db	255
  2676   00F63D  FF                 	db	255
  2677   00F63E  FF                 	db	255
  2678   00F63F  FF                 	db	255
  2679   00F640  FF                 	db	255
  2680   00F641  FF                 	db	255
  2681   00F642  FF                 	db	255
  2682   00F643  FF                 	db	255
  2683   00F644  FF                 	db	255
  2684   00F645  FF                 	db	255
  2685   00F646  FF                 	db	255
  2686   00F647  FF                 	db	255
  2687   00F648  FF                 	db	255
  2688   00F649  FF                 	db	255
  2689   00F64A  FF                 	db	255
  2690   00F64B  FF                 	db	255
  2691   00F64C  FF                 	db	255
  2692   00F64D  FF                 	db	255
  2693   00F64E  FF                 	db	255
  2694   00F64F  FF                 	db	255
  2695   00F650  FF                 	db	255
  2696   00F651  FF                 	db	255
  2697   00F652  FF                 	db	255
  2698   00F653  FF                 	db	255
  2699   00F654  FF                 	db	255
  2700   00F655  FF                 	db	255
  2701   00F656  FF                 	db	255
  2702   00F657  FF                 	db	255
  2703   00F658  FF                 	db	255
  2704   00F659  FF                 	db	255
  2705   00F65A  FF                 	db	255
  2706   00F65B  FF                 	db	255
  2707   00F65C  FF                 	db	255
  2708   00F65D  FF                 	db	255
  2709   00F65E  FF                 	db	255
  2710   00F65F  FF                 	db	255
  2711   00F660  FF                 	db	255
  2712   00F661  FF                 	db	255
  2713   00F662  FF                 	db	255
  2714   00F663  FF                 	db	255
  2715   00F664  FF                 	db	255
  2716   00F665  FF                 	db	255
  2717   00F666  FF                 	db	255
  2718   00F667  FF                 	db	255
  2719   00F668  FF                 	db	255
  2720   00F669  FF                 	db	255
  2721   00F66A  FF                 	db	255
  2722   00F66B  FF                 	db	255
  2723   00F66C  FF                 	db	255
  2724   00F66D  FF                 	db	255
  2725   00F66E  FF                 	db	255
  2726   00F66F  FF                 	db	255
  2727   00F670  FF                 	db	255
  2728   00F671  FF                 	db	255
  2729   00F672  FF                 	db	255
  2730   00F673  FF                 	db	255
  2731   00F674  FF                 	db	255
  2732   00F675  FF                 	db	255
  2733   00F676  FF                 	db	255
  2734   00F677  FF                 	db	255
  2735   00F678  FF                 	db	255
  2736   00F679  FF                 	db	255
  2737   00F67A  FF                 	db	255
  2738   00F67B  FF                 	db	255
  2739   00F67C  FF                 	db	255
  2740   00F67D  FF                 	db	255
  2741   00F67E  FF                 	db	255
  2742   00F67F  FF                 	db	255
  2743   00F680  FF                 	db	255
  2744   00F681  FF                 	db	255
  2745   00F682  FF                 	db	255
  2746   00F683  FF                 	db	255
  2747   00F684  FF                 	db	255
  2748   00F685  FF                 	db	255
  2749   00F686  FF                 	db	255
  2750   00F687  FF                 	db	255
  2751   00F688  FF                 	db	255
  2752   00F689  FF                 	db	255
  2753   00F68A  FF                 	db	255
  2754   00F68B  FF                 	db	255
  2755   00F68C  FF                 	db	255
  2756   00F68D  FF                 	db	255
  2757   00F68E  FF                 	db	255
  2758   00F68F  FF                 	db	255
  2759   00F690  FF                 	db	255
  2760   00F691  FF                 	db	255
  2761   00F692  FF                 	db	255
  2762   00F693  FF                 	db	255
  2763   00F694  FF                 	db	255
  2764   00F695  FF                 	db	255
  2765   00F696  FF                 	db	255
  2766   00F697  FF                 	db	255
  2767   00F698  FF                 	db	255
  2768   00F699  FF                 	db	255
  2769   00F69A  FF                 	db	255
  2770   00F69B  FF                 	db	255
  2771   00F69C  FF                 	db	255
  2772   00F69D  FF                 	db	255
  2773   00F69E  FF                 	db	255
  2774   00F69F  FF                 	db	255
  2775   00F6A0  FF                 	db	255
  2776   00F6A1  FF                 	db	255
  2777   00F6A2  FF                 	db	255
  2778   00F6A3  FF                 	db	255
  2779   00F6A4  FF                 	db	255
  2780   00F6A5  FF                 	db	255
  2781   00F6A6  FF                 	db	255
  2782   00F6A7  FF                 	db	255
  2783   00F6A8  FF                 	db	255
  2784   00F6A9  FF                 	db	255
  2785   00F6AA  FF                 	db	255
  2786   00F6AB  FF                 	db	255
  2787   00F6AC  FF                 	db	255
  2788   00F6AD  FF                 	db	255
  2789   00F6AE  FF                 	db	255
  2790   00F6AF  FF                 	db	255
  2791   00F6B0  FF                 	db	255
  2792   00F6B1  FF                 	db	255
  2793   00F6B2  FF                 	db	255
  2794   00F6B3  FF                 	db	255
  2795   00F6B4  FF                 	db	255
  2796   00F6B5  FF                 	db	255
  2797   00F6B6  FF                 	db	255
  2798   00F6B7  FF                 	db	255
  2799   00F6B8  FF                 	db	255
  2800   00F6B9  FF                 	db	255
  2801   00F6BA  FF                 	db	255
  2802   00F6BB  FF                 	db	255
  2803   00F6BC  FF                 	db	255
  2804   00F6BD  FF                 	db	255
  2805   00F6BE  FF                 	db	255
  2806   00F6BF  FF                 	db	255
  2807   00F6C0  FF                 	db	255
  2808   00F6C1  FF                 	db	255
  2809   00F6C2  FF                 	db	255
  2810   00F6C3  FF                 	db	255
  2811   00F6C4  FF                 	db	255
  2812   00F6C5  FF                 	db	255
  2813   00F6C6  FF                 	db	255
  2814   00F6C7  FF                 	db	255
  2815   00F6C8  FF                 	db	255
  2816   00F6C9  FF                 	db	255
  2817   00F6CA  FF                 	db	255
  2818   00F6CB  FF                 	db	255
  2819   00F6CC  FF                 	db	255
  2820   00F6CD  FF                 	db	255
  2821   00F6CE  FF                 	db	255
  2822   00F6CF  FF                 	db	255
  2823   00F6D0  FF                 	db	255
  2824   00F6D1  FF                 	db	255
  2825   00F6D2  FF                 	db	255
  2826   00F6D3  FF                 	db	255
  2827   00F6D4  FF                 	db	255
  2828   00F6D5  FF                 	db	255
  2829   00F6D6  FF                 	db	255
  2830   00F6D7  FF                 	db	255
  2831   00F6D8  FF                 	db	255
  2832   00F6D9  FF                 	db	255
  2833   00F6DA  FF                 	db	255
  2834   00F6DB  FF                 	db	255
  2835   00F6DC  FF                 	db	255
  2836   00F6DD  FF                 	db	255
  2837   00F6DE  FF                 	db	255
  2838   00F6DF  FF                 	db	255
  2839   00F6E0  FF                 	db	255
  2840   00F6E1  FF                 	db	255
  2841   00F6E2  FF                 	db	255
  2842   00F6E3  FF                 	db	255
  2843   00F6E4  FF                 	db	255
  2844   00F6E5  FF                 	db	255
  2845   00F6E6  FF                 	db	255
  2846   00F6E7  FF                 	db	255
  2847   00F6E8  FF                 	db	255
  2848   00F6E9  FF                 	db	255
  2849   00F6EA  FF                 	db	255
  2850   00F6EB  FF                 	db	255
  2851   00F6EC  FF                 	db	255
  2852   00F6ED  FF                 	db	255
  2853   00F6EE  FF                 	db	255
  2854   00F6EF  FF                 	db	255
  2855   00F6F0  FF                 	db	255
  2856   00F6F1  FF                 	db	255
  2857   00F6F2  FF                 	db	255
  2858   00F6F3  FF                 	db	255
  2859   00F6F4  FF                 	db	255
  2860   00F6F5  FF                 	db	255
  2861   00F6F6  FF                 	db	255
  2862   00F6F7  FF                 	db	255
  2863   00F6F8  FF                 	db	255
  2864   00F6F9  FF                 	db	255
  2865   00F6FA  FF                 	db	255
  2866   00F6FB  FF                 	db	255
  2867   00F6FC  FF                 	db	255
  2868   00F6FD  FF                 	db	255
  2869   00F6FE  FF                 	db	255
  2870   00F6FF  FF                 	db	255
  2871   00F700  FF                 	db	255
  2872   00F701  FF                 	db	255
  2873   00F702  FF                 	db	255
  2874   00F703  FF                 	db	255
  2875   00F704  FF                 	db	255
  2876   00F705  FF                 	db	255
  2877   00F706  FF                 	db	255
  2878   00F707  FF                 	db	255
  2879   00F708  FF                 	db	255
  2880   00F709  FF                 	db	255
  2881   00F70A  FF                 	db	255
  2882   00F70B  FF                 	db	255
  2883   00F70C  FF                 	db	255
  2884   00F70D  FF                 	db	255
  2885   00F70E  FF                 	db	255
  2886   00F70F  FF                 	db	255
  2887   00F710  FF                 	db	255
  2888   00F711  FF                 	db	255
  2889   00F712  FF                 	db	255
  2890   00F713  FF                 	db	255
  2891   00F714  FF                 	db	255
  2892   00F715  FF                 	db	255
  2893   00F716  FF                 	db	255
  2894   00F717  FF                 	db	255
  2895   00F718  FF                 	db	255
  2896   00F719  FF                 	db	255
  2897   00F71A  FF                 	db	255
  2898   00F71B  FF                 	db	255
  2899   00F71C  FF                 	db	255
  2900   00F71D  FF                 	db	255
  2901   00F71E  FF                 	db	255
  2902   00F71F  FF                 	db	255
  2903   00F720  FF                 	db	255
  2904   00F721  FF                 	db	255
  2905   00F722  FF                 	db	255
  2906   00F723  FF                 	db	255
  2907   00F724  FF                 	db	255
  2908   00F725  FF                 	db	255
  2909   00F726  FF                 	db	255
  2910   00F727  FF                 	db	255
  2911   00F728  FF                 	db	255
  2912   00F729  FF                 	db	255
  2913   00F72A  FF                 	db	255
  2914   00F72B  FF                 	db	255
  2915   00F72C  FF                 	db	255
  2916   00F72D  FF                 	db	255
  2917   00F72E  FF                 	db	255
  2918   00F72F  FF                 	db	255
  2919   00F730  FF                 	db	255
  2920   00F731  FF                 	db	255
  2921   00F732  FF                 	db	255
  2922   00F733  FF                 	db	255
  2923   00F734  FF                 	db	255
  2924   00F735  FF                 	db	255
  2925   00F736  FF                 	db	255
  2926   00F737  FF                 	db	255
  2927   00F738  FF                 	db	255
  2928   00F739  FF                 	db	255
  2929   00F73A  FF                 	db	255
  2930   00F73B  FF                 	db	255
  2931   00F73C  FF                 	db	255
  2932   00F73D  FF                 	db	255
  2933   00F73E  FF                 	db	255
  2934   00F73F  FF                 	db	255
  2935   00F740  FF                 	db	255
  2936   00F741  FF                 	db	255
  2937   00F742  FF                 	db	255
  2938   00F743  FF                 	db	255
  2939   00F744  FF                 	db	255
  2940   00F745  FF                 	db	255
  2941   00F746  FF                 	db	255
  2942   00F747  FF                 	db	255
  2943   00F748  FF                 	db	255
  2944   00F749  FF                 	db	255
  2945   00F74A  FF                 	db	255
  2946   00F74B  FF                 	db	255
  2947   00F74C  FF                 	db	255
  2948   00F74D  FF                 	db	255
  2949   00F74E  FF                 	db	255
  2950   00F74F  FF                 	db	255
  2951   00F750  FF                 	db	255
  2952   00F751  FF                 	db	255
  2953   00F752  FF                 	db	255
  2954   00F753  FF                 	db	255
  2955   00F754  FF                 	db	255
  2956   00F755  FF                 	db	255
  2957   00F756  FF                 	db	255
  2958   00F757  FF                 	db	255
  2959   00F758  FF                 	db	255
  2960   00F759  FF                 	db	255
  2961   00F75A  FF                 	db	255
  2962   00F75B  FF                 	db	255
  2963   00F75C  FF                 	db	255
  2964   00F75D  FF                 	db	255
  2965   00F75E  FF                 	db	255
  2966   00F75F  FF                 	db	255
  2967   00F760  FF                 	db	255
  2968   00F761  FF                 	db	255
  2969   00F762  FF                 	db	255
  2970   00F763  FF                 	db	255
  2971   00F764  FF                 	db	255
  2972   00F765  FF                 	db	255
  2973   00F766  FF                 	db	255
  2974   00F767  FF                 	db	255
  2975   00F768  FF                 	db	255
  2976   00F769  FF                 	db	255
  2977   00F76A  FF                 	db	255
  2978   00F76B  FF                 	db	255
  2979   00F76C  FF                 	db	255
  2980   00F76D  FF                 	db	255
  2981   00F76E  FF                 	db	255
  2982   00F76F  FF                 	db	255
  2983   00F770  FF                 	db	255
  2984   00F771  FF                 	db	255
  2985   00F772  FF                 	db	255
  2986   00F773  FF                 	db	255
  2987   00F774  FF                 	db	255
  2988   00F775  FF                 	db	255
  2989   00F776  FF                 	db	255
  2990   00F777  FF                 	db	255
  2991   00F778  FF                 	db	255
  2992   00F779  FF                 	db	255
  2993   00F77A  FF                 	db	255
  2994   00F77B  FF                 	db	255
  2995   00F77C  FF                 	db	255
  2996   00F77D  FF                 	db	255
  2997   00F77E  FF                 	db	255
  2998   00F77F  FF                 	db	255
  2999   00F780  FF                 	db	255
  3000   00F781  FF                 	db	255
  3001   00F782  FF                 	db	255
  3002   00F783  FF                 	db	255
  3003   00F784  FF                 	db	255
  3004   00F785  FF                 	db	255
  3005   00F786  FF                 	db	255
  3006   00F787  FF                 	db	255
  3007   00F788  FF                 	db	255
  3008   00F789  FF                 	db	255
  3009   00F78A  FF                 	db	255
  3010   00F78B  FF                 	db	255
  3011   00F78C  FF                 	db	255
  3012   00F78D  FF                 	db	255
  3013   00F78E  FF                 	db	255
  3014   00F78F  FF                 	db	255
  3015   00F790  FF                 	db	255
  3016   00F791  FF                 	db	255
  3017   00F792  FF                 	db	255
  3018   00F793  FF                 	db	255
  3019   00F794  FF                 	db	255
  3020   00F795  FF                 	db	255
  3021   00F796  FF                 	db	255
  3022   00F797  FF                 	db	255
  3023   00F798  FF                 	db	255
  3024   00F799  FF                 	db	255
  3025   00F79A  FF                 	db	255
  3026   00F79B  FF                 	db	255
  3027   00F79C  FF                 	db	255
  3028   00F79D  FF                 	db	255
  3029   00F79E  FF                 	db	255
  3030   00F79F  FF                 	db	255
  3031   00F7A0  FF                 	db	255
  3032   00F7A1  FF                 	db	255
  3033   00F7A2  FF                 	db	255
  3034   00F7A3  FF                 	db	255
  3035   00F7A4  FF                 	db	255
  3036   00F7A5  FF                 	db	255
  3037   00F7A6  FF                 	db	255
  3038   00F7A7  FF                 	db	255
  3039   00F7A8  FF                 	db	255
  3040   00F7A9  FF                 	db	255
  3041   00F7AA  FF                 	db	255
  3042   00F7AB  FF                 	db	255
  3043   00F7AC  FF                 	db	255
  3044   00F7AD  FF                 	db	255
  3045   00F7AE  FF                 	db	255
  3046   00F7AF  FF                 	db	255
  3047   00F7B0  FF                 	db	255
  3048   00F7B1  FF                 	db	255
  3049   00F7B2  FF                 	db	255
  3050   00F7B3  FF                 	db	255
  3051   00F7B4  FF                 	db	255
  3052   00F7B5  FF                 	db	255
  3053   00F7B6  FF                 	db	255
  3054   00F7B7  FF                 	db	255
  3055   00F7B8  FF                 	db	255
  3056   00F7B9  FF                 	db	255
  3057   00F7BA  FF                 	db	255
  3058   00F7BB  FF                 	db	255
  3059   00F7BC  FF                 	db	255
  3060   00F7BD  FF                 	db	255
  3061   00F7BE  FF                 	db	255
  3062   00F7BF  FF                 	db	255
  3063   00F7C0  FF                 	db	255
  3064   00F7C1  FF                 	db	255
  3065   00F7C2  FF                 	db	255
  3066   00F7C3  FF                 	db	255
  3067   00F7C4  FF                 	db	255
  3068   00F7C5  FF                 	db	255
  3069   00F7C6  FF                 	db	255
  3070   00F7C7  FF                 	db	255
  3071   00F7C8  FF                 	db	255
  3072   00F7C9  FF                 	db	255
  3073   00F7CA  FF                 	db	255
  3074   00F7CB  FF                 	db	255
  3075   00F7CC  FF                 	db	255
  3076   00F7CD  FF                 	db	255
  3077   00F7CE  FF                 	db	255
  3078   00F7CF  FF                 	db	255
  3079   00F7D0  FF                 	db	255
  3080   00F7D1  FF                 	db	255
  3081   00F7D2  FF                 	db	255
  3082   00F7D3  FF                 	db	255
  3083   00F7D4  FF                 	db	255
  3084   00F7D5  FF                 	db	255
  3085   00F7D6  FF                 	db	255
  3086   00F7D7  FF                 	db	255
  3087   00F7D8  FF                 	db	255
  3088   00F7D9  FF                 	db	255
  3089   00F7DA  FF                 	db	255
  3090   00F7DB  FF                 	db	255
  3091   00F7DC  FF                 	db	255
  3092   00F7DD  FF                 	db	255
  3093   00F7DE  FF                 	db	255
  3094   00F7DF  FF                 	db	255
  3095   00F7E0  FF                 	db	255
  3096   00F7E1  FF                 	db	255
  3097   00F7E2  FF                 	db	255
  3098   00F7E3  FF                 	db	255
  3099   00F7E4  FF                 	db	255
  3100   00F7E5  FF                 	db	255
  3101   00F7E6  FF                 	db	255
  3102   00F7E7  FF                 	db	255
  3103   00F7E8  FF                 	db	255
  3104   00F7E9  FF                 	db	255
  3105   00F7EA  FF                 	db	255
  3106   00F7EB  FF                 	db	255
  3107   00F7EC  FF                 	db	255
  3108   00F7ED  FF                 	db	255
  3109   00F7EE  FF                 	db	255
  3110   00F7EF  FF                 	db	255
  3111   00F7F0  FF                 	db	255
  3112   00F7F1  FF                 	db	255
  3113   00F7F2  FF                 	db	255
  3114   00F7F3  FF                 	db	255
  3115   00F7F4  FF                 	db	255
  3116   00F7F5  FF                 	db	255
  3117   00F7F6  FF                 	db	255
  3118   00F7F7  FF                 	db	255
  3119   00F7F8  FF                 	db	255
  3120   00F7F9  FF                 	db	255
  3121   00F7FA  FF                 	db	255
  3122   00F7FB  FF                 	db	255
  3123   00F7FC  FF                 	db	255
  3124   00F7FD  FF                 	db	255
  3125   00F7FE  FF                 	db	255
  3126   00F7FF  FF                 	db	255
  3127   00F800  FF                 	db	255
  3128   00F801  FF                 	db	255
  3129   00F802  FF                 	db	255
  3130   00F803  FF                 	db	255
  3131   00F804  FF                 	db	255
  3132   00F805  FF                 	db	255
  3133   00F806  FF                 	db	255
  3134   00F807  FF                 	db	255
  3135   00F808  FF                 	db	255
  3136   00F809  FF                 	db	255
  3137   00F80A  FF                 	db	255
  3138   00F80B  FF                 	db	255
  3139   00F80C  FF                 	db	255
  3140   00F80D  FF                 	db	255
  3141   00F80E  FF                 	db	255
  3142   00F80F  FF                 	db	255
  3143   00F810  FF                 	db	255
  3144   00F811  FF                 	db	255
  3145   00F812  FF                 	db	255
  3146   00F813  FF                 	db	255
  3147   00F814  FF                 	db	255
  3148   00F815  FF                 	db	255
  3149   00F816  FF                 	db	255
  3150   00F817  FF                 	db	255
  3151   00F818  FF                 	db	255
  3152   00F819  FF                 	db	255
  3153   00F81A  FF                 	db	255
  3154   00F81B  FF                 	db	255
  3155   00F81C  FF                 	db	255
  3156   00F81D  FF                 	db	255
  3157   00F81E  FF                 	db	255
  3158   00F81F  FF                 	db	255
  3159   00F820  FF                 	db	255
  3160   00F821  FF                 	db	255
  3161   00F822  FF                 	db	255
  3162   00F823  FF                 	db	255
  3163   00F824  FF                 	db	255
  3164   00F825  FF                 	db	255
  3165   00F826  FF                 	db	255
  3166   00F827  FF                 	db	255
  3167   00F828  FF                 	db	255
  3168   00F829  FF                 	db	255
  3169   00F82A  FF                 	db	255
  3170   00F82B  FF                 	db	255
  3171   00F82C  FF                 	db	255
  3172   00F82D  FF                 	db	255
  3173   00F82E  FF                 	db	255
  3174   00F82F  FF                 	db	255
  3175   00F830  FF                 	db	255
  3176   00F831  FF                 	db	255
  3177   00F832  FF                 	db	255
  3178   00F833  FF                 	db	255
  3179   00F834  FF                 	db	255
  3180   00F835  FF                 	db	255
  3181   00F836  FF                 	db	255
  3182   00F837  FF                 	db	255
  3183   00F838  FF                 	db	255
  3184   00F839  FF                 	db	255
  3185   00F83A  FF                 	db	255
  3186   00F83B  FF                 	db	255
  3187   00F83C  FF                 	db	255
  3188   00F83D  FF                 	db	255
  3189   00F83E  FF                 	db	255
  3190   00F83F  FF                 	db	255
  3191   00F840  FF                 	db	255
  3192   00F841  FF                 	db	255
  3193   00F842  FF                 	db	255
  3194   00F843  FF                 	db	255
  3195   00F844  FF                 	db	255
  3196   00F845  FF                 	db	255
  3197   00F846  FF                 	db	255
  3198   00F847  FF                 	db	255
  3199   00F848  FF                 	db	255
  3200   00F849  FF                 	db	255
  3201   00F84A  FF                 	db	255
  3202   00F84B  FF                 	db	255
  3203   00F84C  FF                 	db	255
  3204   00F84D  FF                 	db	255
  3205   00F84E  FF                 	db	255
  3206   00F84F  FF                 	db	255
  3207   00F850  FF                 	db	255
  3208   00F851  FF                 	db	255
  3209   00F852  FF                 	db	255
  3210   00F853  FF                 	db	255
  3211   00F854  FF                 	db	255
  3212   00F855  FF                 	db	255
  3213   00F856  FF                 	db	255
  3214   00F857  FF                 	db	255
  3215   00F858  FF                 	db	255
  3216   00F859  FF                 	db	255
  3217   00F85A  FF                 	db	255
  3218   00F85B  FF                 	db	255
  3219   00F85C  FF                 	db	255
  3220   00F85D  FF                 	db	255
  3221   00F85E  FF                 	db	255
  3222   00F85F  FF                 	db	255
  3223   00F860  FF                 	db	255
  3224   00F861  FF                 	db	255
  3225   00F862  FF                 	db	255
  3226   00F863  FF                 	db	255
  3227   00F864  FF                 	db	255
  3228   00F865  FF                 	db	255
  3229   00F866  FF                 	db	255
  3230   00F867  FF                 	db	255
  3231   00F868  FF                 	db	255
  3232   00F869  FF                 	db	255
  3233   00F86A  FF                 	db	255
  3234   00F86B  FF                 	db	255
  3235   00F86C  FF                 	db	255
  3236   00F86D  FF                 	db	255
  3237   00F86E  FF                 	db	255
  3238   00F86F  FF                 	db	255
  3239   00F870  FF                 	db	255
  3240   00F871  FF                 	db	255
  3241   00F872  FF                 	db	255
  3242   00F873  FF                 	db	255
  3243   00F874  FF                 	db	255
  3244   00F875  FF                 	db	255
  3245   00F876  FF                 	db	255
  3246   00F877  FF                 	db	255
  3247   00F878  FF                 	db	255
  3248   00F879  FF                 	db	255
  3249   00F87A  FF                 	db	255
  3250   00F87B  FF                 	db	255
  3251   00F87C  FF                 	db	255
  3252   00F87D  FF                 	db	255
  3253   00F87E  FF                 	db	255
  3254   00F87F  FF                 	db	255
  3255   00F880  FF                 	db	255
  3256   00F881  FF                 	db	255
  3257   00F882  FF                 	db	255
  3258   00F883  FF                 	db	255
  3259   00F884  FF                 	db	255
  3260   00F885  FF                 	db	255
  3261   00F886  FF                 	db	255
  3262   00F887  FF                 	db	255
  3263   00F888  FF                 	db	255
  3264   00F889  FF                 	db	255
  3265   00F88A  FF                 	db	255
  3266   00F88B  FF                 	db	255
  3267   00F88C  FF                 	db	255
  3268   00F88D  FF                 	db	255
  3269   00F88E  FF                 	db	255
  3270   00F88F  FF                 	db	255
  3271   00F890  FF                 	db	255
  3272   00F891  FF                 	db	255
  3273   00F892  FF                 	db	255
  3274   00F893  FF                 	db	255
  3275   00F894  FF                 	db	255
  3276   00F895  FF                 	db	255
  3277   00F896  FF                 	db	255
  3278   00F897  FF                 	db	255
  3279   00F898  FF                 	db	255
  3280   00F899  FF                 	db	255
  3281   00F89A  FF                 	db	255
  3282   00F89B  FF                 	db	255
  3283   00F89C  FF                 	db	255
  3284   00F89D  FF                 	db	255
  3285   00F89E  FF                 	db	255
  3286   00F89F  FF                 	db	255
  3287   00F8A0  FF                 	db	255
  3288   00F8A1  FF                 	db	255
  3289   00F8A2  FF                 	db	255
  3290   00F8A3  FF                 	db	255
  3291   00F8A4  FF                 	db	255
  3292   00F8A5  FF                 	db	255
  3293   00F8A6  FF                 	db	255
  3294   00F8A7  FF                 	db	255
  3295   00F8A8  FF                 	db	255
  3296   00F8A9  FF                 	db	255
  3297   00F8AA  FF                 	db	255
  3298   00F8AB  FF                 	db	255
  3299   00F8AC  FF                 	db	255
  3300   00F8AD  FF                 	db	255
  3301   00F8AE  FF                 	db	255
  3302   00F8AF  FF                 	db	255
  3303   00F8B0  FF                 	db	255
  3304   00F8B1  FF                 	db	255
  3305   00F8B2  FF                 	db	255
  3306   00F8B3  FF                 	db	255
  3307   00F8B4  FF                 	db	255
  3308   00F8B5  FF                 	db	255
  3309   00F8B6  FF                 	db	255
  3310   00F8B7  FF                 	db	255
  3311   00F8B8  FF                 	db	255
  3312   00F8B9  FF                 	db	255
  3313   00F8BA  FF                 	db	255
  3314   00F8BB  FF                 	db	255
  3315   00F8BC  FF                 	db	255
  3316   00F8BD  FF                 	db	255
  3317   00F8BE  FF                 	db	255
  3318   00F8BF  FF                 	db	255
  3319   00F8C0  FF                 	db	255
  3320   00F8C1  FF                 	db	255
  3321   00F8C2  FF                 	db	255
  3322   00F8C3  FF                 	db	255
  3323   00F8C4  FF                 	db	255
  3324   00F8C5  FF                 	db	255
  3325   00F8C6  FF                 	db	255
  3326   00F8C7  FF                 	db	255
  3327   00F8C8  FF                 	db	255
  3328   00F8C9  FF                 	db	255
  3329   00F8CA  FF                 	db	255
  3330   00F8CB  FF                 	db	255
  3331   00F8CC  FF                 	db	255
  3332   00F8CD  FF                 	db	255
  3333   00F8CE  FF                 	db	255
  3334   00F8CF  FF                 	db	255
  3335   00F8D0  FF                 	db	255
  3336   00F8D1  FF                 	db	255
  3337   00F8D2  FF                 	db	255
  3338   00F8D3  FF                 	db	255
  3339   00F8D4  FF                 	db	255
  3340   00F8D5  FF                 	db	255
  3341   00F8D6  FF                 	db	255
  3342   00F8D7  FF                 	db	255
  3343   00F8D8  FF                 	db	255
  3344   00F8D9  FF                 	db	255
  3345   00F8DA  FF                 	db	255
  3346   00F8DB  FF                 	db	255
  3347   00F8DC  FF                 	db	255
  3348   00F8DD  FF                 	db	255
  3349   00F8DE  FF                 	db	255
  3350   00F8DF  FF                 	db	255
  3351   00F8E0  FF                 	db	255
  3352   00F8E1  FF                 	db	255
  3353   00F8E2  FF                 	db	255
  3354   00F8E3  FF                 	db	255
  3355   00F8E4  FF                 	db	255
  3356   00F8E5  FF                 	db	255
  3357   00F8E6  FF                 	db	255
  3358   00F8E7  FF                 	db	255
  3359   00F8E8  FF                 	db	255
  3360   00F8E9  FF                 	db	255
  3361   00F8EA  FF                 	db	255
  3362   00F8EB  FF                 	db	255
  3363   00F8EC  FF                 	db	255
  3364   00F8ED  FF                 	db	255
  3365   00F8EE  FF                 	db	255
  3366   00F8EF  FF                 	db	255
  3367   00F8F0  FF                 	db	255
  3368   00F8F1  FF                 	db	255
  3369   00F8F2  FF                 	db	255
  3370   00F8F3  FF                 	db	255
  3371   00F8F4  FF                 	db	255
  3372   00F8F5  FF                 	db	255
  3373   00F8F6  FF                 	db	255
  3374   00F8F7  FF                 	db	255
  3375   00F8F8  FF                 	db	255
  3376   00F8F9  FF                 	db	255
  3377   00F8FA  FF                 	db	255
  3378   00F8FB  FF                 	db	255
  3379   00F8FC  FF                 	db	255
  3380   00F8FD  FF                 	db	255
  3381   00F8FE  FF                 	db	255
  3382   00F8FF  FF                 	db	255
  3383   00F900  FF                 	db	255
  3384   00F901  FF                 	db	255
  3385   00F902  FF                 	db	255
  3386   00F903  FF                 	db	255
  3387   00F904  FF                 	db	255
  3388   00F905  FF                 	db	255
  3389   00F906  FF                 	db	255
  3390   00F907  FF                 	db	255
  3391   00F908  FF                 	db	255
  3392   00F909  FF                 	db	255
  3393   00F90A  FF                 	db	255
  3394   00F90B  FF                 	db	255
  3395   00F90C  FF                 	db	255
  3396   00F90D  FF                 	db	255
  3397   00F90E  FF                 	db	255
  3398   00F90F  FF                 	db	255
  3399   00F910  FF                 	db	255
  3400   00F911  FF                 	db	255
  3401   00F912  FF                 	db	255
  3402   00F913  FF                 	db	255
  3403   00F914  FF                 	db	255
  3404   00F915  FF                 	db	255
  3405   00F916  FF                 	db	255
  3406   00F917  FF                 	db	255
  3407   00F918  FF                 	db	255
  3408   00F919  FF                 	db	255
  3409   00F91A  FF                 	db	255
  3410   00F91B  FF                 	db	255
  3411   00F91C  FF                 	db	255
  3412   00F91D  FF                 	db	255
  3413   00F91E  FF                 	db	255
  3414   00F91F  FF                 	db	255
  3415   00F920  FF                 	db	255
  3416   00F921  FF                 	db	255
  3417   00F922  FF                 	db	255
  3418   00F923  FF                 	db	255
  3419   00F924  FF                 	db	255
  3420   00F925  FF                 	db	255
  3421   00F926  FF                 	db	255
  3422   00F927  FF                 	db	255
  3423   00F928  FF                 	db	255
  3424   00F929  FF                 	db	255
  3425   00F92A  FF                 	db	255
  3426   00F92B  FF                 	db	255
  3427   00F92C  FF                 	db	255
  3428   00F92D  FF                 	db	255
  3429   00F92E  FF                 	db	255
  3430   00F92F  FF                 	db	255
  3431   00F930  FF                 	db	255
  3432   00F931  FF                 	db	255
  3433   00F932  FF                 	db	255
  3434   00F933  FF                 	db	255
  3435   00F934  FF                 	db	255
  3436   00F935  FF                 	db	255
  3437   00F936  FF                 	db	255
  3438   00F937  FF                 	db	255
  3439   00F938  FF                 	db	255
  3440   00F939  FF                 	db	255
  3441   00F93A  FF                 	db	255
  3442   00F93B  FF                 	db	255
  3443   00F93C  FF                 	db	255
  3444   00F93D  FF                 	db	255
  3445   00F93E  FF                 	db	255
  3446   00F93F  FF                 	db	255
  3447   00F940  FF                 	db	255
  3448   00F941  FF                 	db	255
  3449   00F942  FF                 	db	255
  3450   00F943  FF                 	db	255
  3451   00F944  FF                 	db	255
  3452   00F945  FF                 	db	255
  3453   00F946  FF                 	db	255
  3454   00F947  FF                 	db	255
  3455   00F948  FF                 	db	255
  3456   00F949  FF                 	db	255
  3457   00F94A  FF                 	db	255
  3458   00F94B  FF                 	db	255
  3459   00F94C  FF                 	db	255
  3460   00F94D  FF                 	db	255
  3461   00F94E  FF                 	db	255
  3462   00F94F  FF                 	db	255
  3463   00F950  FF                 	db	255
  3464   00F951  FF                 	db	255
  3465   00F952  FF                 	db	255
  3466   00F953  FF                 	db	255
  3467   00F954  FF                 	db	255
  3468   00F955  FF                 	db	255
  3469   00F956  FF                 	db	255
  3470   00F957  FF                 	db	255
  3471   00F958  FF                 	db	255
  3472   00F959  FF                 	db	255
  3473   00F95A  FF                 	db	255
  3474   00F95B  FF                 	db	255
  3475   00F95C  FF                 	db	255
  3476   00F95D  FF                 	db	255
  3477   00F95E  FF                 	db	255
  3478   00F95F  FF                 	db	255
  3479   00F960  FF                 	db	255
  3480   00F961  FF                 	db	255
  3481   00F962  FF                 	db	255
  3482   00F963  FF                 	db	255
  3483   00F964  FF                 	db	255
  3484   00F965  FF                 	db	255
  3485   00F966  FF                 	db	255
  3486   00F967  FF                 	db	255
  3487   00F968  FF                 	db	255
  3488   00F969  FF                 	db	255
  3489   00F96A  FF                 	db	255
  3490   00F96B  FF                 	db	255
  3491   00F96C  FF                 	db	255
  3492   00F96D  FF                 	db	255
  3493   00F96E  FF                 	db	255
  3494   00F96F  FF                 	db	255
  3495   00F970  FF                 	db	255
  3496   00F971  FF                 	db	255
  3497   00F972  FF                 	db	255
  3498   00F973  FF                 	db	255
  3499   00F974  FF                 	db	255
  3500   00F975  FF                 	db	255
  3501   00F976  FF                 	db	255
  3502   00F977  FF                 	db	255
  3503   00F978  FF                 	db	255
  3504   00F979  FF                 	db	255
  3505   00F97A  FF                 	db	255
  3506   00F97B  FF                 	db	255
  3507   00F97C  FF                 	db	255
  3508   00F97D  FF                 	db	255
  3509   00F97E  FF                 	db	255
  3510   00F97F  FF                 	db	255
  3511   00F980  FF                 	db	255
  3512   00F981  FF                 	db	255
  3513   00F982  FF                 	db	255
  3514   00F983  FF                 	db	255
  3515   00F984  FF                 	db	255
  3516   00F985  FF                 	db	255
  3517   00F986  FF                 	db	255
  3518   00F987  FF                 	db	255
  3519   00F988  FF                 	db	255
  3520   00F989  FF                 	db	255
  3521   00F98A  FF                 	db	255
  3522   00F98B  FF                 	db	255
  3523   00F98C  FF                 	db	255
  3524   00F98D  FF                 	db	255
  3525   00F98E  FF                 	db	255
  3526   00F98F  FF                 	db	255
  3527   00F990  FF                 	db	255
  3528   00F991  FF                 	db	255
  3529   00F992  FF                 	db	255
  3530   00F993  FF                 	db	255
  3531   00F994  FF                 	db	255
  3532   00F995  FF                 	db	255
  3533   00F996  FF                 	db	255
  3534   00F997  FF                 	db	255
  3535   00F998  FF                 	db	255
  3536   00F999  FF                 	db	255
  3537   00F99A  FF                 	db	255
  3538   00F99B  FF                 	db	255
  3539   00F99C  FF                 	db	255
  3540   00F99D  FF                 	db	255
  3541   00F99E  FF                 	db	255
  3542   00F99F  FF                 	db	255
  3543   00F9A0  FF                 	db	255
  3544   00F9A1  FF                 	db	255
  3545   00F9A2  FF                 	db	255
  3546   00F9A3  FF                 	db	255
  3547   00F9A4  FF                 	db	255
  3548   00F9A5  FF                 	db	255
  3549   00F9A6  FF                 	db	255
  3550   00F9A7  FF                 	db	255
  3551   00F9A8  FF                 	db	255
  3552   00F9A9  FF                 	db	255
  3553   00F9AA  FF                 	db	255
  3554   00F9AB  FF                 	db	255
  3555   00F9AC  FF                 	db	255
  3556   00F9AD  FF                 	db	255
  3557   00F9AE  FF                 	db	255
  3558   00F9AF  FF                 	db	255
  3559   00F9B0  FF                 	db	255
  3560   00F9B1  FF                 	db	255
  3561   00F9B2  FF                 	db	255
  3562   00F9B3  FF                 	db	255
  3563   00F9B4  FF                 	db	255
  3564   00F9B5  FF                 	db	255
  3565   00F9B6  FF                 	db	255
  3566   00F9B7  FF                 	db	255
  3567   00F9B8  FF                 	db	255
  3568   00F9B9  FF                 	db	255
  3569   00F9BA  FF                 	db	255
  3570   00F9BB  FF                 	db	255
  3571   00F9BC  FF                 	db	255
  3572   00F9BD  FF                 	db	255
  3573   00F9BE  FF                 	db	255
  3574   00F9BF  FF                 	db	255
  3575   00F9C0  FF                 	db	255
  3576   00F9C1  FF                 	db	255
  3577   00F9C2  FF                 	db	255
  3578   00F9C3  FF                 	db	255
  3579   00F9C4  FF                 	db	255
  3580   00F9C5  FF                 	db	255
  3581   00F9C6  FF                 	db	255
  3582   00F9C7  FF                 	db	255
  3583   00F9C8  FF                 	db	255
  3584   00F9C9  FF                 	db	255
  3585   00F9CA  FF                 	db	255
  3586   00F9CB  FF                 	db	255
  3587   00F9CC  FF                 	db	255
  3588   00F9CD  FF                 	db	255
  3589   00F9CE  FF                 	db	255
  3590   00F9CF  FF                 	db	255
  3591   00F9D0  FF                 	db	255
  3592   00F9D1  FF                 	db	255
  3593   00F9D2  FF                 	db	255
  3594   00F9D3  FF                 	db	255
  3595   00F9D4  FF                 	db	255
  3596   00F9D5  FF                 	db	255
  3597   00F9D6  FF                 	db	255
  3598   00F9D7  FF                 	db	255
  3599   00F9D8  FF                 	db	255
  3600   00F9D9  FF                 	db	255
  3601   00F9DA  FF                 	db	255
  3602   00F9DB  FF                 	db	255
  3603   00F9DC  FF                 	db	255
  3604   00F9DD  FF                 	db	255
  3605   00F9DE  FF                 	db	255
  3606   00F9DF  FF                 	db	255
  3607   00F9E0  FF                 	db	255
  3608   00F9E1  FF                 	db	255
  3609   00F9E2  FF                 	db	255
  3610   00F9E3  FF                 	db	255
  3611   00F9E4  FF                 	db	255
  3612   00F9E5  FF                 	db	255
  3613   00F9E6  FF                 	db	255
  3614   00F9E7  FF                 	db	255
  3615   00F9E8  FF                 	db	255
  3616   00F9E9  FF                 	db	255
  3617   00F9EA  FF                 	db	255
  3618   00F9EB  FF                 	db	255
  3619   00F9EC  FF                 	db	255
  3620   00F9ED  FF                 	db	255
  3621   00F9EE  FF                 	db	255
  3622   00F9EF  FF                 	db	255
  3623   00F9F0  FF                 	db	255
  3624   00F9F1  FF                 	db	255
  3625   00F9F2  FF                 	db	255
  3626   00F9F3  FF                 	db	255
  3627   00F9F4  FF                 	db	255
  3628   00F9F5  FF                 	db	255
  3629   00F9F6  FF                 	db	255
  3630   00F9F7  FF                 	db	255
  3631   00F9F8  FF                 	db	255
  3632   00F9F9  FF                 	db	255
  3633   00F9FA  FF                 	db	255
  3634   00F9FB  FF                 	db	255
  3635   00F9FC  FF                 	db	255
  3636   00F9FD  FF                 	db	255
  3637   00F9FE  FF                 	db	255
  3638   00F9FF  FF                 	db	255
  3639   00FA00  FF                 	db	255
  3640   00FA01  FF                 	db	255
  3641   00FA02  FF                 	db	255
  3642   00FA03  FF                 	db	255
  3643   00FA04  FF                 	db	255
  3644   00FA05  FF                 	db	255
  3645   00FA06  FF                 	db	255
  3646   00FA07  FF                 	db	255
  3647   00FA08  FF                 	db	255
  3648   00FA09  FF                 	db	255
  3649   00FA0A  FF                 	db	255
  3650   00FA0B  FF                 	db	255
  3651   00FA0C  FF                 	db	255
  3652   00FA0D  FF                 	db	255
  3653   00FA0E  FF                 	db	255
  3654   00FA0F  FF                 	db	255
  3655   00FA10  FF                 	db	255
  3656   00FA11  FF                 	db	255
  3657   00FA12  FF                 	db	255
  3658   00FA13  FF                 	db	255
  3659   00FA14  FF                 	db	255
  3660   00FA15  FF                 	db	255
  3661   00FA16  FF                 	db	255
  3662   00FA17  FF                 	db	255
  3663   00FA18  FF                 	db	255
  3664   00FA19  FF                 	db	255
  3665   00FA1A  FF                 	db	255
  3666   00FA1B  FF                 	db	255
  3667   00FA1C  FF                 	db	255
  3668   00FA1D  FF                 	db	255
  3669   00FA1E  FF                 	db	255
  3670   00FA1F  FF                 	db	255
  3671   00FA20  FF                 	db	255
  3672   00FA21  FF                 	db	255
  3673   00FA22  FF                 	db	255
  3674   00FA23  FF                 	db	255
  3675   00FA24  FF                 	db	255
  3676   00FA25  FF                 	db	255
  3677   00FA26  FF                 	db	255
  3678   00FA27  FF                 	db	255
  3679   00FA28  FF                 	db	255
  3680   00FA29  FF                 	db	255
  3681   00FA2A  FF                 	db	255
  3682   00FA2B  FF                 	db	255
  3683   00FA2C  FF                 	db	255
  3684   00FA2D  FF                 	db	255
  3685   00FA2E  FF                 	db	255
  3686   00FA2F  FF                 	db	255
  3687   00FA30  FF                 	db	255
  3688   00FA31  FF                 	db	255
  3689   00FA32  FF                 	db	255
  3690   00FA33  FF                 	db	255
  3691   00FA34  FF                 	db	255
  3692   00FA35  FF                 	db	255
  3693   00FA36  FF                 	db	255
  3694   00FA37  FF                 	db	255
  3695   00FA38  FF                 	db	255
  3696   00FA39  FF                 	db	255
  3697   00FA3A  FF                 	db	255
  3698   00FA3B  FF                 	db	255
  3699   00FA3C  FF                 	db	255
  3700   00FA3D  FF                 	db	255
  3701   00FA3E  FF                 	db	255
  3702   00FA3F  FF                 	db	255
  3703   00FA40  FF                 	db	255
  3704   00FA41  FF                 	db	255
  3705   00FA42  FF                 	db	255
  3706   00FA43  FF                 	db	255
  3707   00FA44  FF                 	db	255
  3708   00FA45  FF                 	db	255
  3709   00FA46  FF                 	db	255
  3710   00FA47  FF                 	db	255
  3711   00FA48  FF                 	db	255
  3712   00FA49  FF                 	db	255
  3713   00FA4A  FF                 	db	255
  3714   00FA4B  FF                 	db	255
  3715   00FA4C  FF                 	db	255
  3716   00FA4D  FF                 	db	255
  3717   00FA4E  FF                 	db	255
  3718   00FA4F  FF                 	db	255
  3719   00FA50  FF                 	db	255
  3720   00FA51  FF                 	db	255
  3721   00FA52  FF                 	db	255
  3722   00FA53  FF                 	db	255
  3723   00FA54  FF                 	db	255
  3724   00FA55  FF                 	db	255
  3725   00FA56  FF                 	db	255
  3726   00FA57  FF                 	db	255
  3727   00FA58  FF                 	db	255
  3728   00FA59  FF                 	db	255
  3729   00FA5A  FF                 	db	255
  3730   00FA5B  FF                 	db	255
  3731   00FA5C  FF                 	db	255
  3732   00FA5D  FF                 	db	255
  3733   00FA5E  FF                 	db	255
  3734   00FA5F  FF                 	db	255
  3735   00FA60  FF                 	db	255
  3736   00FA61  FF                 	db	255
  3737   00FA62  FF                 	db	255
  3738   00FA63  FF                 	db	255
  3739   00FA64  FF                 	db	255
  3740   00FA65  FF                 	db	255
  3741   00FA66  FF                 	db	255
  3742   00FA67  FF                 	db	255
  3743   00FA68  FF                 	db	255
  3744   00FA69  FF                 	db	255
  3745   00FA6A  FF                 	db	255
  3746   00FA6B  FF                 	db	255
  3747   00FA6C  FF                 	db	255
  3748   00FA6D  FF                 	db	255
  3749   00FA6E  FF                 	db	255
  3750   00FA6F  FF                 	db	255
  3751   00FA70  FF                 	db	255
  3752   00FA71  FF                 	db	255
  3753   00FA72  FF                 	db	255
  3754   00FA73  FF                 	db	255
  3755   00FA74  FF                 	db	255
  3756   00FA75  FF                 	db	255
  3757   00FA76  FF                 	db	255
  3758   00FA77  FF                 	db	255
  3759   00FA78  FF                 	db	255
  3760   00FA79  FF                 	db	255
  3761   00FA7A  FF                 	db	255
  3762   00FA7B  FF                 	db	255
  3763   00FA7C  FF                 	db	255
  3764   00FA7D  FF                 	db	255
  3765   00FA7E  FF                 	db	255
  3766   00FA7F  FF                 	db	255
  3767   00FA80  FF                 	db	255
  3768   00FA81  FF                 	db	255
  3769   00FA82  FF                 	db	255
  3770   00FA83  FF                 	db	255
  3771   00FA84  FF                 	db	255
  3772   00FA85  FF                 	db	255
  3773   00FA86  FF                 	db	255
  3774   00FA87  FF                 	db	255
  3775   00FA88  FF                 	db	255
  3776   00FA89  FF                 	db	255
  3777   00FA8A  FF                 	db	255
  3778   00FA8B  FF                 	db	255
  3779   00FA8C  FF                 	db	255
  3780   00FA8D  FF                 	db	255
  3781   00FA8E  FF                 	db	255
  3782   00FA8F  FF                 	db	255
  3783   00FA90  FF                 	db	255
  3784   00FA91  FF                 	db	255
  3785   00FA92  FF                 	db	255
  3786   00FA93  FF                 	db	255
  3787   00FA94  FF                 	db	255
  3788   00FA95  FF                 	db	255
  3789   00FA96  FF                 	db	255
  3790   00FA97  FF                 	db	255
  3791   00FA98  FF                 	db	255
  3792   00FA99  FF                 	db	255
  3793   00FA9A  FF                 	db	255
  3794   00FA9B  FF                 	db	255
  3795   00FA9C  FF                 	db	255
  3796   00FA9D  FF                 	db	255
  3797   00FA9E  FF                 	db	255
  3798   00FA9F  FF                 	db	255
  3799   00FAA0  FF                 	db	255
  3800   00FAA1  FF                 	db	255
  3801   00FAA2  FF                 	db	255
  3802   00FAA3  FF                 	db	255
  3803   00FAA4  FF                 	db	255
  3804   00FAA5  FF                 	db	255
  3805   00FAA6  FF                 	db	255
  3806   00FAA7  FF                 	db	255
  3807   00FAA8  FF                 	db	255
  3808   00FAA9  FF                 	db	255
  3809   00FAAA  FF                 	db	255
  3810   00FAAB  FF                 	db	255
  3811   00FAAC  FF                 	db	255
  3812   00FAAD  FF                 	db	255
  3813   00FAAE  FF                 	db	255
  3814   00FAAF  FF                 	db	255
  3815   00FAB0  FF                 	db	255
  3816   00FAB1  FF                 	db	255
  3817   00FAB2  FF                 	db	255
  3818   00FAB3  FF                 	db	255
  3819   00FAB4  FF                 	db	255
  3820   00FAB5  FF                 	db	255
  3821   00FAB6  FF                 	db	255
  3822   00FAB7  FF                 	db	255
  3823   00FAB8  FF                 	db	255
  3824   00FAB9  FF                 	db	255
  3825   00FABA  FF                 	db	255
  3826   00FABB  FF                 	db	255
  3827   00FABC  FF                 	db	255
  3828   00FABD  FF                 	db	255
  3829   00FABE  FF                 	db	255
  3830   00FABF  FF                 	db	255
  3831   00FAC0  FF                 	db	255
  3832   00FAC1  FF                 	db	255
  3833   00FAC2  FF                 	db	255
  3834   00FAC3  FF                 	db	255
  3835   00FAC4  FF                 	db	255
  3836   00FAC5  FF                 	db	255
  3837   00FAC6  FF                 	db	255
  3838   00FAC7  FF                 	db	255
  3839   00FAC8  FF                 	db	255
  3840   00FAC9  FF                 	db	255
  3841   00FACA  FF                 	db	255
  3842   00FACB  FF                 	db	255
  3843   00FACC  FF                 	db	255
  3844   00FACD  FF                 	db	255
  3845   00FACE  FF                 	db	255
  3846   00FACF  FF                 	db	255
  3847   00FAD0  FF                 	db	255
  3848   00FAD1  FF                 	db	255
  3849   00FAD2  FF                 	db	255
  3850   00FAD3  FF                 	db	255
  3851   00FAD4  FF                 	db	255
  3852   00FAD5  FF                 	db	255
  3853   00FAD6  FF                 	db	255
  3854   00FAD7  FF                 	db	255
  3855   00FAD8  FF                 	db	255
  3856   00FAD9  FF                 	db	255
  3857   00FADA  FF                 	db	255
  3858   00FADB  FF                 	db	255
  3859   00FADC  FF                 	db	255
  3860   00FADD  FF                 	db	255
  3861   00FADE  FF                 	db	255
  3862   00FADF  FF                 	db	255
  3863   00FAE0  FF                 	db	255
  3864   00FAE1  FF                 	db	255
  3865   00FAE2  FF                 	db	255
  3866   00FAE3  FF                 	db	255
  3867   00FAE4  FF                 	db	255
  3868   00FAE5  FF                 	db	255
  3869   00FAE6  FF                 	db	255
  3870   00FAE7  FF                 	db	255
  3871   00FAE8  FF                 	db	255
  3872   00FAE9  FF                 	db	255
  3873   00FAEA  FF                 	db	255
  3874   00FAEB  FF                 	db	255
  3875   00FAEC  FF                 	db	255
  3876   00FAED  FF                 	db	255
  3877   00FAEE  FF                 	db	255
  3878   00FAEF  FF                 	db	255
  3879   00FAF0  FF                 	db	255
  3880   00FAF1  FF                 	db	255
  3881   00FAF2  FF                 	db	255
  3882   00FAF3  FF                 	db	255
  3883   00FAF4  FF                 	db	255
  3884   00FAF5  FF                 	db	255
  3885   00FAF6  FF                 	db	255
  3886   00FAF7  FF                 	db	255
  3887   00FAF8  FF                 	db	255
  3888   00FAF9  FF                 	db	255
  3889   00FAFA  FF                 	db	255
  3890   00FAFB  FF                 	db	255
  3891   00FAFC  FF                 	db	255
  3892   00FAFD  FF                 	db	255
  3893   00FAFE  FF                 	db	255
  3894   00FAFF  FF                 	db	255
  3895   00FB00  FF                 	db	255
  3896   00FB01  FF                 	db	255
  3897   00FB02  FF                 	db	255
  3898   00FB03  FF                 	db	255
  3899   00FB04  FF                 	db	255
  3900   00FB05  FF                 	db	255
  3901   00FB06  FF                 	db	255
  3902   00FB07  FF                 	db	255
  3903   00FB08  FF                 	db	255
  3904   00FB09  FF                 	db	255
  3905   00FB0A  FF                 	db	255
  3906   00FB0B  FF                 	db	255
  3907   00FB0C  FF                 	db	255
  3908   00FB0D  FF                 	db	255
  3909   00FB0E  FF                 	db	255
  3910   00FB0F  FF                 	db	255
  3911   00FB10  FF                 	db	255
  3912   00FB11  FF                 	db	255
  3913   00FB12  FF                 	db	255
  3914   00FB13  FF                 	db	255
  3915   00FB14  FF                 	db	255
  3916   00FB15  FF                 	db	255
  3917   00FB16  FF                 	db	255
  3918   00FB17  FF                 	db	255
  3919   00FB18  FF                 	db	255
  3920   00FB19  FF                 	db	255
  3921   00FB1A  FF                 	db	255
  3922   00FB1B  FF                 	db	255
  3923   00FB1C  FF                 	db	255
  3924   00FB1D  FF                 	db	255
  3925   00FB1E  FF                 	db	255
  3926   00FB1F  FF                 	db	255
  3927   00FB20  FF                 	db	255
  3928   00FB21  FF                 	db	255
  3929   00FB22  FF                 	db	255
  3930   00FB23  FF                 	db	255
  3931   00FB24  FF                 	db	255
  3932   00FB25  FF                 	db	255
  3933   00FB26  FF                 	db	255
  3934   00FB27  FF                 	db	255
  3935   00FB28  FF                 	db	255
  3936   00FB29  FF                 	db	255
  3937   00FB2A  FF                 	db	255
  3938   00FB2B  FF                 	db	255
  3939   00FB2C  FF                 	db	255
  3940   00FB2D  FF                 	db	255
  3941   00FB2E  FF                 	db	255
  3942   00FB2F  FF                 	db	255
  3943   00FB30  FF                 	db	255
  3944   00FB31  FF                 	db	255
  3945   00FB32  FF                 	db	255
  3946   00FB33  FF                 	db	255
  3947   00FB34  FF                 	db	255
  3948   00FB35  FF                 	db	255
  3949   00FB36  FF                 	db	255
  3950   00FB37  FF                 	db	255
  3951   00FB38  FF                 	db	255
  3952   00FB39  FF                 	db	255
  3953   00FB3A  FF                 	db	255
  3954   00FB3B  FF                 	db	255
  3955   00FB3C  FF                 	db	255
  3956   00FB3D  FF                 	db	255
  3957   00FB3E  FF                 	db	255
  3958   00FB3F  FF                 	db	255
  3959   00FB40  FF                 	db	255
  3960   00FB41  FF                 	db	255
  3961   00FB42  FF                 	db	255
  3962   00FB43  FF                 	db	255
  3963   00FB44  FF                 	db	255
  3964   00FB45  FF                 	db	255
  3965   00FB46  FF                 	db	255
  3966   00FB47  FF                 	db	255
  3967   00FB48  FF                 	db	255
  3968   00FB49  FF                 	db	255
  3969   00FB4A  FF                 	db	255
  3970   00FB4B  FF                 	db	255
  3971   00FB4C  FF                 	db	255
  3972   00FB4D  FF                 	db	255
  3973   00FB4E  FF                 	db	255
  3974   00FB4F  FF                 	db	255
  3975   00FB50  FF                 	db	255
  3976   00FB51  FF                 	db	255
  3977   00FB52  FF                 	db	255
  3978   00FB53  FF                 	db	255
  3979   00FB54  FF                 	db	255
  3980   00FB55  FF                 	db	255
  3981   00FB56  FF                 	db	255
  3982   00FB57  FF                 	db	255
  3983   00FB58  FF                 	db	255
  3984   00FB59  FF                 	db	255
  3985   00FB5A  FF                 	db	255
  3986   00FB5B  FF                 	db	255
  3987   00FB5C  FF                 	db	255
  3988   00FB5D  FF                 	db	255
  3989   00FB5E  FF                 	db	255
  3990   00FB5F  FF                 	db	255
  3991   00FB60  FF                 	db	255
  3992   00FB61  FF                 	db	255
  3993   00FB62  FF                 	db	255
  3994   00FB63  FF                 	db	255
  3995   00FB64  FF                 	db	255
  3996   00FB65  FF                 	db	255
  3997   00FB66  FF                 	db	255
  3998   00FB67  FF                 	db	255
  3999   00FB68  FF                 	db	255
  4000   00FB69  FF                 	db	255
  4001   00FB6A  FF                 	db	255
  4002   00FB6B  FF                 	db	255
  4003   00FB6C  FF                 	db	255
  4004   00FB6D  FF                 	db	255
  4005   00FB6E  FF                 	db	255
  4006   00FB6F  FF                 	db	255
  4007   00FB70  FF                 	db	255
  4008   00FB71  FF                 	db	255
  4009   00FB72  FF                 	db	255
  4010   00FB73  FF                 	db	255
  4011   00FB74  FF                 	db	255
  4012   00FB75  FF                 	db	255
  4013   00FB76  FF                 	db	255
  4014   00FB77  FF                 	db	255
  4015   00FB78  FF                 	db	255
  4016   00FB79  FF                 	db	255
  4017   00FB7A  FF                 	db	255
  4018   00FB7B  FF                 	db	255
  4019   00FB7C  FF                 	db	255
  4020   00FB7D  FF                 	db	255
  4021   00FB7E  FF                 	db	255
  4022   00FB7F  FF                 	db	255
  4023   00FB80  FF                 	db	255
  4024   00FB81  FF                 	db	255
  4025   00FB82  FF                 	db	255
  4026   00FB83  FF                 	db	255
  4027   00FB84  FF                 	db	255
  4028   00FB85  FF                 	db	255
  4029   00FB86  FF                 	db	255
  4030   00FB87  FF                 	db	255
  4031   00FB88  FF                 	db	255
  4032   00FB89  FF                 	db	255
  4033   00FB8A  FF                 	db	255
  4034   00FB8B  FF                 	db	255
  4035   00FB8C  FF                 	db	255
  4036   00FB8D  FF                 	db	255
  4037   00FB8E  FF                 	db	255
  4038   00FB8F  FF                 	db	255
  4039   00FB90  FF                 	db	255
  4040   00FB91  FF                 	db	255
  4041   00FB92  FF                 	db	255
  4042   00FB93  FF                 	db	255
  4043   00FB94  FF                 	db	255
  4044   00FB95  FF                 	db	255
  4045   00FB96  FF                 	db	255
  4046   00FB97  FF                 	db	255
  4047   00FB98  FF                 	db	255
  4048   00FB99  FF                 	db	255
  4049   00FB9A  FF                 	db	255
  4050   00FB9B  FF                 	db	255
  4051   00FB9C  FF                 	db	255
  4052   00FB9D  FF                 	db	255
  4053   00FB9E  FF                 	db	255
  4054   00FB9F  FF                 	db	255
  4055   00FBA0  FF                 	db	255
  4056   00FBA1  FF                 	db	255
  4057   00FBA2  FF                 	db	255
  4058   00FBA3  FF                 	db	255
  4059   00FBA4  FF                 	db	255
  4060   00FBA5  FF                 	db	255
  4061   00FBA6  FF                 	db	255
  4062   00FBA7  FF                 	db	255
  4063   00FBA8  FF                 	db	255
  4064   00FBA9  FF                 	db	255
  4065   00FBAA  FF                 	db	255
  4066   00FBAB  FF                 	db	255
  4067   00FBAC  FF                 	db	255
  4068   00FBAD  FF                 	db	255
  4069   00FBAE  FF                 	db	255
  4070   00FBAF  FF                 	db	255
  4071   00FBB0  FF                 	db	255
  4072   00FBB1  FF                 	db	255
  4073   00FBB2  FF                 	db	255
  4074   00FBB3  FF                 	db	255
  4075   00FBB4  FF                 	db	255
  4076   00FBB5  FF                 	db	255
  4077   00FBB6  FF                 	db	255
  4078   00FBB7  FF                 	db	255
  4079   00FBB8  FF                 	db	255
  4080   00FBB9  FF                 	db	255
  4081   00FBBA  FF                 	db	255
  4082   00FBBB  FF                 	db	255
  4083   00FBBC  FF                 	db	255
  4084   00FBBD  FF                 	db	255
  4085   00FBBE  FF                 	db	255
  4086   00FBBF  FF                 	db	255
  4087   00FBC0  FF                 	db	255
  4088   00FBC1  FF                 	db	255
  4089   00FBC2  FF                 	db	255
  4090   00FBC3  FF                 	db	255
  4091   00FBC4  FF                 	db	255
  4092   00FBC5  FF                 	db	255
  4093   00FBC6  FF                 	db	255
  4094   00FBC7  FF                 	db	255
  4095   00FBC8  FF                 	db	255
  4096   00FBC9  FF                 	db	255
  4097   00FBCA  FF                 	db	255
  4098   00FBCB  FF                 	db	255
  4099   00FBCC  FF                 	db	255
  4100   00FBCD  FF                 	db	255
  4101   00FBCE  FF                 	db	255
  4102   00FBCF  FF                 	db	255
  4103   00FBD0  FF                 	db	255
  4104   00FBD1  FF                 	db	255
  4105   00FBD2  FF                 	db	255
  4106   00FBD3  FF                 	db	255
  4107   00FBD4  FF                 	db	255
  4108   00FBD5  FF                 	db	255
  4109   00FBD6  FF                 	db	255
  4110   00FBD7  FF                 	db	255
  4111   00FBD8  FF                 	db	255
  4112   00FBD9  FF                 	db	255
  4113   00FBDA  FF                 	db	255
  4114   00FBDB  FF                 	db	255
  4115   00FBDC  FF                 	db	255
  4116   00FBDD  FF                 	db	255
  4117   00FBDE  FF                 	db	255
  4118   00FBDF  FF                 	db	255
  4119   00FBE0  FF                 	db	255
  4120   00FBE1  FF                 	db	255
  4121   00FBE2  FF                 	db	255
  4122   00FBE3  FF                 	db	255
  4123   00FBE4  FF                 	db	255
  4124   00FBE5  FF                 	db	255
  4125   00FBE6  FF                 	db	255
  4126   00FBE7  FF                 	db	255
  4127   00FBE8  FF                 	db	255
  4128   00FBE9  FF                 	db	255
  4129   00FBEA  FF                 	db	255
  4130   00FBEB  FF                 	db	255
  4131   00FBEC  FF                 	db	255
  4132   00FBED  FF                 	db	255
  4133   00FBEE  FF                 	db	255
  4134   00FBEF  FF                 	db	255
  4135   00FBF0  FF                 	db	255
  4136   00FBF1  FF                 	db	255
  4137   00FBF2  FF                 	db	255
  4138   00FBF3  FF                 	db	255
  4139   00FBF4  FF                 	db	255
  4140   00FBF5  FF                 	db	255
  4141   00FBF6  FF                 	db	255
  4142   00FBF7  FF                 	db	255
  4143   00FBF8  FF                 	db	255
  4144   00FBF9  FF                 	db	255
  4145   00FBFA  FF                 	db	255
  4146   00FBFB  FF                 	db	255
  4147   00FBFC  FF                 	db	255
  4148   00FBFD  FF                 	db	255
  4149   00FBFE  FF                 	db	255
  4150   00FBFF  FF                 	db	255
  4151   00FC00  FF                 	db	255
  4152   00FC01  FF                 	db	255
  4153   00FC02  FF                 	db	255
  4154   00FC03  FF                 	db	255
  4155   00FC04  FF                 	db	255
  4156   00FC05  FF                 	db	255
  4157   00FC06  FF                 	db	255
  4158   00FC07  FF                 	db	255
  4159   00FC08  FF                 	db	255
  4160   00FC09  FF                 	db	255
  4161   00FC0A  FF                 	db	255
  4162   00FC0B  FF                 	db	255
  4163   00FC0C  FF                 	db	255
  4164   00FC0D  FF                 	db	255
  4165   00FC0E  FF                 	db	255
  4166   00FC0F  FF                 	db	255
  4167   00FC10  FF                 	db	255
  4168   00FC11  FF                 	db	255
  4169   00FC12  FF                 	db	255
  4170   00FC13  FF                 	db	255
  4171   00FC14  FF                 	db	255
  4172   00FC15  FF                 	db	255
  4173   00FC16  FF                 	db	255
  4174   00FC17  FF                 	db	255
  4175   00FC18  FF                 	db	255
  4176   00FC19  FF                 	db	255
  4177   00FC1A  FF                 	db	255
  4178   00FC1B  FF                 	db	255
  4179   00FC1C  FF                 	db	255
  4180   00FC1D  FF                 	db	255
  4181   00FC1E  FF                 	db	255
  4182   00FC1F  FF                 	db	255
  4183   00FC20  FF                 	db	255
  4184   00FC21  FF                 	db	255
  4185   00FC22  FF                 	db	255
  4186   00FC23  FF                 	db	255
  4187   00FC24  FF                 	db	255
  4188   00FC25  FF                 	db	255
  4189   00FC26  FF                 	db	255
  4190   00FC27  FF                 	db	255
  4191   00FC28  FF                 	db	255
  4192   00FC29  FF                 	db	255
  4193   00FC2A  FF                 	db	255
  4194   00FC2B  FF                 	db	255
  4195   00FC2C  FF                 	db	255
  4196   00FC2D  FF                 	db	255
  4197   00FC2E  FF                 	db	255
  4198   00FC2F  FF                 	db	255
  4199   00FC30  FF                 	db	255
  4200   00FC31  FF                 	db	255
  4201   00FC32  FF                 	db	255
  4202   00FC33  FF                 	db	255
  4203   00FC34  FF                 	db	255
  4204   00FC35  FF                 	db	255
  4205   00FC36  FF                 	db	255
  4206   00FC37  FF                 	db	255
  4207   00FC38  FF                 	db	255
  4208   00FC39  FF                 	db	255
  4209   00FC3A  FF                 	db	255
  4210   00FC3B  FF                 	db	255
  4211   00FC3C  FF                 	db	255
  4212   00FC3D  FF                 	db	255
  4213   00FC3E  FF                 	db	255
  4214   00FC3F  FF                 	db	255
  4215   00FC40  FF                 	db	255
  4216   00FC41  FF                 	db	255
  4217   00FC42  FF                 	db	255
  4218   00FC43  FF                 	db	255
  4219   00FC44  FF                 	db	255
  4220   00FC45  FF                 	db	255
  4221   00FC46  FF                 	db	255
  4222   00FC47  FF                 	db	255
  4223   00FC48  FF                 	db	255
  4224   00FC49  FF                 	db	255
  4225   00FC4A  FF                 	db	255
  4226   00FC4B  FF                 	db	255
  4227   00FC4C  FF                 	db	255
  4228   00FC4D  FF                 	db	255
  4229   00FC4E  FF                 	db	255
  4230   00FC4F  FF                 	db	255
  4231   00FC50  FF                 	db	255
  4232   00FC51  FF                 	db	255
  4233   00FC52  FF                 	db	255
  4234   00FC53  FF                 	db	255
  4235   00FC54  FF                 	db	255
  4236   00FC55  FF                 	db	255
  4237   00FC56  FF                 	db	255
  4238   00FC57  FF                 	db	255
  4239   00FC58  FF                 	db	255
  4240   00FC59  FF                 	db	255
  4241   00FC5A  FF                 	db	255
  4242   00FC5B  FF                 	db	255
  4243   00FC5C  FF                 	db	255
  4244   00FC5D  FF                 	db	255
  4245   00FC5E  FF                 	db	255
  4246   00FC5F  FF                 	db	255
  4247   00FC60  FF                 	db	255
  4248   00FC61  FF                 	db	255
  4249   00FC62  FF                 	db	255
  4250   00FC63  FF                 	db	255
  4251   00FC64  FF                 	db	255
  4252   00FC65  FF                 	db	255
  4253   00FC66  FF                 	db	255
  4254   00FC67  FF                 	db	255
  4255   00FC68  FF                 	db	255
  4256   00FC69  FF                 	db	255
  4257   00FC6A  FF                 	db	255
  4258   00FC6B  FF                 	db	255
  4259   00FC6C  FF                 	db	255
  4260   00FC6D  FF                 	db	255
  4261   00FC6E  FF                 	db	255
  4262   00FC6F  FF                 	db	255
  4263   00FC70  FF                 	db	255
  4264   00FC71  FF                 	db	255
  4265   00FC72  FF                 	db	255
  4266   00FC73  FF                 	db	255
  4267   00FC74  FF                 	db	255
  4268   00FC75  FF                 	db	255
  4269   00FC76  FF                 	db	255
  4270   00FC77  FF                 	db	255
  4271   00FC78  FF                 	db	255
  4272   00FC79  FF                 	db	255
  4273   00FC7A  FF                 	db	255
  4274   00FC7B  FF                 	db	255
  4275   00FC7C  FF                 	db	255
  4276   00FC7D  FF                 	db	255
  4277   00FC7E  FF                 	db	255
  4278   00FC7F  FF                 	db	255
  4279   00FC80  FF                 	db	255
  4280   00FC81  FF                 	db	255
  4281   00FC82  FF                 	db	255
  4282   00FC83  FF                 	db	255
  4283   00FC84  FF                 	db	255
  4284   00FC85  FF                 	db	255
  4285   00FC86  FF                 	db	255
  4286   00FC87  FF                 	db	255
  4287   00FC88  FF                 	db	255
  4288   00FC89  FF                 	db	255
  4289   00FC8A  FF                 	db	255
  4290   00FC8B  FF                 	db	255
  4291   00FC8C  FF                 	db	255
  4292   00FC8D  FF                 	db	255
  4293   00FC8E  FF                 	db	255
  4294   00FC8F  FF                 	db	255
  4295   00FC90  FF                 	db	255
  4296   00FC91  FF                 	db	255
  4297   00FC92  FF                 	db	255
  4298   00FC93  FF                 	db	255
  4299   00FC94  FF                 	db	255
  4300   00FC95  FF                 	db	255
  4301   00FC96  FF                 	db	255
  4302   00FC97  FF                 	db	255
  4303   00FC98  FF                 	db	255
  4304   00FC99  FF                 	db	255
  4305   00FC9A  FF                 	db	255
  4306   00FC9B  FF                 	db	255
  4307   00FC9C  FF                 	db	255
  4308   00FC9D  FF                 	db	255
  4309   00FC9E  FF                 	db	255
  4310   00FC9F  FF                 	db	255
  4311   00FCA0  FF                 	db	255
  4312   00FCA1  FF                 	db	255
  4313   00FCA2  FF                 	db	255
  4314   00FCA3  FF                 	db	255
  4315   00FCA4  FF                 	db	255
  4316   00FCA5  FF                 	db	255
  4317   00FCA6  FF                 	db	255
  4318   00FCA7  FF                 	db	255
  4319   00FCA8  FF                 	db	255
  4320   00FCA9  FF                 	db	255
  4321   00FCAA  FF                 	db	255
  4322   00FCAB  FF                 	db	255
  4323   00FCAC  FF                 	db	255
  4324   00FCAD  FF                 	db	255
  4325   00FCAE  FF                 	db	255
  4326   00FCAF  FF                 	db	255
  4327   00FCB0  FF                 	db	255
  4328   00FCB1  FF                 	db	255
  4329   00FCB2  FF                 	db	255
  4330   00FCB3  FF                 	db	255
  4331   00FCB4  FF                 	db	255
  4332   00FCB5  FF                 	db	255
  4333   00FCB6  FF                 	db	255
  4334   00FCB7  FF                 	db	255
  4335   00FCB8  FF                 	db	255
  4336   00FCB9  FF                 	db	255
  4337   00FCBA  FF                 	db	255
  4338   00FCBB  FF                 	db	255
  4339   00FCBC  FF                 	db	255
  4340   00FCBD  FF                 	db	255
  4341   00FCBE  FF                 	db	255
  4342   00FCBF  FF                 	db	255
  4343   00FCC0  FF                 	db	255
  4344   00FCC1  FF                 	db	255
  4345   00FCC2  FF                 	db	255
  4346   00FCC3  FF                 	db	255
  4347   00FCC4  FF                 	db	255
  4348   00FCC5  FF                 	db	255
  4349   00FCC6  FF                 	db	255
  4350   00FCC7  FF                 	db	255
  4351   00FCC8  FF                 	db	255
  4352   00FCC9  FF                 	db	255
  4353   00FCCA  FF                 	db	255
  4354   00FCCB  FF                 	db	255
  4355   00FCCC  FF                 	db	255
  4356   00FCCD  FF                 	db	255
  4357   00FCCE  FF                 	db	255
  4358   00FCCF  FF                 	db	255
  4359   00FCD0  FF                 	db	255
  4360   00FCD1  FF                 	db	255
  4361   00FCD2  FF                 	db	255
  4362   00FCD3  FF                 	db	255
  4363   00FCD4  FF                 	db	255
  4364   00FCD5  FF                 	db	255
  4365   00FCD6  FF                 	db	255
  4366   00FCD7  FF                 	db	255
  4367   00FCD8  FF                 	db	255
  4368   00FCD9  FF                 	db	255
  4369   00FCDA  FF                 	db	255
  4370   00FCDB  FF                 	db	255
  4371   00FCDC  FF                 	db	255
  4372   00FCDD  FF                 	db	255
  4373   00FCDE  FF                 	db	255
  4374   00FCDF  FF                 	db	255
  4375   00FCE0  FF                 	db	255
  4376   00FCE1  FF                 	db	255
  4377   00FCE2  FF                 	db	255
  4378   00FCE3  FF                 	db	255
  4379   00FCE4  FF                 	db	255
  4380   00FCE5  FF                 	db	255
  4381   00FCE6  FF                 	db	255
  4382   00FCE7  FF                 	db	255
  4383   00FCE8  FF                 	db	255
  4384   00FCE9  FF                 	db	255
  4385   00FCEA  FF                 	db	255
  4386   00FCEB  FF                 	db	255
  4387   00FCEC  FF                 	db	255
  4388   00FCED  FF                 	db	255
  4389   00FCEE  FF                 	db	255
  4390   00FCEF  FF                 	db	255
  4391   00FCF0  FF                 	db	255
  4392   00FCF1  FF                 	db	255
  4393   00FCF2  FF                 	db	255
  4394   00FCF3  FF                 	db	255
  4395   00FCF4  FF                 	db	255
  4396   00FCF5  FF                 	db	255
  4397   00FCF6  FF                 	db	255
  4398   00FCF7  FF                 	db	255
  4399   00FCF8  FF                 	db	255
  4400   00FCF9  FF                 	db	255
  4401   00FCFA  FF                 	db	255
  4402   00FCFB  FF                 	db	255
  4403   00FCFC  FF                 	db	255
  4404   00FCFD  FF                 	db	255
  4405   00FCFE  FF                 	db	255
  4406   00FCFF  FF                 	db	255
  4407   00FD00  FF                 	db	255
  4408   00FD01  FF                 	db	255
  4409   00FD02  FF                 	db	255
  4410   00FD03  FF                 	db	255
  4411   00FD04  FF                 	db	255
  4412   00FD05  FF                 	db	255
  4413   00FD06  FF                 	db	255
  4414   00FD07  FF                 	db	255
  4415   00FD08  FF                 	db	255
  4416   00FD09  FF                 	db	255
  4417   00FD0A  FF                 	db	255
  4418   00FD0B  FF                 	db	255
  4419   00FD0C  FF                 	db	255
  4420   00FD0D  FF                 	db	255
  4421   00FD0E  FF                 	db	255
  4422   00FD0F  FF                 	db	255
  4423   00FD10  FF                 	db	255
  4424   00FD11  FF                 	db	255
  4425   00FD12  FF                 	db	255
  4426   00FD13  FF                 	db	255
  4427   00FD14  FF                 	db	255
  4428   00FD15  FF                 	db	255
  4429   00FD16  FF                 	db	255
  4430   00FD17  FF                 	db	255
  4431   00FD18  FF                 	db	255
  4432   00FD19  FF                 	db	255
  4433   00FD1A  FF                 	db	255
  4434   00FD1B  FF                 	db	255
  4435   00FD1C  FF                 	db	255
  4436   00FD1D  FF                 	db	255
  4437   00FD1E  FF                 	db	255
  4438   00FD1F  FF                 	db	255
  4439   00FD20  FF                 	db	255
  4440   00FD21  FF                 	db	255
  4441   00FD22  FF                 	db	255
  4442   00FD23  FF                 	db	255
  4443   00FD24  FF                 	db	255
  4444   00FD25  FF                 	db	255
  4445   00FD26  FF                 	db	255
  4446   00FD27  FF                 	db	255
  4447   00FD28  FF                 	db	255
  4448   00FD29  FF                 	db	255
  4449   00FD2A  FF                 	db	255
  4450   00FD2B  FF                 	db	255
  4451   00FD2C  FF                 	db	255
  4452   00FD2D  FF                 	db	255
  4453   00FD2E  FF                 	db	255
  4454   00FD2F  FF                 	db	255
  4455   00FD30  FF                 	db	255
  4456   00FD31  FF                 	db	255
  4457   00FD32  FF                 	db	255
  4458   00FD33  FF                 	db	255
  4459   00FD34  FF                 	db	255
  4460   00FD35  FF                 	db	255
  4461   00FD36  FF                 	db	255
  4462   00FD37  FF                 	db	255
  4463   00FD38  FF                 	db	255
  4464   00FD39  FF                 	db	255
  4465   00FD3A  FF                 	db	255
  4466   00FD3B  FF                 	db	255
  4467   00FD3C  FF                 	db	255
  4468   00FD3D  FF                 	db	255
  4469   00FD3E  FF                 	db	255
  4470   00FD3F  FF                 	db	255
  4471   00FD40  FF                 	db	255
  4472   00FD41  FF                 	db	255
  4473   00FD42  FF                 	db	255
  4474   00FD43  FF                 	db	255
  4475   00FD44  FF                 	db	255
  4476   00FD45  FF                 	db	255
  4477   00FD46  FF                 	db	255
  4478   00FD47  FF                 	db	255
  4479   00FD48  FF                 	db	255
  4480   00FD49  FF                 	db	255
  4481   00FD4A  FF                 	db	255
  4482   00FD4B  FF                 	db	255
  4483   00FD4C  FF                 	db	255
  4484   00FD4D  FF                 	db	255
  4485   00FD4E  FF                 	db	255
  4486   00FD4F  FF                 	db	255
  4487   00FD50  FF                 	db	255
  4488   00FD51  FF                 	db	255
  4489   00FD52  FF                 	db	255
  4490   00FD53  FF                 	db	255
  4491   00FD54  FF                 	db	255
  4492   00FD55  FF                 	db	255
  4493   00FD56  FF                 	db	255
  4494   00FD57  FF                 	db	255
  4495   00FD58  FF                 	db	255
  4496   00FD59  FF                 	db	255
  4497   00FD5A  FF                 	db	255
  4498   00FD5B  FF                 	db	255
  4499   00FD5C  FF                 	db	255
  4500   00FD5D  FF                 	db	255
  4501   00FD5E  FF                 	db	255
  4502   00FD5F  FF                 	db	255
  4503   00FD60  FF                 	db	255
  4504   00FD61  FF                 	db	255
  4505   00FD62  FF                 	db	255
  4506   00FD63  FF                 	db	255
  4507   00FD64  FF                 	db	255
  4508   00FD65  FF                 	db	255
  4509   00FD66  FF                 	db	255
  4510   00FD67  FF                 	db	255
  4511   00FD68  FF                 	db	255
  4512   00FD69  FF                 	db	255
  4513   00FD6A  FF                 	db	255
  4514   00FD6B  FF                 	db	255
  4515   00FD6C  FF                 	db	255
  4516   00FD6D  FF                 	db	255
  4517   00FD6E  FF                 	db	255
  4518   00FD6F  FF                 	db	255
  4519   00FD70  FF                 	db	255
  4520   00FD71  FF                 	db	255
  4521   00FD72  FF                 	db	255
  4522   00FD73  FF                 	db	255
  4523   00FD74  FF                 	db	255
  4524   00FD75  FF                 	db	255
  4525   00FD76  FF                 	db	255
  4526   00FD77  FF                 	db	255
  4527   00FD78  FF                 	db	255
  4528   00FD79  FF                 	db	255
  4529   00FD7A  FF                 	db	255
  4530   00FD7B  FF                 	db	255
  4531   00FD7C  FF                 	db	255
  4532   00FD7D  FF                 	db	255
  4533   00FD7E  FF                 	db	255
  4534   00FD7F  FF                 	db	255
  4535   00FD80  FF                 	db	255
  4536   00FD81  FF                 	db	255
  4537   00FD82  FF                 	db	255
  4538   00FD83  FF                 	db	255
  4539   00FD84  FF                 	db	255
  4540   00FD85  FF                 	db	255
  4541   00FD86  FF                 	db	255
  4542   00FD87  FF                 	db	255
  4543   00FD88  FF                 	db	255
  4544   00FD89  FF                 	db	255
  4545   00FD8A  FF                 	db	255
  4546   00FD8B  FF                 	db	255
  4547   00FD8C  FF                 	db	255
  4548   00FD8D  FF                 	db	255
  4549   00FD8E  FF                 	db	255
  4550   00FD8F  FF                 	db	255
  4551   00FD90  FF                 	db	255
  4552   00FD91  FF                 	db	255
  4553   00FD92  FF                 	db	255
  4554   00FD93  FF                 	db	255
  4555   00FD94  FF                 	db	255
  4556   00FD95  FF                 	db	255
  4557   00FD96  FF                 	db	255
  4558   00FD97  FF                 	db	255
  4559   00FD98  FF                 	db	255
  4560   00FD99  FF                 	db	255
  4561   00FD9A  FF                 	db	255
  4562   00FD9B  FF                 	db	255
  4563   00FD9C  FF                 	db	255
  4564   00FD9D  FF                 	db	255
  4565   00FD9E  FF                 	db	255
  4566   00FD9F  FF                 	db	255
  4567   00FDA0  FF                 	db	255
  4568   00FDA1  FF                 	db	255
  4569   00FDA2  FF                 	db	255
  4570   00FDA3  FF                 	db	255
  4571   00FDA4  FF                 	db	255
  4572   00FDA5  FF                 	db	255
  4573   00FDA6  FF                 	db	255
  4574   00FDA7  FF                 	db	255
  4575   00FDA8  FF                 	db	255
  4576   00FDA9  FF                 	db	255
  4577   00FDAA  FF                 	db	255
  4578   00FDAB  FF                 	db	255
  4579   00FDAC  FF                 	db	255
  4580   00FDAD  FF                 	db	255
  4581   00FDAE  FF                 	db	255
  4582   00FDAF  FF                 	db	255
  4583   00FDB0  FF                 	db	255
  4584   00FDB1  FF                 	db	255
  4585   00FDB2  FF                 	db	255
  4586   00FDB3  FF                 	db	255
  4587   00FDB4  FF                 	db	255
  4588   00FDB5  FF                 	db	255
  4589   00FDB6  FF                 	db	255
  4590   00FDB7  FF                 	db	255
  4591   00FDB8  FF                 	db	255
  4592   00FDB9  FF                 	db	255
  4593   00FDBA  FF                 	db	255
  4594   00FDBB  FF                 	db	255
  4595   00FDBC  FF                 	db	255
  4596   00FDBD  FF                 	db	255
  4597   00FDBE  FF                 	db	255
  4598   00FDBF  FF                 	db	255
  4599   00FDC0  FF                 	db	255
  4600   00FDC1  FF                 	db	255
  4601   00FDC2  FF                 	db	255
  4602   00FDC3  FF                 	db	255
  4603   00FDC4  FF                 	db	255
  4604   00FDC5  FF                 	db	255
  4605   00FDC6  FF                 	db	255
  4606   00FDC7  FF                 	db	255
  4607   00FDC8  FF                 	db	255
  4608   00FDC9  FF                 	db	255
  4609   00FDCA  FF                 	db	255
  4610   00FDCB  FF                 	db	255
  4611   00FDCC  FF                 	db	255
  4612   00FDCD  FF                 	db	255
  4613   00FDCE  FF                 	db	255
  4614   00FDCF  FF                 	db	255
  4615   00FDD0  FF                 	db	255
  4616   00FDD1  FF                 	db	255
  4617   00FDD2  FF                 	db	255
  4618   00FDD3  FF                 	db	255
  4619   00FDD4  FF                 	db	255
  4620   00FDD5  FF                 	db	255
  4621   00FDD6  FF                 	db	255
  4622   00FDD7  FF                 	db	255
  4623   00FDD8  FF                 	db	255
  4624   00FDD9  FF                 	db	255
  4625   00FDDA  FF                 	db	255
  4626   00FDDB  FF                 	db	255
  4627   00FDDC  FF                 	db	255
  4628   00FDDD  FF                 	db	255
  4629   00FDDE  FF                 	db	255
  4630   00FDDF  FF                 	db	255
  4631   00FDE0  FF                 	db	255
  4632   00FDE1  FF                 	db	255
  4633   00FDE2  FF                 	db	255
  4634   00FDE3  FF                 	db	255
  4635   00FDE4  FF                 	db	255
  4636   00FDE5  FF                 	db	255
  4637   00FDE6  FF                 	db	255
  4638   00FDE7  FF                 	db	255
  4639   00FDE8  FF                 	db	255
  4640   00FDE9  FF                 	db	255
  4641   00FDEA  FF                 	db	255
  4642   00FDEB  FF                 	db	255
  4643   00FDEC  FF                 	db	255
  4644   00FDED  FF                 	db	255
  4645   00FDEE  FF                 	db	255
  4646   00FDEF  FF                 	db	255
  4647   00FDF0  FF                 	db	255
  4648   00FDF1  FF                 	db	255
  4649   00FDF2  FF                 	db	255
  4650   00FDF3  FF                 	db	255
  4651   00FDF4  FF                 	db	255
  4652   00FDF5  FF                 	db	255
  4653   00FDF6  FF                 	db	255
  4654   00FDF7  FF                 	db	255
  4655   00FDF8  FF                 	db	255
  4656   00FDF9  FF                 	db	255
  4657   00FDFA  FF                 	db	255
  4658   00FDFB  FF                 	db	255
  4659   00FDFC  FF                 	db	255
  4660   00FDFD  FF                 	db	255
  4661   00FDFE  FF                 	db	255
  4662   00FDFF  FF                 	db	255
  4663   00FE00  FF                 	db	255
  4664   00FE01  FF                 	db	255
  4665   00FE02  FF                 	db	255
  4666   00FE03  FF                 	db	255
  4667   00FE04  FF                 	db	255
  4668   00FE05  FF                 	db	255
  4669   00FE06  FF                 	db	255
  4670   00FE07  FF                 	db	255
  4671   00FE08  FF                 	db	255
  4672   00FE09  FF                 	db	255
  4673   00FE0A  FF                 	db	255
  4674   00FE0B  FF                 	db	255
  4675   00FE0C  FF                 	db	255
  4676   00FE0D  FF                 	db	255
  4677   00FE0E  FF                 	db	255
  4678   00FE0F  FF                 	db	255
  4679   00FE10  FF                 	db	255
  4680   00FE11  FF                 	db	255
  4681   00FE12  FF                 	db	255
  4682   00FE13  FF                 	db	255
  4683   00FE14  FF                 	db	255
  4684   00FE15  FF                 	db	255
  4685   00FE16  FF                 	db	255
  4686   00FE17  FF                 	db	255
  4687   00FE18  FF                 	db	255
  4688   00FE19  FF                 	db	255
  4689   00FE1A  FF                 	db	255
  4690   00FE1B  FF                 	db	255
  4691   00FE1C  FF                 	db	255
  4692   00FE1D  FF                 	db	255
  4693   00FE1E  FF                 	db	255
  4694   00FE1F  FF                 	db	255
  4695   00FE20  FF                 	db	255
  4696   00FE21  FF                 	db	255
  4697   00FE22  FF                 	db	255
  4698   00FE23  FF                 	db	255
  4699   00FE24  FF                 	db	255
  4700   00FE25  FF                 	db	255
  4701   00FE26  FF                 	db	255
  4702   00FE27  FF                 	db	255
  4703   00FE28  FF                 	db	255
  4704   00FE29  FF                 	db	255
  4705   00FE2A  FF                 	db	255
  4706   00FE2B  FF                 	db	255
  4707   00FE2C  FF                 	db	255
  4708   00FE2D  FF                 	db	255
  4709   00FE2E  FF                 	db	255
  4710   00FE2F  FF                 	db	255
  4711   00FE30  FF                 	db	255
  4712   00FE31  FF                 	db	255
  4713   00FE32  FF                 	db	255
  4714   00FE33  FF                 	db	255
  4715   00FE34  FF                 	db	255
  4716   00FE35  FF                 	db	255
  4717   00FE36  FF                 	db	255
  4718   00FE37  FF                 	db	255
  4719   00FE38  FF                 	db	255
  4720   00FE39  FF                 	db	255
  4721   00FE3A  FF                 	db	255
  4722   00FE3B  FF                 	db	255
  4723   00FE3C  FF                 	db	255
  4724   00FE3D  FF                 	db	255
  4725   00FE3E  FF                 	db	255
  4726   00FE3F  FF                 	db	255
  4727   00FE40  FF                 	db	255
  4728   00FE41  FF                 	db	255
  4729   00FE42  FF                 	db	255
  4730   00FE43  FF                 	db	255
  4731   00FE44  FF                 	db	255
  4732   00FE45  FF                 	db	255
  4733   00FE46  FF                 	db	255
  4734   00FE47  FF                 	db	255
  4735   00FE48  FF                 	db	255
  4736   00FE49  FF                 	db	255
  4737   00FE4A  FF                 	db	255
  4738   00FE4B  FF                 	db	255
  4739   00FE4C  FF                 	db	255
  4740   00FE4D  FF                 	db	255
  4741   00FE4E  FF                 	db	255
  4742   00FE4F  FF                 	db	255
  4743   00FE50  FF                 	db	255
  4744   00FE51  FF                 	db	255
  4745   00FE52  FF                 	db	255
  4746   00FE53  FF                 	db	255
  4747   00FE54  FF                 	db	255
  4748   00FE55  FF                 	db	255
  4749   00FE56  FF                 	db	255
  4750   00FE57  FF                 	db	255
  4751   00FE58  FF                 	db	255
  4752   00FE59  FF                 	db	255
  4753   00FE5A  FF                 	db	255
  4754   00FE5B  FF                 	db	255
  4755   00FE5C  FF                 	db	255
  4756   00FE5D  FF                 	db	255
  4757   00FE5E  FF                 	db	255
  4758   00FE5F  FF                 	db	255
  4759   00FE60  FF                 	db	255
  4760   00FE61  FF                 	db	255
  4761   00FE62  FF                 	db	255
  4762   00FE63  FF                 	db	255
  4763   00FE64  FF                 	db	255
  4764   00FE65  FF                 	db	255
  4765   00FE66  FF                 	db	255
  4766   00FE67  FF                 	db	255
  4767   00FE68  FF                 	db	255
  4768   00FE69  FF                 	db	255
  4769   00FE6A  FF                 	db	255
  4770   00FE6B  FF                 	db	255
  4771   00FE6C  FF                 	db	255
  4772   00FE6D  FF                 	db	255
  4773   00FE6E  FF                 	db	255
  4774   00FE6F  FF                 	db	255
  4775   00FE70  FF                 	db	255
  4776   00FE71  FF                 	db	255
  4777   00FE72  FF                 	db	255
  4778   00FE73  FF                 	db	255
  4779   00FE74  FF                 	db	255
  4780   00FE75  FF                 	db	255
  4781   00FE76  FF                 	db	255
  4782   00FE77  FF                 	db	255
  4783   00FE78  FF                 	db	255
  4784   00FE79  FF                 	db	255
  4785   00FE7A  FF                 	db	255
  4786   00FE7B  FF                 	db	255
  4787   00FE7C  FF                 	db	255
  4788   00FE7D  FF                 	db	255
  4789   00FE7E  FF                 	db	255
  4790   00FE7F  FF                 	db	255
  4791   00FE80  FF                 	db	255
  4792   00FE81  FF                 	db	255
  4793   00FE82  FF                 	db	255
  4794   00FE83  FF                 	db	255
  4795   00FE84  FF                 	db	255
  4796   00FE85  FF                 	db	255
  4797   00FE86  FF                 	db	255
  4798   00FE87  FF                 	db	255
  4799   00FE88  FF                 	db	255
  4800   00FE89  FF                 	db	255
  4801   00FE8A  FF                 	db	255
  4802   00FE8B  FF                 	db	255
  4803   00FE8C  FF                 	db	255
  4804   00FE8D  FF                 	db	255
  4805   00FE8E  FF                 	db	255
  4806   00FE8F  FF                 	db	255
  4807   00FE90  FF                 	db	255
  4808   00FE91  FF                 	db	255
  4809   00FE92  FF                 	db	255
  4810   00FE93  FF                 	db	255
  4811   00FE94  FF                 	db	255
  4812   00FE95  FF                 	db	255
  4813   00FE96  FF                 	db	255
  4814   00FE97  FF                 	db	255
  4815   00FE98  FF                 	db	255
  4816   00FE99  FF                 	db	255
  4817   00FE9A  FF                 	db	255
  4818   00FE9B  FF                 	db	255
  4819   00FE9C  FF                 	db	255
  4820   00FE9D  FF                 	db	255
  4821   00FE9E  FF                 	db	255
  4822   00FE9F  FF                 	db	255
  4823   00FEA0  FF                 	db	255
  4824   00FEA1  FF                 	db	255
  4825   00FEA2  FF                 	db	255
  4826   00FEA3  FF                 	db	255
  4827   00FEA4  FF                 	db	255
  4828   00FEA5  FF                 	db	255
  4829   00FEA6  FF                 	db	255
  4830   00FEA7  FF                 	db	255
  4831   00FEA8  FF                 	db	255
  4832   00FEA9  FF                 	db	255
  4833   00FEAA  FF                 	db	255
  4834   00FEAB  FF                 	db	255
  4835   00FEAC  FF                 	db	255
  4836   00FEAD  FF                 	db	255
  4837   00FEAE  FF                 	db	255
  4838   00FEAF  FF                 	db	255
  4839   00FEB0  FF                 	db	255
  4840   00FEB1  FF                 	db	255
  4841   00FEB2  FF                 	db	255
  4842   00FEB3  FF                 	db	255
  4843   00FEB4  FF                 	db	255
  4844   00FEB5  FF                 	db	255
  4845   00FEB6  FF                 	db	255
  4846   00FEB7  FF                 	db	255
  4847   00FEB8  FF                 	db	255
  4848   00FEB9  FF                 	db	255
  4849   00FEBA  FF                 	db	255
  4850   00FEBB  FF                 	db	255
  4851   00FEBC  FF                 	db	255
  4852   00FEBD  FF                 	db	255
  4853   00FEBE  FF                 	db	255
  4854   00FEBF  FF                 	db	255
  4855   00FEC0  FF                 	db	255
  4856   00FEC1  FF                 	db	255
  4857   00FEC2  FF                 	db	255
  4858   00FEC3  FF                 	db	255
  4859   00FEC4  FF                 	db	255
  4860   00FEC5  FF                 	db	255
  4861   00FEC6  FF                 	db	255
  4862   00FEC7  FF                 	db	255
  4863   00FEC8  FF                 	db	255
  4864   00FEC9  FF                 	db	255
  4865   00FECA  FF                 	db	255
  4866   00FECB  FF                 	db	255
  4867   00FECC  FF                 	db	255
  4868   00FECD  FF                 	db	255
  4869   00FECE  FF                 	db	255
  4870   00FECF  FF                 	db	255
  4871   00FED0  FF                 	db	255
  4872   00FED1  FF                 	db	255
  4873   00FED2  FF                 	db	255
  4874   00FED3  FF                 	db	255
  4875   00FED4  FF                 	db	255
  4876   00FED5  FF                 	db	255
  4877   00FED6  FF                 	db	255
  4878   00FED7  FF                 	db	255
  4879   00FED8  FF                 	db	255
  4880   00FED9  FF                 	db	255
  4881   00FEDA  FF                 	db	255
  4882   00FEDB  FF                 	db	255
  4883   00FEDC  FF                 	db	255
  4884   00FEDD  FF                 	db	255
  4885   00FEDE  FF                 	db	255
  4886   00FEDF  FF                 	db	255
  4887   00FEE0  FF                 	db	255
  4888   00FEE1  FF                 	db	255
  4889   00FEE2  FF                 	db	255
  4890   00FEE3  FF                 	db	255
  4891   00FEE4  FF                 	db	255
  4892   00FEE5  FF                 	db	255
  4893   00FEE6  FF                 	db	255
  4894   00FEE7  FF                 	db	255
  4895   00FEE8  FF                 	db	255
  4896   00FEE9  FF                 	db	255
  4897   00FEEA  FF                 	db	255
  4898   00FEEB  FF                 	db	255
  4899   00FEEC  FF                 	db	255
  4900   00FEED  FF                 	db	255
  4901   00FEEE  FF                 	db	255
  4902   00FEEF  FF                 	db	255
  4903   00FEF0  FF                 	db	255
  4904   00FEF1  FF                 	db	255
  4905   00FEF2  FF                 	db	255
  4906   00FEF3  FF                 	db	255
  4907   00FEF4  FF                 	db	255
  4908   00FEF5  FF                 	db	255
  4909   00FEF6  FF                 	db	255
  4910   00FEF7  FF                 	db	255
  4911   00FEF8  FF                 	db	255
  4912   00FEF9  FF                 	db	255
  4913   00FEFA  FF                 	db	255
  4914   00FEFB  FF                 	db	255
  4915   00FEFC  FF                 	db	255
  4916   00FEFD  FF                 	db	255
  4917   00FEFE  FF                 	db	255
  4918   00FEFF  FF                 	db	255
  4919   00FF00  FF                 	db	255
  4920   00FF01  FF                 	db	255
  4921   00FF02  FF                 	db	255
  4922   00FF03  FF                 	db	255
  4923   00FF04  FF                 	db	255
  4924   00FF05  FF                 	db	255
  4925   00FF06  FF                 	db	255
  4926   00FF07  FF                 	db	255
  4927   00FF08  FF                 	db	255
  4928   00FF09  FF                 	db	255
  4929   00FF0A  FF                 	db	255
  4930   00FF0B  FF                 	db	255
  4931   00FF0C  FF                 	db	255
  4932   00FF0D  FF                 	db	255
  4933   00FF0E  FF                 	db	255
  4934   00FF0F  FF                 	db	255
  4935   00FF10  FF                 	db	255
  4936   00FF11  FF                 	db	255
  4937   00FF12  FF                 	db	255
  4938   00FF13  FF                 	db	255
  4939   00FF14  FF                 	db	255
  4940   00FF15  FF                 	db	255
  4941   00FF16  FF                 	db	255
  4942   00FF17  FF                 	db	255
  4943   00FF18  FF                 	db	255
  4944   00FF19  FF                 	db	255
  4945   00FF1A  FF                 	db	255
  4946   00FF1B  FF                 	db	255
  4947   00FF1C  FF                 	db	255
  4948   00FF1D  FF                 	db	255
  4949   00FF1E  FF                 	db	255
  4950   00FF1F  FF                 	db	255
  4951   00FF20  FF                 	db	255
  4952   00FF21  FF                 	db	255
  4953   00FF22  FF                 	db	255
  4954   00FF23  FF                 	db	255
  4955   00FF24  FF                 	db	255
  4956   00FF25  FF                 	db	255
  4957   00FF26  FF                 	db	255
  4958   00FF27  FF                 	db	255
  4959   00FF28  FF                 	db	255
  4960   00FF29  FF                 	db	255
  4961   00FF2A  FF                 	db	255
  4962   00FF2B  FF                 	db	255
  4963   00FF2C  FF                 	db	255
  4964   00FF2D  FF                 	db	255
  4965   00FF2E  FF                 	db	255
  4966   00FF2F  FF                 	db	255
  4967   00FF30  FF                 	db	255
  4968   00FF31  FF                 	db	255
  4969   00FF32  FF                 	db	255
  4970   00FF33  FF                 	db	255
  4971   00FF34  FF                 	db	255
  4972   00FF35  FF                 	db	255
  4973   00FF36  FF                 	db	255
  4974   00FF37  FF                 	db	255
  4975   00FF38  FF                 	db	255
  4976   00FF39  FF                 	db	255
  4977   00FF3A  FF                 	db	255
  4978   00FF3B  FF                 	db	255
  4979   00FF3C  FF                 	db	255
  4980   00FF3D  FF                 	db	255
  4981   00FF3E  FF                 	db	255
  4982   00FF3F  FF                 	db	255
  4983   00FF40  FF                 	db	255
  4984   00FF41  FF                 	db	255
  4985   00FF42  FF                 	db	255
  4986   00FF43  FF                 	db	255
  4987   00FF44  FF                 	db	255
  4988   00FF45  FF                 	db	255
  4989   00FF46  FF                 	db	255
  4990   00FF47  FF                 	db	255
  4991   00FF48  FF                 	db	255
  4992   00FF49  FF                 	db	255
  4993   00FF4A  FF                 	db	255
  4994   00FF4B  FF                 	db	255
  4995   00FF4C  FF                 	db	255
  4996   00FF4D  FF                 	db	255
  4997   00FF4E  FF                 	db	255
  4998   00FF4F  FF                 	db	255
  4999   00FF50  FF                 	db	255
  5000   00FF51  FF                 	db	255
  5001   00FF52  FF                 	db	255
  5002   00FF53  FF                 	db	255
  5003   00FF54  FF                 	db	255
  5004   00FF55  FF                 	db	255
  5005   00FF56  FF                 	db	255
  5006   00FF57  FF                 	db	255
  5007   00FF58  FF                 	db	255
  5008   00FF59  FF                 	db	255
  5009   00FF5A  FF                 	db	255
  5010   00FF5B  FF                 	db	255
  5011   00FF5C  FF                 	db	255
  5012   00FF5D  FF                 	db	255
  5013   00FF5E  FF                 	db	255
  5014   00FF5F  FF                 	db	255
  5015   00FF60  FF                 	db	255
  5016   00FF61  FF                 	db	255
  5017   00FF62  FF                 	db	255
  5018   00FF63  FF                 	db	255
  5019   00FF64  FF                 	db	255
  5020   00FF65  FF                 	db	255
  5021   00FF66  FF                 	db	255
  5022   00FF67  FF                 	db	255
  5023   00FF68  FF                 	db	255
  5024   00FF69  FF                 	db	255
  5025   00FF6A  FF                 	db	255
  5026   00FF6B  FF                 	db	255
  5027   00FF6C  FF                 	db	255
  5028   00FF6D  FF                 	db	255
  5029   00FF6E  FF                 	db	255
  5030   00FF6F  FF                 	db	255
  5031   00FF70                     __end_of_eventTable:
  5032                           	callstack 0
  5033   000000                     _paramBlock_absaddr	set	2080
  5034                           
  5035                           	psect	_paramBlock_text
  5036   000820                     __p_paramBlock_text:
  5037                           	callstack 0
  5038   000820                     _paramBlock:
  5039                           	callstack 0
  5040   000820  A5                 	db	165
  5041   000821  65                 	db	101
  5042   000822  20                 	db	32
  5043   000823  FF                 	db	255
  5044   000824  14                 	db	20
  5045   000825  7F                 	db	127
  5046   000826  03                 	db	3
  5047   000827  0B                 	db	11
  5048   000828  0F                 	db	15
  5049   000829  01                 	db	1
  5050   00082A  00                 	db	0
  5051   00082B  08                 	db	8
  5052   00082C  00                 	db	0
  5053   00082D  00                 	db	0
  5054   00082E  00                 	db	0
  5055   00082F  00                 	db	0
  5056   000830  00                 	db	0
  5057   000831  00                 	db	0
  5058   000832  01                 	db	1
  5059   000833  03                 	db	3
  5060   000834  00                 	db	0
  5061   000835  00                 	db	0
  5062   000836  00                 	db	0
  5063   000837  00                 	db	0
  5064   000838  14                 	db	20
  5065   000839  00                 	db	0
  5066   00083A  48                 	db	72
  5067   00083B  08                 	db	8
  5068   00083C  00                 	db	0
  5069   00083D  00                 	db	0
  5070   00083E  4A                 	db	74
  5071   00083F  03                 	db	3
  5072   000840                     __end_of_paramBlock:
  5073                           	callstack 0
  5074   000000                     _name_absaddr	set	2120
  5075                           
  5076                           	psect	_name_text
  5077   000848                     __p_name_text:
  5078                           	callstack 0
  5079   000848                     _name:
  5080                           	callstack 0
  5081   000848  4D                 	db	77
  5082   000849  49                 	db	73
  5083   00084A  4F                 	db	79
  5084   00084B  20                 	db	32
  5085   00084C  20                 	db	32
  5086   00084D  20                 	db	32
  5087   00084E  20                 	db	32
  5088   00084F  00                 	db	0
  5089   000850                     __end_of_name:
  5090                           	callstack 0
  5091   000000                     _COMSTATbits	set	3953
  5092   000000                     _PIR5bits	set	3959
  5093   000000                     _PIE5bits	set	3958
  5094   000000                     _TXBIEbits	set	3711
  5095   000000                     _BIE0	set	3710
  5096   000000                     _MSEL3	set	3708
  5097   000000                     _MSEL2	set	3707
  5098   000000                     _MSEL1	set	3706
  5099   000000                     _MSEL0	set	3705
  5100   000000                     _RXFBCON7	set	3704
  5101   000000                     _RXFBCON6	set	3703
  5102   000000                     _RXFBCON5	set	3702
  5103   000000                     _RXFBCON4	set	3701
  5104   000000                     _RXFBCON3	set	3700
  5105   000000                     _RXFBCON2	set	3699
  5106   000000                     _RXFBCON1	set	3698
  5107   000000                     _RXF0SIDL	set	3809
  5108   000000                     _RXM0SIDH	set	3832
  5109   000000                     _CIOCON	set	3952
  5110   000000                     _ECANCON	set	3954
  5111   000000                     _IPR5	set	3960
  5112   000000                     _EECON2	set	3966
  5113   000000                     _TMR0L	set	4054
  5114   000000                     _TMR0H	set	4055
  5115   000000                     _TMR3L	set	4018
  5116   000000                     _TMR3H	set	4019
  5117   000000                     _TMR1L	set	4046
  5118   000000                     _TMR1H	set	4047
  5119   000000                     _T3CONbits	set	4017
  5120   000000                     _ANCON1	set	3932
  5121   000000                     _ANCON0	set	3933
  5122   000000                     _B0CON	set	3712
  5123   000000                     _TXB2CONbits	set	3840
  5124   000000                     _TXB1CONbits	set	3856
  5125   000000                     _TXB0CONbits	set	3872
  5126   000000                     _EECON1	set	3967
  5127   000000                     _T0CONbits	set	4053
  5128   000000                     _LATBbits	set	3978
  5129   000000                     _TRISAbits	set	3986
  5130   000000                     _TRISBbits	set	3987
  5131   000000                     _PORTAbits	set	3968
  5132   000000                     _BRGCON1	set	3651
  5133   000000                     _BSEL0	set	3709
  5134   000000                     _WPUB	set	3931
  5135   000000                     _INTCON2bits	set	4081
  5136   000000                     _TBLPTR	set	4086
  5137   000000                     _TABLAT	set	4085
  5138   000000                     _TBLPTRU	set	4088
  5139   000000                     _INTCONbits	set	4082
  5140   000000                     _CANSTATbits	set	3950
  5141   000000                     _CANCON	set	3951
  5142   000000                     _EEDATA	set	3955
  5143   000000                     _EEADR	set	3956
  5144   000000                     _EEADRH	set	3957
  5145   000000                     _EECON1bits	set	3967
  5146   000000                     _PORTA	set	3968
  5147   000000                     _LATA	set	3977
  5148   000000                     _TRISA	set	3986
  5149   000000                     _RXB0CON	set	3936
  5150   000000                     _OSCTUNEbits	set	3995
  5151   000000                     _PIE1bits	set	3997
  5152   000000                     _PIR1bits	set	3998
  5153   000000                     _TRISC	set	3988
  5154   000000                     _TRISB	set	3987
  5155   000000                     _PIE2bits	set	4000
  5156   000000                     _PIR2bits	set	4001
  5157   000000                     _T1GCONbits	set	4010
  5158   000000                     _LATC	set	3979
  5159   000000                     _LATB	set	3978
  5160   000000                     _PORTC	set	3970
  5161   000000                     _PORTB	set	3969
  5162   000000                     _T3GCONbits	set	4016
  5163   000000                     _T1CONbits	set	4045
  5164   000000                     _RCONbits	set	4048
  5165   000000                     _T0CON	set	4053
  5166   000000                     _EEIF	set	32190
  5167   000000                     _RXFBCON0	set	3697
  5168   000000                     _BRGCON3	set	3653
  5169   000000                     _BRGCON2	set	3652
  5170   000000                     _TXB2SIDL	set	3842
  5171   000000                     _TXB2SIDH	set	3841
  5172   000000                     _TXB2DLC	set	3845
  5173   000000                     _TXB2CON	set	3840
  5174   000000                     _TXB1CON	set	3856
  5175   000000                     _TXB0CON	set	3872
  5176   000000                     _RXM1EIDL	set	3839
  5177   000000                     _RXM1EIDH	set	3838
  5178   000000                     _RXM1SIDL	set	3837
  5179   000000                     _RXM1SIDH	set	3836
  5180   000000                     _RXM0EIDL	set	3835
  5181   000000                     _RXM0EIDH	set	3834
  5182   000000                     _RXM0SIDL	set	3833
  5183   000000                     _RXB1CON	set	3888
  5184   000000                     _B1CON	set	3728
  5185   000000                     _B2CON	set	3744
  5186   000000                     _B3CON	set	3760
  5187   000000                     _B4CON	set	3776
  5188   000000                     _B5CON	set	3792
  5189   000000                     _TXB0SIDL	set	3874
  5190   000000                     _TXB0SIDH	set	3873
  5191   000000                     _TXB0DLC	set	3877
  5192   000000                     _TXB0D7	set	3885
  5193   000000                     _TXB0D6	set	3884
  5194   000000                     _TXB0D5	set	3883
  5195   000000                     _TXB0D4	set	3882
  5196   000000                     _TXB0D3	set	3881
  5197   000000                     _TXB0D2	set	3880
  5198   000000                     _TXB0D1	set	3879
  5199   000000                     _TXB0D0	set	3878
  5200   000000                     _TXB1SIDL	set	3858
  5201   000000                     _TXB1SIDH	set	3857
  5202   000000                     _TXB1DLC	set	3861
  5203                           
  5204                           ; #config settings
  5205                           
  5206                           	psect	cinit
  5207   00AB20                     __pcinit:
  5208                           	callstack 0
  5209   00AB20                     start_initialization:
  5210                           	callstack 0
  5211   00AB20                     __initialization:
  5212                           	callstack 0
  5213                           
  5214                           ; Clear objects allocated to BIGRAM (928 bytes)
  5215   00AB20  EE05  F080         	lfsr	0,__pbssBIGRAM
  5216   00AB24  EE13 F0A0          	lfsr	1,928
  5217   00AB28                     clear_0:
  5218   00AB28  6AEE               	clrf	postinc0,c
  5219   00AB2A  50E5               	movf	postdec1,w,c
  5220   00AB2C  50E1               	movf	fsr1l,w,c
  5221   00AB2E  E1FC               	bnz	clear_0
  5222   00AB30  50E2               	movf	fsr1h,w,c
  5223   00AB32  E1FA               	bnz	clear_0
  5224                           
  5225                           ; Clear objects allocated to BANK5 (128 bytes)
  5226   00AB34  EE05  F000         	lfsr	0,__pbssBANK5
  5227   00AB38  0E80               	movlw	128
  5228   00AB3A                     clear_1:
  5229   00AB3A  6AEE               	clrf	postinc0,c
  5230   00AB3C  06E8               	decf	wreg,f,c
  5231   00AB3E  E1FD               	bnz	clear_1
  5232                           
  5233                           ; Clear objects allocated to BANK4 (200 bytes)
  5234   00AB40  EE04  F000         	lfsr	0,__pbssBANK4
  5235   00AB44  0EC8               	movlw	200
  5236   00AB46                     clear_2:
  5237   00AB46  6AEE               	clrf	postinc0,c
  5238   00AB48  06E8               	decf	wreg,f,c
  5239   00AB4A  E1FD               	bnz	clear_2
  5240                           
  5241                           ; Clear objects allocated to BANK3 (200 bytes)
  5242   00AB4C  EE03  F000         	lfsr	0,__pbssBANK3
  5243   00AB50  0EC8               	movlw	200
  5244   00AB52                     clear_3:
  5245   00AB52  6AEE               	clrf	postinc0,c
  5246   00AB54  06E8               	decf	wreg,f,c
  5247   00AB56  E1FD               	bnz	clear_3
  5248                           
  5249                           ; Clear objects allocated to BANK2 (196 bytes)
  5250   00AB58  EE02  F000         	lfsr	0,__pbssBANK2
  5251   00AB5C  0EC4               	movlw	196
  5252   00AB5E                     clear_4:
  5253   00AB5E  6AEE               	clrf	postinc0,c
  5254   00AB60  06E8               	decf	wreg,f,c
  5255   00AB62  E1FD               	bnz	clear_4
  5256                           
  5257                           ; Clear objects allocated to BANK1 (181 bytes)
  5258   00AB64  EE01  F000         	lfsr	0,__pbssBANK1
  5259   00AB68  0EB5               	movlw	181
  5260   00AB6A                     clear_5:
  5261   00AB6A  6AEE               	clrf	postinc0,c
  5262   00AB6C  06E8               	decf	wreg,f,c
  5263   00AB6E  E1FD               	bnz	clear_5
  5264                           
  5265                           ; Clear objects allocated to BANK0 (42 bytes)
  5266   00AB70  EE00  F0A9         	lfsr	0,__pbssBANK0
  5267   00AB74  0E2A               	movlw	42
  5268   00AB76                     clear_6:
  5269   00AB76  6AEE               	clrf	postinc0,c
  5270   00AB78  06E8               	decf	wreg,f,c
  5271   00AB7A  E1FD               	bnz	clear_6
  5272                           
  5273                           ; Clear objects allocated to COMRAM (42 bytes)
  5274   00AB7C  EE00  F001         	lfsr	0,__pbssCOMRAM
  5275   00AB80  0E2A               	movlw	42
  5276   00AB82                     clear_7:
  5277   00AB82  6AEE               	clrf	postinc0,c
  5278   00AB84  06E8               	decf	wreg,f,c
  5279   00AB86  E1FD               	bnz	clear_7
  5280   00AB88                     end_of_initialization:
  5281                           	callstack 0
  5282   00AB88                     __end_of__initialization:
  5283                           	callstack 0
  5284   00AB88  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5285   00AB8A  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5286   00AB8C  0100               	movlb	0
  5287   00AB8E  EFD8  F05B         	goto	_main	;jump to C main() function
  5288                           
  5289                           	psect	bssCOMRAM
  5290   000001                     __pbssCOMRAM:
  5291                           	callstack 0
  5292   000001                     _targetPos:
  5293                           	callstack 0
  5294   000001                     	ds	16
  5295   000011                     _enumerationStartTime:
  5296                           	callstack 0
  5297   000011                     	ds	4
  5298   000015                     _canTransmitTimeout:
  5299                           	callstack 0
  5300   000015                     	ds	4
  5301   000019                     _startTime:
  5302                           	callstack 0
  5303   000019                     	ds	4
  5304   00001D                     _timedResponseCallback:
  5305                           	callstack 0
  5306   00001D                     	ds	2
  5307   00001F                     _EnumerationState:
  5308                           	callstack 0
  5309   00001F                     	ds	1
  5310   000020                     _eeBootFlag:
  5311                           	callstack 0
  5312   000020                     	ds	1
  5313   000021                     _txQueue:
  5314                           	callstack 0
  5315   000021                     	ds	5
  5316   000026                     _rxQueue:
  5317                           	callstack 0
  5318   000026                     	ds	5
  5319                           
  5320                           	psect	bssBANK0
  5321   0000A9                     __pbssBANK0:
  5322                           	callstack 0
  5323   0000A9                     _pbTimer:
  5324                           	callstack 0
  5325   0000A9                     	ds	4
  5326   0000AD                     _flashBlock:
  5327                           	callstack 0
  5328   0000AD                     	ds	2
  5329   0000AF                     _flashCounter:
  5330                           	callstack 0
  5331   0000AF                     	ds	2
  5332   0000B1                     _ledState:
  5333                           	callstack 0
  5334   0000B1                     	ds	2
  5335   0000B3                     _nn:
  5336                           	callstack 0
  5337   0000B3                     	ds	2
  5338   0000B5                     _enumerationState:
  5339                           	callstack 0
  5340   0000B5                     	ds	1
  5341   0000B6                     _canTransmitFailed:
  5342                           	callstack 0
  5343   0000B6                     	ds	1
  5344   0000B7                     _canId:
  5345                           	callstack 0
  5346   0000B7                     	ds	1
  5347   0000B8                     _flashFlags:
  5348                           	callstack 0
  5349   0000B8                     	ds	1
  5350   0000B9                     _timedResponseStep:
  5351                           	callstack 0
  5352   0000B9                     	ds	1
  5353   0000BA                     _timedResponseType:
  5354                           	callstack 0
  5355   0000BA                     	ds	1
  5356   0000BB                     _timedResponseAllServicesFlag:
  5357                           	callstack 0
  5358   0000BB                     	ds	1
  5359   0000BC                     _timedResponseServiceIndex:
  5360                           	callstack 0
  5361   0000BC                     	ds	1
  5362   0000BD                     _heartbeatSequence:
  5363                           	callstack 0
  5364   0000BD                     	ds	1
  5365   0000BE                     _setupModePreviousMode:
  5366                           	callstack 0
  5367   0000BE                     	ds	1
  5368   0000BF                     _last_mode_flags:
  5369                           	callstack 0
  5370   0000BF                     	ds	1
  5371   0000C0                     _last_mode_state:
  5372                           	callstack 0
  5373   0000C0                     	ds	1
  5374   0000C1                     _mode_state:
  5375                           	callstack 0
  5376   0000C1                     	ds	1
  5377   0000C2                     _timerExtension2:
  5378                           	callstack 0
  5379   0000C2                     	ds	1
  5380   0000C3                     _timerExtension1:
  5381                           	callstack 0
  5382   0000C3                     	ds	1
  5383   0000C4                     _servoInBlock:
  5384                           	callstack 0
  5385   0000C4                     	ds	1
  5386   0000C5                     _expedited:
  5387                           	callstack 0
  5388   0000C5                     	ds	1
  5389   0000C6                     _expeditedWriteIndex:
  5390                           	callstack 0
  5391   0000C6                     	ds	1
  5392   0000C7                     _expeditedReadIndex:
  5393                           	callstack 0
  5394   0000C7                     	ds	1
  5395   0000C8                     _normalWriteIndex:
  5396                           	callstack 0
  5397   0000C8                     	ds	1
  5398   0000C9                     _normalReadIndex:
  5399                           	callstack 0
  5400   0000C9                     	ds	1
  5401   0000CA                     _io@inputs$F843:
  5402                           	callstack 0
  5403   0000CA                     	ds	1
  5404   0000CB                     _io:
  5405                           	callstack 0
  5406   0000CB                     	ds	1
  5407   0000CC                     _started:
  5408                           	callstack 0
  5409   0000CC                     	ds	1
  5410   0000CD                     _nvDiagnostics:
  5411                           	callstack 0
  5412   0000CD                     	ds	4
  5413   0000D1                     _ackDiagnostics:
  5414                           	callstack 0
  5415   0000D1                     	ds	2
  5416                           
  5417                           	psect	bssBANK1
  5418   000100                     __pbssBANK1:
  5419                           	callstack 0
  5420   000100                     _speed:
  5421                           	callstack 0
  5422   000100                     	ds	32
  5423   000120                     _stepsPerPollSpeed:
  5424                           	callstack 0
  5425   000120                     	ds	16
  5426   000130                     _servoState:
  5427                           	callstack 0
  5428   000130                     	ds	16
  5429   000140                     _currentPos:
  5430                           	callstack 0
  5431   000140                     	ds	16
  5432   000150                     _flashFlushTime:
  5433                           	callstack 0
  5434   000150                     	ds	4
  5435   000154                     _timedResponseTime:
  5436                           	callstack 0
  5437   000154                     	ds	4
  5438   000158                     _ledTimer:
  5439                           	callstack 0
  5440   000158                     	ds	4
  5441   00015C                     _uptimeTimer:
  5442                           	callstack 0
  5443   00015C                     	ds	4
  5444   000160                     _heartbeatTimer:
  5445                           	callstack 0
  5446   000160                     	ds	4
  5447   000164                     _startWait:
  5448                           	callstack 0
  5449   000164                     	ds	4
  5450   000168                     _lastActionPollTime:
  5451                           	callstack 0
  5452   000168                     	ds	4
  5453   00016C                     _lastInputScanTime:
  5454                           	callstack 0
  5455   00016C                     	ds	4
  5456   000170                     _lastServoStartTime:
  5457                           	callstack 0
  5458   000170                     	ds	4
  5459   000174                     _previousNN:
  5460                           	callstack 0
  5461   000174                     	ds	2
  5462   000176                     _transport:
  5463                           	callstack 0
  5464   000176                     	ds	2
  5465   000178                     _timedResponseDelay:
  5466                           	callstack 0
  5467   000178                     	ds	1
  5468   000179                     _mode_flags:
  5469                           	callstack 0
  5470   000179                     	ds	1
  5471   00017A                     _canDiagnostics:
  5472                           	callstack 0
  5473   00017A                     	ds	32
  5474   00019A                     _mnsDiagnostics:
  5475                           	callstack 0
  5476   00019A                     	ds	12
  5477   0001A6                     _tmpMessage:
  5478                           	callstack 0
  5479   0001A6                     	ds	9
  5480   0001AF                     _teachDiagnostics:
  5481                           	callstack 0
  5482   0001AF                     	ds	2
  5483   0001B1                     _producerDiagnostics:
  5484                           	callstack 0
  5485   0001B1                     	ds	2
  5486   0001B3                     _consumer2QDiagnostics:
  5487                           	callstack 0
  5488   0001B3                     	ds	2
  5489                           
  5490                           	psect	bssBANK2
  5491   000200                     __pbssBANK2:
  5492                           	callstack 0
  5493   000200                     _evs:
  5494                           	callstack 0
  5495   000200                     	ds	20
  5496   000214                     _enumerationResults:
  5497                           	callstack 0
  5498   000214                     	ds	16
  5499   000224                     _bounceState:
  5500                           	callstack 0
  5501   000224                     	ds	16
  5502   000234                     _loopCount:
  5503                           	callstack 0
  5504   000234                     	ds	16
  5505   000244                     _pollCount:
  5506                           	callstack 0
  5507   000244                     	ds	16
  5508   000254                     _pollsPerStepSpeed:
  5509                           	callstack 0
  5510   000254                     	ds	16
  5511   000264                     _delayCount:
  5512                           	callstack 0
  5513   000264                     	ds	16
  5514   000274                     _outputState:
  5515                           	callstack 0
  5516   000274                     	ds	16
  5517   000284                     _inputState:
  5518                           	callstack 0
  5519   000284                     	ds	16
  5520   000294                     _flashDelays:
  5521                           	callstack 0
  5522   000294                     	ds	16
  5523   0002A4                     _pulseDelays:
  5524                           	callstack 0
  5525   0002A4                     	ds	16
  5526   0002B4                     _expeditedQueueBuf:
  5527                           	callstack 0
  5528   0002B4                     	ds	16
  5529                           
  5530                           	psect	bssBANK3
  5531   000300                     __pbssBANK3:
  5532                           	callstack 0
  5533   000300                     _happening2Event:
  5534                           	callstack 0
  5535   000300                     	ds	72
  5536   000348                     _flashBuffer:
  5537                           	callstack 0
  5538   000348                     	ds	64
  5539   000388                     _ticksWhenStopped:
  5540                           	callstack 0
  5541   000388                     	ds	64
  5542                           
  5543                           	psect	bssBANK4
  5544   000400                     __pbssBANK4:
  5545                           	callstack 0
  5546   000400                     _nvCache:
  5547                           	callstack 0
  5548   000400                     	ds	128
  5549   000480                     _txBuffers:
  5550                           	callstack 0
  5551   000480                     	ds	72
  5552                           
  5553                           	psect	bssBANK5
  5554   000500                     __pbssBANK5:
  5555                           	callstack 0
  5556   000500                     _normalQueueBuf:
  5557                           	callstack 0
  5558   000500                     	ds	128
  5559                           
  5560                           	psect	bssBIGRAM
  5561   000580                     __pbssBIGRAM:
  5562                           	callstack 0
  5563   000580                     _eventChains:
  5564                           	callstack 0
  5565   000580                     	ds	640
  5566   000800                     _rxBuffers:
  5567                           	callstack 0
  5568   000800                     	ds	288
  5569                           
  5570                           	psect	cstackBANK2
  5571   0002C4                     __pcstackBANK2:
  5572                           	callstack 0
  5573   0002C4                     ??_mnsProcessMessage:
  5574   0002C4                     consumer2QProcessMessage@end:
  5575                           	callstack 0
  5576   0002C4                     producerProcessMessage@ev:
  5577                           	callstack 0
  5578                           
  5579                           ; 2 bytes @ 0x0
  5580   0002C4                     	ds	1
  5581   0002C5                     consumer2QProcessMessage@change:
  5582                           	callstack 0
  5583                           
  5584                           ; 1 bytes @ 0x1
  5585   0002C5                     	ds	1
  5586   0002C6                     consumer2QProcessMessage@opc:
  5587                           	callstack 0
  5588   0002C6                     producerProcessMessage@h:
  5589                           	callstack 0
  5590                           
  5591                           ; 1 bytes @ 0x2
  5592   0002C6                     	ds	1
  5593   0002C7                     consumer2QProcessMessage@nextAction:
  5594                           	callstack 0
  5595   0002C7                     producerProcessMessage@index:
  5596                           	callstack 0
  5597                           
  5598                           ; 1 bytes @ 0x3
  5599   0002C7                     	ds	1
  5600   0002C8                     consumer2QProcessMessage@firstAction:
  5601                           	callstack 0
  5602                           
  5603                           ; 1 bytes @ 0x4
  5604   0002C8                     	ds	1
  5605   0002C9                     consumer2QProcessMessage@tableIndex:
  5606                           	callstack 0
  5607                           
  5608                           ; 1 bytes @ 0x5
  5609   0002C9                     	ds	1
  5610   0002CA                     consumer2QProcessMessage@nextSimultaneous:
  5611                           	callstack 0
  5612                           
  5613                           ; 1 bytes @ 0x6
  5614   0002CA                     	ds	1
  5615   0002CB                     consumer2QProcessMessage@io:
  5616                           	callstack 0
  5617                           
  5618                           ; 1 bytes @ 0x7
  5619   0002CB                     	ds	1
  5620   0002CC                     consumer2QProcessMessage@masked_action:
  5621                           	callstack 0
  5622                           
  5623                           ; 1 bytes @ 0x8
  5624   0002CC                     	ds	1
  5625   0002CD                     consumer2QProcessMessage@ca:
  5626                           	callstack 0
  5627                           
  5628                           ; 1 bytes @ 0x9
  5629   0002CD                     	ds	1
  5630   0002CE                     consumer2QProcessMessage@e:
  5631                           	callstack 0
  5632                           
  5633                           ; 1 bytes @ 0xA
  5634   0002CE                     	ds	1
  5635   0002CF                     consumer2QProcessMessage@action:
  5636                           	callstack 0
  5637                           
  5638                           ; 2 bytes @ 0xB
  5639   0002CF                     	ds	19
  5640   0002E2                     ??_poll:
  5641                           
  5642                           ; 1 bytes @ 0x1E
  5643   0002E2                     	ds	4
  5644   0002E6                     poll@handled:
  5645                           	callstack 0
  5646                           
  5647                           ; 1 bytes @ 0x22
  5648   0002E6                     	ds	1
  5649   0002E7                     poll@i:
  5650                           	callstack 0
  5651                           
  5652                           ; 1 bytes @ 0x23
  5653   0002E7                     	ds	1
  5654   0002E8                     poll@m:
  5655                           	callstack 0
  5656                           
  5657                           ; 9 bytes @ 0x24
  5658   0002E8                     	ds	9
  5659                           
  5660                           	psect	cstackBANK1
  5661   0001B5                     __pcstackBANK1:
  5662                           	callstack 0
  5663   0001B5                     ??_writeNVM:
  5664   0001B5                     ??_rebuildHashtable:
  5665   0001B5                     bounceDown@reversed:
  5666                           	callstack 0
  5667   0001B5                     sendMessage@len:
  5668                           	callstack 0
  5669   0001B5                     findEvent@nodeNumber:
  5670                           	callstack 0
  5671                           
  5672                           ; 2 bytes @ 0x0
  5673   0001B5                     	ds	1
  5674   0001B6                     sendMessage@data1:
  5675                           	callstack 0
  5676   0001B6                     bounceDown@tmp:
  5677                           	callstack 0
  5678                           
  5679                           ; 2 bytes @ 0x1
  5680   0001B6                     	ds	1
  5681   0001B7                     ??_configIO:
  5682   0001B7                     ??_nvFactoryReset:
  5683   0001B7                     saveNV@value:
  5684                           	callstack 0
  5685   0001B7                     sendMessage@data2:
  5686                           	callstack 0
  5687   0001B7                     setNewCanId@newCanId:
  5688                           	callstack 0
  5689   0001B7                     findEvent@eventNumber:
  5690                           	callstack 0
  5691                           
  5692                           ; 2 bytes @ 0x2
  5693   0001B7                     	ds	1
  5694   0001B8                     ??_saveNV:
  5695   0001B8                     ??_processEnumeration:
  5696   0001B8                     bounceDown@io:
  5697                           	callstack 0
  5698   0001B8                     sendMessage@data3:
  5699                           	callstack 0
  5700   0001B8                     rebuildHashtable@ev:
  5701                           	callstack 0
  5702                           
  5703                           ; 2 bytes @ 0x3
  5704   0001B8                     	ds	1
  5705   0001B9                     ??_findEvent:
  5706   0001B9                     nvFactoryReset@i:
  5707                           	callstack 0
  5708   0001B9                     sendMessage@data4:
  5709                           	callstack 0
  5710   0001B9                     _configIO$8019:
  5711                           	callstack 0
  5712                           
  5713                           ; 1 bytes @ 0x4
  5714   0001B9                     	ds	1
  5715   0001BA                     rebuildHashtable@hash:
  5716                           	callstack 0
  5717   0001BA                     saveNV@index:
  5718                           	callstack 0
  5719   0001BA                     sendMessage@data5:
  5720                           	callstack 0
  5721   0001BA                     _configIO$741:
  5722                           	callstack 0
  5723                           
  5724                           ; 2 bytes @ 0x5
  5725   0001BA                     	ds	1
  5726   0001BB                     defaultNVs@type:
  5727                           	callstack 0
  5728   0001BB                     rebuildHashtable@happening:
  5729                           	callstack 0
  5730   0001BB                     sendMessage@data6:
  5731                           	callstack 0
  5732   0001BB                     findEvent@nn:
  5733                           	callstack 0
  5734                           
  5735                           ; 2 bytes @ 0x6
  5736   0001BB                     	ds	1
  5737   0001BC                     ??_defaultNVs:
  5738   0001BC                     configIO@action:
  5739                           	callstack 0
  5740   0001BC                     rebuildHashtable@chainIdx:
  5741                           	callstack 0
  5742   0001BC                     sendMessage@data7:
  5743                           	callstack 0
  5744   0001BC                     processEnumeration@enumResult:
  5745                           	callstack 0
  5746                           
  5747                           ; 1 bytes @ 0x7
  5748   0001BC                     	ds	1
  5749   0001BD                     ??_doNnevn:
  5750   0001BD                     configIO@type:
  5751                           	callstack 0
  5752   0001BD                     doRqevn@count:
  5753                           	callstack 0
  5754   0001BD                     rebuildHashtable@tableIndex:
  5755                           	callstack 0
  5756   0001BD                     sendMessage4@opc:
  5757                           	callstack 0
  5758   0001BD                     sendMessage5@data1:
  5759                           	callstack 0
  5760   0001BD                     sendMessage6@data1:
  5761                           	callstack 0
  5762   0001BD                     sendMessage7@data1:
  5763                           	callstack 0
  5764   0001BD                     processEnumeration@newCanId:
  5765                           	callstack 0
  5766   0001BD                     findEvent@en:
  5767                           	callstack 0
  5768                           
  5769                           ; 2 bytes @ 0x8
  5770   0001BD                     	ds	1
  5771   0001BE                     ??_clearAllEvents:
  5772   0001BE                     ??_removeTableEntry:
  5773   0001BE                     configIO@i:
  5774                           	callstack 0
  5775   0001BE                     defaultNVs@io:
  5776                           	callstack 0
  5777   0001BE                     sendProducedEvent@onOff:
  5778                           	callstack 0
  5779   0001BE                     teachPowerUp@i:
  5780                           	callstack 0
  5781   0001BE                     doRqevn@i:
  5782                           	callstack 0
  5783   0001BE                     sendMessage5@data2:
  5784                           	callstack 0
  5785   0001BE                     sendMessage6@data2:
  5786                           	callstack 0
  5787   0001BE                     sendMessage7@data2:
  5788                           	callstack 0
  5789   0001BE                     processEnumeration@i:
  5790                           	callstack 0
  5791                           
  5792                           ; 1 bytes @ 0x9
  5793   0001BE                     	ds	1
  5794   0001BF                     ??_powerUp:
  5795   0001BF                     defaultNVs@i:
  5796                           	callstack 0
  5797   0001BF                     findEvent@hash:
  5798                           	callstack 0
  5799   0001BF                     sendMessage5@data3:
  5800                           	callstack 0
  5801   0001BF                     sendMessage6@data3:
  5802                           	callstack 0
  5803   0001BF                     sendMessage7@data3:
  5804                           	callstack 0
  5805   0001BF                     canReceiveMessage@m:
  5806                           	callstack 0
  5807                           
  5808                           ; 2 bytes @ 0xA
  5809   0001BF                     	ds	1
  5810   0001C0                     sendProducedEvent@opc:
  5811                           	callstack 0
  5812   0001C0                     findEvent@chainIdx:
  5813                           	callstack 0
  5814   0001C0                     sendMessage5@data4:
  5815                           	callstack 0
  5816   0001C0                     sendMessage6@data4:
  5817                           	callstack 0
  5818   0001C0                     sendMessage7@data4:
  5819                           	callstack 0
  5820                           
  5821                           ; 1 bytes @ 0xB
  5822   0001C0                     	ds	1
  5823   0001C1                     doNnevn@f:
  5824                           	callstack 0
  5825   0001C1                     findEvent@tableIndex:
  5826                           	callstack 0
  5827   0001C1                     sendMessage5@data5:
  5828                           	callstack 0
  5829   0001C1                     sendMessage6@data5:
  5830                           	callstack 0
  5831   0001C1                     sendMessage7@data5:
  5832                           	callstack 0
  5833   0001C1                     sendProducedEvent@producedEventEN:
  5834                           	callstack 0
  5835                           
  5836                           ; 2 bytes @ 0xC
  5837   0001C1                     	ds	1
  5838   0001C2                     ??_mnsPoll:
  5839   0001C2                     clearAllEvents@tableIndex:
  5840                           	callstack 0
  5841   0001C2                     doNnevn@count:
  5842                           	callstack 0
  5843   0001C2                     doNenrd@index:
  5844                           	callstack 0
  5845   0001C2                     doReval@evNum:
  5846                           	callstack 0
  5847   0001C2                     removeTableEntry@f:
  5848                           	callstack 0
  5849   0001C2                     sendMessage6@data6:
  5850                           	callstack 0
  5851   0001C2                     sendMessage7@data6:
  5852                           	callstack 0
  5853   0001C2                     canReceiveMessage@messageAvailable:
  5854                           	callstack 0
  5855   0001C2                     checkLen@m:
  5856                           	callstack 0
  5857                           
  5858                           ; 2 bytes @ 0xD
  5859   0001C2                     	ds	1
  5860   0001C3                     ??_doReval:
  5861   0001C3                     sendProducedEvent@happening:
  5862                           	callstack 0
  5863   0001C3                     doNnevn@i:
  5864                           	callstack 0
  5865   0001C3                     removeTableEntry@tableIndex:
  5866                           	callstack 0
  5867   0001C3                     powerUp@i:
  5868                           	callstack 0
  5869   0001C3                     sendMessage7@data7:
  5870                           	callstack 0
  5871   0001C3                     doNenrd@nodeNumber:
  5872                           	callstack 0
  5873   0001C3                     doReqev@nodeNumber:
  5874                           	callstack 0
  5875   0001C3                     canReceiveMessage@mp:
  5876                           	callstack 0
  5877                           
  5878                           ; 2 bytes @ 0xE
  5879   0001C3                     	ds	1
  5880   0001C4                     doReval@evIndex:
  5881                           	callstack 0
  5882   0001C4                     checkRemoveTableEntry@tableIndex:
  5883                           	callstack 0
  5884   0001C4                     mnsTRallDiagnosticsCallback@serviceIndex:
  5885                           	callstack 0
  5886   0001C4                     nvTRnvrdCallback@serviceIndex:
  5887                           	callstack 0
  5888   0001C4                     checkLen@needed:
  5889                           	callstack 0
  5890   0001C4                     sendProducedEvent@producedEventNN:
  5891                           	callstack 0
  5892   0001C4                     removeEvent@nodeNumber:
  5893                           	callstack 0
  5894                           
  5895                           ; 2 bytes @ 0xF
  5896   0001C4                     	ds	1
  5897   0001C5                     nerdCallback@step:
  5898                           	callstack 0
  5899   0001C5                     doReval@enNum:
  5900                           	callstack 0
  5901   0001C5                     reqevCallback@step:
  5902                           	callstack 0
  5903   0001C5                     checkRemoveTableEntry@e:
  5904                           	callstack 0
  5905   0001C5                     mnsTRserviceDiscoveryCallback@step:
  5906                           	callstack 0
  5907   0001C5                     mnsTRallDiagnosticsCallback@step:
  5908                           	callstack 0
  5909   0001C5                     mnsTRrqnpnCallback@step:
  5910                           	callstack 0
  5911   0001C5                     nvTRnvrdCallback@step:
  5912                           	callstack 0
  5913   0001C5                     checkLen@service:
  5914                           	callstack 0
  5915   0001C5                     doNenrd@eventNumber:
  5916                           	callstack 0
  5917   0001C5                     doReqev@eventNumber:
  5918                           	callstack 0
  5919   0001C5                     canReceiveMessage@p:
  5920                           	callstack 0
  5921                           
  5922                           ; 2 bytes @ 0x10
  5923   0001C5                     	ds	1
  5924   0001C6                     ??_inputScan:
  5925   0001C6                     ??_pollServos:
  5926   0001C6                     ??_reqevCallback:
  5927   0001C6                     ??_mnsTRallDiagnosticsCallback:
  5928   0001C6                     ??_mnsTRserviceDiscoveryCallback:
  5929   0001C6                     sendInvertedProducedEvent@state:
  5930                           	callstack 0
  5931   0001C6                     alwaysSendInvertedProducedEvent@state:
  5932                           	callstack 0
  5933   0001C6                     writeEv@evNum:
  5934                           	callstack 0
  5935   0001C6                     ackEventCheckLen@m:
  5936                           	callstack 0
  5937   0001C6                     teachCheckLen@m:
  5938                           	callstack 0
  5939   0001C6                     nerdCallback@nodeNumber:
  5940                           	callstack 0
  5941   0001C6                     doReval@evVal:
  5942                           	callstack 0
  5943   0001C6                     removeEvent@eventNumber:
  5944                           	callstack 0
  5945   0001C6                     nvTRnvrdCallback@valueOrError:
  5946                           	callstack 0
  5947                           
  5948                           ; 2 bytes @ 0x11
  5949   0001C6                     	ds	1
  5950   0001C7                     processOutputs@io:
  5951                           	callstack 0
  5952   0001C7                     sendInvertedProducedEvent@invert:
  5953                           	callstack 0
  5954   0001C7                     alwaysSendInvertedProducedEvent@invert:
  5955                           	callstack 0
  5956   0001C7                     doNenrd@tableIndex:
  5957                           	callstack 0
  5958   0001C7                     doReqev@evNum:
  5959                           	callstack 0
  5960   0001C7                     writeEv@evVal:
  5961                           	callstack 0
  5962                           
  5963                           ; 1 bytes @ 0x12
  5964   0001C7                     	ds	1
  5965   0001C8                     ??_writeEv:
  5966   0001C8                     inputScan@change:
  5967                           	callstack 0
  5968   0001C8                     sendInvertedProducedEvent@can_send_on:
  5969                           	callstack 0
  5970   0001C8                     alwaysSendInvertedProducedEvent@action:
  5971                           	callstack 0
  5972   0001C8                     ackEventCheckLen@needed:
  5973                           	callstack 0
  5974   0001C8                     teachCheckLen@needed:
  5975                           	callstack 0
  5976   0001C8                     doReval@tableIndex:
  5977                           	callstack 0
  5978   0001C8                     removeEvent@tableIndex:
  5979                           	callstack 0
  5980   0001C8                     nerdCallback@eventNumber:
  5981                           	callstack 0
  5982   0001C8                     doReqev@evVal:
  5983                           	callstack 0
  5984                           
  5985                           ; 2 bytes @ 0x13
  5986   0001C8                     	ds	1
  5987   0001C9                     inputScan@input:
  5988                           	callstack 0
  5989   0001C9                     sendInvertedProducedEvent@can_send_off:
  5990                           	callstack 0
  5991   0001C9                     teachCheckLen@learn:
  5992                           	callstack 0
  5993   0001C9                     _alwaysSendInvertedProducedEvent$1385:
  5994                           	callstack 0
  5995   0001C9                     doEvuln@nodeNumber:
  5996                           	callstack 0
  5997                           
  5998                           ; 2 bytes @ 0x14
  5999   0001C9                     	ds	1
  6000   0001CA                     sendInvertedProducedEvent@happening:
  6001                           	callstack 0
  6002   0001CA                     doReqev@tableIndex:
  6003                           	callstack 0
  6004   0001CA                     mnsTRallDiagnosticsCallback@d:
  6005                           	callstack 0
  6006                           
  6007                           ; 2 bytes @ 0x15
  6008   0001CA                     	ds	1
  6009   0001CB                     ??_doSOD:
  6010   0001CB                     reqevCallback@nEv:
  6011                           	callstack 0
  6012   0001CB                     _sendInvertedProducedEvent$1380:
  6013                           	callstack 0
  6014   0001CB                     doEvuln@eventNumber:
  6015                           	callstack 0
  6016                           
  6017                           ; 2 bytes @ 0x16
  6018   0001CB                     	ds	1
  6019   0001CC                     writeEv@startIndex:
  6020                           	callstack 0
  6021   0001CC                     reqevCallback@ev:
  6022                           	callstack 0
  6023                           
  6024                           ; 2 bytes @ 0x17
  6025   0001CC                     	ds	1
  6026   0001CD                     sendInvertedProducedEvent@state_to_send:
  6027                           	callstack 0
  6028   0001CD                     doSOD@midway:
  6029                           	callstack 0
  6030   0001CD                     doEvuln@result:
  6031                           	callstack 0
  6032   0001CD                     writeEv@nextF:
  6033                           	callstack 0
  6034                           
  6035                           ; 1 bytes @ 0x18
  6036   0001CD                     	ds	1
  6037   0001CE                     startDigitalOutput@state:
  6038                           	callstack 0
  6039   0001CE                     doSOD@state:
  6040                           	callstack 0
  6041   0001CE                     pollServos@target:
  6042                           	callstack 0
  6043   0001CE                     writeEv@e:
  6044                           	callstack 0
  6045   0001CE                     reqevCallback@nodeNumber:
  6046                           	callstack 0
  6047                           
  6048                           ; 2 bytes @ 0x19
  6049   0001CE                     	ds	1
  6050   0001CF                     ??_startDigitalOutput:
  6051   0001CF                     doSOD@event_inverted:
  6052                           	callstack 0
  6053   0001CF                     pollServos@beforeMidway:
  6054                           	callstack 0
  6055   0001CF                     writeEv@f:
  6056                           	callstack 0
  6057                           
  6058                           ; 1 bytes @ 0x1A
  6059   0001CF                     	ds	1
  6060   0001D0                     doSOD@io:
  6061                           	callstack 0
  6062   0001D0                     pollServos@midway:
  6063                           	callstack 0
  6064   0001D0                     writeEv@tableIndex:
  6065                           	callstack 0
  6066   0001D0                     reqevCallback@eventNumber:
  6067                           	callstack 0
  6068                           
  6069                           ; 2 bytes @ 0x1B
  6070   0001D0                     	ds	1
  6071   0001D1                     pollServos@io:
  6072                           	callstack 0
  6073   0001D1                     writeEv@nextIdx:
  6074                           	callstack 0
  6075   0001D1                     _startDigitalOutput$802:
  6076                           	callstack 0
  6077                           
  6078                           ; 2 bytes @ 0x1C
  6079   0001D1                     	ds	1
  6080   0001D2                     deleteActionRange@number:
  6081                           	callstack 0
  6082   0001D2                     startServos@type:
  6083                           	callstack 0
  6084   0001D2                     deleteHappeningRange@number:
  6085                           	callstack 0
  6086   0001D2                     reqevCallback@tableIndex:
  6087                           	callstack 0
  6088   0001D2                     addEvent@nodeNumber:
  6089                           	callstack 0
  6090                           
  6091                           ; 2 bytes @ 0x1D
  6092   0001D2                     	ds	1
  6093   0001D3                     ??_deleteHappeningRange:
  6094   0001D3                     ??_deleteActionRange:
  6095   0001D3                     ??_pollTimedResponse:
  6096   0001D3                     startDigitalOutput@pinState:
  6097                           	callstack 0
  6098                           
  6099                           ; 1 bytes @ 0x1E
  6100   0001D3                     	ds	1
  6101   0001D4                     startDigitalOutput@actionState:
  6102                           	callstack 0
  6103   0001D4                     addEvent@eventNumber:
  6104                           	callstack 0
  6105                           
  6106                           ; 2 bytes @ 0x1F
  6107   0001D4                     	ds	1
  6108   0001D5                     startDigitalOutput@io:
  6109                           	callstack 0
  6110   0001D5                     pollTimedResponse@result:
  6111                           	callstack 0
  6112                           
  6113                           ; 1 bytes @ 0x20
  6114   0001D5                     	ds	1
  6115   0001D6                     startOutput@act:
  6116                           	callstack 0
  6117   0001D6                     addEvent@evNum:
  6118                           	callstack 0
  6119                           
  6120                           ; 1 bytes @ 0x21
  6121   0001D6                     	ds	1
  6122   0001D7                     startOutput@type:
  6123                           	callstack 0
  6124   0001D7                     addEvent@evVal:
  6125                           	callstack 0
  6126                           
  6127                           ; 1 bytes @ 0x22
  6128   0001D7                     	ds	1
  6129   0001D8                     deleteActionRange@updated:
  6130                           	callstack 0
  6131   0001D8                     startOutput@io:
  6132                           	callstack 0
  6133   0001D8                     deleteHappeningRange@happening:
  6134                           	callstack 0
  6135   0001D8                     addEvent@forceOwnNN:
  6136                           	callstack 0
  6137                           
  6138                           ; 1 bytes @ 0x23
  6139   0001D8                     	ds	1
  6140   0001D9                     ??_processActions:
  6141   0001D9                     ??_addEvent:
  6142   0001D9                     deleteActionRange@action:
  6143                           	callstack 0
  6144   0001D9                     deleteHappeningRange@h:
  6145                           	callstack 0
  6146                           
  6147                           ; 1 bytes @ 0x24
  6148   0001D9                     	ds	1
  6149   0001DA                     deleteActionRange@e:
  6150                           	callstack 0
  6151   0001DA                     processActions@simultaneous:
  6152                           	callstack 0
  6153   0001DA                     deleteHappeningRange@tableIndex:
  6154                           	callstack 0
  6155                           
  6156                           ; 1 bytes @ 0x25
  6157   0001DA                     	ds	1
  6158   0001DB                     deleteActionRange@tableIndex:
  6159                           	callstack 0
  6160   0001DB                     processActions@peekItem:
  6161                           	callstack 0
  6162                           
  6163                           ; 1 bytes @ 0x26
  6164   0001DB                     	ds	1
  6165   0001DC                     clearEvents@io:
  6166                           	callstack 0
  6167   0001DC                     processActions@type:
  6168                           	callstack 0
  6169                           
  6170                           ; 1 bytes @ 0x27
  6171   0001DC                     	ds	1
  6172   0001DD                     processActions@nextType:
  6173                           	callstack 0
  6174   0001DD                     addEvent@error:
  6175                           	callstack 0
  6176                           
  6177                           ; 1 bytes @ 0x28
  6178   0001DD                     	ds	1
  6179   0001DE                     processActions@nextIo:
  6180                           	callstack 0
  6181   0001DE                     addEvent@f:
  6182                           	callstack 0
  6183                           
  6184                           ; 1 bytes @ 0x29
  6185   0001DE                     	ds	1
  6186   0001DF                     processActions@io:
  6187                           	callstack 0
  6188   0001DF                     addEvent@e:
  6189                           	callstack 0
  6190                           
  6191                           ; 1 bytes @ 0x2A
  6192   0001DF                     	ds	1
  6193   0001E0                     processActions@ioAction:
  6194                           	callstack 0
  6195   0001E0                     addEvent@tableIndex:
  6196                           	callstack 0
  6197                           
  6198                           ; 1 bytes @ 0x2B
  6199   0001E0                     	ds	1
  6200   0001E1                     defaultEvents@type:
  6201                           	callstack 0
  6202   0001E1                     APP_addEvent@nodeNumber:
  6203                           	callstack 0
  6204   0001E1                     processActions@nextAction:
  6205                           	callstack 0
  6206                           
  6207                           ; 2 bytes @ 0x2C
  6208   0001E1                     	ds	1
  6209   0001E2                     defaultEvents@en:
  6210                           	callstack 0
  6211                           
  6212                           ; 2 bytes @ 0x2D
  6213   0001E2                     	ds	1
  6214   0001E3                     APP_addEvent@eventNumber:
  6215                           	callstack 0
  6216   0001E3                     processActions@action:
  6217                           	callstack 0
  6218                           
  6219                           ; 2 bytes @ 0x2E
  6220   0001E3                     	ds	1
  6221   0001E4                     defaultEvents@io:
  6222                           	callstack 0
  6223                           
  6224                           ; 1 bytes @ 0x2F
  6225   0001E4                     	ds	1
  6226   0001E5                     ??_loop:
  6227   0001E5                     setType@type:
  6228                           	callstack 0
  6229   0001E5                     APP_addEvent@evNum:
  6230                           	callstack 0
  6231                           
  6232                           ; 1 bytes @ 0x30
  6233   0001E5                     	ds	1
  6234   0001E6                     setType@index:
  6235                           	callstack 0
  6236   0001E6                     APP_addEvent@evVal:
  6237                           	callstack 0
  6238                           
  6239                           ; 1 bytes @ 0x31
  6240   0001E6                     	ds	1
  6241   0001E7                     setType@io:
  6242                           	callstack 0
  6243   0001E7                     APP_addEvent@forceOwnNN:
  6244                           	callstack 0
  6245                           
  6246                           ; 1 bytes @ 0x32
  6247   0001E7                     	ds	1
  6248   0001E8                     APP_factoryReset@io:
  6249                           	callstack 0
  6250   0001E8                     APP_nvValueChanged@value:
  6251                           	callstack 0
  6252   0001E8                     doEvlrn@nodeNumber:
  6253                           	callstack 0
  6254                           
  6255                           ; 2 bytes @ 0x33
  6256   0001E8                     	ds	1
  6257   0001E9                     ??_factoryReset:
  6258   0001E9                     APP_nvValueChanged@oldValue:
  6259                           	callstack 0
  6260                           
  6261                           ; 1 bytes @ 0x34
  6262   0001E9                     	ds	1
  6263   0001EA                     ??_APP_nvValueChanged:
  6264   0001EA                     doEvlrn@eventNumber:
  6265                           	callstack 0
  6266                           
  6267                           ; 2 bytes @ 0x35
  6268   0001EA                     	ds	2
  6269   0001EC                     doEvlrn@evNum:
  6270                           	callstack 0
  6271                           
  6272                           ; 1 bytes @ 0x37
  6273   0001EC                     	ds	1
  6274   0001ED                     APP_nvValueChanged@index:
  6275                           	callstack 0
  6276   0001ED                     doEvlrn@evVal:
  6277                           	callstack 0
  6278   0001ED                     factoryReset@i:
  6279                           	callstack 0
  6280                           
  6281                           ; 1 bytes @ 0x38
  6282   0001ED                     	ds	1
  6283   0001EE                     APP_nvValueChanged@io:
  6284                           	callstack 0
  6285   0001EE                     doEvlrn@error:
  6286                           	callstack 0
  6287   0001EE                     checkPowerOnPb@i:
  6288                           	callstack 0
  6289                           
  6290                           ; 1 bytes @ 0x39
  6291   0001EE                     	ds	1
  6292   0001EF                     setNV@value:
  6293                           	callstack 0
  6294                           
  6295                           ; 1 bytes @ 0x3A
  6296   0001EF                     	ds	1
  6297   0001F0                     ??_setNV:
  6298                           
  6299                           ; 1 bytes @ 0x3B
  6300   0001F0                     	ds	2
  6301   0001F2                     setNV@oldValue:
  6302                           	callstack 0
  6303                           
  6304                           ; 1 bytes @ 0x3D
  6305   0001F2                     	ds	1
  6306   0001F3                     setNV@index:
  6307                           	callstack 0
  6308                           
  6309                           ; 1 bytes @ 0x3E
  6310   0001F3                     	ds	1
  6311   0001F4                     consumer2QProcessMessage@m:
  6312                           	callstack 0
  6313   0001F4                     bootProcessMessage@m:
  6314                           	callstack 0
  6315   0001F4                     ackEventProcessMessage@m:
  6316                           	callstack 0
  6317   0001F4                     producerProcessMessage@m:
  6318                           	callstack 0
  6319   0001F4                     teachProcessMessage@m:
  6320                           	callstack 0
  6321   0001F4                     mnsProcessMessage@m:
  6322                           	callstack 0
  6323   0001F4                     nvProcessMessage@m:
  6324                           	callstack 0
  6325   0001F4                     canProcessMessage@m:
  6326                           	callstack 0
  6327                           
  6328                           ; 2 bytes @ 0x3F
  6329   0001F4                     	ds	2
  6330   0001F6                     ??_consumer2QProcessMessage:
  6331   0001F6                     ??_bootProcessMessage:
  6332   0001F6                     ??_ackEventProcessMessage:
  6333   0001F6                     ??_producerProcessMessage:
  6334   0001F6                     ??_teachProcessMessage:
  6335   0001F6                     ??_nvProcessMessage:
  6336   0001F6                     ??_canProcessMessage:
  6337   0001F6                     mnsProcessMessage@i:
  6338                           	callstack 0
  6339                           
  6340                           ; 1 bytes @ 0x41
  6341   0001F6                     	ds	1
  6342   0001F7                     mnsProcessMessage@d:
  6343                           	callstack 0
  6344                           
  6345                           ; 2 bytes @ 0x42
  6346   0001F7                     	ds	1
  6347   0001F8                     ackEventProcessMessage@ev:
  6348                           	callstack 0
  6349   0001F8                     nvProcessMessage@valueOrError:
  6350                           	callstack 0
  6351                           
  6352                           ; 2 bytes @ 0x43
  6353   0001F8                     	ds	1
  6354   0001F9                     mnsProcessMessage@newMode:
  6355                           	callstack 0
  6356                           
  6357                           ; 1 bytes @ 0x44
  6358   0001F9                     	ds	1
  6359   0001FA                     ackEventProcessMessage@eventEN:
  6360                           	callstack 0
  6361                           
  6362                           ; 2 bytes @ 0x45
  6363   0001FA                     	ds	2
  6364   0001FC                     ackEventProcessMessage@eventIndex:
  6365                           	callstack 0
  6366                           
  6367                           ; 1 bytes @ 0x47
  6368   0001FC                     	ds	1
  6369   0001FD                     ackEventProcessMessage@eventNN:
  6370                           	callstack 0
  6371                           
  6372                           ; 2 bytes @ 0x48
  6373   0001FD                     	ds	2
  6374                           
  6375                           	psect	cstackBANK0
  6376   000060                     __pcstackBANK0:
  6377                           	callstack 0
  6378   000060                     ?i1_getNextWriteMessage:
  6379                           	callstack 0
  6380   000060                     ?i1_pop:
  6381                           	callstack 0
  6382   000060                     ?i1_getBufferPointer:
  6383                           	callstack 0
  6384   000060                     ?i1_tickGet:
  6385                           	callstack 0
  6386   000060                     i1_isEvent$5877:
  6387                           	callstack 0
  6388   000060                     i1getNextWriteMessage@q:
  6389                           	callstack 0
  6390   000060                     i1pop@q:
  6391                           	callstack 0
  6392                           
  6393                           ; 1 bytes @ 0x0
  6394   000060                     	ds	1
  6395   000061                     i1isEvent@opc:
  6396                           	callstack 0
  6397                           
  6398                           ; 1 bytes @ 0x1
  6399   000061                     	ds	1
  6400   000062                     ??i1_getNextWriteMessage:
  6401   000062                     ??i1_pop:
  6402   000062                     i1getBufferPointer@b:
  6403                           	callstack 0
  6404                           
  6405                           ; 1 bytes @ 0x2
  6406   000062                     	ds	2
  6407   000064                     i1tickGet@IntFlag2:
  6408                           	callstack 0
  6409                           
  6410                           ; 1 bytes @ 0x4
  6411   000064                     	ds	1
  6412   000065                     i1tickGet@IntFlag1:
  6413                           	callstack 0
  6414                           
  6415                           ; 1 bytes @ 0x5
  6416   000065                     	ds	1
  6417   000066                     i1tickGet@currentTime:
  6418                           	callstack 0
  6419                           
  6420                           ; 4 bytes @ 0x6
  6421   000066                     	ds	1
  6422   000067                     i1pop@ret:
  6423                           	callstack 0
  6424                           
  6425                           ; 2 bytes @ 0x7
  6426   000067                     	ds	4
  6427   00006B                     i1getNextWriteMessage@wr:
  6428                           	callstack 0
  6429                           
  6430                           ; 1 bytes @ 0xB
  6431   00006B                     	ds	1
  6432   00006C                     ??_checkTxFifo:
  6433   00006C                     canFillRxFifo@ptr:
  6434                           	callstack 0
  6435                           
  6436                           ; 2 bytes @ 0xC
  6437   00006C                     	ds	2
  6438   00006E                     canFillRxFifo@m:
  6439                           	callstack 0
  6440                           
  6441                           ; 2 bytes @ 0xE
  6442   00006E                     	ds	3
  6443   000071                     checkTxFifo@m:
  6444                           	callstack 0
  6445                           
  6446                           ; 2 bytes @ 0x11
  6447   000071                     	ds	2
  6448   000073                     checkTxFifo@mp:
  6449                           	callstack 0
  6450                           
  6451                           ; 2 bytes @ 0x13
  6452   000073                     	ds	2
  6453   000075                     ??_checkCANTimeout:
  6454                           
  6455                           ; 1 bytes @ 0x15
  6456   000075                     	ds	4
  6457   000079                     ??_lowIsr:
  6458                           
  6459                           ; 1 bytes @ 0x19
  6460   000079                     	ds	4
  6461   00007D                     lowIsr@i:
  6462                           	callstack 0
  6463                           
  6464                           ; 1 bytes @ 0x1D
  6465   00007D                     	ds	1
  6466   00007E                     ??_isrLow:
  6467                           
  6468                           ; 1 bytes @ 0x1E
  6469   00007E                     	ds	15
  6470   00008D                     ??_findServiceIndex:
  6471   00008D                     ??_have:
  6472   00008D                     ??_showStatus:
  6473   00008D                     ?_getNV:
  6474                           	callstack 0
  6475   00008D                     ?_consumer2QGetDiagnostic:
  6476                           	callstack 0
  6477   00008D                     ?_peekTwoActionQueue:
  6478                           	callstack 0
  6479   00008D                     ?_ackGetDiagnostic:
  6480                           	callstack 0
  6481   00008D                     ?_findService:
  6482                           	callstack 0
  6483   00008D                     ?_producerGetDiagnostic:
  6484                           	callstack 0
  6485   00008D                     ?_teachGetDiagnostic:
  6486                           	callstack 0
  6487   00008D                     ?_mnsGetDiagnostic:
  6488                           	callstack 0
  6489   00008D                     ?_nvGetDiagnostic:
  6490                           	callstack 0
  6491   00008D                     ?_getNextWriteMessage:
  6492                           	callstack 0
  6493   00008D                     ?_pop:
  6494                           	callstack 0
  6495   00008D                     ?_canGetDiagnostic:
  6496                           	callstack 0
  6497   00008D                     ?_getBufferPointer:
  6498                           	callstack 0
  6499   00008D                     ?___awmod:
  6500                           	callstack 0
  6501   00008D                     ?_tickGet:
  6502                           	callstack 0
  6503   00008D                     initOutputs@io:
  6504                           	callstack 0
  6505   00008D                     deleteTwoActionQueue@qty:
  6506                           	callstack 0
  6507   00008D                     needsStarting@act:
  6508                           	callstack 0
  6509   00008D                     startBounceOutput@action:
  6510                           	callstack 0
  6511   00008D                     initBounce@io:
  6512                           	callstack 0
  6513   00008D                     ackPowerUp@i:
  6514                           	callstack 0
  6515   00008D                     teachGetESDdata@id:
  6516                           	callstack 0
  6517   00008D                     evtIdxToTableIndex@evtIdx:
  6518                           	callstack 0
  6519   00008D                     tableIndexToEvtIdx@tableIndex:
  6520                           	callstack 0
  6521   00008D                     nvGetESDdata@id:
  6522                           	callstack 0
  6523   00008D                     initTicker@priority:
  6524                           	callstack 0
  6525   00008D                     setTimedResponseDelay@delay:
  6526                           	callstack 0
  6527   00008D                     _isEvent$5877:
  6528                           	callstack 0
  6529   00008D                     push@q:
  6530                           	callstack 0
  6531   00008D                     getNextWriteMessage@q:
  6532                           	callstack 0
  6533   00008D                     pop@q:
  6534                           	callstack 0
  6535   00008D                     quantity@q:
  6536                           	callstack 0
  6537   00008D                     eraseFlashBlock@interruptEnabled:
  6538                           	callstack 0
  6539   00008D                     loadFlashBlock@i:
  6540                           	callstack 0
  6541   00008D                     canEsdData@id:
  6542                           	callstack 0
  6543   00008D                     APP_preProcessMessage@m:
  6544                           	callstack 0
  6545   00008D                     APP_postProcessMessage@m:
  6546                           	callstack 0
  6547   00008D                     pushTwoAction@a:
  6548                           	callstack 0
  6549   00008D                     completed@action:
  6550                           	callstack 0
  6551   00008D                     EEPROM_Read@index:
  6552                           	callstack 0
  6553   00008D                     FLASH_Read@address:
  6554                           	callstack 0
  6555   00008D                     ___awmod@dividend:
  6556                           	callstack 0
  6557   00008D                     memcpy@d1:
  6558                           	callstack 0
  6559                           
  6560                           ; 2 bytes @ 0x2D
  6561   00008D                     	ds	1
  6562   00008E                     ??_quantity:
  6563   00008E                     deleteTwoActionQueue@index:
  6564                           	callstack 0
  6565   00008E                     needsStarting@type:
  6566                           	callstack 0
  6567   00008E                     startBounceOutput@io:
  6568                           	callstack 0
  6569   00008E                     initTicker@divider:
  6570                           	callstack 0
  6571   00008E                     isEvent@opc:
  6572                           	callstack 0
  6573   00008E                     flushFlashBlock@interruptEnabled:
  6574                           	callstack 0
  6575   00008E                     push@m:
  6576                           	callstack 0
  6577                           
  6578                           ; 2 bytes @ 0x2E
  6579   00008E                     	ds	1
  6580   00008F                     ??_getNV:
  6581   00008F                     ??_consumer2QGetDiagnostic:
  6582   00008F                     ??_ackGetDiagnostic:
  6583   00008F                     ??_findService:
  6584   00008F                     ??_producerGetDiagnostic:
  6585   00008F                     ??_teachGetDiagnostic:
  6586   00008F                     ??_mnsGetDiagnostic:
  6587   00008F                     ??_nvGetDiagnostic:
  6588   00008F                     ??_getNextWriteMessage:
  6589   00008F                     ??_pop:
  6590   00008F                     ??_canGetDiagnostic:
  6591   00008F                     ??_FLASH_Read:
  6592   00008F                     peekTwoActionQueue@qty:
  6593                           	callstack 0
  6594   00008F                     completed@type:
  6595                           	callstack 0
  6596   00008F                     showStatus@s:
  6597                           	callstack 0
  6598   00008F                     initTicker@i:
  6599                           	callstack 0
  6600   00008F                     findServiceIndex@serviceType:
  6601                           	callstack 0
  6602   00008F                     have@id:
  6603                           	callstack 0
  6604   00008F                     flushFlashBlock@i:
  6605                           	callstack 0
  6606   00008F                     getBufferPointer@b:
  6607                           	callstack 0
  6608   00008F                     EEPROM_Write@index:
  6609                           	callstack 0
  6610   00008F                     ___awmod@divisor:
  6611                           	callstack 0
  6612   00008F                     memcpy@s1:
  6613                           	callstack 0
  6614                           
  6615                           ; 2 bytes @ 0x2F
  6616   00008F                     	ds	1
  6617   000090                     ??_push:
  6618   000090                     peekTwoActionQueue@index:
  6619                           	callstack 0
  6620   000090                     ackGetDiagnostic@index:
  6621                           	callstack 0
  6622   000090                     nvGetDiagnostic@index:
  6623                           	callstack 0
  6624   000090                     getNV@index:
  6625                           	callstack 0
  6626   000090                     findServiceIndex@i:
  6627                           	callstack 0
  6628   000090                     have@i:
  6629                           	callstack 0
  6630   000090                     FLASH_Write@index:
  6631                           	callstack 0
  6632                           
  6633                           ; 2 bytes @ 0x30
  6634   000090                     	ds	1
  6635   000091                     ??_readInput:
  6636   000091                     ?_readNVM:
  6637                           	callstack 0
  6638   000091                     ?_getTwoAction:
  6639                           	callstack 0
  6640   000091                     ?___wmul:
  6641                           	callstack 0
  6642   000091                     ?___lmul:
  6643                           	callstack 0
  6644   000091                     setOutputPin@state:
  6645                           	callstack 0
  6646   000091                     consumer2QGetDiagnostic@index:
  6647                           	callstack 0
  6648   000091                     needsStarting@io:
  6649                           	callstack 0
  6650   000091                     startServoOutput@action:
  6651                           	callstack 0
  6652   000091                     startMultiOutput@action:
  6653                           	callstack 0
  6654   000091                     setServoState@action:
  6655                           	callstack 0
  6656   000091                     setBounceState@action:
  6657                           	callstack 0
  6658   000091                     setMultiState@action:
  6659                           	callstack 0
  6660   000091                     producerGetDiagnostic@index:
  6661                           	callstack 0
  6662   000091                     teachGetDiagnostic@index:
  6663                           	callstack 0
  6664   000091                     getParameterFlags@flags:
  6665                           	callstack 0
  6666   000091                     mnsGetDiagnostic@index:
  6667                           	callstack 0
  6668   000091                     tickGet@IntFlag2:
  6669                           	callstack 0
  6670   000091                     startTimedResponse@serviceIndex:
  6671                           	callstack 0
  6672   000091                     findService@id:
  6673                           	callstack 0
  6674   000091                     EEPROM_Write@value:
  6675                           	callstack 0
  6676   000091                     canGetDiagnostic@index:
  6677                           	callstack 0
  6678   000091                     ___awmod@counter:
  6679                           	callstack 0
  6680   000091                     ___wmul@multiplier:
  6681                           	callstack 0
  6682   000091                     memcpy@n:
  6683                           	callstack 0
  6684   000091                     readNVM@index:
  6685                           	callstack 0
  6686   000091                     ___lmul@multiplier:
  6687                           	callstack 0
  6688                           
  6689                           ; 4 bytes @ 0x31
  6690   000091                     	ds	1
  6691   000092                     ??_setOutputPin:
  6692   000092                     ??_startServoOutput:
  6693   000092                     ??_startMultiOutput:
  6694   000092                     _completed$1519:
  6695                           	callstack 0
  6696   000092                     setServoState@io:
  6697                           	callstack 0
  6698   000092                     setBounceState@io:
  6699                           	callstack 0
  6700   000092                     setMultiState@io:
  6701                           	callstack 0
  6702   000092                     getParameter@idx:
  6703                           	callstack 0
  6704   000092                     tickGet@IntFlag1:
  6705                           	callstack 0
  6706   000092                     findService@i:
  6707                           	callstack 0
  6708   000092                     EEPROM_Write@interruptEnabled:
  6709                           	callstack 0
  6710   000092                     FLASH_Write@value:
  6711                           	callstack 0
  6712   000092                     ___awmod@sign:
  6713                           	callstack 0
  6714   000092                     startTimedResponse@callback:
  6715                           	callstack 0
  6716                           
  6717                           ; 2 bytes @ 0x32
  6718   000092                     	ds	1
  6719   000093                     ??_FLASH_Write:
  6720   000093                     readInput@io:
  6721                           	callstack 0
  6722   000093                     APP_nvValidate@value:
  6723                           	callstack 0
  6724   000093                     setOutputState@act:
  6725                           	callstack 0
  6726   000093                     completed@io:
  6727                           	callstack 0
  6728   000093                     startServoOutput@io:
  6729                           	callstack 0
  6730   000093                     startMultiOutput@io:
  6731                           	callstack 0
  6732   000093                     memcpy@tmp:
  6733                           	callstack 0
  6734   000093                     ___wmul@multiplicand:
  6735                           	callstack 0
  6736   000093                     tickGet@currentTime:
  6737                           	callstack 0
  6738                           
  6739                           ; 4 bytes @ 0x33
  6740   000093                     	ds	1
  6741   000094                     ??_readNVM:
  6742   000094                     setOutputPin@io:
  6743                           	callstack 0
  6744   000094                     APP_nvValidate@index:
  6745                           	callstack 0
  6746   000094                     setOutputState@type:
  6747                           	callstack 0
  6748   000094                     startTimedResponse@type:
  6749                           	callstack 0
  6750   000094                     pop@ret:
  6751                           	callstack 0
  6752   000094                     memcpy@d:
  6753                           	callstack 0
  6754                           
  6755                           ; 2 bytes @ 0x34
  6756   000094                     	ds	1
  6757   000095                     ??_setupTimer1:
  6758   000095                     ??_setupTimer3:
  6759   000095                     setOutputState@io:
  6760                           	callstack 0
  6761   000095                     ___wmul@product:
  6762                           	callstack 0
  6763   000095                     ___lmul@multiplicand:
  6764                           	callstack 0
  6765                           
  6766                           ; 4 bytes @ 0x35
  6767   000095                     	ds	1
  6768   000096                     readNVM@type:
  6769                           	callstack 0
  6770   000096                     memcpy@s:
  6771                           	callstack 0
  6772                           
  6773                           ; 2 bytes @ 0x36
  6774   000096                     	ds	1
  6775   000097                     ??_initInputScan:
  6776   000097                     ??_validStart:
  6777   000097                     ??_loadNvCache:
  6778   000097                     ??_canPowerUp:
  6779   000097                     ?_getNN:
  6780                           	callstack 0
  6781   000097                     ?_getEN:
  6782                           	callstack 0
  6783   000097                     ?___awdiv:
  6784                           	callstack 0
  6785   000097                     ?___lldiv:
  6786                           	callstack 0
  6787   000097                     setDigitalOutput@state:
  6788                           	callstack 0
  6789   000097                     mnsPowerUp@i:
  6790                           	callstack 0
  6791   000097                     handleSelfEnumeration@p:
  6792                           	callstack 0
  6793   000097                     ___awdiv@dividend:
  6794                           	callstack 0
  6795   000097                     ___lldiv@dividend:
  6796                           	callstack 0
  6797                           
  6798                           ; 4 bytes @ 0x37
  6799   000097                     	ds	1
  6800   000098                     setDigitalOutput@pinState:
  6801                           	callstack 0
  6802   000098                     getNextWriteMessage@wr:
  6803                           	callstack 0
  6804   000098                     _setupTimer1$1901:
  6805                           	callstack 0
  6806   000098                     _setupTimer3$1905:
  6807                           	callstack 0
  6808   000098                     mnsPowerUp@temp:
  6809                           	callstack 0
  6810   000098                     canPowerUp@temp:
  6811                           	callstack 0
  6812                           
  6813                           ; 2 bytes @ 0x38
  6814   000098                     	ds	1
  6815   000099                     ??_getNN:
  6816   000099                     ??_getEN:
  6817   000099                     ??_handleSelfEnumeration:
  6818   000099                     setDigitalOutput@io:
  6819                           	callstack 0
  6820   000099                     initInputScan@input:
  6821                           	callstack 0
  6822   000099                     loadNvCache@temp:
  6823                           	callstack 0
  6824   000099                     canSendMessage@mp:
  6825                           	callstack 0
  6826   000099                     ___awdiv@divisor:
  6827                           	callstack 0
  6828   000099                     ___lmul@product:
  6829                           	callstack 0
  6830                           
  6831                           ; 4 bytes @ 0x39
  6832   000099                     	ds	1
  6833   00009A                     setupTimer1@ticks:
  6834                           	callstack 0
  6835   00009A                     setupTimer3@ticks:
  6836                           	callstack 0
  6837                           
  6838                           ; 2 bytes @ 0x3A
  6839   00009A                     	ds	1
  6840   00009B                     ??_canSendMessage:
  6841   00009B                     validStart@tableIndex:
  6842                           	callstack 0
  6843   00009B                     loadNvCache@i:
  6844                           	callstack 0
  6845   00009B                     ___awdiv@counter:
  6846                           	callstack 0
  6847   00009B                     ___lldiv@divisor:
  6848                           	callstack 0
  6849                           
  6850                           ; 4 bytes @ 0x3B
  6851   00009B                     	ds	1
  6852   00009C                     setupTimer1@io:
  6853                           	callstack 0
  6854   00009C                     setupTimer3@io:
  6855                           	callstack 0
  6856   00009C                     validStart@f:
  6857                           	callstack 0
  6858   00009C                     nvPowerUp@i:
  6859                           	callstack 0
  6860   00009C                     ___awdiv@sign:
  6861                           	callstack 0
  6862                           
  6863                           ; 1 bytes @ 0x3C
  6864   00009C                     	ds	1
  6865   00009D                     ??_getEVs:
  6866   00009D                     ??_numEv:
  6867   00009D                     ?_getEv:
  6868                           	callstack 0
  6869   00009D                     getEv@evNum:
  6870                           	callstack 0
  6871   00009D                     handleSelfEnumeration@incomingCanId:
  6872                           	callstack 0
  6873   00009D                     doWait@duration:
  6874                           	callstack 0
  6875   00009D                     getNN@hi:
  6876                           	callstack 0
  6877   00009D                     getEN@hi:
  6878                           	callstack 0
  6879   00009D                     ___awdiv@quotient:
  6880                           	callstack 0
  6881                           
  6882                           ; 2 bytes @ 0x3D
  6883   00009D                     	ds	2
  6884   00009F                     ??_doWait:
  6885   00009F                     ??_bounceUp:
  6886   00009F                     ??_bounceDown:
  6887   00009F                     ??_getEv:
  6888   00009F                     ??_APP_nvDefault:
  6889   00009F                     ??_leds_poll:
  6890   00009F                     setServoPosition@pos:
  6891                           	callstack 0
  6892   00009F                     getNN@lo:
  6893                           	callstack 0
  6894   00009F                     getEN@lo:
  6895                           	callstack 0
  6896   00009F                     ___lldiv@quotient:
  6897                           	callstack 0
  6898                           
  6899                           ; 4 bytes @ 0x3F
  6900   00009F                     	ds	1
  6901   0000A0                     setServoPosition@io:
  6902                           	callstack 0
  6903   0000A0                     canSendMessage@m:
  6904                           	callstack 0
  6905                           
  6906                           ; 2 bytes @ 0x40
  6907   0000A0                     	ds	1
  6908   0000A1                     setOutputPosition@pos:
  6909                           	callstack 0
  6910   0000A1                     numEv@num:
  6911                           	callstack 0
  6912   0000A1                     getEVs@f:
  6913                           	callstack 0
  6914   0000A1                     getNN@f:
  6915                           	callstack 0
  6916   0000A1                     getEN@tableIndex:
  6917                           	callstack 0
  6918                           
  6919                           ; 1 bytes @ 0x41
  6920   0000A1                     	ds	1
  6921   0000A2                     ??_sendMessage:
  6922   0000A2                     setOutputPosition@type:
  6923                           	callstack 0
  6924   0000A2                     numEv@f:
  6925                           	callstack 0
  6926   0000A2                     getEVs@evIdx:
  6927                           	callstack 0
  6928   0000A2                     getNN@tableIndex:
  6929                           	callstack 0
  6930                           
  6931                           ; 1 bytes @ 0x42
  6932   0000A2                     	ds	1
  6933   0000A3                     APP_nvDefault@index:
  6934                           	callstack 0
  6935   0000A3                     setOutputPosition@io:
  6936                           	callstack 0
  6937   0000A3                     numEv@tableIndex:
  6938                           	callstack 0
  6939   0000A3                     getEVs@tableIndex:
  6940                           	callstack 0
  6941   0000A3                     ___lldiv@counter:
  6942                           	callstack 0
  6943   0000A3                     getHash@nn:
  6944                           	callstack 0
  6945                           
  6946                           ; 2 bytes @ 0x43
  6947   0000A3                     	ds	1
  6948   0000A4                     ??_initServos:
  6949   0000A4                     ??_pbDownTimer:
  6950   0000A4                     ??_pbUpTimer:
  6951   0000A4                     getEv@f:
  6952                           	callstack 0
  6953   0000A4                     getEVs@evNum:
  6954                           	callstack 0
  6955   0000A4                     sendMessage@opc:
  6956                           	callstack 0
  6957   0000A4                     writeNVM@index:
  6958                           	callstack 0
  6959                           
  6960                           ; 3 bytes @ 0x44
  6961   0000A4                     	ds	1
  6962   0000A5                     bounceUp@reversed:
  6963                           	callstack 0
  6964   0000A5                     getEv@tableIndex:
  6965                           	callstack 0
  6966   0000A5                     sendMessage2@data1:
  6967                           	callstack 0
  6968   0000A5                     sendMessage3@data1:
  6969                           	callstack 0
  6970   0000A5                     sendMessage4@data1:
  6971                           	callstack 0
  6972   0000A5                     sendMessage5@opc:
  6973                           	callstack 0
  6974   0000A5                     sendMessage6@opc:
  6975                           	callstack 0
  6976   0000A5                     sendMessage7@opc:
  6977                           	callstack 0
  6978   0000A5                     getHash@en:
  6979                           	callstack 0
  6980                           
  6981                           ; 2 bytes @ 0x45
  6982   0000A5                     	ds	1
  6983   0000A6                     bounceUp@midway:
  6984                           	callstack 0
  6985   0000A6                     sendMessage2@data2:
  6986                           	callstack 0
  6987   0000A6                     sendMessage3@data2:
  6988                           	callstack 0
  6989   0000A6                     sendMessage4@data2:
  6990                           	callstack 0
  6991   0000A6                     _initServos$8021:
  6992                           	callstack 0
  6993                           
  6994                           ; 1 bytes @ 0x46
  6995   0000A6                     	ds	1
  6996   0000A7                     ??_getHash:
  6997   0000A7                     bounceUp@io:
  6998                           	callstack 0
  6999   0000A7                     sendMessage2@opc:
  7000                           	callstack 0
  7001   0000A7                     sendMessage3@data3:
  7002                           	callstack 0
  7003   0000A7                     sendMessage4@data3:
  7004                           	callstack 0
  7005   0000A7                     writeNVM@value:
  7006                           	callstack 0
  7007   0000A7                     _initServos$8020:
  7008                           	callstack 0
  7009                           
  7010                           ; 1 bytes @ 0x47
  7011   0000A7                     	ds	1
  7012   0000A8                     initServos@io:
  7013                           	callstack 0
  7014   0000A8                     getHash@hash:
  7015                           	callstack 0
  7016   0000A8                     pbDownTimer@timeout:
  7017                           	callstack 0
  7018   0000A8                     pbUpTimer@timeout:
  7019                           	callstack 0
  7020   0000A8                     sendMessage3@opc:
  7021                           	callstack 0
  7022   0000A8                     sendMessage4@data4:
  7023                           	callstack 0
  7024   0000A8                     writeNVM@type:
  7025                           	callstack 0
  7026                           
  7027                           ; 1 bytes @ 0x48
  7028   0000A8                     	ds	1
  7029   0000A9                     
  7030                           ; 1 bytes @ 0x49
  7031                           
  7032                           	psect	cstackCOMRAM
  7033   00002B                     __pcstackCOMRAM:
  7034                           	callstack 0
  7035   00002B                     ?i2_getNV:
  7036                           	callstack 0
  7037   00002B                     ?i2_getNextWriteMessage:
  7038                           	callstack 0
  7039   00002B                     ?i2_pop:
  7040                           	callstack 0
  7041   00002B                     ?i2_getBufferPointer:
  7042                           	callstack 0
  7043   00002B                     ?i2_tickGet:
  7044                           	callstack 0
  7045   00002B                     i2_isEvent$5877:
  7046                           	callstack 0
  7047   00002B                     i2getNextWriteMessage@q:
  7048                           	callstack 0
  7049   00002B                     i2pop@q:
  7050                           	callstack 0
  7051                           
  7052                           ; 1 bytes @ 0x0
  7053   00002B                     	ds	1
  7054   00002C                     i2isEvent@opc:
  7055                           	callstack 0
  7056                           
  7057                           ; 1 bytes @ 0x1
  7058   00002C                     	ds	1
  7059   00002D                     ??i2_getNV:
  7060   00002D                     ??i2_getNextWriteMessage:
  7061   00002D                     ??i2_pop:
  7062   00002D                     i2getBufferPointer@b:
  7063                           	callstack 0
  7064                           
  7065                           ; 1 bytes @ 0x2
  7066   00002D                     	ds	1
  7067   00002E                     i2getNV@index:
  7068                           	callstack 0
  7069                           
  7070                           ; 1 bytes @ 0x3
  7071   00002E                     	ds	1
  7072   00002F                     i2setOutputPin@state:
  7073                           	callstack 0
  7074   00002F                     i2tickGet@IntFlag2:
  7075                           	callstack 0
  7076                           
  7077                           ; 1 bytes @ 0x4
  7078   00002F                     	ds	1
  7079   000030                     ??i2_setOutputPin:
  7080   000030                     i2tickGet@IntFlag1:
  7081                           	callstack 0
  7082                           
  7083                           ; 1 bytes @ 0x5
  7084   000030                     	ds	1
  7085   000031                     i2tickGet@currentTime:
  7086                           	callstack 0
  7087                           
  7088                           ; 4 bytes @ 0x6
  7089   000031                     	ds	1
  7090   000032                     i2setOutputPin@io:
  7091                           	callstack 0
  7092   000032                     i2pop@ret:
  7093                           	callstack 0
  7094                           
  7095                           ; 2 bytes @ 0x7
  7096   000032                     	ds	1
  7097   000033                     
  7098                           ; 1 bytes @ 0x8
  7099   000033                     	ds	3
  7100   000036                     i2getNextWriteMessage@wr:
  7101                           	callstack 0
  7102                           
  7103                           ; 1 bytes @ 0xB
  7104   000036                     	ds	1
  7105   000037                     ??i2_checkTxFifo:
  7106   000037                     i2canFillRxFifo@ptr:
  7107                           	callstack 0
  7108                           
  7109                           ; 2 bytes @ 0xC
  7110   000037                     	ds	2
  7111   000039                     i2canFillRxFifo@m:
  7112                           	callstack 0
  7113                           
  7114                           ; 2 bytes @ 0xE
  7115   000039                     	ds	3
  7116   00003C                     i2checkTxFifo@m:
  7117                           	callstack 0
  7118                           
  7119                           ; 2 bytes @ 0x11
  7120   00003C                     	ds	2
  7121   00003E                     i2checkTxFifo@mp:
  7122                           	callstack 0
  7123                           
  7124                           ; 2 bytes @ 0x13
  7125   00003E                     	ds	2
  7126   000040                     ??i2_checkCANTimeout:
  7127   000040                     
  7128                           ; 1 bytes @ 0x15
  7129   000040                     	ds	4
  7130   000044                     ??_highIsr:
  7131   000044                     
  7132                           ; 1 bytes @ 0x19
  7133   000044                     	ds	4
  7134   000048                     highIsr@i:
  7135                           	callstack 0
  7136                           
  7137                           ; 1 bytes @ 0x1D
  7138   000048                     	ds	1
  7139   000049                     ??_isrHigh:
  7140                           
  7141                           ; 1 bytes @ 0x1E
  7142   000049                     	ds	12
  7143                           
  7144 ;;
  7145 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  7146 ;;
  7147 ;; *************** function _main *****************
  7148 ;; Defined at:
  7149 ;;		line 1245 in file "../../VLCBlib_PIC/vlcb.c"
  7150 ;; Parameters:    Size  Location     Type
  7151 ;;		None
  7152 ;; Auto vars:     Size  Location     Type
  7153 ;;  i               1    0        unsigned char 
  7154 ;; Return value:  Size  Location     Type
  7155 ;;                  1    wreg      void 
  7156 ;; Registers used:
  7157 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  7158 ;; Tracked objects:
  7159 ;;		On entry : 0/0
  7160 ;;		On exit  : 0/0
  7161 ;;		Unchanged: 0/0
  7162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7167 ;;Total ram usage:        0 bytes
  7168 ;; Hardware stack levels required when called: 29
  7169 ;; This function calls:
  7170 ;;		_checkPowerOnPb
  7171 ;;		_factoryReset
  7172 ;;		_initRomOps
  7173 ;;		_loop
  7174 ;;		_poll
  7175 ;;		_powerUp
  7176 ;;		_readNVM
  7177 ;;		_setup
  7178 ;; This function is called by:
  7179 ;;		Startup code after reset
  7180 ;; This function uses a non-reentrant model
  7181 ;;
  7182                           
  7183                           	psect	text0
  7184   00B7B0                     __ptext0:
  7185                           	callstack 0
  7186   00B7B0                     _main:
  7187                           	callstack 2
  7188                           
  7189                           ;../../VLCBlib_PIC/vlcb.c: 1246:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1252:     OSCT
      +                          UNEbits.PLLEN = 1;
  7190                           
  7191                           ;incstack = 0
  7192   00B7B0  8C9B               	bsf	155,6,c	;volatile
  7193                           
  7194                           ;../../VLCBlib_PIC/vlcb.c: 1267:     RCONbits.IPEN = 1;
  7195   00B7B2  8ED0               	bsf	208,7,c	;volatile
  7196                           
  7197                           ;../../VLCBlib_PIC/vlcb.c: 1289:     initRomOps();
  7198   00B7B4  EC7F  F061         	call	_initRomOps	;wreg free
  7199                           
  7200                           ;../../VLCBlib_PIC/vlcb.c: 1291:     if (readNVM(FLASH_NVM_TYPE, 0xFF80) != 1) {
  7201   00B7B8  0E80               	movlw	128
  7202   00B7BA  0100               	movlb	0	; () banked
  7203   00B7BC  6F91               	movwf	readNVM@index& (0+255),b
  7204   00B7BE  0EFF               	movlw	255
  7205   00B7C0  6F92               	movwf	(readNVM@index+1)& (0+255),b
  7206   00B7C2  0E00               	movlw	0
  7207   00B7C4  6F93               	movwf	(readNVM@index+2)& (0+255),b
  7208   00B7C6  0E01               	movlw	1
  7209   00B7C8  ECDD  F058         	call	_readNVM
  7210   00B7CC  0100               	movlb	0	; () banked
  7211   00B7CE  0591               	decf	?_readNVM& (0+255),w,b
  7212   00B7D0  1192               	iorwf	(?_readNVM+1)& (0+255),w,b
  7213   00B7D2  A4D8               	btfss	status,2,c
  7214                           
  7215                           ; BSR set to: 0
  7216                           ;../../VLCBlib_PIC/vlcb.c: 1292:         factoryReset();
  7217   00B7D4  ECB2  F042         	call	_factoryReset	;wreg free
  7218                           
  7219                           ;../../VLCBlib_PIC/vlcb.c: 1296:     powerUp();
  7220                           
  7221                           ;../../VLCBlib_PIC/vlcb.c: 1293:     }
  7222   00B7D8  EC95  F043         	call	_powerUp	;wreg free
  7223                           
  7224                           ;../../VLCBlib_PIC/vlcb.c: 1299:     {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
  7225   00B7DC  8EF2               	bsf	242,7,c	;volatile
  7226   00B7DE  8CF2               	bsf	242,6,c	;volatile
  7227                           
  7228                           ;../../VLCBlib_PIC/vlcb.c: 1300:     checkPowerOnPb();
  7229   00B7E0  EC0D  F059         	call	_checkPowerOnPb	;wreg free
  7230                           
  7231                           ;../../VLCBlib_PIC/vlcb.c: 1303:     {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
  7232   00B7E4  9EF2               	bcf	242,7,c	;volatile
  7233   00B7E6  9CF2               	bcf	242,6,c	;volatile
  7234                           
  7235                           ;../../VLCBlib_PIC/vlcb.c: 1304:     setup();
  7236   00B7E8  EC07  F04C         	call	_setup	;wreg free
  7237                           
  7238                           ;../../VLCBlib_PIC/vlcb.c: 1307:     {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
  7239   00B7EC  8EF2               	bsf	242,7,c	;volatile
  7240   00B7EE  8CF2               	bsf	242,6,c	;volatile
  7241   00B7F0                     l23938:
  7242                           
  7243                           ;../../VLCBlib_PIC/vlcb.c: 1311:         poll();
  7244   00B7F0  ECBF  F01E         	call	_poll	;wreg free
  7245                           
  7246                           ;../../VLCBlib_PIC/vlcb.c: 1312:         loop();
  7247   00B7F4  EC99  F036         	call	_loop	;wreg free
  7248   00B7F8  D7FB               	goto	l23938
  7249   00B7FA                     __end_of_main:
  7250                           	callstack 0
  7251                           
  7252 ;; *************** function _setup *****************
  7253 ;; Defined at:
  7254 ;;		line 228 in file "../main.c"
  7255 ;; Parameters:    Size  Location     Type
  7256 ;;		None
  7257 ;; Auto vars:     Size  Location     Type
  7258 ;;		None
  7259 ;; Return value:  Size  Location     Type
  7260 ;;                  1    wreg      void 
  7261 ;; Registers used:
  7262 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7263 ;; Tracked objects:
  7264 ;;		On entry : 0/0
  7265 ;;		On exit  : 0/0
  7266 ;;		Unchanged: 0/0
  7267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7272 ;;Total ram usage:        0 bytes
  7273 ;; Hardware stack levels used: 1
  7274 ;; Hardware stack levels required when called: 19
  7275 ;; This function calls:
  7276 ;;		_configIO
  7277 ;;		_getNV
  7278 ;;		_initInputScan
  7279 ;;		_initOutputs
  7280 ;;		_initServos
  7281 ;;		_setTimedResponseDelay
  7282 ;;		_tickGet
  7283 ;;		_universalEventsInit
  7284 ;; This function is called by:
  7285 ;;		_main
  7286 ;; This function uses a non-reentrant model
  7287 ;;
  7288                           
  7289                           	psect	text1
  7290   00980E                     __ptext1:
  7291                           	callstack 0
  7292   00980E                     _setup:
  7293                           	callstack 11
  7294                           
  7295                           ;../main.c: 233:     transport = &canTransport;
  7296                           
  7297                           ;incstack = 0
  7298   00980E  0E7B               	movlw	low _canTransport
  7299   009810  0101               	movlb	1	; () banked
  7300   009812  6F76               	movwf	_transport& (0+255),b
  7301   009814  0EEF               	movlw	high _canTransport
  7302   009816  6F77               	movwf	(_transport+1)& (0+255),b
  7303                           
  7304                           ; BSR set to: 1
  7305                           ;../main.c: 240:     INTCON2bits.RBPU = 0;
  7306   009818  9EF1               	bcf	241,7,c	;volatile
  7307                           
  7308                           ; BSR set to: 1
  7309                           ;../main.c: 242:     WPUB = (uint8_t)getNV(4);
  7310   00981A  0E04               	movlw	4
  7311   00981C  EC35  F05D         	call	_getNV
  7312   009820  0100               	movlb	0	; () banked
  7313   009822  518D               	movf	?_getNV& (0+255),w,b
  7314   009824  010F               	movlb	15	; () banked
  7315   009826  6F5B               	movwf	91,b	;volatile
  7316                           
  7317                           ; BSR set to: 15
  7318                           ;../main.c: 293:     setTimedResponseDelay((uint8_t)getNV(5));
  7319   009828  0E05               	movlw	5
  7320   00982A  EC35  F05D         	call	_getNV
  7321   00982E  0100               	movlb	0	; () banked
  7322   009830  518D               	movf	?_getNV& (0+255),w,b
  7323   009832  ECC8  F061         	call	_setTimedResponseDelay
  7324                           
  7325                           ;../main.c: 294:     universalEventsInit();
  7326   009836  EC75  F061         	call	_universalEventsInit	;wreg free
  7327                           
  7328                           ;../main.c: 301:     ANCON0 = 0x00;
  7329   00983A  0E00               	movlw	0
  7330   00983C  010F               	movlb	15	; () banked
  7331   00983E  6F5D               	movwf	93,b	;volatile
  7332                           
  7333                           ; BSR set to: 15
  7334                           ;../main.c: 302:     ANCON1 = 0x00;
  7335   009840  0E00               	movlw	0
  7336   009842  6F5C               	movwf	92,b	;volatile
  7337                           
  7338                           ; BSR set to: 15
  7339                           ;../main.c: 315:     initServos();
  7340   009844  EC0A  F03E         	call	_initServos	;wreg free
  7341                           
  7342                           ;../main.c: 317:     initOutputs();
  7343   009848  EC9E  F05F         	call	_initOutputs	;wreg free
  7344                           
  7345                           ;../main.c: 320:     for (io=0; io< 16; io++) {
  7346   00984C  0E00               	movlw	0
  7347   00984E  0100               	movlb	0	; () banked
  7348   009850  6FCB               	movwf	_io& (0+255),b
  7349   009852                     l23702:
  7350                           
  7351                           ; BSR set to: 0
  7352                           ;../main.c: 321:         configIO(io);
  7353   009852  51CB               	movf	_io& (0+255),w,b
  7354   009854  ECC0  F026         	call	_configIO
  7355                           
  7356                           ;../main.c: 322:     }
  7357   009858  0100               	movlb	0	; () banked
  7358   00985A  2BCB               	incf	_io& (0+255),f,b
  7359                           
  7360                           ; BSR set to: 0
  7361   00985C  0E0F               	movlw	15
  7362   00985E  65CB               	cpfsgt	_io& (0+255),b
  7363   009860  D7F8               	goto	l23702
  7364                           
  7365                           ; BSR set to: 0
  7366                           ;../main.c: 323:     initInputScan();
  7367   009862  ECB2  F04B         	call	_initInputScan	;wreg free
  7368                           
  7369                           ;../main.c: 326:     (INTCONbits.GIE = 1);
  7370   009866  8EF2               	bsf	242,7,c	;volatile
  7371                           
  7372                           ;../main.c: 328:     startTime.val = tickGet();
  7373   009868  ECC2  F059         	call	_tickGet	;wreg free
  7374   00986C  C08D  F019         	movff	?_tickGet,_startTime
  7375   009870  C08E  F01A         	movff	?_tickGet+1,_startTime+1
  7376   009874  C08F  F01B         	movff	?_tickGet+2,_startTime+2
  7377   009878  C090  F01C         	movff	?_tickGet+3,_startTime+3
  7378                           
  7379                           ;../main.c: 329:     lastServoStartTime.val = startTime.val;
  7380   00987C  C019  F170         	movff	_startTime,_lastServoStartTime
  7381   009880  C01A  F171         	movff	_startTime+1,_lastServoStartTime+1
  7382   009884  C01B  F172         	movff	_startTime+2,_lastServoStartTime+2
  7383   009888  C01C  F173         	movff	_startTime+3,_lastServoStartTime+3
  7384                           
  7385                           ;../main.c: 330:     lastInputScanTime.val = startTime.val;
  7386   00988C  C019  F16C         	movff	_startTime,_lastInputScanTime
  7387   009890  C01A  F16D         	movff	_startTime+1,_lastInputScanTime+1
  7388   009894  C01B  F16E         	movff	_startTime+2,_lastInputScanTime+2
  7389   009898  C01C  F16F         	movff	_startTime+3,_lastInputScanTime+3
  7390                           
  7391                           ;../main.c: 331:     lastActionPollTime.val = startTime.val;
  7392   00989C  C019  F168         	movff	_startTime,_lastActionPollTime
  7393   0098A0  C01A  F169         	movff	_startTime+1,_lastActionPollTime+1
  7394   0098A4  C01B  F16A         	movff	_startTime+2,_lastActionPollTime+2
  7395   0098A8  C01C  F16B         	movff	_startTime+3,_lastActionPollTime+3
  7396                           
  7397                           ;../main.c: 333:     started = FALSE;
  7398   0098AC  0E00               	movlw	0
  7399   0098AE  0100               	movlb	0	; () banked
  7400   0098B0  6FCC               	movwf	_started& (0+255),b
  7401                           
  7402                           ; BSR set to: 0
  7403   0098B2  0012               	return		;funcret
  7404   0098B4                     __end_of_setup:
  7405                           	callstack 0
  7406                           
  7407 ;; *************** function _universalEventsInit *****************
  7408 ;; Defined at:
  7409 ;;		line 86 in file "../universalEvents.c"
  7410 ;; Parameters:    Size  Location     Type
  7411 ;;		None
  7412 ;; Auto vars:     Size  Location     Type
  7413 ;;		None
  7414 ;; Return value:  Size  Location     Type
  7415 ;;                  1    wreg      void 
  7416 ;; Registers used:
  7417 ;;		wreg, status,2
  7418 ;; Tracked objects:
  7419 ;;		On entry : 0/0
  7420 ;;		On exit  : 0/0
  7421 ;;		Unchanged: 0/0
  7422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7427 ;;Total ram usage:        0 bytes
  7428 ;; Hardware stack levels used: 1
  7429 ;; Hardware stack levels required when called: 12
  7430 ;; This function calls:
  7431 ;;		Nothing
  7432 ;; This function is called by:
  7433 ;;		_setup
  7434 ;; This function uses a non-reentrant model
  7435 ;;
  7436                           
  7437                           	psect	text2
  7438   00C2EA                     __ptext2:
  7439                           	callstack 0
  7440   00C2EA                     _universalEventsInit:
  7441                           	callstack 17
  7442                           
  7443                           ;../universalEvents.c: 87:     startWait.val = 0;
  7444                           
  7445                           ; BSR set to: 0
  7446                           ;incstack = 0
  7447   00C2EA  0E00               	movlw	0
  7448   00C2EC  0101               	movlb	1	; () banked
  7449   00C2EE  6F64               	movwf	_startWait& (0+255),b
  7450   00C2F0  0E00               	movlw	0
  7451   00C2F2  6F65               	movwf	(_startWait+1)& (0+255),b
  7452   00C2F4  0E00               	movlw	0
  7453   00C2F6  6F66               	movwf	(_startWait+2)& (0+255),b
  7454   00C2F8  0E00               	movlw	0
  7455   00C2FA  6F67               	movwf	(_startWait+3)& (0+255),b
  7456                           
  7457                           ; BSR set to: 1
  7458   00C2FC  0012               	return		;funcret
  7459   00C2FE                     __end_of_universalEventsInit:
  7460                           	callstack 0
  7461                           
  7462 ;; *************** function _initServos *****************
  7463 ;; Defined at:
  7464 ;;		line 123 in file "../servo.c"
  7465 ;; Parameters:    Size  Location     Type
  7466 ;;		None
  7467 ;; Auto vars:     Size  Location     Type
  7468 ;;  io              1   72[BANK0 ] unsigned char 
  7469 ;; Return value:  Size  Location     Type
  7470 ;;                  1    wreg      void 
  7471 ;; Registers used:
  7472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7473 ;; Tracked objects:
  7474 ;;		On entry : 0/0
  7475 ;;		On exit  : 0/0
  7476 ;;		Unchanged: 0/0
  7477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7479 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7480 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7481 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7482 ;;Total ram usage:        5 bytes
  7483 ;; Hardware stack levels used: 1
  7484 ;; Hardware stack levels required when called: 15
  7485 ;; This function calls:
  7486 ;;		_getNV
  7487 ;;		_readNVM
  7488 ;;		_setOutputPosition
  7489 ;;		_tickGet
  7490 ;; This function is called by:
  7491 ;;		_setup
  7492 ;; This function uses a non-reentrant model
  7493 ;;
  7494                           
  7495                           	psect	text3
  7496   007C14                     __ptext3:
  7497                           	callstack 0
  7498   007C14                     _initServos:
  7499                           	callstack 14
  7500                           
  7501                           ; BSR set to: 1
  7502                           ;incstack = 0
  7503   007C14  0E00               	movlw	0
  7504   007C16  0100               	movlb	0	; () banked
  7505   007C18  6FA8               	movwf	initServos@io& (0+255),b
  7506   007C1A                     l21756:
  7507                           
  7508                           ; BSR set to: 0
  7509   007C1A  51A8               	movf	initServos@io& (0+255),w,b
  7510   007C1C  0D07               	mullw	7
  7511   007C1E  50F3               	movf	243,w,c
  7512   007C20  0F11               	addlw	17
  7513   007C22  EC35  F05D         	call	_getNV
  7514   007C26  0100               	movlb	0	; () banked
  7515   007C28  A58D               	btfss	?_getNV& (0+255),2,b
  7516   007C2A  D009               	goto	l21760
  7517                           
  7518                           ; BSR set to: 0
  7519   007C2C  0E30               	movlw	low _servoState
  7520   007C2E  25A8               	addwf	initServos@io& (0+255),w,b
  7521   007C30  6ED9               	movwf	fsr2l,c
  7522   007C32  6ADA               	clrf	fsr2h,c
  7523   007C34  0E01               	movlw	high _servoState
  7524   007C36  22DA               	addwfc	fsr2h,f,c
  7525   007C38  0E01               	movlw	1
  7526   007C3A  6EDF               	movwf	indf2,c
  7527   007C3C  D007               	goto	l21762
  7528   007C3E                     l21760:
  7529                           
  7530                           ; BSR set to: 0
  7531   007C3E  0E30               	movlw	low _servoState
  7532   007C40  25A8               	addwf	initServos@io& (0+255),w,b
  7533   007C42  6ED9               	movwf	fsr2l,c
  7534   007C44  6ADA               	clrf	fsr2h,c
  7535   007C46  0E01               	movlw	high _servoState
  7536   007C48  22DA               	addwfc	fsr2h,f,c
  7537   007C4A  6ADF               	clrf	indf2,c
  7538   007C4C                     l21762:
  7539                           
  7540                           ; BSR set to: 0
  7541   007C4C  ECC2  F059         	call	_tickGet	;wreg free
  7542   007C50  0100               	movlb	0	; () banked
  7543   007C52  51A8               	movf	initServos@io& (0+255),w,b
  7544   007C54  0D04               	mullw	4
  7545   007C56  0E88               	movlw	low _ticksWhenStopped
  7546   007C58  24F3               	addwf	243,w,c
  7547   007C5A  6ED9               	movwf	fsr2l,c
  7548   007C5C  0E03               	movlw	high _ticksWhenStopped
  7549   007C5E  20F4               	addwfc	prodh,w,c
  7550   007C60  6EDA               	movwf	fsr2h,c
  7551   007C62  C08D  FFDE         	movff	?_tickGet,postinc2
  7552   007C66  C08E  FFDE         	movff	?_tickGet+1,postinc2
  7553   007C6A  C08F  FFDE         	movff	?_tickGet+2,postinc2
  7554   007C6E  C090  FFDE         	movff	?_tickGet+3,postinc2
  7555                           
  7556                           ; BSR set to: 0
  7557   007C72  51A8               	movf	initServos@io& (0+255),w,b
  7558   007C74  0D07               	mullw	7
  7559   007C76  50F3               	movf	243,w,c
  7560   007C78  0F11               	addlw	17
  7561   007C7A  EC35  F05D         	call	_getNV
  7562   007C7E  0100               	movlb	0	; () banked
  7563   007C80  A58D               	btfss	?_getNV& (0+255),2,b
  7564   007C82  D020               	goto	l21770
  7565                           
  7566                           ; BSR set to: 0
  7567   007C84  51A8               	movf	initServos@io& (0+255),w,b
  7568   007C86  0D07               	mullw	7
  7569   007C88  50F3               	movf	243,w,c
  7570   007C8A  0F10               	addlw	16
  7571   007C8C  EC35  F05D         	call	_getNV
  7572   007C90  0100               	movlb	0	; () banked
  7573   007C92  518D               	movf	?_getNV& (0+255),w,b
  7574   007C94  6FA7               	movwf	_initServos$8020& (0+255),b
  7575                           
  7576                           ; BSR set to: 0
  7577   007C96  0EDE               	movlw	222
  7578   007C98  25A8               	addwf	initServos@io& (0+255),w,b
  7579   007C9A  6FA4               	movwf	??_initServos& (0+255),b
  7580   007C9C  6BA5               	clrf	(??_initServos+1)& (0+255),b
  7581   007C9E  0E03               	movlw	3
  7582   007CA0  23A5               	addwfc	(??_initServos+1)& (0+255),f,b
  7583   007CA2  C0A4  F091         	movff	??_initServos,readNVM@index
  7584   007CA6  C0A5  F092         	movff	??_initServos+1,readNVM@index+1
  7585   007CAA  6B93               	clrf	(readNVM@index+2)& (0+255),b
  7586   007CAC  0E00               	movlw	0
  7587   007CAE  ECDD  F058         	call	_readNVM
  7588   007CB2  0100               	movlb	0	; () banked
  7589   007CB4  5191               	movf	?_readNVM& (0+255),w,b
  7590   007CB6  6FA1               	movwf	setOutputPosition@pos& (0+255),b
  7591   007CB8  C0A7  F0A2         	movff	_initServos$8020,setOutputPosition@type
  7592   007CBC  51A8               	movf	initServos@io& (0+255),w,b
  7593   007CBE  ECC9  F055         	call	_setOutputPosition
  7594   007CC2  D019               	goto	l21774
  7595   007CC4                     l21770:
  7596                           
  7597                           ; BSR set to: 0
  7598   007CC4  51A8               	movf	initServos@io& (0+255),w,b
  7599   007CC6  0D07               	mullw	7
  7600   007CC8  50F3               	movf	243,w,c
  7601   007CCA  0F12               	addlw	18
  7602   007CCC  EC35  F05D         	call	_getNV
  7603   007CD0  0100               	movlb	0	; () banked
  7604   007CD2  518D               	movf	?_getNV& (0+255),w,b
  7605   007CD4  6FA7               	movwf	_initServos$8020& (0+255),b
  7606   007CD6  51A8               	movf	initServos@io& (0+255),w,b
  7607   007CD8  0D07               	mullw	7
  7608   007CDA  50F3               	movf	243,w,c
  7609   007CDC  0F10               	addlw	16
  7610   007CDE  EC35  F05D         	call	_getNV
  7611   007CE2  0100               	movlb	0	; () banked
  7612   007CE4  518D               	movf	?_getNV& (0+255),w,b
  7613   007CE6  6FA6               	movwf	_initServos$8021& (0+255),b
  7614                           
  7615                           ; BSR set to: 0
  7616   007CE8  C0A7  F0A1         	movff	_initServos$8020,setOutputPosition@pos
  7617   007CEC  C0A6  F0A2         	movff	_initServos$8021,setOutputPosition@type
  7618   007CF0  51A8               	movf	initServos@io& (0+255),w,b
  7619   007CF2  ECC9  F055         	call	_setOutputPosition
  7620   007CF6                     l21774:
  7621   007CF6  0E20               	movlw	low _stepsPerPollSpeed
  7622   007CF8  0100               	movlb	0	; () banked
  7623   007CFA  25A8               	addwf	initServos@io& (0+255),w,b
  7624   007CFC  6ED9               	movwf	fsr2l,c
  7625   007CFE  6ADA               	clrf	fsr2h,c
  7626   007D00  0E01               	movlw	high _stepsPerPollSpeed
  7627   007D02  22DA               	addwfc	fsr2h,f,c
  7628   007D04  6ADF               	clrf	indf2,c
  7629                           
  7630                           ; BSR set to: 0
  7631   007D06  2BA8               	incf	initServos@io& (0+255),f,b
  7632                           
  7633                           ; BSR set to: 0
  7634   007D08  0E0F               	movlw	15
  7635   007D0A  65A8               	cpfsgt	initServos@io& (0+255),b
  7636   007D0C  D786               	goto	l21756
  7637                           
  7638                           ; BSR set to: 0
  7639   007D0E  9EAA               	bcf	170,7,c	;volatile
  7640                           
  7641                           ; BSR set to: 0
  7642   007D10  0E3F               	movlw	-193
  7643   007D12  16CD               	andwf	205,f,c	;volatile
  7644   007D14  50CD               	movf	205,w,c	;volatile
  7645   007D16  0BCF               	andlw	-49
  7646   007D18  0920               	iorlw	32
  7647   007D1A  6ECD               	movwf	205,c	;volatile
  7648                           
  7649                           ; BSR set to: 0
  7650   007D1C  86CD               	bsf	205,3,c	;volatile
  7651                           
  7652                           ; BSR set to: 0
  7653   007D1E  82CD               	bsf	205,1,c	;volatile
  7654                           
  7655                           ; BSR set to: 0
  7656   007D20  809D               	bsf	157,0,c	;volatile
  7657                           
  7658                           ; BSR set to: 0
  7659   007D22  9EB0               	bcf	176,7,c	;volatile
  7660   007D24  0E3F               	movlw	-193
  7661   007D26  16B1               	andwf	177,f,c	;volatile
  7662   007D28  50B1               	movf	177,w,c	;volatile
  7663   007D2A  0BCF               	andlw	-49
  7664   007D2C  0920               	iorlw	32
  7665   007D2E  6EB1               	movwf	177,c	;volatile
  7666                           
  7667                           ; BSR set to: 0
  7668   007D30  86B1               	bsf	177,3,c	;volatile
  7669                           
  7670                           ; BSR set to: 0
  7671   007D32  82B1               	bsf	177,1,c	;volatile
  7672                           
  7673                           ; BSR set to: 0
  7674   007D34  82A0               	bsf	160,1,c	;volatile
  7675                           
  7676                           ; BSR set to: 0
  7677                           ;../servo.c: 175:     servoInBlock = io -1;
  7678   007D36  05A8               	decf	initServos@io& (0+255),w,b
  7679   007D38  6FC4               	movwf	_servoInBlock& (0+255),b
  7680                           
  7681                           ; BSR set to: 0
  7682   007D3A  0012               	return		;funcret
  7683   007D3C                     __end_of_initServos:
  7684                           	callstack 0
  7685                           
  7686 ;; *************** function _setOutputPosition *****************
  7687 ;; Defined at:
  7688 ;;		line 137 in file "../outputs.c"
  7689 ;; Parameters:    Size  Location     Type
  7690 ;;  io              1    wreg     unsigned char 
  7691 ;;  pos             1   65[BANK0 ] unsigned char 
  7692 ;;  type            1   66[BANK0 ] unsigned char 
  7693 ;; Auto vars:     Size  Location     Type
  7694 ;;  io              1   67[BANK0 ] unsigned char 
  7695 ;; Return value:  Size  Location     Type
  7696 ;;                  1    wreg      void 
  7697 ;; Registers used:
  7698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7699 ;; Tracked objects:
  7700 ;;		On entry : 0/0
  7701 ;;		On exit  : 0/0
  7702 ;;		Unchanged: 0/0
  7703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7704 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7705 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7707 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7708 ;;Total ram usage:        3 bytes
  7709 ;; Hardware stack levels used: 1
  7710 ;; Hardware stack levels required when called: 14
  7711 ;; This function calls:
  7712 ;;		_getNV
  7713 ;;		_setDigitalOutput
  7714 ;;		_setOutputPin
  7715 ;;		_setServoPosition
  7716 ;; This function is called by:
  7717 ;;		_initServos
  7718 ;; This function uses a non-reentrant model
  7719 ;;
  7720                           
  7721                           	psect	text4
  7722   00AB92                     __ptext4:
  7723                           	callstack 0
  7724   00AB92                     _setOutputPosition:
  7725                           	callstack 14
  7726                           
  7727                           ; BSR set to: 0
  7728                           ;incstack = 0
  7729                           ;setOutputPosition@io stored from wreg
  7730   00AB92  0100               	movlb	0	; () banked
  7731   00AB94  6FA3               	movwf	setOutputPosition@io& (0+255),b
  7732                           
  7733                           ;../outputs.c: 138:     switch(type) {
  7734   00AB96  D020               	goto	l20678
  7735   00AB98                     l20666:
  7736                           
  7737                           ; BSR set to: 0
  7738                           ;../outputs.c: 145:             setDigitalOutput(io, pos);
  7739   00AB98  C0A1  F097         	movff	setOutputPosition@pos,setDigitalOutput@state
  7740   00AB9C  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7741   00AB9E  EC4D  F052         	call	_setDigitalOutput
  7742   00ABA2  0012               	return	
  7743   00ABA4                     l20670:
  7744                           
  7745                           ; BSR set to: 0
  7746                           ;../outputs.c: 155:             setServoPosition(io, pos);
  7747   00ABA4  C0A1  F09F         	movff	setOutputPosition@pos,setServoPosition@pos
  7748   00ABA8  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7749   00ABAA  EC57  F060         	call	_setServoPosition
  7750                           
  7751                           ;../outputs.c: 156:             setOutputPin(io, getNV((16 + 7*(io) + 1) & 0x20)?TRUE:FA
      +                          LSE);
  7752   00ABAE  0100               	movlb	0	; () banked
  7753   00ABB0  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7754   00ABB2  0D07               	mullw	7
  7755   00ABB4  50F3               	movf	243,w,c
  7756   00ABB6  0F11               	addlw	17
  7757   00ABB8  0B20               	andlw	32
  7758   00ABBA  EC35  F05D         	call	_getNV
  7759   00ABBE  0100               	movlb	0	; () banked
  7760   00ABC0  518D               	movf	?_getNV& (0+255),w,b
  7761   00ABC2  118E               	iorwf	(?_getNV+1)& (0+255),w,b
  7762   00ABC4  B4D8               	btfsc	status,2,c
  7763   00ABC6  D002               	goto	u21470
  7764   00ABC8  0E01               	movlw	1
  7765   00ABCA  D001               	goto	u21480
  7766   00ABCC                     u21470:
  7767   00ABCC  0E00               	movlw	0
  7768   00ABCE                     u21480:
  7769   00ABCE  6F91               	movwf	setOutputPin@state& (0+255),b
  7770   00ABD0  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7771   00ABD2  EC7B  F037         	call	_setOutputPin
  7772   00ABD6  0012               	return	
  7773   00ABD8                     l20678:
  7774   00ABD8  0100               	movlb	0	; () banked
  7775   00ABDA  51A2               	movf	setOutputPosition@type& (0+255),w,b
  7776                           
  7777                           ; Switch size 1, requested type "simple"
  7778                           ; Number of cases is 7, Range of values is 0 to 6
  7779                           ; switch strategies available:
  7780                           ; Name         Instructions Cycles
  7781                           ; simple_byte           22    12 (average)
  7782                           ;	Chosen strategy is simple_byte
  7783   00ABDC  0A00               	xorlw	0	; case 0
  7784   00ABDE  B4D8               	btfsc	status,2,c
  7785   00ABE0  0012               	return	
  7786   00ABE2  0A01               	xorlw	1	; case 1
  7787   00ABE4  B4D8               	btfsc	status,2,c
  7788   00ABE6  D7D8               	goto	l20666
  7789   00ABE8  0A03               	xorlw	3	; case 2
  7790   00ABEA  B4D8               	btfsc	status,2,c
  7791   00ABEC  D7DB               	goto	l20670
  7792   00ABEE  0A01               	xorlw	1	; case 3
  7793   00ABF0  B4D8               	btfsc	status,2,c
  7794   00ABF2  D7D8               	goto	l20670
  7795   00ABF4  0A07               	xorlw	7	; case 4
  7796   00ABF6  B4D8               	btfsc	status,2,c
  7797   00ABF8  D7D5               	goto	l20670
  7798   00ABFA  0A01               	xorlw	1	; case 5
  7799   00ABFC  B4D8               	btfsc	status,2,c
  7800   00ABFE  0012               	return	
  7801   00AC00  0A03               	xorlw	3	; case 6
  7802   00AC02  0012               	return	
  7803   00AC04                     __end_of_setOutputPosition:
  7804                           	callstack 0
  7805                           
  7806 ;; *************** function _initOutputs *****************
  7807 ;; Defined at:
  7808 ;;		line 84 in file "../digitalOut.c"
  7809 ;; Parameters:    Size  Location     Type
  7810 ;;		None
  7811 ;; Auto vars:     Size  Location     Type
  7812 ;;  io              1   45[BANK0 ] unsigned char 
  7813 ;; Return value:  Size  Location     Type
  7814 ;;                  1    wreg      void 
  7815 ;; Registers used:
  7816 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7817 ;; Tracked objects:
  7818 ;;		On entry : 0/0
  7819 ;;		On exit  : 0/0
  7820 ;;		Unchanged: 0/0
  7821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7823 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7825 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7826 ;;Total ram usage:        1 bytes
  7827 ;; Hardware stack levels used: 1
  7828 ;; Hardware stack levels required when called: 12
  7829 ;; This function calls:
  7830 ;;		Nothing
  7831 ;; This function is called by:
  7832 ;;		_setup
  7833 ;; This function uses a non-reentrant model
  7834 ;;
  7835                           
  7836                           	psect	text5
  7837   00BF3C                     __ptext5:
  7838                           	callstack 0
  7839   00BF3C                     _initOutputs:
  7840                           	callstack 17
  7841                           
  7842                           ;../digitalOut.c: 86:     uint8_t io;;../digitalOut.c: 87:     for (io=0; io<16; io++) {
  7843                           
  7844                           ;incstack = 0
  7845   00BF3C  0E00               	movlw	0
  7846   00BF3E  0100               	movlb	0	; () banked
  7847   00BF40  6F8D               	movwf	initOutputs@io& (0+255),b
  7848   00BF42                     l15000:
  7849                           
  7850                           ; BSR set to: 0
  7851                           ;../digitalOut.c: 88:        pulseDelays[io] = 0;
  7852   00BF42  0EA4               	movlw	low _pulseDelays
  7853   00BF44  258D               	addwf	initOutputs@io& (0+255),w,b
  7854   00BF46  6ED9               	movwf	fsr2l,c
  7855   00BF48  6ADA               	clrf	fsr2h,c
  7856   00BF4A  0E02               	movlw	high _pulseDelays
  7857   00BF4C  22DA               	addwfc	fsr2h,f,c
  7858   00BF4E  6ADF               	clrf	indf2,c
  7859                           
  7860                           ;../digitalOut.c: 89:        flashDelays[io] = 0;
  7861   00BF50  0E94               	movlw	low _flashDelays
  7862   00BF52  258D               	addwf	initOutputs@io& (0+255),w,b
  7863   00BF54  6ED9               	movwf	fsr2l,c
  7864   00BF56  6ADA               	clrf	fsr2h,c
  7865   00BF58  0E02               	movlw	high _flashDelays
  7866   00BF5A  22DA               	addwfc	fsr2h,f,c
  7867   00BF5C  6ADF               	clrf	indf2,c
  7868                           
  7869                           ; BSR set to: 0
  7870                           ;../digitalOut.c: 90:     }
  7871   00BF5E  2B8D               	incf	initOutputs@io& (0+255),f,b
  7872                           
  7873                           ; BSR set to: 0
  7874   00BF60  0E0F               	movlw	15
  7875   00BF62  658D               	cpfsgt	initOutputs@io& (0+255),b
  7876   00BF64  D7EE               	goto	l15000
  7877   00BF66  0012               	return	
  7878   00BF68                     __end_of_initOutputs:
  7879                           	callstack 0
  7880                           
  7881 ;; *************** function _initInputScan *****************
  7882 ;; Defined at:
  7883 ;;		line 76 in file "../inputs.c"
  7884 ;; Parameters:    Size  Location     Type
  7885 ;;		None
  7886 ;; Auto vars:     Size  Location     Type
  7887 ;;  input           1   57[BANK0 ] unsigned char 
  7888 ;; Return value:  Size  Location     Type
  7889 ;;                  1    wreg      void 
  7890 ;; Registers used:
  7891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7892 ;; Tracked objects:
  7893 ;;		On entry : 0/0
  7894 ;;		On exit  : 0/0
  7895 ;;		Unchanged: 0/0
  7896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7898 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7899 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7900 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7901 ;;Total ram usage:        3 bytes
  7902 ;; Hardware stack levels used: 1
  7903 ;; Hardware stack levels required when called: 14
  7904 ;; This function calls:
  7905 ;;		_getNV
  7906 ;;		_readInput
  7907 ;;		_readNVM
  7908 ;; This function is called by:
  7909 ;;		_setup
  7910 ;; This function uses a non-reentrant model
  7911 ;;
  7912                           
  7913                           	psect	text6
  7914   009764                     __ptext6:
  7915                           	callstack 0
  7916   009764                     _initInputScan:
  7917                           	callstack 15
  7918                           
  7919                           ;../inputs.c: 77:     for (io=0; io<16; io++) {
  7920                           
  7921                           ; BSR set to: 0
  7922                           ;incstack = 0
  7923   009764  0E00               	movlw	0
  7924   009766  0100               	movlb	0	; () banked
  7925   009768  6FCA               	movwf	_io@inputs$F843& (0+255),b
  7926   00976A                     l21800:
  7927                           
  7928                           ; BSR set to: 0
  7929   00976A  0E0F               	movlw	15
  7930   00976C  65CA               	cpfsgt	_io@inputs$F843& (0+255),b
  7931   00976E  D001               	goto	l21804
  7932   009770  0012               	return	
  7933   009772                     l21804:
  7934                           
  7935                           ; BSR set to: 0
  7936                           ;../inputs.c: 78:         uint8_t input = readInput(io);
  7937   009772  51CA               	movf	_io@inputs$F843& (0+255),w,b
  7938   009774  EC3F  F040         	call	_readInput
  7939   009778  0100               	movlb	0	; () banked
  7940   00977A  6F99               	movwf	initInputScan@input& (0+255),b
  7941                           
  7942                           ; BSR set to: 0
  7943                           ;../inputs.c: 79:         inputState[io] = input;
  7944   00977C  0E84               	movlw	low _inputState
  7945   00977E  25CA               	addwf	_io@inputs$F843& (0+255),w,b
  7946   009780  6ED9               	movwf	fsr2l,c
  7947   009782  6ADA               	clrf	fsr2h,c
  7948   009784  0E02               	movlw	high _inputState
  7949   009786  22DA               	addwfc	fsr2h,f,c
  7950   009788  C099  FFDF         	movff	initInputScan@input,indf2
  7951                           
  7952                           ; BSR set to: 0
  7953                           ;../inputs.c: 80:         if (!(getNV((16 + 7*(io) + 1)) & 0x01)) {
  7954   00978C  51CA               	movf	_io@inputs$F843& (0+255),w,b
  7955   00978E  0D07               	mullw	7
  7956   009790  50F3               	movf	243,w,c
  7957   009792  0F11               	addlw	17
  7958   009794  EC35  F05D         	call	_getNV
  7959   009798  0100               	movlb	0	; () banked
  7960   00979A  B18D               	btfsc	?_getNV& (0+255),0,b
  7961   00979C  D007               	goto	l21812
  7962                           
  7963                           ; BSR set to: 0
  7964                           ;../inputs.c: 81:             input = !input;
  7965   00979E  5199               	movf	initInputScan@input& (0+255),w,b
  7966   0097A0  A4D8               	btfss	status,2,c
  7967   0097A2  D002               	goto	u23110
  7968   0097A4  0E01               	movlw	1
  7969   0097A6  D001               	goto	u23120
  7970   0097A8                     u23110:
  7971   0097A8  0E00               	movlw	0
  7972   0097AA                     u23120:
  7973   0097AA  6F99               	movwf	initInputScan@input& (0+255),b
  7974   0097AC                     l21812:
  7975                           
  7976                           ; BSR set to: 0
  7977                           ;../inputs.c: 83:         outputState[io] = input;
  7978   0097AC  0E74               	movlw	low _outputState
  7979   0097AE  25CA               	addwf	_io@inputs$F843& (0+255),w,b
  7980   0097B0  6ED9               	movwf	fsr2l,c
  7981   0097B2  6ADA               	clrf	fsr2h,c
  7982   0097B4  0E02               	movlw	high _outputState
  7983   0097B6  22DA               	addwfc	fsr2h,f,c
  7984   0097B8  C099  FFDF         	movff	initInputScan@input,indf2
  7985                           
  7986                           ; BSR set to: 0
  7987                           ;../inputs.c: 84:         if (getNV((16 + 7*(io) + 1)) & 0x10) {
  7988   0097BC  51CA               	movf	_io@inputs$F843& (0+255),w,b
  7989   0097BE  0D07               	mullw	7
  7990   0097C0  50F3               	movf	243,w,c
  7991   0097C2  0F11               	addlw	17
  7992   0097C4  EC35  F05D         	call	_getNV
  7993   0097C8  0100               	movlb	0	; () banked
  7994   0097CA  A98D               	btfss	?_getNV& (0+255),4,b
  7995   0097CC  D017               	goto	l21818
  7996                           
  7997                           ; BSR set to: 0
  7998                           ;../inputs.c: 85:             outputState[io] = (uint8_t)readNVM(EEPROM_NVM_TYPE, ((eepr
      +                          om_address_t)((0x3FF -8))-25)+io);
  7999   0097CE  0EDE               	movlw	222
  8000   0097D0  25CA               	addwf	_io@inputs$F843& (0+255),w,b
  8001   0097D2  6F97               	movwf	??_initInputScan& (0+255),b
  8002   0097D4  6B98               	clrf	(??_initInputScan+1)& (0+255),b
  8003   0097D6  0E03               	movlw	3
  8004   0097D8  2398               	addwfc	(??_initInputScan+1)& (0+255),f,b
  8005   0097DA  C097  F091         	movff	??_initInputScan,readNVM@index
  8006   0097DE  C098  F092         	movff	??_initInputScan+1,readNVM@index+1
  8007   0097E2  6B93               	clrf	(readNVM@index+2)& (0+255),b
  8008   0097E4  0E00               	movlw	0
  8009   0097E6  ECDD  F058         	call	_readNVM
  8010   0097EA  0E74               	movlw	low _outputState
  8011   0097EC  0100               	movlb	0	; () banked
  8012   0097EE  25CA               	addwf	_io@inputs$F843& (0+255),w,b
  8013   0097F0  6ED9               	movwf	fsr2l,c
  8014   0097F2  6ADA               	clrf	fsr2h,c
  8015   0097F4  0E02               	movlw	high _outputState
  8016   0097F6  22DA               	addwfc	fsr2h,f,c
  8017   0097F8  C091  FFDF         	movff	?_readNVM,indf2
  8018   0097FC                     l21818:
  8019                           
  8020                           ; BSR set to: 0
  8021                           ;../inputs.c: 87:         delayCount[io] = 0;
  8022   0097FC  0E64               	movlw	low _delayCount
  8023   0097FE  25CA               	addwf	_io@inputs$F843& (0+255),w,b
  8024   009800  6ED9               	movwf	fsr2l,c
  8025   009802  6ADA               	clrf	fsr2h,c
  8026   009804  0E02               	movlw	high _delayCount
  8027   009806  22DA               	addwfc	fsr2h,f,c
  8028   009808  6ADF               	clrf	indf2,c
  8029                           
  8030                           ; BSR set to: 0
  8031                           ;../inputs.c: 88:     }
  8032   00980A  2BCA               	incf	_io@inputs$F843& (0+255),f,b
  8033   00980C  D7AE               	goto	l21800
  8034   00980E                     __end_of_initInputScan:
  8035                           	callstack 0
  8036                           
  8037 ;; *************** function _powerUp *****************
  8038 ;; Defined at:
  8039 ;;		line 875 in file "../../VLCBlib_PIC/vlcb.c"
  8040 ;; Parameters:    Size  Location     Type
  8041 ;;		None
  8042 ;; Auto vars:     Size  Location     Type
  8043 ;;  i               1   14[BANK1 ] unsigned char 
  8044 ;;  divider         1    0        unsigned char 
  8045 ;; Return value:  Size  Location     Type
  8046 ;;                  1    wreg      void 
  8047 ;; Registers used:
  8048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8049 ;; Tracked objects:
  8050 ;;		On entry : 0/0
  8051 ;;		On exit  : 0/0
  8052 ;;		Unchanged: 0/0
  8053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8055 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8056 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8057 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8058 ;;Total ram usage:        5 bytes
  8059 ;; Hardware stack levels used: 1
  8060 ;; Hardware stack levels required when called: 18
  8061 ;; This function calls:
  8062 ;;		NULL
  8063 ;;		_ackPowerUp
  8064 ;;		_canPowerUp
  8065 ;;		_consumer2QPowerUp
  8066 ;;		_initTicker
  8067 ;;		_initTimedResponse
  8068 ;;		_leds_powerUp
  8069 ;;		_mnsPowerUp
  8070 ;;		_nvPowerUp
  8071 ;;		_teachPowerUp
  8072 ;; This function is called by:
  8073 ;;		_main
  8074 ;; This function uses a non-reentrant model
  8075 ;;
  8076                           
  8077                           	psect	text7
  8078   00872A                     __ptext7:
  8079                           	callstack 0
  8080   00872A                     _powerUp:
  8081                           	callstack 12
  8082                           
  8083                           ;../../VLCBlib_PIC/vlcb.c: 876:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 877:     uint8_
      +                          t divider;;../../VLCBlib_PIC/vlcb.c: 880:     initTicker(0);
  8084                           
  8085                           ; BSR set to: 0
  8086                           ;incstack = 0
  8087   00872A  0E00               	movlw	0
  8088   00872C  EC90  F05C         	call	_initTicker
  8089                           
  8090                           ;../../VLCBlib_PIC/vlcb.c: 881:     initTimedResponse();
  8091   008730  ECD5  F061         	call	_initTimedResponse	;wreg free
  8092                           
  8093                           ;../../VLCBlib_PIC/vlcb.c: 882:     leds_powerUp();
  8094   008734  EC6B  F05E         	call	_leds_powerUp	;wreg free
  8095                           
  8096                           ;../../VLCBlib_PIC/vlcb.c: 883:     timedResponseDelay = 5;
  8097   008738  0E05               	movlw	5
  8098   00873A  0101               	movlb	1	; () banked
  8099   00873C  6F78               	movwf	_timedResponseDelay& (0+255),b
  8100                           
  8101                           ; BSR set to: 1
  8102                           ;../../VLCBlib_PIC/vlcb.c: 885:     for (i=0; i<9; i++) {
  8103   00873E  0E00               	movlw	0
  8104   008740  6FC3               	movwf	powerUp@i& (0+255),b
  8105   008742                     l23764:
  8106                           
  8107                           ; BSR set to: 1
  8108                           ;../../VLCBlib_PIC/vlcb.c: 886:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >powerUp != ((void*)0))) {
  8109   008742  51C3               	movf	powerUp@i& (0+255),w,b
  8110   008744  0D02               	mullw	2
  8111   008746  0E75               	movlw	low _services
  8112   008748  24F3               	addwf	243,w,c
  8113   00874A  6EF6               	movwf	tblptrl,c
  8114   00874C  0EEE               	movlw	high _services
  8115   00874E  20F4               	addwfc	244,w,c
  8116   008750  6EF7               	movwf	tblptrh,c
  8117   008752                     	if	1	;There are 3 active tblptr bytes
  8118   008752  6AF8               	clrf	tblptru,c
  8119   008754  0E00               	movlw	low (__mediumconst shr (0+16))
  8120   008756  22F8               	addwfc	tblptru,f,c
  8121   008758                     	endif
  8122   008758  0009               	tblrd		*+
  8123   00875A  50F5               	movf	tablat,w,c
  8124   00875C  0009               	tblrd		*+
  8125   00875E  10F5               	iorwf	tablat,w,c
  8126   008760  B4D8               	btfsc	status,2,c
  8127   008762  D04B               	goto	u25639
  8128                           
  8129                           ; BSR set to: 1
  8130   008764  51C3               	movf	powerUp@i& (0+255),w,b
  8131   008766  0D02               	mullw	2
  8132   008768  0E75               	movlw	low _services
  8133   00876A  24F3               	addwf	243,w,c
  8134   00876C  6EF6               	movwf	tblptrl,c
  8135   00876E  0EEE               	movlw	high _services
  8136   008770  20F4               	addwfc	244,w,c
  8137   008772  6EF7               	movwf	tblptrh,c
  8138   008774                     	if	1	;There are 3 active tblptr bytes
  8139   008774  6AF8               	clrf	tblptru,c
  8140   008776  0E00               	movlw	low (__mediumconst shr (0+16))
  8141   008778  22F8               	addwfc	tblptru,f,c
  8142   00877A                     	endif
  8143   00877A  0009               	tblrd		*+
  8144   00877C  CFF5 F1BF          	movff	tablat,??_powerUp
  8145   008780  0009               	tblrd		*+
  8146   008782  CFF5 F1C0          	movff	tablat,??_powerUp+1
  8147   008786  0E04               	movlw	4
  8148   008788  27BF               	addwf	??_powerUp& (0+255),f,b
  8149   00878A  0E00               	movlw	0
  8150   00878C  23C0               	addwfc	(??_powerUp+1)& (0+255),f,b
  8151   00878E  C1BF  FFF6         	movff	??_powerUp,tblptrl
  8152   008792  C1C0  FFF7         	movff	??_powerUp+1,tblptrh
  8153   008796                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8154   008796  6AF8               	clrf	tblptru,c
  8155   008798                     	endif
  8156   008798                     	if	0	;tblptru may be non-zero
  8157   008798                     	endif
  8158   008798  0009               	tblrd		*+
  8159   00879A  50F5               	movf	tablat,w,c
  8160   00879C  0009               	tblrd		*+
  8161   00879E  10F5               	iorwf	tablat,w,c
  8162   0087A0  B4D8               	btfsc	status,2,c
  8163   0087A2  D02B               	goto	u25639
  8164                           
  8165                           ; BSR set to: 1
  8166                           ;../../VLCBlib_PIC/vlcb.c: 887:             services[i]->powerUp();
  8167   0087A4  51C3               	movf	powerUp@i& (0+255),w,b
  8168   0087A6  0D02               	mullw	2
  8169   0087A8  0E75               	movlw	low _services
  8170   0087AA  24F3               	addwf	243,w,c
  8171   0087AC  6EF6               	movwf	tblptrl,c
  8172   0087AE  0EEE               	movlw	high _services
  8173   0087B0  20F4               	addwfc	244,w,c
  8174   0087B2  6EF7               	movwf	tblptrh,c
  8175   0087B4                     	if	1	;There are 3 active tblptr bytes
  8176   0087B4  6AF8               	clrf	tblptru,c
  8177   0087B6  0E00               	movlw	low (__mediumconst shr (0+16))
  8178   0087B8  22F8               	addwfc	tblptru,f,c
  8179   0087BA                     	endif
  8180   0087BA  0009               	tblrd		*+
  8181   0087BC  CFF5 F1BF          	movff	tablat,??_powerUp
  8182   0087C0  0009               	tblrd		*+
  8183   0087C2  CFF5 F1C0          	movff	tablat,??_powerUp+1
  8184   0087C6  0E04               	movlw	4
  8185   0087C8  27BF               	addwf	??_powerUp& (0+255),f,b
  8186   0087CA  0E00               	movlw	0
  8187   0087CC  23C0               	addwfc	(??_powerUp+1)& (0+255),f,b
  8188   0087CE  C1BF  FFF6         	movff	??_powerUp,tblptrl
  8189   0087D2  C1C0  FFF7         	movff	??_powerUp+1,tblptrh
  8190   0087D6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8191   0087D6  6AF8               	clrf	tblptru,c
  8192   0087D8                     	endif
  8193   0087D8                     	if	0	;tblptru may be non-zero
  8194   0087D8                     	endif
  8195   0087D8  0009               	tblrd		*+
  8196   0087DA  CFF5 F1C1          	movff	tablat,??_powerUp+2
  8197   0087DE  0009               	tblrd		*+
  8198   0087E0  CFF5 F1C2          	movff	tablat,??_powerUp+3
  8199   0087E4  D801               	call	u25638
  8200   0087E6  D009               	goto	u25639
  8201   0087E8                     u25638:
  8202   0087E8  0005               	push	
  8203   0087EA  6EFA               	movwf	pclath,c
  8204   0087EC  51C1               	movf	(??_powerUp+2)& (0+255),w,b
  8205   0087EE  6EFD               	movwf	tosl,c
  8206   0087F0  51C2               	movf	(??_powerUp+3)& (0+255),w,b
  8207   0087F2  6EFE               	movwf	tosh,c
  8208   0087F4  6AFF               	clrf	tosu,c
  8209   0087F6  50FA               	movf	pclath,w,c
  8210   0087F8  0012               	return		;indir
  8211   0087FA                     u25639:
  8212                           
  8213                           ;../../VLCBlib_PIC/vlcb.c: 889:     }
  8214   0087FA  0101               	movlb	1	; () banked
  8215   0087FC  2BC3               	incf	powerUp@i& (0+255),f,b
  8216                           
  8217                           ; BSR set to: 1
  8218   0087FE  0E08               	movlw	8
  8219   008800  65C3               	cpfsgt	powerUp@i& (0+255),b
  8220   008802  D79F               	goto	l23764
  8221   008804  0012               	return	
  8222   008806                     __end_of_powerUp:
  8223                           	callstack 0
  8224                           
  8225 ;; *************** function _canPowerUp *****************
  8226 ;; Defined at:
  8227 ;;		line 206 in file "../../VLCBlib_PIC/can18_ecan.c"
  8228 ;; Parameters:    Size  Location     Type
  8229 ;;		None
  8230 ;; Auto vars:     Size  Location     Type
  8231 ;;  temp            2   56[BANK0 ] int 
  8232 ;; Return value:  Size  Location     Type
  8233 ;;                  1    wreg      void 
  8234 ;; Registers used:
  8235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8236 ;; Tracked objects:
  8237 ;;		On entry : 0/0
  8238 ;;		On exit  : 0/0
  8239 ;;		Unchanged: 0/0
  8240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8242 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8243 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8244 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8245 ;;Total ram usage:        3 bytes
  8246 ;; Hardware stack levels used: 1
  8247 ;; Hardware stack levels required when called: 14
  8248 ;; This function calls:
  8249 ;;		_readNVM
  8250 ;;		_tickGet
  8251 ;; This function is called by:
  8252 ;;		_powerUp
  8253 ;; This function uses a non-reentrant model
  8254 ;;
  8255                           
  8256                           	psect	text8
  8257   006982                     __ptext8:
  8258                           	callstack 0
  8259   006982                     _canPowerUp:
  8260                           	callstack 15
  8261                           
  8262                           ;../../VLCBlib_PIC/can18_ecan.c: 207:     int temp;;../../VLCBlib_PIC/can18_ecan.c: 210:
      +                               rxQueue.readIndex = 0;
  8263                           
  8264                           ; BSR set to: 1
  8265                           ;incstack = 0
  8266   006982  0E00               	movlw	0
  8267   006984  6E28               	movwf	(_rxQueue+2)^0,c
  8268                           
  8269                           ;../../VLCBlib_PIC/can18_ecan.c: 211:     rxQueue.writeIndex = 0;
  8270   006986  0E00               	movlw	0
  8271   006988  6E29               	movwf	(_rxQueue+3)^0,c
  8272                           
  8273                           ;../../VLCBlib_PIC/can18_ecan.c: 212:     rxQueue.messages = rxBuffers;
  8274   00698A  0E00               	movlw	low _rxBuffers
  8275   00698C  6E26               	movwf	_rxQueue^0,c
  8276   00698E  0E08               	movlw	high _rxBuffers
  8277   006990  6E27               	movwf	(_rxQueue+1)^0,c
  8278                           
  8279                           ;../../VLCBlib_PIC/can18_ecan.c: 213:     rxQueue.size = 32;
  8280   006992  0E20               	movlw	32
  8281   006994  6E2A               	movwf	(_rxQueue+4)^0,c
  8282                           
  8283                           ;../../VLCBlib_PIC/can18_ecan.c: 215:     txQueue.readIndex = 0;
  8284   006996  0E00               	movlw	0
  8285   006998  6E23               	movwf	(_txQueue+2)^0,c
  8286                           
  8287                           ;../../VLCBlib_PIC/can18_ecan.c: 216:     txQueue.writeIndex = 0;
  8288   00699A  0E00               	movlw	0
  8289   00699C  6E24               	movwf	(_txQueue+3)^0,c
  8290                           
  8291                           ;../../VLCBlib_PIC/can18_ecan.c: 217:     txQueue.messages = txBuffers;
  8292   00699E  0E80               	movlw	low _txBuffers
  8293   0069A0  6E21               	movwf	_txQueue^0,c
  8294   0069A2  0E04               	movlw	high _txBuffers
  8295   0069A4  6E22               	movwf	(_txQueue+1)^0,c
  8296                           
  8297                           ;../../VLCBlib_PIC/can18_ecan.c: 218:     txQueue.size = 8;
  8298   0069A6  0E08               	movlw	8
  8299   0069A8  6E25               	movwf	(_txQueue+4)^0,c
  8300                           
  8301                           ;../../VLCBlib_PIC/can18_ecan.c: 222:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FE);
  8302   0069AA  0EFE               	movlw	254
  8303   0069AC  0100               	movlb	0	; () banked
  8304   0069AE  6F91               	movwf	readNVM@index& (0+255),b
  8305   0069B0  0E03               	movlw	3
  8306   0069B2  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8307   0069B4  0E00               	movlw	0
  8308   0069B6  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8309   0069B8  0E00               	movlw	0
  8310   0069BA  ECDD  F058         	call	_readNVM
  8311   0069BE  C091  F098         	movff	?_readNVM,canPowerUp@temp
  8312   0069C2  C092  F099         	movff	?_readNVM+1,canPowerUp@temp+1
  8313                           
  8314                           ;../../VLCBlib_PIC/can18_ecan.c: 223:     if (temp < 0) {
  8315   0069C6  0100               	movlb	0	; () banked
  8316   0069C8  AF99               	btfss	(canPowerUp@temp+1)& (0+255),7,b
  8317   0069CA  D003               	goto	l2841
  8318                           
  8319                           ; BSR set to: 0
  8320                           ;../../VLCBlib_PIC/can18_ecan.c: 225:         canId = 0;
  8321   0069CC  0E00               	movlw	0
  8322   0069CE  6FB7               	movwf	_canId& (0+255),b
  8323                           
  8324                           ;../../VLCBlib_PIC/can18_ecan.c: 226:     } else {
  8325   0069D0  D002               	goto	l23486
  8326   0069D2                     l2841:
  8327                           
  8328                           ; BSR set to: 0
  8329                           ;../../VLCBlib_PIC/can18_ecan.c: 227:         canId = (uint8_t)temp;
  8330   0069D2  C098  F0B7         	movff	canPowerUp@temp,_canId
  8331   0069D6                     l23486:
  8332                           
  8333                           ; BSR set to: 0
  8334                           ;../../VLCBlib_PIC/can18_ecan.c: 230:     for (temp=0; temp<16; temp++) {
  8335   0069D6  0E00               	movlw	0
  8336   0069D8  6F99               	movwf	(canPowerUp@temp+1)& (0+255),b
  8337   0069DA  0E00               	movlw	0
  8338   0069DC  6F98               	movwf	canPowerUp@temp& (0+255),b
  8339   0069DE                     l23492:
  8340                           
  8341                           ; BSR set to: 0
  8342                           ;../../VLCBlib_PIC/can18_ecan.c: 231:         canDiagnostics[temp].asInt = 0;
  8343   0069DE  90D8               	bcf	status,0,c
  8344   0069E0  3598               	rlcf	canPowerUp@temp& (0+255),w,b
  8345   0069E2  6ED9               	movwf	fsr2l,c
  8346   0069E4  3599               	rlcf	(canPowerUp@temp+1)& (0+255),w,b
  8347   0069E6  6EDA               	movwf	fsr2h,c
  8348   0069E8  0E7A               	movlw	low _canDiagnostics
  8349   0069EA  26D9               	addwf	fsr2l,f,c
  8350   0069EC  0E01               	movlw	high _canDiagnostics
  8351   0069EE  22DA               	addwfc	fsr2h,f,c
  8352   0069F0  6ADE               	clrf	postinc2,c
  8353   0069F2  6ADD               	clrf	postdec2,c
  8354                           
  8355                           ; BSR set to: 0
  8356                           ;../../VLCBlib_PIC/can18_ecan.c: 232:     }
  8357   0069F4  4B98               	infsnz	canPowerUp@temp& (0+255),f,b
  8358   0069F6  2B99               	incf	(canPowerUp@temp+1)& (0+255),f,b
  8359                           
  8360                           ; BSR set to: 0
  8361   0069F8  BF99               	btfsc	(canPowerUp@temp+1)& (0+255),7,b
  8362   0069FA  D7F1               	goto	l23492
  8363   0069FC  5199               	movf	(canPowerUp@temp+1)& (0+255),w,b
  8364   0069FE  E104               	bnz	u25390
  8365   006A00  0E10               	movlw	16
  8366   006A02  5D98               	subwf	canPowerUp@temp& (0+255),w,b
  8367   006A04  A0D8               	btfss	status,0,c
  8368   006A06  D7EB               	goto	l23492
  8369   006A08                     u25390:
  8370                           
  8371                           ; BSR set to: 0
  8372                           ;../../VLCBlib_PIC/can18_ecan.c: 234:     canTransmitFailed=0;
  8373   006A08  0E00               	movlw	0
  8374   006A0A  6FB6               	movwf	_canTransmitFailed& (0+255),b
  8375                           
  8376                           ;../../VLCBlib_PIC/can18_ecan.c: 235:     IPR5 = 0;
  8377   006A0C  0E00               	movlw	0
  8378   006A0E  6E78               	movwf	120,c	;volatile
  8379                           
  8380                           ;../../VLCBlib_PIC/can18_ecan.c: 238:     CANCON = 0b10000000;
  8381   006A10  0E80               	movlw	128
  8382   006A12  6E6F               	movwf	111,c	;volatile
  8383   006A14                     l2845:
  8384   006A14  AE6E               	btfss	110,7,c	;volatile
  8385   006A16  D7FE               	goto	l2845
  8386                           
  8387                           ;../../VLCBlib_PIC/can18_ecan.c: 242:     ECANCON = 0b10110000;
  8388   006A18  0EB0               	movlw	176
  8389   006A1A  6E72               	movwf	114,c	;volatile
  8390                           
  8391                           ;../../VLCBlib_PIC/can18_ecan.c: 243:     BSEL0 = 0;
  8392   006A1C  0E00               	movlw	0
  8393   006A1E  010E               	movlb	14	; () banked
  8394   006A20  6F7D               	movwf	125,b	;volatile
  8395                           
  8396                           ;../../VLCBlib_PIC/can18_ecan.c: 267:       BRGCON1 = 0b00001111;
  8397   006A22  0E0F               	movlw	15
  8398   006A24  6F43               	movwf	67,b	;volatile
  8399                           
  8400                           ;../../VLCBlib_PIC/can18_ecan.c: 270:     BRGCON2 = 0b10011110;
  8401   006A26  0E9E               	movlw	158
  8402   006A28  6F44               	movwf	68,b	;volatile
  8403                           
  8404                           ;../../VLCBlib_PIC/can18_ecan.c: 271:     BRGCON3 = 0b00000011;
  8405   006A2A  0E03               	movlw	3
  8406   006A2C  6F45               	movwf	69,b	;volatile
  8407                           
  8408                           ;../../VLCBlib_PIC/can18_ecan.c: 272:     CIOCON = 0b00100000;
  8409   006A2E  0E20               	movlw	32
  8410   006A30  6E70               	movwf	112,c	;volatile
  8411                           
  8412                           ;../../VLCBlib_PIC/can18_ecan.c: 275:     RXM0SIDH = 0;
  8413   006A32  0E00               	movlw	0
  8414   006A34  6FF8               	movwf	248,b	;volatile
  8415                           
  8416                           ;../../VLCBlib_PIC/can18_ecan.c: 276:     RXM0SIDL = 0x08;
  8417   006A36  0E08               	movlw	8
  8418   006A38  6FF9               	movwf	249,b	;volatile
  8419                           
  8420                           ;../../VLCBlib_PIC/can18_ecan.c: 277:     RXM0EIDH = 0;
  8421   006A3A  0E00               	movlw	0
  8422   006A3C  6FFA               	movwf	250,b	;volatile
  8423                           
  8424                           ;../../VLCBlib_PIC/can18_ecan.c: 278:     RXM0EIDL = 0;
  8425   006A3E  0E00               	movlw	0
  8426   006A40  6FFB               	movwf	251,b	;volatile
  8427                           
  8428                           ;../../VLCBlib_PIC/can18_ecan.c: 279:     RXM1SIDH = 0;
  8429   006A42  0E00               	movlw	0
  8430   006A44  6FFC               	movwf	252,b	;volatile
  8431                           
  8432                           ;../../VLCBlib_PIC/can18_ecan.c: 280:     RXM1SIDL = 0x08;
  8433   006A46  0E08               	movlw	8
  8434   006A48  6FFD               	movwf	253,b	;volatile
  8435                           
  8436                           ;../../VLCBlib_PIC/can18_ecan.c: 281:     RXM1EIDH = 0;
  8437   006A4A  0E00               	movlw	0
  8438   006A4C  6FFE               	movwf	254,b	;volatile
  8439                           
  8440                           ;../../VLCBlib_PIC/can18_ecan.c: 282:     RXM1EIDL = 0;
  8441   006A4E  0E00               	movlw	0
  8442   006A50  6FFF               	movwf	255,b	;volatile
  8443                           
  8444                           ;../../VLCBlib_PIC/can18_ecan.c: 285:     RXF0SIDL = 0x80;
  8445   006A52  0E80               	movlw	128
  8446   006A54  6FE1               	movwf	225,b	;volatile
  8447                           
  8448                           ;../../VLCBlib_PIC/can18_ecan.c: 288:     RXFBCON0 = 0;
  8449   006A56  0E00               	movlw	0
  8450   006A58  6F71               	movwf	113,b	;volatile
  8451                           
  8452                           ;../../VLCBlib_PIC/can18_ecan.c: 289:     RXFBCON1 = 0;
  8453   006A5A  0E00               	movlw	0
  8454   006A5C  6F72               	movwf	114,b	;volatile
  8455                           
  8456                           ;../../VLCBlib_PIC/can18_ecan.c: 290:     RXFBCON2 = 0;
  8457   006A5E  0E00               	movlw	0
  8458   006A60  6F73               	movwf	115,b	;volatile
  8459                           
  8460                           ;../../VLCBlib_PIC/can18_ecan.c: 291:     RXFBCON3 = 0;
  8461   006A62  0E00               	movlw	0
  8462   006A64  6F74               	movwf	116,b	;volatile
  8463                           
  8464                           ;../../VLCBlib_PIC/can18_ecan.c: 292:     RXFBCON4 = 0;
  8465   006A66  0E00               	movlw	0
  8466   006A68  6F75               	movwf	117,b	;volatile
  8467                           
  8468                           ;../../VLCBlib_PIC/can18_ecan.c: 293:     RXFBCON5 = 0;
  8469   006A6A  0E00               	movlw	0
  8470   006A6C  6F76               	movwf	118,b	;volatile
  8471                           
  8472                           ;../../VLCBlib_PIC/can18_ecan.c: 294:     RXFBCON6 = 0;
  8473   006A6E  0E00               	movlw	0
  8474   006A70  6F77               	movwf	119,b	;volatile
  8475                           
  8476                           ;../../VLCBlib_PIC/can18_ecan.c: 295:     RXFBCON7 = 0;
  8477   006A72  0E00               	movlw	0
  8478   006A74  6F78               	movwf	120,b	;volatile
  8479                           
  8480                           ;../../VLCBlib_PIC/can18_ecan.c: 298:     MSEL0 = 0;
  8481   006A76  0E00               	movlw	0
  8482   006A78  6F79               	movwf	121,b	;volatile
  8483                           
  8484                           ;../../VLCBlib_PIC/can18_ecan.c: 299:     MSEL1 = 0;
  8485   006A7A  0E00               	movlw	0
  8486   006A7C  6F7A               	movwf	122,b	;volatile
  8487                           
  8488                           ;../../VLCBlib_PIC/can18_ecan.c: 300:     MSEL2 = 0;
  8489   006A7E  0E00               	movlw	0
  8490   006A80  6F7B               	movwf	123,b	;volatile
  8491                           
  8492                           ;../../VLCBlib_PIC/can18_ecan.c: 301:     MSEL3 = 0;
  8493   006A82  0E00               	movlw	0
  8494   006A84  6F7C               	movwf	124,b	;volatile
  8495                           
  8496                           ;../../VLCBlib_PIC/can18_ecan.c: 307:     RXB0CON = 0x20;
  8497   006A86  0E20               	movlw	32
  8498   006A88  6E60               	movwf	96,c	;volatile
  8499                           
  8500                           ;../../VLCBlib_PIC/can18_ecan.c: 308:     RXB1CON = 0x20;
  8501   006A8A  0E20               	movlw	32
  8502   006A8C  010F               	movlb	15	; () banked
  8503   006A8E  6F30               	movwf	48,b	;volatile
  8504                           
  8505                           ;../../VLCBlib_PIC/can18_ecan.c: 309:     B0CON = 0;
  8506   006A90  0E00               	movlw	0
  8507   006A92  010E               	movlb	14	; () banked
  8508   006A94  6F80               	movwf	128,b	;volatile
  8509                           
  8510                           ;../../VLCBlib_PIC/can18_ecan.c: 310:     B1CON = 0;
  8511   006A96  0E00               	movlw	0
  8512   006A98  6F90               	movwf	144,b	;volatile
  8513                           
  8514                           ;../../VLCBlib_PIC/can18_ecan.c: 311:     B2CON = 0;
  8515   006A9A  0E00               	movlw	0
  8516   006A9C  6FA0               	movwf	160,b	;volatile
  8517                           
  8518                           ;../../VLCBlib_PIC/can18_ecan.c: 312:     B3CON = 0;
  8519   006A9E  0E00               	movlw	0
  8520   006AA0  6FB0               	movwf	176,b	;volatile
  8521                           
  8522                           ;../../VLCBlib_PIC/can18_ecan.c: 313:     B4CON = 0;
  8523   006AA2  0E00               	movlw	0
  8524   006AA4  6FC0               	movwf	192,b	;volatile
  8525                           
  8526                           ;../../VLCBlib_PIC/can18_ecan.c: 314:     B5CON = 0;
  8527   006AA6  0E00               	movlw	0
  8528   006AA8  6FD0               	movwf	208,b	;volatile
  8529                           
  8530                           ;../../VLCBlib_PIC/can18_ecan.c: 316:     BIE0 = 0;
  8531   006AAA  0E00               	movlw	0
  8532   006AAC  6F7E               	movwf	126,b	;volatile
  8533                           
  8534                           ; BSR set to: 14
  8535                           ;../../VLCBlib_PIC/can18_ecan.c: 317:     TXBIEbits.TXB0IE = 1;
  8536   006AAE  857F               	bsf	127,2,b	;volatile
  8537                           
  8538                           ; BSR set to: 14
  8539                           ;../../VLCBlib_PIC/can18_ecan.c: 318:     TXBIEbits.TXB1IE = 0;
  8540   006AB0  977F               	bcf	127,3,b	;volatile
  8541                           
  8542                           ; BSR set to: 14
  8543                           ;../../VLCBlib_PIC/can18_ecan.c: 319:     TXBIEbits.TXB2IE = 0;
  8544   006AB2  997F               	bcf	127,4,b	;volatile
  8545                           
  8546                           ;../../VLCBlib_PIC/can18_ecan.c: 320:     CANCON = 0;
  8547   006AB4  0E00               	movlw	0
  8548   006AB6  6E6F               	movwf	111,c	;volatile
  8549                           
  8550                           ;../../VLCBlib_PIC/can18_ecan.c: 324:     TXB0CON = 0;
  8551   006AB8  0E00               	movlw	0
  8552   006ABA  010F               	movlb	15	; () banked
  8553   006ABC  6F20               	movwf	32,b	;volatile
  8554                           
  8555                           ; BSR set to: 15
  8556                           ;../../VLCBlib_PIC/can18_ecan.c: 325:     TXB0CONbits.TXPRI0 = 0;
  8557   006ABE  9120               	bcf	32,0,b	;volatile
  8558                           
  8559                           ; BSR set to: 15
  8560                           ;../../VLCBlib_PIC/can18_ecan.c: 326:     TXB0CONbits.TXPRI1 = 0;
  8561   006AC0  9320               	bcf	32,1,b	;volatile
  8562                           
  8563                           ;../../VLCBlib_PIC/can18_ecan.c: 327:     TXB0DLC = 0;
  8564   006AC2  0E00               	movlw	0
  8565   006AC4  6F25               	movwf	37,b	;volatile
  8566                           
  8567                           ;../../VLCBlib_PIC/can18_ecan.c: 329:     TXB0SIDH = 0;
  8568   006AC6  0E00               	movlw	0
  8569   006AC8  6F21               	movwf	33,b	;volatile
  8570                           
  8571                           ;../../VLCBlib_PIC/can18_ecan.c: 330:     TXB0SIDL = 0;
  8572   006ACA  0E00               	movlw	0
  8573   006ACC  6F22               	movwf	34,b	;volatile
  8574                           
  8575                           ;../../VLCBlib_PIC/can18_ecan.c: 334:     TXB1CON = 0;
  8576   006ACE  0E00               	movlw	0
  8577   006AD0  6F10               	movwf	16,b	;volatile
  8578                           
  8579                           ; BSR set to: 15
  8580                           ;../../VLCBlib_PIC/can18_ecan.c: 335:     TXB1CONbits.TXPRI0 = 0;
  8581   006AD2  9110               	bcf	16,0,b	;volatile
  8582                           
  8583                           ; BSR set to: 15
  8584                           ;../../VLCBlib_PIC/can18_ecan.c: 336:     TXB1CONbits.TXPRI1 = 1;
  8585   006AD4  8310               	bsf	16,1,b	;volatile
  8586                           
  8587                           ;../../VLCBlib_PIC/can18_ecan.c: 337:     TXB1DLC = 0x40;
  8588   006AD6  0E40               	movlw	64
  8589   006AD8  6F15               	movwf	21,b	;volatile
  8590                           
  8591                           ; BSR set to: 15
  8592                           ;../../VLCBlib_PIC/can18_ecan.c: 338:     TXB1SIDH = canPri[4] | ((canId & 0x78) >> 3);
  8593   006ADA  0E8B               	movlw	low (_canPri+4)
  8594   006ADC  6EF6               	movwf	tblptrl,c
  8595   006ADE  0EEE               	movlw	high (_canPri+4)
  8596   006AE0  6EF7               	movwf	tblptrh,c
  8597   006AE2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8598   006AE2  6AF8               	clrf	tblptru,c
  8599   006AE4                     	endif
  8600   006AE4                     	if	0	;tblptru may be non-zero
  8601   006AE4                     	endif
  8602   006AE4  0008               	tblrd		*
  8603   006AE6  CFF5 F097          	movff	tablat,??_canPowerUp
  8604   006AEA  0100               	movlb	0	; () banked
  8605   006AEC  39B7               	swapf	_canId& (0+255),w,b
  8606   006AEE  46E8               	rlncf	wreg,f,c
  8607   006AF0  0B1F               	andlw	31
  8608   006AF2  0B0F               	andlw	15
  8609   006AF4  1197               	iorwf	??_canPowerUp& (0+255),w,b
  8610   006AF6  010F               	movlb	15	; () banked
  8611   006AF8  6F11               	movwf	17,b	;volatile
  8612                           
  8613                           ; BSR set to: 15
  8614                           ;../../VLCBlib_PIC/can18_ecan.c: 339:     TXB1SIDL = TXB0SIDL;
  8615   006AFA  CF22 FF12          	movff	3874,3858	;volatile
  8616                           
  8617                           ; BSR set to: 15
  8618                           ;../../VLCBlib_PIC/can18_ecan.c: 343:     TXB2CON = 0;
  8619   006AFE  0E00               	movlw	0
  8620   006B00  6F00               	movwf	0,b	;volatile
  8621                           
  8622                           ; BSR set to: 15
  8623                           ;../../VLCBlib_PIC/can18_ecan.c: 344:     TXB2CONbits.TXPRI0 = 1;
  8624   006B02  8100               	bsf	0,0,b	;volatile
  8625                           
  8626                           ; BSR set to: 15
  8627                           ;../../VLCBlib_PIC/can18_ecan.c: 345:     TXB2CONbits.TXPRI1 = 1;
  8628   006B04  8300               	bsf	0,1,b	;volatile
  8629                           
  8630                           ; BSR set to: 15
  8631                           ;../../VLCBlib_PIC/can18_ecan.c: 346:     TXB2DLC = 0;
  8632   006B06  0E00               	movlw	0
  8633   006B08  6F05               	movwf	5,b	;volatile
  8634                           
  8635                           ; BSR set to: 15
  8636                           ;../../VLCBlib_PIC/can18_ecan.c: 347:     TXB2SIDH = canPri[4] | ((canId & 0x78) >> 3);
  8637   006B0A  0E8B               	movlw	low (_canPri+4)
  8638   006B0C  6EF6               	movwf	tblptrl,c
  8639   006B0E  0EEE               	movlw	high (_canPri+4)
  8640   006B10  6EF7               	movwf	tblptrh,c
  8641   006B12                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8642   006B12  6AF8               	clrf	tblptru,c
  8643   006B14                     	endif
  8644   006B14                     	if	0	;tblptru may be non-zero
  8645   006B14                     	endif
  8646   006B14  0008               	tblrd		*
  8647   006B16  CFF5 F097          	movff	tablat,??_canPowerUp
  8648   006B1A  0100               	movlb	0	; () banked
  8649   006B1C  39B7               	swapf	_canId& (0+255),w,b
  8650   006B1E  46E8               	rlncf	wreg,f,c
  8651   006B20  0B1F               	andlw	31
  8652   006B22  0B0F               	andlw	15
  8653   006B24  1197               	iorwf	??_canPowerUp& (0+255),w,b
  8654   006B26  010F               	movlb	15	; () banked
  8655   006B28  6F01               	movwf	1,b	;volatile
  8656                           
  8657                           ; BSR set to: 15
  8658                           ;../../VLCBlib_PIC/can18_ecan.c: 348:     TXB2SIDL = TXB0SIDL;
  8659   006B2A  CF22 FF02          	movff	3874,3842	;volatile
  8660                           
  8661                           ;../../VLCBlib_PIC/can18_ecan.c: 352:     enumerationState = NO_ENUMERATION;
  8662   006B2E  0E00               	movlw	0
  8663   006B30  0100               	movlb	0	; () banked
  8664   006B32  6FB5               	movwf	_enumerationState& (0+255),b
  8665                           
  8666                           ; BSR set to: 0
  8667                           ;../../VLCBlib_PIC/can18_ecan.c: 353:     enumerationStartTime.val = tickGet();
  8668   006B34  ECC2  F059         	call	_tickGet	;wreg free
  8669   006B38  C08D  F011         	movff	?_tickGet,_enumerationStartTime
  8670   006B3C  C08E  F012         	movff	?_tickGet+1,_enumerationStartTime+1
  8671   006B40  C08F  F013         	movff	?_tickGet+2,_enumerationStartTime+2
  8672   006B44  C090  F014         	movff	?_tickGet+3,_enumerationStartTime+3
  8673                           
  8674                           ;../../VLCBlib_PIC/can18_ecan.c: 356:     canTransmitTimeout.val = enumerationStartTime.
      +                          val;
  8675   006B48  C011  F015         	movff	_enumerationStartTime,_canTransmitTimeout
  8676   006B4C  C012  F016         	movff	_enumerationStartTime+1,_canTransmitTimeout+1
  8677   006B50  C013  F017         	movff	_enumerationStartTime+2,_canTransmitTimeout+2
  8678   006B54  C014  F018         	movff	_enumerationStartTime+3,_canTransmitTimeout+3
  8679                           
  8680                           ;../../VLCBlib_PIC/can18_ecan.c: 358:     PIE5bits.FIFOWMIE = 1;
  8681   006B58  8076               	bsf	118,0,c	;volatile
  8682                           
  8683                           ;../../VLCBlib_PIC/can18_ecan.c: 359:     PIE5bits.TXBnIE = 1;
  8684   006B5A  8876               	bsf	118,4,c	;volatile
  8685                           
  8686                           ;../../VLCBlib_PIC/can18_ecan.c: 360:     PIE5bits.ERRIE = 1;
  8687   006B5C  8A76               	bsf	118,5,c	;volatile
  8688   006B5E  0012               	return		;funcret
  8689   006B60                     __end_of_canPowerUp:
  8690                           	callstack 0
  8691                           
  8692 ;; *************** function _nvPowerUp *****************
  8693 ;; Defined at:
  8694 ;;		line 129 in file "../../VLCBlib_PIC/nv.c"
  8695 ;; Parameters:    Size  Location     Type
  8696 ;;		None
  8697 ;; Auto vars:     Size  Location     Type
  8698 ;;  i               1   60[BANK0 ] unsigned char 
  8699 ;; Return value:  Size  Location     Type
  8700 ;;                  1    wreg      void 
  8701 ;; Registers used:
  8702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8703 ;; Tracked objects:
  8704 ;;		On entry : 0/0
  8705 ;;		On exit  : 0/0
  8706 ;;		Unchanged: 0/0
  8707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8709 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8711 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8712 ;;Total ram usage:        1 bytes
  8713 ;; Hardware stack levels used: 1
  8714 ;; Hardware stack levels required when called: 15
  8715 ;; This function calls:
  8716 ;;		_loadNvCache
  8717 ;; This function is called by:
  8718 ;;		_powerUp
  8719 ;; This function uses a non-reentrant model
  8720 ;;
  8721                           
  8722                           	psect	text9
  8723   00C08A                     __ptext9:
  8724                           	callstack 0
  8725   00C08A                     _nvPowerUp:
  8726                           	callstack 14
  8727                           
  8728                           ;../../VLCBlib_PIC/nv.c: 130:     uint8_t i;;../../VLCBlib_PIC/nv.c: 131:     for (i=0; 
      +                          i<2; i++) {
  8729                           
  8730                           ;incstack = 0
  8731   00C08A  0E00               	movlw	0
  8732   00C08C  0100               	movlb	0	; () banked
  8733   00C08E  6F9C               	movwf	nvPowerUp@i& (0+255),b
  8734   00C090                     l23238:
  8735                           
  8736                           ; BSR set to: 0
  8737                           ;../../VLCBlib_PIC/nv.c: 132:         nvDiagnostics[i].asUint = 0;
  8738   00C090  519C               	movf	nvPowerUp@i& (0+255),w,b
  8739   00C092  0D02               	mullw	2
  8740   00C094  50F3               	movf	243,w,c
  8741   00C096  0FCD               	addlw	low _nvDiagnostics
  8742   00C098  6ED9               	movwf	fsr2l,c
  8743   00C09A  6ADA               	clrf	fsr2h,c
  8744   00C09C  6ADE               	clrf	postinc2,c
  8745   00C09E  6ADD               	clrf	postdec2,c
  8746                           
  8747                           ; BSR set to: 0
  8748                           ;../../VLCBlib_PIC/nv.c: 133:     }
  8749   00C0A0  2B9C               	incf	nvPowerUp@i& (0+255),f,b
  8750                           
  8751                           ; BSR set to: 0
  8752   00C0A2  0E01               	movlw	1
  8753   00C0A4  659C               	cpfsgt	nvPowerUp@i& (0+255),b
  8754   00C0A6  D7F4               	goto	l23238
  8755                           
  8756                           ; BSR set to: 0
  8757                           ;../../VLCBlib_PIC/nv.c: 135:     loadNvCache();
  8758   00C0A8  EC22  F05C         	call	_loadNvCache	;wreg free
  8759   00C0AC  0012               	return		;funcret
  8760   00C0AE                     __end_of_nvPowerUp:
  8761                           	callstack 0
  8762                           
  8763 ;; *************** function _mnsPowerUp *****************
  8764 ;; Defined at:
  8765 ;;		line 277 in file "../../VLCBlib_PIC/mns.c"
  8766 ;; Parameters:    Size  Location     Type
  8767 ;;		None
  8768 ;; Auto vars:     Size  Location     Type
  8769 ;;  temp            2   56[BANK0 ] int 
  8770 ;;  i               1   55[BANK0 ] unsigned char 
  8771 ;; Return value:  Size  Location     Type
  8772 ;;                  1    wreg      void 
  8773 ;; Registers used:
  8774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8775 ;; Tracked objects:
  8776 ;;		On entry : 0/0
  8777 ;;		On exit  : 0/0
  8778 ;;		Unchanged: 0/0
  8779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8781 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8783 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8784 ;;Total ram usage:        3 bytes
  8785 ;; Hardware stack levels used: 1
  8786 ;; Hardware stack levels required when called: 14
  8787 ;; This function calls:
  8788 ;;		_readNVM
  8789 ;;		_setLEDsByMode
  8790 ;;		_tickGet
  8791 ;; This function is called by:
  8792 ;;		_powerUp
  8793 ;; This function uses a non-reentrant model
  8794 ;;
  8795                           
  8796                           	psect	text10
  8797   007F74                     __ptext10:
  8798                           	callstack 0
  8799   007F74                     _mnsPowerUp:
  8800                           	callstack 15
  8801                           
  8802                           ;../../VLCBlib_PIC/mns.c: 278:     int temp;;../../VLCBlib_PIC/mns.c: 279:     uint8_t i
      +                          ;;../../VLCBlib_PIC/mns.c: 281:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FC);
  8803                           
  8804                           ;incstack = 0
  8805   007F74  0EFC               	movlw	252
  8806   007F76  0100               	movlb	0	; () banked
  8807   007F78  6F91               	movwf	readNVM@index& (0+255),b
  8808   007F7A  0E03               	movlw	3
  8809   007F7C  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8810   007F7E  0E00               	movlw	0
  8811   007F80  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8812   007F82  0E00               	movlw	0
  8813   007F84  ECDD  F058         	call	_readNVM
  8814   007F88  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  8815   007F8C  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  8816                           
  8817                           ;../../VLCBlib_PIC/mns.c: 282:     if (temp < 0) {
  8818   007F90  0100               	movlb	0	; () banked
  8819   007F92  AF99               	btfss	(mnsPowerUp@temp+1)& (0+255),7,b
  8820   007F94  D005               	goto	l1825
  8821   007F96                     u24580:
  8822                           
  8823                           ; BSR set to: 0
  8824                           ;../../VLCBlib_PIC/mns.c: 283:         nn.bytes.hi = 0;
  8825   007F96  0E00               	movlw	0
  8826   007F98  6FB4               	movwf	(_nn+1)& (0+255),b
  8827                           
  8828                           ;../../VLCBlib_PIC/mns.c: 284:         nn.bytes.lo = 0;
  8829   007F9A  0E00               	movlw	0
  8830   007F9C  6FB3               	movwf	_nn& (0+255),b
  8831                           
  8832                           ;../../VLCBlib_PIC/mns.c: 285:     } else {
  8833   007F9E  D014               	goto	l22764
  8834   007FA0                     l1825:
  8835                           
  8836                           ; BSR set to: 0
  8837                           ;../../VLCBlib_PIC/mns.c: 286:         nn.bytes.hi = (uint8_t)temp;
  8838   007FA0  C098  F0B4         	movff	mnsPowerUp@temp,_nn+1
  8839                           
  8840                           ; BSR set to: 0
  8841                           ;../../VLCBlib_PIC/mns.c: 287:         temp = readNVM(EEPROM_NVM_TYPE, 0x3FC +1);
  8842   007FA4  0EFD               	movlw	253
  8843   007FA6  6F91               	movwf	readNVM@index& (0+255),b
  8844   007FA8  0E03               	movlw	3
  8845   007FAA  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8846   007FAC  0E00               	movlw	0
  8847   007FAE  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8848   007FB0  0E00               	movlw	0
  8849   007FB2  ECDD  F058         	call	_readNVM
  8850   007FB6  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  8851   007FBA  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  8852                           
  8853                           ;../../VLCBlib_PIC/mns.c: 288:         if (temp < 0) {
  8854   007FBE  0100               	movlb	0	; () banked
  8855   007FC0  BF99               	btfsc	(mnsPowerUp@temp+1)& (0+255),7,b
  8856   007FC2  D7E9               	goto	u24580
  8857                           
  8858                           ; BSR set to: 0
  8859                           ;../../VLCBlib_PIC/mns.c: 292:             nn.bytes.lo = (uint8_t)temp;
  8860   007FC4  C098  F0B3         	movff	mnsPowerUp@temp,_nn
  8861   007FC8                     l22764:
  8862                           
  8863                           ; BSR set to: 0
  8864                           ;../../VLCBlib_PIC/mns.c: 295:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FB);
  8865   007FC8  0EFB               	movlw	251
  8866   007FCA  6F91               	movwf	readNVM@index& (0+255),b
  8867   007FCC  0E03               	movlw	3
  8868   007FCE  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8869   007FD0  0E00               	movlw	0
  8870   007FD2  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8871   007FD4  0E00               	movlw	0
  8872   007FD6  ECDD  F058         	call	_readNVM
  8873   007FDA  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  8874   007FDE  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  8875                           
  8876                           ;../../VLCBlib_PIC/mns.c: 296:     if (temp < 0) {
  8877   007FE2  0100               	movlb	0	; () banked
  8878   007FE4  AF99               	btfss	(mnsPowerUp@temp+1)& (0+255),7,b
  8879   007FE6  D002               	goto	l1829
  8880                           
  8881                           ; BSR set to: 0
  8882                           ;../../VLCBlib_PIC/mns.c: 297:         mode_state = MODE_UNINITIALISED;
  8883   007FE8  69C1               	setf	_mode_state& (0+255),b
  8884                           
  8885                           ;../../VLCBlib_PIC/mns.c: 298:     } else {
  8886   007FEA  D002               	goto	l22770
  8887   007FEC                     l1829:
  8888                           
  8889                           ; BSR set to: 0
  8890                           ;../../VLCBlib_PIC/mns.c: 299:         mode_state = (uint8_t)temp;
  8891   007FEC  C098  F0C1         	movff	mnsPowerUp@temp,_mode_state
  8892   007FF0                     l22770:
  8893                           
  8894                           ; BSR set to: 0
  8895                           ;../../VLCBlib_PIC/mns.c: 301:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FA);
  8896   007FF0  0EFA               	movlw	250
  8897   007FF2  6F91               	movwf	readNVM@index& (0+255),b
  8898   007FF4  0E03               	movlw	3
  8899   007FF6  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8900   007FF8  0E00               	movlw	0
  8901   007FFA  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8902   007FFC  0E00               	movlw	0
  8903   007FFE  ECDD  F058         	call	_readNVM
  8904   008002  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  8905   008006  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  8906                           
  8907                           ;../../VLCBlib_PIC/mns.c: 302:     if (temp < 0) {
  8908   00800A  0100               	movlb	0	; () banked
  8909   00800C  AF99               	btfss	(mnsPowerUp@temp+1)& (0+255),7,b
  8910   00800E  D004               	goto	l1831
  8911                           
  8912                           ; BSR set to: 0
  8913                           ;../../VLCBlib_PIC/mns.c: 303:         mode_flags = 4;
  8914   008010  0E04               	movlw	4
  8915   008012  0101               	movlb	1	; () banked
  8916   008014  6F79               	movwf	_mode_flags& (0+255),b
  8917                           
  8918                           ;../../VLCBlib_PIC/mns.c: 304:     } else {
  8919   008016  D002               	goto	l22776
  8920   008018                     l1831:
  8921                           
  8922                           ; BSR set to: 0
  8923                           ;../../VLCBlib_PIC/mns.c: 305:         mode_flags = (uint8_t)temp;
  8924   008018  C098  F179         	movff	mnsPowerUp@temp,_mode_flags
  8925   00801C                     l22776:
  8926                           
  8927                           ;../../VLCBlib_PIC/mns.c: 308:     setLEDsByMode();
  8928   00801C  ECB4  F05F         	call	_setLEDsByMode	;wreg free
  8929                           
  8930                           ;../../VLCBlib_PIC/mns.c: 310:     pbTimer.val = tickGet();
  8931   008020  ECC2  F059         	call	_tickGet	;wreg free
  8932   008024  C08D  F0A9         	movff	?_tickGet,_pbTimer
  8933   008028  C08E  F0AA         	movff	?_tickGet+1,_pbTimer+1
  8934   00802C  C08F  F0AB         	movff	?_tickGet+2,_pbTimer+2
  8935   008030  C090  F0AC         	movff	?_tickGet+3,_pbTimer+3
  8936                           
  8937                           ;../../VLCBlib_PIC/mns.c: 313:     for (i=0; i< 6; i++) {
  8938   008034  0E00               	movlw	0
  8939   008036  0100               	movlb	0	; () banked
  8940   008038  6F97               	movwf	mnsPowerUp@i& (0+255),b
  8941   00803A                     l22784:
  8942                           
  8943                           ; BSR set to: 0
  8944                           ;../../VLCBlib_PIC/mns.c: 314:         mnsDiagnostics[i].asInt = 0;
  8945   00803A  5197               	movf	mnsPowerUp@i& (0+255),w,b
  8946   00803C  0D02               	mullw	2
  8947   00803E  0E9A               	movlw	low _mnsDiagnostics
  8948   008040  24F3               	addwf	243,w,c
  8949   008042  6ED9               	movwf	fsr2l,c
  8950   008044  0E01               	movlw	high _mnsDiagnostics
  8951   008046  20F4               	addwfc	prodh,w,c
  8952   008048  6EDA               	movwf	fsr2h,c
  8953   00804A  6ADE               	clrf	postinc2,c
  8954   00804C  6ADD               	clrf	postdec2,c
  8955                           
  8956                           ; BSR set to: 0
  8957                           ;../../VLCBlib_PIC/mns.c: 315:     }
  8958   00804E  2B97               	incf	mnsPowerUp@i& (0+255),f,b
  8959                           
  8960                           ; BSR set to: 0
  8961   008050  0E05               	movlw	5
  8962   008052  6597               	cpfsgt	mnsPowerUp@i& (0+255),b
  8963   008054  D7F2               	goto	l22784
  8964                           
  8965                           ; BSR set to: 0
  8966                           ;../../VLCBlib_PIC/mns.c: 316:     heartbeatSequence = 0;
  8967   008056  0E00               	movlw	0
  8968   008058  6FBD               	movwf	_heartbeatSequence& (0+255),b
  8969                           
  8970                           ;../../VLCBlib_PIC/mns.c: 317:     heartbeatTimer.val = 0;
  8971   00805A  0E00               	movlw	0
  8972   00805C  0101               	movlb	1	; () banked
  8973   00805E  6F60               	movwf	_heartbeatTimer& (0+255),b
  8974   008060  0E00               	movlw	0
  8975   008062  6F61               	movwf	(_heartbeatTimer+1)& (0+255),b
  8976   008064  0E00               	movlw	0
  8977   008066  6F62               	movwf	(_heartbeatTimer+2)& (0+255),b
  8978   008068  0E00               	movlw	0
  8979   00806A  6F63               	movwf	(_heartbeatTimer+3)& (0+255),b
  8980                           
  8981                           ;../../VLCBlib_PIC/mns.c: 318:     uptimeTimer.val = 0;
  8982   00806C  0E00               	movlw	0
  8983   00806E  6F5C               	movwf	_uptimeTimer& (0+255),b
  8984   008070  0E00               	movlw	0
  8985   008072  6F5D               	movwf	(_uptimeTimer+1)& (0+255),b
  8986   008074  0E00               	movlw	0
  8987   008076  6F5E               	movwf	(_uptimeTimer+2)& (0+255),b
  8988   008078  0E00               	movlw	0
  8989   00807A  6F5F               	movwf	(_uptimeTimer+3)& (0+255),b
  8990                           
  8991                           ; BSR set to: 1
  8992   00807C  0012               	return		;funcret
  8993   00807E                     __end_of_mnsPowerUp:
  8994                           	callstack 0
  8995                           
  8996 ;; *************** function _ackPowerUp *****************
  8997 ;; Defined at:
  8998 ;;		line 85 in file "../../VLCBlib_PIC/event_acknowledge.c"
  8999 ;; Parameters:    Size  Location     Type
  9000 ;;		None
  9001 ;; Auto vars:     Size  Location     Type
  9002 ;;  i               1   45[BANK0 ] unsigned char 
  9003 ;; Return value:  Size  Location     Type
  9004 ;;                  1    wreg      void 
  9005 ;; Registers used:
  9006 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9007 ;; Tracked objects:
  9008 ;;		On entry : 0/0
  9009 ;;		On exit  : 0/0
  9010 ;;		Unchanged: 0/0
  9011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9013 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9015 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9016 ;;Total ram usage:        1 bytes
  9017 ;; Hardware stack levels used: 1
  9018 ;; Hardware stack levels required when called: 12
  9019 ;; This function calls:
  9020 ;;		Nothing
  9021 ;; This function is called by:
  9022 ;;		_powerUp
  9023 ;; This function uses a non-reentrant model
  9024 ;;
  9025                           
  9026                           	psect	text11
  9027   00C182                     __ptext11:
  9028                           	callstack 0
  9029   00C182                     _ackPowerUp:
  9030                           	callstack 17
  9031                           
  9032                           ;../../VLCBlib_PIC/event_acknowledge.c: 86:     uint8_t i;;../../VLCBlib_PIC/event_ackno
      +                          wledge.c: 89:     for (i=0; i< 1; i++) {
  9033                           
  9034                           ; BSR set to: 1
  9035                           ;incstack = 0
  9036   00C182  0E00               	movlw	0
  9037   00C184  0100               	movlb	0	; () banked
  9038   00C186  6F8D               	movwf	ackPowerUp@i& (0+255),b
  9039   00C188                     l22304:
  9040                           
  9041                           ; BSR set to: 0
  9042                           ;../../VLCBlib_PIC/event_acknowledge.c: 90:         ackDiagnostics[i].asInt = 0;
  9043   00C188  518D               	movf	ackPowerUp@i& (0+255),w,b
  9044   00C18A  0D02               	mullw	2
  9045   00C18C  50F3               	movf	243,w,c
  9046   00C18E  0FD1               	addlw	low _ackDiagnostics
  9047   00C190  6ED9               	movwf	fsr2l,c
  9048   00C192  6ADA               	clrf	fsr2h,c
  9049   00C194  6ADE               	clrf	postinc2,c
  9050   00C196  6ADD               	clrf	postdec2,c
  9051                           
  9052                           ; BSR set to: 0
  9053                           ;../../VLCBlib_PIC/event_acknowledge.c: 91:     }
  9054   00C198  2B8D               	incf	ackPowerUp@i& (0+255),f,b
  9055                           
  9056                           ; BSR set to: 0
  9057   00C19A  518D               	movf	ackPowerUp@i& (0+255),w,b
  9058   00C19C  A4D8               	btfss	status,2,c
  9059   00C19E  0012               	return	
  9060   00C1A0  D7F3               	goto	l22304
  9061   00C1A2                     __end_of_ackPowerUp:
  9062                           	callstack 0
  9063                           
  9064 ;; *************** function _consumer2QPowerUp *****************
  9065 ;; Defined at:
  9066 ;;		line 99 in file "../event_consumerDualActionQueue.c"
  9067 ;; Parameters:    Size  Location     Type
  9068 ;;		None
  9069 ;; Auto vars:     Size  Location     Type
  9070 ;;		None
  9071 ;; Return value:  Size  Location     Type
  9072 ;;                  1    wreg      void 
  9073 ;; Registers used:
  9074 ;;		wreg, status,2
  9075 ;; Tracked objects:
  9076 ;;		On entry : 0/0
  9077 ;;		On exit  : 0/0
  9078 ;;		Unchanged: 0/0
  9079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9084 ;;Total ram usage:        0 bytes
  9085 ;; Hardware stack levels used: 1
  9086 ;; Hardware stack levels required when called: 12
  9087 ;; This function calls:
  9088 ;;		Nothing
  9089 ;; This function is called by:
  9090 ;;		_powerUp
  9091 ;; This function uses a non-reentrant model
  9092 ;;
  9093                           
  9094                           	psect	text12
  9095   00C28C                     __ptext12:
  9096                           	callstack 0
  9097   00C28C                     _consumer2QPowerUp:
  9098                           	callstack 17
  9099                           
  9100                           ;../event_consumerDualActionQueue.c: 100:     normalReadIndex = 0;
  9101                           
  9102                           ; BSR set to: 0
  9103                           ;incstack = 0
  9104   00C28C  0E00               	movlw	0
  9105   00C28E  0100               	movlb	0	; () banked
  9106   00C290  6FC9               	movwf	_normalReadIndex& (0+255),b
  9107                           
  9108                           ;../event_consumerDualActionQueue.c: 101:     normalWriteIndex = 0;
  9109   00C292  0E00               	movlw	0
  9110   00C294  6FC8               	movwf	_normalWriteIndex& (0+255),b
  9111                           
  9112                           ;../event_consumerDualActionQueue.c: 102:     expeditedReadIndex = 0;
  9113   00C296  0E00               	movlw	0
  9114   00C298  6FC7               	movwf	_expeditedReadIndex& (0+255),b
  9115                           
  9116                           ;../event_consumerDualActionQueue.c: 103:     expeditedWriteIndex = 0;
  9117   00C29A  0E00               	movlw	0
  9118   00C29C  6FC6               	movwf	_expeditedWriteIndex& (0+255),b
  9119                           
  9120                           ;../event_consumerDualActionQueue.c: 105:     expedited = FALSE;
  9121   00C29E  0E00               	movlw	0
  9122   00C2A0  6FC5               	movwf	_expedited& (0+255),b
  9123                           
  9124                           ; BSR set to: 0
  9125   00C2A2  0012               	return		;funcret
  9126   00C2A4                     __end_of_consumer2QPowerUp:
  9127                           	callstack 0
  9128                           
  9129 ;; *************** function _teachPowerUp *****************
  9130 ;; Defined at:
  9131 ;;		line 289 in file "../../VLCBlib_PIC/event_teach.c"
  9132 ;; Parameters:    Size  Location     Type
  9133 ;;		None
  9134 ;; Auto vars:     Size  Location     Type
  9135 ;;  i               1    9[BANK1 ] unsigned char 
  9136 ;; Return value:  Size  Location     Type
  9137 ;;                  1    wreg      void 
  9138 ;; Registers used:
  9139 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9140 ;; Tracked objects:
  9141 ;;		On entry : 0/0
  9142 ;;		On exit  : 0/0
  9143 ;;		Unchanged: 0/0
  9144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9146 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9148 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9149 ;;Total ram usage:        1 bytes
  9150 ;; Hardware stack levels used: 1
  9151 ;; Hardware stack levels required when called: 17
  9152 ;; This function calls:
  9153 ;;		_rebuildHashtable
  9154 ;; This function is called by:
  9155 ;;		_powerUp
  9156 ;; This function uses a non-reentrant model
  9157 ;;
  9158                           
  9159                           	psect	text13
  9160   00BF94                     __ptext13:
  9161                           	callstack 0
  9162   00BF94                     _teachPowerUp:
  9163                           	callstack 12
  9164                           
  9165                           ;../../VLCBlib_PIC/event_teach.c: 290:     uint8_t i;;../../VLCBlib_PIC/event_teach.c: 2
      +                          92:     rebuildHashtable();
  9166                           
  9167                           ; BSR set to: 0
  9168                           ;incstack = 0
  9169   00BF94  EC9E  F03E         	call	_rebuildHashtable	;wreg free
  9170                           
  9171                           ;../../VLCBlib_PIC/event_teach.c: 295:     for (i=0; i< 1; i++) {
  9172   00BF98  0E00               	movlw	0
  9173   00BF9A  0101               	movlb	1	; () banked
  9174   00BF9C  6FBE               	movwf	teachPowerUp@i& (0+255),b
  9175   00BF9E                     l22464:
  9176                           
  9177                           ; BSR set to: 1
  9178                           ;../../VLCBlib_PIC/event_teach.c: 296:         teachDiagnostics[i].asInt = 0;
  9179   00BF9E  51BE               	movf	teachPowerUp@i& (0+255),w,b
  9180   00BFA0  0D02               	mullw	2
  9181   00BFA2  0EAF               	movlw	low _teachDiagnostics
  9182   00BFA4  24F3               	addwf	243,w,c
  9183   00BFA6  6ED9               	movwf	fsr2l,c
  9184   00BFA8  0E01               	movlw	high _teachDiagnostics
  9185   00BFAA  20F4               	addwfc	prodh,w,c
  9186   00BFAC  6EDA               	movwf	fsr2h,c
  9187   00BFAE  6ADE               	clrf	postinc2,c
  9188   00BFB0  6ADD               	clrf	postdec2,c
  9189                           
  9190                           ; BSR set to: 1
  9191                           ;../../VLCBlib_PIC/event_teach.c: 297:     }
  9192   00BFB2  2BBE               	incf	teachPowerUp@i& (0+255),f,b
  9193                           
  9194                           ; BSR set to: 1
  9195   00BFB4  51BE               	movf	teachPowerUp@i& (0+255),w,b
  9196   00BFB6  B4D8               	btfsc	status,2,c
  9197   00BFB8  D7F2               	goto	l22464
  9198                           
  9199                           ; BSR set to: 1
  9200                           ;../../VLCBlib_PIC/event_teach.c: 298:     mode_flags &= ~1;
  9201   00BFBA  9179               	bcf	_mode_flags& (0+255),0,b
  9202                           
  9203                           ; BSR set to: 1
  9204   00BFBC  0012               	return		;funcret
  9205   00BFBE                     __end_of_teachPowerUp:
  9206                           	callstack 0
  9207                           
  9208 ;; *************** function _leds_powerUp *****************
  9209 ;; Defined at:
  9210 ;;		line 76 in file "../../VLCBlib_PIC/statusLeds2.c"
  9211 ;; Parameters:    Size  Location     Type
  9212 ;;		None
  9213 ;; Auto vars:     Size  Location     Type
  9214 ;;		None
  9215 ;; Return value:  Size  Location     Type
  9216 ;;                  1    wreg      void 
  9217 ;; Registers used:
  9218 ;;		wreg, status,2, status,0, cstack
  9219 ;; Tracked objects:
  9220 ;;		On entry : 0/0
  9221 ;;		On exit  : 0/0
  9222 ;;		Unchanged: 0/0
  9223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9228 ;;Total ram usage:        0 bytes
  9229 ;; Hardware stack levels used: 1
  9230 ;; Hardware stack levels required when called: 13
  9231 ;; This function calls:
  9232 ;;		_tickGet
  9233 ;; This function is called by:
  9234 ;;		_powerUp
  9235 ;; This function uses a non-reentrant model
  9236 ;;
  9237                           
  9238                           	psect	text14
  9239   00BCD6                     __ptext14:
  9240                           	callstack 0
  9241   00BCD6                     _leds_powerUp:
  9242                           	callstack 16
  9243                           
  9244                           ;../../VLCBlib_PIC/statusLeds2.c: 78:     {ANCON0=ANCON1=0; TRISBbits.TRISB6=TRISBbits.T
      +                          RISB7=0,TRISAbits.TRISA2=1;};
  9245                           
  9246                           ; BSR set to: 1
  9247                           ;incstack = 0
  9248   00BCD6  0E00               	movlw	0
  9249   00BCD8  010F               	movlb	15	; () banked
  9250   00BCDA  6F5C               	movwf	92,b	;volatile
  9251   00BCDC  CF5C FF5D          	movff	3932,3933	;volatile
  9252                           
  9253                           ; BSR set to: 15
  9254   00BCE0  9E93               	bcf	147,7,c	;volatile
  9255   00BCE2  9C93               	bcf	147,6,c	;volatile
  9256                           
  9257                           ; BSR set to: 15
  9258   00BCE4  8492               	bsf	146,2,c	;volatile
  9259                           
  9260                           ;../../VLCBlib_PIC/statusLeds2.c: 79:     flashCounter[0] = 0;
  9261   00BCE6  0E00               	movlw	0
  9262   00BCE8  0100               	movlb	0	; () banked
  9263   00BCEA  6FAF               	movwf	_flashCounter& (0+255),b
  9264                           
  9265                           ;../../VLCBlib_PIC/statusLeds2.c: 80:     flashCounter[1] = 0;
  9266   00BCEC  0E00               	movlw	0
  9267   00BCEE  6FB0               	movwf	(_flashCounter+1)& (0+255),b
  9268                           
  9269                           ; BSR set to: 0
  9270                           ;../../VLCBlib_PIC/statusLeds2.c: 81:     ledTimer.val = tickGet();
  9271   00BCF0  ECC2  F059         	call	_tickGet	;wreg free
  9272   00BCF4  C08D  F158         	movff	?_tickGet,_ledTimer
  9273   00BCF8  C08E  F159         	movff	?_tickGet+1,_ledTimer+1
  9274   00BCFC  C08F  F15A         	movff	?_tickGet+2,_ledTimer+2
  9275   00BD00  C090  F15B         	movff	?_tickGet+3,_ledTimer+3
  9276   00BD04  0012               	return		;funcret
  9277   00BD06                     __end_of_leds_powerUp:
  9278                           	callstack 0
  9279                           
  9280 ;; *************** function _initTimedResponse *****************
  9281 ;; Defined at:
  9282 ;;		line 74 in file "../../VLCBlib_PIC/timedResponse.c"
  9283 ;; Parameters:    Size  Location     Type
  9284 ;;		None
  9285 ;; Auto vars:     Size  Location     Type
  9286 ;;		None
  9287 ;; Return value:  Size  Location     Type
  9288 ;;                  1    wreg      void 
  9289 ;; Registers used:
  9290 ;;		None
  9291 ;; Tracked objects:
  9292 ;;		On entry : 0/0
  9293 ;;		On exit  : 0/0
  9294 ;;		Unchanged: 0/0
  9295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9300 ;;Total ram usage:        0 bytes
  9301 ;; Hardware stack levels used: 1
  9302 ;; Hardware stack levels required when called: 12
  9303 ;; This function calls:
  9304 ;;		Nothing
  9305 ;; This function is called by:
  9306 ;;		_powerUp
  9307 ;; This function uses a non-reentrant model
  9308 ;;
  9309                           
  9310                           	psect	text15
  9311   00C3AA                     __ptext15:
  9312                           	callstack 0
  9313   00C3AA                     _initTimedResponse:
  9314                           	callstack 17
  9315                           
  9316                           ;../../VLCBlib_PIC/timedResponse.c: 75:     timedResponseType = 0xFF;
  9317                           
  9318                           ;incstack = 0
  9319   00C3AA  0100               	movlb	0	; () banked
  9320   00C3AC  69BA               	setf	_timedResponseType& (0+255),b
  9321                           
  9322                           ; BSR set to: 0
  9323   00C3AE  0012               	return		;funcret
  9324   00C3B0                     __end_of_initTimedResponse:
  9325                           	callstack 0
  9326                           
  9327 ;; *************** function _initTicker *****************
  9328 ;; Defined at:
  9329 ;;		line 101 in file "../../VLCBlib_PIC/ticktime.c"
  9330 ;; Parameters:    Size  Location     Type
  9331 ;;  priority        1    wreg     unsigned char 
  9332 ;; Auto vars:     Size  Location     Type
  9333 ;;  priority        1   45[BANK0 ] unsigned char 
  9334 ;;  i               1   47[BANK0 ] unsigned char 
  9335 ;;  divider         1   46[BANK0 ] unsigned char 
  9336 ;; Return value:  Size  Location     Type
  9337 ;;                  1    wreg      void 
  9338 ;; Registers used:
  9339 ;;		wreg, status,2, status,0
  9340 ;; Tracked objects:
  9341 ;;		On entry : 0/0
  9342 ;;		On exit  : 0/0
  9343 ;;		Unchanged: 0/0
  9344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9346 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9348 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9349 ;;Total ram usage:        3 bytes
  9350 ;; Hardware stack levels used: 1
  9351 ;; Hardware stack levels required when called: 12
  9352 ;; This function calls:
  9353 ;;		Nothing
  9354 ;; This function is called by:
  9355 ;;		_powerUp
  9356 ;; This function uses a non-reentrant model
  9357 ;;
  9358                           
  9359                           	psect	text16
  9360   00B920                     __ptext16:
  9361                           	callstack 0
  9362   00B920                     _initTicker:
  9363                           	callstack 17
  9364                           
  9365                           ; BSR set to: 0
  9366                           ;incstack = 0
  9367                           ;initTicker@priority stored from wreg
  9368   00B920  0100               	movlb	0	; () banked
  9369   00B922  6F8D               	movwf	initTicker@priority& (0+255),b
  9370                           
  9371                           ;../../VLCBlib_PIC/ticktime.c: 102:     uint8_t divider, i;;../../VLCBlib_PIC/ticktime.c
      +                          : 104:     divider = 0;
  9372   00B924  0E00               	movlw	0
  9373   00B926  0100               	movlb	0	; () banked
  9374   00B928  6F8E               	movwf	initTicker@divider& (0+255),b
  9375                           
  9376                           ;../../VLCBlib_PIC/ticktime.c: 105:     for (i=64;i>0;i>>=1)
  9377   00B92A  0E40               	movlw	64
  9378   00B92C  6F8F               	movwf	initTicker@i& (0+255),b
  9379   00B92E                     l23396:
  9380                           
  9381                           ; BSR set to: 0
  9382                           ;../../VLCBlib_PIC/ticktime.c: 106:         divider++;
  9383   00B92E  2B8E               	incf	initTicker@divider& (0+255),f,b
  9384                           
  9385                           ; BSR set to: 0
  9386   00B930  90D8               	bcf	status,0,c
  9387   00B932  338F               	rrcf	initTicker@i& (0+255),f,b
  9388                           
  9389                           ; BSR set to: 0
  9390   00B934  518F               	movf	initTicker@i& (0+255),w,b
  9391   00B936  A4D8               	btfss	status,2,c
  9392   00B938  D7FA               	goto	l23396
  9393                           
  9394                           ; BSR set to: 0
  9395                           ;../../VLCBlib_PIC/ticktime.c: 109:     T0CON = (uint8_t)(0b00000000 | divider);
  9396   00B93A  C08E  FFD5         	movff	initTicker@divider,4053	;volatile
  9397                           
  9398                           ;../../VLCBlib_PIC/ticktime.c: 110:     T0CONbits.T08BIT = 0;
  9399   00B93E  9CD5               	bcf	213,6,c	;volatile
  9400                           
  9401                           ;../../VLCBlib_PIC/ticktime.c: 111:     T0CONbits.T0CS = 0;
  9402   00B940  9AD5               	bcf	213,5,c	;volatile
  9403                           
  9404                           ; BSR set to: 0
  9405                           ;../../VLCBlib_PIC/ticktime.c: 112:     TMR0H = 0;
  9406   00B942  0E00               	movlw	0
  9407   00B944  6ED7               	movwf	215,c	;volatile
  9408                           
  9409                           ;../../VLCBlib_PIC/ticktime.c: 113:     TMR0L = 0;
  9410   00B946  0E00               	movlw	0
  9411   00B948  6ED6               	movwf	214,c	;volatile
  9412                           
  9413                           ; BSR set to: 0
  9414                           ;../../VLCBlib_PIC/ticktime.c: 114:     INTCON2bits.TMR0IP = priority;
  9415   00B94A  B18D               	btfsc	initTicker@priority& (0+255),0,b
  9416   00B94C  D002               	bra	u25285
  9417   00B94E  94F1               	bcf	241,2,c	;volatile
  9418   00B950  D001               	bra	u25286
  9419   00B952                     u25285:
  9420   00B952  84F1               	bsf	241,2,c	;volatile
  9421   00B954                     u25286:
  9422                           
  9423                           ;../../VLCBlib_PIC/ticktime.c: 115:     INTCONbits.TMR0IF = 0;
  9424   00B954  94F2               	bcf	242,2,c	;volatile
  9425                           
  9426                           ;../../VLCBlib_PIC/ticktime.c: 116:     INTCONbits.TMR0IE = 1;
  9427   00B956  8AF2               	bsf	242,5,c	;volatile
  9428                           
  9429                           ;../../VLCBlib_PIC/ticktime.c: 117:     T0CONbits.TMR0ON = 1;
  9430   00B958  8ED5               	bsf	213,7,c	;volatile
  9431                           
  9432                           ;../../VLCBlib_PIC/ticktime.c: 119:     timerExtension1 = 0;
  9433   00B95A  0E00               	movlw	0
  9434   00B95C  0100               	movlb	0	; () banked
  9435   00B95E  6FC3               	movwf	_timerExtension1& (0+255),b	;volatile
  9436                           
  9437                           ;../../VLCBlib_PIC/ticktime.c: 120:     timerExtension2 = 0;
  9438   00B960  0E00               	movlw	0
  9439   00B962  6FC2               	movwf	_timerExtension2& (0+255),b	;volatile
  9440                           
  9441                           ; BSR set to: 0
  9442   00B964  0012               	return		;funcret
  9443   00B966                     __end_of_initTicker:
  9444                           	callstack 0
  9445                           
  9446 ;; *************** function _poll *****************
  9447 ;; Defined at:
  9448 ;;		line 992 in file "../../VLCBlib_PIC/vlcb.c"
  9449 ;; Parameters:    Size  Location     Type
  9450 ;;		None
  9451 ;; Auto vars:     Size  Location     Type
  9452 ;;  m               9   36[BANK2 ] struct Message
  9453 ;;  i               1   35[BANK2 ] unsigned char 
  9454 ;;  handled         1   34[BANK2 ] enum E12732
  9455 ;; Return value:  Size  Location     Type
  9456 ;;                  1    wreg      void 
  9457 ;; Registers used:
  9458 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9459 ;; Tracked objects:
  9460 ;;		On entry : 0/0
  9461 ;;		On exit  : 0/0
  9462 ;;		Unchanged: 0/0
  9463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9465 ;;      Locals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9466 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9467 ;;      Totals:         0       0       0      15       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9468 ;;Total ram usage:       15 bytes
  9469 ;; Hardware stack levels used: 1
  9470 ;; Hardware stack levels required when called: 28
  9471 ;; This function calls:
  9472 ;;		NULL
  9473 ;;		_APP_postProcessMessage
  9474 ;;		_APP_preProcessMessage
  9475 ;;		___lmul
  9476 ;;		_ackEventProcessMessage
  9477 ;;		_bootProcessMessage
  9478 ;;		_canProcessMessage
  9479 ;;		_canReceiveMessage
  9480 ;;		_consumer2QProcessMessage
  9481 ;;		_flushFlashBlock
  9482 ;;		_leds_poll
  9483 ;;		_mnsPoll
  9484 ;;		_mnsProcessMessage
  9485 ;;		_nvProcessMessage
  9486 ;;		_pollTimedResponse
  9487 ;;		_producerProcessMessage
  9488 ;;		_showStatus
  9489 ;;		_teachProcessMessage
  9490 ;;		_tickGet
  9491 ;; This function is called by:
  9492 ;;		_main
  9493 ;; This function uses a non-reentrant model
  9494 ;;
  9495                           
  9496                           	psect	text17
  9497   003D7E                     __ptext17:
  9498                           	callstack 0
  9499   003D7E                     _poll:
  9500                           	callstack 2
  9501                           
  9502                           ;../../VLCBlib_PIC/vlcb.c: 993:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 994:     Messag
      +                          e m;;../../VLCBlib_PIC/vlcb.c: 995:     Processed handled;;../../VLCBlib_PIC/vlcb.c: 998
      +                          :     if ((tickGet() - timedResponseTime.val) > (long)timedResponseDelay*(62500/1000)) {
  9503                           
  9504                           ; BSR set to: 0
  9505                           ;incstack = 0
  9506   003D7E  ECC2  F059         	call	_tickGet	;wreg free
  9507   003D82  0101               	movlb	1	; () banked
  9508   003D84  5154               	movf	_timedResponseTime& (0+255),w,b
  9509   003D86  0100               	movlb	0	; () banked
  9510   003D88  5D8D               	subwf	?_tickGet& (0+255),w,b
  9511   003D8A  0102               	movlb	2	; () banked
  9512   003D8C  6FE2               	movwf	??_poll& (0+255),b
  9513   003D8E  0101               	movlb	1	; () banked
  9514   003D90  5155               	movf	(_timedResponseTime+1)& (0+255),w,b
  9515   003D92  0100               	movlb	0	; () banked
  9516   003D94  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
  9517   003D96  0102               	movlb	2	; () banked
  9518   003D98  6FE3               	movwf	(??_poll+1)& (0+255),b
  9519   003D9A  0101               	movlb	1	; () banked
  9520   003D9C  5156               	movf	(_timedResponseTime+2)& (0+255),w,b
  9521   003D9E  0100               	movlb	0	; () banked
  9522   003DA0  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
  9523   003DA2  0102               	movlb	2	; () banked
  9524   003DA4  6FE4               	movwf	(??_poll+2)& (0+255),b
  9525   003DA6  0101               	movlb	1	; () banked
  9526   003DA8  5157               	movf	(_timedResponseTime+3)& (0+255),w,b
  9527   003DAA  0100               	movlb	0	; () banked
  9528   003DAC  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
  9529   003DAE  0102               	movlb	2	; () banked
  9530   003DB0  6FE5               	movwf	(??_poll+3)& (0+255),b
  9531   003DB2  0101               	movlb	1	; () banked
  9532   003DB4  5178               	movf	_timedResponseDelay& (0+255),w,b
  9533   003DB6  0100               	movlb	0	; () banked
  9534   003DB8  6F91               	movwf	___lmul@multiplier& (0+255),b
  9535   003DBA  6B92               	clrf	(___lmul@multiplier+1)& (0+255),b
  9536   003DBC  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
  9537   003DBE  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
  9538   003DC0  0E3E               	movlw	62
  9539   003DC2  6F95               	movwf	___lmul@multiplicand& (0+255),b
  9540   003DC4  0E00               	movlw	0
  9541   003DC6  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9542   003DC8  0E00               	movlw	0
  9543   003DCA  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9544   003DCC  0E00               	movlw	0
  9545   003DCE  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9546   003DD0  ECEE  F059         	call	___lmul	;wreg free
  9547   003DD4  0102               	movlb	2	; () banked
  9548   003DD6  51E2               	movf	??_poll& (0+255),w,b
  9549   003DD8  0100               	movlb	0	; () banked
  9550   003DDA  5D91               	subwf	?___lmul& (0+255),w,b
  9551   003DDC  0102               	movlb	2	; () banked
  9552   003DDE  51E3               	movf	(??_poll+1)& (0+255),w,b
  9553   003DE0  0100               	movlb	0	; () banked
  9554   003DE2  5992               	subwfb	(?___lmul+1)& (0+255),w,b
  9555   003DE4  0102               	movlb	2	; () banked
  9556   003DE6  51E4               	movf	(??_poll+2)& (0+255),w,b
  9557   003DE8  0100               	movlb	0	; () banked
  9558   003DEA  5993               	subwfb	(?___lmul+2)& (0+255),w,b
  9559   003DEC  0102               	movlb	2	; () banked
  9560   003DEE  51E5               	movf	(??_poll+3)& (0+255),w,b
  9561   003DF0  0100               	movlb	0	; () banked
  9562   003DF2  5994               	subwfb	(?___lmul+3)& (0+255),w,b
  9563   003DF4  B0D8               	btfsc	status,0,c
  9564   003DF6  D00C               	goto	l23812
  9565                           
  9566                           ; BSR set to: 0
  9567                           ;../../VLCBlib_PIC/vlcb.c: 999:         pollTimedResponse();
  9568   003DF8  EC5E  F054         	call	_pollTimedResponse	;wreg free
  9569                           
  9570                           ;../../VLCBlib_PIC/vlcb.c: 1000:         timedResponseTime.val = tickGet();
  9571   003DFC  ECC2  F059         	call	_tickGet	;wreg free
  9572   003E00  C08D  F154         	movff	?_tickGet,_timedResponseTime
  9573   003E04  C08E  F155         	movff	?_tickGet+1,_timedResponseTime+1
  9574   003E08  C08F  F156         	movff	?_tickGet+2,_timedResponseTime+2
  9575   003E0C  C090  F157         	movff	?_tickGet+3,_timedResponseTime+3
  9576   003E10                     l23812:
  9577                           
  9578                           ;../../VLCBlib_PIC/vlcb.c: 1002:     if ((tickGet() - flashFlushTime.val) > 62500) {
  9579   003E10  ECC2  F059         	call	_tickGet	;wreg free
  9580   003E14  0101               	movlb	1	; () banked
  9581   003E16  5150               	movf	_flashFlushTime& (0+255),w,b
  9582   003E18  0100               	movlb	0	; () banked
  9583   003E1A  5D8D               	subwf	?_tickGet& (0+255),w,b
  9584   003E1C  0102               	movlb	2	; () banked
  9585   003E1E  6FE2               	movwf	??_poll& (0+255),b
  9586   003E20  0101               	movlb	1	; () banked
  9587   003E22  5151               	movf	(_flashFlushTime+1)& (0+255),w,b
  9588   003E24  0100               	movlb	0	; () banked
  9589   003E26  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
  9590   003E28  0102               	movlb	2	; () banked
  9591   003E2A  6FE3               	movwf	(??_poll+1)& (0+255),b
  9592   003E2C  0101               	movlb	1	; () banked
  9593   003E2E  5152               	movf	(_flashFlushTime+2)& (0+255),w,b
  9594   003E30  0100               	movlb	0	; () banked
  9595   003E32  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
  9596   003E34  0102               	movlb	2	; () banked
  9597   003E36  6FE4               	movwf	(??_poll+2)& (0+255),b
  9598   003E38  0101               	movlb	1	; () banked
  9599   003E3A  5153               	movf	(_flashFlushTime+3)& (0+255),w,b
  9600   003E3C  0100               	movlb	0	; () banked
  9601   003E3E  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
  9602   003E40  0102               	movlb	2	; () banked
  9603   003E42  6FE5               	movwf	(??_poll+3)& (0+255),b
  9604   003E44  51E5               	movf	(??_poll+3)& (0+255),w,b
  9605   003E46  11E4               	iorwf	(??_poll+2)& (0+255),w,b
  9606   003E48  E106               	bnz	u25740
  9607   003E4A  0E25               	movlw	37
  9608   003E4C  5DE2               	subwf	??_poll& (0+255),w,b
  9609   003E4E  0EF4               	movlw	244
  9610   003E50  59E3               	subwfb	(??_poll+1)& (0+255),w,b
  9611   003E52  A0D8               	btfss	status,0,c
  9612   003E54  D00C               	goto	l23818
  9613   003E56                     u25740:
  9614                           
  9615                           ; BSR set to: 2
  9616                           ;../../VLCBlib_PIC/vlcb.c: 1003:         flushFlashBlock();
  9617   003E56  EC1A  F053         	call	_flushFlashBlock	;wreg free
  9618                           
  9619                           ;../../VLCBlib_PIC/vlcb.c: 1004:         flashFlushTime.val = tickGet();
  9620   003E5A  ECC2  F059         	call	_tickGet	;wreg free
  9621   003E5E  C08D  F150         	movff	?_tickGet,_flashFlushTime
  9622   003E62  C08E  F151         	movff	?_tickGet+1,_flashFlushTime+1
  9623   003E66  C08F  F152         	movff	?_tickGet+2,_flashFlushTime+2
  9624   003E6A  C090  F153         	movff	?_tickGet+3,_flashFlushTime+3
  9625   003E6E                     l23818:
  9626                           
  9627                           ;../../VLCBlib_PIC/vlcb.c: 1007:     for (i=0; i<9; i++) {
  9628   003E6E  0E00               	movlw	0
  9629   003E70  0102               	movlb	2	; () banked
  9630   003E72  6FE7               	movwf	poll@i& (0+255),b
  9631   003E74                     l23824:
  9632                           
  9633                           ; BSR set to: 2
  9634                           ;../../VLCBlib_PIC/vlcb.c: 1008:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->poll != ((void*)0))) {
  9635   003E74  51E7               	movf	poll@i& (0+255),w,b
  9636   003E76  0D02               	mullw	2
  9637   003E78  0E75               	movlw	low _services
  9638   003E7A  24F3               	addwf	243,w,c
  9639   003E7C  6EF6               	movwf	tblptrl,c
  9640   003E7E  0EEE               	movlw	high _services
  9641   003E80  20F4               	addwfc	244,w,c
  9642   003E82  6EF7               	movwf	tblptrh,c
  9643   003E84                     	if	1	;There are 3 active tblptr bytes
  9644   003E84  6AF8               	clrf	tblptru,c
  9645   003E86  0E00               	movlw	low (__mediumconst shr (0+16))
  9646   003E88  22F8               	addwfc	tblptru,f,c
  9647   003E8A                     	endif
  9648   003E8A  0009               	tblrd		*+
  9649   003E8C  50F5               	movf	tablat,w,c
  9650   003E8E  0009               	tblrd		*+
  9651   003E90  10F5               	iorwf	tablat,w,c
  9652   003E92  B4D8               	btfsc	status,2,c
  9653   003E94  D04B               	goto	u25779
  9654                           
  9655                           ; BSR set to: 2
  9656   003E96  51E7               	movf	poll@i& (0+255),w,b
  9657   003E98  0D02               	mullw	2
  9658   003E9A  0E75               	movlw	low _services
  9659   003E9C  24F3               	addwf	243,w,c
  9660   003E9E  6EF6               	movwf	tblptrl,c
  9661   003EA0  0EEE               	movlw	high _services
  9662   003EA2  20F4               	addwfc	244,w,c
  9663   003EA4  6EF7               	movwf	tblptrh,c
  9664   003EA6                     	if	1	;There are 3 active tblptr bytes
  9665   003EA6  6AF8               	clrf	tblptru,c
  9666   003EA8  0E00               	movlw	low (__mediumconst shr (0+16))
  9667   003EAA  22F8               	addwfc	tblptru,f,c
  9668   003EAC                     	endif
  9669   003EAC  0009               	tblrd		*+
  9670   003EAE  CFF5 F2E2          	movff	tablat,??_poll
  9671   003EB2  0009               	tblrd		*+
  9672   003EB4  CFF5 F2E3          	movff	tablat,??_poll+1
  9673   003EB8  0E08               	movlw	8
  9674   003EBA  27E2               	addwf	??_poll& (0+255),f,b
  9675   003EBC  0E00               	movlw	0
  9676   003EBE  23E3               	addwfc	(??_poll+1)& (0+255),f,b
  9677   003EC0  C2E2  FFF6         	movff	??_poll,tblptrl
  9678   003EC4  C2E3  FFF7         	movff	??_poll+1,tblptrh
  9679   003EC8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9680   003EC8  6AF8               	clrf	tblptru,c
  9681   003ECA                     	endif
  9682   003ECA                     	if	0	;tblptru may be non-zero
  9683   003ECA                     	endif
  9684   003ECA  0009               	tblrd		*+
  9685   003ECC  50F5               	movf	tablat,w,c
  9686   003ECE  0009               	tblrd		*+
  9687   003ED0  10F5               	iorwf	tablat,w,c
  9688   003ED2  B4D8               	btfsc	status,2,c
  9689   003ED4  D02B               	goto	u25779
  9690                           
  9691                           ; BSR set to: 2
  9692                           ;../../VLCBlib_PIC/vlcb.c: 1009:             services[i]->poll();
  9693   003ED6  51E7               	movf	poll@i& (0+255),w,b
  9694   003ED8  0D02               	mullw	2
  9695   003EDA  0E75               	movlw	low _services
  9696   003EDC  24F3               	addwf	243,w,c
  9697   003EDE  6EF6               	movwf	tblptrl,c
  9698   003EE0  0EEE               	movlw	high _services
  9699   003EE2  20F4               	addwfc	244,w,c
  9700   003EE4  6EF7               	movwf	tblptrh,c
  9701   003EE6                     	if	1	;There are 3 active tblptr bytes
  9702   003EE6  6AF8               	clrf	tblptru,c
  9703   003EE8  0E00               	movlw	low (__mediumconst shr (0+16))
  9704   003EEA  22F8               	addwfc	tblptru,f,c
  9705   003EEC                     	endif
  9706   003EEC  0009               	tblrd		*+
  9707   003EEE  CFF5 F2E2          	movff	tablat,??_poll
  9708   003EF2  0009               	tblrd		*+
  9709   003EF4  CFF5 F2E3          	movff	tablat,??_poll+1
  9710   003EF8  0E08               	movlw	8
  9711   003EFA  27E2               	addwf	??_poll& (0+255),f,b
  9712   003EFC  0E00               	movlw	0
  9713   003EFE  23E3               	addwfc	(??_poll+1)& (0+255),f,b
  9714   003F00  C2E2  FFF6         	movff	??_poll,tblptrl
  9715   003F04  C2E3  FFF7         	movff	??_poll+1,tblptrh
  9716   003F08                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9717   003F08  6AF8               	clrf	tblptru,c
  9718   003F0A                     	endif
  9719   003F0A                     	if	0	;tblptru may be non-zero
  9720   003F0A                     	endif
  9721   003F0A  0009               	tblrd		*+
  9722   003F0C  CFF5 F2E4          	movff	tablat,??_poll+2
  9723   003F10  0009               	tblrd		*+
  9724   003F12  CFF5 F2E5          	movff	tablat,??_poll+3
  9725   003F16  D801               	call	u25778
  9726   003F18  D009               	goto	u25779
  9727   003F1A                     u25778:
  9728   003F1A  0005               	push	
  9729   003F1C  6EFA               	movwf	pclath,c
  9730   003F1E  51E4               	movf	(??_poll+2)& (0+255),w,b
  9731   003F20  6EFD               	movwf	tosl,c
  9732   003F22  51E5               	movf	(??_poll+3)& (0+255),w,b
  9733   003F24  6EFE               	movwf	tosh,c
  9734   003F26  6AFF               	clrf	tosu,c
  9735   003F28  50FA               	movf	pclath,w,c
  9736   003F2A  0012               	return		;indir
  9737   003F2C                     u25779:
  9738                           
  9739                           ;../../VLCBlib_PIC/vlcb.c: 1011:     }
  9740   003F2C  0102               	movlb	2	; () banked
  9741   003F2E  2BE7               	incf	poll@i& (0+255),f,b
  9742                           
  9743                           ; BSR set to: 2
  9744   003F30  0E08               	movlw	8
  9745   003F32  65E7               	cpfsgt	poll@i& (0+255),b
  9746   003F34  D79F               	goto	l23824
  9747                           
  9748                           ; BSR set to: 2
  9749                           ;../../VLCBlib_PIC/vlcb.c: 1013:     leds_poll();
  9750   003F36  EC92  F031         	call	_leds_poll	;wreg free
  9751                           
  9752                           ;../../VLCBlib_PIC/vlcb.c: 1016:     handled = NOT_PROCESSED;
  9753   003F3A  0E00               	movlw	0
  9754   003F3C  0102               	movlb	2	; () banked
  9755   003F3E  6FE6               	movwf	poll@handled& (0+255),b
  9756                           
  9757                           ; BSR set to: 2
  9758                           ;../../VLCBlib_PIC/vlcb.c: 1017:     if (transport != ((void*)0)) {
  9759   003F40  0101               	movlb	1	; () banked
  9760   003F42  5176               	movf	_transport& (0+255),w,b
  9761   003F44  1177               	iorwf	(_transport+1)& (0+255),w,b
  9762   003F46  B4D8               	btfsc	status,2,c
  9763   003F48  D0CA               	goto	l2394
  9764                           
  9765                           ; BSR set to: 1
  9766                           ;../../VLCBlib_PIC/vlcb.c: 1018:         if (transport->receiveMessage != ((void*)0)) {
  9767   003F4A  0E02               	movlw	2
  9768   003F4C  2576               	addwf	_transport& (0+255),w,b
  9769   003F4E  0102               	movlb	2	; () banked
  9770   003F50  6FE2               	movwf	??_poll& (0+255),b
  9771   003F52  0E00               	movlw	0
  9772   003F54  0101               	movlb	1	; () banked
  9773   003F56  2177               	addwfc	(_transport+1)& (0+255),w,b
  9774   003F58  0102               	movlb	2	; () banked
  9775   003F5A  6FE3               	movwf	(??_poll+1)& (0+255),b
  9776   003F5C  C2E2  FFF6         	movff	??_poll,tblptrl
  9777   003F60  C2E3  FFF7         	movff	??_poll+1,tblptrh
  9778   003F64                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9779   003F64  6AF8               	clrf	tblptru,c
  9780   003F66                     	endif
  9781   003F66                     	if	0	;tblptru may be non-zero
  9782   003F66                     	endif
  9783   003F66  0009               	tblrd		*+
  9784   003F68  50F5               	movf	tablat,w,c
  9785   003F6A  0009               	tblrd		*+
  9786   003F6C  10F5               	iorwf	tablat,w,c
  9787   003F6E  B4D8               	btfsc	status,2,c
  9788   003F70  D0B6               	goto	l2394
  9789                           
  9790                           ; BSR set to: 2
  9791                           ;../../VLCBlib_PIC/vlcb.c: 1019:             if (transport->receiveMessage(&m)) {
  9792   003F72  0EE8               	movlw	low poll@m
  9793   003F74  0101               	movlb	1	; () banked
  9794   003F76  6FBF               	movwf	canReceiveMessage@m& (0+255),b
  9795   003F78  0E02               	movlw	high poll@m
  9796   003F7A  6FC0               	movwf	(canReceiveMessage@m+1)& (0+255),b
  9797   003F7C  0E02               	movlw	2
  9798   003F7E  2576               	addwf	_transport& (0+255),w,b
  9799   003F80  0102               	movlb	2	; () banked
  9800   003F82  6FE2               	movwf	??_poll& (0+255),b
  9801   003F84  0E00               	movlw	0
  9802   003F86  0101               	movlb	1	; () banked
  9803   003F88  2177               	addwfc	(_transport+1)& (0+255),w,b
  9804   003F8A  0102               	movlb	2	; () banked
  9805   003F8C  6FE3               	movwf	(??_poll+1)& (0+255),b
  9806   003F8E  C2E2  FFF6         	movff	??_poll,tblptrl
  9807   003F92  C2E3  FFF7         	movff	??_poll+1,tblptrh
  9808   003F96                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9809   003F96  6AF8               	clrf	tblptru,c
  9810   003F98                     	endif
  9811   003F98                     	if	0	;tblptru may be non-zero
  9812   003F98                     	endif
  9813   003F98  0009               	tblrd		*+
  9814   003F9A  CFF5 F2E4          	movff	tablat,??_poll+2
  9815   003F9E  0009               	tblrd		*+
  9816   003FA0  CFF5 F2E5          	movff	tablat,??_poll+3
  9817   003FA4  D801               	call	u25818
  9818   003FA6  D009               	goto	u25819
  9819   003FA8                     u25818:
  9820   003FA8  0005               	push	
  9821   003FAA  6EFA               	movwf	pclath,c
  9822   003FAC  51E4               	movf	(??_poll+2)& (0+255),w,b
  9823   003FAE  6EFD               	movwf	tosl,c
  9824   003FB0  51E5               	movf	(??_poll+3)& (0+255),w,b
  9825   003FB2  6EFE               	movwf	tosh,c
  9826   003FB4  6AFF               	clrf	tosu,c
  9827   003FB6  50FA               	movf	pclath,w,c
  9828   003FB8  0012               	return		;indir
  9829   003FBA                     u25819:
  9830   003FBA  0900               	iorlw	0
  9831   003FBC  B4D8               	btfsc	status,2,c
  9832   003FBE  D08F               	goto	l2394
  9833                           
  9834                           ;../../VLCBlib_PIC/vlcb.c: 1020:                 if (m.len > 0) {
  9835   003FC0  0102               	movlb	2	; () banked
  9836   003FC2  51E8               	movf	poll@m& (0+255),w,b
  9837   003FC4  B4D8               	btfsc	status,2,c
  9838   003FC6  D08B               	goto	l2394
  9839                           
  9840                           ; BSR set to: 2
  9841                           ;../../VLCBlib_PIC/vlcb.c: 1021:                     showStatus(STATUS_MESSAGE_RECEIVED)
      +                          ;
  9842   003FC8  0E07               	movlw	7
  9843   003FCA  ECB2  F047         	call	_showStatus
  9844                           
  9845                           ;../../VLCBlib_PIC/vlcb.c: 1022:                     handled = APP_preProcessMessage(&m)
      +                          ;
  9846   003FCE  0EE8               	movlw	low poll@m
  9847   003FD0  0100               	movlb	0	; () banked
  9848   003FD2  6F8D               	movwf	APP_preProcessMessage@m& (0+255),b
  9849   003FD4  0E02               	movlw	high poll@m
  9850   003FD6  6F8E               	movwf	(APP_preProcessMessage@m+1)& (0+255),b
  9851   003FD8  ECE0  F061         	call	_APP_preProcessMessage	;wreg free
  9852   003FDC  0102               	movlb	2	; () banked
  9853   003FDE  6FE6               	movwf	poll@handled& (0+255),b
  9854                           
  9855                           ; BSR set to: 2
  9856                           ;../../VLCBlib_PIC/vlcb.c: 1023:                     if (handled == NOT_PROCESSED) {
  9857   003FE0  51E6               	movf	poll@handled& (0+255),w,b
  9858   003FE2  A4D8               	btfss	status,2,c
  9859   003FE4  D07C               	goto	l2394
  9860                           
  9861                           ; BSR set to: 2
  9862                           ;../../VLCBlib_PIC/vlcb.c: 1024:                         for (i=0; i<9; i++) {
  9863   003FE6  0E00               	movlw	0
  9864   003FE8  6FE7               	movwf	poll@i& (0+255),b
  9865   003FEA                     l23856:
  9866                           
  9867                           ; BSR set to: 2
  9868                           ;../../VLCBlib_PIC/vlcb.c: 1025:                             if ((services[i] != ((void*
      +                          )0)) && (services[i]->processMessage != ((void*)0))) {
  9869   003FEA  51E7               	movf	poll@i& (0+255),w,b
  9870   003FEC  0D02               	mullw	2
  9871   003FEE  0E75               	movlw	low _services
  9872   003FF0  24F3               	addwf	243,w,c
  9873   003FF2  6EF6               	movwf	tblptrl,c
  9874   003FF4  0EEE               	movlw	high _services
  9875   003FF6  20F4               	addwfc	244,w,c
  9876   003FF8  6EF7               	movwf	tblptrh,c
  9877   003FFA                     	if	1	;There are 3 active tblptr bytes
  9878   003FFA  6AF8               	clrf	tblptru,c
  9879   003FFC  0E00               	movlw	low (__mediumconst shr (0+16))
  9880   003FFE  22F8               	addwfc	tblptru,f,c
  9881   004000                     	endif
  9882   004000  0009               	tblrd		*+
  9883   004002  50F5               	movf	tablat,w,c
  9884   004004  0009               	tblrd		*+
  9885   004006  10F5               	iorwf	tablat,w,c
  9886   004008  B4D8               	btfsc	status,2,c
  9887   00400A  D058               	goto	l23864
  9888                           
  9889                           ; BSR set to: 2
  9890   00400C  51E7               	movf	poll@i& (0+255),w,b
  9891   00400E  0D02               	mullw	2
  9892   004010  0E75               	movlw	low _services
  9893   004012  24F3               	addwf	243,w,c
  9894   004014  6EF6               	movwf	tblptrl,c
  9895   004016  0EEE               	movlw	high _services
  9896   004018  20F4               	addwfc	244,w,c
  9897   00401A  6EF7               	movwf	tblptrh,c
  9898   00401C                     	if	1	;There are 3 active tblptr bytes
  9899   00401C  6AF8               	clrf	tblptru,c
  9900   00401E  0E00               	movlw	low (__mediumconst shr (0+16))
  9901   004020  22F8               	addwfc	tblptru,f,c
  9902   004022                     	endif
  9903   004022  0009               	tblrd		*+
  9904   004024  CFF5 F2E2          	movff	tablat,??_poll
  9905   004028  0009               	tblrd		*+
  9906   00402A  CFF5 F2E3          	movff	tablat,??_poll+1
  9907   00402E  0E06               	movlw	6
  9908   004030  27E2               	addwf	??_poll& (0+255),f,b
  9909   004032  0E00               	movlw	0
  9910   004034  23E3               	addwfc	(??_poll+1)& (0+255),f,b
  9911   004036  C2E2  FFF6         	movff	??_poll,tblptrl
  9912   00403A  C2E3  FFF7         	movff	??_poll+1,tblptrh
  9913   00403E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9914   00403E  6AF8               	clrf	tblptru,c
  9915   004040                     	endif
  9916   004040                     	if	0	;tblptru may be non-zero
  9917   004040                     	endif
  9918   004040  0009               	tblrd		*+
  9919   004042  50F5               	movf	tablat,w,c
  9920   004044  0009               	tblrd		*+
  9921   004046  10F5               	iorwf	tablat,w,c
  9922   004048  B4D8               	btfsc	status,2,c
  9923   00404A  D038               	goto	l23864
  9924                           
  9925                           ; BSR set to: 2
  9926                           ;../../VLCBlib_PIC/vlcb.c: 1026:                                 if (services[i]->proces
      +                          sMessage(&m) == PROCESSED) {
  9927   00404C  0EE8               	movlw	low poll@m
  9928   00404E  0101               	movlb	1	; () banked
  9929   004050  6FF4               	movwf	canProcessMessage@m& (0+255),b
  9930   004052  0E02               	movlw	high poll@m
  9931   004054  6FF5               	movwf	(canProcessMessage@m+1)& (0+255),b
  9932   004056  0102               	movlb	2	; () banked
  9933   004058  51E7               	movf	poll@i& (0+255),w,b
  9934   00405A  0D02               	mullw	2
  9935   00405C  0E75               	movlw	low _services
  9936   00405E  24F3               	addwf	243,w,c
  9937   004060  6EF6               	movwf	tblptrl,c
  9938   004062  0EEE               	movlw	high _services
  9939   004064  20F4               	addwfc	244,w,c
  9940   004066  6EF7               	movwf	tblptrh,c
  9941   004068                     	if	1	;There are 3 active tblptr bytes
  9942   004068  6AF8               	clrf	tblptru,c
  9943   00406A  0E00               	movlw	low (__mediumconst shr (0+16))
  9944   00406C  22F8               	addwfc	tblptru,f,c
  9945   00406E                     	endif
  9946   00406E  0009               	tblrd		*+
  9947   004070  CFF5 F2E2          	movff	tablat,??_poll
  9948   004074  0009               	tblrd		*+
  9949   004076  CFF5 F2E3          	movff	tablat,??_poll+1
  9950   00407A  0E06               	movlw	6
  9951   00407C  27E2               	addwf	??_poll& (0+255),f,b
  9952   00407E  0E00               	movlw	0
  9953   004080  23E3               	addwfc	(??_poll+1)& (0+255),f,b
  9954   004082  C2E2  FFF6         	movff	??_poll,tblptrl
  9955   004086  C2E3  FFF7         	movff	??_poll+1,tblptrh
  9956   00408A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9957   00408A  6AF8               	clrf	tblptru,c
  9958   00408C                     	endif
  9959   00408C                     	if	0	;tblptru may be non-zero
  9960   00408C                     	endif
  9961   00408C  0009               	tblrd		*+
  9962   00408E  CFF5 F2E4          	movff	tablat,??_poll+2
  9963   004092  0009               	tblrd		*+
  9964   004094  CFF5 F2E5          	movff	tablat,??_poll+3
  9965   004098  D801               	call	u25878
  9966   00409A  D009               	goto	u25879
  9967   00409C                     u25878:
  9968   00409C  0005               	push	
  9969   00409E  6EFA               	movwf	pclath,c
  9970   0040A0  51E4               	movf	(??_poll+2)& (0+255),w,b
  9971   0040A2  6EFD               	movwf	tosl,c
  9972   0040A4  51E5               	movf	(??_poll+3)& (0+255),w,b
  9973   0040A6  6EFE               	movwf	tosh,c
  9974   0040A8  6AFF               	clrf	tosu,c
  9975   0040AA  50FA               	movf	pclath,w,c
  9976   0040AC  0012               	return		;indir
  9977   0040AE                     u25879:
  9978   0040AE  06E8               	decf	wreg,f,c
  9979   0040B0  A4D8               	btfss	status,2,c
  9980   0040B2  D004               	goto	l23864
  9981                           
  9982                           ;../../VLCBlib_PIC/vlcb.c: 1027:                                     handled = PROCESSED
      +                          ;
  9983   0040B4  0E01               	movlw	1
  9984   0040B6  0102               	movlb	2	; () banked
  9985   0040B8  6FE6               	movwf	poll@handled& (0+255),b
  9986                           
  9987                           ;../../VLCBlib_PIC/vlcb.c: 1028:                                     break;
  9988   0040BA  D005               	goto	u25890
  9989   0040BC                     l23864:
  9990                           
  9991                           ;../../VLCBlib_PIC/vlcb.c: 1031:                         }
  9992   0040BC  0102               	movlb	2	; () banked
  9993   0040BE  2BE7               	incf	poll@i& (0+255),f,b
  9994                           
  9995                           ; BSR set to: 2
  9996   0040C0  0E08               	movlw	8
  9997   0040C2  65E7               	cpfsgt	poll@i& (0+255),b
  9998   0040C4  D792               	goto	l23856
  9999   0040C6                     u25890:
 10000                           
 10001                           ; BSR set to: 2
 10002                           ;../../VLCBlib_PIC/vlcb.c: 1032:                         if (handled == NOT_PROCESSED) {
 10003   0040C6  51E6               	movf	poll@handled& (0+255),w,b
 10004   0040C8  A4D8               	btfss	status,2,c
 10005   0040CA  D009               	goto	l2394
 10006                           
 10007                           ; BSR set to: 2
 10008                           ;../../VLCBlib_PIC/vlcb.c: 1033:                             handled = APP_postProcessMe
      +                          ssage(&m);
 10009   0040CC  0EE8               	movlw	low poll@m
 10010   0040CE  0100               	movlb	0	; () banked
 10011   0040D0  6F8D               	movwf	APP_postProcessMessage@m& (0+255),b
 10012   0040D2  0E02               	movlw	high poll@m
 10013   0040D4  6F8E               	movwf	(APP_postProcessMessage@m+1)& (0+255),b
 10014   0040D6  ECE2  F061         	call	_APP_postProcessMessage	;wreg free
 10015   0040DA  0102               	movlb	2	; () banked
 10016   0040DC  6FE6               	movwf	poll@handled& (0+255),b
 10017   0040DE                     l2394:
 10018                           
 10019                           ;../../VLCBlib_PIC/vlcb.c: 1040:     if (handled) {
 10020                           
 10021                           ; BSR set to: 2
 10022   0040DE  0102               	movlb	2	; () banked
 10023   0040E0  51E6               	movf	poll@handled& (0+255),w,b
 10024   0040E2  B4D8               	btfsc	status,2,c
 10025   0040E4  0012               	return	
 10026                           
 10027                           ; BSR set to: 2
 10028                           ;../../VLCBlib_PIC/vlcb.c: 1041:         showStatus(STATUS_MESSAGE_ACTED);
 10029   0040E6  0E08               	movlw	8
 10030   0040E8  ECB2  F047         	call	_showStatus
 10031   0040EC  0012               	return		;funcret
 10032   0040EE                     __end_of_poll:
 10033                           	callstack 0
 10034                           
 10035 ;; *************** function _canProcessMessage *****************
 10036 ;; Defined at:
 10037 ;;		line 370 in file "../../VLCBlib_PIC/can18_ecan.c"
 10038 ;; Parameters:    Size  Location     Type
 10039 ;;  m               2   63[BANK1 ] PTR struct Message
 10040 ;;		 -> poll@m(9), 
 10041 ;; Auto vars:     Size  Location     Type
 10042 ;;		None
 10043 ;; Return value:  Size  Location     Type
 10044 ;;                  1    wreg      enum E12899
 10045 ;; Registers used:
 10046 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10047 ;; Tracked objects:
 10048 ;;		On entry : 0/0
 10049 ;;		On exit  : 0/0
 10050 ;;		Unchanged: 0/0
 10051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10052 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10054 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10055 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10056 ;;Total ram usage:        4 bytes
 10057 ;; Hardware stack levels used: 1
 10058 ;; Hardware stack levels required when called: 16
 10059 ;; This function calls:
 10060 ;;		_sendMessage5
 10061 ;; This function is called by:
 10062 ;;		_poll
 10063 ;; This function uses a non-reentrant model
 10064 ;;
 10065                           
 10066                           	psect	text18
 10067   0099FC                     __ptext18:
 10068                           	callstack 0
 10069   0099FC                     _canProcessMessage:
 10070                           	callstack 13
 10071                           
 10072                           ;../../VLCBlib_PIC/can18_ecan.c: 372:     if (m->len < 3) return NOT_PROCESSED;
 10073                           
 10074                           ;incstack = 0
 10075   0099FC  C1F4  FFD9         	movff	canProcessMessage@m,fsr2l
 10076   009A00  C1F5  FFDA         	movff	canProcessMessage@m+1,fsr2h
 10077   009A04  0E03               	movlw	3
 10078   009A06  60DF               	cpfslt	indf2,c
 10079   009A08  D002               	goto	l23548
 10080   009A0A                     u25410:
 10081   009A0A  0E00               	movlw	0
 10082   009A0C  0012               	return	
 10083   009A0E                     l23548:
 10084                           
 10085                           ;../../VLCBlib_PIC/can18_ecan.c: 373:     if (m->bytes[0] != nn.bytes.hi) return NOT_PRO
      +                          CESSED;
 10086   009A0E  0101               	movlb	1	; () banked
 10087   009A10  EE20 F002          	lfsr	2,2
 10088   009A14  51F4               	movf	canProcessMessage@m& (0+255),w,b
 10089   009A16  26D9               	addwf	fsr2l,f,c
 10090   009A18  51F5               	movf	(canProcessMessage@m+1)& (0+255),w,b
 10091   009A1A  22DA               	addwfc	fsr2h,f,c
 10092   009A1C  50DE               	movf	postinc2,w,c
 10093   009A1E  0100               	movlb	0	; () banked
 10094   009A20  19B4               	xorwf	(_nn+1)& (0+255),w,b
 10095   009A22  A4D8               	btfss	status,2,c
 10096   009A24  D7F2               	goto	u25410
 10097                           
 10098                           ; BSR set to: 0
 10099                           ;../../VLCBlib_PIC/can18_ecan.c: 374:     if (m->bytes[1] != nn.bytes.lo) return NOT_PRO
      +                          CESSED;
 10100   009A26  0101               	movlb	1	; () banked
 10101   009A28  EE20 F003          	lfsr	2,3
 10102   009A2C  51F4               	movf	canProcessMessage@m& (0+255),w,b
 10103   009A2E  26D9               	addwf	fsr2l,f,c
 10104   009A30  51F5               	movf	(canProcessMessage@m+1)& (0+255),w,b
 10105   009A32  22DA               	addwfc	fsr2h,f,c
 10106   009A34  0100               	movlb	0	; () banked
 10107   009A36  51B3               	movf	_nn& (0+255),w,b
 10108   009A38  18DE               	xorwf	postinc2,w,c
 10109   009A3A  A4D8               	btfss	status,2,c
 10110   009A3C  D7E6               	goto	u25410
 10111   009A3E  D017               	goto	l23578
 10112   009A40                     l23560:
 10113                           
 10114                           ;../../VLCBlib_PIC/can18_ecan.c: 380:             return PROCESSED;
 10115   009A40  0E01               	movlw	1
 10116   009A42  0012               	return	
 10117   009A44                     l23564:
 10118                           
 10119                           ; BSR set to: 1
 10120                           ;../../VLCBlib_PIC/can18_ecan.c: 382:             if (m->len < 4) {
 10121   009A44  C1F4  FFD9         	movff	canProcessMessage@m,fsr2l
 10122   009A48  C1F5  FFDA         	movff	canProcessMessage@m+1,fsr2h
 10123   009A4C  0E04               	movlw	4
 10124   009A4E  60DF               	cpfslt	indf2,c
 10125   009A50  D7F7               	goto	l23560
 10126                           
 10127                           ; BSR set to: 1
 10128                           ;../../VLCBlib_PIC/can18_ecan.c: 383:                 sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_NVRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 10129   009A52  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 10130   009A56  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 10131   009A5A  0E71               	movlw	113
 10132   009A5C  6FBF               	movwf	sendMessage5@data3& (0+255),b
 10133   009A5E  0E01               	movlw	1
 10134   009A60  6FC0               	movwf	sendMessage5@data4& (0+255),b
 10135   009A62  0E01               	movlw	1
 10136   009A64  6FC1               	movwf	sendMessage5@data5& (0+255),b
 10137   009A66  0EAF               	movlw	175
 10138   009A68  EC13  F05F         	call	_sendMessage5
 10139   009A6C  D7E9               	goto	l23560
 10140   009A6E                     l23578:
 10141                           
 10142                           ; BSR set to: 0
 10143   009A6E  0101               	movlb	1	; () banked
 10144   009A70  EE20 F001          	lfsr	2,1
 10145   009A74  51F4               	movf	canProcessMessage@m& (0+255),w,b
 10146   009A76  26D9               	addwf	fsr2l,f,c
 10147   009A78  51F5               	movf	(canProcessMessage@m+1)& (0+255),w,b
 10148   009A7A  22DA               	addwfc	fsr2h,f,c
 10149   009A7C  50DF               	movf	indf2,w,c
 10150   009A7E  6FF6               	movwf	??_canProcessMessage& (0+255),b
 10151   009A80  6BF7               	clrf	(??_canProcessMessage+1)& (0+255),b
 10152                           
 10153                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10154                           ; Switch size 1, requested type "simple"
 10155                           ; Number of cases is 1, Range of values is 0 to 0
 10156                           ; switch strategies available:
 10157                           ; Name         Instructions Cycles
 10158                           ; simple_byte            4     3 (average)
 10159                           ;	Chosen strategy is simple_byte
 10160   009A82  51F7               	movf	(??_canProcessMessage+1)& (0+255),w,b
 10161   009A84  0A00               	xorlw	0	; case 0
 10162   009A86  A4D8               	btfss	status,2,c
 10163   009A88  D7C0               	goto	u25410
 10164                           
 10165                           ; BSR set to: 1
 10166                           ; Switch size 1, requested type "simple"
 10167                           ; Number of cases is 2, Range of values is 93 to 117
 10168                           ; switch strategies available:
 10169                           ; Name         Instructions Cycles
 10170                           ; simple_byte            7     4 (average)
 10171                           ;	Chosen strategy is simple_byte
 10172   009A8A  51F6               	movf	??_canProcessMessage& (0+255),w,b
 10173   009A8C  0A5D               	xorlw	93	; case 93
 10174   009A8E  B4D8               	btfsc	status,2,c
 10175   009A90  D7D7               	goto	l23560
 10176   009A92  0A28               	xorlw	40	; case 117
 10177   009A94  B4D8               	btfsc	status,2,c
 10178   009A96  D7D6               	goto	l23564
 10179   009A98  D7B8               	goto	u25410
 10180   009A9A                     __end_of_canProcessMessage:
 10181                           	callstack 0
 10182                           
 10183 ;; *************** function _nvProcessMessage *****************
 10184 ;; Defined at:
 10185 ;;		line 229 in file "../../VLCBlib_PIC/nv.c"
 10186 ;; Parameters:    Size  Location     Type
 10187 ;;  m               2   63[BANK1 ] PTR struct Message
 10188 ;;		 -> poll@m(9), 
 10189 ;; Auto vars:     Size  Location     Type
 10190 ;;  valueOrError    2   67[BANK1 ] short 
 10191 ;; Return value:  Size  Location     Type
 10192 ;;                  1    wreg      enum E12732
 10193 ;; Registers used:
 10194 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10195 ;; Tracked objects:
 10196 ;;		On entry : 0/0
 10197 ;;		On exit  : 0/0
 10198 ;;		Unchanged: 0/0
 10199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10200 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10201 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10202 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10203 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10204 ;;Total ram usage:        6 bytes
 10205 ;; Hardware stack levels used: 1
 10206 ;; Hardware stack levels required when called: 27
 10207 ;; This function calls:
 10208 ;;		_findServiceIndex
 10209 ;;		_getNV
 10210 ;;		_sendMessage2
 10211 ;;		_sendMessage3
 10212 ;;		_sendMessage4
 10213 ;;		_sendMessage5
 10214 ;;		_setNV
 10215 ;;		_startTimedResponse
 10216 ;; This function is called by:
 10217 ;;		_poll
 10218 ;; This function uses a non-reentrant model
 10219 ;;
 10220                           
 10221                           	psect	text19
 10222   004774                     __ptext19:
 10223                           	callstack 0
 10224   004774                     _nvProcessMessage:
 10225                           	callstack 2
 10226                           
 10227                           ;../../VLCBlib_PIC/nv.c: 230:     int16_t valueOrError;;../../VLCBlib_PIC/nv.c: 232:    
      +                           if (m->len < 3) {
 10228                           
 10229                           ;incstack = 0
 10230   004774  C1F4  FFD9         	movff	nvProcessMessage@m,fsr2l
 10231   004778  C1F5  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 10232   00477C  0E03               	movlw	3
 10233   00477E  60DF               	cpfslt	indf2,c
 10234   004780  D002               	goto	l23252
 10235   004782                     u25160:
 10236                           
 10237                           ;../../VLCBlib_PIC/nv.c: 233:         return NOT_PROCESSED;
 10238   004782  0E00               	movlw	0
 10239   004784  0012               	return	
 10240   004786                     l23252:
 10241                           
 10242                           ;../../VLCBlib_PIC/nv.c: 236:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED;
 10243   004786  0101               	movlb	1	; () banked
 10244   004788  EE20 F002          	lfsr	2,2
 10245   00478C  51F4               	movf	nvProcessMessage@m& (0+255),w,b
 10246   00478E  26D9               	addwf	fsr2l,f,c
 10247   004790  51F5               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10248   004792  22DA               	addwfc	fsr2h,f,c
 10249   004794  50DE               	movf	postinc2,w,c
 10250   004796  0100               	movlb	0	; () banked
 10251   004798  19B4               	xorwf	(_nn+1)& (0+255),w,b
 10252   00479A  A4D8               	btfss	status,2,c
 10253   00479C  D7F2               	goto	u25160
 10254                           
 10255                           ; BSR set to: 0
 10256                           ;../../VLCBlib_PIC/nv.c: 237:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED;
 10257   00479E  0101               	movlb	1	; () banked
 10258   0047A0  EE20 F003          	lfsr	2,3
 10259   0047A4  51F4               	movf	nvProcessMessage@m& (0+255),w,b
 10260   0047A6  26D9               	addwf	fsr2l,f,c
 10261   0047A8  51F5               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10262   0047AA  22DA               	addwfc	fsr2h,f,c
 10263   0047AC  0100               	movlb	0	; () banked
 10264   0047AE  51B3               	movf	_nn& (0+255),w,b
 10265   0047B0  18DE               	xorwf	postinc2,w,c
 10266   0047B2  A4D8               	btfss	status,2,c
 10267   0047B4  D7E6               	goto	u25160
 10268   0047B6  D159               	goto	l23374
 10269   0047B8                     l23264:
 10270                           
 10271                           ; BSR set to: 1
 10272                           ;../../VLCBlib_PIC/nv.c: 241:             if (m->len < 4) {
 10273   0047B8  C1F4  FFD9         	movff	nvProcessMessage@m,fsr2l
 10274   0047BC  C1F5  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 10275   0047C0  0E04               	movlw	4
 10276   0047C2  60DF               	cpfslt	indf2,c
 10277   0047C4  D01D               	goto	l23274
 10278                           
 10279                           ; BSR set to: 1
 10280                           ;../../VLCBlib_PIC/nv.c: 242:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, CMDERR_INV_CMD);
 10281   0047C6  C0B4  F0A5         	movff	_nn+1,sendMessage3@data1
 10282   0047CA  C0B3  F0A6         	movff	_nn,sendMessage3@data2
 10283   0047CE  0E01               	movlw	1
 10284   0047D0  0100               	movlb	0	; () banked
 10285   0047D2  6FA7               	movwf	sendMessage3@data3& (0+255),b
 10286   0047D4  0E6F               	movlw	111
 10287   0047D6  ECCB  F05E         	call	_sendMessage3
 10288                           
 10289                           ;../../VLCBlib_PIC/nv.c: 243:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 10290   0047DA  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 10291   0047DE  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 10292   0047E2  0E71               	movlw	113
 10293   0047E4  0101               	movlb	1	; () banked
 10294   0047E6  6FBF               	movwf	sendMessage5@data3& (0+255),b
 10295   0047E8  0E01               	movlw	1
 10296   0047EA  6FC0               	movwf	sendMessage5@data4& (0+255),b
 10297   0047EC  0E01               	movlw	1
 10298   0047EE  6FC1               	movwf	sendMessage5@data5& (0+255),b
 10299   0047F0  0EAF               	movlw	175
 10300   0047F2  EC13  F05F         	call	_sendMessage5
 10301   0047F6                     l23268:
 10302                           
 10303                           ;../../VLCBlib_PIC/nv.c: 244:                 nvDiagnostics[0x01].asUint++;
 10304   0047F6  0100               	movlb	0	; () banked
 10305   0047F8  4BCF               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 10306   0047FA  2BD0               	incf	(_nvDiagnostics+3)& (0+255),f,b
 10307   0047FC                     l23270:
 10308                           
 10309                           ;../../VLCBlib_PIC/nv.c: 245:                 return PROCESSED;
 10310   0047FC  0E01               	movlw	1
 10311   0047FE  0012               	return	
 10312   004800                     l23274:
 10313                           
 10314                           ; BSR set to: 1
 10315                           ;../../VLCBlib_PIC/nv.c: 247:             valueOrError = getNV(m->bytes[2]);
 10316   004800  EE20 F004          	lfsr	2,4
 10317   004804  51F4               	movf	nvProcessMessage@m& (0+255),w,b
 10318   004806  26D9               	addwf	fsr2l,f,c
 10319   004808  51F5               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10320   00480A  22DA               	addwfc	fsr2h,f,c
 10321   00480C  50DF               	movf	indf2,w,c
 10322   00480E  EC35  F05D         	call	_getNV
 10323   004812  C08D  F1F8         	movff	?_getNV,nvProcessMessage@valueOrError
 10324   004816  C08E  F1F9         	movff	?_getNV+1,nvProcessMessage@valueOrError+1
 10325                           
 10326                           ;../../VLCBlib_PIC/nv.c: 248:             if (valueOrError < 0) {
 10327   00481A  0101               	movlb	1	; () banked
 10328   00481C  AFF9               	btfss	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 10329   00481E  D01B               	goto	l23286
 10330                           
 10331                           ; BSR set to: 1
 10332                           ;../../VLCBlib_PIC/nv.c: 249:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(-valueOrError));
 10333   004820  C0B4  F0A5         	movff	_nn+1,sendMessage3@data1
 10334   004824  C0B3  F0A6         	movff	_nn,sendMessage3@data2
 10335   004828  51F8               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 10336   00482A  0800               	sublw	0
 10337   00482C  0100               	movlb	0	; () banked
 10338   00482E  6FA7               	movwf	sendMessage3@data3& (0+255),b
 10339   004830  0E6F               	movlw	111
 10340   004832  ECCB  F05E         	call	_sendMessage3
 10341                           
 10342                           ;../../VLCBlib_PIC/nv.c: 250:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVRD, SERVICE_ID_MNS, (uint8_t)(-valueOrError));
 10343   004836  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 10344   00483A  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 10345   00483E  0E71               	movlw	113
 10346   004840  0101               	movlb	1	; () banked
 10347   004842  6FBF               	movwf	sendMessage5@data3& (0+255),b
 10348   004844  0E01               	movlw	1
 10349   004846  6FC0               	movwf	sendMessage5@data4& (0+255),b
 10350   004848  51F8               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 10351   00484A  0800               	sublw	0
 10352   00484C  6FC1               	movwf	sendMessage5@data5& (0+255),b
 10353   00484E  0EAF               	movlw	175
 10354   004850  EC13  F05F         	call	_sendMessage5
 10355   004854  D7D0               	goto	l23268
 10356   004856                     l23286:
 10357                           
 10358                           ; BSR set to: 1
 10359                           ;../../VLCBlib_PIC/nv.c: 254:             nvDiagnostics[0x00].asUint++;
 10360   004856  0100               	movlb	0	; () banked
 10361   004858  4BCD               	infsnz	_nvDiagnostics& (0+255),f,b
 10362   00485A  2BCE               	incf	(_nvDiagnostics+1)& (0+255),f,b
 10363                           
 10364                           ; BSR set to: 0
 10365                           ;../../VLCBlib_PIC/nv.c: 255:             sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.
      +                          lo, m->bytes[2], (uint8_t)(valueOrError));
 10366   00485C  C0B4  F0A5         	movff	_nn+1,sendMessage4@data1
 10367   004860  C0B3  F0A6         	movff	_nn,sendMessage4@data2
 10368   004864  0101               	movlb	1	; () banked
 10369   004866  EE20 F004          	lfsr	2,4
 10370   00486A  51F4               	movf	nvProcessMessage@m& (0+255),w,b
 10371   00486C  26D9               	addwf	fsr2l,f,c
 10372   00486E  51F5               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10373   004870  22DA               	addwfc	fsr2h,f,c
 10374   004872  50DF               	movf	indf2,w,c
 10375   004874  0100               	movlb	0	; () banked
 10376   004876  6FA7               	movwf	sendMessage4@data3& (0+255),b
 10377   004878  C1F8  F0A8         	movff	nvProcessMessage@valueOrError,sendMessage4@data4
 10378   00487C  0E97               	movlw	151
 10379   00487E  EC87  F05F         	call	_sendMessage4
 10380                           
 10381                           ;../../VLCBlib_PIC/nv.c: 256:             if (m->bytes[2] == 0) {
 10382   004882  0101               	movlb	1	; () banked
 10383   004884  EE20 F004          	lfsr	2,4
 10384   004888  51F4               	movf	nvProcessMessage@m& (0+255),w,b
 10385   00488A  26D9               	addwf	fsr2l,f,c
 10386   00488C  51F5               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10387   00488E  22DA               	addwfc	fsr2h,f,c
 10388   004890  50DF               	movf	indf2,w,c
 10389   004892  A4D8               	btfss	status,2,c
 10390   004894  D7B3               	goto	l23270
 10391                           
 10392                           ; BSR set to: 1
 10393                           ;../../VLCBlib_PIC/nv.c: 258:                 startTimedResponse(6, findServiceIndex(SER
      +                          VICE_ID_NV), nvTRnvrdCallback);
 10394   004896  0E02               	movlw	2
 10395   004898  EC02  F056         	call	_findServiceIndex
 10396   00489C  0100               	movlb	0	; () banked
 10397   00489E  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 10398   0048A0  0EAC               	movlw	low _nvTRnvrdCallback
 10399   0048A2  6F92               	movwf	startTimedResponse@callback& (0+255),b
 10400   0048A4  0EB9               	movlw	high _nvTRnvrdCallback
 10401   0048A6  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 10402   0048A8  0E06               	movlw	6
 10403   0048AA  ECF7  F05C         	call	_startTimedResponse
 10404   0048AE  D7A6               	goto	l23270
 10405   0048B0                     l23298:
 10406                           
 10407                           ; BSR set to: 1
 10408                           ;../../VLCBlib_PIC/nv.c: 262:             if (m->len < 5) {
 10409   0048B0  C1F4  FFD9         	movff	nvProcessMessage@m,fsr2l
 10410   0048B4  C1F5  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 10411   0048B8  0E05               	movlw	5
 10412   0048BA  60DF               	cpfslt	indf2,c
 10413   0048BC  D00E               	goto	l23308
 10414                           
 10415                           ; BSR set to: 1
 10416                           ;../../VLCBlib_PIC/nv.c: 264:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSET, SERVICE_ID_MNS, CMDERR_INV_CMD);
 10417   0048BE  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 10418   0048C2  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 10419   0048C6  0E96               	movlw	150
 10420   0048C8  6FBF               	movwf	sendMessage5@data3& (0+255),b
 10421   0048CA  0E01               	movlw	1
 10422   0048CC  6FC0               	movwf	sendMessage5@data4& (0+255),b
 10423   0048CE  0E01               	movlw	1
 10424   0048D0  6FC1               	movwf	sendMessage5@data5& (0+255),b
 10425   0048D2  0EAF               	movlw	175
 10426   0048D4  EC13  F05F         	call	_sendMessage5
 10427   0048D8  D78E               	goto	l23268
 10428   0048DA                     l23308:
 10429                           
 10430                           ; BSR set to: 1
 10431                           ;../../VLCBlib_PIC/nv.c: 268:             valueOrError = setNV(m->bytes[2], m->bytes[3])
      +                          ;
 10432   0048DA  EE20 F005          	lfsr	2,5
 10433   0048DE  51F4               	movf	nvProcessMessage@m& (0+255),w,b
 10434   0048E0  26D9               	addwf	fsr2l,f,c
 10435   0048E2  51F5               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10436   0048E4  22DA               	addwfc	fsr2h,f,c
 10437   0048E6  50DF               	movf	indf2,w,c
 10438   0048E8  6FEF               	movwf	setNV@value& (0+255),b
 10439   0048EA  EE20 F004          	lfsr	2,4
 10440   0048EE  51F4               	movf	nvProcessMessage@m& (0+255),w,b
 10441   0048F0  26D9               	addwf	fsr2l,f,c
 10442   0048F2  51F5               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10443   0048F4  22DA               	addwfc	fsr2h,f,c
 10444   0048F6  50DF               	movf	indf2,w,c
 10445   0048F8  EC9C  F054         	call	_setNV
 10446   0048FC  0101               	movlb	1	; () banked
 10447   0048FE  6FF6               	movwf	??_nvProcessMessage& (0+255),b
 10448   004900  51F6               	movf	??_nvProcessMessage& (0+255),w,b
 10449   004902  6FF8               	movwf	nvProcessMessage@valueOrError& (0+255),b
 10450   004904  6BF9               	clrf	(nvProcessMessage@valueOrError+1)& (0+255),b
 10451                           
 10452                           ; BSR set to: 1
 10453                           ;../../VLCBlib_PIC/nv.c: 269:             if (valueOrError >0) {
 10454   004906  BFF9               	btfsc	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 10455   004908  D00F               	goto	l23320
 10456   00490A  51F9               	movf	(nvProcessMessage@valueOrError+1)& (0+255),w,b
 10457   00490C  E103               	bnz	u25230
 10458   00490E  05F8               	decf	nvProcessMessage@valueOrError& (0+255),w,b
 10459   004910  A0D8               	btfss	status,0,c
 10460   004912  D00A               	goto	l23320
 10461   004914                     u25230:
 10462                           
 10463                           ; BSR set to: 1
 10464                           ;../../VLCBlib_PIC/nv.c: 270:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(valueOrError));
 10465   004914  C0B4  F0A5         	movff	_nn+1,sendMessage3@data1
 10466   004918  C0B3  F0A6         	movff	_nn,sendMessage3@data2
 10467   00491C  C1F8  F0A7         	movff	nvProcessMessage@valueOrError,sendMessage3@data3
 10468   004920  0E6F               	movlw	111
 10469   004922  ECCB  F05E         	call	_sendMessage3
 10470   004926  D767               	goto	l23268
 10471   004928                     l23320:
 10472                           
 10473                           ; BSR set to: 1
 10474                           ;../../VLCBlib_PIC/nv.c: 275:             sendMessage2(OPC_WRACK, nn.bytes.hi, nn.bytes.
      +                          lo);
 10475   004928  C0B4  F0A5         	movff	_nn+1,sendMessage2@data1
 10476   00492C  C0B3  F0A6         	movff	_nn,sendMessage2@data2
 10477   004930  0E59               	movlw	89
 10478   004932  ECE3  F05E         	call	_sendMessage2
 10479                           
 10480                           ;../../VLCBlib_PIC/nv.c: 276:             sendMessage5(OPC_GRSP, nn.bytes.hi, nn.bytes.l
      +                          o, OPC_NVSET, SERVICE_ID_MNS, GRSP_OK);
 10481   004936  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 10482   00493A  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 10483   00493E  0E96               	movlw	150
 10484   004940  0101               	movlb	1	; () banked
 10485   004942  6FBF               	movwf	sendMessage5@data3& (0+255),b
 10486   004944  0E01               	movlw	1
 10487   004946  6FC0               	movwf	sendMessage5@data4& (0+255),b
 10488   004948  0E00               	movlw	0
 10489   00494A  6FC1               	movwf	sendMessage5@data5& (0+255),b
 10490   00494C  0EAF               	movlw	175
 10491   00494E  EC13  F05F         	call	_sendMessage5
 10492   004952  D754               	goto	l23270
 10493   004954                     l23326:
 10494                           
 10495                           ; BSR set to: 1
 10496                           ;../../VLCBlib_PIC/nv.c: 279:             if (m->len < 5) {
 10497   004954  C1F4  FFD9         	movff	nvProcessMessage@m,fsr2l
 10498   004958  C1F5  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 10499   00495C  0E05               	movlw	5
 10500   00495E  60DF               	cpfslt	indf2,c
 10501   004960  D00E               	goto	l23336
 10502                           
 10503                           ; BSR set to: 1
 10504                           ;../../VLCBlib_PIC/nv.c: 281:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 10505   004962  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 10506   004966  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 10507   00496A  0E8E               	movlw	142
 10508   00496C  6FBF               	movwf	sendMessage5@data3& (0+255),b
 10509   00496E  0E01               	movlw	1
 10510   004970  6FC0               	movwf	sendMessage5@data4& (0+255),b
 10511   004972  0E01               	movlw	1
 10512   004974  6FC1               	movwf	sendMessage5@data5& (0+255),b
 10513   004976  0EAF               	movlw	175
 10514   004978  EC13  F05F         	call	_sendMessage5
 10515   00497C  D73C               	goto	l23268
 10516   00497E                     l23336:
 10517                           
 10518                           ; BSR set to: 1
 10519                           ;../../VLCBlib_PIC/nv.c: 285:             valueOrError = setNV(m->bytes[2], m->bytes[3])
      +                          ;
 10520   00497E  EE20 F005          	lfsr	2,5
 10521   004982  51F4               	movf	nvProcessMessage@m& (0+255),w,b
 10522   004984  26D9               	addwf	fsr2l,f,c
 10523   004986  51F5               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10524   004988  22DA               	addwfc	fsr2h,f,c
 10525   00498A  50DF               	movf	indf2,w,c
 10526   00498C  6FEF               	movwf	setNV@value& (0+255),b
 10527   00498E  EE20 F004          	lfsr	2,4
 10528   004992  51F4               	movf	nvProcessMessage@m& (0+255),w,b
 10529   004994  26D9               	addwf	fsr2l,f,c
 10530   004996  51F5               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10531   004998  22DA               	addwfc	fsr2h,f,c
 10532   00499A  50DF               	movf	indf2,w,c
 10533   00499C  EC9C  F054         	call	_setNV
 10534   0049A0  0101               	movlb	1	; () banked
 10535   0049A2  6FF6               	movwf	??_nvProcessMessage& (0+255),b
 10536   0049A4  51F6               	movf	??_nvProcessMessage& (0+255),w,b
 10537   0049A6  6FF8               	movwf	nvProcessMessage@valueOrError& (0+255),b
 10538   0049A8  6BF9               	clrf	(nvProcessMessage@valueOrError+1)& (0+255),b
 10539                           
 10540                           ; BSR set to: 1
 10541                           ;../../VLCBlib_PIC/nv.c: 286:             if (valueOrError >0) {
 10542   0049AA  BFF9               	btfsc	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 10543   0049AC  D01D               	goto	l23348
 10544   0049AE  51F9               	movf	(nvProcessMessage@valueOrError+1)& (0+255),w,b
 10545   0049B0  E103               	bnz	u25250
 10546   0049B2  05F8               	decf	nvProcessMessage@valueOrError& (0+255),w,b
 10547   0049B4  A0D8               	btfss	status,0,c
 10548   0049B6  D018               	goto	l23348
 10549   0049B8                     u25250:
 10550                           
 10551                           ; BSR set to: 1
 10552                           ;../../VLCBlib_PIC/nv.c: 287:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(valueOrError));
 10553   0049B8  C0B4  F0A5         	movff	_nn+1,sendMessage3@data1
 10554   0049BC  C0B3  F0A6         	movff	_nn,sendMessage3@data2
 10555   0049C0  C1F8  F0A7         	movff	nvProcessMessage@valueOrError,sendMessage3@data3
 10556   0049C4  0E6F               	movlw	111
 10557   0049C6  ECCB  F05E         	call	_sendMessage3
 10558                           
 10559                           ;../../VLCBlib_PIC/nv.c: 288:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, (uint8_t)(valueOrError));
 10560   0049CA  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 10561   0049CE  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 10562   0049D2  0E8E               	movlw	142
 10563   0049D4  0101               	movlb	1	; () banked
 10564   0049D6  6FBF               	movwf	sendMessage5@data3& (0+255),b
 10565   0049D8  0E01               	movlw	1
 10566   0049DA  6FC0               	movwf	sendMessage5@data4& (0+255),b
 10567   0049DC  C1F8  F1C1         	movff	nvProcessMessage@valueOrError,sendMessage5@data5
 10568   0049E0  0EAF               	movlw	175
 10569   0049E2  EC13  F05F         	call	_sendMessage5
 10570   0049E6  D707               	goto	l23268
 10571   0049E8                     l23348:
 10572                           
 10573                           ; BSR set to: 1
 10574                           ;../../VLCBlib_PIC/nv.c: 292:             valueOrError = getNV(m->bytes[2]);
 10575   0049E8  EE20 F004          	lfsr	2,4
 10576   0049EC  51F4               	movf	nvProcessMessage@m& (0+255),w,b
 10577   0049EE  26D9               	addwf	fsr2l,f,c
 10578   0049F0  51F5               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10579   0049F2  22DA               	addwfc	fsr2h,f,c
 10580   0049F4  50DF               	movf	indf2,w,c
 10581   0049F6  EC35  F05D         	call	_getNV
 10582   0049FA  C08D  F1F8         	movff	?_getNV,nvProcessMessage@valueOrError
 10583   0049FE  C08E  F1F9         	movff	?_getNV+1,nvProcessMessage@valueOrError+1
 10584                           
 10585                           ;../../VLCBlib_PIC/nv.c: 293:             if (valueOrError < 0) {
 10586   004A02  0101               	movlb	1	; () banked
 10587   004A04  AFF9               	btfss	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 10588   004A06  D01B               	goto	l23360
 10589                           
 10590                           ; BSR set to: 1
 10591                           ;../../VLCBlib_PIC/nv.c: 294:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(-valueOrError));
 10592   004A08  C0B4  F0A5         	movff	_nn+1,sendMessage3@data1
 10593   004A0C  C0B3  F0A6         	movff	_nn,sendMessage3@data2
 10594   004A10  51F8               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 10595   004A12  0800               	sublw	0
 10596   004A14  0100               	movlb	0	; () banked
 10597   004A16  6FA7               	movwf	sendMessage3@data3& (0+255),b
 10598   004A18  0E6F               	movlw	111
 10599   004A1A  ECCB  F05E         	call	_sendMessage3
 10600                           
 10601                           ;../../VLCBlib_PIC/nv.c: 295:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, (uint8_t)(-valueOrError));
 10602   004A1E  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 10603   004A22  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 10604   004A26  0E8E               	movlw	142
 10605   004A28  0101               	movlb	1	; () banked
 10606   004A2A  6FBF               	movwf	sendMessage5@data3& (0+255),b
 10607   004A2C  0E01               	movlw	1
 10608   004A2E  6FC0               	movwf	sendMessage5@data4& (0+255),b
 10609   004A30  51F8               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 10610   004A32  0800               	sublw	0
 10611   004A34  6FC1               	movwf	sendMessage5@data5& (0+255),b
 10612   004A36  0EAF               	movlw	175
 10613   004A38  EC13  F05F         	call	_sendMessage5
 10614   004A3C  D6DC               	goto	l23268
 10615   004A3E                     l23360:
 10616                           
 10617                           ; BSR set to: 1
 10618                           ;../../VLCBlib_PIC/nv.c: 299:             sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.
      +                          lo, m->bytes[2], (uint8_t)(valueOrError));
 10619   004A3E  C0B4  F0A5         	movff	_nn+1,sendMessage4@data1
 10620   004A42  C0B3  F0A6         	movff	_nn,sendMessage4@data2
 10621   004A46  EE20 F004          	lfsr	2,4
 10622   004A4A  51F4               	movf	nvProcessMessage@m& (0+255),w,b
 10623   004A4C  26D9               	addwf	fsr2l,f,c
 10624   004A4E  51F5               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10625   004A50  22DA               	addwfc	fsr2h,f,c
 10626   004A52  50DF               	movf	indf2,w,c
 10627   004A54  0100               	movlb	0	; () banked
 10628   004A56  6FA7               	movwf	sendMessage4@data3& (0+255),b
 10629   004A58  C1F8  F0A8         	movff	nvProcessMessage@valueOrError,sendMessage4@data4
 10630   004A5C  0E97               	movlw	151
 10631   004A5E  EC87  F05F         	call	_sendMessage4
 10632                           
 10633                           ;../../VLCBlib_PIC/nv.c: 300:             nvDiagnostics[0x00].asUint++;
 10634   004A62  0100               	movlb	0	; () banked
 10635   004A64  4BCD               	infsnz	_nvDiagnostics& (0+255),f,b
 10636   004A66  2BCE               	incf	(_nvDiagnostics+1)& (0+255),f,b
 10637   004A68  D6C9               	goto	l23270
 10638   004A6A                     l23374:
 10639                           
 10640                           ; BSR set to: 0
 10641   004A6A  0101               	movlb	1	; () banked
 10642   004A6C  EE20 F001          	lfsr	2,1
 10643   004A70  51F4               	movf	nvProcessMessage@m& (0+255),w,b
 10644   004A72  26D9               	addwf	fsr2l,f,c
 10645   004A74  51F5               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10646   004A76  22DA               	addwfc	fsr2h,f,c
 10647   004A78  50DF               	movf	indf2,w,c
 10648   004A7A  6FF6               	movwf	??_nvProcessMessage& (0+255),b
 10649   004A7C  6BF7               	clrf	(??_nvProcessMessage+1)& (0+255),b
 10650                           
 10651                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10652                           ; Switch size 1, requested type "simple"
 10653                           ; Number of cases is 1, Range of values is 0 to 0
 10654                           ; switch strategies available:
 10655                           ; Name         Instructions Cycles
 10656                           ; simple_byte            4     3 (average)
 10657                           ;	Chosen strategy is simple_byte
 10658   004A7E  51F7               	movf	(??_nvProcessMessage+1)& (0+255),w,b
 10659   004A80  0A00               	xorlw	0	; case 0
 10660   004A82  A4D8               	btfss	status,2,c
 10661   004A84  D67E               	goto	u25160
 10662                           
 10663                           ; BSR set to: 1
 10664                           ; Switch size 1, requested type "simple"
 10665                           ; Number of cases is 3, Range of values is 113 to 150
 10666                           ; switch strategies available:
 10667                           ; Name         Instructions Cycles
 10668                           ; simple_byte           10     6 (average)
 10669                           ;	Chosen strategy is simple_byte
 10670   004A86  51F6               	movf	??_nvProcessMessage& (0+255),w,b
 10671   004A88  0A71               	xorlw	113	; case 113
 10672   004A8A  B4D8               	btfsc	status,2,c
 10673   004A8C  D695               	goto	l23264
 10674   004A8E  0AFF               	xorlw	255	; case 142
 10675   004A90  B4D8               	btfsc	status,2,c
 10676   004A92  D760               	goto	l23326
 10677   004A94  0A18               	xorlw	24	; case 150
 10678   004A96  B4D8               	btfsc	status,2,c
 10679   004A98  D70B               	goto	l23298
 10680   004A9A  D673               	goto	u25160
 10681   004A9C                     __end_of_nvProcessMessage:
 10682                           	callstack 0
 10683                           
 10684 ;; *************** function _mnsProcessMessage *****************
 10685 ;; Defined at:
 10686 ;;		line 329 in file "../../VLCBlib_PIC/mns.c"
 10687 ;; Parameters:    Size  Location     Type
 10688 ;;  m               2   63[BANK1 ] PTR struct Message
 10689 ;;		 -> poll@m(9), 
 10690 ;; Auto vars:     Size  Location     Type
 10691 ;;  d               2   66[BANK1 ] PTR struct DiagnosticVal
 10692 ;;		 -> canDiagnostics(32), nvDiagnostics(4), mnsDiagnostics(12), teachDiagnostics(2), 
 10693 ;;		 -> producerDiagnostics(2), ackDiagnostics(2), consumer2QDiagnostics(2), NULL(0), 
 10694 ;;  newMode         1   68[BANK1 ] unsigned char 
 10695 ;;  i               1   65[BANK1 ] unsigned char 
 10696 ;;  flags           1    0        unsigned char 
 10697 ;; Return value:  Size  Location     Type
 10698 ;;                  1    wreg      enum E12732
 10699 ;; Registers used:
 10700 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10701 ;; Tracked objects:
 10702 ;;		On entry : 0/0
 10703 ;;		On exit  : 0/0
 10704 ;;		Unchanged: 0/0
 10705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10706 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10707 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10708 ;;      Temps:          0       0       0      30       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10709 ;;      Totals:         0       0       6      30       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10710 ;;Total ram usage:       36 bytes
 10711 ;; Hardware stack levels used: 1
 10712 ;; Hardware stack levels required when called: 27
 10713 ;; This function calls:
 10714 ;;		NULL
 10715 ;;		_ackGetDiagnostic
 10716 ;;		_canEsdData
 10717 ;;		_canGetDiagnostic
 10718 ;;		_consumer2QGetDiagnostic
 10719 ;;		_factoryReset
 10720 ;;		_findServiceIndex
 10721 ;;		_getParameter
 10722 ;;		_getParameterFlags
 10723 ;;		_mnsGetDiagnostic
 10724 ;;		_nvGetDiagnostic
 10725 ;;		_nvGetESDdata
 10726 ;;		_producerGetDiagnostic
 10727 ;;		_sendMessage2
 10728 ;;		_sendMessage3
 10729 ;;		_sendMessage4
 10730 ;;		_sendMessage5
 10731 ;;		_sendMessage6
 10732 ;;		_sendMessage7
 10733 ;;		_setLEDsByMode
 10734 ;;		_startTimedResponse
 10735 ;;		_teachGetDiagnostic
 10736 ;;		_teachGetESDdata
 10737 ;;		_writeNVM
 10738 ;; This function is called by:
 10739 ;;		_poll
 10740 ;; This function uses a non-reentrant model
 10741 ;;
 10742                           
 10743                           	psect	text20
 10744   001766                     __ptext20:
 10745                           	callstack 0
 10746   001766                     _mnsProcessMessage:
 10747                           	callstack 2
 10748                           
 10749                           ;../../VLCBlib_PIC/mns.c: 330:     uint8_t i;;../../VLCBlib_PIC/mns.c: 331:     uint8_t 
      +                          flags;;../../VLCBlib_PIC/mns.c: 333:     uint8_t newMode;;../../VLCBlib_PIC/mns.c: 338: 
      +                              if (mode_state == MODE_SETUP) {
 10750                           
 10751                           ;incstack = 0
 10752   001766  0100               	movlb	0	; () banked
 10753   001768  51C1               	movf	_mode_state& (0+255),w,b
 10754   00176A  B4D8               	btfsc	status,2,c
 10755   00176C  D0BA               	goto	l22838
 10756   00176E  D125               	goto	l22884
 10757   001770                     l22796:
 10758                           
 10759                           ; BSR set to: 2
 10760                           ;../../VLCBlib_PIC/mns.c: 341:                 if (m->len < 3) {
 10761   001770  C1F4  FFD9         	movff	mnsProcessMessage@m,fsr2l
 10762   001774  C1F5  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 10763   001778  0E03               	movlw	3
 10764   00177A  60DF               	cpfslt	indf2,c
 10765   00177C  D00F               	goto	l22800
 10766                           
 10767                           ; BSR set to: 2
 10768                           ;../../VLCBlib_PIC/mns.c: 342:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_NVRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 10769   00177E  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 10770   001782  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 10771   001786  0E71               	movlw	113
 10772   001788  0101               	movlb	1	; () banked
 10773   00178A  6FBF               	movwf	sendMessage5@data3& (0+255),b
 10774   00178C  0E01               	movlw	1
 10775   00178E  6FC0               	movwf	sendMessage5@data4& (0+255),b
 10776   001790  0E01               	movlw	1
 10777   001792  6FC1               	movwf	sendMessage5@data5& (0+255),b
 10778   001794  0EAF               	movlw	175
 10779   001796  EC13  F05F         	call	_sendMessage5
 10780                           
 10781                           ;../../VLCBlib_PIC/mns.c: 343:                 } else {
 10782   00179A  D03A               	goto	l22814
 10783   00179C                     l22800:
 10784                           
 10785                           ; BSR set to: 2
 10786                           ;../../VLCBlib_PIC/mns.c: 344:                     nn.bytes.hi = m->bytes[0];
 10787   00179C  0101               	movlb	1	; () banked
 10788   00179E  EE20 F002          	lfsr	2,2
 10789   0017A2  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 10790   0017A4  26D9               	addwf	fsr2l,f,c
 10791   0017A6  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 10792   0017A8  22DA               	addwfc	fsr2h,f,c
 10793   0017AA  50DF               	movf	indf2,w,c
 10794   0017AC  0100               	movlb	0	; () banked
 10795   0017AE  6FB4               	movwf	(_nn+1)& (0+255),b
 10796                           
 10797                           ;../../VLCBlib_PIC/mns.c: 345:                     nn.bytes.lo = m->bytes[1];
 10798   0017B0  0101               	movlb	1	; () banked
 10799   0017B2  EE20 F003          	lfsr	2,3
 10800   0017B6  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 10801   0017B8  26D9               	addwf	fsr2l,f,c
 10802   0017BA  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 10803   0017BC  22DA               	addwfc	fsr2h,f,c
 10804   0017BE  50DF               	movf	indf2,w,c
 10805   0017C0  0100               	movlb	0	; () banked
 10806   0017C2  6FB3               	movwf	_nn& (0+255),b
 10807                           
 10808                           ; BSR set to: 0
 10809                           ;../../VLCBlib_PIC/mns.c: 346:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC, nn.b
      +                          ytes.hi);
 10810   0017C4  0EFC               	movlw	252
 10811   0017C6  6FA4               	movwf	writeNVM@index& (0+255),b
 10812   0017C8  0E03               	movlw	3
 10813   0017CA  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 10814   0017CC  0E00               	movlw	0
 10815   0017CE  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 10816   0017D0  C0B4  F0A7         	movff	_nn+1,writeNVM@value
 10817   0017D4  0E00               	movlw	0
 10818   0017D6  EC66  F05B         	call	_writeNVM
 10819                           
 10820                           ;../../VLCBlib_PIC/mns.c: 347:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC +1, n
      +                          n.bytes.lo);
 10821   0017DA  0EFD               	movlw	253
 10822   0017DC  0100               	movlb	0	; () banked
 10823   0017DE  6FA4               	movwf	writeNVM@index& (0+255),b
 10824   0017E0  0E03               	movlw	3
 10825   0017E2  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 10826   0017E4  0E00               	movlw	0
 10827   0017E6  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 10828   0017E8  C0B3  F0A7         	movff	_nn,writeNVM@value
 10829   0017EC  0E00               	movlw	0
 10830   0017EE  EC66  F05B         	call	_writeNVM
 10831                           
 10832                           ;../../VLCBlib_PIC/mns.c: 349:                     mode_state = MODE_NORMAL;
 10833   0017F2  0E01               	movlw	1
 10834   0017F4  0100               	movlb	0	; () banked
 10835   0017F6  6FC1               	movwf	_mode_state& (0+255),b
 10836                           
 10837                           ; BSR set to: 0
 10838                           ;../../VLCBlib_PIC/mns.c: 352:                     sendMessage2(OPC_NNACK, nn.bytes.hi, 
      +                          nn.bytes.lo);
 10839   0017F8  C0B4  F0A5         	movff	_nn+1,sendMessage2@data1
 10840   0017FC  C0B3  F0A6         	movff	_nn,sendMessage2@data2
 10841   001800  0E52               	movlw	82
 10842   001802  ECE3  F05E         	call	_sendMessage2
 10843                           
 10844                           ;../../VLCBlib_PIC/mns.c: 353:                     mnsDiagnostics[0x04].asUint++;
 10845   001806  0101               	movlb	1	; () banked
 10846   001808  4BA2               	infsnz	(_mnsDiagnostics+8)& (0+255),f,b
 10847   00180A  2BA3               	incf	(_mnsDiagnostics+9)& (0+255),f,b
 10848   00180C                     l22812:
 10849                           
 10850                           ;../../VLCBlib_PIC/mns.c: 355:                     setLEDsByMode();
 10851   00180C  ECB4  F05F         	call	_setLEDsByMode	;wreg free
 10852   001810                     l22814:
 10853                           
 10854                           ;../../VLCBlib_PIC/mns.c: 357:                 return PROCESSED;
 10855   001810  0E01               	movlw	1
 10856   001812  0012               	return	
 10857   001814                     l22818:
 10858                           
 10859                           ; BSR set to: 2
 10860                           ;../../VLCBlib_PIC/mns.c: 359:                 sendMessage7(OPC_PARAMS, MANU_MERG, 'e',
 10861   001814  0EA5               	movlw	165
 10862   001816  0101               	movlb	1	; () banked
 10863   001818  6FBD               	movwf	sendMessage7@data1& (0+255),b
 10864   00181A  0E65               	movlw	101
 10865   00181C  6FBE               	movwf	sendMessage7@data2& (0+255),b
 10866   00181E  0E20               	movlw	32
 10867   001820  6FBF               	movwf	sendMessage7@data3& (0+255),b
 10868   001822  0EFF               	movlw	255
 10869   001824  6FC0               	movwf	sendMessage7@data4& (0+255),b
 10870   001826  0E14               	movlw	20
 10871   001828  6FC1               	movwf	sendMessage7@data5& (0+255),b
 10872   00182A  0E7F               	movlw	127
 10873   00182C  6FC2               	movwf	sendMessage7@data6& (0+255),b
 10874   00182E  0E03               	movlw	3
 10875   001830  6FC3               	movwf	sendMessage7@data7& (0+255),b
 10876   001832  0EEF               	movlw	239
 10877   001834  ECFB  F05E         	call	_sendMessage7
 10878   001838  D7EB               	goto	l22814
 10879   00183A                     l22824:
 10880                           
 10881                           ; BSR set to: 2
 10882                           ;../../VLCBlib_PIC/mns.c: 364:                 sendMessage7(OPC_NAME, name[0], name[1], 
      +                          name[2], name[3],
 10883   00183A  0E48               	movlw	72
 10884   00183C  6EF6               	movwf	tblptrl,c
 10885   00183E                     	if	1	;There is more than 1 active tblptr byte
 10886   00183E  0E08               	movlw	8
 10887   001840  6EF7               	movwf	tblptrh,c
 10888   001842                     	endif
 10889   001842                     	if	1	;There are 3 active tblptr bytes
 10890   001842  0E00               	movlw	0
 10891   001844  6EF8               	movwf	tblptru,c
 10892   001846                     	endif
 10893   001846  0008               	tblrd		*
 10894   001848  CFF5 F1BD          	movff	tablat,sendMessage7@data1
 10895   00184C  0E49               	movlw	73
 10896   00184E  6EF6               	movwf	tblptrl,c
 10897   001850  0E08               	movlw	8
 10898   001852  6EF7               	movwf	tblptrh,c
 10899   001854  0E00               	movlw	0
 10900   001856  6EF8               	movwf	tblptru,c
 10901   001858  0008               	tblrd		*
 10902   00185A  CFF5 F1BE          	movff	tablat,sendMessage7@data2
 10903   00185E  0E4A               	movlw	74
 10904   001860  6EF6               	movwf	tblptrl,c
 10905   001862  0E08               	movlw	8
 10906   001864  6EF7               	movwf	tblptrh,c
 10907   001866  0E00               	movlw	0
 10908   001868  6EF8               	movwf	tblptru,c
 10909   00186A  0008               	tblrd		*
 10910   00186C  CFF5 F1BF          	movff	tablat,sendMessage7@data3
 10911   001870  0E4B               	movlw	75
 10912   001872  6EF6               	movwf	tblptrl,c
 10913   001874  0E08               	movlw	8
 10914   001876  6EF7               	movwf	tblptrh,c
 10915   001878  0E00               	movlw	0
 10916   00187A  6EF8               	movwf	tblptru,c
 10917   00187C  0008               	tblrd		*
 10918   00187E  CFF5 F1C0          	movff	tablat,sendMessage7@data4
 10919   001882  0E4C               	movlw	76
 10920   001884  6EF6               	movwf	tblptrl,c
 10921   001886  0E08               	movlw	8
 10922   001888  6EF7               	movwf	tblptrh,c
 10923   00188A  0E00               	movlw	0
 10924   00188C  6EF8               	movwf	tblptru,c
 10925   00188E  0008               	tblrd		*
 10926   001890  CFF5 F1C1          	movff	tablat,sendMessage7@data5
 10927   001894  0E4D               	movlw	77
 10928   001896  6EF6               	movwf	tblptrl,c
 10929   001898  0E08               	movlw	8
 10930   00189A  6EF7               	movwf	tblptrh,c
 10931   00189C  0E00               	movlw	0
 10932   00189E  6EF8               	movwf	tblptru,c
 10933   0018A0  0008               	tblrd		*
 10934   0018A2  CFF5 F1C2          	movff	tablat,sendMessage7@data6
 10935   0018A6  0E4E               	movlw	78
 10936   0018A8  6EF6               	movwf	tblptrl,c
 10937   0018AA  0E08               	movlw	8
 10938   0018AC  6EF7               	movwf	tblptrh,c
 10939   0018AE  0E00               	movlw	0
 10940   0018B0  6EF8               	movwf	tblptru,c
 10941   0018B2  0008               	tblrd		*
 10942   0018B4  CFF5 F1C3          	movff	tablat,sendMessage7@data7
 10943   0018B8  0EE2               	movlw	226
 10944   0018BA  ECFB  F05E         	call	_sendMessage7
 10945   0018BE  D7A8               	goto	l22814
 10946   0018C0                     l22830:
 10947                           
 10948                           ; BSR set to: 2
 10949                           ;../../VLCBlib_PIC/mns.c: 368:                 sendMessage5(OPC_PNN, 0,0, MANU_MERG, MTY
      +                          P_CANMIO, getParameterFlags());
 10950   0018C0  0E00               	movlw	0
 10951   0018C2  0101               	movlb	1	; () banked
 10952   0018C4  6FBD               	movwf	sendMessage5@data1& (0+255),b
 10953   0018C6  0E00               	movlw	0
 10954   0018C8  6FBE               	movwf	sendMessage5@data2& (0+255),b
 10955   0018CA  0EA5               	movlw	165
 10956   0018CC  6FBF               	movwf	sendMessage5@data3& (0+255),b
 10957   0018CE  0E20               	movlw	32
 10958   0018D0  6FC0               	movwf	sendMessage5@data4& (0+255),b
 10959   0018D2  ECEF  F05A         	call	_getParameterFlags	;wreg free
 10960   0018D6  0101               	movlb	1	; () banked
 10961   0018D8  6FC1               	movwf	sendMessage5@data5& (0+255),b
 10962   0018DA  0EB6               	movlw	182
 10963   0018DC  EC13  F05F         	call	_sendMessage5
 10964   0018E0  D797               	goto	l22814
 10965   0018E2                     l22838:
 10966                           
 10967                           ; BSR set to: 0
 10968   0018E2  0101               	movlb	1	; () banked
 10969   0018E4  EE20 F001          	lfsr	2,1
 10970   0018E8  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 10971   0018EA  26D9               	addwf	fsr2l,f,c
 10972   0018EC  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 10973   0018EE  22DA               	addwfc	fsr2h,f,c
 10974   0018F0  50DF               	movf	indf2,w,c
 10975   0018F2  0102               	movlb	2	; () banked
 10976   0018F4  6FC4               	movwf	??_mnsProcessMessage& (0+255),b
 10977   0018F6  6BC5               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 10978                           
 10979                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10980                           ; Switch size 1, requested type "simple"
 10981                           ; Number of cases is 1, Range of values is 0 to 0
 10982                           ; switch strategies available:
 10983                           ; Name         Instructions Cycles
 10984                           ; simple_byte            4     3 (average)
 10985                           ;	Chosen strategy is simple_byte
 10986   0018F8  51C5               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 10987   0018FA  0A00               	xorlw	0	; case 0
 10988   0018FC  A4D8               	btfss	status,2,c
 10989   0018FE  D00D               	goto	l22840
 10990                           
 10991                           ; BSR set to: 2
 10992                           ; Switch size 1, requested type "simple"
 10993                           ; Number of cases is 4, Range of values is 13 to 66
 10994                           ; switch strategies available:
 10995                           ; Name         Instructions Cycles
 10996                           ; simple_byte           13     7 (average)
 10997                           ;	Chosen strategy is simple_byte
 10998   001900  51C4               	movf	??_mnsProcessMessage& (0+255),w,b
 10999   001902  0A0D               	xorlw	13	; case 13
 11000   001904  B4D8               	btfsc	status,2,c
 11001   001906  D7DC               	goto	l22830
 11002   001908  0A1D               	xorlw	29	; case 16
 11003   00190A  B4D8               	btfsc	status,2,c
 11004   00190C  D783               	goto	l22818
 11005   00190E  0A01               	xorlw	1	; case 17
 11006   001910  B4D8               	btfsc	status,2,c
 11007   001912  D793               	goto	l22824
 11008   001914  0A53               	xorlw	83	; case 66
 11009   001916  B4D8               	btfsc	status,2,c
 11010   001918  D72B               	goto	l22796
 11011   00191A                     l22840:
 11012                           
 11013                           ;../../VLCBlib_PIC/mns.c: 373:         return NOT_PROCESSED;
 11014   00191A  0E00               	movlw	0
 11015   00191C  0012               	return	
 11016   00191E                     l22844:
 11017                           
 11018                           ; BSR set to: 2
 11019                           ;../../VLCBlib_PIC/mns.c: 378:             sendMessage5(OPC_PNN, nn.bytes.hi,nn.bytes.lo
      +                          , MANU_MERG, MTYP_CANMIO, getParameterFlags());
 11020   00191E  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 11021   001922  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 11022   001926  0EA5               	movlw	165
 11023   001928  0101               	movlb	1	; () banked
 11024   00192A  6FBF               	movwf	sendMessage5@data3& (0+255),b
 11025   00192C  0E20               	movlw	32
 11026   00192E  6FC0               	movwf	sendMessage5@data4& (0+255),b
 11027   001930  ECEF  F05A         	call	_getParameterFlags	;wreg free
 11028   001934  0101               	movlb	1	; () banked
 11029   001936  6FC1               	movwf	sendMessage5@data5& (0+255),b
 11030   001938  0EB6               	movlw	182
 11031   00193A  EC13  F05F         	call	_sendMessage5
 11032   00193E  D768               	goto	l22814
 11033   001940                     l22850:
 11034                           
 11035                           ; BSR set to: 2
 11036                           ;../../VLCBlib_PIC/mns.c: 381:             if (m->len < 4) {
 11037   001940  C1F4  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11038   001944  C1F5  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11039   001948  0E04               	movlw	4
 11040   00194A  60DF               	cpfslt	indf2,c
 11041   00194C  D00F               	goto	l22858
 11042                           
 11043                           ; BSR set to: 2
 11044                           ;../../VLCBlib_PIC/mns.c: 382:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11045   00194E  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 11046   001952  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 11047   001956  0E76               	movlw	118
 11048   001958  0101               	movlb	1	; () banked
 11049   00195A  6FBF               	movwf	sendMessage5@data3& (0+255),b
 11050   00195C  0E01               	movlw	1
 11051   00195E  6FC0               	movwf	sendMessage5@data4& (0+255),b
 11052   001960  0E01               	movlw	1
 11053   001962  6FC1               	movwf	sendMessage5@data5& (0+255),b
 11054   001964  0EAF               	movlw	175
 11055   001966  EC13  F05F         	call	_sendMessage5
 11056   00196A  D752               	goto	l22814
 11057   00196C                     l22858:
 11058                           
 11059                           ; BSR set to: 2
 11060                           ;../../VLCBlib_PIC/mns.c: 385:             if ((m->bytes[0] == 0) && (m->bytes[1] == 0))
      +                           {
 11061   00196C  0101               	movlb	1	; () banked
 11062   00196E  EE20 F002          	lfsr	2,2
 11063   001972  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11064   001974  26D9               	addwf	fsr2l,f,c
 11065   001976  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11066   001978  22DA               	addwfc	fsr2h,f,c
 11067   00197A  50DF               	movf	indf2,w,c
 11068   00197C  A4D8               	btfss	status,2,c
 11069   00197E  D033               	goto	l22886
 11070                           
 11071                           ; BSR set to: 1
 11072   001980  EE20 F003          	lfsr	2,3
 11073   001984  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11074   001986  26D9               	addwf	fsr2l,f,c
 11075   001988  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11076   00198A  22DA               	addwfc	fsr2h,f,c
 11077   00198C  50DF               	movf	indf2,w,c
 11078   00198E  A4D8               	btfss	status,2,c
 11079   001990  D02A               	goto	l22886
 11080                           
 11081                           ; BSR set to: 1
 11082                           ;../../VLCBlib_PIC/mns.c: 386:                 newMode = m->bytes[2];
 11083   001992  EE20 F004          	lfsr	2,4
 11084   001996  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11085   001998  26D9               	addwf	fsr2l,f,c
 11086   00199A  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11087   00199C  22DA               	addwfc	fsr2h,f,c
 11088   00199E  50DF               	movf	indf2,w,c
 11089   0019A0  6FF9               	movwf	mnsProcessMessage@newMode& (0+255),b
 11090                           
 11091                           ; BSR set to: 1
 11092                           ;../../VLCBlib_PIC/mns.c: 388:                 if (newMode == MODE_HEARTBEAT_ON) {
 11093   0019A2  0E0C               	movlw	12
 11094   0019A4  19F9               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 11095   0019A6  A4D8               	btfss	status,2,c
 11096   0019A8  D002               	goto	l22874
 11097                           
 11098                           ; BSR set to: 1
 11099                           ;../../VLCBlib_PIC/mns.c: 389:                     mode_flags |= 4;
 11100   0019AA  8579               	bsf	_mode_flags& (0+255),2,b
 11101   0019AC  D731               	goto	l22814
 11102   0019AE                     l22874:
 11103                           
 11104                           ; BSR set to: 1
 11105   0019AE  0E0D               	movlw	13
 11106   0019B0  19F9               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 11107   0019B2  A4D8               	btfss	status,2,c
 11108   0019B4  D018               	goto	l22886
 11109                           
 11110                           ; BSR set to: 1
 11111                           ;../../VLCBlib_PIC/mns.c: 393:                     mode_flags &= ~4;
 11112   0019B6  9579               	bcf	_mode_flags& (0+255),2,b
 11113   0019B8  D72B               	goto	l22814
 11114   0019BA                     l22884:
 11115                           
 11116                           ; BSR set to: 0
 11117   0019BA  0101               	movlb	1	; () banked
 11118   0019BC  EE20 F001          	lfsr	2,1
 11119   0019C0  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11120   0019C2  26D9               	addwf	fsr2l,f,c
 11121   0019C4  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11122   0019C6  22DA               	addwfc	fsr2h,f,c
 11123   0019C8  50DF               	movf	indf2,w,c
 11124   0019CA  0102               	movlb	2	; () banked
 11125   0019CC  6FC4               	movwf	??_mnsProcessMessage& (0+255),b
 11126   0019CE  6BC5               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11127                           
 11128                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11129                           ; Switch size 1, requested type "simple"
 11130                           ; Number of cases is 1, Range of values is 0 to 0
 11131                           ; switch strategies available:
 11132                           ; Name         Instructions Cycles
 11133                           ; simple_byte            4     3 (average)
 11134                           ;	Chosen strategy is simple_byte
 11135   0019D0  51C5               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 11136   0019D2  0A00               	xorlw	0	; case 0
 11137   0019D4  A4D8               	btfss	status,2,c
 11138   0019D6  D007               	goto	l22886
 11139                           
 11140                           ; BSR set to: 2
 11141                           ; Switch size 1, requested type "simple"
 11142                           ; Number of cases is 2, Range of values is 13 to 118
 11143                           ; switch strategies available:
 11144                           ; Name         Instructions Cycles
 11145                           ; simple_byte            7     4 (average)
 11146                           ;	Chosen strategy is simple_byte
 11147   0019D8  51C4               	movf	??_mnsProcessMessage& (0+255),w,b
 11148   0019DA  0A0D               	xorlw	13	; case 13
 11149   0019DC  B4D8               	btfsc	status,2,c
 11150   0019DE  D79F               	goto	l22844
 11151   0019E0  0A7B               	xorlw	123	; case 118
 11152   0019E2  B4D8               	btfsc	status,2,c
 11153   0019E4  D7AD               	goto	l22850
 11154   0019E6                     l22886:
 11155                           
 11156                           ;../../VLCBlib_PIC/mns.c: 402:     if (m->len < 3) {
 11157   0019E6  C1F4  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11158   0019EA  C1F5  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11159   0019EE  0E03               	movlw	3
 11160   0019F0  60DF               	cpfslt	indf2,c
 11161   0019F2  D001               	goto	l22892
 11162   0019F4  D792               	goto	l22840
 11163   0019F6                     l22892:
 11164                           
 11165                           ;../../VLCBlib_PIC/mns.c: 406:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED;
 11166   0019F6  0101               	movlb	1	; () banked
 11167   0019F8  EE20 F002          	lfsr	2,2
 11168   0019FC  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11169   0019FE  26D9               	addwf	fsr2l,f,c
 11170   001A00  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11171   001A02  22DA               	addwfc	fsr2h,f,c
 11172   001A04  50DE               	movf	postinc2,w,c
 11173   001A06  0100               	movlb	0	; () banked
 11174   001A08  19B4               	xorwf	(_nn+1)& (0+255),w,b
 11175   001A0A  A4D8               	btfss	status,2,c
 11176   001A0C  D786               	goto	l22840
 11177                           
 11178                           ; BSR set to: 0
 11179                           ;../../VLCBlib_PIC/mns.c: 407:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED;
 11180   001A0E  0101               	movlb	1	; () banked
 11181   001A10  EE20 F003          	lfsr	2,3
 11182   001A14  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11183   001A16  26D9               	addwf	fsr2l,f,c
 11184   001A18  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11185   001A1A  22DA               	addwfc	fsr2h,f,c
 11186   001A1C  0100               	movlb	0	; () banked
 11187   001A1E  51B3               	movf	_nn& (0+255),w,b
 11188   001A20  18DE               	xorwf	postinc2,w,c
 11189   001A22  A4D8               	btfss	status,2,c
 11190   001A24  D77A               	goto	l22840
 11191   001A26  EF23  F011         	goto	l23106
 11192   001A2A                     l22904:
 11193                           
 11194                           ; BSR set to: 2
 11195                           ;../../VLCBlib_PIC/mns.c: 411:             if (m->len < 4) {
 11196   001A2A  C1F4  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11197   001A2E  C1F5  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11198   001A32  0E04               	movlw	4
 11199   001A34  60DF               	cpfslt	indf2,c
 11200   001A36  D00F               	goto	l22912
 11201                           
 11202                           ; BSR set to: 2
 11203                           ;../../VLCBlib_PIC/mns.c: 412:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQNPN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11204   001A38  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 11205   001A3C  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 11206   001A40  0E73               	movlw	115
 11207   001A42  0101               	movlb	1	; () banked
 11208   001A44  6FBF               	movwf	sendMessage5@data3& (0+255),b
 11209   001A46  0E01               	movlw	1
 11210   001A48  6FC0               	movwf	sendMessage5@data4& (0+255),b
 11211   001A4A  0E01               	movlw	1
 11212   001A4C  6FC1               	movwf	sendMessage5@data5& (0+255),b
 11213   001A4E  0EAF               	movlw	175
 11214   001A50  EC13  F05F         	call	_sendMessage5
 11215   001A54  D6DD               	goto	l22814
 11216   001A56                     l22912:
 11217                           
 11218                           ; BSR set to: 2
 11219                           ;../../VLCBlib_PIC/mns.c: 415:             if (m->bytes[2] > 20) {
 11220   001A56  0101               	movlb	1	; () banked
 11221   001A58  EE20 F004          	lfsr	2,4
 11222   001A5C  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11223   001A5E  26D9               	addwf	fsr2l,f,c
 11224   001A60  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11225   001A62  22DA               	addwfc	fsr2h,f,c
 11226   001A64  0E14               	movlw	20
 11227   001A66  64DF               	cpfsgt	indf2,c
 11228   001A68  D019               	goto	l22920
 11229                           
 11230                           ; BSR set to: 1
 11231                           ;../../VLCBlib_PIC/mns.c: 416:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, CMDERR_INV_PARAM_IDX);
 11232   001A6A  C0B4  F0A5         	movff	_nn+1,sendMessage3@data1
 11233   001A6E  C0B3  F0A6         	movff	_nn,sendMessage3@data2
 11234   001A72  0E09               	movlw	9
 11235   001A74  0100               	movlb	0	; () banked
 11236   001A76  6FA7               	movwf	sendMessage3@data3& (0+255),b
 11237   001A78  0E6F               	movlw	111
 11238   001A7A  ECCB  F05E         	call	_sendMessage3
 11239                           
 11240                           ;../../VLCBlib_PIC/mns.c: 417:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQNPN, SERVICE_ID_MNS, CMDERR_INV_PARAM_IDX);
 11241   001A7E  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 11242   001A82  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 11243   001A86  0E73               	movlw	115
 11244   001A88  0101               	movlb	1	; () banked
 11245   001A8A  6FBF               	movwf	sendMessage5@data3& (0+255),b
 11246   001A8C  0E01               	movlw	1
 11247   001A8E  6FC0               	movwf	sendMessage5@data4& (0+255),b
 11248   001A90  0E09               	movlw	9
 11249   001A92  6FC1               	movwf	sendMessage5@data5& (0+255),b
 11250   001A94  0EAF               	movlw	175
 11251   001A96  EC13  F05F         	call	_sendMessage5
 11252   001A9A  D6BA               	goto	l22814
 11253   001A9C                     l22920:
 11254                           
 11255                           ; BSR set to: 1
 11256                           ;../../VLCBlib_PIC/mns.c: 420:             i = getParameter(m->bytes[2]);
 11257   001A9C  EE20 F004          	lfsr	2,4
 11258   001AA0  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11259   001AA2  26D9               	addwf	fsr2l,f,c
 11260   001AA4  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11261   001AA6  22DA               	addwfc	fsr2h,f,c
 11262   001AA8  50DF               	movf	indf2,w,c
 11263   001AAA  EC25  F043         	call	_getParameter
 11264   001AAE  0101               	movlb	1	; () banked
 11265   001AB0  6FF6               	movwf	mnsProcessMessage@i& (0+255),b
 11266                           
 11267                           ; BSR set to: 1
 11268                           ;../../VLCBlib_PIC/mns.c: 421:             sendMessage4(OPC_PARAN, nn.bytes.hi, nn.bytes
      +                          .lo, m->bytes[2], i);
 11269   001AB2  C0B4  F0A5         	movff	_nn+1,sendMessage4@data1
 11270   001AB6  C0B3  F0A6         	movff	_nn,sendMessage4@data2
 11271   001ABA  EE20 F004          	lfsr	2,4
 11272   001ABE  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11273   001AC0  26D9               	addwf	fsr2l,f,c
 11274   001AC2  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11275   001AC4  22DA               	addwfc	fsr2h,f,c
 11276   001AC6  50DF               	movf	indf2,w,c
 11277   001AC8  0100               	movlb	0	; () banked
 11278   001ACA  6FA7               	movwf	sendMessage4@data3& (0+255),b
 11279   001ACC  C1F6  F0A8         	movff	mnsProcessMessage@i,sendMessage4@data4
 11280   001AD0  0E9B               	movlw	155
 11281   001AD2  EC87  F05F         	call	_sendMessage4
 11282                           
 11283                           ;../../VLCBlib_PIC/mns.c: 422:             if (m->bytes[2] == 0) {
 11284   001AD6  0101               	movlb	1	; () banked
 11285   001AD8  EE20 F004          	lfsr	2,4
 11286   001ADC  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11287   001ADE  26D9               	addwf	fsr2l,f,c
 11288   001AE0  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11289   001AE2  22DA               	addwfc	fsr2h,f,c
 11290   001AE4  50DF               	movf	indf2,w,c
 11291   001AE6  A4D8               	btfss	status,2,c
 11292   001AE8  D693               	goto	l22814
 11293                           
 11294                           ; BSR set to: 1
 11295                           ;../../VLCBlib_PIC/mns.c: 423:                 startTimedResponse(7, findServiceIndex(SE
      +                          RVICE_ID_MNS), mnsTRrqnpnCallback);
 11296   001AEA  0E01               	movlw	1
 11297   001AEC  EC02  F056         	call	_findServiceIndex
 11298   001AF0  0100               	movlb	0	; () banked
 11299   001AF2  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 11300   001AF4  0E36               	movlw	low _mnsTRrqnpnCallback
 11301   001AF6  6F92               	movwf	startTimedResponse@callback& (0+255),b
 11302   001AF8  0EBD               	movlw	high _mnsTRrqnpnCallback
 11303   001AFA  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 11304   001AFC  0E07               	movlw	7
 11305   001AFE  ECF7  F05C         	call	_startTimedResponse
 11306   001B02  D686               	goto	l22814
 11307   001B04                     l1867:
 11308                           
 11309                           ; BSR set to: 2
 11310                           ;../../VLCBlib_PIC/mns.c: 427:             previousNN.word = nn.word;
 11311   001B04  C0B3  F174         	movff	_nn,_previousNN
 11312   001B08  C0B4  F175         	movff	_nn+1,_previousNN+1
 11313                           
 11314                           ; BSR set to: 2
 11315                           ;../../VLCBlib_PIC/mns.c: 428:             factoryReset();
 11316   001B0C  ECB2  F042         	call	_factoryReset	;wreg free
 11317                           
 11318                           ;../../VLCBlib_PIC/mns.c: 429:             if (previousNN.word != 0) {
 11319   001B10  0101               	movlb	1	; () banked
 11320   001B12  5174               	movf	_previousNN& (0+255),w,b
 11321   001B14  1175               	iorwf	(_previousNN+1)& (0+255),w,b
 11322   001B16  B4D8               	btfsc	status,2,c
 11323   001B18  D67B               	goto	l22814
 11324                           
 11325                           ; BSR set to: 1
 11326                           ;../../VLCBlib_PIC/mns.c: 430:                 sendMessage2(OPC_NNREL, previousNN.bytes.
      +                          hi, previousNN.bytes.lo);
 11327   001B1A  C175  F0A5         	movff	_previousNN+1,sendMessage2@data1
 11328   001B1E  C174  F0A6         	movff	_previousNN,sendMessage2@data2
 11329   001B22  0E51               	movlw	81
 11330   001B24  ECE3  F05E         	call	_sendMessage2
 11331   001B28  D673               	goto	l22814
 11332   001B2A                     l22942:
 11333                           
 11334                           ; BSR set to: 2
 11335                           ;../../VLCBlib_PIC/mns.c: 434:             if (m->len < 5) {
 11336   001B2A  C1F4  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11337   001B2E  C1F5  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11338   001B32  0E05               	movlw	5
 11339   001B34  60DF               	cpfslt	indf2,c
 11340   001B36  D00F               	goto	l22950
 11341                           
 11342                           ; BSR set to: 2
 11343                           ;../../VLCBlib_PIC/mns.c: 435:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RDGN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11344   001B38  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 11345   001B3C  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 11346   001B40  0E87               	movlw	135
 11347   001B42  0101               	movlb	1	; () banked
 11348   001B44  6FBF               	movwf	sendMessage5@data3& (0+255),b
 11349   001B46  0E01               	movlw	1
 11350   001B48  6FC0               	movwf	sendMessage5@data4& (0+255),b
 11351   001B4A  0E01               	movlw	1
 11352   001B4C  6FC1               	movwf	sendMessage5@data5& (0+255),b
 11353   001B4E  0EAF               	movlw	175
 11354   001B50  EC13  F05F         	call	_sendMessage5
 11355   001B54  D65D               	goto	l22814
 11356   001B56                     l22950:
 11357                           
 11358                           ; BSR set to: 2
 11359                           ;../../VLCBlib_PIC/mns.c: 438:             if (m->bytes[2] == 0) {
 11360   001B56  0101               	movlb	1	; () banked
 11361   001B58  EE20 F004          	lfsr	2,4
 11362   001B5C  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11363   001B5E  26D9               	addwf	fsr2l,f,c
 11364   001B60  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11365   001B62  22DA               	addwfc	fsr2h,f,c
 11366   001B64  50DF               	movf	indf2,w,c
 11367   001B66  A4D8               	btfss	status,2,c
 11368   001B68  D00B               	goto	l22954
 11369                           
 11370                           ; BSR set to: 1
 11371                           ;../../VLCBlib_PIC/mns.c: 440:                 startTimedResponse(4, 0, mnsTRallDiagnost
      +                          icsCallback);
 11372   001B6A  0E00               	movlw	0
 11373   001B6C  0100               	movlb	0	; () banked
 11374   001B6E  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 11375   001B70  0E7E               	movlw	low _mnsTRallDiagnosticsCallback
 11376   001B72  6F92               	movwf	startTimedResponse@callback& (0+255),b
 11377   001B74  0E84               	movlw	high _mnsTRallDiagnosticsCallback
 11378   001B76  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 11379   001B78  0E04               	movlw	4
 11380   001B7A  ECF7  F05C         	call	_startTimedResponse
 11381                           
 11382                           ;../../VLCBlib_PIC/mns.c: 441:             } else {
 11383   001B7E  D648               	goto	l22814
 11384   001B80                     l22954:
 11385                           
 11386                           ; BSR set to: 1
 11387                           ;../../VLCBlib_PIC/mns.c: 443:                 if (m->bytes[2] > 9) {
 11388   001B80  EE20 F004          	lfsr	2,4
 11389   001B84  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11390   001B86  26D9               	addwf	fsr2l,f,c
 11391   001B88  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11392   001B8A  22DA               	addwfc	fsr2h,f,c
 11393   001B8C  0E09               	movlw	9
 11394   001B8E  64DF               	cpfsgt	indf2,c
 11395   001B90  D00E               	goto	l22962
 11396                           
 11397                           ; BSR set to: 1
 11398                           ;../../VLCBlib_PIC/mns.c: 444:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_SERVICE);
 11399   001B92  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 11400   001B96  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 11401   001B9A  0E87               	movlw	135
 11402   001B9C  6FBF               	movwf	sendMessage5@data3& (0+255),b
 11403   001B9E  0E01               	movlw	1
 11404   001BA0  6FC0               	movwf	sendMessage5@data4& (0+255),b
 11405   001BA2  0EFC               	movlw	252
 11406   001BA4  6FC1               	movwf	sendMessage5@data5& (0+255),b
 11407   001BA6  0EAF               	movlw	175
 11408   001BA8  EC13  F05F         	call	_sendMessage5
 11409   001BAC  D631               	goto	l22814
 11410   001BAE                     l22962:
 11411                           
 11412                           ; BSR set to: 1
 11413                           ;../../VLCBlib_PIC/mns.c: 447:                 if (services[m->bytes[2]-1]->getDiagnosti
      +                          c == ((void*)0)) {
 11414   001BAE  EE20 F004          	lfsr	2,4
 11415   001BB2  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11416   001BB4  26D9               	addwf	fsr2l,f,c
 11417   001BB6  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11418   001BB8  22DA               	addwfc	fsr2h,f,c
 11419   001BBA  50DF               	movf	indf2,w,c
 11420   001BBC  0102               	movlb	2	; () banked
 11421   001BBE  6FC4               	movwf	??_mnsProcessMessage& (0+255),b
 11422   001BC0  6BC5               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11423   001BC2  90D8               	bcf	status,0,c
 11424   001BC4  37C4               	rlcf	??_mnsProcessMessage& (0+255),f,b
 11425   001BC6  37C5               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 11426   001BC8  0EFE               	movlw	254
 11427   001BCA  25C4               	addwf	??_mnsProcessMessage& (0+255),w,b
 11428   001BCC  6FC6               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 11429   001BCE  0EFF               	movlw	255
 11430   001BD0  21C5               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 11431   001BD2  6FC7               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 11432   001BD4  0E75               	movlw	low _services
 11433   001BD6  25C6               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 11434   001BD8  6EF6               	movwf	tblptrl,c
 11435   001BDA  0EEE               	movlw	high _services
 11436   001BDC  21C7               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 11437   001BDE  6EF7               	movwf	tblptrh,c
 11438   001BE0                     	if	1	;There are 3 active tblptr bytes
 11439   001BE0  6AF8               	clrf	tblptru,c
 11440   001BE2  0E00               	movlw	low (__mediumconst shr (0+16))
 11441   001BE4  22F8               	addwfc	tblptru,f,c
 11442   001BE6                     	endif
 11443   001BE6  0009               	tblrd		*+
 11444   001BE8  CFF5 F2C8          	movff	tablat,??_mnsProcessMessage+4
 11445   001BEC  0009               	tblrd		*+
 11446   001BEE  CFF5 F2C9          	movff	tablat,??_mnsProcessMessage+5
 11447   001BF2  0E10               	movlw	16
 11448   001BF4  27C8               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 11449   001BF6  0E00               	movlw	0
 11450   001BF8  23C9               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 11451   001BFA  C2C8  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 11452   001BFE  C2C9  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 11453   001C02                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11454   001C02  6AF8               	clrf	tblptru,c
 11455   001C04                     	endif
 11456   001C04                     	if	0	;tblptru may be non-zero
 11457   001C04                     	endif
 11458   001C04  0009               	tblrd		*+
 11459   001C06  50F5               	movf	tablat,w,c
 11460   001C08  0009               	tblrd		*+
 11461   001C0A  10F5               	iorwf	tablat,w,c
 11462   001C0C  A4D8               	btfss	status,2,c
 11463   001C0E  D00E               	goto	l22966
 11464                           
 11465                           ; BSR set to: 2
 11466                           ;../../VLCBlib_PIC/mns.c: 449:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_DIAGNOSTIC);
 11467   001C10  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 11468   001C14  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 11469   001C18  0E87               	movlw	135
 11470   001C1A  0101               	movlb	1	; () banked
 11471   001C1C  6FBF               	movwf	sendMessage5@data3& (0+255),b
 11472   001C1E  0E01               	movlw	1
 11473   001C20  6FC0               	movwf	sendMessage5@data4& (0+255),b
 11474   001C22  0EFD               	movlw	253
 11475   001C24  6FC1               	movwf	sendMessage5@data5& (0+255),b
 11476   001C26  0EAF               	movlw	175
 11477   001C28  EC13  F05F         	call	_sendMessage5
 11478   001C2C                     l22966:
 11479                           
 11480                           ;../../VLCBlib_PIC/mns.c: 451:                 if (m->bytes[3] == 0) {
 11481   001C2C  0101               	movlb	1	; () banked
 11482   001C2E  EE20 F005          	lfsr	2,5
 11483   001C32  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11484   001C34  26D9               	addwf	fsr2l,f,c
 11485   001C36  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11486   001C38  22DA               	addwfc	fsr2h,f,c
 11487   001C3A  50DF               	movf	indf2,w,c
 11488   001C3C  A4D8               	btfss	status,2,c
 11489   001C3E  D011               	goto	l22976
 11490                           
 11491                           ; BSR set to: 1
 11492                           ;../../VLCBlib_PIC/mns.c: 453:                     startTimedResponse(4, m->bytes[2], mn
      +                          sTRallDiagnosticsCallback);
 11493   001C40  EE20 F004          	lfsr	2,4
 11494   001C44  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11495   001C46  26D9               	addwf	fsr2l,f,c
 11496   001C48  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11497   001C4A  22DA               	addwfc	fsr2h,f,c
 11498   001C4C  50DF               	movf	indf2,w,c
 11499   001C4E  0100               	movlb	0	; () banked
 11500   001C50  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 11501   001C52  0E7E               	movlw	low _mnsTRallDiagnosticsCallback
 11502   001C54  6F92               	movwf	startTimedResponse@callback& (0+255),b
 11503   001C56  0E84               	movlw	high _mnsTRallDiagnosticsCallback
 11504   001C58  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 11505   001C5A  0E04               	movlw	4
 11506   001C5C  ECF7  F05C         	call	_startTimedResponse
 11507   001C60  D5D7               	goto	l22814
 11508   001C62                     l22976:
 11509                           
 11510                           ; BSR set to: 1
 11511                           ;../../VLCBlib_PIC/mns.c: 456:                     DiagnosticVal * d = services[m->bytes
      +                          [2]-1]->getDiagnostic(m->bytes[3]);
 11512   001C62  EE20 F004          	lfsr	2,4
 11513   001C66  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11514   001C68  26D9               	addwf	fsr2l,f,c
 11515   001C6A  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11516   001C6C  22DA               	addwfc	fsr2h,f,c
 11517   001C6E  50DF               	movf	indf2,w,c
 11518   001C70  0102               	movlb	2	; () banked
 11519   001C72  6FC4               	movwf	??_mnsProcessMessage& (0+255),b
 11520   001C74  6BC5               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11521   001C76  90D8               	bcf	status,0,c
 11522   001C78  37C4               	rlcf	??_mnsProcessMessage& (0+255),f,b
 11523   001C7A  37C5               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 11524   001C7C  0EFE               	movlw	254
 11525   001C7E  25C4               	addwf	??_mnsProcessMessage& (0+255),w,b
 11526   001C80  6FC6               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 11527   001C82  0EFF               	movlw	255
 11528   001C84  21C5               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 11529   001C86  6FC7               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 11530   001C88  0E75               	movlw	low _services
 11531   001C8A  25C6               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 11532   001C8C  6EF6               	movwf	tblptrl,c
 11533   001C8E  0EEE               	movlw	high _services
 11534   001C90  21C7               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 11535   001C92  6EF7               	movwf	tblptrh,c
 11536   001C94                     	if	1	;There are 3 active tblptr bytes
 11537   001C94  6AF8               	clrf	tblptru,c
 11538   001C96  0E00               	movlw	low (__mediumconst shr (0+16))
 11539   001C98  22F8               	addwfc	tblptru,f,c
 11540   001C9A                     	endif
 11541   001C9A  0009               	tblrd		*+
 11542   001C9C  CFF5 F2C8          	movff	tablat,??_mnsProcessMessage+4
 11543   001CA0  0009               	tblrd		*+
 11544   001CA2  CFF5 F2C9          	movff	tablat,??_mnsProcessMessage+5
 11545   001CA6  0E10               	movlw	16
 11546   001CA8  27C8               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 11547   001CAA  0E00               	movlw	0
 11548   001CAC  23C9               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 11549   001CAE  C2C8  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 11550   001CB2  C2C9  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 11551   001CB6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11552   001CB6  6AF8               	clrf	tblptru,c
 11553   001CB8                     	endif
 11554   001CB8                     	if	0	;tblptru may be non-zero
 11555   001CB8                     	endif
 11556   001CB8  0009               	tblrd		*+
 11557   001CBA  CFF5 F2CA          	movff	tablat,??_mnsProcessMessage+6
 11558   001CBE  0009               	tblrd		*+
 11559   001CC0  CFF5 F2CB          	movff	tablat,??_mnsProcessMessage+7
 11560   001CC4  D801               	call	u24828
 11561   001CC6  D011               	goto	u24829
 11562   001CC8                     u24828:
 11563   001CC8  0005               	push	
 11564   001CCA  6EFA               	movwf	pclath,c
 11565   001CCC  51CA               	movf	(??_mnsProcessMessage+6)& (0+255),w,b
 11566   001CCE  6EFD               	movwf	tosl,c
 11567   001CD0  51CB               	movf	(??_mnsProcessMessage+7)& (0+255),w,b
 11568   001CD2  6EFE               	movwf	tosh,c
 11569   001CD4  6AFF               	clrf	tosu,c
 11570   001CD6  50FA               	movf	pclath,w,c
 11571   001CD8  0101               	movlb	1	; () banked
 11572   001CDA  EE20 F005          	lfsr	2,5
 11573   001CDE  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11574   001CE0  26D9               	addwf	fsr2l,f,c
 11575   001CE2  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11576   001CE4  22DA               	addwfc	fsr2h,f,c
 11577   001CE6  50DF               	movf	indf2,w,c
 11578   001CE8  0012               	return		;indir
 11579   001CEA                     u24829:
 11580   001CEA  C08D  F1F7         	movff	?_canGetDiagnostic,mnsProcessMessage@d
 11581   001CEE  C08E  F1F8         	movff	?_canGetDiagnostic+1,mnsProcessMessage@d+1
 11582                           
 11583                           ;../../VLCBlib_PIC/mns.c: 457:                     if (d == ((void*)0)) {
 11584   001CF2  0101               	movlb	1	; () banked
 11585   001CF4  51F7               	movf	mnsProcessMessage@d& (0+255),w,b
 11586   001CF6  11F8               	iorwf	(mnsProcessMessage@d+1)& (0+255),w,b
 11587   001CF8  A4D8               	btfss	status,2,c
 11588   001CFA  D00E               	goto	l22982
 11589                           
 11590                           ; BSR set to: 1
 11591                           ;../../VLCBlib_PIC/mns.c: 459:                         sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_DIAGNOSTIC);
 11592   001CFC  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 11593   001D00  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 11594   001D04  0E87               	movlw	135
 11595   001D06  6FBF               	movwf	sendMessage5@data3& (0+255),b
 11596   001D08  0E01               	movlw	1
 11597   001D0A  6FC0               	movwf	sendMessage5@data4& (0+255),b
 11598   001D0C  0EFD               	movlw	253
 11599   001D0E  6FC1               	movwf	sendMessage5@data5& (0+255),b
 11600   001D10  0EAF               	movlw	175
 11601   001D12  EC13  F05F         	call	_sendMessage5
 11602                           
 11603                           ;../../VLCBlib_PIC/mns.c: 460:                     } else {
 11604   001D16  D57C               	goto	l22814
 11605   001D18                     l22982:
 11606                           
 11607                           ; BSR set to: 1
 11608                           ;../../VLCBlib_PIC/mns.c: 462:                         sendMessage6(OPC_DGN, nn.bytes.hi
      +                          , nn.bytes.lo, m->bytes[2], m->bytes[3],d->asBytes.hi, d->asBytes.lo);
 11609   001D18  C0B4  F1BD         	movff	_nn+1,sendMessage6@data1
 11610   001D1C  C0B3  F1BE         	movff	_nn,sendMessage6@data2
 11611   001D20  EE20 F004          	lfsr	2,4
 11612   001D24  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11613   001D26  26D9               	addwf	fsr2l,f,c
 11614   001D28  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11615   001D2A  22DA               	addwfc	fsr2h,f,c
 11616   001D2C  50DF               	movf	indf2,w,c
 11617   001D2E  6FBF               	movwf	sendMessage6@data3& (0+255),b
 11618   001D30  EE20 F005          	lfsr	2,5
 11619   001D34  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11620   001D36  26D9               	addwf	fsr2l,f,c
 11621   001D38  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11622   001D3A  22DA               	addwfc	fsr2h,f,c
 11623   001D3C  50DF               	movf	indf2,w,c
 11624   001D3E  6FC0               	movwf	sendMessage6@data4& (0+255),b
 11625   001D40  EE20 F001          	lfsr	2,1
 11626   001D44  51F7               	movf	mnsProcessMessage@d& (0+255),w,b
 11627   001D46  26D9               	addwf	fsr2l,f,c
 11628   001D48  51F8               	movf	(mnsProcessMessage@d+1)& (0+255),w,b
 11629   001D4A  22DA               	addwfc	fsr2h,f,c
 11630   001D4C  50DF               	movf	indf2,w,c
 11631   001D4E  6FC1               	movwf	sendMessage6@data5& (0+255),b
 11632   001D50  C1F7  FFD9         	movff	mnsProcessMessage@d,fsr2l
 11633   001D54  C1F8  FFDA         	movff	mnsProcessMessage@d+1,fsr2h
 11634   001D58  50DF               	movf	indf2,w,c
 11635   001D5A  6FC2               	movwf	sendMessage6@data6& (0+255),b
 11636   001D5C  0EC7               	movlw	199
 11637   001D5E  ECB3  F05E         	call	_sendMessage6
 11638   001D62  D556               	goto	l22814
 11639   001D64                     l22988:
 11640                           
 11641                           ; BSR set to: 2
 11642                           ;../../VLCBlib_PIC/mns.c: 468:             if (m->len < 4) {
 11643   001D64  C1F4  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11644   001D68  C1F5  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11645   001D6C  0E04               	movlw	4
 11646   001D6E  60DF               	cpfslt	indf2,c
 11647   001D70  D00F               	goto	l22996
 11648                           
 11649                           ; BSR set to: 2
 11650                           ;../../VLCBlib_PIC/mns.c: 469:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQSD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11651   001D72  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 11652   001D76  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 11653   001D7A  0E78               	movlw	120
 11654   001D7C  0101               	movlb	1	; () banked
 11655   001D7E  6FBF               	movwf	sendMessage5@data3& (0+255),b
 11656   001D80  0E01               	movlw	1
 11657   001D82  6FC0               	movwf	sendMessage5@data4& (0+255),b
 11658   001D84  0E01               	movlw	1
 11659   001D86  6FC1               	movwf	sendMessage5@data5& (0+255),b
 11660   001D88  0EAF               	movlw	175
 11661   001D8A  EC13  F05F         	call	_sendMessage5
 11662   001D8E  D540               	goto	l22814
 11663   001D90                     l22996:
 11664                           
 11665                           ; BSR set to: 2
 11666                           ;../../VLCBlib_PIC/mns.c: 472:             if (m->bytes[2] == 0) {
 11667   001D90  0101               	movlb	1	; () banked
 11668   001D92  EE20 F004          	lfsr	2,4
 11669   001D96  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11670   001D98  26D9               	addwf	fsr2l,f,c
 11671   001D9A  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11672   001D9C  22DA               	addwfc	fsr2h,f,c
 11673   001D9E  50DF               	movf	indf2,w,c
 11674   001DA0  A4D8               	btfss	status,2,c
 11675   001DA2  D018               	goto	l23002
 11676                           
 11677                           ; BSR set to: 1
 11678                           ;../../VLCBlib_PIC/mns.c: 474:                 sendMessage5(OPC_SD, nn.bytes.hi, nn.byte
      +                          s.lo, 0, 0, 9);
 11679   001DA4  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 11680   001DA8  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 11681   001DAC  0E00               	movlw	0
 11682   001DAE  6FBF               	movwf	sendMessage5@data3& (0+255),b
 11683   001DB0  0E00               	movlw	0
 11684   001DB2  6FC0               	movwf	sendMessage5@data4& (0+255),b
 11685   001DB4  0E09               	movlw	9
 11686   001DB6  6FC1               	movwf	sendMessage5@data5& (0+255),b
 11687   001DB8  0EAC               	movlw	172
 11688   001DBA  EC13  F05F         	call	_sendMessage5
 11689                           
 11690                           ;../../VLCBlib_PIC/mns.c: 476:                 startTimedResponse(3, SERVICE_ID_MNS, mns
      +                          TRserviceDiscoveryCallback);
 11691   001DBE  0E01               	movlw	1
 11692   001DC0  0100               	movlb	0	; () banked
 11693   001DC2  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 11694   001DC4  0E0C               	movlw	low _mnsTRserviceDiscoveryCallback
 11695   001DC6  6F92               	movwf	startTimedResponse@callback& (0+255),b
 11696   001DC8  0EA4               	movlw	high _mnsTRserviceDiscoveryCallback
 11697   001DCA  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 11698   001DCC  0E03               	movlw	3
 11699   001DCE  ECF7  F05C         	call	_startTimedResponse
 11700                           
 11701                           ;../../VLCBlib_PIC/mns.c: 477:             } else if (m->bytes[2] > 9) {
 11702   001DD2  D51E               	goto	l22814
 11703   001DD4                     l23002:
 11704                           
 11705                           ; BSR set to: 1
 11706   001DD4  EE20 F004          	lfsr	2,4
 11707   001DD8  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11708   001DDA  26D9               	addwf	fsr2l,f,c
 11709   001DDC  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11710   001DDE  22DA               	addwfc	fsr2h,f,c
 11711   001DE0  0E09               	movlw	9
 11712   001DE2  64DF               	cpfsgt	indf2,c
 11713   001DE4  D00E               	goto	l23012
 11714                           
 11715                           ; BSR set to: 1
 11716                           ;../../VLCBlib_PIC/mns.c: 478:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQSD, SERVICE_ID_MNS, GRSP_INVALID_SERVICE);
 11717   001DE6  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 11718   001DEA  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 11719   001DEE  0E78               	movlw	120
 11720   001DF0  6FBF               	movwf	sendMessage5@data3& (0+255),b
 11721   001DF2  0E01               	movlw	1
 11722   001DF4  6FC0               	movwf	sendMessage5@data4& (0+255),b
 11723   001DF6  0EFC               	movlw	252
 11724   001DF8  6FC1               	movwf	sendMessage5@data5& (0+255),b
 11725   001DFA  0EAF               	movlw	175
 11726   001DFC  EC13  F05F         	call	_sendMessage5
 11727   001E00  D507               	goto	l22814
 11728   001E02                     l23012:
 11729                           
 11730                           ; BSR set to: 1
 11731                           ;../../VLCBlib_PIC/mns.c: 482:                 if (services[m->bytes[2]-1]->getESDdata =
      +                          = ((void*)0)) {
 11732   001E02  EE20 F004          	lfsr	2,4
 11733   001E06  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11734   001E08  26D9               	addwf	fsr2l,f,c
 11735   001E0A  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11736   001E0C  22DA               	addwfc	fsr2h,f,c
 11737   001E0E  50DF               	movf	indf2,w,c
 11738   001E10  0102               	movlb	2	; () banked
 11739   001E12  6FC4               	movwf	??_mnsProcessMessage& (0+255),b
 11740   001E14  6BC5               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11741   001E16  90D8               	bcf	status,0,c
 11742   001E18  37C4               	rlcf	??_mnsProcessMessage& (0+255),f,b
 11743   001E1A  37C5               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 11744   001E1C  0EFE               	movlw	254
 11745   001E1E  25C4               	addwf	??_mnsProcessMessage& (0+255),w,b
 11746   001E20  6FC6               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 11747   001E22  0EFF               	movlw	255
 11748   001E24  21C5               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 11749   001E26  6FC7               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 11750   001E28  0E75               	movlw	low _services
 11751   001E2A  25C6               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 11752   001E2C  6EF6               	movwf	tblptrl,c
 11753   001E2E  0EEE               	movlw	high _services
 11754   001E30  21C7               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 11755   001E32  6EF7               	movwf	tblptrh,c
 11756   001E34                     	if	1	;There are 3 active tblptr bytes
 11757   001E34  6AF8               	clrf	tblptru,c
 11758   001E36  0E00               	movlw	low (__mediumconst shr (0+16))
 11759   001E38  22F8               	addwfc	tblptru,f,c
 11760   001E3A                     	endif
 11761   001E3A  0009               	tblrd		*+
 11762   001E3C  CFF5 F2C8          	movff	tablat,??_mnsProcessMessage+4
 11763   001E40  0009               	tblrd		*+
 11764   001E42  CFF5 F2C9          	movff	tablat,??_mnsProcessMessage+5
 11765   001E46  0E0E               	movlw	14
 11766   001E48  27C8               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 11767   001E4A  0E00               	movlw	0
 11768   001E4C  23C9               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 11769   001E4E  C2C8  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 11770   001E52  C2C9  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 11771   001E56                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11772   001E56  6AF8               	clrf	tblptru,c
 11773   001E58                     	endif
 11774   001E58                     	if	0	;tblptru may be non-zero
 11775   001E58                     	endif
 11776   001E58  0009               	tblrd		*+
 11777   001E5A  50F5               	movf	tablat,w,c
 11778   001E5C  0009               	tblrd		*+
 11779   001E5E  10F5               	iorwf	tablat,w,c
 11780   001E60  A4D8               	btfss	status,2,c
 11781   001E62  D042               	goto	l23016
 11782                           
 11783                           ; BSR set to: 2
 11784                           ;../../VLCBlib_PIC/mns.c: 483:                     sendMessage7(OPC_ESD, nn.bytes.hi, nn
      +                          .bytes.lo, m->bytes[2], services[m->bytes[2]-1]->serviceNo, 0,0,0);
 11785   001E64  C0B4  F1BD         	movff	_nn+1,sendMessage7@data1
 11786   001E68  C0B3  F1BE         	movff	_nn,sendMessage7@data2
 11787   001E6C  0101               	movlb	1	; () banked
 11788   001E6E  EE20 F004          	lfsr	2,4
 11789   001E72  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11790   001E74  26D9               	addwf	fsr2l,f,c
 11791   001E76  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11792   001E78  22DA               	addwfc	fsr2h,f,c
 11793   001E7A  50DF               	movf	indf2,w,c
 11794   001E7C  6FBF               	movwf	sendMessage7@data3& (0+255),b
 11795   001E7E  EE20 F004          	lfsr	2,4
 11796   001E82  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11797   001E84  26D9               	addwf	fsr2l,f,c
 11798   001E86  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11799   001E88  22DA               	addwfc	fsr2h,f,c
 11800   001E8A  50DF               	movf	indf2,w,c
 11801   001E8C  0102               	movlb	2	; () banked
 11802   001E8E  6FC4               	movwf	??_mnsProcessMessage& (0+255),b
 11803   001E90  6BC5               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11804   001E92  90D8               	bcf	status,0,c
 11805   001E94  37C4               	rlcf	??_mnsProcessMessage& (0+255),f,b
 11806   001E96  37C5               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 11807   001E98  0EFE               	movlw	254
 11808   001E9A  25C4               	addwf	??_mnsProcessMessage& (0+255),w,b
 11809   001E9C  6FC6               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 11810   001E9E  0EFF               	movlw	255
 11811   001EA0  21C5               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 11812   001EA2  6FC7               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 11813   001EA4  0E75               	movlw	low _services
 11814   001EA6  25C6               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 11815   001EA8  6EF6               	movwf	tblptrl,c
 11816   001EAA  0EEE               	movlw	high _services
 11817   001EAC  21C7               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 11818   001EAE  6EF7               	movwf	tblptrh,c
 11819   001EB0                     	if	1	;There are 3 active tblptr bytes
 11820   001EB0  6AF8               	clrf	tblptru,c
 11821   001EB2  0E00               	movlw	low (__mediumconst shr (0+16))
 11822   001EB4  22F8               	addwfc	tblptru,f,c
 11823   001EB6                     	endif
 11824   001EB6  0009               	tblrd		*+
 11825   001EB8  CFF5 F2C8          	movff	tablat,??_mnsProcessMessage+4
 11826   001EBC  0009               	tblrd		*+
 11827   001EBE  CFF5 F2C9          	movff	tablat,??_mnsProcessMessage+5
 11828   001EC2  C2C8  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 11829   001EC6  C2C9  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 11830   001ECA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11831   001ECA  6AF8               	clrf	tblptru,c
 11832   001ECC                     	endif
 11833   001ECC                     	if	0	;tblptru may be non-zero
 11834   001ECC                     	endif
 11835   001ECC  0008               	tblrd		*
 11836   001ECE  CFF5 F1C0          	movff	tablat,sendMessage7@data4
 11837   001ED2  0E00               	movlw	0
 11838   001ED4  0101               	movlb	1	; () banked
 11839   001ED6  6FC1               	movwf	sendMessage7@data5& (0+255),b
 11840   001ED8  0E00               	movlw	0
 11841   001EDA  6FC2               	movwf	sendMessage7@data6& (0+255),b
 11842   001EDC  0E00               	movlw	0
 11843   001EDE  6FC3               	movwf	sendMessage7@data7& (0+255),b
 11844   001EE0  0EE7               	movlw	231
 11845   001EE2  ECFB  F05E         	call	_sendMessage7
 11846                           
 11847                           ;../../VLCBlib_PIC/mns.c: 484:                 } else {
 11848   001EE6  D494               	goto	l22814
 11849   001EE8                     l23016:
 11850                           
 11851                           ; BSR set to: 2
 11852                           ;../../VLCBlib_PIC/mns.c: 485:                     sendMessage7(OPC_ESD, nn.bytes.hi, nn
      +                          .bytes.lo, m->bytes[2], services[m->bytes[2]-1]->serviceNo,
 11853   001EE8  C0B4  F1BD         	movff	_nn+1,sendMessage7@data1
 11854   001EEC  C0B3  F1BE         	movff	_nn,sendMessage7@data2
 11855   001EF0  0101               	movlb	1	; () banked
 11856   001EF2  EE20 F004          	lfsr	2,4
 11857   001EF6  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11858   001EF8  26D9               	addwf	fsr2l,f,c
 11859   001EFA  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11860   001EFC  22DA               	addwfc	fsr2h,f,c
 11861   001EFE  50DF               	movf	indf2,w,c
 11862   001F00  6FBF               	movwf	sendMessage7@data3& (0+255),b
 11863   001F02  EE20 F004          	lfsr	2,4
 11864   001F06  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11865   001F08  26D9               	addwf	fsr2l,f,c
 11866   001F0A  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11867   001F0C  22DA               	addwfc	fsr2h,f,c
 11868   001F0E  50DF               	movf	indf2,w,c
 11869   001F10  0102               	movlb	2	; () banked
 11870   001F12  6FC4               	movwf	??_mnsProcessMessage& (0+255),b
 11871   001F14  6BC5               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11872   001F16  90D8               	bcf	status,0,c
 11873   001F18  37C4               	rlcf	??_mnsProcessMessage& (0+255),f,b
 11874   001F1A  37C5               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 11875   001F1C  0EFE               	movlw	254
 11876   001F1E  25C4               	addwf	??_mnsProcessMessage& (0+255),w,b
 11877   001F20  6FC6               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 11878   001F22  0EFF               	movlw	255
 11879   001F24  21C5               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 11880   001F26  6FC7               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 11881   001F28  0E75               	movlw	low _services
 11882   001F2A  25C6               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 11883   001F2C  6EF6               	movwf	tblptrl,c
 11884   001F2E  0EEE               	movlw	high _services
 11885   001F30  21C7               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 11886   001F32  6EF7               	movwf	tblptrh,c
 11887   001F34                     	if	1	;There are 3 active tblptr bytes
 11888   001F34  6AF8               	clrf	tblptru,c
 11889   001F36  0E00               	movlw	low (__mediumconst shr (0+16))
 11890   001F38  22F8               	addwfc	tblptru,f,c
 11891   001F3A                     	endif
 11892   001F3A  0009               	tblrd		*+
 11893   001F3C  CFF5 F2C8          	movff	tablat,??_mnsProcessMessage+4
 11894   001F40  0009               	tblrd		*+
 11895   001F42  CFF5 F2C9          	movff	tablat,??_mnsProcessMessage+5
 11896   001F46  C2C8  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 11897   001F4A  C2C9  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 11898   001F4E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11899   001F4E  6AF8               	clrf	tblptru,c
 11900   001F50                     	endif
 11901   001F50                     	if	0	;tblptru may be non-zero
 11902   001F50                     	endif
 11903   001F50  0008               	tblrd		*
 11904   001F52  CFF5 F1C0          	movff	tablat,sendMessage7@data4
 11905   001F56  0101               	movlb	1	; () banked
 11906   001F58  EE20 F004          	lfsr	2,4
 11907   001F5C  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11908   001F5E  26D9               	addwf	fsr2l,f,c
 11909   001F60  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11910   001F62  22DA               	addwfc	fsr2h,f,c
 11911   001F64  50DF               	movf	indf2,w,c
 11912   001F66  0102               	movlb	2	; () banked
 11913   001F68  6FCA               	movwf	(??_mnsProcessMessage+6)& (0+255),b
 11914   001F6A  6BCB               	clrf	(??_mnsProcessMessage+7)& (0+255),b
 11915   001F6C  90D8               	bcf	status,0,c
 11916   001F6E  37CA               	rlcf	(??_mnsProcessMessage+6)& (0+255),f,b
 11917   001F70  37CB               	rlcf	(??_mnsProcessMessage+7)& (0+255),f,b
 11918   001F72  0EFE               	movlw	254
 11919   001F74  25CA               	addwf	(??_mnsProcessMessage+6)& (0+255),w,b
 11920   001F76  6FCC               	movwf	(??_mnsProcessMessage+8)& (0+255),b
 11921   001F78  0EFF               	movlw	255
 11922   001F7A  21CB               	addwfc	(??_mnsProcessMessage+7)& (0+255),w,b
 11923   001F7C  6FCD               	movwf	(??_mnsProcessMessage+9)& (0+255),b
 11924   001F7E  0E75               	movlw	low _services
 11925   001F80  25CC               	addwf	(??_mnsProcessMessage+8)& (0+255),w,b
 11926   001F82  6EF6               	movwf	tblptrl,c
 11927   001F84  0EEE               	movlw	high _services
 11928   001F86  21CD               	addwfc	(??_mnsProcessMessage+9)& (0+255),w,b
 11929   001F88  6EF7               	movwf	tblptrh,c
 11930   001F8A                     	if	1	;There are 3 active tblptr bytes
 11931   001F8A  6AF8               	clrf	tblptru,c
 11932   001F8C  0E00               	movlw	low (__mediumconst shr (0+16))
 11933   001F8E  22F8               	addwfc	tblptru,f,c
 11934   001F90                     	endif
 11935   001F90  0009               	tblrd		*+
 11936   001F92  CFF5 F2CE          	movff	tablat,??_mnsProcessMessage+10
 11937   001F96  0009               	tblrd		*+
 11938   001F98  CFF5 F2CF          	movff	tablat,??_mnsProcessMessage+11
 11939   001F9C  0E0E               	movlw	14
 11940   001F9E  27CE               	addwf	(??_mnsProcessMessage+10)& (0+255),f,b
 11941   001FA0  0E00               	movlw	0
 11942   001FA2  23CF               	addwfc	(??_mnsProcessMessage+11)& (0+255),f,b
 11943   001FA4  C2CE  FFF6         	movff	??_mnsProcessMessage+10,tblptrl
 11944   001FA8  C2CF  FFF7         	movff	??_mnsProcessMessage+11,tblptrh
 11945   001FAC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11946   001FAC  6AF8               	clrf	tblptru,c
 11947   001FAE                     	endif
 11948   001FAE                     	if	0	;tblptru may be non-zero
 11949   001FAE                     	endif
 11950   001FAE  0009               	tblrd		*+
 11951   001FB0  CFF5 F2D0          	movff	tablat,??_mnsProcessMessage+12
 11952   001FB4  0009               	tblrd		*+
 11953   001FB6  CFF5 F2D1          	movff	tablat,??_mnsProcessMessage+13
 11954   001FBA  D801               	call	u24888
 11955   001FBC  D00A               	goto	u24889
 11956   001FBE                     u24888:
 11957   001FBE  0005               	push	
 11958   001FC0  6EFA               	movwf	pclath,c
 11959   001FC2  51D0               	movf	(??_mnsProcessMessage+12)& (0+255),w,b
 11960   001FC4  6EFD               	movwf	tosl,c
 11961   001FC6  51D1               	movf	(??_mnsProcessMessage+13)& (0+255),w,b
 11962   001FC8  6EFE               	movwf	tosh,c
 11963   001FCA  6AFF               	clrf	tosu,c
 11964   001FCC  50FA               	movf	pclath,w,c
 11965   001FCE  0E01               	movlw	1
 11966   001FD0  0012               	return		;indir
 11967   001FD2                     u24889:
 11968   001FD2  0101               	movlb	1	; () banked
 11969   001FD4  6FC1               	movwf	sendMessage7@data5& (0+255),b
 11970   001FD6  EE20 F004          	lfsr	2,4
 11971   001FDA  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 11972   001FDC  26D9               	addwf	fsr2l,f,c
 11973   001FDE  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11974   001FE0  22DA               	addwfc	fsr2h,f,c
 11975   001FE2  50DF               	movf	indf2,w,c
 11976   001FE4  0102               	movlb	2	; () banked
 11977   001FE6  6FD2               	movwf	(??_mnsProcessMessage+14)& (0+255),b
 11978   001FE8  6BD3               	clrf	(??_mnsProcessMessage+15)& (0+255),b
 11979   001FEA  90D8               	bcf	status,0,c
 11980   001FEC  37D2               	rlcf	(??_mnsProcessMessage+14)& (0+255),f,b
 11981   001FEE  37D3               	rlcf	(??_mnsProcessMessage+15)& (0+255),f,b
 11982   001FF0  0EFE               	movlw	254
 11983   001FF2  25D2               	addwf	(??_mnsProcessMessage+14)& (0+255),w,b
 11984   001FF4  6FD4               	movwf	(??_mnsProcessMessage+16)& (0+255),b
 11985   001FF6  0EFF               	movlw	255
 11986   001FF8  21D3               	addwfc	(??_mnsProcessMessage+15)& (0+255),w,b
 11987   001FFA  6FD5               	movwf	(??_mnsProcessMessage+17)& (0+255),b
 11988   001FFC  0E75               	movlw	low _services
 11989   001FFE  25D4               	addwf	(??_mnsProcessMessage+16)& (0+255),w,b
 11990   002000  6EF6               	movwf	tblptrl,c
 11991   002002  0EEE               	movlw	high _services
 11992   002004  21D5               	addwfc	(??_mnsProcessMessage+17)& (0+255),w,b
 11993   002006  6EF7               	movwf	tblptrh,c
 11994   002008                     	if	1	;There are 3 active tblptr bytes
 11995   002008  6AF8               	clrf	tblptru,c
 11996   00200A  0E00               	movlw	low (__mediumconst shr (0+16))
 11997   00200C  22F8               	addwfc	tblptru,f,c
 11998   00200E                     	endif
 11999   00200E  0009               	tblrd		*+
 12000   002010  CFF5 F2D6          	movff	tablat,??_mnsProcessMessage+18
 12001   002014  0009               	tblrd		*+
 12002   002016  CFF5 F2D7          	movff	tablat,??_mnsProcessMessage+19
 12003   00201A  0E0E               	movlw	14
 12004   00201C  27D6               	addwf	(??_mnsProcessMessage+18)& (0+255),f,b
 12005   00201E  0E00               	movlw	0
 12006   002020  23D7               	addwfc	(??_mnsProcessMessage+19)& (0+255),f,b
 12007   002022  C2D6  FFF6         	movff	??_mnsProcessMessage+18,tblptrl
 12008   002026  C2D7  FFF7         	movff	??_mnsProcessMessage+19,tblptrh
 12009   00202A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12010   00202A  6AF8               	clrf	tblptru,c
 12011   00202C                     	endif
 12012   00202C                     	if	0	;tblptru may be non-zero
 12013   00202C                     	endif
 12014   00202C  0009               	tblrd		*+
 12015   00202E  CFF5 F2D8          	movff	tablat,??_mnsProcessMessage+20
 12016   002032  0009               	tblrd		*+
 12017   002034  CFF5 F2D9          	movff	tablat,??_mnsProcessMessage+21
 12018   002038  D801               	call	u24898
 12019   00203A  D00A               	goto	u24899
 12020   00203C                     u24898:
 12021   00203C  0005               	push	
 12022   00203E  6EFA               	movwf	pclath,c
 12023   002040  51D8               	movf	(??_mnsProcessMessage+20)& (0+255),w,b
 12024   002042  6EFD               	movwf	tosl,c
 12025   002044  51D9               	movf	(??_mnsProcessMessage+21)& (0+255),w,b
 12026   002046  6EFE               	movwf	tosh,c
 12027   002048  6AFF               	clrf	tosu,c
 12028   00204A  50FA               	movf	pclath,w,c
 12029   00204C  0E02               	movlw	2
 12030   00204E  0012               	return		;indir
 12031   002050                     u24899:
 12032   002050  0101               	movlb	1	; () banked
 12033   002052  6FC2               	movwf	sendMessage7@data6& (0+255),b
 12034   002054  EE20 F004          	lfsr	2,4
 12035   002058  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 12036   00205A  26D9               	addwf	fsr2l,f,c
 12037   00205C  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12038   00205E  22DA               	addwfc	fsr2h,f,c
 12039   002060  50DF               	movf	indf2,w,c
 12040   002062  0102               	movlb	2	; () banked
 12041   002064  6FDA               	movwf	(??_mnsProcessMessage+22)& (0+255),b
 12042   002066  6BDB               	clrf	(??_mnsProcessMessage+23)& (0+255),b
 12043   002068  90D8               	bcf	status,0,c
 12044   00206A  37DA               	rlcf	(??_mnsProcessMessage+22)& (0+255),f,b
 12045   00206C  37DB               	rlcf	(??_mnsProcessMessage+23)& (0+255),f,b
 12046   00206E  0EFE               	movlw	254
 12047   002070  25DA               	addwf	(??_mnsProcessMessage+22)& (0+255),w,b
 12048   002072  6FDC               	movwf	(??_mnsProcessMessage+24)& (0+255),b
 12049   002074  0EFF               	movlw	255
 12050   002076  21DB               	addwfc	(??_mnsProcessMessage+23)& (0+255),w,b
 12051   002078  6FDD               	movwf	(??_mnsProcessMessage+25)& (0+255),b
 12052   00207A  0E75               	movlw	low _services
 12053   00207C  25DC               	addwf	(??_mnsProcessMessage+24)& (0+255),w,b
 12054   00207E  6EF6               	movwf	tblptrl,c
 12055   002080  0EEE               	movlw	high _services
 12056   002082  21DD               	addwfc	(??_mnsProcessMessage+25)& (0+255),w,b
 12057   002084  6EF7               	movwf	tblptrh,c
 12058   002086                     	if	1	;There are 3 active tblptr bytes
 12059   002086  6AF8               	clrf	tblptru,c
 12060   002088  0E00               	movlw	low (__mediumconst shr (0+16))
 12061   00208A  22F8               	addwfc	tblptru,f,c
 12062   00208C                     	endif
 12063   00208C  0009               	tblrd		*+
 12064   00208E  CFF5 F2DE          	movff	tablat,??_mnsProcessMessage+26
 12065   002092  0009               	tblrd		*+
 12066   002094  CFF5 F2DF          	movff	tablat,??_mnsProcessMessage+27
 12067   002098  0E0E               	movlw	14
 12068   00209A  27DE               	addwf	(??_mnsProcessMessage+26)& (0+255),f,b
 12069   00209C  0E00               	movlw	0
 12070   00209E  23DF               	addwfc	(??_mnsProcessMessage+27)& (0+255),f,b
 12071   0020A0  C2DE  FFF6         	movff	??_mnsProcessMessage+26,tblptrl
 12072   0020A4  C2DF  FFF7         	movff	??_mnsProcessMessage+27,tblptrh
 12073   0020A8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12074   0020A8  6AF8               	clrf	tblptru,c
 12075   0020AA                     	endif
 12076   0020AA                     	if	0	;tblptru may be non-zero
 12077   0020AA                     	endif
 12078   0020AA  0009               	tblrd		*+
 12079   0020AC  CFF5 F2E0          	movff	tablat,??_mnsProcessMessage+28
 12080   0020B0  0009               	tblrd		*+
 12081   0020B2  CFF5 F2E1          	movff	tablat,??_mnsProcessMessage+29
 12082   0020B6  D801               	call	u24908
 12083   0020B8  D00A               	goto	u24909
 12084   0020BA                     u24908:
 12085   0020BA  0005               	push	
 12086   0020BC  6EFA               	movwf	pclath,c
 12087   0020BE  51E0               	movf	(??_mnsProcessMessage+28)& (0+255),w,b
 12088   0020C0  6EFD               	movwf	tosl,c
 12089   0020C2  51E1               	movf	(??_mnsProcessMessage+29)& (0+255),w,b
 12090   0020C4  6EFE               	movwf	tosh,c
 12091   0020C6  6AFF               	clrf	tosu,c
 12092   0020C8  50FA               	movf	pclath,w,c
 12093   0020CA  0E03               	movlw	3
 12094   0020CC  0012               	return		;indir
 12095   0020CE                     u24909:
 12096   0020CE  0101               	movlb	1	; () banked
 12097   0020D0  6FC3               	movwf	sendMessage7@data7& (0+255),b
 12098   0020D2  0EE7               	movlw	231
 12099   0020D4  ECFB  F05E         	call	_sendMessage7
 12100   0020D8  EF08  F00C         	goto	l22814
 12101   0020DC                     l23022:
 12102                           
 12103                           ; BSR set to: 2
 12104                           ;../../VLCBlib_PIC/mns.c: 493:             if (m->len < 4) {
 12105   0020DC  C1F4  FFD9         	movff	mnsProcessMessage@m,fsr2l
 12106   0020E0  C1F5  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 12107   0020E4  0E04               	movlw	4
 12108   0020E6  60DF               	cpfslt	indf2,c
 12109   0020E8  D010               	goto	l23030
 12110                           
 12111                           ; BSR set to: 2
 12112                           ;../../VLCBlib_PIC/mns.c: 494:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, CMDERR_INV_CMD);
 12113   0020EA  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 12114   0020EE  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 12115   0020F2  0E76               	movlw	118
 12116   0020F4  0101               	movlb	1	; () banked
 12117   0020F6  6FBF               	movwf	sendMessage5@data3& (0+255),b
 12118   0020F8  0E01               	movlw	1
 12119   0020FA  6FC0               	movwf	sendMessage5@data4& (0+255),b
 12120   0020FC  0E01               	movlw	1
 12121   0020FE  6FC1               	movwf	sendMessage5@data5& (0+255),b
 12122   002100  0EAF               	movlw	175
 12123   002102  EC13  F05F         	call	_sendMessage5
 12124   002106  EF08  F00C         	goto	l22814
 12125   00210A                     l23030:
 12126                           
 12127                           ; BSR set to: 2
 12128                           ;../../VLCBlib_PIC/mns.c: 497:             newMode = m->bytes[2];
 12129   00210A  0101               	movlb	1	; () banked
 12130   00210C  EE20 F004          	lfsr	2,4
 12131   002110  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 12132   002112  26D9               	addwf	fsr2l,f,c
 12133   002114  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12134   002116  22DA               	addwfc	fsr2h,f,c
 12135   002118  50DF               	movf	indf2,w,c
 12136   00211A  6FF9               	movwf	mnsProcessMessage@newMode& (0+255),b
 12137                           
 12138                           ; BSR set to: 1
 12139                           ;../../VLCBlib_PIC/mns.c: 498:             previousNN.word = nn.word;
 12140   00211C  C0B3  F174         	movff	_nn,_previousNN
 12141   002120  C0B4  F175         	movff	_nn+1,_previousNN+1
 12142                           
 12143                           ;../../VLCBlib_PIC/mns.c: 500:             switch (mode_state) {
 12144   002124  D05A               	goto	l23072
 12145   002126                     l23034:
 12146                           
 12147                           ; BSR set to: 0
 12148                           ;../../VLCBlib_PIC/mns.c: 502:                     if (newMode == MODE_SETUP) {
 12149   002126  0101               	movlb	1	; () banked
 12150   002128  51F9               	movf	mnsProcessMessage@newMode& (0+255),w,b
 12151   00212A  A4D8               	btfss	status,2,c
 12152   00212C  D05F               	goto	l23074
 12153                           
 12154                           ; BSR set to: 1
 12155                           ;../../VLCBlib_PIC/mns.c: 503:                         mode_state = MODE_SETUP;
 12156   00212E  0E00               	movlw	0
 12157   002130  0100               	movlb	0	; () banked
 12158   002132  6FC1               	movwf	_mode_state& (0+255),b
 12159                           
 12160                           ; BSR set to: 0
 12161                           ;../../VLCBlib_PIC/mns.c: 504:                         setupModePreviousMode = MODE_UNIN
      +                          ITIALISED;
 12162   002134  69BE               	setf	_setupModePreviousMode& (0+255),b
 12163                           
 12164                           ; BSR set to: 0
 12165                           ;../../VLCBlib_PIC/mns.c: 505:                         sendMessage5(OPC_GRSP, previousNN
      +                          .bytes.hi, previousNN.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 12166   002136  C175  F1BD         	movff	_previousNN+1,sendMessage5@data1
 12167   00213A  C174  F1BE         	movff	_previousNN,sendMessage5@data2
 12168   00213E  0E76               	movlw	118
 12169   002140  0101               	movlb	1	; () banked
 12170   002142  6FBF               	movwf	sendMessage5@data3& (0+255),b
 12171   002144  0E01               	movlw	1
 12172   002146  6FC0               	movwf	sendMessage5@data4& (0+255),b
 12173   002148  0E00               	movlw	0
 12174   00214A  6FC1               	movwf	sendMessage5@data5& (0+255),b
 12175   00214C  0EAF               	movlw	175
 12176   00214E  EC13  F05F         	call	_sendMessage5
 12177                           
 12178                           ;../../VLCBlib_PIC/mns.c: 507:                         sendMessage2(OPC_RQNN, nn.bytes.h
      +                          i, nn.bytes.lo);
 12179   002152  C0B4  F0A5         	movff	_nn+1,sendMessage2@data1
 12180   002156  C0B3  F0A6         	movff	_nn,sendMessage2@data2
 12181   00215A  0E50               	movlw	80
 12182   00215C  ECE3  F05E         	call	_sendMessage2
 12183   002160  EF06  F00C         	goto	l22812
 12184   002164                     l23050:
 12185                           
 12186                           ; BSR set to: 0
 12187                           ;../../VLCBlib_PIC/mns.c: 516:                     if (newMode == MODE_SETUP) {
 12188   002164  0101               	movlb	1	; () banked
 12189   002166  51F9               	movf	mnsProcessMessage@newMode& (0+255),w,b
 12190   002168  A4D8               	btfss	status,2,c
 12191   00216A  D040               	goto	l23074
 12192                           
 12193                           ; BSR set to: 1
 12194                           ;../../VLCBlib_PIC/mns.c: 517:                         sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 12195   00216C  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 12196   002170  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 12197   002174  0E76               	movlw	118
 12198   002176  6FBF               	movwf	sendMessage5@data3& (0+255),b
 12199   002178  0E01               	movlw	1
 12200   00217A  6FC0               	movwf	sendMessage5@data4& (0+255),b
 12201   00217C  0E00               	movlw	0
 12202   00217E  6FC1               	movwf	sendMessage5@data5& (0+255),b
 12203   002180  0EAF               	movlw	175
 12204   002182  EC13  F05F         	call	_sendMessage5
 12205                           
 12206                           ;../../VLCBlib_PIC/mns.c: 520:                         sendMessage2(OPC_RQNN, nn.bytes.h
      +                          i, nn.bytes.lo);
 12207   002186  C0B4  F0A5         	movff	_nn+1,sendMessage2@data1
 12208   00218A  C0B3  F0A6         	movff	_nn,sendMessage2@data2
 12209   00218E  0E50               	movlw	80
 12210   002190  ECE3  F05E         	call	_sendMessage2
 12211                           
 12212                           ;../../VLCBlib_PIC/mns.c: 522:                         nn.bytes.lo = nn.bytes.hi = 0;
 12213   002194  0E00               	movlw	0
 12214   002196  0100               	movlb	0	; () banked
 12215   002198  6FB4               	movwf	(_nn+1)& (0+255),b
 12216   00219A  C0B4  F0B3         	movff	_nn+1,_nn
 12217                           
 12218                           ; BSR set to: 0
 12219                           ;../../VLCBlib_PIC/mns.c: 523:                         writeNVM(EEPROM_NVM_TYPE, 0x3FC, 
      +                          nn.bytes.hi);
 12220   00219E  0EFC               	movlw	252
 12221   0021A0  6FA4               	movwf	writeNVM@index& (0+255),b
 12222   0021A2  0E03               	movlw	3
 12223   0021A4  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 12224   0021A6  0E00               	movlw	0
 12225   0021A8  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 12226   0021AA  C0B4  F0A7         	movff	_nn+1,writeNVM@value
 12227   0021AE  0E00               	movlw	0
 12228   0021B0  EC66  F05B         	call	_writeNVM
 12229                           
 12230                           ;../../VLCBlib_PIC/mns.c: 524:                         writeNVM(EEPROM_NVM_TYPE, 0x3FC +
      +                          1, nn.bytes.lo);
 12231   0021B4  0EFD               	movlw	253
 12232   0021B6  0100               	movlb	0	; () banked
 12233   0021B8  6FA4               	movwf	writeNVM@index& (0+255),b
 12234   0021BA  0E03               	movlw	3
 12235   0021BC  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 12236   0021BE  0E00               	movlw	0
 12237   0021C0  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 12238   0021C2  C0B3  F0A7         	movff	_nn,writeNVM@value
 12239   0021C6  0E00               	movlw	0
 12240   0021C8  EC66  F05B         	call	_writeNVM
 12241                           
 12242                           ;../../VLCBlib_PIC/mns.c: 526:                         mode_state = MODE_SETUP;
 12243   0021CC  0E00               	movlw	0
 12244   0021CE  0100               	movlb	0	; () banked
 12245   0021D0  6FC1               	movwf	_mode_state& (0+255),b
 12246                           
 12247                           ; BSR set to: 0
 12248                           ;../../VLCBlib_PIC/mns.c: 527:                         setupModePreviousMode = MODE_NORM
      +                          AL;
 12249   0021D2  0E01               	movlw	1
 12250   0021D4  6FBE               	movwf	_setupModePreviousMode& (0+255),b
 12251   0021D6  EF06  F00C         	goto	l22812
 12252   0021DA                     l23072:
 12253                           
 12254                           ; BSR set to: 1
 12255   0021DA  0100               	movlb	0	; () banked
 12256   0021DC  51C1               	movf	_mode_state& (0+255),w,b
 12257                           
 12258                           ; Switch size 1, requested type "simple"
 12259                           ; Number of cases is 2, Range of values is 0 to 255
 12260                           ; switch strategies available:
 12261                           ; Name         Instructions Cycles
 12262                           ; simple_byte            7     4 (average)
 12263                           ;	Chosen strategy is simple_byte
 12264   0021DE  0A00               	xorlw	0	; case 0
 12265   0021E0  B4D8               	btfsc	status,2,c
 12266   0021E2  D004               	goto	l23074
 12267   0021E4  0AFF               	xorlw	255	; case 255
 12268   0021E6  B4D8               	btfsc	status,2,c
 12269   0021E8  D79E               	goto	l23034
 12270   0021EA  D7BC               	goto	l23050
 12271   0021EC                     l23074:
 12272                           
 12273                           ;../../VLCBlib_PIC/mns.c: 536:             if (newMode == MODE_HEARTBEAT_ON) {
 12274   0021EC  0E0C               	movlw	12
 12275   0021EE  0101               	movlb	1	; () banked
 12276   0021F0  19F9               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 12277   0021F2  A4D8               	btfss	status,2,c
 12278   0021F4  D010               	goto	l23086
 12279                           
 12280                           ; BSR set to: 1
 12281                           ;../../VLCBlib_PIC/mns.c: 537:                 mode_flags |= 4;
 12282   0021F6  8579               	bsf	_mode_flags& (0+255),2,b
 12283                           
 12284                           ; BSR set to: 1
 12285                           ;../../VLCBlib_PIC/mns.c: 538:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 12286   0021F8  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 12287   0021FC  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 12288   002200  0E76               	movlw	118
 12289   002202  6FBF               	movwf	sendMessage5@data3& (0+255),b
 12290   002204  0E01               	movlw	1
 12291   002206  6FC0               	movwf	sendMessage5@data4& (0+255),b
 12292   002208  0E00               	movlw	0
 12293   00220A  6FC1               	movwf	sendMessage5@data5& (0+255),b
 12294   00220C  0EAF               	movlw	175
 12295   00220E  EC13  F05F         	call	_sendMessage5
 12296   002212  EF08  F00C         	goto	l22814
 12297   002216                     l23086:
 12298                           
 12299                           ; BSR set to: 1
 12300   002216  0E0D               	movlw	13
 12301   002218  19F9               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 12302   00221A  A4D8               	btfss	status,2,c
 12303   00221C  EF8D  F00C         	goto	l22840
 12304                           
 12305                           ; BSR set to: 1
 12306                           ;../../VLCBlib_PIC/mns.c: 541:                 mode_flags &= ~4;
 12307   002220  9579               	bcf	_mode_flags& (0+255),2,b
 12308                           
 12309                           ; BSR set to: 1
 12310                           ;../../VLCBlib_PIC/mns.c: 542:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 12311   002222  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 12312   002226  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 12313   00222A  0E76               	movlw	118
 12314   00222C  6FBF               	movwf	sendMessage5@data3& (0+255),b
 12315   00222E  0E01               	movlw	1
 12316   002230  6FC0               	movwf	sendMessage5@data4& (0+255),b
 12317   002232  0E00               	movlw	0
 12318   002234  6FC1               	movwf	sendMessage5@data5& (0+255),b
 12319   002236  0EAF               	movlw	175
 12320   002238  EC13  F05F         	call	_sendMessage5
 12321   00223C  EF08  F00C         	goto	l22814
 12322   002240                     l1899:
 12323                           
 12324                           ; BSR set to: 2
 12325   002240  00FF               	reset		;# 
 12326   002242  EF08  F00C         	goto	l22814
 12327   002246                     l23106:
 12328                           
 12329                           ; BSR set to: 0
 12330   002246  0101               	movlb	1	; () banked
 12331   002248  EE20 F001          	lfsr	2,1
 12332   00224C  51F4               	movf	mnsProcessMessage@m& (0+255),w,b
 12333   00224E  26D9               	addwf	fsr2l,f,c
 12334   002250  51F5               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12335   002252  22DA               	addwfc	fsr2h,f,c
 12336   002254  50DF               	movf	indf2,w,c
 12337   002256  0102               	movlb	2	; () banked
 12338   002258  6FC4               	movwf	??_mnsProcessMessage& (0+255),b
 12339   00225A  6BC5               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 12340                           
 12341                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12342                           ; Switch size 1, requested type "simple"
 12343                           ; Number of cases is 1, Range of values is 0 to 0
 12344                           ; switch strategies available:
 12345                           ; Name         Instructions Cycles
 12346                           ; simple_byte            4     3 (average)
 12347                           ;	Chosen strategy is simple_byte
 12348   00225C  51C5               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 12349   00225E  0A00               	xorlw	0	; case 0
 12350   002260  A4D8               	btfss	status,2,c
 12351   002262  EF8D  F00C         	goto	l22840
 12352                           
 12353                           ; BSR set to: 2
 12354                           ; Switch size 1, requested type "simple"
 12355                           ; Number of cases is 6, Range of values is 79 to 135
 12356                           ; switch strategies available:
 12357                           ; Name         Instructions Cycles
 12358                           ; simple_byte           19    10 (average)
 12359                           ;	Chosen strategy is simple_byte
 12360   002266  51C4               	movf	??_mnsProcessMessage& (0+255),w,b
 12361   002268  0A4F               	xorlw	79	; case 79
 12362   00226A  B4D8               	btfsc	status,2,c
 12363   00226C  D44B               	goto	l1867
 12364   00226E  0A11               	xorlw	17	; case 94
 12365   002270  B4D8               	btfsc	status,2,c
 12366   002272  D7E6               	goto	l1899
 12367   002274  0A2D               	xorlw	45	; case 115
 12368   002276  B4D8               	btfsc	status,2,c
 12369   002278  EF15  F00D         	goto	l22904
 12370   00227C  0A05               	xorlw	5	; case 118
 12371   00227E  B4D8               	btfsc	status,2,c
 12372   002280  D72D               	goto	l23022
 12373   002282  0A0E               	xorlw	14	; case 120
 12374   002284  B4D8               	btfsc	status,2,c
 12375   002286  D56E               	goto	l22988
 12376   002288  0AFF               	xorlw	255	; case 135
 12377   00228A  B4D8               	btfsc	status,2,c
 12378   00228C  D44E               	goto	l22942
 12379   00228E  EF8D  F00C         	goto	l22840
 12380   002292                     __end_of_mnsProcessMessage:
 12381                           	callstack 0
 12382                           
 12383 ;; *************** function _producerProcessMessage *****************
 12384 ;; Defined at:
 12385 ;;		line 100 in file "../../VLCBlib_PIC/event_producer.c"
 12386 ;; Parameters:    Size  Location     Type
 12387 ;;  m               2   63[BANK1 ] PTR struct Message
 12388 ;;		 -> poll@m(9), 
 12389 ;; Auto vars:     Size  Location     Type
 12390 ;;  ev              2    0[BANK2 ] short 
 12391 ;;  index           1    3[BANK2 ] unsigned char 
 12392 ;;  h               1    2[BANK2 ] unsigned char 
 12393 ;; Return value:  Size  Location     Type
 12394 ;;                  1    wreg      enum E12732
 12395 ;; Registers used:
 12396 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 12397 ;; Tracked objects:
 12398 ;;		On entry : 0/0
 12399 ;;		On exit  : 0/0
 12400 ;;		Unchanged: 0/0
 12401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12402 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12403 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12404 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12405 ;;      Totals:         0       0      10       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12406 ;;Total ram usage:       14 bytes
 12407 ;; Hardware stack levels used: 1
 12408 ;; Hardware stack levels required when called: 16
 12409 ;; This function calls:
 12410 ;;		_APP_GetEventState
 12411 ;;		_findEvent
 12412 ;;		_getEv
 12413 ;;		_sendMessage3
 12414 ;;		_sendMessage4
 12415 ;; This function is called by:
 12416 ;;		_poll
 12417 ;; This function uses a non-reentrant model
 12418 ;;
 12419                           
 12420                           	psect	text21
 12421   006096                     __ptext21:
 12422                           	callstack 0
 12423   006096                     _producerProcessMessage:
 12424                           	callstack 13
 12425                           
 12426                           ;../../VLCBlib_PIC/event_producer.c: 101:     uint8_t index;;../../VLCBlib_PIC/event_pro
      +                          ducer.c: 102:     Happening h;;../../VLCBlib_PIC/event_producer.c: 103:     int16_t ev;;
      +                          ../../VLCBlib_PIC/event_producer.c: 105:     switch (m->opc) {
 12427                           
 12428                           ;incstack = 0
 12429   006096  D12F               	goto	l22444
 12430   006098                     l22396:
 12431                           
 12432                           ; BSR set to: 1
 12433                           ;../../VLCBlib_PIC/event_producer.c: 108:             if (m->len < 5) {
 12434   006098  C1F4  FFD9         	movff	producerProcessMessage@m,fsr2l
 12435   00609C  C1F5  FFDA         	movff	producerProcessMessage@m+1,fsr2h
 12436   0060A0  0E05               	movlw	5
 12437   0060A2  60DF               	cpfslt	indf2,c
 12438   0060A4  D00C               	goto	l22404
 12439                           
 12440                           ; BSR set to: 1
 12441                           ;../../VLCBlib_PIC/event_producer.c: 109:                 sendMessage3(OPC_CMDERR, nn.by
      +                          tes.hi, nn.bytes.lo, CMDERR_INV_CMD);
 12442   0060A6  C0B4  F0A5         	movff	_nn+1,sendMessage3@data1
 12443   0060AA  C0B3  F0A6         	movff	_nn,sendMessage3@data2
 12444   0060AE  0E01               	movlw	1
 12445   0060B0  0100               	movlb	0	; () banked
 12446   0060B2  6FA7               	movwf	sendMessage3@data3& (0+255),b
 12447   0060B4  0E6F               	movlw	111
 12448   0060B6  ECCB  F05E         	call	_sendMessage3
 12449   0060BA                     l22400:
 12450                           
 12451                           ;../../VLCBlib_PIC/event_producer.c: 110:                 return PROCESSED;
 12452   0060BA  0E01               	movlw	1
 12453   0060BC  0012               	return	
 12454   0060BE                     l22404:
 12455                           
 12456                           ; BSR set to: 1
 12457                           ;../../VLCBlib_PIC/event_producer.c: 112:             if (m->opc == OPC_AREQ) {
 12458   0060BE  EE20 F001          	lfsr	2,1
 12459   0060C2  51F4               	movf	producerProcessMessage@m& (0+255),w,b
 12460   0060C4  26D9               	addwf	fsr2l,f,c
 12461   0060C6  51F5               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12462   0060C8  22DA               	addwfc	fsr2h,f,c
 12463   0060CA  0E92               	movlw	146
 12464   0060CC  18DE               	xorwf	postinc2,w,c
 12465   0060CE  A4D8               	btfss	status,2,c
 12466   0060D0  D035               	goto	l22408
 12467                           
 12468                           ; BSR set to: 1
 12469                           ;../../VLCBlib_PIC/event_producer.c: 113:                 index = findEvent((m->bytes[0]
      +                          <<8)&(m->bytes[1]), (m->bytes[2]<<8)&(m->bytes[3]));
 12470   0060D2  EE20 F003          	lfsr	2,3
 12471   0060D6  51F4               	movf	producerProcessMessage@m& (0+255),w,b
 12472   0060D8  26D9               	addwf	fsr2l,f,c
 12473   0060DA  51F5               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12474   0060DC  22DA               	addwfc	fsr2h,f,c
 12475   0060DE  50DF               	movf	indf2,w,c
 12476   0060E0  6FF6               	movwf	??_producerProcessMessage& (0+255),b
 12477   0060E2  EE20 F002          	lfsr	2,2
 12478   0060E6  51F4               	movf	producerProcessMessage@m& (0+255),w,b
 12479   0060E8  26D9               	addwf	fsr2l,f,c
 12480   0060EA  51F5               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12481   0060EC  22DA               	addwfc	fsr2h,f,c
 12482   0060EE  50DF               	movf	indf2,w,c
 12483   0060F0  6FF7               	movwf	(??_producerProcessMessage+1)& (0+255),b
 12484   0060F2  51F7               	movf	(??_producerProcessMessage+1)& (0+255),w,b
 12485   0060F4  6FF9               	movwf	(??_producerProcessMessage+3)& (0+255),b
 12486   0060F6  6BF8               	clrf	(??_producerProcessMessage+2)& (0+255),b
 12487   0060F8  51F6               	movf	??_producerProcessMessage& (0+255),w,b
 12488   0060FA  15F8               	andwf	(??_producerProcessMessage+2)& (0+255),w,b
 12489   0060FC  6FB5               	movwf	findEvent@nodeNumber& (0+255),b
 12490   0060FE  0E00               	movlw	0
 12491   006100  15F9               	andwf	(??_producerProcessMessage+3)& (0+255),w,b
 12492   006102  6FB6               	movwf	(findEvent@nodeNumber+1)& (0+255),b
 12493   006104  EE20 F005          	lfsr	2,5
 12494   006108  51F4               	movf	producerProcessMessage@m& (0+255),w,b
 12495   00610A  26D9               	addwf	fsr2l,f,c
 12496   00610C  51F5               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12497   00610E  22DA               	addwfc	fsr2h,f,c
 12498   006110  50DF               	movf	indf2,w,c
 12499   006112  6FFA               	movwf	(??_producerProcessMessage+4)& (0+255),b
 12500   006114  EE20 F004          	lfsr	2,4
 12501   006118  51F4               	movf	producerProcessMessage@m& (0+255),w,b
 12502   00611A  26D9               	addwf	fsr2l,f,c
 12503   00611C  51F5               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12504   00611E  22DA               	addwfc	fsr2h,f,c
 12505   006120  50DF               	movf	indf2,w,c
 12506   006122  6FFB               	movwf	(??_producerProcessMessage+5)& (0+255),b
 12507   006124  51FB               	movf	(??_producerProcessMessage+5)& (0+255),w,b
 12508   006126  6FFD               	movwf	(??_producerProcessMessage+7)& (0+255),b
 12509   006128  6BFC               	clrf	(??_producerProcessMessage+6)& (0+255),b
 12510   00612A  51FA               	movf	(??_producerProcessMessage+4)& (0+255),w,b
 12511   00612C  15FC               	andwf	(??_producerProcessMessage+6)& (0+255),w,b
 12512   00612E  6FB7               	movwf	findEvent@eventNumber& (0+255),b
 12513   006130  0E00               	movlw	0
 12514   006132  15FD               	andwf	(??_producerProcessMessage+7)& (0+255),w,b
 12515   006134  6FB8               	movwf	(findEvent@eventNumber+1)& (0+255),b
 12516   006136  ECBE  F051         	call	_findEvent	;wreg free
 12517   00613A  D01F               	goto	L1
 12518   00613C                     l22408:
 12519                           
 12520                           ; BSR set to: 1
 12521                           ;../../VLCBlib_PIC/event_producer.c: 115:                 index = findEvent(0, (m->bytes
      +                          [2]<<8)&(m->bytes[3]));
 12522   00613C  0E00               	movlw	0
 12523   00613E  6FB6               	movwf	(findEvent@nodeNumber+1)& (0+255),b
 12524   006140  0E00               	movlw	0
 12525   006142  6FB5               	movwf	findEvent@nodeNumber& (0+255),b
 12526   006144  EE20 F005          	lfsr	2,5
 12527   006148  51F4               	movf	producerProcessMessage@m& (0+255),w,b
 12528   00614A  26D9               	addwf	fsr2l,f,c
 12529   00614C  51F5               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12530   00614E  22DA               	addwfc	fsr2h,f,c
 12531   006150  50DF               	movf	indf2,w,c
 12532   006152  6FF6               	movwf	??_producerProcessMessage& (0+255),b
 12533   006154  EE20 F004          	lfsr	2,4
 12534   006158  51F4               	movf	producerProcessMessage@m& (0+255),w,b
 12535   00615A  26D9               	addwf	fsr2l,f,c
 12536   00615C  51F5               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12537   00615E  22DA               	addwfc	fsr2h,f,c
 12538   006160  50DF               	movf	indf2,w,c
 12539   006162  6FF7               	movwf	(??_producerProcessMessage+1)& (0+255),b
 12540   006164  51F7               	movf	(??_producerProcessMessage+1)& (0+255),w,b
 12541   006166  6FF9               	movwf	(??_producerProcessMessage+3)& (0+255),b
 12542   006168  6BF8               	clrf	(??_producerProcessMessage+2)& (0+255),b
 12543   00616A  51F6               	movf	??_producerProcessMessage& (0+255),w,b
 12544   00616C  15F8               	andwf	(??_producerProcessMessage+2)& (0+255),w,b
 12545   00616E  6FB7               	movwf	findEvent@eventNumber& (0+255),b
 12546   006170  0E00               	movlw	0
 12547   006172  15F9               	andwf	(??_producerProcessMessage+3)& (0+255),w,b
 12548   006174  6FB8               	movwf	(findEvent@eventNumber+1)& (0+255),b
 12549   006176  ECBE  F051         	call	_findEvent	;wreg free
 12550   00617A                     L1:
 12551   00617A  0102               	movlb	2	; () banked
 12552   00617C  6FC7               	movwf	producerProcessMessage@index& (0+255),b
 12553                           
 12554                           ; BSR set to: 2
 12555                           ;../../VLCBlib_PIC/event_producer.c: 117:             if (index == 0xff) return PROCESSE
      +                          D;
 12556   00617E  29C7               	incf	producerProcessMessage@index& (0+255),w,b
 12557   006180  B4D8               	btfsc	status,2,c
 12558   006182  D79B               	goto	l22400
 12559                           
 12560                           ; BSR set to: 2
 12561                           ;../../VLCBlib_PIC/event_producer.c: 119:             ev = getEv(index, 0);
 12562   006184  0E00               	movlw	0
 12563   006186  0100               	movlb	0	; () banked
 12564   006188  6F9D               	movwf	getEv@evNum& (0+255),b
 12565   00618A  0102               	movlb	2	; () banked
 12566   00618C  51C7               	movf	producerProcessMessage@index& (0+255),w,b
 12567   00618E  EC15  F03C         	call	_getEv
 12568   006192  C09D  F2C4         	movff	?_getEv,producerProcessMessage@ev
 12569   006196  C09E  F2C5         	movff	?_getEv+1,producerProcessMessage@ev+1
 12570                           
 12571                           ;../../VLCBlib_PIC/event_producer.c: 120:             if (ev < 0) return PROCESSED;
 12572   00619A  0102               	movlb	2	; () banked
 12573   00619C  BFC5               	btfsc	(producerProcessMessage@ev+1)& (0+255),7,b
 12574   00619E  D78D               	goto	l22400
 12575                           
 12576                           ; BSR set to: 2
 12577                           ;../../VLCBlib_PIC/event_producer.c: 122:             h = (uint8_t)ev;
 12578   0061A0  C2C4  F2C6         	movff	producerProcessMessage@ev,producerProcessMessage@h
 12579                           
 12580                           ; BSR set to: 2
 12581                           ;../../VLCBlib_PIC/event_producer.c: 130:             if (m->opc == OPC_AREQ) {
 12582   0061A4  0101               	movlb	1	; () banked
 12583   0061A6  EE20 F001          	lfsr	2,1
 12584   0061AA  51F4               	movf	producerProcessMessage@m& (0+255),w,b
 12585   0061AC  26D9               	addwf	fsr2l,f,c
 12586   0061AE  51F5               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12587   0061B0  22DA               	addwfc	fsr2h,f,c
 12588   0061B2  0E92               	movlw	146
 12589   0061B4  18DE               	xorwf	postinc2,w,c
 12590   0061B6  A4D8               	btfss	status,2,c
 12591   0061B8  D05F               	goto	l22432
 12592                           
 12593                           ; BSR set to: 1
 12594                           ;../../VLCBlib_PIC/event_producer.c: 131:                 if (APP_GetEventState(h) == EV
      +                          ENT_ON) {
 12595   0061BA  0102               	movlb	2	; () banked
 12596   0061BC  51C6               	movf	producerProcessMessage@h& (0+255),w,b
 12597   0061BE  ECDE  F061         	call	_APP_GetEventState
 12598   0061C2  06E8               	decf	wreg,f,c
 12599   0061C4  A4D8               	btfss	status,2,c
 12600   0061C6  D02C               	goto	l22430
 12601                           
 12602                           ;../../VLCBlib_PIC/event_producer.c: 132:                     sendMessage4(OPC_ARON, m->
      +                          bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]);
 12603   0061C8  0101               	movlb	1	; () banked
 12604   0061CA  EE20 F002          	lfsr	2,2
 12605   0061CE  51F4               	movf	producerProcessMessage@m& (0+255),w,b
 12606   0061D0  26D9               	addwf	fsr2l,f,c
 12607   0061D2  51F5               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12608   0061D4  22DA               	addwfc	fsr2h,f,c
 12609   0061D6  50DF               	movf	indf2,w,c
 12610   0061D8  0100               	movlb	0	; () banked
 12611   0061DA  6FA5               	movwf	sendMessage4@data1& (0+255),b
 12612   0061DC  0101               	movlb	1	; () banked
 12613   0061DE  EE20 F003          	lfsr	2,3
 12614   0061E2  51F4               	movf	producerProcessMessage@m& (0+255),w,b
 12615   0061E4  26D9               	addwf	fsr2l,f,c
 12616   0061E6  51F5               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12617   0061E8  22DA               	addwfc	fsr2h,f,c
 12618   0061EA  50DF               	movf	indf2,w,c
 12619   0061EC  0100               	movlb	0	; () banked
 12620   0061EE  6FA6               	movwf	sendMessage4@data2& (0+255),b
 12621   0061F0  0101               	movlb	1	; () banked
 12622   0061F2  EE20 F004          	lfsr	2,4
 12623   0061F6  51F4               	movf	producerProcessMessage@m& (0+255),w,b
 12624   0061F8  26D9               	addwf	fsr2l,f,c
 12625   0061FA  51F5               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12626   0061FC  22DA               	addwfc	fsr2h,f,c
 12627   0061FE  50DF               	movf	indf2,w,c
 12628   006200  0100               	movlb	0	; () banked
 12629   006202  6FA7               	movwf	sendMessage4@data3& (0+255),b
 12630   006204  0101               	movlb	1	; () banked
 12631   006206  EE20 F005          	lfsr	2,5
 12632   00620A  51F4               	movf	producerProcessMessage@m& (0+255),w,b
 12633   00620C  26D9               	addwf	fsr2l,f,c
 12634   00620E  51F5               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12635   006210  22DA               	addwfc	fsr2h,f,c
 12636   006212  50DF               	movf	indf2,w,c
 12637   006214  0100               	movlb	0	; () banked
 12638   006216  6FA8               	movwf	sendMessage4@data4& (0+255),b
 12639   006218  0E93               	movlw	147
 12640   00621A  EC87  F05F         	call	_sendMessage4
 12641                           
 12642                           ;../../VLCBlib_PIC/event_producer.c: 133:                 } else {
 12643   00621E  D74D               	goto	l22400
 12644   006220                     l22430:
 12645                           
 12646                           ;../../VLCBlib_PIC/event_producer.c: 134:                     sendMessage4(OPC_AROF, m->
      +                          bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]);
 12647   006220  0101               	movlb	1	; () banked
 12648   006222  EE20 F002          	lfsr	2,2
 12649   006226  51F4               	movf	producerProcessMessage@m& (0+255),w,b
 12650   006228  26D9               	addwf	fsr2l,f,c
 12651   00622A  51F5               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12652   00622C  22DA               	addwfc	fsr2h,f,c
 12653   00622E  50DF               	movf	indf2,w,c
 12654   006230  0100               	movlb	0	; () banked
 12655   006232  6FA5               	movwf	sendMessage4@data1& (0+255),b
 12656   006234  0101               	movlb	1	; () banked
 12657   006236  EE20 F003          	lfsr	2,3
 12658   00623A  51F4               	movf	producerProcessMessage@m& (0+255),w,b
 12659   00623C  26D9               	addwf	fsr2l,f,c
 12660   00623E  51F5               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12661   006240  22DA               	addwfc	fsr2h,f,c
 12662   006242  50DF               	movf	indf2,w,c
 12663   006244  0100               	movlb	0	; () banked
 12664   006246  6FA6               	movwf	sendMessage4@data2& (0+255),b
 12665   006248  0101               	movlb	1	; () banked
 12666   00624A  EE20 F004          	lfsr	2,4
 12667   00624E  51F4               	movf	producerProcessMessage@m& (0+255),w,b
 12668   006250  26D9               	addwf	fsr2l,f,c
 12669   006252  51F5               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12670   006254  22DA               	addwfc	fsr2h,f,c
 12671   006256  50DF               	movf	indf2,w,c
 12672   006258  0100               	movlb	0	; () banked
 12673   00625A  6FA7               	movwf	sendMessage4@data3& (0+255),b
 12674   00625C  0101               	movlb	1	; () banked
 12675   00625E  EE20 F005          	lfsr	2,5
 12676   006262  51F4               	movf	producerProcessMessage@m& (0+255),w,b
 12677   006264  26D9               	addwf	fsr2l,f,c
 12678   006266  51F5               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12679   006268  22DA               	addwfc	fsr2h,f,c
 12680   00626A  50DF               	movf	indf2,w,c
 12681   00626C  0100               	movlb	0	; () banked
 12682   00626E  6FA8               	movwf	sendMessage4@data4& (0+255),b
 12683   006270  0E94               	movlw	148
 12684   006272  EC87  F05F         	call	_sendMessage4
 12685   006276  D721               	goto	l22400
 12686   006278                     l22432:
 12687                           
 12688                           ; BSR set to: 1
 12689                           ;../../VLCBlib_PIC/event_producer.c: 137:                 if (APP_GetEventState(h) == EV
      +                          ENT_ON) {
 12690   006278  0102               	movlb	2	; () banked
 12691   00627A  51C6               	movf	producerProcessMessage@h& (0+255),w,b
 12692   00627C  ECDE  F061         	call	_APP_GetEventState
 12693   006280  06E8               	decf	wreg,f,c
 12694   006282  A4D8               	btfss	status,2,c
 12695   006284  D01C               	goto	l22436
 12696                           
 12697                           ;../../VLCBlib_PIC/event_producer.c: 138:                     sendMessage4(OPC_ARSON, nn
      +                          .bytes.hi, nn.bytes.lo, m->bytes[2], m->bytes[3]);
 12698   006286  C0B4  F0A5         	movff	_nn+1,sendMessage4@data1
 12699   00628A  C0B3  F0A6         	movff	_nn,sendMessage4@data2
 12700   00628E  0101               	movlb	1	; () banked
 12701   006290  EE20 F004          	lfsr	2,4
 12702   006294  51F4               	movf	producerProcessMessage@m& (0+255),w,b
 12703   006296  26D9               	addwf	fsr2l,f,c
 12704   006298  51F5               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12705   00629A  22DA               	addwfc	fsr2h,f,c
 12706   00629C  50DF               	movf	indf2,w,c
 12707   00629E  0100               	movlb	0	; () banked
 12708   0062A0  6FA7               	movwf	sendMessage4@data3& (0+255),b
 12709   0062A2  0101               	movlb	1	; () banked
 12710   0062A4  EE20 F005          	lfsr	2,5
 12711   0062A8  51F4               	movf	producerProcessMessage@m& (0+255),w,b
 12712   0062AA  26D9               	addwf	fsr2l,f,c
 12713   0062AC  51F5               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12714   0062AE  22DA               	addwfc	fsr2h,f,c
 12715   0062B0  50DF               	movf	indf2,w,c
 12716   0062B2  0100               	movlb	0	; () banked
 12717   0062B4  6FA8               	movwf	sendMessage4@data4& (0+255),b
 12718   0062B6  0E9D               	movlw	157
 12719   0062B8  EC87  F05F         	call	_sendMessage4
 12720                           
 12721                           ;../../VLCBlib_PIC/event_producer.c: 139:                 } else {
 12722   0062BC  D6FE               	goto	l22400
 12723   0062BE                     l22436:
 12724                           
 12725                           ;../../VLCBlib_PIC/event_producer.c: 140:                     sendMessage4(OPC_ARSOF, nn
      +                          .bytes.hi, nn.bytes.lo, m->bytes[2], m->bytes[3]);
 12726   0062BE  C0B4  F0A5         	movff	_nn+1,sendMessage4@data1
 12727   0062C2  C0B3  F0A6         	movff	_nn,sendMessage4@data2
 12728   0062C6  0101               	movlb	1	; () banked
 12729   0062C8  EE20 F004          	lfsr	2,4
 12730   0062CC  51F4               	movf	producerProcessMessage@m& (0+255),w,b
 12731   0062CE  26D9               	addwf	fsr2l,f,c
 12732   0062D0  51F5               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12733   0062D2  22DA               	addwfc	fsr2h,f,c
 12734   0062D4  50DF               	movf	indf2,w,c
 12735   0062D6  0100               	movlb	0	; () banked
 12736   0062D8  6FA7               	movwf	sendMessage4@data3& (0+255),b
 12737   0062DA  0101               	movlb	1	; () banked
 12738   0062DC  EE20 F005          	lfsr	2,5
 12739   0062E0  51F4               	movf	producerProcessMessage@m& (0+255),w,b
 12740   0062E2  26D9               	addwf	fsr2l,f,c
 12741   0062E4  51F5               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12742   0062E6  22DA               	addwfc	fsr2h,f,c
 12743   0062E8  50DF               	movf	indf2,w,c
 12744   0062EA  0100               	movlb	0	; () banked
 12745   0062EC  6FA8               	movwf	sendMessage4@data4& (0+255),b
 12746   0062EE  0E9E               	movlw	158
 12747   0062F0  EC87  F05F         	call	_sendMessage4
 12748   0062F4  D6E2               	goto	l22400
 12749   0062F6                     l22444:
 12750   0062F6  0101               	movlb	1	; () banked
 12751   0062F8  EE20 F001          	lfsr	2,1
 12752   0062FC  51F4               	movf	producerProcessMessage@m& (0+255),w,b
 12753   0062FE  26D9               	addwf	fsr2l,f,c
 12754   006300  51F5               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12755   006302  22DA               	addwfc	fsr2h,f,c
 12756   006304  50DF               	movf	indf2,w,c
 12757   006306  6FF6               	movwf	??_producerProcessMessage& (0+255),b
 12758   006308  6BF7               	clrf	(??_producerProcessMessage+1)& (0+255),b
 12759                           
 12760                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12761                           ; Switch size 1, requested type "simple"
 12762                           ; Number of cases is 1, Range of values is 0 to 0
 12763                           ; switch strategies available:
 12764                           ; Name         Instructions Cycles
 12765                           ; simple_byte            4     3 (average)
 12766                           ;	Chosen strategy is simple_byte
 12767   00630A  51F7               	movf	(??_producerProcessMessage+1)& (0+255),w,b
 12768   00630C  0A00               	xorlw	0	; case 0
 12769   00630E  A4D8               	btfss	status,2,c
 12770   006310  D007               	goto	l22446
 12771                           
 12772                           ; BSR set to: 1
 12773                           ; Switch size 1, requested type "simple"
 12774                           ; Number of cases is 2, Range of values is 146 to 154
 12775                           ; switch strategies available:
 12776                           ; Name         Instructions Cycles
 12777                           ; simple_byte            7     4 (average)
 12778                           ;	Chosen strategy is simple_byte
 12779   006312  51F6               	movf	??_producerProcessMessage& (0+255),w,b
 12780   006314  0A92               	xorlw	146	; case 146
 12781   006316  B4D8               	btfsc	status,2,c
 12782   006318  D6BF               	goto	l22396
 12783   00631A  0A08               	xorlw	8	; case 154
 12784   00631C  B4D8               	btfsc	status,2,c
 12785   00631E  D6BC               	goto	l22396
 12786   006320                     l22446:
 12787                           
 12788                           ; BSR set to: 1
 12789                           ;../../VLCBlib_PIC/event_producer.c: 147:     return NOT_PROCESSED;
 12790   006320  0E00               	movlw	0
 12791   006322  0012               	return		;funcret
 12792   006324                     __end_of_producerProcessMessage:
 12793                           	callstack 0
 12794                           
 12795 ;; *************** function _ackEventProcessMessage *****************
 12796 ;; Defined at:
 12797 ;;		line 97 in file "../../VLCBlib_PIC/event_acknowledge.c"
 12798 ;; Parameters:    Size  Location     Type
 12799 ;;  m               2   63[BANK1 ] PTR struct Message
 12800 ;;		 -> poll@m(9), 
 12801 ;; Auto vars:     Size  Location     Type
 12802 ;;  eventNN         2   72[BANK1 ] struct Word
 12803 ;;  eventEN         2   69[BANK1 ] struct Word
 12804 ;;  ev              2   67[BANK1 ] short 
 12805 ;;  eventIndex      1   71[BANK1 ] unsigned char 
 12806 ;; Return value:  Size  Location     Type
 12807 ;;                  1    wreg      enum E12732
 12808 ;; Registers used:
 12809 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 12810 ;; Tracked objects:
 12811 ;;		On entry : 0/0
 12812 ;;		On exit  : 0/0
 12813 ;;		Unchanged: 0/0
 12814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12815 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12816 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12817 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12818 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12819 ;;Total ram usage:       11 bytes
 12820 ;; Hardware stack levels used: 1
 12821 ;; Hardware stack levels required when called: 18
 12822 ;; This function calls:
 12823 ;;		_ackEventCheckLen
 12824 ;;		_findEvent
 12825 ;;		_findService
 12826 ;;		_getEv
 12827 ;;		_sendMessage7
 12828 ;; This function is called by:
 12829 ;;		_poll
 12830 ;; This function uses a non-reentrant model
 12831 ;;
 12832                           
 12833                           	psect	text22
 12834   006796                     __ptext22:
 12835                           	callstack 0
 12836   006796                     _ackEventProcessMessage:
 12837                           	callstack 11
 12838                           
 12839                           ;../../VLCBlib_PIC/event_acknowledge.c: 98:     Word eventNN, eventEN;;../../VLCBlib_PIC
      +                          /event_acknowledge.c: 99:     uint8_t eventIndex;;../../VLCBlib_PIC/event_acknowledge.c:
      +                           100:     int16_t ev;;../../VLCBlib_PIC/event_acknowledge.c: 102:     if (m->opc == OPC_
      +                          MODE) {
 12840                           
 12841                           ;incstack = 0
 12842   006796  0101               	movlb	1	; () banked
 12843   006798  EE20 F001          	lfsr	2,1
 12844   00679C  51F4               	movf	ackEventProcessMessage@m& (0+255),w,b
 12845   00679E  26D9               	addwf	fsr2l,f,c
 12846   0067A0  51F5               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12847   0067A2  22DA               	addwfc	fsr2h,f,c
 12848   0067A4  0E76               	movlw	118
 12849   0067A6  18DE               	xorwf	postinc2,w,c
 12850   0067A8  A4D8               	btfss	status,2,c
 12851   0067AA  D040               	goto	l1228
 12852                           
 12853                           ; BSR set to: 1
 12854                           ;../../VLCBlib_PIC/event_acknowledge.c: 103:         if (ackEventCheckLen(m, 4) == PROCE
      +                          SSED) return PROCESSED;
 12855   0067AC  C1F4  F1C6         	movff	ackEventProcessMessage@m,ackEventCheckLen@m
 12856   0067B0  C1F5  F1C7         	movff	ackEventProcessMessage@m+1,ackEventCheckLen@m+1
 12857   0067B4  0E04               	movlw	4
 12858   0067B6  6FC8               	movwf	ackEventCheckLen@needed& (0+255),b
 12859   0067B8  EC52  F061         	call	_ackEventCheckLen	;wreg free
 12860   0067BC  06E8               	decf	wreg,f,c
 12861   0067BE  A4D8               	btfss	status,2,c
 12862   0067C0  D002               	goto	l22318
 12863   0067C2                     u24010:
 12864   0067C2  0E01               	movlw	1
 12865   0067C4  0012               	return	
 12866   0067C6                     l22318:
 12867                           
 12868                           ;../../VLCBlib_PIC/event_acknowledge.c: 104:         if ((m->bytes[0] == nn.bytes.hi) &&
      +                           (m->bytes[1] == nn.bytes.lo)) {
 12869   0067C6  0101               	movlb	1	; () banked
 12870   0067C8  EE20 F002          	lfsr	2,2
 12871   0067CC  51F4               	movf	ackEventProcessMessage@m& (0+255),w,b
 12872   0067CE  26D9               	addwf	fsr2l,f,c
 12873   0067D0  51F5               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12874   0067D2  22DA               	addwfc	fsr2h,f,c
 12875   0067D4  50DE               	movf	postinc2,w,c
 12876   0067D6  0100               	movlb	0	; () banked
 12877   0067D8  19B4               	xorwf	(_nn+1)& (0+255),w,b
 12878   0067DA  A4D8               	btfss	status,2,c
 12879   0067DC  D025               	goto	l22340
 12880                           
 12881                           ; BSR set to: 0
 12882   0067DE  0101               	movlb	1	; () banked
 12883   0067E0  EE20 F003          	lfsr	2,3
 12884   0067E4  51F4               	movf	ackEventProcessMessage@m& (0+255),w,b
 12885   0067E6  26D9               	addwf	fsr2l,f,c
 12886   0067E8  51F5               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12887   0067EA  22DA               	addwfc	fsr2h,f,c
 12888   0067EC  0100               	movlb	0	; () banked
 12889   0067EE  51B3               	movf	_nn& (0+255),w,b
 12890   0067F0  18DE               	xorwf	postinc2,w,c
 12891   0067F2  A4D8               	btfss	status,2,c
 12892   0067F4  D019               	goto	l22340
 12893                           
 12894                           ; BSR set to: 0
 12895                           ;../../VLCBlib_PIC/event_acknowledge.c: 105:             if (m->bytes[2] == MODE_EVENT_A
      +                          CK_ON) {
 12896   0067F6  0101               	movlb	1	; () banked
 12897   0067F8  EE20 F004          	lfsr	2,4
 12898   0067FC  51F4               	movf	ackEventProcessMessage@m& (0+255),w,b
 12899   0067FE  26D9               	addwf	fsr2l,f,c
 12900   006800  51F5               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12901   006802  22DA               	addwfc	fsr2h,f,c
 12902   006804  0E0A               	movlw	10
 12903   006806  18DE               	xorwf	postinc2,w,c
 12904   006808  A4D8               	btfss	status,2,c
 12905   00680A  D002               	goto	l22332
 12906                           
 12907                           ; BSR set to: 1
 12908                           ;../../VLCBlib_PIC/event_acknowledge.c: 107:                 mode_flags |= 1;
 12909   00680C  8179               	bsf	_mode_flags& (0+255),0,b
 12910   00680E  D7D9               	goto	u24010
 12911   006810                     l22332:
 12912                           
 12913                           ; BSR set to: 1
 12914   006810  EE20 F004          	lfsr	2,4
 12915   006814  51F4               	movf	ackEventProcessMessage@m& (0+255),w,b
 12916   006816  26D9               	addwf	fsr2l,f,c
 12917   006818  51F5               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12918   00681A  22DA               	addwfc	fsr2h,f,c
 12919   00681C  0E0B               	movlw	11
 12920   00681E  18DE               	xorwf	postinc2,w,c
 12921   006820  A4D8               	btfss	status,2,c
 12922   006822  D002               	goto	l22340
 12923                           
 12924                           ; BSR set to: 1
 12925                           ;../../VLCBlib_PIC/event_acknowledge.c: 111:                 mode_flags &= ~1;
 12926   006824  9179               	bcf	_mode_flags& (0+255),0,b
 12927   006826  D7CD               	goto	u24010
 12928   006828                     l22340:
 12929                           
 12930                           ;../../VLCBlib_PIC/event_acknowledge.c: 115:         return NOT_PROCESSED;
 12931   006828  0E00               	movlw	0
 12932   00682A  0012               	return	
 12933   00682C                     l1228:
 12934                           
 12935                           ; BSR set to: 1
 12936                           ;../../VLCBlib_PIC/event_acknowledge.c: 119:     if (! (mode_flags & 2)) {
 12937   00682C  A379               	btfss	_mode_flags& (0+255),1,b
 12938   00682E  D7FC               	goto	l22340
 12939                           
 12940                           ; BSR set to: 1
 12941                           ;../../VLCBlib_PIC/event_acknowledge.c: 123:     if (findService(SERVICE_ID_CONSUMER) ==
      +                           ((void*)0)) {
 12942   006830  0E06               	movlw	6
 12943   006832  EC1E  F04F         	call	_findService
 12944   006836  0100               	movlb	0	; () banked
 12945   006838  518D               	movf	?_findService& (0+255),w,b
 12946   00683A  118E               	iorwf	(?_findService+1)& (0+255),w,b
 12947   00683C  B4D8               	btfsc	status,2,c
 12948   00683E  D7F4               	goto	l22340
 12949                           
 12950                           ; BSR set to: 0
 12951                           ;../../VLCBlib_PIC/event_acknowledge.c: 126:     if (m->len < 5) {
 12952   006840  C1F4  FFD9         	movff	ackEventProcessMessage@m,fsr2l
 12953   006844  C1F5  FFDA         	movff	ackEventProcessMessage@m+1,fsr2h
 12954   006848  0E05               	movlw	5
 12955   00684A  60DF               	cpfslt	indf2,c
 12956   00684C  D001               	goto	l22360
 12957   00684E  D7EC               	goto	l22340
 12958   006850                     l22360:
 12959                           
 12960                           ; BSR set to: 0
 12961                           ;../../VLCBlib_PIC/event_acknowledge.c: 129:     eventNN.bytes.hi = m->bytes[0];
 12962   006850  0101               	movlb	1	; () banked
 12963   006852  EE20 F002          	lfsr	2,2
 12964   006856  51F4               	movf	ackEventProcessMessage@m& (0+255),w,b
 12965   006858  26D9               	addwf	fsr2l,f,c
 12966   00685A  51F5               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12967   00685C  22DA               	addwfc	fsr2h,f,c
 12968   00685E  50DF               	movf	indf2,w,c
 12969   006860  6FFE               	movwf	(ackEventProcessMessage@eventNN+1)& (0+255),b
 12970                           
 12971                           ;../../VLCBlib_PIC/event_acknowledge.c: 130:     eventNN.bytes.lo = m->bytes[1];
 12972   006862  EE20 F003          	lfsr	2,3
 12973   006866  51F4               	movf	ackEventProcessMessage@m& (0+255),w,b
 12974   006868  26D9               	addwf	fsr2l,f,c
 12975   00686A  51F5               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12976   00686C  22DA               	addwfc	fsr2h,f,c
 12977   00686E  50DF               	movf	indf2,w,c
 12978   006870  6FFD               	movwf	ackEventProcessMessage@eventNN& (0+255),b
 12979                           
 12980                           ;../../VLCBlib_PIC/event_acknowledge.c: 131:     eventEN.bytes.hi = m->bytes[2];
 12981   006872  EE20 F004          	lfsr	2,4
 12982   006876  51F4               	movf	ackEventProcessMessage@m& (0+255),w,b
 12983   006878  26D9               	addwf	fsr2l,f,c
 12984   00687A  51F5               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12985   00687C  22DA               	addwfc	fsr2h,f,c
 12986   00687E  50DF               	movf	indf2,w,c
 12987   006880  6FFB               	movwf	(ackEventProcessMessage@eventEN+1)& (0+255),b
 12988                           
 12989                           ;../../VLCBlib_PIC/event_acknowledge.c: 132:     eventEN.bytes.lo = m->bytes[3];
 12990   006882  EE20 F005          	lfsr	2,5
 12991   006886  51F4               	movf	ackEventProcessMessage@m& (0+255),w,b
 12992   006888  26D9               	addwf	fsr2l,f,c
 12993   00688A  51F5               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12994   00688C  22DA               	addwfc	fsr2h,f,c
 12995   00688E  50DF               	movf	indf2,w,c
 12996   006890  6FFA               	movwf	ackEventProcessMessage@eventEN& (0+255),b
 12997                           
 12998                           ;../../VLCBlib_PIC/event_acknowledge.c: 134:     switch (m->opc) {
 12999   006892  D018               	goto	l22372
 13000   006894                     l22362:
 13001                           
 13002                           ; BSR set to: 1
 13003                           ;../../VLCBlib_PIC/event_acknowledge.c: 138:             eventIndex = findEvent(eventNN.
      +                          word, eventNN.word);
 13004   006894  C1FD  F1B5         	movff	ackEventProcessMessage@eventNN,findEvent@nodeNumber
 13005   006898  C1FE  F1B6         	movff	ackEventProcessMessage@eventNN+1,findEvent@nodeNumber+1
 13006   00689C  C1FD  F1B7         	movff	ackEventProcessMessage@eventNN,findEvent@eventNumber
 13007   0068A0  C1FE  F1B8         	movff	ackEventProcessMessage@eventNN+1,findEvent@eventNumber+1
 13008   0068A4  ECBE  F051         	call	_findEvent	;wreg free
 13009   0068A8  D00A               	goto	L2
 13010   0068AA                     l22364:
 13011                           
 13012                           ; BSR set to: 1
 13013                           ;../../VLCBlib_PIC/event_acknowledge.c: 143:             eventIndex = findEvent(0, event
      +                          NN.word);
 13014   0068AA  0E00               	movlw	0
 13015   0068AC  6FB6               	movwf	(findEvent@nodeNumber+1)& (0+255),b
 13016   0068AE  0E00               	movlw	0
 13017   0068B0  6FB5               	movwf	findEvent@nodeNumber& (0+255),b
 13018   0068B2  C1FD  F1B7         	movff	ackEventProcessMessage@eventNN,findEvent@eventNumber
 13019   0068B6  C1FE  F1B8         	movff	ackEventProcessMessage@eventNN+1,findEvent@eventNumber+1
 13020   0068BA  ECBE  F051         	call	_findEvent	;wreg free
 13021   0068BE                     L2:
 13022   0068BE  0101               	movlb	1	; () banked
 13023   0068C0  6FFC               	movwf	ackEventProcessMessage@eventIndex& (0+255),b
 13024                           
 13025                           ;../../VLCBlib_PIC/event_acknowledge.c: 144:             break;
 13026   0068C2  D01B               	goto	l22374
 13027   0068C4                     l22372:
 13028                           
 13029                           ; BSR set to: 1
 13030   0068C4  EE20 F001          	lfsr	2,1
 13031   0068C8  51F4               	movf	ackEventProcessMessage@m& (0+255),w,b
 13032   0068CA  26D9               	addwf	fsr2l,f,c
 13033   0068CC  51F5               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13034   0068CE  22DA               	addwfc	fsr2h,f,c
 13035   0068D0  50DF               	movf	indf2,w,c
 13036   0068D2  6FF6               	movwf	??_ackEventProcessMessage& (0+255),b
 13037   0068D4  6BF7               	clrf	(??_ackEventProcessMessage+1)& (0+255),b
 13038                           
 13039                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13040                           ; Switch size 1, requested type "simple"
 13041                           ; Number of cases is 1, Range of values is 0 to 0
 13042                           ; switch strategies available:
 13043                           ; Name         Instructions Cycles
 13044                           ; simple_byte            4     3 (average)
 13045                           ;	Chosen strategy is simple_byte
 13046   0068D6  51F7               	movf	(??_ackEventProcessMessage+1)& (0+255),w,b
 13047   0068D8  0A00               	xorlw	0	; case 0
 13048   0068DA  A4D8               	btfss	status,2,c
 13049   0068DC  D7A5               	goto	l22340
 13050                           
 13051                           ; BSR set to: 1
 13052                           ; Switch size 1, requested type "simple"
 13053                           ; Number of cases is 4, Range of values is 144 to 153
 13054                           ; switch strategies available:
 13055                           ; Name         Instructions Cycles
 13056                           ; simple_byte           13     7 (average)
 13057                           ;	Chosen strategy is simple_byte
 13058   0068DE  51F6               	movf	??_ackEventProcessMessage& (0+255),w,b
 13059   0068E0  0A90               	xorlw	144	; case 144
 13060   0068E2  B4D8               	btfsc	status,2,c
 13061   0068E4  D7D7               	goto	l22362
 13062   0068E6  0A01               	xorlw	1	; case 145
 13063   0068E8  B4D8               	btfsc	status,2,c
 13064   0068EA  D7D4               	goto	l22362
 13065   0068EC  0A09               	xorlw	9	; case 152
 13066   0068EE  B4D8               	btfsc	status,2,c
 13067   0068F0  D7DC               	goto	l22364
 13068   0068F2  0A01               	xorlw	1	; case 153
 13069   0068F4  B4D8               	btfsc	status,2,c
 13070   0068F6  D7D9               	goto	l22364
 13071   0068F8  D797               	goto	l22340
 13072   0068FA                     l22374:
 13073                           
 13074                           ; BSR set to: 1
 13075                           ;../../VLCBlib_PIC/event_acknowledge.c: 148:     if (eventIndex != 0xff) {
 13076   0068FA  29FC               	incf	ackEventProcessMessage@eventIndex& (0+255),w,b
 13077   0068FC  B4D8               	btfsc	status,2,c
 13078   0068FE  D794               	goto	l22340
 13079                           
 13080                           ; BSR set to: 1
 13081                           ;../../VLCBlib_PIC/event_acknowledge.c: 151:         ev = getEv(eventIndex, 1);
 13082   006900  0E01               	movlw	1
 13083   006902  0100               	movlb	0	; () banked
 13084   006904  6F9D               	movwf	getEv@evNum& (0+255),b
 13085   006906  0101               	movlb	1	; () banked
 13086   006908  51FC               	movf	ackEventProcessMessage@eventIndex& (0+255),w,b
 13087   00690A  EC15  F03C         	call	_getEv
 13088   00690E  C09D  F1F8         	movff	?_getEv,ackEventProcessMessage@ev
 13089   006912  C09E  F1F9         	movff	?_getEv+1,ackEventProcessMessage@ev+1
 13090                           
 13091                           ;../../VLCBlib_PIC/event_acknowledge.c: 152:         if (ev >= 0) {
 13092   006916  0101               	movlb	1	; () banked
 13093   006918  BFF9               	btfsc	(ackEventProcessMessage@ev+1)& (0+255),7,b
 13094   00691A  D786               	goto	l22340
 13095                           
 13096                           ; BSR set to: 1
 13097                           ;../../VLCBlib_PIC/event_acknowledge.c: 154:             sendMessage7(OPC_ENACK, nn.byte
      +                          s.hi, nn.bytes.lo, m->opc, m->bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]);
 13098   00691C  C0B4  F1BD         	movff	_nn+1,sendMessage7@data1
 13099   006920  C0B3  F1BE         	movff	_nn,sendMessage7@data2
 13100   006924  EE20 F001          	lfsr	2,1
 13101   006928  51F4               	movf	ackEventProcessMessage@m& (0+255),w,b
 13102   00692A  26D9               	addwf	fsr2l,f,c
 13103   00692C  51F5               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13104   00692E  22DA               	addwfc	fsr2h,f,c
 13105   006930  50DF               	movf	indf2,w,c
 13106   006932  6FBF               	movwf	sendMessage7@data3& (0+255),b
 13107   006934  EE20 F002          	lfsr	2,2
 13108   006938  51F4               	movf	ackEventProcessMessage@m& (0+255),w,b
 13109   00693A  26D9               	addwf	fsr2l,f,c
 13110   00693C  51F5               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13111   00693E  22DA               	addwfc	fsr2h,f,c
 13112   006940  50DF               	movf	indf2,w,c
 13113   006942  6FC0               	movwf	sendMessage7@data4& (0+255),b
 13114   006944  EE20 F003          	lfsr	2,3
 13115   006948  51F4               	movf	ackEventProcessMessage@m& (0+255),w,b
 13116   00694A  26D9               	addwf	fsr2l,f,c
 13117   00694C  51F5               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13118   00694E  22DA               	addwfc	fsr2h,f,c
 13119   006950  50DF               	movf	indf2,w,c
 13120   006952  6FC1               	movwf	sendMessage7@data5& (0+255),b
 13121   006954  EE20 F004          	lfsr	2,4
 13122   006958  51F4               	movf	ackEventProcessMessage@m& (0+255),w,b
 13123   00695A  26D9               	addwf	fsr2l,f,c
 13124   00695C  51F5               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13125   00695E  22DA               	addwfc	fsr2h,f,c
 13126   006960  50DF               	movf	indf2,w,c
 13127   006962  6FC2               	movwf	sendMessage7@data6& (0+255),b
 13128   006964  EE20 F005          	lfsr	2,5
 13129   006968  51F4               	movf	ackEventProcessMessage@m& (0+255),w,b
 13130   00696A  26D9               	addwf	fsr2l,f,c
 13131   00696C  51F5               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13132   00696E  22DA               	addwfc	fsr2h,f,c
 13133   006970  50DF               	movf	indf2,w,c
 13134   006972  6FC3               	movwf	sendMessage7@data7& (0+255),b
 13135   006974  0EE6               	movlw	230
 13136   006976  ECFB  F05E         	call	_sendMessage7
 13137                           
 13138                           ;../../VLCBlib_PIC/event_acknowledge.c: 155:             ackDiagnostics[0x00].asInt++;
 13139   00697A  0100               	movlb	0	; () banked
 13140   00697C  4BD1               	infsnz	_ackDiagnostics& (0+255),f,b
 13141   00697E  2BD2               	incf	(_ackDiagnostics+1)& (0+255),f,b
 13142   006980  D753               	goto	l22340
 13143   006982                     __end_of_ackEventProcessMessage:
 13144                           	callstack 0
 13145                           
 13146 ;; *************** function _bootProcessMessage *****************
 13147 ;; Defined at:
 13148 ;;		line 176 in file "../../VLCBlib_PIC/boot.c"
 13149 ;; Parameters:    Size  Location     Type
 13150 ;;  m               2   63[BANK1 ] PTR struct Message
 13151 ;;		 -> poll@m(9), 
 13152 ;; Auto vars:     Size  Location     Type
 13153 ;;		None
 13154 ;; Return value:  Size  Location     Type
 13155 ;;                  1    wreg      enum E12732
 13156 ;; Registers used:
 13157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13158 ;; Tracked objects:
 13159 ;;		On entry : 0/0
 13160 ;;		On exit  : 0/0
 13161 ;;		Unchanged: 0/0
 13162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13163 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13165 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13166 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13167 ;;Total ram usage:        4 bytes
 13168 ;; Hardware stack levels used: 1
 13169 ;; Hardware stack levels required when called: 18
 13170 ;; This function calls:
 13171 ;;		_writeNVM
 13172 ;; This function is called by:
 13173 ;;		_poll
 13174 ;; This function uses a non-reentrant model
 13175 ;;
 13176                           
 13177                           	psect	text23
 13178   00A12E                     __ptext23:
 13179                           	callstack 0
 13180   00A12E                     _bootProcessMessage:
 13181                           	callstack 11
 13182                           
 13183                           ;../../VLCBlib_PIC/boot.c: 178:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED
      +                          ;
 13184                           
 13185                           ;incstack = 0
 13186   00A12E  0101               	movlb	1	; () banked
 13187   00A130  EE20 F002          	lfsr	2,2
 13188   00A134  51F4               	movf	bootProcessMessage@m& (0+255),w,b
 13189   00A136  26D9               	addwf	fsr2l,f,c
 13190   00A138  51F5               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13191   00A13A  22DA               	addwfc	fsr2h,f,c
 13192   00A13C  50DE               	movf	postinc2,w,c
 13193   00A13E  0100               	movlb	0	; () banked
 13194   00A140  19B4               	xorwf	(_nn+1)& (0+255),w,b
 13195   00A142  B4D8               	btfsc	status,2,c
 13196   00A144  D002               	goto	l22268
 13197   00A146                     u23960:
 13198   00A146  0E00               	movlw	0
 13199   00A148  0012               	return	
 13200   00A14A                     l22268:
 13201                           
 13202                           ; BSR set to: 0
 13203                           ;../../VLCBlib_PIC/boot.c: 179:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED
      +                          ;
 13204   00A14A  0101               	movlb	1	; () banked
 13205   00A14C  EE20 F003          	lfsr	2,3
 13206   00A150  51F4               	movf	bootProcessMessage@m& (0+255),w,b
 13207   00A152  26D9               	addwf	fsr2l,f,c
 13208   00A154  51F5               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13209   00A156  22DA               	addwfc	fsr2h,f,c
 13210   00A158  0100               	movlb	0	; () banked
 13211   00A15A  51B3               	movf	_nn& (0+255),w,b
 13212   00A15C  18DE               	xorwf	postinc2,w,c
 13213   00A15E  A4D8               	btfss	status,2,c
 13214   00A160  D7F2               	goto	u23960
 13215   00A162  D019               	goto	l22292
 13216   00A164                     l22274:
 13217                           
 13218                           ; BSR set to: 1
 13219                           ;../../VLCBlib_PIC/boot.c: 183:             if (m->bytes[2] != MODE_BOOT) return NOT_PRO
      +                          CESSED;
 13220   00A164  EE20 F004          	lfsr	2,4
 13221   00A168  51F4               	movf	bootProcessMessage@m& (0+255),w,b
 13222   00A16A  26D9               	addwf	fsr2l,f,c
 13223   00A16C  51F5               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13224   00A16E  22DA               	addwfc	fsr2h,f,c
 13225   00A170  0E0E               	movlw	14
 13226   00A172  18DE               	xorwf	postinc2,w,c
 13227   00A174  A4D8               	btfss	status,2,c
 13228   00A176  D7E7               	goto	u23960
 13229   00A178                     l22280:
 13230                           
 13231                           ; BSR set to: 1
 13232                           ;../../VLCBlib_PIC/boot.c: 187:             writeNVM(EEPROM_NVM_TYPE, 0x3FF, 0xFF);
 13233   00A178  0EFF               	movlw	255
 13234   00A17A  0100               	movlb	0	; () banked
 13235   00A17C  6FA4               	movwf	writeNVM@index& (0+255),b
 13236   00A17E  0E03               	movlw	3
 13237   00A180  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 13238   00A182  0E00               	movlw	0
 13239   00A184  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 13240   00A186  0EFF               	movlw	255
 13241   00A188  6FA7               	movwf	writeNVM@value& (0+255),b
 13242   00A18A  0E00               	movlw	0
 13243   00A18C  EC66  F05B         	call	_writeNVM
 13244   00A190  00FF               	reset		;# 
 13245                           
 13246                           ;../../VLCBlib_PIC/boot.c: 189:             return PROCESSED;
 13247   00A192  0E01               	movlw	1
 13248   00A194  0012               	return	
 13249   00A196                     l22292:
 13250                           
 13251                           ; BSR set to: 0
 13252   00A196  0101               	movlb	1	; () banked
 13253   00A198  EE20 F001          	lfsr	2,1
 13254   00A19C  51F4               	movf	bootProcessMessage@m& (0+255),w,b
 13255   00A19E  26D9               	addwf	fsr2l,f,c
 13256   00A1A0  51F5               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13257   00A1A2  22DA               	addwfc	fsr2h,f,c
 13258   00A1A4  50DF               	movf	indf2,w,c
 13259   00A1A6  6FF6               	movwf	??_bootProcessMessage& (0+255),b
 13260   00A1A8  6BF7               	clrf	(??_bootProcessMessage+1)& (0+255),b
 13261                           
 13262                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13263                           ; Switch size 1, requested type "simple"
 13264                           ; Number of cases is 1, Range of values is 0 to 0
 13265                           ; switch strategies available:
 13266                           ; Name         Instructions Cycles
 13267                           ; simple_byte            4     3 (average)
 13268                           ;	Chosen strategy is simple_byte
 13269   00A1AA  51F7               	movf	(??_bootProcessMessage+1)& (0+255),w,b
 13270   00A1AC  0A00               	xorlw	0	; case 0
 13271   00A1AE  A4D8               	btfss	status,2,c
 13272   00A1B0  D7CA               	goto	u23960
 13273                           
 13274                           ; BSR set to: 1
 13275                           ; Switch size 1, requested type "simple"
 13276                           ; Number of cases is 2, Range of values is 92 to 118
 13277                           ; switch strategies available:
 13278                           ; Name         Instructions Cycles
 13279                           ; simple_byte            7     4 (average)
 13280                           ;	Chosen strategy is simple_byte
 13281   00A1B2  51F6               	movf	??_bootProcessMessage& (0+255),w,b
 13282   00A1B4  0A5C               	xorlw	92	; case 92
 13283   00A1B6  B4D8               	btfsc	status,2,c
 13284   00A1B8  D7DF               	goto	l22280
 13285   00A1BA  0A2A               	xorlw	42	; case 118
 13286   00A1BC  B4D8               	btfsc	status,2,c
 13287   00A1BE  D7D2               	goto	l22274
 13288   00A1C0  D7C2               	goto	u23960
 13289   00A1C2                     __end_of_bootProcessMessage:
 13290                           	callstack 0
 13291                           
 13292 ;; *************** function _consumer2QProcessMessage *****************
 13293 ;; Defined at:
 13294 ;;		line 127 in file "../event_consumerDualActionQueue.c"
 13295 ;; Parameters:    Size  Location     Type
 13296 ;;  m               2   63[BANK1 ] PTR struct Message
 13297 ;;		 -> poll@m(9), 
 13298 ;; Auto vars:     Size  Location     Type
 13299 ;;  nextSimultan    1    6[BANK2 ] unsigned char 
 13300 ;;  firstAction     1    4[BANK2 ] unsigned char 
 13301 ;;  nextAction      1    3[BANK2 ] unsigned char 
 13302 ;;  action          2   11[BANK2 ] struct .
 13303 ;;  e               1   10[BANK2 ] unsigned char 
 13304 ;;  ca              1    9[BANK2 ] unsigned char 
 13305 ;;  masked_actio    1    8[BANK2 ] unsigned char 
 13306 ;;  io              1    7[BANK2 ] unsigned char 
 13307 ;;  tableIndex      1    5[BANK2 ] unsigned char 
 13308 ;;  opc             1    2[BANK2 ] unsigned char 
 13309 ;;  change          1    1[BANK2 ] char 
 13310 ;;  end             1    0[BANK2 ] unsigned char 
 13311 ;;  start           1    0        unsigned char 
 13312 ;; Return value:  Size  Location     Type
 13313 ;;                  1    wreg      enum E12732
 13314 ;; Registers used:
 13315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13316 ;; Tracked objects:
 13317 ;;		On entry : 0/0
 13318 ;;		On exit  : 0/0
 13319 ;;		Unchanged: 0/0
 13320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13321 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13322 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13323 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13324 ;;      Totals:         0       0       8      13       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13325 ;;Total ram usage:       21 bytes
 13326 ;; Hardware stack levels used: 1
 13327 ;; Hardware stack levels required when called: 16
 13328 ;; This function calls:
 13329 ;;		___awdiv
 13330 ;;		___awmod
 13331 ;;		_findEvent
 13332 ;;		_getEVs
 13333 ;;		_getNV
 13334 ;;		_pushTwoAction
 13335 ;;		_setExpeditedActions
 13336 ;;		_setNormalActions
 13337 ;; This function is called by:
 13338 ;;		_poll
 13339 ;; This function uses a non-reentrant model
 13340 ;;
 13341                           
 13342                           	psect	text24
 13343   003616                     __ptext24:
 13344                           	callstack 0
 13345   003616                     _consumer2QProcessMessage:
 13346                           	callstack 13
 13347                           
 13348                           ;../event_consumerDualActionQueue.c: 128:     uint8_t start, end;;../event_consumerDualA
      +                          ctionQueue.c: 129:     uint8_t tableIndex;;../event_consumerDualActionQueue.c: 130:     
      +                          int8_t change;;../event_consumerDualActionQueue.c: 131:     uint8_t e;;../event_consumer
      +                          DualActionQueue.c: 132:     ActionAndState action;;../event_consumerDualActionQueue.c: 1
      +                          33:     uint8_t masked_action;;../event_consumerDualActionQueue.c: 134:     uint8_t ca;;
      +                          ../event_consumerDualActionQueue.c: 135:     uint8_t io;;../event_consumerDualActionQueu
      +                          e.c: 137:     if (m->len < 5) return NOT_PROCESSED;
 13349                           
 13350                           ;incstack = 0
 13351   003616  C1F4  FFD9         	movff	consumer2QProcessMessage@m,fsr2l
 13352   00361A  C1F5  FFDA         	movff	consumer2QProcessMessage@m+1,fsr2h
 13353   00361E  0E05               	movlw	5
 13354   003620  60DF               	cpfslt	indf2,c
 13355   003622  D002               	goto	l22082
 13356   003624                     u23720:
 13357   003624  0E00               	movlw	0
 13358   003626  0012               	return	
 13359   003628                     l22082:
 13360                           
 13361                           ;../event_consumerDualActionQueue.c: 139:     tableIndex = findEvent(((uint16_t)m->bytes
      +                          [0])*256+m->bytes[1], ((uint16_t)m->bytes[2])*256+m->bytes[3]);
 13362   003628  0101               	movlb	1	; () banked
 13363   00362A  EE20 F003          	lfsr	2,3
 13364   00362E  51F4               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13365   003630  26D9               	addwf	fsr2l,f,c
 13366   003632  51F5               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13367   003634  22DA               	addwfc	fsr2h,f,c
 13368   003636  50DF               	movf	indf2,w,c
 13369   003638  6FF6               	movwf	??_consumer2QProcessMessage& (0+255),b
 13370   00363A  EE20 F002          	lfsr	2,2
 13371   00363E  51F4               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13372   003640  26D9               	addwf	fsr2l,f,c
 13373   003642  51F5               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13374   003644  22DA               	addwfc	fsr2h,f,c
 13375   003646  50DF               	movf	indf2,w,c
 13376   003648  6FF7               	movwf	(??_consumer2QProcessMessage+1)& (0+255),b
 13377   00364A  51F6               	movf	??_consumer2QProcessMessage& (0+255),w,b
 13378   00364C  6FB5               	movwf	findEvent@nodeNumber& (0+255),b
 13379   00364E  C1F7  F1B6         	movff	??_consumer2QProcessMessage+1,findEvent@nodeNumber+1
 13380   003652  EE20 F005          	lfsr	2,5
 13381   003656  51F4               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13382   003658  26D9               	addwf	fsr2l,f,c
 13383   00365A  51F5               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13384   00365C  22DA               	addwfc	fsr2h,f,c
 13385   00365E  50DF               	movf	indf2,w,c
 13386   003660  6FF9               	movwf	(??_consumer2QProcessMessage+3)& (0+255),b
 13387   003662  EE20 F004          	lfsr	2,4
 13388   003666  51F4               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13389   003668  26D9               	addwf	fsr2l,f,c
 13390   00366A  51F5               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13391   00366C  22DA               	addwfc	fsr2h,f,c
 13392   00366E  50DF               	movf	indf2,w,c
 13393   003670  6FFA               	movwf	(??_consumer2QProcessMessage+4)& (0+255),b
 13394   003672  51F9               	movf	(??_consumer2QProcessMessage+3)& (0+255),w,b
 13395   003674  6FB7               	movwf	findEvent@eventNumber& (0+255),b
 13396   003676  C1FA  F1B8         	movff	??_consumer2QProcessMessage+4,findEvent@eventNumber+1
 13397   00367A  ECBE  F051         	call	_findEvent	;wreg free
 13398   00367E  0102               	movlb	2	; () banked
 13399   003680  6FC9               	movwf	consumer2QProcessMessage@tableIndex& (0+255),b
 13400                           
 13401                           ; BSR set to: 2
 13402                           ;../event_consumerDualActionQueue.c: 140:     if (tableIndex == 0xff) return NOT_PROCESS
      +                          ED;
 13403   003682  29C9               	incf	consumer2QProcessMessage@tableIndex& (0+255),w,b
 13404   003684  B4D8               	btfsc	status,2,c
 13405   003686  D7CE               	goto	u23720
 13406   003688  D00A               	goto	l22102
 13407   00368A                     l408:
 13408                           
 13409                           ; BSR set to: 1
 13410                           ;../event_consumerDualActionQueue.c: 156:             end = 20;
 13411                           
 13412                           ; BSR set to: 1
 13413   00368A  0E14               	movlw	20
 13414   00368C  0102               	movlb	2	; () banked
 13415   00368E  6FC4               	movwf	consumer2QProcessMessage@end& (0+255),b
 13416                           
 13417                           ;../event_consumerDualActionQueue.c: 157:             change = 1;
 13418   003690  0E01               	movlw	1
 13419   003692  6FC5               	movwf	consumer2QProcessMessage@change& (0+255),b
 13420                           
 13421                           ;../event_consumerDualActionQueue.c: 158:             break;
 13422   003694  D044               	goto	l22104
 13423   003696                     l417:
 13424                           
 13425                           ; BSR set to: 1
 13426                           ;../event_consumerDualActionQueue.c: 172:             end = 1 -1;
 13427                           
 13428                           ; BSR set to: 1
 13429   003696  0E00               	movlw	0
 13430   003698  0102               	movlb	2	; () banked
 13431   00369A  6FC4               	movwf	consumer2QProcessMessage@end& (0+255),b
 13432                           
 13433                           ; BSR set to: 2
 13434                           ;../event_consumerDualActionQueue.c: 174:             break;
 13435   00369C  D040               	goto	l22104
 13436   00369E                     l22102:
 13437                           
 13438                           ; BSR set to: 2
 13439   00369E  0101               	movlb	1	; () banked
 13440   0036A0  EE20 F001          	lfsr	2,1
 13441   0036A4  51F4               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13442   0036A6  26D9               	addwf	fsr2l,f,c
 13443   0036A8  51F5               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13444   0036AA  22DA               	addwfc	fsr2h,f,c
 13445   0036AC  50DF               	movf	indf2,w,c
 13446   0036AE  6FF6               	movwf	??_consumer2QProcessMessage& (0+255),b
 13447   0036B0  6BF7               	clrf	(??_consumer2QProcessMessage+1)& (0+255),b
 13448                           
 13449                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13450                           ; Switch size 1, requested type "simple"
 13451                           ; Number of cases is 1, Range of values is 0 to 0
 13452                           ; switch strategies available:
 13453                           ; Name         Instructions Cycles
 13454                           ; simple_byte            4     3 (average)
 13455                           ;	Chosen strategy is simple_byte
 13456   0036B2  51F7               	movf	(??_consumer2QProcessMessage+1)& (0+255),w,b
 13457   0036B4  0A00               	xorlw	0	; case 0
 13458   0036B6  A4D8               	btfss	status,2,c
 13459   0036B8  D7B5               	goto	u23720
 13460                           
 13461                           ; BSR set to: 1
 13462                           ; Switch size 1, requested type "simple"
 13463                           ; Number of cases is 16, Range of values is 144 to 249
 13464                           ; switch strategies available:
 13465                           ; Name         Instructions Cycles
 13466                           ; simple_byte           49    25 (average)
 13467                           ;	Chosen strategy is simple_byte
 13468   0036BA  51F6               	movf	??_consumer2QProcessMessage& (0+255),w,b
 13469   0036BC  0A90               	xorlw	144	; case 144
 13470   0036BE  B4D8               	btfsc	status,2,c
 13471   0036C0  D7E4               	goto	l408
 13472   0036C2  0A01               	xorlw	1	; case 145
 13473   0036C4  B4D8               	btfsc	status,2,c
 13474   0036C6  D7E7               	goto	l417
 13475   0036C8  0A09               	xorlw	9	; case 152
 13476   0036CA  B4D8               	btfsc	status,2,c
 13477   0036CC  D7DE               	goto	l408
 13478   0036CE  0A01               	xorlw	1	; case 153
 13479   0036D0  B4D8               	btfsc	status,2,c
 13480   0036D2  D7E1               	goto	l417
 13481   0036D4  0A29               	xorlw	41	; case 176
 13482   0036D6  B4D8               	btfsc	status,2,c
 13483   0036D8  D7D8               	goto	l408
 13484   0036DA  0A01               	xorlw	1	; case 177
 13485   0036DC  B4D8               	btfsc	status,2,c
 13486   0036DE  D7DB               	goto	l417
 13487   0036E0  0A09               	xorlw	9	; case 184
 13488   0036E2  B4D8               	btfsc	status,2,c
 13489   0036E4  D7D2               	goto	l408
 13490   0036E6  0A01               	xorlw	1	; case 185
 13491   0036E8  B4D8               	btfsc	status,2,c
 13492   0036EA  D7D5               	goto	l417
 13493   0036EC  0A69               	xorlw	105	; case 208
 13494   0036EE  B4D8               	btfsc	status,2,c
 13495   0036F0  D7CC               	goto	l408
 13496   0036F2  0A01               	xorlw	1	; case 209
 13497   0036F4  B4D8               	btfsc	status,2,c
 13498   0036F6  D7CF               	goto	l417
 13499   0036F8  0A09               	xorlw	9	; case 216
 13500   0036FA  B4D8               	btfsc	status,2,c
 13501   0036FC  D7C6               	goto	l408
 13502   0036FE  0A01               	xorlw	1	; case 217
 13503   003700  B4D8               	btfsc	status,2,c
 13504   003702  D7C9               	goto	l417
 13505   003704  0A29               	xorlw	41	; case 240
 13506   003706  B4D8               	btfsc	status,2,c
 13507   003708  D7C0               	goto	l408
 13508   00370A  0A01               	xorlw	1	; case 241
 13509   00370C  B4D8               	btfsc	status,2,c
 13510   00370E  D7C3               	goto	l417
 13511   003710  0A09               	xorlw	9	; case 248
 13512   003712  B4D8               	btfsc	status,2,c
 13513   003714  D7BA               	goto	l408
 13514   003716  0A01               	xorlw	1	; case 249
 13515   003718  B4D8               	btfsc	status,2,c
 13516   00371A  D7BD               	goto	l417
 13517   00371C  D783               	goto	u23720
 13518   00371E                     l22104:
 13519                           
 13520                           ; BSR set to: 2
 13521                           ;../event_consumerDualActionQueue.c: 180:     tableIndex = findEvent(((uint16_t)m->bytes
      +                          [0])*256+m->bytes[1], ((uint16_t)m->bytes[2])*256+m->bytes[3]);
 13522   00371E  0101               	movlb	1	; () banked
 13523   003720  EE20 F003          	lfsr	2,3
 13524   003724  51F4               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13525   003726  26D9               	addwf	fsr2l,f,c
 13526   003728  51F5               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13527   00372A  22DA               	addwfc	fsr2h,f,c
 13528   00372C  50DF               	movf	indf2,w,c
 13529   00372E  6FF6               	movwf	??_consumer2QProcessMessage& (0+255),b
 13530   003730  EE20 F002          	lfsr	2,2
 13531   003734  51F4               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13532   003736  26D9               	addwf	fsr2l,f,c
 13533   003738  51F5               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13534   00373A  22DA               	addwfc	fsr2h,f,c
 13535   00373C  50DF               	movf	indf2,w,c
 13536   00373E  6FF7               	movwf	(??_consumer2QProcessMessage+1)& (0+255),b
 13537   003740  51F6               	movf	??_consumer2QProcessMessage& (0+255),w,b
 13538   003742  6FB5               	movwf	findEvent@nodeNumber& (0+255),b
 13539   003744  C1F7  F1B6         	movff	??_consumer2QProcessMessage+1,findEvent@nodeNumber+1
 13540   003748  EE20 F005          	lfsr	2,5
 13541   00374C  51F4               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13542   00374E  26D9               	addwf	fsr2l,f,c
 13543   003750  51F5               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13544   003752  22DA               	addwfc	fsr2h,f,c
 13545   003754  50DF               	movf	indf2,w,c
 13546   003756  6FF9               	movwf	(??_consumer2QProcessMessage+3)& (0+255),b
 13547   003758  EE20 F004          	lfsr	2,4
 13548   00375C  51F4               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13549   00375E  26D9               	addwf	fsr2l,f,c
 13550   003760  51F5               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13551   003762  22DA               	addwfc	fsr2h,f,c
 13552   003764  50DF               	movf	indf2,w,c
 13553   003766  6FFA               	movwf	(??_consumer2QProcessMessage+4)& (0+255),b
 13554   003768  51F9               	movf	(??_consumer2QProcessMessage+3)& (0+255),w,b
 13555   00376A  6FB7               	movwf	findEvent@eventNumber& (0+255),b
 13556   00376C  C1FA  F1B8         	movff	??_consumer2QProcessMessage+4,findEvent@eventNumber+1
 13557   003770  ECBE  F051         	call	_findEvent	;wreg free
 13558   003774  0102               	movlb	2	; () banked
 13559   003776  6FC9               	movwf	consumer2QProcessMessage@tableIndex& (0+255),b
 13560                           
 13561                           ; BSR set to: 2
 13562                           ;../event_consumerDualActionQueue.c: 181:     if (tableIndex == 0xff) return NOT_PROCESS
      +                          ED;
 13563   003778  29C9               	incf	consumer2QProcessMessage@tableIndex& (0+255),w,b
 13564   00377A  B4D8               	btfsc	status,2,c
 13565   00377C  D753               	goto	u23720
 13566                           
 13567                           ; BSR set to: 2
 13568   00377E  51C9               	movf	consumer2QProcessMessage@tableIndex& (0+255),w,b
 13569   003780  EC47  F041         	call	_getEVs
 13570                           
 13571                           ;../event_consumerDualActionQueue.c: 189:     opc=m->opc;
 13572   003784  0101               	movlb	1	; () banked
 13573   003786  EE20 F001          	lfsr	2,1
 13574   00378A  51F4               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13575   00378C  26D9               	addwf	fsr2l,f,c
 13576   00378E  51F5               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13577   003790  22DA               	addwfc	fsr2h,f,c
 13578   003792  50DF               	movf	indf2,w,c
 13579   003794  0102               	movlb	2	; () banked
 13580   003796  6FC6               	movwf	consumer2QProcessMessage@opc& (0+255),b
 13581                           
 13582                           ; BSR set to: 2
 13583                           ;../event_consumerDualActionQueue.c: 191:     if ( ! (opc&0b00000001)) {
 13584   003798  B1C6               	btfsc	consumer2QProcessMessage@opc& (0+255),0,b
 13585   00379A  D082               	goto	l424
 13586                           
 13587                           ; BSR set to: 2
 13588                           ;../event_consumerDualActionQueue.c: 192:         action.state = EVENT_ON;
 13589   00379C  0E01               	movlw	1
 13590   00379E  6FCF               	movwf	consumer2QProcessMessage@action& (0+255),b
 13591                           
 13592                           ;../event_consumerDualActionQueue.c: 196:         for (e=1; e<20 ;e++) {
 13593   0037A0  0E01               	movlw	1
 13594   0037A2  6FCE               	movwf	consumer2QProcessMessage@e& (0+255),b
 13595   0037A4                     l22124:
 13596                           
 13597                           ; BSR set to: 2
 13598                           ;../event_consumerDualActionQueue.c: 197:             action.a.value = evs[e];
 13599   0037A4  0E00               	movlw	low _evs
 13600   0037A6  25CE               	addwf	consumer2QProcessMessage@e& (0+255),w,b
 13601   0037A8  6ED9               	movwf	fsr2l,c
 13602   0037AA  6ADA               	clrf	fsr2h,c
 13603   0037AC  0E02               	movlw	high _evs
 13604   0037AE  22DA               	addwfc	fsr2h,f,c
 13605   0037B0  50DF               	movf	indf2,w,c
 13606   0037B2  6FD0               	movwf	(consumer2QProcessMessage@action+1)& (0+255),b
 13607                           
 13608                           ; BSR set to: 2
 13609                           ;../event_consumerDualActionQueue.c: 198:             if (action.a.value != 0) {
 13610   0037B4  51D0               	movf	(consumer2QProcessMessage@action+1)& (0+255),w,b
 13611   0037B6  B4D8               	btfsc	status,2,c
 13612   0037B8  D06D               	goto	l428
 13613                           
 13614                           ; BSR set to: 2
 13615                           ;../event_consumerDualActionQueue.c: 200:                 masked_action = action.a.value
      +                          &0x7F;
 13616   0037BA  51D0               	movf	(consumer2QProcessMessage@action+1)& (0+255),w,b
 13617   0037BC  0B7F               	andlw	127
 13618   0037BE  6FCC               	movwf	consumer2QProcessMessage@masked_action& (0+255),b
 13619                           
 13620                           ;../event_consumerDualActionQueue.c: 201:                 if ((masked_action) <= (8 + 5 
      +                          * 16)) {
 13621   0037C0  0E59               	movlw	89
 13622   0037C2  61CC               	cpfslt	consumer2QProcessMessage@masked_action& (0+255),b
 13623   0037C4  D067               	goto	l428
 13624                           
 13625                           ; BSR set to: 2
 13626                           ;../event_consumerDualActionQueue.c: 203:                     if ((masked_action) == 7) 
      +                          {
 13627   0037C6  0E07               	movlw	7
 13628   0037C8  19CC               	xorwf	consumer2QProcessMessage@masked_action& (0+255),w,b
 13629   0037CA  B4D8               	btfsc	status,2,c
 13630   0037CC  D109               	goto	u23950
 13631                           
 13632                           ; BSR set to: 2
 13633                           ;../event_consumerDualActionQueue.c: 206:                     if ((masked_action) < 8) {
 13634   0037CE  0E08               	movlw	8
 13635   0037D0  61CC               	cpfslt	consumer2QProcessMessage@masked_action& (0+255),b
 13636   0037D2  D007               	goto	l22138
 13637   0037D4                     u23790:
 13638                           
 13639                           ;../event_consumerDualActionQueue.c: 207:                         pushTwoAction(action);
 13640   0037D4  C2CF  F08D         	movff	consumer2QProcessMessage@action,pushTwoAction@a
 13641   0037D8  C2D0  F08E         	movff	consumer2QProcessMessage@action+1,pushTwoAction@a+1
 13642   0037DC  EC19  F057         	call	_pushTwoAction	;wreg free
 13643                           
 13644                           ;../event_consumerDualActionQueue.c: 208:                     } else {
 13645   0037E0  D059               	goto	l428
 13646   0037E2                     l22138:
 13647                           
 13648                           ; BSR set to: 2
 13649                           ;../event_consumerDualActionQueue.c: 209:                         io = (((masked_action)
      +                          -8)/5);
 13650   0037E2  0EF8               	movlw	248
 13651   0037E4  25CC               	addwf	consumer2QProcessMessage@masked_action& (0+255),w,b
 13652   0037E6  0100               	movlb	0	; () banked
 13653   0037E8  6F97               	movwf	___awdiv@dividend& (0+255),b
 13654   0037EA  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 13655   0037EC  0EFF               	movlw	255
 13656   0037EE  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 13657   0037F0  0E00               	movlw	0
 13658   0037F2  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 13659   0037F4  0E05               	movlw	5
 13660   0037F6  6F99               	movwf	___awdiv@divisor& (0+255),b
 13661   0037F8  ECD7  F052         	call	___awdiv	;wreg free
 13662   0037FC  0100               	movlb	0	; () banked
 13663   0037FE  5197               	movf	?___awdiv& (0+255),w,b
 13664   003800  0102               	movlb	2	; () banked
 13665   003802  6FCB               	movwf	consumer2QProcessMessage@io& (0+255),b
 13666                           
 13667                           ;../event_consumerDualActionQueue.c: 210:                         ca = (((masked_action)
      +                          -8)%5);
 13668   003804  0EF8               	movlw	248
 13669   003806  25CC               	addwf	consumer2QProcessMessage@masked_action& (0+255),w,b
 13670   003808  0100               	movlb	0	; () banked
 13671   00380A  6F8D               	movwf	___awmod@dividend& (0+255),b
 13672   00380C  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 13673   00380E  0EFF               	movlw	255
 13674   003810  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 13675   003812  0E00               	movlw	0
 13676   003814  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 13677   003816  0E05               	movlw	5
 13678   003818  6F8F               	movwf	___awmod@divisor& (0+255),b
 13679   00381A  EC74  F056         	call	___awmod	;wreg free
 13680   00381E  0100               	movlb	0	; () banked
 13681   003820  518D               	movf	?___awmod& (0+255),w,b
 13682   003822  0102               	movlb	2	; () banked
 13683   003824  6FCD               	movwf	consumer2QProcessMessage@ca& (0+255),b
 13684                           
 13685                           ;../event_consumerDualActionQueue.c: 211:                         switch (getNV((16 + 7*
      +                          (io) + 0))) {
 13686   003826  D01E               	goto	l22160
 13687   003828                     l22140:
 13688                           
 13689                           ; BSR set to: 0
 13690                           ;../event_consumerDualActionQueue.c: 213:                                 if (getNV((16 
      +                          + 7*(io) + 1)) & 0x80) {
 13691   003828  0102               	movlb	2	; () banked
 13692   00382A  51CB               	movf	consumer2QProcessMessage@io& (0+255),w,b
 13693   00382C  0D07               	mullw	7
 13694   00382E  50F3               	movf	243,w,c
 13695   003830  0F11               	addlw	17
 13696   003832  EC35  F05D         	call	_getNV
 13697   003836  0100               	movlb	0	; () banked
 13698   003838  BF8D               	btfsc	?_getNV& (0+255),7,b
 13699                           
 13700                           ; BSR set to: 0
 13701                           ;../event_consumerDualActionQueue.c: 214:                                     setExpedit
      +                          edActions();
 13702   00383A  ECD1  F061         	call	_setExpeditedActions	;wreg free
 13703   00383E                     l22144:
 13704                           
 13705                           ;../event_consumerDualActionQueue.c: 219:                                 if (ca == 0) {
 13706   00383E  0102               	movlb	2	; () banked
 13707   003840  51CD               	movf	consumer2QProcessMessage@ca& (0+255),w,b
 13708   003842  B4D8               	btfsc	status,2,c
 13709                           
 13710                           ; BSR set to: 2
 13711                           ;../event_consumerDualActionQueue.c: 221:                                     action.a.v
      +                          alue++;
 13712   003844  2BD0               	incf	(consumer2QProcessMessage@action+1)& (0+255),f,b
 13713                           
 13714                           ; BSR set to: 2
 13715                           ;../event_consumerDualActionQueue.c: 223:                                 if (ca == 4) {
 13716   003846  0E04               	movlw	4
 13717   003848  19CD               	xorwf	consumer2QProcessMessage@ca& (0+255),w,b
 13718   00384A  A4D8               	btfss	status,2,c
 13719   00384C  D002               	goto	l22152
 13720                           
 13721                           ; BSR set to: 2
 13722                           ;../event_consumerDualActionQueue.c: 225:                                     action.a.v
      +                          alue-=2;
 13723   00384E  0E02               	movlw	2
 13724   003850  5FD0               	subwf	(consumer2QProcessMessage@action+1)& (0+255),f,b
 13725   003852                     l22152:
 13726                           
 13727                           ; BSR set to: 2
 13728                           ;../event_consumerDualActionQueue.c: 227:                                 pushTwoAction(
      +                          action);
 13729   003852  C2CF  F08D         	movff	consumer2QProcessMessage@action,pushTwoAction@a
 13730   003856  C2D0  F08E         	movff	consumer2QProcessMessage@action+1,pushTwoAction@a+1
 13731   00385A  EC19  F057         	call	_pushTwoAction	;wreg free
 13732                           
 13733                           ;../event_consumerDualActionQueue.c: 228:                                 setNormalActio
      +                          ns();
 13734   00385E  ECCD  F061         	call	_setNormalActions	;wreg free
 13735                           
 13736                           ;../event_consumerDualActionQueue.c: 229:                                 break;
 13737   003862  D018               	goto	l428
 13738   003864                     l22160:
 13739                           
 13740                           ; BSR set to: 2
 13741   003864  51CB               	movf	consumer2QProcessMessage@io& (0+255),w,b
 13742   003866  0D07               	mullw	7
 13743   003868  50F3               	movf	243,w,c
 13744   00386A  0F10               	addlw	16
 13745   00386C  EC35  F05D         	call	_getNV
 13746                           
 13747                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13748                           ; Switch size 1, requested type "simple"
 13749                           ; Number of cases is 1, Range of values is 0 to 0
 13750                           ; switch strategies available:
 13751                           ; Name         Instructions Cycles
 13752                           ; simple_byte            4     3 (average)
 13753                           ;	Chosen strategy is simple_byte
 13754   003870  0100               	movlb	0	; () banked
 13755   003872  518E               	movf	(?_getNV+1)& (0+255),w,b
 13756   003874  0A00               	xorlw	0	; case 0
 13757   003876  A4D8               	btfss	status,2,c
 13758   003878  D00D               	goto	l428
 13759                           
 13760                           ; BSR set to: 0
 13761                           ; Switch size 1, requested type "simple"
 13762                           ; Number of cases is 4, Range of values is 1 to 4
 13763                           ; switch strategies available:
 13764                           ; Name         Instructions Cycles
 13765                           ; simple_byte           13     7 (average)
 13766                           ;	Chosen strategy is simple_byte
 13767   00387A  518D               	movf	?_getNV& (0+255),w,b
 13768   00387C  0A01               	xorlw	1	; case 1
 13769   00387E  B4D8               	btfsc	status,2,c
 13770   003880  D7D3               	goto	l22140
 13771   003882  0A03               	xorlw	3	; case 2
 13772   003884  B4D8               	btfsc	status,2,c
 13773   003886  D7DB               	goto	l22144
 13774   003888  0A01               	xorlw	1	; case 3
 13775   00388A  B4D8               	btfsc	status,2,c
 13776   00388C  D7D8               	goto	l22144
 13777   00388E  0A07               	xorlw	7	; case 4
 13778   003890  B4D8               	btfsc	status,2,c
 13779   003892  D7A0               	goto	u23790
 13780   003894                     l428:
 13781                           
 13782                           ;../event_consumerDualActionQueue.c: 240:         }
 13783                           
 13784                           ; BSR set to: 0
 13785   003894  0102               	movlb	2	; () banked
 13786   003896  2BCE               	incf	consumer2QProcessMessage@e& (0+255),f,b
 13787                           
 13788                           ; BSR set to: 2
 13789   003898  0E13               	movlw	19
 13790   00389A  65CE               	cpfsgt	consumer2QProcessMessage@e& (0+255),b
 13791   00389C  D783               	goto	l22124
 13792   00389E  D0A0               	goto	u23950
 13793   0038A0                     l424:
 13794                           
 13795                           ; BSR set to: 2
 13796                           ;../event_consumerDualActionQueue.c: 244:         uint8_t nextAction = evs[20 -1];
 13797   0038A0  C213  F2C7         	movff	_evs+19,consumer2QProcessMessage@nextAction
 13798                           
 13799                           ; BSR set to: 2
 13800                           ;../event_consumerDualActionQueue.c: 245:         action.state = EVENT_OFF;
 13801   0038A4  0E00               	movlw	0
 13802   0038A6  6FCF               	movwf	consumer2QProcessMessage@action& (0+255),b
 13803                           
 13804                           ;../event_consumerDualActionQueue.c: 246:         for (e=20 -1; e>=1 ;e--) {
 13805   0038A8  0E13               	movlw	19
 13806   0038AA  6FCE               	movwf	consumer2QProcessMessage@e& (0+255),b
 13807   0038AC                     l22170:
 13808                           
 13809                           ; BSR set to: 2
 13810                           ;../event_consumerDualActionQueue.c: 247:             uint8_t nextSimultaneous;;../event
      +                          _consumerDualActionQueue.c: 248:             uint8_t firstAction = 0;
 13811   0038AC  0E00               	movlw	0
 13812   0038AE  6FC8               	movwf	consumer2QProcessMessage@firstAction& (0+255),b
 13813                           
 13814                           ; BSR set to: 2
 13815                           ;../event_consumerDualActionQueue.c: 249:             action.a.value = nextAction;
 13816   0038B0  C2C7  F2D0         	movff	consumer2QProcessMessage@nextAction,consumer2QProcessMessage@action+1
 13817                           
 13818                           ; BSR set to: 2
 13819                           ;../event_consumerDualActionQueue.c: 253:             if (e > 1) {
 13820   0038B4  0E01               	movlw	1
 13821   0038B6  65CE               	cpfsgt	consumer2QProcessMessage@e& (0+255),b
 13822   0038B8  D00A               	goto	l22180
 13823                           
 13824                           ; BSR set to: 2
 13825                           ;../event_consumerDualActionQueue.c: 254:                 nextAction = evs[e-1];
 13826   0038BA  0EFF               	movlw	low (_evs+65535)
 13827   0038BC  25CE               	addwf	consumer2QProcessMessage@e& (0+255),w,b
 13828   0038BE  6ED9               	movwf	fsr2l,c
 13829   0038C0  6ADA               	clrf	fsr2h,c
 13830   0038C2  0E01               	movlw	high (_evs+65535)
 13831   0038C4  22DA               	addwfc	fsr2h,f,c
 13832   0038C6  50DF               	movf	indf2,w,c
 13833   0038C8  6FC7               	movwf	consumer2QProcessMessage@nextAction& (0+255),b
 13834                           
 13835                           ; BSR set to: 2
 13836                           ;../event_consumerDualActionQueue.c: 255:                 nextSimultaneous = nextAction 
      +                          & 0x80;
 13837   0038CA  51C7               	movf	consumer2QProcessMessage@nextAction& (0+255),w,b
 13838   0038CC  D001               	goto	L3
 13839   0038CE                     l22180:
 13840                           
 13841                           ; BSR set to: 2
 13842                           ;../event_consumerDualActionQueue.c: 257:                 nextSimultaneous = firstAction
      +                           & 0x80;
 13843   0038CE  51C8               	movf	consumer2QProcessMessage@firstAction& (0+255),w,b
 13844   0038D0                     L3:
 13845   0038D0  0B80               	andlw	128
 13846   0038D2  6FCA               	movwf	consumer2QProcessMessage@nextSimultaneous& (0+255),b
 13847                           
 13848                           ; BSR set to: 2
 13849                           ;../event_consumerDualActionQueue.c: 259:             if (action.a.value != 0) {
 13850   0038D4  51D0               	movf	(consumer2QProcessMessage@action+1)& (0+255),w,b
 13851   0038D6  B4D8               	btfsc	status,2,c
 13852   0038D8  D07E               	goto	l449
 13853                           
 13854                           ; BSR set to: 2
 13855                           ;../event_consumerDualActionQueue.c: 261:                 if (firstAction == 0) {
 13856   0038DA  51C8               	movf	consumer2QProcessMessage@firstAction& (0+255),w,b
 13857   0038DC  B4D8               	btfsc	status,2,c
 13858                           
 13859                           ; BSR set to: 2
 13860                           ;../event_consumerDualActionQueue.c: 262:                     firstAction = action.a.val
      +                          ue;
 13861   0038DE  C2D0  F2C8         	movff	consumer2QProcessMessage@action+1,consumer2QProcessMessage@firstAction
 13862                           
 13863                           ; BSR set to: 2
 13864                           ;../event_consumerDualActionQueue.c: 264:                 action.a.value &= 0x7F;
 13865   0038E2  9FD0               	bcf	(consumer2QProcessMessage@action+1)& (0+255),7,b
 13866                           
 13867                           ; BSR set to: 2
 13868                           ;../event_consumerDualActionQueue.c: 265:                 if (action.a.value <= (8 + 5 *
      +                           16)) {
 13869   0038E4  0E59               	movlw	89
 13870   0038E6  61D0               	cpfslt	(consumer2QProcessMessage@action+1)& (0+255),b
 13871   0038E8  D076               	goto	l449
 13872                           
 13873                           ; BSR set to: 2
 13874                           ;../event_consumerDualActionQueue.c: 267:                     if ((action.a.value) == 7)
      +                           {
 13875   0038EA  0E07               	movlw	7
 13876   0038EC  19D0               	xorwf	(consumer2QProcessMessage@action+1)& (0+255),w,b
 13877   0038EE  B4D8               	btfsc	status,2,c
 13878   0038F0  D077               	goto	u23950
 13879                           
 13880                           ; BSR set to: 2
 13881                           ;../event_consumerDualActionQueue.c: 270:                     if ((action.a.value < 8) &
      +                          & (action.a.value != 1)) {
 13882   0038F2  0E08               	movlw	8
 13883   0038F4  61D0               	cpfslt	(consumer2QProcessMessage@action+1)& (0+255),b
 13884   0038F6  D00C               	goto	l22204
 13885                           
 13886                           ; BSR set to: 2
 13887   0038F8  05D0               	decf	(consumer2QProcessMessage@action+1)& (0+255),w,b
 13888   0038FA  B4D8               	btfsc	status,2,c
 13889   0038FC  D009               	goto	l22204
 13890                           
 13891                           ; BSR set to: 2
 13892                           ;../event_consumerDualActionQueue.c: 271:                         action.a.value |= next
      +                          Simultaneous;
 13893   0038FE  51CA               	movf	consumer2QProcessMessage@nextSimultaneous& (0+255),w,b
 13894   003900  13D0               	iorwf	(consumer2QProcessMessage@action+1)& (0+255),f,b
 13895                           
 13896                           ; BSR set to: 2
 13897                           ;../event_consumerDualActionQueue.c: 272:                         pushTwoAction(action);
 13898   003902  C2CF  F08D         	movff	consumer2QProcessMessage@action,pushTwoAction@a
 13899   003906  C2D0  F08E         	movff	consumer2QProcessMessage@action+1,pushTwoAction@a+1
 13900   00390A  EC19  F057         	call	_pushTwoAction	;wreg free
 13901                           
 13902                           ;../event_consumerDualActionQueue.c: 273:                     } else {
 13903   00390E  D063               	goto	l449
 13904   003910                     l22204:
 13905                           
 13906                           ; BSR set to: 2
 13907                           ;../event_consumerDualActionQueue.c: 274:                         io = (((action.a.value
      +                          )-8)/5);
 13908   003910  0EF8               	movlw	248
 13909   003912  25D0               	addwf	(consumer2QProcessMessage@action+1)& (0+255),w,b
 13910   003914  0100               	movlb	0	; () banked
 13911   003916  6F97               	movwf	___awdiv@dividend& (0+255),b
 13912   003918  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 13913   00391A  0EFF               	movlw	255
 13914   00391C  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 13915   00391E  0E00               	movlw	0
 13916   003920  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 13917   003922  0E05               	movlw	5
 13918   003924  6F99               	movwf	___awdiv@divisor& (0+255),b
 13919   003926  ECD7  F052         	call	___awdiv	;wreg free
 13920   00392A  0100               	movlb	0	; () banked
 13921   00392C  5197               	movf	?___awdiv& (0+255),w,b
 13922   00392E  0102               	movlb	2	; () banked
 13923   003930  6FCB               	movwf	consumer2QProcessMessage@io& (0+255),b
 13924                           
 13925                           ;../event_consumerDualActionQueue.c: 275:                         ca = (((action.a.value
      +                          )-8)%5);
 13926   003932  0EF8               	movlw	248
 13927   003934  25D0               	addwf	(consumer2QProcessMessage@action+1)& (0+255),w,b
 13928   003936  0100               	movlb	0	; () banked
 13929   003938  6F8D               	movwf	___awmod@dividend& (0+255),b
 13930   00393A  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 13931   00393C  0EFF               	movlw	255
 13932   00393E  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 13933   003940  0E00               	movlw	0
 13934   003942  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 13935   003944  0E05               	movlw	5
 13936   003946  6F8F               	movwf	___awmod@divisor& (0+255),b
 13937   003948  EC74  F056         	call	___awmod	;wreg free
 13938   00394C  0100               	movlb	0	; () banked
 13939   00394E  518D               	movf	?___awmod& (0+255),w,b
 13940   003950  0102               	movlb	2	; () banked
 13941   003952  6FCD               	movwf	consumer2QProcessMessage@ca& (0+255),b
 13942                           
 13943                           ;../event_consumerDualActionQueue.c: 276:                         switch (getNV((16 + 7*
      +                          (io) + 0))) {
 13944   003954  D028               	goto	l22232
 13945   003956                     l22206:
 13946                           
 13947                           ; BSR set to: 0
 13948                           ;../event_consumerDualActionQueue.c: 278:                                 if (getNV((16 
      +                          + 7*(io) + 1)) & 0x80) {
 13949   003956  0102               	movlb	2	; () banked
 13950   003958  51CB               	movf	consumer2QProcessMessage@io& (0+255),w,b
 13951   00395A  0D07               	mullw	7
 13952   00395C  50F3               	movf	243,w,c
 13953   00395E  0F11               	addlw	17
 13954   003960  EC35  F05D         	call	_getNV
 13955   003964  0100               	movlb	0	; () banked
 13956   003966  BF8D               	btfsc	?_getNV& (0+255),7,b
 13957                           
 13958                           ; BSR set to: 0
 13959                           ;../event_consumerDualActionQueue.c: 279:                                     setExpedit
      +                          edActions();
 13960   003968  ECD1  F061         	call	_setExpeditedActions	;wreg free
 13961                           
 13962                           ;../event_consumerDualActionQueue.c: 281:                                 if (ca == 3) {
 13963   00396C  0E03               	movlw	3
 13964   00396E  0102               	movlb	2	; () banked
 13965   003970  19CD               	xorwf	consumer2QProcessMessage@ca& (0+255),w,b
 13966   003972  B4D8               	btfsc	status,2,c
 13967                           
 13968                           ; BSR set to: 2
 13969                           ;../event_consumerDualActionQueue.c: 283:                                     action.a.v
      +                          alue--;
 13970   003974  07D0               	decf	(consumer2QProcessMessage@action+1)& (0+255),f,b
 13971   003976                     l22214:
 13972                           
 13973                           ;../event_consumerDualActionQueue.c: 288:                                 if (ca == 0) {
 13974   003976  0102               	movlb	2	; () banked
 13975   003978  51CD               	movf	consumer2QProcessMessage@ca& (0+255),w,b
 13976   00397A  A4D8               	btfss	status,2,c
 13977   00397C  D002               	goto	l459
 13978                           
 13979                           ; BSR set to: 2
 13980                           ;../event_consumerDualActionQueue.c: 290:                                     action.a.v
      +                          alue += 2;
 13981   00397E  0E02               	movlw	2
 13982   003980  27D0               	addwf	(consumer2QProcessMessage@action+1)& (0+255),f,b
 13983   003982                     l459:
 13984                           
 13985                           ; BSR set to: 2
 13986                           ;../event_consumerDualActionQueue.c: 292:                                 if (ca == 4) {
 13987   003982  0E04               	movlw	4
 13988   003984  19CD               	xorwf	consumer2QProcessMessage@ca& (0+255),w,b
 13989   003986  A4D8               	btfss	status,2,c
 13990   003988  D002               	goto	l460
 13991                           
 13992                           ; BSR set to: 2
 13993                           ;../event_consumerDualActionQueue.c: 294:                                     action.a.v
      +                          alue -= 3;
 13994   00398A  0E03               	movlw	3
 13995   00398C  5FD0               	subwf	(consumer2QProcessMessage@action+1)& (0+255),f,b
 13996   00398E                     l460:
 13997                           
 13998                           ;../event_consumerDualActionQueue.c: 296:                                 action.a.value
      +                           |= nextSimultaneous;
 13999   00398E  0102               	movlb	2	; () banked
 14000   003990  51CA               	movf	consumer2QProcessMessage@nextSimultaneous& (0+255),w,b
 14001   003992  13D0               	iorwf	(consumer2QProcessMessage@action+1)& (0+255),f,b
 14002                           
 14003                           ; BSR set to: 2
 14004                           ;../event_consumerDualActionQueue.c: 297:                                 pushTwoAction(
      +                          action);
 14005   003994  C2CF  F08D         	movff	consumer2QProcessMessage@action,pushTwoAction@a
 14006   003998  C2D0  F08E         	movff	consumer2QProcessMessage@action+1,pushTwoAction@a+1
 14007   00399C  EC19  F057         	call	_pushTwoAction	;wreg free
 14008                           
 14009                           ;../event_consumerDualActionQueue.c: 298:                                 setNormalActio
      +                          ns();
 14010   0039A0  ECCD  F061         	call	_setNormalActions	;wreg free
 14011                           
 14012                           ;../event_consumerDualActionQueue.c: 299:                                 break;
 14013   0039A4  D018               	goto	l449
 14014   0039A6                     l22232:
 14015                           
 14016                           ; BSR set to: 2
 14017   0039A6  51CB               	movf	consumer2QProcessMessage@io& (0+255),w,b
 14018   0039A8  0D07               	mullw	7
 14019   0039AA  50F3               	movf	243,w,c
 14020   0039AC  0F10               	addlw	16
 14021   0039AE  EC35  F05D         	call	_getNV
 14022                           
 14023                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14024                           ; Switch size 1, requested type "simple"
 14025                           ; Number of cases is 1, Range of values is 0 to 0
 14026                           ; switch strategies available:
 14027                           ; Name         Instructions Cycles
 14028                           ; simple_byte            4     3 (average)
 14029                           ;	Chosen strategy is simple_byte
 14030   0039B2  0100               	movlb	0	; () banked
 14031   0039B4  518E               	movf	(?_getNV+1)& (0+255),w,b
 14032   0039B6  0A00               	xorlw	0	; case 0
 14033   0039B8  A4D8               	btfss	status,2,c
 14034   0039BA  D00D               	goto	l449
 14035                           
 14036                           ; BSR set to: 0
 14037                           ; Switch size 1, requested type "simple"
 14038                           ; Number of cases is 4, Range of values is 1 to 4
 14039                           ; switch strategies available:
 14040                           ; Name         Instructions Cycles
 14041                           ; simple_byte           13     7 (average)
 14042                           ;	Chosen strategy is simple_byte
 14043   0039BC  518D               	movf	?_getNV& (0+255),w,b
 14044   0039BE  0A01               	xorlw	1	; case 1
 14045   0039C0  B4D8               	btfsc	status,2,c
 14046   0039C2  D7C9               	goto	l22206
 14047   0039C4  0A03               	xorlw	3	; case 2
 14048   0039C6  B4D8               	btfsc	status,2,c
 14049   0039C8  D7D6               	goto	l22214
 14050   0039CA  0A01               	xorlw	1	; case 3
 14051   0039CC  B4D8               	btfsc	status,2,c
 14052   0039CE  D7D3               	goto	l22214
 14053   0039D0  0A07               	xorlw	7	; case 4
 14054   0039D2  B4D8               	btfsc	status,2,c
 14055   0039D4  D7DC               	goto	l460
 14056   0039D6                     l449:
 14057                           
 14058                           ;../event_consumerDualActionQueue.c: 312:         }
 14059                           
 14060                           ; BSR set to: 0
 14061   0039D6  0102               	movlb	2	; () banked
 14062   0039D8  07CE               	decf	consumer2QProcessMessage@e& (0+255),f,b
 14063                           
 14064                           ; BSR set to: 2
 14065   0039DA  51CE               	movf	consumer2QProcessMessage@e& (0+255),w,b
 14066   0039DC  A4D8               	btfss	status,2,c
 14067   0039DE  D766               	goto	l22170
 14068   0039E0                     u23950:
 14069                           
 14070                           ; BSR set to: 2
 14071                           ;../event_consumerDualActionQueue.c: 314:     consumer2QDiagnostics[0].asUint++;
 14072   0039E0  0101               	movlb	1	; () banked
 14073   0039E2  4BB3               	infsnz	_consumer2QDiagnostics& (0+255),f,b
 14074   0039E4  2BB4               	incf	(_consumer2QDiagnostics+1)& (0+255),f,b
 14075                           
 14076                           ; BSR set to: 1
 14077                           ;../event_consumerDualActionQueue.c: 315:     return PROCESSED;
 14078   0039E6  0E01               	movlw	1
 14079   0039E8  0012               	return		;funcret
 14080   0039EA                     __end_of_consumer2QProcessMessage:
 14081                           	callstack 0
 14082                           
 14083 ;; *************** function _teachProcessMessage *****************
 14084 ;; Defined at:
 14085 ;;		line 308 in file "../../VLCBlib_PIC/event_teach.c"
 14086 ;; Parameters:    Size  Location     Type
 14087 ;;  m               2   63[BANK1 ] PTR struct Message
 14088 ;;		 -> poll@m(9), 
 14089 ;; Auto vars:     Size  Location     Type
 14090 ;;		None
 14091 ;; Return value:  Size  Location     Type
 14092 ;;                  1    wreg      enum E12732
 14093 ;; Registers used:
 14094 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 14095 ;; Tracked objects:
 14096 ;;		On entry : 0/0
 14097 ;;		On exit  : 0/0
 14098 ;;		Unchanged: 0/0
 14099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14100 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14102 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14103 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14104 ;;Total ram usage:        8 bytes
 14105 ;; Hardware stack levels used: 1
 14106 ;; Hardware stack levels required when called: 24
 14107 ;; This function calls:
 14108 ;;		_doEvlrn
 14109 ;;		_doEvuln
 14110 ;;		_doNenrd
 14111 ;;		_doNerd
 14112 ;;		_doNnclr
 14113 ;;		_doNnevn
 14114 ;;		_doReqev
 14115 ;;		_doReval
 14116 ;;		_doRqevn
 14117 ;;		_sendMessage3
 14118 ;;		_sendMessage5
 14119 ;;		_teachCheckLen
 14120 ;; This function is called by:
 14121 ;;		_poll
 14122 ;; This function uses a non-reentrant model
 14123 ;;
 14124                           
 14125                           	psect	text25
 14126   002292                     __ptext25:
 14127                           	callstack 0
 14128   002292                     _teachProcessMessage:
 14129                           	callstack 5
 14130                           
 14131                           ;../../VLCBlib_PIC/event_teach.c: 309:     switch(m->opc) {
 14132                           
 14133                           ;incstack = 0
 14134   002292  D2EB               	goto	l22740
 14135   002294                     l22474:
 14136                           
 14137                           ; BSR set to: 1
 14138                           ;../../VLCBlib_PIC/event_teach.c: 312:             if (teachCheckLen(m, 3, 0) == PROCESS
      +                          ED) return PROCESSED;
 14139   002294  C1F4  F1C6         	movff	teachProcessMessage@m,teachCheckLen@m
 14140   002298  C1F5  F1C7         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14141   00229C  0E03               	movlw	3
 14142   00229E  6FC8               	movwf	teachCheckLen@needed& (0+255),b
 14143   0022A0  0E00               	movlw	0
 14144   0022A2  6FC9               	movwf	teachCheckLen@learn& (0+255),b
 14145   0022A4  ECAD  F058         	call	_teachCheckLen	;wreg free
 14146   0022A8  06E8               	decf	wreg,f,c
 14147   0022AA  A4D8               	btfss	status,2,c
 14148   0022AC  D002               	goto	l22480
 14149   0022AE                     u24190:
 14150   0022AE  0E01               	movlw	1
 14151   0022B0  0012               	return	
 14152   0022B2                     l22480:
 14153                           
 14154                           ;../../VLCBlib_PIC/event_teach.c: 313:             if ((m->bytes[0] == nn.bytes.hi) && (
      +                          m->bytes[1] == nn.bytes.lo)) {
 14155   0022B2  0101               	movlb	1	; () banked
 14156   0022B4  EE20 F002          	lfsr	2,2
 14157   0022B8  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14158   0022BA  26D9               	addwf	fsr2l,f,c
 14159   0022BC  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14160   0022BE  22DA               	addwfc	fsr2h,f,c
 14161   0022C0  50DE               	movf	postinc2,w,c
 14162   0022C2  0100               	movlb	0	; () banked
 14163   0022C4  19B4               	xorwf	(_nn+1)& (0+255),w,b
 14164   0022C6  A4D8               	btfss	status,2,c
 14165   0022C8  D00F               	goto	l22486
 14166                           
 14167                           ; BSR set to: 0
 14168   0022CA  0101               	movlb	1	; () banked
 14169   0022CC  EE20 F003          	lfsr	2,3
 14170   0022D0  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14171   0022D2  26D9               	addwf	fsr2l,f,c
 14172   0022D4  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14173   0022D6  22DA               	addwfc	fsr2h,f,c
 14174   0022D8  0100               	movlb	0	; () banked
 14175   0022DA  51B3               	movf	_nn& (0+255),w,b
 14176   0022DC  18DE               	xorwf	postinc2,w,c
 14177   0022DE  A4D8               	btfss	status,2,c
 14178   0022E0  D003               	goto	l22486
 14179   0022E2                     u24210:
 14180                           
 14181                           ;../../VLCBlib_PIC/event_teach.c: 314:                 mode_flags |= 1;
 14182   0022E2  0101               	movlb	1	; () banked
 14183   0022E4  8179               	bsf	_mode_flags& (0+255),0,b
 14184                           
 14185                           ;../../VLCBlib_PIC/event_teach.c: 315:             } else {
 14186   0022E6  D7E3               	goto	u24190
 14187   0022E8                     l22486:
 14188                           
 14189                           ;../../VLCBlib_PIC/event_teach.c: 316:                 mode_flags &= ~1;
 14190   0022E8  0101               	movlb	1	; () banked
 14191   0022EA  9179               	bcf	_mode_flags& (0+255),0,b
 14192   0022EC  D7E0               	goto	u24190
 14193   0022EE                     l22492:
 14194                           
 14195                           ; BSR set to: 1
 14196                           ;../../VLCBlib_PIC/event_teach.c: 320:             if (teachCheckLen(m, 4, 0) == PROCESS
      +                          ED) return PROCESSED;
 14197   0022EE  C1F4  F1C6         	movff	teachProcessMessage@m,teachCheckLen@m
 14198   0022F2  C1F5  F1C7         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14199   0022F6  0E04               	movlw	4
 14200   0022F8  6FC8               	movwf	teachCheckLen@needed& (0+255),b
 14201   0022FA  0E00               	movlw	0
 14202   0022FC  6FC9               	movwf	teachCheckLen@learn& (0+255),b
 14203   0022FE  ECAD  F058         	call	_teachCheckLen	;wreg free
 14204   002302  06E8               	decf	wreg,f,c
 14205   002304  B4D8               	btfsc	status,2,c
 14206   002306  D7D3               	goto	u24190
 14207                           
 14208                           ;../../VLCBlib_PIC/event_teach.c: 321:             if ((m->bytes[0] == nn.bytes.hi) && (
      +                          m->bytes[1] == nn.bytes.lo)) {
 14209   002308  0101               	movlb	1	; () banked
 14210   00230A  EE20 F002          	lfsr	2,2
 14211   00230E  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14212   002310  26D9               	addwf	fsr2l,f,c
 14213   002312  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14214   002314  22DA               	addwfc	fsr2h,f,c
 14215   002316  50DE               	movf	postinc2,w,c
 14216   002318  0100               	movlb	0	; () banked
 14217   00231A  19B4               	xorwf	(_nn+1)& (0+255),w,b
 14218   00231C  A4D8               	btfss	status,2,c
 14219   00231E  D022               	goto	l22520
 14220                           
 14221                           ; BSR set to: 0
 14222   002320  0101               	movlb	1	; () banked
 14223   002322  EE20 F003          	lfsr	2,3
 14224   002326  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14225   002328  26D9               	addwf	fsr2l,f,c
 14226   00232A  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14227   00232C  22DA               	addwfc	fsr2h,f,c
 14228   00232E  0100               	movlb	0	; () banked
 14229   002330  51B3               	movf	_nn& (0+255),w,b
 14230   002332  18DE               	xorwf	postinc2,w,c
 14231   002334  A4D8               	btfss	status,2,c
 14232   002336  D016               	goto	l22520
 14233                           
 14234                           ; BSR set to: 0
 14235                           ;../../VLCBlib_PIC/event_teach.c: 322:                 if (m->bytes[2] == MODE_LEARN_ON)
      +                           {
 14236   002338  0101               	movlb	1	; () banked
 14237   00233A  EE20 F004          	lfsr	2,4
 14238   00233E  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14239   002340  26D9               	addwf	fsr2l,f,c
 14240   002342  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14241   002344  22DA               	addwfc	fsr2h,f,c
 14242   002346  0E08               	movlw	8
 14243   002348  18DE               	xorwf	postinc2,w,c
 14244   00234A  B4D8               	btfsc	status,2,c
 14245   00234C  D7CA               	goto	u24210
 14246                           
 14247                           ; BSR set to: 1
 14248   00234E  EE20 F004          	lfsr	2,4
 14249   002352  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14250   002354  26D9               	addwf	fsr2l,f,c
 14251   002356  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14252   002358  22DA               	addwfc	fsr2h,f,c
 14253   00235A  0E09               	movlw	9
 14254   00235C  18DE               	xorwf	postinc2,w,c
 14255   00235E  B4D8               	btfsc	status,2,c
 14256   002360  D7C3               	goto	l22486
 14257   002362  D002               	goto	l22522
 14258   002364                     l22520:
 14259                           
 14260                           ; BSR set to: 0
 14261                           ;../../VLCBlib_PIC/event_teach.c: 333:                 mode_flags &= ~1;
 14262   002364  0101               	movlb	1	; () banked
 14263   002366  9179               	bcf	_mode_flags& (0+255),0,b
 14264   002368                     l22522:
 14265                           
 14266                           ;../../VLCBlib_PIC/event_teach.c: 335:             return NOT_PROCESSED;
 14267   002368  0E00               	movlw	0
 14268   00236A  0012               	return	
 14269   00236C                     l22526:
 14270                           
 14271                           ; BSR set to: 1
 14272                           ;../../VLCBlib_PIC/event_teach.c: 338:             if (teachCheckLen(m, 7, 1) == PROCESS
      +                          ED) {
 14273   00236C  C1F4  F1C6         	movff	teachProcessMessage@m,teachCheckLen@m
 14274   002370  C1F5  F1C7         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14275   002374  0E07               	movlw	7
 14276   002376  6FC8               	movwf	teachCheckLen@needed& (0+255),b
 14277   002378  0E01               	movlw	1
 14278   00237A  6FC9               	movwf	teachCheckLen@learn& (0+255),b
 14279   00237C  ECAD  F058         	call	_teachCheckLen	;wreg free
 14280   002380  06E8               	decf	wreg,f,c
 14281   002382  A4D8               	btfss	status,2,c
 14282   002384  D00B               	goto	l1466
 14283                           
 14284                           ;../../VLCBlib_PIC/event_teach.c: 339:                 sendMessage3(OPC_CMDERR, nn.bytes
      +                          .hi, nn.bytes.lo, CMDERR_INV_CMD);
 14285   002386  C0B4  F0A5         	movff	_nn+1,sendMessage3@data1
 14286   00238A  C0B3  F0A6         	movff	_nn,sendMessage3@data2
 14287   00238E  0E01               	movlw	1
 14288   002390  0100               	movlb	0	; () banked
 14289   002392  6FA7               	movwf	sendMessage3@data3& (0+255),b
 14290   002394  0E6F               	movlw	111
 14291   002396  ECCB  F05E         	call	_sendMessage3
 14292   00239A  D789               	goto	u24190
 14293   00239C                     l1466:
 14294                           
 14295                           ;../../VLCBlib_PIC/event_teach.c: 343:             if (! (mode_flags & 1)) return PROCES
      +                          SED;
 14296   00239C  0101               	movlb	1	; () banked
 14297   00239E  A179               	btfss	_mode_flags& (0+255),0,b
 14298   0023A0  D786               	goto	u24190
 14299                           
 14300                           ; BSR set to: 1
 14301                           ;../../VLCBlib_PIC/event_teach.c: 345:             doEvlrn((uint16_t)(m->bytes[0]<<8) | 
      +                          (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[4], m->bytes[5]);
 14302   0023A2  EE20 F003          	lfsr	2,3
 14303   0023A6  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14304   0023A8  26D9               	addwf	fsr2l,f,c
 14305   0023AA  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14306   0023AC  22DA               	addwfc	fsr2h,f,c
 14307   0023AE  50DF               	movf	indf2,w,c
 14308   0023B0  6FF6               	movwf	??_teachProcessMessage& (0+255),b
 14309   0023B2  EE20 F002          	lfsr	2,2
 14310   0023B6  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14311   0023B8  26D9               	addwf	fsr2l,f,c
 14312   0023BA  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14313   0023BC  22DA               	addwfc	fsr2h,f,c
 14314   0023BE  50DF               	movf	indf2,w,c
 14315   0023C0  6FF7               	movwf	(??_teachProcessMessage+1)& (0+255),b
 14316   0023C2  51F6               	movf	??_teachProcessMessage& (0+255),w,b
 14317   0023C4  6FE8               	movwf	doEvlrn@nodeNumber& (0+255),b
 14318   0023C6  C1F7  F1E9         	movff	??_teachProcessMessage+1,doEvlrn@nodeNumber+1
 14319   0023CA  EE20 F005          	lfsr	2,5
 14320   0023CE  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14321   0023D0  26D9               	addwf	fsr2l,f,c
 14322   0023D2  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14323   0023D4  22DA               	addwfc	fsr2h,f,c
 14324   0023D6  50DF               	movf	indf2,w,c
 14325   0023D8  6FF9               	movwf	(??_teachProcessMessage+3)& (0+255),b
 14326   0023DA  EE20 F004          	lfsr	2,4
 14327   0023DE  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14328   0023E0  26D9               	addwf	fsr2l,f,c
 14329   0023E2  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14330   0023E4  22DA               	addwfc	fsr2h,f,c
 14331   0023E6  50DF               	movf	indf2,w,c
 14332   0023E8  6FFA               	movwf	(??_teachProcessMessage+4)& (0+255),b
 14333   0023EA  51F9               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 14334   0023EC  6FEA               	movwf	doEvlrn@eventNumber& (0+255),b
 14335   0023EE  C1FA  F1EB         	movff	??_teachProcessMessage+4,doEvlrn@eventNumber+1
 14336   0023F2  EE20 F006          	lfsr	2,6
 14337   0023F6  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14338   0023F8  26D9               	addwf	fsr2l,f,c
 14339   0023FA  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14340   0023FC  22DA               	addwfc	fsr2h,f,c
 14341   0023FE  50DF               	movf	indf2,w,c
 14342   002400  6FEC               	movwf	doEvlrn@evNum& (0+255),b
 14343   002402  EE20 F007          	lfsr	2,7
 14344   002406  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14345   002408  26D9               	addwf	fsr2l,f,c
 14346   00240A  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14347   00240C  22DA               	addwfc	fsr2h,f,c
 14348   00240E  50DF               	movf	indf2,w,c
 14349   002410  6FED               	movwf	doEvlrn@evVal& (0+255),b
 14350   002412  EC7A  F048         	call	_doEvlrn	;wreg free
 14351   002416  D74B               	goto	u24190
 14352   002418                     l22544:
 14353                           
 14354                           ; BSR set to: 1
 14355                           ;../../VLCBlib_PIC/event_teach.c: 348:             if (teachCheckLen(m, 5, 1) == PROCESS
      +                          ED) return PROCESSED;
 14356   002418  C1F4  F1C6         	movff	teachProcessMessage@m,teachCheckLen@m
 14357   00241C  C1F5  F1C7         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14358   002420  0E05               	movlw	5
 14359   002422  6FC8               	movwf	teachCheckLen@needed& (0+255),b
 14360   002424  0E01               	movlw	1
 14361   002426  6FC9               	movwf	teachCheckLen@learn& (0+255),b
 14362   002428  ECAD  F058         	call	_teachCheckLen	;wreg free
 14363   00242C  06E8               	decf	wreg,f,c
 14364   00242E  B4D8               	btfsc	status,2,c
 14365   002430  D73E               	goto	u24190
 14366                           
 14367                           ;../../VLCBlib_PIC/event_teach.c: 349:             if (! (mode_flags & 1)) return PROCES
      +                          SED;
 14368   002432  0101               	movlb	1	; () banked
 14369   002434  A179               	btfss	_mode_flags& (0+255),0,b
 14370   002436  D73B               	goto	u24190
 14371                           
 14372                           ; BSR set to: 1
 14373                           ;../../VLCBlib_PIC/event_teach.c: 351:             doEvuln((uint16_t)(m->bytes[0]<<8) | 
      +                          (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]));
 14374   002438  EE20 F003          	lfsr	2,3
 14375   00243C  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14376   00243E  26D9               	addwf	fsr2l,f,c
 14377   002440  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14378   002442  22DA               	addwfc	fsr2h,f,c
 14379   002444  50DF               	movf	indf2,w,c
 14380   002446  6FF6               	movwf	??_teachProcessMessage& (0+255),b
 14381   002448  EE20 F002          	lfsr	2,2
 14382   00244C  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14383   00244E  26D9               	addwf	fsr2l,f,c
 14384   002450  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14385   002452  22DA               	addwfc	fsr2h,f,c
 14386   002454  50DF               	movf	indf2,w,c
 14387   002456  6FF7               	movwf	(??_teachProcessMessage+1)& (0+255),b
 14388   002458  51F6               	movf	??_teachProcessMessage& (0+255),w,b
 14389   00245A  6FC9               	movwf	doEvuln@nodeNumber& (0+255),b
 14390   00245C  C1F7  F1CA         	movff	??_teachProcessMessage+1,doEvuln@nodeNumber+1
 14391   002460  EE20 F005          	lfsr	2,5
 14392   002464  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14393   002466  26D9               	addwf	fsr2l,f,c
 14394   002468  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14395   00246A  22DA               	addwfc	fsr2h,f,c
 14396   00246C  50DF               	movf	indf2,w,c
 14397   00246E  6FF9               	movwf	(??_teachProcessMessage+3)& (0+255),b
 14398   002470  EE20 F004          	lfsr	2,4
 14399   002474  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14400   002476  26D9               	addwf	fsr2l,f,c
 14401   002478  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14402   00247A  22DA               	addwfc	fsr2h,f,c
 14403   00247C  50DF               	movf	indf2,w,c
 14404   00247E  6FFA               	movwf	(??_teachProcessMessage+4)& (0+255),b
 14405   002480  51F9               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 14406   002482  6FCB               	movwf	doEvuln@eventNumber& (0+255),b
 14407   002484  C1FA  F1CC         	movff	??_teachProcessMessage+4,doEvuln@eventNumber+1
 14408   002488  ECDA  F054         	call	_doEvuln	;wreg free
 14409   00248C  D710               	goto	u24190
 14410   00248E                     l22560:
 14411                           
 14412                           ; BSR set to: 1
 14413                           ;../../VLCBlib_PIC/event_teach.c: 354:             if (teachCheckLen(m, 6, 1) == PROCESS
      +                          ED) return PROCESSED;
 14414   00248E  C1F4  F1C6         	movff	teachProcessMessage@m,teachCheckLen@m
 14415   002492  C1F5  F1C7         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14416   002496  0E06               	movlw	6
 14417   002498  6FC8               	movwf	teachCheckLen@needed& (0+255),b
 14418   00249A  0E01               	movlw	1
 14419   00249C  6FC9               	movwf	teachCheckLen@learn& (0+255),b
 14420   00249E  ECAD  F058         	call	_teachCheckLen	;wreg free
 14421   0024A2  06E8               	decf	wreg,f,c
 14422   0024A4  B4D8               	btfsc	status,2,c
 14423   0024A6  D703               	goto	u24190
 14424                           
 14425                           ;../../VLCBlib_PIC/event_teach.c: 355:             if (! (mode_flags & 1)) return PROCES
      +                          SED;
 14426   0024A8  0101               	movlb	1	; () banked
 14427   0024AA  A179               	btfss	_mode_flags& (0+255),0,b
 14428   0024AC  D700               	goto	u24190
 14429                           
 14430                           ; BSR set to: 1
 14431                           ;../../VLCBlib_PIC/event_teach.c: 357:             doReqev((uint16_t)(m->bytes[0]<<8) | 
      +                          (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[4]);
 14432   0024AE  EE20 F003          	lfsr	2,3
 14433   0024B2  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14434   0024B4  26D9               	addwf	fsr2l,f,c
 14435   0024B6  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14436   0024B8  22DA               	addwfc	fsr2h,f,c
 14437   0024BA  50DF               	movf	indf2,w,c
 14438   0024BC  6FF6               	movwf	??_teachProcessMessage& (0+255),b
 14439   0024BE  EE20 F002          	lfsr	2,2
 14440   0024C2  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14441   0024C4  26D9               	addwf	fsr2l,f,c
 14442   0024C6  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14443   0024C8  22DA               	addwfc	fsr2h,f,c
 14444   0024CA  50DF               	movf	indf2,w,c
 14445   0024CC  6FF7               	movwf	(??_teachProcessMessage+1)& (0+255),b
 14446   0024CE  51F6               	movf	??_teachProcessMessage& (0+255),w,b
 14447   0024D0  6FC3               	movwf	doReqev@nodeNumber& (0+255),b
 14448   0024D2  C1F7  F1C4         	movff	??_teachProcessMessage+1,doReqev@nodeNumber+1
 14449   0024D6  EE20 F005          	lfsr	2,5
 14450   0024DA  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14451   0024DC  26D9               	addwf	fsr2l,f,c
 14452   0024DE  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14453   0024E0  22DA               	addwfc	fsr2h,f,c
 14454   0024E2  50DF               	movf	indf2,w,c
 14455   0024E4  6FF9               	movwf	(??_teachProcessMessage+3)& (0+255),b
 14456   0024E6  EE20 F004          	lfsr	2,4
 14457   0024EA  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14458   0024EC  26D9               	addwf	fsr2l,f,c
 14459   0024EE  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14460   0024F0  22DA               	addwfc	fsr2h,f,c
 14461   0024F2  50DF               	movf	indf2,w,c
 14462   0024F4  6FFA               	movwf	(??_teachProcessMessage+4)& (0+255),b
 14463   0024F6  51F9               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 14464   0024F8  6FC5               	movwf	doReqev@eventNumber& (0+255),b
 14465   0024FA  C1FA  F1C6         	movff	??_teachProcessMessage+4,doReqev@eventNumber+1
 14466   0024FE  EE20 F006          	lfsr	2,6
 14467   002502  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14468   002504  26D9               	addwf	fsr2l,f,c
 14469   002506  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14470   002508  22DA               	addwfc	fsr2h,f,c
 14471   00250A  50DF               	movf	indf2,w,c
 14472   00250C  6FC7               	movwf	doReqev@evNum& (0+255),b
 14473   00250E  EC6A  F03D         	call	_doReqev	;wreg free
 14474   002512  D6CD               	goto	u24190
 14475   002514                     l22576:
 14476                           
 14477                           ; BSR set to: 1
 14478                           ;../../VLCBlib_PIC/event_teach.c: 361:             if (teachCheckLen(m, 3, 0) == PROCESS
      +                          ED) return PROCESSED;
 14479   002514  C1F4  F1C6         	movff	teachProcessMessage@m,teachCheckLen@m
 14480   002518  C1F5  F1C7         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14481   00251C  0E03               	movlw	3
 14482   00251E  6FC8               	movwf	teachCheckLen@needed& (0+255),b
 14483   002520  0E00               	movlw	0
 14484   002522  6FC9               	movwf	teachCheckLen@learn& (0+255),b
 14485   002524  ECAD  F058         	call	_teachCheckLen	;wreg free
 14486   002528  06E8               	decf	wreg,f,c
 14487   00252A  B4D8               	btfsc	status,2,c
 14488   00252C  D6C0               	goto	u24190
 14489                           
 14490                           ;../../VLCBlib_PIC/event_teach.c: 362:             if ((m->bytes[0] != nn.bytes.hi) || (
      +                          m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14491   00252E  0101               	movlb	1	; () banked
 14492   002530  EE20 F002          	lfsr	2,2
 14493   002534  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14494   002536  26D9               	addwf	fsr2l,f,c
 14495   002538  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14496   00253A  22DA               	addwfc	fsr2h,f,c
 14497   00253C  50DE               	movf	postinc2,w,c
 14498   00253E  0100               	movlb	0	; () banked
 14499   002540  19B4               	xorwf	(_nn+1)& (0+255),w,b
 14500   002542  A4D8               	btfss	status,2,c
 14501   002544  D6B4               	goto	u24190
 14502                           
 14503                           ; BSR set to: 0
 14504   002546  0101               	movlb	1	; () banked
 14505   002548  EE20 F003          	lfsr	2,3
 14506   00254C  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14507   00254E  26D9               	addwf	fsr2l,f,c
 14508   002550  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14509   002552  22DA               	addwfc	fsr2h,f,c
 14510   002554  0100               	movlb	0	; () banked
 14511   002556  51B3               	movf	_nn& (0+255),w,b
 14512   002558  18DE               	xorwf	postinc2,w,c
 14513   00255A  A4D8               	btfss	status,2,c
 14514   00255C  D6A8               	goto	u24190
 14515   00255E  D6C4               	goto	l22486
 14516   002560                     l22596:
 14517                           
 14518                           ; BSR set to: 1
 14519                           ;../../VLCBlib_PIC/event_teach.c: 367:             if (teachCheckLen(m, 3, 1) == PROCESS
      +                          ED) return PROCESSED;
 14520   002560  C1F4  F1C6         	movff	teachProcessMessage@m,teachCheckLen@m
 14521   002564  C1F5  F1C7         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14522   002568  0E03               	movlw	3
 14523   00256A  6FC8               	movwf	teachCheckLen@needed& (0+255),b
 14524   00256C  0E01               	movlw	1
 14525   00256E  6FC9               	movwf	teachCheckLen@learn& (0+255),b
 14526   002570  ECAD  F058         	call	_teachCheckLen	;wreg free
 14527   002574  06E8               	decf	wreg,f,c
 14528   002576  B4D8               	btfsc	status,2,c
 14529   002578  D69A               	goto	u24190
 14530                           
 14531                           ;../../VLCBlib_PIC/event_teach.c: 368:             if ((m->bytes[0] != nn.bytes.hi) || (
      +                          m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14532   00257A  0101               	movlb	1	; () banked
 14533   00257C  EE20 F002          	lfsr	2,2
 14534   002580  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14535   002582  26D9               	addwf	fsr2l,f,c
 14536   002584  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14537   002586  22DA               	addwfc	fsr2h,f,c
 14538   002588  50DE               	movf	postinc2,w,c
 14539   00258A  0100               	movlb	0	; () banked
 14540   00258C  19B4               	xorwf	(_nn+1)& (0+255),w,b
 14541   00258E  A4D8               	btfss	status,2,c
 14542   002590  D68E               	goto	u24190
 14543                           
 14544                           ; BSR set to: 0
 14545   002592  0101               	movlb	1	; () banked
 14546   002594  EE20 F003          	lfsr	2,3
 14547   002598  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14548   00259A  26D9               	addwf	fsr2l,f,c
 14549   00259C  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14550   00259E  22DA               	addwfc	fsr2h,f,c
 14551   0025A0  0100               	movlb	0	; () banked
 14552   0025A2  51B3               	movf	_nn& (0+255),w,b
 14553   0025A4  18DE               	xorwf	postinc2,w,c
 14554   0025A6  A4D8               	btfss	status,2,c
 14555   0025A8  D682               	goto	u24190
 14556                           
 14557                           ; BSR set to: 0
 14558                           ;../../VLCBlib_PIC/event_teach.c: 370:             if (! (mode_flags & 1)) {
 14559   0025AA  0101               	movlb	1	; () banked
 14560   0025AC  B179               	btfsc	_mode_flags& (0+255),0,b
 14561   0025AE  D019               	goto	l22616
 14562                           
 14563                           ; BSR set to: 1
 14564                           ;../../VLCBlib_PIC/event_teach.c: 371:                 sendMessage3(OPC_CMDERR, nn.bytes
      +                          .hi, nn.bytes.lo, CMDERR_NOT_LRN);
 14565   0025B0  C0B4  F0A5         	movff	_nn+1,sendMessage3@data1
 14566   0025B4  C0B3  F0A6         	movff	_nn,sendMessage3@data2
 14567   0025B8  0E02               	movlw	2
 14568   0025BA  0100               	movlb	0	; () banked
 14569   0025BC  6FA7               	movwf	sendMessage3@data3& (0+255),b
 14570   0025BE  0E6F               	movlw	111
 14571   0025C0  ECCB  F05E         	call	_sendMessage3
 14572                           
 14573                           ;../../VLCBlib_PIC/event_teach.c: 372:                 sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_NNCLR, SERVICE_ID_OLD_TEACH, CMDERR_NOT_LRN);
 14574   0025C4  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 14575   0025C8  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 14576   0025CC  0E55               	movlw	85
 14577   0025CE  0101               	movlb	1	; () banked
 14578   0025D0  6FBF               	movwf	sendMessage5@data3& (0+255),b
 14579   0025D2  0E04               	movlw	4
 14580   0025D4  6FC0               	movwf	sendMessage5@data4& (0+255),b
 14581   0025D6  0E02               	movlw	2
 14582   0025D8  6FC1               	movwf	sendMessage5@data5& (0+255),b
 14583   0025DA  0EAF               	movlw	175
 14584   0025DC  EC13  F05F         	call	_sendMessage5
 14585   0025E0  D666               	goto	u24190
 14586   0025E2                     l22616:
 14587                           
 14588                           ; BSR set to: 1
 14589                           ;../../VLCBlib_PIC/event_teach.c: 376:             doNnclr();
 14590   0025E2  EC83  F05E         	call	_doNnclr	;wreg free
 14591                           
 14592                           ;../../VLCBlib_PIC/event_teach.c: 377:             break;
 14593   0025E6  D6C0               	goto	l22522
 14594   0025E8                     l22618:
 14595                           
 14596                           ; BSR set to: 1
 14597                           ;../../VLCBlib_PIC/event_teach.c: 379:             if (teachCheckLen(m, 3, 0) == PROCESS
      +                          ED) return PROCESSED;
 14598   0025E8  C1F4  F1C6         	movff	teachProcessMessage@m,teachCheckLen@m
 14599   0025EC  C1F5  F1C7         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14600   0025F0  0E03               	movlw	3
 14601   0025F2  6FC8               	movwf	teachCheckLen@needed& (0+255),b
 14602   0025F4  0E00               	movlw	0
 14603   0025F6  6FC9               	movwf	teachCheckLen@learn& (0+255),b
 14604   0025F8  ECAD  F058         	call	_teachCheckLen	;wreg free
 14605   0025FC  06E8               	decf	wreg,f,c
 14606   0025FE  B4D8               	btfsc	status,2,c
 14607   002600  D656               	goto	u24190
 14608                           
 14609                           ;../../VLCBlib_PIC/event_teach.c: 380:             if ((m->bytes[0] != nn.bytes.hi) || (
      +                          m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14610   002602  0101               	movlb	1	; () banked
 14611   002604  EE20 F002          	lfsr	2,2
 14612   002608  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14613   00260A  26D9               	addwf	fsr2l,f,c
 14614   00260C  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14615   00260E  22DA               	addwfc	fsr2h,f,c
 14616   002610  50DE               	movf	postinc2,w,c
 14617   002612  0100               	movlb	0	; () banked
 14618   002614  19B4               	xorwf	(_nn+1)& (0+255),w,b
 14619   002616  A4D8               	btfss	status,2,c
 14620   002618  D64A               	goto	u24190
 14621                           
 14622                           ; BSR set to: 0
 14623   00261A  0101               	movlb	1	; () banked
 14624   00261C  EE20 F003          	lfsr	2,3
 14625   002620  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14626   002622  26D9               	addwf	fsr2l,f,c
 14627   002624  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14628   002626  22DA               	addwfc	fsr2h,f,c
 14629   002628  0100               	movlb	0	; () banked
 14630   00262A  51B3               	movf	_nn& (0+255),w,b
 14631   00262C  18DE               	xorwf	postinc2,w,c
 14632   00262E  A4D8               	btfss	status,2,c
 14633   002630  D63E               	goto	u24190
 14634                           
 14635                           ; BSR set to: 0
 14636                           ;../../VLCBlib_PIC/event_teach.c: 382:             doNerd();
 14637   002632  EC1F  F061         	call	_doNerd	;wreg free
 14638   002636  D63B               	goto	u24190
 14639   002638                     l22638:
 14640                           
 14641                           ; BSR set to: 1
 14642                           ;../../VLCBlib_PIC/event_teach.c: 385:             if (teachCheckLen(m, 3, 0) == PROCESS
      +                          ED) return PROCESSED;
 14643   002638  C1F4  F1C6         	movff	teachProcessMessage@m,teachCheckLen@m
 14644   00263C  C1F5  F1C7         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14645   002640  0E03               	movlw	3
 14646   002642  6FC8               	movwf	teachCheckLen@needed& (0+255),b
 14647   002644  0E00               	movlw	0
 14648   002646  6FC9               	movwf	teachCheckLen@learn& (0+255),b
 14649   002648  ECAD  F058         	call	_teachCheckLen	;wreg free
 14650   00264C  06E8               	decf	wreg,f,c
 14651   00264E  B4D8               	btfsc	status,2,c
 14652   002650  D62E               	goto	u24190
 14653                           
 14654                           ;../../VLCBlib_PIC/event_teach.c: 386:             if ((m->bytes[0] != nn.bytes.hi) || (
      +                          m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14655   002652  0101               	movlb	1	; () banked
 14656   002654  EE20 F002          	lfsr	2,2
 14657   002658  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14658   00265A  26D9               	addwf	fsr2l,f,c
 14659   00265C  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14660   00265E  22DA               	addwfc	fsr2h,f,c
 14661   002660  50DE               	movf	postinc2,w,c
 14662   002662  0100               	movlb	0	; () banked
 14663   002664  19B4               	xorwf	(_nn+1)& (0+255),w,b
 14664   002666  A4D8               	btfss	status,2,c
 14665   002668  D622               	goto	u24190
 14666                           
 14667                           ; BSR set to: 0
 14668   00266A  0101               	movlb	1	; () banked
 14669   00266C  EE20 F003          	lfsr	2,3
 14670   002670  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14671   002672  26D9               	addwf	fsr2l,f,c
 14672   002674  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14673   002676  22DA               	addwfc	fsr2h,f,c
 14674   002678  0100               	movlb	0	; () banked
 14675   00267A  51B3               	movf	_nn& (0+255),w,b
 14676   00267C  18DE               	xorwf	postinc2,w,c
 14677   00267E  A4D8               	btfss	status,2,c
 14678   002680  D616               	goto	u24190
 14679                           
 14680                           ; BSR set to: 0
 14681                           ;../../VLCBlib_PIC/event_teach.c: 388:             doNnevn();
 14682   002682  ECE5  F056         	call	_doNnevn	;wreg free
 14683   002686  D613               	goto	u24190
 14684   002688                     l22658:
 14685                           
 14686                           ; BSR set to: 1
 14687                           ;../../VLCBlib_PIC/event_teach.c: 391:             if (teachCheckLen(m, 3, 0) == PROCESS
      +                          ED) return PROCESSED;
 14688   002688  C1F4  F1C6         	movff	teachProcessMessage@m,teachCheckLen@m
 14689   00268C  C1F5  F1C7         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14690   002690  0E03               	movlw	3
 14691   002692  6FC8               	movwf	teachCheckLen@needed& (0+255),b
 14692   002694  0E00               	movlw	0
 14693   002696  6FC9               	movwf	teachCheckLen@learn& (0+255),b
 14694   002698  ECAD  F058         	call	_teachCheckLen	;wreg free
 14695   00269C  06E8               	decf	wreg,f,c
 14696   00269E  B4D8               	btfsc	status,2,c
 14697   0026A0  D606               	goto	u24190
 14698                           
 14699                           ;../../VLCBlib_PIC/event_teach.c: 392:             if ((m->bytes[0] != nn.bytes.hi) || (
      +                          m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14700   0026A2  0101               	movlb	1	; () banked
 14701   0026A4  EE20 F002          	lfsr	2,2
 14702   0026A8  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14703   0026AA  26D9               	addwf	fsr2l,f,c
 14704   0026AC  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14705   0026AE  22DA               	addwfc	fsr2h,f,c
 14706   0026B0  50DE               	movf	postinc2,w,c
 14707   0026B2  0100               	movlb	0	; () banked
 14708   0026B4  19B4               	xorwf	(_nn+1)& (0+255),w,b
 14709   0026B6  A4D8               	btfss	status,2,c
 14710   0026B8  D5FA               	goto	u24190
 14711                           
 14712                           ; BSR set to: 0
 14713   0026BA  0101               	movlb	1	; () banked
 14714   0026BC  EE20 F003          	lfsr	2,3
 14715   0026C0  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14716   0026C2  26D9               	addwf	fsr2l,f,c
 14717   0026C4  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14718   0026C6  22DA               	addwfc	fsr2h,f,c
 14719   0026C8  0100               	movlb	0	; () banked
 14720   0026CA  51B3               	movf	_nn& (0+255),w,b
 14721   0026CC  18DE               	xorwf	postinc2,w,c
 14722   0026CE  A4D8               	btfss	status,2,c
 14723   0026D0  D5EE               	goto	u24190
 14724                           
 14725                           ; BSR set to: 0
 14726                           ;../../VLCBlib_PIC/event_teach.c: 394:             doRqevn();
 14727   0026D2  ECAC  F05D         	call	_doRqevn	;wreg free
 14728   0026D6  D5EB               	goto	u24190
 14729   0026D8                     l22678:
 14730                           
 14731                           ; BSR set to: 1
 14732                           ;../../VLCBlib_PIC/event_teach.c: 397:             if (teachCheckLen(m, 4, 0) == PROCESS
      +                          ED) return PROCESSED;
 14733   0026D8  C1F4  F1C6         	movff	teachProcessMessage@m,teachCheckLen@m
 14734   0026DC  C1F5  F1C7         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14735   0026E0  0E04               	movlw	4
 14736   0026E2  6FC8               	movwf	teachCheckLen@needed& (0+255),b
 14737   0026E4  0E00               	movlw	0
 14738   0026E6  6FC9               	movwf	teachCheckLen@learn& (0+255),b
 14739   0026E8  ECAD  F058         	call	_teachCheckLen	;wreg free
 14740   0026EC  06E8               	decf	wreg,f,c
 14741   0026EE  B4D8               	btfsc	status,2,c
 14742   0026F0  D5DE               	goto	u24190
 14743                           
 14744                           ;../../VLCBlib_PIC/event_teach.c: 398:             if ((m->bytes[0] != nn.bytes.hi) || (
      +                          m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14745   0026F2  0101               	movlb	1	; () banked
 14746   0026F4  EE20 F002          	lfsr	2,2
 14747   0026F8  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14748   0026FA  26D9               	addwf	fsr2l,f,c
 14749   0026FC  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14750   0026FE  22DA               	addwfc	fsr2h,f,c
 14751   002700  50DE               	movf	postinc2,w,c
 14752   002702  0100               	movlb	0	; () banked
 14753   002704  19B4               	xorwf	(_nn+1)& (0+255),w,b
 14754   002706  A4D8               	btfss	status,2,c
 14755   002708  D5D2               	goto	u24190
 14756                           
 14757                           ; BSR set to: 0
 14758   00270A  0101               	movlb	1	; () banked
 14759   00270C  EE20 F003          	lfsr	2,3
 14760   002710  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14761   002712  26D9               	addwf	fsr2l,f,c
 14762   002714  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14763   002716  22DA               	addwfc	fsr2h,f,c
 14764   002718  0100               	movlb	0	; () banked
 14765   00271A  51B3               	movf	_nn& (0+255),w,b
 14766   00271C  18DE               	xorwf	postinc2,w,c
 14767   00271E  A4D8               	btfss	status,2,c
 14768   002720  D5C6               	goto	u24190
 14769                           
 14770                           ; BSR set to: 0
 14771                           ;../../VLCBlib_PIC/event_teach.c: 400:             doNenrd(m->bytes[2]);
 14772   002722  0101               	movlb	1	; () banked
 14773   002724  EE20 F004          	lfsr	2,4
 14774   002728  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14775   00272A  26D9               	addwf	fsr2l,f,c
 14776   00272C  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14777   00272E  22DA               	addwfc	fsr2h,f,c
 14778   002730  50DF               	movf	indf2,w,c
 14779   002732  ECAD  F056         	call	_doNenrd
 14780   002736  D5BB               	goto	u24190
 14781   002738                     l22698:
 14782                           
 14783                           ; BSR set to: 1
 14784                           ;../../VLCBlib_PIC/event_teach.c: 403:             if (teachCheckLen(m, 5, 0) == PROCESS
      +                          ED) return PROCESSED;
 14785   002738  C1F4  F1C6         	movff	teachProcessMessage@m,teachCheckLen@m
 14786   00273C  C1F5  F1C7         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14787   002740  0E05               	movlw	5
 14788   002742  6FC8               	movwf	teachCheckLen@needed& (0+255),b
 14789   002744  0E00               	movlw	0
 14790   002746  6FC9               	movwf	teachCheckLen@learn& (0+255),b
 14791   002748  ECAD  F058         	call	_teachCheckLen	;wreg free
 14792   00274C  06E8               	decf	wreg,f,c
 14793   00274E  B4D8               	btfsc	status,2,c
 14794   002750  D5AE               	goto	u24190
 14795                           
 14796                           ;../../VLCBlib_PIC/event_teach.c: 404:             if ((m->bytes[0] != nn.bytes.hi) || (
      +                          m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14797   002752  0101               	movlb	1	; () banked
 14798   002754  EE20 F002          	lfsr	2,2
 14799   002758  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14800   00275A  26D9               	addwf	fsr2l,f,c
 14801   00275C  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14802   00275E  22DA               	addwfc	fsr2h,f,c
 14803   002760  50DE               	movf	postinc2,w,c
 14804   002762  0100               	movlb	0	; () banked
 14805   002764  19B4               	xorwf	(_nn+1)& (0+255),w,b
 14806   002766  A4D8               	btfss	status,2,c
 14807   002768  D5A2               	goto	u24190
 14808                           
 14809                           ; BSR set to: 0
 14810   00276A  0101               	movlb	1	; () banked
 14811   00276C  EE20 F003          	lfsr	2,3
 14812   002770  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14813   002772  26D9               	addwf	fsr2l,f,c
 14814   002774  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14815   002776  22DA               	addwfc	fsr2h,f,c
 14816   002778  0100               	movlb	0	; () banked
 14817   00277A  51B3               	movf	_nn& (0+255),w,b
 14818   00277C  18DE               	xorwf	postinc2,w,c
 14819   00277E  A4D8               	btfss	status,2,c
 14820   002780  D596               	goto	u24190
 14821                           
 14822                           ; BSR set to: 0
 14823                           ;../../VLCBlib_PIC/event_teach.c: 406:             doReval(m->bytes[2], m->bytes[3]);
 14824   002782  0101               	movlb	1	; () banked
 14825   002784  EE20 F005          	lfsr	2,5
 14826   002788  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14827   00278A  26D9               	addwf	fsr2l,f,c
 14828   00278C  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14829   00278E  22DA               	addwfc	fsr2h,f,c
 14830   002790  50DF               	movf	indf2,w,c
 14831   002792  6FC2               	movwf	doReval@evNum& (0+255),b
 14832   002794  EE20 F004          	lfsr	2,4
 14833   002798  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14834   00279A  26D9               	addwf	fsr2l,f,c
 14835   00279C  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14836   00279E  22DA               	addwfc	fsr2h,f,c
 14837   0027A0  50DF               	movf	indf2,w,c
 14838   0027A2  ECA0  F049         	call	_doReval
 14839   0027A6  D583               	goto	u24190
 14840   0027A8                     l22718:
 14841                           
 14842                           ; BSR set to: 1
 14843                           ;../../VLCBlib_PIC/event_teach.c: 409:             if (teachCheckLen(m, 8, 1) == PROCESS
      +                          ED) return PROCESSED;
 14844   0027A8  C1F4  F1C6         	movff	teachProcessMessage@m,teachCheckLen@m
 14845   0027AC  C1F5  F1C7         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14846   0027B0  0E08               	movlw	8
 14847   0027B2  6FC8               	movwf	teachCheckLen@needed& (0+255),b
 14848   0027B4  0E01               	movlw	1
 14849   0027B6  6FC9               	movwf	teachCheckLen@learn& (0+255),b
 14850   0027B8  ECAD  F058         	call	_teachCheckLen	;wreg free
 14851   0027BC  06E8               	decf	wreg,f,c
 14852   0027BE  B4D8               	btfsc	status,2,c
 14853   0027C0  D576               	goto	u24190
 14854                           
 14855                           ;../../VLCBlib_PIC/event_teach.c: 410:             if ((m->bytes[0] != nn.bytes.hi) || (
      +                          m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14856   0027C2  0101               	movlb	1	; () banked
 14857   0027C4  EE20 F002          	lfsr	2,2
 14858   0027C8  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14859   0027CA  26D9               	addwf	fsr2l,f,c
 14860   0027CC  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14861   0027CE  22DA               	addwfc	fsr2h,f,c
 14862   0027D0  50DE               	movf	postinc2,w,c
 14863   0027D2  0100               	movlb	0	; () banked
 14864   0027D4  19B4               	xorwf	(_nn+1)& (0+255),w,b
 14865   0027D6  A4D8               	btfss	status,2,c
 14866   0027D8  D56A               	goto	u24190
 14867                           
 14868                           ; BSR set to: 0
 14869   0027DA  0101               	movlb	1	; () banked
 14870   0027DC  EE20 F003          	lfsr	2,3
 14871   0027E0  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14872   0027E2  26D9               	addwf	fsr2l,f,c
 14873   0027E4  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14874   0027E6  22DA               	addwfc	fsr2h,f,c
 14875   0027E8  0100               	movlb	0	; () banked
 14876   0027EA  51B3               	movf	_nn& (0+255),w,b
 14877   0027EC  18DE               	xorwf	postinc2,w,c
 14878   0027EE  A4D8               	btfss	status,2,c
 14879   0027F0  D55E               	goto	u24190
 14880                           
 14881                           ; BSR set to: 0
 14882                           ;../../VLCBlib_PIC/event_teach.c: 412:             doEvlrn((uint16_t)(m->bytes[0]<<8) | 
      +                          (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[5], m->bytes[6]);
 14883   0027F2  0101               	movlb	1	; () banked
 14884   0027F4  EE20 F003          	lfsr	2,3
 14885   0027F8  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14886   0027FA  26D9               	addwf	fsr2l,f,c
 14887   0027FC  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14888   0027FE  22DA               	addwfc	fsr2h,f,c
 14889   002800  50DF               	movf	indf2,w,c
 14890   002802  6FF6               	movwf	??_teachProcessMessage& (0+255),b
 14891   002804  EE20 F002          	lfsr	2,2
 14892   002808  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14893   00280A  26D9               	addwf	fsr2l,f,c
 14894   00280C  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14895   00280E  22DA               	addwfc	fsr2h,f,c
 14896   002810  50DF               	movf	indf2,w,c
 14897   002812  6FF7               	movwf	(??_teachProcessMessage+1)& (0+255),b
 14898   002814  51F6               	movf	??_teachProcessMessage& (0+255),w,b
 14899   002816  6FE8               	movwf	doEvlrn@nodeNumber& (0+255),b
 14900   002818  C1F7  F1E9         	movff	??_teachProcessMessage+1,doEvlrn@nodeNumber+1
 14901   00281C  EE20 F005          	lfsr	2,5
 14902   002820  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14903   002822  26D9               	addwf	fsr2l,f,c
 14904   002824  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14905   002826  22DA               	addwfc	fsr2h,f,c
 14906   002828  50DF               	movf	indf2,w,c
 14907   00282A  6FF9               	movwf	(??_teachProcessMessage+3)& (0+255),b
 14908   00282C  EE20 F004          	lfsr	2,4
 14909   002830  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14910   002832  26D9               	addwf	fsr2l,f,c
 14911   002834  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14912   002836  22DA               	addwfc	fsr2h,f,c
 14913   002838  50DF               	movf	indf2,w,c
 14914   00283A  6FFA               	movwf	(??_teachProcessMessage+4)& (0+255),b
 14915   00283C  51F9               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 14916   00283E  6FEA               	movwf	doEvlrn@eventNumber& (0+255),b
 14917   002840  C1FA  F1EB         	movff	??_teachProcessMessage+4,doEvlrn@eventNumber+1
 14918   002844  EE20 F007          	lfsr	2,7
 14919   002848  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14920   00284A  26D9               	addwf	fsr2l,f,c
 14921   00284C  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14922   00284E  22DA               	addwfc	fsr2h,f,c
 14923   002850  50DF               	movf	indf2,w,c
 14924   002852  6FEC               	movwf	doEvlrn@evNum& (0+255),b
 14925   002854  EE20 F008          	lfsr	2,8
 14926   002858  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14927   00285A  26D9               	addwf	fsr2l,f,c
 14928   00285C  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14929   00285E  22DA               	addwfc	fsr2h,f,c
 14930   002860  50DF               	movf	indf2,w,c
 14931   002862  6FED               	movwf	doEvlrn@evVal& (0+255),b
 14932   002864  EC7A  F048         	call	_doEvlrn	;wreg free
 14933   002868  D522               	goto	u24190
 14934   00286A                     l22740:
 14935   00286A  0101               	movlb	1	; () banked
 14936   00286C  EE20 F001          	lfsr	2,1
 14937   002870  51F4               	movf	teachProcessMessage@m& (0+255),w,b
 14938   002872  26D9               	addwf	fsr2l,f,c
 14939   002874  51F5               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14940   002876  22DA               	addwfc	fsr2h,f,c
 14941   002878  50DF               	movf	indf2,w,c
 14942   00287A  6FF6               	movwf	??_teachProcessMessage& (0+255),b
 14943   00287C  6BF7               	clrf	(??_teachProcessMessage+1)& (0+255),b
 14944                           
 14945                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14946                           ; Switch size 1, requested type "simple"
 14947                           ; Number of cases is 1, Range of values is 0 to 0
 14948                           ; switch strategies available:
 14949                           ; Name         Instructions Cycles
 14950                           ; simple_byte            4     3 (average)
 14951                           ;	Chosen strategy is simple_byte
 14952   00287E  51F7               	movf	(??_teachProcessMessage+1)& (0+255),w,b
 14953   002880  0A00               	xorlw	0	; case 0
 14954   002882  A4D8               	btfss	status,2,c
 14955   002884  D571               	goto	l22522
 14956                           
 14957                           ; BSR set to: 1
 14958                           ; Switch size 1, requested type "simple"
 14959                           ; Number of cases is 13, Range of values is 83 to 245
 14960                           ; switch strategies available:
 14961                           ; Name         Instructions Cycles
 14962                           ; simple_byte           40    21 (average)
 14963                           ;	Chosen strategy is simple_byte
 14964   002886  51F6               	movf	??_teachProcessMessage& (0+255),w,b
 14965   002888  0A53               	xorlw	83	; case 83
 14966   00288A  B4D8               	btfsc	status,2,c
 14967   00288C  D503               	goto	l22474
 14968   00288E  0A07               	xorlw	7	; case 84
 14969   002890  B4D8               	btfsc	status,2,c
 14970   002892  D640               	goto	l22576
 14971   002894  0A01               	xorlw	1	; case 85
 14972   002896  B4D8               	btfsc	status,2,c
 14973   002898  D663               	goto	l22596
 14974   00289A  0A03               	xorlw	3	; case 86
 14975   00289C  B4D8               	btfsc	status,2,c
 14976   00289E  D6CC               	goto	l22638
 14977   0028A0  0A01               	xorlw	1	; case 87
 14978   0028A2  B4D8               	btfsc	status,2,c
 14979   0028A4  D6A1               	goto	l22618
 14980   0028A6  0A0F               	xorlw	15	; case 88
 14981   0028A8  B4D8               	btfsc	status,2,c
 14982   0028AA  D6EE               	goto	l22658
 14983   0028AC  0A2A               	xorlw	42	; case 114
 14984   0028AE  B4D8               	btfsc	status,2,c
 14985   0028B0  D713               	goto	l22678
 14986   0028B2  0A04               	xorlw	4	; case 118
 14987   0028B4  B4D8               	btfsc	status,2,c
 14988   0028B6  D51B               	goto	l22492
 14989   0028B8  0AE3               	xorlw	227	; case 149
 14990   0028BA  B4D8               	btfsc	status,2,c
 14991   0028BC  D5AD               	goto	l22544
 14992   0028BE  0A09               	xorlw	9	; case 156
 14993   0028C0  B4D8               	btfsc	status,2,c
 14994   0028C2  D73A               	goto	l22698
 14995   0028C4  0A2E               	xorlw	46	; case 178
 14996   0028C6  B4D8               	btfsc	status,2,c
 14997   0028C8  D5E2               	goto	l22560
 14998   0028CA  0A60               	xorlw	96	; case 210
 14999   0028CC  B4D8               	btfsc	status,2,c
 15000   0028CE  D54E               	goto	l22526
 15001   0028D0  0A27               	xorlw	39	; case 245
 15002   0028D2  B4D8               	btfsc	status,2,c
 15003   0028D4  D769               	goto	l22718
 15004   0028D6  D548               	goto	l22522
 15005   0028D8                     __end_of_teachProcessMessage:
 15006                           	callstack 0
 15007                           
 15008 ;; *************** function _teachCheckLen *****************
 15009 ;; Defined at:
 15010 ;;		line 427 in file "../../VLCBlib_PIC/event_teach.c"
 15011 ;; Parameters:    Size  Location     Type
 15012 ;;  m               2   17[BANK1 ] PTR struct Message
 15013 ;;		 -> poll@m(9), 
 15014 ;;  needed          1   19[BANK1 ] unsigned char 
 15015 ;;  learn           1   20[BANK1 ] unsigned char 
 15016 ;; Auto vars:     Size  Location     Type
 15017 ;;		None
 15018 ;; Return value:  Size  Location     Type
 15019 ;;                  1    wreg      enum E12732
 15020 ;; Registers used:
 15021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15022 ;; Tracked objects:
 15023 ;;		On entry : 0/0
 15024 ;;		On exit  : 0/0
 15025 ;;		Unchanged: 0/0
 15026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15027 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15029 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15030 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15031 ;;Total ram usage:        5 bytes
 15032 ;; Hardware stack levels used: 1
 15033 ;; Hardware stack levels required when called: 17
 15034 ;; This function calls:
 15035 ;;		_checkLen
 15036 ;;		_sendMessage5
 15037 ;; This function is called by:
 15038 ;;		_teachProcessMessage
 15039 ;; This function uses a non-reentrant model
 15040 ;;
 15041                           
 15042                           	psect	text26
 15043   00B15A                     __ptext26:
 15044                           	callstack 0
 15045   00B15A                     _teachCheckLen:
 15046                           	callstack 11
 15047                           
 15048                           ;../../VLCBlib_PIC/event_teach.c: 428:     if (learn) {
 15049                           
 15050                           ;incstack = 0
 15051   00B15A  0101               	movlb	1	; () banked
 15052   00B15C  51C9               	movf	teachCheckLen@learn& (0+255),w,b
 15053   00B15E  B4D8               	btfsc	status,2,c
 15054   00B160  D021               	goto	l21034
 15055                           
 15056                           ; BSR set to: 1
 15057                           ;../../VLCBlib_PIC/event_teach.c: 430:         if (m->len < needed) {
 15058   00B162  C1C6  FFD9         	movff	teachCheckLen@m,fsr2l
 15059   00B166  C1C7  FFDA         	movff	teachCheckLen@m+1,fsr2h
 15060   00B16A  51C8               	movf	teachCheckLen@needed& (0+255),w,b
 15061   00B16C  5CDE               	subwf	postinc2,w,c
 15062   00B16E  B0D8               	btfsc	status,0,c
 15063   00B170  D017               	goto	l21030
 15064                           
 15065                           ; BSR set to: 1
 15066                           ;../../VLCBlib_PIC/event_teach.c: 432:             if (mode_flags & 1) {
 15067   00B172  A179               	btfss	_mode_flags& (0+255),0,b
 15068   00B174  D013               	goto	l21026
 15069                           
 15070                           ; BSR set to: 1
 15071                           ;../../VLCBlib_PIC/event_teach.c: 434:                 sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, m->opc, SERVICE_ID_OLD_TEACH, CMDERR_INV_CMD);
 15072   00B176  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 15073   00B17A  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 15074   00B17E  EE20 F001          	lfsr	2,1
 15075   00B182  51C6               	movf	teachCheckLen@m& (0+255),w,b
 15076   00B184  26D9               	addwf	fsr2l,f,c
 15077   00B186  51C7               	movf	(teachCheckLen@m+1)& (0+255),w,b
 15078   00B188  22DA               	addwfc	fsr2h,f,c
 15079   00B18A  50DF               	movf	indf2,w,c
 15080   00B18C  6FBF               	movwf	sendMessage5@data3& (0+255),b
 15081   00B18E  0E04               	movlw	4
 15082   00B190  6FC0               	movwf	sendMessage5@data4& (0+255),b
 15083   00B192  0E01               	movlw	1
 15084   00B194  6FC1               	movwf	sendMessage5@data5& (0+255),b
 15085   00B196  0EAF               	movlw	175
 15086   00B198  EC13  F05F         	call	_sendMessage5
 15087   00B19C                     l21026:
 15088                           
 15089                           ;../../VLCBlib_PIC/event_teach.c: 436:             return PROCESSED;
 15090   00B19C  0E01               	movlw	1
 15091   00B19E  0012               	return	
 15092   00B1A0                     l21030:
 15093                           
 15094                           ; BSR set to: 1
 15095                           ;../../VLCBlib_PIC/event_teach.c: 438:         return NOT_PROCESSED;
 15096   00B1A0  0E00               	movlw	0
 15097   00B1A2  0012               	return	
 15098   00B1A4                     l21034:
 15099                           
 15100                           ; BSR set to: 1
 15101                           ;../../VLCBlib_PIC/event_teach.c: 440:     return checkLen(m, needed, SERVICE_ID_OLD_TEA
      +                          CH);
 15102   00B1A4  C1C6  F1C2         	movff	teachCheckLen@m,checkLen@m
 15103   00B1A8  C1C7  F1C3         	movff	teachCheckLen@m+1,checkLen@m+1
 15104   00B1AC  C1C8  F1C4         	movff	teachCheckLen@needed,checkLen@needed
 15105   00B1B0  0E04               	movlw	4
 15106   00B1B2  6FC5               	movwf	checkLen@service& (0+255),b
 15107   00B1B4  ECE0  F053         	call	_checkLen	;wreg free
 15108   00B1B8  0012               	return		;funcret
 15109   00B1BA                     __end_of_teachCheckLen:
 15110                           	callstack 0
 15111                           
 15112 ;; *************** function _doRqevn *****************
 15113 ;; Defined at:
 15114 ;;		line 566 in file "../../VLCBlib_PIC/event_teach.c"
 15115 ;; Parameters:    Size  Location     Type
 15116 ;;		None
 15117 ;; Auto vars:     Size  Location     Type
 15118 ;;  i               1    9[BANK1 ] unsigned char 
 15119 ;;  count           1    8[BANK1 ] unsigned char 
 15120 ;; Return value:  Size  Location     Type
 15121 ;;                  1    wreg      void 
 15122 ;; Registers used:
 15123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15124 ;; Tracked objects:
 15125 ;;		On entry : 0/0
 15126 ;;		On exit  : 0/0
 15127 ;;		Unchanged: 0/0
 15128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15130 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15132 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15133 ;;Total ram usage:        2 bytes
 15134 ;; Hardware stack levels used: 1
 15135 ;; Hardware stack levels required when called: 16
 15136 ;; This function calls:
 15137 ;;		_sendMessage3
 15138 ;;		_validStart
 15139 ;; This function is called by:
 15140 ;;		_teachProcessMessage
 15141 ;; This function uses a non-reentrant model
 15142 ;;
 15143                           
 15144                           	psect	text27
 15145   00BB58                     __ptext27:
 15146                           	callstack 0
 15147   00BB58                     _doRqevn:
 15148                           	callstack 12
 15149                           
 15150                           ;../../VLCBlib_PIC/event_teach.c: 568:     uint8_t count = 0;
 15151                           
 15152                           ;incstack = 0
 15153   00BB58  0E00               	movlw	0
 15154   00BB5A  0101               	movlb	1	; () banked
 15155   00BB5C  6FBD               	movwf	doRqevn@count& (0+255),b
 15156                           
 15157                           ;../../VLCBlib_PIC/event_teach.c: 569:     uint8_t i;;../../VLCBlib_PIC/event_teach.c: 5
      +                          70:     for (i=0; i<255; i++) {
 15158   00BB5E  0E00               	movlw	0
 15159   00BB60  6FBE               	movwf	doRqevn@i& (0+255),b
 15160   00BB62                     l21138:
 15161                           
 15162                           ; BSR set to: 1
 15163                           ;../../VLCBlib_PIC/event_teach.c: 571:         if (validStart(i)) {
 15164   00BB62  51BE               	movf	doRqevn@i& (0+255),w,b
 15165   00BB64  EC3F  F05B         	call	_validStart
 15166   00BB68  0900               	iorlw	0
 15167   00BB6A  B4D8               	btfsc	status,2,c
 15168   00BB6C  D002               	goto	l1564
 15169                           
 15170                           ;../../VLCBlib_PIC/event_teach.c: 572:             count++;
 15171   00BB6E  0101               	movlb	1	; () banked
 15172   00BB70  2BBD               	incf	doRqevn@count& (0+255),f,b
 15173   00BB72                     l1564:
 15174                           
 15175                           ;../../VLCBlib_PIC/event_teach.c: 574:     }
 15176   00BB72  0101               	movlb	1	; () banked
 15177   00BB74  2BBE               	incf	doRqevn@i& (0+255),f,b
 15178                           
 15179                           ; BSR set to: 1
 15180   00BB76  29BE               	incf	doRqevn@i& (0+255),w,b
 15181   00BB78  A4D8               	btfss	status,2,c
 15182   00BB7A  D7F3               	goto	l21138
 15183                           
 15184                           ; BSR set to: 1
 15185                           ;../../VLCBlib_PIC/event_teach.c: 575:     sendMessage3(OPC_NUMEV, nn.bytes.hi, nn.bytes
      +                          .lo, count);
 15186   00BB7C  C0B4  F0A5         	movff	_nn+1,sendMessage3@data1
 15187   00BB80  C0B3  F0A6         	movff	_nn,sendMessage3@data2
 15188   00BB84  C1BD  F0A7         	movff	doRqevn@count,sendMessage3@data3
 15189   00BB88  0E74               	movlw	116
 15190   00BB8A  ECCB  F05E         	call	_sendMessage3
 15191   00BB8E  0012               	return		;funcret
 15192   00BB90                     __end_of_doRqevn:
 15193                           	callstack 0
 15194                           
 15195 ;; *************** function _doReval *****************
 15196 ;; Defined at:
 15197 ;;		line 623 in file "../../VLCBlib_PIC/event_teach.c"
 15198 ;; Parameters:    Size  Location     Type
 15199 ;;  enNum           1    wreg     unsigned char 
 15200 ;;  evNum           1   13[BANK1 ] unsigned char 
 15201 ;; Auto vars:     Size  Location     Type
 15202 ;;  enNum           1   16[BANK1 ] unsigned char 
 15203 ;;  evVal           2   17[BANK1 ] int 
 15204 ;;  tableIndex      1   19[BANK1 ] unsigned char 
 15205 ;;  evIndex         1   15[BANK1 ] unsigned char 
 15206 ;; Return value:  Size  Location     Type
 15207 ;;                  1    wreg      void 
 15208 ;; Registers used:
 15209 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15210 ;; Tracked objects:
 15211 ;;		On entry : 0/0
 15212 ;;		On exit  : 0/0
 15213 ;;		Unchanged: 0/0
 15214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15215 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15216 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15217 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15218 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15219 ;;Total ram usage:        7 bytes
 15220 ;; Hardware stack levels used: 1
 15221 ;; Hardware stack levels required when called: 16
 15222 ;; This function calls:
 15223 ;;		_evtIdxToTableIndex
 15224 ;;		_getEv
 15225 ;;		_numEv
 15226 ;;		_sendMessage3
 15227 ;;		_sendMessage5
 15228 ;;		_validStart
 15229 ;; This function is called by:
 15230 ;;		_teachProcessMessage
 15231 ;; This function uses a non-reentrant model
 15232 ;;
 15233                           
 15234                           	psect	text28
 15235   009340                     __ptext28:
 15236                           	callstack 0
 15237   009340                     _doReval:
 15238                           	callstack 12
 15239                           
 15240                           ;incstack = 0
 15241                           ;doReval@enNum stored from wreg
 15242   009340  0101               	movlb	1	; () banked
 15243   009342  6FC5               	movwf	doReval@enNum& (0+255),b
 15244                           
 15245                           ;../../VLCBlib_PIC/event_teach.c: 626:     uint8_t evIndex;;../../VLCBlib_PIC/event_teac
      +                          h.c: 627:     uint8_t tableIndex = evtIdxToTableIndex(enNum);
 15246   009344  0101               	movlb	1	; () banked
 15247   009346  51C5               	movf	doReval@enNum& (0+255),w,b
 15248   009348  ECBE  F061         	call	_evtIdxToTableIndex
 15249   00934C  0101               	movlb	1	; () banked
 15250   00934E  6FC8               	movwf	doReval@tableIndex& (0+255),b
 15251                           
 15252                           ; BSR set to: 1
 15253                           ;../../VLCBlib_PIC/event_teach.c: 629:     if (evNum > 20) {
 15254   009350  0E14               	movlw	20
 15255   009352  65C2               	cpfsgt	doReval@evNum& (0+255),b
 15256   009354  D00B               	goto	l21166
 15257                           
 15258                           ; BSR set to: 1
 15259                           ;../../VLCBlib_PIC/event_teach.c: 630:         sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, CMDERR_INV_EV_IDX);
 15260   009356  C0B4  F0A5         	movff	_nn+1,sendMessage3@data1
 15261   00935A  C0B3  F0A6         	movff	_nn,sendMessage3@data2
 15262   00935E  0E06               	movlw	6
 15263   009360  0100               	movlb	0	; () banked
 15264   009362  6FA7               	movwf	sendMessage3@data3& (0+255),b
 15265   009364  0E6F               	movlw	111
 15266   009366  ECCB  F05E         	call	_sendMessage3
 15267   00936A  0012               	return	
 15268   00936C                     l21166:
 15269                           
 15270                           ; BSR set to: 1
 15271                           ;../../VLCBlib_PIC/event_teach.c: 634:     evIndex = evNum-1U;
 15272   00936C  05C2               	decf	doReval@evNum& (0+255),w,b
 15273   00936E  6FC4               	movwf	doReval@evIndex& (0+255),b
 15274                           
 15275                           ;../../VLCBlib_PIC/event_teach.c: 637:     if (tableIndex < 255) {
 15276   009370  29C8               	incf	doReval@tableIndex& (0+255),w,b
 15277   009372  B4D8               	btfsc	status,2,c
 15278   009374  D039               	goto	l21186
 15279                           
 15280                           ; BSR set to: 1
 15281                           ;../../VLCBlib_PIC/event_teach.c: 638:         if (validStart(tableIndex)) {
 15282   009376  51C8               	movf	doReval@tableIndex& (0+255),w,b
 15283   009378  EC3F  F05B         	call	_validStart
 15284   00937C  0900               	iorlw	0
 15285   00937E  B4D8               	btfsc	status,2,c
 15286   009380  D033               	goto	l21186
 15287                           
 15288                           ;../../VLCBlib_PIC/event_teach.c: 639:             int evVal;;../../VLCBlib_PIC/event_te
      +                          ach.c: 640:             if (evNum == 0) {
 15289   009382  0101               	movlb	1	; () banked
 15290   009384  51C2               	movf	doReval@evNum& (0+255),w,b
 15291   009386  A4D8               	btfss	status,2,c
 15292   009388  D009               	goto	l21174
 15293                           
 15294                           ; BSR set to: 1
 15295                           ;../../VLCBlib_PIC/event_teach.c: 641:                 evVal = numEv(tableIndex);
 15296   00938A  51C8               	movf	doReval@tableIndex& (0+255),w,b
 15297   00938C  EC71  F044         	call	_numEv
 15298   009390  0101               	movlb	1	; () banked
 15299   009392  6FC3               	movwf	??_doReval& (0+255),b
 15300   009394  51C3               	movf	??_doReval& (0+255),w,b
 15301   009396  6FC6               	movwf	doReval@evVal& (0+255),b
 15302   009398  6BC7               	clrf	(doReval@evVal+1)& (0+255),b
 15303                           
 15304                           ;../../VLCBlib_PIC/event_teach.c: 642:             } else {
 15305   00939A  D009               	goto	l21176
 15306   00939C                     l21174:
 15307                           
 15308                           ; BSR set to: 1
 15309                           ;../../VLCBlib_PIC/event_teach.c: 643:                 evVal = getEv(tableIndex, evIndex
      +                          );
 15310   00939C  C1C4  F09D         	movff	doReval@evIndex,getEv@evNum
 15311   0093A0  51C8               	movf	doReval@tableIndex& (0+255),w,b
 15312   0093A2  EC15  F03C         	call	_getEv
 15313   0093A6  C09D  F1C6         	movff	?_getEv,doReval@evVal
 15314   0093AA  C09E  F1C7         	movff	?_getEv+1,doReval@evVal+1
 15315   0093AE                     l21176:
 15316                           
 15317                           ;../../VLCBlib_PIC/event_teach.c: 645:             if (evVal >= 0) {
 15318   0093AE  0101               	movlb	1	; () banked
 15319   0093B0  BFC7               	btfsc	(doReval@evVal+1)& (0+255),7,b
 15320   0093B2  D00E               	goto	l21182
 15321                           
 15322                           ; BSR set to: 1
 15323                           ;../../VLCBlib_PIC/event_teach.c: 646:                 sendMessage5(OPC_NEVAL, nn.bytes.
      +                          hi, nn.bytes.lo, enNum, evNum, (uint8_t)evVal);
 15324   0093B4  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 15325   0093B8  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 15326   0093BC  C1C5  F1BF         	movff	doReval@enNum,sendMessage5@data3
 15327   0093C0  C1C2  F1C0         	movff	doReval@evNum,sendMessage5@data4
 15328   0093C4  C1C6  F1C1         	movff	doReval@evVal,sendMessage5@data5
 15329   0093C8  0EB5               	movlw	181
 15330   0093CA  EC13  F05F         	call	_sendMessage5
 15331   0093CE  0012               	return	
 15332   0093D0                     l21182:
 15333                           
 15334                           ; BSR set to: 1
 15335                           ;../../VLCBlib_PIC/event_teach.c: 650:             sendMessage3(OPC_CMDERR, nn.bytes.hi,
      +                           nn.bytes.lo, (uint8_t)(-evVal));
 15336   0093D0  C0B4  F0A5         	movff	_nn+1,sendMessage3@data1
 15337   0093D4  C0B3  F0A6         	movff	_nn,sendMessage3@data2
 15338   0093D8  51C6               	movf	doReval@evVal& (0+255),w,b
 15339   0093DA  0800               	sublw	0
 15340   0093DC  0100               	movlb	0	; () banked
 15341   0093DE  6FA7               	movwf	sendMessage3@data3& (0+255),b
 15342   0093E0  0E6F               	movlw	111
 15343   0093E2  ECCB  F05E         	call	_sendMessage3
 15344   0093E6  0012               	return	
 15345   0093E8                     l21186:
 15346                           
 15347                           ;../../VLCBlib_PIC/event_teach.c: 654:     sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.byte
      +                          s.lo, CMDERR_INVALID_EVENT);
 15348   0093E8  C0B4  F0A5         	movff	_nn+1,sendMessage3@data1
 15349   0093EC  C0B3  F0A6         	movff	_nn,sendMessage3@data2
 15350   0093F0  0E07               	movlw	7
 15351   0093F2  0100               	movlb	0	; () banked
 15352   0093F4  6FA7               	movwf	sendMessage3@data3& (0+255),b
 15353   0093F6  0E6F               	movlw	111
 15354   0093F8  ECCB  F05E         	call	_sendMessage3
 15355   0093FC  0012               	return		;funcret
 15356   0093FE                     __end_of_doReval:
 15357                           	callstack 0
 15358                           
 15359 ;; *************** function _doReqev *****************
 15360 ;; Defined at:
 15361 ;;		line 681 in file "../../VLCBlib_PIC/event_teach.c"
 15362 ;; Parameters:    Size  Location     Type
 15363 ;;  nodeNumber      2   14[BANK1 ] unsigned short 
 15364 ;;  eventNumber     2   16[BANK1 ] unsigned short 
 15365 ;;  evNum           1   18[BANK1 ] unsigned char 
 15366 ;; Auto vars:     Size  Location     Type
 15367 ;;  evVal           2   19[BANK1 ] short 
 15368 ;;  tableIndex      1   21[BANK1 ] unsigned char 
 15369 ;; Return value:  Size  Location     Type
 15370 ;;                  1    wreg      void 
 15371 ;; Registers used:
 15372 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15373 ;; Tracked objects:
 15374 ;;		On entry : 0/0
 15375 ;;		On exit  : 0/0
 15376 ;;		Unchanged: 0/0
 15377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15378 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15379 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15381 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15382 ;;Total ram usage:        8 bytes
 15383 ;; Hardware stack levels used: 1
 15384 ;; Hardware stack levels required when called: 16
 15385 ;; This function calls:
 15386 ;;		_findEvent
 15387 ;;		_findServiceIndex
 15388 ;;		_getEv
 15389 ;;		_numEv
 15390 ;;		_sendMessage3
 15391 ;;		_sendMessage5
 15392 ;;		_sendMessage6
 15393 ;;		_startTimedResponse
 15394 ;; This function is called by:
 15395 ;;		_teachProcessMessage
 15396 ;; This function uses a non-reentrant model
 15397 ;;
 15398                           
 15399                           	psect	text29
 15400   007AD4                     __ptext29:
 15401                           	callstack 0
 15402   007AD4                     _doReqev:
 15403                           	callstack 12
 15404                           
 15405                           ;../../VLCBlib_PIC/event_teach.c: 682:     int16_t evVal;;../../VLCBlib_PIC/event_teach.
      +                          c: 684:     uint8_t tableIndex = findEvent(nodeNumber, eventNumber);
 15406                           
 15407                           ;incstack = 0
 15408   007AD4  C1C3  F1B5         	movff	doReqev@nodeNumber,findEvent@nodeNumber
 15409   007AD8  C1C4  F1B6         	movff	doReqev@nodeNumber+1,findEvent@nodeNumber+1
 15410   007ADC  C1C5  F1B7         	movff	doReqev@eventNumber,findEvent@eventNumber
 15411   007AE0  C1C6  F1B8         	movff	doReqev@eventNumber+1,findEvent@eventNumber+1
 15412   007AE4  ECBE  F051         	call	_findEvent	;wreg free
 15413   007AE8  0101               	movlb	1	; () banked
 15414   007AEA  6FCA               	movwf	doReqev@tableIndex& (0+255),b
 15415                           
 15416                           ; BSR set to: 1
 15417                           ;../../VLCBlib_PIC/event_teach.c: 685:     if (tableIndex == 0xff) {
 15418   007AEC  29CA               	incf	doReqev@tableIndex& (0+255),w,b
 15419   007AEE  A4D8               	btfss	status,2,c
 15420   007AF0  D019               	goto	l21080
 15421                           
 15422                           ; BSR set to: 1
 15423                           ;../../VLCBlib_PIC/event_teach.c: 686:         sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, CMDERR_INVALID_EVENT);
 15424   007AF2  C0B4  F0A5         	movff	_nn+1,sendMessage3@data1
 15425   007AF6  C0B3  F0A6         	movff	_nn,sendMessage3@data2
 15426   007AFA  0E07               	movlw	7
 15427   007AFC  0100               	movlb	0	; () banked
 15428   007AFE  6FA7               	movwf	sendMessage3@data3& (0+255),b
 15429   007B00  0E6F               	movlw	111
 15430   007B02  ECCB  F05E         	call	_sendMessage3
 15431                           
 15432                           ;../../VLCBlib_PIC/event_teach.c: 687:         sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, CMDERR_INVALID_EVENT);
 15433   007B06  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 15434   007B0A  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 15435   007B0E  0EB2               	movlw	178
 15436   007B10  0101               	movlb	1	; () banked
 15437   007B12  6FBF               	movwf	sendMessage5@data3& (0+255),b
 15438   007B14  0E04               	movlw	4
 15439   007B16  6FC0               	movwf	sendMessage5@data4& (0+255),b
 15440   007B18  0E07               	movlw	7
 15441   007B1A  6FC1               	movwf	sendMessage5@data5& (0+255),b
 15442   007B1C  0EAF               	movlw	175
 15443   007B1E  EC13  F05F         	call	_sendMessage5
 15444   007B22  0012               	return	
 15445   007B24                     l21080:
 15446                           
 15447                           ; BSR set to: 1
 15448                           ;../../VLCBlib_PIC/event_teach.c: 690:     if (evNum > 20) {
 15449   007B24  0E14               	movlw	20
 15450   007B26  65C7               	cpfsgt	doReqev@evNum& (0+255),b
 15451   007B28  D019               	goto	l21086
 15452                           
 15453                           ; BSR set to: 1
 15454                           ;../../VLCBlib_PIC/event_teach.c: 691:         sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, CMDERR_INV_EV_IDX);
 15455   007B2A  C0B4  F0A5         	movff	_nn+1,sendMessage3@data1
 15456   007B2E  C0B3  F0A6         	movff	_nn,sendMessage3@data2
 15457   007B32  0E06               	movlw	6
 15458   007B34  0100               	movlb	0	; () banked
 15459   007B36  6FA7               	movwf	sendMessage3@data3& (0+255),b
 15460   007B38  0E6F               	movlw	111
 15461   007B3A  ECCB  F05E         	call	_sendMessage3
 15462                           
 15463                           ;../../VLCBlib_PIC/event_teach.c: 692:         sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, CMDERR_INV_EV_IDX);
 15464   007B3E  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 15465   007B42  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 15466   007B46  0EB2               	movlw	178
 15467   007B48  0101               	movlb	1	; () banked
 15468   007B4A  6FBF               	movwf	sendMessage5@data3& (0+255),b
 15469   007B4C  0E04               	movlw	4
 15470   007B4E  6FC0               	movwf	sendMessage5@data4& (0+255),b
 15471   007B50  0E06               	movlw	6
 15472   007B52  6FC1               	movwf	sendMessage5@data5& (0+255),b
 15473   007B54  0EAF               	movlw	175
 15474   007B56  EC13  F05F         	call	_sendMessage5
 15475   007B5A  0012               	return	
 15476   007B5C                     l21086:
 15477                           
 15478                           ; BSR set to: 1
 15479                           ;../../VLCBlib_PIC/event_teach.c: 695:     if (evNum == 0) {
 15480   007B5C  51C7               	movf	doReqev@evNum& (0+255),w,b
 15481   007B5E  A4D8               	btfss	status,2,c
 15482   007B60  D020               	goto	l21096
 15483                           
 15484                           ; BSR set to: 1
 15485                           ;../../VLCBlib_PIC/event_teach.c: 696:         sendMessage6(OPC_EVANS, nodeNumber>>8, no
      +                          deNumber&0xFF, eventNumber>>8, eventNumber&0xFF, 0, numEv(tableIndex));
 15486   007B62  51C4               	movf	(doReqev@nodeNumber+1)& (0+255),w,b
 15487   007B64  6FBD               	movwf	sendMessage6@data1& (0+255),b
 15488   007B66  C1C3  F1BE         	movff	doReqev@nodeNumber,sendMessage6@data2
 15489   007B6A  51C6               	movf	(doReqev@eventNumber+1)& (0+255),w,b
 15490   007B6C  6FBF               	movwf	sendMessage6@data3& (0+255),b
 15491   007B6E  C1C5  F1C0         	movff	doReqev@eventNumber,sendMessage6@data4
 15492   007B72  0E00               	movlw	0
 15493   007B74  6FC1               	movwf	sendMessage6@data5& (0+255),b
 15494   007B76  51CA               	movf	doReqev@tableIndex& (0+255),w,b
 15495   007B78  EC71  F044         	call	_numEv
 15496   007B7C  0101               	movlb	1	; () banked
 15497   007B7E  6FC2               	movwf	sendMessage6@data6& (0+255),b
 15498   007B80  0ED3               	movlw	211
 15499   007B82  ECB3  F05E         	call	_sendMessage6
 15500                           
 15501                           ;../../VLCBlib_PIC/event_teach.c: 699:         startTimedResponse(tableIndex, findServic
      +                          eIndex(SERVICE_ID_OLD_TEACH), reqevCallback);
 15502   007B86  0E04               	movlw	4
 15503   007B88  EC02  F056         	call	_findServiceIndex
 15504   007B8C  0100               	movlb	0	; () banked
 15505   007B8E  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 15506   007B90  0E6C               	movlw	low _reqevCallback
 15507   007B92  6F92               	movwf	startTimedResponse@callback& (0+255),b
 15508   007B94  0E9F               	movlw	high _reqevCallback
 15509   007B96  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 15510   007B98  0101               	movlb	1	; () banked
 15511   007B9A  51CA               	movf	doReqev@tableIndex& (0+255),w,b
 15512   007B9C  ECF7  F05C         	call	_startTimedResponse
 15513   007BA0  0012               	return	
 15514   007BA2                     l21096:
 15515                           
 15516                           ; BSR set to: 1
 15517                           ;../../VLCBlib_PIC/event_teach.c: 702:         evVal = getEv(tableIndex, evNum-1);
 15518   007BA2  05C7               	decf	doReqev@evNum& (0+255),w,b
 15519   007BA4  0100               	movlb	0	; () banked
 15520   007BA6  6F9D               	movwf	getEv@evNum& (0+255),b
 15521   007BA8  0101               	movlb	1	; () banked
 15522   007BAA  51CA               	movf	doReqev@tableIndex& (0+255),w,b
 15523   007BAC  EC15  F03C         	call	_getEv
 15524   007BB0  C09D  F1C8         	movff	?_getEv,doReqev@evVal
 15525   007BB4  C09E  F1C9         	movff	?_getEv+1,doReqev@evVal+1
 15526                           
 15527                           ;../../VLCBlib_PIC/event_teach.c: 704:     if (evVal < 0) {
 15528   007BB8  0101               	movlb	1	; () banked
 15529   007BBA  AFC9               	btfss	(doReqev@evVal+1)& (0+255),7,b
 15530   007BBC  D01B               	goto	l21104
 15531                           
 15532                           ; BSR set to: 1
 15533                           ;../../VLCBlib_PIC/event_teach.c: 706:         sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, (uint8_t)(-evVal));
 15534   007BBE  C0B4  F0A5         	movff	_nn+1,sendMessage3@data1
 15535   007BC2  C0B3  F0A6         	movff	_nn,sendMessage3@data2
 15536   007BC6  51C8               	movf	doReqev@evVal& (0+255),w,b
 15537   007BC8  0800               	sublw	0
 15538   007BCA  0100               	movlb	0	; () banked
 15539   007BCC  6FA7               	movwf	sendMessage3@data3& (0+255),b
 15540   007BCE  0E6F               	movlw	111
 15541   007BD0  ECCB  F05E         	call	_sendMessage3
 15542                           
 15543                           ;../../VLCBlib_PIC/event_teach.c: 707:         sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, (uint8_t)(-evVal));
 15544   007BD4  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 15545   007BD8  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 15546   007BDC  0EB2               	movlw	178
 15547   007BDE  0101               	movlb	1	; () banked
 15548   007BE0  6FBF               	movwf	sendMessage5@data3& (0+255),b
 15549   007BE2  0E04               	movlw	4
 15550   007BE4  6FC0               	movwf	sendMessage5@data4& (0+255),b
 15551   007BE6  51C8               	movf	doReqev@evVal& (0+255),w,b
 15552   007BE8  0800               	sublw	0
 15553   007BEA  6FC1               	movwf	sendMessage5@data5& (0+255),b
 15554   007BEC  0EAF               	movlw	175
 15555   007BEE  EC13  F05F         	call	_sendMessage5
 15556   007BF2  0012               	return	
 15557   007BF4                     l21104:
 15558                           
 15559                           ; BSR set to: 1
 15560                           ;../../VLCBlib_PIC/event_teach.c: 711:     sendMessage6(OPC_EVANS, nodeNumber>>8, nodeNu
      +                          mber&0xFF, eventNumber>>8, eventNumber&0xFF, evNum, (uint8_t)evVal);
 15561   007BF4  51C4               	movf	(doReqev@nodeNumber+1)& (0+255),w,b
 15562   007BF6  6FBD               	movwf	sendMessage6@data1& (0+255),b
 15563   007BF8  C1C3  F1BE         	movff	doReqev@nodeNumber,sendMessage6@data2
 15564   007BFC  51C6               	movf	(doReqev@eventNumber+1)& (0+255),w,b
 15565   007BFE  6FBF               	movwf	sendMessage6@data3& (0+255),b
 15566   007C00  C1C5  F1C0         	movff	doReqev@eventNumber,sendMessage6@data4
 15567   007C04  C1C7  F1C1         	movff	doReqev@evNum,sendMessage6@data5
 15568   007C08  C1C8  F1C2         	movff	doReqev@evVal,sendMessage6@data6
 15569   007C0C  0ED3               	movlw	211
 15570   007C0E  ECB3  F05E         	call	_sendMessage6
 15571   007C12  0012               	return		;funcret
 15572   007C14                     __end_of_doReqev:
 15573                           	callstack 0
 15574                           
 15575 ;; *************** function _doNnevn *****************
 15576 ;; Defined at:
 15577 ;;		line 491 in file "../../VLCBlib_PIC/event_teach.c"
 15578 ;; Parameters:    Size  Location     Type
 15579 ;;		None
 15580 ;; Auto vars:     Size  Location     Type
 15581 ;;  f               1   12[BANK1 ] struct .
 15582 ;;  i               1   14[BANK1 ] unsigned char 
 15583 ;;  count           1   13[BANK1 ] unsigned char 
 15584 ;; Return value:  Size  Location     Type
 15585 ;;                  1    wreg      void 
 15586 ;; Registers used:
 15587 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15588 ;; Tracked objects:
 15589 ;;		On entry : 0/0
 15590 ;;		On exit  : 0/0
 15591 ;;		Unchanged: 0/0
 15592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15594 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15595 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15596 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15597 ;;Total ram usage:        7 bytes
 15598 ;; Hardware stack levels used: 1
 15599 ;; Hardware stack levels required when called: 16
 15600 ;; This function calls:
 15601 ;;		_readNVM
 15602 ;;		_sendMessage3
 15603 ;; This function is called by:
 15604 ;;		_teachProcessMessage
 15605 ;; This function uses a non-reentrant model
 15606 ;;
 15607                           
 15608                           	psect	text30
 15609   00ADCA                     __ptext30:
 15610                           	callstack 0
 15611   00ADCA                     _doNnevn:
 15612                           	callstack 12
 15613                           
 15614                           ;../../VLCBlib_PIC/event_teach.c: 493:     uint8_t count = 0;
 15615                           
 15616                           ;incstack = 0
 15617   00ADCA  0E00               	movlw	0
 15618   00ADCC  0101               	movlb	1	; () banked
 15619   00ADCE  6FC2               	movwf	doNnevn@count& (0+255),b
 15620                           
 15621                           ;../../VLCBlib_PIC/event_teach.c: 494:     uint8_t i;;../../VLCBlib_PIC/event_teach.c: 4
      +                          95:     for (i=0; i<255; i++) {
 15622   00ADD0  0E00               	movlw	0
 15623   00ADD2  6FC3               	movwf	doNnevn@i& (0+255),b
 15624   00ADD4                     l21122:
 15625                           
 15626                           ; BSR set to: 1
 15627                           ;../../VLCBlib_PIC/event_teach.c: 496:         EventTableFlags f;;../../VLCBlib_PIC/even
      +                          t_teach.c: 497:         f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80 + 16*i+0);
 15628   00ADD4  51C3               	movf	doNnevn@i& (0+255),w,b
 15629   00ADD6  6FBD               	movwf	??_doNnevn& (0+255),b
 15630   00ADD8  6BBE               	clrf	(??_doNnevn+1)& (0+255),b
 15631   00ADDA  3BBD               	swapf	??_doNnevn& (0+255),f,b
 15632   00ADDC  3BBE               	swapf	(??_doNnevn+1)& (0+255),f,b
 15633   00ADDE  0EF0               	movlw	240
 15634   00ADE0  17BE               	andwf	(??_doNnevn+1)& (0+255),f,b
 15635   00ADE2  51BD               	movf	??_doNnevn& (0+255),w,b
 15636   00ADE4  0B0F               	andlw	15
 15637   00ADE6  13BE               	iorwf	(??_doNnevn+1)& (0+255),f,b
 15638   00ADE8  0EF0               	movlw	240
 15639   00ADEA  17BD               	andwf	??_doNnevn& (0+255),f,b
 15640   00ADEC  0E80               	movlw	128
 15641   00ADEE  25BD               	addwf	??_doNnevn& (0+255),w,b
 15642   00ADF0  6FBF               	movwf	(??_doNnevn+2)& (0+255),b
 15643   00ADF2  0EEF               	movlw	239
 15644   00ADF4  21BE               	addwfc	(??_doNnevn+1)& (0+255),w,b
 15645   00ADF6  6FC0               	movwf	(??_doNnevn+3)& (0+255),b
 15646   00ADF8  C1BF  F091         	movff	??_doNnevn+2,readNVM@index
 15647   00ADFC  C1C0  F092         	movff	??_doNnevn+3,readNVM@index+1
 15648   00AE00  0100               	movlb	0	; () banked
 15649   00AE02  6B93               	clrf	(readNVM@index+2)& (0+255),b
 15650   00AE04  0E01               	movlw	1
 15651   00AE06  ECDD  F058         	call	_readNVM
 15652   00AE0A  0100               	movlb	0	; () banked
 15653   00AE0C  5191               	movf	?_readNVM& (0+255),w,b
 15654   00AE0E  0101               	movlb	1	; () banked
 15655   00AE10  6FC1               	movwf	doNnevn@f& (0+255),b
 15656                           
 15657                           ; BSR set to: 1
 15658                           ;../../VLCBlib_PIC/event_teach.c: 498:         if (f.freeEntry) {
 15659   00AE12  BFC1               	btfsc	doNnevn@f& (0+255),7,b
 15660                           
 15661                           ; BSR set to: 1
 15662                           ;../../VLCBlib_PIC/event_teach.c: 499:             count++;
 15663   00AE14  2BC2               	incf	doNnevn@count& (0+255),f,b
 15664                           
 15665                           ; BSR set to: 1
 15666                           ;../../VLCBlib_PIC/event_teach.c: 501:     }
 15667                           
 15668                           ;../../VLCBlib_PIC/event_teach.c: 500:         }
 15669   00AE16  2BC3               	incf	doNnevn@i& (0+255),f,b
 15670                           
 15671                           ; BSR set to: 1
 15672   00AE18  29C3               	incf	doNnevn@i& (0+255),w,b
 15673   00AE1A  A4D8               	btfss	status,2,c
 15674   00AE1C  D7DB               	goto	l21122
 15675                           
 15676                           ; BSR set to: 1
 15677                           ;../../VLCBlib_PIC/event_teach.c: 502:     sendMessage3(OPC_EVNLF, nn.bytes.hi, nn.bytes
      +                          .lo, count);
 15678   00AE1E  C0B4  F0A5         	movff	_nn+1,sendMessage3@data1
 15679   00AE22  C0B3  F0A6         	movff	_nn,sendMessage3@data2
 15680   00AE26  C1C2  F0A7         	movff	doNnevn@count,sendMessage3@data3
 15681   00AE2A  0E70               	movlw	112
 15682   00AE2C  ECCB  F05E         	call	_sendMessage3
 15683   00AE30  0012               	return		;funcret
 15684   00AE32                     __end_of_doNnevn:
 15685                           	callstack 0
 15686                           
 15687 ;; *************** function _doNnclr *****************
 15688 ;; Defined at:
 15689 ;;		line 581 in file "../../VLCBlib_PIC/event_teach.c"
 15690 ;; Parameters:    Size  Location     Type
 15691 ;;		None
 15692 ;; Auto vars:     Size  Location     Type
 15693 ;;		None
 15694 ;; Return value:  Size  Location     Type
 15695 ;;                  1    wreg      void 
 15696 ;; Registers used:
 15697 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15698 ;; Tracked objects:
 15699 ;;		On entry : 0/0
 15700 ;;		On exit  : 0/0
 15701 ;;		Unchanged: 0/0
 15702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15707 ;;Total ram usage:        0 bytes
 15708 ;; Hardware stack levels used: 1
 15709 ;; Hardware stack levels required when called: 19
 15710 ;; This function calls:
 15711 ;;		_clearAllEvents
 15712 ;;		_sendMessage2
 15713 ;;		_sendMessage5
 15714 ;; This function is called by:
 15715 ;;		_teachProcessMessage
 15716 ;; This function uses a non-reentrant model
 15717 ;;
 15718                           
 15719                           	psect	text31
 15720   00BD06                     __ptext31:
 15721                           	callstack 0
 15722   00BD06                     _doNnclr:
 15723                           	callstack 9
 15724                           
 15725                           ;../../VLCBlib_PIC/event_teach.c: 582:     clearAllEvents();
 15726                           
 15727                           ;incstack = 0
 15728   00BD06  EC71  F05A         	call	_clearAllEvents	;wreg free
 15729                           
 15730                           ;../../VLCBlib_PIC/event_teach.c: 583:     sendMessage2(OPC_WRACK, nn.bytes.hi, nn.bytes
      +                          .lo);
 15731   00BD0A  C0B4  F0A5         	movff	_nn+1,sendMessage2@data1
 15732   00BD0E  C0B3  F0A6         	movff	_nn,sendMessage2@data2
 15733   00BD12  0E59               	movlw	89
 15734   00BD14  ECE3  F05E         	call	_sendMessage2
 15735                           
 15736                           ;../../VLCBlib_PIC/event_teach.c: 584:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn.bytes.
      +                          lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, GRSP_OK);
 15737   00BD18  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 15738   00BD1C  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 15739   00BD20  0EB2               	movlw	178
 15740   00BD22  0101               	movlb	1	; () banked
 15741   00BD24  6FBF               	movwf	sendMessage5@data3& (0+255),b
 15742   00BD26  0E04               	movlw	4
 15743   00BD28  6FC0               	movwf	sendMessage5@data4& (0+255),b
 15744   00BD2A  0E00               	movlw	0
 15745   00BD2C  6FC1               	movwf	sendMessage5@data5& (0+255),b
 15746   00BD2E  0EAF               	movlw	175
 15747   00BD30  EC13  F05F         	call	_sendMessage5
 15748   00BD34  0012               	return		;funcret
 15749   00BD36                     __end_of_doNnclr:
 15750                           	callstack 0
 15751                           
 15752 ;; *************** function _doNerd *****************
 15753 ;; Defined at:
 15754 ;;		line 510 in file "../../VLCBlib_PIC/event_teach.c"
 15755 ;; Parameters:    Size  Location     Type
 15756 ;;		None
 15757 ;; Auto vars:     Size  Location     Type
 15758 ;;		None
 15759 ;; Return value:  Size  Location     Type
 15760 ;;                  1    wreg      void 
 15761 ;; Registers used:
 15762 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15763 ;; Tracked objects:
 15764 ;;		On entry : 0/0
 15765 ;;		On exit  : 0/0
 15766 ;;		Unchanged: 0/0
 15767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15772 ;;Total ram usage:        0 bytes
 15773 ;; Hardware stack levels used: 1
 15774 ;; Hardware stack levels required when called: 13
 15775 ;; This function calls:
 15776 ;;		_findServiceIndex
 15777 ;;		_startTimedResponse
 15778 ;; This function is called by:
 15779 ;;		_teachProcessMessage
 15780 ;; This function uses a non-reentrant model
 15781 ;;
 15782                           
 15783                           	psect	text32
 15784   00C23E                     __ptext32:
 15785                           	callstack 0
 15786   00C23E                     _doNerd:
 15787                           	callstack 15
 15788                           
 15789                           ;../../VLCBlib_PIC/event_teach.c: 511:     startTimedResponse(2, findServiceIndex(SERVIC
      +                          E_ID_OLD_TEACH), nerdCallback);
 15790                           
 15791                           ;incstack = 0
 15792   00C23E  0E04               	movlw	4
 15793   00C240  EC02  F056         	call	_findServiceIndex
 15794   00C244  0100               	movlb	0	; () banked
 15795   00C246  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 15796   00C248  0E02               	movlw	low _nerdCallback
 15797   00C24A  6F92               	movwf	startTimedResponse@callback& (0+255),b
 15798   00C24C  0EAF               	movlw	high _nerdCallback
 15799   00C24E  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 15800   00C250  0E02               	movlw	2
 15801   00C252  ECF7  F05C         	call	_startTimedResponse
 15802   00C256  0012               	return		;funcret
 15803   00C258                     __end_of_doNerd:
 15804                           	callstack 0
 15805                           
 15806 ;; *************** function _doNenrd *****************
 15807 ;; Defined at:
 15808 ;;		line 542 in file "../../VLCBlib_PIC/event_teach.c"
 15809 ;; Parameters:    Size  Location     Type
 15810 ;;  index           1    wreg     unsigned char 
 15811 ;; Auto vars:     Size  Location     Type
 15812 ;;  index           1   13[BANK1 ] unsigned char 
 15813 ;;  eventNumber     2   16[BANK1 ] unsigned short 
 15814 ;;  nodeNumber      2   14[BANK1 ] unsigned short 
 15815 ;;  tableIndex      1   18[BANK1 ] unsigned char 
 15816 ;; Return value:  Size  Location     Type
 15817 ;;                  1    wreg      void 
 15818 ;; Registers used:
 15819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15820 ;; Tracked objects:
 15821 ;;		On entry : 0/0
 15822 ;;		On exit  : 0/0
 15823 ;;		Unchanged: 0/0
 15824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15826 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15828 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15829 ;;Total ram usage:        6 bytes
 15830 ;; Hardware stack levels used: 1
 15831 ;; Hardware stack levels required when called: 16
 15832 ;; This function calls:
 15833 ;;		_evtIdxToTableIndex
 15834 ;;		_getEN
 15835 ;;		_getNN
 15836 ;;		_sendMessage3
 15837 ;;		_sendMessage5
 15838 ;;		_validStart
 15839 ;; This function is called by:
 15840 ;;		_teachProcessMessage
 15841 ;; This function uses a non-reentrant model
 15842 ;;
 15843                           
 15844                           	psect	text33
 15845   00AD5A                     __ptext33:
 15846                           	callstack 0
 15847   00AD5A                     _doNenrd:
 15848                           	callstack 12
 15849                           
 15850                           ;incstack = 0
 15851                           ;doNenrd@index stored from wreg
 15852   00AD5A  0101               	movlb	1	; () banked
 15853   00AD5C  6FC2               	movwf	doNenrd@index& (0+255),b
 15854                           
 15855                           ;../../VLCBlib_PIC/event_teach.c: 543:     uint8_t tableIndex;;../../VLCBlib_PIC/event_t
      +                          each.c: 544:     uint16_t nodeNumber, eventNumber;;../../VLCBlib_PIC/event_teach.c: 546:
      +                               tableIndex = evtIdxToTableIndex(index);
 15856   00AD5E  0101               	movlb	1	; () banked
 15857   00AD60  51C2               	movf	doNenrd@index& (0+255),w,b
 15858   00AD62  ECBE  F061         	call	_evtIdxToTableIndex
 15859   00AD66  0101               	movlb	1	; () banked
 15860   00AD68  6FC7               	movwf	doNenrd@tableIndex& (0+255),b
 15861                           
 15862                           ; BSR set to: 1
 15863                           ;../../VLCBlib_PIC/event_teach.c: 548:     if ( ! validStart(tableIndex)) {
 15864   00AD6A  51C7               	movf	doNenrd@tableIndex& (0+255),w,b
 15865   00AD6C  EC3F  F05B         	call	_validStart
 15866   00AD70  0900               	iorlw	0
 15867   00AD72  A4D8               	btfss	status,2,c
 15868   00AD74  D00B               	goto	l21154
 15869                           
 15870                           ;../../VLCBlib_PIC/event_teach.c: 549:         sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, CMDERR_INV_EN_IDX);
 15871   00AD76  C0B4  F0A5         	movff	_nn+1,sendMessage3@data1
 15872   00AD7A  C0B3  F0A6         	movff	_nn,sendMessage3@data2
 15873   00AD7E  0E08               	movlw	8
 15874   00AD80  0100               	movlb	0	; () banked
 15875   00AD82  6FA7               	movwf	sendMessage3@data3& (0+255),b
 15876   00AD84  0E6F               	movlw	111
 15877   00AD86  ECCB  F05E         	call	_sendMessage3
 15878   00AD8A  0012               	return	
 15879   00AD8C                     l21154:
 15880                           
 15881                           ;../../VLCBlib_PIC/event_teach.c: 555:     nodeNumber = getNN(tableIndex);
 15882   00AD8C  0101               	movlb	1	; () banked
 15883   00AD8E  51C7               	movf	doNenrd@tableIndex& (0+255),w,b
 15884   00AD90  EC3F  F049         	call	_getNN
 15885   00AD94  C097  F1C3         	movff	?_getNN,doNenrd@nodeNumber
 15886   00AD98  C098  F1C4         	movff	?_getNN+1,doNenrd@nodeNumber+1
 15887                           
 15888                           ;../../VLCBlib_PIC/event_teach.c: 556:     eventNumber = getEN(tableIndex);
 15889   00AD9C  0101               	movlb	1	; () banked
 15890   00AD9E  51C7               	movf	doNenrd@tableIndex& (0+255),w,b
 15891   00ADA0  EC17  F055         	call	_getEN
 15892   00ADA4  C097  F1C5         	movff	?_getEN,doNenrd@eventNumber
 15893   00ADA8  C098  F1C6         	movff	?_getEN+1,doNenrd@eventNumber+1
 15894                           
 15895                           ;../../VLCBlib_PIC/event_teach.c: 557:     sendMessage5(OPC_ENRSP, nodeNumber>>8, nodeNu
      +                          mber&0xFF, eventNumber>>8, eventNumber&0xFF, index);
 15896   00ADAC  0101               	movlb	1	; () banked
 15897   00ADAE  51C4               	movf	(doNenrd@nodeNumber+1)& (0+255),w,b
 15898   00ADB0  6FBD               	movwf	sendMessage5@data1& (0+255),b
 15899   00ADB2  C1C3  F1BE         	movff	doNenrd@nodeNumber,sendMessage5@data2
 15900   00ADB6  51C6               	movf	(doNenrd@eventNumber+1)& (0+255),w,b
 15901   00ADB8  6FBF               	movwf	sendMessage5@data3& (0+255),b
 15902   00ADBA  C1C5  F1C0         	movff	doNenrd@eventNumber,sendMessage5@data4
 15903   00ADBE  C1C2  F1C1         	movff	doNenrd@index,sendMessage5@data5
 15904   00ADC2  0EF2               	movlw	242
 15905   00ADC4  EC13  F05F         	call	_sendMessage5
 15906   00ADC8  0012               	return		;funcret
 15907   00ADCA                     __end_of_doNenrd:
 15908                           	callstack 0
 15909                           
 15910 ;; *************** function _evtIdxToTableIndex *****************
 15911 ;; Defined at:
 15912 ;;		line 1155 in file "../../VLCBlib_PIC/event_teach.c"
 15913 ;; Parameters:    Size  Location     Type
 15914 ;;  evtIdx          1    wreg     unsigned char 
 15915 ;; Auto vars:     Size  Location     Type
 15916 ;;  evtIdx          1   45[BANK0 ] unsigned char 
 15917 ;; Return value:  Size  Location     Type
 15918 ;;                  1    wreg      unsigned char 
 15919 ;; Registers used:
 15920 ;;		wreg, status,2, status,0
 15921 ;; Tracked objects:
 15922 ;;		On entry : 0/0
 15923 ;;		On exit  : 0/0
 15924 ;;		Unchanged: 0/0
 15925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15927 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15929 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15930 ;;Total ram usage:        1 bytes
 15931 ;; Hardware stack levels used: 1
 15932 ;; Hardware stack levels required when called: 12
 15933 ;; This function calls:
 15934 ;;		Nothing
 15935 ;; This function is called by:
 15936 ;;		_doNenrd
 15937 ;;		_doReval
 15938 ;; This function uses a non-reentrant model
 15939 ;;
 15940                           
 15941                           	psect	text34
 15942   00C37C                     __ptext34:
 15943                           	callstack 0
 15944   00C37C                     _evtIdxToTableIndex:
 15945                           	callstack 15
 15946                           
 15947                           ;incstack = 0
 15948                           ;evtIdxToTableIndex@evtIdx stored from wreg
 15949   00C37C  0100               	movlb	0	; () banked
 15950   00C37E  6F8D               	movwf	evtIdxToTableIndex@evtIdx& (0+255),b
 15951                           
 15952                           ;../../VLCBlib_PIC/event_teach.c: 1156:     return evtIdx - 1;
 15953   00C380  0100               	movlb	0	; () banked
 15954   00C382  058D               	decf	evtIdxToTableIndex@evtIdx& (0+255),w,b
 15955                           
 15956                           ; BSR set to: 0
 15957   00C384  0012               	return		;funcret
 15958   00C386                     __end_of_evtIdxToTableIndex:
 15959                           	callstack 0
 15960                           
 15961 ;; *************** function _doEvuln *****************
 15962 ;; Defined at:
 15963 ;;		line 662 in file "../../VLCBlib_PIC/event_teach.c"
 15964 ;; Parameters:    Size  Location     Type
 15965 ;;  nodeNumber      2   20[BANK1 ] unsigned short 
 15966 ;;  eventNumber     2   22[BANK1 ] unsigned short 
 15967 ;; Auto vars:     Size  Location     Type
 15968 ;;  result          1   24[BANK1 ] unsigned char 
 15969 ;; Return value:  Size  Location     Type
 15970 ;;                  1    wreg      void 
 15971 ;; Registers used:
 15972 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15973 ;; Tracked objects:
 15974 ;;		On entry : 0/0
 15975 ;;		On exit  : 0/0
 15976 ;;		Unchanged: 0/0
 15977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15978 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15979 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15981 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15982 ;;Total ram usage:        5 bytes
 15983 ;; Hardware stack levels used: 1
 15984 ;; Hardware stack levels required when called: 20
 15985 ;; This function calls:
 15986 ;;		_removeEvent
 15987 ;;		_sendMessage2
 15988 ;;		_sendMessage3
 15989 ;;		_sendMessage5
 15990 ;; This function is called by:
 15991 ;;		_teachProcessMessage
 15992 ;; This function uses a non-reentrant model
 15993 ;;
 15994                           
 15995                           	psect	text35
 15996   00A9B4                     __ptext35:
 15997                           	callstack 0
 15998   00A9B4                     _doEvuln:
 15999                           	callstack 8
 16000                           
 16001                           ;../../VLCBlib_PIC/event_teach.c: 663:     uint8_t result;;../../VLCBlib_PIC/event_teach
      +                          .c: 664:     result = removeEvent(nodeNumber, eventNumber);
 16002                           
 16003                           ; BSR set to: 0
 16004                           ;incstack = 0
 16005   00A9B4  C1C9  F1C4         	movff	doEvuln@nodeNumber,removeEvent@nodeNumber
 16006   00A9B8  C1CA  F1C5         	movff	doEvuln@nodeNumber+1,removeEvent@nodeNumber+1
 16007   00A9BC  C1CB  F1C6         	movff	doEvuln@eventNumber,removeEvent@eventNumber
 16008   00A9C0  C1CC  F1C7         	movff	doEvuln@eventNumber+1,removeEvent@eventNumber+1
 16009   00A9C4  ECDF  F05F         	call	_removeEvent	;wreg free
 16010   00A9C8  0101               	movlb	1	; () banked
 16011   00A9CA  6FCD               	movwf	doEvuln@result& (0+255),b
 16012                           
 16013                           ; BSR set to: 1
 16014                           ;../../VLCBlib_PIC/event_teach.c: 665:     if (result) {
 16015   00A9CC  51CD               	movf	doEvuln@result& (0+255),w,b
 16016   00A9CE  B4D8               	btfsc	status,2,c
 16017   00A9D0  D018               	goto	l21070
 16018                           
 16019                           ; BSR set to: 1
 16020                           ;../../VLCBlib_PIC/event_teach.c: 666:         sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, result);
 16021   00A9D2  C0B4  F0A5         	movff	_nn+1,sendMessage3@data1
 16022   00A9D6  C0B3  F0A6         	movff	_nn,sendMessage3@data2
 16023   00A9DA  C1CD  F0A7         	movff	doEvuln@result,sendMessage3@data3
 16024   00A9DE  0E6F               	movlw	111
 16025   00A9E0  ECCB  F05E         	call	_sendMessage3
 16026                           
 16027                           ;../../VLCBlib_PIC/event_teach.c: 667:         sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_EVULN, SERVICE_ID_OLD_TEACH, result);
 16028   00A9E4  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 16029   00A9E8  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 16030   00A9EC  0E95               	movlw	149
 16031   00A9EE  0101               	movlb	1	; () banked
 16032   00A9F0  6FBF               	movwf	sendMessage5@data3& (0+255),b
 16033   00A9F2  0E04               	movlw	4
 16034   00A9F4  6FC0               	movwf	sendMessage5@data4& (0+255),b
 16035   00A9F6  C1CD  F1C1         	movff	doEvuln@result,sendMessage5@data5
 16036   00A9FA  0EAF               	movlw	175
 16037   00A9FC  EC13  F05F         	call	_sendMessage5
 16038   00AA00  0012               	return	
 16039   00AA02                     l21070:
 16040                           
 16041                           ; BSR set to: 1
 16042                           ;../../VLCBlib_PIC/event_teach.c: 671:     sendMessage2(OPC_WRACK, nn.bytes.hi, nn.bytes
      +                          .lo);
 16043   00AA02  C0B4  F0A5         	movff	_nn+1,sendMessage2@data1
 16044   00AA06  C0B3  F0A6         	movff	_nn,sendMessage2@data2
 16045   00AA0A  0E59               	movlw	89
 16046   00AA0C  ECE3  F05E         	call	_sendMessage2
 16047                           
 16048                           ;../../VLCBlib_PIC/event_teach.c: 672:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn.bytes.
      +                          lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, GRSP_OK);
 16049   00AA10  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 16050   00AA14  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 16051   00AA18  0EB2               	movlw	178
 16052   00AA1A  0101               	movlb	1	; () banked
 16053   00AA1C  6FBF               	movwf	sendMessage5@data3& (0+255),b
 16054   00AA1E  0E04               	movlw	4
 16055   00AA20  6FC0               	movwf	sendMessage5@data4& (0+255),b
 16056   00AA22  0E00               	movlw	0
 16057   00AA24  6FC1               	movwf	sendMessage5@data5& (0+255),b
 16058   00AA26  0EAF               	movlw	175
 16059   00AA28  EC13  F05F         	call	_sendMessage5
 16060   00AA2C  0012               	return		;funcret
 16061   00AA2E                     __end_of_doEvuln:
 16062                           	callstack 0
 16063                           
 16064 ;; *************** function _removeEvent *****************
 16065 ;; Defined at:
 16066 ;;		line 748 in file "../../VLCBlib_PIC/event_teach.c"
 16067 ;; Parameters:    Size  Location     Type
 16068 ;;  nodeNumber      2   15[BANK1 ] unsigned short 
 16069 ;;  eventNumber     2   17[BANK1 ] unsigned short 
 16070 ;; Auto vars:     Size  Location     Type
 16071 ;;  tableIndex      1   19[BANK1 ] unsigned char 
 16072 ;; Return value:  Size  Location     Type
 16073 ;;                  1    wreg      unsigned char 
 16074 ;; Registers used:
 16075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16076 ;; Tracked objects:
 16077 ;;		On entry : 0/0
 16078 ;;		On exit  : 0/0
 16079 ;;		Unchanged: 0/0
 16080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16081 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16082 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16084 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16085 ;;Total ram usage:        5 bytes
 16086 ;; Hardware stack levels used: 1
 16087 ;; Hardware stack levels required when called: 19
 16088 ;; This function calls:
 16089 ;;		_findEvent
 16090 ;;		_removeTableEntry
 16091 ;; This function is called by:
 16092 ;;		_doEvuln
 16093 ;; This function uses a non-reentrant model
 16094 ;;
 16095                           
 16096                           	psect	text36
 16097   00BFBE                     __ptext36:
 16098                           	callstack 0
 16099   00BFBE                     _removeEvent:
 16100                           	callstack 8
 16101                           
 16102                           ;../../VLCBlib_PIC/event_teach.c: 750:     uint8_t tableIndex = findEvent(nodeNumber, ev
      +                          entNumber);
 16103                           
 16104                           ;incstack = 0
 16105   00BFBE  C1C4  F1B5         	movff	removeEvent@nodeNumber,findEvent@nodeNumber
 16106   00BFC2  C1C5  F1B6         	movff	removeEvent@nodeNumber+1,findEvent@nodeNumber+1
 16107   00BFC6  C1C6  F1B7         	movff	removeEvent@eventNumber,findEvent@eventNumber
 16108   00BFCA  C1C7  F1B8         	movff	removeEvent@eventNumber+1,findEvent@eventNumber+1
 16109   00BFCE  ECBE  F051         	call	_findEvent	;wreg free
 16110   00BFD2  0101               	movlb	1	; () banked
 16111   00BFD4  6FC8               	movwf	removeEvent@tableIndex& (0+255),b
 16112                           
 16113                           ; BSR set to: 1
 16114                           ;../../VLCBlib_PIC/event_teach.c: 751:     if (tableIndex == 0xff) return CMDERR_INVALID
      +                          _EVENT;
 16115   00BFD6  29C8               	incf	removeEvent@tableIndex& (0+255),w,b
 16116   00BFD8  A4D8               	btfss	status,2,c
 16117   00BFDA  D002               	goto	l20072
 16118                           
 16119                           ; BSR set to: 1
 16120   00BFDC  0E07               	movlw	7
 16121   00BFDE  0012               	return	
 16122   00BFE0                     l20072:
 16123                           
 16124                           ; BSR set to: 1
 16125                           ;../../VLCBlib_PIC/event_teach.c: 753:     return removeTableEntry(tableIndex);
 16126   00BFE0  51C8               	movf	removeEvent@tableIndex& (0+255),w,b
 16127   00BFE2  EC2D  F03F         	call	_removeTableEntry
 16128   00BFE6  0012               	return		;funcret
 16129   00BFE8                     __end_of_removeEvent:
 16130                           	callstack 0
 16131                           
 16132 ;; *************** function _doEvlrn *****************
 16133 ;; Defined at:
 16134 ;;		line 596 in file "../../VLCBlib_PIC/event_teach.c"
 16135 ;; Parameters:    Size  Location     Type
 16136 ;;  nodeNumber      2   51[BANK1 ] unsigned short 
 16137 ;;  eventNumber     2   53[BANK1 ] unsigned short 
 16138 ;;  evNum           1   55[BANK1 ] unsigned char 
 16139 ;;  evVal           1   56[BANK1 ] unsigned char 
 16140 ;; Auto vars:     Size  Location     Type
 16141 ;;  error           1   57[BANK1 ] unsigned char 
 16142 ;; Return value:  Size  Location     Type
 16143 ;;                  1    wreg      void 
 16144 ;; Registers used:
 16145 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16146 ;; Tracked objects:
 16147 ;;		On entry : 0/0
 16148 ;;		On exit  : 0/0
 16149 ;;		Unchanged: 0/0
 16150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16151 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16152 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16154 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16155 ;;Total ram usage:        7 bytes
 16156 ;; Hardware stack levels used: 1
 16157 ;; Hardware stack levels required when called: 23
 16158 ;; This function calls:
 16159 ;;		_APP_addEvent
 16160 ;;		_sendMessage2
 16161 ;;		_sendMessage3
 16162 ;;		_sendMessage5
 16163 ;; This function is called by:
 16164 ;;		_teachProcessMessage
 16165 ;; This function uses a non-reentrant model
 16166 ;;
 16167                           
 16168                           	psect	text37
 16169   0090F4                     __ptext37:
 16170                           	callstack 0
 16171   0090F4                     _doEvlrn:
 16172                           	callstack 5
 16173                           
 16174                           ;../../VLCBlib_PIC/event_teach.c: 597:     uint8_t error;;../../VLCBlib_PIC/event_teach.
      +                          c: 598:     evNum--;
 16175                           
 16176                           ;incstack = 0
 16177   0090F4  0101               	movlb	1	; () banked
 16178   0090F6  07EC               	decf	doEvlrn@evNum& (0+255),f,b
 16179                           
 16180                           ; BSR set to: 1
 16181                           ;../../VLCBlib_PIC/event_teach.c: 599:     if (evNum >= 20) {
 16182   0090F8  0E13               	movlw	19
 16183   0090FA  65EC               	cpfsgt	doEvlrn@evNum& (0+255),b
 16184   0090FC  D019               	goto	l21046
 16185                           
 16186                           ; BSR set to: 1
 16187                           ;../../VLCBlib_PIC/event_teach.c: 600:         sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, CMDERR_INV_EV_IDX);
 16188   0090FE  C0B4  F0A5         	movff	_nn+1,sendMessage3@data1
 16189   009102  C0B3  F0A6         	movff	_nn,sendMessage3@data2
 16190   009106  0E06               	movlw	6
 16191   009108  0100               	movlb	0	; () banked
 16192   00910A  6FA7               	movwf	sendMessage3@data3& (0+255),b
 16193   00910C  0E6F               	movlw	111
 16194   00910E  ECCB  F05E         	call	_sendMessage3
 16195                           
 16196                           ;../../VLCBlib_PIC/event_teach.c: 601:         sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, CMDERR_INV_EV_IDX);
 16197   009112  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 16198   009116  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 16199   00911A  0ED2               	movlw	210
 16200   00911C  0101               	movlb	1	; () banked
 16201   00911E  6FBF               	movwf	sendMessage5@data3& (0+255),b
 16202   009120  0E04               	movlw	4
 16203   009122  6FC0               	movwf	sendMessage5@data4& (0+255),b
 16204   009124  0E06               	movlw	6
 16205   009126  6FC1               	movwf	sendMessage5@data5& (0+255),b
 16206   009128  0EAF               	movlw	175
 16207   00912A  EC13  F05F         	call	_sendMessage5
 16208   00912E  0012               	return	
 16209   009130                     l21046:
 16210                           
 16211                           ; BSR set to: 1
 16212                           ;../../VLCBlib_PIC/event_teach.c: 604:     error = APP_addEvent(nodeNumber, eventNumber,
      +                           evNum, evVal, FALSE);
 16213   009130  C1E8  F1E1         	movff	doEvlrn@nodeNumber,APP_addEvent@nodeNumber
 16214   009134  C1E9  F1E2         	movff	doEvlrn@nodeNumber+1,APP_addEvent@nodeNumber+1
 16215   009138  C1EA  F1E3         	movff	doEvlrn@eventNumber,APP_addEvent@eventNumber
 16216   00913C  C1EB  F1E4         	movff	doEvlrn@eventNumber+1,APP_addEvent@eventNumber+1
 16217   009140  C1EC  F1E5         	movff	doEvlrn@evNum,APP_addEvent@evNum
 16218   009144  C1ED  F1E6         	movff	doEvlrn@evVal,APP_addEvent@evVal
 16219   009148  0E00               	movlw	0
 16220   00914A  6FE7               	movwf	APP_addEvent@forceOwnNN& (0+255),b
 16221   00914C  EC9F  F060         	call	_APP_addEvent	;wreg free
 16222   009150  0101               	movlb	1	; () banked
 16223   009152  6FEE               	movwf	doEvlrn@error& (0+255),b
 16224                           
 16225                           ; BSR set to: 1
 16226                           ;../../VLCBlib_PIC/event_teach.c: 605:     if (error) {
 16227   009154  51EE               	movf	doEvlrn@error& (0+255),w,b
 16228   009156  B4D8               	btfsc	status,2,c
 16229   009158  D018               	goto	l21054
 16230                           
 16231                           ; BSR set to: 1
 16232                           ;../../VLCBlib_PIC/event_teach.c: 607:         sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, error);
 16233   00915A  C0B4  F0A5         	movff	_nn+1,sendMessage3@data1
 16234   00915E  C0B3  F0A6         	movff	_nn,sendMessage3@data2
 16235   009162  C1EE  F0A7         	movff	doEvlrn@error,sendMessage3@data3
 16236   009166  0E6F               	movlw	111
 16237   009168  ECCB  F05E         	call	_sendMessage3
 16238                           
 16239                           ;../../VLCBlib_PIC/event_teach.c: 608:         sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, error);
 16240   00916C  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 16241   009170  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 16242   009174  0ED2               	movlw	210
 16243   009176  0101               	movlb	1	; () banked
 16244   009178  6FBF               	movwf	sendMessage5@data3& (0+255),b
 16245   00917A  0E04               	movlw	4
 16246   00917C  6FC0               	movwf	sendMessage5@data4& (0+255),b
 16247   00917E  C1EE  F1C1         	movff	doEvlrn@error,sendMessage5@data5
 16248   009182  0EAF               	movlw	175
 16249   009184  EC13  F05F         	call	_sendMessage5
 16250   009188  0012               	return	
 16251   00918A                     l21054:
 16252                           
 16253                           ; BSR set to: 1
 16254                           ;../../VLCBlib_PIC/event_teach.c: 611:     teachDiagnostics[0x00].asUint++;
 16255   00918A  4BAF               	infsnz	_teachDiagnostics& (0+255),f,b
 16256   00918C  2BB0               	incf	(_teachDiagnostics+1)& (0+255),f,b
 16257                           
 16258                           ; BSR set to: 1
 16259                           ;../../VLCBlib_PIC/event_teach.c: 612:     sendMessage2(OPC_WRACK, nn.bytes.hi, nn.bytes
      +                          .lo);
 16260   00918E  C0B4  F0A5         	movff	_nn+1,sendMessage2@data1
 16261   009192  C0B3  F0A6         	movff	_nn,sendMessage2@data2
 16262   009196  0E59               	movlw	89
 16263   009198  ECE3  F05E         	call	_sendMessage2
 16264                           
 16265                           ;../../VLCBlib_PIC/event_teach.c: 613:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn.bytes.
      +                          lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, GRSP_OK);
 16266   00919C  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 16267   0091A0  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 16268   0091A4  0EB2               	movlw	178
 16269   0091A6  0101               	movlb	1	; () banked
 16270   0091A8  6FBF               	movwf	sendMessage5@data3& (0+255),b
 16271   0091AA  0E04               	movlw	4
 16272   0091AC  6FC0               	movwf	sendMessage5@data4& (0+255),b
 16273   0091AE  0E00               	movlw	0
 16274   0091B0  6FC1               	movwf	sendMessage5@data5& (0+255),b
 16275   0091B2  0EAF               	movlw	175
 16276   0091B4  EC13  F05F         	call	_sendMessage5
 16277   0091B8  0012               	return		;funcret
 16278   0091BA                     __end_of_doEvlrn:
 16279                           	callstack 0
 16280                           
 16281 ;; *************** function _APP_addEvent *****************
 16282 ;; Defined at:
 16283 ;;		line 166 in file "../universalEvents.c"
 16284 ;; Parameters:    Size  Location     Type
 16285 ;;  nodeNumber      2   44[BANK1 ] unsigned short 
 16286 ;;  eventNumber     2   46[BANK1 ] unsigned short 
 16287 ;;  evNum           1   48[BANK1 ] unsigned char 
 16288 ;;  evVal           1   49[BANK1 ] unsigned char 
 16289 ;;  forceOwnNN      1   50[BANK1 ] enum E12701
 16290 ;; Auto vars:     Size  Location     Type
 16291 ;;		None
 16292 ;; Return value:  Size  Location     Type
 16293 ;;                  1    wreg      unsigned char 
 16294 ;; Registers used:
 16295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16296 ;; Tracked objects:
 16297 ;;		On entry : 0/0
 16298 ;;		On exit  : 0/0
 16299 ;;		Unchanged: 0/0
 16300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16301 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16304 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16305 ;;Total ram usage:        7 bytes
 16306 ;; Hardware stack levels used: 1
 16307 ;; Hardware stack levels required when called: 22
 16308 ;; This function calls:
 16309 ;;		_addEvent
 16310 ;; This function is called by:
 16311 ;;		_doEvlrn
 16312 ;; This function uses a non-reentrant model
 16313 ;;
 16314                           
 16315                           	psect	text38
 16316   00C13E                     __ptext38:
 16317                           	callstack 0
 16318   00C13E                     _APP_addEvent:
 16319                           	callstack 5
 16320                           
 16321                           ;../universalEvents.c: 182:     return addEvent(nodeNumber, eventNumber, evNum, evVal, f
      +                          orceOwnNN);
 16322                           
 16323                           ;incstack = 0
 16324   00C13E  C1E1  F1D2         	movff	APP_addEvent@nodeNumber,addEvent@nodeNumber
 16325   00C142  C1E2  F1D3         	movff	APP_addEvent@nodeNumber+1,addEvent@nodeNumber+1
 16326   00C146  C1E3  F1D4         	movff	APP_addEvent@eventNumber,addEvent@eventNumber
 16327   00C14A  C1E4  F1D5         	movff	APP_addEvent@eventNumber+1,addEvent@eventNumber+1
 16328   00C14E  C1E5  F1D6         	movff	APP_addEvent@evNum,addEvent@evNum
 16329   00C152  C1E6  F1D7         	movff	APP_addEvent@evVal,addEvent@evVal
 16330   00C156  C1E7  F1D8         	movff	APP_addEvent@forceOwnNN,addEvent@forceOwnNN
 16331   00C15A  ECC9  F032         	call	_addEvent	;wreg free
 16332   00C15E  0012               	return		;funcret
 16333   00C160                     __end_of_APP_addEvent:
 16334                           	callstack 0
 16335                           
 16336 ;; *************** function _APP_GetEventState *****************
 16337 ;; Defined at:
 16338 ;;		line 402 in file "../main.c"
 16339 ;; Parameters:    Size  Location     Type
 16340 ;;  h               1    wreg     unsigned char 
 16341 ;; Auto vars:     Size  Location     Type
 16342 ;;  h               1    0[COMRAM] unsigned char 
 16343 ;; Return value:  Size  Location     Type
 16344 ;;                  1    wreg      enum E12720
 16345 ;; Registers used:
 16346 ;;		wreg
 16347 ;; Tracked objects:
 16348 ;;		On entry : 0/0
 16349 ;;		On exit  : 0/0
 16350 ;;		Unchanged: 0/0
 16351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16356 ;;Total ram usage:        0 bytes
 16357 ;; Hardware stack levels used: 1
 16358 ;; Hardware stack levels required when called: 12
 16359 ;; This function calls:
 16360 ;;		Nothing
 16361 ;; This function is called by:
 16362 ;;		_producerProcessMessage
 16363 ;; This function uses a non-reentrant model
 16364 ;;
 16365                           
 16366                           	psect	text39
 16367   00C3BC                     __ptext39:
 16368                           	callstack 0
 16369   00C3BC                     _APP_GetEventState:
 16370                           	callstack 16
 16371                           
 16372                           ;../main.c: 403:     return EVENT_OFF;
 16373                           
 16374                           ;incstack = 0
 16375   00C3BC  0E00               	movlw	0
 16376   00C3BE  0012               	return		;funcret
 16377   00C3C0                     __end_of_APP_GetEventState:
 16378                           	callstack 0
 16379                           
 16380 ;; *************** function _pollTimedResponse *****************
 16381 ;; Defined at:
 16382 ;;		line 108 in file "../../VLCBlib_PIC/timedResponse.c"
 16383 ;; Parameters:    Size  Location     Type
 16384 ;;		None
 16385 ;; Auto vars:     Size  Location     Type
 16386 ;;  result          1   32[BANK1 ] enum E12937
 16387 ;; Return value:  Size  Location     Type
 16388 ;;                  1    wreg      void 
 16389 ;; Registers used:
 16390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16391 ;; Tracked objects:
 16392 ;;		On entry : 0/0
 16393 ;;		On exit  : 0/0
 16394 ;;		Unchanged: 0/0
 16395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16397 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16398 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16399 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16400 ;;Total ram usage:        3 bytes
 16401 ;; Hardware stack levels used: 1
 16402 ;; Hardware stack levels required when called: 17
 16403 ;; This function calls:
 16404 ;;		NULL
 16405 ;;		_mnsTRallDiagnosticsCallback
 16406 ;;		_mnsTRrqnpnCallback
 16407 ;;		_mnsTRserviceDiscoveryCallback
 16408 ;;		_nerdCallback
 16409 ;;		_nvTRnvrdCallback
 16410 ;;		_reqevCallback
 16411 ;; This function is called by:
 16412 ;;		_poll
 16413 ;; This function uses a non-reentrant model
 16414 ;;
 16415                           
 16416                           	psect	text40
 16417   00A8BC                     __ptext40:
 16418                           	callstack 0
 16419   00A8BC                     _pollTimedResponse:
 16420                           	callstack 12
 16421                           
 16422                           ;../../VLCBlib_PIC/timedResponse.c: 109:     TimedResponseResult result;;../../VLCBlib_P
      +                          IC/timedResponse.c: 111:     if (timedResponseType == 0xFF) {
 16423                           
 16424                           ;incstack = 0
 16425   00A8BC  0100               	movlb	0	; () banked
 16426   00A8BE  29BA               	incf	_timedResponseType& (0+255),w,b
 16427   00A8C0  B4D8               	btfsc	status,2,c
 16428   00A8C2  0012               	return	
 16429                           
 16430                           ; BSR set to: 0
 16431                           ;../../VLCBlib_PIC/timedResponse.c: 115:     if (timedResponseCallback == ((void*)0)) {
 16432   00A8C4  501D               	movf	_timedResponseCallback^0,w,c
 16433   00A8C6  101E               	iorwf	(_timedResponseCallback+1)^0,w,c
 16434   00A8C8  A4D8               	btfss	status,2,c
 16435   00A8CA  D002               	goto	l23422
 16436   00A8CC                     u25300:
 16437                           
 16438                           ; BSR set to: 0
 16439                           ;../../VLCBlib_PIC/timedResponse.c: 117:         timedResponseType = 0xFF;
 16440   00A8CC  69BA               	setf	_timedResponseType& (0+255),b
 16441                           
 16442                           ;../../VLCBlib_PIC/timedResponse.c: 118:         return;
 16443   00A8CE  0012               	return	
 16444   00A8D0                     l23422:
 16445                           
 16446                           ; BSR set to: 0
 16447                           ;../../VLCBlib_PIC/timedResponse.c: 122:     result = (*timedResponseCallback)(timedResp
      +                          onseType, timedResponseServiceIndex, timedResponseStep);
 16448   00A8D0  D801               	call	u25318
 16449   00A8D2  D00E               	goto	u25319
 16450   00A8D4                     u25318:
 16451   00A8D4  0005               	push	
 16452   00A8D6  6EFA               	movwf	pclath,c
 16453   00A8D8  501D               	movf	_timedResponseCallback^0,w,c
 16454   00A8DA  6EFD               	movwf	tosl,c
 16455   00A8DC  501E               	movf	(_timedResponseCallback+1)^0,w,c
 16456   00A8DE  6EFE               	movwf	tosh,c
 16457   00A8E0  6AFF               	clrf	tosu,c
 16458   00A8E2  50FA               	movf	pclath,w,c
 16459   00A8E4  C0BC  F1C4         	movff	_timedResponseServiceIndex,nvTRnvrdCallback@serviceIndex
 16460   00A8E8  C0B9  F1C5         	movff	_timedResponseStep,nvTRnvrdCallback@step
 16461   00A8EC  51BA               	movf	_timedResponseType& (0+255),w,b
 16462   00A8EE  0012               	return		;indir
 16463   00A8F0                     u25319:
 16464   00A8F0  0101               	movlb	1	; () banked
 16465   00A8F2  6FD5               	movwf	pollTimedResponse@result& (0+255),b
 16466                           
 16467                           ;../../VLCBlib_PIC/timedResponse.c: 123:     switch (result) {
 16468   00A8F4  D00F               	goto	l23438
 16469   00A8F6                     l23424:
 16470                           
 16471                           ; BSR set to: 1
 16472                           ;../../VLCBlib_PIC/timedResponse.c: 127:             if (timedResponseAllServicesFlag) {
 16473   00A8F6  0100               	movlb	0	; () banked
 16474   00A8F8  51BB               	movf	_timedResponseAllServicesFlag& (0+255),w,b
 16475   00A8FA  B4D8               	btfsc	status,2,c
 16476   00A8FC  D7E7               	goto	u25300
 16477                           
 16478                           ; BSR set to: 0
 16479                           ;../../VLCBlib_PIC/timedResponse.c: 129:                 timedResponseServiceIndex++;
 16480   00A8FE  2BBC               	incf	_timedResponseServiceIndex& (0+255),f,b
 16481                           
 16482                           ; BSR set to: 0
 16483                           ;../../VLCBlib_PIC/timedResponse.c: 130:                 if (timedResponseServiceIndex >
      +                          = 9) {
 16484   00A900  0E08               	movlw	8
 16485   00A902  65BC               	cpfsgt	_timedResponseServiceIndex& (0+255),b
 16486   00A904  D001               	goto	l23432
 16487   00A906  D7E2               	goto	u25300
 16488   00A908                     l23432:
 16489                           
 16490                           ; BSR set to: 0
 16491                           ;../../VLCBlib_PIC/timedResponse.c: 134:                     timedResponseStep = 0;
 16492   00A908  0E00               	movlw	0
 16493   00A90A  6FB9               	movwf	_timedResponseStep& (0+255),b
 16494   00A90C  0012               	return	
 16495   00A90E                     l23434:
 16496                           
 16497                           ; BSR set to: 1
 16498                           ;../../VLCBlib_PIC/timedResponse.c: 143:             timedResponseStep++;
 16499   00A90E  0100               	movlb	0	; () banked
 16500   00A910  2BB9               	incf	_timedResponseStep& (0+255),f,b
 16501                           
 16502                           ;../../VLCBlib_PIC/timedResponse.c: 144:             break;
 16503   00A912  0012               	return	
 16504   00A914                     l23438:
 16505                           
 16506                           ; BSR set to: 1
 16507   00A914  51D5               	movf	pollTimedResponse@result& (0+255),w,b
 16508   00A916  6FD3               	movwf	??_pollTimedResponse& (0+255),b
 16509   00A918  6BD4               	clrf	(??_pollTimedResponse+1)& (0+255),b
 16510                           
 16511                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16512                           ; Switch size 1, requested type "simple"
 16513                           ; Number of cases is 1, Range of values is 0 to 0
 16514                           ; switch strategies available:
 16515                           ; Name         Instructions Cycles
 16516                           ; simple_byte            4     3 (average)
 16517                           ;	Chosen strategy is simple_byte
 16518   00A91A  51D4               	movf	(??_pollTimedResponse+1)& (0+255),w,b
 16519   00A91C  0A00               	xorlw	0	; case 0
 16520   00A91E  A4D8               	btfss	status,2,c
 16521   00A920  0012               	return	
 16522                           
 16523                           ; BSR set to: 1
 16524                           ; Switch size 1, requested type "simple"
 16525                           ; Number of cases is 3, Range of values is 0 to 2
 16526                           ; switch strategies available:
 16527                           ; Name         Instructions Cycles
 16528                           ; simple_byte           10     6 (average)
 16529                           ;	Chosen strategy is simple_byte
 16530   00A922  51D3               	movf	??_pollTimedResponse& (0+255),w,b
 16531   00A924  0A00               	xorlw	0	; case 0
 16532   00A926  B4D8               	btfsc	status,2,c
 16533   00A928  D7E6               	goto	l23424
 16534   00A92A  0A01               	xorlw	1	; case 1
 16535   00A92C  B4D8               	btfsc	status,2,c
 16536   00A92E  0012               	return	
 16537   00A930  0A03               	xorlw	3	; case 2
 16538   00A932  A4D8               	btfss	status,2,c
 16539   00A934  0012               	return	
 16540   00A936  D7EB               	goto	l23434
 16541   00A938                     __end_of_pollTimedResponse:
 16542                           	callstack 0
 16543                           
 16544 ;; *************** function _nvTRnvrdCallback *****************
 16545 ;; Defined at:
 16546 ;;		line 327 in file "../../VLCBlib_PIC/nv.c"
 16547 ;; Parameters:    Size  Location     Type
 16548 ;;  type            1    wreg     unsigned char 
 16549 ;;  serviceIndex    1   15[BANK1 ] unsigned char 
 16550 ;;  step            1   16[BANK1 ] unsigned char 
 16551 ;; Auto vars:     Size  Location     Type
 16552 ;;  type            1    0[COMRAM] unsigned char 
 16553 ;;  valueOrError    2   17[BANK1 ] short 
 16554 ;; Return value:  Size  Location     Type
 16555 ;;                  1    wreg      enum E12944
 16556 ;; Registers used:
 16557 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16558 ;; Tracked objects:
 16559 ;;		On entry : 0/0
 16560 ;;		On exit  : 0/0
 16561 ;;		Unchanged: 0/0
 16562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16563 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16564 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16566 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16567 ;;Total ram usage:        4 bytes
 16568 ;; Hardware stack levels used: 1
 16569 ;; Hardware stack levels required when called: 16
 16570 ;; This function calls:
 16571 ;;		_getNV
 16572 ;;		_sendMessage4
 16573 ;; This function is called by:
 16574 ;;		_nvProcessMessage
 16575 ;;		_pollTimedResponse
 16576 ;; This function uses a non-reentrant model
 16577 ;;
 16578                           
 16579                           	psect	text41
 16580   00B9AC                     __ptext41:
 16581                           	callstack 0
 16582   00B9AC                     _nvTRnvrdCallback:
 16583                           	callstack 12
 16584                           
 16585                           ;../../VLCBlib_PIC/nv.c: 328:     int16_t valueOrError;;../../VLCBlib_PIC/nv.c: 329:    
      +                           if (step > 127) {
 16586                           
 16587                           ;incstack = 0
 16588   00B9AC  0E7F               	movlw	127
 16589   00B9AE  0101               	movlb	1	; () banked
 16590   00B9B0  65C5               	cpfsgt	nvTRnvrdCallback@step& (0+255),b
 16591   00B9B2  D002               	goto	l21358
 16592   00B9B4                     u22560:
 16593                           
 16594                           ; BSR set to: 1
 16595                           ;../../VLCBlib_PIC/nv.c: 330:         return TIMED_RESPONSE_RESULT_FINISHED;
 16596   00B9B4  0E00               	movlw	0
 16597   00B9B6  0012               	return	
 16598   00B9B8                     l21358:
 16599                           
 16600                           ; BSR set to: 1
 16601                           ;../../VLCBlib_PIC/nv.c: 332:     valueOrError = getNV(step+1);
 16602   00B9B8  29C5               	incf	nvTRnvrdCallback@step& (0+255),w,b
 16603   00B9BA  EC35  F05D         	call	_getNV
 16604   00B9BE  C08D  F1C6         	movff	?_getNV,nvTRnvrdCallback@valueOrError
 16605   00B9C2  C08E  F1C7         	movff	?_getNV+1,nvTRnvrdCallback@valueOrError+1
 16606                           
 16607                           ;../../VLCBlib_PIC/nv.c: 333:     if (valueOrError < 0) {
 16608   00B9C6  0101               	movlb	1	; () banked
 16609   00B9C8  BFC7               	btfsc	(nvTRnvrdCallback@valueOrError+1)& (0+255),7,b
 16610   00B9CA  D7F4               	goto	u22560
 16611                           
 16612                           ; BSR set to: 1
 16613                           ;../../VLCBlib_PIC/nv.c: 336:     sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.lo, step
      +                          +1, (uint8_t)(valueOrError));
 16614   00B9CC  C0B4  F0A5         	movff	_nn+1,sendMessage4@data1
 16615   00B9D0  C0B3  F0A6         	movff	_nn,sendMessage4@data2
 16616   00B9D4  29C5               	incf	nvTRnvrdCallback@step& (0+255),w,b
 16617   00B9D6  0100               	movlb	0	; () banked
 16618   00B9D8  6FA7               	movwf	sendMessage4@data3& (0+255),b
 16619   00B9DA  C1C6  F0A8         	movff	nvTRnvrdCallback@valueOrError,sendMessage4@data4
 16620   00B9DE  0E97               	movlw	151
 16621   00B9E0  EC87  F05F         	call	_sendMessage4
 16622                           
 16623                           ;../../VLCBlib_PIC/nv.c: 337:     nvDiagnostics[0x00].asUint++;
 16624   00B9E4  0100               	movlb	0	; () banked
 16625   00B9E6  4BCD               	infsnz	_nvDiagnostics& (0+255),f,b
 16626   00B9E8  2BCE               	incf	(_nvDiagnostics+1)& (0+255),f,b
 16627                           
 16628                           ; BSR set to: 0
 16629                           ;../../VLCBlib_PIC/nv.c: 338:     return TIMED_RESPONSE_RESULT_NEXT;
 16630   00B9EA  0E02               	movlw	2
 16631   00B9EC  0012               	return		;funcret
 16632   00B9EE                     __end_of_nvTRnvrdCallback:
 16633                           	callstack 0
 16634                           
 16635 ;; *************** function _mnsTRserviceDiscoveryCallback *****************
 16636 ;; Defined at:
 16637 ;;		line 821 in file "../../VLCBlib_PIC/mns.c"
 16638 ;; Parameters:    Size  Location     Type
 16639 ;;  type            1    wreg     unsigned char 
 16640 ;;  serviceIndex    1   15[BANK1 ] unsigned char 
 16641 ;;  step            1   16[BANK1 ] unsigned char 
 16642 ;; Auto vars:     Size  Location     Type
 16643 ;;  type            1    0[COMRAM] unsigned char 
 16644 ;; Return value:  Size  Location     Type
 16645 ;;                  1    wreg      enum E12944
 16646 ;; Registers used:
 16647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16648 ;; Tracked objects:
 16649 ;;		On entry : 0/0
 16650 ;;		On exit  : 0/0
 16651 ;;		Unchanged: 0/0
 16652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16653 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16655 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16656 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16657 ;;Total ram usage:        6 bytes
 16658 ;; Hardware stack levels used: 1
 16659 ;; Hardware stack levels required when called: 16
 16660 ;; This function calls:
 16661 ;;		_sendMessage5
 16662 ;; This function is called by:
 16663 ;;		_mnsProcessMessage
 16664 ;;		_pollTimedResponse
 16665 ;; This function uses a non-reentrant model
 16666 ;;
 16667                           
 16668                           	psect	text42
 16669   00A40C                     __ptext42:
 16670                           	callstack 0
 16671   00A40C                     _mnsTRserviceDiscoveryCallback:
 16672                           	callstack 12
 16673                           
 16674                           ;../../VLCBlib_PIC/mns.c: 822:     if (step >= 9) {
 16675                           
 16676                           ;incstack = 0
 16677   00A40C  0E08               	movlw	8
 16678   00A40E  0101               	movlb	1	; () banked
 16679   00A410  65C5               	cpfsgt	mnsTRserviceDiscoveryCallback@step& (0+255),b
 16680   00A412  D002               	goto	l21278
 16681                           
 16682                           ; BSR set to: 1
 16683                           ;../../VLCBlib_PIC/mns.c: 823:         return TIMED_RESPONSE_RESULT_FINISHED;
 16684   00A414  0E00               	movlw	0
 16685   00A416  0012               	return	
 16686   00A418                     l21278:
 16687                           
 16688                           ; BSR set to: 1
 16689                           ;../../VLCBlib_PIC/mns.c: 826:         sendMessage5(OPC_SD, nn.bytes.hi, nn.bytes.lo, st
      +                          ep+1, services[step]->serviceNo, services[step]->version);
 16690   00A418  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 16691   00A41C  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 16692   00A420  29C5               	incf	mnsTRserviceDiscoveryCallback@step& (0+255),w,b
 16693   00A422  6FBF               	movwf	sendMessage5@data3& (0+255),b
 16694   00A424  51C5               	movf	mnsTRserviceDiscoveryCallback@step& (0+255),w,b
 16695   00A426  0D02               	mullw	2
 16696   00A428  0E75               	movlw	low _services
 16697   00A42A  24F3               	addwf	243,w,c
 16698   00A42C  6EF6               	movwf	tblptrl,c
 16699   00A42E  0EEE               	movlw	high _services
 16700   00A430  20F4               	addwfc	244,w,c
 16701   00A432  6EF7               	movwf	tblptrh,c
 16702   00A434                     	if	1	;There are 3 active tblptr bytes
 16703   00A434  6AF8               	clrf	tblptru,c
 16704   00A436  0E00               	movlw	low (__mediumconst shr (0+16))
 16705   00A438  22F8               	addwfc	tblptru,f,c
 16706   00A43A                     	endif
 16707   00A43A  0009               	tblrd		*+
 16708   00A43C  CFF5 F1C6          	movff	tablat,??_mnsTRserviceDiscoveryCallback
 16709   00A440  0009               	tblrd		*+
 16710   00A442  CFF5 F1C7          	movff	tablat,??_mnsTRserviceDiscoveryCallback+1
 16711   00A446  C1C6  FFF6         	movff	??_mnsTRserviceDiscoveryCallback,tblptrl
 16712   00A44A  C1C7  FFF7         	movff	??_mnsTRserviceDiscoveryCallback+1,tblptrh
 16713   00A44E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16714   00A44E  6AF8               	clrf	tblptru,c
 16715   00A450                     	endif
 16716   00A450                     	if	0	;tblptru may be non-zero
 16717   00A450                     	endif
 16718   00A450  0008               	tblrd		*
 16719   00A452  CFF5 F1C0          	movff	tablat,sendMessage5@data4
 16720   00A456  51C5               	movf	mnsTRserviceDiscoveryCallback@step& (0+255),w,b
 16721   00A458  0D02               	mullw	2
 16722   00A45A  0E75               	movlw	low _services
 16723   00A45C  24F3               	addwf	243,w,c
 16724   00A45E  6EF6               	movwf	tblptrl,c
 16725   00A460  0EEE               	movlw	high _services
 16726   00A462  20F4               	addwfc	244,w,c
 16727   00A464  6EF7               	movwf	tblptrh,c
 16728   00A466                     	if	1	;There are 3 active tblptr bytes
 16729   00A466  6AF8               	clrf	tblptru,c
 16730   00A468  0E00               	movlw	low (__mediumconst shr (0+16))
 16731   00A46A  22F8               	addwfc	tblptru,f,c
 16732   00A46C                     	endif
 16733   00A46C  0009               	tblrd		*+
 16734   00A46E  CFF5 F1C8          	movff	tablat,??_mnsTRserviceDiscoveryCallback+2
 16735   00A472  0009               	tblrd		*+
 16736   00A474  CFF5 F1C9          	movff	tablat,??_mnsTRserviceDiscoveryCallback+3
 16737   00A478  0E01               	movlw	1
 16738   00A47A  27C8               	addwf	(??_mnsTRserviceDiscoveryCallback+2)& (0+255),f,b
 16739   00A47C  0E00               	movlw	0
 16740   00A47E  23C9               	addwfc	(??_mnsTRserviceDiscoveryCallback+3)& (0+255),f,b
 16741   00A480  C1C8  FFF6         	movff	??_mnsTRserviceDiscoveryCallback+2,tblptrl
 16742   00A484  C1C9  FFF7         	movff	??_mnsTRserviceDiscoveryCallback+3,tblptrh
 16743   00A488                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16744   00A488  6AF8               	clrf	tblptru,c
 16745   00A48A                     	endif
 16746   00A48A                     	if	0	;tblptru may be non-zero
 16747   00A48A                     	endif
 16748   00A48A  0008               	tblrd		*
 16749   00A48C  CFF5 F1C1          	movff	tablat,sendMessage5@data5
 16750   00A490  0EAC               	movlw	172
 16751   00A492  EC13  F05F         	call	_sendMessage5
 16752                           
 16753                           ;../../VLCBlib_PIC/mns.c: 828:     return TIMED_RESPONSE_RESULT_NEXT;
 16754   00A496  0E02               	movlw	2
 16755   00A498  0012               	return		;funcret
 16756   00A49A                     __end_of_mnsTRserviceDiscoveryCallback:
 16757                           	callstack 0
 16758                           
 16759 ;; *************** function _mnsTRallDiagnosticsCallback *****************
 16760 ;; Defined at:
 16761 ;;		line 838 in file "../../VLCBlib_PIC/mns.c"
 16762 ;; Parameters:    Size  Location     Type
 16763 ;;  type            1    wreg     unsigned char 
 16764 ;;  serviceIndex    1   15[BANK1 ] unsigned char 
 16765 ;;  step            1   16[BANK1 ] unsigned char 
 16766 ;; Auto vars:     Size  Location     Type
 16767 ;;  type            1    0[COMRAM] unsigned char 
 16768 ;;  d               2   21[BANK1 ] PTR struct DiagnosticVal
 16769 ;;		 -> canDiagnostics(32), nvDiagnostics(4), mnsDiagnostics(12), teachDiagnostics(2), 
 16770 ;;		 -> producerDiagnostics(2), ackDiagnostics(2), consumer2QDiagnostics(2), NULL(0), 
 16771 ;; Return value:  Size  Location     Type
 16772 ;;                  1    wreg      enum E12944
 16773 ;; Registers used:
 16774 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16775 ;; Tracked objects:
 16776 ;;		On entry : 0/0
 16777 ;;		On exit  : 0/0
 16778 ;;		Unchanged: 0/0
 16779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16780 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16781 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16782 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16783 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16784 ;;Total ram usage:        8 bytes
 16785 ;; Hardware stack levels used: 1
 16786 ;; Hardware stack levels required when called: 16
 16787 ;; This function calls:
 16788 ;;		NULL
 16789 ;;		_ackGetDiagnostic
 16790 ;;		_canGetDiagnostic
 16791 ;;		_consumer2QGetDiagnostic
 16792 ;;		_mnsGetDiagnostic
 16793 ;;		_nvGetDiagnostic
 16794 ;;		_producerGetDiagnostic
 16795 ;;		_sendMessage6
 16796 ;;		_teachGetDiagnostic
 16797 ;; This function is called by:
 16798 ;;		_mnsProcessMessage
 16799 ;;		_pollTimedResponse
 16800 ;; This function uses a non-reentrant model
 16801 ;;
 16802                           
 16803                           	psect	text43
 16804   00847E                     __ptext43:
 16805                           	callstack 0
 16806   00847E                     _mnsTRallDiagnosticsCallback:
 16807                           	callstack 12
 16808                           
 16809                           ;../../VLCBlib_PIC/mns.c: 839:     if (services[serviceIndex]->getDiagnostic == ((void*)
      +                          0)) {
 16810                           
 16811                           ;incstack = 0
 16812   00847E  0101               	movlb	1	; () banked
 16813   008480  51C4               	movf	mnsTRallDiagnosticsCallback@serviceIndex& (0+255),w,b
 16814   008482  0D02               	mullw	2
 16815   008484  0E75               	movlw	low _services
 16816   008486  24F3               	addwf	243,w,c
 16817   008488  6EF6               	movwf	tblptrl,c
 16818   00848A  0EEE               	movlw	high _services
 16819   00848C  20F4               	addwfc	244,w,c
 16820   00848E  6EF7               	movwf	tblptrh,c
 16821   008490                     	if	1	;There are 3 active tblptr bytes
 16822   008490  6AF8               	clrf	tblptru,c
 16823   008492  0E00               	movlw	low (__mediumconst shr (0+16))
 16824   008494  22F8               	addwfc	tblptru,f,c
 16825   008496                     	endif
 16826   008496  0009               	tblrd		*+
 16827   008498  CFF5 F1C6          	movff	tablat,??_mnsTRallDiagnosticsCallback
 16828   00849C  0009               	tblrd		*+
 16829   00849E  CFF5 F1C7          	movff	tablat,??_mnsTRallDiagnosticsCallback+1
 16830   0084A2  0E10               	movlw	16
 16831   0084A4  27C6               	addwf	??_mnsTRallDiagnosticsCallback& (0+255),f,b
 16832   0084A6  0E00               	movlw	0
 16833   0084A8  23C7               	addwfc	(??_mnsTRallDiagnosticsCallback+1)& (0+255),f,b
 16834   0084AA  C1C6  FFF6         	movff	??_mnsTRallDiagnosticsCallback,tblptrl
 16835   0084AE  C1C7  FFF7         	movff	??_mnsTRallDiagnosticsCallback+1,tblptrh
 16836   0084B2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16837   0084B2  6AF8               	clrf	tblptru,c
 16838   0084B4                     	endif
 16839   0084B4                     	if	0	;tblptru may be non-zero
 16840   0084B4                     	endif
 16841   0084B4  0009               	tblrd		*+
 16842   0084B6  50F5               	movf	tablat,w,c
 16843   0084B8  0009               	tblrd		*+
 16844   0084BA  10F5               	iorwf	tablat,w,c
 16845   0084BC  A4D8               	btfss	status,2,c
 16846   0084BE  D002               	goto	l21290
 16847   0084C0                     u22500:
 16848                           
 16849                           ; BSR set to: 1
 16850                           ;../../VLCBlib_PIC/mns.c: 840:         return TIMED_RESPONSE_RESULT_FINISHED;
 16851   0084C0  0E00               	movlw	0
 16852   0084C2  0012               	return	
 16853   0084C4                     l21290:
 16854                           
 16855                           ; BSR set to: 1
 16856                           ;../../VLCBlib_PIC/mns.c: 842:     DiagnosticVal * d = services[serviceIndex]->getDiagno
      +                          stic(step+1);
 16857   0084C4  51C4               	movf	mnsTRallDiagnosticsCallback@serviceIndex& (0+255),w,b
 16858   0084C6  0D02               	mullw	2
 16859   0084C8  0E75               	movlw	low _services
 16860   0084CA  24F3               	addwf	243,w,c
 16861   0084CC  6EF6               	movwf	tblptrl,c
 16862   0084CE  0EEE               	movlw	high _services
 16863   0084D0  20F4               	addwfc	244,w,c
 16864   0084D2  6EF7               	movwf	tblptrh,c
 16865   0084D4                     	if	1	;There are 3 active tblptr bytes
 16866   0084D4  6AF8               	clrf	tblptru,c
 16867   0084D6  0E00               	movlw	low (__mediumconst shr (0+16))
 16868   0084D8  22F8               	addwfc	tblptru,f,c
 16869   0084DA                     	endif
 16870   0084DA  0009               	tblrd		*+
 16871   0084DC  CFF5 F1C6          	movff	tablat,??_mnsTRallDiagnosticsCallback
 16872   0084E0  0009               	tblrd		*+
 16873   0084E2  CFF5 F1C7          	movff	tablat,??_mnsTRallDiagnosticsCallback+1
 16874   0084E6  0E10               	movlw	16
 16875   0084E8  27C6               	addwf	??_mnsTRallDiagnosticsCallback& (0+255),f,b
 16876   0084EA  0E00               	movlw	0
 16877   0084EC  23C7               	addwfc	(??_mnsTRallDiagnosticsCallback+1)& (0+255),f,b
 16878   0084EE  C1C6  FFF6         	movff	??_mnsTRallDiagnosticsCallback,tblptrl
 16879   0084F2  C1C7  FFF7         	movff	??_mnsTRallDiagnosticsCallback+1,tblptrh
 16880   0084F6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16881   0084F6  6AF8               	clrf	tblptru,c
 16882   0084F8                     	endif
 16883   0084F8                     	if	0	;tblptru may be non-zero
 16884   0084F8                     	endif
 16885   0084F8  0009               	tblrd		*+
 16886   0084FA  CFF5 F1C8          	movff	tablat,??_mnsTRallDiagnosticsCallback+2
 16887   0084FE  0009               	tblrd		*+
 16888   008500  CFF5 F1C9          	movff	tablat,??_mnsTRallDiagnosticsCallback+3
 16889   008504  D801               	call	u22518
 16890   008506  D00A               	goto	u22519
 16891   008508                     u22518:
 16892   008508  0005               	push	
 16893   00850A  6EFA               	movwf	pclath,c
 16894   00850C  51C8               	movf	(??_mnsTRallDiagnosticsCallback+2)& (0+255),w,b
 16895   00850E  6EFD               	movwf	tosl,c
 16896   008510  51C9               	movf	(??_mnsTRallDiagnosticsCallback+3)& (0+255),w,b
 16897   008512  6EFE               	movwf	tosh,c
 16898   008514  6AFF               	clrf	tosu,c
 16899   008516  50FA               	movf	pclath,w,c
 16900   008518  29C5               	incf	mnsTRallDiagnosticsCallback@step& (0+255),w,b
 16901   00851A  0012               	return		;indir
 16902   00851C                     u22519:
 16903   00851C  C08D  F1CA         	movff	?_canGetDiagnostic,mnsTRallDiagnosticsCallback@d
 16904   008520  C08E  F1CB         	movff	?_canGetDiagnostic+1,mnsTRallDiagnosticsCallback@d+1
 16905                           
 16906                           ;../../VLCBlib_PIC/mns.c: 843:     if (d == ((void*)0)) {
 16907   008524  0101               	movlb	1	; () banked
 16908   008526  51CA               	movf	mnsTRallDiagnosticsCallback@d& (0+255),w,b
 16909   008528  11CB               	iorwf	(mnsTRallDiagnosticsCallback@d+1)& (0+255),w,b
 16910   00852A  B4D8               	btfsc	status,2,c
 16911   00852C  D7C9               	goto	u22500
 16912                           
 16913                           ; BSR set to: 1
 16914                           ;../../VLCBlib_PIC/mns.c: 848:     sendMessage6(OPC_DGN, nn.bytes.hi, nn.bytes.lo, servi
      +                          ceIndex+1, step+1, d->asBytes.hi, d->asBytes.lo);
 16915   00852E  C0B4  F1BD         	movff	_nn+1,sendMessage6@data1
 16916   008532  C0B3  F1BE         	movff	_nn,sendMessage6@data2
 16917   008536  29C4               	incf	mnsTRallDiagnosticsCallback@serviceIndex& (0+255),w,b
 16918   008538  6FBF               	movwf	sendMessage6@data3& (0+255),b
 16919   00853A  29C5               	incf	mnsTRallDiagnosticsCallback@step& (0+255),w,b
 16920   00853C  6FC0               	movwf	sendMessage6@data4& (0+255),b
 16921   00853E  EE20 F001          	lfsr	2,1
 16922   008542  51CA               	movf	mnsTRallDiagnosticsCallback@d& (0+255),w,b
 16923   008544  26D9               	addwf	fsr2l,f,c
 16924   008546  51CB               	movf	(mnsTRallDiagnosticsCallback@d+1)& (0+255),w,b
 16925   008548  22DA               	addwfc	fsr2h,f,c
 16926   00854A  50DF               	movf	indf2,w,c
 16927   00854C  6FC1               	movwf	sendMessage6@data5& (0+255),b
 16928   00854E  C1CA  FFD9         	movff	mnsTRallDiagnosticsCallback@d,fsr2l
 16929   008552  C1CB  FFDA         	movff	mnsTRallDiagnosticsCallback@d+1,fsr2h
 16930   008556  50DF               	movf	indf2,w,c
 16931   008558  6FC2               	movwf	sendMessage6@data6& (0+255),b
 16932   00855A  0EC7               	movlw	199
 16933   00855C  ECB3  F05E         	call	_sendMessage6
 16934                           
 16935                           ;../../VLCBlib_PIC/mns.c: 849:     return TIMED_RESPONSE_RESULT_NEXT;
 16936   008560  0E02               	movlw	2
 16937   008562  0012               	return		;funcret
 16938   008564                     __end_of_mnsTRallDiagnosticsCallback:
 16939                           	callstack 0
 16940                           
 16941 ;; *************** function _mnsTRrqnpnCallback *****************
 16942 ;; Defined at:
 16943 ;;		line 859 in file "../../VLCBlib_PIC/mns.c"
 16944 ;; Parameters:    Size  Location     Type
 16945 ;;  type            1    wreg     unsigned char 
 16946 ;;  serviceIndex    1   15[BANK1 ] unsigned char 
 16947 ;;  step            1   16[BANK1 ] unsigned char 
 16948 ;; Auto vars:     Size  Location     Type
 16949 ;;  type            1    0[COMRAM] unsigned char 
 16950 ;; Return value:  Size  Location     Type
 16951 ;;                  1    wreg      enum E12944
 16952 ;; Registers used:
 16953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16954 ;; Tracked objects:
 16955 ;;		On entry : 0/0
 16956 ;;		On exit  : 0/0
 16957 ;;		Unchanged: 0/0
 16958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16959 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16962 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16963 ;;Total ram usage:        2 bytes
 16964 ;; Hardware stack levels used: 1
 16965 ;; Hardware stack levels required when called: 16
 16966 ;; This function calls:
 16967 ;;		_getParameter
 16968 ;;		_sendMessage4
 16969 ;; This function is called by:
 16970 ;;		_mnsProcessMessage
 16971 ;;		_pollTimedResponse
 16972 ;; This function uses a non-reentrant model
 16973 ;;
 16974                           
 16975                           	psect	text44
 16976   00BD36                     __ptext44:
 16977                           	callstack 0
 16978   00BD36                     _mnsTRrqnpnCallback:
 16979                           	callstack 12
 16980                           
 16981                           ;../../VLCBlib_PIC/mns.c: 860:     if (step >= 20) {
 16982                           
 16983                           ;incstack = 0
 16984   00BD36  0E13               	movlw	19
 16985   00BD38  0101               	movlb	1	; () banked
 16986   00BD3A  65C5               	cpfsgt	mnsTRrqnpnCallback@step& (0+255),b
 16987   00BD3C  D002               	goto	l21310
 16988                           
 16989                           ; BSR set to: 1
 16990                           ;../../VLCBlib_PIC/mns.c: 861:         return TIMED_RESPONSE_RESULT_FINISHED;
 16991   00BD3E  0E00               	movlw	0
 16992   00BD40  0012               	return	
 16993   00BD42                     l21310:
 16994                           
 16995                           ; BSR set to: 1
 16996                           ;../../VLCBlib_PIC/mns.c: 863:     sendMessage4(OPC_PARAN, nn.bytes.hi, nn.bytes.lo, ste
      +                          p+1, getParameter(step+1));
 16997   00BD42  C0B4  F0A5         	movff	_nn+1,sendMessage4@data1
 16998   00BD46  C0B3  F0A6         	movff	_nn,sendMessage4@data2
 16999   00BD4A  29C5               	incf	mnsTRrqnpnCallback@step& (0+255),w,b
 17000   00BD4C  0100               	movlb	0	; () banked
 17001   00BD4E  6FA7               	movwf	sendMessage4@data3& (0+255),b
 17002   00BD50  0101               	movlb	1	; () banked
 17003   00BD52  29C5               	incf	mnsTRrqnpnCallback@step& (0+255),w,b
 17004   00BD54  EC25  F043         	call	_getParameter
 17005   00BD58  0100               	movlb	0	; () banked
 17006   00BD5A  6FA8               	movwf	sendMessage4@data4& (0+255),b
 17007   00BD5C  0E9B               	movlw	155
 17008   00BD5E  EC87  F05F         	call	_sendMessage4
 17009                           
 17010                           ;../../VLCBlib_PIC/mns.c: 864:     return TIMED_RESPONSE_RESULT_NEXT;
 17011   00BD62  0E02               	movlw	2
 17012   00BD64  0012               	return		;funcret
 17013   00BD66                     __end_of_mnsTRrqnpnCallback:
 17014                           	callstack 0
 17015                           
 17016 ;; *************** function _nerdCallback *****************
 17017 ;; Defined at:
 17018 ;;		line 521 in file "../../VLCBlib_PIC/event_teach.c"
 17019 ;; Parameters:    Size  Location     Type
 17020 ;;  type            1    wreg     unsigned char 
 17021 ;;  serviceIndex    1   15[BANK1 ] unsigned char 
 17022 ;;  step            1   16[BANK1 ] unsigned char 
 17023 ;; Auto vars:     Size  Location     Type
 17024 ;;  type            1    0[COMRAM] unsigned char 
 17025 ;;  eventNumber     2   19[BANK1 ] struct Word
 17026 ;;  nodeNumber      2   17[BANK1 ] struct Word
 17027 ;; Return value:  Size  Location     Type
 17028 ;;                  1    wreg      enum E12944
 17029 ;; Registers used:
 17030 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17031 ;; Tracked objects:
 17032 ;;		On entry : 0/0
 17033 ;;		On exit  : 0/0
 17034 ;;		Unchanged: 0/0
 17035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17036 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17037 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17039 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17040 ;;Total ram usage:        6 bytes
 17041 ;; Hardware stack levels used: 1
 17042 ;; Hardware stack levels required when called: 16
 17043 ;; This function calls:
 17044 ;;		_getEN
 17045 ;;		_getNN
 17046 ;;		_sendMessage7
 17047 ;;		_tableIndexToEvtIdx
 17048 ;;		_validStart
 17049 ;; This function is called by:
 17050 ;;		_doNerd
 17051 ;;		_pollTimedResponse
 17052 ;; This function uses a non-reentrant model
 17053 ;;
 17054                           
 17055                           	psect	text45
 17056   00AF02                     __ptext45:
 17057                           	callstack 0
 17058   00AF02                     _nerdCallback:
 17059                           	callstack 12
 17060                           
 17061                           ;../../VLCBlib_PIC/event_teach.c: 522:     Word nodeNumber, eventNumber;;../../VLCBlib_P
      +                          IC/event_teach.c: 524:     if (step >= 255) {
 17062                           
 17063                           ;incstack = 0
 17064   00AF02  0101               	movlb	1	; () banked
 17065   00AF04  29C5               	incf	nerdCallback@step& (0+255),w,b
 17066   00AF06  A4D8               	btfss	status,2,c
 17067   00AF08  D002               	goto	l21212
 17068                           
 17069                           ; BSR set to: 1
 17070                           ;../../VLCBlib_PIC/event_teach.c: 525:         return TIMED_RESPONSE_RESULT_FINISHED;
 17071   00AF0A  0E00               	movlw	0
 17072   00AF0C  0012               	return	
 17073   00AF0E                     l21212:
 17074                           
 17075                           ; BSR set to: 1
 17076                           ;../../VLCBlib_PIC/event_teach.c: 528:     if (validStart(step)) {
 17077   00AF0E  51C5               	movf	nerdCallback@step& (0+255),w,b
 17078   00AF10  EC3F  F05B         	call	_validStart
 17079   00AF14  0900               	iorlw	0
 17080   00AF16  B4D8               	btfsc	status,2,c
 17081   00AF18  D025               	goto	l21218
 17082                           
 17083                           ;../../VLCBlib_PIC/event_teach.c: 529:         nodeNumber.word = getNN(step);
 17084   00AF1A  0101               	movlb	1	; () banked
 17085   00AF1C  51C5               	movf	nerdCallback@step& (0+255),w,b
 17086   00AF1E  EC3F  F049         	call	_getNN
 17087   00AF22  C097  F1C6         	movff	?_getNN,nerdCallback@nodeNumber
 17088   00AF26  C098  F1C7         	movff	?_getNN+1,nerdCallback@nodeNumber+1
 17089                           
 17090                           ;../../VLCBlib_PIC/event_teach.c: 530:         eventNumber.word = getEN(step);
 17091   00AF2A  0101               	movlb	1	; () banked
 17092   00AF2C  51C5               	movf	nerdCallback@step& (0+255),w,b
 17093   00AF2E  EC17  F055         	call	_getEN
 17094   00AF32  C097  F1C8         	movff	?_getEN,nerdCallback@eventNumber
 17095   00AF36  C098  F1C9         	movff	?_getEN+1,nerdCallback@eventNumber+1
 17096                           
 17097                           ;../../VLCBlib_PIC/event_teach.c: 531:         sendMessage7(OPC_ENRSP, nn.bytes.hi, nn.b
      +                          ytes.lo, nodeNumber.bytes.hi, nodeNumber.bytes.lo, eventNumber.bytes.hi, eventNumber.byt
      +                          es.lo, tableIndexToEvtIdx(step));
 17098   00AF3A  C0B4  F1BD         	movff	_nn+1,sendMessage7@data1
 17099   00AF3E  C0B3  F1BE         	movff	_nn,sendMessage7@data2
 17100   00AF42  C1C7  F1BF         	movff	nerdCallback@nodeNumber+1,sendMessage7@data3
 17101   00AF46  C1C6  F1C0         	movff	nerdCallback@nodeNumber,sendMessage7@data4
 17102   00AF4A  C1C9  F1C1         	movff	nerdCallback@eventNumber+1,sendMessage7@data5
 17103   00AF4E  C1C8  F1C2         	movff	nerdCallback@eventNumber,sendMessage7@data6
 17104   00AF52  0101               	movlb	1	; () banked
 17105   00AF54  51C5               	movf	nerdCallback@step& (0+255),w,b
 17106   00AF56  ECC3  F061         	call	_tableIndexToEvtIdx
 17107   00AF5A  0101               	movlb	1	; () banked
 17108   00AF5C  6FC3               	movwf	sendMessage7@data7& (0+255),b
 17109   00AF5E  0EF2               	movlw	242
 17110   00AF60  ECFB  F05E         	call	_sendMessage7
 17111   00AF64                     l21218:
 17112                           
 17113                           ;../../VLCBlib_PIC/event_teach.c: 533:     return TIMED_RESPONSE_RESULT_NEXT;
 17114   00AF64  0E02               	movlw	2
 17115   00AF66  0012               	return		;funcret
 17116   00AF68                     __end_of_nerdCallback:
 17117                           	callstack 0
 17118                           
 17119 ;; *************** function _reqevCallback *****************
 17120 ;; Defined at:
 17121 ;;		line 721 in file "../../VLCBlib_PIC/event_teach.c"
 17122 ;; Parameters:    Size  Location     Type
 17123 ;;  tableIndex      1    wreg     unsigned char 
 17124 ;;  serviceIndex    1   15[BANK1 ] unsigned char 
 17125 ;;  step            1   16[BANK1 ] unsigned char 
 17126 ;; Auto vars:     Size  Location     Type
 17127 ;;  tableIndex      1   29[BANK1 ] unsigned char 
 17128 ;;  eventNumber     2   27[BANK1 ] struct Word
 17129 ;;  nodeNumber      2   25[BANK1 ] struct Word
 17130 ;;  ev              2   23[BANK1 ] short 
 17131 ;;  nEv             1   22[BANK1 ] unsigned char 
 17132 ;; Return value:  Size  Location     Type
 17133 ;;                  1    wreg      enum E12944
 17134 ;; Registers used:
 17135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17136 ;; Tracked objects:
 17137 ;;		On entry : 0/0
 17138 ;;		On exit  : 0/0
 17139 ;;		Unchanged: 0/0
 17140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17141 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17142 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17143 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17144 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17145 ;;Total ram usage:       15 bytes
 17146 ;; Hardware stack levels used: 1
 17147 ;; Hardware stack levels required when called: 16
 17148 ;; This function calls:
 17149 ;;		_getEN
 17150 ;;		_getEv
 17151 ;;		_getNN
 17152 ;;		_numEv
 17153 ;;		_sendMessage6
 17154 ;; This function is called by:
 17155 ;;		_doReqev
 17156 ;;		_pollTimedResponse
 17157 ;; This function uses a non-reentrant model
 17158 ;;
 17159                           
 17160                           	psect	text46
 17161   009F6C                     __ptext46:
 17162                           	callstack 0
 17163   009F6C                     _reqevCallback:
 17164                           	callstack 12
 17165                           
 17166                           ;incstack = 0
 17167                           ;reqevCallback@tableIndex stored from wreg
 17168   009F6C  0101               	movlb	1	; () banked
 17169   009F6E  6FD2               	movwf	reqevCallback@tableIndex& (0+255),b
 17170                           
 17171                           ;../../VLCBlib_PIC/event_teach.c: 722:     Word nodeNumber, eventNumber;;../../VLCBlib_P
      +                          IC/event_teach.c: 724:     uint8_t nEv = numEv(tableIndex);
 17172   009F70  0101               	movlb	1	; () banked
 17173   009F72  51D2               	movf	reqevCallback@tableIndex& (0+255),w,b
 17174   009F74  EC71  F044         	call	_numEv
 17175   009F78  0101               	movlb	1	; () banked
 17176   009F7A  6FCB               	movwf	reqevCallback@nEv& (0+255),b
 17177                           
 17178                           ; BSR set to: 1
 17179                           ;../../VLCBlib_PIC/event_teach.c: 725:     int16_t ev;;../../VLCBlib_PIC/event_teach.c: 
      +                          727:     if (step+1 > nEv) {
 17180   009F7C  51C5               	movf	reqevCallback@step& (0+255),w,b
 17181   009F7E  6FC6               	movwf	??_reqevCallback& (0+255),b
 17182   009F80  6BC7               	clrf	(??_reqevCallback+1)& (0+255),b
 17183   009F82  0E01               	movlw	1
 17184   009F84  27C6               	addwf	??_reqevCallback& (0+255),f,b
 17185   009F86  0E00               	movlw	0
 17186   009F88  23C7               	addwfc	(??_reqevCallback+1)& (0+255),f,b
 17187   009F8A  51CB               	movf	reqevCallback@nEv& (0+255),w,b
 17188   009F8C  6FC8               	movwf	(??_reqevCallback+2)& (0+255),b
 17189   009F8E  6BC9               	clrf	(??_reqevCallback+3)& (0+255),b
 17190   009F90  51C6               	movf	??_reqevCallback& (0+255),w,b
 17191   009F92  5DC8               	subwf	(??_reqevCallback+2)& (0+255),w,b
 17192   009F94  51C9               	movf	(??_reqevCallback+3)& (0+255),w,b
 17193   009F96  0A80               	xorlw	128
 17194   009F98  6FCA               	movwf	(??_reqevCallback+4)& (0+255),b
 17195   009F9A  51C7               	movf	(??_reqevCallback+1)& (0+255),w,b
 17196   009F9C  0A80               	xorlw	128
 17197   009F9E  59CA               	subwfb	(??_reqevCallback+4)& (0+255),w,b
 17198   009FA0  B0D8               	btfsc	status,0,c
 17199   009FA2  D002               	goto	l21230
 17200                           
 17201                           ; BSR set to: 1
 17202                           ;../../VLCBlib_PIC/event_teach.c: 728:         return TIMED_RESPONSE_RESULT_FINISHED;
 17203   009FA4  0E00               	movlw	0
 17204   009FA6  0012               	return	
 17205   009FA8                     l21230:
 17206                           
 17207                           ; BSR set to: 1
 17208                           ;../../VLCBlib_PIC/event_teach.c: 731:     nodeNumber.word = getNN(tableIndex);
 17209   009FA8  51D2               	movf	reqevCallback@tableIndex& (0+255),w,b
 17210   009FAA  EC3F  F049         	call	_getNN
 17211   009FAE  C097  F1CE         	movff	?_getNN,reqevCallback@nodeNumber
 17212   009FB2  C098  F1CF         	movff	?_getNN+1,reqevCallback@nodeNumber+1
 17213                           
 17214                           ;../../VLCBlib_PIC/event_teach.c: 732:     eventNumber.word = getEN(tableIndex);
 17215   009FB6  0101               	movlb	1	; () banked
 17216   009FB8  51D2               	movf	reqevCallback@tableIndex& (0+255),w,b
 17217   009FBA  EC17  F055         	call	_getEN
 17218   009FBE  C097  F1D0         	movff	?_getEN,reqevCallback@eventNumber
 17219   009FC2  C098  F1D1         	movff	?_getEN+1,reqevCallback@eventNumber+1
 17220                           
 17221                           ;../../VLCBlib_PIC/event_teach.c: 733:     ev = getEv(tableIndex, step);
 17222   009FC6  C1C5  F09D         	movff	reqevCallback@step,getEv@evNum
 17223   009FCA  0101               	movlb	1	; () banked
 17224   009FCC  51D2               	movf	reqevCallback@tableIndex& (0+255),w,b
 17225   009FCE  EC15  F03C         	call	_getEv
 17226   009FD2  C09D  F1CC         	movff	?_getEv,reqevCallback@ev
 17227   009FD6  C09E  F1CD         	movff	?_getEv+1,reqevCallback@ev+1
 17228                           
 17229                           ;../../VLCBlib_PIC/event_teach.c: 734:     if (ev >= 0) {
 17230   009FDA  0101               	movlb	1	; () banked
 17231   009FDC  BFCD               	btfsc	(reqevCallback@ev+1)& (0+255),7,b
 17232   009FDE  D00F               	goto	l21236
 17233                           
 17234                           ; BSR set to: 1
 17235                           ;../../VLCBlib_PIC/event_teach.c: 735:         sendMessage6(OPC_EVANS, nodeNumber.bytes.
      +                          hi, nodeNumber.bytes.lo, eventNumber.bytes.hi, eventNumber.bytes.lo, step+1, (uint8_t)ev
      +                          );
 17236   009FE0  C1CF  F1BD         	movff	reqevCallback@nodeNumber+1,sendMessage6@data1
 17237   009FE4  C1CE  F1BE         	movff	reqevCallback@nodeNumber,sendMessage6@data2
 17238   009FE8  C1D1  F1BF         	movff	reqevCallback@eventNumber+1,sendMessage6@data3
 17239   009FEC  C1D0  F1C0         	movff	reqevCallback@eventNumber,sendMessage6@data4
 17240   009FF0  29C5               	incf	reqevCallback@step& (0+255),w,b
 17241   009FF2  6FC1               	movwf	sendMessage6@data5& (0+255),b
 17242   009FF4  C1CC  F1C2         	movff	reqevCallback@ev,sendMessage6@data6
 17243   009FF8  0ED3               	movlw	211
 17244   009FFA  ECB3  F05E         	call	_sendMessage6
 17245   009FFE                     l21236:
 17246                           
 17247                           ;../../VLCBlib_PIC/event_teach.c: 737:     return TIMED_RESPONSE_RESULT_NEXT;
 17248   009FFE  0E02               	movlw	2
 17249   00A000  0012               	return		;funcret
 17250   00A002                     __end_of_reqevCallback:
 17251                           	callstack 0
 17252                           
 17253 ;; *************** function _numEv *****************
 17254 ;; Defined at:
 17255 ;;		line 1046 in file "../../VLCBlib_PIC/event_teach.c"
 17256 ;; Parameters:    Size  Location     Type
 17257 ;;  tableIndex      1    wreg     unsigned char 
 17258 ;; Auto vars:     Size  Location     Type
 17259 ;;  tableIndex      1   67[BANK0 ] unsigned char 
 17260 ;;  f               1   66[BANK0 ] struct .
 17261 ;;  num             1   65[BANK0 ] unsigned char 
 17262 ;; Return value:  Size  Location     Type
 17263 ;;                  1    wreg      unsigned char 
 17264 ;; Registers used:
 17265 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17266 ;; Tracked objects:
 17267 ;;		On entry : 0/0
 17268 ;;		On exit  : 0/0
 17269 ;;		Unchanged: 0/0
 17270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17272 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17273 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17274 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17275 ;;Total ram usage:        7 bytes
 17276 ;; Hardware stack levels used: 1
 17277 ;; Hardware stack levels required when called: 15
 17278 ;; This function calls:
 17279 ;;		_readNVM
 17280 ;;		_validStart
 17281 ;; This function is called by:
 17282 ;;		_doReval
 17283 ;;		_doReqev
 17284 ;;		_reqevCallback
 17285 ;; This function uses a non-reentrant model
 17286 ;;
 17287                           
 17288                           	psect	text47
 17289   0088E2                     __ptext47:
 17290                           	callstack 0
 17291   0088E2                     _numEv:
 17292                           	callstack 12
 17293                           
 17294                           ;incstack = 0
 17295                           ;numEv@tableIndex stored from wreg
 17296   0088E2  0100               	movlb	0	; () banked
 17297   0088E4  6FA3               	movwf	numEv@tableIndex& (0+255),b
 17298                           
 17299                           ;../../VLCBlib_PIC/event_teach.c: 1047:     EventTableFlags f;;../../VLCBlib_PIC/event_t
      +                          each.c: 1048:     uint8_t num=0;
 17300   0088E6  0E00               	movlw	0
 17301   0088E8  0100               	movlb	0	; () banked
 17302   0088EA  6FA1               	movwf	numEv@num& (0+255),b
 17303                           
 17304                           ; BSR set to: 0
 17305                           ;../../VLCBlib_PIC/event_teach.c: 1049:     if ( ! validStart(tableIndex)) {
 17306   0088EC  51A3               	movf	numEv@tableIndex& (0+255),w,b
 17307   0088EE  EC3F  F05B         	call	_validStart
 17308   0088F2  0900               	iorlw	0
 17309   0088F4  A4D8               	btfss	status,2,c
 17310   0088F6  D002               	goto	l20042
 17311   0088F8                     u20700:
 17312                           
 17313                           ;../../VLCBlib_PIC/event_teach.c: 1051:         return 0;
 17314   0088F8  0E00               	movlw	0
 17315   0088FA  0012               	return	
 17316   0088FC                     l20042:
 17317                           
 17318                           ;../../VLCBlib_PIC/event_teach.c: 1053:     f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*tableIndex+0);
 17319   0088FC  0100               	movlb	0	; () banked
 17320   0088FE  51A3               	movf	numEv@tableIndex& (0+255),w,b
 17321   008900  6F9D               	movwf	??_numEv& (0+255),b
 17322   008902  6B9E               	clrf	(??_numEv+1)& (0+255),b
 17323   008904  3B9D               	swapf	??_numEv& (0+255),f,b
 17324   008906  3B9E               	swapf	(??_numEv+1)& (0+255),f,b
 17325   008908  0EF0               	movlw	240
 17326   00890A  179E               	andwf	(??_numEv+1)& (0+255),f,b
 17327   00890C  519D               	movf	??_numEv& (0+255),w,b
 17328   00890E  0B0F               	andlw	15
 17329   008910  139E               	iorwf	(??_numEv+1)& (0+255),f,b
 17330   008912  0EF0               	movlw	240
 17331   008914  179D               	andwf	??_numEv& (0+255),f,b
 17332   008916  0E80               	movlw	128
 17333   008918  259D               	addwf	??_numEv& (0+255),w,b
 17334   00891A  6F9F               	movwf	(??_numEv+2)& (0+255),b
 17335   00891C  0EEF               	movlw	239
 17336   00891E  219E               	addwfc	(??_numEv+1)& (0+255),w,b
 17337   008920  6FA0               	movwf	(??_numEv+3)& (0+255),b
 17338   008922  C09F  F091         	movff	??_numEv+2,readNVM@index
 17339   008926  C0A0  F092         	movff	??_numEv+3,readNVM@index+1
 17340   00892A  6B93               	clrf	(readNVM@index+2)& (0+255),b
 17341   00892C  0E01               	movlw	1
 17342   00892E  ECDD  F058         	call	_readNVM
 17343   008932  0100               	movlb	0	; () banked
 17344   008934  5191               	movf	?_readNVM& (0+255),w,b
 17345   008936  6FA2               	movwf	numEv@f& (0+255),b
 17346                           
 17347                           ;../../VLCBlib_PIC/event_teach.c: 1054:     while (f.continued) {
 17348   008938  D039               	goto	l20056
 17349   00893A                     l20044:
 17350                           
 17351                           ; BSR set to: 0
 17352                           ;../../VLCBlib_PIC/event_teach.c: 1055:         tableIndex = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, 0xEF80 + 16*tableIndex+1);
 17353   00893A  51A3               	movf	numEv@tableIndex& (0+255),w,b
 17354   00893C  0D10               	mullw	16
 17355   00893E  CFF3 F09D          	movff	prodl,??_numEv
 17356   008942  CFF4 F09E          	movff	prodh,??_numEv+1
 17357   008946  0E81               	movlw	129
 17358   008948  259D               	addwf	??_numEv& (0+255),w,b
 17359   00894A  6F9F               	movwf	(??_numEv+2)& (0+255),b
 17360   00894C  0EEF               	movlw	239
 17361   00894E  219E               	addwfc	(??_numEv+1)& (0+255),w,b
 17362   008950  6FA0               	movwf	(??_numEv+3)& (0+255),b
 17363   008952  C09F  F091         	movff	??_numEv+2,readNVM@index
 17364   008956  C0A0  F092         	movff	??_numEv+3,readNVM@index+1
 17365   00895A  6B93               	clrf	(readNVM@index+2)& (0+255),b
 17366   00895C  0E01               	movlw	1
 17367   00895E  ECDD  F058         	call	_readNVM
 17368   008962  0100               	movlb	0	; () banked
 17369   008964  5191               	movf	?_readNVM& (0+255),w,b
 17370   008966  6FA3               	movwf	numEv@tableIndex& (0+255),b
 17371                           
 17372                           ; BSR set to: 0
 17373                           ;../../VLCBlib_PIC/event_teach.c: 1056:         if (tableIndex == 0xff) {
 17374   008968  29A3               	incf	numEv@tableIndex& (0+255),w,b
 17375   00896A  B4D8               	btfsc	status,2,c
 17376   00896C  D7C5               	goto	u20700
 17377                           
 17378                           ; BSR set to: 0
 17379                           ;../../VLCBlib_PIC/event_teach.c: 1059:         f.asByte = (uint8_t)readNVM(FLASH_NVM_TY
      +                          PE, 0xEF80 + 16*tableIndex+0);
 17380   00896E  51A3               	movf	numEv@tableIndex& (0+255),w,b
 17381   008970  6F9D               	movwf	??_numEv& (0+255),b
 17382   008972  6B9E               	clrf	(??_numEv+1)& (0+255),b
 17383   008974  3B9D               	swapf	??_numEv& (0+255),f,b
 17384   008976  3B9E               	swapf	(??_numEv+1)& (0+255),f,b
 17385   008978  0EF0               	movlw	240
 17386   00897A  179E               	andwf	(??_numEv+1)& (0+255),f,b
 17387   00897C  519D               	movf	??_numEv& (0+255),w,b
 17388   00897E  0B0F               	andlw	15
 17389   008980  139E               	iorwf	(??_numEv+1)& (0+255),f,b
 17390   008982  0EF0               	movlw	240
 17391   008984  179D               	andwf	??_numEv& (0+255),f,b
 17392   008986  0E80               	movlw	128
 17393   008988  259D               	addwf	??_numEv& (0+255),w,b
 17394   00898A  6F9F               	movwf	(??_numEv+2)& (0+255),b
 17395   00898C  0EEF               	movlw	239
 17396   00898E  219E               	addwfc	(??_numEv+1)& (0+255),w,b
 17397   008990  6FA0               	movwf	(??_numEv+3)& (0+255),b
 17398   008992  C09F  F091         	movff	??_numEv+2,readNVM@index
 17399   008996  C0A0  F092         	movff	??_numEv+3,readNVM@index+1
 17400   00899A  6B93               	clrf	(readNVM@index+2)& (0+255),b
 17401   00899C  0E01               	movlw	1
 17402   00899E  ECDD  F058         	call	_readNVM
 17403   0089A2  0100               	movlb	0	; () banked
 17404   0089A4  5191               	movf	?_readNVM& (0+255),w,b
 17405   0089A6  6FA2               	movwf	numEv@f& (0+255),b
 17406                           
 17407                           ; BSR set to: 0
 17408                           ;../../VLCBlib_PIC/event_teach.c: 1060:         num += 10;
 17409   0089A8  0E0A               	movlw	10
 17410   0089AA  27A1               	addwf	numEv@num& (0+255),f,b
 17411   0089AC                     l20056:
 17412                           
 17413                           ; BSR set to: 0
 17414                           ;../../VLCBlib_PIC/event_teach.c: 1054:     while (f.continued) {
 17415   0089AC  B9A2               	btfsc	numEv@f& (0+255),4,b
 17416   0089AE  D7C5               	goto	l20044
 17417                           
 17418                           ; BSR set to: 0
 17419                           ;../../VLCBlib_PIC/event_teach.c: 1062:     num += f.eVsUsed;
 17420   0089B0  51A2               	movf	numEv@f& (0+255),w,b
 17421   0089B2  0B0F               	andlw	15
 17422   0089B4  27A1               	addwf	numEv@num& (0+255),f,b
 17423                           
 17424                           ; BSR set to: 0
 17425                           ;../../VLCBlib_PIC/event_teach.c: 1063:     return num;
 17426   0089B6  51A1               	movf	numEv@num& (0+255),w,b
 17427   0089B8  0012               	return		;funcret
 17428   0089BA                     __end_of_numEv:
 17429                           	callstack 0
 17430                           
 17431 ;; *************** function _tableIndexToEvtIdx *****************
 17432 ;; Defined at:
 17433 ;;		line 1165 in file "../../VLCBlib_PIC/event_teach.c"
 17434 ;; Parameters:    Size  Location     Type
 17435 ;;  tableIndex      1    wreg     unsigned char 
 17436 ;; Auto vars:     Size  Location     Type
 17437 ;;  tableIndex      1   45[BANK0 ] unsigned char 
 17438 ;; Return value:  Size  Location     Type
 17439 ;;                  1    wreg      unsigned char 
 17440 ;; Registers used:
 17441 ;;		wreg, status,2, status,0
 17442 ;; Tracked objects:
 17443 ;;		On entry : 0/0
 17444 ;;		On exit  : 0/0
 17445 ;;		Unchanged: 0/0
 17446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17448 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17450 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17451 ;;Total ram usage:        1 bytes
 17452 ;; Hardware stack levels used: 1
 17453 ;; Hardware stack levels required when called: 12
 17454 ;; This function calls:
 17455 ;;		Nothing
 17456 ;; This function is called by:
 17457 ;;		_nerdCallback
 17458 ;; This function uses a non-reentrant model
 17459 ;;
 17460                           
 17461                           	psect	text48
 17462   00C386                     __ptext48:
 17463                           	callstack 0
 17464   00C386                     _tableIndexToEvtIdx:
 17465                           	callstack 15
 17466                           
 17467                           ;incstack = 0
 17468                           ;tableIndexToEvtIdx@tableIndex stored from wreg
 17469   00C386  0100               	movlb	0	; () banked
 17470   00C388  6F8D               	movwf	tableIndexToEvtIdx@tableIndex& (0+255),b
 17471                           
 17472                           ;../../VLCBlib_PIC/event_teach.c: 1166:     return tableIndex + 1;
 17473   00C38A  0100               	movlb	0	; () banked
 17474   00C38C  298D               	incf	tableIndexToEvtIdx@tableIndex& (0+255),w,b
 17475                           
 17476                           ; BSR set to: 0
 17477   00C38E  0012               	return		;funcret
 17478   00C390                     __end_of_tableIndexToEvtIdx:
 17479                           	callstack 0
 17480                           
 17481 ;; *************** function _setNV *****************
 17482 ;; Defined at:
 17483 ;;		line 207 in file "../../VLCBlib_PIC/nv.c"
 17484 ;; Parameters:    Size  Location     Type
 17485 ;;  index           1    wreg     unsigned char 
 17486 ;;  value           1   58[BANK1 ] unsigned char 
 17487 ;; Auto vars:     Size  Location     Type
 17488 ;;  index           1   62[BANK1 ] unsigned char 
 17489 ;;  oldValue        1   61[BANK1 ] unsigned char 
 17490 ;; Return value:  Size  Location     Type
 17491 ;;                  1    wreg      unsigned char 
 17492 ;; Registers used:
 17493 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17494 ;; Tracked objects:
 17495 ;;		On entry : 0/0
 17496 ;;		On exit  : 0/0
 17497 ;;		Unchanged: 0/0
 17498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17499 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17500 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17501 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17502 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17503 ;;Total ram usage:        5 bytes
 17504 ;; Hardware stack levels used: 1
 17505 ;; Hardware stack levels required when called: 26
 17506 ;; This function calls:
 17507 ;;		_APP_nvValidate
 17508 ;;		_APP_nvValueChanged
 17509 ;;		_writeNVM
 17510 ;; This function is called by:
 17511 ;;		_nvProcessMessage
 17512 ;; This function uses a non-reentrant model
 17513 ;;
 17514                           
 17515                           	psect	text49
 17516   00A938                     __ptext49:
 17517                           	callstack 0
 17518   00A938                     _setNV:
 17519                           	callstack 2
 17520                           
 17521                           ; BSR set to: 0
 17522                           ;incstack = 0
 17523                           ;setNV@index stored from wreg
 17524   00A938  0101               	movlb	1	; () banked
 17525   00A93A  6FF3               	movwf	setNV@index& (0+255),b
 17526                           
 17527                           ;../../VLCBlib_PIC/nv.c: 208:     uint8_t oldValue;;../../VLCBlib_PIC/nv.c: 210:     if 
      +                          (index > 127) return CMDERR_INV_NV_IDX;
 17528   00A93C  0E7F               	movlw	127
 17529   00A93E  0101               	movlb	1	; () banked
 17530   00A940  65F3               	cpfsgt	setNV@index& (0+255),b
 17531   00A942  D002               	goto	l21322
 17532                           
 17533                           ; BSR set to: 1
 17534   00A944  0E0A               	movlw	10
 17535   00A946  0012               	return	
 17536   00A948                     l21322:
 17537                           
 17538                           ; BSR set to: 1
 17539                           ;../../VLCBlib_PIC/nv.c: 211:     if (APP_nvValidate(index, value) == INVALID) return CM
      +                          DERR_INV_NV_VALUE;
 17540   00A948  C1EF  F093         	movff	setNV@value,APP_nvValidate@value
 17541   00A94C  51F3               	movf	setNV@index& (0+255),w,b
 17542   00A94E  EC96  F059         	call	_APP_nvValidate
 17543   00A952  0900               	iorlw	0
 17544   00A954  A4D8               	btfss	status,2,c
 17545   00A956  D002               	goto	l21328
 17546   00A958  0E0C               	movlw	12
 17547   00A95A  0012               	return	
 17548   00A95C                     l21328:
 17549                           
 17550                           ;../../VLCBlib_PIC/nv.c: 213:     oldValue = nvCache[index];
 17551   00A95C  0E00               	movlw	low _nvCache
 17552   00A95E  0101               	movlb	1	; () banked
 17553   00A960  25F3               	addwf	setNV@index& (0+255),w,b
 17554   00A962  6ED9               	movwf	fsr2l,c
 17555   00A964  6ADA               	clrf	fsr2h,c
 17556   00A966  0E04               	movlw	high _nvCache
 17557   00A968  22DA               	addwfc	fsr2h,f,c
 17558   00A96A  50DF               	movf	indf2,w,c
 17559   00A96C  6FF2               	movwf	setNV@oldValue& (0+255),b
 17560                           
 17561                           ;../../VLCBlib_PIC/nv.c: 214:     nvCache[index] = value;
 17562   00A96E  0E00               	movlw	low _nvCache
 17563   00A970  25F3               	addwf	setNV@index& (0+255),w,b
 17564   00A972  6ED9               	movwf	fsr2l,c
 17565   00A974  6ADA               	clrf	fsr2h,c
 17566   00A976  0E04               	movlw	high _nvCache
 17567   00A978  22DA               	addwfc	fsr2h,f,c
 17568   00A97A  C1EF  FFDF         	movff	setNV@value,indf2
 17569                           
 17570                           ; BSR set to: 1
 17571                           ;../../VLCBlib_PIC/nv.c: 215:     writeNVM(FLASH_NVM_TYPE, 0xFF80 +index, value);
 17572   00A97E  0E80               	movlw	128
 17573   00A980  25F3               	addwf	setNV@index& (0+255),w,b
 17574   00A982  6FF0               	movwf	??_setNV& (0+255),b
 17575   00A984  6BF1               	clrf	(??_setNV+1)& (0+255),b
 17576   00A986  0EFF               	movlw	255
 17577   00A988  23F1               	addwfc	(??_setNV+1)& (0+255),f,b
 17578   00A98A  C1F0  F0A4         	movff	??_setNV,writeNVM@index
 17579   00A98E  C1F1  F0A5         	movff	??_setNV+1,writeNVM@index+1
 17580   00A992  0100               	movlb	0	; () banked
 17581   00A994  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 17582   00A996  C1EF  F0A7         	movff	setNV@value,writeNVM@value
 17583   00A99A  0E01               	movlw	1
 17584   00A99C  EC66  F05B         	call	_writeNVM
 17585                           
 17586                           ;../../VLCBlib_PIC/nv.c: 220:     APP_nvValueChanged(index, value, oldValue);
 17587   00A9A0  C1EF  F1E8         	movff	setNV@value,APP_nvValueChanged@value
 17588   00A9A4  C1F2  F1E9         	movff	setNV@oldValue,APP_nvValueChanged@oldValue
 17589   00A9A8  0101               	movlb	1	; () banked
 17590   00A9AA  51F3               	movf	setNV@index& (0+255),w,b
 17591   00A9AC  ECD4  F016         	call	_APP_nvValueChanged
 17592                           
 17593                           ;../../VLCBlib_PIC/nv.c: 221:     return 0;
 17594   00A9B0  0E00               	movlw	0
 17595   00A9B2  0012               	return		;funcret
 17596   00A9B4                     __end_of_setNV:
 17597                           	callstack 0
 17598                           
 17599 ;; *************** function _APP_nvValueChanged *****************
 17600 ;; Defined at:
 17601 ;;		line 104 in file "../universalNv.c"
 17602 ;; Parameters:    Size  Location     Type
 17603 ;;  index           1    wreg     unsigned char 
 17604 ;;  value           1   51[BANK1 ] unsigned char 
 17605 ;;  oldValue        1   52[BANK1 ] unsigned char 
 17606 ;; Auto vars:     Size  Location     Type
 17607 ;;  index           1   56[BANK1 ] unsigned char 
 17608 ;;  io              1   57[BANK1 ] unsigned char 
 17609 ;;  nv              1    0        unsigned char 
 17610 ;; Return value:  Size  Location     Type
 17611 ;;                  1    wreg      void 
 17612 ;; Registers used:
 17613 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17614 ;; Tracked objects:
 17615 ;;		On entry : 0/0
 17616 ;;		On exit  : 0/0
 17617 ;;		Unchanged: 0/0
 17618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17619 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17620 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17621 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17622 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17623 ;;Total ram usage:        7 bytes
 17624 ;; Hardware stack levels used: 1
 17625 ;; Hardware stack levels required when called: 25
 17626 ;; This function calls:
 17627 ;;		___awdiv
 17628 ;;		___awmod
 17629 ;;		_getNV
 17630 ;;		_setBounceState
 17631 ;;		_setMultiState
 17632 ;;		_setServoPosition
 17633 ;;		_setServoState
 17634 ;;		_setTimedResponseDelay
 17635 ;;		_setType
 17636 ;;		_startBounceOutput
 17637 ;;		_startMultiOutput
 17638 ;;		_startServoOutput
 17639 ;; This function is called by:
 17640 ;;		_setNV
 17641 ;; This function uses a non-reentrant model
 17642 ;;
 17643                           
 17644                           	psect	text50
 17645   002DA8                     __ptext50:
 17646                           	callstack 0
 17647   002DA8                     _APP_nvValueChanged:
 17648                           	callstack 2
 17649                           
 17650                           ;incstack = 0
 17651                           ;APP_nvValueChanged@index stored from wreg
 17652   002DA8  0101               	movlb	1	; () banked
 17653   002DAA  6FED               	movwf	APP_nvValueChanged@index& (0+255),b
 17654                           
 17655                           ;../universalNv.c: 105:     uint8_t nv;;../universalNv.c: 106:     uint8_t io;;../univer
      +                          salNv.c: 108:     if ((((index-16) % 7) == 0)) {
 17656   002DAC  0EF0               	movlw	240
 17657   002DAE  0101               	movlb	1	; () banked
 17658   002DB0  25ED               	addwf	APP_nvValueChanged@index& (0+255),w,b
 17659   002DB2  0100               	movlb	0	; () banked
 17660   002DB4  6F8D               	movwf	___awmod@dividend& (0+255),b
 17661   002DB6  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 17662   002DB8  0EFF               	movlw	255
 17663   002DBA  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 17664   002DBC  0E00               	movlw	0
 17665   002DBE  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 17666   002DC0  0E07               	movlw	7
 17667   002DC2  6F8F               	movwf	___awmod@divisor& (0+255),b
 17668   002DC4  EC74  F056         	call	___awmod	;wreg free
 17669   002DC8  0100               	movlb	0	; () banked
 17670   002DCA  518D               	movf	?___awmod& (0+255),w,b
 17671   002DCC  118E               	iorwf	(?___awmod+1)& (0+255),w,b
 17672   002DCE  A4D8               	btfss	status,2,c
 17673   002DD0  D01B               	goto	l19712
 17674                           
 17675                           ; BSR set to: 0
 17676                           ;../universalNv.c: 110:         io = index-16;
 17677   002DD2  0101               	movlb	1	; () banked
 17678   002DD4  51ED               	movf	APP_nvValueChanged@index& (0+255),w,b
 17679   002DD6  0FF0               	addlw	240
 17680   002DD8  6FEE               	movwf	APP_nvValueChanged@io& (0+255),b
 17681                           
 17682                           ; BSR set to: 1
 17683                           ;../universalNv.c: 111:         io /= 7;
 17684   002DDA  C1EE  F097         	movff	APP_nvValueChanged@io,___awdiv@dividend
 17685   002DDE  0100               	movlb	0	; () banked
 17686   002DE0  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 17687   002DE2  0E00               	movlw	0
 17688   002DE4  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 17689   002DE6  0E07               	movlw	7
 17690   002DE8  6F99               	movwf	___awdiv@divisor& (0+255),b
 17691   002DEA  ECD7  F052         	call	___awdiv	;wreg free
 17692   002DEE  0100               	movlb	0	; () banked
 17693   002DF0  5197               	movf	?___awdiv& (0+255),w,b
 17694   002DF2  0101               	movlb	1	; () banked
 17695   002DF4  6FEE               	movwf	APP_nvValueChanged@io& (0+255),b
 17696                           
 17697                           ; BSR set to: 1
 17698                           ;../universalNv.c: 112:         if (oldValue != value) {
 17699   002DF6  51E8               	movf	APP_nvValueChanged@value& (0+255),w,b
 17700   002DF8  19E9               	xorwf	APP_nvValueChanged@oldValue& (0+255),w,b
 17701   002DFA  B4D8               	btfsc	status,2,c
 17702   002DFC  D005               	goto	l19712
 17703                           
 17704                           ; BSR set to: 1
 17705                           ;../universalNv.c: 113:             setType(io, value);
 17706   002DFE  C1E8  F1E5         	movff	APP_nvValueChanged@value,setType@type
 17707   002E02  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 17708   002E04  EC19  F058         	call	_setType
 17709   002E08                     l19712:
 17710                           
 17711                           ;../universalNv.c: 116:     if (index == 5) {
 17712   002E08  0E05               	movlw	5
 17713   002E0A  0101               	movlb	1	; () banked
 17714   002E0C  19ED               	xorwf	APP_nvValueChanged@index& (0+255),w,b
 17715   002E0E  A4D8               	btfss	status,2,c
 17716   002E10  D003               	goto	l19716
 17717                           
 17718                           ; BSR set to: 1
 17719                           ;../universalNv.c: 117:         setTimedResponseDelay(value);
 17720   002E12  51E8               	movf	APP_nvValueChanged@value& (0+255),w,b
 17721   002E14  ECC8  F061         	call	_setTimedResponseDelay
 17722   002E18                     l19716:
 17723                           
 17724                           ;../universalNv.c: 121:     if (index == 4) {
 17725   002E18  0E04               	movlw	4
 17726   002E1A  0101               	movlb	1	; () banked
 17727   002E1C  19ED               	xorwf	APP_nvValueChanged@index& (0+255),w,b
 17728   002E1E  B4D8               	btfsc	status,2,c
 17729                           
 17730                           ; BSR set to: 1
 17731                           ;../universalNv.c: 122:         WPUB = value;
 17732   002E20  C1E8  FF5B         	movff	APP_nvValueChanged@value,3931	;volatile
 17733                           
 17734                           ; BSR set to: 1
 17735                           ;../universalNv.c: 215:     if (index >= 16) {
 17736   002E24  0E0F               	movlw	15
 17737   002E26  65ED               	cpfsgt	APP_nvValueChanged@index& (0+255),b
 17738   002E28  0012               	return	
 17739                           
 17740                           ; BSR set to: 1
 17741                           ;../universalNv.c: 216:         io = ((uint8_t)((index-16)/7));
 17742   002E2A  0EF0               	movlw	240
 17743   002E2C  25ED               	addwf	APP_nvValueChanged@index& (0+255),w,b
 17744   002E2E  0100               	movlb	0	; () banked
 17745   002E30  6F97               	movwf	___awdiv@dividend& (0+255),b
 17746   002E32  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 17747   002E34  0EFF               	movlw	255
 17748   002E36  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 17749   002E38  0E00               	movlw	0
 17750   002E3A  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 17751   002E3C  0E07               	movlw	7
 17752   002E3E  6F99               	movwf	___awdiv@divisor& (0+255),b
 17753   002E40  ECD7  F052         	call	___awdiv	;wreg free
 17754   002E44  0100               	movlb	0	; () banked
 17755   002E46  5197               	movf	?___awdiv& (0+255),w,b
 17756   002E48  0101               	movlb	1	; () banked
 17757   002E4A  6FEE               	movwf	APP_nvValueChanged@io& (0+255),b
 17758   002E4C  0EF0               	movlw	240
 17759   002E4E  25ED               	addwf	APP_nvValueChanged@index& (0+255),w,b
 17760   002E50  0100               	movlb	0	; () banked
 17761   002E52  6F8D               	movwf	___awmod@dividend& (0+255),b
 17762   002E54  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 17763   002E56  0EFF               	movlw	255
 17764   002E58  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 17765   002E5A  0E00               	movlw	0
 17766   002E5C  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 17767   002E5E  0E07               	movlw	7
 17768   002E60  6F8F               	movwf	___awmod@divisor& (0+255),b
 17769   002E62  EC74  F056         	call	___awmod	;wreg free
 17770                           
 17771                           ;../universalNv.c: 218:         switch(getNV((16 + 7*(io) + 0))) {
 17772   002E66  D1D3               	goto	l19794
 17773   002E68                     l19724:
 17774                           
 17775                           ; BSR set to: 0
 17776                           ;../universalNv.c: 232:                 if (index == (16 + 7*(io) + 2)) {
 17777   002E68  0101               	movlb	1	; () banked
 17778   002E6A  51ED               	movf	APP_nvValueChanged@index& (0+255),w,b
 17779   002E6C  6FEA               	movwf	??_APP_nvValueChanged& (0+255),b
 17780   002E6E  6BEB               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 17781   002E70  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 17782   002E72  0D07               	mullw	7
 17783   002E74  0E12               	movlw	18
 17784   002E76  26F3               	addwf	243,f,c
 17785   002E78  0E00               	movlw	0
 17786   002E7A  22F4               	addwfc	244,f,c
 17787   002E7C  51EA               	movf	??_APP_nvValueChanged& (0+255),w,b
 17788   002E7E  18F3               	xorwf	243,w,c
 17789   002E80  E113               	bnz	l19730
 17790   002E82  51EB               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 17791   002E84  18F4               	xorwf	244,w,c
 17792   002E86  A4D8               	btfss	status,2,c
 17793   002E88  D00F               	goto	l19730
 17794                           
 17795                           ; BSR set to: 1
 17796                           ;../universalNv.c: 233:                     setServoState(io, 2);
 17797   002E8A  0E02               	movlw	2
 17798   002E8C  0100               	movlb	0	; () banked
 17799   002E8E  6F91               	movwf	setServoState@action& (0+255),b
 17800   002E90  0101               	movlb	1	; () banked
 17801   002E92  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 17802   002E94  EC06  F04B         	call	_setServoState
 17803                           
 17804                           ;../universalNv.c: 234:                     startServoOutput(io, 2);
 17805   002E98  0E02               	movlw	2
 17806   002E9A  0100               	movlb	0	; () banked
 17807   002E9C  6F91               	movwf	startServoOutput@action& (0+255),b
 17808   002E9E  0101               	movlb	1	; () banked
 17809   002EA0  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 17810   002EA2  ECDD  F048         	call	_startServoOutput
 17811                           
 17812                           ;../universalNv.c: 235:                 } else if (index == (16 + 7*(io) + 3)) {
 17813   002EA6  0012               	return	
 17814   002EA8                     l19730:
 17815                           
 17816                           ; BSR set to: 1
 17817   002EA8  51ED               	movf	APP_nvValueChanged@index& (0+255),w,b
 17818   002EAA  6FEA               	movwf	??_APP_nvValueChanged& (0+255),b
 17819   002EAC  6BEB               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 17820   002EAE  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 17821   002EB0  0D07               	mullw	7
 17822   002EB2  0E13               	movlw	19
 17823   002EB4  26F3               	addwf	243,f,c
 17824   002EB6  0E00               	movlw	0
 17825   002EB8  22F4               	addwfc	244,f,c
 17826   002EBA  51EA               	movf	??_APP_nvValueChanged& (0+255),w,b
 17827   002EBC  18F3               	xorwf	243,w,c
 17828   002EBE  E113               	bnz	l19736
 17829   002EC0  51EB               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 17830   002EC2  18F4               	xorwf	244,w,c
 17831   002EC4  A4D8               	btfss	status,2,c
 17832   002EC6  D00F               	goto	l19736
 17833                           
 17834                           ; BSR set to: 1
 17835                           ;../universalNv.c: 236:                     setServoState(io, 1);
 17836   002EC8  0E01               	movlw	1
 17837   002ECA  0100               	movlb	0	; () banked
 17838   002ECC  6F91               	movwf	setServoState@action& (0+255),b
 17839   002ECE  0101               	movlb	1	; () banked
 17840   002ED0  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 17841   002ED2  EC06  F04B         	call	_setServoState
 17842                           
 17843                           ;../universalNv.c: 237:                     startServoOutput(io, 1);
 17844   002ED6  0E01               	movlw	1
 17845   002ED8  0100               	movlb	0	; () banked
 17846   002EDA  6F91               	movwf	startServoOutput@action& (0+255),b
 17847   002EDC  0101               	movlb	1	; () banked
 17848   002EDE  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 17849   002EE0  ECDD  F048         	call	_startServoOutput
 17850                           
 17851                           ;../universalNv.c: 238:                 } else if (index == (16 + 7*(io) + 1)) {
 17852   002EE4  0012               	return	
 17853   002EE6                     l19736:
 17854                           
 17855                           ; BSR set to: 1
 17856   002EE6  51ED               	movf	APP_nvValueChanged@index& (0+255),w,b
 17857   002EE8  6FEA               	movwf	??_APP_nvValueChanged& (0+255),b
 17858   002EEA  6BEB               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 17859   002EEC  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 17860   002EEE  0D07               	mullw	7
 17861   002EF0  0E11               	movlw	17
 17862   002EF2  26F3               	addwf	243,f,c
 17863   002EF4  0E00               	movlw	0
 17864   002EF6  22F4               	addwfc	244,f,c
 17865   002EF8  51EA               	movf	??_APP_nvValueChanged& (0+255),w,b
 17866   002EFA  18F3               	xorwf	243,w,c
 17867   002EFC  E103               	bnz	u20191
 17868   002EFE  51EB               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 17869   002F00  18F4               	xorwf	244,w,c
 17870   002F02  A4D8               	btfss	status,2,c
 17871   002F04                     u20191:
 17872   002F04  0012               	return	
 17873                           
 17874                           ; BSR set to: 1
 17875                           ;../universalNv.c: 239:                     if (((value & 0x80) == 0x80) &&
 17876   002F06  AFE8               	btfss	APP_nvValueChanged@value& (0+255),7,b
 17877   002F08  0012               	return	
 17878                           
 17879                           ; BSR set to: 1
 17880   002F0A  BFE9               	btfsc	APP_nvValueChanged@oldValue& (0+255),7,b
 17881   002F0C  0012               	return	
 17882                           
 17883                           ; BSR set to: 1
 17884                           ;../universalNv.c: 240:                             (oldValue & 0x80) == 0) {;../univers
      +                          alNv.c: 243:                         setServoPosition(io, (uint8_t)(getNV((16 + 7*(io) +
      +                           3))/2 + getNV((16 + 7*(io) + 2))/2));
 17885   002F0E  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 17886   002F10  0D07               	mullw	7
 17887   002F12  50F3               	movf	243,w,c
 17888   002F14  0F12               	addlw	18
 17889   002F16  EC35  F05D         	call	_getNV
 17890   002F1A  C08D  F097         	movff	?_getNV,___awdiv@dividend
 17891   002F1E  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 17892   002F22  0E00               	movlw	0
 17893   002F24  0100               	movlb	0	; () banked
 17894   002F26  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 17895   002F28  0E02               	movlw	2
 17896   002F2A  6F99               	movwf	___awdiv@divisor& (0+255),b
 17897   002F2C  ECD7  F052         	call	___awdiv	;wreg free
 17898   002F30  C097  F1EA         	movff	?___awdiv,??_APP_nvValueChanged
 17899   002F34  C098  F1EB         	movff	?___awdiv+1,??_APP_nvValueChanged+1
 17900   002F38  0101               	movlb	1	; () banked
 17901   002F3A  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 17902   002F3C  0D07               	mullw	7
 17903   002F3E  50F3               	movf	243,w,c
 17904   002F40  0F13               	addlw	19
 17905   002F42  EC35  F05D         	call	_getNV
 17906   002F46  C08D  F097         	movff	?_getNV,___awdiv@dividend
 17907   002F4A  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 17908   002F4E  0E00               	movlw	0
 17909   002F50  0100               	movlb	0	; () banked
 17910   002F52  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 17911   002F54  0E02               	movlw	2
 17912   002F56  6F99               	movwf	___awdiv@divisor& (0+255),b
 17913   002F58  ECD7  F052         	call	___awdiv	;wreg free
 17914   002F5C  0100               	movlb	0	; () banked
 17915   002F5E  5197               	movf	?___awdiv& (0+255),w,b
 17916   002F60  0101               	movlb	1	; () banked
 17917   002F62  25EA               	addwf	??_APP_nvValueChanged& (0+255),w,b
 17918   002F64  0100               	movlb	0	; () banked
 17919   002F66  6F9F               	movwf	setServoPosition@pos& (0+255),b
 17920   002F68  0101               	movlb	1	; () banked
 17921   002F6A  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 17922   002F6C  EC57  F060         	call	_setServoPosition
 17923                           
 17924                           ; BSR set to: 1
 17925                           
 17926                           ;../universalNv.c: 245:                 }
 17927   002F70  0012               	return	
 17928   002F72                     l19744:
 17929                           
 17930                           ; BSR set to: 0
 17931                           ;../universalNv.c: 250:                 if (index == (16 + 7*(io) + 3)) {
 17932   002F72  0101               	movlb	1	; () banked
 17933   002F74  51ED               	movf	APP_nvValueChanged@index& (0+255),w,b
 17934   002F76  6FEA               	movwf	??_APP_nvValueChanged& (0+255),b
 17935   002F78  6BEB               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 17936   002F7A  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 17937   002F7C  0D07               	mullw	7
 17938   002F7E  0E13               	movlw	19
 17939   002F80  26F3               	addwf	243,f,c
 17940   002F82  0E00               	movlw	0
 17941   002F84  22F4               	addwfc	244,f,c
 17942   002F86  51EA               	movf	??_APP_nvValueChanged& (0+255),w,b
 17943   002F88  18F3               	xorwf	243,w,c
 17944   002F8A  E113               	bnz	l19748
 17945   002F8C  51EB               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 17946   002F8E  18F4               	xorwf	244,w,c
 17947   002F90  A4D8               	btfss	status,2,c
 17948   002F92  D00F               	goto	l19748
 17949                           
 17950                           ; BSR set to: 1
 17951                           ;../universalNv.c: 251:                     setBounceState(io, 2);
 17952   002F94  0E02               	movlw	2
 17953   002F96  0100               	movlb	0	; () banked
 17954   002F98  6F91               	movwf	setBounceState@action& (0+255),b
 17955   002F9A  0101               	movlb	1	; () banked
 17956   002F9C  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 17957   002F9E  EC5C  F04B         	call	_setBounceState
 17958                           
 17959                           ;../universalNv.c: 252:                     startBounceOutput(io, 2);
 17960   002FA2  0E02               	movlw	2
 17961   002FA4  0100               	movlb	0	; () banked
 17962   002FA6  6F8D               	movwf	startBounceOutput@action& (0+255),b
 17963   002FA8  0101               	movlb	1	; () banked
 17964   002FAA  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 17965   002FAC  ECB4  F057         	call	_startBounceOutput
 17966                           
 17967                           ;../universalNv.c: 253:                 } else if (index == (16 + 7*(io) + 2)) {
 17968   002FB0  0012               	return	
 17969   002FB2                     l19748:
 17970                           
 17971                           ; BSR set to: 1
 17972   002FB2  51ED               	movf	APP_nvValueChanged@index& (0+255),w,b
 17973   002FB4  6FEA               	movwf	??_APP_nvValueChanged& (0+255),b
 17974   002FB6  6BEB               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 17975   002FB8  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 17976   002FBA  0D07               	mullw	7
 17977   002FBC  0E12               	movlw	18
 17978   002FBE  26F3               	addwf	243,f,c
 17979   002FC0  0E00               	movlw	0
 17980   002FC2  22F4               	addwfc	244,f,c
 17981   002FC4  51EA               	movf	??_APP_nvValueChanged& (0+255),w,b
 17982   002FC6  18F3               	xorwf	243,w,c
 17983   002FC8  E113               	bnz	l19752
 17984   002FCA  51EB               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 17985   002FCC  18F4               	xorwf	244,w,c
 17986   002FCE  A4D8               	btfss	status,2,c
 17987   002FD0  D00F               	goto	l19752
 17988                           
 17989                           ; BSR set to: 1
 17990                           ;../universalNv.c: 254:                     setBounceState(io, 1);
 17991   002FD2  0E01               	movlw	1
 17992   002FD4  0100               	movlb	0	; () banked
 17993   002FD6  6F91               	movwf	setBounceState@action& (0+255),b
 17994   002FD8  0101               	movlb	1	; () banked
 17995   002FDA  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 17996   002FDC  EC5C  F04B         	call	_setBounceState
 17997                           
 17998                           ;../universalNv.c: 255:                     startBounceOutput(io, 1);
 17999   002FE0  0E01               	movlw	1
 18000   002FE2  0100               	movlb	0	; () banked
 18001   002FE4  6F8D               	movwf	startBounceOutput@action& (0+255),b
 18002   002FE6  0101               	movlb	1	; () banked
 18003   002FE8  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 18004   002FEA  ECB4  F057         	call	_startBounceOutput
 18005                           
 18006                           ;../universalNv.c: 256:                 } else if (index == (16 + 7*(io) + 1)) {
 18007   002FEE  0012               	return	
 18008   002FF0                     l19752:
 18009                           
 18010                           ; BSR set to: 1
 18011   002FF0  51ED               	movf	APP_nvValueChanged@index& (0+255),w,b
 18012   002FF2  6FEA               	movwf	??_APP_nvValueChanged& (0+255),b
 18013   002FF4  6BEB               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18014   002FF6  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 18015   002FF8  0D07               	mullw	7
 18016   002FFA  0E11               	movlw	17
 18017   002FFC  26F3               	addwf	243,f,c
 18018   002FFE  0E00               	movlw	0
 18019   003000  22F4               	addwfc	244,f,c
 18020   003002  51EA               	movf	??_APP_nvValueChanged& (0+255),w,b
 18021   003004  18F3               	xorwf	243,w,c
 18022   003006  E103               	bnz	u20241
 18023   003008  51EB               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18024   00300A  18F4               	xorwf	244,w,c
 18025   00300C  A4D8               	btfss	status,2,c
 18026   00300E                     u20241:
 18027   00300E  0012               	return	
 18028                           
 18029                           ; BSR set to: 1
 18030                           ;../universalNv.c: 257:                     if (((value & 0x80) == 0x80) &&
 18031   003010  AFE8               	btfss	APP_nvValueChanged@value& (0+255),7,b
 18032   003012  0012               	return	
 18033                           
 18034                           ; BSR set to: 1
 18035   003014  BFE9               	btfsc	APP_nvValueChanged@oldValue& (0+255),7,b
 18036   003016  0012               	return	
 18037                           
 18038                           ; BSR set to: 1
 18039                           ;../universalNv.c: 258:                             (oldValue & 0x80) == 0) {;../univers
      +                          alNv.c: 261:                         currentPos[io] = (uint8_t)(getNV((16 + 7*(io) + 3))
      +                          /2 + getNV((16 + 7*(io) + 2))/2);
 18040   003018  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 18041   00301A  0D07               	mullw	7
 18042   00301C  50F3               	movf	243,w,c
 18043   00301E  0F12               	addlw	18
 18044   003020  EC35  F05D         	call	_getNV
 18045   003024  C08D  F097         	movff	?_getNV,___awdiv@dividend
 18046   003028  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 18047   00302C  0E00               	movlw	0
 18048   00302E  0100               	movlb	0	; () banked
 18049   003030  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18050   003032  0E02               	movlw	2
 18051   003034  6F99               	movwf	___awdiv@divisor& (0+255),b
 18052   003036  ECD7  F052         	call	___awdiv	;wreg free
 18053   00303A  C097  F1EA         	movff	?___awdiv,??_APP_nvValueChanged
 18054   00303E  C098  F1EB         	movff	?___awdiv+1,??_APP_nvValueChanged+1
 18055   003042  0101               	movlb	1	; () banked
 18056   003044  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 18057   003046  0D07               	mullw	7
 18058   003048  50F3               	movf	243,w,c
 18059   00304A  0F13               	addlw	19
 18060   00304C  EC35  F05D         	call	_getNV
 18061   003050  C08D  F097         	movff	?_getNV,___awdiv@dividend
 18062   003054  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 18063   003058  0E00               	movlw	0
 18064   00305A  0100               	movlb	0	; () banked
 18065   00305C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18066   00305E  0E02               	movlw	2
 18067   003060  6F99               	movwf	___awdiv@divisor& (0+255),b
 18068   003062  ECD7  F052         	call	___awdiv	;wreg free
 18069   003066  0100               	movlb	0	; () banked
 18070   003068  5197               	movf	?___awdiv& (0+255),w,b
 18071   00306A  0101               	movlb	1	; () banked
 18072   00306C  25EA               	addwf	??_APP_nvValueChanged& (0+255),w,b
 18073   00306E  6FEC               	movwf	(??_APP_nvValueChanged+2)& (0+255),b
 18074   003070  0E40               	movlw	low _currentPos
 18075   003072  25EE               	addwf	APP_nvValueChanged@io& (0+255),w,b
 18076   003074  6ED9               	movwf	fsr2l,c
 18077   003076  6ADA               	clrf	fsr2h,c
 18078   003078  0E01               	movlw	high _currentPos
 18079   00307A  22DA               	addwfc	fsr2h,f,c
 18080   00307C  C1EC  FFDF         	movff	??_APP_nvValueChanged+2,indf2
 18081   003080  0012               	return	
 18082   003082                     l19760:
 18083                           
 18084                           ; BSR set to: 0
 18085                           ;../universalNv.c: 268:                 if (index == (16 + 7*(io) + 3)) {
 18086   003082  0101               	movlb	1	; () banked
 18087   003084  51ED               	movf	APP_nvValueChanged@index& (0+255),w,b
 18088   003086  6FEA               	movwf	??_APP_nvValueChanged& (0+255),b
 18089   003088  6BEB               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18090   00308A  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 18091   00308C  0D07               	mullw	7
 18092   00308E  0E13               	movlw	19
 18093   003090  26F3               	addwf	243,f,c
 18094   003092  0E00               	movlw	0
 18095   003094  22F4               	addwfc	244,f,c
 18096   003096  51EA               	movf	??_APP_nvValueChanged& (0+255),w,b
 18097   003098  18F3               	xorwf	243,w,c
 18098   00309A  E113               	bnz	l19766
 18099   00309C  51EB               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18100   00309E  18F4               	xorwf	244,w,c
 18101   0030A0  A4D8               	btfss	status,2,c
 18102   0030A2  D00F               	goto	l19766
 18103                           
 18104                           ; BSR set to: 1
 18105                           ;../universalNv.c: 269:                     setMultiState(io, 0);
 18106   0030A4  0E00               	movlw	0
 18107   0030A6  0100               	movlb	0	; () banked
 18108   0030A8  6F91               	movwf	setMultiState@action& (0+255),b
 18109   0030AA  0101               	movlb	1	; () banked
 18110   0030AC  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 18111   0030AE  ECAF  F045         	call	_setMultiState
 18112                           
 18113                           ;../universalNv.c: 270:                     startMultiOutput(io, 0);
 18114   0030B2  0E00               	movlw	0
 18115   0030B4  0100               	movlb	0	; () banked
 18116   0030B6  6F91               	movwf	startMultiOutput@action& (0+255),b
 18117   0030B8  0101               	movlb	1	; () banked
 18118   0030BA  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 18119   0030BC  EC9C  F04D         	call	_startMultiOutput
 18120                           
 18121                           ;../universalNv.c: 271:                 } else if (index == (16 + 7*(io) + 4)) {
 18122   0030C0  0012               	return	
 18123   0030C2                     l19766:
 18124                           
 18125                           ; BSR set to: 1
 18126   0030C2  51ED               	movf	APP_nvValueChanged@index& (0+255),w,b
 18127   0030C4  6FEA               	movwf	??_APP_nvValueChanged& (0+255),b
 18128   0030C6  6BEB               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18129   0030C8  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 18130   0030CA  0D07               	mullw	7
 18131   0030CC  0E14               	movlw	20
 18132   0030CE  26F3               	addwf	243,f,c
 18133   0030D0  0E00               	movlw	0
 18134   0030D2  22F4               	addwfc	244,f,c
 18135   0030D4  51EA               	movf	??_APP_nvValueChanged& (0+255),w,b
 18136   0030D6  18F3               	xorwf	243,w,c
 18137   0030D8  E113               	bnz	l19772
 18138   0030DA  51EB               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18139   0030DC  18F4               	xorwf	244,w,c
 18140   0030DE  A4D8               	btfss	status,2,c
 18141   0030E0  D00F               	goto	l19772
 18142                           
 18143                           ; BSR set to: 1
 18144                           ;../universalNv.c: 272:                     setMultiState(io, 1);
 18145   0030E2  0E01               	movlw	1
 18146   0030E4  0100               	movlb	0	; () banked
 18147   0030E6  6F91               	movwf	setMultiState@action& (0+255),b
 18148   0030E8  0101               	movlb	1	; () banked
 18149   0030EA  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 18150   0030EC  ECAF  F045         	call	_setMultiState
 18151                           
 18152                           ;../universalNv.c: 273:                     startMultiOutput(io, 1);
 18153   0030F0  0E01               	movlw	1
 18154   0030F2  0100               	movlb	0	; () banked
 18155   0030F4  6F91               	movwf	startMultiOutput@action& (0+255),b
 18156   0030F6  0101               	movlb	1	; () banked
 18157   0030F8  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 18158   0030FA  EC9C  F04D         	call	_startMultiOutput
 18159                           
 18160                           ;../universalNv.c: 274:                 } else if (index == (16 + 7*(io) + 5)) {
 18161   0030FE  0012               	return	
 18162   003100                     l19772:
 18163                           
 18164                           ; BSR set to: 1
 18165   003100  51ED               	movf	APP_nvValueChanged@index& (0+255),w,b
 18166   003102  6FEA               	movwf	??_APP_nvValueChanged& (0+255),b
 18167   003104  6BEB               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18168   003106  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 18169   003108  0D07               	mullw	7
 18170   00310A  0E15               	movlw	21
 18171   00310C  26F3               	addwf	243,f,c
 18172   00310E  0E00               	movlw	0
 18173   003110  22F4               	addwfc	244,f,c
 18174   003112  51EA               	movf	??_APP_nvValueChanged& (0+255),w,b
 18175   003114  18F3               	xorwf	243,w,c
 18176   003116  E113               	bnz	l19778
 18177   003118  51EB               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18178   00311A  18F4               	xorwf	244,w,c
 18179   00311C  A4D8               	btfss	status,2,c
 18180   00311E  D00F               	goto	l19778
 18181                           
 18182                           ; BSR set to: 1
 18183                           ;../universalNv.c: 275:                     setMultiState(io, 2);
 18184   003120  0E02               	movlw	2
 18185   003122  0100               	movlb	0	; () banked
 18186   003124  6F91               	movwf	setMultiState@action& (0+255),b
 18187   003126  0101               	movlb	1	; () banked
 18188   003128  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 18189   00312A  ECAF  F045         	call	_setMultiState
 18190                           
 18191                           ;../universalNv.c: 276:                     startMultiOutput(io, 2);
 18192   00312E  0E02               	movlw	2
 18193   003130  0100               	movlb	0	; () banked
 18194   003132  6F91               	movwf	startMultiOutput@action& (0+255),b
 18195   003134  0101               	movlb	1	; () banked
 18196   003136  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 18197   003138  EC9C  F04D         	call	_startMultiOutput
 18198                           
 18199                           ;../universalNv.c: 277:                 } else if (index == (16 + 7*(io) + 6)) {
 18200   00313C  0012               	return	
 18201   00313E                     l19778:
 18202                           
 18203                           ; BSR set to: 1
 18204   00313E  51ED               	movf	APP_nvValueChanged@index& (0+255),w,b
 18205   003140  6FEA               	movwf	??_APP_nvValueChanged& (0+255),b
 18206   003142  6BEB               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18207   003144  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 18208   003146  0D07               	mullw	7
 18209   003148  0E16               	movlw	22
 18210   00314A  26F3               	addwf	243,f,c
 18211   00314C  0E00               	movlw	0
 18212   00314E  22F4               	addwfc	244,f,c
 18213   003150  51EA               	movf	??_APP_nvValueChanged& (0+255),w,b
 18214   003152  18F3               	xorwf	243,w,c
 18215   003154  E113               	bnz	l19784
 18216   003156  51EB               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18217   003158  18F4               	xorwf	244,w,c
 18218   00315A  A4D8               	btfss	status,2,c
 18219   00315C  D00F               	goto	l19784
 18220                           
 18221                           ; BSR set to: 1
 18222                           ;../universalNv.c: 278:                     setMultiState(io, 3);
 18223   00315E  0E03               	movlw	3
 18224   003160  0100               	movlb	0	; () banked
 18225   003162  6F91               	movwf	setMultiState@action& (0+255),b
 18226   003164  0101               	movlb	1	; () banked
 18227   003166  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 18228   003168  ECAF  F045         	call	_setMultiState
 18229                           
 18230                           ;../universalNv.c: 279:                     startMultiOutput(io, 3);
 18231   00316C  0E03               	movlw	3
 18232   00316E  0100               	movlb	0	; () banked
 18233   003170  6F91               	movwf	startMultiOutput@action& (0+255),b
 18234   003172  0101               	movlb	1	; () banked
 18235   003174  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 18236   003176  EC9C  F04D         	call	_startMultiOutput
 18237                           
 18238                           ;../universalNv.c: 280:                 } else if (index == (16 + 7*(io) + 1)) {
 18239   00317A  0012               	return	
 18240   00317C                     l19784:
 18241                           
 18242                           ; BSR set to: 1
 18243   00317C  51ED               	movf	APP_nvValueChanged@index& (0+255),w,b
 18244   00317E  6FEA               	movwf	??_APP_nvValueChanged& (0+255),b
 18245   003180  6BEB               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18246   003182  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 18247   003184  0D07               	mullw	7
 18248   003186  0E11               	movlw	17
 18249   003188  26F3               	addwf	243,f,c
 18250   00318A  0E00               	movlw	0
 18251   00318C  22F4               	addwfc	244,f,c
 18252   00318E  51EA               	movf	??_APP_nvValueChanged& (0+255),w,b
 18253   003190  18F3               	xorwf	243,w,c
 18254   003192  E154               	bnz	l768
 18255   003194  51EB               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18256   003196  18F4               	xorwf	244,w,c
 18257   003198  A4D8               	btfss	status,2,c
 18258   00319A  0012               	return	
 18259                           
 18260                           ; BSR set to: 1
 18261                           ;../universalNv.c: 281:                     if (((value & 0x80) == 0x80) &&
 18262   00319C  AFE8               	btfss	APP_nvValueChanged@value& (0+255),7,b
 18263   00319E  0012               	return	
 18264                           
 18265                           ; BSR set to: 1
 18266   0031A0  BFE9               	btfsc	APP_nvValueChanged@oldValue& (0+255),7,b
 18267   0031A2  0012               	return	
 18268                           
 18269                           ; BSR set to: 1
 18270                           ;../universalNv.c: 282:                             ((oldValue & 0x80) == 0)) {;../unive
      +                          rsalNv.c: 285:                         currentPos[io] = (uint8_t)(getNV((16 + 7*(io) + 3
      +                          ))/2 + getNV((16 + 7*(io) + 2))/2);
 18271   0031A4  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 18272   0031A6  0D07               	mullw	7
 18273   0031A8  50F3               	movf	243,w,c
 18274   0031AA  0F12               	addlw	18
 18275   0031AC  EC35  F05D         	call	_getNV
 18276   0031B0  C08D  F097         	movff	?_getNV,___awdiv@dividend
 18277   0031B4  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 18278   0031B8  0E00               	movlw	0
 18279   0031BA  0100               	movlb	0	; () banked
 18280   0031BC  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18281   0031BE  0E02               	movlw	2
 18282   0031C0  6F99               	movwf	___awdiv@divisor& (0+255),b
 18283   0031C2  ECD7  F052         	call	___awdiv	;wreg free
 18284   0031C6  C097  F1EA         	movff	?___awdiv,??_APP_nvValueChanged
 18285   0031CA  C098  F1EB         	movff	?___awdiv+1,??_APP_nvValueChanged+1
 18286   0031CE  0101               	movlb	1	; () banked
 18287   0031D0  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 18288   0031D2  0D07               	mullw	7
 18289   0031D4  50F3               	movf	243,w,c
 18290   0031D6  0F13               	addlw	19
 18291   0031D8  EC35  F05D         	call	_getNV
 18292   0031DC  C08D  F097         	movff	?_getNV,___awdiv@dividend
 18293   0031E0  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 18294   0031E4  0E00               	movlw	0
 18295   0031E6  0100               	movlb	0	; () banked
 18296   0031E8  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18297   0031EA  0E02               	movlw	2
 18298   0031EC  6F99               	movwf	___awdiv@divisor& (0+255),b
 18299   0031EE  ECD7  F052         	call	___awdiv	;wreg free
 18300   0031F2  0100               	movlb	0	; () banked
 18301   0031F4  5197               	movf	?___awdiv& (0+255),w,b
 18302   0031F6  0101               	movlb	1	; () banked
 18303   0031F8  25EA               	addwf	??_APP_nvValueChanged& (0+255),w,b
 18304   0031FA  6FEC               	movwf	(??_APP_nvValueChanged+2)& (0+255),b
 18305   0031FC  0E40               	movlw	low _currentPos
 18306   0031FE  25EE               	addwf	APP_nvValueChanged@io& (0+255),w,b
 18307   003200  6ED9               	movwf	fsr2l,c
 18308   003202  6ADA               	clrf	fsr2h,c
 18309   003204  0E01               	movlw	high _currentPos
 18310   003206  22DA               	addwfc	fsr2h,f,c
 18311   003208  C1EC  FFDF         	movff	??_APP_nvValueChanged+2,indf2
 18312   00320C  0012               	return	
 18313   00320E                     l19794:
 18314   00320E  0101               	movlb	1	; () banked
 18315   003210  51EE               	movf	APP_nvValueChanged@io& (0+255),w,b
 18316   003212  0D07               	mullw	7
 18317   003214  50F3               	movf	243,w,c
 18318   003216  0F10               	addlw	16
 18319   003218  EC35  F05D         	call	_getNV
 18320                           
 18321                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18322                           ; Switch size 1, requested type "simple"
 18323                           ; Number of cases is 1, Range of values is 0 to 0
 18324                           ; switch strategies available:
 18325                           ; Name         Instructions Cycles
 18326                           ; simple_byte            4     3 (average)
 18327                           ;	Chosen strategy is simple_byte
 18328   00321C  0100               	movlb	0	; () banked
 18329   00321E  518E               	movf	(?_getNV+1)& (0+255),w,b
 18330   003220  0A00               	xorlw	0	; case 0
 18331   003222  A4D8               	btfss	status,2,c
 18332   003224  0012               	return	
 18333                           
 18334                           ; BSR set to: 0
 18335                           ; Switch size 1, requested type "simple"
 18336                           ; Number of cases is 3, Range of values is 2 to 4
 18337                           ; switch strategies available:
 18338                           ; Name         Instructions Cycles
 18339                           ; simple_byte           10     6 (average)
 18340                           ;	Chosen strategy is simple_byte
 18341   003226  518D               	movf	?_getNV& (0+255),w,b
 18342   003228  0A02               	xorlw	2	; case 2
 18343   00322A  B4D8               	btfsc	status,2,c
 18344   00322C  D61D               	goto	l19724
 18345   00322E  0A01               	xorlw	1	; case 3
 18346   003230  B4D8               	btfsc	status,2,c
 18347   003232  D69F               	goto	l19744
 18348   003234  0A07               	xorlw	7	; case 4
 18349   003236  A4D8               	btfss	status,2,c
 18350   003238  0012               	return	
 18351   00323A  D723               	goto	l19760
 18352   00323C                     l768:
 18353   00323C  0012               	return		;funcret
 18354   00323E                     __end_of_APP_nvValueChanged:
 18355                           	callstack 0
 18356                           
 18357 ;; *************** function _setTimedResponseDelay *****************
 18358 ;; Defined at:
 18359 ;;		line 900 in file "../../VLCBlib_PIC/vlcb.c"
 18360 ;; Parameters:    Size  Location     Type
 18361 ;;  delay           1    wreg     unsigned char 
 18362 ;; Auto vars:     Size  Location     Type
 18363 ;;  delay           1   45[BANK0 ] unsigned char 
 18364 ;; Return value:  Size  Location     Type
 18365 ;;                  1    wreg      void 
 18366 ;; Registers used:
 18367 ;;		wreg
 18368 ;; Tracked objects:
 18369 ;;		On entry : 0/0
 18370 ;;		On exit  : 0/0
 18371 ;;		Unchanged: 0/0
 18372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18374 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18376 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18377 ;;Total ram usage:        1 bytes
 18378 ;; Hardware stack levels used: 1
 18379 ;; Hardware stack levels required when called: 12
 18380 ;; This function calls:
 18381 ;;		Nothing
 18382 ;; This function is called by:
 18383 ;;		_setup
 18384 ;;		_APP_nvValueChanged
 18385 ;; This function uses a non-reentrant model
 18386 ;;
 18387                           
 18388                           	psect	text51
 18389   00C390                     __ptext51:
 18390                           	callstack 0
 18391   00C390                     _setTimedResponseDelay:
 18392                           	callstack 17
 18393                           
 18394                           ;incstack = 0
 18395                           ;setTimedResponseDelay@delay stored from wreg
 18396   00C390  0100               	movlb	0	; () banked
 18397   00C392  6F8D               	movwf	setTimedResponseDelay@delay& (0+255),b
 18398                           
 18399                           ;../../VLCBlib_PIC/vlcb.c: 901:     timedResponseDelay = delay;
 18400   00C394  C08D  F178         	movff	setTimedResponseDelay@delay,_timedResponseDelay
 18401   00C398  0012               	return		;funcret
 18402   00C39A                     __end_of_setTimedResponseDelay:
 18403                           	callstack 0
 18404                           
 18405 ;; *************** function _setServoPosition *****************
 18406 ;; Defined at:
 18407 ;;		line 683 in file "../servo.c"
 18408 ;; Parameters:    Size  Location     Type
 18409 ;;  io              1    wreg     unsigned char 
 18410 ;;  pos             1   63[BANK0 ] unsigned char 
 18411 ;; Auto vars:     Size  Location     Type
 18412 ;;  io              1   64[BANK0 ] unsigned char 
 18413 ;; Return value:  Size  Location     Type
 18414 ;;                  1    wreg      void 
 18415 ;; Registers used:
 18416 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18417 ;; Tracked objects:
 18418 ;;		On entry : 0/0
 18419 ;;		On exit  : 0/0
 18420 ;;		Unchanged: 0/0
 18421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18422 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18423 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18425 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18426 ;;Total ram usage:        2 bytes
 18427 ;; Hardware stack levels used: 1
 18428 ;; Hardware stack levels required when called: 12
 18429 ;; This function calls:
 18430 ;;		Nothing
 18431 ;; This function is called by:
 18432 ;;		_APP_nvValueChanged
 18433 ;;		_setOutputPosition
 18434 ;; This function uses a non-reentrant model
 18435 ;;
 18436                           
 18437                           	psect	text52
 18438   00C0AE                     __ptext52:
 18439                           	callstack 0
 18440   00C0AE                     _setServoPosition:
 18441                           	callstack 15
 18442                           
 18443                           ;incstack = 0
 18444                           ;setServoPosition@io stored from wreg
 18445   00C0AE  0100               	movlb	0	; () banked
 18446   00C0B0  6FA0               	movwf	setServoPosition@io& (0+255),b
 18447                           
 18448                           ;../servo.c: 684:     targetPos[io] = pos;
 18449   00C0B2  0100               	movlb	0	; () banked
 18450   00C0B4  51A0               	movf	setServoPosition@io& (0+255),w,b
 18451   00C0B6  0F01               	addlw	low _targetPos
 18452   00C0B8  6ED9               	movwf	fsr2l,c
 18453   00C0BA  6ADA               	clrf	fsr2h,c
 18454   00C0BC  C09F  FFDF         	movff	setServoPosition@pos,indf2
 18455                           
 18456                           ;../servo.c: 685:     currentPos[io] = pos;
 18457   00C0C0  0E40               	movlw	low _currentPos
 18458   00C0C2  25A0               	addwf	setServoPosition@io& (0+255),w,b
 18459   00C0C4  6ED9               	movwf	fsr2l,c
 18460   00C0C6  6ADA               	clrf	fsr2h,c
 18461   00C0C8  0E01               	movlw	high _currentPos
 18462   00C0CA  22DA               	addwfc	fsr2h,f,c
 18463   00C0CC  C09F  FFDF         	movff	setServoPosition@pos,indf2
 18464                           
 18465                           ; BSR set to: 0
 18466   00C0D0  0012               	return		;funcret
 18467   00C0D2                     __end_of_setServoPosition:
 18468                           	callstack 0
 18469                           
 18470 ;; *************** function _APP_nvValidate *****************
 18471 ;; Defined at:
 18472 ;;		line 299 in file "../universalNv.c"
 18473 ;; Parameters:    Size  Location     Type
 18474 ;;  index           1    wreg     unsigned char 
 18475 ;;  value           1   51[BANK0 ] unsigned char 
 18476 ;; Auto vars:     Size  Location     Type
 18477 ;;  index           1   52[BANK0 ] unsigned char 
 18478 ;;  io              1    0        unsigned char 
 18479 ;; Return value:  Size  Location     Type
 18480 ;;                  1    wreg      enum E12862
 18481 ;; Registers used:
 18482 ;;		wreg, status,2, status,0, cstack
 18483 ;; Tracked objects:
 18484 ;;		On entry : 0/0
 18485 ;;		On exit  : 0/0
 18486 ;;		Unchanged: 0/0
 18487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18488 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18489 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18491 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18492 ;;Total ram usage:        2 bytes
 18493 ;; Hardware stack levels used: 1
 18494 ;; Hardware stack levels required when called: 13
 18495 ;; This function calls:
 18496 ;;		___awmod
 18497 ;; This function is called by:
 18498 ;;		_setNV
 18499 ;; This function uses a non-reentrant model
 18500 ;;
 18501                           
 18502                           	psect	text53
 18503   00B32C                     __ptext53:
 18504                           	callstack 0
 18505   00B32C                     _APP_nvValidate:
 18506                           	callstack 14
 18507                           
 18508                           ; BSR set to: 0
 18509                           ;incstack = 0
 18510                           ;APP_nvValidate@index stored from wreg
 18511   00B32C  0100               	movlb	0	; () banked
 18512   00B32E  6F94               	movwf	APP_nvValidate@index& (0+255),b
 18513                           
 18514                           ;../universalNv.c: 300:     uint8_t io;;../universalNv.c: 301:     if ((index >= 16) && 
      +                          (((index-16) % 7) == 0)) {
 18515   00B330  0E0F               	movlw	15
 18516   00B332  0100               	movlb	0	; () banked
 18517   00B334  6594               	cpfsgt	APP_nvValidate@index& (0+255),b
 18518   00B336  D024               	goto	l774
 18519                           
 18520                           ; BSR set to: 0
 18521   00B338  0EF0               	movlw	240
 18522   00B33A  2594               	addwf	APP_nvValidate@index& (0+255),w,b
 18523   00B33C  6F8D               	movwf	___awmod@dividend& (0+255),b
 18524   00B33E  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 18525   00B340  0EFF               	movlw	255
 18526   00B342  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 18527   00B344  0E00               	movlw	0
 18528   00B346  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 18529   00B348  0E07               	movlw	7
 18530   00B34A  6F8F               	movwf	___awmod@divisor& (0+255),b
 18531   00B34C  EC74  F056         	call	___awmod	;wreg free
 18532   00B350  0100               	movlb	0	; () banked
 18533   00B352  518D               	movf	?___awmod& (0+255),w,b
 18534   00B354  118E               	iorwf	(?___awmod+1)& (0+255),w,b
 18535   00B356  B4D8               	btfsc	status,2,c
 18536   00B358  D003               	goto	l19814
 18537   00B35A  D012               	goto	l774
 18538   00B35C                     l19808:
 18539                           
 18540                           ; BSR set to: 0
 18541                           ;../universalNv.c: 326:                 return INVALID;
 18542   00B35C  0E00               	movlw	0
 18543   00B35E  0012               	return	
 18544   00B360                     l19814:
 18545                           
 18546                           ; BSR set to: 0
 18547   00B360  5193               	movf	APP_nvValidate@value& (0+255),w,b
 18548                           
 18549                           ; Switch size 1, requested type "simple"
 18550                           ; Number of cases is 5, Range of values is 0 to 4
 18551                           ; switch strategies available:
 18552                           ; Name         Instructions Cycles
 18553                           ; simple_byte           16     9 (average)
 18554                           ;	Chosen strategy is simple_byte
 18555   00B362  0A00               	xorlw	0	; case 0
 18556   00B364  B4D8               	btfsc	status,2,c
 18557   00B366  D00C               	goto	l774
 18558   00B368  0A01               	xorlw	1	; case 1
 18559   00B36A  B4D8               	btfsc	status,2,c
 18560   00B36C  D009               	goto	l774
 18561   00B36E  0A03               	xorlw	3	; case 2
 18562   00B370  B4D8               	btfsc	status,2,c
 18563   00B372  D006               	goto	l774
 18564   00B374  0A01               	xorlw	1	; case 3
 18565   00B376  B4D8               	btfsc	status,2,c
 18566   00B378  D003               	goto	l774
 18567   00B37A  0A07               	xorlw	7	; case 4
 18568   00B37C  A4D8               	btfss	status,2,c
 18569   00B37E  D7EE               	goto	l19808
 18570   00B380                     l774:
 18571                           
 18572                           ; BSR set to: 0
 18573                           ;../universalNv.c: 329:     return VALID;
 18574                           
 18575                           ; BSR set to: 0
 18576   00B380  0E01               	movlw	1
 18577                           
 18578                           ; BSR set to: 0
 18579   00B382  0012               	return		;funcret
 18580   00B384                     __end_of_APP_nvValidate:
 18581                           	callstack 0
 18582                           
 18583 ;; *************** function _canEsdData *****************
 18584 ;; Defined at:
 18585 ;;		line 416 in file "../../VLCBlib_PIC/can18_ecan.c"
 18586 ;; Parameters:    Size  Location     Type
 18587 ;;  id              1    wreg     unsigned char 
 18588 ;; Auto vars:     Size  Location     Type
 18589 ;;  id              1   45[BANK0 ] unsigned char 
 18590 ;; Return value:  Size  Location     Type
 18591 ;;                  1    wreg      unsigned char 
 18592 ;; Registers used:
 18593 ;;		wreg, status,2, status,0
 18594 ;; Tracked objects:
 18595 ;;		On entry : 0/0
 18596 ;;		On exit  : 0/0
 18597 ;;		Unchanged: 0/0
 18598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18600 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18602 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18603 ;;Total ram usage:        1 bytes
 18604 ;; Hardware stack levels used: 1
 18605 ;; Hardware stack levels required when called: 12
 18606 ;; This function calls:
 18607 ;;		Nothing
 18608 ;; This function is called by:
 18609 ;;		_mnsProcessMessage
 18610 ;; This function uses a non-reentrant model
 18611 ;;
 18612                           
 18613                           	psect	text54
 18614   00C258                     __ptext54:
 18615                           	callstack 0
 18616   00C258                     _canEsdData:
 18617                           	callstack 16
 18618                           
 18619                           ; BSR set to: 0
 18620                           ;incstack = 0
 18621                           ;canEsdData@id stored from wreg
 18622   00C258  0100               	movlb	0	; () banked
 18623   00C25A  6F8D               	movwf	canEsdData@id& (0+255),b
 18624                           
 18625                           ;../../VLCBlib_PIC/can18_ecan.c: 417:     switch(id) {
 18626   00C25C  D004               	goto	l21592
 18627   00C25E                     l21582:
 18628                           
 18629                           ; BSR set to: 0
 18630                           ;../../VLCBlib_PIC/can18_ecan.c: 419:             return CAN_HW_PIC_ECAN;
 18631   00C25E  0E01               	movlw	1
 18632   00C260  0012               	return	
 18633   00C262                     l21586:
 18634                           
 18635                           ; BSR set to: 0
 18636                           ;../../VLCBlib_PIC/can18_ecan.c: 421:             return 0;
 18637   00C262  0E00               	movlw	0
 18638   00C264  0012               	return	
 18639   00C266                     l21592:
 18640   00C266  0100               	movlb	0	; () banked
 18641   00C268  518D               	movf	canEsdData@id& (0+255),w,b
 18642                           
 18643                           ; Switch size 1, requested type "simple"
 18644                           ; Number of cases is 1, Range of values is 0 to 0
 18645                           ; switch strategies available:
 18646                           ; Name         Instructions Cycles
 18647                           ; simple_byte            4     3 (average)
 18648                           ;	Chosen strategy is simple_byte
 18649   00C26A  0A00               	xorlw	0	; case 0
 18650   00C26C  B4D8               	btfsc	status,2,c
 18651   00C26E  D7F7               	goto	l21582
 18652   00C270  D7F8               	goto	l21586
 18653   00C272                     __end_of_canEsdData:
 18654                           	callstack 0
 18655                           
 18656 ;; *************** function _nvGetESDdata *****************
 18657 ;; Defined at:
 18658 ;;		line 313 in file "../../VLCBlib_PIC/nv.c"
 18659 ;; Parameters:    Size  Location     Type
 18660 ;;  id              1    wreg     unsigned char 
 18661 ;; Auto vars:     Size  Location     Type
 18662 ;;  id              1   45[BANK0 ] unsigned char 
 18663 ;; Return value:  Size  Location     Type
 18664 ;;                  1    wreg      unsigned char 
 18665 ;; Registers used:
 18666 ;;		wreg, status,2, status,0
 18667 ;; Tracked objects:
 18668 ;;		On entry : 0/0
 18669 ;;		On exit  : 0/0
 18670 ;;		Unchanged: 0/0
 18671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18673 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18675 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18676 ;;Total ram usage:        1 bytes
 18677 ;; Hardware stack levels used: 1
 18678 ;; Hardware stack levels required when called: 12
 18679 ;; This function calls:
 18680 ;;		Nothing
 18681 ;; This function is called by:
 18682 ;;		_mnsProcessMessage
 18683 ;; This function uses a non-reentrant model
 18684 ;;
 18685                           
 18686                           	psect	text55
 18687   00C272                     __ptext55:
 18688                           	callstack 0
 18689   00C272                     _nvGetESDdata:
 18690                           	callstack 16
 18691                           
 18692                           ; BSR set to: 0
 18693                           ;incstack = 0
 18694                           ;nvGetESDdata@id stored from wreg
 18695   00C272  0100               	movlb	0	; () banked
 18696   00C274  6F8D               	movwf	nvGetESDdata@id& (0+255),b
 18697                           
 18698                           ;../../VLCBlib_PIC/nv.c: 314:     switch (id) {
 18699   00C276  D004               	goto	l21350
 18700   00C278                     l21340:
 18701                           
 18702                           ; BSR set to: 0
 18703   00C278  0E7F               	movlw	127
 18704   00C27A  0012               	return	
 18705   00C27C                     l21344:
 18706                           
 18707                           ; BSR set to: 0
 18708   00C27C  0E00               	movlw	0
 18709   00C27E  0012               	return	
 18710   00C280                     l21350:
 18711   00C280  0100               	movlb	0	; () banked
 18712   00C282  518D               	movf	nvGetESDdata@id& (0+255),w,b
 18713                           
 18714                           ; Switch size 1, requested type "simple"
 18715                           ; Number of cases is 1, Range of values is 1 to 1
 18716                           ; switch strategies available:
 18717                           ; Name         Instructions Cycles
 18718                           ; simple_byte            4     3 (average)
 18719                           ;	Chosen strategy is simple_byte
 18720   00C284  0A01               	xorlw	1	; case 1
 18721   00C286  B4D8               	btfsc	status,2,c
 18722   00C288  D7F7               	goto	l21340
 18723   00C28A  D7F8               	goto	l21344
 18724   00C28C                     __end_of_nvGetESDdata:
 18725                           	callstack 0
 18726                           
 18727 ;; *************** function _teachGetESDdata *****************
 18728 ;; Defined at:
 18729 ;;		line 448 in file "../../VLCBlib_PIC/event_teach.c"
 18730 ;; Parameters:    Size  Location     Type
 18731 ;;  id              1    wreg     unsigned char 
 18732 ;; Auto vars:     Size  Location     Type
 18733 ;;  id              1   45[BANK0 ] unsigned char 
 18734 ;; Return value:  Size  Location     Type
 18735 ;;                  1    wreg      unsigned char 
 18736 ;; Registers used:
 18737 ;;		wreg, status,2, status,0
 18738 ;; Tracked objects:
 18739 ;;		On entry : 0/0
 18740 ;;		On exit  : 0/0
 18741 ;;		Unchanged: 0/0
 18742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18744 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18746 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18747 ;;Total ram usage:        1 bytes
 18748 ;; Hardware stack levels used: 1
 18749 ;; Hardware stack levels required when called: 12
 18750 ;; This function calls:
 18751 ;;		Nothing
 18752 ;; This function is called by:
 18753 ;;		_mnsProcessMessage
 18754 ;; This function uses a non-reentrant model
 18755 ;;
 18756                           
 18757                           	psect	text56
 18758   00C0D2                     __ptext56:
 18759                           	callstack 0
 18760   00C0D2                     _teachGetESDdata:
 18761                           	callstack 16
 18762                           
 18763                           ; BSR set to: 0
 18764                           ;incstack = 0
 18765                           ;teachGetESDdata@id stored from wreg
 18766   00C0D2  0100               	movlb	0	; () banked
 18767   00C0D4  6F8D               	movwf	teachGetESDdata@id& (0+255),b
 18768                           
 18769                           ;../../VLCBlib_PIC/event_teach.c: 449:     switch (id) {
 18770   00C0D6  D006               	goto	l21204
 18771   00C0D8                     l21190:
 18772                           
 18773                           ; BSR set to: 0
 18774   00C0D8  0EFF               	movlw	255
 18775   00C0DA  0012               	return	
 18776   00C0DC                     l21194:
 18777                           
 18778                           ; BSR set to: 0
 18779   00C0DC  0E14               	movlw	20
 18780   00C0DE  0012               	return	
 18781   00C0E0                     l21198:
 18782                           
 18783                           ; BSR set to: 0
 18784   00C0E0  0E00               	movlw	0
 18785   00C0E2  0012               	return	
 18786   00C0E4                     l21204:
 18787   00C0E4  0100               	movlb	0	; () banked
 18788   00C0E6  518D               	movf	teachGetESDdata@id& (0+255),w,b
 18789                           
 18790                           ; Switch size 1, requested type "simple"
 18791                           ; Number of cases is 2, Range of values is 1 to 2
 18792                           ; switch strategies available:
 18793                           ; Name         Instructions Cycles
 18794                           ; simple_byte            7     4 (average)
 18795                           ;	Chosen strategy is simple_byte
 18796   00C0E8  0A01               	xorlw	1	; case 1
 18797   00C0EA  B4D8               	btfsc	status,2,c
 18798   00C0EC  D7F5               	goto	l21190
 18799   00C0EE  0A03               	xorlw	3	; case 2
 18800   00C0F0  B4D8               	btfsc	status,2,c
 18801   00C0F2  D7F4               	goto	l21194
 18802   00C0F4  D7F5               	goto	l21198
 18803   00C0F6                     __end_of_teachGetESDdata:
 18804                           	callstack 0
 18805                           
 18806 ;; *************** function _canGetDiagnostic *****************
 18807 ;; Defined at:
 18808 ;;		line 430 in file "../../VLCBlib_PIC/can18_ecan.c"
 18809 ;; Parameters:    Size  Location     Type
 18810 ;;  index           1    wreg     unsigned char 
 18811 ;; Auto vars:     Size  Location     Type
 18812 ;;  index           1   49[BANK0 ] unsigned char 
 18813 ;; Return value:  Size  Location     Type
 18814 ;;                  2   45[BANK0 ] PTR struct DiagnosticVal
 18815 ;; Registers used:
 18816 ;;		wreg, status,2, status,0
 18817 ;; Tracked objects:
 18818 ;;		On entry : 0/0
 18819 ;;		On exit  : 0/0
 18820 ;;		Unchanged: 0/0
 18821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18822 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18823 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18824 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18825 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18826 ;;Total ram usage:        5 bytes
 18827 ;; Hardware stack levels used: 1
 18828 ;; Hardware stack levels required when called: 12
 18829 ;; This function calls:
 18830 ;;		Nothing
 18831 ;; This function is called by:
 18832 ;;		_mnsTRallDiagnosticsCallback
 18833 ;;		_mnsProcessMessage
 18834 ;; This function uses a non-reentrant model
 18835 ;;
 18836                           
 18837                           	psect	text57
 18838   00BBC8                     __ptext57:
 18839                           	callstack 0
 18840   00BBC8                     _canGetDiagnostic:
 18841                           	callstack 15
 18842                           
 18843                           ; BSR set to: 0
 18844                           ;incstack = 0
 18845                           ;canGetDiagnostic@index stored from wreg
 18846   00BBC8  0100               	movlb	0	; () banked
 18847   00BBCA  6F91               	movwf	canGetDiagnostic@index& (0+255),b
 18848                           
 18849                           ;../../VLCBlib_PIC/can18_ecan.c: 431:     if ((index<1) || (index>16)) {
 18850   00BBCC  0100               	movlb	0	; () banked
 18851   00BBCE  5191               	movf	canGetDiagnostic@index& (0+255),w,b
 18852   00BBD0  B4D8               	btfsc	status,2,c
 18853   00BBD2  D003               	goto	u20860
 18854                           
 18855                           ; BSR set to: 0
 18856   00BBD4  0E10               	movlw	16
 18857   00BBD6  6591               	cpfsgt	canGetDiagnostic@index& (0+255),b
 18858   00BBD8  D005               	goto	l20330
 18859   00BBDA                     u20860:
 18860                           
 18861                           ; BSR set to: 0
 18862                           ;../../VLCBlib_PIC/can18_ecan.c: 432:         return ((void*)0);
 18863   00BBDA  0E00               	movlw	0
 18864   00BBDC  6F8D               	movwf	?_canGetDiagnostic& (0+255),b
 18865   00BBDE  0E00               	movlw	0
 18866   00BBE0  6F8E               	movwf	(?_canGetDiagnostic+1)& (0+255),b
 18867   00BBE2  0012               	return	
 18868   00BBE4                     l20330:
 18869                           
 18870                           ; BSR set to: 0
 18871                           ;../../VLCBlib_PIC/can18_ecan.c: 434:     return &(canDiagnostics[index-1]);
 18872   00BBE4  5191               	movf	canGetDiagnostic@index& (0+255),w,b
 18873   00BBE6  6F8F               	movwf	??_canGetDiagnostic& (0+255),b
 18874   00BBE8  6B90               	clrf	(??_canGetDiagnostic+1)& (0+255),b
 18875   00BBEA  90D8               	bcf	status,0,c
 18876   00BBEC  378F               	rlcf	??_canGetDiagnostic& (0+255),f,b
 18877   00BBEE  3790               	rlcf	(??_canGetDiagnostic+1)& (0+255),f,b
 18878   00BBF0  0E78               	movlw	low (_canDiagnostics+65534)
 18879   00BBF2  258F               	addwf	??_canGetDiagnostic& (0+255),w,b
 18880   00BBF4  6F8D               	movwf	?_canGetDiagnostic& (0+255),b
 18881   00BBF6  0E01               	movlw	high (_canDiagnostics+65534)
 18882   00BBF8  2190               	addwfc	(??_canGetDiagnostic+1)& (0+255),w,b
 18883   00BBFA  6F8E               	movwf	(?_canGetDiagnostic+1)& (0+255),b
 18884                           
 18885                           ; BSR set to: 0
 18886   00BBFC  0012               	return		;funcret
 18887   00BBFE                     __end_of_canGetDiagnostic:
 18888                           	callstack 0
 18889                           
 18890 ;; *************** function _nvGetDiagnostic *****************
 18891 ;; Defined at:
 18892 ;;		line 139 in file "../../VLCBlib_PIC/nv.c"
 18893 ;; Parameters:    Size  Location     Type
 18894 ;;  index           1    wreg     unsigned char 
 18895 ;; Auto vars:     Size  Location     Type
 18896 ;;  index           1   48[BANK0 ] unsigned char 
 18897 ;; Return value:  Size  Location     Type
 18898 ;;                  2   45[BANK0 ] PTR struct DiagnosticVal
 18899 ;; Registers used:
 18900 ;;		wreg, status,2, status,0, prodl, prodh
 18901 ;; Tracked objects:
 18902 ;;		On entry : 0/0
 18903 ;;		On exit  : 0/0
 18904 ;;		Unchanged: 0/0
 18905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18906 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18907 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18908 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18909 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18910 ;;Total ram usage:        4 bytes
 18911 ;; Hardware stack levels used: 1
 18912 ;; Hardware stack levels required when called: 12
 18913 ;; This function calls:
 18914 ;;		Nothing
 18915 ;; This function is called by:
 18916 ;;		_mnsTRallDiagnosticsCallback
 18917 ;;		_mnsProcessMessage
 18918 ;; This function uses a non-reentrant model
 18919 ;;
 18920                           
 18921                           	psect	text58
 18922   00BE56                     __ptext58:
 18923                           	callstack 0
 18924   00BE56                     _nvGetDiagnostic:
 18925                           	callstack 15
 18926                           
 18927                           ; BSR set to: 0
 18928                           ;incstack = 0
 18929                           ;nvGetDiagnostic@index stored from wreg
 18930   00BE56  0100               	movlb	0	; () banked
 18931   00BE58  6F90               	movwf	nvGetDiagnostic@index& (0+255),b
 18932                           
 18933                           ;../../VLCBlib_PIC/nv.c: 140:     if ((index<1) || (index>2)) {
 18934   00BE5A  0100               	movlb	0	; () banked
 18935   00BE5C  5190               	movf	nvGetDiagnostic@index& (0+255),w,b
 18936   00BE5E  B4D8               	btfsc	status,2,c
 18937   00BE60  D003               	goto	u20790
 18938                           
 18939                           ; BSR set to: 0
 18940   00BE62  0E02               	movlw	2
 18941   00BE64  6590               	cpfsgt	nvGetDiagnostic@index& (0+255),b
 18942   00BE66  D005               	goto	l20242
 18943   00BE68                     u20790:
 18944                           
 18945                           ; BSR set to: 0
 18946                           ;../../VLCBlib_PIC/nv.c: 141:         return ((void*)0);
 18947   00BE68  0E00               	movlw	0
 18948   00BE6A  6F8D               	movwf	?_nvGetDiagnostic& (0+255),b
 18949   00BE6C  0E00               	movlw	0
 18950   00BE6E  6F8E               	movwf	(?_nvGetDiagnostic+1)& (0+255),b
 18951   00BE70  0012               	return	
 18952   00BE72                     l20242:
 18953                           
 18954                           ; BSR set to: 0
 18955                           ;../../VLCBlib_PIC/nv.c: 143:     return &(nvDiagnostics[index-1]);
 18956   00BE72  5190               	movf	nvGetDiagnostic@index& (0+255),w,b
 18957   00BE74  0D02               	mullw	2
 18958   00BE76  50F3               	movf	243,w,c
 18959   00BE78  0FCB               	addlw	low (_nvDiagnostics+254)
 18960   00BE7A  6F8F               	movwf	??_nvGetDiagnostic& (0+255),b
 18961   00BE7C  C08F  F08D         	movff	??_nvGetDiagnostic,?_nvGetDiagnostic
 18962   00BE80  6B8E               	clrf	(?_nvGetDiagnostic+1)& (0+255),b
 18963                           
 18964                           ; BSR set to: 0
 18965   00BE82  0012               	return		;funcret
 18966   00BE84                     __end_of_nvGetDiagnostic:
 18967                           	callstack 0
 18968                           
 18969 ;; *************** function _mnsGetDiagnostic *****************
 18970 ;; Defined at:
 18971 ;;		line 730 in file "../../VLCBlib_PIC/mns.c"
 18972 ;; Parameters:    Size  Location     Type
 18973 ;;  index           1    wreg     unsigned char 
 18974 ;; Auto vars:     Size  Location     Type
 18975 ;;  index           1   49[BANK0 ] unsigned char 
 18976 ;; Return value:  Size  Location     Type
 18977 ;;                  2   45[BANK0 ] PTR struct DiagnosticVal
 18978 ;; Registers used:
 18979 ;;		wreg, status,2, status,0
 18980 ;; Tracked objects:
 18981 ;;		On entry : 0/0
 18982 ;;		On exit  : 0/0
 18983 ;;		Unchanged: 0/0
 18984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18985 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18986 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18987 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18988 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18989 ;;Total ram usage:        5 bytes
 18990 ;; Hardware stack levels used: 1
 18991 ;; Hardware stack levels required when called: 12
 18992 ;; This function calls:
 18993 ;;		Nothing
 18994 ;; This function is called by:
 18995 ;;		_mnsTRallDiagnosticsCallback
 18996 ;;		_mnsProcessMessage
 18997 ;; This function uses a non-reentrant model
 18998 ;;
 18999                           
 19000                           	psect	text59
 19001   00BBFE                     __ptext59:
 19002                           	callstack 0
 19003   00BBFE                     _mnsGetDiagnostic:
 19004                           	callstack 15
 19005                           
 19006                           ; BSR set to: 0
 19007                           ;incstack = 0
 19008                           ;mnsGetDiagnostic@index stored from wreg
 19009   00BBFE  0100               	movlb	0	; () banked
 19010   00BC00  6F91               	movwf	mnsGetDiagnostic@index& (0+255),b
 19011                           
 19012                           ;../../VLCBlib_PIC/mns.c: 731:     if ((index<1) || (index>6)) {
 19013   00BC02  0100               	movlb	0	; () banked
 19014   00BC04  5191               	movf	mnsGetDiagnostic@index& (0+255),w,b
 19015   00BC06  B4D8               	btfsc	status,2,c
 19016   00BC08  D003               	goto	u20760
 19017                           
 19018                           ; BSR set to: 0
 19019   00BC0A  0E06               	movlw	6
 19020   00BC0C  6591               	cpfsgt	mnsGetDiagnostic@index& (0+255),b
 19021   00BC0E  D005               	goto	l20190
 19022   00BC10                     u20760:
 19023                           
 19024                           ; BSR set to: 0
 19025                           ;../../VLCBlib_PIC/mns.c: 732:         return ((void*)0);
 19026   00BC10  0E00               	movlw	0
 19027   00BC12  6F8D               	movwf	?_mnsGetDiagnostic& (0+255),b
 19028   00BC14  0E00               	movlw	0
 19029   00BC16  6F8E               	movwf	(?_mnsGetDiagnostic+1)& (0+255),b
 19030   00BC18  0012               	return	
 19031   00BC1A                     l20190:
 19032                           
 19033                           ; BSR set to: 0
 19034                           ;../../VLCBlib_PIC/mns.c: 734:     return &(mnsDiagnostics[index-1]);
 19035   00BC1A  5191               	movf	mnsGetDiagnostic@index& (0+255),w,b
 19036   00BC1C  6F8F               	movwf	??_mnsGetDiagnostic& (0+255),b
 19037   00BC1E  6B90               	clrf	(??_mnsGetDiagnostic+1)& (0+255),b
 19038   00BC20  90D8               	bcf	status,0,c
 19039   00BC22  378F               	rlcf	??_mnsGetDiagnostic& (0+255),f,b
 19040   00BC24  3790               	rlcf	(??_mnsGetDiagnostic+1)& (0+255),f,b
 19041   00BC26  0E98               	movlw	low (_mnsDiagnostics+65534)
 19042   00BC28  258F               	addwf	??_mnsGetDiagnostic& (0+255),w,b
 19043   00BC2A  6F8D               	movwf	?_mnsGetDiagnostic& (0+255),b
 19044   00BC2C  0E01               	movlw	high (_mnsDiagnostics+65534)
 19045   00BC2E  2190               	addwfc	(??_mnsGetDiagnostic+1)& (0+255),w,b
 19046   00BC30  6F8E               	movwf	(?_mnsGetDiagnostic+1)& (0+255),b
 19047                           
 19048                           ; BSR set to: 0
 19049   00BC32  0012               	return		;funcret
 19050   00BC34                     __end_of_mnsGetDiagnostic:
 19051                           	callstack 0
 19052                           
 19053 ;; *************** function _producerGetDiagnostic *****************
 19054 ;; Defined at:
 19055 ;;		line 154 in file "../../VLCBlib_PIC/event_producer.c"
 19056 ;; Parameters:    Size  Location     Type
 19057 ;;  index           1    wreg     unsigned char 
 19058 ;; Auto vars:     Size  Location     Type
 19059 ;;  index           1   49[BANK0 ] unsigned char 
 19060 ;; Return value:  Size  Location     Type
 19061 ;;                  2   45[BANK0 ] PTR struct DiagnosticVal
 19062 ;; Registers used:
 19063 ;;		wreg, status,2, status,0
 19064 ;; Tracked objects:
 19065 ;;		On entry : 0/0
 19066 ;;		On exit  : 0/0
 19067 ;;		Unchanged: 0/0
 19068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19069 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19070 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19071 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19072 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19073 ;;Total ram usage:        5 bytes
 19074 ;; Hardware stack levels used: 1
 19075 ;; Hardware stack levels required when called: 12
 19076 ;; This function calls:
 19077 ;;		Nothing
 19078 ;; This function is called by:
 19079 ;;		_mnsTRallDiagnosticsCallback
 19080 ;;		_mnsProcessMessage
 19081 ;; This function uses a non-reentrant model
 19082 ;;
 19083                           
 19084                           	psect	text60
 19085   00BC34                     __ptext60:
 19086                           	callstack 0
 19087   00BC34                     _producerGetDiagnostic:
 19088                           	callstack 15
 19089                           
 19090                           ; BSR set to: 0
 19091                           ;incstack = 0
 19092                           ;producerGetDiagnostic@index stored from wreg
 19093   00BC34  0100               	movlb	0	; () banked
 19094   00BC36  6F91               	movwf	producerGetDiagnostic@index& (0+255),b
 19095                           
 19096                           ;../../VLCBlib_PIC/event_producer.c: 155:     if ((index<1) || (index>1)) {
 19097   00BC38  0100               	movlb	0	; () banked
 19098   00BC3A  5191               	movf	producerGetDiagnostic@index& (0+255),w,b
 19099   00BC3C  B4D8               	btfsc	status,2,c
 19100   00BC3E  D003               	goto	u20610
 19101                           
 19102                           ; BSR set to: 0
 19103   00BC40  0E01               	movlw	1
 19104   00BC42  6591               	cpfsgt	producerGetDiagnostic@index& (0+255),b
 19105   00BC44  D005               	goto	l19968
 19106   00BC46                     u20610:
 19107                           
 19108                           ; BSR set to: 0
 19109                           ;../../VLCBlib_PIC/event_producer.c: 156:         return ((void*)0);
 19110   00BC46  0E00               	movlw	0
 19111   00BC48  6F8D               	movwf	?_producerGetDiagnostic& (0+255),b
 19112   00BC4A  0E00               	movlw	0
 19113   00BC4C  6F8E               	movwf	(?_producerGetDiagnostic+1)& (0+255),b
 19114   00BC4E  0012               	return	
 19115   00BC50                     l19968:
 19116                           
 19117                           ; BSR set to: 0
 19118                           ;../../VLCBlib_PIC/event_producer.c: 158:     return &(producerDiagnostics[index-1]);
 19119   00BC50  5191               	movf	producerGetDiagnostic@index& (0+255),w,b
 19120   00BC52  6F8F               	movwf	??_producerGetDiagnostic& (0+255),b
 19121   00BC54  6B90               	clrf	(??_producerGetDiagnostic+1)& (0+255),b
 19122   00BC56  90D8               	bcf	status,0,c
 19123   00BC58  378F               	rlcf	??_producerGetDiagnostic& (0+255),f,b
 19124   00BC5A  3790               	rlcf	(??_producerGetDiagnostic+1)& (0+255),f,b
 19125   00BC5C  0EAF               	movlw	low (_producerDiagnostics+65534)
 19126   00BC5E  258F               	addwf	??_producerGetDiagnostic& (0+255),w,b
 19127   00BC60  6F8D               	movwf	?_producerGetDiagnostic& (0+255),b
 19128   00BC62  0E01               	movlw	high (_producerDiagnostics+65534)
 19129   00BC64  2190               	addwfc	(??_producerGetDiagnostic+1)& (0+255),w,b
 19130   00BC66  6F8E               	movwf	(?_producerGetDiagnostic+1)& (0+255),b
 19131                           
 19132                           ; BSR set to: 0
 19133   00BC68  0012               	return		;funcret
 19134   00BC6A                     __end_of_producerGetDiagnostic:
 19135                           	callstack 0
 19136                           
 19137 ;; *************** function _ackGetDiagnostic *****************
 19138 ;; Defined at:
 19139 ;;		line 176 in file "../../VLCBlib_PIC/event_acknowledge.c"
 19140 ;; Parameters:    Size  Location     Type
 19141 ;;  index           1    wreg     unsigned char 
 19142 ;; Auto vars:     Size  Location     Type
 19143 ;;  index           1   48[BANK0 ] unsigned char 
 19144 ;; Return value:  Size  Location     Type
 19145 ;;                  2   45[BANK0 ] PTR struct DiagnosticVal
 19146 ;; Registers used:
 19147 ;;		wreg, status,2, status,0, prodl, prodh
 19148 ;; Tracked objects:
 19149 ;;		On entry : 0/0
 19150 ;;		On exit  : 0/0
 19151 ;;		Unchanged: 0/0
 19152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19153 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19154 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19155 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19156 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19157 ;;Total ram usage:        4 bytes
 19158 ;; Hardware stack levels used: 1
 19159 ;; Hardware stack levels required when called: 12
 19160 ;; This function calls:
 19161 ;;		Nothing
 19162 ;; This function is called by:
 19163 ;;		_mnsTRallDiagnosticsCallback
 19164 ;;		_mnsProcessMessage
 19165 ;; This function uses a non-reentrant model
 19166 ;;
 19167                           
 19168                           	psect	text61
 19169   00BE84                     __ptext61:
 19170                           	callstack 0
 19171   00BE84                     _ackGetDiagnostic:
 19172                           	callstack 15
 19173                           
 19174                           ; BSR set to: 0
 19175                           ;incstack = 0
 19176                           ;ackGetDiagnostic@index stored from wreg
 19177   00BE84  0100               	movlb	0	; () banked
 19178   00BE86  6F90               	movwf	ackGetDiagnostic@index& (0+255),b
 19179                           
 19180                           ;../../VLCBlib_PIC/event_acknowledge.c: 177:     if ((index<1) || (index>1)) {
 19181   00BE88  0100               	movlb	0	; () banked
 19182   00BE8A  5190               	movf	ackGetDiagnostic@index& (0+255),w,b
 19183   00BE8C  B4D8               	btfsc	status,2,c
 19184   00BE8E  D003               	goto	u20590
 19185                           
 19186                           ; BSR set to: 0
 19187   00BE90  0E01               	movlw	1
 19188   00BE92  6590               	cpfsgt	ackGetDiagnostic@index& (0+255),b
 19189   00BE94  D005               	goto	l19954
 19190   00BE96                     u20590:
 19191                           
 19192                           ; BSR set to: 0
 19193                           ;../../VLCBlib_PIC/event_acknowledge.c: 178:         return ((void*)0);
 19194   00BE96  0E00               	movlw	0
 19195   00BE98  6F8D               	movwf	?_ackGetDiagnostic& (0+255),b
 19196   00BE9A  0E00               	movlw	0
 19197   00BE9C  6F8E               	movwf	(?_ackGetDiagnostic+1)& (0+255),b
 19198   00BE9E  0012               	return	
 19199   00BEA0                     l19954:
 19200                           
 19201                           ; BSR set to: 0
 19202                           ;../../VLCBlib_PIC/event_acknowledge.c: 180:     return &(ackDiagnostics[index-1]);
 19203   00BEA0  5190               	movf	ackGetDiagnostic@index& (0+255),w,b
 19204   00BEA2  0D02               	mullw	2
 19205   00BEA4  50F3               	movf	243,w,c
 19206   00BEA6  0FCF               	addlw	low (_ackDiagnostics+254)
 19207   00BEA8  6F8F               	movwf	??_ackGetDiagnostic& (0+255),b
 19208   00BEAA  C08F  F08D         	movff	??_ackGetDiagnostic,?_ackGetDiagnostic
 19209   00BEAE  6B8E               	clrf	(?_ackGetDiagnostic+1)& (0+255),b
 19210                           
 19211                           ; BSR set to: 0
 19212   00BEB0  0012               	return		;funcret
 19213   00BEB2                     __end_of_ackGetDiagnostic:
 19214                           	callstack 0
 19215                           
 19216 ;; *************** function _consumer2QGetDiagnostic *****************
 19217 ;; Defined at:
 19218 ;;		line 324 in file "../event_consumerDualActionQueue.c"
 19219 ;; Parameters:    Size  Location     Type
 19220 ;;  index           1    wreg     unsigned char 
 19221 ;; Auto vars:     Size  Location     Type
 19222 ;;  index           1   49[BANK0 ] unsigned char 
 19223 ;; Return value:  Size  Location     Type
 19224 ;;                  2   45[BANK0 ] PTR struct DiagnosticVal
 19225 ;; Registers used:
 19226 ;;		wreg, status,2, status,0
 19227 ;; Tracked objects:
 19228 ;;		On entry : 0/0
 19229 ;;		On exit  : 0/0
 19230 ;;		Unchanged: 0/0
 19231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19232 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19233 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19234 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19235 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19236 ;;Total ram usage:        5 bytes
 19237 ;; Hardware stack levels used: 1
 19238 ;; Hardware stack levels required when called: 12
 19239 ;; This function calls:
 19240 ;;		Nothing
 19241 ;; This function is called by:
 19242 ;;		_mnsTRallDiagnosticsCallback
 19243 ;;		_mnsProcessMessage
 19244 ;; This function uses a non-reentrant model
 19245 ;;
 19246                           
 19247                           	psect	text62
 19248   00BC6A                     __ptext62:
 19249                           	callstack 0
 19250   00BC6A                     _consumer2QGetDiagnostic:
 19251                           	callstack 15
 19252                           
 19253                           ; BSR set to: 0
 19254                           ;incstack = 0
 19255                           ;consumer2QGetDiagnostic@index stored from wreg
 19256   00BC6A  0100               	movlb	0	; () banked
 19257   00BC6C  6F91               	movwf	consumer2QGetDiagnostic@index& (0+255),b
 19258                           
 19259                           ;../event_consumerDualActionQueue.c: 325:     if ((index<1) || (index>1)) {
 19260   00BC6E  0100               	movlb	0	; () banked
 19261   00BC70  5191               	movf	consumer2QGetDiagnostic@index& (0+255),w,b
 19262   00BC72  B4D8               	btfsc	status,2,c
 19263   00BC74  D003               	goto	u20000
 19264                           
 19265                           ; BSR set to: 0
 19266   00BC76  0E01               	movlw	1
 19267   00BC78  6591               	cpfsgt	consumer2QGetDiagnostic@index& (0+255),b
 19268   00BC7A  D005               	goto	l19634
 19269   00BC7C                     u20000:
 19270                           
 19271                           ; BSR set to: 0
 19272                           ;../event_consumerDualActionQueue.c: 326:         return ((void*)0);
 19273   00BC7C  0E00               	movlw	0
 19274   00BC7E  6F8D               	movwf	?_consumer2QGetDiagnostic& (0+255),b
 19275   00BC80  0E00               	movlw	0
 19276   00BC82  6F8E               	movwf	(?_consumer2QGetDiagnostic+1)& (0+255),b
 19277   00BC84  0012               	return	
 19278   00BC86                     l19634:
 19279                           
 19280                           ; BSR set to: 0
 19281                           ;../event_consumerDualActionQueue.c: 328:     return &(consumer2QDiagnostics[index-1]);
 19282   00BC86  5191               	movf	consumer2QGetDiagnostic@index& (0+255),w,b
 19283   00BC88  6F8F               	movwf	??_consumer2QGetDiagnostic& (0+255),b
 19284   00BC8A  6B90               	clrf	(??_consumer2QGetDiagnostic+1)& (0+255),b
 19285   00BC8C  90D8               	bcf	status,0,c
 19286   00BC8E  378F               	rlcf	??_consumer2QGetDiagnostic& (0+255),f,b
 19287   00BC90  3790               	rlcf	(??_consumer2QGetDiagnostic+1)& (0+255),f,b
 19288   00BC92  0EB1               	movlw	low (_consumer2QDiagnostics+65534)
 19289   00BC94  258F               	addwf	??_consumer2QGetDiagnostic& (0+255),w,b
 19290   00BC96  6F8D               	movwf	?_consumer2QGetDiagnostic& (0+255),b
 19291   00BC98  0E01               	movlw	high (_consumer2QDiagnostics+65534)
 19292   00BC9A  2190               	addwfc	(??_consumer2QGetDiagnostic+1)& (0+255),w,b
 19293   00BC9C  6F8E               	movwf	(?_consumer2QGetDiagnostic+1)& (0+255),b
 19294                           
 19295                           ; BSR set to: 0
 19296   00BC9E  0012               	return		;funcret
 19297   00BCA0                     __end_of_consumer2QGetDiagnostic:
 19298                           	callstack 0
 19299                           
 19300 ;; *************** function _teachGetDiagnostic *****************
 19301 ;; Defined at:
 19302 ;;		line 461 in file "../../VLCBlib_PIC/event_teach.c"
 19303 ;; Parameters:    Size  Location     Type
 19304 ;;  index           1    wreg     unsigned char 
 19305 ;; Auto vars:     Size  Location     Type
 19306 ;;  index           1   49[BANK0 ] unsigned char 
 19307 ;; Return value:  Size  Location     Type
 19308 ;;                  2   45[BANK0 ] PTR struct DiagnosticVal
 19309 ;; Registers used:
 19310 ;;		wreg, status,2, status,0
 19311 ;; Tracked objects:
 19312 ;;		On entry : 0/0
 19313 ;;		On exit  : 0/0
 19314 ;;		Unchanged: 0/0
 19315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19316 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19317 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19318 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19319 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19320 ;;Total ram usage:        5 bytes
 19321 ;; Hardware stack levels used: 1
 19322 ;; Hardware stack levels required when called: 12
 19323 ;; This function calls:
 19324 ;;		Nothing
 19325 ;; This function is called by:
 19326 ;;		_mnsTRallDiagnosticsCallback
 19327 ;;		_mnsProcessMessage
 19328 ;; This function uses a non-reentrant model
 19329 ;;
 19330                           
 19331                           	psect	text63
 19332   00BCA0                     __ptext63:
 19333                           	callstack 0
 19334   00BCA0                     _teachGetDiagnostic:
 19335                           	callstack 15
 19336                           
 19337                           ; BSR set to: 0
 19338                           ;incstack = 0
 19339                           ;teachGetDiagnostic@index stored from wreg
 19340   00BCA0  0100               	movlb	0	; () banked
 19341   00BCA2  6F91               	movwf	teachGetDiagnostic@index& (0+255),b
 19342                           
 19343                           ;../../VLCBlib_PIC/event_teach.c: 462:     if ((index<1) || (index>1)) {
 19344   00BCA4  0100               	movlb	0	; () banked
 19345   00BCA6  5191               	movf	teachGetDiagnostic@index& (0+255),w,b
 19346   00BCA8  B4D8               	btfsc	status,2,c
 19347   00BCAA  D003               	goto	u20630
 19348                           
 19349                           ; BSR set to: 0
 19350   00BCAC  0E01               	movlw	1
 19351   00BCAE  6591               	cpfsgt	teachGetDiagnostic@index& (0+255),b
 19352   00BCB0  D005               	goto	l19982
 19353   00BCB2                     u20630:
 19354                           
 19355                           ; BSR set to: 0
 19356                           ;../../VLCBlib_PIC/event_teach.c: 463:         return ((void*)0);
 19357   00BCB2  0E00               	movlw	0
 19358   00BCB4  6F8D               	movwf	?_teachGetDiagnostic& (0+255),b
 19359   00BCB6  0E00               	movlw	0
 19360   00BCB8  6F8E               	movwf	(?_teachGetDiagnostic+1)& (0+255),b
 19361   00BCBA  0012               	return	
 19362   00BCBC                     l19982:
 19363                           
 19364                           ; BSR set to: 0
 19365                           ;../../VLCBlib_PIC/event_teach.c: 465:     return &(teachDiagnostics[index-1]);
 19366   00BCBC  5191               	movf	teachGetDiagnostic@index& (0+255),w,b
 19367   00BCBE  6F8F               	movwf	??_teachGetDiagnostic& (0+255),b
 19368   00BCC0  6B90               	clrf	(??_teachGetDiagnostic+1)& (0+255),b
 19369   00BCC2  90D8               	bcf	status,0,c
 19370   00BCC4  378F               	rlcf	??_teachGetDiagnostic& (0+255),f,b
 19371   00BCC6  3790               	rlcf	(??_teachGetDiagnostic+1)& (0+255),f,b
 19372   00BCC8  0EAD               	movlw	low (_teachDiagnostics+65534)
 19373   00BCCA  258F               	addwf	??_teachGetDiagnostic& (0+255),w,b
 19374   00BCCC  6F8D               	movwf	?_teachGetDiagnostic& (0+255),b
 19375   00BCCE  0E01               	movlw	high (_teachDiagnostics+65534)
 19376   00BCD0  2190               	addwfc	(??_teachGetDiagnostic+1)& (0+255),w,b
 19377   00BCD2  6F8E               	movwf	(?_teachGetDiagnostic+1)& (0+255),b
 19378                           
 19379                           ; BSR set to: 0
 19380   00BCD4  0012               	return		;funcret
 19381   00BCD6                     __end_of_teachGetDiagnostic:
 19382                           	callstack 0
 19383                           
 19384 ;; *************** function _startTimedResponse *****************
 19385 ;; Defined at:
 19386 ;;		line 85 in file "../../VLCBlib_PIC/timedResponse.c"
 19387 ;; Parameters:    Size  Location     Type
 19388 ;;  type            1    wreg     unsigned char 
 19389 ;;  serviceIndex    1   49[BANK0 ] unsigned char 
 19390 ;;  callback        2   50[BANK0 ] PTR FTN(unsigned char ,u
 19391 ;;		 -> nvTRnvrdCallback(1), mnsTRserviceDiscoveryCallback(1), mnsTRallDiagnosticsCallback(1), mnsTRrqnpnCallback(1), 
 19392 ;;		 -> reqevCallback(1), nerdCallback(1), 
 19393 ;; Auto vars:     Size  Location     Type
 19394 ;;  type            1   52[BANK0 ] unsigned char 
 19395 ;; Return value:  Size  Location     Type
 19396 ;;                  1    wreg      void 
 19397 ;; Registers used:
 19398 ;;		wreg, status,2, status,0
 19399 ;; Tracked objects:
 19400 ;;		On entry : 0/0
 19401 ;;		On exit  : 0/0
 19402 ;;		Unchanged: 0/0
 19403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19404 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19405 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19407 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19408 ;;Total ram usage:        4 bytes
 19409 ;; Hardware stack levels used: 1
 19410 ;; Hardware stack levels required when called: 12
 19411 ;; This function calls:
 19412 ;;		Nothing
 19413 ;; This function is called by:
 19414 ;;		_doNerd
 19415 ;;		_doReqev
 19416 ;;		_mnsProcessMessage
 19417 ;;		_nvProcessMessage
 19418 ;; This function uses a non-reentrant model
 19419 ;;
 19420                           
 19421                           	psect	text64
 19422   00B9EE                     __ptext64:
 19423                           	callstack 0
 19424   00B9EE                     _startTimedResponse:
 19425                           	callstack 15
 19426                           
 19427                           ; BSR set to: 0
 19428                           ;incstack = 0
 19429                           ;startTimedResponse@type stored from wreg
 19430   00B9EE  0100               	movlb	0	; () banked
 19431   00B9F0  6F94               	movwf	startTimedResponse@type& (0+255),b
 19432                           
 19433                           ;../../VLCBlib_PIC/timedResponse.c: 86:     timedResponseType = type;
 19434   00B9F2  C094  F0BA         	movff	startTimedResponse@type,_timedResponseType
 19435                           
 19436                           ;../../VLCBlib_PIC/timedResponse.c: 87:     if (serviceIndex == 0) {
 19437   00B9F6  0100               	movlb	0	; () banked
 19438   00B9F8  5191               	movf	startTimedResponse@serviceIndex& (0+255),w,b
 19439   00B9FA  A4D8               	btfss	status,2,c
 19440   00B9FC  D004               	goto	l20014
 19441                           
 19442                           ; BSR set to: 0
 19443                           ;../../VLCBlib_PIC/timedResponse.c: 89:         timedResponseAllServicesFlag = 1;
 19444   00B9FE  0E01               	movlw	1
 19445   00BA00  6FBB               	movwf	_timedResponseAllServicesFlag& (0+255),b
 19446                           
 19447                           ;../../VLCBlib_PIC/timedResponse.c: 90:         timedResponseServiceIndex = 0;
 19448   00BA02  0E00               	movlw	0
 19449   00BA04  D00B               	goto	L4
 19450   00BA06                     l20014:
 19451                           
 19452                           ; BSR set to: 0
 19453                           ;../../VLCBlib_PIC/timedResponse.c: 92:         timedResponseAllServicesFlag = 0;
 19454   00BA06  0E00               	movlw	0
 19455   00BA08  6FBB               	movwf	_timedResponseAllServicesFlag& (0+255),b
 19456                           
 19457                           ;../../VLCBlib_PIC/timedResponse.c: 93:         if ((serviceIndex < 1) || (serviceIndex 
      +                          > 9)) {
 19458   00BA0A  5191               	movf	startTimedResponse@serviceIndex& (0+255),w,b
 19459   00BA0C  B4D8               	btfsc	status,2,c
 19460   00BA0E  D003               	goto	u20690
 19461                           
 19462                           ; BSR set to: 0
 19463   00BA10  0E09               	movlw	9
 19464   00BA12  6591               	cpfsgt	startTimedResponse@serviceIndex& (0+255),b
 19465   00BA14  D002               	goto	l20018
 19466   00BA16                     u20690:
 19467                           
 19468                           ; BSR set to: 0
 19469                           ;../../VLCBlib_PIC/timedResponse.c: 95:             timedResponseType = 0xFF;
 19470   00BA16  69BA               	setf	_timedResponseType& (0+255),b
 19471                           
 19472                           ;../../VLCBlib_PIC/timedResponse.c: 96:             return;
 19473   00BA18  0012               	return	
 19474   00BA1A                     l20018:
 19475                           
 19476                           ; BSR set to: 0
 19477                           ;../../VLCBlib_PIC/timedResponse.c: 98:         timedResponseServiceIndex = (uint8_t)ser
      +                          viceIndex-1;
 19478   00BA1A  0591               	decf	startTimedResponse@serviceIndex& (0+255),w,b
 19479   00BA1C                     L4:
 19480   00BA1C  6FBC               	movwf	_timedResponseServiceIndex& (0+255),b
 19481                           
 19482                           ; BSR set to: 0
 19483                           ;../../VLCBlib_PIC/timedResponse.c: 100:     timedResponseStep = 0;
 19484   00BA1E  0E00               	movlw	0
 19485   00BA20  6FB9               	movwf	_timedResponseStep& (0+255),b
 19486                           
 19487                           ; BSR set to: 0
 19488                           ;../../VLCBlib_PIC/timedResponse.c: 101:     timedResponseCallback = callback;
 19489   00BA22  C092  F01D         	movff	startTimedResponse@callback,_timedResponseCallback
 19490   00BA26  C093  F01E         	movff	startTimedResponse@callback+1,_timedResponseCallback+1
 19491                           
 19492                           ; BSR set to: 0
 19493   00BA2A  0012               	return		;funcret
 19494   00BA2C                     __end_of_startTimedResponse:
 19495                           	callstack 0
 19496                           
 19497 ;; *************** function _sendMessage6 *****************
 19498 ;; Defined at:
 19499 ;;		line 1191 in file "../../VLCBlib_PIC/vlcb.c"
 19500 ;; Parameters:    Size  Location     Type
 19501 ;;  opc             1    wreg     enum E12342
 19502 ;;  data1           1    8[BANK1 ] unsigned char 
 19503 ;;  data2           1    9[BANK1 ] unsigned char 
 19504 ;;  data3           1   10[BANK1 ] unsigned char 
 19505 ;;  data4           1   11[BANK1 ] unsigned char 
 19506 ;;  data5           1   12[BANK1 ] unsigned char 
 19507 ;;  data6           1   13[BANK1 ] unsigned char 
 19508 ;; Auto vars:     Size  Location     Type
 19509 ;;  opc             1   69[BANK0 ] enum E12342
 19510 ;; Return value:  Size  Location     Type
 19511 ;;                  1    wreg      void 
 19512 ;; Registers used:
 19513 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 19514 ;; Tracked objects:
 19515 ;;		On entry : 0/0
 19516 ;;		On exit  : 0/0
 19517 ;;		Unchanged: 0/0
 19518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19519 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19520 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19522 ;;      Totals:         0       1       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19523 ;;Total ram usage:        7 bytes
 19524 ;; Hardware stack levels used: 1
 19525 ;; Hardware stack levels required when called: 15
 19526 ;; This function calls:
 19527 ;;		_sendMessage
 19528 ;; This function is called by:
 19529 ;;		_doReqev
 19530 ;;		_reqevCallback
 19531 ;;		_mnsProcessMessage
 19532 ;;		_mnsTRallDiagnosticsCallback
 19533 ;; This function uses a non-reentrant model
 19534 ;;
 19535                           
 19536                           	psect	text65
 19537   00BD66                     __ptext65:
 19538                           	callstack 0
 19539   00BD66                     _sendMessage6:
 19540                           	callstack 12
 19541                           
 19542                           ; BSR set to: 0
 19543                           ;incstack = 0
 19544                           ;sendMessage6@opc stored from wreg
 19545   00BD66  0100               	movlb	0	; () banked
 19546   00BD68  6FA5               	movwf	sendMessage6@opc& (0+255),b
 19547                           
 19548                           ;../../VLCBlib_PIC/vlcb.c: 1192:     sendMessage(opc, 7, data1, data2, data3, data4, dat
      +                          a5, data6,0);
 19549   00BD6A  0E07               	movlw	7
 19550   00BD6C  0101               	movlb	1	; () banked
 19551   00BD6E  6FB5               	movwf	sendMessage@len& (0+255),b
 19552   00BD70  C1BD  F1B6         	movff	sendMessage6@data1,sendMessage@data1
 19553   00BD74  C1BE  F1B7         	movff	sendMessage6@data2,sendMessage@data2
 19554   00BD78  C1BF  F1B8         	movff	sendMessage6@data3,sendMessage@data3
 19555   00BD7C  C1C0  F1B9         	movff	sendMessage6@data4,sendMessage@data4
 19556   00BD80  C1C1  F1BA         	movff	sendMessage6@data5,sendMessage@data5
 19557   00BD84  C1C2  F1BB         	movff	sendMessage6@data6,sendMessage@data6
 19558   00BD88  0E00               	movlw	0
 19559   00BD8A  6FBC               	movwf	sendMessage@data7& (0+255),b
 19560   00BD8C  0100               	movlb	0	; () banked
 19561   00BD8E  51A5               	movf	sendMessage6@opc& (0+255),w,b
 19562   00BD90  EC1F  F054         	call	_sendMessage
 19563   00BD94  0012               	return		;funcret
 19564   00BD96                     __end_of_sendMessage6:
 19565                           	callstack 0
 19566                           
 19567 ;; *************** function _sendMessage3 *****************
 19568 ;; Defined at:
 19569 ;;		line 1152 in file "../../VLCBlib_PIC/vlcb.c"
 19570 ;; Parameters:    Size  Location     Type
 19571 ;;  opc             1    wreg     enum E12342
 19572 ;;  data1           1   69[BANK0 ] unsigned char 
 19573 ;;  data2           1   70[BANK0 ] unsigned char 
 19574 ;;  data3           1   71[BANK0 ] unsigned char 
 19575 ;; Auto vars:     Size  Location     Type
 19576 ;;  opc             1   72[BANK0 ] enum E12342
 19577 ;; Return value:  Size  Location     Type
 19578 ;;                  1    wreg      void 
 19579 ;; Registers used:
 19580 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 19581 ;; Tracked objects:
 19582 ;;		On entry : 0/0
 19583 ;;		On exit  : 0/0
 19584 ;;		Unchanged: 0/0
 19585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19586 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19587 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19589 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19590 ;;Total ram usage:        4 bytes
 19591 ;; Hardware stack levels used: 1
 19592 ;; Hardware stack levels required when called: 15
 19593 ;; This function calls:
 19594 ;;		_sendMessage
 19595 ;; This function is called by:
 19596 ;;		_producerProcessMessage
 19597 ;;		_teachProcessMessage
 19598 ;;		_doNnevn
 19599 ;;		_doNenrd
 19600 ;;		_doRqevn
 19601 ;;		_doEvlrn
 19602 ;;		_doReval
 19603 ;;		_doEvuln
 19604 ;;		_doReqev
 19605 ;;		_mnsProcessMessage
 19606 ;;		_nvProcessMessage
 19607 ;; This function uses a non-reentrant model
 19608 ;;
 19609                           
 19610                           	psect	text66
 19611   00BD96                     __ptext66:
 19612                           	callstack 0
 19613   00BD96                     _sendMessage3:
 19614                           	callstack 13
 19615                           
 19616                           ;incstack = 0
 19617                           ;sendMessage3@opc stored from wreg
 19618   00BD96  0100               	movlb	0	; () banked
 19619   00BD98  6FA8               	movwf	sendMessage3@opc& (0+255),b
 19620                           
 19621                           ;../../VLCBlib_PIC/vlcb.c: 1153:     sendMessage(opc, 4, data1, data2, data3, 0,0,0,0);
 19622   00BD9A  0E04               	movlw	4
 19623   00BD9C  0101               	movlb	1	; () banked
 19624   00BD9E  6FB5               	movwf	sendMessage@len& (0+255),b
 19625   00BDA0  C0A5  F1B6         	movff	sendMessage3@data1,sendMessage@data1
 19626   00BDA4  C0A6  F1B7         	movff	sendMessage3@data2,sendMessage@data2
 19627   00BDA8  C0A7  F1B8         	movff	sendMessage3@data3,sendMessage@data3
 19628   00BDAC  0E00               	movlw	0
 19629   00BDAE  6FB9               	movwf	sendMessage@data4& (0+255),b
 19630   00BDB0  0E00               	movlw	0
 19631   00BDB2  6FBA               	movwf	sendMessage@data5& (0+255),b
 19632   00BDB4  0E00               	movlw	0
 19633   00BDB6  6FBB               	movwf	sendMessage@data6& (0+255),b
 19634   00BDB8  0E00               	movlw	0
 19635   00BDBA  6FBC               	movwf	sendMessage@data7& (0+255),b
 19636   00BDBC  0100               	movlb	0	; () banked
 19637   00BDBE  51A8               	movf	sendMessage3@opc& (0+255),w,b
 19638   00BDC0  EC1F  F054         	call	_sendMessage
 19639   00BDC4  0012               	return		;funcret
 19640   00BDC6                     __end_of_sendMessage3:
 19641                           	callstack 0
 19642                           
 19643 ;; *************** function _getParameter *****************
 19644 ;; Defined at:
 19645 ;;		line 759 in file "../../VLCBlib_PIC/mns.c"
 19646 ;; Parameters:    Size  Location     Type
 19647 ;;  idx             1    wreg     unsigned char 
 19648 ;; Auto vars:     Size  Location     Type
 19649 ;;  idx             1   50[BANK0 ] unsigned char 
 19650 ;;  i               1    0        unsigned char 
 19651 ;; Return value:  Size  Location     Type
 19652 ;;                  1    wreg      unsigned char 
 19653 ;; Registers used:
 19654 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19655 ;; Tracked objects:
 19656 ;;		On entry : 0/0
 19657 ;;		On exit  : 0/0
 19658 ;;		Unchanged: 0/0
 19659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19661 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19663 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19664 ;;Total ram usage:        1 bytes
 19665 ;; Hardware stack levels used: 1
 19666 ;; Hardware stack levels required when called: 14
 19667 ;; This function calls:
 19668 ;;		_getParameterFlags
 19669 ;;		_have
 19670 ;; This function is called by:
 19671 ;;		_mnsProcessMessage
 19672 ;;		_mnsTRrqnpnCallback
 19673 ;; This function uses a non-reentrant model
 19674 ;;
 19675                           
 19676                           	psect	text67
 19677   00864A                     __ptext67:
 19678                           	callstack 0
 19679   00864A                     _getParameter:
 19680                           	callstack 13
 19681                           
 19682                           ;incstack = 0
 19683                           ;getParameter@idx stored from wreg
 19684   00864A  0100               	movlb	0	; () banked
 19685   00864C  6F92               	movwf	getParameter@idx& (0+255),b
 19686                           
 19687                           ;../../VLCBlib_PIC/mns.c: 760:     uint8_t i;;../../VLCBlib_PIC/mns.c: 761:     switch(i
      +                          dx) {
 19688   00864E  D031               	goto	l20180
 19689   008650                     l20092:
 19690                           
 19691                           ; BSR set to: 0
 19692                           ;../../VLCBlib_PIC/mns.c: 763:         return 20;
 19693   008650  0E14               	movlw	20
 19694   008652  0012               	return	
 19695   008654                     l20096:
 19696                           
 19697                           ; BSR set to: 0
 19698                           ;../../VLCBlib_PIC/mns.c: 765:         return MANU_MERG;
 19699   008654  0EA5               	movlw	165
 19700   008656  0012               	return	
 19701   008658                     l20100:
 19702                           
 19703                           ; BSR set to: 0
 19704                           ;../../VLCBlib_PIC/mns.c: 767:         return 'e';
 19705   008658  0E65               	movlw	101
 19706   00865A  0012               	return	
 19707   00865C                     l20104:
 19708                           
 19709                           ; BSR set to: 0
 19710                           ;../../VLCBlib_PIC/mns.c: 769:         return MTYP_CANMIO;
 19711   00865C  0E20               	movlw	32
 19712   00865E  0012               	return	
 19713   008660                     l20108:
 19714                           
 19715                           ; BSR set to: 0
 19716                           ;../../VLCBlib_PIC/mns.c: 771:         return 255;
 19717   008660  0EFF               	movlw	255
 19718   008662  0012               	return	
 19719   008664                     l20116:
 19720                           
 19721                           ; BSR set to: 0
 19722                           ;../../VLCBlib_PIC/mns.c: 775:         return 127;
 19723   008664  0E7F               	movlw	127
 19724   008666  0012               	return	
 19725   008668                     l20120:
 19726                           
 19727                           ; BSR set to: 0
 19728                           ;../../VLCBlib_PIC/mns.c: 777:         return 3;
 19729   008668  0E03               	movlw	3
 19730   00866A  0012               	return	
 19731   00866C                     l20124:
 19732                           
 19733                           ; BSR set to: 0
 19734                           ;../../VLCBlib_PIC/mns.c: 779:         return getParameterFlags();
 19735   00866C  ECEF  F05A         	call	_getParameterFlags	;wreg free
 19736   008670  0012               	return	
 19737   008672                     l20128:
 19738                           
 19739                           ; BSR set to: 0
 19740                           ;../../VLCBlib_PIC/mns.c: 781:         return P18F26K80;
 19741   008672  0E0F               	movlw	15
 19742   008674  0012               	return	
 19743   008676                     l20132:
 19744                           
 19745                           ; BSR set to: 0
 19746                           ;../../VLCBlib_PIC/mns.c: 783:         if (have(SERVICE_ID_CAN)) {
 19747   008676  0E03               	movlw	3
 19748   008678  EC3B  F056         	call	_have
 19749   00867C  0900               	iorlw	0
 19750   00867E  B4D8               	btfsc	status,2,c
 19751   008680  D002               	goto	l20138
 19752   008682                     u20740:
 19753                           
 19754                           ;../../VLCBlib_PIC/mns.c: 784:             return PB_CAN;
 19755   008682  0E01               	movlw	1
 19756   008684  0012               	return	
 19757   008686                     l20138:
 19758                           
 19759                           ;../../VLCBlib_PIC/mns.c: 786:         return 0;
 19760   008686  0E00               	movlw	0
 19761   008688  0012               	return	
 19762   00868A                     l20146:
 19763                           
 19764                           ; BSR set to: 0
 19765                           ;../../VLCBlib_PIC/mns.c: 790:         return 0x08;
 19766   00868A  0E08               	movlw	8
 19767   00868C  0012               	return	
 19768   00868E                     l20158:
 19769                           
 19770                           ; BSR set to: 0
 19771                           ;../../VLCBlib_PIC/mns.c: 802:         return *(const uint8_t*)0x3FFFFE;
 19772   00868E  0EFE               	movlw	254
 19773   008690  6EF6               	movwf	tblptrl,c
 19774   008692                     	if	1	;There is more than 1 active tblptr byte
 19775   008692  0EFF               	movlw	255
 19776   008694  6EF7               	movwf	tblptrh,c
 19777   008696                     	endif
 19778   008696                     	if	1	;There are 3 active tblptr bytes
 19779   008696  0E3F               	movlw	63
 19780   008698  6EF8               	movwf	tblptru,c
 19781   00869A                     	endif
 19782   00869A  0008               	tblrd		*
 19783   00869C  50F5               	movf	tablat,w,c
 19784   00869E  0012               	return	
 19785   0086A0                     l20162:
 19786                           
 19787                           ; BSR set to: 0
 19788                           ;../../VLCBlib_PIC/mns.c: 804:         return *(const uint8_t*)0x3FFFFF;
 19789   0086A0  0EFF               	movlw	255
 19790   0086A2  6EF6               	movwf	tblptrl,c
 19791   0086A4                     	if	1	;There is more than 1 active tblptr byte
 19792   0086A4  0EFF               	movlw	255
 19793   0086A6  6EF7               	movwf	tblptrh,c
 19794   0086A8                     	endif
 19795   0086A8                     	if	1	;There are 3 active tblptr bytes
 19796   0086A8  0E3F               	movlw	63
 19797   0086AA  6EF8               	movwf	tblptru,c
 19798   0086AC                     	endif
 19799   0086AC  0008               	tblrd		*
 19800   0086AE  50F5               	movf	tablat,w,c
 19801   0086B0  0012               	return	
 19802   0086B2                     l20180:
 19803   0086B2  0100               	movlb	0	; () banked
 19804   0086B4  5192               	movf	getParameter@idx& (0+255),w,b
 19805                           
 19806                           ; Switch size 1, requested type "simple"
 19807                           ; Number of cases is 19, Range of values is 0 to 20
 19808                           ; switch strategies available:
 19809                           ; Name         Instructions Cycles
 19810                           ; simple_byte           58    30 (average)
 19811                           ;	Chosen strategy is simple_byte
 19812   0086B6  0A00               	xorlw	0	; case 0
 19813   0086B8  B4D8               	btfsc	status,2,c
 19814   0086BA  D7CA               	goto	l20092
 19815   0086BC  0A01               	xorlw	1	; case 1
 19816   0086BE  B4D8               	btfsc	status,2,c
 19817   0086C0  D7C9               	goto	l20096
 19818   0086C2  0A03               	xorlw	3	; case 2
 19819   0086C4  B4D8               	btfsc	status,2,c
 19820   0086C6  D7C8               	goto	l20100
 19821   0086C8  0A01               	xorlw	1	; case 3
 19822   0086CA  B4D8               	btfsc	status,2,c
 19823   0086CC  D7C7               	goto	l20104
 19824   0086CE  0A07               	xorlw	7	; case 4
 19825   0086D0  B4D8               	btfsc	status,2,c
 19826   0086D2  D7C6               	goto	l20108
 19827   0086D4  0A01               	xorlw	1	; case 5
 19828   0086D6  B4D8               	btfsc	status,2,c
 19829   0086D8  D7BB               	goto	l20092
 19830   0086DA  0A03               	xorlw	3	; case 6
 19831   0086DC  B4D8               	btfsc	status,2,c
 19832   0086DE  D7C2               	goto	l20116
 19833   0086E0  0A01               	xorlw	1	; case 7
 19834   0086E2  B4D8               	btfsc	status,2,c
 19835   0086E4  D7C1               	goto	l20120
 19836   0086E6  0A0F               	xorlw	15	; case 8
 19837   0086E8  B4D8               	btfsc	status,2,c
 19838   0086EA  D7C0               	goto	l20124
 19839   0086EC  0A01               	xorlw	1	; case 9
 19840   0086EE  B4D8               	btfsc	status,2,c
 19841   0086F0  D7C0               	goto	l20128
 19842   0086F2  0A03               	xorlw	3	; case 10
 19843   0086F4  B4D8               	btfsc	status,2,c
 19844   0086F6  D7BF               	goto	l20132
 19845   0086F8  0A01               	xorlw	1	; case 11
 19846   0086FA  B4D8               	btfsc	status,2,c
 19847   0086FC  D7C4               	goto	l20138
 19848   0086FE  0A07               	xorlw	7	; case 12
 19849   008700  B4D8               	btfsc	status,2,c
 19850   008702  D7C3               	goto	l20146
 19851   008704  0A01               	xorlw	1	; case 13
 19852   008706  B4D8               	btfsc	status,2,c
 19853   008708  D7BE               	goto	l20138
 19854   00870A  0A03               	xorlw	3	; case 14
 19855   00870C  B4D8               	btfsc	status,2,c
 19856   00870E  D7BB               	goto	l20138
 19857   008710  0A1F               	xorlw	31	; case 17
 19858   008712  B4D8               	btfsc	status,2,c
 19859   008714  D7BC               	goto	l20158
 19860   008716  0A03               	xorlw	3	; case 18
 19861   008718  B4D8               	btfsc	status,2,c
 19862   00871A  D7C2               	goto	l20162
 19863   00871C  0A01               	xorlw	1	; case 19
 19864   00871E  B4D8               	btfsc	status,2,c
 19865   008720  D7B0               	goto	u20740
 19866   008722  0A07               	xorlw	7	; case 20
 19867   008724  B4D8               	btfsc	status,2,c
 19868   008726  D7A0               	goto	l20120
 19869   008728  D7AE               	goto	l20138
 19870   00872A                     __end_of_getParameter:
 19871                           	callstack 0
 19872                           
 19873 ;; *************** function _getParameterFlags *****************
 19874 ;; Defined at:
 19875 ;;		line 559 in file "../../VLCBlib_PIC/mns.c"
 19876 ;; Parameters:    Size  Location     Type
 19877 ;;		None
 19878 ;; Auto vars:     Size  Location     Type
 19879 ;;  flags           1   49[BANK0 ] unsigned char 
 19880 ;; Return value:  Size  Location     Type
 19881 ;;                  1    wreg      unsigned char 
 19882 ;; Registers used:
 19883 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19884 ;; Tracked objects:
 19885 ;;		On entry : 0/0
 19886 ;;		On exit  : 0/0
 19887 ;;		Unchanged: 0/0
 19888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19890 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19892 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19893 ;;Total ram usage:        1 bytes
 19894 ;; Hardware stack levels used: 1
 19895 ;; Hardware stack levels required when called: 13
 19896 ;; This function calls:
 19897 ;;		_have
 19898 ;; This function is called by:
 19899 ;;		_mnsProcessMessage
 19900 ;;		_getParameter
 19901 ;; This function uses a non-reentrant model
 19902 ;;
 19903                           
 19904                           	psect	text68
 19905   00B5DE                     __ptext68:
 19906                           	callstack 0
 19907   00B5DE                     _getParameterFlags:
 19908                           	callstack 13
 19909                           
 19910                           ;../../VLCBlib_PIC/mns.c: 560:     uint8_t flags;;../../VLCBlib_PIC/mns.c: 561:     flag
      +                          s = 0;
 19911                           
 19912                           ;incstack = 0
 19913   00B5DE  0E00               	movlw	0
 19914   00B5E0  0100               	movlb	0	; () banked
 19915   00B5E2  6F91               	movwf	getParameterFlags@flags& (0+255),b
 19916                           
 19917                           ; BSR set to: 0
 19918                           ;../../VLCBlib_PIC/mns.c: 562:     if (have(SERVICE_ID_CONSUMER)) {
 19919   00B5E4  0E06               	movlw	6
 19920   00B5E6  EC3B  F056         	call	_have
 19921   00B5EA  0900               	iorlw	0
 19922   00B5EC  B4D8               	btfsc	status,2,c
 19923   00B5EE  D002               	goto	l19406
 19924                           
 19925                           ;../../VLCBlib_PIC/mns.c: 563:         flags |= 1;
 19926   00B5F0  0100               	movlb	0	; () banked
 19927   00B5F2  8191               	bsf	getParameterFlags@flags& (0+255),0,b
 19928   00B5F4                     l19406:
 19929                           
 19930                           ;../../VLCBlib_PIC/mns.c: 565:     if (have(SERVICE_ID_PRODUCER)) {
 19931   00B5F4  0E05               	movlw	5
 19932   00B5F6  EC3B  F056         	call	_have
 19933   00B5FA  0900               	iorlw	0
 19934   00B5FC  B4D8               	btfsc	status,2,c
 19935   00B5FE  D002               	goto	l19410
 19936                           
 19937                           ;../../VLCBlib_PIC/mns.c: 566:         flags |= 2;
 19938   00B600  0100               	movlb	0	; () banked
 19939   00B602  8391               	bsf	getParameterFlags@flags& (0+255),1,b
 19940   00B604                     l19410:
 19941                           
 19942                           ;../../VLCBlib_PIC/mns.c: 568:     if (flags == (2 & 1)) flags |= 16;
 19943   00B604  0100               	movlb	0	; () banked
 19944   00B606  5191               	movf	getParameterFlags@flags& (0+255),w,b
 19945   00B608  B4D8               	btfsc	status,2,c
 19946                           
 19947                           ; BSR set to: 0
 19948   00B60A  8991               	bsf	getParameterFlags@flags& (0+255),4,b
 19949                           
 19950                           ; BSR set to: 0
 19951                           ;../../VLCBlib_PIC/mns.c: 569:     if (have(SERVICE_ID_BOOT)) {
 19952   00B60C  0E0A               	movlw	10
 19953   00B60E  EC3B  F056         	call	_have
 19954   00B612  0900               	iorlw	0
 19955   00B614  B4D8               	btfsc	status,2,c
 19956   00B616  D002               	goto	l19418
 19957                           
 19958                           ;../../VLCBlib_PIC/mns.c: 570:         flags |= 8;
 19959   00B618  0100               	movlb	0	; () banked
 19960   00B61A  8791               	bsf	getParameterFlags@flags& (0+255),3,b
 19961   00B61C                     l19418:
 19962                           
 19963                           ;../../VLCBlib_PIC/mns.c: 572:     if (mode_flags & 1) {
 19964   00B61C  0101               	movlb	1	; () banked
 19965   00B61E  A179               	btfss	_mode_flags& (0+255),0,b
 19966   00B620  D002               	goto	l1908
 19967                           
 19968                           ; BSR set to: 1
 19969                           ;../../VLCBlib_PIC/mns.c: 573:         flags |= 32;
 19970   00B622  0100               	movlb	0	; () banked
 19971   00B624  8B91               	bsf	getParameterFlags@flags& (0+255),5,b
 19972   00B626                     l1908:
 19973                           
 19974                           ;../../VLCBlib_PIC/mns.c: 575:     flags |= 64;
 19975   00B626  0100               	movlb	0	; () banked
 19976   00B628  8D91               	bsf	getParameterFlags@flags& (0+255),6,b
 19977                           
 19978                           ; BSR set to: 0
 19979                           ;../../VLCBlib_PIC/mns.c: 576:     return flags;
 19980   00B62A  5191               	movf	getParameterFlags@flags& (0+255),w,b
 19981                           
 19982                           ; BSR set to: 0
 19983   00B62C  0012               	return		;funcret
 19984   00B62E                     __end_of_getParameterFlags:
 19985                           	callstack 0
 19986                           
 19987 ;; *************** function _findServiceIndex *****************
 19988 ;; Defined at:
 19989 ;;		line 822 in file "../../VLCBlib_PIC/vlcb.c"
 19990 ;; Parameters:    Size  Location     Type
 19991 ;;  serviceType     1    wreg     unsigned char 
 19992 ;; Auto vars:     Size  Location     Type
 19993 ;;  serviceType     1   47[BANK0 ] unsigned char 
 19994 ;;  i               1   48[BANK0 ] unsigned char 
 19995 ;; Return value:  Size  Location     Type
 19996 ;;                  1    wreg      unsigned char 
 19997 ;; Registers used:
 19998 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 19999 ;; Tracked objects:
 20000 ;;		On entry : 0/0
 20001 ;;		On exit  : 0/0
 20002 ;;		Unchanged: 0/0
 20003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20005 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20006 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20007 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20008 ;;Total ram usage:        4 bytes
 20009 ;; Hardware stack levels used: 1
 20010 ;; Hardware stack levels required when called: 12
 20011 ;; This function calls:
 20012 ;;		Nothing
 20013 ;; This function is called by:
 20014 ;;		_doNerd
 20015 ;;		_doReqev
 20016 ;;		_mnsProcessMessage
 20017 ;;		_nvProcessMessage
 20018 ;; This function uses a non-reentrant model
 20019 ;;
 20020                           
 20021                           	psect	text69
 20022   00AC04                     __ptext69:
 20023                           	callstack 0
 20024   00AC04                     _findServiceIndex:
 20025                           	callstack 15
 20026                           
 20027                           ; BSR set to: 0
 20028                           ;incstack = 0
 20029                           ;findServiceIndex@serviceType stored from wreg
 20030   00AC04  0100               	movlb	0	; () banked
 20031   00AC06  6F8F               	movwf	findServiceIndex@serviceType& (0+255),b
 20032                           
 20033                           ;../../VLCBlib_PIC/vlcb.c: 823:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 824:     for (i
      +                          =0; i<9; i++) {
 20034   00AC08  0E00               	movlw	0
 20035   00AC0A  0100               	movlb	0	; () banked
 20036   00AC0C  6F90               	movwf	findServiceIndex@i& (0+255),b
 20037   00AC0E                     l19992:
 20038                           
 20039                           ; BSR set to: 0
 20040                           ;../../VLCBlib_PIC/vlcb.c: 825:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == serviceType)) {
 20041   00AC0E  5190               	movf	findServiceIndex@i& (0+255),w,b
 20042   00AC10  0D02               	mullw	2
 20043   00AC12  0E75               	movlw	low _services
 20044   00AC14  24F3               	addwf	243,w,c
 20045   00AC16  6EF6               	movwf	tblptrl,c
 20046   00AC18  0EEE               	movlw	high _services
 20047   00AC1A  20F4               	addwfc	244,w,c
 20048   00AC1C  6EF7               	movwf	tblptrh,c
 20049   00AC1E                     	if	1	;There are 3 active tblptr bytes
 20050   00AC1E  6AF8               	clrf	tblptru,c
 20051   00AC20  0E00               	movlw	low (__mediumconst shr (0+16))
 20052   00AC22  22F8               	addwfc	tblptru,f,c
 20053   00AC24                     	endif
 20054   00AC24  0009               	tblrd		*+
 20055   00AC26  50F5               	movf	tablat,w,c
 20056   00AC28  0009               	tblrd		*+
 20057   00AC2A  10F5               	iorwf	tablat,w,c
 20058   00AC2C  B4D8               	btfsc	status,2,c
 20059   00AC2E  D01D               	goto	l20000
 20060                           
 20061                           ; BSR set to: 0
 20062   00AC30  5190               	movf	findServiceIndex@i& (0+255),w,b
 20063   00AC32  0D02               	mullw	2
 20064   00AC34  0E75               	movlw	low _services
 20065   00AC36  24F3               	addwf	243,w,c
 20066   00AC38  6EF6               	movwf	tblptrl,c
 20067   00AC3A  0EEE               	movlw	high _services
 20068   00AC3C  20F4               	addwfc	244,w,c
 20069   00AC3E  6EF7               	movwf	tblptrh,c
 20070   00AC40                     	if	1	;There are 3 active tblptr bytes
 20071   00AC40  6AF8               	clrf	tblptru,c
 20072   00AC42  0E00               	movlw	low (__mediumconst shr (0+16))
 20073   00AC44  22F8               	addwfc	tblptru,f,c
 20074   00AC46                     	endif
 20075   00AC46  0009               	tblrd		*+
 20076   00AC48  CFF5 F08D          	movff	tablat,??_findServiceIndex
 20077   00AC4C  0009               	tblrd		*+
 20078   00AC4E  CFF5 F08E          	movff	tablat,??_findServiceIndex+1
 20079   00AC52  C08D  FFF6         	movff	??_findServiceIndex,tblptrl
 20080   00AC56  C08E  FFF7         	movff	??_findServiceIndex+1,tblptrh
 20081   00AC5A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20082   00AC5A  6AF8               	clrf	tblptru,c
 20083   00AC5C                     	endif
 20084   00AC5C                     	if	0	;tblptru may be non-zero
 20085   00AC5C                     	endif
 20086   00AC5C  0008               	tblrd		*
 20087   00AC5E  50F5               	movf	tablat,w,c
 20088   00AC60  198F               	xorwf	findServiceIndex@serviceType& (0+255),w,b
 20089   00AC62  A4D8               	btfss	status,2,c
 20090   00AC64  D002               	goto	l20000
 20091                           
 20092                           ; BSR set to: 0
 20093                           ;../../VLCBlib_PIC/vlcb.c: 826:             return i;
 20094   00AC66  5190               	movf	findServiceIndex@i& (0+255),w,b
 20095   00AC68  0012               	return	
 20096   00AC6A                     l20000:
 20097                           
 20098                           ; BSR set to: 0
 20099                           ;../../VLCBlib_PIC/vlcb.c: 828:     }
 20100   00AC6A  2B90               	incf	findServiceIndex@i& (0+255),f,b
 20101                           
 20102                           ; BSR set to: 0
 20103   00AC6C  0E08               	movlw	8
 20104   00AC6E  6590               	cpfsgt	findServiceIndex@i& (0+255),b
 20105   00AC70  D7CE               	goto	l19992
 20106                           
 20107                           ; BSR set to: 0
 20108                           ;../../VLCBlib_PIC/vlcb.c: 829:     return 0xFF;
 20109   00AC72  0EFF               	movlw	255
 20110                           
 20111                           ; BSR set to: 0
 20112   00AC74  0012               	return		;funcret
 20113   00AC76                     __end_of_findServiceIndex:
 20114                           	callstack 0
 20115                           
 20116 ;; *************** function _mnsPoll *****************
 20117 ;; Defined at:
 20118 ;;		line 593 in file "../../VLCBlib_PIC/mns.c"
 20119 ;; Parameters:    Size  Location     Type
 20120 ;;		None
 20121 ;; Auto vars:     Size  Location     Type
 20122 ;;		None
 20123 ;; Return value:  Size  Location     Type
 20124 ;;                  1    wreg      void 
 20125 ;; Registers used:
 20126 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 20127 ;; Tracked objects:
 20128 ;;		On entry : 0/0
 20129 ;;		On exit  : 0/0
 20130 ;;		Unchanged: 0/0
 20131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20134 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20135 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20136 ;;Total ram usage:        4 bytes
 20137 ;; Hardware stack levels used: 1
 20138 ;; Hardware stack levels required when called: 18
 20139 ;; This function calls:
 20140 ;;		_sendMessage2
 20141 ;;		_sendMessage5
 20142 ;;		_setLEDsByMode
 20143 ;;		_tickGet
 20144 ;;		_writeNVM
 20145 ;; This function is called by:
 20146 ;;		_poll
 20147 ;; This function uses a non-reentrant model
 20148 ;;
 20149                           
 20150                           	psect	text70
 20151   004448                     __ptext70:
 20152                           	callstack 0
 20153   004448                     _mnsPoll:
 20154                           	callstack 11
 20155                           
 20156                           ;../../VLCBlib_PIC/mns.c: 595:     if (mode_state == MODE_NORMAL) {
 20157                           
 20158                           ; BSR set to: 0
 20159                           ;incstack = 0
 20160   004448  0100               	movlb	0	; () banked
 20161   00444A  05C1               	decf	_mode_state& (0+255),w,b
 20162   00444C  A4D8               	btfss	status,2,c
 20163   00444E  D040               	goto	l23146
 20164                           
 20165                           ; BSR set to: 0
 20166                           ;../../VLCBlib_PIC/mns.c: 596:         if ((tickGet() - heartbeatTimer.val) > 5*62500) {
 20167   004450  ECC2  F059         	call	_tickGet	;wreg free
 20168   004454  0101               	movlb	1	; () banked
 20169   004456  5160               	movf	_heartbeatTimer& (0+255),w,b
 20170   004458  0100               	movlb	0	; () banked
 20171   00445A  5D8D               	subwf	?_tickGet& (0+255),w,b
 20172   00445C  0101               	movlb	1	; () banked
 20173   00445E  6FC2               	movwf	??_mnsPoll& (0+255),b
 20174   004460  5161               	movf	(_heartbeatTimer+1)& (0+255),w,b
 20175   004462  0100               	movlb	0	; () banked
 20176   004464  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 20177   004466  0101               	movlb	1	; () banked
 20178   004468  6FC3               	movwf	(??_mnsPoll+1)& (0+255),b
 20179   00446A  5162               	movf	(_heartbeatTimer+2)& (0+255),w,b
 20180   00446C  0100               	movlb	0	; () banked
 20181   00446E  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 20182   004470  0101               	movlb	1	; () banked
 20183   004472  6FC4               	movwf	(??_mnsPoll+2)& (0+255),b
 20184   004474  5163               	movf	(_heartbeatTimer+3)& (0+255),w,b
 20185   004476  0100               	movlb	0	; () banked
 20186   004478  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 20187   00447A  0101               	movlb	1	; () banked
 20188   00447C  6FC5               	movwf	(??_mnsPoll+3)& (0+255),b
 20189   00447E  51C5               	movf	(??_mnsPoll+3)& (0+255),w,b
 20190   004480  E108               	bnz	u24970
 20191   004482  0EB5               	movlw	181
 20192   004484  5DC2               	subwf	??_mnsPoll& (0+255),w,b
 20193   004486  0EC4               	movlw	196
 20194   004488  59C3               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 20195   00448A  0E04               	movlw	4
 20196   00448C  59C4               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 20197   00448E  A0D8               	btfss	status,0,c
 20198   004490  D01F               	goto	l23146
 20199   004492                     u24970:
 20200                           
 20201                           ; BSR set to: 1
 20202                           ;../../VLCBlib_PIC/mns.c: 597:             if (mode_flags & 4) {
 20203   004492  A579               	btfss	_mode_flags& (0+255),2,b
 20204   004494  D00F               	goto	l23140
 20205                           
 20206                           ; BSR set to: 1
 20207                           ;../../VLCBlib_PIC/mns.c: 598:                 sendMessage5(OPC_HEARTB, nn.bytes.hi,nn.b
      +                          ytes.lo,heartbeatSequence++,mnsDiagnostics[0x00].asBytes.lo,0);
 20208   004496  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 20209   00449A  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 20210   00449E  C0BD  F1BF         	movff	_heartbeatSequence,sendMessage5@data3
 20211   0044A2  C19A  F1C0         	movff	_mnsDiagnostics,sendMessage5@data4
 20212   0044A6  0E00               	movlw	0
 20213   0044A8  6FC1               	movwf	sendMessage5@data5& (0+255),b
 20214   0044AA  0EAB               	movlw	171
 20215   0044AC  EC13  F05F         	call	_sendMessage5
 20216   0044B0  0100               	movlb	0	; () banked
 20217   0044B2  2BBD               	incf	_heartbeatSequence& (0+255),f,b
 20218   0044B4                     l23140:
 20219                           
 20220                           ;../../VLCBlib_PIC/mns.c: 600:             heartbeatTimer.val = tickGet();
 20221   0044B4  ECC2  F059         	call	_tickGet	;wreg free
 20222   0044B8  C08D  F160         	movff	?_tickGet,_heartbeatTimer
 20223   0044BC  C08E  F161         	movff	?_tickGet+1,_heartbeatTimer+1
 20224   0044C0  C08F  F162         	movff	?_tickGet+2,_heartbeatTimer+2
 20225   0044C4  C090  F163         	movff	?_tickGet+3,_heartbeatTimer+3
 20226                           
 20227                           ;../../VLCBlib_PIC/mns.c: 601:             if (mnsDiagnostics[0x00].asBytes.lo > 0) {
 20228   0044C8  0101               	movlb	1	; () banked
 20229   0044CA  519A               	movf	_mnsDiagnostics& (0+255),w,b
 20230   0044CC  A4D8               	btfss	status,2,c
 20231                           
 20232                           ; BSR set to: 1
 20233                           ;../../VLCBlib_PIC/mns.c: 602:                 mnsDiagnostics[0x00].asBytes.lo--;
 20234   0044CE  079A               	decf	_mnsDiagnostics& (0+255),f,b
 20235   0044D0                     l23146:
 20236                           
 20237                           ;../../VLCBlib_PIC/mns.c: 608:     if (mode_flags != last_mode_flags) {
 20238   0044D0  0100               	movlb	0	; () banked
 20239   0044D2  51BF               	movf	_last_mode_flags& (0+255),w,b
 20240   0044D4  0101               	movlb	1	; () banked
 20241   0044D6  1979               	xorwf	_mode_flags& (0+255),w,b
 20242   0044D8  B4D8               	btfsc	status,2,c
 20243   0044DA  D00E               	goto	l23152
 20244                           
 20245                           ; BSR set to: 1
 20246                           ;../../VLCBlib_PIC/mns.c: 609:         writeNVM(EEPROM_NVM_TYPE, 0x3FA, mode_flags);
 20247   0044DC  0EFA               	movlw	250
 20248   0044DE  0100               	movlb	0	; () banked
 20249   0044E0  6FA4               	movwf	writeNVM@index& (0+255),b
 20250   0044E2  0E03               	movlw	3
 20251   0044E4  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 20252   0044E6  0E00               	movlw	0
 20253   0044E8  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 20254   0044EA  C179  F0A7         	movff	_mode_flags,writeNVM@value
 20255   0044EE  0E00               	movlw	0
 20256   0044F0  EC66  F05B         	call	_writeNVM
 20257                           
 20258                           ;../../VLCBlib_PIC/mns.c: 610:         last_mode_flags = mode_flags;
 20259   0044F4  C179  F0BF         	movff	_mode_flags,_last_mode_flags
 20260   0044F8                     l23152:
 20261                           
 20262                           ;../../VLCBlib_PIC/mns.c: 612:     if (mode_state != last_mode_state) {
 20263   0044F8  0100               	movlb	0	; () banked
 20264   0044FA  51C0               	movf	_last_mode_state& (0+255),w,b
 20265   0044FC  19C1               	xorwf	_mode_state& (0+255),w,b
 20266   0044FE  B4D8               	btfsc	status,2,c
 20267   004500  D00D               	goto	l23158
 20268                           
 20269                           ; BSR set to: 0
 20270                           ;../../VLCBlib_PIC/mns.c: 613:         writeNVM(EEPROM_NVM_TYPE, 0x3FB, mode_state);
 20271   004502  0EFB               	movlw	251
 20272   004504  6FA4               	movwf	writeNVM@index& (0+255),b
 20273   004506  0E03               	movlw	3
 20274   004508  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 20275   00450A  0E00               	movlw	0
 20276   00450C  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 20277   00450E  C0C1  F0A7         	movff	_mode_state,writeNVM@value
 20278   004512  0E00               	movlw	0
 20279   004514  EC66  F05B         	call	_writeNVM
 20280                           
 20281                           ;../../VLCBlib_PIC/mns.c: 614:         last_mode_state = mode_state;
 20282   004518  C0C1  F0C0         	movff	_mode_state,_last_mode_state
 20283   00451C                     l23158:
 20284                           
 20285                           ;../../VLCBlib_PIC/mns.c: 618:     if ((tickGet() - uptimeTimer.val) > 62500) {
 20286   00451C  ECC2  F059         	call	_tickGet	;wreg free
 20287   004520  0101               	movlb	1	; () banked
 20288   004522  515C               	movf	_uptimeTimer& (0+255),w,b
 20289   004524  0100               	movlb	0	; () banked
 20290   004526  5D8D               	subwf	?_tickGet& (0+255),w,b
 20291   004528  0101               	movlb	1	; () banked
 20292   00452A  6FC2               	movwf	??_mnsPoll& (0+255),b
 20293   00452C  515D               	movf	(_uptimeTimer+1)& (0+255),w,b
 20294   00452E  0100               	movlb	0	; () banked
 20295   004530  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 20296   004532  0101               	movlb	1	; () banked
 20297   004534  6FC3               	movwf	(??_mnsPoll+1)& (0+255),b
 20298   004536  515E               	movf	(_uptimeTimer+2)& (0+255),w,b
 20299   004538  0100               	movlb	0	; () banked
 20300   00453A  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 20301   00453C  0101               	movlb	1	; () banked
 20302   00453E  6FC4               	movwf	(??_mnsPoll+2)& (0+255),b
 20303   004540  515F               	movf	(_uptimeTimer+3)& (0+255),w,b
 20304   004542  0100               	movlb	0	; () banked
 20305   004544  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 20306   004546  0101               	movlb	1	; () banked
 20307   004548  6FC5               	movwf	(??_mnsPoll+3)& (0+255),b
 20308   00454A  51C5               	movf	(??_mnsPoll+3)& (0+255),w,b
 20309   00454C  11C4               	iorwf	(??_mnsPoll+2)& (0+255),w,b
 20310   00454E  E106               	bnz	u25020
 20311   004550  0E25               	movlw	37
 20312   004552  5DC2               	subwf	??_mnsPoll& (0+255),w,b
 20313   004554  0EF4               	movlw	244
 20314   004556  59C3               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 20315   004558  A0D8               	btfss	status,0,c
 20316   00455A  D013               	goto	l23168
 20317   00455C                     u25020:
 20318                           
 20319                           ; BSR set to: 1
 20320                           ;../../VLCBlib_PIC/mns.c: 619:         uptimeTimer.val = tickGet();
 20321   00455C  ECC2  F059         	call	_tickGet	;wreg free
 20322   004560  C08D  F15C         	movff	?_tickGet,_uptimeTimer
 20323   004564  C08E  F15D         	movff	?_tickGet+1,_uptimeTimer+1
 20324   004568  C08F  F15E         	movff	?_tickGet+2,_uptimeTimer+2
 20325   00456C  C090  F15F         	movff	?_tickGet+3,_uptimeTimer+3
 20326                           
 20327                           ;../../VLCBlib_PIC/mns.c: 620:         mnsDiagnostics[0x02].asUint++;
 20328   004570  0101               	movlb	1	; () banked
 20329   004572  4B9E               	infsnz	(_mnsDiagnostics+4)& (0+255),f,b
 20330   004574  2B9F               	incf	(_mnsDiagnostics+5)& (0+255),f,b
 20331                           
 20332                           ; BSR set to: 1
 20333                           ;../../VLCBlib_PIC/mns.c: 621:         if (mnsDiagnostics[0x02].asUint == 0) {
 20334   004576  519E               	movf	(_mnsDiagnostics+4)& (0+255),w,b
 20335   004578  119F               	iorwf	(_mnsDiagnostics+5)& (0+255),w,b
 20336   00457A  A4D8               	btfss	status,2,c
 20337   00457C  D002               	goto	l23168
 20338                           
 20339                           ; BSR set to: 1
 20340                           ;../../VLCBlib_PIC/mns.c: 622:             mnsDiagnostics[0x01].asUint++;
 20341   00457E  4B9C               	infsnz	(_mnsDiagnostics+2)& (0+255),f,b
 20342   004580  2B9D               	incf	(_mnsDiagnostics+3)& (0+255),f,b
 20343   004582                     l23168:
 20344                           
 20345                           ; BSR set to: 1
 20346                           ;../../VLCBlib_PIC/mns.c: 626:     setLEDsByMode();
 20347   004582  ECB4  F05F         	call	_setLEDsByMode	;wreg free
 20348                           
 20349                           ;../../VLCBlib_PIC/mns.c: 629:     switch(mode_state) {
 20350   004586  D0ED               	goto	l23218
 20351   004588                     l1925:
 20352                           
 20353                           ; BSR set to: 0
 20354                           ;../../VLCBlib_PIC/mns.c: 632:             if ((!(PORTAbits.RA2)) == 0) {
 20355   004588  A480               	btfss	128,2,c	;volatile
 20356   00458A  D00B               	goto	l23172
 20357   00458C                     u25040:
 20358                           
 20359                           ;../../VLCBlib_PIC/mns.c: 634:                 pbTimer.val = tickGet();
 20360   00458C  ECC2  F059         	call	_tickGet	;wreg free
 20361   004590  C08D  F0A9         	movff	?_tickGet,_pbTimer
 20362   004594  C08E  F0AA         	movff	?_tickGet+1,_pbTimer+1
 20363   004598  C08F  F0AB         	movff	?_tickGet+2,_pbTimer+2
 20364   00459C  C090  F0AC         	movff	?_tickGet+3,_pbTimer+3
 20365                           
 20366                           ;../../VLCBlib_PIC/mns.c: 635:             } else {
 20367   0045A0  0012               	return	
 20368   0045A2                     l23172:
 20369                           
 20370                           ; BSR set to: 0
 20371                           ;../../VLCBlib_PIC/mns.c: 637:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 20372   0045A2  ECC2  F059         	call	_tickGet	;wreg free
 20373   0045A6  0100               	movlb	0	; () banked
 20374   0045A8  51A9               	movf	_pbTimer& (0+255),w,b
 20375   0045AA  5D8D               	subwf	?_tickGet& (0+255),w,b
 20376   0045AC  0101               	movlb	1	; () banked
 20377   0045AE  6FC2               	movwf	??_mnsPoll& (0+255),b
 20378   0045B0  0100               	movlb	0	; () banked
 20379   0045B2  51AA               	movf	(_pbTimer+1)& (0+255),w,b
 20380   0045B4  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 20381   0045B6  0101               	movlb	1	; () banked
 20382   0045B8  6FC3               	movwf	(??_mnsPoll+1)& (0+255),b
 20383   0045BA  0100               	movlb	0	; () banked
 20384   0045BC  51AB               	movf	(_pbTimer+2)& (0+255),w,b
 20385   0045BE  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 20386   0045C0  0101               	movlb	1	; () banked
 20387   0045C2  6FC4               	movwf	(??_mnsPoll+2)& (0+255),b
 20388   0045C4  0100               	movlb	0	; () banked
 20389   0045C6  51AC               	movf	(_pbTimer+3)& (0+255),w,b
 20390   0045C8  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 20391   0045CA  0101               	movlb	1	; () banked
 20392   0045CC  6FC5               	movwf	(??_mnsPoll+3)& (0+255),b
 20393   0045CE  51C5               	movf	(??_mnsPoll+3)& (0+255),w,b
 20394   0045D0  E108               	bnz	u25050
 20395   0045D2  0E91               	movlw	145
 20396   0045D4  5DC2               	subwf	??_mnsPoll& (0+255),w,b
 20397   0045D6  0ED0               	movlw	208
 20398   0045D8  59C3               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 20399   0045DA  0E03               	movlw	3
 20400   0045DC  59C4               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 20401   0045DE  A0D8               	btfss	status,0,c
 20402   0045E0  0012               	return	
 20403   0045E2                     u25050:
 20404                           
 20405                           ; BSR set to: 1
 20406                           ;../../VLCBlib_PIC/mns.c: 639:                     mode_state = MODE_SETUP;
 20407   0045E2  0E00               	movlw	0
 20408   0045E4  0100               	movlb	0	; () banked
 20409   0045E6  6FC1               	movwf	_mode_state& (0+255),b
 20410                           
 20411                           ; BSR set to: 0
 20412                           ;../../VLCBlib_PIC/mns.c: 640:                     setupModePreviousMode = MODE_UNINITIA
      +                          LISED;
 20413   0045E8  69BE               	setf	_setupModePreviousMode& (0+255),b
 20414                           
 20415                           ; BSR set to: 0
 20416                           ;../../VLCBlib_PIC/mns.c: 641:                     pbTimer.val = tickGet();
 20417   0045EA  ECC2  F059         	call	_tickGet	;wreg free
 20418   0045EE  C08D  F0A9         	movff	?_tickGet,_pbTimer
 20419   0045F2  C08E  F0AA         	movff	?_tickGet+1,_pbTimer+1
 20420   0045F6  C08F  F0AB         	movff	?_tickGet+2,_pbTimer+2
 20421   0045FA  C090  F0AC         	movff	?_tickGet+3,_pbTimer+3
 20422                           
 20423                           ;../../VLCBlib_PIC/mns.c: 643:                     sendMessage2(OPC_RQNN, nn.bytes.hi, n
      +                          n.bytes.lo);
 20424   0045FE  C0B4  F0A5         	movff	_nn+1,sendMessage2@data1
 20425   004602  C0B3  F0A6         	movff	_nn,sendMessage2@data2
 20426   004606  0E50               	movlw	80
 20427   004608  ECE3  F05E         	call	_sendMessage2
 20428   00460C  0012               	return	
 20429   00460E                     l1930:
 20430                           
 20431                           ; BSR set to: 0
 20432                           ;../../VLCBlib_PIC/mns.c: 661:             if ((!(PORTAbits.RA2)) == 0) {
 20433   00460E  A480               	btfss	128,2,c	;volatile
 20434   004610  0012               	return	
 20435                           
 20436                           ; BSR set to: 0
 20437                           ;../../VLCBlib_PIC/mns.c: 664:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 20438   004612  ECC2  F059         	call	_tickGet	;wreg free
 20439   004616  0100               	movlb	0	; () banked
 20440   004618  51A9               	movf	_pbTimer& (0+255),w,b
 20441   00461A  5D8D               	subwf	?_tickGet& (0+255),w,b
 20442   00461C  0101               	movlb	1	; () banked
 20443   00461E  6FC2               	movwf	??_mnsPoll& (0+255),b
 20444   004620  0100               	movlb	0	; () banked
 20445   004622  51AA               	movf	(_pbTimer+1)& (0+255),w,b
 20446   004624  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 20447   004626  0101               	movlb	1	; () banked
 20448   004628  6FC3               	movwf	(??_mnsPoll+1)& (0+255),b
 20449   00462A  0100               	movlb	0	; () banked
 20450   00462C  51AB               	movf	(_pbTimer+2)& (0+255),w,b
 20451   00462E  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 20452   004630  0101               	movlb	1	; () banked
 20453   004632  6FC4               	movwf	(??_mnsPoll+2)& (0+255),b
 20454   004634  0100               	movlb	0	; () banked
 20455   004636  51AC               	movf	(_pbTimer+3)& (0+255),w,b
 20456   004638  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 20457   00463A  0101               	movlb	1	; () banked
 20458   00463C  6FC5               	movwf	(??_mnsPoll+3)& (0+255),b
 20459   00463E  51C5               	movf	(??_mnsPoll+3)& (0+255),w,b
 20460   004640  E108               	bnz	u25070
 20461   004642  0E91               	movlw	145
 20462   004644  5DC2               	subwf	??_mnsPoll& (0+255),w,b
 20463   004646  0ED0               	movlw	208
 20464   004648  59C3               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 20465   00464A  0E03               	movlw	3
 20466   00464C  59C4               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 20467   00464E  A0D8               	btfss	status,0,c
 20468   004650  D015               	goto	l23194
 20469   004652                     u25070:
 20470                           
 20471                           ; BSR set to: 1
 20472                           ;../../VLCBlib_PIC/mns.c: 667:                     mode_state = setupModePreviousMode;
 20473   004652  C0BE  F0C1         	movff	_setupModePreviousMode,_mode_state
 20474                           
 20475                           ; BSR set to: 1
 20476                           ;../../VLCBlib_PIC/mns.c: 668:                     if (mode_state == MODE_NORMAL) {
 20477   004656  0100               	movlb	0	; () banked
 20478   004658  05C1               	decf	_mode_state& (0+255),w,b
 20479   00465A  A4D8               	btfss	status,2,c
 20480   00465C  D797               	goto	u25040
 20481                           
 20482                           ; BSR set to: 0
 20483                           ;../../VLCBlib_PIC/mns.c: 669:                         nn.word = previousNN.word;
 20484   00465E  C174  F0B3         	movff	_previousNN,_nn
 20485   004662  C175  F0B4         	movff	_previousNN+1,_nn+1
 20486                           
 20487                           ; BSR set to: 0
 20488                           ;../../VLCBlib_PIC/mns.c: 670:                         sendMessage2(OPC_NNACK, nn.bytes.
      +                          hi, nn.bytes.lo);
 20489   004666  C0B4  F0A5         	movff	_nn+1,sendMessage2@data1
 20490   00466A  C0B3  F0A6         	movff	_nn,sendMessage2@data2
 20491   00466E  0E52               	movlw	82
 20492   004670  ECE3  F05E         	call	_sendMessage2
 20493                           
 20494                           ;../../VLCBlib_PIC/mns.c: 671:                         mnsDiagnostics[0x04].asUint++;
 20495   004674  0101               	movlb	1	; () banked
 20496   004676  4BA2               	infsnz	(_mnsDiagnostics+8)& (0+255),f,b
 20497   004678  2BA3               	incf	(_mnsDiagnostics+9)& (0+255),f,b
 20498   00467A  D788               	goto	u25040
 20499   00467C                     l23194:
 20500                           
 20501                           ; BSR set to: 1
 20502   00467C  ECC2  F059         	call	_tickGet	;wreg free
 20503   004680  0100               	movlb	0	; () banked
 20504   004682  51A9               	movf	_pbTimer& (0+255),w,b
 20505   004684  5D8D               	subwf	?_tickGet& (0+255),w,b
 20506   004686  0101               	movlb	1	; () banked
 20507   004688  6FC2               	movwf	??_mnsPoll& (0+255),b
 20508   00468A  0100               	movlb	0	; () banked
 20509   00468C  51AA               	movf	(_pbTimer+1)& (0+255),w,b
 20510   00468E  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 20511   004690  0101               	movlb	1	; () banked
 20512   004692  6FC3               	movwf	(??_mnsPoll+1)& (0+255),b
 20513   004694  0100               	movlb	0	; () banked
 20514   004696  51AB               	movf	(_pbTimer+2)& (0+255),w,b
 20515   004698  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 20516   00469A  0101               	movlb	1	; () banked
 20517   00469C  6FC4               	movwf	(??_mnsPoll+2)& (0+255),b
 20518   00469E  0100               	movlb	0	; () banked
 20519   0046A0  51AC               	movf	(_pbTimer+3)& (0+255),w,b
 20520   0046A2  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 20521   0046A4  0101               	movlb	1	; () banked
 20522   0046A6  6FC5               	movwf	(??_mnsPoll+3)& (0+255),b
 20523   0046A8  51C5               	movf	(??_mnsPoll+3)& (0+255),w,b
 20524   0046AA  11C4               	iorwf	(??_mnsPoll+2)& (0+255),w,b
 20525   0046AC  E106               	bnz	u25090
 20526   0046AE  0E25               	movlw	37
 20527   0046B0  5DC2               	subwf	??_mnsPoll& (0+255),w,b
 20528   0046B2  0EF4               	movlw	244
 20529   0046B4  59C3               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 20530   0046B6  A0D8               	btfss	status,0,c
 20531   0046B8  D769               	goto	u25040
 20532   0046BA                     u25090:
 20533                           
 20534                           ; BSR set to: 1
 20535                           ;../../VLCBlib_PIC/mns.c: 675:                     if (nn.word != 0) {
 20536   0046BA  0100               	movlb	0	; () banked
 20537   0046BC  51B3               	movf	_nn& (0+255),w,b
 20538   0046BE  11B4               	iorwf	(_nn+1)& (0+255),w,b
 20539   0046C0  B4D8               	btfsc	status,2,c
 20540   0046C2  D007               	goto	l23200
 20541                           
 20542                           ; BSR set to: 0
 20543                           ;../../VLCBlib_PIC/mns.c: 676:                         sendMessage2(OPC_NNREL, nn.bytes.
      +                          hi, nn.bytes.lo);
 20544   0046C4  C0B4  F0A5         	movff	_nn+1,sendMessage2@data1
 20545   0046C8  C0B3  F0A6         	movff	_nn,sendMessage2@data2
 20546   0046CC  0E51               	movlw	81
 20547   0046CE  ECE3  F05E         	call	_sendMessage2
 20548   0046D2                     l23200:
 20549                           
 20550                           ;../../VLCBlib_PIC/mns.c: 678:                     nn.word = 0;
 20551   0046D2  0E00               	movlw	0
 20552   0046D4  0100               	movlb	0	; () banked
 20553   0046D6  6FB4               	movwf	(_nn+1)& (0+255),b
 20554   0046D8  0E00               	movlw	0
 20555   0046DA  6FB3               	movwf	_nn& (0+255),b
 20556                           
 20557                           ; BSR set to: 0
 20558                           ;../../VLCBlib_PIC/mns.c: 679:                     mode_state = MODE_UNINITIALISED;
 20559   0046DC  69C1               	setf	_mode_state& (0+255),b
 20560   0046DE  D756               	goto	u25040
 20561   0046E0                     l1937:
 20562                           
 20563                           ; BSR set to: 0
 20564                           ;../../VLCBlib_PIC/mns.c: 686:             if ((!(PORTAbits.RA2)) == 0) {
 20565   0046E0  A480               	btfss	128,2,c	;volatile
 20566   0046E2  0012               	return	
 20567                           
 20568                           ; BSR set to: 0
 20569                           ;../../VLCBlib_PIC/mns.c: 688:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 20570   0046E4  ECC2  F059         	call	_tickGet	;wreg free
 20571   0046E8  0100               	movlb	0	; () banked
 20572   0046EA  51A9               	movf	_pbTimer& (0+255),w,b
 20573   0046EC  5D8D               	subwf	?_tickGet& (0+255),w,b
 20574   0046EE  0101               	movlb	1	; () banked
 20575   0046F0  6FC2               	movwf	??_mnsPoll& (0+255),b
 20576   0046F2  0100               	movlb	0	; () banked
 20577   0046F4  51AA               	movf	(_pbTimer+1)& (0+255),w,b
 20578   0046F6  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 20579   0046F8  0101               	movlb	1	; () banked
 20580   0046FA  6FC3               	movwf	(??_mnsPoll+1)& (0+255),b
 20581   0046FC  0100               	movlb	0	; () banked
 20582   0046FE  51AB               	movf	(_pbTimer+2)& (0+255),w,b
 20583   004700  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 20584   004702  0101               	movlb	1	; () banked
 20585   004704  6FC4               	movwf	(??_mnsPoll+2)& (0+255),b
 20586   004706  0100               	movlb	0	; () banked
 20587   004708  51AC               	movf	(_pbTimer+3)& (0+255),w,b
 20588   00470A  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 20589   00470C  0101               	movlb	1	; () banked
 20590   00470E  6FC5               	movwf	(??_mnsPoll+3)& (0+255),b
 20591   004710  51C5               	movf	(??_mnsPoll+3)& (0+255),w,b
 20592   004712  E108               	bnz	u25120
 20593   004714  0E91               	movlw	145
 20594   004716  5DC2               	subwf	??_mnsPoll& (0+255),w,b
 20595   004718  0ED0               	movlw	208
 20596   00471A  59C3               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 20597   00471C  0E03               	movlw	3
 20598   00471E  59C4               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 20599   004720  A0D8               	btfss	status,0,c
 20600   004722  D734               	goto	u25040
 20601   004724                     u25120:
 20602                           
 20603                           ; BSR set to: 1
 20604                           ;../../VLCBlib_PIC/mns.c: 691:                     previousNN.word = nn.word;
 20605   004724  C0B3  F174         	movff	_nn,_previousNN
 20606   004728  C0B4  F175         	movff	_nn+1,_previousNN+1
 20607                           
 20608                           ; BSR set to: 1
 20609                           ;../../VLCBlib_PIC/mns.c: 692:                     nn.bytes.lo = nn.bytes.hi = 0;
 20610   00472C  0E00               	movlw	0
 20611   00472E  0100               	movlb	0	; () banked
 20612   004730  6FB4               	movwf	(_nn+1)& (0+255),b
 20613   004732  C0B4  F0B3         	movff	_nn+1,_nn
 20614                           
 20615                           ;../../VLCBlib_PIC/mns.c: 694:                     mode_state = MODE_SETUP;
 20616   004736  0E00               	movlw	0
 20617   004738  6FC1               	movwf	_mode_state& (0+255),b
 20618                           
 20619                           ;../../VLCBlib_PIC/mns.c: 695:                     setupModePreviousMode = MODE_NORMAL;
 20620   00473A  0E01               	movlw	1
 20621   00473C  6FBE               	movwf	_setupModePreviousMode& (0+255),b
 20622                           
 20623                           ; BSR set to: 0
 20624                           ;../../VLCBlib_PIC/mns.c: 696:                     pbTimer.val = tickGet();
 20625   00473E  ECC2  F059         	call	_tickGet	;wreg free
 20626   004742  C08D  F0A9         	movff	?_tickGet,_pbTimer
 20627   004746  C08E  F0AA         	movff	?_tickGet+1,_pbTimer+1
 20628   00474A  C08F  F0AB         	movff	?_tickGet+2,_pbTimer+2
 20629   00474E  C090  F0AC         	movff	?_tickGet+3,_pbTimer+3
 20630                           
 20631                           ;../../VLCBlib_PIC/mns.c: 698:                     sendMessage2(OPC_RQNN, previousNN.byt
      +                          es.hi, previousNN.bytes.lo);
 20632   004752  C175  F0A5         	movff	_previousNN+1,sendMessage2@data1
 20633   004756  C174  F0A6         	movff	_previousNN,sendMessage2@data2
 20634   00475A  0E50               	movlw	80
 20635   00475C  ECE3  F05E         	call	_sendMessage2
 20636   004760  D715               	goto	u25040
 20637   004762                     l23218:
 20638   004762  0100               	movlb	0	; () banked
 20639   004764  51C1               	movf	_mode_state& (0+255),w,b
 20640                           
 20641                           ; Switch size 1, requested type "simple"
 20642                           ; Number of cases is 2, Range of values is 0 to 255
 20643                           ; switch strategies available:
 20644                           ; Name         Instructions Cycles
 20645                           ; simple_byte            7     4 (average)
 20646                           ;	Chosen strategy is simple_byte
 20647   004766  0A00               	xorlw	0	; case 0
 20648   004768  B4D8               	btfsc	status,2,c
 20649   00476A  D751               	goto	l1930
 20650   00476C  0AFF               	xorlw	255	; case 255
 20651   00476E  B4D8               	btfsc	status,2,c
 20652   004770  D70B               	goto	l1925
 20653   004772  D7B6               	goto	l1937
 20654   004774                     __end_of_mnsPoll:
 20655                           	callstack 0
 20656                           
 20657 ;; *************** function _setLEDsByMode *****************
 20658 ;; Defined at:
 20659 ;;		line 740 in file "../../VLCBlib_PIC/mns.c"
 20660 ;; Parameters:    Size  Location     Type
 20661 ;;		None
 20662 ;; Auto vars:     Size  Location     Type
 20663 ;;		None
 20664 ;; Return value:  Size  Location     Type
 20665 ;;                  1    wreg      void 
 20666 ;; Registers used:
 20667 ;;		wreg, status,2, status,0, cstack
 20668 ;; Tracked objects:
 20669 ;;		On entry : 0/0
 20670 ;;		On exit  : 0/0
 20671 ;;		Unchanged: 0/0
 20672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20677 ;;Total ram usage:        0 bytes
 20678 ;; Hardware stack levels used: 1
 20679 ;; Hardware stack levels required when called: 13
 20680 ;; This function calls:
 20681 ;;		_showStatus
 20682 ;; This function is called by:
 20683 ;;		_mnsPowerUp
 20684 ;;		_mnsProcessMessage
 20685 ;;		_mnsPoll
 20686 ;; This function uses a non-reentrant model
 20687 ;;
 20688                           
 20689                           	psect	text71
 20690   00BF68                     __ptext71:
 20691                           	callstack 0
 20692   00BF68                     _setLEDsByMode:
 20693                           	callstack 15
 20694                           
 20695                           ;../../VLCBlib_PIC/mns.c: 741:        switch (mode_state) {
 20696                           
 20697                           ;incstack = 0
 20698   00BF68  D00C               	goto	l21250
 20699   00BF6A                     l21242:
 20700                           
 20701                           ; BSR set to: 0
 20702                           ;../../VLCBlib_PIC/mns.c: 743:             showStatus(STATUS_UNINITIALISED);
 20703   00BF6A  0E01               	movlw	1
 20704   00BF6C  ECB2  F047         	call	_showStatus
 20705                           
 20706                           ;../../VLCBlib_PIC/mns.c: 744:             break;
 20707   00BF70  0012               	return	
 20708   00BF72                     l21244:
 20709                           
 20710                           ; BSR set to: 0
 20711                           ;../../VLCBlib_PIC/mns.c: 746:             showStatus(STATUS_SETUP);
 20712   00BF72  0E02               	movlw	2
 20713   00BF74  ECB2  F047         	call	_showStatus
 20714                           
 20715                           ;../../VLCBlib_PIC/mns.c: 747:             break;
 20716   00BF78  0012               	return	
 20717   00BF7A                     l21246:
 20718                           
 20719                           ; BSR set to: 0
 20720                           ;../../VLCBlib_PIC/mns.c: 749:             showStatus(STATUS_NORMAL);
 20721   00BF7A  0E03               	movlw	3
 20722   00BF7C  ECB2  F047         	call	_showStatus
 20723                           
 20724                           ;../../VLCBlib_PIC/mns.c: 750:             break;
 20725   00BF80  0012               	return	
 20726   00BF82                     l21250:
 20727   00BF82  0100               	movlb	0	; () banked
 20728   00BF84  51C1               	movf	_mode_state& (0+255),w,b
 20729                           
 20730                           ; Switch size 1, requested type "simple"
 20731                           ; Number of cases is 2, Range of values is 0 to 255
 20732                           ; switch strategies available:
 20733                           ; Name         Instructions Cycles
 20734                           ; simple_byte            7     4 (average)
 20735                           ;	Chosen strategy is simple_byte
 20736   00BF86  0A00               	xorlw	0	; case 0
 20737   00BF88  B4D8               	btfsc	status,2,c
 20738   00BF8A  D7F3               	goto	l21244
 20739   00BF8C  0AFF               	xorlw	255	; case 255
 20740   00BF8E  B4D8               	btfsc	status,2,c
 20741   00BF90  D7EC               	goto	l21242
 20742   00BF92  D7F3               	goto	l21246
 20743   00BF94                     __end_of_setLEDsByMode:
 20744                           	callstack 0
 20745                           
 20746 ;; *************** function _sendMessage2 *****************
 20747 ;; Defined at:
 20748 ;;		line 1141 in file "../../VLCBlib_PIC/vlcb.c"
 20749 ;; Parameters:    Size  Location     Type
 20750 ;;  opc             1    wreg     enum E12342
 20751 ;;  data1           1   69[BANK0 ] unsigned char 
 20752 ;;  data2           1   70[BANK0 ] unsigned char 
 20753 ;; Auto vars:     Size  Location     Type
 20754 ;;  opc             1   71[BANK0 ] enum E12342
 20755 ;; Return value:  Size  Location     Type
 20756 ;;                  1    wreg      void 
 20757 ;; Registers used:
 20758 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 20759 ;; Tracked objects:
 20760 ;;		On entry : 0/0
 20761 ;;		On exit  : 0/0
 20762 ;;		Unchanged: 0/0
 20763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20764 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20765 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20767 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20768 ;;Total ram usage:        3 bytes
 20769 ;; Hardware stack levels used: 1
 20770 ;; Hardware stack levels required when called: 15
 20771 ;; This function calls:
 20772 ;;		_sendMessage
 20773 ;; This function is called by:
 20774 ;;		_doNnclr
 20775 ;;		_doEvlrn
 20776 ;;		_doEvuln
 20777 ;;		_mnsProcessMessage
 20778 ;;		_mnsPoll
 20779 ;;		_nvProcessMessage
 20780 ;; This function uses a non-reentrant model
 20781 ;;
 20782                           
 20783                           	psect	text72
 20784   00BDC6                     __ptext72:
 20785                           	callstack 0
 20786   00BDC6                     _sendMessage2:
 20787                           	callstack 12
 20788                           
 20789                           ;incstack = 0
 20790                           ;sendMessage2@opc stored from wreg
 20791   00BDC6  0100               	movlb	0	; () banked
 20792   00BDC8  6FA7               	movwf	sendMessage2@opc& (0+255),b
 20793                           
 20794                           ;../../VLCBlib_PIC/vlcb.c: 1142:     sendMessage(opc, 3, data1, data2, 0,0,0,0,0);
 20795   00BDCA  0E03               	movlw	3
 20796   00BDCC  0101               	movlb	1	; () banked
 20797   00BDCE  6FB5               	movwf	sendMessage@len& (0+255),b
 20798   00BDD0  C0A5  F1B6         	movff	sendMessage2@data1,sendMessage@data1
 20799   00BDD4  C0A6  F1B7         	movff	sendMessage2@data2,sendMessage@data2
 20800   00BDD8  0E00               	movlw	0
 20801   00BDDA  6FB8               	movwf	sendMessage@data3& (0+255),b
 20802   00BDDC  0E00               	movlw	0
 20803   00BDDE  6FB9               	movwf	sendMessage@data4& (0+255),b
 20804   00BDE0  0E00               	movlw	0
 20805   00BDE2  6FBA               	movwf	sendMessage@data5& (0+255),b
 20806   00BDE4  0E00               	movlw	0
 20807   00BDE6  6FBB               	movwf	sendMessage@data6& (0+255),b
 20808   00BDE8  0E00               	movlw	0
 20809   00BDEA  6FBC               	movwf	sendMessage@data7& (0+255),b
 20810   00BDEC  0100               	movlb	0	; () banked
 20811   00BDEE  51A7               	movf	sendMessage2@opc& (0+255),w,b
 20812   00BDF0  EC1F  F054         	call	_sendMessage
 20813   00BDF4  0012               	return		;funcret
 20814   00BDF6                     __end_of_sendMessage2:
 20815                           	callstack 0
 20816                           
 20817 ;; *************** function _setNormalActions *****************
 20818 ;; Defined at:
 20819 ;;		line 462 in file "../event_consumerDualActionQueue.c"
 20820 ;; Parameters:    Size  Location     Type
 20821 ;;		None
 20822 ;; Auto vars:     Size  Location     Type
 20823 ;;		None
 20824 ;; Return value:  Size  Location     Type
 20825 ;;                  1    wreg      void 
 20826 ;; Registers used:
 20827 ;;		wreg, status,2
 20828 ;; Tracked objects:
 20829 ;;		On entry : 0/0
 20830 ;;		On exit  : 0/0
 20831 ;;		Unchanged: 0/0
 20832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20837 ;;Total ram usage:        0 bytes
 20838 ;; Hardware stack levels used: 1
 20839 ;; Hardware stack levels required when called: 12
 20840 ;; This function calls:
 20841 ;;		Nothing
 20842 ;; This function is called by:
 20843 ;;		_consumer2QProcessMessage
 20844 ;; This function uses a non-reentrant model
 20845 ;;
 20846                           
 20847                           	psect	text73
 20848   00C39A                     __ptext73:
 20849                           	callstack 0
 20850   00C39A                     _setNormalActions:
 20851                           	callstack 16
 20852                           
 20853                           ;../event_consumerDualActionQueue.c: 463:     expedited = FALSE;
 20854                           
 20855                           ;incstack = 0
 20856   00C39A  0E00               	movlw	0
 20857   00C39C  0100               	movlb	0	; () banked
 20858   00C39E  6FC5               	movwf	_expedited& (0+255),b
 20859                           
 20860                           ; BSR set to: 0
 20861   00C3A0  0012               	return		;funcret
 20862   00C3A2                     __end_of_setNormalActions:
 20863                           	callstack 0
 20864                           
 20865 ;; *************** function _setExpeditedActions *****************
 20866 ;; Defined at:
 20867 ;;		line 455 in file "../event_consumerDualActionQueue.c"
 20868 ;; Parameters:    Size  Location     Type
 20869 ;;		None
 20870 ;; Auto vars:     Size  Location     Type
 20871 ;;		None
 20872 ;; Return value:  Size  Location     Type
 20873 ;;                  1    wreg      void 
 20874 ;; Registers used:
 20875 ;;		wreg, status,2
 20876 ;; Tracked objects:
 20877 ;;		On entry : 0/0
 20878 ;;		On exit  : 0/0
 20879 ;;		Unchanged: 0/0
 20880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20885 ;;Total ram usage:        0 bytes
 20886 ;; Hardware stack levels used: 1
 20887 ;; Hardware stack levels required when called: 12
 20888 ;; This function calls:
 20889 ;;		Nothing
 20890 ;; This function is called by:
 20891 ;;		_consumer2QProcessMessage
 20892 ;; This function uses a non-reentrant model
 20893 ;;
 20894                           
 20895                           	psect	text74
 20896   00C3A2                     __ptext74:
 20897                           	callstack 0
 20898   00C3A2                     _setExpeditedActions:
 20899                           	callstack 16
 20900                           
 20901                           ;../event_consumerDualActionQueue.c: 456:     expedited = TRUE;
 20902                           
 20903                           ; BSR set to: 0
 20904                           ;incstack = 0
 20905   00C3A2  0E01               	movlw	1
 20906   00C3A4  0100               	movlb	0	; () banked
 20907   00C3A6  6FC5               	movwf	_expedited& (0+255),b
 20908                           
 20909                           ; BSR set to: 0
 20910   00C3A8  0012               	return		;funcret
 20911   00C3AA                     __end_of_setExpeditedActions:
 20912                           	callstack 0
 20913                           
 20914 ;; *************** function _pushTwoAction *****************
 20915 ;; Defined at:
 20916 ;;		line 336 in file "../event_consumerDualActionQueue.c"
 20917 ;; Parameters:    Size  Location     Type
 20918 ;;  a               2   45[BANK0 ] struct .
 20919 ;; Auto vars:     Size  Location     Type
 20920 ;;		None
 20921 ;; Return value:  Size  Location     Type
 20922 ;;                  1    wreg      enum E12700
 20923 ;; Registers used:
 20924 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20925 ;; Tracked objects:
 20926 ;;		On entry : 0/0
 20927 ;;		On exit  : 0/0
 20928 ;;		Unchanged: 0/0
 20929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20930 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20933 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20934 ;;Total ram usage:        2 bytes
 20935 ;; Hardware stack levels used: 1
 20936 ;; Hardware stack levels required when called: 12
 20937 ;; This function calls:
 20938 ;;		Nothing
 20939 ;; This function is called by:
 20940 ;;		_consumer2QProcessMessage
 20941 ;; This function uses a non-reentrant model
 20942 ;;
 20943                           
 20944                           	psect	text75
 20945   00AE32                     __ptext75:
 20946                           	callstack 0
 20947   00AE32                     _pushTwoAction:
 20948                           	callstack 16
 20949                           
 20950                           ;../event_consumerDualActionQueue.c: 337:     if (expedited) {
 20951                           
 20952                           ; BSR set to: 0
 20953                           ;incstack = 0
 20954   00AE32  0100               	movlb	0	; () banked
 20955   00AE34  51C5               	movf	_expedited& (0+255),w,b
 20956   00AE36  B4D8               	btfsc	status,2,c
 20957   00AE38  D018               	goto	l20450
 20958                           
 20959                           ; BSR set to: 0
 20960                           ;../event_consumerDualActionQueue.c: 338:         if (((expeditedWriteIndex+1)&(8 -1)) =
      +                          = expeditedReadIndex)
 20961   00AE3A  29C6               	incf	_expeditedWriteIndex& (0+255),w,b
 20962   00AE3C  0B07               	andlw	7
 20963   00AE3E  19C7               	xorwf	_expeditedReadIndex& (0+255),w,b
 20964   00AE40  B4D8               	btfsc	status,2,c
 20965   00AE42  0012               	return	
 20966                           
 20967                           ; BSR set to: 0
 20968                           ;../event_consumerDualActionQueue.c: 340:         expeditedQueueBuf[expeditedWriteIndex+
      +                          +] = a;
 20969   00AE44  51C6               	movf	_expeditedWriteIndex& (0+255),w,b
 20970   00AE46  0D02               	mullw	2
 20971   00AE48  0EB4               	movlw	low _expeditedQueueBuf
 20972   00AE4A  24F3               	addwf	243,w,c
 20973   00AE4C  6ED9               	movwf	fsr2l,c
 20974   00AE4E  0E02               	movlw	high _expeditedQueueBuf
 20975   00AE50  20F4               	addwfc	prodh,w,c
 20976   00AE52  6EDA               	movwf	fsr2h,c
 20977   00AE54  C08D  FFDE         	movff	pushTwoAction@a,postinc2
 20978   00AE58  C08E  FFDD         	movff	pushTwoAction@a+1,postdec2
 20979                           
 20980                           ; BSR set to: 0
 20981   00AE5C  2BC6               	incf	_expeditedWriteIndex& (0+255),f,b
 20982                           
 20983                           ; BSR set to: 0
 20984                           ;../event_consumerDualActionQueue.c: 341:         if (expeditedWriteIndex >= 8) expedite
      +                          dWriteIndex = 0;
 20985   00AE5E  0E07               	movlw	7
 20986   00AE60  65C6               	cpfsgt	_expeditedWriteIndex& (0+255),b
 20987   00AE62  0012               	return	
 20988                           
 20989                           ; BSR set to: 0
 20990   00AE64  0E00               	movlw	0
 20991   00AE66  6FC6               	movwf	_expeditedWriteIndex& (0+255),b
 20992   00AE68  0012               	return	
 20993   00AE6A                     l20450:
 20994                           
 20995                           ; BSR set to: 0
 20996                           ;../event_consumerDualActionQueue.c: 344:     if (((normalWriteIndex+1)&(64 -1)) == norm
      +                          alReadIndex)
 20997   00AE6A  29C8               	incf	_normalWriteIndex& (0+255),w,b
 20998   00AE6C  0B3F               	andlw	63
 20999   00AE6E  19C9               	xorwf	_normalReadIndex& (0+255),w,b
 21000   00AE70  B4D8               	btfsc	status,2,c
 21001   00AE72  0012               	return	
 21002                           
 21003                           ; BSR set to: 0
 21004                           ;../event_consumerDualActionQueue.c: 346:     normalQueueBuf[normalWriteIndex++] = a;
 21005   00AE74  51C8               	movf	_normalWriteIndex& (0+255),w,b
 21006   00AE76  0D02               	mullw	2
 21007   00AE78  0E00               	movlw	low _normalQueueBuf
 21008   00AE7A  24F3               	addwf	243,w,c
 21009   00AE7C  6ED9               	movwf	fsr2l,c
 21010   00AE7E  0E05               	movlw	high _normalQueueBuf
 21011   00AE80  20F4               	addwfc	prodh,w,c
 21012   00AE82  6EDA               	movwf	fsr2h,c
 21013   00AE84  C08D  FFDE         	movff	pushTwoAction@a,postinc2
 21014   00AE88  C08E  FFDD         	movff	pushTwoAction@a+1,postdec2
 21015                           
 21016                           ; BSR set to: 0
 21017   00AE8C  2BC8               	incf	_normalWriteIndex& (0+255),f,b
 21018                           
 21019                           ; BSR set to: 0
 21020                           ;../event_consumerDualActionQueue.c: 347:     if (normalWriteIndex >= 64) normalWriteInd
      +                          ex = 0;
 21021   00AE8E  0E3F               	movlw	63
 21022   00AE90  65C8               	cpfsgt	_normalWriteIndex& (0+255),b
 21023   00AE92  0012               	return	
 21024                           
 21025                           ; BSR set to: 0
 21026   00AE94  0E00               	movlw	0
 21027   00AE96  6FC8               	movwf	_normalWriteIndex& (0+255),b
 21028                           
 21029                           ; BSR set to: 0
 21030   00AE98  0012               	return		;funcret
 21031   00AE9A                     __end_of_pushTwoAction:
 21032                           	callstack 0
 21033                           
 21034 ;; *************** function _canReceiveMessage *****************
 21035 ;; Defined at:
 21036 ;;		line 525 in file "../../VLCBlib_PIC/can18_ecan.c"
 21037 ;; Parameters:    Size  Location     Type
 21038 ;;  m               2   10[BANK1 ] PTR struct Message
 21039 ;;		 -> poll@m(9), 
 21040 ;; Auto vars:     Size  Location     Type
 21041 ;;  p               2   16[BANK1 ] PTR unsigned char 
 21042 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 21043 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 21044 ;;		 -> NULL(0), 
 21045 ;;  mp              2   14[BANK1 ] PTR struct Message
 21046 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 21047 ;;  messageAvail    1   13[BANK1 ] enum E13010
 21048 ;;  incomingCanI    1    0        unsigned char 
 21049 ;; Return value:  Size  Location     Type
 21050 ;;                  1    wreg      enum E13010
 21051 ;; Registers used:
 21052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21053 ;; Tracked objects:
 21054 ;;		On entry : 0/0
 21055 ;;		On exit  : 0/0
 21056 ;;		Unchanged: 0/0
 21057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21058 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21059 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21060 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21061 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21062 ;;Total ram usage:        8 bytes
 21063 ;; Hardware stack levels used: 1
 21064 ;; Hardware stack levels required when called: 20
 21065 ;; This function calls:
 21066 ;;		_getBufferPointer
 21067 ;;		_handleSelfEnumeration
 21068 ;;		_memcpy
 21069 ;;		_pop
 21070 ;;		_processEnumeration
 21071 ;; This function is called by:
 21072 ;;		_poll
 21073 ;; This function uses a non-reentrant model
 21074 ;;
 21075                           
 21076                           	psect	text76
 21077   0070B4                     __ptext76:
 21078                           	callstack 0
 21079   0070B4                     _canReceiveMessage:
 21080                           	callstack 9
 21081                           
 21082                           ;../../VLCBlib_PIC/can18_ecan.c: 526:     Message * mp;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          527:     uint8_t * p;;../../VLCBlib_PIC/can18_ecan.c: 528:     MessageReceived messageAv
      +                          ailable;;../../VLCBlib_PIC/can18_ecan.c: 529:     uint8_t incomingCanId;;../../VLCBlib_P
      +                          IC/can18_ecan.c: 531:     PIE5bits.FIFOWMIE = 0;
 21083                           
 21084                           ; BSR set to: 0
 21085                           ;incstack = 0
 21086   0070B4  9076               	bcf	118,0,c	;volatile
 21087                           
 21088                           ;../../VLCBlib_PIC/can18_ecan.c: 532:     processEnumeration();
 21089   0070B6  ECBC  F03A         	call	_processEnumeration	;wreg free
 21090                           
 21091                           ;../../VLCBlib_PIC/can18_ecan.c: 535:     mp = pop(&rxQueue);
 21092   0070BA  0E26               	movlw	low _rxQueue
 21093   0070BC  0100               	movlb	0	; () banked
 21094   0070BE  6F8D               	movwf	pop@q& (0+255),b
 21095   0070C0  ECEA  F04D         	call	_pop	;wreg free
 21096   0070C4  C08D  F1C3         	movff	?_pop,canReceiveMessage@mp
 21097   0070C8  C08E  F1C4         	movff	?_pop+1,canReceiveMessage@mp+1
 21098                           
 21099                           ;../../VLCBlib_PIC/can18_ecan.c: 536:     if (mp != ((void*)0)) {
 21100   0070CC  0101               	movlb	1	; () banked
 21101   0070CE  51C3               	movf	canReceiveMessage@mp& (0+255),w,b
 21102   0070D0  11C4               	iorwf	(canReceiveMessage@mp+1)& (0+255),w,b
 21103   0070D2  B4D8               	btfsc	status,2,c
 21104   0070D4  D012               	goto	l2894
 21105                           
 21106                           ; BSR set to: 1
 21107                           ;../../VLCBlib_PIC/can18_ecan.c: 537:         memcpy(m, mp, sizeof(Message));
 21108   0070D6  C1BF  F08D         	movff	canReceiveMessage@m,memcpy@d1
 21109   0070DA  C1C0  F08E         	movff	canReceiveMessage@m+1,memcpy@d1+1
 21110   0070DE  C1C3  F08F         	movff	canReceiveMessage@mp,memcpy@s1
 21111   0070E2  C1C4  F090         	movff	canReceiveMessage@mp+1,memcpy@s1+1
 21112   0070E6  0E00               	movlw	0
 21113   0070E8  0100               	movlb	0	; () banked
 21114   0070EA  6F92               	movwf	(memcpy@n+1)& (0+255),b
 21115   0070EC  0E09               	movlw	9
 21116   0070EE  6F91               	movwf	memcpy@n& (0+255),b
 21117   0070F0  ECB3  F05C         	call	_memcpy	;wreg free
 21118                           
 21119                           ;../../VLCBlib_PIC/can18_ecan.c: 538:         PIE5bits.FIFOWMIE = 1;
 21120   0070F4  8076               	bsf	118,0,c	;volatile
 21121                           
 21122                           ;../../VLCBlib_PIC/can18_ecan.c: 539:         return RECEIVED;
 21123   0070F6  0E01               	movlw	1
 21124   0070F8  0012               	return	
 21125   0070FA                     l2894:
 21126                           
 21127                           ; BSR set to: 1
 21128                           ;../../VLCBlib_PIC/can18_ecan.c: 541:         if (COMSTATbits.NOT_FIFOEMPTY) {
 21129   0070FA  AE71               	btfss	113,7,c	;volatile
 21130   0070FC  D00D               	goto	u25500
 21131                           
 21132                           ; BSR set to: 1
 21133                           ;../../VLCBlib_PIC/can18_ecan.c: 542:             p = getBufferPointer(CANCON & 0x07);
 21134   0070FE  506F               	movf	111,w,c	;volatile
 21135   007100  0B07               	andlw	7
 21136   007102  EC01  F050         	call	_getBufferPointer
 21137   007106  C08D  F1C5         	movff	?_getBufferPointer,canReceiveMessage@p
 21138   00710A  C08E  F1C6         	movff	?_getBufferPointer+1,canReceiveMessage@p+1
 21139                           
 21140                           ;../../VLCBlib_PIC/can18_ecan.c: 543:             if (p == ((void*)0)) {
 21141   00710E  0101               	movlb	1	; () banked
 21142   007110  51C5               	movf	canReceiveMessage@p& (0+255),w,b
 21143   007112  11C6               	iorwf	(canReceiveMessage@p+1)& (0+255),w,b
 21144   007114  A4D8               	btfss	status,2,c
 21145   007116  D003               	goto	l2898
 21146   007118                     u25500:
 21147                           
 21148                           ; BSR set to: 1
 21149                           ;../../VLCBlib_PIC/can18_ecan.c: 545:                 PIE5bits.FIFOWMIE = 1;
 21150   007118  8076               	bsf	118,0,c	;volatile
 21151                           
 21152                           ; BSR set to: 1
 21153                           ;../../VLCBlib_PIC/can18_ecan.c: 546:                 return NOT_RECEIVED;
 21154   00711A  0E00               	movlw	0
 21155   00711C  0012               	return	
 21156   00711E                     l2898:
 21157                           
 21158                           ; BSR set to: 1
 21159                           ;../../VLCBlib_PIC/can18_ecan.c: 548:             PIR5bits.RXBnIF = 0;
 21160   00711E  9277               	bcf	119,1,c	;volatile
 21161                           
 21162                           ; BSR set to: 1
 21163                           ;../../VLCBlib_PIC/can18_ecan.c: 549:             if (handleSelfEnumeration(p) == RECEIV
      +                          ED) {
 21164   007120  C1C5  F097         	movff	canReceiveMessage@p,handleSelfEnumeration@p
 21165   007124  C1C6  F098         	movff	canReceiveMessage@p+1,handleSelfEnumeration@p+1
 21166   007128  ECC4  F040         	call	_handleSelfEnumeration	;wreg free
 21167   00712C  06E8               	decf	wreg,f,c
 21168   00712E  A4D8               	btfss	status,2,c
 21169   007130  D08F               	goto	l23660
 21170                           
 21171                           ;../../VLCBlib_PIC/can18_ecan.c: 551:                 canDiagnostics[0x08].asUint++;
 21172   007132  0101               	movlb	1	; () banked
 21173   007134  4B8A               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 21174   007136  2B8B               	incf	(_canDiagnostics+17)& (0+255),f,b
 21175                           
 21176                           ; BSR set to: 1
 21177                           ;../../VLCBlib_PIC/can18_ecan.c: 555:                     m->opc = p[6];
 21178   007138  EE20 F006          	lfsr	2,6
 21179   00713C  51C5               	movf	canReceiveMessage@p& (0+255),w,b
 21180   00713E  26D9               	addwf	fsr2l,f,c
 21181   007140  51C6               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 21182   007142  22DA               	addwfc	fsr2h,f,c
 21183   007144  EE10 F001          	lfsr	1,1
 21184   007148  51BF               	movf	canReceiveMessage@m& (0+255),w,b
 21185   00714A  26E1               	addwf	fsr1l,f,c
 21186   00714C  51C0               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 21187   00714E  22E2               	addwfc	fsr1h,f,c
 21188   007150  CFDF FFE7          	movff	indf2,indf1
 21189                           
 21190                           ; BSR set to: 1
 21191                           ;../../VLCBlib_PIC/can18_ecan.c: 556:                     m->len = p[5] & 0xF;
 21192   007154  EE20 F005          	lfsr	2,5
 21193   007158  51C5               	movf	canReceiveMessage@p& (0+255),w,b
 21194   00715A  26D9               	addwf	fsr2l,f,c
 21195   00715C  51C6               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 21196   00715E  22DA               	addwfc	fsr2h,f,c
 21197   007160  50DF               	movf	indf2,w,c
 21198   007162  0B0F               	andlw	15
 21199   007164  C1BF  FFD9         	movff	canReceiveMessage@m,fsr2l
 21200   007168  C1C0  FFDA         	movff	canReceiveMessage@m+1,fsr2h
 21201   00716C  6EDF               	movwf	indf2,c
 21202                           
 21203                           ; BSR set to: 1
 21204                           ;../../VLCBlib_PIC/can18_ecan.c: 557:                     if (m->len > 8) {
 21205   00716E  C1BF  FFD9         	movff	canReceiveMessage@m,fsr2l
 21206   007172  C1C0  FFDA         	movff	canReceiveMessage@m+1,fsr2h
 21207   007176  0E08               	movlw	8
 21208   007178  64DF               	cpfsgt	indf2,c
 21209   00717A  D006               	goto	l23644
 21210                           
 21211                           ; BSR set to: 1
 21212                           ;../../VLCBlib_PIC/can18_ecan.c: 558:                         m->len = 8;
 21213   00717C  C1BF  FFD9         	movff	canReceiveMessage@m,fsr2l
 21214   007180  C1C0  FFDA         	movff	canReceiveMessage@m+1,fsr2h
 21215   007184  0E08               	movlw	8
 21216   007186  6EDF               	movwf	indf2,c
 21217   007188                     l23644:
 21218                           
 21219                           ; BSR set to: 1
 21220                           ;../../VLCBlib_PIC/can18_ecan.c: 560:                     m->bytes[0] = p[7];
 21221   007188  EE20 F007          	lfsr	2,7
 21222   00718C  51C5               	movf	canReceiveMessage@p& (0+255),w,b
 21223   00718E  26D9               	addwf	fsr2l,f,c
 21224   007190  51C6               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 21225   007192  22DA               	addwfc	fsr2h,f,c
 21226   007194  EE10 F002          	lfsr	1,2
 21227   007198  51BF               	movf	canReceiveMessage@m& (0+255),w,b
 21228   00719A  26E1               	addwf	fsr1l,f,c
 21229   00719C  51C0               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 21230   00719E  22E2               	addwfc	fsr1h,f,c
 21231   0071A0  CFDF FFE7          	movff	indf2,indf1
 21232                           
 21233                           ; BSR set to: 1
 21234                           ;../../VLCBlib_PIC/can18_ecan.c: 561:                     m->bytes[1] = p[8];
 21235   0071A4  EE20 F008          	lfsr	2,8
 21236   0071A8  51C5               	movf	canReceiveMessage@p& (0+255),w,b
 21237   0071AA  26D9               	addwf	fsr2l,f,c
 21238   0071AC  51C6               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 21239   0071AE  22DA               	addwfc	fsr2h,f,c
 21240   0071B0  EE10 F003          	lfsr	1,3
 21241   0071B4  51BF               	movf	canReceiveMessage@m& (0+255),w,b
 21242   0071B6  26E1               	addwf	fsr1l,f,c
 21243   0071B8  51C0               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 21244   0071BA  22E2               	addwfc	fsr1h,f,c
 21245   0071BC  CFDF FFE7          	movff	indf2,indf1
 21246                           
 21247                           ; BSR set to: 1
 21248                           ;../../VLCBlib_PIC/can18_ecan.c: 562:                     m->bytes[2] = p[9];
 21249   0071C0  EE20 F009          	lfsr	2,9
 21250   0071C4  51C5               	movf	canReceiveMessage@p& (0+255),w,b
 21251   0071C6  26D9               	addwf	fsr2l,f,c
 21252   0071C8  51C6               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 21253   0071CA  22DA               	addwfc	fsr2h,f,c
 21254   0071CC  EE10 F004          	lfsr	1,4
 21255   0071D0  51BF               	movf	canReceiveMessage@m& (0+255),w,b
 21256   0071D2  26E1               	addwf	fsr1l,f,c
 21257   0071D4  51C0               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 21258   0071D6  22E2               	addwfc	fsr1h,f,c
 21259   0071D8  CFDF FFE7          	movff	indf2,indf1
 21260                           
 21261                           ; BSR set to: 1
 21262                           ;../../VLCBlib_PIC/can18_ecan.c: 563:                     m->bytes[3] = p[10];
 21263   0071DC  EE20 F00A          	lfsr	2,10
 21264   0071E0  51C5               	movf	canReceiveMessage@p& (0+255),w,b
 21265   0071E2  26D9               	addwf	fsr2l,f,c
 21266   0071E4  51C6               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 21267   0071E6  22DA               	addwfc	fsr2h,f,c
 21268   0071E8  EE10 F005          	lfsr	1,5
 21269   0071EC  51BF               	movf	canReceiveMessage@m& (0+255),w,b
 21270   0071EE  26E1               	addwf	fsr1l,f,c
 21271   0071F0  51C0               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 21272   0071F2  22E2               	addwfc	fsr1h,f,c
 21273   0071F4  CFDF FFE7          	movff	indf2,indf1
 21274                           
 21275                           ; BSR set to: 1
 21276                           ;../../VLCBlib_PIC/can18_ecan.c: 564:                     m->bytes[4] = p[11];
 21277   0071F8  EE20 F00B          	lfsr	2,11
 21278   0071FC  51C5               	movf	canReceiveMessage@p& (0+255),w,b
 21279   0071FE  26D9               	addwf	fsr2l,f,c
 21280   007200  51C6               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 21281   007202  22DA               	addwfc	fsr2h,f,c
 21282   007204  EE10 F006          	lfsr	1,6
 21283   007208  51BF               	movf	canReceiveMessage@m& (0+255),w,b
 21284   00720A  26E1               	addwf	fsr1l,f,c
 21285   00720C  51C0               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 21286   00720E  22E2               	addwfc	fsr1h,f,c
 21287   007210  CFDF FFE7          	movff	indf2,indf1
 21288                           
 21289                           ; BSR set to: 1
 21290                           ;../../VLCBlib_PIC/can18_ecan.c: 565:                     m->bytes[5] = p[12];
 21291   007214  EE20 F00C          	lfsr	2,12
 21292   007218  51C5               	movf	canReceiveMessage@p& (0+255),w,b
 21293   00721A  26D9               	addwf	fsr2l,f,c
 21294   00721C  51C6               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 21295   00721E  22DA               	addwfc	fsr2h,f,c
 21296   007220  EE10 F007          	lfsr	1,7
 21297   007224  51BF               	movf	canReceiveMessage@m& (0+255),w,b
 21298   007226  26E1               	addwf	fsr1l,f,c
 21299   007228  51C0               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 21300   00722A  22E2               	addwfc	fsr1h,f,c
 21301   00722C  CFDF FFE7          	movff	indf2,indf1
 21302                           
 21303                           ; BSR set to: 1
 21304                           ;../../VLCBlib_PIC/can18_ecan.c: 566:                     m->bytes[6] = p[13];
 21305   007230  EE20 F00D          	lfsr	2,13
 21306   007234  51C5               	movf	canReceiveMessage@p& (0+255),w,b
 21307   007236  26D9               	addwf	fsr2l,f,c
 21308   007238  51C6               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 21309   00723A  22DA               	addwfc	fsr2h,f,c
 21310   00723C  EE10 F008          	lfsr	1,8
 21311   007240  51BF               	movf	canReceiveMessage@m& (0+255),w,b
 21312   007242  26E1               	addwf	fsr1l,f,c
 21313   007244  51C0               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 21314   007246  22E2               	addwfc	fsr1h,f,c
 21315   007248  CFDF FFE7          	movff	indf2,indf1
 21316                           
 21317                           ; BSR set to: 1
 21318                           ;../../VLCBlib_PIC/can18_ecan.c: 567:                     messageAvailable = RECEIVED;
 21319   00724C  0E01               	movlw	1
 21320   00724E  6FC2               	movwf	canReceiveMessage@messageAvailable& (0+255),b
 21321   007250                     l23660:
 21322                           
 21323                           ;../../VLCBlib_PIC/can18_ecan.c: 570:             if (PIR5bits.IRXIF) {
 21324   007250  BE77               	btfsc	119,7,c	;volatile
 21325                           
 21326                           ;../../VLCBlib_PIC/can18_ecan.c: 571:                 PIR5bits.IRXIF = 0;
 21327   007252  9E77               	bcf	119,7,c	;volatile
 21328                           
 21329                           ;../../VLCBlib_PIC/can18_ecan.c: 574:             p[0] &= 0x7f;
 21330   007254  C1C5  FFD9         	movff	canReceiveMessage@p,fsr2l
 21331   007258  C1C6  FFDA         	movff	canReceiveMessage@p+1,fsr2h
 21332   00725C  0E7F               	movlw	127
 21333   00725E  16DF               	andwf	indf2,f,c
 21334                           
 21335                           ;../../VLCBlib_PIC/can18_ecan.c: 575:             PIE5bits.FIFOWMIE = 1;
 21336   007260  8076               	bsf	118,0,c	;volatile
 21337                           
 21338                           ;../../VLCBlib_PIC/can18_ecan.c: 576:             return messageAvailable;
 21339   007262  0101               	movlb	1	; () banked
 21340   007264  51C2               	movf	canReceiveMessage@messageAvailable& (0+255),w,b
 21341   007266  0012               	return	
 21342   007268                     __end_of_canReceiveMessage:
 21343                           	callstack 0
 21344                           
 21345 ;; *************** function _processEnumeration *****************
 21346 ;; Defined at:
 21347 ;;		line 809 in file "../../VLCBlib_PIC/can18_ecan.c"
 21348 ;; Parameters:    Size  Location     Type
 21349 ;;		None
 21350 ;; Auto vars:     Size  Location     Type
 21351 ;;  i               1    9[BANK1 ] unsigned char 
 21352 ;;  newCanId        1    8[BANK1 ] unsigned char 
 21353 ;;  enumResult      1    7[BANK1 ] unsigned char 
 21354 ;; Return value:  Size  Location     Type
 21355 ;;                  1    wreg      void 
 21356 ;; Registers used:
 21357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21358 ;; Tracked objects:
 21359 ;;		On entry : 0/0
 21360 ;;		On exit  : 0/0
 21361 ;;		Unchanged: 0/0
 21362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21364 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21365 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21366 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21367 ;;Total ram usage:        7 bytes
 21368 ;; Hardware stack levels used: 1
 21369 ;; Hardware stack levels required when called: 19
 21370 ;; This function calls:
 21371 ;;		_setNewCanId
 21372 ;;		_tickGet
 21373 ;;		_updateModuleErrorStatus
 21374 ;; This function is called by:
 21375 ;;		_canReceiveMessage
 21376 ;; This function uses a non-reentrant model
 21377 ;;
 21378                           
 21379                           	psect	text77
 21380   007578                     __ptext77:
 21381                           	callstack 0
 21382   007578                     _processEnumeration:
 21383                           	callstack 9
 21384                           
 21385                           ;../../VLCBlib_PIC/can18_ecan.c: 810:     uint8_t i, newCanId, enumResult;;../../VLCBlib
      +                          _PIC/can18_ecan.c: 812:     switch (enumerationState) {
 21386                           
 21387                           ;incstack = 0
 21388   007578  D09B               	goto	l21658
 21389   00757A                     l21596:
 21390                           
 21391                           ; BSR set to: 1
 21392                           ;../../VLCBlib_PIC/can18_ecan.c: 814:             if (((tickGet() - enumerationStartTime
      +                          .val) > 2 * (62500/10) )) {
 21393   00757A  ECC2  F059         	call	_tickGet	;wreg free
 21394   00757E  5011               	movf	_enumerationStartTime^0,w,c
 21395   007580  0100               	movlb	0	; () banked
 21396   007582  5D8D               	subwf	?_tickGet& (0+255),w,b
 21397   007584  0101               	movlb	1	; () banked
 21398   007586  6FB8               	movwf	??_processEnumeration& (0+255),b
 21399   007588  5012               	movf	(_enumerationStartTime+1)^0,w,c
 21400   00758A  0100               	movlb	0	; () banked
 21401   00758C  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21402   00758E  0101               	movlb	1	; () banked
 21403   007590  6FB9               	movwf	(??_processEnumeration+1)& (0+255),b
 21404   007592  5013               	movf	(_enumerationStartTime+2)^0,w,c
 21405   007594  0100               	movlb	0	; () banked
 21406   007596  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21407   007598  0101               	movlb	1	; () banked
 21408   00759A  6FBA               	movwf	(??_processEnumeration+2)& (0+255),b
 21409   00759C  5014               	movf	(_enumerationStartTime+3)^0,w,c
 21410   00759E  0100               	movlb	0	; () banked
 21411   0075A0  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21412   0075A2  0101               	movlb	1	; () banked
 21413   0075A4  6FBB               	movwf	(??_processEnumeration+3)& (0+255),b
 21414   0075A6  51BB               	movf	(??_processEnumeration+3)& (0+255),w,b
 21415   0075A8  11BA               	iorwf	(??_processEnumeration+2)& (0+255),w,b
 21416   0075AA  E106               	bnz	u22870
 21417   0075AC  0ED5               	movlw	213
 21418   0075AE  5DB8               	subwf	??_processEnumeration& (0+255),w,b
 21419   0075B0  0E30               	movlw	48
 21420   0075B2  59B9               	subwfb	(??_processEnumeration+1)& (0+255),w,b
 21421   0075B4  A0D8               	btfss	status,0,c
 21422   0075B6  0012               	return	
 21423   0075B8                     u22870:
 21424                           
 21425                           ; BSR set to: 1
 21426                           ;../../VLCBlib_PIC/can18_ecan.c: 816:                 for (i=1; i< (0x7F/8)+1; i++) {
 21427   0075B8  0E01               	movlw	1
 21428   0075BA  6FBE               	movwf	processEnumeration@i& (0+255),b
 21429   0075BC                     l21604:
 21430                           
 21431                           ; BSR set to: 1
 21432                           ;../../VLCBlib_PIC/can18_ecan.c: 817:                     enumerationResults[i] = 0;
 21433   0075BC  0E14               	movlw	low _enumerationResults
 21434   0075BE  25BE               	addwf	processEnumeration@i& (0+255),w,b
 21435   0075C0  6ED9               	movwf	fsr2l,c
 21436   0075C2  6ADA               	clrf	fsr2h,c
 21437   0075C4  0E02               	movlw	high _enumerationResults
 21438   0075C6  22DA               	addwfc	fsr2h,f,c
 21439   0075C8  6ADF               	clrf	indf2,c
 21440                           
 21441                           ; BSR set to: 1
 21442                           ;../../VLCBlib_PIC/can18_ecan.c: 818:                 }
 21443   0075CA  2BBE               	incf	processEnumeration@i& (0+255),f,b
 21444                           
 21445                           ; BSR set to: 1
 21446   0075CC  0E0F               	movlw	15
 21447   0075CE  65BE               	cpfsgt	processEnumeration@i& (0+255),b
 21448   0075D0  D7F5               	goto	l21604
 21449                           
 21450                           ; BSR set to: 1
 21451                           ;../../VLCBlib_PIC/can18_ecan.c: 819:                 enumerationResults[0] = 1;
 21452   0075D2  0E01               	movlw	1
 21453   0075D4  0102               	movlb	2	; () banked
 21454   0075D6  6F14               	movwf	_enumerationResults& (0+255),b
 21455                           
 21456                           ;../../VLCBlib_PIC/can18_ecan.c: 821:                 enumerationState = ENUMERATION_IN_
      +                          PROGRESS;
 21457   0075D8  0E02               	movlw	2
 21458   0075DA  0100               	movlb	0	; () banked
 21459   0075DC  6FB5               	movwf	_enumerationState& (0+255),b
 21460                           
 21461                           ; BSR set to: 0
 21462                           ;../../VLCBlib_PIC/can18_ecan.c: 822:                 enumerationStartTime.val = tickGet
      +                          ();
 21463   0075DE  ECC2  F059         	call	_tickGet	;wreg free
 21464   0075E2  C08D  F011         	movff	?_tickGet,_enumerationStartTime
 21465   0075E6  C08E  F012         	movff	?_tickGet+1,_enumerationStartTime+1
 21466   0075EA  C08F  F013         	movff	?_tickGet+2,_enumerationStartTime+2
 21467   0075EE  C090  F014         	movff	?_tickGet+3,_enumerationStartTime+3
 21468                           
 21469                           ;../../VLCBlib_PIC/can18_ecan.c: 823:                 canDiagnostics[0x0C].asUint++;
 21470   0075F2  0101               	movlb	1	; () banked
 21471   0075F4  4B92               	infsnz	(_canDiagnostics+24)& (0+255),f,b
 21472   0075F6  2B93               	incf	(_canDiagnostics+25)& (0+255),f,b
 21473                           
 21474                           ; BSR set to: 1
 21475                           ;../../VLCBlib_PIC/can18_ecan.c: 824:                 TXB1CONbits.TXREQ = 1;
 21476   0075F8  010F               	movlb	15	; () banked
 21477   0075FA  8710               	bsf	16,3,b	;volatile
 21478   0075FC  0012               	return	
 21479   0075FE                     l21618:
 21480                           
 21481                           ; BSR set to: 1
 21482                           ;../../VLCBlib_PIC/can18_ecan.c: 828:             if ((tickGet() - enumerationStartTime.
      +                          val) > (62500/10) ) {
 21483   0075FE  ECC2  F059         	call	_tickGet	;wreg free
 21484   007602  5011               	movf	_enumerationStartTime^0,w,c
 21485   007604  0100               	movlb	0	; () banked
 21486   007606  5D8D               	subwf	?_tickGet& (0+255),w,b
 21487   007608  0101               	movlb	1	; () banked
 21488   00760A  6FB8               	movwf	??_processEnumeration& (0+255),b
 21489   00760C  5012               	movf	(_enumerationStartTime+1)^0,w,c
 21490   00760E  0100               	movlb	0	; () banked
 21491   007610  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21492   007612  0101               	movlb	1	; () banked
 21493   007614  6FB9               	movwf	(??_processEnumeration+1)& (0+255),b
 21494   007616  5013               	movf	(_enumerationStartTime+2)^0,w,c
 21495   007618  0100               	movlb	0	; () banked
 21496   00761A  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21497   00761C  0101               	movlb	1	; () banked
 21498   00761E  6FBA               	movwf	(??_processEnumeration+2)& (0+255),b
 21499   007620  5014               	movf	(_enumerationStartTime+3)^0,w,c
 21500   007622  0100               	movlb	0	; () banked
 21501   007624  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21502   007626  0101               	movlb	1	; () banked
 21503   007628  6FBB               	movwf	(??_processEnumeration+3)& (0+255),b
 21504   00762A  51BB               	movf	(??_processEnumeration+3)& (0+255),w,b
 21505   00762C  11BA               	iorwf	(??_processEnumeration+2)& (0+255),w,b
 21506   00762E  E106               	bnz	u22890
 21507   007630  0E6B               	movlw	107
 21508   007632  5DB8               	subwf	??_processEnumeration& (0+255),w,b
 21509   007634  0E18               	movlw	24
 21510   007636  59B9               	subwfb	(??_processEnumeration+1)& (0+255),w,b
 21511   007638  A0D8               	btfss	status,0,c
 21512   00763A  0012               	return	
 21513   00763C                     u22890:
 21514                           
 21515                           ; BSR set to: 1
 21516                           ;../../VLCBlib_PIC/can18_ecan.c: 832:                 for (i=0; (enumerationResults[i] =
      +                          = 0xFF) && (i < (0x7F/8)+1); i++) {
 21517   00763C  0E00               	movlw	0
 21518   00763E  6FBE               	movwf	processEnumeration@i& (0+255),b
 21519   007640  D001               	goto	l21624
 21520   007642                     l21622:
 21521                           
 21522                           ; BSR set to: 1
 21523                           ;../../VLCBlib_PIC/can18_ecan.c: 834:                 }
 21524   007642  2BBE               	incf	processEnumeration@i& (0+255),f,b
 21525   007644                     l21624:
 21526                           
 21527                           ; BSR set to: 1
 21528   007644  0E14               	movlw	low _enumerationResults
 21529   007646  25BE               	addwf	processEnumeration@i& (0+255),w,b
 21530   007648  6ED9               	movwf	fsr2l,c
 21531   00764A  6ADA               	clrf	fsr2h,c
 21532   00764C  0E02               	movlw	high _enumerationResults
 21533   00764E  22DA               	addwfc	fsr2h,f,c
 21534   007650  28DE               	incf	postinc2,w,c
 21535   007652  A4D8               	btfss	status,2,c
 21536   007654  D003               	goto	u22910
 21537                           
 21538                           ; BSR set to: 1
 21539   007656  0E0F               	movlw	15
 21540   007658  65BE               	cpfsgt	processEnumeration@i& (0+255),b
 21541   00765A  D7F3               	goto	l21622
 21542   00765C                     u22910:
 21543                           
 21544                           ; BSR set to: 1
 21545                           ;../../VLCBlib_PIC/can18_ecan.c: 835:                 if ((enumResult = enumerationResul
      +                          ts[i]) != 0xFF) {
 21546   00765C  0E14               	movlw	low _enumerationResults
 21547   00765E  25BE               	addwf	processEnumeration@i& (0+255),w,b
 21548   007660  6ED9               	movwf	fsr2l,c
 21549   007662  6ADA               	clrf	fsr2h,c
 21550   007664  0E02               	movlw	high _enumerationResults
 21551   007666  22DA               	addwfc	fsr2h,f,c
 21552   007668  50DF               	movf	indf2,w,c
 21553   00766A  6FBC               	movwf	processEnumeration@enumResult& (0+255),b
 21554   00766C  29BC               	incf	processEnumeration@enumResult& (0+255),w,b
 21555   00766E  B4D8               	btfsc	status,2,c
 21556   007670  D017               	goto	l21646
 21557                           
 21558                           ; BSR set to: 1
 21559                           ;../../VLCBlib_PIC/can18_ecan.c: 836:                     for (newCanId = i*8; (enumResu
      +                          lt & 0x01); newCanId++) {
 21560   007672  51BE               	movf	processEnumeration@i& (0+255),w,b
 21561   007674  0D08               	mullw	8
 21562   007676  CFF3 F1BD          	movff	prodl,processEnumeration@newCanId
 21563   00767A  D003               	goto	l21636
 21564   00767C                     l21632:
 21565                           
 21566                           ; BSR set to: 1
 21567                           ;../../VLCBlib_PIC/can18_ecan.c: 837:                         enumResult >>= 1;
 21568   00767C  90D8               	bcf	status,0,c
 21569   00767E  33BC               	rrcf	processEnumeration@enumResult& (0+255),f,b
 21570                           
 21571                           ; BSR set to: 1
 21572                           ;../../VLCBlib_PIC/can18_ecan.c: 838:                     }
 21573   007680  2BBD               	incf	processEnumeration@newCanId& (0+255),f,b
 21574   007682                     l21636:
 21575                           
 21576                           ; BSR set to: 1
 21577   007682  B1BC               	btfsc	processEnumeration@enumResult& (0+255),0,b
 21578   007684  D7FB               	goto	l21632
 21579                           
 21580                           ; BSR set to: 1
 21581                           ;../../VLCBlib_PIC/can18_ecan.c: 839:                     if ((newCanId >= 1) && (newCan
      +                          Id <= 99)) {
 21582   007686  51BD               	movf	processEnumeration@newCanId& (0+255),w,b
 21583   007688  B4D8               	btfsc	status,2,c
 21584   00768A  D00A               	goto	l21646
 21585                           
 21586                           ; BSR set to: 1
 21587   00768C  0E64               	movlw	100
 21588   00768E  61BD               	cpfslt	processEnumeration@newCanId& (0+255),b
 21589   007690  D007               	goto	l21646
 21590                           
 21591                           ; BSR set to: 1
 21592                           ;../../VLCBlib_PIC/can18_ecan.c: 840:                         canId = newCanId;
 21593   007692  C1BD  F0B7         	movff	processEnumeration@newCanId,_canId
 21594                           
 21595                           ; BSR set to: 1
 21596                           ;../../VLCBlib_PIC/can18_ecan.c: 841:                         setNewCanId(canId);
 21597   007696  0100               	movlb	0	; () banked
 21598   007698  51B7               	movf	_canId& (0+255),w,b
 21599   00769A  ECE7  F057         	call	_setNewCanId
 21600                           
 21601                           ;../../VLCBlib_PIC/can18_ecan.c: 842:                     } else {
 21602   00769E  D004               	goto	l21654
 21603   0076A0                     l21646:
 21604                           
 21605                           ; BSR set to: 1
 21606                           ;../../VLCBlib_PIC/can18_ecan.c: 843:                         canDiagnostics[0x0F].asUin
      +                          t++;
 21607   0076A0  4B98               	infsnz	(_canDiagnostics+30)& (0+255),f,b
 21608   0076A2  2B99               	incf	(_canDiagnostics+31)& (0+255),f,b
 21609                           
 21610                           ; BSR set to: 1
 21611                           ;../../VLCBlib_PIC/can18_ecan.c: 844:                         updateModuleErrorStatus();
 21612   0076A4  ECAC  F061         	call	_updateModuleErrorStatus	;wreg free
 21613   0076A8                     l21654:
 21614                           
 21615                           ;../../VLCBlib_PIC/can18_ecan.c: 853:                 enumerationState = NO_ENUMERATION;
 21616   0076A8  0E00               	movlw	0
 21617   0076AA  0100               	movlb	0	; () banked
 21618   0076AC  6FB5               	movwf	_enumerationState& (0+255),b
 21619   0076AE  0012               	return	
 21620   0076B0                     l21658:
 21621   0076B0  0100               	movlb	0	; () banked
 21622   0076B2  51B5               	movf	_enumerationState& (0+255),w,b
 21623   0076B4  0101               	movlb	1	; () banked
 21624   0076B6  6FB8               	movwf	??_processEnumeration& (0+255),b
 21625   0076B8  6BB9               	clrf	(??_processEnumeration+1)& (0+255),b
 21626                           
 21627                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21628                           ; Switch size 1, requested type "simple"
 21629                           ; Number of cases is 1, Range of values is 0 to 0
 21630                           ; switch strategies available:
 21631                           ; Name         Instructions Cycles
 21632                           ; simple_byte            4     3 (average)
 21633                           ;	Chosen strategy is simple_byte
 21634   0076BA  51B9               	movf	(??_processEnumeration+1)& (0+255),w,b
 21635   0076BC  0A00               	xorlw	0	; case 0
 21636   0076BE  A4D8               	btfss	status,2,c
 21637   0076C0  0012               	return	
 21638                           
 21639                           ; BSR set to: 1
 21640                           ; Switch size 1, requested type "simple"
 21641                           ; Number of cases is 2, Range of values is 1 to 2
 21642                           ; switch strategies available:
 21643                           ; Name         Instructions Cycles
 21644                           ; simple_byte            7     4 (average)
 21645                           ;	Chosen strategy is simple_byte
 21646   0076C2  51B8               	movf	??_processEnumeration& (0+255),w,b
 21647   0076C4  0A01               	xorlw	1	; case 1
 21648   0076C6  B4D8               	btfsc	status,2,c
 21649   0076C8  D758               	goto	l21596
 21650   0076CA  0A03               	xorlw	3	; case 2
 21651   0076CC  A4D8               	btfss	status,2,c
 21652   0076CE  0012               	return	
 21653   0076D0  D796               	goto	l21618
 21654   0076D2                     __end_of_processEnumeration:
 21655                           	callstack 0
 21656                           
 21657 ;; *************** function _setNewCanId *****************
 21658 ;; Defined at:
 21659 ;;		line 866 in file "../../VLCBlib_PIC/can18_ecan.c"
 21660 ;; Parameters:    Size  Location     Type
 21661 ;;  newCanId        1    wreg     unsigned char 
 21662 ;; Auto vars:     Size  Location     Type
 21663 ;;  newCanId        1    2[BANK1 ] unsigned char 
 21664 ;; Return value:  Size  Location     Type
 21665 ;;                  1    wreg      enum E13106
 21666 ;; Registers used:
 21667 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21668 ;; Tracked objects:
 21669 ;;		On entry : 0/0
 21670 ;;		On exit  : 0/0
 21671 ;;		Unchanged: 0/0
 21672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21674 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21676 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21677 ;;Total ram usage:        1 bytes
 21678 ;; Hardware stack levels used: 1
 21679 ;; Hardware stack levels required when called: 18
 21680 ;; This function calls:
 21681 ;;		_writeNVM
 21682 ;; This function is called by:
 21683 ;;		_processEnumeration
 21684 ;; This function uses a non-reentrant model
 21685 ;;
 21686                           
 21687                           	psect	text78
 21688   00AFCE                     __ptext78:
 21689                           	callstack 0
 21690   00AFCE                     _setNewCanId:
 21691                           	callstack 9
 21692                           
 21693                           ;incstack = 0
 21694                           ;setNewCanId@newCanId stored from wreg
 21695   00AFCE  0101               	movlb	1	; () banked
 21696   00AFD0  6FB7               	movwf	setNewCanId@newCanId& (0+255),b
 21697                           
 21698                           ;../../VLCBlib_PIC/can18_ecan.c: 867:     if ((newCanId >= 1) && (newCanId <= 99)) {
 21699   00AFD2  0101               	movlb	1	; () banked
 21700   00AFD4  51B7               	movf	setNewCanId@newCanId& (0+255),w,b
 21701   00AFD6  B4D8               	btfsc	status,2,c
 21702   00AFD8  0012               	return	
 21703                           
 21704                           ; BSR set to: 1
 21705   00AFDA  0E64               	movlw	100
 21706   00AFDC  61B7               	cpfslt	setNewCanId@newCanId& (0+255),b
 21707   00AFDE  0012               	return	
 21708                           
 21709                           ; BSR set to: 1
 21710                           ;../../VLCBlib_PIC/can18_ecan.c: 868:         canId = newCanId;
 21711   00AFE0  C1B7  F0B7         	movff	setNewCanId@newCanId,_canId
 21712                           
 21713                           ; BSR set to: 1
 21714                           ;../../VLCBlib_PIC/can18_ecan.c: 871:         TXB1SIDH &= 0b11110000;
 21715   00AFE4  0EF0               	movlw	240
 21716   00AFE6  010F               	movlb	15	; () banked
 21717   00AFE8  1711               	andwf	17,f,b	;volatile
 21718                           
 21719                           ;../../VLCBlib_PIC/can18_ecan.c: 872:         TXB1SIDH |= ((newCanId & 0x78) >>3);
 21720   00AFEA  0101               	movlb	1	; () banked
 21721   00AFEC  39B7               	swapf	setNewCanId@newCanId& (0+255),w,b
 21722   00AFEE  46E8               	rlncf	wreg,f,c
 21723   00AFF0  0B1F               	andlw	31
 21724   00AFF2  0B0F               	andlw	15
 21725   00AFF4  010F               	movlb	15	; () banked
 21726   00AFF6  1311               	iorwf	17,f,b	;volatile
 21727                           
 21728                           ; BSR set to: 15
 21729                           ;../../VLCBlib_PIC/can18_ecan.c: 873:         TXB1SIDL = TXB0SIDL;
 21730   00AFF8  CF22 FF12          	movff	3874,3858	;volatile
 21731                           
 21732                           ;../../VLCBlib_PIC/can18_ecan.c: 875:         TXB2SIDH &= 0b11110000;
 21733   00AFFC  0EF0               	movlw	240
 21734   00AFFE  1701               	andwf	1,f,b	;volatile
 21735                           
 21736                           ;../../VLCBlib_PIC/can18_ecan.c: 876:         TXB2SIDH |= ((newCanId & 0x78) >>3);
 21737   00B000  0101               	movlb	1	; () banked
 21738   00B002  39B7               	swapf	setNewCanId@newCanId& (0+255),w,b
 21739   00B004  46E8               	rlncf	wreg,f,c
 21740   00B006  0B1F               	andlw	31
 21741   00B008  0B0F               	andlw	15
 21742   00B00A  010F               	movlb	15	; () banked
 21743   00B00C  1301               	iorwf	1,f,b	;volatile
 21744                           
 21745                           ; BSR set to: 15
 21746                           ;../../VLCBlib_PIC/can18_ecan.c: 877:         TXB2SIDL = TXB0SIDL;
 21747   00B00E  CF22 FF02          	movff	3874,3842	;volatile
 21748                           
 21749                           ; BSR set to: 15
 21750                           ;../../VLCBlib_PIC/can18_ecan.c: 879:         writeNVM(EEPROM_NVM_TYPE, 0x3FE, newCanId 
      +                          );
 21751   00B012  0EFE               	movlw	254
 21752   00B014  0100               	movlb	0	; () banked
 21753   00B016  6FA4               	movwf	writeNVM@index& (0+255),b
 21754   00B018  0E03               	movlw	3
 21755   00B01A  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 21756   00B01C  0E00               	movlw	0
 21757   00B01E  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 21758   00B020  C1B7  F0A7         	movff	setNewCanId@newCanId,writeNVM@value
 21759   00B024  0E00               	movlw	0
 21760   00B026  EC66  F05B         	call	_writeNVM
 21761                           
 21762                           ;../../VLCBlib_PIC/can18_ecan.c: 880:         canDiagnostics[0x0E].asUint++;
 21763   00B02A  0101               	movlb	1	; () banked
 21764   00B02C  4B96               	infsnz	(_canDiagnostics+28)& (0+255),f,b
 21765   00B02E  2B97               	incf	(_canDiagnostics+29)& (0+255),f,b
 21766                           
 21767                           ; BSR set to: 1
 21768   00B030  0012               	return		;funcret
 21769   00B032                     __end_of_setNewCanId:
 21770                           	callstack 0
 21771                           
 21772 ;; *************** function _pop *****************
 21773 ;; Defined at:
 21774 ;;		line 95 in file "../../VLCBlib_PIC/messageQueue.c"
 21775 ;; Parameters:    Size  Location     Type
 21776 ;;  q               1   45[BANK0 ] PTR struct MessageQueue
 21777 ;;		 -> txQueue(5), rxQueue(5), 
 21778 ;; Auto vars:     Size  Location     Type
 21779 ;;  ret             2   52[BANK0 ] PTR struct Message
 21780 ;;		 -> txBuffers(72), rxBuffers(288), 
 21781 ;; Return value:  Size  Location     Type
 21782 ;;                  2   45[BANK0 ] PTR struct Message
 21783 ;; Registers used:
 21784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21785 ;; Tracked objects:
 21786 ;;		On entry : 0/0
 21787 ;;		On exit  : 0/0
 21788 ;;		Unchanged: 0/0
 21789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21790 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21791 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21792 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21793 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21794 ;;Total ram usage:        9 bytes
 21795 ;; Hardware stack levels used: 1
 21796 ;; Hardware stack levels required when called: 12
 21797 ;; This function calls:
 21798 ;;		Nothing
 21799 ;; This function is called by:
 21800 ;;		_canReceiveMessage
 21801 ;; This function uses a non-reentrant model
 21802 ;;
 21803                           
 21804                           	psect	text79
 21805   009BD4                     __ptext79:
 21806                           	callstack 0
 21807   009BD4                     _pop:
 21808                           	callstack 16
 21809                           
 21810                           ;../../VLCBlib_PIC/messageQueue.c: 96:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 97:  if (q->writeIndex == q->readIndex) {
 21811                           
 21812                           ; BSR set to: 1
 21813                           ;incstack = 0
 21814   009BD4  0100               	movlb	0	; () banked
 21815   009BD6  518D               	movf	pop@q& (0+255),w,b
 21816   009BD8  6ED9               	movwf	fsr2l,c
 21817   009BDA  6ADA               	clrf	fsr2h,c
 21818   009BDC  0E02               	movlw	2
 21819   009BDE  26D9               	addwf	fsr2l,f,c
 21820   009BE0  518D               	movf	pop@q& (0+255),w,b
 21821   009BE2  6EE1               	movwf	fsr1l,c
 21822   009BE4  6AE2               	clrf	fsr1h,c
 21823   009BE6  0E03               	movlw	3
 21824   009BE8  26E1               	addwf	fsr1l,f,c
 21825   009BEA  50DE               	movf	postinc2,w,c
 21826   009BEC  18E6               	xorwf	postinc1,w,c
 21827   009BEE  A4D8               	btfss	status,2,c
 21828   009BF0  D005               	goto	l21490
 21829                           
 21830                           ; BSR set to: 0
 21831                           ;../../VLCBlib_PIC/messageQueue.c: 98:         return ((void*)0);
 21832   009BF2  0E00               	movlw	0
 21833   009BF4  6F8D               	movwf	?_pop& (0+255),b
 21834   009BF6  0E00               	movlw	0
 21835   009BF8  6F8E               	movwf	(?_pop+1)& (0+255),b
 21836   009BFA  0012               	return	
 21837   009BFC                     l21490:
 21838                           
 21839                           ; BSR set to: 0
 21840                           ;../../VLCBlib_PIC/messageQueue.c: 100:  ret = &(q->messages[q->readIndex++]);
 21841   009BFC  518D               	movf	pop@q& (0+255),w,b
 21842   009BFE  6ED9               	movwf	fsr2l,c
 21843   009C00  6ADA               	clrf	fsr2h,c
 21844   009C02  0E02               	movlw	2
 21845   009C04  26D9               	addwf	fsr2l,f,c
 21846   009C06  50DF               	movf	indf2,w,c
 21847   009C08  6F8F               	movwf	??_pop& (0+255),b
 21848   009C0A  518F               	movf	??_pop& (0+255),w,b
 21849   009C0C  0D09               	mullw	9
 21850   009C0E  CFF3 F090          	movff	prodl,??_pop+1
 21851   009C12  CFF4 F091          	movff	prodh,??_pop+2
 21852   009C16  518D               	movf	pop@q& (0+255),w,b
 21853   009C18  6ED9               	movwf	fsr2l,c
 21854   009C1A  6ADA               	clrf	fsr2h,c
 21855   009C1C  CFDE F092          	movff	postinc2,??_pop+3
 21856   009C20  CFDD F093          	movff	postdec2,??_pop+4
 21857   009C24  5190               	movf	(??_pop+1)& (0+255),w,b
 21858   009C26  2592               	addwf	(??_pop+3)& (0+255),w,b
 21859   009C28  6F94               	movwf	pop@ret& (0+255),b
 21860   009C2A  5191               	movf	(??_pop+2)& (0+255),w,b
 21861   009C2C  2193               	addwfc	(??_pop+4)& (0+255),w,b
 21862   009C2E  6F95               	movwf	(pop@ret+1)& (0+255),b
 21863                           
 21864                           ; BSR set to: 0
 21865   009C30  518D               	movf	pop@q& (0+255),w,b
 21866   009C32  6ED9               	movwf	fsr2l,c
 21867   009C34  6ADA               	clrf	fsr2h,c
 21868   009C36  0E02               	movlw	2
 21869   009C38  26D9               	addwf	fsr2l,f,c
 21870   009C3A  2ADF               	incf	indf2,f,c
 21871                           
 21872                           ; BSR set to: 0
 21873                           ;../../VLCBlib_PIC/messageQueue.c: 101:  if (q->readIndex >= q->size) q->readIndex = 0;
 21874   009C3C  518D               	movf	pop@q& (0+255),w,b
 21875   009C3E  6ED9               	movwf	fsr2l,c
 21876   009C40  6ADA               	clrf	fsr2h,c
 21877   009C42  0E04               	movlw	4
 21878   009C44  26D9               	addwf	fsr2l,f,c
 21879   009C46  518D               	movf	pop@q& (0+255),w,b
 21880   009C48  6EE1               	movwf	fsr1l,c
 21881   009C4A  6AE2               	clrf	fsr1h,c
 21882   009C4C  0E02               	movlw	2
 21883   009C4E  26E1               	addwf	fsr1l,f,c
 21884   009C50  50DE               	movf	postinc2,w,c
 21885   009C52  5CE6               	subwf	postinc1,w,c
 21886   009C54  A0D8               	btfss	status,0,c
 21887   009C56  D006               	goto	l21498
 21888                           
 21889                           ; BSR set to: 0
 21890   009C58  518D               	movf	pop@q& (0+255),w,b
 21891   009C5A  6ED9               	movwf	fsr2l,c
 21892   009C5C  6ADA               	clrf	fsr2h,c
 21893   009C5E  0E02               	movlw	2
 21894   009C60  26D9               	addwf	fsr2l,f,c
 21895   009C62  6ADF               	clrf	indf2,c
 21896   009C64                     l21498:
 21897                           
 21898                           ; BSR set to: 0
 21899                           ;../../VLCBlib_PIC/messageQueue.c: 102:  return ret;
 21900   009C64  C094  F08D         	movff	pop@ret,?_pop
 21901   009C68  C095  F08E         	movff	pop@ret+1,?_pop+1
 21902                           
 21903                           ; BSR set to: 0
 21904   009C6C  0012               	return		;funcret
 21905   009C6E                     __end_of_pop:
 21906                           	callstack 0
 21907                           
 21908 ;; *************** function _memcpy *****************
 21909 ;; Defined at:
 21910 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
 21911 ;; Parameters:    Size  Location     Type
 21912 ;;  d1              2   45[BANK0 ] PTR void 
 21913 ;;		 -> poll@m(9), 
 21914 ;;  s1              2   47[BANK0 ] PTR const void 
 21915 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 21916 ;;  n               2   49[BANK0 ] unsigned int 
 21917 ;; Auto vars:     Size  Location     Type
 21918 ;;  s               2   54[BANK0 ] PTR const unsigned char 
 21919 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 21920 ;;  d               2   52[BANK0 ] PTR unsigned char 
 21921 ;;		 -> poll@m(9), 
 21922 ;;  tmp             1   51[BANK0 ] unsigned char 
 21923 ;; Return value:  Size  Location     Type
 21924 ;;                  2   45[BANK0 ] PTR void 
 21925 ;; Registers used:
 21926 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21927 ;; Tracked objects:
 21928 ;;		On entry : 0/0
 21929 ;;		On exit  : 0/0
 21930 ;;		Unchanged: 0/0
 21931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21932 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21933 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21935 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21936 ;;Total ram usage:       11 bytes
 21937 ;; Hardware stack levels used: 1
 21938 ;; Hardware stack levels required when called: 12
 21939 ;; This function calls:
 21940 ;;		Nothing
 21941 ;; This function is called by:
 21942 ;;		_canReceiveMessage
 21943 ;; This function uses a non-reentrant model
 21944 ;;
 21945                           
 21946                           	psect	text80
 21947   00B966                     __ptext80:
 21948                           	callstack 0
 21949   00B966                     _memcpy:
 21950                           	callstack 16
 21951                           
 21952                           ; BSR set to: 0
 21953                           ;incstack = 0
 21954   00B966  C08F  F096         	movff	memcpy@s1,memcpy@s
 21955   00B96A  C090  F097         	movff	memcpy@s1+1,memcpy@s+1
 21956   00B96E  C08D  F094         	movff	memcpy@d1,memcpy@d
 21957   00B972  C08E  F095         	movff	memcpy@d1+1,memcpy@d+1
 21958   00B976  D010               	goto	l21674
 21959   00B978                     l21666:
 21960                           
 21961                           ; BSR set to: 0
 21962   00B978  C096  FFD9         	movff	memcpy@s,fsr2l
 21963   00B97C  C097  FFDA         	movff	memcpy@s+1,fsr2h
 21964   00B980  50DF               	movf	indf2,w,c
 21965   00B982  6F93               	movwf	memcpy@tmp& (0+255),b
 21966                           
 21967                           ; BSR set to: 0
 21968   00B984  4B96               	infsnz	memcpy@s& (0+255),f,b
 21969   00B986  2B97               	incf	(memcpy@s+1)& (0+255),f,b
 21970                           
 21971                           ; BSR set to: 0
 21972   00B988  C094  FFD9         	movff	memcpy@d,fsr2l
 21973   00B98C  C095  FFDA         	movff	memcpy@d+1,fsr2h
 21974   00B990  C093  FFDF         	movff	memcpy@tmp,indf2
 21975                           
 21976                           ; BSR set to: 0
 21977   00B994  4B94               	infsnz	memcpy@d& (0+255),f,b
 21978   00B996  2B95               	incf	(memcpy@d+1)& (0+255),f,b
 21979   00B998                     l21674:
 21980   00B998  0100               	movlb	0	; () banked
 21981   00B99A  0791               	decf	memcpy@n& (0+255),f,b
 21982   00B99C  A0D8               	btfss	status,0,c
 21983   00B99E  0792               	decf	(memcpy@n+1)& (0+255),f,b
 21984   00B9A0  2991               	incf	memcpy@n& (0+255),w,b
 21985   00B9A2  E1EA               	bnz	l21666
 21986   00B9A4  2992               	incf	(memcpy@n+1)& (0+255),w,b
 21987   00B9A6  B4D8               	btfsc	status,2,c
 21988   00B9A8  0012               	return	
 21989   00B9AA  D7E6               	goto	l21666
 21990   00B9AC                     __end_of_memcpy:
 21991                           	callstack 0
 21992                           
 21993 ;; *************** function _handleSelfEnumeration *****************
 21994 ;; Defined at:
 21995 ;;		line 729 in file "../../VLCBlib_PIC/can18_ecan.c"
 21996 ;; Parameters:    Size  Location     Type
 21997 ;;  p               2   55[BANK0 ] PTR unsigned char 
 21998 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 21999 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 22000 ;;		 -> NULL(0), 
 22001 ;; Auto vars:     Size  Location     Type
 22002 ;;  incomingCanI    1   61[BANK0 ] unsigned char 
 22003 ;; Return value:  Size  Location     Type
 22004 ;;                  1    wreg      enum E13010
 22005 ;; Registers used:
 22006 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22007 ;; Tracked objects:
 22008 ;;		On entry : 0/0
 22009 ;;		On exit  : 0/0
 22010 ;;		Unchanged: 0/0
 22011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22012 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22013 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22014 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22015 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22016 ;;Total ram usage:        7 bytes
 22017 ;; Hardware stack levels used: 1
 22018 ;; Hardware stack levels required when called: 13
 22019 ;; This function calls:
 22020 ;;		_tickGet
 22021 ;; This function is called by:
 22022 ;;		_canReceiveMessage
 22023 ;; This function uses a non-reentrant model
 22024 ;;
 22025                           
 22026                           	psect	text81
 22027   008188                     __ptext81:
 22028                           	callstack 0
 22029   008188                     _handleSelfEnumeration:
 22030                           	callstack 15
 22031                           
 22032                           ;../../VLCBlib_PIC/can18_ecan.c: 730:     uint8_t incomingCanId;;../../VLCBlib_PIC/can18
      +                          _ecan.c: 734:     if (p[5] & 0x40 ) {
 22033                           
 22034                           ; BSR set to: 0
 22035                           ;incstack = 0
 22036   008188  0100               	movlb	0	; () banked
 22037   00818A  EE20 F005          	lfsr	2,5
 22038   00818E  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 22039   008190  26D9               	addwf	fsr2l,f,c
 22040   008192  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 22041   008194  22DA               	addwfc	fsr2h,f,c
 22042   008196  ACDF               	btfss	indf2,6,c
 22043   008198  D00E               	goto	l21728
 22044                           
 22045                           ; BSR set to: 0
 22046                           ;../../VLCBlib_PIC/can18_ecan.c: 736:         TXB2CONbits.TXREQ = 1;
 22047   00819A  010F               	movlb	15	; () banked
 22048   00819C  8700               	bsf	0,3,b	;volatile
 22049                           
 22050                           ; BSR set to: 15
 22051                           ;../../VLCBlib_PIC/can18_ecan.c: 737:         enumerationStartTime.val = tickGet();
 22052   00819E  ECC2  F059         	call	_tickGet	;wreg free
 22053   0081A2  C08D  F011         	movff	?_tickGet,_enumerationStartTime
 22054   0081A6  C08E  F012         	movff	?_tickGet+1,_enumerationStartTime+1
 22055   0081AA  C08F  F013         	movff	?_tickGet+2,_enumerationStartTime+2
 22056   0081AE  C090  F014         	movff	?_tickGet+3,_enumerationStartTime+3
 22057                           
 22058                           ;../../VLCBlib_PIC/can18_ecan.c: 738:         return NOT_RECEIVED;
 22059   0081B2  0E00               	movlw	0
 22060   0081B4  0012               	return	
 22061   0081B6                     l21728:
 22062                           
 22063                           ; BSR set to: 0
 22064                           ;../../VLCBlib_PIC/can18_ecan.c: 740:     incomingCanId = (p[1] << 3) + (p[2] >> 5) & 0x
      +                          7f;
 22065   0081B6  EE20 F002          	lfsr	2,2
 22066   0081BA  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 22067   0081BC  26D9               	addwf	fsr2l,f,c
 22068   0081BE  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 22069   0081C0  22DA               	addwfc	fsr2h,f,c
 22070   0081C2  50DF               	movf	indf2,w,c
 22071   0081C4  6F99               	movwf	??_handleSelfEnumeration& (0+255),b
 22072   0081C6  0E05               	movlw	5
 22073   0081C8  6F9A               	movwf	(??_handleSelfEnumeration+1)& (0+255),b
 22074   0081CA                     u22985:
 22075   0081CA  90D8               	bcf	status,0,c
 22076   0081CC  3399               	rrcf	??_handleSelfEnumeration& (0+255),f,b
 22077   0081CE  2F9A               	decfsz	(??_handleSelfEnumeration+1)& (0+255),f,b
 22078   0081D0  D7FC               	goto	u22985
 22079   0081D2  EE20 F001          	lfsr	2,1
 22080   0081D6  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 22081   0081D8  26D9               	addwf	fsr2l,f,c
 22082   0081DA  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 22083   0081DC  22DA               	addwfc	fsr2h,f,c
 22084   0081DE  50DF               	movf	indf2,w,c
 22085   0081E0  0D08               	mullw	8
 22086   0081E2  50F3               	movf	243,w,c
 22087   0081E4  2599               	addwf	??_handleSelfEnumeration& (0+255),w,b
 22088   0081E6  0B7F               	andlw	127
 22089   0081E8  6F9D               	movwf	handleSelfEnumeration@incomingCanId& (0+255),b
 22090                           
 22091                           ; BSR set to: 0
 22092                           ;../../VLCBlib_PIC/can18_ecan.c: 742:     if ((enumerationState == ENUMERATION_IN_PROGRE
      +                          SS) || ((p[5]&0x0F) == 0)) {
 22093   0081EA  0E02               	movlw	2
 22094   0081EC  19B5               	xorwf	_enumerationState& (0+255),w,b
 22095   0081EE  B4D8               	btfsc	status,2,c
 22096   0081F0  D00C               	goto	u23000
 22097                           
 22098                           ; BSR set to: 0
 22099   0081F2  EE20 F005          	lfsr	2,5
 22100   0081F6  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 22101   0081F8  26D9               	addwf	fsr2l,f,c
 22102   0081FA  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 22103   0081FC  22DA               	addwfc	fsr2h,f,c
 22104   0081FE  50DF               	movf	indf2,w,c
 22105   008200  6F99               	movwf	??_handleSelfEnumeration& (0+255),b
 22106   008202  0E0F               	movlw	15
 22107   008204  1799               	andwf	??_handleSelfEnumeration& (0+255),f,b
 22108   008206  A4D8               	btfss	status,2,c
 22109   008208  D01B               	goto	l21736
 22110   00820A                     u23000:
 22111                           
 22112                           ; BSR set to: 0
 22113                           ;../../VLCBlib_PIC/can18_ecan.c: 743:         ( enumerationResults[incomingCanId>>3] |= 
      +                          ( 1<<(incomingCanId & 0x07) ) );
 22114   00820A  C09D  F099         	movff	handleSelfEnumeration@incomingCanId,??_handleSelfEnumeration
 22115   00820E  0E07               	movlw	7
 22116   008210  1799               	andwf	??_handleSelfEnumeration& (0+255),f,b
 22117   008212  0E01               	movlw	1
 22118   008214  6F9A               	movwf	(??_handleSelfEnumeration+1)& (0+255),b
 22119   008216  2B99               	incf	??_handleSelfEnumeration& (0+255),f,b
 22120   008218  D002               	goto	u23014
 22121   00821A                     u23015:
 22122   00821A  90D8               	bcf	status,0,c
 22123   00821C  379A               	rlcf	(??_handleSelfEnumeration+1)& (0+255),f,b
 22124   00821E                     u23014:
 22125   00821E  2F99               	decfsz	??_handleSelfEnumeration& (0+255),f,b
 22126   008220  D7FC               	goto	u23015
 22127   008222  0100               	movlb	0	; () banked
 22128   008224  399D               	swapf	handleSelfEnumeration@incomingCanId& (0+255),w,b
 22129   008226  46E8               	rlncf	wreg,f,c
 22130   008228  0B1F               	andlw	31
 22131   00822A  6F9B               	movwf	(??_handleSelfEnumeration+2)& (0+255),b
 22132   00822C  6B9C               	clrf	(??_handleSelfEnumeration+3)& (0+255),b
 22133   00822E  0E14               	movlw	low _enumerationResults
 22134   008230  259B               	addwf	(??_handleSelfEnumeration+2)& (0+255),w,b
 22135   008232  6ED9               	movwf	fsr2l,c
 22136   008234  0E02               	movlw	high _enumerationResults
 22137   008236  219C               	addwfc	(??_handleSelfEnumeration+3)& (0+255),w,b
 22138   008238  6EDA               	movwf	fsr2h,c
 22139   00823A  519A               	movf	(??_handleSelfEnumeration+1)& (0+255),w,b
 22140   00823C  12DF               	iorwf	indf2,f,c
 22141                           
 22142                           ;../../VLCBlib_PIC/can18_ecan.c: 744:     } else {
 22143   00823E  D016               	goto	l21746
 22144   008240                     l21736:
 22145                           
 22146                           ; BSR set to: 0
 22147                           ;../../VLCBlib_PIC/can18_ecan.c: 745:         if ((enumerationState == NO_ENUMERATION) &
      +                          & (incomingCanId == canId)) {
 22148   008240  51B5               	movf	_enumerationState& (0+255),w,b
 22149   008242  A4D8               	btfss	status,2,c
 22150   008244  D013               	goto	l21746
 22151                           
 22152                           ; BSR set to: 0
 22153   008246  51B7               	movf	_canId& (0+255),w,b
 22154   008248  199D               	xorwf	handleSelfEnumeration@incomingCanId& (0+255),w,b
 22155   00824A  A4D8               	btfss	status,2,c
 22156   00824C  D00F               	goto	l21746
 22157                           
 22158                           ; BSR set to: 0
 22159                           ;../../VLCBlib_PIC/can18_ecan.c: 748:             enumerationState = ENUMERATION_REQUIRE
      +                          D;
 22160   00824E  0E01               	movlw	1
 22161   008250  6FB5               	movwf	_enumerationState& (0+255),b
 22162                           
 22163                           ; BSR set to: 0
 22164                           ;../../VLCBlib_PIC/can18_ecan.c: 749:             canDiagnostics[0x0D].asUint++;
 22165   008252  0101               	movlb	1	; () banked
 22166   008254  4B94               	infsnz	(_canDiagnostics+26)& (0+255),f,b
 22167   008256  2B95               	incf	(_canDiagnostics+27)& (0+255),f,b
 22168                           
 22169                           ; BSR set to: 1
 22170                           ;../../VLCBlib_PIC/can18_ecan.c: 750:             enumerationStartTime.val = tickGet();
 22171   008258  ECC2  F059         	call	_tickGet	;wreg free
 22172   00825C  C08D  F011         	movff	?_tickGet,_enumerationStartTime
 22173   008260  C08E  F012         	movff	?_tickGet+1,_enumerationStartTime+1
 22174   008264  C08F  F013         	movff	?_tickGet+2,_enumerationStartTime+2
 22175   008268  C090  F014         	movff	?_tickGet+3,_enumerationStartTime+3
 22176   00826C                     l21746:
 22177                           
 22178                           ;../../VLCBlib_PIC/can18_ecan.c: 754:     return (p[5] & 0x0F) ? RECEIVED:NOT_RECEIVED;
 22179   00826C  0100               	movlb	0	; () banked
 22180   00826E  EE20 F005          	lfsr	2,5
 22181   008272  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 22182   008274  26D9               	addwf	fsr2l,f,c
 22183   008276  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 22184   008278  22DA               	addwfc	fsr2h,f,c
 22185   00827A  50DF               	movf	indf2,w,c
 22186   00827C  6F99               	movwf	??_handleSelfEnumeration& (0+255),b
 22187   00827E  0E0F               	movlw	15
 22188   008280  1799               	andwf	??_handleSelfEnumeration& (0+255),f,b
 22189   008282  B4D8               	btfsc	status,2,c
 22190   008284  D002               	goto	u23040
 22191   008286  0E01               	movlw	1
 22192   008288  0012               	return	
 22193   00828A                     u23040:
 22194   00828A  0E00               	movlw	0
 22195   00828C  0012               	return		;funcret
 22196   00828E                     __end_of_handleSelfEnumeration:
 22197                           	callstack 0
 22198                           
 22199 ;; *************** function _getBufferPointer *****************
 22200 ;; Defined at:
 22201 ;;		line 588 in file "../../VLCBlib_PIC/can18_ecan.c"
 22202 ;; Parameters:    Size  Location     Type
 22203 ;;  b               1    wreg     unsigned char 
 22204 ;; Auto vars:     Size  Location     Type
 22205 ;;  b               1   47[BANK0 ] unsigned char 
 22206 ;; Return value:  Size  Location     Type
 22207 ;;                  2   45[BANK0 ] PTR unsigned char 
 22208 ;; Registers used:
 22209 ;;		wreg, status,2, status,0
 22210 ;; Tracked objects:
 22211 ;;		On entry : 0/0
 22212 ;;		On exit  : 0/0
 22213 ;;		Unchanged: 0/0
 22214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22215 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22216 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22218 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22219 ;;Total ram usage:        3 bytes
 22220 ;; Hardware stack levels used: 1
 22221 ;; Hardware stack levels required when called: 12
 22222 ;; This function calls:
 22223 ;;		Nothing
 22224 ;; This function is called by:
 22225 ;;		_canReceiveMessage
 22226 ;; This function uses a non-reentrant model
 22227 ;;
 22228                           
 22229                           	psect	text82
 22230   00A002                     __ptext82:
 22231                           	callstack 0
 22232   00A002                     _getBufferPointer:
 22233                           	callstack 16
 22234                           
 22235                           ;incstack = 0
 22236                           ;getBufferPointer@b stored from wreg
 22237   00A002  0100               	movlb	0	; () banked
 22238   00A004  6F8F               	movwf	getBufferPointer@b& (0+255),b
 22239                           
 22240                           ;../../VLCBlib_PIC/can18_ecan.c: 589:     switch (b) {
 22241   00A006  D02D               	goto	l21716
 22242   00A008                     l21678:
 22243                           
 22244                           ; BSR set to: 0
 22245                           ;../../VLCBlib_PIC/can18_ecan.c: 591:             return (uint8_t*) & RXB0CON;
 22246   00A008  0E60               	movlw	96
 22247   00A00A  6F8D               	movwf	?_getBufferPointer& (0+255),b
 22248   00A00C  0E0F               	movlw	15
 22249   00A00E  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 22250   00A010  0012               	return	
 22251   00A012                     l21682:
 22252                           
 22253                           ; BSR set to: 0
 22254                           ;../../VLCBlib_PIC/can18_ecan.c: 593:             return (uint8_t*) & RXB1CON;
 22255   00A012  0E30               	movlw	48
 22256   00A014  6F8D               	movwf	?_getBufferPointer& (0+255),b
 22257   00A016  0E0F               	movlw	15
 22258   00A018  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 22259   00A01A  0012               	return	
 22260   00A01C                     l21686:
 22261                           
 22262                           ; BSR set to: 0
 22263                           ;../../VLCBlib_PIC/can18_ecan.c: 595:             return (uint8_t*) & B0CON;
 22264   00A01C  0E80               	movlw	128
 22265   00A01E  6F8D               	movwf	?_getBufferPointer& (0+255),b
 22266   00A020  0E0E               	movlw	14
 22267   00A022  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 22268   00A024  0012               	return	
 22269   00A026                     l21690:
 22270                           
 22271                           ; BSR set to: 0
 22272                           ;../../VLCBlib_PIC/can18_ecan.c: 597:             return (uint8_t*) & B1CON;
 22273   00A026  0E90               	movlw	144
 22274   00A028  6F8D               	movwf	?_getBufferPointer& (0+255),b
 22275   00A02A  0E0E               	movlw	14
 22276   00A02C  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 22277   00A02E  0012               	return	
 22278   00A030                     l21694:
 22279                           
 22280                           ; BSR set to: 0
 22281                           ;../../VLCBlib_PIC/can18_ecan.c: 599:             return (uint8_t*) & B2CON;
 22282   00A030  0EA0               	movlw	160
 22283   00A032  6F8D               	movwf	?_getBufferPointer& (0+255),b
 22284   00A034  0E0E               	movlw	14
 22285   00A036  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 22286   00A038  0012               	return	
 22287   00A03A                     l21698:
 22288                           
 22289                           ; BSR set to: 0
 22290                           ;../../VLCBlib_PIC/can18_ecan.c: 601:             return (uint8_t*) & B3CON;
 22291   00A03A  0EB0               	movlw	176
 22292   00A03C  6F8D               	movwf	?_getBufferPointer& (0+255),b
 22293   00A03E  0E0E               	movlw	14
 22294   00A040  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 22295   00A042  0012               	return	
 22296   00A044                     l21702:
 22297                           
 22298                           ; BSR set to: 0
 22299                           ;../../VLCBlib_PIC/can18_ecan.c: 603:             return (uint8_t*) & B4CON;
 22300   00A044  0EC0               	movlw	192
 22301   00A046  6F8D               	movwf	?_getBufferPointer& (0+255),b
 22302   00A048  0E0E               	movlw	14
 22303   00A04A  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 22304   00A04C  0012               	return	
 22305   00A04E                     l21706:
 22306                           
 22307                           ; BSR set to: 0
 22308                           ;../../VLCBlib_PIC/can18_ecan.c: 605:             return (uint8_t*) & B5CON;
 22309   00A04E  0ED0               	movlw	208
 22310   00A050  6F8D               	movwf	?_getBufferPointer& (0+255),b
 22311   00A052  0E0E               	movlw	14
 22312   00A054  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 22313   00A056  0012               	return	
 22314   00A058                     l21710:
 22315                           
 22316                           ; BSR set to: 0
 22317                           ;../../VLCBlib_PIC/can18_ecan.c: 607:             return ((void*)0);
 22318   00A058  0E00               	movlw	0
 22319   00A05A  6F8D               	movwf	?_getBufferPointer& (0+255),b
 22320   00A05C  0E00               	movlw	0
 22321   00A05E  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 22322   00A060  0012               	return	
 22323   00A062                     l21716:
 22324   00A062  0100               	movlb	0	; () banked
 22325   00A064  518F               	movf	getBufferPointer@b& (0+255),w,b
 22326                           
 22327                           ; Switch size 1, requested type "simple"
 22328                           ; Number of cases is 8, Range of values is 0 to 7
 22329                           ; switch strategies available:
 22330                           ; Name         Instructions Cycles
 22331                           ; simple_byte           25    13 (average)
 22332                           ;	Chosen strategy is simple_byte
 22333   00A066  0A00               	xorlw	0	; case 0
 22334   00A068  B4D8               	btfsc	status,2,c
 22335   00A06A  D7CE               	goto	l21678
 22336   00A06C  0A01               	xorlw	1	; case 1
 22337   00A06E  B4D8               	btfsc	status,2,c
 22338   00A070  D7D0               	goto	l21682
 22339   00A072  0A03               	xorlw	3	; case 2
 22340   00A074  B4D8               	btfsc	status,2,c
 22341   00A076  D7D2               	goto	l21686
 22342   00A078  0A01               	xorlw	1	; case 3
 22343   00A07A  B4D8               	btfsc	status,2,c
 22344   00A07C  D7D4               	goto	l21690
 22345   00A07E  0A07               	xorlw	7	; case 4
 22346   00A080  B4D8               	btfsc	status,2,c
 22347   00A082  D7D6               	goto	l21694
 22348   00A084  0A01               	xorlw	1	; case 5
 22349   00A086  B4D8               	btfsc	status,2,c
 22350   00A088  D7D8               	goto	l21698
 22351   00A08A  0A03               	xorlw	3	; case 6
 22352   00A08C  B4D8               	btfsc	status,2,c
 22353   00A08E  D7DA               	goto	l21702
 22354   00A090  0A01               	xorlw	1	; case 7
 22355   00A092  B4D8               	btfsc	status,2,c
 22356   00A094  D7DC               	goto	l21706
 22357   00A096  D7E0               	goto	l21710
 22358   00A098                     __end_of_getBufferPointer:
 22359                           	callstack 0
 22360                           
 22361 ;; *************** function _sendMessage7 *****************
 22362 ;; Defined at:
 22363 ;;		line 1206 in file "../../VLCBlib_PIC/vlcb.c"
 22364 ;; Parameters:    Size  Location     Type
 22365 ;;  opc             1    wreg     enum E12342
 22366 ;;  data1           1    8[BANK1 ] unsigned char 
 22367 ;;  data2           1    9[BANK1 ] unsigned char 
 22368 ;;  data3           1   10[BANK1 ] unsigned char 
 22369 ;;  data4           1   11[BANK1 ] unsigned char 
 22370 ;;  data5           1   12[BANK1 ] unsigned char 
 22371 ;;  data6           1   13[BANK1 ] unsigned char 
 22372 ;;  data7           1   14[BANK1 ] unsigned char 
 22373 ;; Auto vars:     Size  Location     Type
 22374 ;;  opc             1   69[BANK0 ] enum E12342
 22375 ;; Return value:  Size  Location     Type
 22376 ;;                  1    wreg      void 
 22377 ;; Registers used:
 22378 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 22379 ;; Tracked objects:
 22380 ;;		On entry : 0/0
 22381 ;;		On exit  : 0/0
 22382 ;;		Unchanged: 0/0
 22383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22384 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22385 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22387 ;;      Totals:         0       1       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22388 ;;Total ram usage:        8 bytes
 22389 ;; Hardware stack levels used: 1
 22390 ;; Hardware stack levels required when called: 15
 22391 ;; This function calls:
 22392 ;;		_sendMessage
 22393 ;; This function is called by:
 22394 ;;		_ackEventProcessMessage
 22395 ;;		_nerdCallback
 22396 ;;		_mnsProcessMessage
 22397 ;; This function uses a non-reentrant model
 22398 ;;
 22399                           
 22400                           	psect	text83
 22401   00BDF6                     __ptext83:
 22402                           	callstack 0
 22403   00BDF6                     _sendMessage7:
 22404                           	callstack 12
 22405                           
 22406                           ; BSR set to: 0
 22407                           ;incstack = 0
 22408                           ;sendMessage7@opc stored from wreg
 22409   00BDF6  0100               	movlb	0	; () banked
 22410   00BDF8  6FA5               	movwf	sendMessage7@opc& (0+255),b
 22411                           
 22412                           ;../../VLCBlib_PIC/vlcb.c: 1207:     sendMessage(opc, 8, data1, data2, data3, data4, dat
      +                          a5, data6, data7);
 22413   00BDFA  0E08               	movlw	8
 22414   00BDFC  0101               	movlb	1	; () banked
 22415   00BDFE  6FB5               	movwf	sendMessage@len& (0+255),b
 22416   00BE00  C1BD  F1B6         	movff	sendMessage7@data1,sendMessage@data1
 22417   00BE04  C1BE  F1B7         	movff	sendMessage7@data2,sendMessage@data2
 22418   00BE08  C1BF  F1B8         	movff	sendMessage7@data3,sendMessage@data3
 22419   00BE0C  C1C0  F1B9         	movff	sendMessage7@data4,sendMessage@data4
 22420   00BE10  C1C1  F1BA         	movff	sendMessage7@data5,sendMessage@data5
 22421   00BE14  C1C2  F1BB         	movff	sendMessage7@data6,sendMessage@data6
 22422   00BE18  C1C3  F1BC         	movff	sendMessage7@data7,sendMessage@data7
 22423   00BE1C  0100               	movlb	0	; () banked
 22424   00BE1E  51A5               	movf	sendMessage7@opc& (0+255),w,b
 22425   00BE20  EC1F  F054         	call	_sendMessage
 22426   00BE24  0012               	return		;funcret
 22427   00BE26                     __end_of_sendMessage7:
 22428                           	callstack 0
 22429                           
 22430 ;; *************** function _findService *****************
 22431 ;; Defined at:
 22432 ;;		line 807 in file "../../VLCBlib_PIC/vlcb.c"
 22433 ;; Parameters:    Size  Location     Type
 22434 ;;  id              1    wreg     unsigned char 
 22435 ;; Auto vars:     Size  Location     Type
 22436 ;;  id              1   49[BANK0 ] unsigned char 
 22437 ;;  i               1   50[BANK0 ] unsigned char 
 22438 ;; Return value:  Size  Location     Type
 22439 ;;                  2   45[BANK0 ] PTR const struct Service
 22440 ;; Registers used:
 22441 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 22442 ;; Tracked objects:
 22443 ;;		On entry : 0/0
 22444 ;;		On exit  : 0/0
 22445 ;;		Unchanged: 0/0
 22446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22447 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22448 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22449 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22450 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22451 ;;Total ram usage:        6 bytes
 22452 ;; Hardware stack levels used: 1
 22453 ;; Hardware stack levels required when called: 12
 22454 ;; This function calls:
 22455 ;;		Nothing
 22456 ;; This function is called by:
 22457 ;;		_ackEventProcessMessage
 22458 ;; This function uses a non-reentrant model
 22459 ;;
 22460                           
 22461                           	psect	text84
 22462   009E3C                     __ptext84:
 22463                           	callstack 0
 22464   009E3C                     _findService:
 22465                           	callstack 16
 22466                           
 22467                           ;incstack = 0
 22468                           ;findService@id stored from wreg
 22469   009E3C  0100               	movlb	0	; () banked
 22470   009E3E  6F91               	movwf	findService@id& (0+255),b
 22471                           
 22472                           ;../../VLCBlib_PIC/vlcb.c: 808:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 809:     for (i
      +                          =0; i<9; i++) {
 22473   009E40  0E00               	movlw	0
 22474   009E42  0100               	movlb	0	; () banked
 22475   009E44  6F92               	movwf	findService@i& (0+255),b
 22476   009E46                     l21002:
 22477                           
 22478                           ; BSR set to: 0
 22479                           ;../../VLCBlib_PIC/vlcb.c: 810:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == id)) {
 22480   009E46  5192               	movf	findService@i& (0+255),w,b
 22481   009E48  0D02               	mullw	2
 22482   009E4A  0E75               	movlw	low _services
 22483   009E4C  24F3               	addwf	243,w,c
 22484   009E4E  6EF6               	movwf	tblptrl,c
 22485   009E50  0EEE               	movlw	high _services
 22486   009E52  20F4               	addwfc	244,w,c
 22487   009E54  6EF7               	movwf	tblptrh,c
 22488   009E56                     	if	1	;There are 3 active tblptr bytes
 22489   009E56  6AF8               	clrf	tblptru,c
 22490   009E58  0E00               	movlw	low (__mediumconst shr (0+16))
 22491   009E5A  22F8               	addwfc	tblptru,f,c
 22492   009E5C                     	endif
 22493   009E5C  0009               	tblrd		*+
 22494   009E5E  50F5               	movf	tablat,w,c
 22495   009E60  0009               	tblrd		*+
 22496   009E62  10F5               	iorwf	tablat,w,c
 22497   009E64  B4D8               	btfsc	status,2,c
 22498   009E66  D02D               	goto	l21010
 22499                           
 22500                           ; BSR set to: 0
 22501   009E68  5192               	movf	findService@i& (0+255),w,b
 22502   009E6A  0D02               	mullw	2
 22503   009E6C  0E75               	movlw	low _services
 22504   009E6E  24F3               	addwf	243,w,c
 22505   009E70  6EF6               	movwf	tblptrl,c
 22506   009E72  0EEE               	movlw	high _services
 22507   009E74  20F4               	addwfc	244,w,c
 22508   009E76  6EF7               	movwf	tblptrh,c
 22509   009E78                     	if	1	;There are 3 active tblptr bytes
 22510   009E78  6AF8               	clrf	tblptru,c
 22511   009E7A  0E00               	movlw	low (__mediumconst shr (0+16))
 22512   009E7C  22F8               	addwfc	tblptru,f,c
 22513   009E7E                     	endif
 22514   009E7E  0009               	tblrd		*+
 22515   009E80  CFF5 F08F          	movff	tablat,??_findService
 22516   009E84  0009               	tblrd		*+
 22517   009E86  CFF5 F090          	movff	tablat,??_findService+1
 22518   009E8A  C08F  FFF6         	movff	??_findService,tblptrl
 22519   009E8E  C090  FFF7         	movff	??_findService+1,tblptrh
 22520   009E92                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 22521   009E92  6AF8               	clrf	tblptru,c
 22522   009E94                     	endif
 22523   009E94                     	if	0	;tblptru may be non-zero
 22524   009E94                     	endif
 22525   009E94  0008               	tblrd		*
 22526   009E96  50F5               	movf	tablat,w,c
 22527   009E98  1991               	xorwf	findService@id& (0+255),w,b
 22528   009E9A  A4D8               	btfss	status,2,c
 22529   009E9C  D012               	goto	l21010
 22530                           
 22531                           ; BSR set to: 0
 22532                           ;../../VLCBlib_PIC/vlcb.c: 811:             return services[i];
 22533   009E9E  5192               	movf	findService@i& (0+255),w,b
 22534   009EA0  0D02               	mullw	2
 22535   009EA2  0E75               	movlw	low _services
 22536   009EA4  24F3               	addwf	243,w,c
 22537   009EA6  6EF6               	movwf	tblptrl,c
 22538   009EA8  0EEE               	movlw	high _services
 22539   009EAA  20F4               	addwfc	244,w,c
 22540   009EAC  6EF7               	movwf	tblptrh,c
 22541   009EAE                     	if	1	;There are 3 active tblptr bytes
 22542   009EAE  6AF8               	clrf	tblptru,c
 22543   009EB0  0E00               	movlw	low (__mediumconst shr (0+16))
 22544   009EB2  22F8               	addwfc	tblptru,f,c
 22545   009EB4                     	endif
 22546   009EB4  0009               	tblrd		*+
 22547   009EB6  CFF5 F08D          	movff	tablat,?_findService
 22548   009EBA  000A               	tblrd		*-
 22549   009EBC  CFF5 F08E          	movff	tablat,?_findService+1
 22550   009EC0  0012               	return	
 22551   009EC2                     l21010:
 22552                           
 22553                           ; BSR set to: 0
 22554                           ;../../VLCBlib_PIC/vlcb.c: 813:     }
 22555   009EC2  2B92               	incf	findService@i& (0+255),f,b
 22556                           
 22557                           ; BSR set to: 0
 22558   009EC4  0E08               	movlw	8
 22559   009EC6  6592               	cpfsgt	findService@i& (0+255),b
 22560   009EC8  D7BE               	goto	l21002
 22561                           
 22562                           ; BSR set to: 0
 22563                           ;../../VLCBlib_PIC/vlcb.c: 814:     return ((void*)0);
 22564   009ECA  0E00               	movlw	0
 22565   009ECC  6F8D               	movwf	?_findService& (0+255),b
 22566   009ECE  0E00               	movlw	0
 22567   009ED0  6F8E               	movwf	(?_findService+1)& (0+255),b
 22568                           
 22569                           ; BSR set to: 0
 22570   009ED2  0012               	return		;funcret
 22571   009ED4                     __end_of_findService:
 22572                           	callstack 0
 22573                           
 22574 ;; *************** function _ackEventCheckLen *****************
 22575 ;; Defined at:
 22576 ;;		line 167 in file "../../VLCBlib_PIC/event_acknowledge.c"
 22577 ;; Parameters:    Size  Location     Type
 22578 ;;  m               2   17[BANK1 ] PTR struct Message
 22579 ;;		 -> poll@m(9), 
 22580 ;;  needed          1   19[BANK1 ] unsigned char 
 22581 ;; Auto vars:     Size  Location     Type
 22582 ;;		None
 22583 ;; Return value:  Size  Location     Type
 22584 ;;                  1    wreg      enum E12732
 22585 ;; Registers used:
 22586 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 22587 ;; Tracked objects:
 22588 ;;		On entry : 0/0
 22589 ;;		On exit  : 0/0
 22590 ;;		Unchanged: 0/0
 22591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22592 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22595 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22596 ;;Total ram usage:        3 bytes
 22597 ;; Hardware stack levels used: 1
 22598 ;; Hardware stack levels required when called: 17
 22599 ;; This function calls:
 22600 ;;		_checkLen
 22601 ;; This function is called by:
 22602 ;;		_ackEventProcessMessage
 22603 ;; This function uses a non-reentrant model
 22604 ;;
 22605                           
 22606                           	psect	text85
 22607   00C2A4                     __ptext85:
 22608                           	callstack 0
 22609   00C2A4                     _ackEventCheckLen:
 22610                           	callstack 11
 22611                           
 22612                           ;../../VLCBlib_PIC/event_acknowledge.c: 168:     return checkLen(m, needed, SERVICE_ID_E
      +                          VENTACK);
 22613                           
 22614                           ; BSR set to: 0
 22615                           ;incstack = 0
 22616   00C2A4  C1C6  F1C2         	movff	ackEventCheckLen@m,checkLen@m
 22617   00C2A8  C1C7  F1C3         	movff	ackEventCheckLen@m+1,checkLen@m+1
 22618   00C2AC  C1C8  F1C4         	movff	ackEventCheckLen@needed,checkLen@needed
 22619   00C2B0  0E09               	movlw	9
 22620   00C2B2  0101               	movlb	1	; () banked
 22621   00C2B4  6FC5               	movwf	checkLen@service& (0+255),b
 22622   00C2B6  ECE0  F053         	call	_checkLen	;wreg free
 22623   00C2BA  0012               	return		;funcret
 22624   00C2BC                     __end_of_ackEventCheckLen:
 22625                           	callstack 0
 22626                           
 22627 ;; *************** function _checkLen *****************
 22628 ;; Defined at:
 22629 ;;		line 1094 in file "../../VLCBlib_PIC/vlcb.c"
 22630 ;; Parameters:    Size  Location     Type
 22631 ;;  m               2   13[BANK1 ] PTR struct Message
 22632 ;;		 -> poll@m(9), 
 22633 ;;  needed          1   15[BANK1 ] unsigned char 
 22634 ;;  service         1   16[BANK1 ] unsigned char 
 22635 ;; Auto vars:     Size  Location     Type
 22636 ;;		None
 22637 ;; Return value:  Size  Location     Type
 22638 ;;                  1    wreg      enum E12732
 22639 ;; Registers used:
 22640 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 22641 ;; Tracked objects:
 22642 ;;		On entry : 0/0
 22643 ;;		On exit  : 0/0
 22644 ;;		Unchanged: 0/0
 22645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22646 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22648 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22649 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22650 ;;Total ram usage:        5 bytes
 22651 ;; Hardware stack levels used: 1
 22652 ;; Hardware stack levels required when called: 16
 22653 ;; This function calls:
 22654 ;;		_sendMessage5
 22655 ;; This function is called by:
 22656 ;;		_ackEventCheckLen
 22657 ;;		_teachCheckLen
 22658 ;; This function uses a non-reentrant model
 22659 ;;
 22660                           
 22661                           	psect	text86
 22662   00A7C0                     __ptext86:
 22663                           	callstack 0
 22664   00A7C0                     _checkLen:
 22665                           	callstack 11
 22666                           
 22667                           ;../../VLCBlib_PIC/vlcb.c: 1095:     if (m->len < needed) {
 22668                           
 22669                           ;incstack = 0
 22670   00A7C0  C1C2  FFD9         	movff	checkLen@m,fsr2l
 22671   00A7C4  C1C3  FFDA         	movff	checkLen@m+1,fsr2h
 22672   00A7C8  0101               	movlb	1	; () banked
 22673   00A7CA  51C4               	movf	checkLen@needed& (0+255),w,b
 22674   00A7CC  5CDE               	subwf	postinc2,w,c
 22675   00A7CE  B0D8               	btfsc	status,0,c
 22676   00A7D0  D034               	goto	l19942
 22677                           
 22678                           ; BSR set to: 1
 22679                           ;../../VLCBlib_PIC/vlcb.c: 1096:         if (m->len > 2) {
 22680   00A7D2  C1C2  FFD9         	movff	checkLen@m,fsr2l
 22681   00A7D6  C1C3  FFDA         	movff	checkLen@m+1,fsr2h
 22682   00A7DA  0E02               	movlw	2
 22683   00A7DC  64DF               	cpfsgt	indf2,c
 22684   00A7DE  D02B               	goto	l19938
 22685                           
 22686                           ; BSR set to: 1
 22687                           ;../../VLCBlib_PIC/vlcb.c: 1097:             if ((m->bytes[0] == nn.bytes.hi) && (m->byt
      +                          es[1] == nn.bytes.lo)) {
 22688   00A7E0  EE20 F002          	lfsr	2,2
 22689   00A7E4  51C2               	movf	checkLen@m& (0+255),w,b
 22690   00A7E6  26D9               	addwf	fsr2l,f,c
 22691   00A7E8  51C3               	movf	(checkLen@m+1)& (0+255),w,b
 22692   00A7EA  22DA               	addwfc	fsr2h,f,c
 22693   00A7EC  50DE               	movf	postinc2,w,c
 22694   00A7EE  0100               	movlb	0	; () banked
 22695   00A7F0  19B4               	xorwf	(_nn+1)& (0+255),w,b
 22696   00A7F2  A4D8               	btfss	status,2,c
 22697   00A7F4  D020               	goto	l19938
 22698                           
 22699                           ; BSR set to: 0
 22700   00A7F6  0101               	movlb	1	; () banked
 22701   00A7F8  EE20 F003          	lfsr	2,3
 22702   00A7FC  51C2               	movf	checkLen@m& (0+255),w,b
 22703   00A7FE  26D9               	addwf	fsr2l,f,c
 22704   00A800  51C3               	movf	(checkLen@m+1)& (0+255),w,b
 22705   00A802  22DA               	addwfc	fsr2h,f,c
 22706   00A804  0100               	movlb	0	; () banked
 22707   00A806  51B3               	movf	_nn& (0+255),w,b
 22708   00A808  18DE               	xorwf	postinc2,w,c
 22709   00A80A  A4D8               	btfss	status,2,c
 22710   00A80C  D014               	goto	l19938
 22711                           
 22712                           ; BSR set to: 0
 22713                           ;../../VLCBlib_PIC/vlcb.c: 1098:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, m->opc, service, CMDERR_INV_CMD);
 22714   00A80E  C0B4  F1BD         	movff	_nn+1,sendMessage5@data1
 22715   00A812  C0B3  F1BE         	movff	_nn,sendMessage5@data2
 22716   00A816  0101               	movlb	1	; () banked
 22717   00A818  EE20 F001          	lfsr	2,1
 22718   00A81C  51C2               	movf	checkLen@m& (0+255),w,b
 22719   00A81E  26D9               	addwf	fsr2l,f,c
 22720   00A820  51C3               	movf	(checkLen@m+1)& (0+255),w,b
 22721   00A822  22DA               	addwfc	fsr2h,f,c
 22722   00A824  50DF               	movf	indf2,w,c
 22723   00A826  6FBF               	movwf	sendMessage5@data3& (0+255),b
 22724   00A828  C1C5  F1C0         	movff	checkLen@service,sendMessage5@data4
 22725   00A82C  0E01               	movlw	1
 22726   00A82E  6FC1               	movwf	sendMessage5@data5& (0+255),b
 22727   00A830  0EAF               	movlw	175
 22728   00A832  EC13  F05F         	call	_sendMessage5
 22729   00A836                     l19938:
 22730                           
 22731                           ;../../VLCBlib_PIC/vlcb.c: 1101:         return PROCESSED;
 22732   00A836  0E01               	movlw	1
 22733   00A838  0012               	return	
 22734   00A83A                     l19942:
 22735                           
 22736                           ; BSR set to: 1
 22737                           ;../../VLCBlib_PIC/vlcb.c: 1103:     return NOT_PROCESSED;
 22738   00A83A  0E00               	movlw	0
 22739   00A83C  0012               	return		;funcret
 22740   00A83E                     __end_of_checkLen:
 22741                           	callstack 0
 22742                           
 22743 ;; *************** function _sendMessage5 *****************
 22744 ;; Defined at:
 22745 ;;		line 1177 in file "../../VLCBlib_PIC/vlcb.c"
 22746 ;; Parameters:    Size  Location     Type
 22747 ;;  opc             1    wreg     enum E12342
 22748 ;;  data1           1    8[BANK1 ] unsigned char 
 22749 ;;  data2           1    9[BANK1 ] unsigned char 
 22750 ;;  data3           1   10[BANK1 ] unsigned char 
 22751 ;;  data4           1   11[BANK1 ] unsigned char 
 22752 ;;  data5           1   12[BANK1 ] unsigned char 
 22753 ;; Auto vars:     Size  Location     Type
 22754 ;;  opc             1   69[BANK0 ] enum E12342
 22755 ;; Return value:  Size  Location     Type
 22756 ;;                  1    wreg      void 
 22757 ;; Registers used:
 22758 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 22759 ;; Tracked objects:
 22760 ;;		On entry : 0/0
 22761 ;;		On exit  : 0/0
 22762 ;;		Unchanged: 0/0
 22763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22764 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22765 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22767 ;;      Totals:         0       1       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22768 ;;Total ram usage:        6 bytes
 22769 ;; Hardware stack levels used: 1
 22770 ;; Hardware stack levels required when called: 15
 22771 ;; This function calls:
 22772 ;;		_sendMessage
 22773 ;; This function is called by:
 22774 ;;		_teachProcessMessage
 22775 ;;		_teachCheckLen
 22776 ;;		_doNenrd
 22777 ;;		_doNnclr
 22778 ;;		_doEvlrn
 22779 ;;		_doReval
 22780 ;;		_doEvuln
 22781 ;;		_doReqev
 22782 ;;		_mnsProcessMessage
 22783 ;;		_mnsPoll
 22784 ;;		_mnsTRserviceDiscoveryCallback
 22785 ;;		_nvProcessMessage
 22786 ;;		_checkLen
 22787 ;;		_canProcessMessage
 22788 ;; This function uses a non-reentrant model
 22789 ;;
 22790                           
 22791                           	psect	text87
 22792   00BE26                     __ptext87:
 22793                           	callstack 0
 22794   00BE26                     _sendMessage5:
 22795                           	callstack 12
 22796                           
 22797                           ;incstack = 0
 22798                           ;sendMessage5@opc stored from wreg
 22799   00BE26  0100               	movlb	0	; () banked
 22800   00BE28  6FA5               	movwf	sendMessage5@opc& (0+255),b
 22801                           
 22802                           ;../../VLCBlib_PIC/vlcb.c: 1178:     sendMessage(opc, 6, data1, data2, data3, data4, dat
      +                          a5, 0,0);
 22803   00BE2A  0E06               	movlw	6
 22804   00BE2C  0101               	movlb	1	; () banked
 22805   00BE2E  6FB5               	movwf	sendMessage@len& (0+255),b
 22806   00BE30  C1BD  F1B6         	movff	sendMessage5@data1,sendMessage@data1
 22807   00BE34  C1BE  F1B7         	movff	sendMessage5@data2,sendMessage@data2
 22808   00BE38  C1BF  F1B8         	movff	sendMessage5@data3,sendMessage@data3
 22809   00BE3C  C1C0  F1B9         	movff	sendMessage5@data4,sendMessage@data4
 22810   00BE40  C1C1  F1BA         	movff	sendMessage5@data5,sendMessage@data5
 22811   00BE44  0E00               	movlw	0
 22812   00BE46  6FBB               	movwf	sendMessage@data6& (0+255),b
 22813   00BE48  0E00               	movlw	0
 22814   00BE4A  6FBC               	movwf	sendMessage@data7& (0+255),b
 22815   00BE4C  0100               	movlb	0	; () banked
 22816   00BE4E  51A5               	movf	sendMessage5@opc& (0+255),w,b
 22817   00BE50  EC1F  F054         	call	_sendMessage
 22818   00BE54  0012               	return		;funcret
 22819   00BE56                     __end_of_sendMessage5:
 22820                           	callstack 0
 22821                           
 22822 ;; *************** function _APP_preProcessMessage *****************
 22823 ;; Defined at:
 22824 ;;		line 388 in file "../main.c"
 22825 ;; Parameters:    Size  Location     Type
 22826 ;;  m               2   45[BANK0 ] PTR struct Message
 22827 ;;		 -> poll@m(9), 
 22828 ;; Auto vars:     Size  Location     Type
 22829 ;;		None
 22830 ;; Return value:  Size  Location     Type
 22831 ;;                  1    wreg      enum E12732
 22832 ;; Registers used:
 22833 ;;		wreg
 22834 ;; Tracked objects:
 22835 ;;		On entry : 0/0
 22836 ;;		On exit  : 0/0
 22837 ;;		Unchanged: 0/0
 22838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22839 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22842 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22843 ;;Total ram usage:        2 bytes
 22844 ;; Hardware stack levels used: 1
 22845 ;; Hardware stack levels required when called: 12
 22846 ;; This function calls:
 22847 ;;		Nothing
 22848 ;; This function is called by:
 22849 ;;		_poll
 22850 ;; This function uses a non-reentrant model
 22851 ;;
 22852                           
 22853                           	psect	text88
 22854   00C3C0                     __ptext88:
 22855                           	callstack 0
 22856   00C3C0                     _APP_preProcessMessage:
 22857                           	callstack 17
 22858                           
 22859                           ;../main.c: 389:     return NOT_PROCESSED;
 22860                           
 22861                           ;incstack = 0
 22862   00C3C0  0E00               	movlw	0
 22863   00C3C2  0012               	return		;funcret
 22864   00C3C4                     __end_of_APP_preProcessMessage:
 22865                           	callstack 0
 22866                           
 22867 ;; *************** function _APP_postProcessMessage *****************
 22868 ;; Defined at:
 22869 ;;		line 395 in file "../main.c"
 22870 ;; Parameters:    Size  Location     Type
 22871 ;;  m               2   45[BANK0 ] PTR struct Message
 22872 ;;		 -> poll@m(9), 
 22873 ;; Auto vars:     Size  Location     Type
 22874 ;;		None
 22875 ;; Return value:  Size  Location     Type
 22876 ;;                  1    wreg      enum E12732
 22877 ;; Registers used:
 22878 ;;		wreg
 22879 ;; Tracked objects:
 22880 ;;		On entry : 0/0
 22881 ;;		On exit  : 0/0
 22882 ;;		Unchanged: 0/0
 22883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22884 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22887 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22888 ;;Total ram usage:        2 bytes
 22889 ;; Hardware stack levels used: 1
 22890 ;; Hardware stack levels required when called: 12
 22891 ;; This function calls:
 22892 ;;		Nothing
 22893 ;; This function is called by:
 22894 ;;		_poll
 22895 ;; This function uses a non-reentrant model
 22896 ;;
 22897                           
 22898                           	psect	text89
 22899   00C3C4                     __ptext89:
 22900                           	callstack 0
 22901   00C3C4                     _APP_postProcessMessage:
 22902                           	callstack 17
 22903                           
 22904                           ;../main.c: 396:     return NOT_PROCESSED;
 22905                           
 22906                           ;incstack = 0
 22907   00C3C4  0E00               	movlw	0
 22908   00C3C6  0012               	return		;funcret
 22909   00C3C8                     __end_of_APP_postProcessMessage:
 22910                           	callstack 0
 22911                           
 22912 ;; *************** function _loop *****************
 22913 ;; Defined at:
 22914 ;;		line 336 in file "../main.c"
 22915 ;; Parameters:    Size  Location     Type
 22916 ;;		None
 22917 ;; Auto vars:     Size  Location     Type
 22918 ;;		None
 22919 ;; Return value:  Size  Location     Type
 22920 ;;                  1    wreg      void 
 22921 ;; Registers used:
 22922 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 22923 ;; Tracked objects:
 22924 ;;		On entry : 0/0
 22925 ;;		On exit  : 0/0
 22926 ;;		Unchanged: 0/0
 22927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22930 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22931 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22932 ;;Total ram usage:        8 bytes
 22933 ;; Hardware stack levels used: 1
 22934 ;; Hardware stack levels required when called: 21
 22935 ;; This function calls:
 22936 ;;		___lmul
 22937 ;;		_getNV
 22938 ;;		_inputScan
 22939 ;;		_processActions
 22940 ;;		_processOutputs
 22941 ;;		_sendProducedEvent
 22942 ;;		_startServos
 22943 ;;		_tickGet
 22944 ;; This function is called by:
 22945 ;;		_main
 22946 ;; This function uses a non-reentrant model
 22947 ;;
 22948                           
 22949                           	psect	text90
 22950   006D32                     __ptext90:
 22951                           	callstack 0
 22952   006D32                     _loop:
 22953                           	callstack 9
 22954                           
 22955                           ;../main.c: 338:     if (!started && ((tickGet() - startTime.val) > (getNV(1) * (62500/1
      +                          0)) + (62500*2))) {
 22956                           
 22957                           ;incstack = 0
 22958   006D32  0100               	movlb	0	; () banked
 22959   006D34  51CC               	movf	_started& (0+255),w,b
 22960   006D36  A4D8               	btfss	status,2,c
 22961   006D38  D054               	goto	l23730
 22962                           
 22963                           ; BSR set to: 0
 22964   006D3A  ECC2  F059         	call	_tickGet	;wreg free
 22965   006D3E  5019               	movf	_startTime^0,w,c
 22966   006D40  0100               	movlb	0	; () banked
 22967   006D42  5D8D               	subwf	?_tickGet& (0+255),w,b
 22968   006D44  0101               	movlb	1	; () banked
 22969   006D46  6FE5               	movwf	??_loop& (0+255),b
 22970   006D48  501A               	movf	(_startTime+1)^0,w,c
 22971   006D4A  0100               	movlb	0	; () banked
 22972   006D4C  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 22973   006D4E  0101               	movlb	1	; () banked
 22974   006D50  6FE6               	movwf	(??_loop+1)& (0+255),b
 22975   006D52  501B               	movf	(_startTime+2)^0,w,c
 22976   006D54  0100               	movlb	0	; () banked
 22977   006D56  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 22978   006D58  0101               	movlb	1	; () banked
 22979   006D5A  6FE7               	movwf	(??_loop+2)& (0+255),b
 22980   006D5C  501C               	movf	(_startTime+3)^0,w,c
 22981   006D5E  0100               	movlb	0	; () banked
 22982   006D60  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 22983   006D62  0101               	movlb	1	; () banked
 22984   006D64  6FE8               	movwf	(??_loop+3)& (0+255),b
 22985   006D66  0E01               	movlw	1
 22986   006D68  EC35  F05D         	call	_getNV
 22987   006D6C  0100               	movlb	0	; () banked
 22988   006D6E  C08D  F091         	movff	?_getNV,___lmul@multiplier
 22989   006D72  C08E  F092         	movff	?_getNV+1,___lmul@multiplier+1
 22990   006D76  0E00               	movlw	0
 22991   006D78  BF92               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 22992   006D7A  0EFF               	movlw	-1
 22993   006D7C  6F93               	movwf	(___lmul@multiplier+2)& (0+255),b
 22994   006D7E  6F94               	movwf	(___lmul@multiplier+3)& (0+255),b
 22995   006D80  0E6A               	movlw	106
 22996   006D82  6F95               	movwf	___lmul@multiplicand& (0+255),b
 22997   006D84  0E18               	movlw	24
 22998   006D86  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22999   006D88  0E00               	movlw	0
 23000   006D8A  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23001   006D8C  0E00               	movlw	0
 23002   006D8E  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23003   006D90  ECEE  F059         	call	___lmul	;wreg free
 23004   006D94  0E48               	movlw	72
 23005   006D96  0100               	movlb	0	; () banked
 23006   006D98  2591               	addwf	?___lmul& (0+255),w,b
 23007   006D9A  0101               	movlb	1	; () banked
 23008   006D9C  6FE9               	movwf	(??_loop+4)& (0+255),b
 23009   006D9E  0EE8               	movlw	232
 23010   006DA0  0100               	movlb	0	; () banked
 23011   006DA2  2192               	addwfc	(?___lmul+1)& (0+255),w,b
 23012   006DA4  0101               	movlb	1	; () banked
 23013   006DA6  6FEA               	movwf	(??_loop+5)& (0+255),b
 23014   006DA8  0E01               	movlw	1
 23015   006DAA  0100               	movlb	0	; () banked
 23016   006DAC  2193               	addwfc	(?___lmul+2)& (0+255),w,b
 23017   006DAE  0101               	movlb	1	; () banked
 23018   006DB0  6FEB               	movwf	(??_loop+6)& (0+255),b
 23019   006DB2  0E00               	movlw	0
 23020   006DB4  0100               	movlb	0	; () banked
 23021   006DB6  2194               	addwfc	(?___lmul+3)& (0+255),w,b
 23022   006DB8  0101               	movlb	1	; () banked
 23023   006DBA  6FEC               	movwf	(??_loop+7)& (0+255),b
 23024   006DBC  51E5               	movf	??_loop& (0+255),w,b
 23025   006DBE  5DE9               	subwf	(??_loop+4)& (0+255),w,b
 23026   006DC0  51E6               	movf	(??_loop+1)& (0+255),w,b
 23027   006DC2  59EA               	subwfb	(??_loop+5)& (0+255),w,b
 23028   006DC4  51E7               	movf	(??_loop+2)& (0+255),w,b
 23029   006DC6  59EB               	subwfb	(??_loop+6)& (0+255),w,b
 23030   006DC8  51E8               	movf	(??_loop+3)& (0+255),w,b
 23031   006DCA  59EC               	subwfb	(??_loop+7)& (0+255),w,b
 23032   006DCC  B0D8               	btfsc	status,0,c
 23033   006DCE  D009               	goto	l23730
 23034                           
 23035                           ; BSR set to: 1
 23036                           ;../main.c: 339:         started = TRUE;
 23037   006DD0  0E01               	movlw	1
 23038   006DD2  0100               	movlb	0	; () banked
 23039   006DD4  6FCC               	movwf	_started& (0+255),b
 23040                           
 23041                           ; BSR set to: 0
 23042                           ;../main.c: 340:         sendProducedEvent(1, EVENT_ON);
 23043   006DD6  0E01               	movlw	1
 23044   006DD8  0101               	movlb	1	; () banked
 23045   006DDA  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 23046   006DDC  0E01               	movlw	1
 23047   006DDE  ECAD  F04C         	call	_sendProducedEvent
 23048   006DE2                     l23730:
 23049                           
 23050                           ;../main.c: 344:     if ((tickGet() - lastServoStartTime.val) > 5*(62500/2000)) {
 23051   006DE2  ECC2  F059         	call	_tickGet	;wreg free
 23052   006DE6  0101               	movlb	1	; () banked
 23053   006DE8  5170               	movf	_lastServoStartTime& (0+255),w,b
 23054   006DEA  0100               	movlb	0	; () banked
 23055   006DEC  5D8D               	subwf	?_tickGet& (0+255),w,b
 23056   006DEE  0101               	movlb	1	; () banked
 23057   006DF0  6FE5               	movwf	??_loop& (0+255),b
 23058   006DF2  5171               	movf	(_lastServoStartTime+1)& (0+255),w,b
 23059   006DF4  0100               	movlb	0	; () banked
 23060   006DF6  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 23061   006DF8  0101               	movlb	1	; () banked
 23062   006DFA  6FE6               	movwf	(??_loop+1)& (0+255),b
 23063   006DFC  5172               	movf	(_lastServoStartTime+2)& (0+255),w,b
 23064   006DFE  0100               	movlb	0	; () banked
 23065   006E00  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 23066   006E02  0101               	movlb	1	; () banked
 23067   006E04  6FE7               	movwf	(??_loop+2)& (0+255),b
 23068   006E06  5173               	movf	(_lastServoStartTime+3)& (0+255),w,b
 23069   006E08  0100               	movlb	0	; () banked
 23070   006E0A  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 23071   006E0C  0101               	movlb	1	; () banked
 23072   006E0E  6FE8               	movwf	(??_loop+3)& (0+255),b
 23073   006E10  51E8               	movf	(??_loop+3)& (0+255),w,b
 23074   006E12  11E7               	iorwf	(??_loop+2)& (0+255),w,b
 23075   006E14  11E6               	iorwf	(??_loop+1)& (0+255),w,b
 23076   006E16  E104               	bnz	u25570
 23077   006E18  0E9C               	movlw	156
 23078   006E1A  5DE5               	subwf	??_loop& (0+255),w,b
 23079   006E1C  A0D8               	btfss	status,0,c
 23080   006E1E  D00C               	goto	l23736
 23081   006E20                     u25570:
 23082                           
 23083                           ; BSR set to: 1
 23084                           ;../main.c: 345:         startServos();
 23085   006E20  EC5A  F04C         	call	_startServos	;wreg free
 23086                           
 23087                           ;../main.c: 346:         lastServoStartTime.val = tickGet();
 23088   006E24  ECC2  F059         	call	_tickGet	;wreg free
 23089   006E28  C08D  F170         	movff	?_tickGet,_lastServoStartTime
 23090   006E2C  C08E  F171         	movff	?_tickGet+1,_lastServoStartTime+1
 23091   006E30  C08F  F172         	movff	?_tickGet+2,_lastServoStartTime+2
 23092   006E34  C090  F173         	movff	?_tickGet+3,_lastServoStartTime+3
 23093   006E38                     l23736:
 23094                           
 23095                           ;../main.c: 349:     if (started) {
 23096   006E38  0100               	movlb	0	; () banked
 23097   006E3A  51CC               	movf	_started& (0+255),w,b
 23098   006E3C  B4D8               	btfsc	status,2,c
 23099   006E3E  0012               	return	
 23100                           
 23101                           ; BSR set to: 0
 23102                           ;../main.c: 350:         if ((tickGet() - lastInputScanTime.val) > 5*(62500/1000)) {
 23103   006E40  ECC2  F059         	call	_tickGet	;wreg free
 23104   006E44  0101               	movlb	1	; () banked
 23105   006E46  516C               	movf	_lastInputScanTime& (0+255),w,b
 23106   006E48  0100               	movlb	0	; () banked
 23107   006E4A  5D8D               	subwf	?_tickGet& (0+255),w,b
 23108   006E4C  0101               	movlb	1	; () banked
 23109   006E4E  6FE5               	movwf	??_loop& (0+255),b
 23110   006E50  516D               	movf	(_lastInputScanTime+1)& (0+255),w,b
 23111   006E52  0100               	movlb	0	; () banked
 23112   006E54  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 23113   006E56  0101               	movlb	1	; () banked
 23114   006E58  6FE6               	movwf	(??_loop+1)& (0+255),b
 23115   006E5A  516E               	movf	(_lastInputScanTime+2)& (0+255),w,b
 23116   006E5C  0100               	movlb	0	; () banked
 23117   006E5E  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 23118   006E60  0101               	movlb	1	; () banked
 23119   006E62  6FE7               	movwf	(??_loop+2)& (0+255),b
 23120   006E64  516F               	movf	(_lastInputScanTime+3)& (0+255),w,b
 23121   006E66  0100               	movlb	0	; () banked
 23122   006E68  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 23123   006E6A  0101               	movlb	1	; () banked
 23124   006E6C  6FE8               	movwf	(??_loop+3)& (0+255),b
 23125   006E6E  51E8               	movf	(??_loop+3)& (0+255),w,b
 23126   006E70  11E7               	iorwf	(??_loop+2)& (0+255),w,b
 23127   006E72  E106               	bnz	u25590
 23128   006E74  0E37               	movlw	55
 23129   006E76  5DE5               	subwf	??_loop& (0+255),w,b
 23130   006E78  0E01               	movlw	1
 23131   006E7A  59E6               	subwfb	(??_loop+1)& (0+255),w,b
 23132   006E7C  A0D8               	btfss	status,0,c
 23133   006E7E  D00C               	goto	l23744
 23134   006E80                     u25590:
 23135                           
 23136                           ; BSR set to: 1
 23137                           ;../main.c: 351:             inputScan();
 23138   006E80  EC4E  F025         	call	_inputScan	;wreg free
 23139                           
 23140                           ;../main.c: 352:             lastInputScanTime.val = tickGet();
 23141   006E84  ECC2  F059         	call	_tickGet	;wreg free
 23142   006E88  C08D  F16C         	movff	?_tickGet,_lastInputScanTime
 23143   006E8C  C08E  F16D         	movff	?_tickGet+1,_lastInputScanTime+1
 23144   006E90  C08F  F16E         	movff	?_tickGet+2,_lastInputScanTime+2
 23145   006E94  C090  F16F         	movff	?_tickGet+3,_lastInputScanTime+3
 23146   006E98                     l23744:
 23147                           
 23148                           ;../main.c: 354:         if ((tickGet() - lastActionPollTime.val) > 100*(62500/1000)) {
 23149   006E98  ECC2  F059         	call	_tickGet	;wreg free
 23150   006E9C  0101               	movlb	1	; () banked
 23151   006E9E  5168               	movf	_lastActionPollTime& (0+255),w,b
 23152   006EA0  0100               	movlb	0	; () banked
 23153   006EA2  5D8D               	subwf	?_tickGet& (0+255),w,b
 23154   006EA4  0101               	movlb	1	; () banked
 23155   006EA6  6FE5               	movwf	??_loop& (0+255),b
 23156   006EA8  5169               	movf	(_lastActionPollTime+1)& (0+255),w,b
 23157   006EAA  0100               	movlb	0	; () banked
 23158   006EAC  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 23159   006EAE  0101               	movlb	1	; () banked
 23160   006EB0  6FE6               	movwf	(??_loop+1)& (0+255),b
 23161   006EB2  516A               	movf	(_lastActionPollTime+2)& (0+255),w,b
 23162   006EB4  0100               	movlb	0	; () banked
 23163   006EB6  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 23164   006EB8  0101               	movlb	1	; () banked
 23165   006EBA  6FE7               	movwf	(??_loop+2)& (0+255),b
 23166   006EBC  516B               	movf	(_lastActionPollTime+3)& (0+255),w,b
 23167   006EBE  0100               	movlb	0	; () banked
 23168   006EC0  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 23169   006EC2  0101               	movlb	1	; () banked
 23170   006EC4  6FE8               	movwf	(??_loop+3)& (0+255),b
 23171   006EC6  51E8               	movf	(??_loop+3)& (0+255),w,b
 23172   006EC8  11E7               	iorwf	(??_loop+2)& (0+255),w,b
 23173   006ECA  E106               	bnz	u25600
 23174   006ECC  0E39               	movlw	57
 23175   006ECE  5DE5               	subwf	??_loop& (0+255),w,b
 23176   006ED0  0E18               	movlw	24
 23177   006ED2  59E6               	subwfb	(??_loop+1)& (0+255),w,b
 23178   006ED4  A0D8               	btfss	status,0,c
 23179   006ED6  0012               	return	
 23180   006ED8                     u25600:
 23181                           
 23182                           ; BSR set to: 1
 23183                           ;../main.c: 355:             processActions();
 23184   006ED8  EC9F  F029         	call	_processActions	;wreg free
 23185                           
 23186                           ;../main.c: 356:             processOutputs();
 23187   006EDC  ECB0  F035         	call	_processOutputs	;wreg free
 23188                           
 23189                           ;../main.c: 357:             lastActionPollTime.val = tickGet();
 23190   006EE0  ECC2  F059         	call	_tickGet	;wreg free
 23191   006EE4  C08D  F168         	movff	?_tickGet,_lastActionPollTime
 23192   006EE8  C08E  F169         	movff	?_tickGet+1,_lastActionPollTime+1
 23193   006EEC  C08F  F16A         	movff	?_tickGet+2,_lastActionPollTime+2
 23194   006EF0  C090  F16B         	movff	?_tickGet+3,_lastActionPollTime+3
 23195   006EF4  0012               	return		;funcret
 23196   006EF6                     __end_of_loop:
 23197                           	callstack 0
 23198                           
 23199 ;; *************** function _startServos *****************
 23200 ;; Defined at:
 23201 ;;		line 182 in file "../servo.c"
 23202 ;; Parameters:    Size  Location     Type
 23203 ;;		None
 23204 ;; Auto vars:     Size  Location     Type
 23205 ;;  type            1   29[BANK1 ] unsigned char 
 23206 ;; Return value:  Size  Location     Type
 23207 ;;                  1    wreg      void 
 23208 ;; Registers used:
 23209 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23210 ;; Tracked objects:
 23211 ;;		On entry : 0/0
 23212 ;;		On exit  : 0/0
 23213 ;;		Unchanged: 0/0
 23214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23216 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23218 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23219 ;;Total ram usage:        1 bytes
 23220 ;; Hardware stack levels used: 1
 23221 ;; Hardware stack levels required when called: 19
 23222 ;; This function calls:
 23223 ;;		_getNV
 23224 ;;		_pollServos
 23225 ;;		_setupTimer1
 23226 ;;		_setupTimer3
 23227 ;; This function is called by:
 23228 ;;		_loop
 23229 ;; This function uses a non-reentrant model
 23230 ;;
 23231                           
 23232                           	psect	text91
 23233   0098B4                     __ptext91:
 23234                           	callstack 0
 23235   0098B4                     _startServos:
 23236                           	callstack 10
 23237                           
 23238                           ;../servo.c: 183:     uint8_t type;;../servo.c: 186:     servoInBlock++;
 23239                           
 23240                           ;incstack = 0
 23241   0098B4  0100               	movlb	0	; () banked
 23242   0098B6  2BC4               	incf	_servoInBlock& (0+255),f,b
 23243                           
 23244                           ; BSR set to: 0
 23245                           ;../servo.c: 187:     if (servoInBlock >= 8) {
 23246   0098B8  0E07               	movlw	7
 23247   0098BA  65C4               	cpfsgt	_servoInBlock& (0+255),b
 23248   0098BC  D004               	goto	l21832
 23249                           
 23250                           ; BSR set to: 0
 23251                           ;../servo.c: 188:         servoInBlock = 0;
 23252   0098BE  0E00               	movlw	0
 23253   0098C0  6FC4               	movwf	_servoInBlock& (0+255),b
 23254                           
 23255                           ; BSR set to: 0
 23256                           ;../servo.c: 189:         pollServos();
 23257   0098C2  EC28  F004         	call	_pollServos	;wreg free
 23258   0098C6                     l21832:
 23259                           
 23260                           ;../servo.c: 191:     type = (uint8_t)getNV((16 + 7*(servoInBlock) + 0));
 23261   0098C6  0100               	movlb	0	; () banked
 23262   0098C8  51C4               	movf	_servoInBlock& (0+255),w,b
 23263   0098CA  0D07               	mullw	7
 23264   0098CC  50F3               	movf	243,w,c
 23265   0098CE  0F10               	addlw	16
 23266   0098D0  EC35  F05D         	call	_getNV
 23267   0098D4  0100               	movlb	0	; () banked
 23268   0098D6  518D               	movf	?_getNV& (0+255),w,b
 23269   0098D8  0101               	movlb	1	; () banked
 23270   0098DA  6FD2               	movwf	startServos@type& (0+255),b
 23271                           
 23272                           ; BSR set to: 1
 23273                           ;../servo.c: 192:     if ((type == 2) || (type == 3) || (type == 4)) {
 23274   0098DC  0E02               	movlw	2
 23275   0098DE  19D2               	xorwf	startServos@type& (0+255),w,b
 23276   0098E0  B4D8               	btfsc	status,2,c
 23277   0098E2  D008               	goto	u23170
 23278                           
 23279                           ; BSR set to: 1
 23280   0098E4  0E03               	movlw	3
 23281   0098E6  19D2               	xorwf	startServos@type& (0+255),w,b
 23282   0098E8  B4D8               	btfsc	status,2,c
 23283   0098EA  D004               	goto	u23170
 23284                           
 23285                           ; BSR set to: 1
 23286   0098EC  0E04               	movlw	4
 23287   0098EE  19D2               	xorwf	startServos@type& (0+255),w,b
 23288   0098F0  A4D8               	btfss	status,2,c
 23289   0098F2  D00D               	goto	l21844
 23290   0098F4                     u23170:
 23291                           
 23292                           ; BSR set to: 1
 23293                           ;../servo.c: 193:         if (servoState[servoInBlock] != SS_OFF) setupTimer1(servoInBlo
      +                          ck);
 23294   0098F4  0E30               	movlw	low _servoState
 23295   0098F6  0100               	movlb	0	; () banked
 23296   0098F8  25C4               	addwf	_servoInBlock& (0+255),w,b
 23297   0098FA  6ED9               	movwf	fsr2l,c
 23298   0098FC  6ADA               	clrf	fsr2h,c
 23299   0098FE  0E01               	movlw	high _servoState
 23300   009900  22DA               	addwfc	fsr2h,f,c
 23301   009902  50DF               	movf	indf2,w,c
 23302   009904  B4D8               	btfsc	status,2,c
 23303   009906  D003               	goto	l21844
 23304                           
 23305                           ; BSR set to: 0
 23306   009908  51C4               	movf	_servoInBlock& (0+255),w,b
 23307   00990A  EC84  F04E         	call	_setupTimer1
 23308   00990E                     l21844:
 23309                           
 23310                           ;../servo.c: 195:     type = (uint8_t)getNV((16 + 7*(servoInBlock+8) + 0));
 23311   00990E  0100               	movlb	0	; () banked
 23312   009910  51C4               	movf	_servoInBlock& (0+255),w,b
 23313   009912  0D07               	mullw	7
 23314   009914  50F3               	movf	243,w,c
 23315   009916  0F48               	addlw	72
 23316   009918  EC35  F05D         	call	_getNV
 23317   00991C  0100               	movlb	0	; () banked
 23318   00991E  518D               	movf	?_getNV& (0+255),w,b
 23319   009920  0101               	movlb	1	; () banked
 23320   009922  6FD2               	movwf	startServos@type& (0+255),b
 23321                           
 23322                           ; BSR set to: 1
 23323                           ;../servo.c: 196:     if ((type == 2) || (type == 3) || (type == 4)) {
 23324   009924  0E02               	movlw	2
 23325   009926  19D2               	xorwf	startServos@type& (0+255),w,b
 23326   009928  B4D8               	btfsc	status,2,c
 23327   00992A  D008               	goto	u23210
 23328                           
 23329                           ; BSR set to: 1
 23330   00992C  0E03               	movlw	3
 23331   00992E  19D2               	xorwf	startServos@type& (0+255),w,b
 23332   009930  B4D8               	btfsc	status,2,c
 23333   009932  D004               	goto	u23210
 23334                           
 23335                           ; BSR set to: 1
 23336   009934  0E04               	movlw	4
 23337   009936  19D2               	xorwf	startServos@type& (0+255),w,b
 23338   009938  A4D8               	btfss	status,2,c
 23339   00993A  0012               	return	
 23340   00993C                     u23210:
 23341                           
 23342                           ; BSR set to: 1
 23343                           ;../servo.c: 197:         if (servoState[servoInBlock+8] != SS_OFF) setupTimer3(servoInB
      +                          lock+8);
 23344   00993C  0E38               	movlw	low (_servoState+8)
 23345   00993E  0100               	movlb	0	; () banked
 23346   009940  25C4               	addwf	_servoInBlock& (0+255),w,b
 23347   009942  6ED9               	movwf	fsr2l,c
 23348   009944  6ADA               	clrf	fsr2h,c
 23349   009946  0E01               	movlw	high (_servoState+8)
 23350   009948  22DA               	addwfc	fsr2h,f,c
 23351   00994A  50DF               	movf	indf2,w,c
 23352   00994C  B4D8               	btfsc	status,2,c
 23353   00994E  0012               	return	
 23354                           
 23355                           ; BSR set to: 0
 23356   009950  51C4               	movf	_servoInBlock& (0+255),w,b
 23357   009952  0F08               	addlw	8
 23358   009954  EC37  F04E         	call	_setupTimer3
 23359   009958  0012               	return		;funcret
 23360   00995A                     __end_of_startServos:
 23361                           	callstack 0
 23362                           
 23363 ;; *************** function _setupTimer3 *****************
 23364 ;; Defined at:
 23365 ;;		line 217 in file "../servo.c"
 23366 ;; Parameters:    Size  Location     Type
 23367 ;;  io              1    wreg     unsigned char 
 23368 ;; Auto vars:     Size  Location     Type
 23369 ;;  io              1   60[BANK0 ] unsigned char 
 23370 ;;  ticks           2   58[BANK0 ] unsigned short 
 23371 ;; Return value:  Size  Location     Type
 23372 ;;                  1    wreg      void 
 23373 ;; Registers used:
 23374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23375 ;; Tracked objects:
 23376 ;;		On entry : 0/0
 23377 ;;		On exit  : 0/0
 23378 ;;		Unchanged: 0/0
 23379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23381 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23382 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23383 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23384 ;;Total ram usage:        8 bytes
 23385 ;; Hardware stack levels used: 1
 23386 ;; Hardware stack levels required when called: 13
 23387 ;; This function calls:
 23388 ;;		_getNV
 23389 ;;		_setOutputPin
 23390 ;; This function is called by:
 23391 ;;		_startServos
 23392 ;; This function uses a non-reentrant model
 23393 ;;
 23394                           
 23395                           	psect	text92
 23396   009C6E                     __ptext92:
 23397                           	callstack 0
 23398   009C6E                     _setupTimer3:
 23399                           	callstack 15
 23400                           
 23401                           ;incstack = 0
 23402                           ;setupTimer3@io stored from wreg
 23403   009C6E  0100               	movlb	0	; () banked
 23404   009C70  6F9C               	movwf	setupTimer3@io& (0+255),b
 23405                           
 23406                           ;../servo.c: 218:     uint16_t ticks = 0xFFFF - ((getNV((16 + 7*(io) + 1)) & 0x80) ?
 23407   009C72  0100               	movlb	0	; () banked
 23408   009C74  519C               	movf	setupTimer3@io& (0+255),w,b
 23409   009C76  0D07               	mullw	7
 23410   009C78  50F3               	movf	243,w,c
 23411   009C7A  0F11               	addlw	17
 23412   009C7C  EC35  F05D         	call	_getNV
 23413   009C80  0100               	movlb	0	; () banked
 23414   009C82  BF8D               	btfsc	?_getNV& (0+255),7,b
 23415   009C84  D013               	goto	l20980
 23416                           
 23417                           ; BSR set to: 0
 23418   009C86  0E40               	movlw	low _currentPos
 23419   009C88  259C               	addwf	setupTimer3@io& (0+255),w,b
 23420   009C8A  6ED9               	movwf	fsr2l,c
 23421   009C8C  6ADA               	clrf	fsr2h,c
 23422   009C8E  0E01               	movlw	high _currentPos
 23423   009C90  22DA               	addwfc	fsr2h,f,c
 23424   009C92  50DF               	movf	indf2,w,c
 23425   009C94  6F95               	movwf	??_setupTimer3& (0+255),b
 23426   009C96  5195               	movf	??_setupTimer3& (0+255),w,b
 23427   009C98  0D13               	mullw	19
 23428   009C9A  CFF3 F096          	movff	prodl,??_setupTimer3+1
 23429   009C9E  CFF4 F097          	movff	prodh,??_setupTimer3+2
 23430   009CA2  0E10               	movlw	16
 23431   009CA4  2596               	addwf	(??_setupTimer3+1)& (0+255),w,b
 23432   009CA6  6F98               	movwf	_setupTimer3$1905& (0+255),b
 23433   009CA8  0E0E               	movlw	14
 23434   009CAA  D012               	goto	L5
 23435   009CAC                     l20980:
 23436                           
 23437                           ; BSR set to: 0
 23438   009CAC  0E40               	movlw	low _currentPos
 23439   009CAE  259C               	addwf	setupTimer3@io& (0+255),w,b
 23440   009CB0  6ED9               	movwf	fsr2l,c
 23441   009CB2  6ADA               	clrf	fsr2h,c
 23442   009CB4  0E01               	movlw	high _currentPos
 23443   009CB6  22DA               	addwfc	fsr2h,f,c
 23444   009CB8  50DF               	movf	indf2,w,c
 23445   009CBA  6F95               	movwf	??_setupTimer3& (0+255),b
 23446   009CBC  5195               	movf	??_setupTimer3& (0+255),w,b
 23447   009CBE  0D24               	mullw	36
 23448   009CC0  CFF3 F096          	movff	prodl,??_setupTimer3+1
 23449   009CC4  CFF4 F097          	movff	prodh,??_setupTimer3+2
 23450   009CC8  0E78               	movlw	120
 23451   009CCA  2596               	addwf	(??_setupTimer3+1)& (0+255),w,b
 23452   009CCC  6F98               	movwf	_setupTimer3$1905& (0+255),b
 23453   009CCE  0E05               	movlw	5
 23454   009CD0                     L5:
 23455   009CD0  2197               	addwfc	(??_setupTimer3+2)& (0+255),w,b
 23456   009CD2  6F99               	movwf	(_setupTimer3$1905+1)& (0+255),b
 23457                           
 23458                           ; BSR set to: 0
 23459   009CD4  1D98               	comf	_setupTimer3$1905& (0+255),w,b
 23460   009CD6  6F9A               	movwf	setupTimer3@ticks& (0+255),b
 23461   009CD8  1D99               	comf	(_setupTimer3$1905+1)& (0+255),w,b
 23462   009CDA  6F9B               	movwf	(setupTimer3@ticks+1)& (0+255),b
 23463                           
 23464                           ; BSR set to: 0
 23465                           ;../servo.c: 221:     TMR3H = ticks >> 8;
 23466   009CDC  519B               	movf	(setupTimer3@ticks+1)& (0+255),w,b
 23467   009CDE  6EB3               	movwf	179,c	;volatile
 23468                           
 23469                           ; BSR set to: 0
 23470                           ;../servo.c: 222:     TMR3L = ticks & 0xFF;
 23471   009CE0  C09A  FFB2         	movff	setupTimer3@ticks,4018	;volatile
 23472                           
 23473                           ; BSR set to: 0
 23474                           ;../servo.c: 225:     setOutputPin(io, !(getNV((16 + 7*(io) + 1)) & 0x20));
 23475   009CE4  519C               	movf	setupTimer3@io& (0+255),w,b
 23476   009CE6  0D07               	mullw	7
 23477   009CE8  50F3               	movf	243,w,c
 23478   009CEA  0F11               	addlw	17
 23479   009CEC  EC35  F05D         	call	_getNV
 23480   009CF0  0100               	movlb	0	; () banked
 23481   009CF2  BB8D               	btfsc	?_getNV& (0+255),5,b
 23482   009CF4  D002               	goto	u22160
 23483   009CF6  0E01               	movlw	1
 23484   009CF8  D001               	goto	u22170
 23485   009CFA                     u22160:
 23486   009CFA  0E00               	movlw	0
 23487   009CFC                     u22170:
 23488   009CFC  6F91               	movwf	setOutputPin@state& (0+255),b
 23489   009CFE  519C               	movf	setupTimer3@io& (0+255),w,b
 23490   009D00  EC7B  F037         	call	_setOutputPin
 23491                           
 23492                           ;../servo.c: 226:     T3CONbits.TMR3ON = 1;
 23493   009D04  80B1               	bsf	177,0,c	;volatile
 23494   009D06  0012               	return		;funcret
 23495   009D08                     __end_of_setupTimer3:
 23496                           	callstack 0
 23497                           
 23498 ;; *************** function _setupTimer1 *****************
 23499 ;; Defined at:
 23500 ;;		line 206 in file "../servo.c"
 23501 ;; Parameters:    Size  Location     Type
 23502 ;;  io              1    wreg     unsigned char 
 23503 ;; Auto vars:     Size  Location     Type
 23504 ;;  io              1   60[BANK0 ] unsigned char 
 23505 ;;  ticks           2   58[BANK0 ] unsigned short 
 23506 ;; Return value:  Size  Location     Type
 23507 ;;                  1    wreg      void 
 23508 ;; Registers used:
 23509 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23510 ;; Tracked objects:
 23511 ;;		On entry : 0/0
 23512 ;;		On exit  : 0/0
 23513 ;;		Unchanged: 0/0
 23514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23516 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23517 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23518 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23519 ;;Total ram usage:        8 bytes
 23520 ;; Hardware stack levels used: 1
 23521 ;; Hardware stack levels required when called: 13
 23522 ;; This function calls:
 23523 ;;		_getNV
 23524 ;;		_setOutputPin
 23525 ;; This function is called by:
 23526 ;;		_startServos
 23527 ;; This function uses a non-reentrant model
 23528 ;;
 23529                           
 23530                           	psect	text93
 23531   009D08                     __ptext93:
 23532                           	callstack 0
 23533   009D08                     _setupTimer1:
 23534                           	callstack 15
 23535                           
 23536                           ;incstack = 0
 23537                           ;setupTimer1@io stored from wreg
 23538   009D08  0100               	movlb	0	; () banked
 23539   009D0A  6F9C               	movwf	setupTimer1@io& (0+255),b
 23540                           
 23541                           ;../servo.c: 207:     uint16_t ticks = 0xFFFF - ((getNV((16 + 7*(io) + 1)) & 0x80) ?
 23542   009D0C  0100               	movlb	0	; () banked
 23543   009D0E  519C               	movf	setupTimer1@io& (0+255),w,b
 23544   009D10  0D07               	mullw	7
 23545   009D12  50F3               	movf	243,w,c
 23546   009D14  0F11               	addlw	17
 23547   009D16  EC35  F05D         	call	_getNV
 23548   009D1A  0100               	movlb	0	; () banked
 23549   009D1C  BF8D               	btfsc	?_getNV& (0+255),7,b
 23550   009D1E  D013               	goto	l20964
 23551                           
 23552                           ; BSR set to: 0
 23553   009D20  0E40               	movlw	low _currentPos
 23554   009D22  259C               	addwf	setupTimer1@io& (0+255),w,b
 23555   009D24  6ED9               	movwf	fsr2l,c
 23556   009D26  6ADA               	clrf	fsr2h,c
 23557   009D28  0E01               	movlw	high _currentPos
 23558   009D2A  22DA               	addwfc	fsr2h,f,c
 23559   009D2C  50DF               	movf	indf2,w,c
 23560   009D2E  6F95               	movwf	??_setupTimer1& (0+255),b
 23561   009D30  5195               	movf	??_setupTimer1& (0+255),w,b
 23562   009D32  0D13               	mullw	19
 23563   009D34  CFF3 F096          	movff	prodl,??_setupTimer1+1
 23564   009D38  CFF4 F097          	movff	prodh,??_setupTimer1+2
 23565   009D3C  0E10               	movlw	16
 23566   009D3E  2596               	addwf	(??_setupTimer1+1)& (0+255),w,b
 23567   009D40  6F98               	movwf	_setupTimer1$1901& (0+255),b
 23568   009D42  0E0E               	movlw	14
 23569   009D44  D012               	goto	L6
 23570   009D46                     l20964:
 23571                           
 23572                           ; BSR set to: 0
 23573   009D46  0E40               	movlw	low _currentPos
 23574   009D48  259C               	addwf	setupTimer1@io& (0+255),w,b
 23575   009D4A  6ED9               	movwf	fsr2l,c
 23576   009D4C  6ADA               	clrf	fsr2h,c
 23577   009D4E  0E01               	movlw	high _currentPos
 23578   009D50  22DA               	addwfc	fsr2h,f,c
 23579   009D52  50DF               	movf	indf2,w,c
 23580   009D54  6F95               	movwf	??_setupTimer1& (0+255),b
 23581   009D56  5195               	movf	??_setupTimer1& (0+255),w,b
 23582   009D58  0D24               	mullw	36
 23583   009D5A  CFF3 F096          	movff	prodl,??_setupTimer1+1
 23584   009D5E  CFF4 F097          	movff	prodh,??_setupTimer1+2
 23585   009D62  0E78               	movlw	120
 23586   009D64  2596               	addwf	(??_setupTimer1+1)& (0+255),w,b
 23587   009D66  6F98               	movwf	_setupTimer1$1901& (0+255),b
 23588   009D68  0E05               	movlw	5
 23589   009D6A                     L6:
 23590   009D6A  2197               	addwfc	(??_setupTimer1+2)& (0+255),w,b
 23591   009D6C  6F99               	movwf	(_setupTimer1$1901+1)& (0+255),b
 23592                           
 23593                           ; BSR set to: 0
 23594   009D6E  1D98               	comf	_setupTimer1$1901& (0+255),w,b
 23595   009D70  6F9A               	movwf	setupTimer1@ticks& (0+255),b
 23596   009D72  1D99               	comf	(_setupTimer1$1901+1)& (0+255),w,b
 23597   009D74  6F9B               	movwf	(setupTimer1@ticks+1)& (0+255),b
 23598                           
 23599                           ; BSR set to: 0
 23600                           ;../servo.c: 210:     TMR1H = ticks >> 8;
 23601   009D76  519B               	movf	(setupTimer1@ticks+1)& (0+255),w,b
 23602   009D78  6ECF               	movwf	207,c	;volatile
 23603                           
 23604                           ; BSR set to: 0
 23605                           ;../servo.c: 211:     TMR1L = ticks & 0xFF;
 23606   009D7A  C09A  FFCE         	movff	setupTimer1@ticks,4046	;volatile
 23607                           
 23608                           ; BSR set to: 0
 23609                           ;../servo.c: 214:     setOutputPin(io, !(getNV((16 + 7*(io) + 1)) & 0x20));
 23610   009D7E  519C               	movf	setupTimer1@io& (0+255),w,b
 23611   009D80  0D07               	mullw	7
 23612   009D82  50F3               	movf	243,w,c
 23613   009D84  0F11               	addlw	17
 23614   009D86  EC35  F05D         	call	_getNV
 23615   009D8A  0100               	movlb	0	; () banked
 23616   009D8C  BB8D               	btfsc	?_getNV& (0+255),5,b
 23617   009D8E  D002               	goto	u22130
 23618   009D90  0E01               	movlw	1
 23619   009D92  D001               	goto	u22140
 23620   009D94                     u22130:
 23621   009D94  0E00               	movlw	0
 23622   009D96                     u22140:
 23623   009D96  6F91               	movwf	setOutputPin@state& (0+255),b
 23624   009D98  519C               	movf	setupTimer1@io& (0+255),w,b
 23625   009D9A  EC7B  F037         	call	_setOutputPin
 23626                           
 23627                           ;../servo.c: 215:     T1CONbits.TMR1ON = 1;
 23628   009D9E  80CD               	bsf	205,0,c	;volatile
 23629   009DA0  0012               	return		;funcret
 23630   009DA2                     __end_of_setupTimer1:
 23631                           	callstack 0
 23632                           
 23633 ;; *************** function _pollServos *****************
 23634 ;; Defined at:
 23635 ;;		line 284 in file "../servo.c"
 23636 ;; Parameters:    Size  Location     Type
 23637 ;;		None
 23638 ;; Auto vars:     Size  Location     Type
 23639 ;;  io              1   28[BANK1 ] unsigned char 
 23640 ;;  midway          1   27[BANK1 ] unsigned char 
 23641 ;;  beforeMidway    1   26[BANK1 ] enum E12700
 23642 ;;  target          1   25[BANK1 ] unsigned char 
 23643 ;; Return value:  Size  Location     Type
 23644 ;;                  1    wreg      void 
 23645 ;; Registers used:
 23646 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23647 ;; Tracked objects:
 23648 ;;		On entry : 0/0
 23649 ;;		On exit  : 0/0
 23650 ;;		Unchanged: 0/0
 23651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23653 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23654 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23655 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23656 ;;Total ram usage:       12 bytes
 23657 ;; Hardware stack levels used: 1
 23658 ;; Hardware stack levels required when called: 18
 23659 ;; This function calls:
 23660 ;;		___awdiv
 23661 ;;		_bounceDown
 23662 ;;		_bounceUp
 23663 ;;		_getNV
 23664 ;;		_initBounce
 23665 ;;		_sendProducedEvent
 23666 ;;		_tickGet
 23667 ;;		_writeNVM
 23668 ;; This function is called by:
 23669 ;;		_startServos
 23670 ;; This function uses a non-reentrant model
 23671 ;;
 23672                           
 23673                           	psect	text94
 23674   000850                     __ptext94:
 23675                           	callstack 0
 23676   000850                     _pollServos:
 23677                           	callstack 10
 23678                           
 23679                           ;../servo.c: 285:     uint8_t midway;;../servo.c: 286:     Boolean beforeMidway;;../serv
      +                          o.c: 287:     uint8_t io;;../servo.c: 288:     uint8_t target;;../servo.c: 290:     for 
      +                          (io=0; io<16; io++) {
 23680                           
 23681                           ;incstack = 0
 23682   000850  0E00               	movlw	0
 23683   000852  0101               	movlb	1	; () banked
 23684   000854  6FD1               	movwf	pollServos@io& (0+255),b
 23685   000856  EF3C  F00B         	goto	l20914
 23686   00085A                     l20686:
 23687                           
 23688                           ; BSR set to: 0
 23689                           ;../servo.c: 293:                 midway = ((uint8_t)getNV((16 + 7*(io) + 3)))/2 +
 23690   00085A  0101               	movlb	1	; () banked
 23691   00085C  51D1               	movf	pollServos@io& (0+255),w,b
 23692   00085E  0D07               	mullw	7
 23693   000860  50F3               	movf	243,w,c
 23694   000862  0F12               	addlw	18
 23695   000864  EC35  F05D         	call	_getNV
 23696   000868  0100               	movlb	0	; () banked
 23697   00086A  518D               	movf	?_getNV& (0+255),w,b
 23698   00086C  6F97               	movwf	___awdiv@dividend& (0+255),b
 23699   00086E  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 23700   000870  0E00               	movlw	0
 23701   000872  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 23702   000874  0E02               	movlw	2
 23703   000876  6F99               	movwf	___awdiv@divisor& (0+255),b
 23704   000878  ECD7  F052         	call	___awdiv	;wreg free
 23705   00087C  C097  F1C6         	movff	?___awdiv,??_pollServos
 23706   000880  C098  F1C7         	movff	?___awdiv+1,??_pollServos+1
 23707   000884  0101               	movlb	1	; () banked
 23708   000886  51D1               	movf	pollServos@io& (0+255),w,b
 23709   000888  0D07               	mullw	7
 23710   00088A  50F3               	movf	243,w,c
 23711   00088C  0F13               	addlw	19
 23712   00088E  EC35  F05D         	call	_getNV
 23713   000892  0100               	movlb	0	; () banked
 23714   000894  518D               	movf	?_getNV& (0+255),w,b
 23715   000896  6F97               	movwf	___awdiv@dividend& (0+255),b
 23716   000898  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 23717   00089A  0E00               	movlw	0
 23718   00089C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 23719   00089E  0E02               	movlw	2
 23720   0008A0  6F99               	movwf	___awdiv@divisor& (0+255),b
 23721   0008A2  ECD7  F052         	call	___awdiv	;wreg free
 23722   0008A6  0100               	movlb	0	; () banked
 23723   0008A8  5197               	movf	?___awdiv& (0+255),w,b
 23724   0008AA  0101               	movlb	1	; () banked
 23725   0008AC  25C6               	addwf	??_pollServos& (0+255),w,b
 23726   0008AE  6FD0               	movwf	pollServos@midway& (0+255),b
 23727                           
 23728                           ; BSR set to: 1
 23729                           ;../servo.c: 295:                 beforeMidway=FALSE;
 23730   0008B0  0E00               	movlw	0
 23731   0008B2  6FCF               	movwf	pollServos@beforeMidway& (0+255),b
 23732                           
 23733                           ;../servo.c: 296:                 switch (servoState[io]) {
 23734   0008B4  D25B               	goto	l20774
 23735   0008B6                     l20690:
 23736                           
 23737                           ; BSR set to: 1
 23738                           ;../servo.c: 298:                         if (currentPos[io]==getNV((16 + 7*(io) + 2))) 
      +                          {
 23739   0008B6  51D1               	movf	pollServos@io& (0+255),w,b
 23740   0008B8  0D07               	mullw	7
 23741   0008BA  50F3               	movf	243,w,c
 23742   0008BC  0F12               	addlw	18
 23743   0008BE  EC35  F05D         	call	_getNV
 23744   0008C2  0E40               	movlw	low _currentPos
 23745   0008C4  0101               	movlb	1	; () banked
 23746   0008C6  25D1               	addwf	pollServos@io& (0+255),w,b
 23747   0008C8  6ED9               	movwf	fsr2l,c
 23748   0008CA  6ADA               	clrf	fsr2h,c
 23749   0008CC  0E01               	movlw	high _currentPos
 23750   0008CE  22DA               	addwfc	fsr2h,f,c
 23751   0008D0  50DF               	movf	indf2,w,c
 23752   0008D2  6FC6               	movwf	??_pollServos& (0+255),b
 23753   0008D4  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 23754   0008D6  0100               	movlb	0	; () banked
 23755   0008D8  518D               	movf	?_getNV& (0+255),w,b
 23756   0008DA  0101               	movlb	1	; () banked
 23757   0008DC  19C6               	xorwf	??_pollServos& (0+255),w,b
 23758   0008DE  E118               	bnz	l20694
 23759   0008E0  0100               	movlb	0	; () banked
 23760   0008E2  518E               	movf	(?_getNV+1)& (0+255),w,b
 23761   0008E4  0101               	movlb	1	; () banked
 23762   0008E6  19C7               	xorwf	(??_pollServos+1)& (0+255),w,b
 23763   0008E8  A4D8               	btfss	status,2,c
 23764   0008EA  D012               	goto	l20694
 23765                           
 23766                           ; BSR set to: 1
 23767                           ;../servo.c: 299:                             sendProducedEvent(((8 + 4*(io))+0), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 23768   0008EC  51D1               	movf	pollServos@io& (0+255),w,b
 23769   0008EE  0D07               	mullw	7
 23770   0008F0  50F3               	movf	243,w,c
 23771   0008F2  0F11               	addlw	17
 23772   0008F4  EC35  F05D         	call	_getNV
 23773   0008F8  0100               	movlb	0	; () banked
 23774   0008FA  518D               	movf	?_getNV& (0+255),w,b
 23775   0008FC  0B40               	andlw	64
 23776   0008FE  0101               	movlb	1	; () banked
 23777   000900  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 23778   000902  51D1               	movf	pollServos@io& (0+255),w,b
 23779   000904  0D04               	mullw	4
 23780   000906  50F3               	movf	243,w,c
 23781   000908  0F08               	addlw	8
 23782   00090A  ECAD  F04C         	call	_sendProducedEvent
 23783                           
 23784                           ;../servo.c: 300:                         } else {
 23785   00090E  D011               	goto	l20696
 23786   000910                     l20694:
 23787                           
 23788                           ; BSR set to: 1
 23789                           ;../servo.c: 301:                             sendProducedEvent(((8 + 4*(io))+2), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 23790   000910  51D1               	movf	pollServos@io& (0+255),w,b
 23791   000912  0D07               	mullw	7
 23792   000914  50F3               	movf	243,w,c
 23793   000916  0F11               	addlw	17
 23794   000918  EC35  F05D         	call	_getNV
 23795   00091C  0100               	movlb	0	; () banked
 23796   00091E  518D               	movf	?_getNV& (0+255),w,b
 23797   000920  0B40               	andlw	64
 23798   000922  0101               	movlb	1	; () banked
 23799   000924  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 23800   000926  51D1               	movf	pollServos@io& (0+255),w,b
 23801   000928  0D04               	mullw	4
 23802   00092A  50F3               	movf	243,w,c
 23803   00092C  0F0A               	addlw	10
 23804   00092E  ECAD  F04C         	call	_sendProducedEvent
 23805   000932                     l20696:
 23806                           
 23807                           ;../servo.c: 303:                         servoState[io] = SS_MOVING;
 23808   000932  0E30               	movlw	low _servoState
 23809   000934  0101               	movlb	1	; () banked
 23810   000936  25D1               	addwf	pollServos@io& (0+255),w,b
 23811   000938  6ED9               	movwf	fsr2l,c
 23812   00093A  6ADA               	clrf	fsr2h,c
 23813   00093C  0E01               	movlw	high _servoState
 23814   00093E  22DA               	addwfc	fsr2h,f,c
 23815   000940  0E02               	movlw	2
 23816   000942  6EDF               	movwf	indf2,c
 23817   000944                     l20698:
 23818                           
 23819                           ; BSR set to: 1
 23820                           ;../servo.c: 306:                         if (targetPos[io] > currentPos[io]) {
 23821   000944  51D1               	movf	pollServos@io& (0+255),w,b
 23822   000946  0F01               	addlw	low _targetPos
 23823   000948  6ED9               	movwf	fsr2l,c
 23824   00094A  6ADA               	clrf	fsr2h,c
 23825   00094C  0E40               	movlw	low _currentPos
 23826   00094E  25D1               	addwf	pollServos@io& (0+255),w,b
 23827   000950  6EE1               	movwf	fsr1l,c
 23828   000952  6AE2               	clrf	fsr1h,c
 23829   000954  0E01               	movlw	high _currentPos
 23830   000956  22E2               	addwfc	fsr1h,f,c
 23831   000958  50DE               	movf	postinc2,w,c
 23832   00095A  5CE6               	subwf	postinc1,w,c
 23833   00095C  B0D8               	btfsc	status,0,c
 23834   00095E  D0B8               	goto	l20728
 23835                           
 23836                           ; BSR set to: 1
 23837                           ;../servo.c: 307:                             if (currentPos[io] < midway) {
 23838   000960  0E40               	movlw	low _currentPos
 23839   000962  25D1               	addwf	pollServos@io& (0+255),w,b
 23840   000964  6ED9               	movwf	fsr2l,c
 23841   000966  6ADA               	clrf	fsr2h,c
 23842   000968  0E01               	movlw	high _currentPos
 23843   00096A  22DA               	addwfc	fsr2h,f,c
 23844   00096C  51D0               	movf	pollServos@midway& (0+255),w,b
 23845   00096E  5CDE               	subwf	postinc2,w,c
 23846   000970  B0D8               	btfsc	status,0,c
 23847   000972  D002               	goto	l20704
 23848                           
 23849                           ; BSR set to: 1
 23850                           ;../servo.c: 308:                                 beforeMidway = TRUE;
 23851   000974  0E01               	movlw	1
 23852   000976  6FCF               	movwf	pollServos@beforeMidway& (0+255),b
 23853   000978                     l20704:
 23854                           
 23855                           ; BSR set to: 1
 23856                           ;../servo.c: 311:                             if (stepsPerPollSpeed[io]) {
 23857   000978  0E20               	movlw	low _stepsPerPollSpeed
 23858   00097A  25D1               	addwf	pollServos@io& (0+255),w,b
 23859   00097C  6ED9               	movwf	fsr2l,c
 23860   00097E  6ADA               	clrf	fsr2h,c
 23861   000980  0E01               	movlw	high _stepsPerPollSpeed
 23862   000982  22DA               	addwfc	fsr2h,f,c
 23863   000984  50DF               	movf	indf2,w,c
 23864   000986  B4D8               	btfsc	status,2,c
 23865   000988  D042               	goto	l20712
 23866                           
 23867                           ; BSR set to: 1
 23868                           ;../servo.c: 312:                                 if (currentPos[io] + stepsPerPollSpeed
      +                          [io] < currentPos[io]) {
 23869   00098A  0E40               	movlw	low _currentPos
 23870   00098C  25D1               	addwf	pollServos@io& (0+255),w,b
 23871   00098E  6ED9               	movwf	fsr2l,c
 23872   000990  6ADA               	clrf	fsr2h,c
 23873   000992  0E01               	movlw	high _currentPos
 23874   000994  22DA               	addwfc	fsr2h,f,c
 23875   000996  50DF               	movf	indf2,w,c
 23876   000998  6FC6               	movwf	??_pollServos& (0+255),b
 23877   00099A  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 23878   00099C  0E40               	movlw	low _currentPos
 23879   00099E  25D1               	addwf	pollServos@io& (0+255),w,b
 23880   0009A0  6ED9               	movwf	fsr2l,c
 23881   0009A2  6ADA               	clrf	fsr2h,c
 23882   0009A4  0E01               	movlw	high _currentPos
 23883   0009A6  22DA               	addwfc	fsr2h,f,c
 23884   0009A8  50DF               	movf	indf2,w,c
 23885   0009AA  6FC8               	movwf	(??_pollServos+2)& (0+255),b
 23886   0009AC  6BC9               	clrf	(??_pollServos+3)& (0+255),b
 23887   0009AE  0E20               	movlw	low _stepsPerPollSpeed
 23888   0009B0  25D1               	addwf	pollServos@io& (0+255),w,b
 23889   0009B2  6ED9               	movwf	fsr2l,c
 23890   0009B4  6ADA               	clrf	fsr2h,c
 23891   0009B6  0E01               	movlw	high _stepsPerPollSpeed
 23892   0009B8  22DA               	addwfc	fsr2h,f,c
 23893   0009BA  50DF               	movf	indf2,w,c
 23894   0009BC  6FCA               	movwf	(??_pollServos+4)& (0+255),b
 23895   0009BE  51CA               	movf	(??_pollServos+4)& (0+255),w,b
 23896   0009C0  27C8               	addwf	(??_pollServos+2)& (0+255),f,b
 23897   0009C2  0E00               	movlw	0
 23898   0009C4  23C9               	addwfc	(??_pollServos+3)& (0+255),f,b
 23899   0009C6  51C6               	movf	??_pollServos& (0+255),w,b
 23900   0009C8  5DC8               	subwf	(??_pollServos+2)& (0+255),w,b
 23901   0009CA  51C9               	movf	(??_pollServos+3)& (0+255),w,b
 23902   0009CC  0A80               	xorlw	128
 23903   0009CE  6FCB               	movwf	(??_pollServos+5)& (0+255),b
 23904   0009D0  51C7               	movf	(??_pollServos+1)& (0+255),w,b
 23905   0009D2  0A80               	xorlw	128
 23906   0009D4  59CB               	subwfb	(??_pollServos+5)& (0+255),w,b
 23907   0009D6  B0D8               	btfsc	status,0,c
 23908   0009D8  D009               	goto	l20710
 23909                           
 23910                           ; BSR set to: 1
 23911                           ;../servo.c: 314:                                     currentPos[io] =255;
 23912   0009DA  0E40               	movlw	low _currentPos
 23913   0009DC  25D1               	addwf	pollServos@io& (0+255),w,b
 23914   0009DE  6ED9               	movwf	fsr2l,c
 23915   0009E0  6ADA               	clrf	fsr2h,c
 23916   0009E2  0E01               	movlw	high _currentPos
 23917   0009E4  22DA               	addwfc	fsr2h,f,c
 23918   0009E6  0EFF               	movlw	255
 23919   0009E8  6EDF               	movwf	indf2,c
 23920                           
 23921                           ;../servo.c: 315:                                 } else {
 23922   0009EA  D036               	goto	l20718
 23923   0009EC                     l20710:
 23924                           
 23925                           ; BSR set to: 1
 23926                           ;../servo.c: 316:                                     currentPos[io] += stepsPerPollSpee
      +                          d[io];
 23927   0009EC  0E20               	movlw	low _stepsPerPollSpeed
 23928   0009EE  25D1               	addwf	pollServos@io& (0+255),w,b
 23929   0009F0  6ED9               	movwf	fsr2l,c
 23930   0009F2  6ADA               	clrf	fsr2h,c
 23931   0009F4  0E01               	movlw	high _stepsPerPollSpeed
 23932   0009F6  22DA               	addwfc	fsr2h,f,c
 23933   0009F8  50DF               	movf	indf2,w,c
 23934   0009FA  6FC6               	movwf	??_pollServos& (0+255),b
 23935   0009FC  0E40               	movlw	low _currentPos
 23936   0009FE  25D1               	addwf	pollServos@io& (0+255),w,b
 23937   000A00  6ED9               	movwf	fsr2l,c
 23938   000A02  6ADA               	clrf	fsr2h,c
 23939   000A04  0E01               	movlw	high _currentPos
 23940   000A06  22DA               	addwfc	fsr2h,f,c
 23941   000A08  51C6               	movf	??_pollServos& (0+255),w,b
 23942   000A0A  26DF               	addwf	indf2,f,c
 23943   000A0C  D025               	goto	l20718
 23944   000A0E                     l20712:
 23945                           
 23946                           ; BSR set to: 1
 23947                           ;../servo.c: 319:                                 pollCount[io]--;
 23948   000A0E  0E44               	movlw	low _pollCount
 23949   000A10  25D1               	addwf	pollServos@io& (0+255),w,b
 23950   000A12  6ED9               	movwf	fsr2l,c
 23951   000A14  6ADA               	clrf	fsr2h,c
 23952   000A16  0E02               	movlw	high _pollCount
 23953   000A18  22DA               	addwfc	fsr2h,f,c
 23954   000A1A  06DF               	decf	indf2,f,c
 23955                           
 23956                           ;../servo.c: 320:                                 if (pollCount[io] == 0) {
 23957   000A1C  0E44               	movlw	low _pollCount
 23958   000A1E  25D1               	addwf	pollServos@io& (0+255),w,b
 23959   000A20  6ED9               	movwf	fsr2l,c
 23960   000A22  6ADA               	clrf	fsr2h,c
 23961   000A24  0E02               	movlw	high _pollCount
 23962   000A26  22DA               	addwfc	fsr2h,f,c
 23963   000A28  50DF               	movf	indf2,w,c
 23964   000A2A  A4D8               	btfss	status,2,c
 23965   000A2C  D015               	goto	l20718
 23966                           
 23967                           ; BSR set to: 1
 23968                           ;../servo.c: 321:                                     currentPos[io]++;
 23969   000A2E  0E40               	movlw	low _currentPos
 23970   000A30  25D1               	addwf	pollServos@io& (0+255),w,b
 23971   000A32  6ED9               	movwf	fsr2l,c
 23972   000A34  6ADA               	clrf	fsr2h,c
 23973   000A36  0E01               	movlw	high _currentPos
 23974   000A38  22DA               	addwfc	fsr2h,f,c
 23975   000A3A  2ADF               	incf	indf2,f,c
 23976                           
 23977                           ; BSR set to: 1
 23978                           ;../servo.c: 322:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 23979   000A3C  0E54               	movlw	low _pollsPerStepSpeed
 23980   000A3E  25D1               	addwf	pollServos@io& (0+255),w,b
 23981   000A40  6ED9               	movwf	fsr2l,c
 23982   000A42  6ADA               	clrf	fsr2h,c
 23983   000A44  0E02               	movlw	high _pollsPerStepSpeed
 23984   000A46  22DA               	addwfc	fsr2h,f,c
 23985   000A48  0E44               	movlw	low _pollCount
 23986   000A4A  25D1               	addwf	pollServos@io& (0+255),w,b
 23987   000A4C  6EE1               	movwf	fsr1l,c
 23988   000A4E  6AE2               	clrf	fsr1h,c
 23989   000A50  0E02               	movlw	high _pollCount
 23990   000A52  22E2               	addwfc	fsr1h,f,c
 23991   000A54  CFDF FFE7          	movff	indf2,indf1
 23992   000A58                     l20718:
 23993                           
 23994                           ; BSR set to: 1
 23995                           ;../servo.c: 326:                             if (currentPos[io] > targetPos[io]) {
 23996   000A58  0E40               	movlw	low _currentPos
 23997   000A5A  25D1               	addwf	pollServos@io& (0+255),w,b
 23998   000A5C  6ED9               	movwf	fsr2l,c
 23999   000A5E  6ADA               	clrf	fsr2h,c
 24000   000A60  0E01               	movlw	high _currentPos
 24001   000A62  22DA               	addwfc	fsr2h,f,c
 24002   000A64  51D1               	movf	pollServos@io& (0+255),w,b
 24003   000A66  0F01               	addlw	low _targetPos
 24004   000A68  6EE1               	movwf	fsr1l,c
 24005   000A6A  6AE2               	clrf	fsr1h,c
 24006   000A6C  50DE               	movf	postinc2,w,c
 24007   000A6E  5CE6               	subwf	postinc1,w,c
 24008   000A70  B0D8               	btfsc	status,0,c
 24009   000A72  D00C               	goto	l20722
 24010                           
 24011                           ; BSR set to: 1
 24012                           ;../servo.c: 327:                                 currentPos[io] = targetPos[io];
 24013   000A74  51D1               	movf	pollServos@io& (0+255),w,b
 24014   000A76  0F01               	addlw	low _targetPos
 24015   000A78  6ED9               	movwf	fsr2l,c
 24016   000A7A  6ADA               	clrf	fsr2h,c
 24017   000A7C  0E40               	movlw	low _currentPos
 24018   000A7E  25D1               	addwf	pollServos@io& (0+255),w,b
 24019   000A80  6EE1               	movwf	fsr1l,c
 24020   000A82  6AE2               	clrf	fsr1h,c
 24021   000A84  0E01               	movlw	high _currentPos
 24022   000A86  22E2               	addwfc	fsr1h,f,c
 24023   000A88  CFDF FFE7          	movff	indf2,indf1
 24024   000A8C                     l20722:
 24025                           
 24026                           ; BSR set to: 1
 24027                           ;../servo.c: 329:                             if ((currentPos[io] >= midway) && beforeMi
      +                          dway) {
 24028   000A8C  0E40               	movlw	low _currentPos
 24029   000A8E  25D1               	addwf	pollServos@io& (0+255),w,b
 24030   000A90  6ED9               	movwf	fsr2l,c
 24031   000A92  6ADA               	clrf	fsr2h,c
 24032   000A94  0E01               	movlw	high _currentPos
 24033   000A96  22DA               	addwfc	fsr2h,f,c
 24034   000A98  51D0               	movf	pollServos@midway& (0+255),w,b
 24035   000A9A  5CDE               	subwf	postinc2,w,c
 24036   000A9C  A0D8               	btfss	status,0,c
 24037   000A9E  D0D9               	goto	l20758
 24038                           
 24039                           ; BSR set to: 1
 24040   000AA0  51CF               	movf	pollServos@beforeMidway& (0+255),w,b
 24041   000AA2  B4D8               	btfsc	status,2,c
 24042   000AA4  D0D6               	goto	l20758
 24043                           
 24044                           ; BSR set to: 1
 24045                           ;../servo.c: 333:                                 sendProducedEvent(((8 + 4*(io))+1), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 24046   000AA6  51D1               	movf	pollServos@io& (0+255),w,b
 24047   000AA8  0D07               	mullw	7
 24048   000AAA  50F3               	movf	243,w,c
 24049   000AAC  0F11               	addlw	17
 24050   000AAE  EC35  F05D         	call	_getNV
 24051   000AB2  0100               	movlb	0	; () banked
 24052   000AB4  BD8D               	btfsc	?_getNV& (0+255),6,b
 24053   000AB6  D002               	goto	u21580
 24054   000AB8  0E01               	movlw	1
 24055   000ABA  D001               	goto	u21590
 24056   000ABC                     u21580:
 24057   000ABC  0E00               	movlw	0
 24058   000ABE                     u21590:
 24059   000ABE  0101               	movlb	1	; () banked
 24060   000AC0  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 24061   000AC2  51D1               	movf	pollServos@io& (0+255),w,b
 24062   000AC4  0D04               	mullw	4
 24063   000AC6  50F3               	movf	243,w,c
 24064   000AC8  0F09               	addlw	9
 24065   000ACA  ECAD  F04C         	call	_sendProducedEvent
 24066   000ACE  D0C1               	goto	l20758
 24067   000AD0                     l20728:
 24068                           
 24069                           ; BSR set to: 1
 24070   000AD0  0E40               	movlw	low _currentPos
 24071   000AD2  25D1               	addwf	pollServos@io& (0+255),w,b
 24072   000AD4  6ED9               	movwf	fsr2l,c
 24073   000AD6  6ADA               	clrf	fsr2h,c
 24074   000AD8  0E01               	movlw	high _currentPos
 24075   000ADA  22DA               	addwfc	fsr2h,f,c
 24076   000ADC  51D1               	movf	pollServos@io& (0+255),w,b
 24077   000ADE  0F01               	addlw	low _targetPos
 24078   000AE0  6EE1               	movwf	fsr1l,c
 24079   000AE2  6AE2               	clrf	fsr1h,c
 24080   000AE4  50DE               	movf	postinc2,w,c
 24081   000AE6  5CE6               	subwf	postinc1,w,c
 24082   000AE8  B0D8               	btfsc	status,0,c
 24083   000AEA  D0B3               	goto	l20758
 24084                           
 24085                           ; BSR set to: 1
 24086                           ;../servo.c: 336:                             if (currentPos[io] > midway) {
 24087   000AEC  0E40               	movlw	low _currentPos
 24088   000AEE  25D1               	addwf	pollServos@io& (0+255),w,b
 24089   000AF0  6ED9               	movwf	fsr2l,c
 24090   000AF2  6ADA               	clrf	fsr2h,c
 24091   000AF4  0E01               	movlw	high _currentPos
 24092   000AF6  22DA               	addwfc	fsr2h,f,c
 24093   000AF8  50DE               	movf	postinc2,w,c
 24094   000AFA  5DD0               	subwf	pollServos@midway& (0+255),w,b
 24095   000AFC  B0D8               	btfsc	status,0,c
 24096   000AFE  D002               	goto	l20734
 24097                           
 24098                           ; BSR set to: 1
 24099                           ;../servo.c: 337:                                 beforeMidway = TRUE;
 24100   000B00  0E01               	movlw	1
 24101   000B02  6FCF               	movwf	pollServos@beforeMidway& (0+255),b
 24102   000B04                     l20734:
 24103                           
 24104                           ; BSR set to: 1
 24105                           ;../servo.c: 340:                             if (stepsPerPollSpeed[io]) {
 24106   000B04  0E20               	movlw	low _stepsPerPollSpeed
 24107   000B06  25D1               	addwf	pollServos@io& (0+255),w,b
 24108   000B08  6ED9               	movwf	fsr2l,c
 24109   000B0A  6ADA               	clrf	fsr2h,c
 24110   000B0C  0E01               	movlw	high _stepsPerPollSpeed
 24111   000B0E  22DA               	addwfc	fsr2h,f,c
 24112   000B10  50DF               	movf	indf2,w,c
 24113   000B12  B4D8               	btfsc	status,2,c
 24114   000B14  D041               	goto	l20742
 24115                           
 24116                           ; BSR set to: 1
 24117                           ;../servo.c: 341:                                 if (currentPos[io] - stepsPerPollSpeed
      +                          [io] > currentPos[io]) {
 24118   000B16  0E40               	movlw	low _currentPos
 24119   000B18  25D1               	addwf	pollServos@io& (0+255),w,b
 24120   000B1A  6ED9               	movwf	fsr2l,c
 24121   000B1C  6ADA               	clrf	fsr2h,c
 24122   000B1E  0E01               	movlw	high _currentPos
 24123   000B20  22DA               	addwfc	fsr2h,f,c
 24124   000B22  50DF               	movf	indf2,w,c
 24125   000B24  6FC6               	movwf	??_pollServos& (0+255),b
 24126   000B26  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 24127   000B28  0E20               	movlw	low _stepsPerPollSpeed
 24128   000B2A  25D1               	addwf	pollServos@io& (0+255),w,b
 24129   000B2C  6ED9               	movwf	fsr2l,c
 24130   000B2E  6ADA               	clrf	fsr2h,c
 24131   000B30  0E01               	movlw	high _stepsPerPollSpeed
 24132   000B32  22DA               	addwfc	fsr2h,f,c
 24133   000B34  50DF               	movf	indf2,w,c
 24134   000B36  6FC8               	movwf	(??_pollServos+2)& (0+255),b
 24135   000B38  51C8               	movf	(??_pollServos+2)& (0+255),w,b
 24136   000B3A  5FC6               	subwf	??_pollServos& (0+255),f,b
 24137   000B3C  0E00               	movlw	0
 24138   000B3E  5BC7               	subwfb	(??_pollServos+1)& (0+255),f,b
 24139   000B40  0E40               	movlw	low _currentPos
 24140   000B42  25D1               	addwf	pollServos@io& (0+255),w,b
 24141   000B44  6ED9               	movwf	fsr2l,c
 24142   000B46  6ADA               	clrf	fsr2h,c
 24143   000B48  0E01               	movlw	high _currentPos
 24144   000B4A  22DA               	addwfc	fsr2h,f,c
 24145   000B4C  50DF               	movf	indf2,w,c
 24146   000B4E  6FC9               	movwf	(??_pollServos+3)& (0+255),b
 24147   000B50  6BCA               	clrf	(??_pollServos+4)& (0+255),b
 24148   000B52  51C6               	movf	??_pollServos& (0+255),w,b
 24149   000B54  5DC9               	subwf	(??_pollServos+3)& (0+255),w,b
 24150   000B56  51CA               	movf	(??_pollServos+4)& (0+255),w,b
 24151   000B58  0A80               	xorlw	128
 24152   000B5A  6FCB               	movwf	(??_pollServos+5)& (0+255),b
 24153   000B5C  51C7               	movf	(??_pollServos+1)& (0+255),w,b
 24154   000B5E  0A80               	xorlw	128
 24155   000B60  59CB               	subwfb	(??_pollServos+5)& (0+255),w,b
 24156   000B62  B0D8               	btfsc	status,0,c
 24157   000B64  D008               	goto	l20740
 24158                           
 24159                           ; BSR set to: 1
 24160                           ;../servo.c: 343:                                     currentPos[io] = 0;
 24161   000B66  0E40               	movlw	low _currentPos
 24162   000B68  25D1               	addwf	pollServos@io& (0+255),w,b
 24163   000B6A  6ED9               	movwf	fsr2l,c
 24164   000B6C  6ADA               	clrf	fsr2h,c
 24165   000B6E  0E01               	movlw	high _currentPos
 24166   000B70  22DA               	addwfc	fsr2h,f,c
 24167   000B72  6ADF               	clrf	indf2,c
 24168                           
 24169                           ;../servo.c: 344:                                 } else {
 24170   000B74  D036               	goto	l20748
 24171   000B76                     l20740:
 24172                           
 24173                           ; BSR set to: 1
 24174                           ;../servo.c: 345:                                     currentPos[io] -= stepsPerPollSpee
      +                          d[io];
 24175   000B76  0E20               	movlw	low _stepsPerPollSpeed
 24176   000B78  25D1               	addwf	pollServos@io& (0+255),w,b
 24177   000B7A  6ED9               	movwf	fsr2l,c
 24178   000B7C  6ADA               	clrf	fsr2h,c
 24179   000B7E  0E01               	movlw	high _stepsPerPollSpeed
 24180   000B80  22DA               	addwfc	fsr2h,f,c
 24181   000B82  50DF               	movf	indf2,w,c
 24182   000B84  6FC6               	movwf	??_pollServos& (0+255),b
 24183   000B86  0E40               	movlw	low _currentPos
 24184   000B88  25D1               	addwf	pollServos@io& (0+255),w,b
 24185   000B8A  6ED9               	movwf	fsr2l,c
 24186   000B8C  6ADA               	clrf	fsr2h,c
 24187   000B8E  0E01               	movlw	high _currentPos
 24188   000B90  22DA               	addwfc	fsr2h,f,c
 24189   000B92  51C6               	movf	??_pollServos& (0+255),w,b
 24190   000B94  5EDF               	subwf	indf2,f,c
 24191   000B96  D025               	goto	l20748
 24192   000B98                     l20742:
 24193                           
 24194                           ; BSR set to: 1
 24195                           ;../servo.c: 348:                                 pollCount[io]--;
 24196   000B98  0E44               	movlw	low _pollCount
 24197   000B9A  25D1               	addwf	pollServos@io& (0+255),w,b
 24198   000B9C  6ED9               	movwf	fsr2l,c
 24199   000B9E  6ADA               	clrf	fsr2h,c
 24200   000BA0  0E02               	movlw	high _pollCount
 24201   000BA2  22DA               	addwfc	fsr2h,f,c
 24202   000BA4  06DF               	decf	indf2,f,c
 24203                           
 24204                           ;../servo.c: 349:                                 if (pollCount[io] == 0) {
 24205   000BA6  0E44               	movlw	low _pollCount
 24206   000BA8  25D1               	addwf	pollServos@io& (0+255),w,b
 24207   000BAA  6ED9               	movwf	fsr2l,c
 24208   000BAC  6ADA               	clrf	fsr2h,c
 24209   000BAE  0E02               	movlw	high _pollCount
 24210   000BB0  22DA               	addwfc	fsr2h,f,c
 24211   000BB2  50DF               	movf	indf2,w,c
 24212   000BB4  A4D8               	btfss	status,2,c
 24213   000BB6  D015               	goto	l20748
 24214                           
 24215                           ; BSR set to: 1
 24216                           ;../servo.c: 350:                                     currentPos[io]--;
 24217   000BB8  0E40               	movlw	low _currentPos
 24218   000BBA  25D1               	addwf	pollServos@io& (0+255),w,b
 24219   000BBC  6ED9               	movwf	fsr2l,c
 24220   000BBE  6ADA               	clrf	fsr2h,c
 24221   000BC0  0E01               	movlw	high _currentPos
 24222   000BC2  22DA               	addwfc	fsr2h,f,c
 24223   000BC4  06DF               	decf	indf2,f,c
 24224                           
 24225                           ; BSR set to: 1
 24226                           ;../servo.c: 351:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 24227   000BC6  0E54               	movlw	low _pollsPerStepSpeed
 24228   000BC8  25D1               	addwf	pollServos@io& (0+255),w,b
 24229   000BCA  6ED9               	movwf	fsr2l,c
 24230   000BCC  6ADA               	clrf	fsr2h,c
 24231   000BCE  0E02               	movlw	high _pollsPerStepSpeed
 24232   000BD0  22DA               	addwfc	fsr2h,f,c
 24233   000BD2  0E44               	movlw	low _pollCount
 24234   000BD4  25D1               	addwf	pollServos@io& (0+255),w,b
 24235   000BD6  6EE1               	movwf	fsr1l,c
 24236   000BD8  6AE2               	clrf	fsr1h,c
 24237   000BDA  0E02               	movlw	high _pollCount
 24238   000BDC  22E2               	addwfc	fsr1h,f,c
 24239   000BDE  CFDF FFE7          	movff	indf2,indf1
 24240   000BE2                     l20748:
 24241                           
 24242                           ; BSR set to: 1
 24243                           ;../servo.c: 355:                             if (currentPos[io] < targetPos[io]) {
 24244   000BE2  51D1               	movf	pollServos@io& (0+255),w,b
 24245   000BE4  0F01               	addlw	low _targetPos
 24246   000BE6  6ED9               	movwf	fsr2l,c
 24247   000BE8  6ADA               	clrf	fsr2h,c
 24248   000BEA  0E40               	movlw	low _currentPos
 24249   000BEC  25D1               	addwf	pollServos@io& (0+255),w,b
 24250   000BEE  6EE1               	movwf	fsr1l,c
 24251   000BF0  6AE2               	clrf	fsr1h,c
 24252   000BF2  0E01               	movlw	high _currentPos
 24253   000BF4  22E2               	addwfc	fsr1h,f,c
 24254   000BF6  50DE               	movf	postinc2,w,c
 24255   000BF8  5CE6               	subwf	postinc1,w,c
 24256   000BFA  B0D8               	btfsc	status,0,c
 24257   000BFC  D00C               	goto	l20752
 24258                           
 24259                           ; BSR set to: 1
 24260                           ;../servo.c: 356:                                 currentPos[io] = targetPos[io];
 24261   000BFE  51D1               	movf	pollServos@io& (0+255),w,b
 24262   000C00  0F01               	addlw	low _targetPos
 24263   000C02  6ED9               	movwf	fsr2l,c
 24264   000C04  6ADA               	clrf	fsr2h,c
 24265   000C06  0E40               	movlw	low _currentPos
 24266   000C08  25D1               	addwf	pollServos@io& (0+255),w,b
 24267   000C0A  6EE1               	movwf	fsr1l,c
 24268   000C0C  6AE2               	clrf	fsr1h,c
 24269   000C0E  0E01               	movlw	high _currentPos
 24270   000C10  22E2               	addwfc	fsr1h,f,c
 24271   000C12  CFDF FFE7          	movff	indf2,indf1
 24272   000C16                     l20752:
 24273                           
 24274                           ; BSR set to: 1
 24275                           ;../servo.c: 358:                             if ((currentPos[io] <= midway) && beforeMi
      +                          dway) {
 24276   000C16  0E40               	movlw	low _currentPos
 24277   000C18  25D1               	addwf	pollServos@io& (0+255),w,b
 24278   000C1A  6ED9               	movwf	fsr2l,c
 24279   000C1C  6ADA               	clrf	fsr2h,c
 24280   000C1E  0E01               	movlw	high _currentPos
 24281   000C20  22DA               	addwfc	fsr2h,f,c
 24282   000C22  50DE               	movf	postinc2,w,c
 24283   000C24  5DD0               	subwf	pollServos@midway& (0+255),w,b
 24284   000C26  A0D8               	btfss	status,0,c
 24285   000C28  D014               	goto	l20758
 24286                           
 24287                           ; BSR set to: 1
 24288   000C2A  51CF               	movf	pollServos@beforeMidway& (0+255),w,b
 24289   000C2C  B4D8               	btfsc	status,2,c
 24290   000C2E  D011               	goto	l20758
 24291                           
 24292                           ; BSR set to: 1
 24293                           ;../servo.c: 360:                                 sendProducedEvent(((8 + 4*(io))+1), ge
      +                          tNV((16 + 7*(io) + 1)) & 0x40);
 24294   000C30  51D1               	movf	pollServos@io& (0+255),w,b
 24295   000C32  0D07               	mullw	7
 24296   000C34  50F3               	movf	243,w,c
 24297   000C36  0F11               	addlw	17
 24298   000C38  EC35  F05D         	call	_getNV
 24299   000C3C  0100               	movlb	0	; () banked
 24300   000C3E  518D               	movf	?_getNV& (0+255),w,b
 24301   000C40  0B40               	andlw	64
 24302   000C42  0101               	movlb	1	; () banked
 24303   000C44  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 24304   000C46  51D1               	movf	pollServos@io& (0+255),w,b
 24305   000C48  0D04               	mullw	4
 24306   000C4A  50F3               	movf	243,w,c
 24307   000C4C  0F09               	addlw	9
 24308   000C4E  ECAD  F04C         	call	_sendProducedEvent
 24309   000C52                     l20758:
 24310                           
 24311                           ;../servo.c: 363:                         if (targetPos[io] == currentPos[io]) {
 24312   000C52  0E40               	movlw	low _currentPos
 24313   000C54  0101               	movlb	1	; () banked
 24314   000C56  25D1               	addwf	pollServos@io& (0+255),w,b
 24315   000C58  6ED9               	movwf	fsr2l,c
 24316   000C5A  6ADA               	clrf	fsr2h,c
 24317   000C5C  0E01               	movlw	high _currentPos
 24318   000C5E  22DA               	addwfc	fsr2h,f,c
 24319   000C60  51D1               	movf	pollServos@io& (0+255),w,b
 24320   000C62  0F01               	addlw	low _targetPos
 24321   000C64  6EE1               	movwf	fsr1l,c
 24322   000C66  6AE2               	clrf	fsr1h,c
 24323   000C68  50DE               	movf	postinc2,w,c
 24324   000C6A  18E6               	xorwf	postinc1,w,c
 24325   000C6C  A4D8               	btfss	status,2,c
 24326   000C6E  EF95  F00B         	goto	l20924
 24327                           
 24328                           ; BSR set to: 1
 24329                           ;../servo.c: 364:                             servoState[io] = SS_STOPPED;
 24330   000C72  0E30               	movlw	low _servoState
 24331   000C74  25D1               	addwf	pollServos@io& (0+255),w,b
 24332   000C76  6ED9               	movwf	fsr2l,c
 24333   000C78  6ADA               	clrf	fsr2h,c
 24334   000C7A  0E01               	movlw	high _servoState
 24335   000C7C  22DA               	addwfc	fsr2h,f,c
 24336   000C7E  0E01               	movlw	1
 24337   000C80  6EDF               	movwf	indf2,c
 24338                           
 24339                           ; BSR set to: 1
 24340                           ;../servo.c: 365:                             ticksWhenStopped[io].val = tickGet();
 24341   000C82  ECC2  F059         	call	_tickGet	;wreg free
 24342   000C86  0101               	movlb	1	; () banked
 24343   000C88  51D1               	movf	pollServos@io& (0+255),w,b
 24344   000C8A  0D04               	mullw	4
 24345   000C8C  0E88               	movlw	low _ticksWhenStopped
 24346   000C8E  24F3               	addwf	243,w,c
 24347   000C90  6ED9               	movwf	fsr2l,c
 24348   000C92  0E03               	movlw	high _ticksWhenStopped
 24349   000C94  20F4               	addwfc	prodh,w,c
 24350   000C96  6EDA               	movwf	fsr2h,c
 24351   000C98  0100               	movlb	0	; () banked
 24352   000C9A  C08D  FFDE         	movff	?_tickGet,postinc2
 24353   000C9E  C08E  FFDE         	movff	?_tickGet+1,postinc2
 24354   000CA2  C08F  FFDE         	movff	?_tickGet+2,postinc2
 24355   000CA6  C090  FFDE         	movff	?_tickGet+3,postinc2
 24356                           
 24357                           ; BSR set to: 0
 24358                           ;../servo.c: 367:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           2))) {
 24359   000CAA  0101               	movlb	1	; () banked
 24360   000CAC  51D1               	movf	pollServos@io& (0+255),w,b
 24361   000CAE  0D07               	mullw	7
 24362   000CB0  50F3               	movf	243,w,c
 24363   000CB2  0F12               	addlw	18
 24364   000CB4  EC35  F05D         	call	_getNV
 24365   000CB8  0E40               	movlw	low _currentPos
 24366   000CBA  0101               	movlb	1	; () banked
 24367   000CBC  25D1               	addwf	pollServos@io& (0+255),w,b
 24368   000CBE  6ED9               	movwf	fsr2l,c
 24369   000CC0  6ADA               	clrf	fsr2h,c
 24370   000CC2  0E01               	movlw	high _currentPos
 24371   000CC4  22DA               	addwfc	fsr2h,f,c
 24372   000CC6  50DF               	movf	indf2,w,c
 24373   000CC8  6FC6               	movwf	??_pollServos& (0+255),b
 24374   000CCA  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 24375   000CCC  0100               	movlb	0	; () banked
 24376   000CCE  518D               	movf	?_getNV& (0+255),w,b
 24377   000CD0  0101               	movlb	1	; () banked
 24378   000CD2  19C6               	xorwf	??_pollServos& (0+255),w,b
 24379   000CD4  E11B               	bnz	l20768
 24380   000CD6  0100               	movlb	0	; () banked
 24381   000CD8  518E               	movf	(?_getNV+1)& (0+255),w,b
 24382   000CDA  0101               	movlb	1	; () banked
 24383   000CDC  19C7               	xorwf	(??_pollServos+1)& (0+255),w,b
 24384   000CDE  A4D8               	btfss	status,2,c
 24385   000CE0  D015               	goto	l20768
 24386                           
 24387                           ; BSR set to: 1
 24388                           ;../servo.c: 368:                                 sendProducedEvent(((8 + 4*(io))+0), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 24389   000CE2  51D1               	movf	pollServos@io& (0+255),w,b
 24390   000CE4  0D07               	mullw	7
 24391   000CE6  50F3               	movf	243,w,c
 24392   000CE8  0F11               	addlw	17
 24393   000CEA  EC35  F05D         	call	_getNV
 24394   000CEE  0100               	movlb	0	; () banked
 24395   000CF0  BD8D               	btfsc	?_getNV& (0+255),6,b
 24396   000CF2  D002               	goto	u21700
 24397   000CF4  0E01               	movlw	1
 24398   000CF6  D001               	goto	u21710
 24399   000CF8                     u21700:
 24400   000CF8  0E00               	movlw	0
 24401   000CFA                     u21710:
 24402   000CFA  0101               	movlb	1	; () banked
 24403   000CFC  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 24404   000CFE  51D1               	movf	pollServos@io& (0+255),w,b
 24405   000D00  0D04               	mullw	4
 24406   000D02  50F3               	movf	243,w,c
 24407   000D04  0F08               	addlw	8
 24408   000D06  ECAD  F04C         	call	_sendProducedEvent
 24409                           
 24410                           ;../servo.c: 369:                             } else {
 24411   000D0A  D014               	goto	l20770
 24412   000D0C                     l20768:
 24413                           
 24414                           ; BSR set to: 1
 24415                           ;../servo.c: 370:                                 sendProducedEvent(((8 + 4*(io))+2), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 24416   000D0C  51D1               	movf	pollServos@io& (0+255),w,b
 24417   000D0E  0D07               	mullw	7
 24418   000D10  50F3               	movf	243,w,c
 24419   000D12  0F11               	addlw	17
 24420   000D14  EC35  F05D         	call	_getNV
 24421   000D18  0100               	movlb	0	; () banked
 24422   000D1A  BD8D               	btfsc	?_getNV& (0+255),6,b
 24423   000D1C  D002               	goto	u21720
 24424   000D1E  0E01               	movlw	1
 24425   000D20  D001               	goto	u21730
 24426   000D22                     u21720:
 24427   000D22  0E00               	movlw	0
 24428   000D24                     u21730:
 24429   000D24  0101               	movlb	1	; () banked
 24430   000D26  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 24431   000D28  51D1               	movf	pollServos@io& (0+255),w,b
 24432   000D2A  0D04               	mullw	4
 24433   000D2C  50F3               	movf	243,w,c
 24434   000D2E  0F0A               	addlw	10
 24435   000D30  ECAD  F04C         	call	_sendProducedEvent
 24436   000D34                     l20770:
 24437                           
 24438                           ;../servo.c: 372:                             writeNVM(EEPROM_NVM_TYPE, ((eeprom_address
      +                          _t)((0x3FF -8))-25)+io, currentPos[io]);
 24439   000D34  0EDE               	movlw	222
 24440   000D36  0101               	movlb	1	; () banked
 24441   000D38  25D1               	addwf	pollServos@io& (0+255),w,b
 24442   000D3A  6FC6               	movwf	??_pollServos& (0+255),b
 24443   000D3C  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 24444   000D3E  0E03               	movlw	3
 24445   000D40  23C7               	addwfc	(??_pollServos+1)& (0+255),f,b
 24446   000D42  C1C6  F0A4         	movff	??_pollServos,writeNVM@index
 24447   000D46  C1C7  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 24448   000D4A  0100               	movlb	0	; () banked
 24449   000D4C  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 24450   000D4E  0E40               	movlw	low _currentPos
 24451   000D50  0101               	movlb	1	; () banked
 24452   000D52  25D1               	addwf	pollServos@io& (0+255),w,b
 24453   000D54  6ED9               	movwf	fsr2l,c
 24454   000D56  6ADA               	clrf	fsr2h,c
 24455   000D58  0E01               	movlw	high _currentPos
 24456   000D5A  22DA               	addwfc	fsr2h,f,c
 24457   000D5C  50DF               	movf	indf2,w,c
 24458   000D5E  0100               	movlb	0	; () banked
 24459   000D60  6FA7               	movwf	writeNVM@value& (0+255),b
 24460   000D62  0E00               	movlw	0
 24461   000D64  EC66  F05B         	call	_writeNVM
 24462   000D68  EF95  F00B         	goto	l20924
 24463   000D6C                     l20774:
 24464                           
 24465                           ; BSR set to: 1
 24466   000D6C  0E30               	movlw	low _servoState
 24467   000D6E  25D1               	addwf	pollServos@io& (0+255),w,b
 24468   000D70  6ED9               	movwf	fsr2l,c
 24469   000D72  6ADA               	clrf	fsr2h,c
 24470   000D74  0E01               	movlw	high _servoState
 24471   000D76  22DA               	addwfc	fsr2h,f,c
 24472   000D78  50DF               	movf	indf2,w,c
 24473   000D7A  6FC6               	movwf	??_pollServos& (0+255),b
 24474   000D7C  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 24475                           
 24476                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24477                           ; Switch size 1, requested type "simple"
 24478                           ; Number of cases is 1, Range of values is 0 to 0
 24479                           ; switch strategies available:
 24480                           ; Name         Instructions Cycles
 24481                           ; simple_byte            4     3 (average)
 24482                           ;	Chosen strategy is simple_byte
 24483   000D7E  51C7               	movf	(??_pollServos+1)& (0+255),w,b
 24484   000D80  0A00               	xorlw	0	; case 0
 24485   000D82  A4D8               	btfss	status,2,c
 24486   000D84  EF95  F00B         	goto	l20924
 24487                           
 24488                           ; BSR set to: 1
 24489                           ; Switch size 1, requested type "simple"
 24490                           ; Number of cases is 4, Range of values is 0 to 3
 24491                           ; switch strategies available:
 24492                           ; Name         Instructions Cycles
 24493                           ; simple_byte           13     7 (average)
 24494                           ;	Chosen strategy is simple_byte
 24495   000D88  51C6               	movf	??_pollServos& (0+255),w,b
 24496   000D8A  0A00               	xorlw	0	; case 0
 24497   000D8C  B4D8               	btfsc	status,2,c
 24498   000D8E  EF95  F00B         	goto	l20924
 24499   000D92  0A01               	xorlw	1	; case 1
 24500   000D94  B4D8               	btfsc	status,2,c
 24501   000D96  EF95  F00B         	goto	l20924
 24502   000D9A  0A03               	xorlw	3	; case 2
 24503   000D9C  B4D8               	btfsc	status,2,c
 24504   000D9E  D5D2               	goto	l20698
 24505   000DA0  0A01               	xorlw	1	; case 3
 24506   000DA2  B4D8               	btfsc	status,2,c
 24507   000DA4  D588               	goto	l20690
 24508   000DA6  EF95  F00B         	goto	l20924
 24509   000DAA                     l20776:
 24510                           
 24511                           ; BSR set to: 1
 24512                           ;../servo.c: 383:                         initBounce(io);
 24513   000DAA  51D1               	movf	pollServos@io& (0+255),w,b
 24514   000DAC  ECF4  F05F         	call	_initBounce
 24515                           
 24516                           ;../servo.c: 384:                         servoState[io] = SS_MOVING;
 24517   000DB0  0E30               	movlw	low _servoState
 24518   000DB2  0101               	movlb	1	; () banked
 24519   000DB4  25D1               	addwf	pollServos@io& (0+255),w,b
 24520   000DB6  6ED9               	movwf	fsr2l,c
 24521   000DB8  6ADA               	clrf	fsr2h,c
 24522   000DBA  0E01               	movlw	high _servoState
 24523   000DBC  22DA               	addwfc	fsr2h,f,c
 24524   000DBE  0E02               	movlw	2
 24525   000DC0  6EDF               	movwf	indf2,c
 24526                           
 24527                           ; BSR set to: 1
 24528                           ;../servo.c: 385:                         loopCount[io] = 0;
 24529   000DC2  0E34               	movlw	low _loopCount
 24530   000DC4  25D1               	addwf	pollServos@io& (0+255),w,b
 24531   000DC6  6ED9               	movwf	fsr2l,c
 24532   000DC8  6ADA               	clrf	fsr2h,c
 24533   000DCA  0E02               	movlw	high _loopCount
 24534   000DCC  22DA               	addwfc	fsr2h,f,c
 24535   000DCE  6ADF               	clrf	indf2,c
 24536   000DD0                     l20782:
 24537                           
 24538                           ; BSR set to: 1
 24539                           ;../servo.c: 389:                         loopCount[io]++;
 24540   000DD0  0E34               	movlw	low _loopCount
 24541   000DD2  25D1               	addwf	pollServos@io& (0+255),w,b
 24542   000DD4  6ED9               	movwf	fsr2l,c
 24543   000DD6  6ADA               	clrf	fsr2h,c
 24544   000DD8  0E02               	movlw	high _loopCount
 24545   000DDA  22DA               	addwfc	fsr2h,f,c
 24546   000DDC  2ADF               	incf	indf2,f,c
 24547                           
 24548                           ; BSR set to: 1
 24549                           ;../servo.c: 390:                         if (loopCount[io] >= 255) {
 24550   000DDE  0E34               	movlw	low _loopCount
 24551   000DE0  25D1               	addwf	pollServos@io& (0+255),w,b
 24552   000DE2  6ED9               	movwf	fsr2l,c
 24553   000DE4  6ADA               	clrf	fsr2h,c
 24554   000DE6  0E02               	movlw	high _loopCount
 24555   000DE8  22DA               	addwfc	fsr2h,f,c
 24556   000DEA  28DE               	incf	postinc2,w,c
 24557   000DEC  A4D8               	btfss	status,2,c
 24558   000DEE  D059               	goto	l20796
 24559                           
 24560                           ; BSR set to: 1
 24561                           ;../servo.c: 391:                             servoState[io] = SS_STOPPED;
 24562   000DF0  0E30               	movlw	low _servoState
 24563   000DF2  25D1               	addwf	pollServos@io& (0+255),w,b
 24564   000DF4  6ED9               	movwf	fsr2l,c
 24565   000DF6  6ADA               	clrf	fsr2h,c
 24566   000DF8  0E01               	movlw	high _servoState
 24567   000DFA  22DA               	addwfc	fsr2h,f,c
 24568   000DFC  0E01               	movlw	1
 24569   000DFE  6EDF               	movwf	indf2,c
 24570                           
 24571                           ; BSR set to: 1
 24572                           ;../servo.c: 392:                             ticksWhenStopped[io].val = tickGet();
 24573   000E00  ECC2  F059         	call	_tickGet	;wreg free
 24574   000E04  0101               	movlb	1	; () banked
 24575   000E06  51D1               	movf	pollServos@io& (0+255),w,b
 24576   000E08  0D04               	mullw	4
 24577   000E0A  0E88               	movlw	low _ticksWhenStopped
 24578   000E0C  24F3               	addwf	243,w,c
 24579   000E0E  6ED9               	movwf	fsr2l,c
 24580   000E10  0E03               	movlw	high _ticksWhenStopped
 24581   000E12  20F4               	addwfc	prodh,w,c
 24582   000E14  6EDA               	movwf	fsr2h,c
 24583   000E16  0100               	movlb	0	; () banked
 24584   000E18  C08D  FFDE         	movff	?_tickGet,postinc2
 24585   000E1C  C08E  FFDE         	movff	?_tickGet+1,postinc2
 24586   000E20  C08F  FFDE         	movff	?_tickGet+2,postinc2
 24587   000E24  C090  FFDE         	movff	?_tickGet+3,postinc2
 24588                           
 24589                           ; BSR set to: 0
 24590                           ;../servo.c: 393:                             currentPos[io] = targetPos[io];
 24591   000E28  0101               	movlb	1	; () banked
 24592   000E2A  51D1               	movf	pollServos@io& (0+255),w,b
 24593   000E2C  0F01               	addlw	low _targetPos
 24594   000E2E  6ED9               	movwf	fsr2l,c
 24595   000E30  6ADA               	clrf	fsr2h,c
 24596   000E32  0E40               	movlw	low _currentPos
 24597   000E34  25D1               	addwf	pollServos@io& (0+255),w,b
 24598   000E36  6EE1               	movwf	fsr1l,c
 24599   000E38  6AE2               	clrf	fsr1h,c
 24600   000E3A  0E01               	movlw	high _currentPos
 24601   000E3C  22E2               	addwfc	fsr1h,f,c
 24602   000E3E  CFDF FFE7          	movff	indf2,indf1
 24603                           
 24604                           ; BSR set to: 1
 24605                           ;../servo.c: 394:                             sendProducedEvent(((8 + 4*(io))+0), !(getN
      +                          V((16 + 7*(io) + 1)) & 0x40));
 24606   000E42  51D1               	movf	pollServos@io& (0+255),w,b
 24607   000E44  0D07               	mullw	7
 24608   000E46  50F3               	movf	243,w,c
 24609   000E48  0F11               	addlw	17
 24610   000E4A  EC35  F05D         	call	_getNV
 24611   000E4E  0100               	movlb	0	; () banked
 24612   000E50  BD8D               	btfsc	?_getNV& (0+255),6,b
 24613   000E52  D002               	goto	u21750
 24614   000E54  0E01               	movlw	1
 24615   000E56  D001               	goto	u21760
 24616   000E58                     u21750:
 24617   000E58  0E00               	movlw	0
 24618   000E5A                     u21760:
 24619   000E5A  0101               	movlb	1	; () banked
 24620   000E5C  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 24621   000E5E  51D1               	movf	pollServos@io& (0+255),w,b
 24622   000E60  0D04               	mullw	4
 24623   000E62  50F3               	movf	243,w,c
 24624   000E64  0F08               	addlw	8
 24625   000E66  ECAD  F04C         	call	_sendProducedEvent
 24626                           
 24627                           ;../servo.c: 395:                             writeNVM(EEPROM_NVM_TYPE, ((eeprom_address
      +                          _t)((0x3FF -8))-25)+io, currentPos[io]);
 24628   000E6A  0EDE               	movlw	222
 24629   000E6C  0101               	movlb	1	; () banked
 24630   000E6E  25D1               	addwf	pollServos@io& (0+255),w,b
 24631   000E70  6FC6               	movwf	??_pollServos& (0+255),b
 24632   000E72  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 24633   000E74  0E03               	movlw	3
 24634   000E76  23C7               	addwfc	(??_pollServos+1)& (0+255),f,b
 24635   000E78  C1C6  F0A4         	movff	??_pollServos,writeNVM@index
 24636   000E7C  C1C7  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 24637   000E80  0100               	movlb	0	; () banked
 24638   000E82  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 24639   000E84  0E40               	movlw	low _currentPos
 24640   000E86  0101               	movlb	1	; () banked
 24641   000E88  25D1               	addwf	pollServos@io& (0+255),w,b
 24642   000E8A  6ED9               	movwf	fsr2l,c
 24643   000E8C  6ADA               	clrf	fsr2h,c
 24644   000E8E  0E01               	movlw	high _currentPos
 24645   000E90  22DA               	addwfc	fsr2h,f,c
 24646   000E92  50DF               	movf	indf2,w,c
 24647   000E94  0100               	movlb	0	; () banked
 24648   000E96  6FA7               	movwf	writeNVM@value& (0+255),b
 24649   000E98  0E00               	movlw	0
 24650   000E9A  EC66  F05B         	call	_writeNVM
 24651                           
 24652                           ;../servo.c: 396:                             break;
 24653   000E9E  EF95  F00B         	goto	l20924
 24654   000EA2                     l20796:
 24655                           
 24656                           ; BSR set to: 1
 24657                           ;../servo.c: 399:                         target = (uint8_t)getNV((16 + 7*(io) + 2));
 24658   000EA2  51D1               	movf	pollServos@io& (0+255),w,b
 24659   000EA4  0D07               	mullw	7
 24660   000EA6  50F3               	movf	243,w,c
 24661   000EA8  0F12               	addlw	18
 24662   000EAA  EC35  F05D         	call	_getNV
 24663   000EAE  0100               	movlb	0	; () banked
 24664   000EB0  518D               	movf	?_getNV& (0+255),w,b
 24665   000EB2  0101               	movlb	1	; () banked
 24666   000EB4  6FCE               	movwf	pollServos@target& (0+255),b
 24667                           
 24668                           ; BSR set to: 1
 24669                           ;../servo.c: 403:                         if (targetPos[io] == target) {
 24670   000EB6  51D1               	movf	pollServos@io& (0+255),w,b
 24671   000EB8  0F01               	addlw	low _targetPos
 24672   000EBA  6ED9               	movwf	fsr2l,c
 24673   000EBC  6ADA               	clrf	fsr2h,c
 24674   000EBE  51CE               	movf	pollServos@target& (0+255),w,b
 24675   000EC0  18DE               	xorwf	postinc2,w,c
 24676   000EC2  A4D8               	btfss	status,2,c
 24677   000EC4  D060               	goto	l20812
 24678                           
 24679                           ; BSR set to: 1
 24680                           ;../servo.c: 404:                             if (bounceUp(io)) {
 24681   000EC6  51D1               	movf	pollServos@io& (0+255),w,b
 24682   000EC8  ECB4  F02D         	call	_bounceUp
 24683   000ECC  0900               	iorlw	0
 24684   000ECE  B4D8               	btfsc	status,2,c
 24685   000ED0  EF95  F00B         	goto	l20924
 24686                           
 24687                           ;../servo.c: 405:                                 servoState[io] = SS_STOPPED;
 24688   000ED4  0E30               	movlw	low _servoState
 24689   000ED6  0101               	movlb	1	; () banked
 24690   000ED8  25D1               	addwf	pollServos@io& (0+255),w,b
 24691   000EDA  6ED9               	movwf	fsr2l,c
 24692   000EDC  6ADA               	clrf	fsr2h,c
 24693   000EDE  0E01               	movlw	high _servoState
 24694   000EE0  22DA               	addwfc	fsr2h,f,c
 24695   000EE2  0E01               	movlw	1
 24696   000EE4  6EDF               	movwf	indf2,c
 24697                           
 24698                           ; BSR set to: 1
 24699                           ;../servo.c: 406:                                 ticksWhenStopped[io].val = tickGet();
 24700   000EE6  ECC2  F059         	call	_tickGet	;wreg free
 24701   000EEA  0101               	movlb	1	; () banked
 24702   000EEC  51D1               	movf	pollServos@io& (0+255),w,b
 24703   000EEE  0D04               	mullw	4
 24704   000EF0  0E88               	movlw	low _ticksWhenStopped
 24705   000EF2  24F3               	addwf	243,w,c
 24706   000EF4  6ED9               	movwf	fsr2l,c
 24707   000EF6  0E03               	movlw	high _ticksWhenStopped
 24708   000EF8  20F4               	addwfc	prodh,w,c
 24709   000EFA  6EDA               	movwf	fsr2h,c
 24710   000EFC  0100               	movlb	0	; () banked
 24711   000EFE  C08D  FFDE         	movff	?_tickGet,postinc2
 24712   000F02  C08E  FFDE         	movff	?_tickGet+1,postinc2
 24713   000F06  C08F  FFDE         	movff	?_tickGet+2,postinc2
 24714   000F0A  C090  FFDE         	movff	?_tickGet+3,postinc2
 24715                           
 24716                           ; BSR set to: 0
 24717                           ;../servo.c: 407:                                 currentPos[io] = targetPos[io];
 24718   000F0E  0101               	movlb	1	; () banked
 24719   000F10  51D1               	movf	pollServos@io& (0+255),w,b
 24720   000F12  0F01               	addlw	low _targetPos
 24721   000F14  6ED9               	movwf	fsr2l,c
 24722   000F16  6ADA               	clrf	fsr2h,c
 24723   000F18  0E40               	movlw	low _currentPos
 24724   000F1A  25D1               	addwf	pollServos@io& (0+255),w,b
 24725   000F1C  6EE1               	movwf	fsr1l,c
 24726   000F1E  6AE2               	clrf	fsr1h,c
 24727   000F20  0E01               	movlw	high _currentPos
 24728   000F22  22E2               	addwfc	fsr1h,f,c
 24729   000F24  CFDF FFE7          	movff	indf2,indf1
 24730                           
 24731                           ; BSR set to: 1
 24732                           ;../servo.c: 408:                                 sendProducedEvent(((8 + 4*(io))+0), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 24733   000F28  51D1               	movf	pollServos@io& (0+255),w,b
 24734   000F2A  0D07               	mullw	7
 24735   000F2C  50F3               	movf	243,w,c
 24736   000F2E  0F11               	addlw	17
 24737   000F30  EC35  F05D         	call	_getNV
 24738   000F34  0100               	movlb	0	; () banked
 24739   000F36  BD8D               	btfsc	?_getNV& (0+255),6,b
 24740   000F38  D002               	goto	u21790
 24741   000F3A  0E01               	movlw	1
 24742   000F3C  D001               	goto	u21800
 24743   000F3E                     u21790:
 24744   000F3E  0E00               	movlw	0
 24745   000F40                     u21800:
 24746   000F40  0101               	movlb	1	; () banked
 24747   000F42  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 24748   000F44  51D1               	movf	pollServos@io& (0+255),w,b
 24749   000F46  0D04               	mullw	4
 24750   000F48  50F3               	movf	243,w,c
 24751   000F4A  0F08               	addlw	8
 24752   000F4C  ECAD  F04C         	call	_sendProducedEvent
 24753                           
 24754                           ;../servo.c: 409:                                 writeNVM(EEPROM_NVM_TYPE, ((eeprom_add
      +                          ress_t)((0x3FF -8))-25)+io, currentPos[io]);
 24755   000F50  0EDE               	movlw	222
 24756   000F52  0101               	movlb	1	; () banked
 24757   000F54  25D1               	addwf	pollServos@io& (0+255),w,b
 24758   000F56  6FC6               	movwf	??_pollServos& (0+255),b
 24759   000F58  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 24760   000F5A  0E03               	movlw	3
 24761   000F5C  23C7               	addwfc	(??_pollServos+1)& (0+255),f,b
 24762   000F5E  C1C6  F0A4         	movff	??_pollServos,writeNVM@index
 24763   000F62  C1C7  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 24764   000F66  0100               	movlb	0	; () banked
 24765   000F68  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 24766   000F6A  0E40               	movlw	low _currentPos
 24767   000F6C  0101               	movlb	1	; () banked
 24768   000F6E  25D1               	addwf	pollServos@io& (0+255),w,b
 24769   000F70  6ED9               	movwf	fsr2l,c
 24770   000F72  6ADA               	clrf	fsr2h,c
 24771   000F74  0E01               	movlw	high _currentPos
 24772   000F76  22DA               	addwfc	fsr2h,f,c
 24773   000F78  50DF               	movf	indf2,w,c
 24774   000F7A  0100               	movlb	0	; () banked
 24775   000F7C  6FA7               	movwf	writeNVM@value& (0+255),b
 24776   000F7E  0E00               	movlw	0
 24777   000F80  EC66  F05B         	call	_writeNVM
 24778   000F84  D3D2               	goto	l20924
 24779   000F86                     l20812:
 24780                           
 24781                           ; BSR set to: 1
 24782                           ;../servo.c: 412:                             if (bounceDown(io)) {
 24783   000F86  51D1               	movf	pollServos@io& (0+255),w,b
 24784   000F88  EC6C  F014         	call	_bounceDown
 24785   000F8C  0900               	iorlw	0
 24786   000F8E  B4D8               	btfsc	status,2,c
 24787   000F90  D3CC               	goto	l20924
 24788                           
 24789                           ;../servo.c: 413:                                 servoState[io] = SS_STOPPED;
 24790   000F92  0E30               	movlw	low _servoState
 24791   000F94  0101               	movlb	1	; () banked
 24792   000F96  25D1               	addwf	pollServos@io& (0+255),w,b
 24793   000F98  6ED9               	movwf	fsr2l,c
 24794   000F9A  6ADA               	clrf	fsr2h,c
 24795   000F9C  0E01               	movlw	high _servoState
 24796   000F9E  22DA               	addwfc	fsr2h,f,c
 24797   000FA0  0E01               	movlw	1
 24798   000FA2  6EDF               	movwf	indf2,c
 24799                           
 24800                           ; BSR set to: 1
 24801                           ;../servo.c: 414:                                 ticksWhenStopped[io].val = tickGet();
 24802   000FA4  ECC2  F059         	call	_tickGet	;wreg free
 24803   000FA8  0101               	movlb	1	; () banked
 24804   000FAA  51D1               	movf	pollServos@io& (0+255),w,b
 24805   000FAC  0D04               	mullw	4
 24806   000FAE  0E88               	movlw	low _ticksWhenStopped
 24807   000FB0  24F3               	addwf	243,w,c
 24808   000FB2  6ED9               	movwf	fsr2l,c
 24809   000FB4  0E03               	movlw	high _ticksWhenStopped
 24810   000FB6  20F4               	addwfc	prodh,w,c
 24811   000FB8  6EDA               	movwf	fsr2h,c
 24812   000FBA  0100               	movlb	0	; () banked
 24813   000FBC  C08D  FFDE         	movff	?_tickGet,postinc2
 24814   000FC0  C08E  FFDE         	movff	?_tickGet+1,postinc2
 24815   000FC4  C08F  FFDE         	movff	?_tickGet+2,postinc2
 24816   000FC8  C090  FFDE         	movff	?_tickGet+3,postinc2
 24817                           
 24818                           ; BSR set to: 0
 24819                           ;../servo.c: 415:                                 currentPos[io] = targetPos[io];
 24820   000FCC  0101               	movlb	1	; () banked
 24821   000FCE  51D1               	movf	pollServos@io& (0+255),w,b
 24822   000FD0  0F01               	addlw	low _targetPos
 24823   000FD2  6ED9               	movwf	fsr2l,c
 24824   000FD4  6ADA               	clrf	fsr2h,c
 24825   000FD6  0E40               	movlw	low _currentPos
 24826   000FD8  25D1               	addwf	pollServos@io& (0+255),w,b
 24827   000FDA  6EE1               	movwf	fsr1l,c
 24828   000FDC  6AE2               	clrf	fsr1h,c
 24829   000FDE  0E01               	movlw	high _currentPos
 24830   000FE0  22E2               	addwfc	fsr1h,f,c
 24831   000FE2  CFDF FFE7          	movff	indf2,indf1
 24832                           
 24833                           ; BSR set to: 1
 24834                           ;../servo.c: 416:                                 sendProducedEvent(((8 + 4*(io))+0), ge
      +                          tNV((16 + 7*(io) + 1)) & 0x40);
 24835   000FE6  51D1               	movf	pollServos@io& (0+255),w,b
 24836   000FE8  0D07               	mullw	7
 24837   000FEA  50F3               	movf	243,w,c
 24838   000FEC  0F11               	addlw	17
 24839   000FEE  EC35  F05D         	call	_getNV
 24840   000FF2  0100               	movlb	0	; () banked
 24841   000FF4  518D               	movf	?_getNV& (0+255),w,b
 24842   000FF6  0B40               	andlw	64
 24843   000FF8  0101               	movlb	1	; () banked
 24844   000FFA  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 24845   000FFC  51D1               	movf	pollServos@io& (0+255),w,b
 24846   000FFE  0D04               	mullw	4
 24847   001000  50F3               	movf	243,w,c
 24848   001002  0F08               	addlw	8
 24849   001004  ECAD  F04C         	call	_sendProducedEvent
 24850                           
 24851                           ;../servo.c: 417:                                 writeNVM(EEPROM_NVM_TYPE, ((eeprom_add
      +                          ress_t)((0x3FF -8))-25)+io, currentPos[io]);
 24852   001008  0EDE               	movlw	222
 24853   00100A  0101               	movlb	1	; () banked
 24854   00100C  25D1               	addwf	pollServos@io& (0+255),w,b
 24855   00100E  6FC6               	movwf	??_pollServos& (0+255),b
 24856   001010  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 24857   001012  0E03               	movlw	3
 24858   001014  23C7               	addwfc	(??_pollServos+1)& (0+255),f,b
 24859   001016  C1C6  F0A4         	movff	??_pollServos,writeNVM@index
 24860   00101A  C1C7  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 24861   00101E  0100               	movlb	0	; () banked
 24862   001020  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 24863   001022  0E40               	movlw	low _currentPos
 24864   001024  0101               	movlb	1	; () banked
 24865   001026  25D1               	addwf	pollServos@io& (0+255),w,b
 24866   001028  6ED9               	movwf	fsr2l,c
 24867   00102A  6ADA               	clrf	fsr2h,c
 24868   00102C  0E01               	movlw	high _currentPos
 24869   00102E  22DA               	addwfc	fsr2h,f,c
 24870   001030  50DF               	movf	indf2,w,c
 24871   001032  0100               	movlb	0	; () banked
 24872   001034  6FA7               	movwf	writeNVM@value& (0+255),b
 24873   001036  0E00               	movlw	0
 24874   001038  EC66  F05B         	call	_writeNVM
 24875   00103C  D376               	goto	l20924
 24876   00103E                     l20826:
 24877                           
 24878                           ; BSR set to: 0
 24879   00103E  0E30               	movlw	low _servoState
 24880   001040  0101               	movlb	1	; () banked
 24881   001042  25D1               	addwf	pollServos@io& (0+255),w,b
 24882   001044  6ED9               	movwf	fsr2l,c
 24883   001046  6ADA               	clrf	fsr2h,c
 24884   001048  0E01               	movlw	high _servoState
 24885   00104A  22DA               	addwfc	fsr2h,f,c
 24886   00104C  50DF               	movf	indf2,w,c
 24887   00104E  6FC6               	movwf	??_pollServos& (0+255),b
 24888   001050  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 24889                           
 24890                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24891                           ; Switch size 1, requested type "simple"
 24892                           ; Number of cases is 1, Range of values is 0 to 0
 24893                           ; switch strategies available:
 24894                           ; Name         Instructions Cycles
 24895                           ; simple_byte            4     3 (average)
 24896                           ;	Chosen strategy is simple_byte
 24897   001052  51C7               	movf	(??_pollServos+1)& (0+255),w,b
 24898   001054  0A00               	xorlw	0	; case 0
 24899   001056  A4D8               	btfss	status,2,c
 24900   001058  D368               	goto	l20924
 24901                           
 24902                           ; BSR set to: 1
 24903                           ; Switch size 1, requested type "simple"
 24904                           ; Number of cases is 4, Range of values is 0 to 3
 24905                           ; switch strategies available:
 24906                           ; Name         Instructions Cycles
 24907                           ; simple_byte           13     7 (average)
 24908                           ;	Chosen strategy is simple_byte
 24909   00105A  51C6               	movf	??_pollServos& (0+255),w,b
 24910   00105C  0A00               	xorlw	0	; case 0
 24911   00105E  B4D8               	btfsc	status,2,c
 24912   001060  D364               	goto	l20924
 24913   001062  0A01               	xorlw	1	; case 1
 24914   001064  B4D8               	btfsc	status,2,c
 24915   001066  D361               	goto	l20924
 24916   001068  0A03               	xorlw	3	; case 2
 24917   00106A  B4D8               	btfsc	status,2,c
 24918   00106C  D6B1               	goto	l20782
 24919   00106E  0A01               	xorlw	1	; case 3
 24920   001070  B4D8               	btfsc	status,2,c
 24921   001072  D69B               	goto	l20776
 24922   001074  D35A               	goto	l20924
 24923   001076                     l20828:
 24924                           
 24925                           ; BSR set to: 1
 24926                           ;../servo.c: 429:                         if (currentPos[io] == getNV((16 + 7*(io) + 3))
      +                          ) {
 24927   001076  51D1               	movf	pollServos@io& (0+255),w,b
 24928   001078  0D07               	mullw	7
 24929   00107A  50F3               	movf	243,w,c
 24930   00107C  0F13               	addlw	19
 24931   00107E  EC35  F05D         	call	_getNV
 24932   001082  0E40               	movlw	low _currentPos
 24933   001084  0101               	movlb	1	; () banked
 24934   001086  25D1               	addwf	pollServos@io& (0+255),w,b
 24935   001088  6ED9               	movwf	fsr2l,c
 24936   00108A  6ADA               	clrf	fsr2h,c
 24937   00108C  0E01               	movlw	high _currentPos
 24938   00108E  22DA               	addwfc	fsr2h,f,c
 24939   001090  50DF               	movf	indf2,w,c
 24940   001092  6FC6               	movwf	??_pollServos& (0+255),b
 24941   001094  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 24942   001096  0100               	movlb	0	; () banked
 24943   001098  518D               	movf	?_getNV& (0+255),w,b
 24944   00109A  0101               	movlb	1	; () banked
 24945   00109C  19C6               	xorwf	??_pollServos& (0+255),w,b
 24946   00109E  E117               	bnz	l20832
 24947   0010A0  0100               	movlb	0	; () banked
 24948   0010A2  518E               	movf	(?_getNV+1)& (0+255),w,b
 24949   0010A4  0101               	movlb	1	; () banked
 24950   0010A6  19C7               	xorwf	(??_pollServos+1)& (0+255),w,b
 24951   0010A8  A4D8               	btfss	status,2,c
 24952   0010AA  D011               	goto	l20832
 24953                           
 24954                           ; BSR set to: 1
 24955                           ;../servo.c: 430:                             sendProducedEvent(((8 + 4*(io))+0), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 24956   0010AC  51D1               	movf	pollServos@io& (0+255),w,b
 24957   0010AE  0D07               	mullw	7
 24958   0010B0  50F3               	movf	243,w,c
 24959   0010B2  0F11               	addlw	17
 24960   0010B4  EC35  F05D         	call	_getNV
 24961   0010B8  0100               	movlb	0	; () banked
 24962   0010BA  518D               	movf	?_getNV& (0+255),w,b
 24963   0010BC  0B40               	andlw	64
 24964   0010BE  0101               	movlb	1	; () banked
 24965   0010C0  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 24966   0010C2  51D1               	movf	pollServos@io& (0+255),w,b
 24967   0010C4  0D04               	mullw	4
 24968   0010C6  50F3               	movf	243,w,c
 24969   0010C8  0F08               	addlw	8
 24970   0010CA  ECAD  F04C         	call	_sendProducedEvent
 24971   0010CE                     l20832:
 24972                           
 24973                           ;../servo.c: 432:                         if (currentPos[io] == getNV((16 + 7*(io) + 4))
      +                          ) {
 24974   0010CE  0101               	movlb	1	; () banked
 24975   0010D0  51D1               	movf	pollServos@io& (0+255),w,b
 24976   0010D2  0D07               	mullw	7
 24977   0010D4  50F3               	movf	243,w,c
 24978   0010D6  0F14               	addlw	20
 24979   0010D8  EC35  F05D         	call	_getNV
 24980   0010DC  0E40               	movlw	low _currentPos
 24981   0010DE  0101               	movlb	1	; () banked
 24982   0010E0  25D1               	addwf	pollServos@io& (0+255),w,b
 24983   0010E2  6ED9               	movwf	fsr2l,c
 24984   0010E4  6ADA               	clrf	fsr2h,c
 24985   0010E6  0E01               	movlw	high _currentPos
 24986   0010E8  22DA               	addwfc	fsr2h,f,c
 24987   0010EA  50DF               	movf	indf2,w,c
 24988   0010EC  6FC6               	movwf	??_pollServos& (0+255),b
 24989   0010EE  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 24990   0010F0  0100               	movlb	0	; () banked
 24991   0010F2  518D               	movf	?_getNV& (0+255),w,b
 24992   0010F4  0101               	movlb	1	; () banked
 24993   0010F6  19C6               	xorwf	??_pollServos& (0+255),w,b
 24994   0010F8  E117               	bnz	l20836
 24995   0010FA  0100               	movlb	0	; () banked
 24996   0010FC  518E               	movf	(?_getNV+1)& (0+255),w,b
 24997   0010FE  0101               	movlb	1	; () banked
 24998   001100  19C7               	xorwf	(??_pollServos+1)& (0+255),w,b
 24999   001102  A4D8               	btfss	status,2,c
 25000   001104  D011               	goto	l20836
 25001                           
 25002                           ; BSR set to: 1
 25003                           ;../servo.c: 433:                             sendProducedEvent(((8 + 4*(io))+1), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 25004   001106  51D1               	movf	pollServos@io& (0+255),w,b
 25005   001108  0D07               	mullw	7
 25006   00110A  50F3               	movf	243,w,c
 25007   00110C  0F11               	addlw	17
 25008   00110E  EC35  F05D         	call	_getNV
 25009   001112  0100               	movlb	0	; () banked
 25010   001114  518D               	movf	?_getNV& (0+255),w,b
 25011   001116  0B40               	andlw	64
 25012   001118  0101               	movlb	1	; () banked
 25013   00111A  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 25014   00111C  51D1               	movf	pollServos@io& (0+255),w,b
 25015   00111E  0D04               	mullw	4
 25016   001120  50F3               	movf	243,w,c
 25017   001122  0F09               	addlw	9
 25018   001124  ECAD  F04C         	call	_sendProducedEvent
 25019   001128                     l20836:
 25020                           
 25021                           ;../servo.c: 435:                         if (currentPos[io] == getNV((16 + 7*(io) + 5))
      +                          ) {
 25022   001128  0101               	movlb	1	; () banked
 25023   00112A  51D1               	movf	pollServos@io& (0+255),w,b
 25024   00112C  0D07               	mullw	7
 25025   00112E  50F3               	movf	243,w,c
 25026   001130  0F15               	addlw	21
 25027   001132  EC35  F05D         	call	_getNV
 25028   001136  0E40               	movlw	low _currentPos
 25029   001138  0101               	movlb	1	; () banked
 25030   00113A  25D1               	addwf	pollServos@io& (0+255),w,b
 25031   00113C  6ED9               	movwf	fsr2l,c
 25032   00113E  6ADA               	clrf	fsr2h,c
 25033   001140  0E01               	movlw	high _currentPos
 25034   001142  22DA               	addwfc	fsr2h,f,c
 25035   001144  50DF               	movf	indf2,w,c
 25036   001146  6FC6               	movwf	??_pollServos& (0+255),b
 25037   001148  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 25038   00114A  0100               	movlb	0	; () banked
 25039   00114C  518D               	movf	?_getNV& (0+255),w,b
 25040   00114E  0101               	movlb	1	; () banked
 25041   001150  19C6               	xorwf	??_pollServos& (0+255),w,b
 25042   001152  E117               	bnz	l20840
 25043   001154  0100               	movlb	0	; () banked
 25044   001156  518E               	movf	(?_getNV+1)& (0+255),w,b
 25045   001158  0101               	movlb	1	; () banked
 25046   00115A  19C7               	xorwf	(??_pollServos+1)& (0+255),w,b
 25047   00115C  A4D8               	btfss	status,2,c
 25048   00115E  D011               	goto	l20840
 25049                           
 25050                           ; BSR set to: 1
 25051                           ;../servo.c: 436:                             sendProducedEvent(((8 + 4*(io))+2), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 25052   001160  51D1               	movf	pollServos@io& (0+255),w,b
 25053   001162  0D07               	mullw	7
 25054   001164  50F3               	movf	243,w,c
 25055   001166  0F11               	addlw	17
 25056   001168  EC35  F05D         	call	_getNV
 25057   00116C  0100               	movlb	0	; () banked
 25058   00116E  518D               	movf	?_getNV& (0+255),w,b
 25059   001170  0B40               	andlw	64
 25060   001172  0101               	movlb	1	; () banked
 25061   001174  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 25062   001176  51D1               	movf	pollServos@io& (0+255),w,b
 25063   001178  0D04               	mullw	4
 25064   00117A  50F3               	movf	243,w,c
 25065   00117C  0F0A               	addlw	10
 25066   00117E  ECAD  F04C         	call	_sendProducedEvent
 25067   001182                     l20840:
 25068                           
 25069                           ;../servo.c: 438:                         if (currentPos[io] == getNV((16 + 7*(io) + 6))
      +                          ) {
 25070   001182  0101               	movlb	1	; () banked
 25071   001184  51D1               	movf	pollServos@io& (0+255),w,b
 25072   001186  0D07               	mullw	7
 25073   001188  50F3               	movf	243,w,c
 25074   00118A  0F16               	addlw	22
 25075   00118C  EC35  F05D         	call	_getNV
 25076   001190  0E40               	movlw	low _currentPos
 25077   001192  0101               	movlb	1	; () banked
 25078   001194  25D1               	addwf	pollServos@io& (0+255),w,b
 25079   001196  6ED9               	movwf	fsr2l,c
 25080   001198  6ADA               	clrf	fsr2h,c
 25081   00119A  0E01               	movlw	high _currentPos
 25082   00119C  22DA               	addwfc	fsr2h,f,c
 25083   00119E  50DF               	movf	indf2,w,c
 25084   0011A0  6FC6               	movwf	??_pollServos& (0+255),b
 25085   0011A2  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 25086   0011A4  0100               	movlb	0	; () banked
 25087   0011A6  518D               	movf	?_getNV& (0+255),w,b
 25088   0011A8  0101               	movlb	1	; () banked
 25089   0011AA  19C6               	xorwf	??_pollServos& (0+255),w,b
 25090   0011AC  E117               	bnz	l20844
 25091   0011AE  0100               	movlb	0	; () banked
 25092   0011B0  518E               	movf	(?_getNV+1)& (0+255),w,b
 25093   0011B2  0101               	movlb	1	; () banked
 25094   0011B4  19C7               	xorwf	(??_pollServos+1)& (0+255),w,b
 25095   0011B6  A4D8               	btfss	status,2,c
 25096   0011B8  D011               	goto	l20844
 25097                           
 25098                           ; BSR set to: 1
 25099                           ;../servo.c: 439:                             sendProducedEvent(((8 + 4*(io))+3), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 25100   0011BA  51D1               	movf	pollServos@io& (0+255),w,b
 25101   0011BC  0D07               	mullw	7
 25102   0011BE  50F3               	movf	243,w,c
 25103   0011C0  0F11               	addlw	17
 25104   0011C2  EC35  F05D         	call	_getNV
 25105   0011C6  0100               	movlb	0	; () banked
 25106   0011C8  518D               	movf	?_getNV& (0+255),w,b
 25107   0011CA  0B40               	andlw	64
 25108   0011CC  0101               	movlb	1	; () banked
 25109   0011CE  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 25110   0011D0  51D1               	movf	pollServos@io& (0+255),w,b
 25111   0011D2  0D04               	mullw	4
 25112   0011D4  50F3               	movf	243,w,c
 25113   0011D6  0F0B               	addlw	11
 25114   0011D8  ECAD  F04C         	call	_sendProducedEvent
 25115   0011DC                     l20844:
 25116                           
 25117                           ;../servo.c: 441:                         servoState[io] = SS_MOVING;
 25118   0011DC  0E30               	movlw	low _servoState
 25119   0011DE  0101               	movlb	1	; () banked
 25120   0011E0  25D1               	addwf	pollServos@io& (0+255),w,b
 25121   0011E2  6ED9               	movwf	fsr2l,c
 25122   0011E4  6ADA               	clrf	fsr2h,c
 25123   0011E6  0E01               	movlw	high _servoState
 25124   0011E8  22DA               	addwfc	fsr2h,f,c
 25125   0011EA  0E02               	movlw	2
 25126   0011EC  6EDF               	movwf	indf2,c
 25127   0011EE                     l20846:
 25128                           
 25129                           ; BSR set to: 1
 25130                           ;../servo.c: 444:                         if (targetPos[io] > currentPos[io]) {
 25131   0011EE  51D1               	movf	pollServos@io& (0+255),w,b
 25132   0011F0  0F01               	addlw	low _targetPos
 25133   0011F2  6ED9               	movwf	fsr2l,c
 25134   0011F4  6ADA               	clrf	fsr2h,c
 25135   0011F6  0E40               	movlw	low _currentPos
 25136   0011F8  25D1               	addwf	pollServos@io& (0+255),w,b
 25137   0011FA  6EE1               	movwf	fsr1l,c
 25138   0011FC  6AE2               	clrf	fsr1h,c
 25139   0011FE  0E01               	movlw	high _currentPos
 25140   001200  22E2               	addwfc	fsr1h,f,c
 25141   001202  50DE               	movf	postinc2,w,c
 25142   001204  5CE6               	subwf	postinc1,w,c
 25143   001206  B0D8               	btfsc	status,0,c
 25144   001208  D08B               	goto	l20866
 25145                           
 25146                           ; BSR set to: 1
 25147                           ;../servo.c: 445:                             if (stepsPerPollSpeed[io]) {
 25148   00120A  0E20               	movlw	low _stepsPerPollSpeed
 25149   00120C  25D1               	addwf	pollServos@io& (0+255),w,b
 25150   00120E  6ED9               	movwf	fsr2l,c
 25151   001210  6ADA               	clrf	fsr2h,c
 25152   001212  0E01               	movlw	high _stepsPerPollSpeed
 25153   001214  22DA               	addwfc	fsr2h,f,c
 25154   001216  50DF               	movf	indf2,w,c
 25155   001218  B4D8               	btfsc	status,2,c
 25156   00121A  D042               	goto	l20856
 25157                           
 25158                           ; BSR set to: 1
 25159                           ;../servo.c: 446:                                 if (currentPos[io] + stepsPerPollSpeed
      +                          [io] < currentPos[io]) {
 25160   00121C  0E40               	movlw	low _currentPos
 25161   00121E  25D1               	addwf	pollServos@io& (0+255),w,b
 25162   001220  6ED9               	movwf	fsr2l,c
 25163   001222  6ADA               	clrf	fsr2h,c
 25164   001224  0E01               	movlw	high _currentPos
 25165   001226  22DA               	addwfc	fsr2h,f,c
 25166   001228  50DF               	movf	indf2,w,c
 25167   00122A  6FC6               	movwf	??_pollServos& (0+255),b
 25168   00122C  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 25169   00122E  0E40               	movlw	low _currentPos
 25170   001230  25D1               	addwf	pollServos@io& (0+255),w,b
 25171   001232  6ED9               	movwf	fsr2l,c
 25172   001234  6ADA               	clrf	fsr2h,c
 25173   001236  0E01               	movlw	high _currentPos
 25174   001238  22DA               	addwfc	fsr2h,f,c
 25175   00123A  50DF               	movf	indf2,w,c
 25176   00123C  6FC8               	movwf	(??_pollServos+2)& (0+255),b
 25177   00123E  6BC9               	clrf	(??_pollServos+3)& (0+255),b
 25178   001240  0E20               	movlw	low _stepsPerPollSpeed
 25179   001242  25D1               	addwf	pollServos@io& (0+255),w,b
 25180   001244  6ED9               	movwf	fsr2l,c
 25181   001246  6ADA               	clrf	fsr2h,c
 25182   001248  0E01               	movlw	high _stepsPerPollSpeed
 25183   00124A  22DA               	addwfc	fsr2h,f,c
 25184   00124C  50DF               	movf	indf2,w,c
 25185   00124E  6FCA               	movwf	(??_pollServos+4)& (0+255),b
 25186   001250  51CA               	movf	(??_pollServos+4)& (0+255),w,b
 25187   001252  27C8               	addwf	(??_pollServos+2)& (0+255),f,b
 25188   001254  0E00               	movlw	0
 25189   001256  23C9               	addwfc	(??_pollServos+3)& (0+255),f,b
 25190   001258  51C6               	movf	??_pollServos& (0+255),w,b
 25191   00125A  5DC8               	subwf	(??_pollServos+2)& (0+255),w,b
 25192   00125C  51C9               	movf	(??_pollServos+3)& (0+255),w,b
 25193   00125E  0A80               	xorlw	128
 25194   001260  6FCB               	movwf	(??_pollServos+5)& (0+255),b
 25195   001262  51C7               	movf	(??_pollServos+1)& (0+255),w,b
 25196   001264  0A80               	xorlw	128
 25197   001266  59CB               	subwfb	(??_pollServos+5)& (0+255),w,b
 25198   001268  B0D8               	btfsc	status,0,c
 25199   00126A  D009               	goto	l20854
 25200                           
 25201                           ; BSR set to: 1
 25202                           ;../servo.c: 448:                                     currentPos[io] =255;
 25203   00126C  0E40               	movlw	low _currentPos
 25204   00126E  25D1               	addwf	pollServos@io& (0+255),w,b
 25205   001270  6ED9               	movwf	fsr2l,c
 25206   001272  6ADA               	clrf	fsr2h,c
 25207   001274  0E01               	movlw	high _currentPos
 25208   001276  22DA               	addwfc	fsr2h,f,c
 25209   001278  0EFF               	movlw	255
 25210   00127A  6EDF               	movwf	indf2,c
 25211                           
 25212                           ;../servo.c: 449:                                 } else {
 25213   00127C  D036               	goto	l20862
 25214   00127E                     l20854:
 25215                           
 25216                           ; BSR set to: 1
 25217                           ;../servo.c: 450:                                     currentPos[io] += stepsPerPollSpee
      +                          d[io];
 25218   00127E  0E20               	movlw	low _stepsPerPollSpeed
 25219   001280  25D1               	addwf	pollServos@io& (0+255),w,b
 25220   001282  6ED9               	movwf	fsr2l,c
 25221   001284  6ADA               	clrf	fsr2h,c
 25222   001286  0E01               	movlw	high _stepsPerPollSpeed
 25223   001288  22DA               	addwfc	fsr2h,f,c
 25224   00128A  50DF               	movf	indf2,w,c
 25225   00128C  6FC6               	movwf	??_pollServos& (0+255),b
 25226   00128E  0E40               	movlw	low _currentPos
 25227   001290  25D1               	addwf	pollServos@io& (0+255),w,b
 25228   001292  6ED9               	movwf	fsr2l,c
 25229   001294  6ADA               	clrf	fsr2h,c
 25230   001296  0E01               	movlw	high _currentPos
 25231   001298  22DA               	addwfc	fsr2h,f,c
 25232   00129A  51C6               	movf	??_pollServos& (0+255),w,b
 25233   00129C  26DF               	addwf	indf2,f,c
 25234   00129E  D025               	goto	l20862
 25235   0012A0                     l20856:
 25236                           
 25237                           ; BSR set to: 1
 25238                           ;../servo.c: 453:                                 pollCount[io]--;
 25239   0012A0  0E44               	movlw	low _pollCount
 25240   0012A2  25D1               	addwf	pollServos@io& (0+255),w,b
 25241   0012A4  6ED9               	movwf	fsr2l,c
 25242   0012A6  6ADA               	clrf	fsr2h,c
 25243   0012A8  0E02               	movlw	high _pollCount
 25244   0012AA  22DA               	addwfc	fsr2h,f,c
 25245   0012AC  06DF               	decf	indf2,f,c
 25246                           
 25247                           ;../servo.c: 454:                                 if (pollCount[io] == 0) {
 25248   0012AE  0E44               	movlw	low _pollCount
 25249   0012B0  25D1               	addwf	pollServos@io& (0+255),w,b
 25250   0012B2  6ED9               	movwf	fsr2l,c
 25251   0012B4  6ADA               	clrf	fsr2h,c
 25252   0012B6  0E02               	movlw	high _pollCount
 25253   0012B8  22DA               	addwfc	fsr2h,f,c
 25254   0012BA  50DF               	movf	indf2,w,c
 25255   0012BC  A4D8               	btfss	status,2,c
 25256   0012BE  D015               	goto	l20862
 25257                           
 25258                           ; BSR set to: 1
 25259                           ;../servo.c: 455:                                     currentPos[io]++;
 25260   0012C0  0E40               	movlw	low _currentPos
 25261   0012C2  25D1               	addwf	pollServos@io& (0+255),w,b
 25262   0012C4  6ED9               	movwf	fsr2l,c
 25263   0012C6  6ADA               	clrf	fsr2h,c
 25264   0012C8  0E01               	movlw	high _currentPos
 25265   0012CA  22DA               	addwfc	fsr2h,f,c
 25266   0012CC  2ADF               	incf	indf2,f,c
 25267                           
 25268                           ; BSR set to: 1
 25269                           ;../servo.c: 456:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 25270   0012CE  0E54               	movlw	low _pollsPerStepSpeed
 25271   0012D0  25D1               	addwf	pollServos@io& (0+255),w,b
 25272   0012D2  6ED9               	movwf	fsr2l,c
 25273   0012D4  6ADA               	clrf	fsr2h,c
 25274   0012D6  0E02               	movlw	high _pollsPerStepSpeed
 25275   0012D8  22DA               	addwfc	fsr2h,f,c
 25276   0012DA  0E44               	movlw	low _pollCount
 25277   0012DC  25D1               	addwf	pollServos@io& (0+255),w,b
 25278   0012DE  6EE1               	movwf	fsr1l,c
 25279   0012E0  6AE2               	clrf	fsr1h,c
 25280   0012E2  0E02               	movlw	high _pollCount
 25281   0012E4  22E2               	addwfc	fsr1h,f,c
 25282   0012E6  CFDF FFE7          	movff	indf2,indf1
 25283   0012EA                     l20862:
 25284                           
 25285                           ; BSR set to: 1
 25286                           ;../servo.c: 459:                             if (currentPos[io] > targetPos[io]) {
 25287   0012EA  0E40               	movlw	low _currentPos
 25288   0012EC  25D1               	addwf	pollServos@io& (0+255),w,b
 25289   0012EE  6ED9               	movwf	fsr2l,c
 25290   0012F0  6ADA               	clrf	fsr2h,c
 25291   0012F2  0E01               	movlw	high _currentPos
 25292   0012F4  22DA               	addwfc	fsr2h,f,c
 25293   0012F6  51D1               	movf	pollServos@io& (0+255),w,b
 25294   0012F8  0F01               	addlw	low _targetPos
 25295   0012FA  6EE1               	movwf	fsr1l,c
 25296   0012FC  6AE2               	clrf	fsr1h,c
 25297   0012FE  50DE               	movf	postinc2,w,c
 25298   001300  5CE6               	subwf	postinc1,w,c
 25299   001302  B0D8               	btfsc	status,0,c
 25300   001304  D098               	goto	l1044
 25301   001306                     u21900:
 25302                           
 25303                           ; BSR set to: 1
 25304                           ;../servo.c: 460:                                 currentPos[io] = targetPos[io];
 25305   001306  51D1               	movf	pollServos@io& (0+255),w,b
 25306   001308  0F01               	addlw	low _targetPos
 25307   00130A  6ED9               	movwf	fsr2l,c
 25308   00130C  6ADA               	clrf	fsr2h,c
 25309   00130E  0E40               	movlw	low _currentPos
 25310   001310  25D1               	addwf	pollServos@io& (0+255),w,b
 25311   001312  6EE1               	movwf	fsr1l,c
 25312   001314  6AE2               	clrf	fsr1h,c
 25313   001316  0E01               	movlw	high _currentPos
 25314   001318  22E2               	addwfc	fsr1h,f,c
 25315   00131A  CFDF FFE7          	movff	indf2,indf1
 25316   00131E  D08B               	goto	l1044
 25317   001320                     l20866:
 25318                           
 25319                           ; BSR set to: 1
 25320   001320  0E40               	movlw	low _currentPos
 25321   001322  25D1               	addwf	pollServos@io& (0+255),w,b
 25322   001324  6ED9               	movwf	fsr2l,c
 25323   001326  6ADA               	clrf	fsr2h,c
 25324   001328  0E01               	movlw	high _currentPos
 25325   00132A  22DA               	addwfc	fsr2h,f,c
 25326   00132C  51D1               	movf	pollServos@io& (0+255),w,b
 25327   00132E  0F01               	addlw	low _targetPos
 25328   001330  6EE1               	movwf	fsr1l,c
 25329   001332  6AE2               	clrf	fsr1h,c
 25330   001334  50DE               	movf	postinc2,w,c
 25331   001336  5CE6               	subwf	postinc1,w,c
 25332   001338  B0D8               	btfsc	status,0,c
 25333   00133A  D07D               	goto	l1044
 25334                           
 25335                           ; BSR set to: 1
 25336                           ;../servo.c: 464:                             if (stepsPerPollSpeed[io]) {
 25337   00133C  0E20               	movlw	low _stepsPerPollSpeed
 25338   00133E  25D1               	addwf	pollServos@io& (0+255),w,b
 25339   001340  6ED9               	movwf	fsr2l,c
 25340   001342  6ADA               	clrf	fsr2h,c
 25341   001344  0E01               	movlw	high _stepsPerPollSpeed
 25342   001346  22DA               	addwfc	fsr2h,f,c
 25343   001348  50DF               	movf	indf2,w,c
 25344   00134A  B4D8               	btfsc	status,2,c
 25345   00134C  D041               	goto	l20876
 25346                           
 25347                           ; BSR set to: 1
 25348                           ;../servo.c: 465:                                 if (currentPos[io] - stepsPerPollSpeed
      +                          [io] > currentPos[io]) {
 25349   00134E  0E40               	movlw	low _currentPos
 25350   001350  25D1               	addwf	pollServos@io& (0+255),w,b
 25351   001352  6ED9               	movwf	fsr2l,c
 25352   001354  6ADA               	clrf	fsr2h,c
 25353   001356  0E01               	movlw	high _currentPos
 25354   001358  22DA               	addwfc	fsr2h,f,c
 25355   00135A  50DF               	movf	indf2,w,c
 25356   00135C  6FC6               	movwf	??_pollServos& (0+255),b
 25357   00135E  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 25358   001360  0E20               	movlw	low _stepsPerPollSpeed
 25359   001362  25D1               	addwf	pollServos@io& (0+255),w,b
 25360   001364  6ED9               	movwf	fsr2l,c
 25361   001366  6ADA               	clrf	fsr2h,c
 25362   001368  0E01               	movlw	high _stepsPerPollSpeed
 25363   00136A  22DA               	addwfc	fsr2h,f,c
 25364   00136C  50DF               	movf	indf2,w,c
 25365   00136E  6FC8               	movwf	(??_pollServos+2)& (0+255),b
 25366   001370  51C8               	movf	(??_pollServos+2)& (0+255),w,b
 25367   001372  5FC6               	subwf	??_pollServos& (0+255),f,b
 25368   001374  0E00               	movlw	0
 25369   001376  5BC7               	subwfb	(??_pollServos+1)& (0+255),f,b
 25370   001378  0E40               	movlw	low _currentPos
 25371   00137A  25D1               	addwf	pollServos@io& (0+255),w,b
 25372   00137C  6ED9               	movwf	fsr2l,c
 25373   00137E  6ADA               	clrf	fsr2h,c
 25374   001380  0E01               	movlw	high _currentPos
 25375   001382  22DA               	addwfc	fsr2h,f,c
 25376   001384  50DF               	movf	indf2,w,c
 25377   001386  6FC9               	movwf	(??_pollServos+3)& (0+255),b
 25378   001388  6BCA               	clrf	(??_pollServos+4)& (0+255),b
 25379   00138A  51C6               	movf	??_pollServos& (0+255),w,b
 25380   00138C  5DC9               	subwf	(??_pollServos+3)& (0+255),w,b
 25381   00138E  51CA               	movf	(??_pollServos+4)& (0+255),w,b
 25382   001390  0A80               	xorlw	128
 25383   001392  6FCB               	movwf	(??_pollServos+5)& (0+255),b
 25384   001394  51C7               	movf	(??_pollServos+1)& (0+255),w,b
 25385   001396  0A80               	xorlw	128
 25386   001398  59CB               	subwfb	(??_pollServos+5)& (0+255),w,b
 25387   00139A  B0D8               	btfsc	status,0,c
 25388   00139C  D008               	goto	l20874
 25389                           
 25390                           ; BSR set to: 1
 25391                           ;../servo.c: 467:                                     currentPos[io] = 0;
 25392   00139E  0E40               	movlw	low _currentPos
 25393   0013A0  25D1               	addwf	pollServos@io& (0+255),w,b
 25394   0013A2  6ED9               	movwf	fsr2l,c
 25395   0013A4  6ADA               	clrf	fsr2h,c
 25396   0013A6  0E01               	movlw	high _currentPos
 25397   0013A8  22DA               	addwfc	fsr2h,f,c
 25398   0013AA  6ADF               	clrf	indf2,c
 25399                           
 25400                           ;../servo.c: 468:                                 } else {
 25401   0013AC  D036               	goto	l20882
 25402   0013AE                     l20874:
 25403                           
 25404                           ; BSR set to: 1
 25405                           ;../servo.c: 469:                                     currentPos[io] -= stepsPerPollSpee
      +                          d[io];
 25406   0013AE  0E20               	movlw	low _stepsPerPollSpeed
 25407   0013B0  25D1               	addwf	pollServos@io& (0+255),w,b
 25408   0013B2  6ED9               	movwf	fsr2l,c
 25409   0013B4  6ADA               	clrf	fsr2h,c
 25410   0013B6  0E01               	movlw	high _stepsPerPollSpeed
 25411   0013B8  22DA               	addwfc	fsr2h,f,c
 25412   0013BA  50DF               	movf	indf2,w,c
 25413   0013BC  6FC6               	movwf	??_pollServos& (0+255),b
 25414   0013BE  0E40               	movlw	low _currentPos
 25415   0013C0  25D1               	addwf	pollServos@io& (0+255),w,b
 25416   0013C2  6ED9               	movwf	fsr2l,c
 25417   0013C4  6ADA               	clrf	fsr2h,c
 25418   0013C6  0E01               	movlw	high _currentPos
 25419   0013C8  22DA               	addwfc	fsr2h,f,c
 25420   0013CA  51C6               	movf	??_pollServos& (0+255),w,b
 25421   0013CC  5EDF               	subwf	indf2,f,c
 25422   0013CE  D025               	goto	l20882
 25423   0013D0                     l20876:
 25424                           
 25425                           ; BSR set to: 1
 25426                           ;../servo.c: 472:                                 pollCount[io]--;
 25427   0013D0  0E44               	movlw	low _pollCount
 25428   0013D2  25D1               	addwf	pollServos@io& (0+255),w,b
 25429   0013D4  6ED9               	movwf	fsr2l,c
 25430   0013D6  6ADA               	clrf	fsr2h,c
 25431   0013D8  0E02               	movlw	high _pollCount
 25432   0013DA  22DA               	addwfc	fsr2h,f,c
 25433   0013DC  06DF               	decf	indf2,f,c
 25434                           
 25435                           ;../servo.c: 473:                                 if (pollCount[io] == 0) {
 25436   0013DE  0E44               	movlw	low _pollCount
 25437   0013E0  25D1               	addwf	pollServos@io& (0+255),w,b
 25438   0013E2  6ED9               	movwf	fsr2l,c
 25439   0013E4  6ADA               	clrf	fsr2h,c
 25440   0013E6  0E02               	movlw	high _pollCount
 25441   0013E8  22DA               	addwfc	fsr2h,f,c
 25442   0013EA  50DF               	movf	indf2,w,c
 25443   0013EC  A4D8               	btfss	status,2,c
 25444   0013EE  D015               	goto	l20882
 25445                           
 25446                           ; BSR set to: 1
 25447                           ;../servo.c: 474:                                     currentPos[io]--;
 25448   0013F0  0E40               	movlw	low _currentPos
 25449   0013F2  25D1               	addwf	pollServos@io& (0+255),w,b
 25450   0013F4  6ED9               	movwf	fsr2l,c
 25451   0013F6  6ADA               	clrf	fsr2h,c
 25452   0013F8  0E01               	movlw	high _currentPos
 25453   0013FA  22DA               	addwfc	fsr2h,f,c
 25454   0013FC  06DF               	decf	indf2,f,c
 25455                           
 25456                           ; BSR set to: 1
 25457                           ;../servo.c: 475:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 25458   0013FE  0E54               	movlw	low _pollsPerStepSpeed
 25459   001400  25D1               	addwf	pollServos@io& (0+255),w,b
 25460   001402  6ED9               	movwf	fsr2l,c
 25461   001404  6ADA               	clrf	fsr2h,c
 25462   001406  0E02               	movlw	high _pollsPerStepSpeed
 25463   001408  22DA               	addwfc	fsr2h,f,c
 25464   00140A  0E44               	movlw	low _pollCount
 25465   00140C  25D1               	addwf	pollServos@io& (0+255),w,b
 25466   00140E  6EE1               	movwf	fsr1l,c
 25467   001410  6AE2               	clrf	fsr1h,c
 25468   001412  0E02               	movlw	high _pollCount
 25469   001414  22E2               	addwfc	fsr1h,f,c
 25470   001416  CFDF FFE7          	movff	indf2,indf1
 25471   00141A                     l20882:
 25472                           
 25473                           ; BSR set to: 1
 25474                           ;../servo.c: 478:                             if (currentPos[io] < targetPos[io]) {
 25475   00141A  51D1               	movf	pollServos@io& (0+255),w,b
 25476   00141C  0F01               	addlw	low _targetPos
 25477   00141E  6ED9               	movwf	fsr2l,c
 25478   001420  6ADA               	clrf	fsr2h,c
 25479   001422  0E40               	movlw	low _currentPos
 25480   001424  25D1               	addwf	pollServos@io& (0+255),w,b
 25481   001426  6EE1               	movwf	fsr1l,c
 25482   001428  6AE2               	clrf	fsr1h,c
 25483   00142A  0E01               	movlw	high _currentPos
 25484   00142C  22E2               	addwfc	fsr1h,f,c
 25485   00142E  50DE               	movf	postinc2,w,c
 25486   001430  5CE6               	subwf	postinc1,w,c
 25487   001432  A0D8               	btfss	status,0,c
 25488   001434  D768               	goto	u21900
 25489   001436                     l1044:
 25490                           
 25491                           ; BSR set to: 1
 25492                           ;../servo.c: 482:                         if (targetPos[io] == currentPos[io]) {
 25493   001436  0E40               	movlw	low _currentPos
 25494   001438  25D1               	addwf	pollServos@io& (0+255),w,b
 25495   00143A  6ED9               	movwf	fsr2l,c
 25496   00143C  6ADA               	clrf	fsr2h,c
 25497   00143E  0E01               	movlw	high _currentPos
 25498   001440  22DA               	addwfc	fsr2h,f,c
 25499   001442  51D1               	movf	pollServos@io& (0+255),w,b
 25500   001444  0F01               	addlw	low _targetPos
 25501   001446  6EE1               	movwf	fsr1l,c
 25502   001448  6AE2               	clrf	fsr1h,c
 25503   00144A  50DE               	movf	postinc2,w,c
 25504   00144C  18E6               	xorwf	postinc1,w,c
 25505   00144E  A4D8               	btfss	status,2,c
 25506   001450  D16C               	goto	l20924
 25507                           
 25508                           ; BSR set to: 1
 25509                           ;../servo.c: 483:                             servoState[io] = SS_STOPPED;
 25510   001452  0E30               	movlw	low _servoState
 25511   001454  25D1               	addwf	pollServos@io& (0+255),w,b
 25512   001456  6ED9               	movwf	fsr2l,c
 25513   001458  6ADA               	clrf	fsr2h,c
 25514   00145A  0E01               	movlw	high _servoState
 25515   00145C  22DA               	addwfc	fsr2h,f,c
 25516   00145E  0E01               	movlw	1
 25517   001460  6EDF               	movwf	indf2,c
 25518                           
 25519                           ; BSR set to: 1
 25520                           ;../servo.c: 484:                             ticksWhenStopped[io].val = tickGet();
 25521   001462  ECC2  F059         	call	_tickGet	;wreg free
 25522   001466  0101               	movlb	1	; () banked
 25523   001468  51D1               	movf	pollServos@io& (0+255),w,b
 25524   00146A  0D04               	mullw	4
 25525   00146C  0E88               	movlw	low _ticksWhenStopped
 25526   00146E  24F3               	addwf	243,w,c
 25527   001470  6ED9               	movwf	fsr2l,c
 25528   001472  0E03               	movlw	high _ticksWhenStopped
 25529   001474  20F4               	addwfc	prodh,w,c
 25530   001476  6EDA               	movwf	fsr2h,c
 25531   001478  0100               	movlb	0	; () banked
 25532   00147A  C08D  FFDE         	movff	?_tickGet,postinc2
 25533   00147E  C08E  FFDE         	movff	?_tickGet+1,postinc2
 25534   001482  C08F  FFDE         	movff	?_tickGet+2,postinc2
 25535   001486  C090  FFDE         	movff	?_tickGet+3,postinc2
 25536                           
 25537                           ; BSR set to: 0
 25538                           ;../servo.c: 486:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           3))) {
 25539   00148A  0101               	movlb	1	; () banked
 25540   00148C  51D1               	movf	pollServos@io& (0+255),w,b
 25541   00148E  0D07               	mullw	7
 25542   001490  50F3               	movf	243,w,c
 25543   001492  0F13               	addlw	19
 25544   001494  EC35  F05D         	call	_getNV
 25545   001498  0E40               	movlw	low _currentPos
 25546   00149A  0101               	movlb	1	; () banked
 25547   00149C  25D1               	addwf	pollServos@io& (0+255),w,b
 25548   00149E  6ED9               	movwf	fsr2l,c
 25549   0014A0  6ADA               	clrf	fsr2h,c
 25550   0014A2  0E01               	movlw	high _currentPos
 25551   0014A4  22DA               	addwfc	fsr2h,f,c
 25552   0014A6  50DF               	movf	indf2,w,c
 25553   0014A8  6FC6               	movwf	??_pollServos& (0+255),b
 25554   0014AA  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 25555   0014AC  0100               	movlb	0	; () banked
 25556   0014AE  518D               	movf	?_getNV& (0+255),w,b
 25557   0014B0  0101               	movlb	1	; () banked
 25558   0014B2  19C6               	xorwf	??_pollServos& (0+255),w,b
 25559   0014B4  E11A               	bnz	l20894
 25560   0014B6  0100               	movlb	0	; () banked
 25561   0014B8  518E               	movf	(?_getNV+1)& (0+255),w,b
 25562   0014BA  0101               	movlb	1	; () banked
 25563   0014BC  19C7               	xorwf	(??_pollServos+1)& (0+255),w,b
 25564   0014BE  A4D8               	btfss	status,2,c
 25565   0014C0  D014               	goto	l20894
 25566                           
 25567                           ; BSR set to: 1
 25568                           ;../servo.c: 487:                                 sendProducedEvent(((8 + 4*(io))+0), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 25569   0014C2  51D1               	movf	pollServos@io& (0+255),w,b
 25570   0014C4  0D07               	mullw	7
 25571   0014C6  50F3               	movf	243,w,c
 25572   0014C8  0F11               	addlw	17
 25573   0014CA  EC35  F05D         	call	_getNV
 25574   0014CE  0100               	movlb	0	; () banked
 25575   0014D0  BD8D               	btfsc	?_getNV& (0+255),6,b
 25576   0014D2  D002               	goto	u21980
 25577   0014D4  0E01               	movlw	1
 25578   0014D6  D001               	goto	u21990
 25579   0014D8                     u21980:
 25580   0014D8  0E00               	movlw	0
 25581   0014DA                     u21990:
 25582   0014DA  0101               	movlb	1	; () banked
 25583   0014DC  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 25584   0014DE  51D1               	movf	pollServos@io& (0+255),w,b
 25585   0014E0  0D04               	mullw	4
 25586   0014E2  50F3               	movf	243,w,c
 25587   0014E4  0F08               	addlw	8
 25588   0014E6  ECAD  F04C         	call	_sendProducedEvent
 25589   0014EA                     l20894:
 25590                           
 25591                           ;../servo.c: 489:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           4))) {
 25592   0014EA  0101               	movlb	1	; () banked
 25593   0014EC  51D1               	movf	pollServos@io& (0+255),w,b
 25594   0014EE  0D07               	mullw	7
 25595   0014F0  50F3               	movf	243,w,c
 25596   0014F2  0F14               	addlw	20
 25597   0014F4  EC35  F05D         	call	_getNV
 25598   0014F8  0E40               	movlw	low _currentPos
 25599   0014FA  0101               	movlb	1	; () banked
 25600   0014FC  25D1               	addwf	pollServos@io& (0+255),w,b
 25601   0014FE  6ED9               	movwf	fsr2l,c
 25602   001500  6ADA               	clrf	fsr2h,c
 25603   001502  0E01               	movlw	high _currentPos
 25604   001504  22DA               	addwfc	fsr2h,f,c
 25605   001506  50DF               	movf	indf2,w,c
 25606   001508  6FC6               	movwf	??_pollServos& (0+255),b
 25607   00150A  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 25608   00150C  0100               	movlb	0	; () banked
 25609   00150E  518D               	movf	?_getNV& (0+255),w,b
 25610   001510  0101               	movlb	1	; () banked
 25611   001512  19C6               	xorwf	??_pollServos& (0+255),w,b
 25612   001514  E11A               	bnz	l20898
 25613   001516  0100               	movlb	0	; () banked
 25614   001518  518E               	movf	(?_getNV+1)& (0+255),w,b
 25615   00151A  0101               	movlb	1	; () banked
 25616   00151C  19C7               	xorwf	(??_pollServos+1)& (0+255),w,b
 25617   00151E  A4D8               	btfss	status,2,c
 25618   001520  D014               	goto	l20898
 25619                           
 25620                           ; BSR set to: 1
 25621                           ;../servo.c: 490:                                 sendProducedEvent(((8 + 4*(io))+1), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 25622   001522  51D1               	movf	pollServos@io& (0+255),w,b
 25623   001524  0D07               	mullw	7
 25624   001526  50F3               	movf	243,w,c
 25625   001528  0F11               	addlw	17
 25626   00152A  EC35  F05D         	call	_getNV
 25627   00152E  0100               	movlb	0	; () banked
 25628   001530  BD8D               	btfsc	?_getNV& (0+255),6,b
 25629   001532  D002               	goto	u22010
 25630   001534  0E01               	movlw	1
 25631   001536  D001               	goto	u22020
 25632   001538                     u22010:
 25633   001538  0E00               	movlw	0
 25634   00153A                     u22020:
 25635   00153A  0101               	movlb	1	; () banked
 25636   00153C  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 25637   00153E  51D1               	movf	pollServos@io& (0+255),w,b
 25638   001540  0D04               	mullw	4
 25639   001542  50F3               	movf	243,w,c
 25640   001544  0F09               	addlw	9
 25641   001546  ECAD  F04C         	call	_sendProducedEvent
 25642   00154A                     l20898:
 25643                           
 25644                           ;../servo.c: 492:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           5))) {
 25645   00154A  0101               	movlb	1	; () banked
 25646   00154C  51D1               	movf	pollServos@io& (0+255),w,b
 25647   00154E  0D07               	mullw	7
 25648   001550  50F3               	movf	243,w,c
 25649   001552  0F15               	addlw	21
 25650   001554  EC35  F05D         	call	_getNV
 25651   001558  0E40               	movlw	low _currentPos
 25652   00155A  0101               	movlb	1	; () banked
 25653   00155C  25D1               	addwf	pollServos@io& (0+255),w,b
 25654   00155E  6ED9               	movwf	fsr2l,c
 25655   001560  6ADA               	clrf	fsr2h,c
 25656   001562  0E01               	movlw	high _currentPos
 25657   001564  22DA               	addwfc	fsr2h,f,c
 25658   001566  50DF               	movf	indf2,w,c
 25659   001568  6FC6               	movwf	??_pollServos& (0+255),b
 25660   00156A  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 25661   00156C  0100               	movlb	0	; () banked
 25662   00156E  518D               	movf	?_getNV& (0+255),w,b
 25663   001570  0101               	movlb	1	; () banked
 25664   001572  19C6               	xorwf	??_pollServos& (0+255),w,b
 25665   001574  E11A               	bnz	l20902
 25666   001576  0100               	movlb	0	; () banked
 25667   001578  518E               	movf	(?_getNV+1)& (0+255),w,b
 25668   00157A  0101               	movlb	1	; () banked
 25669   00157C  19C7               	xorwf	(??_pollServos+1)& (0+255),w,b
 25670   00157E  A4D8               	btfss	status,2,c
 25671   001580  D014               	goto	l20902
 25672                           
 25673                           ; BSR set to: 1
 25674                           ;../servo.c: 493:                                 sendProducedEvent(((8 + 4*(io))+2), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 25675   001582  51D1               	movf	pollServos@io& (0+255),w,b
 25676   001584  0D07               	mullw	7
 25677   001586  50F3               	movf	243,w,c
 25678   001588  0F11               	addlw	17
 25679   00158A  EC35  F05D         	call	_getNV
 25680   00158E  0100               	movlb	0	; () banked
 25681   001590  BD8D               	btfsc	?_getNV& (0+255),6,b
 25682   001592  D002               	goto	u22040
 25683   001594  0E01               	movlw	1
 25684   001596  D001               	goto	u22050
 25685   001598                     u22040:
 25686   001598  0E00               	movlw	0
 25687   00159A                     u22050:
 25688   00159A  0101               	movlb	1	; () banked
 25689   00159C  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 25690   00159E  51D1               	movf	pollServos@io& (0+255),w,b
 25691   0015A0  0D04               	mullw	4
 25692   0015A2  50F3               	movf	243,w,c
 25693   0015A4  0F0A               	addlw	10
 25694   0015A6  ECAD  F04C         	call	_sendProducedEvent
 25695   0015AA                     l20902:
 25696                           
 25697                           ;../servo.c: 495:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           6))) {
 25698   0015AA  0101               	movlb	1	; () banked
 25699   0015AC  51D1               	movf	pollServos@io& (0+255),w,b
 25700   0015AE  0D07               	mullw	7
 25701   0015B0  50F3               	movf	243,w,c
 25702   0015B2  0F16               	addlw	22
 25703   0015B4  EC35  F05D         	call	_getNV
 25704   0015B8  0E40               	movlw	low _currentPos
 25705   0015BA  0101               	movlb	1	; () banked
 25706   0015BC  25D1               	addwf	pollServos@io& (0+255),w,b
 25707   0015BE  6ED9               	movwf	fsr2l,c
 25708   0015C0  6ADA               	clrf	fsr2h,c
 25709   0015C2  0E01               	movlw	high _currentPos
 25710   0015C4  22DA               	addwfc	fsr2h,f,c
 25711   0015C6  50DF               	movf	indf2,w,c
 25712   0015C8  6FC6               	movwf	??_pollServos& (0+255),b
 25713   0015CA  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 25714   0015CC  0100               	movlb	0	; () banked
 25715   0015CE  518D               	movf	?_getNV& (0+255),w,b
 25716   0015D0  0101               	movlb	1	; () banked
 25717   0015D2  19C6               	xorwf	??_pollServos& (0+255),w,b
 25718   0015D4  E11A               	bnz	l20906
 25719   0015D6  0100               	movlb	0	; () banked
 25720   0015D8  518E               	movf	(?_getNV+1)& (0+255),w,b
 25721   0015DA  0101               	movlb	1	; () banked
 25722   0015DC  19C7               	xorwf	(??_pollServos+1)& (0+255),w,b
 25723   0015DE  A4D8               	btfss	status,2,c
 25724   0015E0  D014               	goto	l20906
 25725                           
 25726                           ; BSR set to: 1
 25727                           ;../servo.c: 496:                                 sendProducedEvent(((8 + 4*(io))+3), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 25728   0015E2  51D1               	movf	pollServos@io& (0+255),w,b
 25729   0015E4  0D07               	mullw	7
 25730   0015E6  50F3               	movf	243,w,c
 25731   0015E8  0F11               	addlw	17
 25732   0015EA  EC35  F05D         	call	_getNV
 25733   0015EE  0100               	movlb	0	; () banked
 25734   0015F0  BD8D               	btfsc	?_getNV& (0+255),6,b
 25735   0015F2  D002               	goto	u22070
 25736   0015F4  0E01               	movlw	1
 25737   0015F6  D001               	goto	u22080
 25738   0015F8                     u22070:
 25739   0015F8  0E00               	movlw	0
 25740   0015FA                     u22080:
 25741   0015FA  0101               	movlb	1	; () banked
 25742   0015FC  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 25743   0015FE  51D1               	movf	pollServos@io& (0+255),w,b
 25744   001600  0D04               	mullw	4
 25745   001602  50F3               	movf	243,w,c
 25746   001604  0F0B               	addlw	11
 25747   001606  ECAD  F04C         	call	_sendProducedEvent
 25748   00160A                     l20906:
 25749                           
 25750                           ;../servo.c: 498:                             writeNVM(EEPROM_NVM_TYPE, ((eeprom_address
      +                          _t)((0x3FF -8))-25)+io, currentPos[io]);
 25751   00160A  0EDE               	movlw	222
 25752   00160C  0101               	movlb	1	; () banked
 25753   00160E  25D1               	addwf	pollServos@io& (0+255),w,b
 25754   001610  6FC6               	movwf	??_pollServos& (0+255),b
 25755   001612  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 25756   001614  0E03               	movlw	3
 25757   001616  23C7               	addwfc	(??_pollServos+1)& (0+255),f,b
 25758   001618  C1C6  F0A4         	movff	??_pollServos,writeNVM@index
 25759   00161C  C1C7  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 25760   001620  0100               	movlb	0	; () banked
 25761   001622  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 25762   001624  0E40               	movlw	low _currentPos
 25763   001626  0101               	movlb	1	; () banked
 25764   001628  25D1               	addwf	pollServos@io& (0+255),w,b
 25765   00162A  6ED9               	movwf	fsr2l,c
 25766   00162C  6ADA               	clrf	fsr2h,c
 25767   00162E  0E01               	movlw	high _currentPos
 25768   001630  22DA               	addwfc	fsr2h,f,c
 25769   001632  50DF               	movf	indf2,w,c
 25770   001634  0100               	movlb	0	; () banked
 25771   001636  6FA7               	movwf	writeNVM@value& (0+255),b
 25772   001638  0E00               	movlw	0
 25773   00163A  EC66  F05B         	call	_writeNVM
 25774   00163E  D075               	goto	l20924
 25775   001640                     l20910:
 25776                           
 25777                           ; BSR set to: 0
 25778   001640  0E30               	movlw	low _servoState
 25779   001642  0101               	movlb	1	; () banked
 25780   001644  25D1               	addwf	pollServos@io& (0+255),w,b
 25781   001646  6ED9               	movwf	fsr2l,c
 25782   001648  6ADA               	clrf	fsr2h,c
 25783   00164A  0E01               	movlw	high _servoState
 25784   00164C  22DA               	addwfc	fsr2h,f,c
 25785   00164E  50DF               	movf	indf2,w,c
 25786   001650  6FC6               	movwf	??_pollServos& (0+255),b
 25787   001652  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 25788                           
 25789                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25790                           ; Switch size 1, requested type "simple"
 25791                           ; Number of cases is 1, Range of values is 0 to 0
 25792                           ; switch strategies available:
 25793                           ; Name         Instructions Cycles
 25794                           ; simple_byte            4     3 (average)
 25795                           ;	Chosen strategy is simple_byte
 25796   001654  51C7               	movf	(??_pollServos+1)& (0+255),w,b
 25797   001656  0A00               	xorlw	0	; case 0
 25798   001658  A4D8               	btfss	status,2,c
 25799   00165A  D067               	goto	l20924
 25800                           
 25801                           ; BSR set to: 1
 25802                           ; Switch size 1, requested type "simple"
 25803                           ; Number of cases is 4, Range of values is 0 to 3
 25804                           ; switch strategies available:
 25805                           ; Name         Instructions Cycles
 25806                           ; simple_byte           13     7 (average)
 25807                           ;	Chosen strategy is simple_byte
 25808   00165C  51C6               	movf	??_pollServos& (0+255),w,b
 25809   00165E  0A00               	xorlw	0	; case 0
 25810   001660  B4D8               	btfsc	status,2,c
 25811   001662  D063               	goto	l20924
 25812   001664  0A01               	xorlw	1	; case 1
 25813   001666  B4D8               	btfsc	status,2,c
 25814   001668  D060               	goto	l20924
 25815   00166A  0A03               	xorlw	3	; case 2
 25816   00166C  B4D8               	btfsc	status,2,c
 25817   00166E  D5BF               	goto	l20846
 25818   001670  0A01               	xorlw	1	; case 3
 25819   001672  B4D8               	btfsc	status,2,c
 25820   001674  D500               	goto	l20828
 25821   001676  D059               	goto	l20924
 25822   001678                     l20914:
 25823                           
 25824                           ; BSR set to: 1
 25825   001678  51D1               	movf	pollServos@io& (0+255),w,b
 25826   00167A  0D07               	mullw	7
 25827   00167C  50F3               	movf	243,w,c
 25828   00167E  0F10               	addlw	16
 25829   001680  EC35  F05D         	call	_getNV
 25830                           
 25831                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25832                           ; Switch size 1, requested type "simple"
 25833                           ; Number of cases is 1, Range of values is 0 to 0
 25834                           ; switch strategies available:
 25835                           ; Name         Instructions Cycles
 25836                           ; simple_byte            4     3 (average)
 25837                           ;	Chosen strategy is simple_byte
 25838   001684  0100               	movlb	0	; () banked
 25839   001686  518E               	movf	(?_getNV+1)& (0+255),w,b
 25840   001688  0A00               	xorlw	0	; case 0
 25841   00168A  A4D8               	btfss	status,2,c
 25842   00168C  D04E               	goto	l20924
 25843                           
 25844                           ; BSR set to: 0
 25845                           ; Switch size 1, requested type "simple"
 25846                           ; Number of cases is 3, Range of values is 2 to 4
 25847                           ; switch strategies available:
 25848                           ; Name         Instructions Cycles
 25849                           ; simple_byte           10     6 (average)
 25850                           ;	Chosen strategy is simple_byte
 25851   00168E  518D               	movf	?_getNV& (0+255),w,b
 25852   001690  0A02               	xorlw	2	; case 2
 25853   001692  B4D8               	btfsc	status,2,c
 25854   001694  EF2D  F004         	goto	l20686
 25855   001698  0A01               	xorlw	1	; case 3
 25856   00169A  B4D8               	btfsc	status,2,c
 25857   00169C  D4D0               	goto	l20826
 25858   00169E  0A07               	xorlw	7	; case 4
 25859   0016A0  B4D8               	btfsc	status,2,c
 25860   0016A2  D7CE               	goto	l20910
 25861                           
 25862                           ; BSR set to: 1
 25863                           ;../servo.c: 507:         switch (servoState[io]) {
 25864   0016A4  D042               	goto	l20924
 25865   0016A6                     l20916:
 25866                           
 25867                           ; BSR set to: 1
 25868                           ;../servo.c: 514:                 if (getNV((16 + 7*(io) + 1)) & 0x02) {
 25869   0016A6  51D1               	movf	pollServos@io& (0+255),w,b
 25870   0016A8  0D07               	mullw	7
 25871   0016AA  50F3               	movf	243,w,c
 25872   0016AC  0F11               	addlw	17
 25873   0016AE  EC35  F05D         	call	_getNV
 25874   0016B2  0100               	movlb	0	; () banked
 25875   0016B4  A38D               	btfss	?_getNV& (0+255),1,b
 25876   0016B6  D051               	goto	l20926
 25877                           
 25878                           ; BSR set to: 0
 25879                           ;../servo.c: 515:                     if ((tickGet() - ticksWhenStopped[io].val) > 62500
      +                          ) {
 25880   0016B8  0101               	movlb	1	; () banked
 25881   0016BA  51D1               	movf	pollServos@io& (0+255),w,b
 25882   0016BC  0D04               	mullw	4
 25883   0016BE  0E88               	movlw	low _ticksWhenStopped
 25884   0016C0  24F3               	addwf	243,w,c
 25885   0016C2  6ED9               	movwf	fsr2l,c
 25886   0016C4  0E03               	movlw	high _ticksWhenStopped
 25887   0016C6  20F4               	addwfc	prodh,w,c
 25888   0016C8  6EDA               	movwf	fsr2h,c
 25889   0016CA  CFDE F1C6          	movff	postinc2,??_pollServos
 25890   0016CE  CFDE F1C7          	movff	postinc2,??_pollServos+1
 25891   0016D2  CFDE F1C8          	movff	postinc2,??_pollServos+2
 25892   0016D6  CFDE F1C9          	movff	postinc2,??_pollServos+3
 25893   0016DA  ECC2  F059         	call	_tickGet	;wreg free
 25894   0016DE  0101               	movlb	1	; () banked
 25895   0016E0  51C6               	movf	??_pollServos& (0+255),w,b
 25896   0016E2  0100               	movlb	0	; () banked
 25897   0016E4  5D8D               	subwf	?_tickGet& (0+255),w,b
 25898   0016E6  0101               	movlb	1	; () banked
 25899   0016E8  6FCA               	movwf	(??_pollServos+4)& (0+255),b
 25900   0016EA  51C7               	movf	(??_pollServos+1)& (0+255),w,b
 25901   0016EC  0100               	movlb	0	; () banked
 25902   0016EE  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 25903   0016F0  0101               	movlb	1	; () banked
 25904   0016F2  6FCB               	movwf	(??_pollServos+5)& (0+255),b
 25905   0016F4  51C8               	movf	(??_pollServos+2)& (0+255),w,b
 25906   0016F6  0100               	movlb	0	; () banked
 25907   0016F8  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 25908   0016FA  0101               	movlb	1	; () banked
 25909   0016FC  6FCC               	movwf	(??_pollServos+6)& (0+255),b
 25910   0016FE  51C9               	movf	(??_pollServos+3)& (0+255),w,b
 25911   001700  0100               	movlb	0	; () banked
 25912   001702  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 25913   001704  0101               	movlb	1	; () banked
 25914   001706  6FCD               	movwf	(??_pollServos+7)& (0+255),b
 25915   001708  51CD               	movf	(??_pollServos+7)& (0+255),w,b
 25916   00170A  11CC               	iorwf	(??_pollServos+6)& (0+255),w,b
 25917   00170C  E106               	bnz	u22100
 25918   00170E  0E25               	movlw	37
 25919   001710  5DCA               	subwf	(??_pollServos+4)& (0+255),w,b
 25920   001712  0EF4               	movlw	244
 25921   001714  59CB               	subwfb	(??_pollServos+5)& (0+255),w,b
 25922   001716  A0D8               	btfss	status,0,c
 25923   001718  D020               	goto	l20926
 25924   00171A                     u22100:
 25925                           
 25926                           ; BSR set to: 1
 25927                           ;../servo.c: 516:                         servoState[io] = SS_OFF;
 25928   00171A  0E30               	movlw	low _servoState
 25929   00171C  25D1               	addwf	pollServos@io& (0+255),w,b
 25930   00171E  6ED9               	movwf	fsr2l,c
 25931   001720  6ADA               	clrf	fsr2h,c
 25932   001722  0E01               	movlw	high _servoState
 25933   001724  22DA               	addwfc	fsr2h,f,c
 25934   001726  6ADF               	clrf	indf2,c
 25935   001728  D018               	goto	l20926
 25936   00172A                     l20924:
 25937   00172A  0E30               	movlw	low _servoState
 25938   00172C  0101               	movlb	1	; () banked
 25939   00172E  25D1               	addwf	pollServos@io& (0+255),w,b
 25940   001730  6ED9               	movwf	fsr2l,c
 25941   001732  6ADA               	clrf	fsr2h,c
 25942   001734  0E01               	movlw	high _servoState
 25943   001736  22DA               	addwfc	fsr2h,f,c
 25944   001738  50DF               	movf	indf2,w,c
 25945   00173A  6FC6               	movwf	??_pollServos& (0+255),b
 25946   00173C  6BC7               	clrf	(??_pollServos+1)& (0+255),b
 25947                           
 25948                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25949                           ; Switch size 1, requested type "simple"
 25950                           ; Number of cases is 1, Range of values is 0 to 0
 25951                           ; switch strategies available:
 25952                           ; Name         Instructions Cycles
 25953                           ; simple_byte            4     3 (average)
 25954                           ;	Chosen strategy is simple_byte
 25955   00173E  51C7               	movf	(??_pollServos+1)& (0+255),w,b
 25956   001740  0A00               	xorlw	0	; case 0
 25957   001742  A4D8               	btfss	status,2,c
 25958   001744  D00A               	goto	l20926
 25959                           
 25960                           ; BSR set to: 1
 25961                           ; Switch size 1, requested type "simple"
 25962                           ; Number of cases is 4, Range of values is 0 to 3
 25963                           ; switch strategies available:
 25964                           ; Name         Instructions Cycles
 25965                           ; simple_byte           13     7 (average)
 25966                           ;	Chosen strategy is simple_byte
 25967   001746  51C6               	movf	??_pollServos& (0+255),w,b
 25968   001748  0A00               	xorlw	0	; case 0
 25969   00174A  B4D8               	btfsc	status,2,c
 25970   00174C  D006               	goto	l20926
 25971   00174E  0A01               	xorlw	1	; case 1
 25972   001750  B4D8               	btfsc	status,2,c
 25973   001752  D7A9               	goto	l20916
 25974   001754  0A03               	xorlw	3	; case 2
 25975   001756  A4D8               	btfss	status,2,c
 25976   001758  0A01               	xorlw	1	; case 3
 25977   00175A                     l20926:
 25978                           
 25979                           ;../servo.c: 526:     }
 25980   00175A  0101               	movlb	1	; () banked
 25981   00175C  2BD1               	incf	pollServos@io& (0+255),f,b
 25982                           
 25983                           ; BSR set to: 1
 25984   00175E  0E0F               	movlw	15
 25985   001760  65D1               	cpfsgt	pollServos@io& (0+255),b
 25986   001762  D78A               	goto	l20914
 25987   001764  0012               	return	
 25988   001766                     __end_of_pollServos:
 25989                           	callstack 0
 25990                           
 25991 ;; *************** function _initBounce *****************
 25992 ;; Defined at:
 25993 ;;		line 89 in file "../bounce.c"
 25994 ;; Parameters:    Size  Location     Type
 25995 ;;  io              1    wreg     unsigned char 
 25996 ;; Auto vars:     Size  Location     Type
 25997 ;;  io              1   45[BANK0 ] unsigned char 
 25998 ;; Return value:  Size  Location     Type
 25999 ;;                  1    wreg      void 
 26000 ;; Registers used:
 26001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26002 ;; Tracked objects:
 26003 ;;		On entry : 0/0
 26004 ;;		On exit  : 0/0
 26005 ;;		Unchanged: 0/0
 26006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26008 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26010 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26011 ;;Total ram usage:        1 bytes
 26012 ;; Hardware stack levels used: 1
 26013 ;; Hardware stack levels required when called: 12
 26014 ;; This function calls:
 26015 ;;		Nothing
 26016 ;; This function is called by:
 26017 ;;		_pollServos
 26018 ;; This function uses a non-reentrant model
 26019 ;;
 26020                           
 26021                           	psect	text95
 26022   00BFE8                     __ptext95:
 26023                           	callstack 0
 26024   00BFE8                     _initBounce:
 26025                           	callstack 15
 26026                           
 26027                           ; BSR set to: 1
 26028                           ;incstack = 0
 26029                           ;initBounce@io stored from wreg
 26030   00BFE8  0100               	movlb	0	; () banked
 26031   00BFEA  6F8D               	movwf	initBounce@io& (0+255),b
 26032                           
 26033                           ;../bounce.c: 90:     bounceState[io] = STATE_FIRST_PULL;
 26034   00BFEC  0E24               	movlw	low _bounceState
 26035   00BFEE  0100               	movlb	0	; () banked
 26036   00BFF0  258D               	addwf	initBounce@io& (0+255),w,b
 26037   00BFF2  6ED9               	movwf	fsr2l,c
 26038   00BFF4  6ADA               	clrf	fsr2h,c
 26039   00BFF6  0E02               	movlw	high _bounceState
 26040   00BFF8  22DA               	addwfc	fsr2h,f,c
 26041   00BFFA  6ADF               	clrf	indf2,c
 26042                           
 26043                           ; BSR set to: 0
 26044                           ;../bounce.c: 91:     speed[io] = 0;
 26045   00BFFC  518D               	movf	initBounce@io& (0+255),w,b
 26046   00BFFE  0D02               	mullw	2
 26047   00C000  0E00               	movlw	low _speed
 26048   00C002  24F3               	addwf	243,w,c
 26049   00C004  6ED9               	movwf	fsr2l,c
 26050   00C006  0E01               	movlw	high _speed
 26051   00C008  20F4               	addwfc	prodh,w,c
 26052   00C00A  6EDA               	movwf	fsr2h,c
 26053   00C00C  6ADE               	clrf	postinc2,c
 26054   00C00E  6ADD               	clrf	postdec2,c
 26055                           
 26056                           ; BSR set to: 0
 26057   00C010  0012               	return		;funcret
 26058   00C012                     __end_of_initBounce:
 26059                           	callstack 0
 26060                           
 26061 ;; *************** function _bounceUp *****************
 26062 ;; Defined at:
 26063 ;;		line 161 in file "../bounce.c"
 26064 ;; Parameters:    Size  Location     Type
 26065 ;;  io              1    wreg     unsigned char 
 26066 ;; Auto vars:     Size  Location     Type
 26067 ;;  io              1   71[BANK0 ] unsigned char 
 26068 ;;  midway          1   70[BANK0 ] unsigned char 
 26069 ;;  reversed        1   69[BANK0 ] enum E12700
 26070 ;; Return value:  Size  Location     Type
 26071 ;;                  1    wreg      enum E12700
 26072 ;; Registers used:
 26073 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26074 ;; Tracked objects:
 26075 ;;		On entry : 0/0
 26076 ;;		On exit  : 0/0
 26077 ;;		Unchanged: 0/0
 26078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26080 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26081 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26082 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26083 ;;Total ram usage:        9 bytes
 26084 ;; Hardware stack levels used: 1
 26085 ;; Hardware stack levels required when called: 13
 26086 ;; This function calls:
 26087 ;;		___awdiv
 26088 ;;		_getNV
 26089 ;; This function is called by:
 26090 ;;		_pollServos
 26091 ;; This function uses a non-reentrant model
 26092 ;;
 26093                           
 26094                           	psect	text96
 26095   005B68                     __ptext96:
 26096                           	callstack 0
 26097   005B68                     _bounceUp:
 26098                           	callstack 14
 26099                           
 26100                           ; BSR set to: 0
 26101                           ;incstack = 0
 26102                           ;bounceUp@io stored from wreg
 26103   005B68  0100               	movlb	0	; () banked
 26104   005B6A  6FA7               	movwf	bounceUp@io& (0+255),b
 26105                           
 26106                           ;../bounce.c: 162:     Boolean reversed = ((uint8_t)getNV((16 + 7*(io) + 3)) > (uint8_t)
      +                          getNV((16 + 7*(io) + 2)));
 26107   005B6C  0100               	movlb	0	; () banked
 26108   005B6E  51A7               	movf	bounceUp@io& (0+255),w,b
 26109   005B70  0D07               	mullw	7
 26110   005B72  50F3               	movf	243,w,c
 26111   005B74  0F12               	addlw	18
 26112   005B76  EC35  F05D         	call	_getNV
 26113   005B7A  C08D  F09F         	movff	?_getNV,??_bounceUp
 26114   005B7E  C08E  F0A0         	movff	?_getNV+1,??_bounceUp+1
 26115   005B82  0100               	movlb	0	; () banked
 26116   005B84  51A7               	movf	bounceUp@io& (0+255),w,b
 26117   005B86  0D07               	mullw	7
 26118   005B88  50F3               	movf	243,w,c
 26119   005B8A  0F13               	addlw	19
 26120   005B8C  EC35  F05D         	call	_getNV
 26121   005B90  0100               	movlb	0	; () banked
 26122   005B92  518D               	movf	?_getNV& (0+255),w,b
 26123   005B94  5D9F               	subwf	??_bounceUp& (0+255),w,b
 26124   005B96  B0D8               	btfsc	status,0,c
 26125   005B98  D002               	goto	u20360
 26126   005B9A  0E01               	movlw	1
 26127   005B9C  D001               	goto	u20370
 26128   005B9E                     u20360:
 26129   005B9E  0E00               	movlw	0
 26130   005BA0                     u20370:
 26131   005BA0  6FA5               	movwf	bounceUp@reversed& (0+255),b
 26132                           
 26133                           ;../bounce.c: 163:     uint8_t midway;;../bounce.c: 164:     switch(bounceState[io]) {
 26134   005BA2  D116               	goto	l19876
 26135   005BA4                     l19826:
 26136                           
 26137                           ; BSR set to: 0
 26138                           ;../bounce.c: 167:         midway = ((uint8_t)getNV((16 + 7*(io) + 3)))/2 +
 26139   005BA4  51A7               	movf	bounceUp@io& (0+255),w,b
 26140   005BA6  0D07               	mullw	7
 26141   005BA8  50F3               	movf	243,w,c
 26142   005BAA  0F12               	addlw	18
 26143   005BAC  EC35  F05D         	call	_getNV
 26144   005BB0  0100               	movlb	0	; () banked
 26145   005BB2  518D               	movf	?_getNV& (0+255),w,b
 26146   005BB4  6F97               	movwf	___awdiv@dividend& (0+255),b
 26147   005BB6  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 26148   005BB8  0E00               	movlw	0
 26149   005BBA  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 26150   005BBC  0E02               	movlw	2
 26151   005BBE  6F99               	movwf	___awdiv@divisor& (0+255),b
 26152   005BC0  ECD7  F052         	call	___awdiv	;wreg free
 26153   005BC4  C097  F09F         	movff	?___awdiv,??_bounceUp
 26154   005BC8  C098  F0A0         	movff	?___awdiv+1,??_bounceUp+1
 26155   005BCC  0100               	movlb	0	; () banked
 26156   005BCE  51A7               	movf	bounceUp@io& (0+255),w,b
 26157   005BD0  0D07               	mullw	7
 26158   005BD2  50F3               	movf	243,w,c
 26159   005BD4  0F13               	addlw	19
 26160   005BD6  EC35  F05D         	call	_getNV
 26161   005BDA  0100               	movlb	0	; () banked
 26162   005BDC  518D               	movf	?_getNV& (0+255),w,b
 26163   005BDE  6F97               	movwf	___awdiv@dividend& (0+255),b
 26164   005BE0  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 26165   005BE2  0E00               	movlw	0
 26166   005BE4  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 26167   005BE6  0E02               	movlw	2
 26168   005BE8  6F99               	movwf	___awdiv@divisor& (0+255),b
 26169   005BEA  ECD7  F052         	call	___awdiv	;wreg free
 26170   005BEE  0100               	movlb	0	; () banked
 26171   005BF0  5197               	movf	?___awdiv& (0+255),w,b
 26172   005BF2  259F               	addwf	??_bounceUp& (0+255),w,b
 26173   005BF4  6FA6               	movwf	bounceUp@midway& (0+255),b
 26174                           
 26175                           ; BSR set to: 0
 26176                           ;../bounce.c: 169:         if (reversed) {
 26177   005BF6  51A5               	movf	bounceUp@reversed& (0+255),w,b
 26178   005BF8  B4D8               	btfsc	status,2,c
 26179   005BFA  D028               	goto	l19838
 26180                           
 26181                           ; BSR set to: 0
 26182                           ;../bounce.c: 170:             currentPos[io] -= (uint8_t)getNV((16 + 7*(io) + 5));
 26183   005BFC  51A7               	movf	bounceUp@io& (0+255),w,b
 26184   005BFE  0D07               	mullw	7
 26185   005C00  50F3               	movf	243,w,c
 26186   005C02  0F15               	addlw	21
 26187   005C04  EC35  F05D         	call	_getNV
 26188   005C08  0E40               	movlw	low _currentPos
 26189   005C0A  0100               	movlb	0	; () banked
 26190   005C0C  25A7               	addwf	bounceUp@io& (0+255),w,b
 26191   005C0E  6ED9               	movwf	fsr2l,c
 26192   005C10  6ADA               	clrf	fsr2h,c
 26193   005C12  0E01               	movlw	high _currentPos
 26194   005C14  22DA               	addwfc	fsr2h,f,c
 26195   005C16  518D               	movf	?_getNV& (0+255),w,b
 26196   005C18  5EDF               	subwf	indf2,f,c
 26197                           
 26198                           ; BSR set to: 0
 26199                           ;../bounce.c: 171:             if (currentPos[io] <= midway) {
 26200   005C1A  0E40               	movlw	low _currentPos
 26201   005C1C  25A7               	addwf	bounceUp@io& (0+255),w,b
 26202   005C1E  6ED9               	movwf	fsr2l,c
 26203   005C20  6ADA               	clrf	fsr2h,c
 26204   005C22  0E01               	movlw	high _currentPos
 26205   005C24  22DA               	addwfc	fsr2h,f,c
 26206   005C26  50DE               	movf	postinc2,w,c
 26207   005C28  5DA6               	subwf	bounceUp@midway& (0+255),w,b
 26208   005C2A  A0D8               	btfss	status,0,c
 26209   005C2C  D0E9               	goto	l19878
 26210                           
 26211                           ; BSR set to: 0
 26212                           ;../bounce.c: 172:                 bounceState[io] = STATE_PAUSE;
 26213   005C2E  0E24               	movlw	low _bounceState
 26214   005C30  25A7               	addwf	bounceUp@io& (0+255),w,b
 26215   005C32  6ED9               	movwf	fsr2l,c
 26216   005C34  6ADA               	clrf	fsr2h,c
 26217   005C36  0E02               	movlw	high _bounceState
 26218   005C38  22DA               	addwfc	fsr2h,f,c
 26219   005C3A  0E01               	movlw	1
 26220   005C3C  6EDF               	movwf	indf2,c
 26221                           
 26222                           ; BSR set to: 0
 26223                           ;../bounce.c: 173:                 speed[io] = (uint8_t)getNV((16 + 7*(io) + 6));
 26224   005C3E  51A7               	movf	bounceUp@io& (0+255),w,b
 26225   005C40  0D07               	mullw	7
 26226   005C42  50F3               	movf	243,w,c
 26227   005C44  0F16               	addlw	22
 26228   005C46  EC35  F05D         	call	_getNV
 26229   005C4A  D027               	goto	L7
 26230   005C4C                     l19838:
 26231                           
 26232                           ; BSR set to: 0
 26233                           ;../bounce.c: 176:             currentPos[io] += (uint8_t)getNV((16 + 7*(io) + 5));
 26234   005C4C  51A7               	movf	bounceUp@io& (0+255),w,b
 26235   005C4E  0D07               	mullw	7
 26236   005C50  50F3               	movf	243,w,c
 26237   005C52  0F15               	addlw	21
 26238   005C54  EC35  F05D         	call	_getNV
 26239   005C58  0E40               	movlw	low _currentPos
 26240   005C5A  0100               	movlb	0	; () banked
 26241   005C5C  25A7               	addwf	bounceUp@io& (0+255),w,b
 26242   005C5E  6ED9               	movwf	fsr2l,c
 26243   005C60  6ADA               	clrf	fsr2h,c
 26244   005C62  0E01               	movlw	high _currentPos
 26245   005C64  22DA               	addwfc	fsr2h,f,c
 26246   005C66  518D               	movf	?_getNV& (0+255),w,b
 26247   005C68  26DF               	addwf	indf2,f,c
 26248                           
 26249                           ; BSR set to: 0
 26250                           ;../bounce.c: 177:             if (currentPos[io] >= midway) {
 26251   005C6A  0E40               	movlw	low _currentPos
 26252   005C6C  25A7               	addwf	bounceUp@io& (0+255),w,b
 26253   005C6E  6ED9               	movwf	fsr2l,c
 26254   005C70  6ADA               	clrf	fsr2h,c
 26255   005C72  0E01               	movlw	high _currentPos
 26256   005C74  22DA               	addwfc	fsr2h,f,c
 26257   005C76  51A6               	movf	bounceUp@midway& (0+255),w,b
 26258   005C78  5CDE               	subwf	postinc2,w,c
 26259   005C7A  A0D8               	btfss	status,0,c
 26260   005C7C  D0C1               	goto	l19878
 26261                           
 26262                           ; BSR set to: 0
 26263                           ;../bounce.c: 178:                 bounceState[io] = STATE_PAUSE;
 26264   005C7E  0E24               	movlw	low _bounceState
 26265   005C80  25A7               	addwf	bounceUp@io& (0+255),w,b
 26266   005C82  6ED9               	movwf	fsr2l,c
 26267   005C84  6ADA               	clrf	fsr2h,c
 26268   005C86  0E02               	movlw	high _bounceState
 26269   005C88  22DA               	addwfc	fsr2h,f,c
 26270   005C8A  0E01               	movlw	1
 26271   005C8C  6EDF               	movwf	indf2,c
 26272                           
 26273                           ; BSR set to: 0
 26274                           ;../bounce.c: 179:                 speed[io] = (uint8_t)getNV((16 + 7*(io) + 6));
 26275   005C8E  51A7               	movf	bounceUp@io& (0+255),w,b
 26276   005C90  0D07               	mullw	7
 26277   005C92  50F3               	movf	243,w,c
 26278   005C94  0F16               	addlw	22
 26279   005C96  EC35  F05D         	call	_getNV
 26280   005C9A                     L7:
 26281   005C9A  0100               	movlb	0	; () banked
 26282   005C9C  518D               	movf	?_getNV& (0+255),w,b
 26283   005C9E  6F9F               	movwf	??_bounceUp& (0+255),b
 26284   005CA0  6BA0               	clrf	(??_bounceUp+1)& (0+255),b
 26285   005CA2  51A7               	movf	bounceUp@io& (0+255),w,b
 26286   005CA4  0D02               	mullw	2
 26287   005CA6  0E00               	movlw	low _speed
 26288   005CA8  24F3               	addwf	243,w,c
 26289   005CAA  6ED9               	movwf	fsr2l,c
 26290   005CAC  0E01               	movlw	high _speed
 26291   005CAE  20F4               	addwfc	prodh,w,c
 26292   005CB0  6EDA               	movwf	fsr2h,c
 26293   005CB2  C09F  FFDE         	movff	??_bounceUp,postinc2
 26294   005CB6  C0A0  FFDD         	movff	??_bounceUp+1,postdec2
 26295   005CBA  D0A2               	goto	l19878
 26296   005CBC                     l19846:
 26297                           
 26298                           ; BSR set to: 0
 26299                           ;../bounce.c: 185:         if (speed[io] == 0) bounceState[io] = STATE_SECOND_PULL;
 26300   005CBC  51A7               	movf	bounceUp@io& (0+255),w,b
 26301   005CBE  0D02               	mullw	2
 26302   005CC0  0E00               	movlw	low _speed
 26303   005CC2  24F3               	addwf	243,w,c
 26304   005CC4  6ED9               	movwf	fsr2l,c
 26305   005CC6  0E01               	movlw	high _speed
 26306   005CC8  20F4               	addwfc	prodh,w,c
 26307   005CCA  6EDA               	movwf	fsr2h,c
 26308   005CCC  50DE               	movf	postinc2,w,c
 26309   005CCE  10DE               	iorwf	postinc2,w,c
 26310   005CD0  A4D8               	btfss	status,2,c
 26311   005CD2  D008               	goto	l19850
 26312                           
 26313                           ; BSR set to: 0
 26314   005CD4  0E24               	movlw	low _bounceState
 26315   005CD6  25A7               	addwf	bounceUp@io& (0+255),w,b
 26316   005CD8  6ED9               	movwf	fsr2l,c
 26317   005CDA  6ADA               	clrf	fsr2h,c
 26318   005CDC  0E02               	movlw	high _bounceState
 26319   005CDE  22DA               	addwfc	fsr2h,f,c
 26320   005CE0  0E02               	movlw	2
 26321   005CE2  6EDF               	movwf	indf2,c
 26322   005CE4                     l19850:
 26323                           
 26324                           ; BSR set to: 0
 26325                           ;../bounce.c: 186:         speed[io]--;
 26326   005CE4  51A7               	movf	bounceUp@io& (0+255),w,b
 26327   005CE6  0D02               	mullw	2
 26328   005CE8  0E00               	movlw	low _speed
 26329   005CEA  24F3               	addwf	243,w,c
 26330   005CEC  6ED9               	movwf	fsr2l,c
 26331   005CEE  0E01               	movlw	high _speed
 26332   005CF0  20F4               	addwfc	prodh,w,c
 26333   005CF2  6EDA               	movwf	fsr2h,c
 26334   005CF4  06DE               	decf	postinc2,f,c
 26335   005CF6  0E00               	movlw	0
 26336   005CF8  5ADD               	subwfb	postdec2,f,c
 26337                           
 26338                           ;../bounce.c: 187:         break;
 26339   005CFA  D082               	goto	l19878
 26340   005CFC                     l19852:
 26341                           
 26342                           ; BSR set to: 0
 26343                           ;../bounce.c: 190:         if (reversed) {
 26344   005CFC  51A5               	movf	bounceUp@reversed& (0+255),w,b
 26345   005CFE  B4D8               	btfsc	status,2,c
 26346   005D00  D038               	goto	l19864
 26347                           
 26348                           ; BSR set to: 0
 26349                           ;../bounce.c: 191:             currentPos[io] -= (uint8_t)getNV((16 + 7*(io) + 5));
 26350   005D02  51A7               	movf	bounceUp@io& (0+255),w,b
 26351   005D04  0D07               	mullw	7
 26352   005D06  50F3               	movf	243,w,c
 26353   005D08  0F15               	addlw	21
 26354   005D0A  EC35  F05D         	call	_getNV
 26355   005D0E  0E40               	movlw	low _currentPos
 26356   005D10  0100               	movlb	0	; () banked
 26357   005D12  25A7               	addwf	bounceUp@io& (0+255),w,b
 26358   005D14  6ED9               	movwf	fsr2l,c
 26359   005D16  6ADA               	clrf	fsr2h,c
 26360   005D18  0E01               	movlw	high _currentPos
 26361   005D1A  22DA               	addwfc	fsr2h,f,c
 26362   005D1C  518D               	movf	?_getNV& (0+255),w,b
 26363   005D1E  5EDF               	subwf	indf2,f,c
 26364                           
 26365                           ; BSR set to: 0
 26366                           ;../bounce.c: 192:             if (currentPos[io]<=targetPos[io]-3) {
 26367   005D20  0E40               	movlw	low _currentPos
 26368   005D22  25A7               	addwf	bounceUp@io& (0+255),w,b
 26369   005D24  6ED9               	movwf	fsr2l,c
 26370   005D26  6ADA               	clrf	fsr2h,c
 26371   005D28  0E01               	movlw	high _currentPos
 26372   005D2A  22DA               	addwfc	fsr2h,f,c
 26373   005D2C  50DF               	movf	indf2,w,c
 26374   005D2E  6F9F               	movwf	??_bounceUp& (0+255),b
 26375   005D30  6BA0               	clrf	(??_bounceUp+1)& (0+255),b
 26376   005D32  51A7               	movf	bounceUp@io& (0+255),w,b
 26377   005D34  0F01               	addlw	low _targetPos
 26378   005D36  6ED9               	movwf	fsr2l,c
 26379   005D38  6ADA               	clrf	fsr2h,c
 26380   005D3A  50DF               	movf	indf2,w,c
 26381   005D3C  6FA1               	movwf	(??_bounceUp+2)& (0+255),b
 26382   005D3E  0EFD               	movlw	253
 26383   005D40  25A1               	addwf	(??_bounceUp+2)& (0+255),w,b
 26384   005D42  6FA2               	movwf	(??_bounceUp+3)& (0+255),b
 26385   005D44  6BA3               	clrf	(??_bounceUp+4)& (0+255),b
 26386   005D46  0EFF               	movlw	255
 26387   005D48  23A3               	addwfc	(??_bounceUp+4)& (0+255),f,b
 26388   005D4A  519F               	movf	??_bounceUp& (0+255),w,b
 26389   005D4C  5DA2               	subwf	(??_bounceUp+3)& (0+255),w,b
 26390   005D4E  51A3               	movf	(??_bounceUp+4)& (0+255),w,b
 26391   005D50  0A80               	xorlw	128
 26392   005D52  6FA4               	movwf	(??_bounceUp+5)& (0+255),b
 26393   005D54  51A0               	movf	(??_bounceUp+1)& (0+255),w,b
 26394   005D56  0A80               	xorlw	128
 26395   005D58  59A4               	subwfb	(??_bounceUp+5)& (0+255),w,b
 26396   005D5A  A0D8               	btfss	status,0,c
 26397   005D5C  D051               	goto	l19878
 26398   005D5E                     u20430:
 26399                           
 26400                           ; BSR set to: 0
 26401                           ;../bounce.c: 193:                 bounceState[io] = STATE_DONE;
 26402   005D5E  0E24               	movlw	low _bounceState
 26403   005D60  25A7               	addwf	bounceUp@io& (0+255),w,b
 26404   005D62  6ED9               	movwf	fsr2l,c
 26405   005D64  6ADA               	clrf	fsr2h,c
 26406   005D66  0E02               	movlw	high _bounceState
 26407   005D68  22DA               	addwfc	fsr2h,f,c
 26408   005D6A  0E03               	movlw	3
 26409   005D6C  6EDF               	movwf	indf2,c
 26410                           
 26411                           ; BSR set to: 0
 26412                           ;../bounce.c: 194:                 return TRUE;
 26413   005D6E  0E01               	movlw	1
 26414   005D70  0012               	return	
 26415   005D72                     l19864:
 26416                           
 26417                           ; BSR set to: 0
 26418                           ;../bounce.c: 197:             currentPos[io] += (uint8_t)getNV((16 + 7*(io) + 5));
 26419   005D72  51A7               	movf	bounceUp@io& (0+255),w,b
 26420   005D74  0D07               	mullw	7
 26421   005D76  50F3               	movf	243,w,c
 26422   005D78  0F15               	addlw	21
 26423   005D7A  EC35  F05D         	call	_getNV
 26424   005D7E  0E40               	movlw	low _currentPos
 26425   005D80  0100               	movlb	0	; () banked
 26426   005D82  25A7               	addwf	bounceUp@io& (0+255),w,b
 26427   005D84  6ED9               	movwf	fsr2l,c
 26428   005D86  6ADA               	clrf	fsr2h,c
 26429   005D88  0E01               	movlw	high _currentPos
 26430   005D8A  22DA               	addwfc	fsr2h,f,c
 26431   005D8C  518D               	movf	?_getNV& (0+255),w,b
 26432   005D8E  26DF               	addwf	indf2,f,c
 26433                           
 26434                           ; BSR set to: 0
 26435                           ;../bounce.c: 198:             if (currentPos[io]>=targetPos[io]-3) {
 26436   005D90  51A7               	movf	bounceUp@io& (0+255),w,b
 26437   005D92  0F01               	addlw	low _targetPos
 26438   005D94  6ED9               	movwf	fsr2l,c
 26439   005D96  6ADA               	clrf	fsr2h,c
 26440   005D98  50DF               	movf	indf2,w,c
 26441   005D9A  6F9F               	movwf	??_bounceUp& (0+255),b
 26442   005D9C  0EFD               	movlw	253
 26443   005D9E  259F               	addwf	??_bounceUp& (0+255),w,b
 26444   005DA0  6FA0               	movwf	(??_bounceUp+1)& (0+255),b
 26445   005DA2  6BA1               	clrf	(??_bounceUp+2)& (0+255),b
 26446   005DA4  0EFF               	movlw	255
 26447   005DA6  23A1               	addwfc	(??_bounceUp+2)& (0+255),f,b
 26448   005DA8  0E40               	movlw	low _currentPos
 26449   005DAA  25A7               	addwf	bounceUp@io& (0+255),w,b
 26450   005DAC  6ED9               	movwf	fsr2l,c
 26451   005DAE  6ADA               	clrf	fsr2h,c
 26452   005DB0  0E01               	movlw	high _currentPos
 26453   005DB2  22DA               	addwfc	fsr2h,f,c
 26454   005DB4  50DF               	movf	indf2,w,c
 26455   005DB6  6FA2               	movwf	(??_bounceUp+3)& (0+255),b
 26456   005DB8  6BA3               	clrf	(??_bounceUp+4)& (0+255),b
 26457   005DBA  51A0               	movf	(??_bounceUp+1)& (0+255),w,b
 26458   005DBC  5DA2               	subwf	(??_bounceUp+3)& (0+255),w,b
 26459   005DBE  51A3               	movf	(??_bounceUp+4)& (0+255),w,b
 26460   005DC0  0A80               	xorlw	128
 26461   005DC2  6FA4               	movwf	(??_bounceUp+5)& (0+255),b
 26462   005DC4  51A1               	movf	(??_bounceUp+2)& (0+255),w,b
 26463   005DC6  0A80               	xorlw	128
 26464   005DC8  59A4               	subwfb	(??_bounceUp+5)& (0+255),w,b
 26465   005DCA  B0D8               	btfsc	status,0,c
 26466   005DCC  D7C8               	goto	u20430
 26467   005DCE  D018               	goto	l19878
 26468   005DD0                     l19876:
 26469                           
 26470                           ; BSR set to: 0
 26471   005DD0  0E24               	movlw	low _bounceState
 26472   005DD2  25A7               	addwf	bounceUp@io& (0+255),w,b
 26473   005DD4  6ED9               	movwf	fsr2l,c
 26474   005DD6  6ADA               	clrf	fsr2h,c
 26475   005DD8  0E02               	movlw	high _bounceState
 26476   005DDA  22DA               	addwfc	fsr2h,f,c
 26477   005DDC  50DF               	movf	indf2,w,c
 26478   005DDE  6F9F               	movwf	??_bounceUp& (0+255),b
 26479   005DE0  6BA0               	clrf	(??_bounceUp+1)& (0+255),b
 26480                           
 26481                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26482                           ; Switch size 1, requested type "simple"
 26483                           ; Number of cases is 1, Range of values is 0 to 0
 26484                           ; switch strategies available:
 26485                           ; Name         Instructions Cycles
 26486                           ; simple_byte            4     3 (average)
 26487                           ;	Chosen strategy is simple_byte
 26488   005DE2  51A0               	movf	(??_bounceUp+1)& (0+255),w,b
 26489   005DE4  0A00               	xorlw	0	; case 0
 26490   005DE6  A4D8               	btfss	status,2,c
 26491   005DE8  D00B               	goto	l19878
 26492                           
 26493                           ; BSR set to: 0
 26494                           ; Switch size 1, requested type "simple"
 26495                           ; Number of cases is 4, Range of values is 0 to 3
 26496                           ; switch strategies available:
 26497                           ; Name         Instructions Cycles
 26498                           ; simple_byte           13     7 (average)
 26499                           ;	Chosen strategy is simple_byte
 26500   005DEA  519F               	movf	??_bounceUp& (0+255),w,b
 26501   005DEC  0A00               	xorlw	0	; case 0
 26502   005DEE  B4D8               	btfsc	status,2,c
 26503   005DF0  D6D9               	goto	l19826
 26504   005DF2  0A01               	xorlw	1	; case 1
 26505   005DF4  B4D8               	btfsc	status,2,c
 26506   005DF6  D762               	goto	l19846
 26507   005DF8  0A03               	xorlw	3	; case 2
 26508   005DFA  B4D8               	btfsc	status,2,c
 26509   005DFC  D77F               	goto	l19852
 26510   005DFE  0A01               	xorlw	1	; case 3
 26511   005E00                     l19878:
 26512                           
 26513                           ; BSR set to: 0
 26514                           ;../bounce.c: 207:     return FALSE;
 26515   005E00  0E00               	movlw	0
 26516                           
 26517                           ; BSR set to: 0
 26518   005E02  0012               	return		;funcret
 26519   005E04                     __end_of_bounceUp:
 26520                           	callstack 0
 26521                           
 26522 ;; *************** function _bounceDown *****************
 26523 ;; Defined at:
 26524 ;;		line 103 in file "../bounce.c"
 26525 ;; Parameters:    Size  Location     Type
 26526 ;;  io              1    wreg     unsigned char 
 26527 ;; Auto vars:     Size  Location     Type
 26528 ;;  io              1    3[BANK1 ] unsigned char 
 26529 ;;  tmp             2    1[BANK1 ] int 
 26530 ;;  reversed        1    0[BANK1 ] enum E12700
 26531 ;; Return value:  Size  Location     Type
 26532 ;;                  1    wreg      enum E12700
 26533 ;; Registers used:
 26534 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26535 ;; Tracked objects:
 26536 ;;		On entry : 0/0
 26537 ;;		On exit  : 0/0
 26538 ;;		Unchanged: 0/0
 26539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26541 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26542 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26543 ;;      Totals:         0       7       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26544 ;;Total ram usage:       11 bytes
 26545 ;; Hardware stack levels used: 1
 26546 ;; Hardware stack levels required when called: 13
 26547 ;; This function calls:
 26548 ;;		___awdiv
 26549 ;;		___wmul
 26550 ;;		_getNV
 26551 ;; This function is called by:
 26552 ;;		_pollServos
 26553 ;; This function uses a non-reentrant model
 26554 ;;
 26555                           
 26556                           	psect	text97
 26557   0028D8                     __ptext97:
 26558                           	callstack 0
 26559   0028D8                     _bounceDown:
 26560                           	callstack 14
 26561                           
 26562                           ; BSR set to: 0
 26563                           ;incstack = 0
 26564                           ;bounceDown@io stored from wreg
 26565   0028D8  0101               	movlb	1	; () banked
 26566   0028DA  6FB8               	movwf	bounceDown@io& (0+255),b
 26567                           
 26568                           ;../bounce.c: 105:     if ((currentPos[io]>targetPos[io]+3) || (currentPos[io]<targetPos
      +                          [io]-3) || (speed[io]>3) || (speed[io]<-3)) {
 26569   0028DC  0E40               	movlw	low _currentPos
 26570   0028DE  0101               	movlb	1	; () banked
 26571   0028E0  25B8               	addwf	bounceDown@io& (0+255),w,b
 26572   0028E2  6ED9               	movwf	fsr2l,c
 26573   0028E4  6ADA               	clrf	fsr2h,c
 26574   0028E6  0E01               	movlw	high _currentPos
 26575   0028E8  22DA               	addwfc	fsr2h,f,c
 26576   0028EA  50DF               	movf	indf2,w,c
 26577   0028EC  0100               	movlb	0	; () banked
 26578   0028EE  6F9F               	movwf	??_bounceDown& (0+255),b
 26579   0028F0  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 26580   0028F2  0101               	movlb	1	; () banked
 26581   0028F4  51B8               	movf	bounceDown@io& (0+255),w,b
 26582   0028F6  0F01               	addlw	low _targetPos
 26583   0028F8  6ED9               	movwf	fsr2l,c
 26584   0028FA  6ADA               	clrf	fsr2h,c
 26585   0028FC  50DF               	movf	indf2,w,c
 26586   0028FE  0100               	movlb	0	; () banked
 26587   002900  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 26588   002902  6BA2               	clrf	(??_bounceDown+3)& (0+255),b
 26589   002904  0E03               	movlw	3
 26590   002906  27A1               	addwf	(??_bounceDown+2)& (0+255),f,b
 26591   002908  0E00               	movlw	0
 26592   00290A  23A2               	addwfc	(??_bounceDown+3)& (0+255),f,b
 26593   00290C  519F               	movf	??_bounceDown& (0+255),w,b
 26594   00290E  5DA1               	subwf	(??_bounceDown+2)& (0+255),w,b
 26595   002910  51A2               	movf	(??_bounceDown+3)& (0+255),w,b
 26596   002912  0A80               	xorlw	128
 26597   002914  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 26598   002916  51A0               	movf	(??_bounceDown+1)& (0+255),w,b
 26599   002918  0A80               	xorlw	128
 26600   00291A  59A3               	subwfb	(??_bounceDown+4)& (0+255),w,b
 26601   00291C  A0D8               	btfss	status,0,c
 26602   00291E  D047               	goto	u20480
 26603                           
 26604                           ; BSR set to: 0
 26605   002920  0101               	movlb	1	; () banked
 26606   002922  51B8               	movf	bounceDown@io& (0+255),w,b
 26607   002924  0F01               	addlw	low _targetPos
 26608   002926  6ED9               	movwf	fsr2l,c
 26609   002928  6ADA               	clrf	fsr2h,c
 26610   00292A  50DF               	movf	indf2,w,c
 26611   00292C  0100               	movlb	0	; () banked
 26612   00292E  6F9F               	movwf	??_bounceDown& (0+255),b
 26613   002930  0EFD               	movlw	253
 26614   002932  259F               	addwf	??_bounceDown& (0+255),w,b
 26615   002934  6FA0               	movwf	(??_bounceDown+1)& (0+255),b
 26616   002936  6BA1               	clrf	(??_bounceDown+2)& (0+255),b
 26617   002938  0EFF               	movlw	255
 26618   00293A  23A1               	addwfc	(??_bounceDown+2)& (0+255),f,b
 26619   00293C  0E40               	movlw	low _currentPos
 26620   00293E  0101               	movlb	1	; () banked
 26621   002940  25B8               	addwf	bounceDown@io& (0+255),w,b
 26622   002942  6ED9               	movwf	fsr2l,c
 26623   002944  6ADA               	clrf	fsr2h,c
 26624   002946  0E01               	movlw	high _currentPos
 26625   002948  22DA               	addwfc	fsr2h,f,c
 26626   00294A  50DF               	movf	indf2,w,c
 26627   00294C  0100               	movlb	0	; () banked
 26628   00294E  6FA2               	movwf	(??_bounceDown+3)& (0+255),b
 26629   002950  6BA3               	clrf	(??_bounceDown+4)& (0+255),b
 26630   002952  51A0               	movf	(??_bounceDown+1)& (0+255),w,b
 26631   002954  5DA2               	subwf	(??_bounceDown+3)& (0+255),w,b
 26632   002956  51A3               	movf	(??_bounceDown+4)& (0+255),w,b
 26633   002958  0A80               	xorlw	128
 26634   00295A  6FA4               	movwf	(??_bounceDown+5)& (0+255),b
 26635   00295C  51A1               	movf	(??_bounceDown+2)& (0+255),w,b
 26636   00295E  0A80               	xorlw	128
 26637   002960  59A4               	subwfb	(??_bounceDown+5)& (0+255),w,b
 26638   002962  A0D8               	btfss	status,0,c
 26639   002964  D024               	goto	u20480
 26640                           
 26641                           ; BSR set to: 0
 26642   002966  0101               	movlb	1	; () banked
 26643   002968  51B8               	movf	bounceDown@io& (0+255),w,b
 26644   00296A  0D02               	mullw	2
 26645   00296C  0E00               	movlw	low _speed
 26646   00296E  24F3               	addwf	243,w,c
 26647   002970  6ED9               	movwf	fsr2l,c
 26648   002972  0E01               	movlw	high _speed
 26649   002974  20F4               	addwfc	prodh,w,c
 26650   002976  6EDA               	movwf	fsr2h,c
 26651   002978  0E01               	movlw	1
 26652   00297A  BEDB               	btfsc	plusw2,7,c
 26653   00297C  D007               	goto	u20470
 26654   00297E  0E01               	movlw	1
 26655   002980  50DB               	movf	plusw2,w,c
 26656   002982  E115               	bnz	l19894
 26657   002984  0E04               	movlw	4
 26658   002986  5CDE               	subwf	postinc2,w,c
 26659   002988  B0D8               	btfsc	status,0,c
 26660   00298A  D011               	goto	u20480
 26661   00298C                     u20470:
 26662                           
 26663                           ; BSR set to: 1
 26664   00298C  51B8               	movf	bounceDown@io& (0+255),w,b
 26665   00298E  0D02               	mullw	2
 26666   002990  0E00               	movlw	low _speed
 26667   002992  24F3               	addwf	243,w,c
 26668   002994  6ED9               	movwf	fsr2l,c
 26669   002996  0E01               	movlw	high _speed
 26670   002998  20F4               	addwfc	prodh,w,c
 26671   00299A  6EDA               	movwf	fsr2h,c
 26672   00299C  0E01               	movlw	1
 26673   00299E  AEDB               	btfss	plusw2,7,c
 26674   0029A0  D201               	goto	l19922
 26675   0029A2  0EFD               	movlw	253
 26676   0029A4  5CDE               	subwf	postinc2,w,c
 26677   0029A6  0EFF               	movlw	255
 26678   0029A8  58DE               	subwfb	postinc2,w,c
 26679   0029AA  B0D8               	btfsc	status,0,c
 26680   0029AC  D1FB               	goto	l19922
 26681   0029AE                     u20480:
 26682   0029AE                     l19894:
 26683                           
 26684                           ;../bounce.c: 106:         Boolean reversed = ((uint8_t)getNV((16 + 7*(io) + 3)) > (uint
      +                          8_t)getNV((16 + 7*(io) + 2)));
 26685   0029AE  0101               	movlb	1	; () banked
 26686   0029B0  51B8               	movf	bounceDown@io& (0+255),w,b
 26687   0029B2  0D07               	mullw	7
 26688   0029B4  50F3               	movf	243,w,c
 26689   0029B6  0F12               	addlw	18
 26690   0029B8  EC35  F05D         	call	_getNV
 26691   0029BC  C08D  F09F         	movff	?_getNV,??_bounceDown
 26692   0029C0  C08E  F0A0         	movff	?_getNV+1,??_bounceDown+1
 26693   0029C4  0101               	movlb	1	; () banked
 26694   0029C6  51B8               	movf	bounceDown@io& (0+255),w,b
 26695   0029C8  0D07               	mullw	7
 26696   0029CA  50F3               	movf	243,w,c
 26697   0029CC  0F13               	addlw	19
 26698   0029CE  EC35  F05D         	call	_getNV
 26699   0029D2  0100               	movlb	0	; () banked
 26700   0029D4  518D               	movf	?_getNV& (0+255),w,b
 26701   0029D6  5D9F               	subwf	??_bounceDown& (0+255),w,b
 26702   0029D8  B0D8               	btfsc	status,0,c
 26703   0029DA  D002               	goto	u20490
 26704   0029DC  0E01               	movlw	1
 26705   0029DE  D001               	goto	u20500
 26706   0029E0                     u20490:
 26707   0029E0  0E00               	movlw	0
 26708   0029E2                     u20500:
 26709   0029E2  0101               	movlb	1	; () banked
 26710   0029E4  6FB5               	movwf	bounceDown@reversed& (0+255),b
 26711                           
 26712                           ; BSR set to: 1
 26713                           ;../bounce.c: 107:         int tmp;;../bounce.c: 109:         if (! reversed) {
 26714   0029E6  51B5               	movf	bounceDown@reversed& (0+255),w,b
 26715   0029E8  A4D8               	btfss	status,2,c
 26716   0029EA  D0F0               	goto	l19908
 26717                           
 26718                           ; BSR set to: 1
 26719                           ;../bounce.c: 112:             if (currentPos[io] < (uint8_t)getNV((16 + 7*(io) + 3)) + 
      +                          speed[io]/30) {
 26720   0029EC  51B8               	movf	bounceDown@io& (0+255),w,b
 26721   0029EE  0D02               	mullw	2
 26722   0029F0  0E00               	movlw	low _speed
 26723   0029F2  24F3               	addwf	243,w,c
 26724   0029F4  6ED9               	movwf	fsr2l,c
 26725   0029F6  0E01               	movlw	high _speed
 26726   0029F8  20F4               	addwfc	prodh,w,c
 26727   0029FA  6EDA               	movwf	fsr2h,c
 26728   0029FC  CFDE F097          	movff	postinc2,___awdiv@dividend
 26729   002A00  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 26730   002A04  0E00               	movlw	0
 26731   002A06  0100               	movlb	0	; () banked
 26732   002A08  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 26733   002A0A  0E1E               	movlw	30
 26734   002A0C  6F99               	movwf	___awdiv@divisor& (0+255),b
 26735   002A0E  ECD7  F052         	call	___awdiv	;wreg free
 26736   002A12  C097  F09F         	movff	?___awdiv,??_bounceDown
 26737   002A16  C098  F0A0         	movff	?___awdiv+1,??_bounceDown+1
 26738   002A1A  0101               	movlb	1	; () banked
 26739   002A1C  51B8               	movf	bounceDown@io& (0+255),w,b
 26740   002A1E  0D07               	mullw	7
 26741   002A20  50F3               	movf	243,w,c
 26742   002A22  0F13               	addlw	19
 26743   002A24  EC35  F05D         	call	_getNV
 26744   002A28  0100               	movlb	0	; () banked
 26745   002A2A  518D               	movf	?_getNV& (0+255),w,b
 26746   002A2C  259F               	addwf	??_bounceDown& (0+255),w,b
 26747   002A2E  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 26748   002A30  0E00               	movlw	0
 26749   002A32  21A0               	addwfc	(??_bounceDown+1)& (0+255),w,b
 26750   002A34  6FA2               	movwf	(??_bounceDown+3)& (0+255),b
 26751   002A36  0E40               	movlw	low _currentPos
 26752   002A38  0101               	movlb	1	; () banked
 26753   002A3A  25B8               	addwf	bounceDown@io& (0+255),w,b
 26754   002A3C  6ED9               	movwf	fsr2l,c
 26755   002A3E  6ADA               	clrf	fsr2h,c
 26756   002A40  0E01               	movlw	high _currentPos
 26757   002A42  22DA               	addwfc	fsr2h,f,c
 26758   002A44  50DF               	movf	indf2,w,c
 26759   002A46  0100               	movlb	0	; () banked
 26760   002A48  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 26761   002A4A  6BA4               	clrf	(??_bounceDown+5)& (0+255),b
 26762   002A4C  51A1               	movf	(??_bounceDown+2)& (0+255),w,b
 26763   002A4E  5DA3               	subwf	(??_bounceDown+4)& (0+255),w,b
 26764   002A50  51A4               	movf	(??_bounceDown+5)& (0+255),w,b
 26765   002A52  0A80               	xorlw	128
 26766   002A54  6FA5               	movwf	(??_bounceDown+6)& (0+255),b
 26767   002A56  51A2               	movf	(??_bounceDown+3)& (0+255),w,b
 26768   002A58  0A80               	xorlw	128
 26769   002A5A  59A5               	subwfb	(??_bounceDown+6)& (0+255),w,b
 26770   002A5C  B0D8               	btfsc	status,0,c
 26771   002A5E  D088               	goto	l19904
 26772                           
 26773                           ; BSR set to: 0
 26774                           ;../bounce.c: 115:                 speed[io] = (-speed[io]*getNV((16 + 7*(io) + 4)))/100
      +                          ;
 26775   002A60  0101               	movlb	1	; () banked
 26776   002A62  51B8               	movf	bounceDown@io& (0+255),w,b
 26777   002A64  0D07               	mullw	7
 26778   002A66  50F3               	movf	243,w,c
 26779   002A68  0F14               	addlw	20
 26780   002A6A  EC35  F05D         	call	_getNV
 26781   002A6E  C08D  F091         	movff	?_getNV,___wmul@multiplier
 26782   002A72  C08E  F092         	movff	?_getNV+1,___wmul@multiplier+1
 26783   002A76  0101               	movlb	1	; () banked
 26784   002A78  51B8               	movf	bounceDown@io& (0+255),w,b
 26785   002A7A  0D02               	mullw	2
 26786   002A7C  0E00               	movlw	low _speed
 26787   002A7E  24F3               	addwf	243,w,c
 26788   002A80  6ED9               	movwf	fsr2l,c
 26789   002A82  0E01               	movlw	high _speed
 26790   002A84  20F4               	addwfc	prodh,w,c
 26791   002A86  6EDA               	movwf	fsr2h,c
 26792   002A88  CFDE F09F          	movff	postinc2,??_bounceDown
 26793   002A8C  CFDD F0A0          	movff	postdec2,??_bounceDown+1
 26794   002A90  0100               	movlb	0	; () banked
 26795   002A92  1F9F               	comf	??_bounceDown& (0+255),f,b
 26796   002A94  1FA0               	comf	(??_bounceDown+1)& (0+255),f,b
 26797   002A96  4B9F               	infsnz	??_bounceDown& (0+255),f,b
 26798   002A98  2BA0               	incf	(??_bounceDown+1)& (0+255),f,b
 26799   002A9A  C09F  F093         	movff	??_bounceDown,___wmul@multiplicand
 26800   002A9E  C0A0  F094         	movff	??_bounceDown+1,___wmul@multiplicand+1
 26801   002AA2  EC1D  F060         	call	___wmul	;wreg free
 26802   002AA6  C091  F097         	movff	?___wmul,___awdiv@dividend
 26803   002AAA  C092  F098         	movff	?___wmul+1,___awdiv@dividend+1
 26804   002AAE  0E00               	movlw	0
 26805   002AB0  0100               	movlb	0	; () banked
 26806   002AB2  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 26807   002AB4  0E64               	movlw	100
 26808   002AB6  6F99               	movwf	___awdiv@divisor& (0+255),b
 26809   002AB8  ECD7  F052         	call	___awdiv	;wreg free
 26810   002ABC  0101               	movlb	1	; () banked
 26811   002ABE  51B8               	movf	bounceDown@io& (0+255),w,b
 26812   002AC0  0D02               	mullw	2
 26813   002AC2  0E00               	movlw	low _speed
 26814   002AC4  24F3               	addwf	243,w,c
 26815   002AC6  6ED9               	movwf	fsr2l,c
 26816   002AC8  0E01               	movlw	high _speed
 26817   002ACA  20F4               	addwfc	prodh,w,c
 26818   002ACC  6EDA               	movwf	fsr2h,c
 26819   002ACE  0100               	movlb	0	; () banked
 26820   002AD0  C097  FFDE         	movff	?___awdiv,postinc2
 26821   002AD4  C098  FFDD         	movff	?___awdiv+1,postdec2
 26822                           
 26823                           ;../bounce.c: 117:                 tmp = (uint8_t)getNV((16 + 7*(io) + 3)) -
 26824   002AD8  0101               	movlb	1	; () banked
 26825   002ADA  51B8               	movf	bounceDown@io& (0+255),w,b
 26826   002ADC  0D07               	mullw	7
 26827   002ADE  50F3               	movf	243,w,c
 26828   002AE0  0F13               	addlw	19
 26829   002AE2  EC35  F05D         	call	_getNV
 26830   002AE6  0100               	movlb	0	; () banked
 26831   002AE8  518D               	movf	?_getNV& (0+255),w,b
 26832   002AEA  6F9F               	movwf	??_bounceDown& (0+255),b
 26833   002AEC  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 26834   002AEE  0101               	movlb	1	; () banked
 26835   002AF0  51B8               	movf	bounceDown@io& (0+255),w,b
 26836   002AF2  0D07               	mullw	7
 26837   002AF4  50F3               	movf	243,w,c
 26838   002AF6  0F13               	addlw	19
 26839   002AF8  EC35  F05D         	call	_getNV
 26840   002AFC  0100               	movlb	0	; () banked
 26841   002AFE  518D               	movf	?_getNV& (0+255),w,b
 26842   002B00  279F               	addwf	??_bounceDown& (0+255),f,b
 26843   002B02  0E00               	movlw	0
 26844   002B04  23A0               	addwfc	(??_bounceDown+1)& (0+255),f,b
 26845   002B06  0E40               	movlw	low _currentPos
 26846   002B08  0101               	movlb	1	; () banked
 26847   002B0A  25B8               	addwf	bounceDown@io& (0+255),w,b
 26848   002B0C  6ED9               	movwf	fsr2l,c
 26849   002B0E  6ADA               	clrf	fsr2h,c
 26850   002B10  0E01               	movlw	high _currentPos
 26851   002B12  22DA               	addwfc	fsr2h,f,c
 26852   002B14  50DF               	movf	indf2,w,c
 26853   002B16  0100               	movlb	0	; () banked
 26854   002B18  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 26855   002B1A  51A1               	movf	(??_bounceDown+2)& (0+255),w,b
 26856   002B1C  5F9F               	subwf	??_bounceDown& (0+255),f,b
 26857   002B1E  0E00               	movlw	0
 26858   002B20  5BA0               	subwfb	(??_bounceDown+1)& (0+255),f,b
 26859   002B22  0101               	movlb	1	; () banked
 26860   002B24  51B8               	movf	bounceDown@io& (0+255),w,b
 26861   002B26  0D02               	mullw	2
 26862   002B28  0E00               	movlw	low _speed
 26863   002B2A  24F3               	addwf	243,w,c
 26864   002B2C  6ED9               	movwf	fsr2l,c
 26865   002B2E  0E01               	movlw	high _speed
 26866   002B30  20F4               	addwfc	prodh,w,c
 26867   002B32  6EDA               	movwf	fsr2h,c
 26868   002B34  CFDE F097          	movff	postinc2,___awdiv@dividend
 26869   002B38  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 26870   002B3C  0E00               	movlw	0
 26871   002B3E  0100               	movlb	0	; () banked
 26872   002B40  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 26873   002B42  0E1E               	movlw	30
 26874   002B44  6F99               	movwf	___awdiv@divisor& (0+255),b
 26875   002B46  ECD7  F052         	call	___awdiv	;wreg free
 26876   002B4A  0100               	movlb	0	; () banked
 26877   002B4C  5197               	movf	?___awdiv& (0+255),w,b
 26878   002B4E  5D9F               	subwf	??_bounceDown& (0+255),w,b
 26879   002B50  0101               	movlb	1	; () banked
 26880   002B52  6FB6               	movwf	bounceDown@tmp& (0+255),b
 26881   002B54  0100               	movlb	0	; () banked
 26882   002B56  5198               	movf	(?___awdiv+1)& (0+255),w,b
 26883   002B58  59A0               	subwfb	(??_bounceDown+1)& (0+255),w,b
 26884   002B5A  0101               	movlb	1	; () banked
 26885   002B5C  6FB7               	movwf	(bounceDown@tmp+1)& (0+255),b
 26886                           
 26887                           ; BSR set to: 1
 26888                           ;../bounce.c: 120:                 currentPos[io] = (uint8_t)tmp;
 26889   002B5E  0E40               	movlw	low _currentPos
 26890   002B60  25B8               	addwf	bounceDown@io& (0+255),w,b
 26891   002B62  6ED9               	movwf	fsr2l,c
 26892   002B64  6ADA               	clrf	fsr2h,c
 26893   002B66  0E01               	movlw	high _currentPos
 26894   002B68  22DA               	addwfc	fsr2h,f,c
 26895   002B6A  C1B6  FFDF         	movff	bounceDown@tmp,indf2
 26896                           
 26897                           ;../bounce.c: 121:             } else {
 26898   002B6E  D118               	goto	l19918
 26899   002B70                     l19904:
 26900                           
 26901                           ; BSR set to: 0
 26902                           ;../bounce.c: 124:                 speed[io] += 3;
 26903   002B70  0101               	movlb	1	; () banked
 26904   002B72  51B8               	movf	bounceDown@io& (0+255),w,b
 26905   002B74  0D02               	mullw	2
 26906   002B76  0E00               	movlw	low _speed
 26907   002B78  24F3               	addwf	243,w,c
 26908   002B7A  6ED9               	movwf	fsr2l,c
 26909   002B7C  0E01               	movlw	high _speed
 26910   002B7E  20F4               	addwfc	prodh,w,c
 26911   002B80  6EDA               	movwf	fsr2h,c
 26912   002B82  0E03               	movlw	3
 26913   002B84  26DE               	addwf	postinc2,f,c
 26914   002B86  0E00               	movlw	0
 26915   002B88  22DD               	addwfc	postdec2,f,c
 26916                           
 26917                           ; BSR set to: 1
 26918                           ;../bounce.c: 125:                 currentPos[io] -= ((speed[io]/30)+1);
 26919   002B8A  51B8               	movf	bounceDown@io& (0+255),w,b
 26920   002B8C  0D02               	mullw	2
 26921   002B8E  0E00               	movlw	low _speed
 26922   002B90  24F3               	addwf	243,w,c
 26923   002B92  6ED9               	movwf	fsr2l,c
 26924   002B94  0E01               	movlw	high _speed
 26925   002B96  20F4               	addwfc	prodh,w,c
 26926   002B98  6EDA               	movwf	fsr2h,c
 26927   002B9A  CFDE F097          	movff	postinc2,___awdiv@dividend
 26928   002B9E  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 26929   002BA2  0E00               	movlw	0
 26930   002BA4  0100               	movlb	0	; () banked
 26931   002BA6  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 26932   002BA8  0E1E               	movlw	30
 26933   002BAA  6F99               	movwf	___awdiv@divisor& (0+255),b
 26934   002BAC  ECD7  F052         	call	___awdiv	;wreg free
 26935   002BB0  0E01               	movlw	1
 26936   002BB2  0100               	movlb	0	; () banked
 26937   002BB4  2797               	addwf	?___awdiv& (0+255),f,b
 26938   002BB6  0E40               	movlw	low _currentPos
 26939   002BB8  0101               	movlb	1	; () banked
 26940   002BBA  25B8               	addwf	bounceDown@io& (0+255),w,b
 26941   002BBC  6ED9               	movwf	fsr2l,c
 26942   002BBE  6ADA               	clrf	fsr2h,c
 26943   002BC0  0E01               	movlw	high _currentPos
 26944   002BC2  22DA               	addwfc	fsr2h,f,c
 26945   002BC4  0100               	movlb	0	; () banked
 26946   002BC6  5197               	movf	?___awdiv& (0+255),w,b
 26947   002BC8  5EDF               	subwf	indf2,f,c
 26948   002BCA  D0EA               	goto	l19918
 26949   002BCC                     l19908:
 26950                           
 26951                           ; BSR set to: 1
 26952                           ;../bounce.c: 130:             if (currentPos[io] > (uint8_t)getNV((16 + 7*(io) + 3)) - 
      +                          speed[io]/30) {
 26953   002BCC  0E40               	movlw	low _currentPos
 26954   002BCE  25B8               	addwf	bounceDown@io& (0+255),w,b
 26955   002BD0  6ED9               	movwf	fsr2l,c
 26956   002BD2  6ADA               	clrf	fsr2h,c
 26957   002BD4  0E01               	movlw	high _currentPos
 26958   002BD6  22DA               	addwfc	fsr2h,f,c
 26959   002BD8  50DF               	movf	indf2,w,c
 26960   002BDA  0100               	movlb	0	; () banked
 26961   002BDC  6F9F               	movwf	??_bounceDown& (0+255),b
 26962   002BDE  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 26963   002BE0  0101               	movlb	1	; () banked
 26964   002BE2  51B8               	movf	bounceDown@io& (0+255),w,b
 26965   002BE4  0D07               	mullw	7
 26966   002BE6  50F3               	movf	243,w,c
 26967   002BE8  0F13               	addlw	19
 26968   002BEA  EC35  F05D         	call	_getNV
 26969   002BEE  C08D  F0A1         	movff	?_getNV,??_bounceDown+2
 26970   002BF2  C08E  F0A2         	movff	?_getNV+1,??_bounceDown+3
 26971   002BF6  0101               	movlb	1	; () banked
 26972   002BF8  51B8               	movf	bounceDown@io& (0+255),w,b
 26973   002BFA  0D02               	mullw	2
 26974   002BFC  0E00               	movlw	low _speed
 26975   002BFE  24F3               	addwf	243,w,c
 26976   002C00  6ED9               	movwf	fsr2l,c
 26977   002C02  0E01               	movlw	high _speed
 26978   002C04  20F4               	addwfc	prodh,w,c
 26979   002C06  6EDA               	movwf	fsr2h,c
 26980   002C08  CFDE F097          	movff	postinc2,___awdiv@dividend
 26981   002C0C  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 26982   002C10  0E00               	movlw	0
 26983   002C12  0100               	movlb	0	; () banked
 26984   002C14  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 26985   002C16  0E1E               	movlw	30
 26986   002C18  6F99               	movwf	___awdiv@divisor& (0+255),b
 26987   002C1A  ECD7  F052         	call	___awdiv	;wreg free
 26988   002C1E  0100               	movlb	0	; () banked
 26989   002C20  5197               	movf	?___awdiv& (0+255),w,b
 26990   002C22  5DA1               	subwf	(??_bounceDown+2)& (0+255),w,b
 26991   002C24  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 26992   002C26  5198               	movf	(?___awdiv+1)& (0+255),w,b
 26993   002C28  A0D8               	btfss	status,0,c
 26994   002C2A  2998               	incf	(?___awdiv+1)& (0+255),w,b
 26995   002C2C  6BA4               	clrf	(??_bounceDown+5)& (0+255),b
 26996   002C2E  5FA4               	subwf	(??_bounceDown+5)& (0+255),f,b
 26997   002C30  519F               	movf	??_bounceDown& (0+255),w,b
 26998   002C32  5DA3               	subwf	(??_bounceDown+4)& (0+255),w,b
 26999   002C34  51A4               	movf	(??_bounceDown+5)& (0+255),w,b
 27000   002C36  0A80               	xorlw	128
 27001   002C38  6FA5               	movwf	(??_bounceDown+6)& (0+255),b
 27002   002C3A  51A0               	movf	(??_bounceDown+1)& (0+255),w,b
 27003   002C3C  0A80               	xorlw	128
 27004   002C3E  59A5               	subwfb	(??_bounceDown+6)& (0+255),w,b
 27005   002C40  B0D8               	btfsc	status,0,c
 27006   002C42  D081               	goto	l19914
 27007                           
 27008                           ; BSR set to: 0
 27009                           ;../bounce.c: 133:                 speed[io] = (-speed[io]*getNV((16 + 7*(io) + 4)))/100
      +                          ;
 27010   002C44  0101               	movlb	1	; () banked
 27011   002C46  51B8               	movf	bounceDown@io& (0+255),w,b
 27012   002C48  0D07               	mullw	7
 27013   002C4A  50F3               	movf	243,w,c
 27014   002C4C  0F14               	addlw	20
 27015   002C4E  EC35  F05D         	call	_getNV
 27016   002C52  C08D  F091         	movff	?_getNV,___wmul@multiplier
 27017   002C56  C08E  F092         	movff	?_getNV+1,___wmul@multiplier+1
 27018   002C5A  0101               	movlb	1	; () banked
 27019   002C5C  51B8               	movf	bounceDown@io& (0+255),w,b
 27020   002C5E  0D02               	mullw	2
 27021   002C60  0E00               	movlw	low _speed
 27022   002C62  24F3               	addwf	243,w,c
 27023   002C64  6ED9               	movwf	fsr2l,c
 27024   002C66  0E01               	movlw	high _speed
 27025   002C68  20F4               	addwfc	prodh,w,c
 27026   002C6A  6EDA               	movwf	fsr2h,c
 27027   002C6C  CFDE F09F          	movff	postinc2,??_bounceDown
 27028   002C70  CFDD F0A0          	movff	postdec2,??_bounceDown+1
 27029   002C74  0100               	movlb	0	; () banked
 27030   002C76  1F9F               	comf	??_bounceDown& (0+255),f,b
 27031   002C78  1FA0               	comf	(??_bounceDown+1)& (0+255),f,b
 27032   002C7A  4B9F               	infsnz	??_bounceDown& (0+255),f,b
 27033   002C7C  2BA0               	incf	(??_bounceDown+1)& (0+255),f,b
 27034   002C7E  C09F  F093         	movff	??_bounceDown,___wmul@multiplicand
 27035   002C82  C0A0  F094         	movff	??_bounceDown+1,___wmul@multiplicand+1
 27036   002C86  EC1D  F060         	call	___wmul	;wreg free
 27037   002C8A  C091  F097         	movff	?___wmul,___awdiv@dividend
 27038   002C8E  C092  F098         	movff	?___wmul+1,___awdiv@dividend+1
 27039   002C92  0E00               	movlw	0
 27040   002C94  0100               	movlb	0	; () banked
 27041   002C96  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27042   002C98  0E64               	movlw	100
 27043   002C9A  6F99               	movwf	___awdiv@divisor& (0+255),b
 27044   002C9C  ECD7  F052         	call	___awdiv	;wreg free
 27045   002CA0  0101               	movlb	1	; () banked
 27046   002CA2  51B8               	movf	bounceDown@io& (0+255),w,b
 27047   002CA4  0D02               	mullw	2
 27048   002CA6  0E00               	movlw	low _speed
 27049   002CA8  24F3               	addwf	243,w,c
 27050   002CAA  6ED9               	movwf	fsr2l,c
 27051   002CAC  0E01               	movlw	high _speed
 27052   002CAE  20F4               	addwfc	prodh,w,c
 27053   002CB0  6EDA               	movwf	fsr2h,c
 27054   002CB2  0100               	movlb	0	; () banked
 27055   002CB4  C097  FFDE         	movff	?___awdiv,postinc2
 27056   002CB8  C098  FFDD         	movff	?___awdiv+1,postdec2
 27057                           
 27058                           ;../bounce.c: 135:                 tmp = (uint8_t)getNV((16 + 7*(io) + 3)) +
 27059   002CBC  0101               	movlb	1	; () banked
 27060   002CBE  51B8               	movf	bounceDown@io& (0+255),w,b
 27061   002CC0  0D07               	mullw	7
 27062   002CC2  50F3               	movf	243,w,c
 27063   002CC4  0F13               	addlw	19
 27064   002CC6  EC35  F05D         	call	_getNV
 27065   002CCA  0100               	movlb	0	; () banked
 27066   002CCC  518D               	movf	?_getNV& (0+255),w,b
 27067   002CCE  6F9F               	movwf	??_bounceDown& (0+255),b
 27068   002CD0  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 27069   002CD2  0101               	movlb	1	; () banked
 27070   002CD4  51B8               	movf	bounceDown@io& (0+255),w,b
 27071   002CD6  0D07               	mullw	7
 27072   002CD8  50F3               	movf	243,w,c
 27073   002CDA  0F13               	addlw	19
 27074   002CDC  EC35  F05D         	call	_getNV
 27075   002CE0  0100               	movlb	0	; () banked
 27076   002CE2  518D               	movf	?_getNV& (0+255),w,b
 27077   002CE4  279F               	addwf	??_bounceDown& (0+255),f,b
 27078   002CE6  0E00               	movlw	0
 27079   002CE8  23A0               	addwfc	(??_bounceDown+1)& (0+255),f,b
 27080   002CEA  0101               	movlb	1	; () banked
 27081   002CEC  51B8               	movf	bounceDown@io& (0+255),w,b
 27082   002CEE  0D02               	mullw	2
 27083   002CF0  0E00               	movlw	low _speed
 27084   002CF2  24F3               	addwf	243,w,c
 27085   002CF4  6ED9               	movwf	fsr2l,c
 27086   002CF6  0E01               	movlw	high _speed
 27087   002CF8  20F4               	addwfc	prodh,w,c
 27088   002CFA  6EDA               	movwf	fsr2h,c
 27089   002CFC  CFDE F097          	movff	postinc2,___awdiv@dividend
 27090   002D00  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 27091   002D04  0E00               	movlw	0
 27092   002D06  0100               	movlb	0	; () banked
 27093   002D08  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27094   002D0A  0E1E               	movlw	30
 27095   002D0C  6F99               	movwf	___awdiv@divisor& (0+255),b
 27096   002D0E  ECD7  F052         	call	___awdiv	;wreg free
 27097   002D12  0100               	movlb	0	; () banked
 27098   002D14  5197               	movf	?___awdiv& (0+255),w,b
 27099   002D16  259F               	addwf	??_bounceDown& (0+255),w,b
 27100   002D18  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 27101   002D1A  5198               	movf	(?___awdiv+1)& (0+255),w,b
 27102   002D1C  21A0               	addwfc	(??_bounceDown+1)& (0+255),w,b
 27103   002D1E  6FA2               	movwf	(??_bounceDown+3)& (0+255),b
 27104   002D20  0E40               	movlw	low _currentPos
 27105   002D22  0101               	movlb	1	; () banked
 27106   002D24  25B8               	addwf	bounceDown@io& (0+255),w,b
 27107   002D26  6ED9               	movwf	fsr2l,c
 27108   002D28  6ADA               	clrf	fsr2h,c
 27109   002D2A  0E01               	movlw	high _currentPos
 27110   002D2C  22DA               	addwfc	fsr2h,f,c
 27111   002D2E  50DF               	movf	indf2,w,c
 27112   002D30  0100               	movlb	0	; () banked
 27113   002D32  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 27114   002D34  51A3               	movf	(??_bounceDown+4)& (0+255),w,b
 27115   002D36  5DA1               	subwf	(??_bounceDown+2)& (0+255),w,b
 27116   002D38  0101               	movlb	1	; () banked
 27117   002D3A  6FB6               	movwf	bounceDown@tmp& (0+255),b
 27118   002D3C  0100               	movlb	0	; () banked
 27119   002D3E  51A2               	movf	(??_bounceDown+3)& (0+255),w,b
 27120   002D40  A0D8               	btfss	status,0,c
 27121   002D42  05A2               	decf	(??_bounceDown+3)& (0+255),w,b
 27122   002D44  D70A               	goto	L8
 27123   002D46                     l19914:
 27124                           
 27125                           ; BSR set to: 0
 27126                           ;../bounce.c: 142:                 speed[io] += 3;
 27127   002D46  0101               	movlb	1	; () banked
 27128   002D48  51B8               	movf	bounceDown@io& (0+255),w,b
 27129   002D4A  0D02               	mullw	2
 27130   002D4C  0E00               	movlw	low _speed
 27131   002D4E  24F3               	addwf	243,w,c
 27132   002D50  6ED9               	movwf	fsr2l,c
 27133   002D52  0E01               	movlw	high _speed
 27134   002D54  20F4               	addwfc	prodh,w,c
 27135   002D56  6EDA               	movwf	fsr2h,c
 27136   002D58  0E03               	movlw	3
 27137   002D5A  26DE               	addwf	postinc2,f,c
 27138   002D5C  0E00               	movlw	0
 27139   002D5E  22DD               	addwfc	postdec2,f,c
 27140                           
 27141                           ; BSR set to: 1
 27142                           ;../bounce.c: 143:                 currentPos[io] += ((speed[io]/30)+1);
 27143   002D60  51B8               	movf	bounceDown@io& (0+255),w,b
 27144   002D62  0D02               	mullw	2
 27145   002D64  0E00               	movlw	low _speed
 27146   002D66  24F3               	addwf	243,w,c
 27147   002D68  6ED9               	movwf	fsr2l,c
 27148   002D6A  0E01               	movlw	high _speed
 27149   002D6C  20F4               	addwfc	prodh,w,c
 27150   002D6E  6EDA               	movwf	fsr2h,c
 27151   002D70  CFDE F097          	movff	postinc2,___awdiv@dividend
 27152   002D74  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 27153   002D78  0E00               	movlw	0
 27154   002D7A  0100               	movlb	0	; () banked
 27155   002D7C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27156   002D7E  0E1E               	movlw	30
 27157   002D80  6F99               	movwf	___awdiv@divisor& (0+255),b
 27158   002D82  ECD7  F052         	call	___awdiv	;wreg free
 27159   002D86  0E01               	movlw	1
 27160   002D88  0100               	movlb	0	; () banked
 27161   002D8A  2797               	addwf	?___awdiv& (0+255),f,b
 27162   002D8C  0E40               	movlw	low _currentPos
 27163   002D8E  0101               	movlb	1	; () banked
 27164   002D90  25B8               	addwf	bounceDown@io& (0+255),w,b
 27165   002D92  6ED9               	movwf	fsr2l,c
 27166   002D94  6ADA               	clrf	fsr2h,c
 27167   002D96  0E01               	movlw	high _currentPos
 27168   002D98  22DA               	addwfc	fsr2h,f,c
 27169   002D9A  0100               	movlb	0	; () banked
 27170   002D9C  5197               	movf	?___awdiv& (0+255),w,b
 27171   002D9E  26DF               	addwf	indf2,f,c
 27172   002DA0                     l19918:
 27173                           
 27174                           ;../bounce.c: 147:         return FALSE;
 27175   002DA0  0E00               	movlw	0
 27176   002DA2  0012               	return	
 27177   002DA4                     l19922:
 27178                           
 27179                           ; BSR set to: 1
 27180                           ;../bounce.c: 149:     return TRUE;
 27181   002DA4  0E01               	movlw	1
 27182   002DA6  0012               	return		;funcret
 27183   002DA8                     __end_of_bounceDown:
 27184                           	callstack 0
 27185                           
 27186 ;; *************** function _processOutputs *****************
 27187 ;; Defined at:
 27188 ;;		line 175 in file "../digitalOut.c"
 27189 ;; Parameters:    Size  Location     Type
 27190 ;;		None
 27191 ;; Auto vars:     Size  Location     Type
 27192 ;;  io              1   18[BANK1 ] unsigned char 
 27193 ;;  state           1    0        enum E12700
 27194 ;; Return value:  Size  Location     Type
 27195 ;;                  1    wreg      void 
 27196 ;; Registers used:
 27197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 27198 ;; Tracked objects:
 27199 ;;		On entry : 0/0
 27200 ;;		On exit  : 0/0
 27201 ;;		Unchanged: 0/0
 27202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27204 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27205 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27206 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27207 ;;Total ram usage:        2 bytes
 27208 ;; Hardware stack levels used: 1
 27209 ;; Hardware stack levels required when called: 17
 27210 ;; This function calls:
 27211 ;;		_getNV
 27212 ;;		_sendProducedEvent
 27213 ;;		_setOutputPin
 27214 ;; This function is called by:
 27215 ;;		_loop
 27216 ;; This function uses a non-reentrant model
 27217 ;;
 27218                           
 27219                           	psect	text98
 27220   006B60                     __ptext98:
 27221                           	callstack 0
 27222   006B60                     _processOutputs:
 27223                           	callstack 12
 27224                           
 27225                           ;../digitalOut.c: 176:     Boolean state;;../digitalOut.c: 177:     uint8_t io;;../digit
      +                          alOut.c: 178:     for (io=0; io<16; io++) {
 27226                           
 27227                           ;incstack = 0
 27228   006B60  0E00               	movlw	0
 27229   006B62  0101               	movlb	1	; () banked
 27230   006B64  6FC7               	movwf	processOutputs@io& (0+255),b
 27231   006B66                     l22026:
 27232                           
 27233                           ; BSR set to: 1
 27234                           ;../digitalOut.c: 179:         if (getNV((16 + 7*(io) + 0)) == 1) {
 27235   006B66  51C7               	movf	processOutputs@io& (0+255),w,b
 27236   006B68  0D07               	mullw	7
 27237   006B6A  50F3               	movf	243,w,c
 27238   006B6C  0F10               	addlw	16
 27239   006B6E  EC35  F05D         	call	_getNV
 27240   006B72  0100               	movlb	0	; () banked
 27241   006B74  058D               	decf	?_getNV& (0+255),w,b
 27242   006B76  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 27243   006B78  A4D8               	btfss	status,2,c
 27244   006B7A  D0D5               	goto	l247
 27245                           
 27246                           ; BSR set to: 0
 27247                           ;../digitalOut.c: 181:             if (flashDelays[io] == 1) {
 27248   006B7C  0E94               	movlw	low _flashDelays
 27249   006B7E  0101               	movlb	1	; () banked
 27250   006B80  25C7               	addwf	processOutputs@io& (0+255),w,b
 27251   006B82  6ED9               	movwf	fsr2l,c
 27252   006B84  6ADA               	clrf	fsr2h,c
 27253   006B86  0E02               	movlw	high _flashDelays
 27254   006B88  22DA               	addwfc	fsr2h,f,c
 27255   006B8A  04DE               	decf	postinc2,w,c
 27256   006B8C  A4D8               	btfss	status,2,c
 27257   006B8E  D02F               	goto	l22036
 27258                           
 27259                           ; BSR set to: 1
 27260                           ;../digitalOut.c: 182:                 setOutputPin(io, getNV((16 + 7*(io) + 1)) & 0x20)
      +                          ;
 27261   006B90  51C7               	movf	processOutputs@io& (0+255),w,b
 27262   006B92  0D07               	mullw	7
 27263   006B94  50F3               	movf	243,w,c
 27264   006B96  0F11               	addlw	17
 27265   006B98  EC35  F05D         	call	_getNV
 27266   006B9C  0100               	movlb	0	; () banked
 27267   006B9E  518D               	movf	?_getNV& (0+255),w,b
 27268   006BA0  0B20               	andlw	32
 27269   006BA2  6F91               	movwf	setOutputPin@state& (0+255),b
 27270   006BA4  0101               	movlb	1	; () banked
 27271   006BA6  51C7               	movf	processOutputs@io& (0+255),w,b
 27272   006BA8  EC7B  F037         	call	_setOutputPin
 27273                           
 27274                           ;../digitalOut.c: 183:                 flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3)
      +                          );
 27275   006BAC  0101               	movlb	1	; () banked
 27276   006BAE  51C7               	movf	processOutputs@io& (0+255),w,b
 27277   006BB0  0D07               	mullw	7
 27278   006BB2  50F3               	movf	243,w,c
 27279   006BB4  0F13               	addlw	19
 27280   006BB6  EC35  F05D         	call	_getNV
 27281   006BBA  0E94               	movlw	low _flashDelays
 27282   006BBC  0101               	movlb	1	; () banked
 27283   006BBE  25C7               	addwf	processOutputs@io& (0+255),w,b
 27284   006BC0  6ED9               	movwf	fsr2l,c
 27285   006BC2  6ADA               	clrf	fsr2h,c
 27286   006BC4  0E02               	movlw	high _flashDelays
 27287   006BC6  22DA               	addwfc	fsr2h,f,c
 27288   006BC8  0100               	movlb	0	; () banked
 27289   006BCA  C08D  FFDF         	movff	?_getNV,indf2
 27290                           
 27291                           ; BSR set to: 0
 27292                           ;../digitalOut.c: 184:                 flashDelays[io] = - flashDelays[io];
 27293   006BCE  0E94               	movlw	low _flashDelays
 27294   006BD0  0101               	movlb	1	; () banked
 27295   006BD2  25C7               	addwf	processOutputs@io& (0+255),w,b
 27296   006BD4  6ED9               	movwf	fsr2l,c
 27297   006BD6  6ADA               	clrf	fsr2h,c
 27298   006BD8  0E02               	movlw	high _flashDelays
 27299   006BDA  22DA               	addwfc	fsr2h,f,c
 27300   006BDC  0E94               	movlw	low _flashDelays
 27301   006BDE  25C7               	addwf	processOutputs@io& (0+255),w,b
 27302   006BE0  6EE1               	movwf	fsr1l,c
 27303   006BE2  6AE2               	clrf	fsr1h,c
 27304   006BE4  0E02               	movlw	high _flashDelays
 27305   006BE6  22E2               	addwfc	fsr1h,f,c
 27306   006BE8  50E7               	movf	indf1,w,c
 27307   006BEA  0800               	sublw	0
 27308   006BEC  6EDF               	movwf	indf2,c
 27309   006BEE                     l22036:
 27310                           
 27311                           ; BSR set to: 1
 27312                           ;../digitalOut.c: 186:             if (flashDelays[io] == -1) {
 27313   006BEE  0E94               	movlw	low _flashDelays
 27314   006BF0  25C7               	addwf	processOutputs@io& (0+255),w,b
 27315   006BF2  6ED9               	movwf	fsr2l,c
 27316   006BF4  6ADA               	clrf	fsr2h,c
 27317   006BF6  0E02               	movlw	high _flashDelays
 27318   006BF8  22DA               	addwfc	fsr2h,f,c
 27319   006BFA  28DE               	incf	postinc2,w,c
 27320   006BFC  A4D8               	btfss	status,2,c
 27321   006BFE  D022               	goto	l22042
 27322                           
 27323                           ; BSR set to: 1
 27324                           ;../digitalOut.c: 187:                 setOutputPin(io, ! (getNV((16 + 7*(io) + 1)) & 0x
      +                          20));
 27325   006C00  51C7               	movf	processOutputs@io& (0+255),w,b
 27326   006C02  0D07               	mullw	7
 27327   006C04  50F3               	movf	243,w,c
 27328   006C06  0F11               	addlw	17
 27329   006C08  EC35  F05D         	call	_getNV
 27330   006C0C  0100               	movlb	0	; () banked
 27331   006C0E  BB8D               	btfsc	?_getNV& (0+255),5,b
 27332   006C10  D002               	goto	u23630
 27333   006C12  0E01               	movlw	1
 27334   006C14  D001               	goto	u23640
 27335   006C16                     u23630:
 27336   006C16  0E00               	movlw	0
 27337   006C18                     u23640:
 27338   006C18  6F91               	movwf	setOutputPin@state& (0+255),b
 27339   006C1A  0101               	movlb	1	; () banked
 27340   006C1C  51C7               	movf	processOutputs@io& (0+255),w,b
 27341   006C1E  EC7B  F037         	call	_setOutputPin
 27342                           
 27343                           ;../digitalOut.c: 188:                 flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3)
      +                          );
 27344   006C22  0101               	movlb	1	; () banked
 27345   006C24  51C7               	movf	processOutputs@io& (0+255),w,b
 27346   006C26  0D07               	mullw	7
 27347   006C28  50F3               	movf	243,w,c
 27348   006C2A  0F13               	addlw	19
 27349   006C2C  EC35  F05D         	call	_getNV
 27350   006C30  0E94               	movlw	low _flashDelays
 27351   006C32  0101               	movlb	1	; () banked
 27352   006C34  25C7               	addwf	processOutputs@io& (0+255),w,b
 27353   006C36  6ED9               	movwf	fsr2l,c
 27354   006C38  6ADA               	clrf	fsr2h,c
 27355   006C3A  0E02               	movlw	high _flashDelays
 27356   006C3C  22DA               	addwfc	fsr2h,f,c
 27357   006C3E  0100               	movlb	0	; () banked
 27358   006C40  C08D  FFDF         	movff	?_getNV,indf2
 27359   006C44                     l22042:
 27360                           
 27361                           ;../digitalOut.c: 190:             if (flashDelays[io] > 1) {
 27362   006C44  0E94               	movlw	low _flashDelays
 27363   006C46  0101               	movlb	1	; () banked
 27364   006C48  25C7               	addwf	processOutputs@io& (0+255),w,b
 27365   006C4A  6ED9               	movwf	fsr2l,c
 27366   006C4C  6ADA               	clrf	fsr2h,c
 27367   006C4E  0E02               	movlw	high _flashDelays
 27368   006C50  22DA               	addwfc	fsr2h,f,c
 27369   006C52  50DF               	movf	indf2,w,c
 27370   006C54  0A80               	xorlw	128
 27371   006C56  0F7E               	addlw	-130
 27372   006C58  A0D8               	btfss	status,0,c
 27373   006C5A  D008               	goto	l22046
 27374                           
 27375                           ; BSR set to: 1
 27376                           ;../digitalOut.c: 191:                 flashDelays[io]--;
 27377   006C5C  0E94               	movlw	low _flashDelays
 27378   006C5E  25C7               	addwf	processOutputs@io& (0+255),w,b
 27379   006C60  6ED9               	movwf	fsr2l,c
 27380   006C62  6ADA               	clrf	fsr2h,c
 27381   006C64  0E02               	movlw	high _flashDelays
 27382   006C66  22DA               	addwfc	fsr2h,f,c
 27383   006C68  06DF               	decf	indf2,f,c
 27384                           
 27385                           ;../digitalOut.c: 192:             } else if (flashDelays[io] < -1) {
 27386   006C6A  D012               	goto	l245
 27387   006C6C                     l22046:
 27388                           
 27389                           ; BSR set to: 1
 27390   006C6C  0E94               	movlw	low _flashDelays
 27391   006C6E  25C7               	addwf	processOutputs@io& (0+255),w,b
 27392   006C70  6ED9               	movwf	fsr2l,c
 27393   006C72  6ADA               	clrf	fsr2h,c
 27394   006C74  0E02               	movlw	high _flashDelays
 27395   006C76  22DA               	addwfc	fsr2h,f,c
 27396   006C78  50DF               	movf	indf2,w,c
 27397   006C7A  0A80               	xorlw	128
 27398   006C7C  0F81               	addlw	129
 27399   006C7E  B0D8               	btfsc	status,0,c
 27400   006C80  D007               	goto	l245
 27401                           
 27402                           ; BSR set to: 1
 27403                           ;../digitalOut.c: 193:                 flashDelays[io]++;
 27404   006C82  0E94               	movlw	low _flashDelays
 27405   006C84  25C7               	addwf	processOutputs@io& (0+255),w,b
 27406   006C86  6ED9               	movwf	fsr2l,c
 27407   006C88  6ADA               	clrf	fsr2h,c
 27408   006C8A  0E02               	movlw	high _flashDelays
 27409   006C8C  22DA               	addwfc	fsr2h,f,c
 27410   006C8E  2ADF               	incf	indf2,f,c
 27411   006C90                     l245:
 27412                           
 27413                           ; BSR set to: 1
 27414                           ;../digitalOut.c: 195:             if (pulseDelays[io] != 0) {
 27415   006C90  0EA4               	movlw	low _pulseDelays
 27416   006C92  25C7               	addwf	processOutputs@io& (0+255),w,b
 27417   006C94  6ED9               	movwf	fsr2l,c
 27418   006C96  6ADA               	clrf	fsr2h,c
 27419   006C98  0E02               	movlw	high _pulseDelays
 27420   006C9A  22DA               	addwfc	fsr2h,f,c
 27421   006C9C  50DF               	movf	indf2,w,c
 27422   006C9E  B4D8               	btfsc	status,2,c
 27423   006CA0  D042               	goto	l247
 27424                           
 27425                           ; BSR set to: 1
 27426                           ;../digitalOut.c: 196:                 pulseDelays[io]--;
 27427   006CA2  0EA4               	movlw	low _pulseDelays
 27428   006CA4  25C7               	addwf	processOutputs@io& (0+255),w,b
 27429   006CA6  6ED9               	movwf	fsr2l,c
 27430   006CA8  6ADA               	clrf	fsr2h,c
 27431   006CAA  0E02               	movlw	high _pulseDelays
 27432   006CAC  22DA               	addwfc	fsr2h,f,c
 27433   006CAE  06DF               	decf	indf2,f,c
 27434                           
 27435                           ;../digitalOut.c: 199:                 if (pulseDelays[io] == 1) {
 27436   006CB0  0EA4               	movlw	low _pulseDelays
 27437   006CB2  25C7               	addwf	processOutputs@io& (0+255),w,b
 27438   006CB4  6ED9               	movwf	fsr2l,c
 27439   006CB6  6ADA               	clrf	fsr2h,c
 27440   006CB8  0E02               	movlw	high _pulseDelays
 27441   006CBA  22DA               	addwfc	fsr2h,f,c
 27442   006CBC  04DE               	decf	postinc2,w,c
 27443   006CBE  A4D8               	btfss	status,2,c
 27444   006CC0  D032               	goto	l247
 27445                           
 27446                           ; BSR set to: 1
 27447                           ;../digitalOut.c: 201:                     if (getNV((16 + 7*(io) + 1)) & 0x20) {
 27448   006CC2  51C7               	movf	processOutputs@io& (0+255),w,b
 27449   006CC4  0D07               	mullw	7
 27450   006CC6  50F3               	movf	243,w,c
 27451   006CC8  0F11               	addlw	17
 27452   006CCA  EC35  F05D         	call	_getNV
 27453   006CCE  0100               	movlb	0	; () banked
 27454   006CD0  AB8D               	btfss	?_getNV& (0+255),5,b
 27455   006CD2  D007               	goto	l22056
 27456                           
 27457                           ; BSR set to: 0
 27458                           ;../digitalOut.c: 202:                         setOutputPin(io, TRUE);
 27459   006CD4  0E01               	movlw	1
 27460   006CD6  6F91               	movwf	setOutputPin@state& (0+255),b
 27461   006CD8  0101               	movlb	1	; () banked
 27462   006CDA  51C7               	movf	processOutputs@io& (0+255),w,b
 27463   006CDC  EC7B  F037         	call	_setOutputPin
 27464                           
 27465                           ;../digitalOut.c: 203:                     } else {
 27466   006CE0  D006               	goto	l22058
 27467   006CE2                     l22056:
 27468                           
 27469                           ; BSR set to: 0
 27470                           ;../digitalOut.c: 204:                         setOutputPin(io, FALSE);
 27471   006CE2  0E00               	movlw	0
 27472   006CE4  6F91               	movwf	setOutputPin@state& (0+255),b
 27473   006CE6  0101               	movlb	1	; () banked
 27474   006CE8  51C7               	movf	processOutputs@io& (0+255),w,b
 27475   006CEA  EC7B  F037         	call	_setOutputPin
 27476   006CEE                     l22058:
 27477                           
 27478                           ;../digitalOut.c: 207:                     if ( ! (getNV((16 + 7*(io) + 1)) & 0x08)) {
 27479   006CEE  0101               	movlb	1	; () banked
 27480   006CF0  51C7               	movf	processOutputs@io& (0+255),w,b
 27481   006CF2  0D07               	mullw	7
 27482   006CF4  50F3               	movf	243,w,c
 27483   006CF6  0F11               	addlw	17
 27484   006CF8  EC35  F05D         	call	_getNV
 27485   006CFC  0100               	movlb	0	; () banked
 27486   006CFE  B78D               	btfsc	?_getNV& (0+255),3,b
 27487   006D00  D012               	goto	l247
 27488                           
 27489                           ; BSR set to: 0
 27490                           ;../digitalOut.c: 209:                         sendProducedEvent(((8 + 4*(io))+0), getNV
      +                          ((16 + 7*(io) + 1)) & 0x40);
 27491   006D02  0101               	movlb	1	; () banked
 27492   006D04  51C7               	movf	processOutputs@io& (0+255),w,b
 27493   006D06  0D07               	mullw	7
 27494   006D08  50F3               	movf	243,w,c
 27495   006D0A  0F11               	addlw	17
 27496   006D0C  EC35  F05D         	call	_getNV
 27497   006D10  0100               	movlb	0	; () banked
 27498   006D12  518D               	movf	?_getNV& (0+255),w,b
 27499   006D14  0B40               	andlw	64
 27500   006D16  0101               	movlb	1	; () banked
 27501   006D18  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 27502   006D1A  51C7               	movf	processOutputs@io& (0+255),w,b
 27503   006D1C  0D04               	mullw	4
 27504   006D1E  50F3               	movf	243,w,c
 27505   006D20  0F08               	addlw	8
 27506   006D22  ECAD  F04C         	call	_sendProducedEvent
 27507   006D26                     l247:
 27508                           
 27509                           ;../digitalOut.c: 214:     }
 27510                           
 27511                           ; BSR set to: 0
 27512   006D26  0101               	movlb	1	; () banked
 27513   006D28  2BC7               	incf	processOutputs@io& (0+255),f,b
 27514                           
 27515                           ; BSR set to: 1
 27516   006D2A  0E0F               	movlw	15
 27517   006D2C  65C7               	cpfsgt	processOutputs@io& (0+255),b
 27518   006D2E  D71B               	goto	l22026
 27519   006D30  0012               	return	
 27520   006D32                     __end_of_processOutputs:
 27521                           	callstack 0
 27522                           
 27523 ;; *************** function _processActions *****************
 27524 ;; Defined at:
 27525 ;;		line 202 in file "../universalEvents.c"
 27526 ;; Parameters:    Size  Location     Type
 27527 ;;		None
 27528 ;; Auto vars:     Size  Location     Type
 27529 ;;  nextAction      2   44[BANK1 ] PTR struct .
 27530 ;;		 -> normalQueueBuf(128), expeditedQueueBuf(16), NULL(0), 
 27531 ;;  nextIo          1   41[BANK1 ] unsigned char 
 27532 ;;  nextType        1   40[BANK1 ] unsigned char 
 27533 ;;  action          2   46[BANK1 ] PTR struct .
 27534 ;;		 -> normalQueueBuf(128), expeditedQueueBuf(16), NULL(0), 
 27535 ;;  ioAction        1   43[BANK1 ] unsigned char 
 27536 ;;  io              1   42[BANK1 ] unsigned char 
 27537 ;;  type            1   39[BANK1 ] unsigned char 
 27538 ;;  peekItem        1   38[BANK1 ] unsigned char 
 27539 ;;  simultaneous    1   37[BANK1 ] unsigned char 
 27540 ;; Return value:  Size  Location     Type
 27541 ;;                  1    wreg      void 
 27542 ;; Registers used:
 27543 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 27544 ;; Tracked objects:
 27545 ;;		On entry : 0/0
 27546 ;;		On exit  : 0/0
 27547 ;;		Unchanged: 0/0
 27548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27550 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27551 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27552 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27553 ;;Total ram usage:       12 bytes
 27554 ;; Hardware stack levels used: 1
 27555 ;; Hardware stack levels required when called: 20
 27556 ;; This function calls:
 27557 ;;		___awdiv
 27558 ;;		___awmod
 27559 ;;		_completed
 27560 ;;		_deleteTwoActionQueue
 27561 ;;		_doSOD
 27562 ;;		_doWait
 27563 ;;		_doneTwoAction
 27564 ;;		_getNV
 27565 ;;		_getTwoAction
 27566 ;;		_needsStarting
 27567 ;;		_peekTwoActionQueue
 27568 ;;		_setOutputState
 27569 ;;		_startOutput
 27570 ;; This function is called by:
 27571 ;;		_loop
 27572 ;; This function uses a non-reentrant model
 27573 ;;
 27574                           
 27575                           	psect	text99
 27576   00533E                     __ptext99:
 27577                           	callstack 0
 27578   00533E                     _processActions:
 27579                           	callstack 9
 27580                           
 27581                           ;../universalEvents.c: 203:     uint8_t io;;../universalEvents.c: 204:     uint8_t type;
      +                          ;../universalEvents.c: 205:     ActionAndState * action = getTwoAction();
 27582                           
 27583                           ; BSR set to: 1
 27584                           ;incstack = 0
 27585   00533E  EC9C  F061         	call	_getTwoAction	;wreg free
 27586   005342  C091  F1E3         	movff	?_getTwoAction,processActions@action
 27587   005346  C092  F1E4         	movff	?_getTwoAction+1,processActions@action+1
 27588                           
 27589                           ;../universalEvents.c: 206:     uint8_t ioAction;;../universalEvents.c: 207:     uint8_t
      +                           simultaneous;;../universalEvents.c: 208:     uint8_t peekItem;;../universalEvents.c: 21
      +                          1:     if (action->a.value == 0) {
 27590   00534A  0101               	movlb	1	; () banked
 27591   00534C  EE20 F001          	lfsr	2,1
 27592   005350  51E3               	movf	processActions@action& (0+255),w,b
 27593   005352  26D9               	addwf	fsr2l,f,c
 27594   005354  51E4               	movf	(processActions@action+1)& (0+255),w,b
 27595   005356  22DA               	addwfc	fsr2h,f,c
 27596   005358  50DF               	movf	indf2,w,c
 27597   00535A  A4D8               	btfss	status,2,c
 27598   00535C  D003               	goto	l21936
 27599   00535E                     u23450:
 27600                           
 27601                           ;../universalEvents.c: 212:         doneTwoAction();
 27602   00535E  ECD8  F061         	call	_doneTwoAction	;wreg free
 27603   005362  0012               	return	
 27604   005364                     l21936:
 27605                           
 27606                           ; BSR set to: 1
 27607                           ;../universalEvents.c: 216:     if (action->a.value == 1) {
 27608   005364  EE20 F001          	lfsr	2,1
 27609   005368  51E3               	movf	processActions@action& (0+255),w,b
 27610   00536A  26D9               	addwf	fsr2l,f,c
 27611   00536C  51E4               	movf	(processActions@action+1)& (0+255),w,b
 27612   00536E  22DA               	addwfc	fsr2h,f,c
 27613   005370  04DE               	decf	postinc2,w,c
 27614   005372  A4D8               	btfss	status,2,c
 27615   005374  D003               	goto	l21944
 27616                           
 27617                           ; BSR set to: 1
 27618                           ;../universalEvents.c: 218:         doSOD();
 27619   005376  EC1F  F019         	call	_doSOD	;wreg free
 27620   00537A  D7F1               	goto	u23450
 27621   00537C                     l21944:
 27622                           
 27623                           ; BSR set to: 1
 27624                           ;../universalEvents.c: 222:     if (action->a.value == 2) {
 27625   00537C  EE20 F001          	lfsr	2,1
 27626   005380  51E3               	movf	processActions@action& (0+255),w,b
 27627   005382  26D9               	addwf	fsr2l,f,c
 27628   005384  51E4               	movf	(processActions@action+1)& (0+255),w,b
 27629   005386  22DA               	addwfc	fsr2h,f,c
 27630   005388  0E02               	movlw	2
 27631   00538A  18DE               	xorwf	postinc2,w,c
 27632   00538C  A4D8               	btfss	status,2,c
 27633   00538E  D008               	goto	l21950
 27634                           
 27635                           ; BSR set to: 1
 27636                           ;../universalEvents.c: 223:         doWait(5);
 27637   005390  0E00               	movlw	0
 27638   005392  0100               	movlb	0	; () banked
 27639   005394  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 27640   005396  0E05               	movlw	5
 27641   005398  6F9D               	movwf	doWait@duration& (0+255),b
 27642   00539A  EC4D  F04D         	call	_doWait	;wreg free
 27643   00539E  0012               	return	
 27644   0053A0                     l21950:
 27645                           
 27646                           ; BSR set to: 1
 27647                           ;../universalEvents.c: 226:     if (action->a.value == 3) {
 27648   0053A0  EE20 F001          	lfsr	2,1
 27649   0053A4  51E3               	movf	processActions@action& (0+255),w,b
 27650   0053A6  26D9               	addwf	fsr2l,f,c
 27651   0053A8  51E4               	movf	(processActions@action+1)& (0+255),w,b
 27652   0053AA  22DA               	addwfc	fsr2h,f,c
 27653   0053AC  0E03               	movlw	3
 27654   0053AE  18DE               	xorwf	postinc2,w,c
 27655   0053B0  A4D8               	btfss	status,2,c
 27656   0053B2  D008               	goto	l21956
 27657                           
 27658                           ; BSR set to: 1
 27659                           ;../universalEvents.c: 227:         doWait(10);
 27660   0053B4  0E00               	movlw	0
 27661   0053B6  0100               	movlb	0	; () banked
 27662   0053B8  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 27663   0053BA  0E0A               	movlw	10
 27664   0053BC  6F9D               	movwf	doWait@duration& (0+255),b
 27665   0053BE  EC4D  F04D         	call	_doWait	;wreg free
 27666   0053C2  0012               	return	
 27667   0053C4                     l21956:
 27668                           
 27669                           ; BSR set to: 1
 27670                           ;../universalEvents.c: 230:     if (action->a.value == 4) {
 27671   0053C4  EE20 F001          	lfsr	2,1
 27672   0053C8  51E3               	movf	processActions@action& (0+255),w,b
 27673   0053CA  26D9               	addwf	fsr2l,f,c
 27674   0053CC  51E4               	movf	(processActions@action+1)& (0+255),w,b
 27675   0053CE  22DA               	addwfc	fsr2h,f,c
 27676   0053D0  0E04               	movlw	4
 27677   0053D2  18DE               	xorwf	postinc2,w,c
 27678   0053D4  A4D8               	btfss	status,2,c
 27679   0053D6  D008               	goto	l21962
 27680                           
 27681                           ; BSR set to: 1
 27682                           ;../universalEvents.c: 231:         doWait(20);
 27683   0053D8  0E00               	movlw	0
 27684   0053DA  0100               	movlb	0	; () banked
 27685   0053DC  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 27686   0053DE  0E14               	movlw	20
 27687   0053E0  6F9D               	movwf	doWait@duration& (0+255),b
 27688   0053E2  EC4D  F04D         	call	_doWait	;wreg free
 27689   0053E6  0012               	return	
 27690   0053E8                     l21962:
 27691                           
 27692                           ; BSR set to: 1
 27693                           ;../universalEvents.c: 234:     if (action->a.value == 5) {
 27694   0053E8  EE20 F001          	lfsr	2,1
 27695   0053EC  51E3               	movf	processActions@action& (0+255),w,b
 27696   0053EE  26D9               	addwf	fsr2l,f,c
 27697   0053F0  51E4               	movf	(processActions@action+1)& (0+255),w,b
 27698   0053F2  22DA               	addwfc	fsr2h,f,c
 27699   0053F4  0E05               	movlw	5
 27700   0053F6  18DE               	xorwf	postinc2,w,c
 27701   0053F8  A4D8               	btfss	status,2,c
 27702   0053FA  D008               	goto	l21968
 27703                           
 27704                           ; BSR set to: 1
 27705                           ;../universalEvents.c: 235:         doWait(50);
 27706   0053FC  0E00               	movlw	0
 27707   0053FE  0100               	movlb	0	; () banked
 27708   005400  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 27709   005402  0E32               	movlw	50
 27710   005404  6F9D               	movwf	doWait@duration& (0+255),b
 27711   005406  EC4D  F04D         	call	_doWait	;wreg free
 27712   00540A  0012               	return	
 27713   00540C                     l21968:
 27714                           
 27715                           ; BSR set to: 1
 27716                           ;../universalEvents.c: 238:     simultaneous = action->a.value & 0x80;
 27717   00540C  EE20 F001          	lfsr	2,1
 27718   005410  51E3               	movf	processActions@action& (0+255),w,b
 27719   005412  26D9               	addwf	fsr2l,f,c
 27720   005414  51E4               	movf	(processActions@action+1)& (0+255),w,b
 27721   005416  22DA               	addwfc	fsr2h,f,c
 27722   005418  50DF               	movf	indf2,w,c
 27723   00541A  0B80               	andlw	128
 27724   00541C  6FDA               	movwf	processActions@simultaneous& (0+255),b
 27725                           
 27726                           ;../universalEvents.c: 239:     ioAction = action->a.value&0x7F;
 27727   00541E  EE20 F001          	lfsr	2,1
 27728   005422  51E3               	movf	processActions@action& (0+255),w,b
 27729   005424  26D9               	addwf	fsr2l,f,c
 27730   005426  51E4               	movf	(processActions@action+1)& (0+255),w,b
 27731   005428  22DA               	addwfc	fsr2h,f,c
 27732   00542A  50DF               	movf	indf2,w,c
 27733   00542C  0B7F               	andlw	127
 27734   00542E  6FE0               	movwf	processActions@ioAction& (0+255),b
 27735                           
 27736                           ; BSR set to: 1
 27737                           ;../universalEvents.c: 240:     if ((ioAction >= 8) && (ioAction < (8 + 5 * 16))) {
 27738   005430  0E07               	movlw	7
 27739   005432  65E0               	cpfsgt	processActions@ioAction& (0+255),b
 27740   005434  D794               	goto	u23450
 27741                           
 27742                           ; BSR set to: 1
 27743   005436  0E58               	movlw	88
 27744   005438  61E0               	cpfslt	processActions@ioAction& (0+255),b
 27745   00543A  D791               	goto	u23450
 27746                           
 27747                           ; BSR set to: 1
 27748                           ;../universalEvents.c: 243:         io = (((ioAction)-8)/5);
 27749   00543C  0EF8               	movlw	248
 27750   00543E  25E0               	addwf	processActions@ioAction& (0+255),w,b
 27751   005440  0100               	movlb	0	; () banked
 27752   005442  6F97               	movwf	___awdiv@dividend& (0+255),b
 27753   005444  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 27754   005446  0EFF               	movlw	255
 27755   005448  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 27756   00544A  0E00               	movlw	0
 27757   00544C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27758   00544E  0E05               	movlw	5
 27759   005450  6F99               	movwf	___awdiv@divisor& (0+255),b
 27760   005452  ECD7  F052         	call	___awdiv	;wreg free
 27761   005456  0100               	movlb	0	; () banked
 27762   005458  5197               	movf	?___awdiv& (0+255),w,b
 27763   00545A  0101               	movlb	1	; () banked
 27764   00545C  6FDF               	movwf	processActions@io& (0+255),b
 27765                           
 27766                           ;../universalEvents.c: 244:         ioAction = (((ioAction)-8)%5);
 27767   00545E  0EF8               	movlw	248
 27768   005460  25E0               	addwf	processActions@ioAction& (0+255),w,b
 27769   005462  0100               	movlb	0	; () banked
 27770   005464  6F8D               	movwf	___awmod@dividend& (0+255),b
 27771   005466  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 27772   005468  0EFF               	movlw	255
 27773   00546A  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 27774   00546C  0E00               	movlw	0
 27775   00546E  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 27776   005470  0E05               	movlw	5
 27777   005472  6F8F               	movwf	___awmod@divisor& (0+255),b
 27778   005474  EC74  F056         	call	___awmod	;wreg free
 27779   005478  0100               	movlb	0	; () banked
 27780   00547A  518D               	movf	?___awmod& (0+255),w,b
 27781   00547C  0101               	movlb	1	; () banked
 27782   00547E  6FE0               	movwf	processActions@ioAction& (0+255),b
 27783                           
 27784                           ; BSR set to: 1
 27785                           ;../universalEvents.c: 245:         type = (uint8_t)getNV((16 + 7*(io) + 0));
 27786   005480  51DF               	movf	processActions@io& (0+255),w,b
 27787   005482  0D07               	mullw	7
 27788   005484  50F3               	movf	243,w,c
 27789   005486  0F10               	addlw	16
 27790   005488  EC35  F05D         	call	_getNV
 27791   00548C  0100               	movlb	0	; () banked
 27792   00548E  518D               	movf	?_getNV& (0+255),w,b
 27793   005490  0101               	movlb	1	; () banked
 27794   005492  6FDC               	movwf	processActions@type& (0+255),b
 27795                           
 27796                           ; BSR set to: 1
 27797                           ;../universalEvents.c: 248:         setOutputState(io, ioAction, type);
 27798   005494  C1E0  F093         	movff	processActions@ioAction,setOutputState@act
 27799   005498  C1DC  F094         	movff	processActions@type,setOutputState@type
 27800   00549C  51DF               	movf	processActions@io& (0+255),w,b
 27801   00549E  EC46  F05A         	call	_setOutputState
 27802                           
 27803                           ;../universalEvents.c: 249:         if (needsStarting(io, ioAction, type)) {
 27804   0054A2  C1E0  F08D         	movff	processActions@ioAction,needsStarting@act
 27805   0054A6  C1DC  F08E         	movff	processActions@type,needsStarting@type
 27806   0054AA  0101               	movlb	1	; () banked
 27807   0054AC  51DF               	movf	processActions@io& (0+255),w,b
 27808   0054AE  EC9F  F053         	call	_needsStarting
 27809   0054B2  0900               	iorlw	0
 27810   0054B4  B4D8               	btfsc	status,2,c
 27811   0054B6  D008               	goto	l21984
 27812                           
 27813                           ;../universalEvents.c: 250:             startOutput(io, ioAction, type);
 27814   0054B8  C1E0  F1D6         	movff	processActions@ioAction,startOutput@act
 27815   0054BC  C1DC  F1D7         	movff	processActions@type,startOutput@type
 27816   0054C0  0101               	movlb	1	; () banked
 27817   0054C2  51DF               	movf	processActions@io& (0+255),w,b
 27818   0054C4  EC3C  F059         	call	_startOutput
 27819   0054C8                     l21984:
 27820                           
 27821                           ;../universalEvents.c: 253:         peekItem = 1;
 27822   0054C8  0E01               	movlw	1
 27823   0054CA  0101               	movlb	1	; () banked
 27824   0054CC  6FDB               	movwf	processActions@peekItem& (0+255),b
 27825                           
 27826                           ;../universalEvents.c: 254:         while (simultaneous) {
 27827   0054CE  D08C               	goto	l22012
 27828   0054D0                     l21986:
 27829                           
 27830                           ; BSR set to: 1
 27831                           ;../universalEvents.c: 255:             ActionAndState * nextAction;;../universalEvents.
      +                          c: 256:             uint8_t nextIo;;../universalEvents.c: 257:             uint8_t nextT
      +                          ype;;../universalEvents.c: 259:             nextAction = peekTwoActionQueue(peekItem);
 27832   0054D0  51DB               	movf	processActions@peekItem& (0+255),w,b
 27833   0054D2  ECE1  F050         	call	_peekTwoActionQueue
 27834   0054D6  C08D  F1E1         	movff	?_peekTwoActionQueue,processActions@nextAction
 27835   0054DA  C08E  F1E2         	movff	?_peekTwoActionQueue+1,processActions@nextAction+1
 27836                           
 27837                           ;../universalEvents.c: 261:             if (nextAction->a.value == 0) break;
 27838   0054DE  0101               	movlb	1	; () banked
 27839   0054E0  EE20 F001          	lfsr	2,1
 27840   0054E4  51E1               	movf	processActions@nextAction& (0+255),w,b
 27841   0054E6  26D9               	addwf	fsr2l,f,c
 27842   0054E8  51E2               	movf	(processActions@nextAction+1)& (0+255),w,b
 27843   0054EA  22DA               	addwfc	fsr2h,f,c
 27844   0054EC  50DF               	movf	indf2,w,c
 27845   0054EE  B4D8               	btfsc	status,2,c
 27846   0054F0  D07E               	goto	u23580
 27847                           
 27848                           ; BSR set to: 1
 27849                           ;../universalEvents.c: 262:             simultaneous = nextAction->a.value & 0x80;
 27850   0054F2  EE20 F001          	lfsr	2,1
 27851   0054F6  51E1               	movf	processActions@nextAction& (0+255),w,b
 27852   0054F8  26D9               	addwf	fsr2l,f,c
 27853   0054FA  51E2               	movf	(processActions@nextAction+1)& (0+255),w,b
 27854   0054FC  22DA               	addwfc	fsr2h,f,c
 27855   0054FE  50DF               	movf	indf2,w,c
 27856   005500  0B80               	andlw	128
 27857   005502  6FDA               	movwf	processActions@simultaneous& (0+255),b
 27858                           
 27859                           ;../universalEvents.c: 263:             nextAction->a.value &= 0x7F;
 27860   005504  EE20 F001          	lfsr	2,1
 27861   005508  51E1               	movf	processActions@nextAction& (0+255),w,b
 27862   00550A  26D9               	addwf	fsr2l,f,c
 27863   00550C  51E2               	movf	(processActions@nextAction+1)& (0+255),w,b
 27864   00550E  22DA               	addwfc	fsr2h,f,c
 27865   005510  0E7F               	movlw	127
 27866   005512  16DF               	andwf	indf2,f,c
 27867                           
 27868                           ; BSR set to: 1
 27869                           ;../universalEvents.c: 264:             nextIo = (((nextAction->a.value)-8)/5);
 27870   005514  EE20 F001          	lfsr	2,1
 27871   005518  51E1               	movf	processActions@nextAction& (0+255),w,b
 27872   00551A  26D9               	addwf	fsr2l,f,c
 27873   00551C  51E2               	movf	(processActions@nextAction+1)& (0+255),w,b
 27874   00551E  22DA               	addwfc	fsr2h,f,c
 27875   005520  50DF               	movf	indf2,w,c
 27876   005522  6FD9               	movwf	??_processActions& (0+255),b
 27877   005524  0EF8               	movlw	248
 27878   005526  25D9               	addwf	??_processActions& (0+255),w,b
 27879   005528  0100               	movlb	0	; () banked
 27880   00552A  6F97               	movwf	___awdiv@dividend& (0+255),b
 27881   00552C  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 27882   00552E  0EFF               	movlw	255
 27883   005530  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 27884   005532  0E00               	movlw	0
 27885   005534  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27886   005536  0E05               	movlw	5
 27887   005538  6F99               	movwf	___awdiv@divisor& (0+255),b
 27888   00553A  ECD7  F052         	call	___awdiv	;wreg free
 27889   00553E  0100               	movlb	0	; () banked
 27890   005540  5197               	movf	?___awdiv& (0+255),w,b
 27891   005542  0101               	movlb	1	; () banked
 27892   005544  6FDE               	movwf	processActions@nextIo& (0+255),b
 27893                           
 27894                           ; BSR set to: 1
 27895                           ;../universalEvents.c: 265:             if (nextIo == io) {
 27896   005546  51DF               	movf	processActions@io& (0+255),w,b
 27897   005548  19DE               	xorwf	processActions@nextIo& (0+255),w,b
 27898   00554A  B4D8               	btfsc	status,2,c
 27899   00554C  D050               	goto	u23580
 27900                           
 27901                           ; BSR set to: 1
 27902                           ;../universalEvents.c: 271:             nextType = (uint8_t)getNV((16 + 7*(io) + 0));
 27903   00554E  51DF               	movf	processActions@io& (0+255),w,b
 27904   005550  0D07               	mullw	7
 27905   005552  50F3               	movf	243,w,c
 27906   005554  0F10               	addlw	16
 27907   005556  EC35  F05D         	call	_getNV
 27908   00555A  0100               	movlb	0	; () banked
 27909   00555C  518D               	movf	?_getNV& (0+255),w,b
 27910   00555E  0101               	movlb	1	; () banked
 27911   005560  6FDD               	movwf	processActions@nextType& (0+255),b
 27912                           
 27913                           ;../universalEvents.c: 272:             setOutputState(nextIo, nextAction->a.value, next
      +                          Type);
 27914   005562  EE20 F001          	lfsr	2,1
 27915   005566  51E1               	movf	processActions@nextAction& (0+255),w,b
 27916   005568  26D9               	addwf	fsr2l,f,c
 27917   00556A  51E2               	movf	(processActions@nextAction+1)& (0+255),w,b
 27918   00556C  22DA               	addwfc	fsr2h,f,c
 27919   00556E  50DF               	movf	indf2,w,c
 27920   005570  0100               	movlb	0	; () banked
 27921   005572  6F93               	movwf	setOutputState@act& (0+255),b
 27922   005574  C1DD  F094         	movff	processActions@nextType,setOutputState@type
 27923   005578  0101               	movlb	1	; () banked
 27924   00557A  51DE               	movf	processActions@nextIo& (0+255),w,b
 27925   00557C  EC46  F05A         	call	_setOutputState
 27926                           
 27927                           ;../universalEvents.c: 273:             if (needsStarting(nextIo, nextAction->a.value, n
      +                          extType)) {
 27928   005580  0101               	movlb	1	; () banked
 27929   005582  EE20 F001          	lfsr	2,1
 27930   005586  51E1               	movf	processActions@nextAction& (0+255),w,b
 27931   005588  26D9               	addwf	fsr2l,f,c
 27932   00558A  51E2               	movf	(processActions@nextAction+1)& (0+255),w,b
 27933   00558C  22DA               	addwfc	fsr2h,f,c
 27934   00558E  50DF               	movf	indf2,w,c
 27935   005590  0100               	movlb	0	; () banked
 27936   005592  6F8D               	movwf	needsStarting@act& (0+255),b
 27937   005594  C1DD  F08E         	movff	processActions@nextType,needsStarting@type
 27938   005598  0101               	movlb	1	; () banked
 27939   00559A  51DE               	movf	processActions@nextIo& (0+255),w,b
 27940   00559C  EC9F  F053         	call	_needsStarting
 27941   0055A0  0900               	iorlw	0
 27942   0055A2  B4D8               	btfsc	status,2,c
 27943   0055A4  D00E               	goto	l22006
 27944                           
 27945                           ;../universalEvents.c: 274:                 startOutput(nextIo, nextAction->a.value, nex
      +                          tType);
 27946   0055A6  0101               	movlb	1	; () banked
 27947   0055A8  EE20 F001          	lfsr	2,1
 27948   0055AC  51E1               	movf	processActions@nextAction& (0+255),w,b
 27949   0055AE  26D9               	addwf	fsr2l,f,c
 27950   0055B0  51E2               	movf	(processActions@nextAction+1)& (0+255),w,b
 27951   0055B2  22DA               	addwfc	fsr2h,f,c
 27952   0055B4  50DF               	movf	indf2,w,c
 27953   0055B6  6FD6               	movwf	startOutput@act& (0+255),b
 27954   0055B8  C1DD  F1D7         	movff	processActions@nextType,startOutput@type
 27955   0055BC  51DE               	movf	processActions@nextIo& (0+255),w,b
 27956   0055BE  EC3C  F059         	call	_startOutput
 27957   0055C2                     l22006:
 27958                           
 27959                           ;../universalEvents.c: 276:             if (completed(nextIo, nextAction, nextType)) {
 27960   0055C2  C1E1  F08D         	movff	processActions@nextAction,completed@action
 27961   0055C6  C1E2  F08E         	movff	processActions@nextAction+1,completed@action+1
 27962   0055CA  C1DD  F08F         	movff	processActions@nextType,completed@type
 27963   0055CE  0101               	movlb	1	; () banked
 27964   0055D0  51DE               	movf	processActions@nextIo& (0+255),w,b
 27965   0055D2  EC2B  F051         	call	_completed
 27966   0055D6  0900               	iorlw	0
 27967   0055D8  B4D8               	btfsc	status,2,c
 27968   0055DA  D004               	goto	l22010
 27969                           
 27970                           ;../universalEvents.c: 277:                 deleteTwoActionQueue(peekItem);
 27971   0055DC  0101               	movlb	1	; () banked
 27972   0055DE  51DB               	movf	processActions@peekItem& (0+255),w,b
 27973   0055E0  EC94  F052         	call	_deleteTwoActionQueue
 27974   0055E4                     l22010:
 27975                           
 27976                           ;../universalEvents.c: 279:             peekItem++;
 27977   0055E4  0101               	movlb	1	; () banked
 27978   0055E6  2BDB               	incf	processActions@peekItem& (0+255),f,b
 27979   0055E8                     l22012:
 27980                           
 27981                           ; BSR set to: 1
 27982                           ;../universalEvents.c: 254:         while (simultaneous) {
 27983   0055E8  51DA               	movf	processActions@simultaneous& (0+255),w,b
 27984   0055EA  A4D8               	btfss	status,2,c
 27985   0055EC  D771               	goto	l21986
 27986   0055EE                     u23580:
 27987                           
 27988                           ; BSR set to: 1
 27989                           ;../universalEvents.c: 282:         if (completed(io, action, type)) {
 27990   0055EE  C1E3  F08D         	movff	processActions@action,completed@action
 27991   0055F2  C1E4  F08E         	movff	processActions@action+1,completed@action+1
 27992   0055F6  C1DC  F08F         	movff	processActions@type,completed@type
 27993   0055FA  51DF               	movf	processActions@io& (0+255),w,b
 27994   0055FC  EC2B  F051         	call	_completed
 27995   005600  0900               	iorlw	0
 27996   005602  B4D8               	btfsc	status,2,c
 27997   005604  0012               	return	
 27998   005606  D6AB               	goto	u23450
 27999   005608                     __end_of_processActions:
 28000                           	callstack 0
 28001                           
 28002 ;; *************** function _startOutput *****************
 28003 ;; Defined at:
 28004 ;;		line 69 in file "../outputs.c"
 28005 ;; Parameters:    Size  Location     Type
 28006 ;;  io              1    wreg     unsigned char 
 28007 ;;  act             1   33[BANK1 ] unsigned char 
 28008 ;;  type            1   34[BANK1 ] unsigned char 
 28009 ;; Auto vars:     Size  Location     Type
 28010 ;;  io              1   35[BANK1 ] unsigned char 
 28011 ;; Return value:  Size  Location     Type
 28012 ;;                  1    wreg      void 
 28013 ;; Registers used:
 28014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28015 ;; Tracked objects:
 28016 ;;		On entry : 0/0
 28017 ;;		On exit  : 0/0
 28018 ;;		Unchanged: 0/0
 28019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28020 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28021 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28023 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28024 ;;Total ram usage:        3 bytes
 28025 ;; Hardware stack levels used: 1
 28026 ;; Hardware stack levels required when called: 19
 28027 ;; This function calls:
 28028 ;;		_startBounceOutput
 28029 ;;		_startDigitalOutput
 28030 ;;		_startMultiOutput
 28031 ;;		_startServoOutput
 28032 ;; This function is called by:
 28033 ;;		_processActions
 28034 ;; This function uses a non-reentrant model
 28035 ;;
 28036                           
 28037                           	psect	text100
 28038   00B278                     __ptext100:
 28039                           	callstack 0
 28040   00B278                     _startOutput:
 28041                           	callstack 9
 28042                           
 28043                           ;incstack = 0
 28044                           ;startOutput@io stored from wreg
 28045   00B278  0101               	movlb	1	; () banked
 28046   00B27A  6FD8               	movwf	startOutput@io& (0+255),b
 28047                           
 28048                           ;../outputs.c: 70:     switch(type) {
 28049   00B27C  D018               	goto	l20632
 28050   00B27E                     l20614:
 28051                           
 28052                           ; BSR set to: 1
 28053                           ;../outputs.c: 75:             startDigitalOutput(io, act);
 28054   00B27E  C1D6  F1CE         	movff	startOutput@act,startDigitalOutput@state
 28055   00B282  51D8               	movf	startOutput@io& (0+255),w,b
 28056   00B284  EC63  F02C         	call	_startDigitalOutput
 28057   00B288  0012               	return	
 28058   00B28A                     l20618:
 28059                           
 28060                           ; BSR set to: 1
 28061                           ;../outputs.c: 79:             startBounceOutput(io, act);
 28062   00B28A  C1D6  F08D         	movff	startOutput@act,startBounceOutput@action
 28063   00B28E  51D8               	movf	startOutput@io& (0+255),w,b
 28064   00B290  ECB4  F057         	call	_startBounceOutput
 28065   00B294  0012               	return	
 28066   00B296                     l20622:
 28067                           
 28068                           ; BSR set to: 1
 28069                           ;../outputs.c: 84:             startServoOutput(io, act);
 28070   00B296  C1D6  F091         	movff	startOutput@act,startServoOutput@action
 28071   00B29A  51D8               	movf	startOutput@io& (0+255),w,b
 28072   00B29C  ECDD  F048         	call	_startServoOutput
 28073   00B2A0  0012               	return	
 28074   00B2A2                     l20626:
 28075                           
 28076                           ; BSR set to: 1
 28077                           ;../outputs.c: 89:             startMultiOutput(io, act);
 28078   00B2A2  C1D6  F091         	movff	startOutput@act,startMultiOutput@action
 28079   00B2A6  51D8               	movf	startOutput@io& (0+255),w,b
 28080   00B2A8  EC9C  F04D         	call	_startMultiOutput
 28081   00B2AC  0012               	return	
 28082   00B2AE                     l20632:
 28083   00B2AE  0101               	movlb	1	; () banked
 28084   00B2B0  51D7               	movf	startOutput@type& (0+255),w,b
 28085                           
 28086                           ; Switch size 1, requested type "simple"
 28087                           ; Number of cases is 5, Range of values is 0 to 4
 28088                           ; switch strategies available:
 28089                           ; Name         Instructions Cycles
 28090                           ; simple_byte           16     9 (average)
 28091                           ;	Chosen strategy is simple_byte
 28092   00B2B2  0A00               	xorlw	0	; case 0
 28093   00B2B4  B4D8               	btfsc	status,2,c
 28094   00B2B6  0012               	return	
 28095   00B2B8  0A01               	xorlw	1	; case 1
 28096   00B2BA  B4D8               	btfsc	status,2,c
 28097   00B2BC  D7E0               	goto	l20614
 28098   00B2BE  0A03               	xorlw	3	; case 2
 28099   00B2C0  B4D8               	btfsc	status,2,c
 28100   00B2C2  D7E9               	goto	l20622
 28101   00B2C4  0A01               	xorlw	1	; case 3
 28102   00B2C6  B4D8               	btfsc	status,2,c
 28103   00B2C8  D7E0               	goto	l20618
 28104   00B2CA  0A07               	xorlw	7	; case 4
 28105   00B2CC  A4D8               	btfss	status,2,c
 28106   00B2CE  0012               	return	
 28107   00B2D0  D7E8               	goto	l20626
 28108   00B2D2                     __end_of_startOutput:
 28109                           	callstack 0
 28110                           
 28111 ;; *************** function _startServoOutput *****************
 28112 ;; Defined at:
 28113 ;;		line 538 in file "../servo.c"
 28114 ;; Parameters:    Size  Location     Type
 28115 ;;  io              1    wreg     unsigned char 
 28116 ;;  action          1   49[BANK0 ] unsigned char 
 28117 ;; Auto vars:     Size  Location     Type
 28118 ;;  io              1   51[BANK0 ] unsigned char 
 28119 ;; Return value:  Size  Location     Type
 28120 ;;                  1    wreg      void 
 28121 ;; Registers used:
 28122 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28123 ;; Tracked objects:
 28124 ;;		On entry : 0/0
 28125 ;;		On exit  : 0/0
 28126 ;;		Unchanged: 0/0
 28127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28128 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28129 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28130 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28131 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28132 ;;Total ram usage:        3 bytes
 28133 ;; Hardware stack levels used: 1
 28134 ;; Hardware stack levels required when called: 13
 28135 ;; This function calls:
 28136 ;;		_getNV
 28137 ;; This function is called by:
 28138 ;;		_APP_nvValueChanged
 28139 ;;		_startOutput
 28140 ;; This function uses a non-reentrant model
 28141 ;;
 28142                           
 28143                           	psect	text101
 28144   0091BA                     __ptext101:
 28145                           	callstack 0
 28146   0091BA                     _startServoOutput:
 28147                           	callstack 13
 28148                           
 28149                           ;incstack = 0
 28150                           ;startServoOutput@io stored from wreg
 28151   0091BA  0100               	movlb	0	; () banked
 28152   0091BC  6F93               	movwf	startServoOutput@io& (0+255),b
 28153                           
 28154                           ;../servo.c: 539:     switch (action) {
 28155   0091BE  D017               	goto	l19304
 28156   0091C0                     l19298:
 28157                           
 28158                           ; BSR set to: 0
 28159                           ;../servo.c: 541:             stepsPerPollSpeed[io] = (uint8_t)getNV((16 + 7*(io) + 5));
 28160   0091C0  5193               	movf	startServoOutput@io& (0+255),w,b
 28161   0091C2  0D07               	mullw	7
 28162   0091C4  50F3               	movf	243,w,c
 28163   0091C6  0F15               	addlw	21
 28164   0091C8  EC35  F05D         	call	_getNV
 28165   0091CC  D006               	goto	L9
 28166   0091CE                     l19300:
 28167                           
 28168                           ; BSR set to: 0
 28169                           ;../servo.c: 544:             stepsPerPollSpeed[io] = (uint8_t)getNV((16 + 7*(io) + 4));
 28170   0091CE  5193               	movf	startServoOutput@io& (0+255),w,b
 28171   0091D0  0D07               	mullw	7
 28172   0091D2  50F3               	movf	243,w,c
 28173   0091D4  0F14               	addlw	20
 28174   0091D6  EC35  F05D         	call	_getNV
 28175   0091DA                     L9:
 28176   0091DA  0E20               	movlw	low _stepsPerPollSpeed
 28177   0091DC  0100               	movlb	0	; () banked
 28178   0091DE  2593               	addwf	startServoOutput@io& (0+255),w,b
 28179   0091E0  6ED9               	movwf	fsr2l,c
 28180   0091E2  6ADA               	clrf	fsr2h,c
 28181   0091E4  0E01               	movlw	high _stepsPerPollSpeed
 28182   0091E6  22DA               	addwfc	fsr2h,f,c
 28183   0091E8  C08D  FFDF         	movff	?_getNV,indf2
 28184                           
 28185                           ;../servo.c: 545:             break;
 28186   0091EC  D008               	goto	l19306
 28187   0091EE                     l19304:
 28188   0091EE  0100               	movlb	0	; () banked
 28189   0091F0  5191               	movf	startServoOutput@action& (0+255),w,b
 28190                           
 28191                           ; Switch size 1, requested type "simple"
 28192                           ; Number of cases is 2, Range of values is 1 to 2
 28193                           ; switch strategies available:
 28194                           ; Name         Instructions Cycles
 28195                           ; simple_byte            7     4 (average)
 28196                           ;	Chosen strategy is simple_byte
 28197   0091F2  0A01               	xorlw	1	; case 1
 28198   0091F4  B4D8               	btfsc	status,2,c
 28199   0091F6  D7EB               	goto	l19300
 28200   0091F8  0A03               	xorlw	3	; case 2
 28201   0091FA  B4D8               	btfsc	status,2,c
 28202   0091FC  D7E1               	goto	l19298
 28203   0091FE                     l19306:
 28204                           
 28205                           ; BSR set to: 0
 28206                           ;../servo.c: 547:     if (stepsPerPollSpeed[io] > 234) {
 28207   0091FE  0E20               	movlw	low _stepsPerPollSpeed
 28208   009200  2593               	addwf	startServoOutput@io& (0+255),w,b
 28209   009202  6ED9               	movwf	fsr2l,c
 28210   009204  6ADA               	clrf	fsr2h,c
 28211   009206  0E01               	movlw	high _stepsPerPollSpeed
 28212   009208  22DA               	addwfc	fsr2h,f,c
 28213   00920A  0EEA               	movlw	234
 28214   00920C  64DF               	cpfsgt	indf2,c
 28215   00920E  D00E               	goto	l19310
 28216                           
 28217                           ; BSR set to: 0
 28218                           ;../servo.c: 548:         stepsPerPollSpeed[io] -= 234;
 28219   009210  0E20               	movlw	low _stepsPerPollSpeed
 28220   009212  2593               	addwf	startServoOutput@io& (0+255),w,b
 28221   009214  6ED9               	movwf	fsr2l,c
 28222   009216  6ADA               	clrf	fsr2h,c
 28223   009218  0E01               	movlw	high _stepsPerPollSpeed
 28224   00921A  22DA               	addwfc	fsr2h,f,c
 28225   00921C  0EEA               	movlw	234
 28226   00921E  5EDF               	subwf	indf2,f,c
 28227                           
 28228                           ;../servo.c: 549:         pollsPerStepSpeed[io] = 0;
 28229   009220  0E54               	movlw	low _pollsPerStepSpeed
 28230   009222  2593               	addwf	startServoOutput@io& (0+255),w,b
 28231   009224  6ED9               	movwf	fsr2l,c
 28232   009226  6ADA               	clrf	fsr2h,c
 28233   009228  0E02               	movlw	high _pollsPerStepSpeed
 28234   00922A  D01E               	goto	L10
 28235   00922C                     l19310:
 28236                           
 28237                           ; BSR set to: 0
 28238                           ;../servo.c: 551:         pollsPerStepSpeed[io] = 234 - stepsPerPollSpeed[io] +1;
 28239   00922C  0E54               	movlw	low _pollsPerStepSpeed
 28240   00922E  2593               	addwf	startServoOutput@io& (0+255),w,b
 28241   009230  6ED9               	movwf	fsr2l,c
 28242   009232  6ADA               	clrf	fsr2h,c
 28243   009234  0E02               	movlw	high _pollsPerStepSpeed
 28244   009236  22DA               	addwfc	fsr2h,f,c
 28245   009238  0E20               	movlw	low _stepsPerPollSpeed
 28246   00923A  2593               	addwf	startServoOutput@io& (0+255),w,b
 28247   00923C  6EE1               	movwf	fsr1l,c
 28248   00923E  6AE2               	clrf	fsr1h,c
 28249   009240  0E01               	movlw	high _stepsPerPollSpeed
 28250   009242  22E2               	addwfc	fsr1h,f,c
 28251   009244  50E7               	movf	indf1,w,c
 28252   009246  6F92               	movwf	??_startServoOutput& (0+255),b
 28253   009248  5192               	movf	??_startServoOutput& (0+255),w,b
 28254   00924A  08EB               	sublw	235
 28255   00924C  6EDF               	movwf	indf2,c
 28256                           
 28257                           ; BSR set to: 0
 28258                           ;../servo.c: 552:         pollCount[io] = 1;
 28259   00924E  0E44               	movlw	low _pollCount
 28260   009250  2593               	addwf	startServoOutput@io& (0+255),w,b
 28261   009252  6ED9               	movwf	fsr2l,c
 28262   009254  6ADA               	clrf	fsr2h,c
 28263   009256  0E02               	movlw	high _pollCount
 28264   009258  22DA               	addwfc	fsr2h,f,c
 28265   00925A  0E01               	movlw	1
 28266   00925C  6EDF               	movwf	indf2,c
 28267                           
 28268                           ; BSR set to: 0
 28269                           ;../servo.c: 553:         stepsPerPollSpeed[io] = 0;
 28270   00925E  0E20               	movlw	low _stepsPerPollSpeed
 28271   009260  2593               	addwf	startServoOutput@io& (0+255),w,b
 28272   009262  6ED9               	movwf	fsr2l,c
 28273   009264  6ADA               	clrf	fsr2h,c
 28274   009266  0E01               	movlw	high _stepsPerPollSpeed
 28275   009268                     L10:
 28276   009268  22DA               	addwfc	fsr2h,f,c
 28277   00926A  6ADF               	clrf	indf2,c
 28278                           
 28279                           ; BSR set to: 0
 28280                           ;../servo.c: 555:     servoState[io] = SS_STARTING;
 28281   00926C  0E30               	movlw	low _servoState
 28282   00926E  2593               	addwf	startServoOutput@io& (0+255),w,b
 28283   009270  6ED9               	movwf	fsr2l,c
 28284   009272  6ADA               	clrf	fsr2h,c
 28285   009274  0E01               	movlw	high _servoState
 28286   009276  22DA               	addwfc	fsr2h,f,c
 28287   009278  0E03               	movlw	3
 28288   00927A  6EDF               	movwf	indf2,c
 28289                           
 28290                           ; BSR set to: 0
 28291   00927C  0012               	return		;funcret
 28292   00927E                     __end_of_startServoOutput:
 28293                           	callstack 0
 28294                           
 28295 ;; *************** function _startMultiOutput *****************
 28296 ;; Defined at:
 28297 ;;		line 584 in file "../servo.c"
 28298 ;; Parameters:    Size  Location     Type
 28299 ;;  io              1    wreg     unsigned char 
 28300 ;;  action          1   49[BANK0 ] unsigned char 
 28301 ;; Auto vars:     Size  Location     Type
 28302 ;;  io              1   51[BANK0 ] unsigned char 
 28303 ;; Return value:  Size  Location     Type
 28304 ;;                  1    wreg      void 
 28305 ;; Registers used:
 28306 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 28307 ;; Tracked objects:
 28308 ;;		On entry : 0/0
 28309 ;;		On exit  : 0/0
 28310 ;;		Unchanged: 0/0
 28311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28312 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28313 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28314 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28315 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28316 ;;Total ram usage:        3 bytes
 28317 ;; Hardware stack levels used: 1
 28318 ;; Hardware stack levels required when called: 13
 28319 ;; This function calls:
 28320 ;;		_getNV
 28321 ;; This function is called by:
 28322 ;;		_APP_nvValueChanged
 28323 ;;		_startOutput
 28324 ;; This function uses a non-reentrant model
 28325 ;;
 28326                           
 28327                           	psect	text102
 28328   009B38                     __ptext102:
 28329                           	callstack 0
 28330   009B38                     _startMultiOutput:
 28331                           	callstack 13
 28332                           
 28333                           ; BSR set to: 0
 28334                           ;incstack = 0
 28335                           ;startMultiOutput@io stored from wreg
 28336   009B38  0100               	movlb	0	; () banked
 28337   009B3A  6F93               	movwf	startMultiOutput@io& (0+255),b
 28338                           
 28339                           ;../servo.c: 586:     stepsPerPollSpeed[io] = (uint8_t)getNV(3);
 28340   009B3C  0E03               	movlw	3
 28341   009B3E  EC35  F05D         	call	_getNV
 28342   009B42  0E20               	movlw	low _stepsPerPollSpeed
 28343   009B44  0100               	movlb	0	; () banked
 28344   009B46  2593               	addwf	startMultiOutput@io& (0+255),w,b
 28345   009B48  6ED9               	movwf	fsr2l,c
 28346   009B4A  6ADA               	clrf	fsr2h,c
 28347   009B4C  0E01               	movlw	high _stepsPerPollSpeed
 28348   009B4E  22DA               	addwfc	fsr2h,f,c
 28349   009B50  C08D  FFDF         	movff	?_getNV,indf2
 28350                           
 28351                           ; BSR set to: 0
 28352                           ;../servo.c: 587:     if (stepsPerPollSpeed[io] > 234) {
 28353   009B54  0E20               	movlw	low _stepsPerPollSpeed
 28354   009B56  2593               	addwf	startMultiOutput@io& (0+255),w,b
 28355   009B58  6ED9               	movwf	fsr2l,c
 28356   009B5A  6ADA               	clrf	fsr2h,c
 28357   009B5C  0E01               	movlw	high _stepsPerPollSpeed
 28358   009B5E  22DA               	addwfc	fsr2h,f,c
 28359   009B60  0EEA               	movlw	234
 28360   009B62  64DF               	cpfsgt	indf2,c
 28361   009B64  D00E               	goto	l19374
 28362                           
 28363                           ; BSR set to: 0
 28364                           ;../servo.c: 588:         stepsPerPollSpeed[io] -= 234;
 28365   009B66  0E20               	movlw	low _stepsPerPollSpeed
 28366   009B68  2593               	addwf	startMultiOutput@io& (0+255),w,b
 28367   009B6A  6ED9               	movwf	fsr2l,c
 28368   009B6C  6ADA               	clrf	fsr2h,c
 28369   009B6E  0E01               	movlw	high _stepsPerPollSpeed
 28370   009B70  22DA               	addwfc	fsr2h,f,c
 28371   009B72  0EEA               	movlw	234
 28372   009B74  5EDF               	subwf	indf2,f,c
 28373                           
 28374                           ;../servo.c: 589:         pollsPerStepSpeed[io] = 0;
 28375   009B76  0E54               	movlw	low _pollsPerStepSpeed
 28376   009B78  2593               	addwf	startMultiOutput@io& (0+255),w,b
 28377   009B7A  6ED9               	movwf	fsr2l,c
 28378   009B7C  6ADA               	clrf	fsr2h,c
 28379   009B7E  0E02               	movlw	high _pollsPerStepSpeed
 28380   009B80  D01E               	goto	L11
 28381   009B82                     l19374:
 28382                           
 28383                           ; BSR set to: 0
 28384                           ;../servo.c: 591:         pollsPerStepSpeed[io] = 234 - stepsPerPollSpeed[io] +1;
 28385   009B82  0E54               	movlw	low _pollsPerStepSpeed
 28386   009B84  2593               	addwf	startMultiOutput@io& (0+255),w,b
 28387   009B86  6ED9               	movwf	fsr2l,c
 28388   009B88  6ADA               	clrf	fsr2h,c
 28389   009B8A  0E02               	movlw	high _pollsPerStepSpeed
 28390   009B8C  22DA               	addwfc	fsr2h,f,c
 28391   009B8E  0E20               	movlw	low _stepsPerPollSpeed
 28392   009B90  2593               	addwf	startMultiOutput@io& (0+255),w,b
 28393   009B92  6EE1               	movwf	fsr1l,c
 28394   009B94  6AE2               	clrf	fsr1h,c
 28395   009B96  0E01               	movlw	high _stepsPerPollSpeed
 28396   009B98  22E2               	addwfc	fsr1h,f,c
 28397   009B9A  50E7               	movf	indf1,w,c
 28398   009B9C  6F92               	movwf	??_startMultiOutput& (0+255),b
 28399   009B9E  5192               	movf	??_startMultiOutput& (0+255),w,b
 28400   009BA0  08EB               	sublw	235
 28401   009BA2  6EDF               	movwf	indf2,c
 28402                           
 28403                           ; BSR set to: 0
 28404                           ;../servo.c: 592:         pollCount[io] = 1;
 28405   009BA4  0E44               	movlw	low _pollCount
 28406   009BA6  2593               	addwf	startMultiOutput@io& (0+255),w,b
 28407   009BA8  6ED9               	movwf	fsr2l,c
 28408   009BAA  6ADA               	clrf	fsr2h,c
 28409   009BAC  0E02               	movlw	high _pollCount
 28410   009BAE  22DA               	addwfc	fsr2h,f,c
 28411   009BB0  0E01               	movlw	1
 28412   009BB2  6EDF               	movwf	indf2,c
 28413                           
 28414                           ; BSR set to: 0
 28415                           ;../servo.c: 593:         stepsPerPollSpeed[io] = 0;
 28416   009BB4  0E20               	movlw	low _stepsPerPollSpeed
 28417   009BB6  2593               	addwf	startMultiOutput@io& (0+255),w,b
 28418   009BB8  6ED9               	movwf	fsr2l,c
 28419   009BBA  6ADA               	clrf	fsr2h,c
 28420   009BBC  0E01               	movlw	high _stepsPerPollSpeed
 28421   009BBE                     L11:
 28422   009BBE  22DA               	addwfc	fsr2h,f,c
 28423   009BC0  6ADF               	clrf	indf2,c
 28424                           
 28425                           ; BSR set to: 0
 28426                           ;../servo.c: 595:     servoState[io] = SS_STARTING;
 28427   009BC2  0E30               	movlw	low _servoState
 28428   009BC4  2593               	addwf	startMultiOutput@io& (0+255),w,b
 28429   009BC6  6ED9               	movwf	fsr2l,c
 28430   009BC8  6ADA               	clrf	fsr2h,c
 28431   009BCA  0E01               	movlw	high _servoState
 28432   009BCC  22DA               	addwfc	fsr2h,f,c
 28433   009BCE  0E03               	movlw	3
 28434   009BD0  6EDF               	movwf	indf2,c
 28435                           
 28436                           ; BSR set to: 0
 28437   009BD2  0012               	return		;funcret
 28438   009BD4                     __end_of_startMultiOutput:
 28439                           	callstack 0
 28440                           
 28441 ;; *************** function _startDigitalOutput *****************
 28442 ;; Defined at:
 28443 ;;		line 105 in file "../digitalOut.c"
 28444 ;; Parameters:    Size  Location     Type
 28445 ;;  io              1    wreg     unsigned char 
 28446 ;;  state           1   25[BANK1 ] unsigned char 
 28447 ;; Auto vars:     Size  Location     Type
 28448 ;;  io              1   32[BANK1 ] unsigned char 
 28449 ;;  actionState     1   31[BANK1 ] enum E12700
 28450 ;;  pinState        1   30[BANK1 ] enum E12700
 28451 ;; Return value:  Size  Location     Type
 28452 ;;                  1    wreg      void 
 28453 ;; Registers used:
 28454 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28455 ;; Tracked objects:
 28456 ;;		On entry : 0/0
 28457 ;;		On exit  : 0/0
 28458 ;;		Unchanged: 0/0
 28459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28460 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28461 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28462 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28463 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28464 ;;Total ram usage:        8 bytes
 28465 ;; Hardware stack levels used: 1
 28466 ;; Hardware stack levels required when called: 18
 28467 ;; This function calls:
 28468 ;;		_getNV
 28469 ;;		_sendInvertedProducedEvent
 28470 ;;		_setOutputPin
 28471 ;;		_writeNVM
 28472 ;; This function is called by:
 28473 ;;		_startOutput
 28474 ;; This function uses a non-reentrant model
 28475 ;;
 28476                           
 28477                           	psect	text103
 28478   0058C6                     __ptext103:
 28479                           	callstack 0
 28480   0058C6                     _startDigitalOutput:
 28481                           	callstack 9
 28482                           
 28483                           ; BSR set to: 0
 28484                           ;incstack = 0
 28485                           ;startDigitalOutput@io stored from wreg
 28486   0058C6  0101               	movlb	1	; () banked
 28487   0058C8  6FD5               	movwf	startDigitalOutput@io& (0+255),b
 28488                           
 28489                           ;../digitalOut.c: 106:     Boolean pinState;;../digitalOut.c: 107:     Boolean actionSta
      +                          te;;../digitalOut.c: 114:     if (state == 3) {
 28490   0058CA  0E03               	movlw	3
 28491   0058CC  0101               	movlb	1	; () banked
 28492   0058CE  19CE               	xorwf	startDigitalOutput@state& (0+255),w,b
 28493   0058D0  A4D8               	btfss	status,2,c
 28494   0058D2  D058               	goto	l19578
 28495                           
 28496                           ; BSR set to: 1
 28497                           ;../digitalOut.c: 115:         flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3));
 28498   0058D4  51D5               	movf	startDigitalOutput@io& (0+255),w,b
 28499   0058D6  0D07               	mullw	7
 28500   0058D8  50F3               	movf	243,w,c
 28501   0058DA  0F13               	addlw	19
 28502   0058DC  EC35  F05D         	call	_getNV
 28503   0058E0  0E94               	movlw	low _flashDelays
 28504   0058E2  0101               	movlb	1	; () banked
 28505   0058E4  25D5               	addwf	startDigitalOutput@io& (0+255),w,b
 28506   0058E6  6ED9               	movwf	fsr2l,c
 28507   0058E8  6ADA               	clrf	fsr2h,c
 28508   0058EA  0E02               	movlw	high _flashDelays
 28509   0058EC  22DA               	addwfc	fsr2h,f,c
 28510   0058EE  0100               	movlb	0	; () banked
 28511   0058F0  C08D  FFDF         	movff	?_getNV,indf2
 28512                           
 28513                           ; BSR set to: 0
 28514                           ;../digitalOut.c: 116:         pulseDelays[io] = 1;
 28515   0058F4  0EA4               	movlw	low _pulseDelays
 28516   0058F6  0101               	movlb	1	; () banked
 28517   0058F8  25D5               	addwf	startDigitalOutput@io& (0+255),w,b
 28518   0058FA  6ED9               	movwf	fsr2l,c
 28519   0058FC  6ADA               	clrf	fsr2h,c
 28520   0058FE  0E02               	movlw	high _pulseDelays
 28521   005900  22DA               	addwfc	fsr2h,f,c
 28522   005902  0E01               	movlw	1
 28523   005904  6EDF               	movwf	indf2,c
 28524                           
 28525                           ; BSR set to: 1
 28526                           ;../digitalOut.c: 117:         setOutputPin(io, ! getNV((16 + 7*(io) + 1) & 0x20));
 28527   005906  51D5               	movf	startDigitalOutput@io& (0+255),w,b
 28528   005908  0D07               	mullw	7
 28529   00590A  50F3               	movf	243,w,c
 28530   00590C  0F11               	addlw	17
 28531   00590E  0B20               	andlw	32
 28532   005910  EC35  F05D         	call	_getNV
 28533   005914  0100               	movlb	0	; () banked
 28534   005916  518D               	movf	?_getNV& (0+255),w,b
 28535   005918  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 28536   00591A  A4D8               	btfss	status,2,c
 28537   00591C  D002               	goto	u19770
 28538   00591E  0E01               	movlw	1
 28539   005920  D001               	goto	u19780
 28540   005922                     u19770:
 28541   005922  0E00               	movlw	0
 28542   005924                     u19780:
 28543   005924  6F91               	movwf	setOutputPin@state& (0+255),b
 28544   005926  0101               	movlb	1	; () banked
 28545   005928  51D5               	movf	startDigitalOutput@io& (0+255),w,b
 28546   00592A  EC7B  F037         	call	_setOutputPin
 28547                           
 28548                           ;../digitalOut.c: 118:         writeNVM(EEPROM_NVM_TYPE, (eeprom_address_t)((eeprom_addr
      +                          ess_t)((0x3FF -8))-25)+io, state);
 28549   00592E  0EDE               	movlw	222
 28550   005930  0101               	movlb	1	; () banked
 28551   005932  25D5               	addwf	startDigitalOutput@io& (0+255),w,b
 28552   005934  6FCF               	movwf	??_startDigitalOutput& (0+255),b
 28553   005936  6BD0               	clrf	(??_startDigitalOutput+1)& (0+255),b
 28554   005938  0E03               	movlw	3
 28555   00593A  23D0               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
 28556   00593C  C1CF  F0A4         	movff	??_startDigitalOutput,writeNVM@index
 28557   005940  C1D0  F0A5         	movff	??_startDigitalOutput+1,writeNVM@index+1
 28558   005944  0100               	movlb	0	; () banked
 28559   005946  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 28560   005948  C1CE  F0A7         	movff	startDigitalOutput@state,writeNVM@value
 28561   00594C  0E00               	movlw	0
 28562   00594E  EC66  F05B         	call	_writeNVM
 28563                           
 28564                           ;../digitalOut.c: 119:         sendInvertedProducedEvent(((8 + 4*(io))+0), EVENT_ON,
 28565   005952  0E01               	movlw	1
 28566   005954  0101               	movlb	1	; () banked
 28567   005956  6FC6               	movwf	sendInvertedProducedEvent@state& (0+255),b
 28568   005958  51D5               	movf	startDigitalOutput@io& (0+255),w,b
 28569   00595A  0D07               	mullw	7
 28570   00595C  50F3               	movf	243,w,c
 28571   00595E  0F11               	addlw	17
 28572   005960  EC35  F05D         	call	_getNV
 28573   005964  0100               	movlb	0	; () banked
 28574   005966  518D               	movf	?_getNV& (0+255),w,b
 28575   005968  0B40               	andlw	64
 28576   00596A  0101               	movlb	1	; () banked
 28577   00596C  6FC7               	movwf	sendInvertedProducedEvent@invert& (0+255),b
 28578   00596E  0E01               	movlw	1
 28579   005970  6FC8               	movwf	sendInvertedProducedEvent@can_send_on& (0+255),b
 28580   005972  0E01               	movlw	1
 28581   005974  6FC9               	movwf	sendInvertedProducedEvent@can_send_off& (0+255),b
 28582   005976  51D5               	movf	startDigitalOutput@io& (0+255),w,b
 28583   005978  0D04               	mullw	4
 28584   00597A  50F3               	movf	243,w,c
 28585   00597C  0F08               	addlw	8
 28586   00597E  ECFD  F05B         	call	_sendInvertedProducedEvent
 28587   005982  0012               	return	
 28588   005984                     l19578:
 28589                           
 28590                           ; BSR set to: 1
 28591                           ;../digitalOut.c: 123:     flashDelays[io] = 0;
 28592   005984  0E94               	movlw	low _flashDelays
 28593   005986  25D5               	addwf	startDigitalOutput@io& (0+255),w,b
 28594   005988  6ED9               	movwf	fsr2l,c
 28595   00598A  6ADA               	clrf	fsr2h,c
 28596   00598C  0E02               	movlw	high _flashDelays
 28597   00598E  22DA               	addwfc	fsr2h,f,c
 28598   005990  6ADF               	clrf	indf2,c
 28599                           
 28600                           ; BSR set to: 1
 28601                           ;../digitalOut.c: 125:     actionState = (state == 1);
 28602   005992  05CE               	decf	startDigitalOutput@state& (0+255),w,b
 28603   005994  A4D8               	btfss	status,2,c
 28604   005996  D002               	goto	u19790
 28605   005998  0E01               	movlw	1
 28606   00599A  D001               	goto	u19800
 28607   00599C                     u19790:
 28608   00599C  0E00               	movlw	0
 28609   00599E                     u19800:
 28610   00599E  6FD4               	movwf	startDigitalOutput@actionState& (0+255),b
 28611                           
 28612                           ; BSR set to: 1
 28613                           ;../digitalOut.c: 128:     if (getNV((16 + 7*(io) + 1)) & 0x01) {
 28614   0059A0  51D5               	movf	startDigitalOutput@io& (0+255),w,b
 28615   0059A2  0D07               	mullw	7
 28616   0059A4  50F3               	movf	243,w,c
 28617   0059A6  0F11               	addlw	17
 28618   0059A8  EC35  F05D         	call	_getNV
 28619   0059AC  0100               	movlb	0	; () banked
 28620   0059AE  A18D               	btfss	?_getNV& (0+255),0,b
 28621   0059B0  D008               	goto	l225
 28622                           
 28623                           ; BSR set to: 0
 28624                           ;../digitalOut.c: 129:         actionState = !actionState;
 28625   0059B2  0101               	movlb	1	; () banked
 28626   0059B4  51D4               	movf	startDigitalOutput@actionState& (0+255),w,b
 28627   0059B6  A4D8               	btfss	status,2,c
 28628   0059B8  D002               	goto	u19820
 28629   0059BA  0E01               	movlw	1
 28630   0059BC  D001               	goto	u19830
 28631   0059BE                     u19820:
 28632   0059BE  0E00               	movlw	0
 28633   0059C0                     u19830:
 28634   0059C0  6FD4               	movwf	startDigitalOutput@actionState& (0+255),b
 28635   0059C2                     l225:
 28636                           
 28637                           ;../digitalOut.c: 133:     if (( ! actionState) && getNV((16 + 7*(io) + 2))) {
 28638   0059C2  0101               	movlb	1	; () banked
 28639   0059C4  51D4               	movf	startDigitalOutput@actionState& (0+255),w,b
 28640   0059C6  A4D8               	btfss	status,2,c
 28641   0059C8  D00B               	goto	l19590
 28642                           
 28643                           ; BSR set to: 1
 28644   0059CA  51D5               	movf	startDigitalOutput@io& (0+255),w,b
 28645   0059CC  0D07               	mullw	7
 28646   0059CE  50F3               	movf	243,w,c
 28647   0059D0  0F12               	addlw	18
 28648   0059D2  EC35  F05D         	call	_getNV
 28649   0059D6  0100               	movlb	0	; () banked
 28650   0059D8  518D               	movf	?_getNV& (0+255),w,b
 28651   0059DA  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 28652   0059DC  A4D8               	btfss	status,2,c
 28653   0059DE  0012               	return	
 28654   0059E0                     l19590:
 28655                           
 28656                           ;../digitalOut.c: 139:     if ((actionState) && getNV((16 + 7*(io) + 2)) && (pulseDelays
      +                          [io] == 0)) {
 28657   0059E0  0101               	movlb	1	; () banked
 28658   0059E2  51D4               	movf	startDigitalOutput@actionState& (0+255),w,b
 28659   0059E4  B4D8               	btfsc	status,2,c
 28660   0059E6  D038               	goto	l19600
 28661                           
 28662                           ; BSR set to: 1
 28663   0059E8  51D5               	movf	startDigitalOutput@io& (0+255),w,b
 28664   0059EA  0D07               	mullw	7
 28665   0059EC  50F3               	movf	243,w,c
 28666   0059EE  0F12               	addlw	18
 28667   0059F0  EC35  F05D         	call	_getNV
 28668   0059F4  0100               	movlb	0	; () banked
 28669   0059F6  518D               	movf	?_getNV& (0+255),w,b
 28670   0059F8  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 28671   0059FA  B4D8               	btfsc	status,2,c
 28672   0059FC  D02D               	goto	l19600
 28673                           
 28674                           ; BSR set to: 0
 28675   0059FE  0EA4               	movlw	low _pulseDelays
 28676   005A00  0101               	movlb	1	; () banked
 28677   005A02  25D5               	addwf	startDigitalOutput@io& (0+255),w,b
 28678   005A04  6ED9               	movwf	fsr2l,c
 28679   005A06  6ADA               	clrf	fsr2h,c
 28680   005A08  0E02               	movlw	high _pulseDelays
 28681   005A0A  22DA               	addwfc	fsr2h,f,c
 28682   005A0C  50DF               	movf	indf2,w,c
 28683   005A0E  A4D8               	btfss	status,2,c
 28684   005A10  D023               	goto	l19600
 28685                           
 28686                           ; BSR set to: 1
 28687                           ;../digitalOut.c: 140:         pulseDelays[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 28688   005A12  51D5               	movf	startDigitalOutput@io& (0+255),w,b
 28689   005A14  0D07               	mullw	7
 28690   005A16  50F3               	movf	243,w,c
 28691   005A18  0F12               	addlw	18
 28692   005A1A  EC35  F05D         	call	_getNV
 28693   005A1E  0EA4               	movlw	low _pulseDelays
 28694   005A20  0101               	movlb	1	; () banked
 28695   005A22  25D5               	addwf	startDigitalOutput@io& (0+255),w,b
 28696   005A24  6ED9               	movwf	fsr2l,c
 28697   005A26  6ADA               	clrf	fsr2h,c
 28698   005A28  0E02               	movlw	high _pulseDelays
 28699   005A2A  22DA               	addwfc	fsr2h,f,c
 28700   005A2C  0100               	movlb	0	; () banked
 28701   005A2E  C08D  FFDF         	movff	?_getNV,indf2
 28702                           
 28703                           ; BSR set to: 0
 28704                           ;../digitalOut.c: 143:         writeNVM(EEPROM_NVM_TYPE, ((eeprom_address_t)((0x3FF -8))
      +                          -25)+io, 2);
 28705   005A32  0EDE               	movlw	222
 28706   005A34  0101               	movlb	1	; () banked
 28707   005A36  25D5               	addwf	startDigitalOutput@io& (0+255),w,b
 28708   005A38  6FCF               	movwf	??_startDigitalOutput& (0+255),b
 28709   005A3A  6BD0               	clrf	(??_startDigitalOutput+1)& (0+255),b
 28710   005A3C  0E03               	movlw	3
 28711   005A3E  23D0               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
 28712   005A40  C1CF  F0A4         	movff	??_startDigitalOutput,writeNVM@index
 28713   005A44  C1D0  F0A5         	movff	??_startDigitalOutput+1,writeNVM@index+1
 28714   005A48  0100               	movlb	0	; () banked
 28715   005A4A  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 28716   005A4C  0E02               	movlw	2
 28717   005A4E  6FA7               	movwf	writeNVM@value& (0+255),b
 28718   005A50  0E00               	movlw	0
 28719   005A52  EC66  F05B         	call	_writeNVM
 28720                           
 28721                           ;../digitalOut.c: 144:     } else {
 28722   005A56  D025               	goto	l19610
 28723   005A58                     l19600:
 28724                           
 28725                           ;../digitalOut.c: 145:         pulseDelays[io] = 1;
 28726   005A58  0EA4               	movlw	low _pulseDelays
 28727   005A5A  0101               	movlb	1	; () banked
 28728   005A5C  25D5               	addwf	startDigitalOutput@io& (0+255),w,b
 28729   005A5E  6ED9               	movwf	fsr2l,c
 28730   005A60  6ADA               	clrf	fsr2h,c
 28731   005A62  0E02               	movlw	high _pulseDelays
 28732   005A64  22DA               	addwfc	fsr2h,f,c
 28733   005A66  0E01               	movlw	1
 28734   005A68  6EDF               	movwf	indf2,c
 28735                           
 28736                           ; BSR set to: 1
 28737                           ;../digitalOut.c: 146:         writeNVM(EEPROM_NVM_TYPE, ((eeprom_address_t)((0x3FF -8))
      +                          -25)+io, actionState?1:2);
 28738   005A6A  51D4               	movf	startDigitalOutput@actionState& (0+255),w,b
 28739   005A6C  A4D8               	btfss	status,2,c
 28740   005A6E  D004               	goto	l19606
 28741                           
 28742                           ; BSR set to: 1
 28743   005A70  0E00               	movlw	0
 28744   005A72  6FD2               	movwf	(_startDigitalOutput$802+1)& (0+255),b
 28745   005A74  0E02               	movlw	2
 28746   005A76  D003               	goto	L12
 28747   005A78                     l19606:
 28748                           
 28749                           ; BSR set to: 1
 28750   005A78  0E00               	movlw	0
 28751   005A7A  6FD2               	movwf	(_startDigitalOutput$802+1)& (0+255),b
 28752   005A7C  0E01               	movlw	1
 28753   005A7E                     L12:
 28754   005A7E  6FD1               	movwf	_startDigitalOutput$802& (0+255),b
 28755                           
 28756                           ; BSR set to: 1
 28757   005A80  0EDE               	movlw	222
 28758   005A82  25D5               	addwf	startDigitalOutput@io& (0+255),w,b
 28759   005A84  6FCF               	movwf	??_startDigitalOutput& (0+255),b
 28760   005A86  6BD0               	clrf	(??_startDigitalOutput+1)& (0+255),b
 28761   005A88  0E03               	movlw	3
 28762   005A8A  23D0               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
 28763   005A8C  C1CF  F0A4         	movff	??_startDigitalOutput,writeNVM@index
 28764   005A90  C1D0  F0A5         	movff	??_startDigitalOutput+1,writeNVM@index+1
 28765   005A94  0100               	movlb	0	; () banked
 28766   005A96  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 28767   005A98  C1D1  F0A7         	movff	_startDigitalOutput$802,writeNVM@value
 28768   005A9C  0E00               	movlw	0
 28769   005A9E  EC66  F05B         	call	_writeNVM
 28770   005AA2                     l19610:
 28771                           
 28772                           ;../digitalOut.c: 149:     pinState = actionState;
 28773   005AA2  C1D4  F1D3         	movff	startDigitalOutput@actionState,startDigitalOutput@pinState
 28774                           
 28775                           ;../digitalOut.c: 150:     if (getNV((16 + 7*(io) + 1)) & 0x20) {
 28776   005AA6  0101               	movlb	1	; () banked
 28777   005AA8  51D5               	movf	startDigitalOutput@io& (0+255),w,b
 28778   005AAA  0D07               	mullw	7
 28779   005AAC  50F3               	movf	243,w,c
 28780   005AAE  0F11               	addlw	17
 28781   005AB0  EC35  F05D         	call	_getNV
 28782   005AB4  0100               	movlb	0	; () banked
 28783   005AB6  AB8D               	btfss	?_getNV& (0+255),5,b
 28784   005AB8  D008               	goto	l19616
 28785                           
 28786                           ; BSR set to: 0
 28787                           ;../digitalOut.c: 151:         pinState = !pinState;
 28788   005ABA  0101               	movlb	1	; () banked
 28789   005ABC  51D3               	movf	startDigitalOutput@pinState& (0+255),w,b
 28790   005ABE  A4D8               	btfss	status,2,c
 28791   005AC0  D002               	goto	u19910
 28792   005AC2  0E01               	movlw	1
 28793   005AC4  D001               	goto	u19920
 28794   005AC6                     u19910:
 28795   005AC6  0E00               	movlw	0
 28796   005AC8                     u19920:
 28797   005AC8  6FD3               	movwf	startDigitalOutput@pinState& (0+255),b
 28798   005ACA                     l19616:
 28799                           
 28800                           ;../digitalOut.c: 153:     setOutputPin(io, pinState);
 28801   005ACA  C1D3  F091         	movff	startDigitalOutput@pinState,setOutputPin@state
 28802   005ACE  0101               	movlb	1	; () banked
 28803   005AD0  51D5               	movf	startDigitalOutput@io& (0+255),w,b
 28804   005AD2  EC7B  F037         	call	_setOutputPin
 28805                           
 28806                           ;../digitalOut.c: 158:     if (getNV((16 + 7*(io) + 1)) & 0x08) {
 28807   005AD6  0101               	movlb	1	; () banked
 28808   005AD8  51D5               	movf	startDigitalOutput@io& (0+255),w,b
 28809   005ADA  0D07               	mullw	7
 28810   005ADC  50F3               	movf	243,w,c
 28811   005ADE  0F11               	addlw	17
 28812   005AE0  EC35  F05D         	call	_getNV
 28813   005AE4  0100               	movlb	0	; () banked
 28814   005AE6  A78D               	btfss	?_getNV& (0+255),3,b
 28815   005AE8  D021               	goto	l19624
 28816                           
 28817                           ; BSR set to: 0
 28818                           ;../digitalOut.c: 159:         if (actionState) {
 28819   005AEA  0101               	movlb	1	; () banked
 28820   005AEC  51D4               	movf	startDigitalOutput@actionState& (0+255),w,b
 28821   005AEE  B4D8               	btfsc	status,2,c
 28822   005AF0  0012               	return	
 28823                           
 28824                           ; BSR set to: 1
 28825                           ;../digitalOut.c: 162:             sendInvertedProducedEvent(((8 + 4*(io))+0), actionSta
      +                          te?EVENT_ON:EVENT_OFF,
 28826   005AF2  51D4               	movf	startDigitalOutput@actionState& (0+255),w,b
 28827   005AF4  B4D8               	btfsc	status,2,c
 28828   005AF6  D002               	goto	u19950
 28829   005AF8  0E01               	movlw	1
 28830   005AFA  D001               	goto	u19960
 28831   005AFC                     u19950:
 28832   005AFC  0E00               	movlw	0
 28833   005AFE                     u19960:
 28834   005AFE  6FC6               	movwf	sendInvertedProducedEvent@state& (0+255),b
 28835   005B00  51D5               	movf	startDigitalOutput@io& (0+255),w,b
 28836   005B02  0D07               	mullw	7
 28837   005B04  50F3               	movf	243,w,c
 28838   005B06  0F11               	addlw	17
 28839   005B08  EC35  F05D         	call	_getNV
 28840   005B0C  0100               	movlb	0	; () banked
 28841   005B0E  518D               	movf	?_getNV& (0+255),w,b
 28842   005B10  0B40               	andlw	64
 28843   005B12  0101               	movlb	1	; () banked
 28844   005B14  6FC7               	movwf	sendInvertedProducedEvent@invert& (0+255),b
 28845   005B16  0E01               	movlw	1
 28846   005B18  6FC8               	movwf	sendInvertedProducedEvent@can_send_on& (0+255),b
 28847   005B1A  0E01               	movlw	1
 28848   005B1C  6FC9               	movwf	sendInvertedProducedEvent@can_send_off& (0+255),b
 28849   005B1E  51D5               	movf	startDigitalOutput@io& (0+255),w,b
 28850   005B20  0D04               	mullw	4
 28851   005B22  50F3               	movf	243,w,c
 28852   005B24  0F08               	addlw	8
 28853   005B26  ECFD  F05B         	call	_sendInvertedProducedEvent
 28854   005B2A  0012               	return	
 28855   005B2C                     l19624:
 28856                           
 28857                           ; BSR set to: 0
 28858                           ;../digitalOut.c: 167:         sendInvertedProducedEvent(((8 + 4*(io))+0), actionState?E
      +                          VENT_ON:EVENT_OFF,
 28859   005B2C  0101               	movlb	1	; () banked
 28860   005B2E  51D4               	movf	startDigitalOutput@actionState& (0+255),w,b
 28861   005B30  B4D8               	btfsc	status,2,c
 28862   005B32  D002               	goto	u19970
 28863   005B34  0E01               	movlw	1
 28864   005B36  D001               	goto	u19980
 28865   005B38                     u19970:
 28866   005B38  0E00               	movlw	0
 28867   005B3A                     u19980:
 28868   005B3A  6FC6               	movwf	sendInvertedProducedEvent@state& (0+255),b
 28869   005B3C  51D5               	movf	startDigitalOutput@io& (0+255),w,b
 28870   005B3E  0D07               	mullw	7
 28871   005B40  50F3               	movf	243,w,c
 28872   005B42  0F11               	addlw	17
 28873   005B44  EC35  F05D         	call	_getNV
 28874   005B48  0100               	movlb	0	; () banked
 28875   005B4A  518D               	movf	?_getNV& (0+255),w,b
 28876   005B4C  0B40               	andlw	64
 28877   005B4E  0101               	movlb	1	; () banked
 28878   005B50  6FC7               	movwf	sendInvertedProducedEvent@invert& (0+255),b
 28879   005B52  0E01               	movlw	1
 28880   005B54  6FC8               	movwf	sendInvertedProducedEvent@can_send_on& (0+255),b
 28881   005B56  0E01               	movlw	1
 28882   005B58  6FC9               	movwf	sendInvertedProducedEvent@can_send_off& (0+255),b
 28883   005B5A  51D5               	movf	startDigitalOutput@io& (0+255),w,b
 28884   005B5C  0D04               	mullw	4
 28885   005B5E  50F3               	movf	243,w,c
 28886   005B60  0F08               	addlw	8
 28887   005B62  ECFD  F05B         	call	_sendInvertedProducedEvent
 28888   005B66  0012               	return		;funcret
 28889   005B68                     __end_of_startDigitalOutput:
 28890                           	callstack 0
 28891                           
 28892 ;; *************** function _sendInvertedProducedEvent *****************
 28893 ;; Defined at:
 28894 ;;		line 322 in file "../universalEvents.c"
 28895 ;; Parameters:    Size  Location     Type
 28896 ;;  happening       1    wreg     unsigned char 
 28897 ;;  state           1   17[BANK1 ] enum E12721
 28898 ;;  invert          1   18[BANK1 ] enum E12701
 28899 ;;  can_send_on     1   19[BANK1 ] enum E12701
 28900 ;;  can_send_off    1   20[BANK1 ] enum E12701
 28901 ;; Auto vars:     Size  Location     Type
 28902 ;;  happening       1   21[BANK1 ] unsigned char 
 28903 ;;  state_to_sen    1   24[BANK1 ] enum E12721
 28904 ;; Return value:  Size  Location     Type
 28905 ;;                  1    wreg      enum E12700
 28906 ;; Registers used:
 28907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28908 ;; Tracked objects:
 28909 ;;		On entry : 0/0
 28910 ;;		On exit  : 0/0
 28911 ;;		Unchanged: 0/0
 28912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28913 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28914 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28916 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28917 ;;Total ram usage:        8 bytes
 28918 ;; Hardware stack levels used: 1
 28919 ;; Hardware stack levels required when called: 17
 28920 ;; This function calls:
 28921 ;;		_sendProducedEvent
 28922 ;; This function is called by:
 28923 ;;		_startDigitalOutput
 28924 ;; This function uses a non-reentrant model
 28925 ;;
 28926                           
 28927                           	psect	text104
 28928   00B7FA                     __ptext104:
 28929                           	callstack 0
 28930   00B7FA                     _sendInvertedProducedEvent:
 28931                           	callstack 9
 28932                           
 28933                           ;incstack = 0
 28934                           ;sendInvertedProducedEvent@happening stored from wreg
 28935   00B7FA  0101               	movlb	1	; () banked
 28936   00B7FC  6FCA               	movwf	sendInvertedProducedEvent@happening& (0+255),b
 28937                           
 28938                           ;../universalEvents.c: 323:  EventState state_to_send = invert?!state:state;
 28939   00B7FE  0101               	movlb	1	; () banked
 28940   00B800  51C7               	movf	sendInvertedProducedEvent@invert& (0+255),w,b
 28941   00B802  A4D8               	btfss	status,2,c
 28942   00B804  D003               	goto	l19190
 28943                           
 28944                           ; BSR set to: 1
 28945   00B806  C1C6  F1CB         	movff	sendInvertedProducedEvent@state,_sendInvertedProducedEvent$1380
 28946   00B80A  D007               	goto	L13
 28947   00B80C                     l19190:
 28948                           
 28949                           ; BSR set to: 1
 28950   00B80C  51C6               	movf	sendInvertedProducedEvent@state& (0+255),w,b
 28951   00B80E  A4D8               	btfss	status,2,c
 28952   00B810  D002               	goto	u19370
 28953   00B812  0E01               	movlw	1
 28954   00B814  D001               	goto	u19380
 28955   00B816                     u19370:
 28956   00B816  0E00               	movlw	0
 28957   00B818                     u19380:
 28958   00B818  6FCB               	movwf	_sendInvertedProducedEvent$1380& (0+255),b
 28959   00B81A                     L13:
 28960   00B81A  6BCC               	clrf	(_sendInvertedProducedEvent$1380+1)& (0+255),b
 28961                           
 28962                           ; BSR set to: 1
 28963   00B81C  C1CB  F1CD         	movff	_sendInvertedProducedEvent$1380,sendInvertedProducedEvent@state_to_send
 28964                           
 28965                           ;../universalEvents.c: 324:  if ((state_to_send && can_send_on) || (!state_to_send && ca
      +                          n_send_off)) {
 28966   00B820  51CD               	movf	sendInvertedProducedEvent@state_to_send& (0+255),w,b
 28967   00B822  B4D8               	btfsc	status,2,c
 28968   00B824  D003               	goto	u19400
 28969                           
 28970                           ; BSR set to: 1
 28971   00B826  51C8               	movf	sendInvertedProducedEvent@can_send_on& (0+255),w,b
 28972   00B828  A4D8               	btfss	status,2,c
 28973   00B82A  D006               	goto	u19420
 28974   00B82C                     u19400:
 28975                           
 28976                           ; BSR set to: 1
 28977   00B82C  51CD               	movf	sendInvertedProducedEvent@state_to_send& (0+255),w,b
 28978   00B82E  A4D8               	btfss	status,2,c
 28979   00B830  0012               	return	
 28980                           
 28981                           ; BSR set to: 1
 28982   00B832  51C9               	movf	sendInvertedProducedEvent@can_send_off& (0+255),w,b
 28983   00B834  B4D8               	btfsc	status,2,c
 28984   00B836  0012               	return	
 28985   00B838                     u19420:
 28986                           
 28987                           ; BSR set to: 1
 28988                           ;../universalEvents.c: 325:   return sendProducedEvent(happening, state_to_send);;	Retur
      +                          n value of _sendInvertedProducedEvent is never used
 28989   00B838  C1CD  F1BE         	movff	sendInvertedProducedEvent@state_to_send,sendProducedEvent@onOff
 28990   00B83C  51CA               	movf	sendInvertedProducedEvent@happening& (0+255),w,b
 28991   00B83E  ECAD  F04C         	call	_sendProducedEvent
 28992   00B842  0012               	return		;funcret
 28993   00B844                     __end_of_sendInvertedProducedEvent:
 28994                           	callstack 0
 28995                           
 28996 ;; *************** function _startBounceOutput *****************
 28997 ;; Defined at:
 28998 ;;		line 566 in file "../servo.c"
 28999 ;; Parameters:    Size  Location     Type
 29000 ;;  io              1    wreg     unsigned char 
 29001 ;;  action          1   45[BANK0 ] unsigned char 
 29002 ;; Auto vars:     Size  Location     Type
 29003 ;;  io              1   46[BANK0 ] unsigned char 
 29004 ;; Return value:  Size  Location     Type
 29005 ;;                  1    wreg      void 
 29006 ;; Registers used:
 29007 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29008 ;; Tracked objects:
 29009 ;;		On entry : 0/0
 29010 ;;		On exit  : 0/0
 29011 ;;		Unchanged: 0/0
 29012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29013 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29014 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29016 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29017 ;;Total ram usage:        2 bytes
 29018 ;; Hardware stack levels used: 1
 29019 ;; Hardware stack levels required when called: 12
 29020 ;; This function calls:
 29021 ;;		Nothing
 29022 ;; This function is called by:
 29023 ;;		_APP_nvValueChanged
 29024 ;;		_startOutput
 29025 ;; This function uses a non-reentrant model
 29026 ;;
 29027                           
 29028                           	psect	text105
 29029   00AF68                     __ptext105:
 29030                           	callstack 0
 29031   00AF68                     _startBounceOutput:
 29032                           	callstack 14
 29033                           
 29034                           ;incstack = 0
 29035                           ;startBounceOutput@io stored from wreg
 29036   00AF68  0100               	movlb	0	; () banked
 29037   00AF6A  6F8E               	movwf	startBounceOutput@io& (0+255),b
 29038                           
 29039                           ;../servo.c: 567:     switch (action) {
 29040   00AF6C  D018               	goto	l19346
 29041   00AF6E                     l19340:
 29042                           
 29043                           ; BSR set to: 0
 29044                           ;../servo.c: 569:             speed[io] = 0;
 29045   00AF6E  518E               	movf	startBounceOutput@io& (0+255),w,b
 29046   00AF70  0D02               	mullw	2
 29047   00AF72  0E00               	movlw	low _speed
 29048   00AF74  24F3               	addwf	243,w,c
 29049   00AF76  6ED9               	movwf	fsr2l,c
 29050   00AF78  0E01               	movlw	high _speed
 29051   00AF7A  20F4               	addwfc	prodh,w,c
 29052   00AF7C  6EDA               	movwf	fsr2h,c
 29053   00AF7E  6ADE               	clrf	postinc2,c
 29054   00AF80  6ADD               	clrf	postdec2,c
 29055                           
 29056                           ;../servo.c: 570:             break;
 29057   00AF82  D015               	goto	l19348
 29058   00AF84                     l19342:
 29059                           
 29060                           ; BSR set to: 0
 29061                           ;../servo.c: 572:             speed[io] = 12;
 29062   00AF84  518E               	movf	startBounceOutput@io& (0+255),w,b
 29063   00AF86  0D02               	mullw	2
 29064   00AF88  0E00               	movlw	low _speed
 29065   00AF8A  24F3               	addwf	243,w,c
 29066   00AF8C  6ED9               	movwf	fsr2l,c
 29067   00AF8E  0E01               	movlw	high _speed
 29068   00AF90  20F4               	addwfc	prodh,w,c
 29069   00AF92  6EDA               	movwf	fsr2h,c
 29070   00AF94  0E0C               	movlw	12
 29071   00AF96  6EDE               	movwf	postinc2,c
 29072   00AF98  0E00               	movlw	0
 29073   00AF9A  6EDD               	movwf	postdec2,c
 29074                           
 29075                           ;../servo.c: 573:             break;
 29076   00AF9C  D008               	goto	l19348
 29077   00AF9E                     l19346:
 29078   00AF9E  0100               	movlb	0	; () banked
 29079   00AFA0  518D               	movf	startBounceOutput@action& (0+255),w,b
 29080                           
 29081                           ; Switch size 1, requested type "simple"
 29082                           ; Number of cases is 2, Range of values is 1 to 2
 29083                           ; switch strategies available:
 29084                           ; Name         Instructions Cycles
 29085                           ; simple_byte            7     4 (average)
 29086                           ;	Chosen strategy is simple_byte
 29087   00AFA2  0A01               	xorlw	1	; case 1
 29088   00AFA4  B4D8               	btfsc	status,2,c
 29089   00AFA6  D7EE               	goto	l19342
 29090   00AFA8  0A03               	xorlw	3	; case 2
 29091   00AFAA  B4D8               	btfsc	status,2,c
 29092   00AFAC  D7E0               	goto	l19340
 29093   00AFAE                     l19348:
 29094                           
 29095                           ; BSR set to: 0
 29096                           ;../servo.c: 575:     servoState[io] = SS_STARTING;
 29097   00AFAE  0E30               	movlw	low _servoState
 29098   00AFB0  258E               	addwf	startBounceOutput@io& (0+255),w,b
 29099   00AFB2  6ED9               	movwf	fsr2l,c
 29100   00AFB4  6ADA               	clrf	fsr2h,c
 29101   00AFB6  0E01               	movlw	high _servoState
 29102   00AFB8  22DA               	addwfc	fsr2h,f,c
 29103   00AFBA  0E03               	movlw	3
 29104   00AFBC  6EDF               	movwf	indf2,c
 29105                           
 29106                           ;../servo.c: 576:     loopCount[io] = 0;
 29107   00AFBE  0E34               	movlw	low _loopCount
 29108   00AFC0  258E               	addwf	startBounceOutput@io& (0+255),w,b
 29109   00AFC2  6ED9               	movwf	fsr2l,c
 29110   00AFC4  6ADA               	clrf	fsr2h,c
 29111   00AFC6  0E02               	movlw	high _loopCount
 29112   00AFC8  22DA               	addwfc	fsr2h,f,c
 29113   00AFCA  6ADF               	clrf	indf2,c
 29114                           
 29115                           ; BSR set to: 0
 29116   00AFCC  0012               	return		;funcret
 29117   00AFCE                     __end_of_startBounceOutput:
 29118                           	callstack 0
 29119                           
 29120 ;; *************** function _setOutputState *****************
 29121 ;; Defined at:
 29122 ;;		line 102 in file "../outputs.c"
 29123 ;; Parameters:    Size  Location     Type
 29124 ;;  io              1    wreg     unsigned char 
 29125 ;;  act             1   51[BANK0 ] unsigned char 
 29126 ;;  type            1   52[BANK0 ] unsigned char 
 29127 ;; Auto vars:     Size  Location     Type
 29128 ;;  io              1   53[BANK0 ] unsigned char 
 29129 ;; Return value:  Size  Location     Type
 29130 ;;                  1    wreg      void 
 29131 ;; Registers used:
 29132 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29133 ;; Tracked objects:
 29134 ;;		On entry : 0/0
 29135 ;;		On exit  : 0/0
 29136 ;;		Unchanged: 0/0
 29137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29138 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29139 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29141 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29142 ;;Total ram usage:        3 bytes
 29143 ;; Hardware stack levels used: 1
 29144 ;; Hardware stack levels required when called: 14
 29145 ;; This function calls:
 29146 ;;		_setBounceState
 29147 ;;		_setMultiState
 29148 ;;		_setServoState
 29149 ;; This function is called by:
 29150 ;;		_processActions
 29151 ;; This function uses a non-reentrant model
 29152 ;;
 29153                           
 29154                           	psect	text106
 29155   00B48C                     __ptext106:
 29156                           	callstack 0
 29157   00B48C                     _setOutputState:
 29158                           	callstack 14
 29159                           
 29160                           ; BSR set to: 0
 29161                           ;incstack = 0
 29162                           ;setOutputState@io stored from wreg
 29163   00B48C  0100               	movlb	0	; () banked
 29164   00B48E  6F95               	movwf	setOutputState@io& (0+255),b
 29165                           
 29166                           ;../outputs.c: 103:     switch(type) {
 29167   00B490  D012               	goto	l20582
 29168   00B492                     l20568:
 29169                           
 29170                           ; BSR set to: 0
 29171                           ;../outputs.c: 114:             setBounceState(io, act);
 29172   00B492  C093  F091         	movff	setOutputState@act,setBounceState@action
 29173   00B496  5195               	movf	setOutputState@io& (0+255),w,b
 29174   00B498  EC5C  F04B         	call	_setBounceState
 29175   00B49C  0012               	return	
 29176   00B49E                     l20572:
 29177                           
 29178                           ; BSR set to: 0
 29179                           ;../outputs.c: 119:             setServoState(io, act);
 29180   00B49E  C093  F091         	movff	setOutputState@act,setServoState@action
 29181   00B4A2  5195               	movf	setOutputState@io& (0+255),w,b
 29182   00B4A4  EC06  F04B         	call	_setServoState
 29183   00B4A8  0012               	return	
 29184   00B4AA                     l20576:
 29185                           
 29186                           ; BSR set to: 0
 29187                           ;../outputs.c: 124:             setMultiState(io, act);
 29188   00B4AA  C093  F091         	movff	setOutputState@act,setMultiState@action
 29189   00B4AE  5195               	movf	setOutputState@io& (0+255),w,b
 29190   00B4B0  ECAF  F045         	call	_setMultiState
 29191   00B4B4  0012               	return	
 29192   00B4B6                     l20582:
 29193   00B4B6  0100               	movlb	0	; () banked
 29194   00B4B8  5194               	movf	setOutputState@type& (0+255),w,b
 29195                           
 29196                           ; Switch size 1, requested type "simple"
 29197                           ; Number of cases is 7, Range of values is 0 to 6
 29198                           ; switch strategies available:
 29199                           ; Name         Instructions Cycles
 29200                           ; simple_byte           22    12 (average)
 29201                           ;	Chosen strategy is simple_byte
 29202   00B4BA  0A00               	xorlw	0	; case 0
 29203   00B4BC  B4D8               	btfsc	status,2,c
 29204   00B4BE  0012               	return	
 29205   00B4C0  0A01               	xorlw	1	; case 1
 29206   00B4C2  B4D8               	btfsc	status,2,c
 29207   00B4C4  0012               	return	
 29208   00B4C6  0A03               	xorlw	3	; case 2
 29209   00B4C8  B4D8               	btfsc	status,2,c
 29210   00B4CA  D7E9               	goto	l20572
 29211   00B4CC  0A01               	xorlw	1	; case 3
 29212   00B4CE  B4D8               	btfsc	status,2,c
 29213   00B4D0  D7E0               	goto	l20568
 29214   00B4D2  0A07               	xorlw	7	; case 4
 29215   00B4D4  B4D8               	btfsc	status,2,c
 29216   00B4D6  D7E9               	goto	l20576
 29217   00B4D8  0A01               	xorlw	1	; case 5
 29218   00B4DA  B4D8               	btfsc	status,2,c
 29219   00B4DC  0012               	return	
 29220   00B4DE  0A03               	xorlw	3	; case 6
 29221   00B4E0  0012               	return	
 29222   00B4E2                     __end_of_setOutputState:
 29223                           	callstack 0
 29224                           
 29225 ;; *************** function _setServoState *****************
 29226 ;; Defined at:
 29227 ;;		line 606 in file "../servo.c"
 29228 ;; Parameters:    Size  Location     Type
 29229 ;;  io              1    wreg     unsigned char 
 29230 ;;  action          1   49[BANK0 ] unsigned char 
 29231 ;; Auto vars:     Size  Location     Type
 29232 ;;  io              1   50[BANK0 ] unsigned char 
 29233 ;; Return value:  Size  Location     Type
 29234 ;;                  1    wreg      void 
 29235 ;; Registers used:
 29236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29237 ;; Tracked objects:
 29238 ;;		On entry : 0/0
 29239 ;;		On exit  : 0/0
 29240 ;;		Unchanged: 0/0
 29241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29242 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29243 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29245 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29246 ;;Total ram usage:        2 bytes
 29247 ;; Hardware stack levels used: 1
 29248 ;; Hardware stack levels required when called: 13
 29249 ;; This function calls:
 29250 ;;		_getNV
 29251 ;; This function is called by:
 29252 ;;		_APP_nvValueChanged
 29253 ;;		_setOutputState
 29254 ;; This function uses a non-reentrant model
 29255 ;;
 29256                           
 29257                           	psect	text107
 29258   00960C                     __ptext107:
 29259                           	callstack 0
 29260   00960C                     _setServoState:
 29261                           	callstack 13
 29262                           
 29263                           ;incstack = 0
 29264                           ;setServoState@io stored from wreg
 29265   00960C  0100               	movlb	0	; () banked
 29266   00960E  6F92               	movwf	setServoState@io& (0+255),b
 29267                           
 29268                           ;../servo.c: 607:     switch (action) {
 29269   009610  D04A               	goto	l19294
 29270   009612                     l19280:
 29271                           
 29272                           ; BSR set to: 0
 29273                           ;../servo.c: 609:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 29274   009612  5192               	movf	setServoState@io& (0+255),w,b
 29275   009614  0D07               	mullw	7
 29276   009616  50F3               	movf	243,w,c
 29277   009618  0F11               	addlw	17
 29278   00961A  EC35  F05D         	call	_getNV
 29279   00961E  0100               	movlb	0	; () banked
 29280   009620  A18D               	btfss	?_getNV& (0+255),0,b
 29281   009622  D00E               	goto	l19284
 29282                           
 29283                           ; BSR set to: 0
 29284                           ;../servo.c: 610:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 29285   009624  5192               	movf	setServoState@io& (0+255),w,b
 29286   009626  0D07               	mullw	7
 29287   009628  50F3               	movf	243,w,c
 29288   00962A  0F13               	addlw	19
 29289   00962C  EC35  F05D         	call	_getNV
 29290   009630  0100               	movlb	0	; () banked
 29291   009632  5192               	movf	setServoState@io& (0+255),w,b
 29292   009634  0F01               	addlw	low _targetPos
 29293   009636  6ED9               	movwf	fsr2l,c
 29294   009638  6ADA               	clrf	fsr2h,c
 29295   00963A  C08D  FFDF         	movff	?_getNV,indf2
 29296                           
 29297                           ;../servo.c: 611:             } else {
 29298   00963E  0012               	return	
 29299   009640                     l19284:
 29300                           
 29301                           ; BSR set to: 0
 29302                           ;../servo.c: 612:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 29303   009640  5192               	movf	setServoState@io& (0+255),w,b
 29304   009642  0D07               	mullw	7
 29305   009644  50F3               	movf	243,w,c
 29306   009646  0F12               	addlw	18
 29307   009648  EC35  F05D         	call	_getNV
 29308   00964C  0100               	movlb	0	; () banked
 29309   00964E  5192               	movf	setServoState@io& (0+255),w,b
 29310   009650  0F01               	addlw	low _targetPos
 29311   009652  6ED9               	movwf	fsr2l,c
 29312   009654  6ADA               	clrf	fsr2h,c
 29313   009656  C08D  FFDF         	movff	?_getNV,indf2
 29314   00965A  0012               	return	
 29315   00965C                     l19286:
 29316                           
 29317                           ; BSR set to: 0
 29318                           ;../servo.c: 616:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 29319   00965C  5192               	movf	setServoState@io& (0+255),w,b
 29320   00965E  0D07               	mullw	7
 29321   009660  50F3               	movf	243,w,c
 29322   009662  0F11               	addlw	17
 29323   009664  EC35  F05D         	call	_getNV
 29324   009668  0100               	movlb	0	; () banked
 29325   00966A  A18D               	btfss	?_getNV& (0+255),0,b
 29326   00966C  D00E               	goto	l19290
 29327                           
 29328                           ; BSR set to: 0
 29329                           ;../servo.c: 617:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 29330   00966E  5192               	movf	setServoState@io& (0+255),w,b
 29331   009670  0D07               	mullw	7
 29332   009672  50F3               	movf	243,w,c
 29333   009674  0F12               	addlw	18
 29334   009676  EC35  F05D         	call	_getNV
 29335   00967A  0100               	movlb	0	; () banked
 29336   00967C  5192               	movf	setServoState@io& (0+255),w,b
 29337   00967E  0F01               	addlw	low _targetPos
 29338   009680  6ED9               	movwf	fsr2l,c
 29339   009682  6ADA               	clrf	fsr2h,c
 29340   009684  C08D  FFDF         	movff	?_getNV,indf2
 29341                           
 29342                           ;../servo.c: 618:             } else {
 29343   009688  0012               	return	
 29344   00968A                     l19290:
 29345                           
 29346                           ; BSR set to: 0
 29347                           ;../servo.c: 619:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 29348   00968A  5192               	movf	setServoState@io& (0+255),w,b
 29349   00968C  0D07               	mullw	7
 29350   00968E  50F3               	movf	243,w,c
 29351   009690  0F13               	addlw	19
 29352   009692  EC35  F05D         	call	_getNV
 29353   009696  0100               	movlb	0	; () banked
 29354   009698  5192               	movf	setServoState@io& (0+255),w,b
 29355   00969A  0F01               	addlw	low _targetPos
 29356   00969C  6ED9               	movwf	fsr2l,c
 29357   00969E  6ADA               	clrf	fsr2h,c
 29358   0096A0  C08D  FFDF         	movff	?_getNV,indf2
 29359   0096A4  0012               	return	
 29360   0096A6                     l19294:
 29361   0096A6  0100               	movlb	0	; () banked
 29362   0096A8  5191               	movf	setServoState@action& (0+255),w,b
 29363                           
 29364                           ; Switch size 1, requested type "simple"
 29365                           ; Number of cases is 2, Range of values is 1 to 2
 29366                           ; switch strategies available:
 29367                           ; Name         Instructions Cycles
 29368                           ; simple_byte            7     4 (average)
 29369                           ;	Chosen strategy is simple_byte
 29370   0096AA  0A01               	xorlw	1	; case 1
 29371   0096AC  B4D8               	btfsc	status,2,c
 29372   0096AE  D7D6               	goto	l19286
 29373   0096B0  0A03               	xorlw	3	; case 2
 29374   0096B2  A4D8               	btfss	status,2,c
 29375   0096B4  0012               	return	
 29376   0096B6  D7AD               	goto	l19280
 29377   0096B8                     __end_of_setServoState:
 29378                           	callstack 0
 29379                           
 29380 ;; *************** function _setMultiState *****************
 29381 ;; Defined at:
 29382 ;;		line 657 in file "../servo.c"
 29383 ;; Parameters:    Size  Location     Type
 29384 ;;  io              1    wreg     unsigned char 
 29385 ;;  action          1   49[BANK0 ] unsigned char 
 29386 ;; Auto vars:     Size  Location     Type
 29387 ;;  io              1   50[BANK0 ] unsigned char 
 29388 ;; Return value:  Size  Location     Type
 29389 ;;                  1    wreg      void 
 29390 ;; Registers used:
 29391 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29392 ;; Tracked objects:
 29393 ;;		On entry : 0/0
 29394 ;;		On exit  : 0/0
 29395 ;;		Unchanged: 0/0
 29396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29397 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29398 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29400 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29401 ;;Total ram usage:        2 bytes
 29402 ;; Hardware stack levels used: 1
 29403 ;; Hardware stack levels required when called: 13
 29404 ;; This function calls:
 29405 ;;		_getNV
 29406 ;; This function is called by:
 29407 ;;		_APP_nvValueChanged
 29408 ;;		_setOutputState
 29409 ;; This function uses a non-reentrant model
 29410 ;;
 29411                           
 29412                           	psect	text108
 29413   008B5E                     __ptext108:
 29414                           	callstack 0
 29415   008B5E                     _setMultiState:
 29416                           	callstack 13
 29417                           
 29418                           ; BSR set to: 0
 29419                           ;incstack = 0
 29420                           ;setMultiState@io stored from wreg
 29421   008B5E  0100               	movlb	0	; () banked
 29422   008B60  6F92               	movwf	setMultiState@io& (0+255),b
 29423                           
 29424                           ;../servo.c: 658:     switch (action) {
 29425   008B62  D056               	goto	l19366
 29426   008B64                     l19352:
 29427                           
 29428                           ; BSR set to: 0
 29429                           ;../servo.c: 660:             targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 29430   008B64  5192               	movf	setMultiState@io& (0+255),w,b
 29431   008B66  0D07               	mullw	7
 29432   008B68  50F3               	movf	243,w,c
 29433   008B6A  0F13               	addlw	19
 29434   008B6C  EC35  F05D         	call	_getNV
 29435   008B70  0100               	movlb	0	; () banked
 29436   008B72  5192               	movf	setMultiState@io& (0+255),w,b
 29437   008B74  0F01               	addlw	low _targetPos
 29438   008B76  6ED9               	movwf	fsr2l,c
 29439   008B78  6ADA               	clrf	fsr2h,c
 29440   008B7A  C08D  FFDF         	movff	?_getNV,indf2
 29441                           
 29442                           ;../servo.c: 661:             break;
 29443   008B7E  0012               	return	
 29444   008B80                     l19354:
 29445                           
 29446                           ; BSR set to: 0
 29447                           ;../servo.c: 663:             targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 4));
 29448   008B80  5192               	movf	setMultiState@io& (0+255),w,b
 29449   008B82  0D07               	mullw	7
 29450   008B84  50F3               	movf	243,w,c
 29451   008B86  0F14               	addlw	20
 29452   008B88  EC35  F05D         	call	_getNV
 29453   008B8C  0100               	movlb	0	; () banked
 29454   008B8E  5192               	movf	setMultiState@io& (0+255),w,b
 29455   008B90  0F01               	addlw	low _targetPos
 29456   008B92  6ED9               	movwf	fsr2l,c
 29457   008B94  6ADA               	clrf	fsr2h,c
 29458   008B96  C08D  FFDF         	movff	?_getNV,indf2
 29459                           
 29460                           ;../servo.c: 664:             break;
 29461   008B9A  0012               	return	
 29462   008B9C                     l19356:
 29463                           
 29464                           ; BSR set to: 0
 29465                           ;../servo.c: 666:             if (getNV((16 + 7*(io) + 2)) >= 3) {
 29466   008B9C  5192               	movf	setMultiState@io& (0+255),w,b
 29467   008B9E  0D07               	mullw	7
 29468   008BA0  50F3               	movf	243,w,c
 29469   008BA2  0F12               	addlw	18
 29470   008BA4  EC35  F05D         	call	_getNV
 29471   008BA8  0100               	movlb	0	; () banked
 29472   008BAA  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 29473   008BAC  0012               	return	
 29474   008BAE  518E               	movf	(?_getNV+1)& (0+255),w,b
 29475   008BB0  E104               	bnz	u19530
 29476   008BB2  0E03               	movlw	3
 29477   008BB4  5D8D               	subwf	?_getNV& (0+255),w,b
 29478   008BB6  A0D8               	btfss	status,0,c
 29479   008BB8  0012               	return	
 29480   008BBA                     u19530:
 29481                           
 29482                           ; BSR set to: 0
 29483                           ;../servo.c: 667:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 5));
 29484   008BBA  5192               	movf	setMultiState@io& (0+255),w,b
 29485   008BBC  0D07               	mullw	7
 29486   008BBE  50F3               	movf	243,w,c
 29487   008BC0  0F15               	addlw	21
 29488   008BC2  EC35  F05D         	call	_getNV
 29489   008BC6  0100               	movlb	0	; () banked
 29490   008BC8  5192               	movf	setMultiState@io& (0+255),w,b
 29491   008BCA  0F01               	addlw	low _targetPos
 29492   008BCC  6ED9               	movwf	fsr2l,c
 29493   008BCE  6ADA               	clrf	fsr2h,c
 29494   008BD0  C08D  FFDF         	movff	?_getNV,indf2
 29495   008BD4  0012               	return	
 29496   008BD6                     l19360:
 29497                           
 29498                           ; BSR set to: 0
 29499                           ;../servo.c: 671:             if (getNV((16 + 7*(io) + 2)) >= 4) {
 29500   008BD6  5192               	movf	setMultiState@io& (0+255),w,b
 29501   008BD8  0D07               	mullw	7
 29502   008BDA  50F3               	movf	243,w,c
 29503   008BDC  0F12               	addlw	18
 29504   008BDE  EC35  F05D         	call	_getNV
 29505   008BE2  0100               	movlb	0	; () banked
 29506   008BE4  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 29507   008BE6  0012               	return	
 29508   008BE8  518E               	movf	(?_getNV+1)& (0+255),w,b
 29509   008BEA  E104               	bnz	u19540
 29510   008BEC  0E04               	movlw	4
 29511   008BEE  5D8D               	subwf	?_getNV& (0+255),w,b
 29512   008BF0  A0D8               	btfss	status,0,c
 29513   008BF2  0012               	return	
 29514   008BF4                     u19540:
 29515                           
 29516                           ; BSR set to: 0
 29517                           ;../servo.c: 672:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 6));
 29518   008BF4  5192               	movf	setMultiState@io& (0+255),w,b
 29519   008BF6  0D07               	mullw	7
 29520   008BF8  50F3               	movf	243,w,c
 29521   008BFA  0F16               	addlw	22
 29522   008BFC  EC35  F05D         	call	_getNV
 29523   008C00  0100               	movlb	0	; () banked
 29524   008C02  5192               	movf	setMultiState@io& (0+255),w,b
 29525   008C04  0F01               	addlw	low _targetPos
 29526   008C06  6ED9               	movwf	fsr2l,c
 29527   008C08  6ADA               	clrf	fsr2h,c
 29528   008C0A  C08D  FFDF         	movff	?_getNV,indf2
 29529   008C0E  0012               	return	
 29530   008C10                     l19366:
 29531   008C10  0100               	movlb	0	; () banked
 29532   008C12  5191               	movf	setMultiState@action& (0+255),w,b
 29533                           
 29534                           ; Switch size 1, requested type "simple"
 29535                           ; Number of cases is 4, Range of values is 0 to 3
 29536                           ; switch strategies available:
 29537                           ; Name         Instructions Cycles
 29538                           ; simple_byte           13     7 (average)
 29539                           ;	Chosen strategy is simple_byte
 29540   008C14  0A00               	xorlw	0	; case 0
 29541   008C16  B4D8               	btfsc	status,2,c
 29542   008C18  D7A5               	goto	l19352
 29543   008C1A  0A01               	xorlw	1	; case 1
 29544   008C1C  B4D8               	btfsc	status,2,c
 29545   008C1E  D7B0               	goto	l19354
 29546   008C20  0A03               	xorlw	3	; case 2
 29547   008C22  B4D8               	btfsc	status,2,c
 29548   008C24  D7BB               	goto	l19356
 29549   008C26  0A01               	xorlw	1	; case 3
 29550   008C28  A4D8               	btfss	status,2,c
 29551   008C2A  0012               	return	
 29552   008C2C  D7D4               	goto	l19360
 29553   008C2E                     __end_of_setMultiState:
 29554                           	callstack 0
 29555                           
 29556 ;; *************** function _setBounceState *****************
 29557 ;; Defined at:
 29558 ;;		line 633 in file "../servo.c"
 29559 ;; Parameters:    Size  Location     Type
 29560 ;;  io              1    wreg     unsigned char 
 29561 ;;  action          1   49[BANK0 ] unsigned char 
 29562 ;; Auto vars:     Size  Location     Type
 29563 ;;  io              1   50[BANK0 ] unsigned char 
 29564 ;; Return value:  Size  Location     Type
 29565 ;;                  1    wreg      void 
 29566 ;; Registers used:
 29567 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29568 ;; Tracked objects:
 29569 ;;		On entry : 0/0
 29570 ;;		On exit  : 0/0
 29571 ;;		Unchanged: 0/0
 29572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29573 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29574 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29576 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29577 ;;Total ram usage:        2 bytes
 29578 ;; Hardware stack levels used: 1
 29579 ;; Hardware stack levels required when called: 13
 29580 ;; This function calls:
 29581 ;;		_getNV
 29582 ;; This function is called by:
 29583 ;;		_APP_nvValueChanged
 29584 ;;		_setOutputState
 29585 ;; This function uses a non-reentrant model
 29586 ;;
 29587                           
 29588                           	psect	text109
 29589   0096B8                     __ptext109:
 29590                           	callstack 0
 29591   0096B8                     _setBounceState:
 29592                           	callstack 13
 29593                           
 29594                           ; BSR set to: 0
 29595                           ;incstack = 0
 29596                           ;setBounceState@io stored from wreg
 29597   0096B8  0100               	movlb	0	; () banked
 29598   0096BA  6F92               	movwf	setBounceState@io& (0+255),b
 29599                           
 29600                           ;../servo.c: 634:     switch (action) {
 29601   0096BC  D04A               	goto	l19336
 29602   0096BE                     l19322:
 29603                           
 29604                           ; BSR set to: 0
 29605                           ;../servo.c: 636:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 29606   0096BE  5192               	movf	setBounceState@io& (0+255),w,b
 29607   0096C0  0D07               	mullw	7
 29608   0096C2  50F3               	movf	243,w,c
 29609   0096C4  0F11               	addlw	17
 29610   0096C6  EC35  F05D         	call	_getNV
 29611   0096CA  0100               	movlb	0	; () banked
 29612   0096CC  A18D               	btfss	?_getNV& (0+255),0,b
 29613   0096CE  D00E               	goto	l19326
 29614                           
 29615                           ; BSR set to: 0
 29616                           ;../servo.c: 637:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 29617   0096D0  5192               	movf	setBounceState@io& (0+255),w,b
 29618   0096D2  0D07               	mullw	7
 29619   0096D4  50F3               	movf	243,w,c
 29620   0096D6  0F12               	addlw	18
 29621   0096D8  EC35  F05D         	call	_getNV
 29622   0096DC  0100               	movlb	0	; () banked
 29623   0096DE  5192               	movf	setBounceState@io& (0+255),w,b
 29624   0096E0  0F01               	addlw	low _targetPos
 29625   0096E2  6ED9               	movwf	fsr2l,c
 29626   0096E4  6ADA               	clrf	fsr2h,c
 29627   0096E6  C08D  FFDF         	movff	?_getNV,indf2
 29628                           
 29629                           ;../servo.c: 638:             } else {
 29630   0096EA  0012               	return	
 29631   0096EC                     l19326:
 29632                           
 29633                           ; BSR set to: 0
 29634                           ;../servo.c: 639:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 29635   0096EC  5192               	movf	setBounceState@io& (0+255),w,b
 29636   0096EE  0D07               	mullw	7
 29637   0096F0  50F3               	movf	243,w,c
 29638   0096F2  0F13               	addlw	19
 29639   0096F4  EC35  F05D         	call	_getNV
 29640   0096F8  0100               	movlb	0	; () banked
 29641   0096FA  5192               	movf	setBounceState@io& (0+255),w,b
 29642   0096FC  0F01               	addlw	low _targetPos
 29643   0096FE  6ED9               	movwf	fsr2l,c
 29644   009700  6ADA               	clrf	fsr2h,c
 29645   009702  C08D  FFDF         	movff	?_getNV,indf2
 29646   009706  0012               	return	
 29647   009708                     l19328:
 29648                           
 29649                           ; BSR set to: 0
 29650                           ;../servo.c: 643:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 29651   009708  5192               	movf	setBounceState@io& (0+255),w,b
 29652   00970A  0D07               	mullw	7
 29653   00970C  50F3               	movf	243,w,c
 29654   00970E  0F11               	addlw	17
 29655   009710  EC35  F05D         	call	_getNV
 29656   009714  0100               	movlb	0	; () banked
 29657   009716  A18D               	btfss	?_getNV& (0+255),0,b
 29658   009718  D00E               	goto	l19332
 29659                           
 29660                           ; BSR set to: 0
 29661                           ;../servo.c: 644:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 29662   00971A  5192               	movf	setBounceState@io& (0+255),w,b
 29663   00971C  0D07               	mullw	7
 29664   00971E  50F3               	movf	243,w,c
 29665   009720  0F13               	addlw	19
 29666   009722  EC35  F05D         	call	_getNV
 29667   009726  0100               	movlb	0	; () banked
 29668   009728  5192               	movf	setBounceState@io& (0+255),w,b
 29669   00972A  0F01               	addlw	low _targetPos
 29670   00972C  6ED9               	movwf	fsr2l,c
 29671   00972E  6ADA               	clrf	fsr2h,c
 29672   009730  C08D  FFDF         	movff	?_getNV,indf2
 29673                           
 29674                           ;../servo.c: 645:             } else {
 29675   009734  0012               	return	
 29676   009736                     l19332:
 29677                           
 29678                           ; BSR set to: 0
 29679                           ;../servo.c: 646:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 29680   009736  5192               	movf	setBounceState@io& (0+255),w,b
 29681   009738  0D07               	mullw	7
 29682   00973A  50F3               	movf	243,w,c
 29683   00973C  0F12               	addlw	18
 29684   00973E  EC35  F05D         	call	_getNV
 29685   009742  0100               	movlb	0	; () banked
 29686   009744  5192               	movf	setBounceState@io& (0+255),w,b
 29687   009746  0F01               	addlw	low _targetPos
 29688   009748  6ED9               	movwf	fsr2l,c
 29689   00974A  6ADA               	clrf	fsr2h,c
 29690   00974C  C08D  FFDF         	movff	?_getNV,indf2
 29691   009750  0012               	return	
 29692   009752                     l19336:
 29693   009752  0100               	movlb	0	; () banked
 29694   009754  5191               	movf	setBounceState@action& (0+255),w,b
 29695                           
 29696                           ; Switch size 1, requested type "simple"
 29697                           ; Number of cases is 2, Range of values is 1 to 2
 29698                           ; switch strategies available:
 29699                           ; Name         Instructions Cycles
 29700                           ; simple_byte            7     4 (average)
 29701                           ;	Chosen strategy is simple_byte
 29702   009756  0A01               	xorlw	1	; case 1
 29703   009758  B4D8               	btfsc	status,2,c
 29704   00975A  D7D6               	goto	l19328
 29705   00975C  0A03               	xorlw	3	; case 2
 29706   00975E  A4D8               	btfss	status,2,c
 29707   009760  0012               	return	
 29708   009762  D7AD               	goto	l19322
 29709   009764                     __end_of_setBounceState:
 29710                           	callstack 0
 29711                           
 29712 ;; *************** function _needsStarting *****************
 29713 ;; Defined at:
 29714 ;;		line 167 in file "../outputs.c"
 29715 ;; Parameters:    Size  Location     Type
 29716 ;;  io              1    wreg     unsigned char 
 29717 ;;  act             1   45[BANK0 ] unsigned char 
 29718 ;;  type            1   46[BANK0 ] unsigned char 
 29719 ;; Auto vars:     Size  Location     Type
 29720 ;;  io              1   49[BANK0 ] unsigned char 
 29721 ;; Return value:  Size  Location     Type
 29722 ;;                  1    wreg      enum E12701
 29723 ;; Registers used:
 29724 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 29725 ;; Tracked objects:
 29726 ;;		On entry : 0/0
 29727 ;;		On exit  : 0/0
 29728 ;;		Unchanged: 0/0
 29729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29730 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29731 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29732 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29733 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29734 ;;Total ram usage:        5 bytes
 29735 ;; Hardware stack levels used: 1
 29736 ;; Hardware stack levels required when called: 12
 29737 ;; This function calls:
 29738 ;;		Nothing
 29739 ;; This function is called by:
 29740 ;;		_processActions
 29741 ;; This function uses a non-reentrant model
 29742 ;;
 29743                           
 29744                           	psect	text110
 29745   00A73E                     __ptext110:
 29746                           	callstack 0
 29747   00A73E                     _needsStarting:
 29748                           	callstack 16
 29749                           
 29750                           ; BSR set to: 0
 29751                           ;incstack = 0
 29752                           ;needsStarting@io stored from wreg
 29753   00A73E  0100               	movlb	0	; () banked
 29754   00A740  6F91               	movwf	needsStarting@io& (0+255),b
 29755                           
 29756                           ;../outputs.c: 168:     switch(type) {
 29757   00A742  D02B               	goto	l20606
 29758   00A744                     l20586:
 29759                           
 29760                           ; BSR set to: 0
 29761                           ;../outputs.c: 171:             return FALSE;
 29762   00A744  0E00               	movlw	0
 29763   00A746  0012               	return	
 29764   00A748                     l20590:
 29765                           
 29766                           ; BSR set to: 0
 29767                           ;../outputs.c: 177:             return (pulseDelays[io] == 0);
 29768   00A748  0EA4               	movlw	low _pulseDelays
 29769   00A74A  2591               	addwf	needsStarting@io& (0+255),w,b
 29770   00A74C  6ED9               	movwf	fsr2l,c
 29771   00A74E  6ADA               	clrf	fsr2h,c
 29772   00A750  0E02               	movlw	high _pulseDelays
 29773   00A752  22DA               	addwfc	fsr2h,f,c
 29774   00A754  50DF               	movf	indf2,w,c
 29775   00A756  A4D8               	btfss	status,2,c
 29776   00A758  D002               	goto	u21370
 29777   00A75A  0E01               	movlw	1
 29778   00A75C  0012               	return	
 29779   00A75E                     u21370:
 29780   00A75E  0E00               	movlw	0
 29781   00A760  0012               	return	
 29782   00A762                     l20594:
 29783                           
 29784                           ; BSR set to: 0
 29785                           ;../outputs.c: 187:             if (targetPos[io] == currentPos[io]) {
 29786   00A762  0E40               	movlw	low _currentPos
 29787   00A764  2591               	addwf	needsStarting@io& (0+255),w,b
 29788   00A766  6ED9               	movwf	fsr2l,c
 29789   00A768  6ADA               	clrf	fsr2h,c
 29790   00A76A  0E01               	movlw	high _currentPos
 29791   00A76C  22DA               	addwfc	fsr2h,f,c
 29792   00A76E  5191               	movf	needsStarting@io& (0+255),w,b
 29793   00A770  0F01               	addlw	low _targetPos
 29794   00A772  6EE1               	movwf	fsr1l,c
 29795   00A774  6AE2               	clrf	fsr1h,c
 29796   00A776  50DE               	movf	postinc2,w,c
 29797   00A778  18E6               	xorwf	postinc1,w,c
 29798   00A77A  B4D8               	btfsc	status,2,c
 29799   00A77C  D7E3               	goto	l20586
 29800                           
 29801                           ; BSR set to: 0
 29802                           ;../outputs.c: 191:             return (servoState[io] != SS_MOVING);
 29803   00A77E  0E30               	movlw	low _servoState
 29804   00A780  2591               	addwf	needsStarting@io& (0+255),w,b
 29805   00A782  6ED9               	movwf	fsr2l,c
 29806   00A784  6ADA               	clrf	fsr2h,c
 29807   00A786  0E01               	movlw	high _servoState
 29808   00A788  22DA               	addwfc	fsr2h,f,c
 29809   00A78A  0E02               	movlw	2
 29810   00A78C  18DE               	xorwf	postinc2,w,c
 29811   00A78E  B4D8               	btfsc	status,2,c
 29812   00A790  D002               	goto	u21400
 29813   00A792  0E01               	movlw	1
 29814   00A794  0012               	return	
 29815   00A796                     u21400:
 29816   00A796  0E00               	movlw	0
 29817   00A798  0012               	return	
 29818   00A79A                     l20606:
 29819   00A79A  0100               	movlb	0	; () banked
 29820   00A79C  518E               	movf	needsStarting@type& (0+255),w,b
 29821                           
 29822                           ; Switch size 1, requested type "simple"
 29823                           ; Number of cases is 5, Range of values is 0 to 4
 29824                           ; switch strategies available:
 29825                           ; Name         Instructions Cycles
 29826                           ; simple_byte           16     9 (average)
 29827                           ;	Chosen strategy is simple_byte
 29828   00A79E  0A00               	xorlw	0	; case 0
 29829   00A7A0  B4D8               	btfsc	status,2,c
 29830   00A7A2  D7D0               	goto	l20586
 29831   00A7A4  0A01               	xorlw	1	; case 1
 29832   00A7A6  B4D8               	btfsc	status,2,c
 29833   00A7A8  D7CF               	goto	l20590
 29834   00A7AA  0A03               	xorlw	3	; case 2
 29835   00A7AC  B4D8               	btfsc	status,2,c
 29836   00A7AE  D7D9               	goto	l20594
 29837   00A7B0  0A01               	xorlw	1	; case 3
 29838   00A7B2  B4D8               	btfsc	status,2,c
 29839   00A7B4  D7D6               	goto	l20594
 29840   00A7B6  0A07               	xorlw	7	; case 4
 29841   00A7B8  B4D8               	btfsc	status,2,c
 29842   00A7BA  D7D3               	goto	l20594
 29843                           
 29844                           ; BSR set to: 0
 29845                           ;../outputs.c: 194:     return TRUE;
 29846   00A7BC  0E01               	movlw	1
 29847                           
 29848                           ; BSR set to: 0
 29849   00A7BE  0012               	return		;funcret
 29850   00A7C0                     __end_of_needsStarting:
 29851                           	callstack 0
 29852                           
 29853 ;; *************** function _getTwoAction *****************
 29854 ;; Defined at:
 29855 ;;		line 357 in file "../event_consumerDualActionQueue.c"
 29856 ;; Parameters:    Size  Location     Type
 29857 ;;		None
 29858 ;; Auto vars:     Size  Location     Type
 29859 ;;		None
 29860 ;; Return value:  Size  Location     Type
 29861 ;;                  2   49[BANK0 ] PTR struct .
 29862 ;; Registers used:
 29863 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 29864 ;; Tracked objects:
 29865 ;;		On entry : 0/0
 29866 ;;		On exit  : 0/0
 29867 ;;		Unchanged: 0/0
 29868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29869 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29872 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29873 ;;Total ram usage:        2 bytes
 29874 ;; Hardware stack levels used: 1
 29875 ;; Hardware stack levels required when called: 13
 29876 ;; This function calls:
 29877 ;;		_peekTwoActionQueue
 29878 ;; This function is called by:
 29879 ;;		_processActions
 29880 ;; This function uses a non-reentrant model
 29881 ;;
 29882                           
 29883                           	psect	text111
 29884   00C338                     __ptext111:
 29885                           	callstack 0
 29886   00C338                     _getTwoAction:
 29887                           	callstack 15
 29888                           
 29889                           ;../event_consumerDualActionQueue.c: 358:  return peekTwoActionQueue(0);
 29890                           
 29891                           ; BSR set to: 0
 29892                           ;incstack = 0
 29893   00C338  0E00               	movlw	0
 29894   00C33A  ECE1  F050         	call	_peekTwoActionQueue
 29895   00C33E  C08D  F091         	movff	?_peekTwoActionQueue,?_getTwoAction
 29896   00C342  C08E  F092         	movff	?_peekTwoActionQueue+1,?_getTwoAction+1
 29897   00C346  0012               	return		;funcret
 29898   00C348                     __end_of_getTwoAction:
 29899                           	callstack 0
 29900                           
 29901 ;; *************** function _peekTwoActionQueue *****************
 29902 ;; Defined at:
 29903 ;;		line 396 in file "../event_consumerDualActionQueue.c"
 29904 ;; Parameters:    Size  Location     Type
 29905 ;;  index           1    wreg     unsigned char 
 29906 ;; Auto vars:     Size  Location     Type
 29907 ;;  index           1   48[BANK0 ] unsigned char 
 29908 ;;  qty             1   47[BANK0 ] unsigned char 
 29909 ;; Return value:  Size  Location     Type
 29910 ;;                  2   45[BANK0 ] PTR struct .
 29911 ;; Registers used:
 29912 ;;		wreg, status,2, status,0, prodl, prodh
 29913 ;; Tracked objects:
 29914 ;;		On entry : 0/0
 29915 ;;		On exit  : 0/0
 29916 ;;		Unchanged: 0/0
 29917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29918 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29919 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29921 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29922 ;;Total ram usage:        4 bytes
 29923 ;; Hardware stack levels used: 1
 29924 ;; Hardware stack levels required when called: 12
 29925 ;; This function calls:
 29926 ;;		Nothing
 29927 ;; This function is called by:
 29928 ;;		_getTwoAction
 29929 ;;		_processActions
 29930 ;; This function uses a non-reentrant model
 29931 ;;
 29932                           
 29933                           	psect	text112
 29934   00A1C2                     __ptext112:
 29935                           	callstack 0
 29936   00A1C2                     _peekTwoActionQueue:
 29937                           	callstack 16
 29938                           
 29939                           ;incstack = 0
 29940                           ;peekTwoActionQueue@index stored from wreg
 29941   00A1C2  0100               	movlb	0	; () banked
 29942   00A1C4  6F90               	movwf	peekTwoActionQueue@index& (0+255),b
 29943                           
 29944                           ;../event_consumerDualActionQueue.c: 397:     uint8_t qty;;../event_consumerDualActionQu
      +                          eue.c: 398:     qty = (expeditedWriteIndex - expeditedReadIndex) & (8 -1);
 29945   00A1C6  0100               	movlb	0	; () banked
 29946   00A1C8  51C7               	movf	_expeditedReadIndex& (0+255),w,b
 29947   00A1CA  5DC6               	subwf	_expeditedWriteIndex& (0+255),w,b
 29948   00A1CC  0B07               	andlw	7
 29949   00A1CE  6F8F               	movwf	peekTwoActionQueue@qty& (0+255),b
 29950                           
 29951                           ;../event_consumerDualActionQueue.c: 399:     if (index < qty) {
 29952   00A1D0  518F               	movf	peekTwoActionQueue@qty& (0+255),w,b
 29953   00A1D2  5D90               	subwf	peekTwoActionQueue@index& (0+255),w,b
 29954   00A1D4  B0D8               	btfsc	status,0,c
 29955   00A1D6  D01D               	goto	l19658
 29956                           
 29957                           ; BSR set to: 0
 29958                           ;../event_consumerDualActionQueue.c: 400:         if (expeditedReadIndex == expeditedWri
      +                          teIndex) return ((void*)0);
 29959   00A1D8  51C6               	movf	_expeditedWriteIndex& (0+255),w,b
 29960   00A1DA  19C7               	xorwf	_expeditedReadIndex& (0+255),w,b
 29961   00A1DC  A4D8               	btfss	status,2,c
 29962   00A1DE  D005               	goto	l19646
 29963   00A1E0                     u20020:
 29964                           
 29965                           ; BSR set to: 0
 29966   00A1E0  0E00               	movlw	0
 29967   00A1E2  6F8D               	movwf	?_peekTwoActionQueue& (0+255),b
 29968   00A1E4  0E00               	movlw	0
 29969   00A1E6  6F8E               	movwf	(?_peekTwoActionQueue+1)& (0+255),b
 29970   00A1E8  0012               	return	
 29971   00A1EA                     l19646:
 29972                           
 29973                           ; BSR set to: 0
 29974                           ;../event_consumerDualActionQueue.c: 401:         index += expeditedReadIndex;
 29975   00A1EA  51C7               	movf	_expeditedReadIndex& (0+255),w,b
 29976   00A1EC  2790               	addwf	peekTwoActionQueue@index& (0+255),f,b
 29977                           
 29978                           ;../event_consumerDualActionQueue.c: 402:         if (index >= 8) {
 29979   00A1EE  0E07               	movlw	7
 29980   00A1F0  6590               	cpfsgt	peekTwoActionQueue@index& (0+255),b
 29981   00A1F2  D002               	goto	l496
 29982                           
 29983                           ; BSR set to: 0
 29984                           ;../event_consumerDualActionQueue.c: 403:             index -= 8;
 29985   00A1F4  0E08               	movlw	8
 29986   00A1F6  5F90               	subwf	peekTwoActionQueue@index& (0+255),f,b
 29987   00A1F8                     l496:
 29988                           
 29989                           ; BSR set to: 0
 29990                           ;../event_consumerDualActionQueue.c: 405:         if (index == expeditedWriteIndex) retu
      +                          rn ((void*)0);
 29991   00A1F8  51C6               	movf	_expeditedWriteIndex& (0+255),w,b
 29992   00A1FA  1990               	xorwf	peekTwoActionQueue@index& (0+255),w,b
 29993   00A1FC  B4D8               	btfsc	status,2,c
 29994   00A1FE  D7F0               	goto	u20020
 29995                           
 29996                           ; BSR set to: 0
 29997                           ;../event_consumerDualActionQueue.c: 406:         return &(expeditedQueueBuf[index]);
 29998   00A200  5190               	movf	peekTwoActionQueue@index& (0+255),w,b
 29999   00A202  0D02               	mullw	2
 30000   00A204  0EB4               	movlw	low _expeditedQueueBuf
 30001   00A206  24F3               	addwf	243,w,c
 30002   00A208  6F8D               	movwf	?_peekTwoActionQueue& (0+255),b
 30003   00A20A  0E02               	movlw	high _expeditedQueueBuf
 30004   00A20C  20F4               	addwfc	prodh,w,c
 30005   00A20E  6F8E               	movwf	(?_peekTwoActionQueue+1)& (0+255),b
 30006   00A210  0012               	return	
 30007   00A212                     l19658:
 30008                           
 30009                           ; BSR set to: 0
 30010                           ;../event_consumerDualActionQueue.c: 408:     index -= qty;
 30011   00A212  518F               	movf	peekTwoActionQueue@qty& (0+255),w,b
 30012   00A214  5F90               	subwf	peekTwoActionQueue@index& (0+255),f,b
 30013                           
 30014                           ;../event_consumerDualActionQueue.c: 409:     qty = (normalWriteIndex - normalReadIndex)
      +                           & (64 -1);
 30015   00A216  51C9               	movf	_normalReadIndex& (0+255),w,b
 30016   00A218  5DC8               	subwf	_normalWriteIndex& (0+255),w,b
 30017   00A21A  0B3F               	andlw	63
 30018   00A21C  6F8F               	movwf	peekTwoActionQueue@qty& (0+255),b
 30019                           
 30020                           ;../event_consumerDualActionQueue.c: 410:     if (index < qty) {
 30021   00A21E  518F               	movf	peekTwoActionQueue@qty& (0+255),w,b
 30022   00A220  5D90               	subwf	peekTwoActionQueue@index& (0+255),w,b
 30023   00A222  B0D8               	btfsc	status,0,c
 30024   00A224  D7DD               	goto	u20020
 30025                           
 30026                           ; BSR set to: 0
 30027                           ;../event_consumerDualActionQueue.c: 411:         if (normalReadIndex == normalWriteInde
      +                          x) return ((void*)0);
 30028   00A226  51C8               	movf	_normalWriteIndex& (0+255),w,b
 30029   00A228  19C9               	xorwf	_normalReadIndex& (0+255),w,b
 30030   00A22A  B4D8               	btfsc	status,2,c
 30031   00A22C  D7D9               	goto	u20020
 30032                           
 30033                           ; BSR set to: 0
 30034                           ;../event_consumerDualActionQueue.c: 412:         index += normalReadIndex;
 30035   00A22E  51C9               	movf	_normalReadIndex& (0+255),w,b
 30036   00A230  2790               	addwf	peekTwoActionQueue@index& (0+255),f,b
 30037                           
 30038                           ;../event_consumerDualActionQueue.c: 413:         if (index >= 64) {
 30039   00A232  0E3F               	movlw	63
 30040   00A234  6590               	cpfsgt	peekTwoActionQueue@index& (0+255),b
 30041   00A236  D002               	goto	l500
 30042                           
 30043                           ; BSR set to: 0
 30044                           ;../event_consumerDualActionQueue.c: 414:             index -= 64;
 30045   00A238  0E40               	movlw	64
 30046   00A23A  5F90               	subwf	peekTwoActionQueue@index& (0+255),f,b
 30047   00A23C                     l500:
 30048                           
 30049                           ; BSR set to: 0
 30050                           ;../event_consumerDualActionQueue.c: 416:         if (index == normalWriteIndex) return 
      +                          ((void*)0);
 30051   00A23C  51C8               	movf	_normalWriteIndex& (0+255),w,b
 30052   00A23E  1990               	xorwf	peekTwoActionQueue@index& (0+255),w,b
 30053   00A240  B4D8               	btfsc	status,2,c
 30054   00A242  D7CE               	goto	u20020
 30055                           
 30056                           ; BSR set to: 0
 30057                           ;../event_consumerDualActionQueue.c: 417:         return &(normalQueueBuf[index]);
 30058   00A244  5190               	movf	peekTwoActionQueue@index& (0+255),w,b
 30059   00A246  0D02               	mullw	2
 30060   00A248  0E00               	movlw	low _normalQueueBuf
 30061   00A24A  24F3               	addwf	243,w,c
 30062   00A24C  6F8D               	movwf	?_peekTwoActionQueue& (0+255),b
 30063   00A24E  0E05               	movlw	high _normalQueueBuf
 30064   00A250  20F4               	addwfc	prodh,w,c
 30065   00A252  6F8E               	movwf	(?_peekTwoActionQueue+1)& (0+255),b
 30066                           
 30067                           ; BSR set to: 0
 30068   00A254  0012               	return		;funcret
 30069   00A256                     __end_of_peekTwoActionQueue:
 30070                           	callstack 0
 30071                           
 30072 ;; *************** function _doWait *****************
 30073 ;; Defined at:
 30074 ;;		line 297 in file "../universalEvents.c"
 30075 ;; Parameters:    Size  Location     Type
 30076 ;;  duration        2   61[BANK0 ] unsigned short 
 30077 ;; Auto vars:     Size  Location     Type
 30078 ;;		None
 30079 ;; Return value:  Size  Location     Type
 30080 ;;                  1    wreg      void 
 30081 ;; Registers used:
 30082 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 30083 ;; Tracked objects:
 30084 ;;		On entry : 0/0
 30085 ;;		On exit  : 0/0
 30086 ;;		Unchanged: 0/0
 30087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30088 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30090 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30091 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30092 ;;Total ram usage:        6 bytes
 30093 ;; Hardware stack levels used: 1
 30094 ;; Hardware stack levels required when called: 14
 30095 ;; This function calls:
 30096 ;;		___lmul
 30097 ;;		_doneTwoAction
 30098 ;;		_tickGet
 30099 ;; This function is called by:
 30100 ;;		_processActions
 30101 ;; This function uses a non-reentrant model
 30102 ;;
 30103                           
 30104                           	psect	text113
 30105   009A9A                     __ptext113:
 30106                           	callstack 0
 30107   009A9A                     _doWait:
 30108                           	callstack 14
 30109                           
 30110                           ;../universalEvents.c: 299:     if (startWait.val == 0) {
 30111                           
 30112                           ; BSR set to: 0
 30113                           ;incstack = 0
 30114   009A9A  0101               	movlb	1	; () banked
 30115   009A9C  5164               	movf	_startWait& (0+255),w,b
 30116   009A9E  1165               	iorwf	(_startWait+1)& (0+255),w,b
 30117   009AA0  1166               	iorwf	(_startWait+2)& (0+255),w,b
 30118   009AA2  1167               	iorwf	(_startWait+3)& (0+255),w,b
 30119   009AA4  A4D8               	btfss	status,2,c
 30120   009AA6  D00B               	goto	l20558
 30121                           
 30122                           ; BSR set to: 1
 30123                           ;../universalEvents.c: 300:         startWait.val = tickGet();
 30124   009AA8  ECC2  F059         	call	_tickGet	;wreg free
 30125   009AAC  C08D  F164         	movff	?_tickGet,_startWait
 30126   009AB0  C08E  F165         	movff	?_tickGet+1,_startWait+1
 30127   009AB4  C08F  F166         	movff	?_tickGet+2,_startWait+2
 30128   009AB8  C090  F167         	movff	?_tickGet+3,_startWait+3
 30129   009ABC  0012               	return	
 30130   009ABE                     l20558:
 30131                           
 30132                           ; BSR set to: 1
 30133                           ;../universalEvents.c: 304:         if (((tickGet() - startWait.val) > ((long)duration *
      +                           (long)(62500/10)))) {
 30134   009ABE  ECC2  F059         	call	_tickGet	;wreg free
 30135   009AC2  0101               	movlb	1	; () banked
 30136   009AC4  5164               	movf	_startWait& (0+255),w,b
 30137   009AC6  0100               	movlb	0	; () banked
 30138   009AC8  5D8D               	subwf	?_tickGet& (0+255),w,b
 30139   009ACA  6F9F               	movwf	??_doWait& (0+255),b
 30140   009ACC  0101               	movlb	1	; () banked
 30141   009ACE  5165               	movf	(_startWait+1)& (0+255),w,b
 30142   009AD0  0100               	movlb	0	; () banked
 30143   009AD2  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 30144   009AD4  6FA0               	movwf	(??_doWait+1)& (0+255),b
 30145   009AD6  0101               	movlb	1	; () banked
 30146   009AD8  5166               	movf	(_startWait+2)& (0+255),w,b
 30147   009ADA  0100               	movlb	0	; () banked
 30148   009ADC  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 30149   009ADE  6FA1               	movwf	(??_doWait+2)& (0+255),b
 30150   009AE0  0101               	movlb	1	; () banked
 30151   009AE2  5167               	movf	(_startWait+3)& (0+255),w,b
 30152   009AE4  0100               	movlb	0	; () banked
 30153   009AE6  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 30154   009AE8  6FA2               	movwf	(??_doWait+3)& (0+255),b
 30155   009AEA  C09D  F091         	movff	doWait@duration,___lmul@multiplier
 30156   009AEE  C09E  F092         	movff	doWait@duration+1,___lmul@multiplier+1
 30157   009AF2  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
 30158   009AF4  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
 30159   009AF6  0E6A               	movlw	106
 30160   009AF8  6F95               	movwf	___lmul@multiplicand& (0+255),b
 30161   009AFA  0E18               	movlw	24
 30162   009AFC  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 30163   009AFE  0E00               	movlw	0
 30164   009B00  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 30165   009B02  0E00               	movlw	0
 30166   009B04  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 30167   009B06  ECEE  F059         	call	___lmul	;wreg free
 30168   009B0A  0100               	movlb	0	; () banked
 30169   009B0C  519F               	movf	??_doWait& (0+255),w,b
 30170   009B0E  5D91               	subwf	?___lmul& (0+255),w,b
 30171   009B10  51A0               	movf	(??_doWait+1)& (0+255),w,b
 30172   009B12  5992               	subwfb	(?___lmul+1)& (0+255),w,b
 30173   009B14  51A1               	movf	(??_doWait+2)& (0+255),w,b
 30174   009B16  5993               	subwfb	(?___lmul+2)& (0+255),w,b
 30175   009B18  51A2               	movf	(??_doWait+3)& (0+255),w,b
 30176   009B1A  5994               	subwfb	(?___lmul+3)& (0+255),w,b
 30177   009B1C  B0D8               	btfsc	status,0,c
 30178   009B1E  0012               	return	
 30179                           
 30180                           ; BSR set to: 0
 30181                           ;../universalEvents.c: 305:             doneTwoAction();
 30182   009B20  ECD8  F061         	call	_doneTwoAction	;wreg free
 30183                           
 30184                           ;../universalEvents.c: 306:             startWait.val = 0;
 30185   009B24  0E00               	movlw	0
 30186   009B26  0101               	movlb	1	; () banked
 30187   009B28  6F64               	movwf	_startWait& (0+255),b
 30188   009B2A  0E00               	movlw	0
 30189   009B2C  6F65               	movwf	(_startWait+1)& (0+255),b
 30190   009B2E  0E00               	movlw	0
 30191   009B30  6F66               	movwf	(_startWait+2)& (0+255),b
 30192   009B32  0E00               	movlw	0
 30193   009B34  6F67               	movwf	(_startWait+3)& (0+255),b
 30194   009B36  0012               	return		;funcret
 30195   009B38                     __end_of_doWait:
 30196                           	callstack 0
 30197                           
 30198 ;; *************** function _doneTwoAction *****************
 30199 ;; Defined at:
 30200 ;;		line 387 in file "../event_consumerDualActionQueue.c"
 30201 ;; Parameters:    Size  Location     Type
 30202 ;;		None
 30203 ;; Auto vars:     Size  Location     Type
 30204 ;;		None
 30205 ;; Return value:  Size  Location     Type
 30206 ;;                  1    wreg      void 
 30207 ;; Registers used:
 30208 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 30209 ;; Tracked objects:
 30210 ;;		On entry : 0/0
 30211 ;;		On exit  : 0/0
 30212 ;;		Unchanged: 0/0
 30213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30218 ;;Total ram usage:        0 bytes
 30219 ;; Hardware stack levels used: 1
 30220 ;; Hardware stack levels required when called: 13
 30221 ;; This function calls:
 30222 ;;		_popTwoAction
 30223 ;; This function is called by:
 30224 ;;		_processActions
 30225 ;;		_doWait
 30226 ;; This function uses a non-reentrant model
 30227 ;;
 30228                           
 30229                           	psect	text114
 30230   00C3B0                     __ptext114:
 30231                           	callstack 0
 30232   00C3B0                     _doneTwoAction:
 30233                           	callstack 15
 30234                           
 30235                           ;../event_consumerDualActionQueue.c: 388:  popTwoAction();
 30236                           
 30237                           ;incstack = 0
 30238   00C3B0  EC59  F05F         	call	_popTwoAction	;wreg free
 30239   00C3B4  0012               	return		;funcret
 30240   00C3B6                     __end_of_doneTwoAction:
 30241                           	callstack 0
 30242                           
 30243 ;; *************** function _popTwoAction *****************
 30244 ;; Defined at:
 30245 ;;		line 366 in file "../event_consumerDualActionQueue.c"
 30246 ;; Parameters:    Size  Location     Type
 30247 ;;		None
 30248 ;; Auto vars:     Size  Location     Type
 30249 ;;  ret             2    0        PTR struct .
 30250 ;;		 -> normalQueueBuf(128), expeditedQueueBuf(16), 
 30251 ;; Return value:  Size  Location     Type
 30252 ;;                  2  482[None  ] PTR struct .
 30253 ;; Registers used:
 30254 ;;		wreg, status,2, status,0, prodl, prodh
 30255 ;; Tracked objects:
 30256 ;;		On entry : 0/0
 30257 ;;		On exit  : 0/0
 30258 ;;		Unchanged: 0/0
 30259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30264 ;;Total ram usage:        0 bytes
 30265 ;; Hardware stack levels used: 1
 30266 ;; Hardware stack levels required when called: 12
 30267 ;; This function calls:
 30268 ;;		Nothing
 30269 ;; This function is called by:
 30270 ;;		_doneTwoAction
 30271 ;; This function uses a non-reentrant model
 30272 ;;
 30273                           
 30274                           	psect	text115
 30275   00BEB2                     __ptext115:
 30276                           	callstack 0
 30277   00BEB2                     _popTwoAction:
 30278                           	callstack 15
 30279                           
 30280                           ;../event_consumerDualActionQueue.c: 367:     ActionAndState * ret;;../event_consumerDua
      +                          lActionQueue.c: 369:  if (expeditedWriteIndex != expeditedReadIndex) {
 30281                           
 30282                           ;incstack = 0
 30283   00BEB2  0100               	movlb	0	; () banked
 30284   00BEB4  51C7               	movf	_expeditedReadIndex& (0+255),w,b
 30285   00BEB6  19C6               	xorwf	_expeditedWriteIndex& (0+255),w,b
 30286   00BEB8  B4D8               	btfsc	status,2,c
 30287   00BEBA  D007               	goto	l19218
 30288                           
 30289                           ; BSR set to: 0
 30290                           
 30291                           ; BSR set to: 0
 30292   00BEBC  2BC7               	incf	_expeditedReadIndex& (0+255),f,b
 30293                           
 30294                           ; BSR set to: 0
 30295                           ;../event_consumerDualActionQueue.c: 372:         if (expeditedReadIndex >= 8) expedited
      +                          ReadIndex = 0;
 30296   00BEBE  0E07               	movlw	7
 30297   00BEC0  65C7               	cpfsgt	_expeditedReadIndex& (0+255),b
 30298   00BEC2  0012               	return	
 30299                           
 30300                           ; BSR set to: 0
 30301   00BEC4  0E00               	movlw	0
 30302   00BEC6  6FC7               	movwf	_expeditedReadIndex& (0+255),b
 30303   00BEC8  0012               	return	
 30304   00BECA                     l19218:
 30305                           
 30306                           ; BSR set to: 0
 30307                           ;../event_consumerDualActionQueue.c: 376:  if (normalWriteIndex == normalReadIndex) {
 30308   00BECA  51C9               	movf	_normalReadIndex& (0+255),w,b
 30309   00BECC  19C8               	xorwf	_normalWriteIndex& (0+255),w,b
 30310   00BECE  B4D8               	btfsc	status,2,c
 30311   00BED0  0012               	return	
 30312                           
 30313                           ; BSR set to: 0
 30314                           
 30315                           ; BSR set to: 0
 30316   00BED2  2BC9               	incf	_normalReadIndex& (0+255),f,b
 30317                           
 30318                           ; BSR set to: 0
 30319                           ;../event_consumerDualActionQueue.c: 380:  if (normalReadIndex >= 64) normalReadIndex = 
      +                          0;
 30320   00BED4  0E3F               	movlw	63
 30321   00BED6  65C9               	cpfsgt	_normalReadIndex& (0+255),b
 30322   00BED8  0012               	return	
 30323                           
 30324                           ; BSR set to: 0
 30325   00BEDA  0E00               	movlw	0
 30326   00BEDC  6FC9               	movwf	_normalReadIndex& (0+255),b
 30327                           
 30328                           ; BSR set to: 0
 30329   00BEDE  0012               	return		;funcret
 30330   00BEE0                     __end_of_popTwoAction:
 30331                           	callstack 0
 30332                           
 30333 ;; *************** function _doSOD *****************
 30334 ;; Defined at:
 30335 ;;		line 498 in file "../universalEvents.c"
 30336 ;; Parameters:    Size  Location     Type
 30337 ;;		None
 30338 ;; Auto vars:     Size  Location     Type
 30339 ;;  event_invert    1   26[BANK1 ] unsigned char 
 30340 ;;  io              1   27[BANK1 ] unsigned char 
 30341 ;;  state           1   25[BANK1 ] unsigned char 
 30342 ;;  midway          1   24[BANK1 ] unsigned char 
 30343 ;; Return value:  Size  Location     Type
 30344 ;;                  1    wreg      void 
 30345 ;; Registers used:
 30346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30347 ;; Tracked objects:
 30348 ;;		On entry : 0/0
 30349 ;;		On exit  : 0/0
 30350 ;;		Unchanged: 0/0
 30351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30353 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30354 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30355 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30356 ;;Total ram usage:        6 bytes
 30357 ;; Hardware stack levels used: 1
 30358 ;; Hardware stack levels required when called: 18
 30359 ;; This function calls:
 30360 ;;		___awdiv
 30361 ;;		_alwaysSendInvertedProducedEvent
 30362 ;;		_getNV
 30363 ;;		_readNVM
 30364 ;; This function is called by:
 30365 ;;		_processActions
 30366 ;; This function uses a non-reentrant model
 30367 ;;
 30368                           
 30369                           	psect	text116
 30370   00323E                     __ptext116:
 30371                           	callstack 0
 30372   00323E                     _doSOD:
 30373                           	callstack 10
 30374                           
 30375                           ;../universalEvents.c: 499:     uint8_t midway;;../universalEvents.c: 500:     uint8_t s
      +                          tate;;../universalEvents.c: 501:     uint8_t io;;../universalEvents.c: 505:     for (io=
      +                          0; io < 16; io++) {
 30376                           
 30377                           ; BSR set to: 0
 30378                           ;incstack = 0
 30379   00323E  0E00               	movlw	0
 30380   003240  0101               	movlb	1	; () banked
 30381   003242  6FD0               	movwf	doSOD@io& (0+255),b
 30382   003244                     l20506:
 30383                           
 30384                           ; BSR set to: 1
 30385                           ;../universalEvents.c: 506:         uint8_t event_inverted = getNV((16 + 7*(io) + 1)) & 
      +                          0x40;
 30386   003244  51D0               	movf	doSOD@io& (0+255),w,b
 30387   003246  0D07               	mullw	7
 30388   003248  50F3               	movf	243,w,c
 30389   00324A  0F11               	addlw	17
 30390   00324C  EC35  F05D         	call	_getNV
 30391   003250  0100               	movlb	0	; () banked
 30392   003252  518D               	movf	?_getNV& (0+255),w,b
 30393   003254  0B40               	andlw	64
 30394   003256  0101               	movlb	1	; () banked
 30395   003258  6FCF               	movwf	doSOD@event_inverted& (0+255),b
 30396                           
 30397                           ;../universalEvents.c: 507:         switch(getNV((16 + 7*(io) + 0))) {
 30398   00325A  D1BC               	goto	l20540
 30399   00325C                     l20508:
 30400   00325C  0E74               	movlw	low _outputState
 30401   00325E  0101               	movlb	1	; () banked
 30402   003260  25D0               	addwf	doSOD@io& (0+255),w,b
 30403   003262  6ED9               	movwf	fsr2l,c
 30404   003264  6ADA               	clrf	fsr2h,c
 30405   003266  0E02               	movlw	high _outputState
 30406   003268  22DA               	addwfc	fsr2h,f,c
 30407   00326A  50DF               	movf	indf2,w,c
 30408   00326C  6FC6               	movwf	alwaysSendInvertedProducedEvent@state& (0+255),b
 30409   00326E  C1CF  F1C7         	movff	doSOD@event_inverted,alwaysSendInvertedProducedEvent@invert
 30410   003272  51D0               	movf	doSOD@io& (0+255),w,b
 30411   003274  0D04               	mullw	4
 30412   003276  50F3               	movf	243,w,c
 30413   003278  0F08               	addlw	8
 30414   00327A  EC70  F05F         	call	_alwaysSendInvertedProducedEvent
 30415   00327E  0900               	iorlw	0
 30416   003280  A4D8               	btfss	status,2,c
 30417   003282  D1C3               	goto	l20542
 30418   003284  D7EB               	goto	l20508
 30419   003286                     l20510:
 30420                           
 30421                           ; BSR set to: 0
 30422                           ;../universalEvents.c: 513:                 state = (uint8_t)readNVM(EEPROM_NVM_TYPE, ((
      +                          eeprom_address_t)((0x3FF -8))-25)+io);
 30423   003286  0EDE               	movlw	222
 30424   003288  0101               	movlb	1	; () banked
 30425   00328A  25D0               	addwf	doSOD@io& (0+255),w,b
 30426   00328C  6FCB               	movwf	??_doSOD& (0+255),b
 30427   00328E  6BCC               	clrf	(??_doSOD+1)& (0+255),b
 30428   003290  0E03               	movlw	3
 30429   003292  23CC               	addwfc	(??_doSOD+1)& (0+255),f,b
 30430   003294  C1CB  F091         	movff	??_doSOD,readNVM@index
 30431   003298  C1CC  F092         	movff	??_doSOD+1,readNVM@index+1
 30432   00329C  0100               	movlb	0	; () banked
 30433   00329E  6B93               	clrf	(readNVM@index+2)& (0+255),b
 30434   0032A0  0E00               	movlw	0
 30435   0032A2  ECDD  F058         	call	_readNVM
 30436   0032A6  0100               	movlb	0	; () banked
 30437   0032A8  5191               	movf	?_readNVM& (0+255),w,b
 30438   0032AA  0101               	movlb	1	; () banked
 30439   0032AC  6FCE               	movwf	doSOD@state& (0+255),b
 30440   0032AE                     l20512:
 30441   0032AE  0E02               	movlw	2
 30442   0032B0  0101               	movlb	1	; () banked
 30443   0032B2  19CE               	xorwf	doSOD@state& (0+255),w,b
 30444   0032B4  B4D8               	btfsc	status,2,c
 30445   0032B6  D002               	goto	u21080
 30446   0032B8  0E01               	movlw	1
 30447   0032BA  D001               	goto	u21090
 30448   0032BC                     u21080:
 30449   0032BC  0E00               	movlw	0
 30450   0032BE                     u21090:
 30451   0032BE  6FC6               	movwf	alwaysSendInvertedProducedEvent@state& (0+255),b
 30452   0032C0  C1CF  F1C7         	movff	doSOD@event_inverted,alwaysSendInvertedProducedEvent@invert
 30453   0032C4  51D0               	movf	doSOD@io& (0+255),w,b
 30454   0032C6  0D04               	mullw	4
 30455   0032C8  50F3               	movf	243,w,c
 30456   0032CA  0F08               	addlw	8
 30457   0032CC  EC70  F05F         	call	_alwaysSendInvertedProducedEvent
 30458   0032D0  0900               	iorlw	0
 30459   0032D2  A4D8               	btfss	status,2,c
 30460   0032D4  D19A               	goto	l20542
 30461   0032D6  D7EB               	goto	l20512
 30462   0032D8                     l20514:
 30463   0032D8  0101               	movlb	1	; () banked
 30464   0032DA  51D0               	movf	doSOD@io& (0+255),w,b
 30465   0032DC  0D07               	mullw	7
 30466   0032DE  50F3               	movf	243,w,c
 30467   0032E0  0F12               	addlw	18
 30468   0032E2  EC35  F05D         	call	_getNV
 30469   0032E6  0E40               	movlw	low _currentPos
 30470   0032E8  0101               	movlb	1	; () banked
 30471   0032EA  25D0               	addwf	doSOD@io& (0+255),w,b
 30472   0032EC  6ED9               	movwf	fsr2l,c
 30473   0032EE  6ADA               	clrf	fsr2h,c
 30474   0032F0  0E01               	movlw	high _currentPos
 30475   0032F2  22DA               	addwfc	fsr2h,f,c
 30476   0032F4  50DF               	movf	indf2,w,c
 30477   0032F6  6FCB               	movwf	??_doSOD& (0+255),b
 30478   0032F8  6BCC               	clrf	(??_doSOD+1)& (0+255),b
 30479   0032FA  0100               	movlb	0	; () banked
 30480   0032FC  518D               	movf	?_getNV& (0+255),w,b
 30481   0032FE  0101               	movlb	1	; () banked
 30482   003300  19CB               	xorwf	??_doSOD& (0+255),w,b
 30483   003302  E108               	bnz	u21110
 30484   003304  0100               	movlb	0	; () banked
 30485   003306  518E               	movf	(?_getNV+1)& (0+255),w,b
 30486   003308  0101               	movlb	1	; () banked
 30487   00330A  19CC               	xorwf	(??_doSOD+1)& (0+255),w,b
 30488   00330C  A4D8               	btfss	status,2,c
 30489   00330E  D002               	goto	u21110
 30490   003310  0E01               	movlw	1
 30491   003312  D001               	goto	u21120
 30492   003314                     u21110:
 30493   003314  0E00               	movlw	0
 30494   003316                     u21120:
 30495   003316  6FC6               	movwf	alwaysSendInvertedProducedEvent@state& (0+255),b
 30496   003318  C1CF  F1C7         	movff	doSOD@event_inverted,alwaysSendInvertedProducedEvent@invert
 30497   00331C  51D0               	movf	doSOD@io& (0+255),w,b
 30498   00331E  0D04               	mullw	4
 30499   003320  50F3               	movf	243,w,c
 30500   003322  0F08               	addlw	8
 30501   003324  EC70  F05F         	call	_alwaysSendInvertedProducedEvent
 30502   003328  0900               	iorlw	0
 30503   00332A  B4D8               	btfsc	status,2,c
 30504   00332C  D7D5               	goto	l20514
 30505   00332E                     u21130:
 30506   00332E  0101               	movlb	1	; () banked
 30507   003330  51D0               	movf	doSOD@io& (0+255),w,b
 30508   003332  0D07               	mullw	7
 30509   003334  50F3               	movf	243,w,c
 30510   003336  0F13               	addlw	19
 30511   003338  EC35  F05D         	call	_getNV
 30512   00333C  0E40               	movlw	low _currentPos
 30513   00333E  0101               	movlb	1	; () banked
 30514   003340  25D0               	addwf	doSOD@io& (0+255),w,b
 30515   003342  6ED9               	movwf	fsr2l,c
 30516   003344  6ADA               	clrf	fsr2h,c
 30517   003346  0E01               	movlw	high _currentPos
 30518   003348  22DA               	addwfc	fsr2h,f,c
 30519   00334A  50DF               	movf	indf2,w,c
 30520   00334C  6FCB               	movwf	??_doSOD& (0+255),b
 30521   00334E  6BCC               	clrf	(??_doSOD+1)& (0+255),b
 30522   003350  0100               	movlb	0	; () banked
 30523   003352  518D               	movf	?_getNV& (0+255),w,b
 30524   003354  0101               	movlb	1	; () banked
 30525   003356  19CB               	xorwf	??_doSOD& (0+255),w,b
 30526   003358  E108               	bnz	u21140
 30527   00335A  0100               	movlb	0	; () banked
 30528   00335C  518E               	movf	(?_getNV+1)& (0+255),w,b
 30529   00335E  0101               	movlb	1	; () banked
 30530   003360  19CC               	xorwf	(??_doSOD+1)& (0+255),w,b
 30531   003362  A4D8               	btfss	status,2,c
 30532   003364  D002               	goto	u21140
 30533   003366  0E01               	movlw	1
 30534   003368  D001               	goto	u21150
 30535   00336A                     u21140:
 30536   00336A  0E00               	movlw	0
 30537   00336C                     u21150:
 30538   00336C  6FC6               	movwf	alwaysSendInvertedProducedEvent@state& (0+255),b
 30539   00336E  C1CF  F1C7         	movff	doSOD@event_inverted,alwaysSendInvertedProducedEvent@invert
 30540   003372  51D0               	movf	doSOD@io& (0+255),w,b
 30541   003374  0D04               	mullw	4
 30542   003376  50F3               	movf	243,w,c
 30543   003378  0F0A               	addlw	10
 30544   00337A  EC70  F05F         	call	_alwaysSendInvertedProducedEvent
 30545   00337E  0900               	iorlw	0
 30546   003380  B4D8               	btfsc	status,2,c
 30547   003382  D7D5               	goto	u21130
 30548                           
 30549                           ;../universalEvents.c: 521:                 midway = (uint8_t)(getNV((16 + 7*(io) + 3))/
      +                          2 + getNV((16 + 7*(io) + 2))/2);
 30550   003384  0101               	movlb	1	; () banked
 30551   003386  51D0               	movf	doSOD@io& (0+255),w,b
 30552   003388  0D07               	mullw	7
 30553   00338A  50F3               	movf	243,w,c
 30554   00338C  0F12               	addlw	18
 30555   00338E  EC35  F05D         	call	_getNV
 30556   003392  C08D  F097         	movff	?_getNV,___awdiv@dividend
 30557   003396  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 30558   00339A  0E00               	movlw	0
 30559   00339C  0100               	movlb	0	; () banked
 30560   00339E  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 30561   0033A0  0E02               	movlw	2
 30562   0033A2  6F99               	movwf	___awdiv@divisor& (0+255),b
 30563   0033A4  ECD7  F052         	call	___awdiv	;wreg free
 30564   0033A8  C097  F1CB         	movff	?___awdiv,??_doSOD
 30565   0033AC  C098  F1CC         	movff	?___awdiv+1,??_doSOD+1
 30566   0033B0  0101               	movlb	1	; () banked
 30567   0033B2  51D0               	movf	doSOD@io& (0+255),w,b
 30568   0033B4  0D07               	mullw	7
 30569   0033B6  50F3               	movf	243,w,c
 30570   0033B8  0F13               	addlw	19
 30571   0033BA  EC35  F05D         	call	_getNV
 30572   0033BE  C08D  F097         	movff	?_getNV,___awdiv@dividend
 30573   0033C2  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 30574   0033C6  0E00               	movlw	0
 30575   0033C8  0100               	movlb	0	; () banked
 30576   0033CA  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 30577   0033CC  0E02               	movlw	2
 30578   0033CE  6F99               	movwf	___awdiv@divisor& (0+255),b
 30579   0033D0  ECD7  F052         	call	___awdiv	;wreg free
 30580   0033D4  0100               	movlb	0	; () banked
 30581   0033D6  5197               	movf	?___awdiv& (0+255),w,b
 30582   0033D8  0101               	movlb	1	; () banked
 30583   0033DA  25CB               	addwf	??_doSOD& (0+255),w,b
 30584   0033DC  6FCD               	movwf	doSOD@midway& (0+255),b
 30585   0033DE                     l20520:
 30586   0033DE  0E40               	movlw	low _currentPos
 30587   0033E0  0101               	movlb	1	; () banked
 30588   0033E2  25D0               	addwf	doSOD@io& (0+255),w,b
 30589   0033E4  6ED9               	movwf	fsr2l,c
 30590   0033E6  6ADA               	clrf	fsr2h,c
 30591   0033E8  0E01               	movlw	high _currentPos
 30592   0033EA  22DA               	addwfc	fsr2h,f,c
 30593   0033EC  51CD               	movf	doSOD@midway& (0+255),w,b
 30594   0033EE  5CDE               	subwf	postinc2,w,c
 30595   0033F0  A0D8               	btfss	status,0,c
 30596   0033F2  D002               	goto	u21170
 30597   0033F4  0E01               	movlw	1
 30598   0033F6  D001               	goto	u21180
 30599   0033F8                     u21170:
 30600   0033F8  0E00               	movlw	0
 30601   0033FA                     u21180:
 30602   0033FA  6FC6               	movwf	alwaysSendInvertedProducedEvent@state& (0+255),b
 30603   0033FC  C1CF  F1C7         	movff	doSOD@event_inverted,alwaysSendInvertedProducedEvent@invert
 30604   003400  51D0               	movf	doSOD@io& (0+255),w,b
 30605   003402  0D04               	mullw	4
 30606   003404  50F3               	movf	243,w,c
 30607   003406  0F09               	addlw	9
 30608   003408  EC70  F05F         	call	_alwaysSendInvertedProducedEvent
 30609   00340C  0900               	iorlw	0
 30610   00340E  A4D8               	btfss	status,2,c
 30611   003410  D0FC               	goto	l20542
 30612   003412  D7E5               	goto	l20520
 30613   003414                     l20522:
 30614                           
 30615                           ; BSR set to: 0
 30616                           ;../universalEvents.c: 526:                 state = (uint8_t)readNVM(EEPROM_NVM_TYPE, ((
      +                          eeprom_address_t)((0x3FF -8))-25)+io);
 30617   003414  0EDE               	movlw	222
 30618   003416  0101               	movlb	1	; () banked
 30619   003418  25D0               	addwf	doSOD@io& (0+255),w,b
 30620   00341A  6FCB               	movwf	??_doSOD& (0+255),b
 30621   00341C  6BCC               	clrf	(??_doSOD+1)& (0+255),b
 30622   00341E  0E03               	movlw	3
 30623   003420  23CC               	addwfc	(??_doSOD+1)& (0+255),f,b
 30624   003422  C1CB  F091         	movff	??_doSOD,readNVM@index
 30625   003426  C1CC  F092         	movff	??_doSOD+1,readNVM@index+1
 30626   00342A  0100               	movlb	0	; () banked
 30627   00342C  6B93               	clrf	(readNVM@index+2)& (0+255),b
 30628   00342E  0E00               	movlw	0
 30629   003430  ECDD  F058         	call	_readNVM
 30630   003434  0100               	movlb	0	; () banked
 30631   003436  5191               	movf	?_readNVM& (0+255),w,b
 30632   003438  0101               	movlb	1	; () banked
 30633   00343A  6FCE               	movwf	doSOD@state& (0+255),b
 30634   00343C                     l20524:
 30635   00343C  C1CE  F1C6         	movff	doSOD@state,alwaysSendInvertedProducedEvent@state
 30636   003440  C1CF  F1C7         	movff	doSOD@event_inverted,alwaysSendInvertedProducedEvent@invert
 30637   003444  0101               	movlb	1	; () banked
 30638   003446  51D0               	movf	doSOD@io& (0+255),w,b
 30639   003448  0D04               	mullw	4
 30640   00344A  50F3               	movf	243,w,c
 30641   00344C  0F08               	addlw	8
 30642   00344E  EC70  F05F         	call	_alwaysSendInvertedProducedEvent
 30643   003452  0900               	iorlw	0
 30644   003454  A4D8               	btfss	status,2,c
 30645   003456  D0D9               	goto	l20542
 30646   003458  D7F1               	goto	l20524
 30647   00345A                     l20526:
 30648   00345A  0101               	movlb	1	; () banked
 30649   00345C  51D0               	movf	doSOD@io& (0+255),w,b
 30650   00345E  0D07               	mullw	7
 30651   003460  50F3               	movf	243,w,c
 30652   003462  0F13               	addlw	19
 30653   003464  EC35  F05D         	call	_getNV
 30654   003468  0E40               	movlw	low _currentPos
 30655   00346A  0101               	movlb	1	; () banked
 30656   00346C  25D0               	addwf	doSOD@io& (0+255),w,b
 30657   00346E  6ED9               	movwf	fsr2l,c
 30658   003470  6ADA               	clrf	fsr2h,c
 30659   003472  0E01               	movlw	high _currentPos
 30660   003474  22DA               	addwfc	fsr2h,f,c
 30661   003476  50DF               	movf	indf2,w,c
 30662   003478  6FCB               	movwf	??_doSOD& (0+255),b
 30663   00347A  6BCC               	clrf	(??_doSOD+1)& (0+255),b
 30664   00347C  0100               	movlb	0	; () banked
 30665   00347E  518D               	movf	?_getNV& (0+255),w,b
 30666   003480  0101               	movlb	1	; () banked
 30667   003482  19CB               	xorwf	??_doSOD& (0+255),w,b
 30668   003484  E108               	bnz	u21210
 30669   003486  0100               	movlb	0	; () banked
 30670   003488  518E               	movf	(?_getNV+1)& (0+255),w,b
 30671   00348A  0101               	movlb	1	; () banked
 30672   00348C  19CC               	xorwf	(??_doSOD+1)& (0+255),w,b
 30673   00348E  A4D8               	btfss	status,2,c
 30674   003490  D002               	goto	u21210
 30675   003492  0E01               	movlw	1
 30676   003494  D001               	goto	u21220
 30677   003496                     u21210:
 30678   003496  0E00               	movlw	0
 30679   003498                     u21220:
 30680   003498  6FC6               	movwf	alwaysSendInvertedProducedEvent@state& (0+255),b
 30681   00349A  C1CF  F1C7         	movff	doSOD@event_inverted,alwaysSendInvertedProducedEvent@invert
 30682   00349E  51D0               	movf	doSOD@io& (0+255),w,b
 30683   0034A0  0D04               	mullw	4
 30684   0034A2  50F3               	movf	243,w,c
 30685   0034A4  0F08               	addlw	8
 30686   0034A6  EC70  F05F         	call	_alwaysSendInvertedProducedEvent
 30687   0034AA  0900               	iorlw	0
 30688   0034AC  B4D8               	btfsc	status,2,c
 30689   0034AE  D7D5               	goto	l20526
 30690   0034B0                     u21230:
 30691   0034B0  0101               	movlb	1	; () banked
 30692   0034B2  51D0               	movf	doSOD@io& (0+255),w,b
 30693   0034B4  0D07               	mullw	7
 30694   0034B6  50F3               	movf	243,w,c
 30695   0034B8  0F14               	addlw	20
 30696   0034BA  EC35  F05D         	call	_getNV
 30697   0034BE  0E40               	movlw	low _currentPos
 30698   0034C0  0101               	movlb	1	; () banked
 30699   0034C2  25D0               	addwf	doSOD@io& (0+255),w,b
 30700   0034C4  6ED9               	movwf	fsr2l,c
 30701   0034C6  6ADA               	clrf	fsr2h,c
 30702   0034C8  0E01               	movlw	high _currentPos
 30703   0034CA  22DA               	addwfc	fsr2h,f,c
 30704   0034CC  50DF               	movf	indf2,w,c
 30705   0034CE  6FCB               	movwf	??_doSOD& (0+255),b
 30706   0034D0  6BCC               	clrf	(??_doSOD+1)& (0+255),b
 30707   0034D2  0100               	movlb	0	; () banked
 30708   0034D4  518D               	movf	?_getNV& (0+255),w,b
 30709   0034D6  0101               	movlb	1	; () banked
 30710   0034D8  19CB               	xorwf	??_doSOD& (0+255),w,b
 30711   0034DA  E108               	bnz	u21240
 30712   0034DC  0100               	movlb	0	; () banked
 30713   0034DE  518E               	movf	(?_getNV+1)& (0+255),w,b
 30714   0034E0  0101               	movlb	1	; () banked
 30715   0034E2  19CC               	xorwf	(??_doSOD+1)& (0+255),w,b
 30716   0034E4  A4D8               	btfss	status,2,c
 30717   0034E6  D002               	goto	u21240
 30718   0034E8  0E01               	movlw	1
 30719   0034EA  D001               	goto	u21250
 30720   0034EC                     u21240:
 30721   0034EC  0E00               	movlw	0
 30722   0034EE                     u21250:
 30723   0034EE  6FC6               	movwf	alwaysSendInvertedProducedEvent@state& (0+255),b
 30724   0034F0  C1CF  F1C7         	movff	doSOD@event_inverted,alwaysSendInvertedProducedEvent@invert
 30725   0034F4  51D0               	movf	doSOD@io& (0+255),w,b
 30726   0034F6  0D04               	mullw	4
 30727   0034F8  50F3               	movf	243,w,c
 30728   0034FA  0F09               	addlw	9
 30729   0034FC  EC70  F05F         	call	_alwaysSendInvertedProducedEvent
 30730   003500  0900               	iorlw	0
 30731   003502  B4D8               	btfsc	status,2,c
 30732   003504  D7D5               	goto	u21230
 30733   003506                     u21260:
 30734   003506  0101               	movlb	1	; () banked
 30735   003508  51D0               	movf	doSOD@io& (0+255),w,b
 30736   00350A  0D07               	mullw	7
 30737   00350C  50F3               	movf	243,w,c
 30738   00350E  0F15               	addlw	21
 30739   003510  EC35  F05D         	call	_getNV
 30740   003514  0E40               	movlw	low _currentPos
 30741   003516  0101               	movlb	1	; () banked
 30742   003518  25D0               	addwf	doSOD@io& (0+255),w,b
 30743   00351A  6ED9               	movwf	fsr2l,c
 30744   00351C  6ADA               	clrf	fsr2h,c
 30745   00351E  0E01               	movlw	high _currentPos
 30746   003520  22DA               	addwfc	fsr2h,f,c
 30747   003522  50DF               	movf	indf2,w,c
 30748   003524  6FCB               	movwf	??_doSOD& (0+255),b
 30749   003526  6BCC               	clrf	(??_doSOD+1)& (0+255),b
 30750   003528  0100               	movlb	0	; () banked
 30751   00352A  518D               	movf	?_getNV& (0+255),w,b
 30752   00352C  0101               	movlb	1	; () banked
 30753   00352E  19CB               	xorwf	??_doSOD& (0+255),w,b
 30754   003530  E108               	bnz	u21270
 30755   003532  0100               	movlb	0	; () banked
 30756   003534  518E               	movf	(?_getNV+1)& (0+255),w,b
 30757   003536  0101               	movlb	1	; () banked
 30758   003538  19CC               	xorwf	(??_doSOD+1)& (0+255),w,b
 30759   00353A  A4D8               	btfss	status,2,c
 30760   00353C  D002               	goto	u21270
 30761   00353E  0E01               	movlw	1
 30762   003540  D001               	goto	u21280
 30763   003542                     u21270:
 30764   003542  0E00               	movlw	0
 30765   003544                     u21280:
 30766   003544  6FC6               	movwf	alwaysSendInvertedProducedEvent@state& (0+255),b
 30767   003546  C1CF  F1C7         	movff	doSOD@event_inverted,alwaysSendInvertedProducedEvent@invert
 30768   00354A  51D0               	movf	doSOD@io& (0+255),w,b
 30769   00354C  0D04               	mullw	4
 30770   00354E  50F3               	movf	243,w,c
 30771   003550  0F0A               	addlw	10
 30772   003552  EC70  F05F         	call	_alwaysSendInvertedProducedEvent
 30773   003556  0900               	iorlw	0
 30774   003558  B4D8               	btfsc	status,2,c
 30775   00355A  D7D5               	goto	u21260
 30776                           
 30777                           ;../universalEvents.c: 535:                 if (getNV((16 + 7*(io) + 2)) > 3) {
 30778   00355C  0101               	movlb	1	; () banked
 30779   00355E  51D0               	movf	doSOD@io& (0+255),w,b
 30780   003560  0D07               	mullw	7
 30781   003562  50F3               	movf	243,w,c
 30782   003564  0F12               	addlw	18
 30783   003566  EC35  F05D         	call	_getNV
 30784   00356A  0100               	movlb	0	; () banked
 30785   00356C  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 30786   00356E  D04D               	goto	l20542
 30787   003570  518E               	movf	(?_getNV+1)& (0+255),w,b
 30788   003572  E104               	bnz	u21300
 30789   003574  0E04               	movlw	4
 30790   003576  5D8D               	subwf	?_getNV& (0+255),w,b
 30791   003578  A0D8               	btfss	status,0,c
 30792   00357A  D047               	goto	l20542
 30793   00357C                     u21300:
 30794   00357C  0101               	movlb	1	; () banked
 30795   00357E  51D0               	movf	doSOD@io& (0+255),w,b
 30796   003580  0D07               	mullw	7
 30797   003582  50F3               	movf	243,w,c
 30798   003584  0F16               	addlw	22
 30799   003586  EC35  F05D         	call	_getNV
 30800   00358A  0E40               	movlw	low _currentPos
 30801   00358C  0101               	movlb	1	; () banked
 30802   00358E  25D0               	addwf	doSOD@io& (0+255),w,b
 30803   003590  6ED9               	movwf	fsr2l,c
 30804   003592  6ADA               	clrf	fsr2h,c
 30805   003594  0E01               	movlw	high _currentPos
 30806   003596  22DA               	addwfc	fsr2h,f,c
 30807   003598  50DF               	movf	indf2,w,c
 30808   00359A  6FCB               	movwf	??_doSOD& (0+255),b
 30809   00359C  6BCC               	clrf	(??_doSOD+1)& (0+255),b
 30810   00359E  0100               	movlb	0	; () banked
 30811   0035A0  518D               	movf	?_getNV& (0+255),w,b
 30812   0035A2  0101               	movlb	1	; () banked
 30813   0035A4  19CB               	xorwf	??_doSOD& (0+255),w,b
 30814   0035A6  E108               	bnz	u21310
 30815   0035A8  0100               	movlb	0	; () banked
 30816   0035AA  518E               	movf	(?_getNV+1)& (0+255),w,b
 30817   0035AC  0101               	movlb	1	; () banked
 30818   0035AE  19CC               	xorwf	(??_doSOD+1)& (0+255),w,b
 30819   0035B0  A4D8               	btfss	status,2,c
 30820   0035B2  D002               	goto	u21310
 30821   0035B4  0E01               	movlw	1
 30822   0035B6  D001               	goto	u21320
 30823   0035B8                     u21310:
 30824   0035B8  0E00               	movlw	0
 30825   0035BA                     u21320:
 30826   0035BA  6FC6               	movwf	alwaysSendInvertedProducedEvent@state& (0+255),b
 30827   0035BC  C1CF  F1C7         	movff	doSOD@event_inverted,alwaysSendInvertedProducedEvent@invert
 30828   0035C0  51D0               	movf	doSOD@io& (0+255),w,b
 30829   0035C2  0D04               	mullw	4
 30830   0035C4  50F3               	movf	243,w,c
 30831   0035C6  0F0B               	addlw	11
 30832   0035C8  EC70  F05F         	call	_alwaysSendInvertedProducedEvent
 30833   0035CC  0900               	iorlw	0
 30834   0035CE  A4D8               	btfss	status,2,c
 30835   0035D0  D01C               	goto	l20542
 30836   0035D2  D7D4               	goto	u21300
 30837   0035D4                     l20540:
 30838                           
 30839                           ; BSR set to: 1
 30840   0035D4  51D0               	movf	doSOD@io& (0+255),w,b
 30841   0035D6  0D07               	mullw	7
 30842   0035D8  50F3               	movf	243,w,c
 30843   0035DA  0F10               	addlw	16
 30844   0035DC  EC35  F05D         	call	_getNV
 30845                           
 30846                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30847                           ; Switch size 1, requested type "simple"
 30848                           ; Number of cases is 1, Range of values is 0 to 0
 30849                           ; switch strategies available:
 30850                           ; Name         Instructions Cycles
 30851                           ; simple_byte            4     3 (average)
 30852                           ;	Chosen strategy is simple_byte
 30853   0035E0  0100               	movlb	0	; () banked
 30854   0035E2  518E               	movf	(?_getNV+1)& (0+255),w,b
 30855   0035E4  0A00               	xorlw	0	; case 0
 30856   0035E6  A4D8               	btfss	status,2,c
 30857   0035E8  D010               	goto	l20542
 30858                           
 30859                           ; BSR set to: 0
 30860                           ; Switch size 1, requested type "simple"
 30861                           ; Number of cases is 5, Range of values is 0 to 4
 30862                           ; switch strategies available:
 30863                           ; Name         Instructions Cycles
 30864                           ; simple_byte           16     9 (average)
 30865                           ;	Chosen strategy is simple_byte
 30866   0035EA  518D               	movf	?_getNV& (0+255),w,b
 30867   0035EC  0A00               	xorlw	0	; case 0
 30868   0035EE  B4D8               	btfsc	status,2,c
 30869   0035F0  D635               	goto	l20508
 30870   0035F2  0A01               	xorlw	1	; case 1
 30871   0035F4  B4D8               	btfsc	status,2,c
 30872   0035F6  D647               	goto	l20510
 30873   0035F8  0A03               	xorlw	3	; case 2
 30874   0035FA  B4D8               	btfsc	status,2,c
 30875   0035FC  D66D               	goto	l20514
 30876   0035FE  0A01               	xorlw	1	; case 3
 30877   003600  B4D8               	btfsc	status,2,c
 30878   003602  D708               	goto	l20522
 30879   003604  0A07               	xorlw	7	; case 4
 30880   003606  B4D8               	btfsc	status,2,c
 30881   003608  D728               	goto	l20526
 30882   00360A                     l20542:
 30883                           
 30884                           ;../universalEvents.c: 549:     }
 30885   00360A  0101               	movlb	1	; () banked
 30886   00360C  2BD0               	incf	doSOD@io& (0+255),f,b
 30887                           
 30888                           ; BSR set to: 1
 30889   00360E  0E0F               	movlw	15
 30890   003610  65D0               	cpfsgt	doSOD@io& (0+255),b
 30891   003612  D618               	goto	l20506
 30892   003614  0012               	return	
 30893   003616                     __end_of_doSOD:
 30894                           	callstack 0
 30895                           
 30896 ;; *************** function _alwaysSendInvertedProducedEvent *****************
 30897 ;; Defined at:
 30898 ;;		line 338 in file "../universalEvents.c"
 30899 ;; Parameters:    Size  Location     Type
 30900 ;;  action          1    wreg     unsigned char 
 30901 ;;  state           1   17[BANK1 ] enum E12721
 30902 ;;  invert          1   18[BANK1 ] enum E12701
 30903 ;; Auto vars:     Size  Location     Type
 30904 ;;  action          1   19[BANK1 ] unsigned char 
 30905 ;; Return value:  Size  Location     Type
 30906 ;;                  1    wreg      enum E12701
 30907 ;; Registers used:
 30908 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30909 ;; Tracked objects:
 30910 ;;		On entry : 0/0
 30911 ;;		On exit  : 0/0
 30912 ;;		Unchanged: 0/0
 30913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30914 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30915 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30917 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30918 ;;Total ram usage:        5 bytes
 30919 ;; Hardware stack levels used: 1
 30920 ;; Hardware stack levels required when called: 17
 30921 ;; This function calls:
 30922 ;;		_sendProducedEvent
 30923 ;; This function is called by:
 30924 ;;		_doSOD
 30925 ;; This function uses a non-reentrant model
 30926 ;;
 30927                           
 30928                           	psect	text117
 30929   00BEE0                     __ptext117:
 30930                           	callstack 0
 30931   00BEE0                     _alwaysSendInvertedProducedEvent:
 30932                           	callstack 10
 30933                           
 30934                           ; BSR set to: 1
 30935                           ;incstack = 0
 30936                           ;alwaysSendInvertedProducedEvent@action stored from wreg
 30937   00BEE0  0101               	movlb	1	; () banked
 30938   00BEE2  6FC8               	movwf	alwaysSendInvertedProducedEvent@action& (0+255),b
 30939                           
 30940                           ;../universalEvents.c: 339:     return sendProducedEvent(action, invert?!state:state);
 30941   00BEE4  0101               	movlb	1	; () banked
 30942   00BEE6  51C7               	movf	alwaysSendInvertedProducedEvent@invert& (0+255),w,b
 30943   00BEE8  A4D8               	btfss	status,2,c
 30944   00BEEA  D003               	goto	l19696
 30945                           
 30946                           ; BSR set to: 1
 30947   00BEEC  C1C6  F1C9         	movff	alwaysSendInvertedProducedEvent@state,_alwaysSendInvertedProducedEvent$1385
 30948   00BEF0  D007               	goto	L14
 30949   00BEF2                     l19696:
 30950                           
 30951                           ; BSR set to: 1
 30952   00BEF2  51C6               	movf	alwaysSendInvertedProducedEvent@state& (0+255),w,b
 30953   00BEF4  A4D8               	btfss	status,2,c
 30954   00BEF6  D002               	goto	u20100
 30955   00BEF8  0E01               	movlw	1
 30956   00BEFA  D001               	goto	u20110
 30957   00BEFC                     u20100:
 30958   00BEFC  0E00               	movlw	0
 30959   00BEFE                     u20110:
 30960   00BEFE  6FC9               	movwf	_alwaysSendInvertedProducedEvent$1385& (0+255),b
 30961   00BF00                     L14:
 30962   00BF00  6BCA               	clrf	(_alwaysSendInvertedProducedEvent$1385+1)& (0+255),b
 30963                           
 30964                           ; BSR set to: 1
 30965   00BF02  C1C9  F1BE         	movff	_alwaysSendInvertedProducedEvent$1385,sendProducedEvent@onOff
 30966   00BF06  51C8               	movf	alwaysSendInvertedProducedEvent@action& (0+255),w,b
 30967   00BF08  ECAD  F04C         	call	_sendProducedEvent
 30968   00BF0C  0012               	return		;funcret
 30969   00BF0E                     __end_of_alwaysSendInvertedProducedEvent:
 30970                           	callstack 0
 30971                           
 30972 ;; *************** function _deleteTwoActionQueue *****************
 30973 ;; Defined at:
 30974 ;;		line 426 in file "../event_consumerDualActionQueue.c"
 30975 ;; Parameters:    Size  Location     Type
 30976 ;;  index           1    wreg     unsigned char 
 30977 ;; Auto vars:     Size  Location     Type
 30978 ;;  index           1   46[BANK0 ] unsigned char 
 30979 ;;  qty             1   45[BANK0 ] unsigned char 
 30980 ;; Return value:  Size  Location     Type
 30981 ;;                  1    wreg      void 
 30982 ;; Registers used:
 30983 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30984 ;; Tracked objects:
 30985 ;;		On entry : 0/0
 30986 ;;		On exit  : 0/0
 30987 ;;		Unchanged: 0/0
 30988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30990 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30992 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30993 ;;Total ram usage:        2 bytes
 30994 ;; Hardware stack levels used: 1
 30995 ;; Hardware stack levels required when called: 12
 30996 ;; This function calls:
 30997 ;;		Nothing
 30998 ;; This function is called by:
 30999 ;;		_processActions
 31000 ;; This function uses a non-reentrant model
 31001 ;;
 31002                           
 31003                           	psect	text118
 31004   00A528                     __ptext118:
 31005                           	callstack 0
 31006   00A528                     _deleteTwoActionQueue:
 31007                           	callstack 16
 31008                           
 31009                           ;incstack = 0
 31010                           ;deleteTwoActionQueue@index stored from wreg
 31011   00A528  0100               	movlb	0	; () banked
 31012   00A52A  6F8E               	movwf	deleteTwoActionQueue@index& (0+255),b
 31013                           
 31014                           ;../event_consumerDualActionQueue.c: 427:     uint8_t qty;;../event_consumerDualActionQu
      +                          eue.c: 428:     qty = (expeditedWriteIndex - expeditedReadIndex) & (8 -1);
 31015   00A52C  0100               	movlb	0	; () banked
 31016   00A52E  51C7               	movf	_expeditedReadIndex& (0+255),w,b
 31017   00A530  5DC6               	subwf	_expeditedWriteIndex& (0+255),w,b
 31018   00A532  0B07               	andlw	7
 31019   00A534  6F8D               	movwf	deleteTwoActionQueue@qty& (0+255),b
 31020                           
 31021                           ;../event_consumerDualActionQueue.c: 429:     if (index < qty) {
 31022   00A536  518D               	movf	deleteTwoActionQueue@qty& (0+255),w,b
 31023   00A538  5D8E               	subwf	deleteTwoActionQueue@index& (0+255),w,b
 31024   00A53A  B0D8               	btfsc	status,0,c
 31025   00A53C  D015               	goto	l20484
 31026                           
 31027                           ; BSR set to: 0
 31028                           ;../event_consumerDualActionQueue.c: 430:         index += expeditedReadIndex;
 31029   00A53E  51C7               	movf	_expeditedReadIndex& (0+255),w,b
 31030   00A540  278E               	addwf	deleteTwoActionQueue@index& (0+255),f,b
 31031                           
 31032                           ;../event_consumerDualActionQueue.c: 431:         if (index >= 8) {
 31033   00A542  0E07               	movlw	7
 31034   00A544  658E               	cpfsgt	deleteTwoActionQueue@index& (0+255),b
 31035   00A546  D002               	goto	l505
 31036                           
 31037                           ; BSR set to: 0
 31038                           ;../event_consumerDualActionQueue.c: 432:             index -= 8;
 31039   00A548  0E08               	movlw	8
 31040   00A54A  5F8E               	subwf	deleteTwoActionQueue@index& (0+255),f,b
 31041   00A54C                     l505:
 31042                           
 31043                           ; BSR set to: 0
 31044                           ;../event_consumerDualActionQueue.c: 434:         if (index == expeditedWriteIndex) retu
      +                          rn;
 31045   00A54C  51C6               	movf	_expeditedWriteIndex& (0+255),w,b
 31046   00A54E  198E               	xorwf	deleteTwoActionQueue@index& (0+255),w,b
 31047   00A550  B4D8               	btfsc	status,2,c
 31048   00A552  0012               	return	
 31049                           
 31050                           ; BSR set to: 0
 31051                           ;../event_consumerDualActionQueue.c: 435:         expeditedQueueBuf[index].a.value = 0;
 31052   00A554  518E               	movf	deleteTwoActionQueue@index& (0+255),w,b
 31053   00A556  0D02               	mullw	2
 31054   00A558  0EB5               	movlw	low (_expeditedQueueBuf+1)
 31055   00A55A  24F3               	addwf	243,w,c
 31056   00A55C  6ED9               	movwf	fsr2l,c
 31057   00A55E  0E02               	movlw	high (_expeditedQueueBuf+1)
 31058   00A560  20F4               	addwfc	prodh,w,c
 31059   00A562  6EDA               	movwf	fsr2h,c
 31060   00A564  6ADF               	clrf	indf2,c
 31061   00A566  0012               	return	
 31062   00A568                     l20484:
 31063                           
 31064                           ; BSR set to: 0
 31065                           ;../event_consumerDualActionQueue.c: 438:     index -= qty;
 31066   00A568  518D               	movf	deleteTwoActionQueue@qty& (0+255),w,b
 31067   00A56A  5F8E               	subwf	deleteTwoActionQueue@index& (0+255),f,b
 31068                           
 31069                           ;../event_consumerDualActionQueue.c: 439:     qty = (normalWriteIndex - normalReadIndex)
      +                           & (64 -1);
 31070   00A56C  51C9               	movf	_normalReadIndex& (0+255),w,b
 31071   00A56E  5DC8               	subwf	_normalWriteIndex& (0+255),w,b
 31072   00A570  0B3F               	andlw	63
 31073   00A572  6F8D               	movwf	deleteTwoActionQueue@qty& (0+255),b
 31074                           
 31075                           ;../event_consumerDualActionQueue.c: 440:     if (index < qty) {
 31076   00A574  518D               	movf	deleteTwoActionQueue@qty& (0+255),w,b
 31077   00A576  5D8E               	subwf	deleteTwoActionQueue@index& (0+255),w,b
 31078   00A578  B0D8               	btfsc	status,0,c
 31079   00A57A  0012               	return	
 31080                           
 31081                           ; BSR set to: 0
 31082                           ;../event_consumerDualActionQueue.c: 441:         if (normalReadIndex == normalWriteInde
      +                          x) return;
 31083   00A57C  51C8               	movf	_normalWriteIndex& (0+255),w,b
 31084   00A57E  19C9               	xorwf	_normalReadIndex& (0+255),w,b
 31085   00A580  B4D8               	btfsc	status,2,c
 31086   00A582  0012               	return	
 31087                           
 31088                           ; BSR set to: 0
 31089                           ;../event_consumerDualActionQueue.c: 442:         index += normalReadIndex;
 31090   00A584  51C9               	movf	_normalReadIndex& (0+255),w,b
 31091   00A586  278E               	addwf	deleteTwoActionQueue@index& (0+255),f,b
 31092                           
 31093                           ;../event_consumerDualActionQueue.c: 443:         if (index >= 64) {
 31094   00A588  0E3F               	movlw	63
 31095   00A58A  658E               	cpfsgt	deleteTwoActionQueue@index& (0+255),b
 31096   00A58C  D002               	goto	l510
 31097                           
 31098                           ; BSR set to: 0
 31099                           ;../event_consumerDualActionQueue.c: 444:             index -= 64;
 31100   00A58E  0E40               	movlw	64
 31101   00A590  5F8E               	subwf	deleteTwoActionQueue@index& (0+255),f,b
 31102   00A592                     l510:
 31103                           
 31104                           ; BSR set to: 0
 31105                           ;../event_consumerDualActionQueue.c: 446:         if (index == normalWriteIndex) return;
 31106   00A592  51C8               	movf	_normalWriteIndex& (0+255),w,b
 31107   00A594  198E               	xorwf	deleteTwoActionQueue@index& (0+255),w,b
 31108   00A596  B4D8               	btfsc	status,2,c
 31109   00A598  0012               	return	
 31110                           
 31111                           ; BSR set to: 0
 31112                           ;../event_consumerDualActionQueue.c: 447:         normalQueueBuf[index].a.value = 0;
 31113   00A59A  518E               	movf	deleteTwoActionQueue@index& (0+255),w,b
 31114   00A59C  0D02               	mullw	2
 31115   00A59E  0E01               	movlw	low (_normalQueueBuf+1)
 31116   00A5A0  24F3               	addwf	243,w,c
 31117   00A5A2  6ED9               	movwf	fsr2l,c
 31118   00A5A4  0E05               	movlw	high (_normalQueueBuf+1)
 31119   00A5A6  20F4               	addwfc	prodh,w,c
 31120   00A5A8  6EDA               	movwf	fsr2h,c
 31121   00A5AA  6ADF               	clrf	indf2,c
 31122                           
 31123                           ; BSR set to: 0
 31124   00A5AC  0012               	return		;funcret
 31125   00A5AE                     __end_of_deleteTwoActionQueue:
 31126                           	callstack 0
 31127                           
 31128 ;; *************** function _completed *****************
 31129 ;; Defined at:
 31130 ;;		line 201 in file "../outputs.c"
 31131 ;; Parameters:    Size  Location     Type
 31132 ;;  io              1    wreg     unsigned char 
 31133 ;;  action          2   45[BANK0 ] PTR struct .
 31134 ;;		 -> normalQueueBuf(128), expeditedQueueBuf(16), NULL(0), 
 31135 ;;  type            1   47[BANK0 ] unsigned char 
 31136 ;; Auto vars:     Size  Location     Type
 31137 ;;  io              1   51[BANK0 ] unsigned char 
 31138 ;; Return value:  Size  Location     Type
 31139 ;;                  1    wreg      enum E12701
 31140 ;; Registers used:
 31141 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 31142 ;; Tracked objects:
 31143 ;;		On entry : 0/0
 31144 ;;		On exit  : 0/0
 31145 ;;		Unchanged: 0/0
 31146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31147 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31148 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31149 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31150 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31151 ;;Total ram usage:        7 bytes
 31152 ;; Hardware stack levels used: 1
 31153 ;; Hardware stack levels required when called: 12
 31154 ;; This function calls:
 31155 ;;		Nothing
 31156 ;; This function is called by:
 31157 ;;		_processActions
 31158 ;; This function uses a non-reentrant model
 31159 ;;
 31160                           
 31161                           	psect	text119
 31162   00A256                     __ptext119:
 31163                           	callstack 0
 31164   00A256                     _completed:
 31165                           	callstack 16
 31166                           
 31167                           ; BSR set to: 0
 31168                           ;incstack = 0
 31169                           ;completed@io stored from wreg
 31170   00A256  0100               	movlb	0	; () banked
 31171   00A258  6F93               	movwf	completed@io& (0+255),b
 31172                           
 31173                           ;../outputs.c: 202:     switch(type) {
 31174   00A25A  D035               	goto	l20658
 31175   00A25C                     l20636:
 31176                           
 31177                           ; BSR set to: 0
 31178                           ;../outputs.c: 205:             return TRUE;
 31179   00A25C  0E01               	movlw	1
 31180   00A25E  0012               	return	
 31181   00A260                     l20640:
 31182                           
 31183                           ; BSR set to: 0
 31184                           ;../outputs.c: 208:             return pulseDelays[io] == 1;
 31185   00A260  0EA4               	movlw	low _pulseDelays
 31186   00A262  2593               	addwf	completed@io& (0+255),w,b
 31187   00A264  6ED9               	movwf	fsr2l,c
 31188   00A266  6ADA               	clrf	fsr2h,c
 31189   00A268  0E02               	movlw	high _pulseDelays
 31190   00A26A  22DA               	addwfc	fsr2h,f,c
 31191   00A26C  04DE               	decf	postinc2,w,c
 31192   00A26E  A4D8               	btfss	status,2,c
 31193   00A270  D002               	goto	u21420
 31194   00A272  0E01               	movlw	1
 31195   00A274  0012               	return	
 31196   00A276                     u21420:
 31197   00A276  0E00               	movlw	0
 31198   00A278  0012               	return	
 31199   00A27A                     l20644:
 31200                           
 31201                           ; BSR set to: 0
 31202                           ;../outputs.c: 217:             return (targetPos[io] == currentPos[io]) && ((servoState
      +                          [io] == SS_STOPPED) || (servoState[io] == SS_OFF));
 31203   00A27A  0E00               	movlw	0
 31204   00A27C  6F92               	movwf	_completed$1519& (0+255),b
 31205                           
 31206                           ; BSR set to: 0
 31207   00A27E  0E40               	movlw	low _currentPos
 31208   00A280  2593               	addwf	completed@io& (0+255),w,b
 31209   00A282  6ED9               	movwf	fsr2l,c
 31210   00A284  6ADA               	clrf	fsr2h,c
 31211   00A286  0E01               	movlw	high _currentPos
 31212   00A288  22DA               	addwfc	fsr2h,f,c
 31213   00A28A  5193               	movf	completed@io& (0+255),w,b
 31214   00A28C  0F01               	addlw	low _targetPos
 31215   00A28E  6EE1               	movwf	fsr1l,c
 31216   00A290  6AE2               	clrf	fsr1h,c
 31217   00A292  50DE               	movf	postinc2,w,c
 31218   00A294  18E6               	xorwf	postinc1,w,c
 31219   00A296  A4D8               	btfss	status,2,c
 31220   00A298  D014               	goto	l871
 31221                           
 31222                           ; BSR set to: 0
 31223   00A29A  0E30               	movlw	low _servoState
 31224   00A29C  2593               	addwf	completed@io& (0+255),w,b
 31225   00A29E  6ED9               	movwf	fsr2l,c
 31226   00A2A0  6ADA               	clrf	fsr2h,c
 31227   00A2A2  0E01               	movlw	high _servoState
 31228   00A2A4  22DA               	addwfc	fsr2h,f,c
 31229   00A2A6  04DE               	decf	postinc2,w,c
 31230   00A2A8  B4D8               	btfsc	status,2,c
 31231   00A2AA  D009               	goto	u21460
 31232                           
 31233                           ; BSR set to: 0
 31234   00A2AC  0E30               	movlw	low _servoState
 31235   00A2AE  2593               	addwf	completed@io& (0+255),w,b
 31236   00A2B0  6ED9               	movwf	fsr2l,c
 31237   00A2B2  6ADA               	clrf	fsr2h,c
 31238   00A2B4  0E01               	movlw	high _servoState
 31239   00A2B6  22DA               	addwfc	fsr2h,f,c
 31240   00A2B8  50DF               	movf	indf2,w,c
 31241   00A2BA  A4D8               	btfss	status,2,c
 31242   00A2BC  D002               	goto	l871
 31243   00A2BE                     u21460:
 31244                           
 31245                           ; BSR set to: 0
 31246   00A2BE  0E01               	movlw	1
 31247   00A2C0  6F92               	movwf	_completed$1519& (0+255),b
 31248   00A2C2                     l871:
 31249                           
 31250                           ; BSR set to: 0
 31251   00A2C2  5192               	movf	_completed$1519& (0+255),w,b
 31252   00A2C4  0012               	return	
 31253   00A2C6                     l20658:
 31254   00A2C6  0100               	movlb	0	; () banked
 31255   00A2C8  518F               	movf	completed@type& (0+255),w,b
 31256                           
 31257                           ; Switch size 1, requested type "simple"
 31258                           ; Number of cases is 5, Range of values is 0 to 4
 31259                           ; switch strategies available:
 31260                           ; Name         Instructions Cycles
 31261                           ; simple_byte           16     9 (average)
 31262                           ;	Chosen strategy is simple_byte
 31263   00A2CA  0A00               	xorlw	0	; case 0
 31264   00A2CC  B4D8               	btfsc	status,2,c
 31265   00A2CE  D7C6               	goto	l20636
 31266   00A2D0  0A01               	xorlw	1	; case 1
 31267   00A2D2  B4D8               	btfsc	status,2,c
 31268   00A2D4  D7C5               	goto	l20640
 31269   00A2D6  0A03               	xorlw	3	; case 2
 31270   00A2D8  B4D8               	btfsc	status,2,c
 31271   00A2DA  D7CF               	goto	l20644
 31272   00A2DC  0A01               	xorlw	1	; case 3
 31273   00A2DE  B4D8               	btfsc	status,2,c
 31274   00A2E0  D7CC               	goto	l20644
 31275   00A2E2  0A07               	xorlw	7	; case 4
 31276   00A2E4  B4D8               	btfsc	status,2,c
 31277   00A2E6  D7C9               	goto	l20644
 31278   00A2E8  D7B9               	goto	l20636
 31279   00A2EA                     __end_of_completed:
 31280                           	callstack 0
 31281                           
 31282 ;; *************** function _inputScan *****************
 31283 ;; Defined at:
 31284 ;;		line 101 in file "../inputs.c"
 31285 ;; Parameters:    Size  Location     Type
 31286 ;;		None
 31287 ;; Auto vars:     Size  Location     Type
 31288 ;;  change          1   19[BANK1 ] enum E12701
 31289 ;;  input           1   20[BANK1 ] unsigned char 
 31290 ;; Return value:  Size  Location     Type
 31291 ;;                  1    wreg      void 
 31292 ;; Registers used:
 31293 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 31294 ;; Tracked objects:
 31295 ;;		On entry : 0/0
 31296 ;;		On exit  : 0/0
 31297 ;;		Unchanged: 0/0
 31298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31300 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31301 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31302 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31303 ;;Total ram usage:        4 bytes
 31304 ;; Hardware stack levels used: 1
 31305 ;; Hardware stack levels required when called: 18
 31306 ;; This function calls:
 31307 ;;		_getNV
 31308 ;;		_readInput
 31309 ;;		_sendProducedEvent
 31310 ;;		_writeNVM
 31311 ;; This function is called by:
 31312 ;;		_loop
 31313 ;; This function uses a non-reentrant model
 31314 ;;
 31315                           
 31316                           	psect	text120
 31317   004A9C                     __ptext120:
 31318                           	callstack 0
 31319   004A9C                     _inputScan:
 31320                           	callstack 11
 31321                           
 31322                           ;../inputs.c: 102:     for (io=0; io< 16; io++) {
 31323                           
 31324                           ; BSR set to: 0
 31325                           ;incstack = 0
 31326   004A9C  0E00               	movlw	0
 31327   004A9E  0100               	movlb	0	; () banked
 31328   004AA0  6FCA               	movwf	_io@inputs$F843& (0+255),b
 31329   004AA2                     l21858:
 31330                           
 31331                           ; BSR set to: 0
 31332   004AA2  0E0F               	movlw	15
 31333   004AA4  65CA               	cpfsgt	_io@inputs$F843& (0+255),b
 31334   004AA6  D001               	goto	l21862
 31335   004AA8  0012               	return	
 31336   004AAA                     l21862:
 31337                           
 31338                           ; BSR set to: 0
 31339                           ;../inputs.c: 103:         if (getNV((16 + 7*(io) + 0)) == 0) {
 31340   004AAA  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31341   004AAC  0D07               	mullw	7
 31342   004AAE  50F3               	movf	243,w,c
 31343   004AB0  0F10               	addlw	16
 31344   004AB2  EC35  F05D         	call	_getNV
 31345   004AB6  0100               	movlb	0	; () banked
 31346   004AB8  518D               	movf	?_getNV& (0+255),w,b
 31347   004ABA  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 31348   004ABC  A4D8               	btfss	status,2,c
 31349   004ABE  D15D               	goto	l21924
 31350                           
 31351                           ; BSR set to: 0
 31352                           ;../inputs.c: 104:             uint8_t input = readInput(io);
 31353   004AC0  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31354   004AC2  EC3F  F040         	call	_readInput
 31355   004AC6  0101               	movlb	1	; () banked
 31356   004AC8  6FC9               	movwf	inputScan@input& (0+255),b
 31357                           
 31358                           ; BSR set to: 1
 31359                           ;../inputs.c: 105:             if (input != inputState[io]) {
 31360   004ACA  0E84               	movlw	low _inputState
 31361   004ACC  0100               	movlb	0	; () banked
 31362   004ACE  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31363   004AD0  6ED9               	movwf	fsr2l,c
 31364   004AD2  6ADA               	clrf	fsr2h,c
 31365   004AD4  0E02               	movlw	high _inputState
 31366   004AD6  22DA               	addwfc	fsr2h,f,c
 31367   004AD8  0101               	movlb	1	; () banked
 31368   004ADA  51C9               	movf	inputScan@input& (0+255),w,b
 31369   004ADC  18DE               	xorwf	postinc2,w,c
 31370   004ADE  B4D8               	btfsc	status,2,c
 31371   004AE0  D144               	goto	l21922
 31372                           
 31373                           ; BSR set to: 1
 31374                           ;../inputs.c: 106:                 Boolean change = FALSE;
 31375   004AE2  0E00               	movlw	0
 31376   004AE4  6FC8               	movwf	inputScan@change& (0+255),b
 31377                           
 31378                           ; BSR set to: 1
 31379                           ;../inputs.c: 108:                 if (inputState[io] && (delayCount[io] == getNV((16 + 
      +                          7*(io) + 2)))) {
 31380   004AE6  0E84               	movlw	low _inputState
 31381   004AE8  0100               	movlb	0	; () banked
 31382   004AEA  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31383   004AEC  6ED9               	movwf	fsr2l,c
 31384   004AEE  6ADA               	clrf	fsr2h,c
 31385   004AF0  0E02               	movlw	high _inputState
 31386   004AF2  22DA               	addwfc	fsr2h,f,c
 31387   004AF4  50DF               	movf	indf2,w,c
 31388   004AF6  B4D8               	btfsc	status,2,c
 31389   004AF8  D01E               	goto	l21876
 31390                           
 31391                           ; BSR set to: 0
 31392   004AFA  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31393   004AFC  0D07               	mullw	7
 31394   004AFE  50F3               	movf	243,w,c
 31395   004B00  0F12               	addlw	18
 31396   004B02  EC35  F05D         	call	_getNV
 31397   004B06  0E64               	movlw	low _delayCount
 31398   004B08  0100               	movlb	0	; () banked
 31399   004B0A  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31400   004B0C  6ED9               	movwf	fsr2l,c
 31401   004B0E  6ADA               	clrf	fsr2h,c
 31402   004B10  0E02               	movlw	high _delayCount
 31403   004B12  22DA               	addwfc	fsr2h,f,c
 31404   004B14  50DF               	movf	indf2,w,c
 31405   004B16  0101               	movlb	1	; () banked
 31406   004B18  6FC6               	movwf	??_inputScan& (0+255),b
 31407   004B1A  6BC7               	clrf	(??_inputScan+1)& (0+255),b
 31408   004B1C  0100               	movlb	0	; () banked
 31409   004B1E  518D               	movf	?_getNV& (0+255),w,b
 31410   004B20  0101               	movlb	1	; () banked
 31411   004B22  19C6               	xorwf	??_inputScan& (0+255),w,b
 31412   004B24  E108               	bnz	l21876
 31413   004B26  0100               	movlb	0	; () banked
 31414   004B28  518E               	movf	(?_getNV+1)& (0+255),w,b
 31415   004B2A  0101               	movlb	1	; () banked
 31416   004B2C  19C7               	xorwf	(??_inputScan+1)& (0+255),w,b
 31417   004B2E  A4D8               	btfss	status,2,c
 31418   004B30  D002               	goto	l21876
 31419                           
 31420                           ; BSR set to: 1
 31421                           ;../inputs.c: 109:                     change = TRUE;
 31422   004B32  0E01               	movlw	1
 31423   004B34  6FC8               	movwf	inputScan@change& (0+255),b
 31424   004B36                     l21876:
 31425                           
 31426                           ;../inputs.c: 111:                 if (!inputState[io] && (delayCount[io] == getNV((16 +
      +                           7*(io) + 3)))) {
 31427   004B36  0E84               	movlw	low _inputState
 31428   004B38  0100               	movlb	0	; () banked
 31429   004B3A  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31430   004B3C  6ED9               	movwf	fsr2l,c
 31431   004B3E  6ADA               	clrf	fsr2h,c
 31432   004B40  0E02               	movlw	high _inputState
 31433   004B42  22DA               	addwfc	fsr2h,f,c
 31434   004B44  50DF               	movf	indf2,w,c
 31435   004B46  A4D8               	btfss	status,2,c
 31436   004B48  D01E               	goto	l318
 31437                           
 31438                           ; BSR set to: 0
 31439   004B4A  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31440   004B4C  0D07               	mullw	7
 31441   004B4E  50F3               	movf	243,w,c
 31442   004B50  0F13               	addlw	19
 31443   004B52  EC35  F05D         	call	_getNV
 31444   004B56  0E64               	movlw	low _delayCount
 31445   004B58  0100               	movlb	0	; () banked
 31446   004B5A  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31447   004B5C  6ED9               	movwf	fsr2l,c
 31448   004B5E  6ADA               	clrf	fsr2h,c
 31449   004B60  0E02               	movlw	high _delayCount
 31450   004B62  22DA               	addwfc	fsr2h,f,c
 31451   004B64  50DF               	movf	indf2,w,c
 31452   004B66  0101               	movlb	1	; () banked
 31453   004B68  6FC6               	movwf	??_inputScan& (0+255),b
 31454   004B6A  6BC7               	clrf	(??_inputScan+1)& (0+255),b
 31455   004B6C  0100               	movlb	0	; () banked
 31456   004B6E  518D               	movf	?_getNV& (0+255),w,b
 31457   004B70  0101               	movlb	1	; () banked
 31458   004B72  19C6               	xorwf	??_inputScan& (0+255),w,b
 31459   004B74  E108               	bnz	l318
 31460   004B76  0100               	movlb	0	; () banked
 31461   004B78  518E               	movf	(?_getNV+1)& (0+255),w,b
 31462   004B7A  0101               	movlb	1	; () banked
 31463   004B7C  19C7               	xorwf	(??_inputScan+1)& (0+255),w,b
 31464   004B7E  A4D8               	btfss	status,2,c
 31465   004B80  D002               	goto	l318
 31466                           
 31467                           ; BSR set to: 1
 31468                           ;../inputs.c: 112:                     change = TRUE;
 31469   004B82  0E01               	movlw	1
 31470   004B84  6FC8               	movwf	inputScan@change& (0+255),b
 31471   004B86                     l318:
 31472                           
 31473                           ;../inputs.c: 114:                 if (change) {
 31474   004B86  0101               	movlb	1	; () banked
 31475   004B88  51C8               	movf	inputScan@change& (0+255),w,b
 31476   004B8A  B4D8               	btfsc	status,2,c
 31477   004B8C  D0E5               	goto	l21920
 31478                           
 31479                           ; BSR set to: 1
 31480                           ;../inputs.c: 116:                     delayCount[io] = 0;
 31481   004B8E  0E64               	movlw	low _delayCount
 31482   004B90  0100               	movlb	0	; () banked
 31483   004B92  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31484   004B94  6ED9               	movwf	fsr2l,c
 31485   004B96  6ADA               	clrf	fsr2h,c
 31486   004B98  0E02               	movlw	high _delayCount
 31487   004B9A  22DA               	addwfc	fsr2h,f,c
 31488   004B9C  6ADF               	clrf	indf2,c
 31489                           
 31490                           ;../inputs.c: 117:                     inputState[io] = input;
 31491   004B9E  0E84               	movlw	low _inputState
 31492   004BA0  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31493   004BA2  6ED9               	movwf	fsr2l,c
 31494   004BA4  6ADA               	clrf	fsr2h,c
 31495   004BA6  0E02               	movlw	high _inputState
 31496   004BA8  22DA               	addwfc	fsr2h,f,c
 31497   004BAA  C1C9  FFDF         	movff	inputScan@input,indf2
 31498                           
 31499                           ; BSR set to: 0
 31500                           ;../inputs.c: 119:                     if (!(getNV((16 + 7*(io) + 1)) & 0x01)) {
 31501   004BAE  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31502   004BB0  0D07               	mullw	7
 31503   004BB2  50F3               	movf	243,w,c
 31504   004BB4  0F11               	addlw	17
 31505   004BB6  EC35  F05D         	call	_getNV
 31506   004BBA  0100               	movlb	0	; () banked
 31507   004BBC  B18D               	btfsc	?_getNV& (0+255),0,b
 31508   004BBE  D008               	goto	l21888
 31509                           
 31510                           ; BSR set to: 0
 31511                           ;../inputs.c: 120:                         input = !input;
 31512   004BC0  0101               	movlb	1	; () banked
 31513   004BC2  51C9               	movf	inputScan@input& (0+255),w,b
 31514   004BC4  A4D8               	btfss	status,2,c
 31515   004BC6  D002               	goto	u23320
 31516   004BC8  0E01               	movlw	1
 31517   004BCA  D001               	goto	u23330
 31518   004BCC                     u23320:
 31519   004BCC  0E00               	movlw	0
 31520   004BCE                     u23330:
 31521   004BCE  6FC9               	movwf	inputScan@input& (0+255),b
 31522   004BD0                     l21888:
 31523                           
 31524                           ;../inputs.c: 123:                     if (getNV((16 + 7*(io) + 1)) & 0x10) {
 31525   004BD0  0100               	movlb	0	; () banked
 31526   004BD2  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31527   004BD4  0D07               	mullw	7
 31528   004BD6  50F3               	movf	243,w,c
 31529   004BD8  0F11               	addlw	17
 31530   004BDA  EC35  F05D         	call	_getNV
 31531   004BDE  0100               	movlb	0	; () banked
 31532   004BE0  A98D               	btfss	?_getNV& (0+255),4,b
 31533   004BE2  D031               	goto	l21896
 31534                           
 31535                           ; BSR set to: 0
 31536                           ;../inputs.c: 124:                         if (input) {
 31537   004BE4  0101               	movlb	1	; () banked
 31538   004BE6  51C9               	movf	inputScan@input& (0+255),w,b
 31539   004BE8  B4D8               	btfsc	status,2,c
 31540   004BEA  D0C7               	goto	l21924
 31541                           
 31542                           ; BSR set to: 1
 31543                           ;../inputs.c: 125:                             outputState[io] = ! outputState[io];
 31544   004BEC  0E74               	movlw	low _outputState
 31545   004BEE  0100               	movlb	0	; () banked
 31546   004BF0  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31547   004BF2  6ED9               	movwf	fsr2l,c
 31548   004BF4  6ADA               	clrf	fsr2h,c
 31549   004BF6  0E02               	movlw	high _outputState
 31550   004BF8  22DA               	addwfc	fsr2h,f,c
 31551   004BFA  0E74               	movlw	low _outputState
 31552   004BFC  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31553   004BFE  6EE1               	movwf	fsr1l,c
 31554   004C00  6AE2               	clrf	fsr1h,c
 31555   004C02  0E02               	movlw	high _outputState
 31556   004C04  22E2               	addwfc	fsr1h,f,c
 31557   004C06  50E7               	movf	indf1,w,c
 31558   004C08  A4D8               	btfss	status,2,c
 31559   004C0A  D002               	goto	u23360
 31560   004C0C  0E01               	movlw	1
 31561   004C0E  D001               	goto	u23370
 31562   004C10                     u23360:
 31563   004C10  0E00               	movlw	0
 31564   004C12                     u23370:
 31565   004C12  6EDF               	movwf	indf2,c
 31566                           
 31567                           ; BSR set to: 0
 31568                           ;../inputs.c: 129:                         writeNVM(EEPROM_NVM_TYPE, ((eeprom_address_t)
      +                          ((0x3FF -8))-25)+io, outputState[io]);
 31569                           
 31570                           ;../inputs.c: 126:                         } else {
 31571   004C14  0EDE               	movlw	222
 31572   004C16  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31573   004C18  0101               	movlb	1	; () banked
 31574   004C1A  6FC6               	movwf	??_inputScan& (0+255),b
 31575   004C1C  6BC7               	clrf	(??_inputScan+1)& (0+255),b
 31576   004C1E  0E03               	movlw	3
 31577   004C20  23C7               	addwfc	(??_inputScan+1)& (0+255),f,b
 31578   004C22  C1C6  F0A4         	movff	??_inputScan,writeNVM@index
 31579   004C26  C1C7  F0A5         	movff	??_inputScan+1,writeNVM@index+1
 31580   004C2A  0100               	movlb	0	; () banked
 31581   004C2C  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 31582   004C2E  0E74               	movlw	low _outputState
 31583   004C30  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31584   004C32  6ED9               	movwf	fsr2l,c
 31585   004C34  6ADA               	clrf	fsr2h,c
 31586   004C36  0E02               	movlw	high _outputState
 31587   004C38  22DA               	addwfc	fsr2h,f,c
 31588   004C3A  50DF               	movf	indf2,w,c
 31589   004C3C  6FA7               	movwf	writeNVM@value& (0+255),b
 31590   004C3E  0E00               	movlw	0
 31591   004C40  EC66  F05B         	call	_writeNVM
 31592                           
 31593                           ;../inputs.c: 130:                      } else {
 31594   004C44  D008               	goto	l21898
 31595   004C46                     l21896:
 31596                           
 31597                           ; BSR set to: 0
 31598                           ;../inputs.c: 131:                         outputState[io] = input;
 31599   004C46  0E74               	movlw	low _outputState
 31600   004C48  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31601   004C4A  6ED9               	movwf	fsr2l,c
 31602   004C4C  6ADA               	clrf	fsr2h,c
 31603   004C4E  0E02               	movlw	high _outputState
 31604   004C50  22DA               	addwfc	fsr2h,f,c
 31605   004C52  C1C9  FFDF         	movff	inputScan@input,indf2
 31606   004C56                     l21898:
 31607                           
 31608                           ;../inputs.c: 135:                     if (getNV((16 + 7*(io) + 1)) & 0x08) {
 31609   004C56  0100               	movlb	0	; () banked
 31610   004C58  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31611   004C5A  0D07               	mullw	7
 31612   004C5C  50F3               	movf	243,w,c
 31613   004C5E  0F11               	addlw	17
 31614   004C60  EC35  F05D         	call	_getNV
 31615   004C64  0100               	movlb	0	; () banked
 31616   004C66  A78D               	btfss	?_getNV& (0+255),3,b
 31617   004C68  D047               	goto	l21914
 31618                           
 31619                           ; BSR set to: 0
 31620                           ;../inputs.c: 136:                         if (outputState[io]) {
 31621   004C6A  0E74               	movlw	low _outputState
 31622   004C6C  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31623   004C6E  6ED9               	movwf	fsr2l,c
 31624   004C70  6ADA               	clrf	fsr2h,c
 31625   004C72  0E02               	movlw	high _outputState
 31626   004C74  22DA               	addwfc	fsr2h,f,c
 31627   004C76  50DF               	movf	indf2,w,c
 31628   004C78  B4D8               	btfsc	status,2,c
 31629   004C7A  D01F               	goto	l21908
 31630                           
 31631                           ; BSR set to: 0
 31632                           ;../inputs.c: 139:                             if (getNV((16 + 7*(io) + 1)) & 0x40) {
 31633   004C7C  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31634   004C7E  0D07               	mullw	7
 31635   004C80  50F3               	movf	243,w,c
 31636   004C82  0F11               	addlw	17
 31637   004C84  EC35  F05D         	call	_getNV
 31638   004C88  0100               	movlb	0	; () banked
 31639   004C8A  AD8D               	btfss	?_getNV& (0+255),6,b
 31640   004C8C  D00B               	goto	l21906
 31641                           
 31642                           ; BSR set to: 0
 31643                           ;../inputs.c: 140:                                 sendProducedEvent(((8 + 4*(io))+0), E
      +                          VENT_OFF);
 31644   004C8E  0E00               	movlw	0
 31645   004C90  0101               	movlb	1	; () banked
 31646   004C92  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 31647   004C94  0100               	movlb	0	; () banked
 31648   004C96  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31649   004C98  0D04               	mullw	4
 31650   004C9A  50F3               	movf	243,w,c
 31651   004C9C  0F08               	addlw	8
 31652   004C9E  ECAD  F04C         	call	_sendProducedEvent
 31653                           
 31654                           ;../inputs.c: 141:                             } else {
 31655   004CA2  D06B               	goto	l21924
 31656   004CA4                     l21906:
 31657                           
 31658                           ; BSR set to: 0
 31659                           ;../inputs.c: 142:                                 sendProducedEvent(((8 + 4*(io))+0), E
      +                          VENT_ON);
 31660   004CA4  0E01               	movlw	1
 31661   004CA6  0101               	movlb	1	; () banked
 31662   004CA8  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 31663   004CAA  0100               	movlb	0	; () banked
 31664   004CAC  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31665   004CAE  0D04               	mullw	4
 31666   004CB0  50F3               	movf	243,w,c
 31667   004CB2  0F08               	addlw	8
 31668   004CB4  ECAD  F04C         	call	_sendProducedEvent
 31669   004CB8  D060               	goto	l21924
 31670   004CBA                     l21908:
 31671                           
 31672                           ; BSR set to: 0
 31673                           ;../inputs.c: 145:                             if (getNV((16 + 7*(io) + 1)) & 0x40) {
 31674   004CBA  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31675   004CBC  0D07               	mullw	7
 31676   004CBE  50F3               	movf	243,w,c
 31677   004CC0  0F11               	addlw	17
 31678   004CC2  EC35  F05D         	call	_getNV
 31679   004CC6  0100               	movlb	0	; () banked
 31680   004CC8  AD8D               	btfss	?_getNV& (0+255),6,b
 31681   004CCA  D00B               	goto	l21912
 31682                           
 31683                           ; BSR set to: 0
 31684                           ;../inputs.c: 146:                                 sendProducedEvent(((8 + 4*(io))+1), E
      +                          VENT_OFF);
 31685   004CCC  0E00               	movlw	0
 31686   004CCE  0101               	movlb	1	; () banked
 31687   004CD0  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 31688   004CD2  0100               	movlb	0	; () banked
 31689   004CD4  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31690   004CD6  0D04               	mullw	4
 31691   004CD8  50F3               	movf	243,w,c
 31692   004CDA  0F09               	addlw	9
 31693   004CDC  ECAD  F04C         	call	_sendProducedEvent
 31694                           
 31695                           ;../inputs.c: 147:                             } else {
 31696   004CE0  D04C               	goto	l21924
 31697   004CE2                     l21912:
 31698                           
 31699                           ; BSR set to: 0
 31700                           ;../inputs.c: 148:                                 sendProducedEvent(((8 + 4*(io))+1), E
      +                          VENT_ON);
 31701   004CE2  0E01               	movlw	1
 31702   004CE4  0101               	movlb	1	; () banked
 31703   004CE6  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 31704   004CE8  0100               	movlb	0	; () banked
 31705   004CEA  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31706   004CEC  0D04               	mullw	4
 31707   004CEE  50F3               	movf	243,w,c
 31708   004CF0  0F09               	addlw	9
 31709   004CF2  ECAD  F04C         	call	_sendProducedEvent
 31710   004CF6  D041               	goto	l21924
 31711   004CF8                     l21914:
 31712                           
 31713                           ; BSR set to: 0
 31714                           ;../inputs.c: 153:                         if (getNV((16 + 7*(io) + 1)) & 0x40) {
 31715   004CF8  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31716   004CFA  0D07               	mullw	7
 31717   004CFC  50F3               	movf	243,w,c
 31718   004CFE  0F11               	addlw	17
 31719   004D00  EC35  F05D         	call	_getNV
 31720   004D04  0100               	movlb	0	; () banked
 31721   004D06  AD8D               	btfss	?_getNV& (0+255),6,b
 31722   004D08  D016               	goto	l21918
 31723                           
 31724                           ; BSR set to: 0
 31725                           ;../inputs.c: 154:                             sendProducedEvent(((8 + 4*(io))+0), !outp
      +                          utState[io]);
 31726   004D0A  0E74               	movlw	low _outputState
 31727   004D0C  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31728   004D0E  6ED9               	movwf	fsr2l,c
 31729   004D10  6ADA               	clrf	fsr2h,c
 31730   004D12  0E02               	movlw	high _outputState
 31731   004D14  22DA               	addwfc	fsr2h,f,c
 31732   004D16  50DF               	movf	indf2,w,c
 31733   004D18  A4D8               	btfss	status,2,c
 31734   004D1A  D002               	goto	u23430
 31735   004D1C  0E01               	movlw	1
 31736   004D1E  D001               	goto	u23440
 31737   004D20                     u23430:
 31738   004D20  0E00               	movlw	0
 31739   004D22                     u23440:
 31740   004D22  0101               	movlb	1	; () banked
 31741   004D24  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 31742   004D26  0100               	movlb	0	; () banked
 31743   004D28  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31744   004D2A  0D04               	mullw	4
 31745   004D2C  50F3               	movf	243,w,c
 31746   004D2E  0F08               	addlw	8
 31747   004D30  ECAD  F04C         	call	_sendProducedEvent
 31748                           
 31749                           ;../inputs.c: 155:                         } else {
 31750   004D34  D022               	goto	l21924
 31751   004D36                     l21918:
 31752                           
 31753                           ; BSR set to: 0
 31754                           ;../inputs.c: 156:                             sendProducedEvent(((8 + 4*(io))+0), outpu
      +                          tState[io]);
 31755   004D36  0E74               	movlw	low _outputState
 31756   004D38  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31757   004D3A  6ED9               	movwf	fsr2l,c
 31758   004D3C  6ADA               	clrf	fsr2h,c
 31759   004D3E  0E02               	movlw	high _outputState
 31760   004D40  22DA               	addwfc	fsr2h,f,c
 31761   004D42  50DF               	movf	indf2,w,c
 31762   004D44  0101               	movlb	1	; () banked
 31763   004D46  6FBE               	movwf	sendProducedEvent@onOff& (0+255),b
 31764   004D48  0100               	movlb	0	; () banked
 31765   004D4A  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31766   004D4C  0D04               	mullw	4
 31767   004D4E  50F3               	movf	243,w,c
 31768   004D50  0F08               	addlw	8
 31769   004D52  ECAD  F04C         	call	_sendProducedEvent
 31770   004D56  D011               	goto	l21924
 31771   004D58                     l21920:
 31772                           
 31773                           ; BSR set to: 1
 31774                           ;../inputs.c: 160:                     delayCount[io]++;
 31775   004D58  0E64               	movlw	low _delayCount
 31776   004D5A  0100               	movlb	0	; () banked
 31777   004D5C  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31778   004D5E  6ED9               	movwf	fsr2l,c
 31779   004D60  6ADA               	clrf	fsr2h,c
 31780   004D62  0E02               	movlw	high _delayCount
 31781   004D64  22DA               	addwfc	fsr2h,f,c
 31782   004D66  2ADF               	incf	indf2,f,c
 31783   004D68  D008               	goto	l21924
 31784   004D6A                     l21922:
 31785                           
 31786                           ; BSR set to: 1
 31787                           ;../inputs.c: 163:                 delayCount[io] = 0;
 31788   004D6A  0E64               	movlw	low _delayCount
 31789   004D6C  0100               	movlb	0	; () banked
 31790   004D6E  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31791   004D70  6ED9               	movwf	fsr2l,c
 31792   004D72  6ADA               	clrf	fsr2h,c
 31793   004D74  0E02               	movlw	high _delayCount
 31794   004D76  22DA               	addwfc	fsr2h,f,c
 31795   004D78  6ADF               	clrf	indf2,c
 31796   004D7A                     l21924:
 31797   004D7A  0100               	movlb	0	; () banked
 31798   004D7C  2BCA               	incf	_io@inputs$F843& (0+255),f,b
 31799   004D7E  D691               	goto	l21858
 31800   004D80                     __end_of_inputScan:
 31801                           	callstack 0
 31802                           
 31803 ;; *************** function _sendProducedEvent *****************
 31804 ;; Defined at:
 31805 ;;		line 172 in file "../../VLCBlib_PIC/event_producer.c"
 31806 ;; Parameters:    Size  Location     Type
 31807 ;;  happening       1    wreg     unsigned char 
 31808 ;;  onOff           1    9[BANK1 ] enum E12720
 31809 ;; Auto vars:     Size  Location     Type
 31810 ;;  happening       1   14[BANK1 ] unsigned char 
 31811 ;;  producedEven    2   15[BANK1 ] struct Word
 31812 ;;  producedEven    2   12[BANK1 ] struct Word
 31813 ;;  opc             1   11[BANK1 ] unsigned char 
 31814 ;; Return value:  Size  Location     Type
 31815 ;;                  1    wreg      enum E12700
 31816 ;; Registers used:
 31817 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 31818 ;; Tracked objects:
 31819 ;;		On entry : 0/0
 31820 ;;		On exit  : 0/0
 31821 ;;		Unchanged: 0/0
 31822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31823 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31824 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31825 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31826 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31827 ;;Total ram usage:        8 bytes
 31828 ;; Hardware stack levels used: 1
 31829 ;; Hardware stack levels required when called: 16
 31830 ;; This function calls:
 31831 ;;		_getEN
 31832 ;;		_getNN
 31833 ;;		_sendMessage4
 31834 ;; This function is called by:
 31835 ;;		_loop
 31836 ;;		_processOutputs
 31837 ;;		_inputScan
 31838 ;;		_sendInvertedProducedEvent
 31839 ;;		_alwaysSendInvertedProducedEvent
 31840 ;;		_pollServos
 31841 ;; This function uses a non-reentrant model
 31842 ;;
 31843                           
 31844                           	psect	text121
 31845   00995A                     __ptext121:
 31846                           	callstack 0
 31847   00995A                     _sendProducedEvent:
 31848                           	callstack 11
 31849                           
 31850                           ; BSR set to: 0
 31851                           ;incstack = 0
 31852                           ;sendProducedEvent@happening stored from wreg
 31853   00995A  0101               	movlb	1	; () banked
 31854   00995C  6FC3               	movwf	sendProducedEvent@happening& (0+255),b
 31855                           
 31856                           ;../../VLCBlib_PIC/event_producer.c: 173:     Word producedEventNN;;../../VLCBlib_PIC/ev
      +                          ent_producer.c: 174:     Word producedEventEN;;../../VLCBlib_PIC/event_producer.c: 175: 
      +                              uint8_t opc;;../../VLCBlib_PIC/event_producer.c: 181:     if (happening2Event[happen
      +                          ing] == 0xff) return FALSE;
 31857   00995E  0E00               	movlw	low _happening2Event
 31858   009960  0101               	movlb	1	; () banked
 31859   009962  25C3               	addwf	sendProducedEvent@happening& (0+255),w,b
 31860   009964  6ED9               	movwf	fsr2l,c
 31861   009966  6ADA               	clrf	fsr2h,c
 31862   009968  0E03               	movlw	high _happening2Event
 31863   00996A  22DA               	addwfc	fsr2h,f,c
 31864   00996C  28DE               	incf	postinc2,w,c
 31865   00996E  A4D8               	btfss	status,2,c
 31866   009970  D002               	goto	l19022
 31867                           
 31868                           ; BSR set to: 1
 31869   009972  0E00               	movlw	0
 31870   009974  0012               	return	
 31871   009976                     l19022:
 31872                           
 31873                           ; BSR set to: 1
 31874                           ;../../VLCBlib_PIC/event_producer.c: 182:     producedEventNN.word = getNN(happening2Eve
      +                          nt[happening]);
 31875   009976  0E00               	movlw	low _happening2Event
 31876   009978  25C3               	addwf	sendProducedEvent@happening& (0+255),w,b
 31877   00997A  6ED9               	movwf	fsr2l,c
 31878   00997C  6ADA               	clrf	fsr2h,c
 31879   00997E  0E03               	movlw	high _happening2Event
 31880   009980  22DA               	addwfc	fsr2h,f,c
 31881   009982  50DF               	movf	indf2,w,c
 31882   009984  EC3F  F049         	call	_getNN
 31883   009988  C097  F1C4         	movff	?_getNN,sendProducedEvent@producedEventNN
 31884   00998C  C098  F1C5         	movff	?_getNN+1,sendProducedEvent@producedEventNN+1
 31885                           
 31886                           ;../../VLCBlib_PIC/event_producer.c: 183:     producedEventEN.word = getEN(happening2Eve
      +                          nt[happening]);
 31887   009990  0E00               	movlw	low _happening2Event
 31888   009992  0101               	movlb	1	; () banked
 31889   009994  25C3               	addwf	sendProducedEvent@happening& (0+255),w,b
 31890   009996  6ED9               	movwf	fsr2l,c
 31891   009998  6ADA               	clrf	fsr2h,c
 31892   00999A  0E03               	movlw	high _happening2Event
 31893   00999C  22DA               	addwfc	fsr2h,f,c
 31894   00999E  50DF               	movf	indf2,w,c
 31895   0099A0  EC17  F055         	call	_getEN
 31896   0099A4  C097  F1C1         	movff	?_getEN,sendProducedEvent@producedEventEN
 31897   0099A8  C098  F1C2         	movff	?_getEN+1,sendProducedEvent@producedEventEN+1
 31898                           
 31899                           ;../../VLCBlib_PIC/event_producer.c: 207:                 if (producedEventNN.word == 0)
      +                           {
 31900   0099AC  0101               	movlb	1	; () banked
 31901   0099AE  51C4               	movf	sendProducedEvent@producedEventNN& (0+255),w,b
 31902   0099B0  11C5               	iorwf	(sendProducedEvent@producedEventNN+1)& (0+255),w,b
 31903   0099B2  A4D8               	btfss	status,2,c
 31904   0099B4  D00C               	goto	l19034
 31905                           
 31906                           ; BSR set to: 1
 31907                           ;../../VLCBlib_PIC/event_producer.c: 209:                     if (onOff == EVENT_ON) {
 31908   0099B6  05BE               	decf	sendProducedEvent@onOff& (0+255),w,b
 31909   0099B8  A4D8               	btfss	status,2,c
 31910   0099BA  D002               	goto	l19030
 31911                           
 31912                           ; BSR set to: 1
 31913                           ;../../VLCBlib_PIC/event_producer.c: 210:                         opc = OPC_ASON;
 31914   0099BC  0E98               	movlw	152
 31915   0099BE  D001               	goto	L15
 31916   0099C0                     l19030:
 31917                           
 31918                           ; BSR set to: 1
 31919                           ;../../VLCBlib_PIC/event_producer.c: 212:                         opc = OPC_ASOF;
 31920   0099C0  0E99               	movlw	153
 31921   0099C2                     L15:
 31922   0099C2  6FC0               	movwf	sendProducedEvent@opc& (0+255),b
 31923                           
 31924                           ; BSR set to: 1
 31925                           ;../../VLCBlib_PIC/event_producer.c: 214:                     producedEventNN.word = nn.
      +                          word;
 31926   0099C4  C0B3  F1C4         	movff	_nn,sendProducedEvent@producedEventNN
 31927   0099C8  C0B4  F1C5         	movff	_nn+1,sendProducedEvent@producedEventNN+1
 31928                           
 31929                           ;../../VLCBlib_PIC/event_producer.c: 215:                 } else {
 31930   0099CC  D007               	goto	l19040
 31931   0099CE                     l19034:
 31932                           
 31933                           ; BSR set to: 1
 31934                           ;../../VLCBlib_PIC/event_producer.c: 217:                     if (onOff == EVENT_ON) {
 31935   0099CE  05BE               	decf	sendProducedEvent@onOff& (0+255),w,b
 31936   0099D0  A4D8               	btfss	status,2,c
 31937   0099D2  D002               	goto	l19038
 31938                           
 31939                           ; BSR set to: 1
 31940                           ;../../VLCBlib_PIC/event_producer.c: 218:                         opc = OPC_ACON;
 31941   0099D4  0E90               	movlw	144
 31942   0099D6  D001               	goto	L16
 31943   0099D8                     l19038:
 31944                           
 31945                           ; BSR set to: 1
 31946                           ;../../VLCBlib_PIC/event_producer.c: 220:                         opc = OPC_ACOF;
 31947   0099D8  0E91               	movlw	145
 31948   0099DA                     L16:
 31949   0099DA  6FC0               	movwf	sendProducedEvent@opc& (0+255),b
 31950   0099DC                     l19040:
 31951                           
 31952                           ; BSR set to: 1
 31953                           ;../../VLCBlib_PIC/event_producer.c: 223:                 sendMessage4(opc, producedEven
      +                          tNN.bytes.hi, producedEventNN.bytes.lo, producedEventEN.bytes.hi, producedEventEN.bytes.
      +                          lo);
 31954   0099DC  C1C5  F0A5         	movff	sendProducedEvent@producedEventNN+1,sendMessage4@data1
 31955   0099E0  C1C4  F0A6         	movff	sendProducedEvent@producedEventNN,sendMessage4@data2
 31956   0099E4  C1C2  F0A7         	movff	sendProducedEvent@producedEventEN+1,sendMessage4@data3
 31957   0099E8  C1C1  F0A8         	movff	sendProducedEvent@producedEventEN,sendMessage4@data4
 31958   0099EC  51C0               	movf	sendProducedEvent@opc& (0+255),w,b
 31959   0099EE  EC87  F05F         	call	_sendMessage4
 31960                           
 31961                           ;../../VLCBlib_PIC/event_producer.c: 224:                 producerDiagnostics[0].asUint+
      +                          +;
 31962   0099F2  0101               	movlb	1	; () banked
 31963   0099F4  4BB1               	infsnz	_producerDiagnostics& (0+255),f,b
 31964   0099F6  2BB2               	incf	(_producerDiagnostics+1)& (0+255),f,b
 31965                           
 31966                           ; BSR set to: 1
 31967                           ;../../VLCBlib_PIC/event_producer.c: 225:                 return TRUE;
 31968   0099F8  0E01               	movlw	1
 31969                           
 31970                           ; BSR set to: 1
 31971   0099FA  0012               	return		;funcret
 31972   0099FC                     __end_of_sendProducedEvent:
 31973                           	callstack 0
 31974                           
 31975 ;; *************** function _sendMessage4 *****************
 31976 ;; Defined at:
 31977 ;;		line 1164 in file "../../VLCBlib_PIC/vlcb.c"
 31978 ;; Parameters:    Size  Location     Type
 31979 ;;  opc             1    wreg     enum E12342
 31980 ;;  data1           1   69[BANK0 ] unsigned char 
 31981 ;;  data2           1   70[BANK0 ] unsigned char 
 31982 ;;  data3           1   71[BANK0 ] unsigned char 
 31983 ;;  data4           1   72[BANK0 ] unsigned char 
 31984 ;; Auto vars:     Size  Location     Type
 31985 ;;  opc             1    8[BANK1 ] enum E12342
 31986 ;; Return value:  Size  Location     Type
 31987 ;;                  1    wreg      void 
 31988 ;; Registers used:
 31989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 31990 ;; Tracked objects:
 31991 ;;		On entry : 0/0
 31992 ;;		On exit  : 0/0
 31993 ;;		Unchanged: 0/0
 31994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31995 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31996 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31998 ;;      Totals:         0       4       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31999 ;;Total ram usage:        5 bytes
 32000 ;; Hardware stack levels used: 1
 32001 ;; Hardware stack levels required when called: 15
 32002 ;; This function calls:
 32003 ;;		_sendMessage
 32004 ;; This function is called by:
 32005 ;;		_producerProcessMessage
 32006 ;;		_sendProducedEvent
 32007 ;;		_mnsProcessMessage
 32008 ;;		_mnsTRrqnpnCallback
 32009 ;;		_nvProcessMessage
 32010 ;;		_nvTRnvrdCallback
 32011 ;; This function uses a non-reentrant model
 32012 ;;
 32013                           
 32014                           	psect	text122
 32015   00BF0E                     __ptext122:
 32016                           	callstack 0
 32017   00BF0E                     _sendMessage4:
 32018                           	callstack 13
 32019                           
 32020                           ; BSR set to: 1
 32021                           ;incstack = 0
 32022                           ;sendMessage4@opc stored from wreg
 32023   00BF0E  0101               	movlb	1	; () banked
 32024   00BF10  6FBD               	movwf	sendMessage4@opc& (0+255),b
 32025                           
 32026                           ;../../VLCBlib_PIC/vlcb.c: 1165:     sendMessage(opc, 5, data1, data2, data3, data4, 0,0
      +                          ,0);
 32027   00BF12  0E05               	movlw	5
 32028   00BF14  0101               	movlb	1	; () banked
 32029   00BF16  6FB5               	movwf	sendMessage@len& (0+255),b
 32030   00BF18  C0A5  F1B6         	movff	sendMessage4@data1,sendMessage@data1
 32031   00BF1C  C0A6  F1B7         	movff	sendMessage4@data2,sendMessage@data2
 32032   00BF20  C0A7  F1B8         	movff	sendMessage4@data3,sendMessage@data3
 32033   00BF24  C0A8  F1B9         	movff	sendMessage4@data4,sendMessage@data4
 32034   00BF28  0E00               	movlw	0
 32035   00BF2A  6FBA               	movwf	sendMessage@data5& (0+255),b
 32036   00BF2C  0E00               	movlw	0
 32037   00BF2E  6FBB               	movwf	sendMessage@data6& (0+255),b
 32038   00BF30  0E00               	movlw	0
 32039   00BF32  6FBC               	movwf	sendMessage@data7& (0+255),b
 32040   00BF34  51BD               	movf	sendMessage4@opc& (0+255),w,b
 32041   00BF36  EC1F  F054         	call	_sendMessage
 32042   00BF3A  0012               	return		;funcret
 32043   00BF3C                     __end_of_sendMessage4:
 32044                           	callstack 0
 32045                           
 32046 ;; *************** function _sendMessage *****************
 32047 ;; Defined at:
 32048 ;;		line 1222 in file "../../VLCBlib_PIC/vlcb.c"
 32049 ;; Parameters:    Size  Location     Type
 32050 ;;  opc             1    wreg     enum E12342
 32051 ;;  len             1    0[BANK1 ] unsigned char 
 32052 ;;  data1           1    1[BANK1 ] unsigned char 
 32053 ;;  data2           1    2[BANK1 ] unsigned char 
 32054 ;;  data3           1    3[BANK1 ] unsigned char 
 32055 ;;  data4           1    4[BANK1 ] unsigned char 
 32056 ;;  data5           1    5[BANK1 ] unsigned char 
 32057 ;;  data6           1    6[BANK1 ] unsigned char 
 32058 ;;  data7           1    7[BANK1 ] unsigned char 
 32059 ;; Auto vars:     Size  Location     Type
 32060 ;;  opc             1   68[BANK0 ] enum E12342
 32061 ;; Return value:  Size  Location     Type
 32062 ;;                  1    wreg      void 
 32063 ;; Registers used:
 32064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32065 ;; Tracked objects:
 32066 ;;		On entry : 0/0
 32067 ;;		On exit  : 0/0
 32068 ;;		Unchanged: 0/0
 32069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32070 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32071 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32072 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32073 ;;      Totals:         0       3       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32074 ;;Total ram usage:       11 bytes
 32075 ;; Hardware stack levels used: 1
 32076 ;; Hardware stack levels required when called: 14
 32077 ;; This function calls:
 32078 ;;		_canSendMessage
 32079 ;; This function is called by:
 32080 ;;		_sendMessage2
 32081 ;;		_sendMessage3
 32082 ;;		_sendMessage4
 32083 ;;		_sendMessage5
 32084 ;;		_sendMessage6
 32085 ;;		_sendMessage7
 32086 ;;		_sendMessage0
 32087 ;;		_sendMessage1
 32088 ;; This function uses a non-reentrant model
 32089 ;;
 32090                           
 32091                           	psect	text123
 32092   00A83E                     __ptext123:
 32093                           	callstack 0
 32094   00A83E                     _sendMessage:
 32095                           	callstack 12
 32096                           
 32097                           ;incstack = 0
 32098                           ;sendMessage@opc stored from wreg
 32099   00A83E  0100               	movlb	0	; () banked
 32100   00A840  6FA4               	movwf	sendMessage@opc& (0+255),b
 32101                           
 32102                           ;../../VLCBlib_PIC/vlcb.c: 1223:     tmpMessage.opc = opc;
 32103   00A842  C0A4  F1A7         	movff	sendMessage@opc,_tmpMessage+1
 32104                           
 32105                           ;../../VLCBlib_PIC/vlcb.c: 1224:     tmpMessage.len = len;
 32106   00A846  C1B5  F1A6         	movff	sendMessage@len,_tmpMessage
 32107                           
 32108                           ;../../VLCBlib_PIC/vlcb.c: 1225:     tmpMessage.bytes[0] = data1;
 32109   00A84A  C1B6  F1A8         	movff	sendMessage@data1,_tmpMessage+2
 32110                           
 32111                           ;../../VLCBlib_PIC/vlcb.c: 1226:     tmpMessage.bytes[1] = data2;
 32112   00A84E  C1B7  F1A9         	movff	sendMessage@data2,_tmpMessage+3
 32113                           
 32114                           ;../../VLCBlib_PIC/vlcb.c: 1227:     tmpMessage.bytes[2] = data3;
 32115   00A852  C1B8  F1AA         	movff	sendMessage@data3,_tmpMessage+4
 32116                           
 32117                           ;../../VLCBlib_PIC/vlcb.c: 1228:     tmpMessage.bytes[3] = data4;
 32118   00A856  C1B9  F1AB         	movff	sendMessage@data4,_tmpMessage+5
 32119                           
 32120                           ;../../VLCBlib_PIC/vlcb.c: 1229:     tmpMessage.bytes[4] = data5;
 32121   00A85A  C1BA  F1AC         	movff	sendMessage@data5,_tmpMessage+6
 32122                           
 32123                           ;../../VLCBlib_PIC/vlcb.c: 1230:     tmpMessage.bytes[5] = data6;
 32124   00A85E  C1BB  F1AD         	movff	sendMessage@data6,_tmpMessage+7
 32125                           
 32126                           ;../../VLCBlib_PIC/vlcb.c: 1231:     tmpMessage.bytes[6] = data7;
 32127   00A862  C1BC  F1AE         	movff	sendMessage@data7,_tmpMessage+8
 32128                           
 32129                           ;../../VLCBlib_PIC/vlcb.c: 1232:     if (transport != ((void*)0)) {
 32130   00A866  0101               	movlb	1	; () banked
 32131   00A868  5176               	movf	_transport& (0+255),w,b
 32132   00A86A  1177               	iorwf	(_transport+1)& (0+255),w,b
 32133   00A86C  B4D8               	btfsc	status,2,c
 32134   00A86E  0012               	return	
 32135                           
 32136                           ; BSR set to: 1
 32137                           ;../../VLCBlib_PIC/vlcb.c: 1233:         if (transport->sendMessage != ((void*)0)) {
 32138   00A870  C176  FFF6         	movff	_transport,tblptrl
 32139   00A874  C177  FFF7         	movff	_transport+1,tblptrh
 32140   00A878                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 32141   00A878  6AF8               	clrf	tblptru,c
 32142   00A87A                     	endif
 32143   00A87A                     	if	0	;tblptru may be non-zero
 32144   00A87A                     	endif
 32145   00A87A  0009               	tblrd		*+
 32146   00A87C  50F5               	movf	tablat,w,c
 32147   00A87E  0009               	tblrd		*+
 32148   00A880  10F5               	iorwf	tablat,w,c
 32149   00A882  B4D8               	btfsc	status,2,c
 32150   00A884  0012               	return	
 32151                           
 32152                           ; BSR set to: 1
 32153                           ;../../VLCBlib_PIC/vlcb.c: 1234:             transport->sendMessage(&tmpMessage);
 32154   00A886  0EA6               	movlw	low _tmpMessage
 32155   00A888  0100               	movlb	0	; () banked
 32156   00A88A  6F99               	movwf	canSendMessage@mp& (0+255),b
 32157   00A88C  0E01               	movlw	high _tmpMessage
 32158   00A88E  6F9A               	movwf	(canSendMessage@mp+1)& (0+255),b
 32159   00A890  C176  FFF6         	movff	_transport,tblptrl
 32160   00A894  C177  FFF7         	movff	_transport+1,tblptrh
 32161   00A898                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 32162   00A898  6AF8               	clrf	tblptru,c
 32163   00A89A                     	endif
 32164   00A89A                     	if	0	;tblptru may be non-zero
 32165   00A89A                     	endif
 32166   00A89A  0009               	tblrd		*+
 32167   00A89C  CFF5 F0A2          	movff	tablat,??_sendMessage
 32168   00A8A0  0009               	tblrd		*+
 32169   00A8A2  CFF5 F0A3          	movff	tablat,??_sendMessage+1
 32170   00A8A6  D801               	call	u18828
 32171   00A8A8  0012               	return	
 32172   00A8AA                     u18828:
 32173   00A8AA  0005               	push	
 32174   00A8AC  6EFA               	movwf	pclath,c
 32175   00A8AE  51A2               	movf	??_sendMessage& (0+255),w,b
 32176   00A8B0  6EFD               	movwf	tosl,c
 32177   00A8B2  51A3               	movf	(??_sendMessage+1)& (0+255),w,b
 32178   00A8B4  6EFE               	movwf	tosh,c
 32179   00A8B6  6AFF               	clrf	tosu,c
 32180   00A8B8  50FA               	movf	pclath,w,c
 32181   00A8BA  0012               	return		;indir
 32182   00A8BC                     __end_of_sendMessage:
 32183                           	callstack 0
 32184                           
 32185 ;; *************** function _canSendMessage *****************
 32186 ;; Defined at:
 32187 ;;		line 445 in file "../../VLCBlib_PIC/can18_ecan.c"
 32188 ;; Parameters:    Size  Location     Type
 32189 ;;  mp              2   57[BANK0 ] PTR struct Message
 32190 ;;		 -> tmpMessage(9), 
 32191 ;; Auto vars:     Size  Location     Type
 32192 ;;  m               2   64[BANK0 ] PTR struct Message
 32193 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 32194 ;; Return value:  Size  Location     Type
 32195 ;;                  1    wreg      enum E13014
 32196 ;; Registers used:
 32197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32198 ;; Tracked objects:
 32199 ;;		On entry : 0/0
 32200 ;;		On exit  : 0/0
 32201 ;;		Unchanged: 0/0
 32202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32203 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32204 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32205 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32206 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32207 ;;Total ram usage:        9 bytes
 32208 ;; Hardware stack levels used: 1
 32209 ;; Hardware stack levels required when called: 13
 32210 ;; This function calls:
 32211 ;;		_getNextWriteMessage
 32212 ;;		_have
 32213 ;;		_isEvent
 32214 ;;		_push
 32215 ;;		_quantity
 32216 ;;		_updateModuleErrorStatus
 32217 ;; This function is called by:
 32218 ;;		_sendMessage
 32219 ;; This function uses a non-reentrant model
 32220 ;;
 32221                           
 32222                           	psect	text124
 32223   005062                     __ptext124:
 32224                           	callstack 0
 32225   005062                     _canSendMessage:
 32226                           	callstack 12
 32227                           
 32228                           ;../../VLCBlib_PIC/can18_ecan.c: 447:     Message * m;;../../VLCBlib_PIC/can18_ecan.c: 4
      +                          50:     PIE5bits.TXBnIE = 0;
 32229                           
 32230                           ;incstack = 0
 32231   005062  9876               	bcf	118,4,c	;volatile
 32232                           
 32233                           ;../../VLCBlib_PIC/can18_ecan.c: 451:     if (quantity(&txQueue) == 0) {
 32234   005064  0E21               	movlw	low _txQueue
 32235   005066  0100               	movlb	0	; () banked
 32236   005068  6F8D               	movwf	quantity@q& (0+255),b
 32237   00506A  ECC8  F05D         	call	_quantity	;wreg free
 32238   00506E  0900               	iorlw	0
 32239   005070  A4D8               	btfss	status,2,c
 32240   005072  D150               	goto	l18664
 32241                           
 32242                           ;../../VLCBlib_PIC/can18_ecan.c: 453:         if (TXB0CONbits.TXREQ == 0) {
 32243   005074  010F               	movlb	15	; () banked
 32244   005076  B720               	btfsc	32,3,b	;volatile
 32245   005078  D14D               	goto	l18664
 32246                           
 32247                           ; BSR set to: 15
 32248                           ;../../VLCBlib_PIC/can18_ecan.c: 455:             if ((canId == 0) && (enumerationState 
      +                          == NO_ENUMERATION)) {
 32249   00507A  0100               	movlb	0	; () banked
 32250   00507C  51B7               	movf	_canId& (0+255),w,b
 32251   00507E  A4D8               	btfss	status,2,c
 32252   005080  D007               	goto	l18600
 32253                           
 32254                           ; BSR set to: 0
 32255   005082  51B5               	movf	_enumerationState& (0+255),w,b
 32256   005084  A4D8               	btfss	status,2,c
 32257   005086  D004               	goto	l18600
 32258                           
 32259                           ; BSR set to: 0
 32260                           ;../../VLCBlib_PIC/can18_ecan.c: 456:                 enumerationState = ENUMERATION_REQ
      +                          UIRED;
 32261   005088  0E01               	movlw	1
 32262   00508A  6FB5               	movwf	_enumerationState& (0+255),b
 32263                           
 32264                           ;../../VLCBlib_PIC/can18_ecan.c: 457:                 canId = 1;
 32265   00508C  0E01               	movlw	1
 32266   00508E  6FB7               	movwf	_canId& (0+255),b
 32267   005090                     l18600:
 32268                           
 32269                           ; BSR set to: 0
 32270                           ;../../VLCBlib_PIC/can18_ecan.c: 459:             PIE5bits.TXBnIE = 1;
 32271   005090  8876               	bsf	118,4,c	;volatile
 32272                           
 32273                           ; BSR set to: 0
 32274                           ;../../VLCBlib_PIC/can18_ecan.c: 461:             if (mp->len >8) mp->len = 8;
 32275   005092  C099  FFD9         	movff	canSendMessage@mp,fsr2l
 32276   005096  C09A  FFDA         	movff	canSendMessage@mp+1,fsr2h
 32277   00509A  0E08               	movlw	8
 32278   00509C  64DF               	cpfsgt	indf2,c
 32279   00509E  D006               	goto	l18606
 32280                           
 32281                           ; BSR set to: 0
 32282   0050A0  C099  FFD9         	movff	canSendMessage@mp,fsr2l
 32283   0050A4  C09A  FFDA         	movff	canSendMessage@mp+1,fsr2h
 32284   0050A8  0E08               	movlw	8
 32285   0050AA  6EDF               	movwf	indf2,c
 32286   0050AC                     l18606:
 32287                           
 32288                           ; BSR set to: 0
 32289                           ;../../VLCBlib_PIC/can18_ecan.c: 463:             TXB0SIDH = canPri[priorities[mp->opc]]
      +                           | ((canId & 0x78) >> 3);
 32290   0050AC  EE20 F001          	lfsr	2,1
 32291   0050B0  5199               	movf	canSendMessage@mp& (0+255),w,b
 32292   0050B2  26D9               	addwf	fsr2l,f,c
 32293   0050B4  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32294   0050B6  22DA               	addwfc	fsr2h,f,c
 32295   0050B8  50DF               	movf	indf2,w,c
 32296   0050BA  6F9B               	movwf	??_canSendMessage& (0+255),b
 32297   0050BC  6B9C               	clrf	(??_canSendMessage+1)& (0+255),b
 32298   0050BE  0E35               	movlw	low _priorities
 32299   0050C0  259B               	addwf	??_canSendMessage& (0+255),w,b
 32300   0050C2  6EF6               	movwf	tblptrl,c
 32301   0050C4  0EED               	movlw	high _priorities
 32302   0050C6  219C               	addwfc	(??_canSendMessage+1)& (0+255),w,b
 32303   0050C8  6EF7               	movwf	tblptrh,c
 32304   0050CA                     	if	1	;There are 3 active tblptr bytes
 32305   0050CA  6AF8               	clrf	tblptru,c
 32306   0050CC  0E00               	movlw	low (__mediumconst shr (0+16))
 32307   0050CE  22F8               	addwfc	tblptru,f,c
 32308   0050D0                     	endif
 32309   0050D0  0008               	tblrd		*
 32310   0050D2  50F5               	movf	tablat,w,c
 32311   0050D4  6F9D               	movwf	(??_canSendMessage+2)& (0+255),b
 32312   0050D6  6B9E               	clrf	(??_canSendMessage+3)& (0+255),b
 32313   0050D8  0E87               	movlw	low _canPri
 32314   0050DA  259D               	addwf	(??_canSendMessage+2)& (0+255),w,b
 32315   0050DC  6EF6               	movwf	tblptrl,c
 32316   0050DE  0EEE               	movlw	high _canPri
 32317   0050E0  219E               	addwfc	(??_canSendMessage+3)& (0+255),w,b
 32318   0050E2  6EF7               	movwf	tblptrh,c
 32319   0050E4                     	if	1	;There are 3 active tblptr bytes
 32320   0050E4  6AF8               	clrf	tblptru,c
 32321   0050E6  0E00               	movlw	low (__mediumconst shr (0+16))
 32322   0050E8  22F8               	addwfc	tblptru,f,c
 32323   0050EA                     	endif
 32324   0050EA  0008               	tblrd		*
 32325   0050EC  CFF5 F09F          	movff	tablat,??_canSendMessage+4
 32326   0050F0  39B7               	swapf	_canId& (0+255),w,b
 32327   0050F2  46E8               	rlncf	wreg,f,c
 32328   0050F4  0B1F               	andlw	31
 32329   0050F6  0B0F               	andlw	15
 32330   0050F8  119F               	iorwf	(??_canSendMessage+4)& (0+255),w,b
 32331   0050FA  010F               	movlb	15	; () banked
 32332   0050FC  6F21               	movwf	33,b	;volatile
 32333                           
 32334                           ; BSR set to: 15
 32335                           ;../../VLCBlib_PIC/can18_ecan.c: 464:             TXB0SIDL = (uint8_t)((canId & 0x07) <<
      +                           5);
 32336   0050FE  C0B7  F09B         	movff	_canId,??_canSendMessage
 32337   005102  0E07               	movlw	7
 32338   005104  0100               	movlb	0	; () banked
 32339   005106  179B               	andwf	??_canSendMessage& (0+255),f,b
 32340   005108  0E05               	movlw	5
 32341   00510A  6F9C               	movwf	(??_canSendMessage+1)& (0+255),b
 32342   00510C                     u18495:
 32343   00510C  90D8               	bcf	status,0,c
 32344   00510E  379B               	rlcf	??_canSendMessage& (0+255),f,b
 32345   005110  2F9C               	decfsz	(??_canSendMessage+1)& (0+255),f,b
 32346   005112  D7FC               	goto	u18495
 32347   005114  519B               	movf	??_canSendMessage& (0+255),w,b
 32348   005116  010F               	movlb	15	; () banked
 32349   005118  6F22               	movwf	34,b	;volatile
 32350                           
 32351                           ; BSR set to: 15
 32352                           ;../../VLCBlib_PIC/can18_ecan.c: 465:             TXB0D0 = mp->opc;
 32353   00511A  0100               	movlb	0	; () banked
 32354   00511C  EE20 F001          	lfsr	2,1
 32355   005120  5199               	movf	canSendMessage@mp& (0+255),w,b
 32356   005122  26D9               	addwf	fsr2l,f,c
 32357   005124  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32358   005126  22DA               	addwfc	fsr2h,f,c
 32359   005128  50DF               	movf	indf2,w,c
 32360   00512A  010F               	movlb	15	; () banked
 32361   00512C  6F26               	movwf	38,b	;volatile
 32362                           
 32363                           ; BSR set to: 15
 32364                           ;../../VLCBlib_PIC/can18_ecan.c: 466:             TXB0D1 = mp->bytes[0];
 32365   00512E  0100               	movlb	0	; () banked
 32366   005130  EE20 F002          	lfsr	2,2
 32367   005134  5199               	movf	canSendMessage@mp& (0+255),w,b
 32368   005136  26D9               	addwf	fsr2l,f,c
 32369   005138  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32370   00513A  22DA               	addwfc	fsr2h,f,c
 32371   00513C  50DF               	movf	indf2,w,c
 32372   00513E  010F               	movlb	15	; () banked
 32373   005140  6F27               	movwf	39,b	;volatile
 32374                           
 32375                           ; BSR set to: 15
 32376                           ;../../VLCBlib_PIC/can18_ecan.c: 467:             TXB0D2 = mp->bytes[1];
 32377   005142  0100               	movlb	0	; () banked
 32378   005144  EE20 F003          	lfsr	2,3
 32379   005148  5199               	movf	canSendMessage@mp& (0+255),w,b
 32380   00514A  26D9               	addwf	fsr2l,f,c
 32381   00514C  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32382   00514E  22DA               	addwfc	fsr2h,f,c
 32383   005150  50DF               	movf	indf2,w,c
 32384   005152  010F               	movlb	15	; () banked
 32385   005154  6F28               	movwf	40,b	;volatile
 32386                           
 32387                           ; BSR set to: 15
 32388                           ;../../VLCBlib_PIC/can18_ecan.c: 468:             TXB0D3 = mp->bytes[2];
 32389   005156  0100               	movlb	0	; () banked
 32390   005158  EE20 F004          	lfsr	2,4
 32391   00515C  5199               	movf	canSendMessage@mp& (0+255),w,b
 32392   00515E  26D9               	addwf	fsr2l,f,c
 32393   005160  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32394   005162  22DA               	addwfc	fsr2h,f,c
 32395   005164  50DF               	movf	indf2,w,c
 32396   005166  010F               	movlb	15	; () banked
 32397   005168  6F29               	movwf	41,b	;volatile
 32398                           
 32399                           ; BSR set to: 15
 32400                           ;../../VLCBlib_PIC/can18_ecan.c: 469:             TXB0D4 = mp->bytes[3];
 32401   00516A  0100               	movlb	0	; () banked
 32402   00516C  EE20 F005          	lfsr	2,5
 32403   005170  5199               	movf	canSendMessage@mp& (0+255),w,b
 32404   005172  26D9               	addwf	fsr2l,f,c
 32405   005174  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32406   005176  22DA               	addwfc	fsr2h,f,c
 32407   005178  50DF               	movf	indf2,w,c
 32408   00517A  010F               	movlb	15	; () banked
 32409   00517C  6F2A               	movwf	42,b	;volatile
 32410                           
 32411                           ; BSR set to: 15
 32412                           ;../../VLCBlib_PIC/can18_ecan.c: 470:             TXB0D5 = mp->bytes[4];
 32413   00517E  0100               	movlb	0	; () banked
 32414   005180  EE20 F006          	lfsr	2,6
 32415   005184  5199               	movf	canSendMessage@mp& (0+255),w,b
 32416   005186  26D9               	addwf	fsr2l,f,c
 32417   005188  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32418   00518A  22DA               	addwfc	fsr2h,f,c
 32419   00518C  50DF               	movf	indf2,w,c
 32420   00518E  010F               	movlb	15	; () banked
 32421   005190  6F2B               	movwf	43,b	;volatile
 32422                           
 32423                           ; BSR set to: 15
 32424                           ;../../VLCBlib_PIC/can18_ecan.c: 471:             TXB0D6 = mp->bytes[5];
 32425   005192  0100               	movlb	0	; () banked
 32426   005194  EE20 F007          	lfsr	2,7
 32427   005198  5199               	movf	canSendMessage@mp& (0+255),w,b
 32428   00519A  26D9               	addwf	fsr2l,f,c
 32429   00519C  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32430   00519E  22DA               	addwfc	fsr2h,f,c
 32431   0051A0  50DF               	movf	indf2,w,c
 32432   0051A2  010F               	movlb	15	; () banked
 32433   0051A4  6F2C               	movwf	44,b	;volatile
 32434                           
 32435                           ; BSR set to: 15
 32436                           ;../../VLCBlib_PIC/can18_ecan.c: 472:             TXB0D7 = mp->bytes[6];
 32437   0051A6  0100               	movlb	0	; () banked
 32438   0051A8  EE20 F008          	lfsr	2,8
 32439   0051AC  5199               	movf	canSendMessage@mp& (0+255),w,b
 32440   0051AE  26D9               	addwf	fsr2l,f,c
 32441   0051B0  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32442   0051B2  22DA               	addwfc	fsr2h,f,c
 32443   0051B4  50DF               	movf	indf2,w,c
 32444   0051B6  010F               	movlb	15	; () banked
 32445   0051B8  6F2D               	movwf	45,b	;volatile
 32446                           
 32447                           ; BSR set to: 15
 32448                           ;../../VLCBlib_PIC/can18_ecan.c: 473:             TXB0DLC = mp->len & 0x0F;
 32449   0051BA  C099  FFD9         	movff	canSendMessage@mp,fsr2l
 32450   0051BE  C09A  FFDA         	movff	canSendMessage@mp+1,fsr2h
 32451   0051C2  50DF               	movf	indf2,w,c
 32452   0051C4  0B0F               	andlw	15
 32453   0051C6  6F25               	movwf	37,b	;volatile
 32454                           
 32455                           ; BSR set to: 15
 32456                           ;../../VLCBlib_PIC/can18_ecan.c: 475:             TXB0CONbits.TXREQ = 1;
 32457   0051C8  8720               	bsf	32,3,b	;volatile
 32458                           
 32459                           ; BSR set to: 15
 32460                           ;../../VLCBlib_PIC/can18_ecan.c: 476:             canDiagnostics[0x05].asUint++;
 32461   0051CA  0101               	movlb	1	; () banked
 32462   0051CC  4B84               	infsnz	(_canDiagnostics+10)& (0+255),f,b
 32463   0051CE  2B85               	incf	(_canDiagnostics+11)& (0+255),f,b
 32464                           
 32465                           ; BSR set to: 1
 32466                           ;../../VLCBlib_PIC/can18_ecan.c: 480:             if (isEvent(mp->opc)) {
 32467   0051D0  0100               	movlb	0	; () banked
 32468   0051D2  EE20 F001          	lfsr	2,1
 32469   0051D6  5199               	movf	canSendMessage@mp& (0+255),w,b
 32470   0051D8  26D9               	addwf	fsr2l,f,c
 32471   0051DA  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32472   0051DC  22DA               	addwfc	fsr2h,f,c
 32473   0051DE  50DF               	movf	indf2,w,c
 32474   0051E0  EC09  F060         	call	_isEvent
 32475   0051E4  0900               	iorlw	0
 32476   0051E6  B4D8               	btfsc	status,2,c
 32477   0051E8  0012               	return	
 32478                           
 32479                           ;../../VLCBlib_PIC/can18_ecan.c: 481:                 if (have(SERVICE_ID_CONSUME_OWN_EV
      +                          ENTS)) {
 32480   0051EA  0E08               	movlw	8
 32481   0051EC  EC3B  F056         	call	_have
 32482   0051F0  0900               	iorlw	0
 32483   0051F2  B4D8               	btfsc	status,2,c
 32484   0051F4  0012               	return	
 32485                           
 32486                           ;../../VLCBlib_PIC/can18_ecan.c: 483:                     m = getNextWriteMessage(&rxQue
      +                          ue);
 32487   0051F6  0E26               	movlw	low _rxQueue
 32488   0051F8  0100               	movlb	0	; () banked
 32489   0051FA  6F8D               	movwf	getNextWriteMessage@q& (0+255),b
 32490   0051FC  ECDD  F044         	call	_getNextWriteMessage	;wreg free
 32491   005200  C08D  F0A0         	movff	?_getNextWriteMessage,canSendMessage@m
 32492   005204  C08E  F0A1         	movff	?_getNextWriteMessage+1,canSendMessage@m+1
 32493                           
 32494                           ;../../VLCBlib_PIC/can18_ecan.c: 484:                     if (m == ((void*)0)) {
 32495   005208  0100               	movlb	0	; () banked
 32496   00520A  51A0               	movf	canSendMessage@m& (0+255),w,b
 32497   00520C  11A1               	iorwf	(canSendMessage@m+1)& (0+255),w,b
 32498   00520E  A4D8               	btfss	status,2,c
 32499   005210  D006               	goto	l18644
 32500                           
 32501                           ; BSR set to: 0
 32502                           ;../../VLCBlib_PIC/can18_ecan.c: 485:                         canDiagnostics[0x07].asUin
      +                          t++;
 32503   005212  0101               	movlb	1	; () banked
 32504   005214  4B88               	infsnz	(_canDiagnostics+14)& (0+255),f,b
 32505   005216  2B89               	incf	(_canDiagnostics+15)& (0+255),f,b
 32506                           
 32507                           ; BSR set to: 1
 32508                           ;../../VLCBlib_PIC/can18_ecan.c: 486:                         updateModuleErrorStatus();
 32509   005218  ECAC  F061         	call	_updateModuleErrorStatus	;wreg free
 32510                           
 32511                           ;../../VLCBlib_PIC/can18_ecan.c: 487:                     } else {
 32512   00521C  0012               	return	
 32513   00521E                     l18644:
 32514                           
 32515                           ; BSR set to: 0
 32516                           ;../../VLCBlib_PIC/can18_ecan.c: 489:                         m->opc = mp->opc;
 32517   00521E  EE20 F001          	lfsr	2,1
 32518   005222  5199               	movf	canSendMessage@mp& (0+255),w,b
 32519   005224  26D9               	addwf	fsr2l,f,c
 32520   005226  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32521   005228  22DA               	addwfc	fsr2h,f,c
 32522   00522A  EE10 F001          	lfsr	1,1
 32523   00522E  51A0               	movf	canSendMessage@m& (0+255),w,b
 32524   005230  26E1               	addwf	fsr1l,f,c
 32525   005232  51A1               	movf	(canSendMessage@m+1)& (0+255),w,b
 32526   005234  22E2               	addwfc	fsr1h,f,c
 32527   005236  CFDF FFE7          	movff	indf2,indf1
 32528                           
 32529                           ; BSR set to: 0
 32530                           ;../../VLCBlib_PIC/can18_ecan.c: 490:                         m->len = mp->len;
 32531   00523A  C099  FFD9         	movff	canSendMessage@mp,fsr2l
 32532   00523E  C09A  FFDA         	movff	canSendMessage@mp+1,fsr2h
 32533   005242  C0A0  FFE1         	movff	canSendMessage@m,fsr1l
 32534   005246  C0A1  FFE2         	movff	canSendMessage@m+1,fsr1h
 32535   00524A  CFDF FFE7          	movff	indf2,indf1
 32536                           
 32537                           ; BSR set to: 0
 32538                           ;../../VLCBlib_PIC/can18_ecan.c: 491:                         m->bytes[0] = mp->bytes[0]
      +                          ;
 32539   00524E  EE20 F002          	lfsr	2,2
 32540   005252  5199               	movf	canSendMessage@mp& (0+255),w,b
 32541   005254  26D9               	addwf	fsr2l,f,c
 32542   005256  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32543   005258  22DA               	addwfc	fsr2h,f,c
 32544   00525A  EE10 F002          	lfsr	1,2
 32545   00525E  51A0               	movf	canSendMessage@m& (0+255),w,b
 32546   005260  26E1               	addwf	fsr1l,f,c
 32547   005262  51A1               	movf	(canSendMessage@m+1)& (0+255),w,b
 32548   005264  22E2               	addwfc	fsr1h,f,c
 32549   005266  CFDF FFE7          	movff	indf2,indf1
 32550                           
 32551                           ; BSR set to: 0
 32552                           ;../../VLCBlib_PIC/can18_ecan.c: 492:                         m->bytes[1] = mp->bytes[1]
      +                          ;
 32553   00526A  EE20 F003          	lfsr	2,3
 32554   00526E  5199               	movf	canSendMessage@mp& (0+255),w,b
 32555   005270  26D9               	addwf	fsr2l,f,c
 32556   005272  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32557   005274  22DA               	addwfc	fsr2h,f,c
 32558   005276  EE10 F003          	lfsr	1,3
 32559   00527A  51A0               	movf	canSendMessage@m& (0+255),w,b
 32560   00527C  26E1               	addwf	fsr1l,f,c
 32561   00527E  51A1               	movf	(canSendMessage@m+1)& (0+255),w,b
 32562   005280  22E2               	addwfc	fsr1h,f,c
 32563   005282  CFDF FFE7          	movff	indf2,indf1
 32564                           
 32565                           ; BSR set to: 0
 32566                           ;../../VLCBlib_PIC/can18_ecan.c: 493:                         m->bytes[2] = mp->bytes[2]
      +                          ;
 32567   005286  EE20 F004          	lfsr	2,4
 32568   00528A  5199               	movf	canSendMessage@mp& (0+255),w,b
 32569   00528C  26D9               	addwf	fsr2l,f,c
 32570   00528E  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32571   005290  22DA               	addwfc	fsr2h,f,c
 32572   005292  EE10 F004          	lfsr	1,4
 32573   005296  51A0               	movf	canSendMessage@m& (0+255),w,b
 32574   005298  26E1               	addwf	fsr1l,f,c
 32575   00529A  51A1               	movf	(canSendMessage@m+1)& (0+255),w,b
 32576   00529C  22E2               	addwfc	fsr1h,f,c
 32577   00529E  CFDF FFE7          	movff	indf2,indf1
 32578                           
 32579                           ; BSR set to: 0
 32580                           ;../../VLCBlib_PIC/can18_ecan.c: 494:                         m->bytes[3] = mp->bytes[3]
      +                          ;
 32581   0052A2  EE20 F005          	lfsr	2,5
 32582   0052A6  5199               	movf	canSendMessage@mp& (0+255),w,b
 32583   0052A8  26D9               	addwf	fsr2l,f,c
 32584   0052AA  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32585   0052AC  22DA               	addwfc	fsr2h,f,c
 32586   0052AE  EE10 F005          	lfsr	1,5
 32587   0052B2  51A0               	movf	canSendMessage@m& (0+255),w,b
 32588   0052B4  26E1               	addwf	fsr1l,f,c
 32589   0052B6  51A1               	movf	(canSendMessage@m+1)& (0+255),w,b
 32590   0052B8  22E2               	addwfc	fsr1h,f,c
 32591   0052BA  CFDF FFE7          	movff	indf2,indf1
 32592                           
 32593                           ; BSR set to: 0
 32594                           ;../../VLCBlib_PIC/can18_ecan.c: 495:                         m->bytes[4] = mp->bytes[4]
      +                          ;
 32595   0052BE  EE20 F006          	lfsr	2,6
 32596   0052C2  5199               	movf	canSendMessage@mp& (0+255),w,b
 32597   0052C4  26D9               	addwf	fsr2l,f,c
 32598   0052C6  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32599   0052C8  22DA               	addwfc	fsr2h,f,c
 32600   0052CA  EE10 F006          	lfsr	1,6
 32601   0052CE  51A0               	movf	canSendMessage@m& (0+255),w,b
 32602   0052D0  26E1               	addwf	fsr1l,f,c
 32603   0052D2  51A1               	movf	(canSendMessage@m+1)& (0+255),w,b
 32604   0052D4  22E2               	addwfc	fsr1h,f,c
 32605   0052D6  CFDF FFE7          	movff	indf2,indf1
 32606                           
 32607                           ; BSR set to: 0
 32608                           ;../../VLCBlib_PIC/can18_ecan.c: 496:                         m->bytes[5] = mp->bytes[5]
      +                          ;
 32609   0052DA  EE20 F007          	lfsr	2,7
 32610   0052DE  5199               	movf	canSendMessage@mp& (0+255),w,b
 32611   0052E0  26D9               	addwf	fsr2l,f,c
 32612   0052E2  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32613   0052E4  22DA               	addwfc	fsr2h,f,c
 32614   0052E6  EE10 F007          	lfsr	1,7
 32615   0052EA  51A0               	movf	canSendMessage@m& (0+255),w,b
 32616   0052EC  26E1               	addwf	fsr1l,f,c
 32617   0052EE  51A1               	movf	(canSendMessage@m+1)& (0+255),w,b
 32618   0052F0  22E2               	addwfc	fsr1h,f,c
 32619   0052F2  CFDF FFE7          	movff	indf2,indf1
 32620                           
 32621                           ; BSR set to: 0
 32622                           ;../../VLCBlib_PIC/can18_ecan.c: 497:                         m->bytes[6] = mp->bytes[6]
      +                          ;
 32623   0052F6  EE20 F008          	lfsr	2,8
 32624   0052FA  5199               	movf	canSendMessage@mp& (0+255),w,b
 32625   0052FC  26D9               	addwf	fsr2l,f,c
 32626   0052FE  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32627   005300  22DA               	addwfc	fsr2h,f,c
 32628   005302  EE10 F008          	lfsr	1,8
 32629   005306  51A0               	movf	canSendMessage@m& (0+255),w,b
 32630   005308  26E1               	addwf	fsr1l,f,c
 32631   00530A  51A1               	movf	(canSendMessage@m+1)& (0+255),w,b
 32632   00530C  22E2               	addwfc	fsr1h,f,c
 32633   00530E  CFDF FFE7          	movff	indf2,indf1
 32634   005312  0012               	return	
 32635   005314                     l18664:
 32636                           
 32637                           ;../../VLCBlib_PIC/can18_ecan.c: 506:     if (push(&txQueue, mp) == QUEUE_FAIL) {
 32638   005314  0E21               	movlw	low _txQueue
 32639   005316  0100               	movlb	0	; () banked
 32640   005318  6F8D               	movwf	push@q& (0+255),b
 32641   00531A  C099  F08E         	movff	canSendMessage@mp,push@m
 32642   00531E  C09A  F08F         	movff	canSendMessage@mp+1,push@m+1
 32643   005322  EC77  F020         	call	_push	;wreg free
 32644   005326  0900               	iorlw	0
 32645   005328  A4D8               	btfss	status,2,c
 32646   00532A  D007               	goto	l2891
 32647                           
 32648                           ;../../VLCBlib_PIC/can18_ecan.c: 507:         canDiagnostics[0x04].asUint++;
 32649   00532C  0101               	movlb	1	; () banked
 32650   00532E  4B82               	infsnz	(_canDiagnostics+8)& (0+255),f,b
 32651   005330  2B83               	incf	(_canDiagnostics+9)& (0+255),f,b
 32652                           
 32653                           ; BSR set to: 1
 32654                           ;../../VLCBlib_PIC/can18_ecan.c: 508:         updateModuleErrorStatus();
 32655   005332  ECAC  F061         	call	_updateModuleErrorStatus	;wreg free
 32656                           
 32657                           ;../../VLCBlib_PIC/can18_ecan.c: 509:         PIE5bits.TXBnIE = 1;
 32658   005336  8876               	bsf	118,4,c	;volatile
 32659   005338  0012               	return	
 32660   00533A                     l2891:
 32661                           
 32662                           ;../../VLCBlib_PIC/can18_ecan.c: 512:     PIE5bits.TXBnIE = 1;
 32663   00533A  8876               	bsf	118,4,c	;volatile
 32664                           
 32665                           ;../../VLCBlib_PIC/can18_ecan.c: 513:     return SEND_OK;;	Return value of _canSendMessa
      +                          ge is never used
 32666   00533C  0012               	return		;funcret
 32667   00533E                     __end_of_canSendMessage:
 32668                           	callstack 0
 32669                           
 32670 ;; *************** function _quantity *****************
 32671 ;; Defined at:
 32672 ;;		line 129 in file "../../VLCBlib_PIC/messageQueue.c"
 32673 ;; Parameters:    Size  Location     Type
 32674 ;;  q               1   45[BANK0 ] PTR struct MessageQueue
 32675 ;;		 -> txQueue(5), 
 32676 ;; Auto vars:     Size  Location     Type
 32677 ;;		None
 32678 ;; Return value:  Size  Location     Type
 32679 ;;                  1    wreg      unsigned char 
 32680 ;; Registers used:
 32681 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32682 ;; Tracked objects:
 32683 ;;		On entry : 0/0
 32684 ;;		On exit  : 0/0
 32685 ;;		Unchanged: 0/0
 32686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32687 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32689 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32690 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32691 ;;Total ram usage:        5 bytes
 32692 ;; Hardware stack levels used: 1
 32693 ;; Hardware stack levels required when called: 12
 32694 ;; This function calls:
 32695 ;;		Nothing
 32696 ;; This function is called by:
 32697 ;;		_canSendMessage
 32698 ;; This function uses a non-reentrant model
 32699 ;;
 32700                           
 32701                           	psect	text125
 32702   00BB90                     __ptext125:
 32703                           	callstack 0
 32704   00BB90                     _quantity:
 32705                           	callstack 12
 32706                           
 32707                           ;../../VLCBlib_PIC/messageQueue.c: 130:     return (q->writeIndex - q->readIndex) & (q->
      +                          size -1);
 32708                           
 32709                           ;incstack = 0
 32710   00BB90  0100               	movlb	0	; () banked
 32711   00BB92  518D               	movf	quantity@q& (0+255),w,b
 32712   00BB94  6ED9               	movwf	fsr2l,c
 32713   00BB96  6ADA               	clrf	fsr2h,c
 32714   00BB98  0E02               	movlw	2
 32715   00BB9A  26D9               	addwf	fsr2l,f,c
 32716   00BB9C  50DF               	movf	indf2,w,c
 32717   00BB9E  6F8E               	movwf	??_quantity& (0+255),b
 32718   00BBA0  518D               	movf	quantity@q& (0+255),w,b
 32719   00BBA2  6ED9               	movwf	fsr2l,c
 32720   00BBA4  6ADA               	clrf	fsr2h,c
 32721   00BBA6  0E03               	movlw	3
 32722   00BBA8  26D9               	addwf	fsr2l,f,c
 32723   00BBAA  50DF               	movf	indf2,w,c
 32724   00BBAC  6F8F               	movwf	(??_quantity+1)& (0+255),b
 32725   00BBAE  518E               	movf	??_quantity& (0+255),w,b
 32726   00BBB0  5D8F               	subwf	(??_quantity+1)& (0+255),w,b
 32727   00BBB2  6F90               	movwf	(??_quantity+2)& (0+255),b
 32728   00BBB4  518D               	movf	quantity@q& (0+255),w,b
 32729   00BBB6  6ED9               	movwf	fsr2l,c
 32730   00BBB8  6ADA               	clrf	fsr2h,c
 32731   00BBBA  0E04               	movlw	4
 32732   00BBBC  26D9               	addwf	fsr2l,f,c
 32733   00BBBE  50DF               	movf	indf2,w,c
 32734   00BBC0  6F91               	movwf	(??_quantity+3)& (0+255),b
 32735   00BBC2  0591               	decf	(??_quantity+3)& (0+255),w,b
 32736   00BBC4  1590               	andwf	(??_quantity+2)& (0+255),w,b
 32737                           
 32738                           ; BSR set to: 0
 32739   00BBC6  0012               	return		;funcret
 32740   00BBC8                     __end_of_quantity:
 32741                           	callstack 0
 32742                           
 32743 ;; *************** function _push *****************
 32744 ;; Defined at:
 32745 ;;		line 57 in file "../../VLCBlib_PIC/messageQueue.c"
 32746 ;; Parameters:    Size  Location     Type
 32747 ;;  q               1   45[BANK0 ] PTR struct MessageQueue
 32748 ;;		 -> txQueue(5), 
 32749 ;;  m               2   46[BANK0 ] PTR struct Message
 32750 ;;		 -> tmpMessage(9), 
 32751 ;; Auto vars:     Size  Location     Type
 32752 ;;		None
 32753 ;; Return value:  Size  Location     Type
 32754 ;;                  1    wreg      enum E12867
 32755 ;; Registers used:
 32756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32757 ;; Tracked objects:
 32758 ;;		On entry : 0/0
 32759 ;;		On exit  : 0/0
 32760 ;;		Unchanged: 0/0
 32761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32762 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32764 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32765 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32766 ;;Total ram usage:       12 bytes
 32767 ;; Hardware stack levels used: 1
 32768 ;; Hardware stack levels required when called: 12
 32769 ;; This function calls:
 32770 ;;		Nothing
 32771 ;; This function is called by:
 32772 ;;		_canSendMessage
 32773 ;; This function uses a non-reentrant model
 32774 ;;
 32775                           
 32776                           	psect	text126
 32777   0040EE                     __ptext126:
 32778                           	callstack 0
 32779   0040EE                     _push:
 32780                           	callstack 12
 32781                           
 32782                           ;../../VLCBlib_PIC/messageQueue.c: 58:     if (((q->writeIndex+1)&((q->size)-1)) == q->r
      +                          eadIndex) return QUEUE_FAIL;
 32783                           
 32784                           ; BSR set to: 0
 32785                           ;incstack = 0
 32786   0040EE  0100               	movlb	0	; () banked
 32787   0040F0  518D               	movf	push@q& (0+255),w,b
 32788   0040F2  6ED9               	movwf	fsr2l,c
 32789   0040F4  6ADA               	clrf	fsr2h,c
 32790   0040F6  0E02               	movlw	2
 32791   0040F8  26D9               	addwf	fsr2l,f,c
 32792   0040FA  50DF               	movf	indf2,w,c
 32793   0040FC  6F90               	movwf	??_push& (0+255),b
 32794   0040FE  6B91               	clrf	(??_push+1)& (0+255),b
 32795   004100  518D               	movf	push@q& (0+255),w,b
 32796   004102  6ED9               	movwf	fsr2l,c
 32797   004104  6ADA               	clrf	fsr2h,c
 32798   004106  0E04               	movlw	4
 32799   004108  26D9               	addwf	fsr2l,f,c
 32800   00410A  50DF               	movf	indf2,w,c
 32801   00410C  6F92               	movwf	(??_push+2)& (0+255),b
 32802   00410E  0EFF               	movlw	255
 32803   004110  2592               	addwf	(??_push+2)& (0+255),w,b
 32804   004112  6F93               	movwf	(??_push+3)& (0+255),b
 32805   004114  6B94               	clrf	(??_push+4)& (0+255),b
 32806   004116  0EFF               	movlw	255
 32807   004118  2394               	addwfc	(??_push+4)& (0+255),f,b
 32808   00411A  518D               	movf	push@q& (0+255),w,b
 32809   00411C  6ED9               	movwf	fsr2l,c
 32810   00411E  6ADA               	clrf	fsr2h,c
 32811   004120  0E03               	movlw	3
 32812   004122  26D9               	addwf	fsr2l,f,c
 32813   004124  50DF               	movf	indf2,w,c
 32814   004126  6F95               	movwf	(??_push+5)& (0+255),b
 32815   004128  6B96               	clrf	(??_push+6)& (0+255),b
 32816   00412A  0E01               	movlw	1
 32817   00412C  2795               	addwf	(??_push+5)& (0+255),f,b
 32818   00412E  0E00               	movlw	0
 32819   004130  2396               	addwfc	(??_push+6)& (0+255),f,b
 32820   004132  5193               	movf	(??_push+3)& (0+255),w,b
 32821   004134  1595               	andwf	(??_push+5)& (0+255),w,b
 32822   004136  6F97               	movwf	(??_push+7)& (0+255),b
 32823   004138  5194               	movf	(??_push+4)& (0+255),w,b
 32824   00413A  1596               	andwf	(??_push+6)& (0+255),w,b
 32825   00413C  6F98               	movwf	(??_push+8)& (0+255),b
 32826   00413E  5190               	movf	??_push& (0+255),w,b
 32827   004140  1997               	xorwf	(??_push+7)& (0+255),w,b
 32828   004142  E106               	bnz	l18466
 32829   004144  5191               	movf	(??_push+1)& (0+255),w,b
 32830   004146  1998               	xorwf	(??_push+8)& (0+255),w,b
 32831   004148  A4D8               	btfss	status,2,c
 32832   00414A  D002               	goto	l18466
 32833                           
 32834                           ; BSR set to: 0
 32835   00414C  0E00               	movlw	0
 32836   00414E  0012               	return	
 32837   004150                     l18466:
 32838                           
 32839                           ; BSR set to: 0
 32840                           ;../../VLCBlib_PIC/messageQueue.c: 59:     (q->messages[q->writeIndex]).opc = m->opc;
 32841   004150  EE20 F001          	lfsr	2,1
 32842   004154  518E               	movf	push@m& (0+255),w,b
 32843   004156  26D9               	addwf	fsr2l,f,c
 32844   004158  518F               	movf	(push@m+1)& (0+255),w,b
 32845   00415A  22DA               	addwfc	fsr2h,f,c
 32846   00415C  518D               	movf	push@q& (0+255),w,b
 32847   00415E  6EE1               	movwf	fsr1l,c
 32848   004160  6AE2               	clrf	fsr1h,c
 32849   004162  0E03               	movlw	3
 32850   004164  26E1               	addwf	fsr1l,f,c
 32851   004166  50E7               	movf	indf1,w,c
 32852   004168  6F90               	movwf	??_push& (0+255),b
 32853   00416A  5190               	movf	??_push& (0+255),w,b
 32854   00416C  0D09               	mullw	9
 32855   00416E  CFF3 F091          	movff	prodl,??_push+1
 32856   004172  CFF4 F092          	movff	prodh,??_push+2
 32857   004176  518D               	movf	push@q& (0+255),w,b
 32858   004178  6EE1               	movwf	fsr1l,c
 32859   00417A  6AE2               	clrf	fsr1h,c
 32860   00417C  CFE6 F093          	movff	postinc1,??_push+3
 32861   004180  CFE5 F094          	movff	postdec1,??_push+4
 32862   004184  5191               	movf	(??_push+1)& (0+255),w,b
 32863   004186  2593               	addwf	(??_push+3)& (0+255),w,b
 32864   004188  6F95               	movwf	(??_push+5)& (0+255),b
 32865   00418A  5192               	movf	(??_push+2)& (0+255),w,b
 32866   00418C  2194               	addwfc	(??_push+4)& (0+255),w,b
 32867   00418E  6F96               	movwf	(??_push+6)& (0+255),b
 32868   004190  0E01               	movlw	1
 32869   004192  2595               	addwf	(??_push+5)& (0+255),w,b
 32870   004194  6EE1               	movwf	fsr1l,c
 32871   004196  0E00               	movlw	0
 32872   004198  2196               	addwfc	(??_push+6)& (0+255),w,b
 32873   00419A  6EE2               	movwf	fsr1h,c
 32874   00419C  CFDF FFE7          	movff	indf2,indf1
 32875                           
 32876                           ;../../VLCBlib_PIC/messageQueue.c: 60:     (q->messages[q->writeIndex]).bytes[0] = m->by
      +                          tes[0];
 32877   0041A0  EE20 F002          	lfsr	2,2
 32878   0041A4  518E               	movf	push@m& (0+255),w,b
 32879   0041A6  26D9               	addwf	fsr2l,f,c
 32880   0041A8  518F               	movf	(push@m+1)& (0+255),w,b
 32881   0041AA  22DA               	addwfc	fsr2h,f,c
 32882   0041AC  518D               	movf	push@q& (0+255),w,b
 32883   0041AE  6EE1               	movwf	fsr1l,c
 32884   0041B0  6AE2               	clrf	fsr1h,c
 32885   0041B2  0E03               	movlw	3
 32886   0041B4  26E1               	addwf	fsr1l,f,c
 32887   0041B6  50E7               	movf	indf1,w,c
 32888   0041B8  6F90               	movwf	??_push& (0+255),b
 32889   0041BA  5190               	movf	??_push& (0+255),w,b
 32890   0041BC  0D09               	mullw	9
 32891   0041BE  CFF3 F091          	movff	prodl,??_push+1
 32892   0041C2  CFF4 F092          	movff	prodh,??_push+2
 32893   0041C6  518D               	movf	push@q& (0+255),w,b
 32894   0041C8  6EE1               	movwf	fsr1l,c
 32895   0041CA  6AE2               	clrf	fsr1h,c
 32896   0041CC  CFE6 F093          	movff	postinc1,??_push+3
 32897   0041D0  CFE5 F094          	movff	postdec1,??_push+4
 32898   0041D4  5191               	movf	(??_push+1)& (0+255),w,b
 32899   0041D6  2593               	addwf	(??_push+3)& (0+255),w,b
 32900   0041D8  6F95               	movwf	(??_push+5)& (0+255),b
 32901   0041DA  5192               	movf	(??_push+2)& (0+255),w,b
 32902   0041DC  2194               	addwfc	(??_push+4)& (0+255),w,b
 32903   0041DE  6F96               	movwf	(??_push+6)& (0+255),b
 32904   0041E0  0E02               	movlw	2
 32905   0041E2  2595               	addwf	(??_push+5)& (0+255),w,b
 32906   0041E4  6EE1               	movwf	fsr1l,c
 32907   0041E6  0E00               	movlw	0
 32908   0041E8  2196               	addwfc	(??_push+6)& (0+255),w,b
 32909   0041EA  6EE2               	movwf	fsr1h,c
 32910   0041EC  CFDF FFE7          	movff	indf2,indf1
 32911                           
 32912                           ;../../VLCBlib_PIC/messageQueue.c: 61:     (q->messages[q->writeIndex]).bytes[1] = m->by
      +                          tes[1];
 32913   0041F0  EE20 F003          	lfsr	2,3
 32914   0041F4  518E               	movf	push@m& (0+255),w,b
 32915   0041F6  26D9               	addwf	fsr2l,f,c
 32916   0041F8  518F               	movf	(push@m+1)& (0+255),w,b
 32917   0041FA  22DA               	addwfc	fsr2h,f,c
 32918   0041FC  518D               	movf	push@q& (0+255),w,b
 32919   0041FE  6EE1               	movwf	fsr1l,c
 32920   004200  6AE2               	clrf	fsr1h,c
 32921   004202  0E03               	movlw	3
 32922   004204  26E1               	addwf	fsr1l,f,c
 32923   004206  50E7               	movf	indf1,w,c
 32924   004208  6F90               	movwf	??_push& (0+255),b
 32925   00420A  5190               	movf	??_push& (0+255),w,b
 32926   00420C  0D09               	mullw	9
 32927   00420E  CFF3 F091          	movff	prodl,??_push+1
 32928   004212  CFF4 F092          	movff	prodh,??_push+2
 32929   004216  518D               	movf	push@q& (0+255),w,b
 32930   004218  6EE1               	movwf	fsr1l,c
 32931   00421A  6AE2               	clrf	fsr1h,c
 32932   00421C  CFE6 F093          	movff	postinc1,??_push+3
 32933   004220  CFE5 F094          	movff	postdec1,??_push+4
 32934   004224  5191               	movf	(??_push+1)& (0+255),w,b
 32935   004226  2593               	addwf	(??_push+3)& (0+255),w,b
 32936   004228  6F95               	movwf	(??_push+5)& (0+255),b
 32937   00422A  5192               	movf	(??_push+2)& (0+255),w,b
 32938   00422C  2194               	addwfc	(??_push+4)& (0+255),w,b
 32939   00422E  6F96               	movwf	(??_push+6)& (0+255),b
 32940   004230  0E03               	movlw	3
 32941   004232  2595               	addwf	(??_push+5)& (0+255),w,b
 32942   004234  6EE1               	movwf	fsr1l,c
 32943   004236  0E00               	movlw	0
 32944   004238  2196               	addwfc	(??_push+6)& (0+255),w,b
 32945   00423A  6EE2               	movwf	fsr1h,c
 32946   00423C  CFDF FFE7          	movff	indf2,indf1
 32947                           
 32948                           ;../../VLCBlib_PIC/messageQueue.c: 62:     (q->messages[q->writeIndex]).bytes[2] = m->by
      +                          tes[2];
 32949   004240  EE20 F004          	lfsr	2,4
 32950   004244  518E               	movf	push@m& (0+255),w,b
 32951   004246  26D9               	addwf	fsr2l,f,c
 32952   004248  518F               	movf	(push@m+1)& (0+255),w,b
 32953   00424A  22DA               	addwfc	fsr2h,f,c
 32954   00424C  518D               	movf	push@q& (0+255),w,b
 32955   00424E  6EE1               	movwf	fsr1l,c
 32956   004250  6AE2               	clrf	fsr1h,c
 32957   004252  0E03               	movlw	3
 32958   004254  26E1               	addwf	fsr1l,f,c
 32959   004256  50E7               	movf	indf1,w,c
 32960   004258  6F90               	movwf	??_push& (0+255),b
 32961   00425A  5190               	movf	??_push& (0+255),w,b
 32962   00425C  0D09               	mullw	9
 32963   00425E  CFF3 F091          	movff	prodl,??_push+1
 32964   004262  CFF4 F092          	movff	prodh,??_push+2
 32965   004266  518D               	movf	push@q& (0+255),w,b
 32966   004268  6EE1               	movwf	fsr1l,c
 32967   00426A  6AE2               	clrf	fsr1h,c
 32968   00426C  CFE6 F093          	movff	postinc1,??_push+3
 32969   004270  CFE5 F094          	movff	postdec1,??_push+4
 32970   004274  5191               	movf	(??_push+1)& (0+255),w,b
 32971   004276  2593               	addwf	(??_push+3)& (0+255),w,b
 32972   004278  6F95               	movwf	(??_push+5)& (0+255),b
 32973   00427A  5192               	movf	(??_push+2)& (0+255),w,b
 32974   00427C  2194               	addwfc	(??_push+4)& (0+255),w,b
 32975   00427E  6F96               	movwf	(??_push+6)& (0+255),b
 32976   004280  0E04               	movlw	4
 32977   004282  2595               	addwf	(??_push+5)& (0+255),w,b
 32978   004284  6EE1               	movwf	fsr1l,c
 32979   004286  0E00               	movlw	0
 32980   004288  2196               	addwfc	(??_push+6)& (0+255),w,b
 32981   00428A  6EE2               	movwf	fsr1h,c
 32982   00428C  CFDF FFE7          	movff	indf2,indf1
 32983                           
 32984                           ;../../VLCBlib_PIC/messageQueue.c: 63:     (q->messages[q->writeIndex]).bytes[3] = m->by
      +                          tes[3];
 32985   004290  EE20 F005          	lfsr	2,5
 32986   004294  518E               	movf	push@m& (0+255),w,b
 32987   004296  26D9               	addwf	fsr2l,f,c
 32988   004298  518F               	movf	(push@m+1)& (0+255),w,b
 32989   00429A  22DA               	addwfc	fsr2h,f,c
 32990   00429C  518D               	movf	push@q& (0+255),w,b
 32991   00429E  6EE1               	movwf	fsr1l,c
 32992   0042A0  6AE2               	clrf	fsr1h,c
 32993   0042A2  0E03               	movlw	3
 32994   0042A4  26E1               	addwf	fsr1l,f,c
 32995   0042A6  50E7               	movf	indf1,w,c
 32996   0042A8  6F90               	movwf	??_push& (0+255),b
 32997   0042AA  5190               	movf	??_push& (0+255),w,b
 32998   0042AC  0D09               	mullw	9
 32999   0042AE  CFF3 F091          	movff	prodl,??_push+1
 33000   0042B2  CFF4 F092          	movff	prodh,??_push+2
 33001   0042B6  518D               	movf	push@q& (0+255),w,b
 33002   0042B8  6EE1               	movwf	fsr1l,c
 33003   0042BA  6AE2               	clrf	fsr1h,c
 33004   0042BC  CFE6 F093          	movff	postinc1,??_push+3
 33005   0042C0  CFE5 F094          	movff	postdec1,??_push+4
 33006   0042C4  5191               	movf	(??_push+1)& (0+255),w,b
 33007   0042C6  2593               	addwf	(??_push+3)& (0+255),w,b
 33008   0042C8  6F95               	movwf	(??_push+5)& (0+255),b
 33009   0042CA  5192               	movf	(??_push+2)& (0+255),w,b
 33010   0042CC  2194               	addwfc	(??_push+4)& (0+255),w,b
 33011   0042CE  6F96               	movwf	(??_push+6)& (0+255),b
 33012   0042D0  0E05               	movlw	5
 33013   0042D2  2595               	addwf	(??_push+5)& (0+255),w,b
 33014   0042D4  6EE1               	movwf	fsr1l,c
 33015   0042D6  0E00               	movlw	0
 33016   0042D8  2196               	addwfc	(??_push+6)& (0+255),w,b
 33017   0042DA  6EE2               	movwf	fsr1h,c
 33018   0042DC  CFDF FFE7          	movff	indf2,indf1
 33019                           
 33020                           ;../../VLCBlib_PIC/messageQueue.c: 64:     (q->messages[q->writeIndex]).bytes[4] = m->by
      +                          tes[4];
 33021   0042E0  EE20 F006          	lfsr	2,6
 33022   0042E4  518E               	movf	push@m& (0+255),w,b
 33023   0042E6  26D9               	addwf	fsr2l,f,c
 33024   0042E8  518F               	movf	(push@m+1)& (0+255),w,b
 33025   0042EA  22DA               	addwfc	fsr2h,f,c
 33026   0042EC  518D               	movf	push@q& (0+255),w,b
 33027   0042EE  6EE1               	movwf	fsr1l,c
 33028   0042F0  6AE2               	clrf	fsr1h,c
 33029   0042F2  0E03               	movlw	3
 33030   0042F4  26E1               	addwf	fsr1l,f,c
 33031   0042F6  50E7               	movf	indf1,w,c
 33032   0042F8  6F90               	movwf	??_push& (0+255),b
 33033   0042FA  5190               	movf	??_push& (0+255),w,b
 33034   0042FC  0D09               	mullw	9
 33035   0042FE  CFF3 F091          	movff	prodl,??_push+1
 33036   004302  CFF4 F092          	movff	prodh,??_push+2
 33037   004306  518D               	movf	push@q& (0+255),w,b
 33038   004308  6EE1               	movwf	fsr1l,c
 33039   00430A  6AE2               	clrf	fsr1h,c
 33040   00430C  CFE6 F093          	movff	postinc1,??_push+3
 33041   004310  CFE5 F094          	movff	postdec1,??_push+4
 33042   004314  5191               	movf	(??_push+1)& (0+255),w,b
 33043   004316  2593               	addwf	(??_push+3)& (0+255),w,b
 33044   004318  6F95               	movwf	(??_push+5)& (0+255),b
 33045   00431A  5192               	movf	(??_push+2)& (0+255),w,b
 33046   00431C  2194               	addwfc	(??_push+4)& (0+255),w,b
 33047   00431E  6F96               	movwf	(??_push+6)& (0+255),b
 33048   004320  0E06               	movlw	6
 33049   004322  2595               	addwf	(??_push+5)& (0+255),w,b
 33050   004324  6EE1               	movwf	fsr1l,c
 33051   004326  0E00               	movlw	0
 33052   004328  2196               	addwfc	(??_push+6)& (0+255),w,b
 33053   00432A  6EE2               	movwf	fsr1h,c
 33054   00432C  CFDF FFE7          	movff	indf2,indf1
 33055                           
 33056                           ;../../VLCBlib_PIC/messageQueue.c: 65:     (q->messages[q->writeIndex]).bytes[5] = m->by
      +                          tes[5];
 33057   004330  EE20 F007          	lfsr	2,7
 33058   004334  518E               	movf	push@m& (0+255),w,b
 33059   004336  26D9               	addwf	fsr2l,f,c
 33060   004338  518F               	movf	(push@m+1)& (0+255),w,b
 33061   00433A  22DA               	addwfc	fsr2h,f,c
 33062   00433C  518D               	movf	push@q& (0+255),w,b
 33063   00433E  6EE1               	movwf	fsr1l,c
 33064   004340  6AE2               	clrf	fsr1h,c
 33065   004342  0E03               	movlw	3
 33066   004344  26E1               	addwf	fsr1l,f,c
 33067   004346  50E7               	movf	indf1,w,c
 33068   004348  6F90               	movwf	??_push& (0+255),b
 33069   00434A  5190               	movf	??_push& (0+255),w,b
 33070   00434C  0D09               	mullw	9
 33071   00434E  CFF3 F091          	movff	prodl,??_push+1
 33072   004352  CFF4 F092          	movff	prodh,??_push+2
 33073   004356  518D               	movf	push@q& (0+255),w,b
 33074   004358  6EE1               	movwf	fsr1l,c
 33075   00435A  6AE2               	clrf	fsr1h,c
 33076   00435C  CFE6 F093          	movff	postinc1,??_push+3
 33077   004360  CFE5 F094          	movff	postdec1,??_push+4
 33078   004364  5191               	movf	(??_push+1)& (0+255),w,b
 33079   004366  2593               	addwf	(??_push+3)& (0+255),w,b
 33080   004368  6F95               	movwf	(??_push+5)& (0+255),b
 33081   00436A  5192               	movf	(??_push+2)& (0+255),w,b
 33082   00436C  2194               	addwfc	(??_push+4)& (0+255),w,b
 33083   00436E  6F96               	movwf	(??_push+6)& (0+255),b
 33084   004370  0E07               	movlw	7
 33085   004372  2595               	addwf	(??_push+5)& (0+255),w,b
 33086   004374  6EE1               	movwf	fsr1l,c
 33087   004376  0E00               	movlw	0
 33088   004378  2196               	addwfc	(??_push+6)& (0+255),w,b
 33089   00437A  6EE2               	movwf	fsr1h,c
 33090   00437C  CFDF FFE7          	movff	indf2,indf1
 33091                           
 33092                           ;../../VLCBlib_PIC/messageQueue.c: 66:     (q->messages[q->writeIndex]).bytes[6] = m->by
      +                          tes[6];
 33093   004380  EE20 F008          	lfsr	2,8
 33094   004384  518E               	movf	push@m& (0+255),w,b
 33095   004386  26D9               	addwf	fsr2l,f,c
 33096   004388  518F               	movf	(push@m+1)& (0+255),w,b
 33097   00438A  22DA               	addwfc	fsr2h,f,c
 33098   00438C  518D               	movf	push@q& (0+255),w,b
 33099   00438E  6EE1               	movwf	fsr1l,c
 33100   004390  6AE2               	clrf	fsr1h,c
 33101   004392  0E03               	movlw	3
 33102   004394  26E1               	addwf	fsr1l,f,c
 33103   004396  50E7               	movf	indf1,w,c
 33104   004398  6F90               	movwf	??_push& (0+255),b
 33105   00439A  5190               	movf	??_push& (0+255),w,b
 33106   00439C  0D09               	mullw	9
 33107   00439E  CFF3 F091          	movff	prodl,??_push+1
 33108   0043A2  CFF4 F092          	movff	prodh,??_push+2
 33109   0043A6  518D               	movf	push@q& (0+255),w,b
 33110   0043A8  6EE1               	movwf	fsr1l,c
 33111   0043AA  6AE2               	clrf	fsr1h,c
 33112   0043AC  CFE6 F093          	movff	postinc1,??_push+3
 33113   0043B0  CFE5 F094          	movff	postdec1,??_push+4
 33114   0043B4  5191               	movf	(??_push+1)& (0+255),w,b
 33115   0043B6  2593               	addwf	(??_push+3)& (0+255),w,b
 33116   0043B8  6F95               	movwf	(??_push+5)& (0+255),b
 33117   0043BA  5192               	movf	(??_push+2)& (0+255),w,b
 33118   0043BC  2194               	addwfc	(??_push+4)& (0+255),w,b
 33119   0043BE  6F96               	movwf	(??_push+6)& (0+255),b
 33120   0043C0  0E08               	movlw	8
 33121   0043C2  2595               	addwf	(??_push+5)& (0+255),w,b
 33122   0043C4  6EE1               	movwf	fsr1l,c
 33123   0043C6  0E00               	movlw	0
 33124   0043C8  2196               	addwfc	(??_push+6)& (0+255),w,b
 33125   0043CA  6EE2               	movwf	fsr1h,c
 33126   0043CC  CFDF FFE7          	movff	indf2,indf1
 33127                           
 33128                           ;../../VLCBlib_PIC/messageQueue.c: 67:     (q->messages[q->writeIndex]).len = m->len;
 33129   0043D0  C08E  FFD9         	movff	push@m,fsr2l
 33130   0043D4  C08F  FFDA         	movff	push@m+1,fsr2h
 33131   0043D8  518D               	movf	push@q& (0+255),w,b
 33132   0043DA  6EE1               	movwf	fsr1l,c
 33133   0043DC  6AE2               	clrf	fsr1h,c
 33134   0043DE  0E03               	movlw	3
 33135   0043E0  26E1               	addwf	fsr1l,f,c
 33136   0043E2  50E7               	movf	indf1,w,c
 33137   0043E4  6F90               	movwf	??_push& (0+255),b
 33138   0043E6  5190               	movf	??_push& (0+255),w,b
 33139   0043E8  0D09               	mullw	9
 33140   0043EA  CFF3 F091          	movff	prodl,??_push+1
 33141   0043EE  CFF4 F092          	movff	prodh,??_push+2
 33142   0043F2  518D               	movf	push@q& (0+255),w,b
 33143   0043F4  6EE1               	movwf	fsr1l,c
 33144   0043F6  6AE2               	clrf	fsr1h,c
 33145   0043F8  CFE6 F093          	movff	postinc1,??_push+3
 33146   0043FC  CFE5 F094          	movff	postdec1,??_push+4
 33147   004400  5191               	movf	(??_push+1)& (0+255),w,b
 33148   004402  2593               	addwf	(??_push+3)& (0+255),w,b
 33149   004404  6EE1               	movwf	fsr1l,c
 33150   004406  5192               	movf	(??_push+2)& (0+255),w,b
 33151   004408  2194               	addwfc	(??_push+4)& (0+255),w,b
 33152   00440A  6EE2               	movwf	fsr1h,c
 33153   00440C  CFDF FFE7          	movff	indf2,indf1
 33154                           
 33155                           ; BSR set to: 0
 33156                           ;../../VLCBlib_PIC/messageQueue.c: 68:     q->writeIndex++;
 33157   004410  518D               	movf	push@q& (0+255),w,b
 33158   004412  6ED9               	movwf	fsr2l,c
 33159   004414  6ADA               	clrf	fsr2h,c
 33160   004416  0E03               	movlw	3
 33161   004418  26D9               	addwf	fsr2l,f,c
 33162   00441A  2ADF               	incf	indf2,f,c
 33163                           
 33164                           ; BSR set to: 0
 33165                           ;../../VLCBlib_PIC/messageQueue.c: 70:     if (q->writeIndex >= q->size) q->writeIndex =
      +                           0;
 33166   00441C  518D               	movf	push@q& (0+255),w,b
 33167   00441E  6ED9               	movwf	fsr2l,c
 33168   004420  6ADA               	clrf	fsr2h,c
 33169   004422  0E04               	movlw	4
 33170   004424  26D9               	addwf	fsr2l,f,c
 33171   004426  518D               	movf	push@q& (0+255),w,b
 33172   004428  6EE1               	movwf	fsr1l,c
 33173   00442A  6AE2               	clrf	fsr1h,c
 33174   00442C  0E03               	movlw	3
 33175   00442E  26E1               	addwf	fsr1l,f,c
 33176   004430  50DE               	movf	postinc2,w,c
 33177   004432  5CE6               	subwf	postinc1,w,c
 33178   004434  A0D8               	btfss	status,0,c
 33179   004436  D006               	goto	l18474
 33180                           
 33181                           ; BSR set to: 0
 33182   004438  518D               	movf	push@q& (0+255),w,b
 33183   00443A  6ED9               	movwf	fsr2l,c
 33184   00443C  6ADA               	clrf	fsr2h,c
 33185   00443E  0E03               	movlw	3
 33186   004440  26D9               	addwf	fsr2l,f,c
 33187   004442  6ADF               	clrf	indf2,c
 33188   004444                     l18474:
 33189                           
 33190                           ; BSR set to: 0
 33191                           ;../../VLCBlib_PIC/messageQueue.c: 71:     return QUEUE_SUCCESS;
 33192   004444  0E01               	movlw	1
 33193                           
 33194                           ; BSR set to: 0
 33195   004446  0012               	return		;funcret
 33196   004448                     __end_of_push:
 33197                           	callstack 0
 33198                           
 33199 ;; *************** function _isEvent *****************
 33200 ;; Defined at:
 33201 ;;		line 1114 in file "../../VLCBlib_PIC/vlcb.c"
 33202 ;; Parameters:    Size  Location     Type
 33203 ;;  opc             1    wreg     unsigned char 
 33204 ;; Auto vars:     Size  Location     Type
 33205 ;;  opc             1   46[BANK0 ] unsigned char 
 33206 ;; Return value:  Size  Location     Type
 33207 ;;                  1    wreg      enum E12700
 33208 ;; Registers used:
 33209 ;;		wreg, status,2, status,0
 33210 ;; Tracked objects:
 33211 ;;		On entry : 0/0
 33212 ;;		On exit  : 0/0
 33213 ;;		Unchanged: 0/0
 33214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33216 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33218 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33219 ;;Total ram usage:        2 bytes
 33220 ;; Hardware stack levels used: 1
 33221 ;; Hardware stack levels required when called: 12
 33222 ;; This function calls:
 33223 ;;		Nothing
 33224 ;; This function is called by:
 33225 ;;		_canSendMessage
 33226 ;; This function uses a non-reentrant model
 33227 ;;
 33228                           
 33229                           	psect	text127
 33230   00C012                     __ptext127:
 33231                           	callstack 0
 33232   00C012                     _isEvent:
 33233                           	callstack 12
 33234                           
 33235                           ; BSR set to: 0
 33236                           ;incstack = 0
 33237                           ;isEvent@opc stored from wreg
 33238   00C012  0100               	movlb	0	; () banked
 33239   00C014  6F8E               	movwf	isEvent@opc& (0+255),b
 33240                           
 33241                           ;../../VLCBlib_PIC/vlcb.c: 1115:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 33242   00C016  0E00               	movlw	0
 33243   00C018  0100               	movlb	0	; () banked
 33244   00C01A  6F8D               	movwf	_isEvent$5877& (0+255),b
 33245                           
 33246                           ; BSR set to: 0
 33247   00C01C  518E               	movf	isEvent@opc& (0+255),w,b
 33248   00C01E  0B90               	andlw	144
 33249   00C020  0A90               	xorlw	144
 33250   00C022  A4D8               	btfss	status,2,c
 33251   00C024  D008               	goto	l2425
 33252                           
 33253                           ; BSR set to: 0
 33254   00C026  518E               	movf	isEvent@opc& (0+255),w,b
 33255   00C028  0AFF               	xorlw	255
 33256   00C02A  0B06               	andlw	6
 33257   00C02C  0A06               	xorlw	6
 33258   00C02E  A4D8               	btfss	status,2,c
 33259   00C030  D002               	goto	l2425
 33260                           
 33261                           ; BSR set to: 0
 33262   00C032  0E01               	movlw	1
 33263   00C034  6F8D               	movwf	_isEvent$5877& (0+255),b
 33264   00C036                     l2425:
 33265                           
 33266                           ; BSR set to: 0
 33267   00C036  518D               	movf	_isEvent$5877& (0+255),w,b
 33268                           
 33269                           ; BSR set to: 0
 33270   00C038  0012               	return		;funcret
 33271   00C03A                     __end_of_isEvent:
 33272                           	callstack 0
 33273                           
 33274 ;; *************** function _have *****************
 33275 ;; Defined at:
 33276 ;;		line 837 in file "../../VLCBlib_PIC/vlcb.c"
 33277 ;; Parameters:    Size  Location     Type
 33278 ;;  id              1    wreg     unsigned char 
 33279 ;; Auto vars:     Size  Location     Type
 33280 ;;  id              1   47[BANK0 ] unsigned char 
 33281 ;;  i               1   48[BANK0 ] unsigned char 
 33282 ;; Return value:  Size  Location     Type
 33283 ;;                  1    wreg      enum E12830
 33284 ;; Registers used:
 33285 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 33286 ;; Tracked objects:
 33287 ;;		On entry : 0/0
 33288 ;;		On exit  : 0/0
 33289 ;;		Unchanged: 0/0
 33290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33292 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33293 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33294 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33295 ;;Total ram usage:        4 bytes
 33296 ;; Hardware stack levels used: 1
 33297 ;; Hardware stack levels required when called: 12
 33298 ;; This function calls:
 33299 ;;		Nothing
 33300 ;; This function is called by:
 33301 ;;		_getParameterFlags
 33302 ;;		_getParameter
 33303 ;;		_canSendMessage
 33304 ;; This function uses a non-reentrant model
 33305 ;;
 33306                           
 33307                           	psect	text128
 33308   00AC76                     __ptext128:
 33309                           	callstack 0
 33310   00AC76                     _have:
 33311                           	callstack 12
 33312                           
 33313                           ; BSR set to: 0
 33314                           ;incstack = 0
 33315                           ;have@id stored from wreg
 33316   00AC76  0100               	movlb	0	; () banked
 33317   00AC78  6F8F               	movwf	have@id& (0+255),b
 33318                           
 33319                           ;../../VLCBlib_PIC/vlcb.c: 838:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 839:     for (i
      +                          =0; i<9; i++) {
 33320   00AC7A  0E00               	movlw	0
 33321   00AC7C  0100               	movlb	0	; () banked
 33322   00AC7E  6F90               	movwf	have@i& (0+255),b
 33323   00AC80                     l18434:
 33324                           
 33325                           ; BSR set to: 0
 33326                           ;../../VLCBlib_PIC/vlcb.c: 840:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == id)) {
 33327   00AC80  5190               	movf	have@i& (0+255),w,b
 33328   00AC82  0D02               	mullw	2
 33329   00AC84  0E75               	movlw	low _services
 33330   00AC86  24F3               	addwf	243,w,c
 33331   00AC88  6EF6               	movwf	tblptrl,c
 33332   00AC8A  0EEE               	movlw	high _services
 33333   00AC8C  20F4               	addwfc	244,w,c
 33334   00AC8E  6EF7               	movwf	tblptrh,c
 33335   00AC90                     	if	1	;There are 3 active tblptr bytes
 33336   00AC90  6AF8               	clrf	tblptru,c
 33337   00AC92  0E00               	movlw	low (__mediumconst shr (0+16))
 33338   00AC94  22F8               	addwfc	tblptru,f,c
 33339   00AC96                     	endif
 33340   00AC96  0009               	tblrd		*+
 33341   00AC98  50F5               	movf	tablat,w,c
 33342   00AC9A  0009               	tblrd		*+
 33343   00AC9C  10F5               	iorwf	tablat,w,c
 33344   00AC9E  B4D8               	btfsc	status,2,c
 33345   00ACA0  D01D               	goto	l18442
 33346                           
 33347                           ; BSR set to: 0
 33348   00ACA2  5190               	movf	have@i& (0+255),w,b
 33349   00ACA4  0D02               	mullw	2
 33350   00ACA6  0E75               	movlw	low _services
 33351   00ACA8  24F3               	addwf	243,w,c
 33352   00ACAA  6EF6               	movwf	tblptrl,c
 33353   00ACAC  0EEE               	movlw	high _services
 33354   00ACAE  20F4               	addwfc	244,w,c
 33355   00ACB0  6EF7               	movwf	tblptrh,c
 33356   00ACB2                     	if	1	;There are 3 active tblptr bytes
 33357   00ACB2  6AF8               	clrf	tblptru,c
 33358   00ACB4  0E00               	movlw	low (__mediumconst shr (0+16))
 33359   00ACB6  22F8               	addwfc	tblptru,f,c
 33360   00ACB8                     	endif
 33361   00ACB8  0009               	tblrd		*+
 33362   00ACBA  CFF5 F08D          	movff	tablat,??_have
 33363   00ACBE  0009               	tblrd		*+
 33364   00ACC0  CFF5 F08E          	movff	tablat,??_have+1
 33365   00ACC4  C08D  FFF6         	movff	??_have,tblptrl
 33366   00ACC8  C08E  FFF7         	movff	??_have+1,tblptrh
 33367   00ACCC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 33368   00ACCC  6AF8               	clrf	tblptru,c
 33369   00ACCE                     	endif
 33370   00ACCE                     	if	0	;tblptru may be non-zero
 33371   00ACCE                     	endif
 33372   00ACCE  0008               	tblrd		*
 33373   00ACD0  50F5               	movf	tablat,w,c
 33374   00ACD2  198F               	xorwf	have@id& (0+255),w,b
 33375   00ACD4  A4D8               	btfss	status,2,c
 33376   00ACD6  D002               	goto	l18442
 33377                           
 33378                           ; BSR set to: 0
 33379                           ;../../VLCBlib_PIC/vlcb.c: 841:             return PRESENT;
 33380   00ACD8  0E01               	movlw	1
 33381   00ACDA  0012               	return	
 33382   00ACDC                     l18442:
 33383                           
 33384                           ; BSR set to: 0
 33385                           ;../../VLCBlib_PIC/vlcb.c: 843:     }
 33386   00ACDC  2B90               	incf	have@i& (0+255),f,b
 33387                           
 33388                           ; BSR set to: 0
 33389   00ACDE  0E08               	movlw	8
 33390   00ACE0  6590               	cpfsgt	have@i& (0+255),b
 33391   00ACE2  D7CE               	goto	l18434
 33392                           
 33393                           ; BSR set to: 0
 33394                           ;../../VLCBlib_PIC/vlcb.c: 844:     return NOT_PRESENT;
 33395   00ACE4  0E00               	movlw	0
 33396                           
 33397                           ; BSR set to: 0
 33398   00ACE6  0012               	return		;funcret
 33399   00ACE8                     __end_of_have:
 33400                           	callstack 0
 33401                           
 33402 ;; *************** function _getNextWriteMessage *****************
 33403 ;; Defined at:
 33404 ;;		line 79 in file "../../VLCBlib_PIC/messageQueue.c"
 33405 ;; Parameters:    Size  Location     Type
 33406 ;;  q               1   45[BANK0 ] PTR struct MessageQueue
 33407 ;;		 -> rxQueue(5), 
 33408 ;; Auto vars:     Size  Location     Type
 33409 ;;  wr              1   56[BANK0 ] unsigned char 
 33410 ;; Return value:  Size  Location     Type
 33411 ;;                  2   45[BANK0 ] PTR struct Message
 33412 ;; Registers used:
 33413 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33414 ;; Tracked objects:
 33415 ;;		On entry : 0/0
 33416 ;;		On exit  : 0/0
 33417 ;;		Unchanged: 0/0
 33418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33419 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33420 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33421 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33422 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33423 ;;Total ram usage:       12 bytes
 33424 ;; Hardware stack levels used: 1
 33425 ;; Hardware stack levels required when called: 12
 33426 ;; This function calls:
 33427 ;;		Nothing
 33428 ;; This function is called by:
 33429 ;;		_canSendMessage
 33430 ;; This function uses a non-reentrant model
 33431 ;;
 33432                           
 33433                           	psect	text129
 33434   0089BA                     __ptext129:
 33435                           	callstack 0
 33436   0089BA                     _getNextWriteMessage:
 33437                           	callstack 12
 33438                           
 33439                           ;../../VLCBlib_PIC/messageQueue.c: 80:     uint8_t wr;;../../VLCBlib_PIC/messageQueue.c:
      +                           81:     if (((q->writeIndex+1)&((q->size)-1)) == q->readIndex) return ((void*)0);
 33440                           
 33441                           ; BSR set to: 0
 33442                           ;incstack = 0
 33443   0089BA  0100               	movlb	0	; () banked
 33444   0089BC  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33445   0089BE  6ED9               	movwf	fsr2l,c
 33446   0089C0  6ADA               	clrf	fsr2h,c
 33447   0089C2  0E02               	movlw	2
 33448   0089C4  26D9               	addwf	fsr2l,f,c
 33449   0089C6  50DF               	movf	indf2,w,c
 33450   0089C8  6F8F               	movwf	??_getNextWriteMessage& (0+255),b
 33451   0089CA  6B90               	clrf	(??_getNextWriteMessage+1)& (0+255),b
 33452   0089CC  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33453   0089CE  6ED9               	movwf	fsr2l,c
 33454   0089D0  6ADA               	clrf	fsr2h,c
 33455   0089D2  0E04               	movlw	4
 33456   0089D4  26D9               	addwf	fsr2l,f,c
 33457   0089D6  50DF               	movf	indf2,w,c
 33458   0089D8  6F91               	movwf	(??_getNextWriteMessage+2)& (0+255),b
 33459   0089DA  0EFF               	movlw	255
 33460   0089DC  2591               	addwf	(??_getNextWriteMessage+2)& (0+255),w,b
 33461   0089DE  6F92               	movwf	(??_getNextWriteMessage+3)& (0+255),b
 33462   0089E0  6B93               	clrf	(??_getNextWriteMessage+4)& (0+255),b
 33463   0089E2  0EFF               	movlw	255
 33464   0089E4  2393               	addwfc	(??_getNextWriteMessage+4)& (0+255),f,b
 33465   0089E6  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33466   0089E8  6ED9               	movwf	fsr2l,c
 33467   0089EA  6ADA               	clrf	fsr2h,c
 33468   0089EC  0E03               	movlw	3
 33469   0089EE  26D9               	addwf	fsr2l,f,c
 33470   0089F0  50DF               	movf	indf2,w,c
 33471   0089F2  6F94               	movwf	(??_getNextWriteMessage+5)& (0+255),b
 33472   0089F4  6B95               	clrf	(??_getNextWriteMessage+6)& (0+255),b
 33473   0089F6  0E01               	movlw	1
 33474   0089F8  2794               	addwf	(??_getNextWriteMessage+5)& (0+255),f,b
 33475   0089FA  0E00               	movlw	0
 33476   0089FC  2395               	addwfc	(??_getNextWriteMessage+6)& (0+255),f,b
 33477   0089FE  5192               	movf	(??_getNextWriteMessage+3)& (0+255),w,b
 33478   008A00  1594               	andwf	(??_getNextWriteMessage+5)& (0+255),w,b
 33479   008A02  6F96               	movwf	(??_getNextWriteMessage+7)& (0+255),b
 33480   008A04  5193               	movf	(??_getNextWriteMessage+4)& (0+255),w,b
 33481   008A06  1595               	andwf	(??_getNextWriteMessage+6)& (0+255),w,b
 33482   008A08  6F97               	movwf	(??_getNextWriteMessage+8)& (0+255),b
 33483   008A0A  518F               	movf	??_getNextWriteMessage& (0+255),w,b
 33484   008A0C  1996               	xorwf	(??_getNextWriteMessage+7)& (0+255),w,b
 33485   008A0E  E109               	bnz	l18484
 33486   008A10  5190               	movf	(??_getNextWriteMessage+1)& (0+255),w,b
 33487   008A12  1997               	xorwf	(??_getNextWriteMessage+8)& (0+255),w,b
 33488   008A14  A4D8               	btfss	status,2,c
 33489   008A16  D005               	goto	l18484
 33490                           
 33491                           ; BSR set to: 0
 33492   008A18  0E00               	movlw	0
 33493   008A1A  6F8D               	movwf	?_getNextWriteMessage& (0+255),b
 33494   008A1C  0E00               	movlw	0
 33495   008A1E  6F8E               	movwf	(?_getNextWriteMessage+1)& (0+255),b
 33496   008A20  0012               	return	
 33497   008A22                     l18484:
 33498                           
 33499                           ; BSR set to: 0
 33500                           ;../../VLCBlib_PIC/messageQueue.c: 82:     wr = q->writeIndex;
 33501   008A22  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33502   008A24  6ED9               	movwf	fsr2l,c
 33503   008A26  6ADA               	clrf	fsr2h,c
 33504   008A28  0E03               	movlw	3
 33505   008A2A  26D9               	addwf	fsr2l,f,c
 33506   008A2C  50DF               	movf	indf2,w,c
 33507   008A2E  6F98               	movwf	getNextWriteMessage@wr& (0+255),b
 33508                           
 33509                           ;../../VLCBlib_PIC/messageQueue.c: 83:     q->writeIndex++;
 33510   008A30  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33511   008A32  6ED9               	movwf	fsr2l,c
 33512   008A34  6ADA               	clrf	fsr2h,c
 33513   008A36  0E03               	movlw	3
 33514   008A38  26D9               	addwf	fsr2l,f,c
 33515   008A3A  2ADF               	incf	indf2,f,c
 33516                           
 33517                           ; BSR set to: 0
 33518                           ;../../VLCBlib_PIC/messageQueue.c: 84:     if (q->writeIndex >= q->size) q->writeIndex =
      +                           0;
 33519   008A3C  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33520   008A3E  6ED9               	movwf	fsr2l,c
 33521   008A40  6ADA               	clrf	fsr2h,c
 33522   008A42  0E04               	movlw	4
 33523   008A44  26D9               	addwf	fsr2l,f,c
 33524   008A46  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33525   008A48  6EE1               	movwf	fsr1l,c
 33526   008A4A  6AE2               	clrf	fsr1h,c
 33527   008A4C  0E03               	movlw	3
 33528   008A4E  26E1               	addwf	fsr1l,f,c
 33529   008A50  50DE               	movf	postinc2,w,c
 33530   008A52  5CE6               	subwf	postinc1,w,c
 33531   008A54  A0D8               	btfss	status,0,c
 33532   008A56  D006               	goto	l18490
 33533                           
 33534                           ; BSR set to: 0
 33535   008A58  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33536   008A5A  6ED9               	movwf	fsr2l,c
 33537   008A5C  6ADA               	clrf	fsr2h,c
 33538   008A5E  0E03               	movlw	3
 33539   008A60  26D9               	addwf	fsr2l,f,c
 33540   008A62  6ADF               	clrf	indf2,c
 33541   008A64                     l18490:
 33542                           
 33543                           ; BSR set to: 0
 33544                           ;../../VLCBlib_PIC/messageQueue.c: 85:     return &(q->messages[wr]);
 33545   008A64  5198               	movf	getNextWriteMessage@wr& (0+255),w,b
 33546   008A66  0D09               	mullw	9
 33547   008A68  CFF3 F08F          	movff	prodl,??_getNextWriteMessage
 33548   008A6C  CFF4 F090          	movff	prodh,??_getNextWriteMessage+1
 33549   008A70  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33550   008A72  6ED9               	movwf	fsr2l,c
 33551   008A74  6ADA               	clrf	fsr2h,c
 33552   008A76  CFDE F091          	movff	postinc2,??_getNextWriteMessage+2
 33553   008A7A  CFDD F092          	movff	postdec2,??_getNextWriteMessage+3
 33554   008A7E  518F               	movf	??_getNextWriteMessage& (0+255),w,b
 33555   008A80  2591               	addwf	(??_getNextWriteMessage+2)& (0+255),w,b
 33556   008A82  6F8D               	movwf	?_getNextWriteMessage& (0+255),b
 33557   008A84  5190               	movf	(??_getNextWriteMessage+1)& (0+255),w,b
 33558   008A86  2192               	addwfc	(??_getNextWriteMessage+3)& (0+255),w,b
 33559   008A88  6F8E               	movwf	(?_getNextWriteMessage+1)& (0+255),b
 33560                           
 33561                           ; BSR set to: 0
 33562   008A8A  0012               	return		;funcret
 33563   008A8C                     __end_of_getNextWriteMessage:
 33564                           	callstack 0
 33565                           
 33566 ;; *************** function _readInput *****************
 33567 ;; Defined at:
 33568 ;;		line 174 in file "../inputs.c"
 33569 ;; Parameters:    Size  Location     Type
 33570 ;;  io              1    wreg     unsigned char 
 33571 ;; Auto vars:     Size  Location     Type
 33572 ;;  io              1   51[BANK0 ] unsigned char 
 33573 ;; Return value:  Size  Location     Type
 33574 ;;                  1    wreg      enum E12701
 33575 ;; Registers used:
 33576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33577 ;; Tracked objects:
 33578 ;;		On entry : 0/0
 33579 ;;		On exit  : 0/0
 33580 ;;		Unchanged: 0/0
 33581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33583 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33584 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33585 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33586 ;;Total ram usage:        3 bytes
 33587 ;; Hardware stack levels used: 1
 33588 ;; Hardware stack levels required when called: 13
 33589 ;; This function calls:
 33590 ;;		_getNV
 33591 ;; This function is called by:
 33592 ;;		_initInputScan
 33593 ;;		_inputScan
 33594 ;; This function uses a non-reentrant model
 33595 ;;
 33596                           
 33597                           	psect	text130
 33598   00807E                     __ptext130:
 33599                           	callstack 0
 33600   00807E                     _readInput:
 33601                           	callstack 15
 33602                           
 33603                           ; BSR set to: 0
 33604                           ;incstack = 0
 33605                           ;readInput@io stored from wreg
 33606   00807E  0100               	movlb	0	; () banked
 33607   008080  6F93               	movwf	readInput@io& (0+255),b
 33608                           
 33609                           ;../inputs.c: 175:     if (getNV((16 + 7*(io) + 0)) == 0) {
 33610   008082  0100               	movlb	0	; () banked
 33611   008084  5193               	movf	readInput@io& (0+255),w,b
 33612   008086  0D07               	mullw	7
 33613   008088  50F3               	movf	243,w,c
 33614   00808A  0F10               	addlw	16
 33615   00808C  EC35  F05D         	call	_getNV
 33616   008090  0100               	movlb	0	; () banked
 33617   008092  518D               	movf	?_getNV& (0+255),w,b
 33618   008094  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 33619   008096  B4D8               	btfsc	status,2,c
 33620   008098  D05B               	goto	l20428
 33621   00809A  D074               	goto	l20430
 33622   00809C                     l20414:
 33623                           
 33624                           ; BSR set to: 0
 33625                           ;../inputs.c: 178:                 return PORTA & (1<<configs[io].no);
 33626   00809C  5193               	movf	readInput@io& (0+255),w,b
 33627   00809E  0D04               	mullw	4
 33628   0080A0  0E02               	movlw	2
 33629   0080A2  26F3               	addwf	243,f,c
 33630   0080A4  0E00               	movlw	0
 33631   0080A6  22F4               	addwfc	244,f,c
 33632   0080A8  0E35               	movlw	low _configs
 33633   0080AA  24F3               	addwf	243,w,c
 33634   0080AC  6EF6               	movwf	tblptrl,c
 33635   0080AE  0EEE               	movlw	high _configs
 33636   0080B0  20F4               	addwfc	244,w,c
 33637   0080B2  6EF7               	movwf	tblptrh,c
 33638   0080B4                     	if	1	;There are 3 active tblptr bytes
 33639   0080B4  6AF8               	clrf	tblptru,c
 33640   0080B6  0E00               	movlw	low (__mediumconst shr (0+16))
 33641   0080B8  22F8               	addwfc	tblptru,f,c
 33642   0080BA                     	endif
 33643   0080BA  0008               	tblrd		*
 33644   0080BC  CFF5 F091          	movff	tablat,??_readInput
 33645   0080C0  0E01               	movlw	1
 33646   0080C2  6F92               	movwf	(??_readInput+1)& (0+255),b
 33647   0080C4  2B91               	incf	??_readInput& (0+255),f,b
 33648   0080C6  D002               	goto	u20924
 33649   0080C8                     u20925:
 33650   0080C8  90D8               	bcf	status,0,c
 33651   0080CA  3792               	rlcf	(??_readInput+1)& (0+255),f,b
 33652   0080CC                     u20924:
 33653   0080CC  2F91               	decfsz	??_readInput& (0+255),f,b
 33654   0080CE  D7FC               	goto	u20925
 33655   0080D0  0100               	movlb	0	; () banked
 33656   0080D2  5192               	movf	(??_readInput+1)& (0+255),w,b
 33657   0080D4  1480               	andwf	128,w,c	;volatile
 33658   0080D6  0012               	return	
 33659   0080D8                     l20418:
 33660                           
 33661                           ; BSR set to: 0
 33662                           ;../inputs.c: 180:                 return PORTB & (1<<configs[io].no);
 33663   0080D8  5193               	movf	readInput@io& (0+255),w,b
 33664   0080DA  0D04               	mullw	4
 33665   0080DC  0E02               	movlw	2
 33666   0080DE  26F3               	addwf	243,f,c
 33667   0080E0  0E00               	movlw	0
 33668   0080E2  22F4               	addwfc	244,f,c
 33669   0080E4  0E35               	movlw	low _configs
 33670   0080E6  24F3               	addwf	243,w,c
 33671   0080E8  6EF6               	movwf	tblptrl,c
 33672   0080EA  0EEE               	movlw	high _configs
 33673   0080EC  20F4               	addwfc	244,w,c
 33674   0080EE  6EF7               	movwf	tblptrh,c
 33675   0080F0                     	if	1	;There are 3 active tblptr bytes
 33676   0080F0  6AF8               	clrf	tblptru,c
 33677   0080F2  0E00               	movlw	low (__mediumconst shr (0+16))
 33678   0080F4  22F8               	addwfc	tblptru,f,c
 33679   0080F6                     	endif
 33680   0080F6  0008               	tblrd		*
 33681   0080F8  CFF5 F091          	movff	tablat,??_readInput
 33682   0080FC  0E01               	movlw	1
 33683   0080FE  6F92               	movwf	(??_readInput+1)& (0+255),b
 33684   008100  2B91               	incf	??_readInput& (0+255),f,b
 33685   008102  D002               	goto	u20934
 33686   008104                     u20935:
 33687   008104  90D8               	bcf	status,0,c
 33688   008106  3792               	rlcf	(??_readInput+1)& (0+255),f,b
 33689   008108                     u20934:
 33690   008108  2F91               	decfsz	??_readInput& (0+255),f,b
 33691   00810A  D7FC               	goto	u20935
 33692   00810C  0100               	movlb	0	; () banked
 33693   00810E  5192               	movf	(??_readInput+1)& (0+255),w,b
 33694   008110  1481               	andwf	129,w,c	;volatile
 33695   008112  0012               	return	
 33696   008114                     l20422:
 33697                           
 33698                           ; BSR set to: 0
 33699                           ;../inputs.c: 182:                 return PORTC & (1<<configs[io].no);
 33700   008114  5193               	movf	readInput@io& (0+255),w,b
 33701   008116  0D04               	mullw	4
 33702   008118  0E02               	movlw	2
 33703   00811A  26F3               	addwf	243,f,c
 33704   00811C  0E00               	movlw	0
 33705   00811E  22F4               	addwfc	244,f,c
 33706   008120  0E35               	movlw	low _configs
 33707   008122  24F3               	addwf	243,w,c
 33708   008124  6EF6               	movwf	tblptrl,c
 33709   008126  0EEE               	movlw	high _configs
 33710   008128  20F4               	addwfc	244,w,c
 33711   00812A  6EF7               	movwf	tblptrh,c
 33712   00812C                     	if	1	;There are 3 active tblptr bytes
 33713   00812C  6AF8               	clrf	tblptru,c
 33714   00812E  0E00               	movlw	low (__mediumconst shr (0+16))
 33715   008130  22F8               	addwfc	tblptru,f,c
 33716   008132                     	endif
 33717   008132  0008               	tblrd		*
 33718   008134  CFF5 F091          	movff	tablat,??_readInput
 33719   008138  0E01               	movlw	1
 33720   00813A  6F92               	movwf	(??_readInput+1)& (0+255),b
 33721   00813C  2B91               	incf	??_readInput& (0+255),f,b
 33722   00813E  D002               	goto	u20944
 33723   008140                     u20945:
 33724   008140  90D8               	bcf	status,0,c
 33725   008142  3792               	rlcf	(??_readInput+1)& (0+255),f,b
 33726   008144                     u20944:
 33727   008144  2F91               	decfsz	??_readInput& (0+255),f,b
 33728   008146  D7FC               	goto	u20945
 33729   008148  0100               	movlb	0	; () banked
 33730   00814A  5192               	movf	(??_readInput+1)& (0+255),w,b
 33731   00814C  1482               	andwf	130,w,c	;volatile
 33732   00814E  0012               	return	
 33733   008150                     l20428:
 33734                           
 33735                           ; BSR set to: 0
 33736   008150  5193               	movf	readInput@io& (0+255),w,b
 33737   008152  0D04               	mullw	4
 33738   008154  0E01               	movlw	1
 33739   008156  26F3               	addwf	243,f,c
 33740   008158  0E00               	movlw	0
 33741   00815A  22F4               	addwfc	244,f,c
 33742   00815C  0E35               	movlw	low _configs
 33743   00815E  24F3               	addwf	243,w,c
 33744   008160  6EF6               	movwf	tblptrl,c
 33745   008162  0EEE               	movlw	high _configs
 33746   008164  20F4               	addwfc	244,w,c
 33747   008166  6EF7               	movwf	tblptrh,c
 33748   008168                     	if	1	;There are 3 active tblptr bytes
 33749   008168  6AF8               	clrf	tblptru,c
 33750   00816A  0E00               	movlw	low (__mediumconst shr (0+16))
 33751   00816C  22F8               	addwfc	tblptru,f,c
 33752   00816E                     	endif
 33753   00816E  0008               	tblrd		*
 33754   008170  50F5               	movf	tablat,w,c
 33755                           
 33756                           ; Switch size 1, requested type "simple"
 33757                           ; Number of cases is 3, Range of values is 65 to 67
 33758                           ; switch strategies available:
 33759                           ; Name         Instructions Cycles
 33760                           ; simple_byte           10     6 (average)
 33761                           ;	Chosen strategy is simple_byte
 33762   008172  0A41               	xorlw	65	; case 65
 33763   008174  B4D8               	btfsc	status,2,c
 33764   008176  D792               	goto	l20414
 33765   008178  0A03               	xorlw	3	; case 66
 33766   00817A  B4D8               	btfsc	status,2,c
 33767   00817C  D7AD               	goto	l20418
 33768   00817E  0A01               	xorlw	1	; case 67
 33769   008180  B4D8               	btfsc	status,2,c
 33770   008182  D7C8               	goto	l20422
 33771   008184                     l20430:
 33772                           
 33773                           ; BSR set to: 0
 33774                           ;../inputs.c: 191:     return FALSE;
 33775   008184  0E00               	movlw	0
 33776                           
 33777                           ; BSR set to: 0
 33778   008186  0012               	return		;funcret
 33779   008188                     __end_of_readInput:
 33780                           	callstack 0
 33781                           
 33782 ;; *************** function _initRomOps *****************
 33783 ;; Defined at:
 33784 ;;		line 147 in file "../../VLCBlib_PIC/nvm.c"
 33785 ;; Parameters:    Size  Location     Type
 33786 ;;		None
 33787 ;; Auto vars:     Size  Location     Type
 33788 ;;		None
 33789 ;; Return value:  Size  Location     Type
 33790 ;;                  1    wreg      void 
 33791 ;; Registers used:
 33792 ;;		wreg, status,2
 33793 ;; Tracked objects:
 33794 ;;		On entry : 0/0
 33795 ;;		On exit  : 0/0
 33796 ;;		Unchanged: 0/0
 33797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33802 ;;Total ram usage:        0 bytes
 33803 ;; Hardware stack levels used: 1
 33804 ;; Hardware stack levels required when called: 12
 33805 ;; This function calls:
 33806 ;;		Nothing
 33807 ;; This function is called by:
 33808 ;;		_main
 33809 ;; This function uses a non-reentrant model
 33810 ;;
 33811                           
 33812                           	psect	text131
 33813   00C2FE                     __ptext131:
 33814                           	callstack 0
 33815   00C2FE                     _initRomOps:
 33816                           	callstack 18
 33817                           
 33818                           ;../../VLCBlib_PIC/nvm.c: 148:     flashFlags.asByte = 0;
 33819                           
 33820                           ; BSR set to: 0
 33821                           ;incstack = 0
 33822   00C2FE  0E00               	movlw	0
 33823   00C300  0100               	movlb	0	; () banked
 33824   00C302  6FB8               	movwf	_flashFlags& (0+255),b
 33825                           
 33826                           ;../../VLCBlib_PIC/nvm.c: 149:     flashBlock = 0x0000;
 33827   00C304  0E00               	movlw	0
 33828   00C306  6FAE               	movwf	(_flashBlock+1)& (0+255),b
 33829   00C308  0E00               	movlw	0
 33830   00C30A  6FAD               	movwf	_flashBlock& (0+255),b
 33831                           
 33832                           ;../../VLCBlib_PIC/nvm.c: 151:     TBLPTRU = 0;
 33833   00C30C  0E00               	movlw	0
 33834   00C30E  6EF8               	movwf	248,c	;volatile
 33835                           
 33836                           ; BSR set to: 0
 33837   00C310  0012               	return		;funcret
 33838   00C312                     __end_of_initRomOps:
 33839                           	callstack 0
 33840                           
 33841 ;; *************** function _checkPowerOnPb *****************
 33842 ;; Defined at:
 33843 ;;		line 953 in file "../../VLCBlib_PIC/vlcb.c"
 33844 ;; Parameters:    Size  Location     Type
 33845 ;;		None
 33846 ;; Auto vars:     Size  Location     Type
 33847 ;;  i               1   57[BANK1 ] unsigned char 
 33848 ;; Return value:  Size  Location     Type
 33849 ;;                  1    wreg      void 
 33850 ;; Registers used:
 33851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33852 ;; Tracked objects:
 33853 ;;		On entry : 0/0
 33854 ;;		On exit  : 0/0
 33855 ;;		Unchanged: 0/0
 33856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33858 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33860 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33861 ;;Total ram usage:        1 bytes
 33862 ;; Hardware stack levels used: 1
 33863 ;; Hardware stack levels required when called: 27
 33864 ;; This function calls:
 33865 ;;		_APP_testMode
 33866 ;;		_factoryReset
 33867 ;;		_pbDownTimer
 33868 ;;		_pbUpTimer
 33869 ;;		_showStatus
 33870 ;; This function is called by:
 33871 ;;		_main
 33872 ;; This function uses a non-reentrant model
 33873 ;;
 33874                           
 33875                           	psect	text132
 33876   00B21A                     __ptext132:
 33877                           	callstack 0
 33878   00B21A                     _checkPowerOnPb:
 33879                           	callstack 3
 33880                           
 33881                           ;../../VLCBlib_PIC/vlcb.c: 954:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 957:     if ((!
      +                          (PORTAbits.RA2))) {
 33882                           
 33883                           ; BSR set to: 0
 33884                           ;incstack = 0
 33885   00B21A  B480               	btfsc	128,2,c	;volatile
 33886   00B21C  0012               	return	
 33887                           
 33888                           ;../../VLCBlib_PIC/vlcb.c: 959:         i = pbDownTimer(30);
 33889   00B21E  0E1E               	movlw	30
 33890   00B220  EC57  F04A         	call	_pbDownTimer
 33891   00B224  0101               	movlb	1	; () banked
 33892   00B226  6FEE               	movwf	checkPowerOnPb@i& (0+255),b
 33893                           
 33894                           ; BSR set to: 1
 33895                           ;../../VLCBlib_PIC/vlcb.c: 960:         if (i == 0) {
 33896   00B228  51EE               	movf	checkPowerOnPb@i& (0+255),w,b
 33897   00B22A  B4D8               	btfsc	status,2,c
 33898   00B22C  0012               	return	
 33899                           
 33900                           ; BSR set to: 1
 33901                           
 33902                           ; BSR set to: 1
 33903                           ;../../VLCBlib_PIC/vlcb.c: 962:             return;
 33904   00B22E  0E01               	movlw	1
 33905   00B230  65EE               	cpfsgt	checkPowerOnPb@i& (0+255),b
 33906   00B232  D006               	goto	l23790
 33907                           
 33908                           ; BSR set to: 1
 33909   00B234  0E06               	movlw	6
 33910   00B236  61EE               	cpfslt	checkPowerOnPb@i& (0+255),b
 33911   00B238  D003               	goto	l23790
 33912                           
 33913                           ; BSR set to: 1
 33914                           ;../../VLCBlib_PIC/vlcb.c: 964:             APP_testMode();
 33915   00B23A  ECE5  F061         	call	_APP_testMode	;wreg free
 33916                           
 33917                           ;../../VLCBlib_PIC/vlcb.c: 965:         } else if (i >= 10) {
 33918   00B23E  0012               	return	
 33919   00B240                     l23790:
 33920                           
 33921                           ; BSR set to: 1
 33922   00B240  0E09               	movlw	9
 33923   00B242  65EE               	cpfsgt	checkPowerOnPb@i& (0+255),b
 33924   00B244  0012               	return	
 33925                           
 33926                           ; BSR set to: 1
 33927                           ;../../VLCBlib_PIC/vlcb.c: 966:             showStatus(STATUS_RESET_WARNING);
 33928   00B246  0E04               	movlw	4
 33929   00B248  ECB2  F047         	call	_showStatus
 33930                           
 33931                           ;../../VLCBlib_PIC/vlcb.c: 968:             i = pbUpTimer(5);
 33932   00B24C  0E05               	movlw	5
 33933   00B24E  ECFF  F049         	call	_pbUpTimer
 33934   00B252  0101               	movlb	1	; () banked
 33935   00B254  6FEE               	movwf	checkPowerOnPb@i& (0+255),b
 33936                           
 33937                           ; BSR set to: 1
 33938                           ;../../VLCBlib_PIC/vlcb.c: 969:             if (i == 0) {
 33939   00B256  51EE               	movf	checkPowerOnPb@i& (0+255),w,b
 33940   00B258  B4D8               	btfsc	status,2,c
 33941   00B25A  0012               	return	
 33942                           
 33943                           ; BSR set to: 1
 33944                           ;../../VLCBlib_PIC/vlcb.c: 973:             i = pbDownTimer(5);
 33945   00B25C  0E05               	movlw	5
 33946   00B25E  EC57  F04A         	call	_pbDownTimer
 33947   00B262  0101               	movlb	1	; () banked
 33948   00B264  6FEE               	movwf	checkPowerOnPb@i& (0+255),b
 33949                           
 33950                           ; BSR set to: 1
 33951                           ;../../VLCBlib_PIC/vlcb.c: 974:             if ((i>=2) && (i < 4)) {
 33952   00B266  0E01               	movlw	1
 33953   00B268  65EE               	cpfsgt	checkPowerOnPb@i& (0+255),b
 33954   00B26A  0012               	return	
 33955                           
 33956                           ; BSR set to: 1
 33957   00B26C  0E04               	movlw	4
 33958   00B26E  61EE               	cpfslt	checkPowerOnPb@i& (0+255),b
 33959   00B270  0012               	return	
 33960                           
 33961                           ; BSR set to: 1
 33962                           ;../../VLCBlib_PIC/vlcb.c: 975:                 factoryReset();
 33963   00B272  ECB2  F042         	call	_factoryReset	;wreg free
 33964   00B276  0012               	return		;funcret
 33965   00B278                     __end_of_checkPowerOnPb:
 33966                           	callstack 0
 33967                           
 33968 ;; *************** function _showStatus *****************
 33969 ;; Defined at:
 33970 ;;		line 234 in file "../../VLCBlib_PIC/statusLeds2.c"
 33971 ;; Parameters:    Size  Location     Type
 33972 ;;  s               1    wreg     enum E12906
 33973 ;; Auto vars:     Size  Location     Type
 33974 ;;  s               1   47[BANK0 ] enum E12906
 33975 ;; Return value:  Size  Location     Type
 33976 ;;                  1    wreg      void 
 33977 ;; Registers used:
 33978 ;;		wreg, status,2, status,0
 33979 ;; Tracked objects:
 33980 ;;		On entry : 0/0
 33981 ;;		On exit  : 0/0
 33982 ;;		Unchanged: 0/0
 33983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33985 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33986 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33987 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33988 ;;Total ram usage:        3 bytes
 33989 ;; Hardware stack levels used: 1
 33990 ;; Hardware stack levels required when called: 12
 33991 ;; This function calls:
 33992 ;;		Nothing
 33993 ;; This function is called by:
 33994 ;;		_setLEDsByMode
 33995 ;;		_checkPowerOnPb
 33996 ;;		_poll
 33997 ;; This function uses a non-reentrant model
 33998 ;;
 33999                           
 34000                           	psect	text133
 34001   008F64                     __ptext133:
 34002                           	callstack 0
 34003   008F64                     _showStatus:
 34004                           	callstack 15
 34005                           
 34006                           ;incstack = 0
 34007                           ;showStatus@s stored from wreg
 34008   008F64  0100               	movlb	0	; () banked
 34009   008F66  6F8F               	movwf	showStatus@s& (0+255),b
 34010                           
 34011                           ;../../VLCBlib_PIC/statusLeds2.c: 235:     switch (s) {
 34012   008F68  D030               	goto	l20214
 34013   008F6A                     l20196:
 34014                           
 34015                           ; BSR set to: 0
 34016                           ;../../VLCBlib_PIC/statusLeds2.c: 237:             ledState[0] = LED_OFF;
 34017   008F6A  0E00               	movlw	0
 34018   008F6C  6FB1               	movwf	_ledState& (0+255),b
 34019                           
 34020                           ;../../VLCBlib_PIC/statusLeds2.c: 238:             ledState[1] = LED_OFF;
 34021   008F6E  0E00               	movlw	0
 34022   008F70  6FB2               	movwf	(_ledState+1)& (0+255),b
 34023                           
 34024                           ;../../VLCBlib_PIC/statusLeds2.c: 239:             break;
 34025   008F72  0012               	return	
 34026   008F74                     l20198:
 34027                           
 34028                           ; BSR set to: 0
 34029                           ;../../VLCBlib_PIC/statusLeds2.c: 241:             ledState[0] = LED_ON;
 34030   008F74  0E01               	movlw	1
 34031   008F76  6FB1               	movwf	_ledState& (0+255),b
 34032                           
 34033                           ;../../VLCBlib_PIC/statusLeds2.c: 242:             ledState[1] = LED_OFF;
 34034   008F78  0E00               	movlw	0
 34035   008F7A  6FB2               	movwf	(_ledState+1)& (0+255),b
 34036                           
 34037                           ;../../VLCBlib_PIC/statusLeds2.c: 243:             break;
 34038   008F7C  0012               	return	
 34039   008F7E                     l20200:
 34040                           
 34041                           ; BSR set to: 0
 34042                           ;../../VLCBlib_PIC/statusLeds2.c: 245:             ledState[0] = LED_OFF;
 34043   008F7E  0E00               	movlw	0
 34044   008F80  6FB1               	movwf	_ledState& (0+255),b
 34045                           
 34046                           ;../../VLCBlib_PIC/statusLeds2.c: 246:             ledState[1] = LED_FLASH_50_1HZ;
 34047   008F82  0E03               	movlw	3
 34048   008F84  6FB2               	movwf	(_ledState+1)& (0+255),b
 34049                           
 34050                           ;../../VLCBlib_PIC/statusLeds2.c: 247:             break;
 34051   008F86  0012               	return	
 34052   008F88                     l2186:
 34053                           
 34054                           ; BSR set to: 0
 34055                           ;../../VLCBlib_PIC/statusLeds2.c: 253:             ledState[0] = LED_OFF;
 34056                           
 34057                           ; BSR set to: 0
 34058   008F88  0E00               	movlw	0
 34059   008F8A  6FB1               	movwf	_ledState& (0+255),b
 34060                           
 34061                           ;../../VLCBlib_PIC/statusLeds2.c: 254:             ledState[1] = LED_ON;
 34062   008F8C  0E01               	movlw	1
 34063   008F8E  6FB2               	movwf	(_ledState+1)& (0+255),b
 34064                           
 34065                           ;../../VLCBlib_PIC/statusLeds2.c: 255:             break;
 34066   008F90  0012               	return	
 34067   008F92                     l20204:
 34068                           
 34069                           ; BSR set to: 0
 34070                           ;../../VLCBlib_PIC/statusLeds2.c: 257:             flashCounter[1] = 0;
 34071   008F92  0E00               	movlw	0
 34072   008F94  6FB0               	movwf	(_flashCounter+1)& (0+255),b
 34073                           
 34074                           ;../../VLCBlib_PIC/statusLeds2.c: 258:             flashCounter[0] = 25;
 34075   008F96  0E19               	movlw	25
 34076   008F98  6FAF               	movwf	_flashCounter& (0+255),b
 34077                           
 34078                           ;../../VLCBlib_PIC/statusLeds2.c: 259:             ledState[0] = LED_FLASH_50_2HZ;
 34079   008F9A  0E02               	movlw	2
 34080   008F9C  6FB1               	movwf	_ledState& (0+255),b
 34081                           
 34082                           ;../../VLCBlib_PIC/statusLeds2.c: 260:             ledState[1] = LED_FLASH_50_2HZ;
 34083   008F9E  0E02               	movlw	2
 34084   008FA0  6FB2               	movwf	(_ledState+1)& (0+255),b
 34085                           
 34086                           ;../../VLCBlib_PIC/statusLeds2.c: 261:             break;
 34087   008FA2  0012               	return	
 34088   008FA4                     l20206:
 34089                           
 34090                           ; BSR set to: 0
 34091                           ;../../VLCBlib_PIC/statusLeds2.c: 263:             ledState[0] = LED_SINGLE_FLICKER_ON;
 34092   008FA4  0E06               	movlw	6
 34093   008FA6  6FB1               	movwf	_ledState& (0+255),b
 34094                           
 34095                           ;../../VLCBlib_PIC/statusLeds2.c: 264:             ledState[1] = LED_ON;
 34096   008FA8  0E01               	movlw	1
 34097   008FAA  6FB2               	movwf	(_ledState+1)& (0+255),b
 34098                           
 34099                           ;../../VLCBlib_PIC/statusLeds2.c: 265:             break;
 34100   008FAC  0012               	return	
 34101   008FAE                     l20208:
 34102                           
 34103                           ; BSR set to: 0
 34104                           ;../../VLCBlib_PIC/statusLeds2.c: 267:             ledState[0] = LED_LONG_FLICKER_ON;
 34105   008FAE  0E08               	movlw	8
 34106   008FB0  6FB1               	movwf	_ledState& (0+255),b
 34107                           
 34108                           ;../../VLCBlib_PIC/statusLeds2.c: 268:             ledState[1] = LED_ON;
 34109   008FB2  0E01               	movlw	1
 34110   008FB4  6FB2               	movwf	(_ledState+1)& (0+255),b
 34111                           
 34112                           ;../../VLCBlib_PIC/statusLeds2.c: 269:             break;
 34113   008FB6  0012               	return	
 34114   008FB8                     l20210:
 34115                           
 34116                           ; BSR set to: 0
 34117                           ;../../VLCBlib_PIC/statusLeds2.c: 272:             flashCounter[1] = 0;
 34118   008FB8  0E00               	movlw	0
 34119   008FBA  6FB0               	movwf	(_flashCounter+1)& (0+255),b
 34120                           
 34121                           ;../../VLCBlib_PIC/statusLeds2.c: 273:             flashCounter[0] = 0;
 34122   008FBC  0E00               	movlw	0
 34123   008FBE  6FAF               	movwf	_flashCounter& (0+255),b
 34124                           
 34125                           ;../../VLCBlib_PIC/statusLeds2.c: 274:             ledState[0] = LED_FLASH_50_2HZ;
 34126   008FC0  0E02               	movlw	2
 34127   008FC2  6FB1               	movwf	_ledState& (0+255),b
 34128                           
 34129                           ;../../VLCBlib_PIC/statusLeds2.c: 275:             ledState[1] = LED_FLASH_50_2HZ;
 34130   008FC4  0E02               	movlw	2
 34131   008FC6  6FB2               	movwf	(_ledState+1)& (0+255),b
 34132                           
 34133                           ;../../VLCBlib_PIC/statusLeds2.c: 276:             break;
 34134   008FC8  0012               	return	
 34135   008FCA                     l20214:
 34136   008FCA  0100               	movlb	0	; () banked
 34137   008FCC  518F               	movf	showStatus@s& (0+255),w,b
 34138   008FCE  6F8D               	movwf	??_showStatus& (0+255),b
 34139   008FD0  6B8E               	clrf	(??_showStatus+1)& (0+255),b
 34140                           
 34141                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 34142                           ; Switch size 1, requested type "simple"
 34143                           ; Number of cases is 1, Range of values is 0 to 0
 34144                           ; switch strategies available:
 34145                           ; Name         Instructions Cycles
 34146                           ; simple_byte            4     3 (average)
 34147                           ;	Chosen strategy is simple_byte
 34148   008FD2  518E               	movf	(??_showStatus+1)& (0+255),w,b
 34149   008FD4  0A00               	xorlw	0	; case 0
 34150   008FD6  A4D8               	btfss	status,2,c
 34151   008FD8  0012               	return	
 34152                           
 34153                           ; BSR set to: 0
 34154                           ; Switch size 1, requested type "simple"
 34155                           ; Number of cases is 13, Range of values is 0 to 12
 34156                           ; switch strategies available:
 34157                           ; Name         Instructions Cycles
 34158                           ; simple_byte           40    21 (average)
 34159                           ;	Chosen strategy is simple_byte
 34160   008FDA  518D               	movf	??_showStatus& (0+255),w,b
 34161   008FDC  0A00               	xorlw	0	; case 0
 34162   008FDE  B4D8               	btfsc	status,2,c
 34163   008FE0  D7C4               	goto	l20196
 34164   008FE2  0A01               	xorlw	1	; case 1
 34165   008FE4  B4D8               	btfsc	status,2,c
 34166   008FE6  D7C6               	goto	l20198
 34167   008FE8  0A03               	xorlw	3	; case 2
 34168   008FEA  B4D8               	btfsc	status,2,c
 34169   008FEC  D7C8               	goto	l20200
 34170   008FEE  0A01               	xorlw	1	; case 3
 34171   008FF0  B4D8               	btfsc	status,2,c
 34172   008FF2  D7CA               	goto	l2186
 34173   008FF4  0A07               	xorlw	7	; case 4
 34174   008FF6  B4D8               	btfsc	status,2,c
 34175   008FF8  D7CC               	goto	l20204
 34176   008FFA  0A01               	xorlw	1	; case 5
 34177   008FFC  B4D8               	btfsc	status,2,c
 34178   008FFE  D7C4               	goto	l2186
 34179   009000  0A03               	xorlw	3	; case 6
 34180   009002  B4D8               	btfsc	status,2,c
 34181   009004  D7C1               	goto	l2186
 34182   009006  0A01               	xorlw	1	; case 7
 34183   009008  B4D8               	btfsc	status,2,c
 34184   00900A  D7CC               	goto	l20206
 34185   00900C  0A0F               	xorlw	15	; case 8
 34186   00900E  B4D8               	btfsc	status,2,c
 34187   009010  D7CE               	goto	l20208
 34188   009012  0A01               	xorlw	1	; case 9
 34189   009014  B4D8               	btfsc	status,2,c
 34190   009016  D7B8               	goto	l2186
 34191   009018  0A03               	xorlw	3	; case 10
 34192   00901A  B4D8               	btfsc	status,2,c
 34193   00901C  D7B5               	goto	l2186
 34194   00901E  0A01               	xorlw	1	; case 11
 34195   009020  B4D8               	btfsc	status,2,c
 34196   009022  D7CA               	goto	l20210
 34197   009024  0A07               	xorlw	7	; case 12
 34198   009026  A4D8               	btfss	status,2,c
 34199   009028  0012               	return	
 34200   00902A  D7C6               	goto	l20210
 34201   00902C                     __end_of_showStatus:
 34202                           	callstack 0
 34203                           
 34204 ;; *************** function _pbUpTimer *****************
 34205 ;; Defined at:
 34206 ;;		line 930 in file "../../VLCBlib_PIC/vlcb.c"
 34207 ;; Parameters:    Size  Location     Type
 34208 ;;  timeout         1    wreg     unsigned char 
 34209 ;; Auto vars:     Size  Location     Type
 34210 ;;  timeout         1   72[BANK0 ] unsigned char 
 34211 ;; Return value:  Size  Location     Type
 34212 ;;                  1    wreg      unsigned char 
 34213 ;; Registers used:
 34214 ;;		wreg, status,2, status,0, cstack
 34215 ;; Tracked objects:
 34216 ;;		On entry : 0/0
 34217 ;;		On exit  : 0/0
 34218 ;;		Unchanged: 0/0
 34219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34221 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34222 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34223 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34224 ;;Total ram usage:        5 bytes
 34225 ;; Hardware stack levels used: 1
 34226 ;; Hardware stack levels required when called: 14
 34227 ;; This function calls:
 34228 ;;		___lldiv
 34229 ;;		___lmul
 34230 ;;		_leds_poll
 34231 ;;		_tickGet
 34232 ;; This function is called by:
 34233 ;;		_checkPowerOnPb
 34234 ;; This function uses a non-reentrant model
 34235 ;;
 34236                           
 34237                           	psect	text134
 34238   0093FE                     __ptext134:
 34239                           	callstack 0
 34240   0093FE                     _pbUpTimer:
 34241                           	callstack 15
 34242                           
 34243                           ; BSR set to: 0
 34244                           ;incstack = 0
 34245                           ;pbUpTimer@timeout stored from wreg
 34246   0093FE  0100               	movlb	0	; () banked
 34247   009400  6FA8               	movwf	pbUpTimer@timeout& (0+255),b
 34248                           
 34249                           ;../../VLCBlib_PIC/vlcb.c: 932:     pbTimer.val = tickGet();
 34250   009402  ECC2  F059         	call	_tickGet	;wreg free
 34251   009406  C08D  F0A9         	movff	?_tickGet,_pbTimer
 34252   00940A  C08E  F0AA         	movff	?_tickGet+1,_pbTimer+1
 34253   00940E  C08F  F0AB         	movff	?_tickGet+2,_pbTimer+2
 34254   009412  C090  F0AC         	movff	?_tickGet+3,_pbTimer+3
 34255                           
 34256                           ;../../VLCBlib_PIC/vlcb.c: 933:     while (! ((!(PORTAbits.RA2)))) {
 34257   009416  D02D               	goto	l2369
 34258   009418                     l23458:
 34259                           
 34260                           ;../../VLCBlib_PIC/vlcb.c: 934:         leds_poll();
 34261   009418  EC92  F031         	call	_leds_poll	;wreg free
 34262                           
 34263                           ;../../VLCBlib_PIC/vlcb.c: 935:         if ((tickGet() - pbTimer.val) > timeout*62500) {
 34264   00941C  ECC2  F059         	call	_tickGet	;wreg free
 34265   009420  0100               	movlb	0	; () banked
 34266   009422  51A9               	movf	_pbTimer& (0+255),w,b
 34267   009424  5D8D               	subwf	?_tickGet& (0+255),w,b
 34268   009426  6FA4               	movwf	??_pbUpTimer& (0+255),b
 34269   009428  51AA               	movf	(_pbTimer+1)& (0+255),w,b
 34270   00942A  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 34271   00942C  6FA5               	movwf	(??_pbUpTimer+1)& (0+255),b
 34272   00942E  51AB               	movf	(_pbTimer+2)& (0+255),w,b
 34273   009430  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 34274   009432  6FA6               	movwf	(??_pbUpTimer+2)& (0+255),b
 34275   009434  51AC               	movf	(_pbTimer+3)& (0+255),w,b
 34276   009436  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 34277   009438  6FA7               	movwf	(??_pbUpTimer+3)& (0+255),b
 34278   00943A  51A8               	movf	pbUpTimer@timeout& (0+255),w,b
 34279   00943C  6F91               	movwf	___lmul@multiplier& (0+255),b
 34280   00943E  6B92               	clrf	(___lmul@multiplier+1)& (0+255),b
 34281   009440  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
 34282   009442  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
 34283   009444  0E24               	movlw	36
 34284   009446  6F95               	movwf	___lmul@multiplicand& (0+255),b
 34285   009448  0EF4               	movlw	244
 34286   00944A  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 34287   00944C  0E00               	movlw	0
 34288   00944E  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 34289   009450  0E00               	movlw	0
 34290   009452  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 34291   009454  ECEE  F059         	call	___lmul	;wreg free
 34292   009458  0100               	movlb	0	; () banked
 34293   00945A  51A4               	movf	??_pbUpTimer& (0+255),w,b
 34294   00945C  5D91               	subwf	?___lmul& (0+255),w,b
 34295   00945E  51A5               	movf	(??_pbUpTimer+1)& (0+255),w,b
 34296   009460  5992               	subwfb	(?___lmul+1)& (0+255),w,b
 34297   009462  51A6               	movf	(??_pbUpTimer+2)& (0+255),w,b
 34298   009464  5993               	subwfb	(?___lmul+2)& (0+255),w,b
 34299   009466  51A7               	movf	(??_pbUpTimer+3)& (0+255),w,b
 34300   009468  5994               	subwfb	(?___lmul+3)& (0+255),w,b
 34301   00946A  B0D8               	btfsc	status,0,c
 34302   00946C  D002               	goto	l2369
 34303                           
 34304                           ; BSR set to: 0
 34305                           ;../../VLCBlib_PIC/vlcb.c: 936:             return 0;
 34306   00946E  0E00               	movlw	0
 34307   009470  0012               	return	
 34308   009472                     l2369:
 34309                           
 34310                           ;../../VLCBlib_PIC/vlcb.c: 933:     while (! ((!(PORTAbits.RA2)))) {
 34311   009472  B480               	btfsc	128,2,c	;volatile
 34312   009474  D7D1               	goto	l23458
 34313                           
 34314                           ;../../VLCBlib_PIC/vlcb.c: 940:     return (uint8_t)((tickGet() - pbTimer.val)/62500);
 34315   009476  ECC2  F059         	call	_tickGet	;wreg free
 34316   00947A  0100               	movlb	0	; () banked
 34317   00947C  51A9               	movf	_pbTimer& (0+255),w,b
 34318   00947E  5D8D               	subwf	?_tickGet& (0+255),w,b
 34319   009480  6F97               	movwf	___lldiv@dividend& (0+255),b
 34320   009482  51AA               	movf	(_pbTimer+1)& (0+255),w,b
 34321   009484  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 34322   009486  6F98               	movwf	(___lldiv@dividend+1)& (0+255),b
 34323   009488  51AB               	movf	(_pbTimer+2)& (0+255),w,b
 34324   00948A  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 34325   00948C  6F99               	movwf	(___lldiv@dividend+2)& (0+255),b
 34326   00948E  51AC               	movf	(_pbTimer+3)& (0+255),w,b
 34327   009490  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 34328   009492  6F9A               	movwf	(___lldiv@dividend+3)& (0+255),b
 34329   009494  0E24               	movlw	36
 34330   009496  6F9B               	movwf	___lldiv@divisor& (0+255),b
 34331   009498  0EF4               	movlw	244
 34332   00949A  6F9C               	movwf	(___lldiv@divisor+1)& (0+255),b
 34333   00949C  0E00               	movlw	0
 34334   00949E  6F9D               	movwf	(___lldiv@divisor+2)& (0+255),b
 34335   0094A0  0E00               	movlw	0
 34336   0094A2  6F9E               	movwf	(___lldiv@divisor+3)& (0+255),b
 34337   0094A4  EC5D  F053         	call	___lldiv	;wreg free
 34338   0094A8  0100               	movlb	0	; () banked
 34339   0094AA  5197               	movf	?___lldiv& (0+255),w,b
 34340                           
 34341                           ; BSR set to: 0
 34342   0094AC  0012               	return		;funcret
 34343   0094AE                     __end_of_pbUpTimer:
 34344                           	callstack 0
 34345                           
 34346 ;; *************** function _pbDownTimer *****************
 34347 ;; Defined at:
 34348 ;;		line 911 in file "../../VLCBlib_PIC/vlcb.c"
 34349 ;; Parameters:    Size  Location     Type
 34350 ;;  timeout         1    wreg     unsigned char 
 34351 ;; Auto vars:     Size  Location     Type
 34352 ;;  timeout         1   72[BANK0 ] unsigned char 
 34353 ;; Return value:  Size  Location     Type
 34354 ;;                  1    wreg      unsigned char 
 34355 ;; Registers used:
 34356 ;;		wreg, status,2, status,0, cstack
 34357 ;; Tracked objects:
 34358 ;;		On entry : 0/0
 34359 ;;		On exit  : 0/0
 34360 ;;		Unchanged: 0/0
 34361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34363 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34364 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34365 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34366 ;;Total ram usage:        5 bytes
 34367 ;; Hardware stack levels used: 1
 34368 ;; Hardware stack levels required when called: 14
 34369 ;; This function calls:
 34370 ;;		___lldiv
 34371 ;;		___lmul
 34372 ;;		_leds_poll
 34373 ;;		_tickGet
 34374 ;; This function is called by:
 34375 ;;		_checkPowerOnPb
 34376 ;; This function uses a non-reentrant model
 34377 ;;
 34378                           
 34379                           	psect	text135
 34380   0094AE                     __ptext135:
 34381                           	callstack 0
 34382   0094AE                     _pbDownTimer:
 34383                           	callstack 15
 34384                           
 34385                           ; BSR set to: 0
 34386                           ;incstack = 0
 34387                           ;pbDownTimer@timeout stored from wreg
 34388   0094AE  0100               	movlb	0	; () banked
 34389   0094B0  6FA8               	movwf	pbDownTimer@timeout& (0+255),b
 34390                           
 34391                           ;../../VLCBlib_PIC/vlcb.c: 913:     pbTimer.val = tickGet();
 34392   0094B2  ECC2  F059         	call	_tickGet	;wreg free
 34393   0094B6  C08D  F0A9         	movff	?_tickGet,_pbTimer
 34394   0094BA  C08E  F0AA         	movff	?_tickGet+1,_pbTimer+1
 34395   0094BE  C08F  F0AB         	movff	?_tickGet+2,_pbTimer+2
 34396   0094C2  C090  F0AC         	movff	?_tickGet+3,_pbTimer+3
 34397                           
 34398                           ;../../VLCBlib_PIC/vlcb.c: 914:     while ((!(PORTAbits.RA2))) {
 34399   0094C6  D02D               	goto	l2362
 34400   0094C8                     l23446:
 34401                           
 34402                           ;../../VLCBlib_PIC/vlcb.c: 915:         leds_poll();
 34403   0094C8  EC92  F031         	call	_leds_poll	;wreg free
 34404                           
 34405                           ;../../VLCBlib_PIC/vlcb.c: 916:         if ((tickGet() - pbTimer.val) > timeout*62500) {
 34406   0094CC  ECC2  F059         	call	_tickGet	;wreg free
 34407   0094D0  0100               	movlb	0	; () banked
 34408   0094D2  51A9               	movf	_pbTimer& (0+255),w,b
 34409   0094D4  5D8D               	subwf	?_tickGet& (0+255),w,b
 34410   0094D6  6FA4               	movwf	??_pbDownTimer& (0+255),b
 34411   0094D8  51AA               	movf	(_pbTimer+1)& (0+255),w,b
 34412   0094DA  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 34413   0094DC  6FA5               	movwf	(??_pbDownTimer+1)& (0+255),b
 34414   0094DE  51AB               	movf	(_pbTimer+2)& (0+255),w,b
 34415   0094E0  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 34416   0094E2  6FA6               	movwf	(??_pbDownTimer+2)& (0+255),b
 34417   0094E4  51AC               	movf	(_pbTimer+3)& (0+255),w,b
 34418   0094E6  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 34419   0094E8  6FA7               	movwf	(??_pbDownTimer+3)& (0+255),b
 34420   0094EA  51A8               	movf	pbDownTimer@timeout& (0+255),w,b
 34421   0094EC  6F91               	movwf	___lmul@multiplier& (0+255),b
 34422   0094EE  6B92               	clrf	(___lmul@multiplier+1)& (0+255),b
 34423   0094F0  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
 34424   0094F2  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
 34425   0094F4  0E24               	movlw	36
 34426   0094F6  6F95               	movwf	___lmul@multiplicand& (0+255),b
 34427   0094F8  0EF4               	movlw	244
 34428   0094FA  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 34429   0094FC  0E00               	movlw	0
 34430   0094FE  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 34431   009500  0E00               	movlw	0
 34432   009502  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 34433   009504  ECEE  F059         	call	___lmul	;wreg free
 34434   009508  0100               	movlb	0	; () banked
 34435   00950A  51A4               	movf	??_pbDownTimer& (0+255),w,b
 34436   00950C  5D91               	subwf	?___lmul& (0+255),w,b
 34437   00950E  51A5               	movf	(??_pbDownTimer+1)& (0+255),w,b
 34438   009510  5992               	subwfb	(?___lmul+1)& (0+255),w,b
 34439   009512  51A6               	movf	(??_pbDownTimer+2)& (0+255),w,b
 34440   009514  5993               	subwfb	(?___lmul+2)& (0+255),w,b
 34441   009516  51A7               	movf	(??_pbDownTimer+3)& (0+255),w,b
 34442   009518  5994               	subwfb	(?___lmul+3)& (0+255),w,b
 34443   00951A  B0D8               	btfsc	status,0,c
 34444   00951C  D002               	goto	l2362
 34445                           
 34446                           ; BSR set to: 0
 34447                           ;../../VLCBlib_PIC/vlcb.c: 917:             return 0;
 34448   00951E  0E00               	movlw	0
 34449   009520  0012               	return	
 34450   009522                     l2362:
 34451                           
 34452                           ;../../VLCBlib_PIC/vlcb.c: 914:     while ((!(PORTAbits.RA2))) {
 34453   009522  A480               	btfss	128,2,c	;volatile
 34454   009524  D7D1               	goto	l23446
 34455                           
 34456                           ;../../VLCBlib_PIC/vlcb.c: 921:     return (uint8_t)((tickGet() - pbTimer.val)/62500);
 34457   009526  ECC2  F059         	call	_tickGet	;wreg free
 34458   00952A  0100               	movlb	0	; () banked
 34459   00952C  51A9               	movf	_pbTimer& (0+255),w,b
 34460   00952E  5D8D               	subwf	?_tickGet& (0+255),w,b
 34461   009530  6F97               	movwf	___lldiv@dividend& (0+255),b
 34462   009532  51AA               	movf	(_pbTimer+1)& (0+255),w,b
 34463   009534  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 34464   009536  6F98               	movwf	(___lldiv@dividend+1)& (0+255),b
 34465   009538  51AB               	movf	(_pbTimer+2)& (0+255),w,b
 34466   00953A  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 34467   00953C  6F99               	movwf	(___lldiv@dividend+2)& (0+255),b
 34468   00953E  51AC               	movf	(_pbTimer+3)& (0+255),w,b
 34469   009540  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 34470   009542  6F9A               	movwf	(___lldiv@dividend+3)& (0+255),b
 34471   009544  0E24               	movlw	36
 34472   009546  6F9B               	movwf	___lldiv@divisor& (0+255),b
 34473   009548  0EF4               	movlw	244
 34474   00954A  6F9C               	movwf	(___lldiv@divisor+1)& (0+255),b
 34475   00954C  0E00               	movlw	0
 34476   00954E  6F9D               	movwf	(___lldiv@divisor+2)& (0+255),b
 34477   009550  0E00               	movlw	0
 34478   009552  6F9E               	movwf	(___lldiv@divisor+3)& (0+255),b
 34479   009554  EC5D  F053         	call	___lldiv	;wreg free
 34480   009558  0100               	movlb	0	; () banked
 34481   00955A  5197               	movf	?___lldiv& (0+255),w,b
 34482                           
 34483                           ; BSR set to: 0
 34484   00955C  0012               	return		;funcret
 34485   00955E                     __end_of_pbDownTimer:
 34486                           	callstack 0
 34487                           
 34488 ;; *************** function _leds_poll *****************
 34489 ;; Defined at:
 34490 ;;		line 88 in file "../../VLCBlib_PIC/statusLeds2.c"
 34491 ;; Parameters:    Size  Location     Type
 34492 ;;		None
 34493 ;; Auto vars:     Size  Location     Type
 34494 ;;		None
 34495 ;; Return value:  Size  Location     Type
 34496 ;;                  1    wreg      void 
 34497 ;; Registers used:
 34498 ;;		wreg, status,2, status,0, cstack
 34499 ;; Tracked objects:
 34500 ;;		On entry : 0/0
 34501 ;;		On exit  : 0/0
 34502 ;;		Unchanged: 0/0
 34503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34506 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34507 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34508 ;;Total ram usage:        4 bytes
 34509 ;; Hardware stack levels used: 1
 34510 ;; Hardware stack levels required when called: 13
 34511 ;; This function calls:
 34512 ;;		___awdiv
 34513 ;;		_tickGet
 34514 ;; This function is called by:
 34515 ;;		_pbDownTimer
 34516 ;;		_pbUpTimer
 34517 ;;		_poll
 34518 ;; This function uses a non-reentrant model
 34519 ;;
 34520                           
 34521                           	psect	text136
 34522   006324                     __ptext136:
 34523                           	callstack 0
 34524   006324                     _leds_poll:
 34525                           	callstack 16
 34526                           
 34527                           ;../../VLCBlib_PIC/statusLeds2.c: 89:     if ((tickGet() - ledTimer.val) > (62500/100)) 
      +                          {
 34528                           
 34529                           ; BSR set to: 0
 34530                           ;incstack = 0
 34531   006324  ECC2  F059         	call	_tickGet	;wreg free
 34532   006328  0101               	movlb	1	; () banked
 34533   00632A  5158               	movf	_ledTimer& (0+255),w,b
 34534   00632C  0100               	movlb	0	; () banked
 34535   00632E  5D8D               	subwf	?_tickGet& (0+255),w,b
 34536   006330  6F9F               	movwf	??_leds_poll& (0+255),b
 34537   006332  0101               	movlb	1	; () banked
 34538   006334  5159               	movf	(_ledTimer+1)& (0+255),w,b
 34539   006336  0100               	movlb	0	; () banked
 34540   006338  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 34541   00633A  6FA0               	movwf	(??_leds_poll+1)& (0+255),b
 34542   00633C  0101               	movlb	1	; () banked
 34543   00633E  515A               	movf	(_ledTimer+2)& (0+255),w,b
 34544   006340  0100               	movlb	0	; () banked
 34545   006342  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 34546   006344  6FA1               	movwf	(??_leds_poll+2)& (0+255),b
 34547   006346  0101               	movlb	1	; () banked
 34548   006348  515B               	movf	(_ledTimer+3)& (0+255),w,b
 34549   00634A  0100               	movlb	0	; () banked
 34550   00634C  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 34551   00634E  6FA2               	movwf	(??_leds_poll+3)& (0+255),b
 34552   006350  51A2               	movf	(??_leds_poll+3)& (0+255),w,b
 34553   006352  11A1               	iorwf	(??_leds_poll+2)& (0+255),w,b
 34554   006354  E106               	bnz	u22580
 34555   006356  0E72               	movlw	114
 34556   006358  5D9F               	subwf	??_leds_poll& (0+255),w,b
 34557   00635A  0E02               	movlw	2
 34558   00635C  59A0               	subwfb	(??_leds_poll+1)& (0+255),w,b
 34559   00635E  A0D8               	btfss	status,0,c
 34560   006360  D06B               	goto	l21424
 34561   006362                     u22580:
 34562                           
 34563                           ; BSR set to: 0
 34564                           ;../../VLCBlib_PIC/statusLeds2.c: 90:         flashCounter[0]++;
 34565   006362  2BAF               	incf	_flashCounter& (0+255),f,b
 34566                           
 34567                           ;../../VLCBlib_PIC/statusLeds2.c: 91:         flashCounter[1]++;
 34568   006364  2BB0               	incf	(_flashCounter+1)& (0+255),f,b
 34569                           
 34570                           ; BSR set to: 0
 34571                           ;../../VLCBlib_PIC/statusLeds2.c: 92:         ledTimer.val = tickGet();
 34572   006366  ECC2  F059         	call	_tickGet	;wreg free
 34573   00636A  C08D  F158         	movff	?_tickGet,_ledTimer
 34574   00636E  C08E  F159         	movff	?_tickGet+1,_ledTimer+1
 34575   006372  C08F  F15A         	movff	?_tickGet+2,_ledTimer+2
 34576   006376  C090  F15B         	movff	?_tickGet+3,_ledTimer+3
 34577   00637A  D05E               	goto	l21424
 34578   00637C                     l2136:
 34579                           
 34580                           ; BSR set to: 0
 34581                           ;../../VLCBlib_PIC/statusLeds2.c: 97:             (LATBbits.LATB6=1);
 34582   00637C  8C8A               	bsf	138,6,c	;volatile
 34583   00637E                     l21380:
 34584                           
 34585                           ; BSR set to: 0
 34586                           ;../../VLCBlib_PIC/statusLeds2.c: 98:             flashCounter[1] = 0;
 34587   00637E  0E00               	movlw	0
 34588   006380  6FB0               	movwf	(_flashCounter+1)& (0+255),b
 34589                           
 34590                           ;../../VLCBlib_PIC/statusLeds2.c: 99:             break;
 34591   006382  D0E0               	goto	l21470
 34592   006384                     l2138:
 34593                           
 34594                           ; BSR set to: 0
 34595                           ;../../VLCBlib_PIC/statusLeds2.c: 101:             (LATBbits.LATB6=0);
 34596   006384  9C8A               	bcf	138,6,c	;volatile
 34597   006386  D7FB               	goto	l21380
 34598   006388                     l21384:
 34599                           
 34600                           ; BSR set to: 0
 34601                           ;../../VLCBlib_PIC/statusLeds2.c: 106:             (LATBbits.LATB6=flashCounter[1]/25);
 34602   006388  C0B0  F097         	movff	_flashCounter+1,___awdiv@dividend
 34603   00638C  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 34604   00638E  0E00               	movlw	0
 34605   006390  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 34606   006392  0E19               	movlw	25
 34607   006394  6F99               	movwf	___awdiv@divisor& (0+255),b
 34608   006396  ECD7  F052         	call	___awdiv	;wreg free
 34609   00639A  0100               	movlb	0	; () banked
 34610   00639C  3B97               	swapf	?___awdiv& (0+255),f,b
 34611   00639E  4797               	rlncf	?___awdiv& (0+255),f,b
 34612   0063A0  4797               	rlncf	?___awdiv& (0+255),f,b
 34613   0063A2  508A               	movf	138,w,c	;volatile
 34614   0063A4  1997               	xorwf	?___awdiv& (0+255),w,b
 34615   0063A6  0BBF               	andlw	-65
 34616   0063A8  1997               	xorwf	?___awdiv& (0+255),w,b
 34617   0063AA  6E8A               	movwf	138,c	;volatile
 34618                           
 34619                           ; BSR set to: 0
 34620                           ;../../VLCBlib_PIC/statusLeds2.c: 107:             if (flashCounter[1] >= 50) {
 34621   0063AC  0E31               	movlw	49
 34622   0063AE                     L17:
 34623   0063AE  65B0               	cpfsgt	(_flashCounter+1)& (0+255),b
 34624   0063B0  D0C9               	goto	l21470
 34625   0063B2  D7E5               	goto	l21380
 34626   0063B4                     l21390:
 34627                           
 34628                           ; BSR set to: 0
 34629                           ;../../VLCBlib_PIC/statusLeds2.c: 113:             (LATBbits.LATB6=flashCounter[1]/50);
 34630   0063B4  C0B0  F097         	movff	_flashCounter+1,___awdiv@dividend
 34631   0063B8  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 34632   0063BA  0E00               	movlw	0
 34633   0063BC  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 34634   0063BE  0E32               	movlw	50
 34635   0063C0  6F99               	movwf	___awdiv@divisor& (0+255),b
 34636   0063C2  ECD7  F052         	call	___awdiv	;wreg free
 34637   0063C6  0100               	movlb	0	; () banked
 34638   0063C8  3B97               	swapf	?___awdiv& (0+255),f,b
 34639   0063CA  4797               	rlncf	?___awdiv& (0+255),f,b
 34640   0063CC  4797               	rlncf	?___awdiv& (0+255),f,b
 34641   0063CE  508A               	movf	138,w,c	;volatile
 34642   0063D0  1997               	xorwf	?___awdiv& (0+255),w,b
 34643   0063D2  0BBF               	andlw	-65
 34644   0063D4  1997               	xorwf	?___awdiv& (0+255),w,b
 34645   0063D6  6E8A               	movwf	138,c	;volatile
 34646                           
 34647                           ; BSR set to: 0
 34648                           ;../../VLCBlib_PIC/statusLeds2.c: 114:             if (flashCounter[1] >= 100) {
 34649   0063D8  0E63               	movlw	99
 34650   0063DA  D7E9               	goto	L17
 34651   0063DC                     l21396:
 34652                           
 34653                           ; BSR set to: 0
 34654                           ;../../VLCBlib_PIC/statusLeds2.c: 119:             (LATBbits.LATB6=flashCounter[1]/100);
 34655   0063DC  C0B0  F097         	movff	_flashCounter+1,___awdiv@dividend
 34656   0063E0  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 34657   0063E2  0E00               	movlw	0
 34658   0063E4  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 34659   0063E6  0E64               	movlw	100
 34660   0063E8  6F99               	movwf	___awdiv@divisor& (0+255),b
 34661   0063EA  ECD7  F052         	call	___awdiv	;wreg free
 34662   0063EE  0100               	movlb	0	; () banked
 34663   0063F0  3B97               	swapf	?___awdiv& (0+255),f,b
 34664   0063F2  4797               	rlncf	?___awdiv& (0+255),f,b
 34665   0063F4  4797               	rlncf	?___awdiv& (0+255),f,b
 34666   0063F6  508A               	movf	138,w,c	;volatile
 34667   0063F8  1997               	xorwf	?___awdiv& (0+255),w,b
 34668   0063FA  0BBF               	andlw	-65
 34669   0063FC  1997               	xorwf	?___awdiv& (0+255),w,b
 34670   0063FE  6E8A               	movwf	138,c	;volatile
 34671                           
 34672                           ; BSR set to: 0
 34673                           ;../../VLCBlib_PIC/statusLeds2.c: 120:             if (flashCounter[1] >= 200) {
 34674   006400  0EC7               	movlw	199
 34675   006402  D7D5               	goto	L17
 34676   006404                     l2145:
 34677                           
 34678                           ; BSR set to: 0
 34679                           ;../../VLCBlib_PIC/statusLeds2.c: 125:             (LATBbits.LATB6=1);
 34680   006404  8C8A               	bsf	138,6,c	;volatile
 34681                           
 34682                           ; BSR set to: 0
 34683                           ;../../VLCBlib_PIC/statusLeds2.c: 126:             if (flashCounter[1] >= 25) {
 34684   006406  0E18               	movlw	24
 34685   006408  65B0               	cpfsgt	(_flashCounter+1)& (0+255),b
 34686   00640A  D09C               	goto	l21470
 34687                           
 34688                           ; BSR set to: 0
 34689                           ;../../VLCBlib_PIC/statusLeds2.c: 127:                 flashCounter[1] = 0;
 34690   00640C  0E00               	movlw	0
 34691   00640E  6FB0               	movwf	(_flashCounter+1)& (0+255),b
 34692                           
 34693                           ;../../VLCBlib_PIC/statusLeds2.c: 128:                 ledState[1] = LED_OFF;
 34694   006410  0E00               	movlw	0
 34695   006412  D007               	goto	L18
 34696   006414                     l2147:
 34697                           
 34698                           ; BSR set to: 0
 34699                           ;../../VLCBlib_PIC/statusLeds2.c: 132:             (LATBbits.LATB6=0);
 34700   006414  9C8A               	bcf	138,6,c	;volatile
 34701                           
 34702                           ; BSR set to: 0
 34703                           ;../../VLCBlib_PIC/statusLeds2.c: 133:             if (flashCounter[1] >= 25) {
 34704   006416  0E18               	movlw	24
 34705   006418  65B0               	cpfsgt	(_flashCounter+1)& (0+255),b
 34706   00641A  D094               	goto	l21470
 34707                           
 34708                           ; BSR set to: 0
 34709                           ;../../VLCBlib_PIC/statusLeds2.c: 134:                 flashCounter[1] = 0;
 34710   00641C  0E00               	movlw	0
 34711   00641E  6FB0               	movwf	(_flashCounter+1)& (0+255),b
 34712                           
 34713                           ;../../VLCBlib_PIC/statusLeds2.c: 135:                 ledState[1] = LED_ON;
 34714   006420  0E01               	movlw	1
 34715   006422                     L18:
 34716   006422  6FB2               	movwf	(_ledState+1)& (0+255),b
 34717   006424  D08F               	goto	l21470
 34718   006426                     l2149:
 34719                           
 34720                           ; BSR set to: 0
 34721                           ;../../VLCBlib_PIC/statusLeds2.c: 139:             (LATBbits.LATB6=1);
 34722   006426  8C8A               	bsf	138,6,c	;volatile
 34723                           
 34724                           ; BSR set to: 0
 34725                           ;../../VLCBlib_PIC/statusLeds2.c: 140:             if (flashCounter[1] >= 50) {
 34726   006428  0E31               	movlw	49
 34727   00642A  D7EE               	goto	L21
 34728   00642C                     l2151:
 34729                           
 34730                           ; BSR set to: 0
 34731                           ;../../VLCBlib_PIC/statusLeds2.c: 146:             (LATBbits.LATB6=0);
 34732   00642C  9C8A               	bcf	138,6,c	;volatile
 34733                           
 34734                           ; BSR set to: 0
 34735                           ;../../VLCBlib_PIC/statusLeds2.c: 147:             if (flashCounter[1] >= 50) {
 34736   00642E  0E31               	movlw	49
 34737   006430  D7F3               	goto	L22
 34738   006432                     l2153:
 34739                           
 34740                           ; BSR set to: 0
 34741                           ;../../VLCBlib_PIC/statusLeds2.c: 153:             (LATBbits.LATB6=0);
 34742   006432  9C8A               	bcf	138,6,c	;volatile
 34743                           
 34744                           ; BSR set to: 0
 34745                           ;../../VLCBlib_PIC/statusLeds2.c: 154:             if (flashCounter[1] >= 100) {
 34746   006434  0E63               	movlw	99
 34747   006436  D7F0               	goto	L22
 34748   006438                     l21424:
 34749   006438  0100               	movlb	0	; () banked
 34750   00643A  51B2               	movf	(_ledState+1)& (0+255),w,b
 34751   00643C  6F9F               	movwf	??_leds_poll& (0+255),b
 34752   00643E  6BA0               	clrf	(??_leds_poll+1)& (0+255),b
 34753                           
 34754                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 34755                           ; Switch size 1, requested type "simple"
 34756                           ; Number of cases is 1, Range of values is 0 to 0
 34757                           ; switch strategies available:
 34758                           ; Name         Instructions Cycles
 34759                           ; simple_byte            4     3 (average)
 34760                           ;	Chosen strategy is simple_byte
 34761   006440  51A0               	movf	(??_leds_poll+1)& (0+255),w,b
 34762   006442  0A00               	xorlw	0	; case 0
 34763   006444  A4D8               	btfss	status,2,c
 34764   006446  D07E               	goto	l21470
 34765                           
 34766                           ; BSR set to: 0
 34767                           ; Switch size 1, requested type "simple"
 34768                           ; Number of cases is 10, Range of values is 0 to 9
 34769                           ; switch strategies available:
 34770                           ; Name         Instructions Cycles
 34771                           ; simple_byte           31    16 (average)
 34772                           ;	Chosen strategy is simple_byte
 34773   006448  519F               	movf	??_leds_poll& (0+255),w,b
 34774   00644A  0A00               	xorlw	0	; case 0
 34775   00644C  B4D8               	btfsc	status,2,c
 34776   00644E  D79A               	goto	l2138
 34777   006450  0A01               	xorlw	1	; case 1
 34778   006452  B4D8               	btfsc	status,2,c
 34779   006454  D793               	goto	l2136
 34780   006456  0A03               	xorlw	3	; case 2
 34781   006458  B4D8               	btfsc	status,2,c
 34782   00645A  D796               	goto	l21384
 34783   00645C  0A01               	xorlw	1	; case 3
 34784   00645E  B4D8               	btfsc	status,2,c
 34785   006460  D7A9               	goto	l21390
 34786   006462  0A07               	xorlw	7	; case 4
 34787   006464  B4D8               	btfsc	status,2,c
 34788   006466  D7BA               	goto	l21396
 34789   006468  0A01               	xorlw	1	; case 5
 34790   00646A  B4D8               	btfsc	status,2,c
 34791   00646C  D7D3               	goto	l2147
 34792   00646E  0A03               	xorlw	3	; case 6
 34793   006470  B4D8               	btfsc	status,2,c
 34794   006472  D7C8               	goto	l2145
 34795   006474  0A01               	xorlw	1	; case 7
 34796   006476  B4D8               	btfsc	status,2,c
 34797   006478  D7D9               	goto	l2151
 34798   00647A  0A0F               	xorlw	15	; case 8
 34799   00647C  B4D8               	btfsc	status,2,c
 34800   00647E  D7D3               	goto	l2149
 34801   006480  0A01               	xorlw	1	; case 9
 34802   006482  B4D8               	btfsc	status,2,c
 34803   006484  D7D6               	goto	l2153
 34804   006486  D05E               	goto	l21470
 34805   006488                     l2156:
 34806                           
 34807                           ; BSR set to: 0
 34808                           ;../../VLCBlib_PIC/statusLeds2.c: 163:             (LATBbits.LATB7=1);
 34809   006488  8E8A               	bsf	138,7,c	;volatile
 34810   00648A                     l21426:
 34811                           
 34812                           ; BSR set to: 0
 34813                           ;../../VLCBlib_PIC/statusLeds2.c: 164:             flashCounter[0] = 0;
 34814   00648A  0E00               	movlw	0
 34815   00648C  6FAF               	movwf	_flashCounter& (0+255),b
 34816                           
 34817                           ;../../VLCBlib_PIC/statusLeds2.c: 165:             break;
 34818   00648E  0012               	return	
 34819   006490                     l2158:
 34820                           
 34821                           ; BSR set to: 0
 34822                           ;../../VLCBlib_PIC/statusLeds2.c: 167:             (LATBbits.LATB7=0);
 34823   006490  9E8A               	bcf	138,7,c	;volatile
 34824   006492  D7FB               	goto	l21426
 34825   006494                     l21430:
 34826                           
 34827                           ; BSR set to: 0
 34828                           ;../../VLCBlib_PIC/statusLeds2.c: 172:             (LATBbits.LATB7=flashCounter[0]/25);
 34829   006494  C0AF  F097         	movff	_flashCounter,___awdiv@dividend
 34830   006498  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 34831   00649A  0E00               	movlw	0
 34832   00649C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 34833   00649E  0E19               	movlw	25
 34834   0064A0  6F99               	movwf	___awdiv@divisor& (0+255),b
 34835   0064A2  ECD7  F052         	call	___awdiv	;wreg free
 34836   0064A6  0100               	movlb	0	; () banked
 34837   0064A8  3397               	rrcf	?___awdiv& (0+255),f,b
 34838   0064AA  3397               	rrcf	?___awdiv& (0+255),f,b
 34839   0064AC  508A               	movf	138,w,c	;volatile
 34840   0064AE  1997               	xorwf	?___awdiv& (0+255),w,b
 34841   0064B0  0B7F               	andlw	-129
 34842   0064B2  1997               	xorwf	?___awdiv& (0+255),w,b
 34843   0064B4  6E8A               	movwf	138,c	;volatile
 34844                           
 34845                           ; BSR set to: 0
 34846                           ;../../VLCBlib_PIC/statusLeds2.c: 173:             if (flashCounter[0] >= 50) {
 34847   0064B6  0E31               	movlw	49
 34848   0064B8                     L20:
 34849   0064B8  65AF               	cpfsgt	_flashCounter& (0+255),b
 34850   0064BA  0012               	return	
 34851   0064BC  D7E6               	goto	l21426
 34852   0064BE                     l21436:
 34853                           
 34854                           ; BSR set to: 0
 34855                           ;../../VLCBlib_PIC/statusLeds2.c: 179:             (LATBbits.LATB7=flashCounter[0]/50);
 34856   0064BE  C0AF  F097         	movff	_flashCounter,___awdiv@dividend
 34857   0064C2  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 34858   0064C4  0E00               	movlw	0
 34859   0064C6  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 34860   0064C8  0E32               	movlw	50
 34861   0064CA  6F99               	movwf	___awdiv@divisor& (0+255),b
 34862   0064CC  ECD7  F052         	call	___awdiv	;wreg free
 34863   0064D0  0100               	movlb	0	; () banked
 34864   0064D2  3397               	rrcf	?___awdiv& (0+255),f,b
 34865   0064D4  3397               	rrcf	?___awdiv& (0+255),f,b
 34866   0064D6  508A               	movf	138,w,c	;volatile
 34867   0064D8  1997               	xorwf	?___awdiv& (0+255),w,b
 34868   0064DA  0B7F               	andlw	-129
 34869   0064DC  1997               	xorwf	?___awdiv& (0+255),w,b
 34870   0064DE  6E8A               	movwf	138,c	;volatile
 34871                           
 34872                           ; BSR set to: 0
 34873                           ;../../VLCBlib_PIC/statusLeds2.c: 180:             if (flashCounter[0] >= 100) {
 34874   0064E0  0E63               	movlw	99
 34875   0064E2  D7EA               	goto	L20
 34876   0064E4                     l21442:
 34877                           
 34878                           ; BSR set to: 0
 34879                           ;../../VLCBlib_PIC/statusLeds2.c: 185:             (LATBbits.LATB7=flashCounter[0]/100);
 34880   0064E4  C0AF  F097         	movff	_flashCounter,___awdiv@dividend
 34881   0064E8  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 34882   0064EA  0E00               	movlw	0
 34883   0064EC  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 34884   0064EE  0E64               	movlw	100
 34885   0064F0  6F99               	movwf	___awdiv@divisor& (0+255),b
 34886   0064F2  ECD7  F052         	call	___awdiv	;wreg free
 34887   0064F6  0100               	movlb	0	; () banked
 34888   0064F8  3397               	rrcf	?___awdiv& (0+255),f,b
 34889   0064FA  3397               	rrcf	?___awdiv& (0+255),f,b
 34890   0064FC  508A               	movf	138,w,c	;volatile
 34891   0064FE  1997               	xorwf	?___awdiv& (0+255),w,b
 34892   006500  0B7F               	andlw	-129
 34893   006502  1997               	xorwf	?___awdiv& (0+255),w,b
 34894   006504  6E8A               	movwf	138,c	;volatile
 34895                           
 34896                           ; BSR set to: 0
 34897                           ;../../VLCBlib_PIC/statusLeds2.c: 186:             if (flashCounter[0] >= 200) {
 34898   006506  0EC7               	movlw	199
 34899   006508  D7D7               	goto	L20
 34900   00650A                     l2165:
 34901                           
 34902                           ; BSR set to: 0
 34903                           ;../../VLCBlib_PIC/statusLeds2.c: 191:             (LATBbits.LATB7=1);
 34904   00650A  8E8A               	bsf	138,7,c	;volatile
 34905                           
 34906                           ; BSR set to: 0
 34907                           ;../../VLCBlib_PIC/statusLeds2.c: 192:             if (flashCounter[0] >= 25) {
 34908   00650C  0E18               	movlw	24
 34909   00650E  D00F               	goto	L24
 34910   006510                     u22700:
 34911                           
 34912                           ; BSR set to: 0
 34913                           ;../../VLCBlib_PIC/statusLeds2.c: 193:                 flashCounter[0] = 0;
 34914   006510  0E00               	movlw	0
 34915   006512  6FAF               	movwf	_flashCounter& (0+255),b
 34916                           
 34917                           ;../../VLCBlib_PIC/statusLeds2.c: 194:                 ledState[0] = LED_OFF;
 34918   006514  0E00               	movlw	0
 34919   006516  6FB1               	movwf	_ledState& (0+255),b
 34920   006518  0012               	return	
 34921   00651A                     l2167:
 34922                           
 34923                           ; BSR set to: 0
 34924                           ;../../VLCBlib_PIC/statusLeds2.c: 198:             (LATBbits.LATB7=0);
 34925   00651A  9E8A               	bcf	138,7,c	;volatile
 34926                           
 34927                           ; BSR set to: 0
 34928                           ;../../VLCBlib_PIC/statusLeds2.c: 199:             if (flashCounter[0] >= 25) {
 34929   00651C  0E18               	movlw	24
 34930   00651E  D00C               	goto	L23
 34931   006520                     u22710:
 34932                           
 34933                           ; BSR set to: 0
 34934                           ;../../VLCBlib_PIC/statusLeds2.c: 200:                 flashCounter[0] = 0;
 34935   006520  0E00               	movlw	0
 34936   006522  6FAF               	movwf	_flashCounter& (0+255),b
 34937                           
 34938                           ;../../VLCBlib_PIC/statusLeds2.c: 201:                 ledState[0] = LED_ON;
 34939   006524  0E01               	movlw	1
 34940   006526  6FB1               	movwf	_ledState& (0+255),b
 34941   006528  0012               	return	
 34942   00652A                     l2169:
 34943                           
 34944                           ; BSR set to: 0
 34945                           ;../../VLCBlib_PIC/statusLeds2.c: 205:             (LATBbits.LATB7=1);
 34946   00652A  8E8A               	bsf	138,7,c	;volatile
 34947                           
 34948                           ; BSR set to: 0
 34949                           ;../../VLCBlib_PIC/statusLeds2.c: 206:             if (flashCounter[0] >= 50) {
 34950   00652C  0E31               	movlw	49
 34951   00652E                     L24:
 34952   00652E  65AF               	cpfsgt	_flashCounter& (0+255),b
 34953   006530  0012               	return	
 34954   006532  D7EE               	goto	u22700
 34955   006534                     l2171:
 34956                           
 34957                           ; BSR set to: 0
 34958                           ;../../VLCBlib_PIC/statusLeds2.c: 212:             (LATBbits.LATB7=0);
 34959   006534  9E8A               	bcf	138,7,c	;volatile
 34960                           
 34961                           ; BSR set to: 0
 34962                           ;../../VLCBlib_PIC/statusLeds2.c: 213:             if (flashCounter[0] >= 50) {
 34963   006536  0E31               	movlw	49
 34964   006538                     L23:
 34965   006538  65AF               	cpfsgt	_flashCounter& (0+255),b
 34966   00653A  0012               	return	
 34967   00653C  D7F1               	goto	u22710
 34968   00653E                     l2173:
 34969                           
 34970                           ; BSR set to: 0
 34971                           ;../../VLCBlib_PIC/statusLeds2.c: 219:             (LATBbits.LATB7=0);
 34972   00653E  9E8A               	bcf	138,7,c	;volatile
 34973                           
 34974                           ; BSR set to: 0
 34975                           ;../../VLCBlib_PIC/statusLeds2.c: 220:             if (flashCounter[0] >= 100) {
 34976   006540  0E63               	movlw	99
 34977   006542  D7FA               	goto	L23
 34978   006544                     l21470:
 34979                           
 34980                           ; BSR set to: 0
 34981   006544  51B1               	movf	_ledState& (0+255),w,b
 34982   006546  6F9F               	movwf	??_leds_poll& (0+255),b
 34983   006548  6BA0               	clrf	(??_leds_poll+1)& (0+255),b
 34984                           
 34985                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 34986                           ; Switch size 1, requested type "simple"
 34987                           ; Number of cases is 1, Range of values is 0 to 0
 34988                           ; switch strategies available:
 34989                           ; Name         Instructions Cycles
 34990                           ; simple_byte            4     3 (average)
 34991                           ;	Chosen strategy is simple_byte
 34992   00654A  51A0               	movf	(??_leds_poll+1)& (0+255),w,b
 34993   00654C  0A00               	xorlw	0	; case 0
 34994   00654E  A4D8               	btfss	status,2,c
 34995   006550  0012               	return	
 34996                           
 34997                           ; BSR set to: 0
 34998                           ; Switch size 1, requested type "simple"
 34999                           ; Number of cases is 10, Range of values is 0 to 9
 35000                           ; switch strategies available:
 35001                           ; Name         Instructions Cycles
 35002                           ; simple_byte           31    16 (average)
 35003                           ;	Chosen strategy is simple_byte
 35004   006552  519F               	movf	??_leds_poll& (0+255),w,b
 35005   006554  0A00               	xorlw	0	; case 0
 35006   006556  B4D8               	btfsc	status,2,c
 35007   006558  D79B               	goto	l2158
 35008   00655A  0A01               	xorlw	1	; case 1
 35009   00655C  B4D8               	btfsc	status,2,c
 35010   00655E  D794               	goto	l2156
 35011   006560  0A03               	xorlw	3	; case 2
 35012   006562  B4D8               	btfsc	status,2,c
 35013   006564  D797               	goto	l21430
 35014   006566  0A01               	xorlw	1	; case 3
 35015   006568  B4D8               	btfsc	status,2,c
 35016   00656A  D7A9               	goto	l21436
 35017   00656C  0A07               	xorlw	7	; case 4
 35018   00656E  B4D8               	btfsc	status,2,c
 35019   006570  D7B9               	goto	l21442
 35020   006572  0A01               	xorlw	1	; case 5
 35021   006574  B4D8               	btfsc	status,2,c
 35022   006576  D7D1               	goto	l2167
 35023   006578  0A03               	xorlw	3	; case 6
 35024   00657A  B4D8               	btfsc	status,2,c
 35025   00657C  D7C6               	goto	l2165
 35026   00657E  0A01               	xorlw	1	; case 7
 35027   006580  B4D8               	btfsc	status,2,c
 35028   006582  D7D8               	goto	l2171
 35029   006584  0A0F               	xorlw	15	; case 8
 35030   006586  B4D8               	btfsc	status,2,c
 35031   006588  D7D0               	goto	l2169
 35032   00658A  0A01               	xorlw	1	; case 9
 35033   00658C  A4D8               	btfss	status,2,c
 35034   00658E  0012               	return	
 35035   006590  D7D6               	goto	l2173
 35036   006592                     __end_of_leds_poll:
 35037                           	callstack 0
 35038                           
 35039 ;; *************** function _tickGet *****************
 35040 ;; Defined at:
 35041 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 35042 ;; Parameters:    Size  Location     Type
 35043 ;;		None
 35044 ;; Auto vars:     Size  Location     Type
 35045 ;;  currentTime     4   51[BANK0 ] struct _TickValue
 35046 ;;  IntFlag1        1   50[BANK0 ] unsigned char 
 35047 ;;  IntFlag2        1   49[BANK0 ] unsigned char 
 35048 ;; Return value:  Size  Location     Type
 35049 ;;                  4   45[BANK0 ] unsigned long 
 35050 ;; Registers used:
 35051 ;;		wreg, status,2, status,0
 35052 ;; Tracked objects:
 35053 ;;		On entry : 0/0
 35054 ;;		On exit  : 0/0
 35055 ;;		Unchanged: 0/0
 35056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35057 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35058 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35060 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35061 ;;Total ram usage:       10 bytes
 35062 ;; Hardware stack levels used: 1
 35063 ;; Hardware stack levels required when called: 12
 35064 ;; This function calls:
 35065 ;;		Nothing
 35066 ;; This function is called by:
 35067 ;;		_setup
 35068 ;;		_loop
 35069 ;;		_doWait
 35070 ;;		_initServos
 35071 ;;		_pollServos
 35072 ;;		_mnsPowerUp
 35073 ;;		_mnsPoll
 35074 ;;		_leds_powerUp
 35075 ;;		_leds_poll
 35076 ;;		_pbDownTimer
 35077 ;;		_pbUpTimer
 35078 ;;		_poll
 35079 ;;		_canPowerUp
 35080 ;;		_handleSelfEnumeration
 35081 ;;		_processEnumeration
 35082 ;; This function uses a non-reentrant model
 35083 ;;
 35084                           
 35085                           	psect	text137
 35086   00B384                     __ptext137:
 35087                           	callstack 0
 35088   00B384                     _tickGet:
 35089                           	callstack 17
 35090                           
 35091                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 35092                           
 35093                           ; BSR set to: 0
 35094                           ;incstack = 0
 35095   00B384  0E00               	movlw	0
 35096   00B386  0100               	movlb	0	; () banked
 35097   00B388  6F95               	movwf	(tickGet@currentTime+2)& (0+255),b
 35098                           
 35099                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 35100   00B38A  0E00               	movlw	0
 35101   00B38C  6F96               	movwf	(tickGet@currentTime+3)& (0+255),b
 35102                           
 35103                           ; BSR set to: 0
 35104                           ;../../VLCBlib_PIC/ticktime.c: 169:     INTCONbits.TMR0IE = 0;
 35105   00B38E  9AF2               	bcf	242,5,c	;volatile
 35106   00B390                     l19534:
 35107                           
 35108                           ; BSR set to: 0
 35109                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = INTCONbits.TMR0IF;
 35110   00B390  0E00               	movlw	0
 35111   00B392  B4F2               	btfsc	242,2,c	;volatile
 35112   00B394  0E01               	movlw	1
 35113   00B396  6F92               	movwf	tickGet@IntFlag1& (0+255),b
 35114                           
 35115                           ; BSR set to: 0
 35116                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 35117   00B398  CFD6 F093          	movff	4054,tickGet@currentTime	;volatile
 35118                           
 35119                           ; BSR set to: 0
 35120                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 35121   00B39C  CFD7 F094          	movff	4055,tickGet@currentTime+1	;volatile
 35122                           
 35123                           ; BSR set to: 0
 35124                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = INTCONbits.TMR0IF;
 35125   00B3A0  0E00               	movlw	0
 35126   00B3A2  B4F2               	btfsc	242,2,c	;volatile
 35127   00B3A4  0E01               	movlw	1
 35128   00B3A6  6F91               	movwf	tickGet@IntFlag2& (0+255),b
 35129                           
 35130                           ; BSR set to: 0
 35131                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 35132   00B3A8  5191               	movf	tickGet@IntFlag2& (0+255),w,b
 35133   00B3AA  1992               	xorwf	tickGet@IntFlag1& (0+255),w,b
 35134   00B3AC  A4D8               	btfss	status,2,c
 35135   00B3AE  D7F0               	goto	l19534
 35136                           
 35137                           ; BSR set to: 0
 35138                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 35139   00B3B0  5192               	movf	tickGet@IntFlag1& (0+255),w,b
 35140   00B3B2  B4D8               	btfsc	status,2,c
 35141   00B3B4  D005               	goto	l19554
 35142                           
 35143                           ; BSR set to: 0
 35144                           ;../../VLCBlib_PIC/ticktime.c: 178:         INTCONbits.TMR0IF = 0;
 35145   00B3B6  94F2               	bcf	242,2,c	;volatile
 35146                           
 35147                           ; BSR set to: 0
 35148                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 35149   00B3B8  2BC3               	incf	_timerExtension1& (0+255),f,b	;volatile
 35150                           
 35151                           ; BSR set to: 0
 35152                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 35153   00B3BA  51C3               	movf	_timerExtension1& (0+255),w,b	;volatile
 35154   00B3BC  B4D8               	btfsc	status,2,c
 35155                           
 35156                           ; BSR set to: 0
 35157                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 35158   00B3BE  2BC2               	incf	_timerExtension2& (0+255),f,b	;volatile
 35159   00B3C0                     l19554:
 35160                           
 35161                           ; BSR set to: 0
 35162                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 35163   00B3C0  51C3               	movf	_timerExtension1& (0+255),w,b	;volatile
 35164   00B3C2  2795               	addwf	(tickGet@currentTime+2)& (0+255),f,b
 35165                           
 35166                           ; BSR set to: 0
 35167                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 35168   00B3C4  51C2               	movf	_timerExtension2& (0+255),w,b	;volatile
 35169   00B3C6  2796               	addwf	(tickGet@currentTime+3)& (0+255),f,b
 35170                           
 35171                           ; BSR set to: 0
 35172                           ;../../VLCBlib_PIC/ticktime.c: 191:     INTCONbits.TMR0IE = 1;
 35173   00B3C8  8AF2               	bsf	242,5,c	;volatile
 35174                           
 35175                           ; BSR set to: 0
 35176                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 35177   00B3CA  C093  F08D         	movff	tickGet@currentTime,?_tickGet
 35178   00B3CE  C094  F08E         	movff	tickGet@currentTime+1,?_tickGet+1
 35179   00B3D2  C095  F08F         	movff	tickGet@currentTime+2,?_tickGet+2
 35180   00B3D6  C096  F090         	movff	tickGet@currentTime+3,?_tickGet+3
 35181                           
 35182                           ; BSR set to: 0
 35183   00B3DA  0012               	return		;funcret
 35184   00B3DC                     __end_of_tickGet:
 35185                           	callstack 0
 35186                           
 35187 ;; *************** function ___lmul *****************
 35188 ;; Defined at:
 35189 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul32.c"
 35190 ;; Parameters:    Size  Location     Type
 35191 ;;  multiplier      4   49[BANK0 ] unsigned long 
 35192 ;;  multiplicand    4   53[BANK0 ] unsigned long 
 35193 ;; Auto vars:     Size  Location     Type
 35194 ;;  product         4   57[BANK0 ] unsigned long 
 35195 ;; Return value:  Size  Location     Type
 35196 ;;                  4   49[BANK0 ] unsigned long 
 35197 ;; Registers used:
 35198 ;;		wreg, status,2, status,0
 35199 ;; Tracked objects:
 35200 ;;		On entry : 0/0
 35201 ;;		On exit  : 0/0
 35202 ;;		Unchanged: 0/0
 35203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35204 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35205 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35207 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35208 ;;Total ram usage:       12 bytes
 35209 ;; Hardware stack levels used: 1
 35210 ;; Hardware stack levels required when called: 12
 35211 ;; This function calls:
 35212 ;;		Nothing
 35213 ;; This function is called by:
 35214 ;;		_loop
 35215 ;;		_doWait
 35216 ;;		_pbDownTimer
 35217 ;;		_pbUpTimer
 35218 ;;		_poll
 35219 ;; This function uses a non-reentrant model
 35220 ;;
 35221                           
 35222                           	psect	text138
 35223   00B3DC                     __ptext138:
 35224                           	callstack 0
 35225   00B3DC                     ___lmul:
 35226                           	callstack 17
 35227                           
 35228                           ; BSR set to: 0
 35229                           ;incstack = 0
 35230   00B3DC  0E00               	movlw	0
 35231   00B3DE  0100               	movlb	0	; () banked
 35232   00B3E0  6F99               	movwf	___lmul@product& (0+255),b
 35233   00B3E2  0E00               	movlw	0
 35234   00B3E4  6F9A               	movwf	(___lmul@product+1)& (0+255),b
 35235   00B3E6  0E00               	movlw	0
 35236   00B3E8  6F9B               	movwf	(___lmul@product+2)& (0+255),b
 35237   00B3EA  0E00               	movlw	0
 35238   00B3EC  6F9C               	movwf	(___lmul@product+3)& (0+255),b
 35239   00B3EE                     l20356:
 35240                           
 35241                           ; BSR set to: 0
 35242   00B3EE  A191               	btfss	___lmul@multiplier& (0+255),0,b
 35243   00B3F0  D008               	goto	l20360
 35244                           
 35245                           ; BSR set to: 0
 35246   00B3F2  5195               	movf	___lmul@multiplicand& (0+255),w,b
 35247   00B3F4  2799               	addwf	___lmul@product& (0+255),f,b
 35248   00B3F6  5196               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 35249   00B3F8  239A               	addwfc	(___lmul@product+1)& (0+255),f,b
 35250   00B3FA  5197               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 35251   00B3FC  239B               	addwfc	(___lmul@product+2)& (0+255),f,b
 35252   00B3FE  5198               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 35253   00B400  239C               	addwfc	(___lmul@product+3)& (0+255),f,b
 35254   00B402                     l20360:
 35255                           
 35256                           ; BSR set to: 0
 35257   00B402  90D8               	bcf	status,0,c
 35258   00B404  3795               	rlcf	___lmul@multiplicand& (0+255),f,b
 35259   00B406  3796               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 35260   00B408  3797               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 35261   00B40A  3798               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 35262                           
 35263                           ; BSR set to: 0
 35264   00B40C  90D8               	bcf	status,0,c
 35265   00B40E  3394               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 35266   00B410  3393               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 35267   00B412  3392               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 35268   00B414  3391               	rrcf	___lmul@multiplier& (0+255),f,b
 35269   00B416  5191               	movf	___lmul@multiplier& (0+255),w,b
 35270   00B418  1192               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 35271   00B41A  1193               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 35272   00B41C  1194               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 35273   00B41E  A4D8               	btfss	status,2,c
 35274   00B420  D7E6               	goto	l20356
 35275                           
 35276                           ; BSR set to: 0
 35277   00B422  C099  F091         	movff	___lmul@product,?___lmul
 35278   00B426  C09A  F092         	movff	___lmul@product+1,?___lmul+1
 35279   00B42A  C09B  F093         	movff	___lmul@product+2,?___lmul+2
 35280   00B42E  C09C  F094         	movff	___lmul@product+3,?___lmul+3
 35281                           
 35282                           ; BSR set to: 0
 35283   00B432  0012               	return		;funcret
 35284   00B434                     __end_of___lmul:
 35285                           	callstack 0
 35286                           
 35287 ;; *************** function ___lldiv *****************
 35288 ;; Defined at:
 35289 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__lldiv.c"
 35290 ;; Parameters:    Size  Location     Type
 35291 ;;  dividend        4   55[BANK0 ] unsigned long 
 35292 ;;  divisor         4   59[BANK0 ] unsigned long 
 35293 ;; Auto vars:     Size  Location     Type
 35294 ;;  quotient        4   63[BANK0 ] unsigned long 
 35295 ;;  counter         1   67[BANK0 ] unsigned char 
 35296 ;; Return value:  Size  Location     Type
 35297 ;;                  4   55[BANK0 ] unsigned long 
 35298 ;; Registers used:
 35299 ;;		wreg, status,2, status,0
 35300 ;; Tracked objects:
 35301 ;;		On entry : 0/0
 35302 ;;		On exit  : 0/0
 35303 ;;		Unchanged: 0/0
 35304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35305 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35306 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35308 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35309 ;;Total ram usage:       13 bytes
 35310 ;; Hardware stack levels used: 1
 35311 ;; Hardware stack levels required when called: 12
 35312 ;; This function calls:
 35313 ;;		Nothing
 35314 ;; This function is called by:
 35315 ;;		_pbDownTimer
 35316 ;;		_pbUpTimer
 35317 ;; This function uses a non-reentrant model
 35318 ;;
 35319                           
 35320                           	psect	text139
 35321   00A6BA                     __ptext139:
 35322                           	callstack 0
 35323   00A6BA                     ___lldiv:
 35324                           	callstack 16
 35325                           
 35326                           ; BSR set to: 0
 35327                           ;incstack = 0
 35328   00A6BA  0E00               	movlw	0
 35329   00A6BC  0100               	movlb	0	; () banked
 35330   00A6BE  6F9F               	movwf	___lldiv@quotient& (0+255),b
 35331   00A6C0  0E00               	movlw	0
 35332   00A6C2  6FA0               	movwf	(___lldiv@quotient+1)& (0+255),b
 35333   00A6C4  0E00               	movlw	0
 35334   00A6C6  6FA1               	movwf	(___lldiv@quotient+2)& (0+255),b
 35335   00A6C8  0E00               	movlw	0
 35336   00A6CA  6FA2               	movwf	(___lldiv@quotient+3)& (0+255),b
 35337                           
 35338                           ; BSR set to: 0
 35339   00A6CC  519B               	movf	___lldiv@divisor& (0+255),w,b
 35340   00A6CE  119C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 35341   00A6D0  119D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 35342   00A6D2  119E               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 35343   00A6D4  B4D8               	btfsc	status,2,c
 35344   00A6D6  D02A               	goto	l3016
 35345                           
 35346                           ; BSR set to: 0
 35347   00A6D8  0E01               	movlw	1
 35348   00A6DA  6FA3               	movwf	___lldiv@counter& (0+255),b
 35349   00A6DC  D006               	goto	l14852
 35350   00A6DE                     l14850:
 35351                           
 35352                           ; BSR set to: 0
 35353   00A6DE  90D8               	bcf	status,0,c
 35354   00A6E0  379B               	rlcf	___lldiv@divisor& (0+255),f,b
 35355   00A6E2  379C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 35356   00A6E4  379D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 35357   00A6E6  379E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 35358   00A6E8  2BA3               	incf	___lldiv@counter& (0+255),f,b
 35359   00A6EA                     l14852:
 35360                           
 35361                           ; BSR set to: 0
 35362   00A6EA  AF9E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 35363   00A6EC  D7F8               	goto	l14850
 35364   00A6EE                     u14520:
 35365                           
 35366                           ; BSR set to: 0
 35367   00A6EE  90D8               	bcf	status,0,c
 35368   00A6F0  379F               	rlcf	___lldiv@quotient& (0+255),f,b
 35369   00A6F2  37A0               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 35370   00A6F4  37A1               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 35371   00A6F6  37A2               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 35372                           
 35373                           ; BSR set to: 0
 35374   00A6F8  519B               	movf	___lldiv@divisor& (0+255),w,b
 35375   00A6FA  5D97               	subwf	___lldiv@dividend& (0+255),w,b
 35376   00A6FC  519C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 35377   00A6FE  5998               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 35378   00A700  519D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 35379   00A702  5999               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 35380   00A704  519E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 35381   00A706  599A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 35382   00A708  A0D8               	btfss	status,0,c
 35383   00A70A  D009               	goto	l14862
 35384                           
 35385                           ; BSR set to: 0
 35386   00A70C  519B               	movf	___lldiv@divisor& (0+255),w,b
 35387   00A70E  5F97               	subwf	___lldiv@dividend& (0+255),f,b
 35388   00A710  519C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 35389   00A712  5B98               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 35390   00A714  519D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 35391   00A716  5B99               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 35392   00A718  519E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 35393   00A71A  5B9A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 35394                           
 35395                           ; BSR set to: 0
 35396   00A71C  819F               	bsf	___lldiv@quotient& (0+255),0,b
 35397   00A71E                     l14862:
 35398                           
 35399                           ; BSR set to: 0
 35400   00A71E  90D8               	bcf	status,0,c
 35401   00A720  339E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 35402   00A722  339D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 35403   00A724  339C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 35404   00A726  339B               	rrcf	___lldiv@divisor& (0+255),f,b
 35405                           
 35406                           ; BSR set to: 0
 35407   00A728  2FA3               	decfsz	___lldiv@counter& (0+255),f,b
 35408   00A72A  D7E1               	goto	u14520
 35409   00A72C                     l3016:
 35410                           
 35411                           ; BSR set to: 0
 35412   00A72C  C09F  F097         	movff	___lldiv@quotient,?___lldiv
 35413   00A730  C0A0  F098         	movff	___lldiv@quotient+1,?___lldiv+1
 35414   00A734  C0A1  F099         	movff	___lldiv@quotient+2,?___lldiv+2
 35415   00A738  C0A2  F09A         	movff	___lldiv@quotient+3,?___lldiv+3
 35416                           
 35417                           ; BSR set to: 0
 35418   00A73C  0012               	return		;funcret
 35419   00A73E                     __end_of___lldiv:
 35420                           	callstack 0
 35421                           
 35422 ;; *************** function _factoryReset *****************
 35423 ;; Defined at:
 35424 ;;		line 856 in file "../../VLCBlib_PIC/vlcb.c"
 35425 ;; Parameters:    Size  Location     Type
 35426 ;;		None
 35427 ;; Auto vars:     Size  Location     Type
 35428 ;;  i               1   56[BANK1 ] unsigned char 
 35429 ;; Return value:  Size  Location     Type
 35430 ;;                  1    wreg      void 
 35431 ;; Registers used:
 35432 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35433 ;; Tracked objects:
 35434 ;;		On entry : 0/0
 35435 ;;		On exit  : 0/0
 35436 ;;		Unchanged: 0/0
 35437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35439 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35440 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35441 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35442 ;;Total ram usage:        5 bytes
 35443 ;; Hardware stack levels used: 1
 35444 ;; Hardware stack levels required when called: 26
 35445 ;; This function calls:
 35446 ;;		NULL
 35447 ;;		_APP_factoryReset
 35448 ;;		_canFactoryReset
 35449 ;;		_mnsFactoryReset
 35450 ;;		_nvFactoryReset
 35451 ;;		_teachFactoryReset
 35452 ;;		_writeNVM
 35453 ;; This function is called by:
 35454 ;;		_mnsProcessMessage
 35455 ;;		_checkPowerOnPb
 35456 ;;		_main
 35457 ;; This function uses a non-reentrant model
 35458 ;;
 35459                           
 35460                           	psect	text140
 35461   008564                     __ptext140:
 35462                           	callstack 0
 35463   008564                     _factoryReset:
 35464                           	callstack 2
 35465                           
 35466                           ;../../VLCBlib_PIC/vlcb.c: 857:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 859:     for (i
      +                          =0; i<9; i++) {
 35467                           
 35468                           ; BSR set to: 0
 35469                           ;incstack = 0
 35470   008564  0E00               	movlw	0
 35471   008566  0101               	movlb	1	; () banked
 35472   008568  6FED               	movwf	factoryReset@i& (0+255),b
 35473   00856A                     l21258:
 35474                           
 35475                           ; BSR set to: 1
 35476                           ;../../VLCBlib_PIC/vlcb.c: 860:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >factoryReset != ((void*)0))) {
 35477   00856A  51ED               	movf	factoryReset@i& (0+255),w,b
 35478   00856C  0D02               	mullw	2
 35479   00856E  0E75               	movlw	low _services
 35480   008570  24F3               	addwf	243,w,c
 35481   008572  6EF6               	movwf	tblptrl,c
 35482   008574  0EEE               	movlw	high _services
 35483   008576  20F4               	addwfc	244,w,c
 35484   008578  6EF7               	movwf	tblptrh,c
 35485   00857A                     	if	1	;There are 3 active tblptr bytes
 35486   00857A  6AF8               	clrf	tblptru,c
 35487   00857C  0E00               	movlw	low (__mediumconst shr (0+16))
 35488   00857E  22F8               	addwfc	tblptru,f,c
 35489   008580                     	endif
 35490   008580  0009               	tblrd		*+
 35491   008582  50F5               	movf	tablat,w,c
 35492   008584  0009               	tblrd		*+
 35493   008586  10F5               	iorwf	tablat,w,c
 35494   008588  B4D8               	btfsc	status,2,c
 35495   00858A  D04B               	goto	u22479
 35496                           
 35497                           ; BSR set to: 1
 35498   00858C  51ED               	movf	factoryReset@i& (0+255),w,b
 35499   00858E  0D02               	mullw	2
 35500   008590  0E75               	movlw	low _services
 35501   008592  24F3               	addwf	243,w,c
 35502   008594  6EF6               	movwf	tblptrl,c
 35503   008596  0EEE               	movlw	high _services
 35504   008598  20F4               	addwfc	244,w,c
 35505   00859A  6EF7               	movwf	tblptrh,c
 35506   00859C                     	if	1	;There are 3 active tblptr bytes
 35507   00859C  6AF8               	clrf	tblptru,c
 35508   00859E  0E00               	movlw	low (__mediumconst shr (0+16))
 35509   0085A0  22F8               	addwfc	tblptru,f,c
 35510   0085A2                     	endif
 35511   0085A2  0009               	tblrd		*+
 35512   0085A4  CFF5 F1E9          	movff	tablat,??_factoryReset
 35513   0085A8  0009               	tblrd		*+
 35514   0085AA  CFF5 F1EA          	movff	tablat,??_factoryReset+1
 35515   0085AE  0E02               	movlw	2
 35516   0085B0  27E9               	addwf	??_factoryReset& (0+255),f,b
 35517   0085B2  0E00               	movlw	0
 35518   0085B4  23EA               	addwfc	(??_factoryReset+1)& (0+255),f,b
 35519   0085B6  C1E9  FFF6         	movff	??_factoryReset,tblptrl
 35520   0085BA  C1EA  FFF7         	movff	??_factoryReset+1,tblptrh
 35521   0085BE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35522   0085BE  6AF8               	clrf	tblptru,c
 35523   0085C0                     	endif
 35524   0085C0                     	if	0	;tblptru may be non-zero
 35525   0085C0                     	endif
 35526   0085C0  0009               	tblrd		*+
 35527   0085C2  50F5               	movf	tablat,w,c
 35528   0085C4  0009               	tblrd		*+
 35529   0085C6  10F5               	iorwf	tablat,w,c
 35530   0085C8  B4D8               	btfsc	status,2,c
 35531   0085CA  D02B               	goto	u22479
 35532                           
 35533                           ; BSR set to: 1
 35534                           ;../../VLCBlib_PIC/vlcb.c: 861:             services[i]->factoryReset();
 35535   0085CC  51ED               	movf	factoryReset@i& (0+255),w,b
 35536   0085CE  0D02               	mullw	2
 35537   0085D0  0E75               	movlw	low _services
 35538   0085D2  24F3               	addwf	243,w,c
 35539   0085D4  6EF6               	movwf	tblptrl,c
 35540   0085D6  0EEE               	movlw	high _services
 35541   0085D8  20F4               	addwfc	244,w,c
 35542   0085DA  6EF7               	movwf	tblptrh,c
 35543   0085DC                     	if	1	;There are 3 active tblptr bytes
 35544   0085DC  6AF8               	clrf	tblptru,c
 35545   0085DE  0E00               	movlw	low (__mediumconst shr (0+16))
 35546   0085E0  22F8               	addwfc	tblptru,f,c
 35547   0085E2                     	endif
 35548   0085E2  0009               	tblrd		*+
 35549   0085E4  CFF5 F1E9          	movff	tablat,??_factoryReset
 35550   0085E8  0009               	tblrd		*+
 35551   0085EA  CFF5 F1EA          	movff	tablat,??_factoryReset+1
 35552   0085EE  0E02               	movlw	2
 35553   0085F0  27E9               	addwf	??_factoryReset& (0+255),f,b
 35554   0085F2  0E00               	movlw	0
 35555   0085F4  23EA               	addwfc	(??_factoryReset+1)& (0+255),f,b
 35556   0085F6  C1E9  FFF6         	movff	??_factoryReset,tblptrl
 35557   0085FA  C1EA  FFF7         	movff	??_factoryReset+1,tblptrh
 35558   0085FE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35559   0085FE  6AF8               	clrf	tblptru,c
 35560   008600                     	endif
 35561   008600                     	if	0	;tblptru may be non-zero
 35562   008600                     	endif
 35563   008600  0009               	tblrd		*+
 35564   008602  CFF5 F1EB          	movff	tablat,??_factoryReset+2
 35565   008606  0009               	tblrd		*+
 35566   008608  CFF5 F1EC          	movff	tablat,??_factoryReset+3
 35567   00860C  D801               	call	u22478
 35568   00860E  D009               	goto	u22479
 35569   008610                     u22478:
 35570   008610  0005               	push	
 35571   008612  6EFA               	movwf	pclath,c
 35572   008614  51EB               	movf	(??_factoryReset+2)& (0+255),w,b
 35573   008616  6EFD               	movwf	tosl,c
 35574   008618  51EC               	movf	(??_factoryReset+3)& (0+255),w,b
 35575   00861A  6EFE               	movwf	tosh,c
 35576   00861C  6AFF               	clrf	tosu,c
 35577   00861E  50FA               	movf	pclath,w,c
 35578   008620  0012               	return		;indir
 35579   008622                     u22479:
 35580                           
 35581                           ;../../VLCBlib_PIC/vlcb.c: 863:     }
 35582   008622  0101               	movlb	1	; () banked
 35583   008624  2BED               	incf	factoryReset@i& (0+255),f,b
 35584                           
 35585                           ; BSR set to: 1
 35586   008626  0E08               	movlw	8
 35587   008628  65ED               	cpfsgt	factoryReset@i& (0+255),b
 35588   00862A  D79F               	goto	l21258
 35589                           
 35590                           ; BSR set to: 1
 35591                           ;../../VLCBlib_PIC/vlcb.c: 865:     writeNVM(FLASH_NVM_TYPE, 0xFF80, 1);
 35592   00862C  0E80               	movlw	128
 35593   00862E  0100               	movlb	0	; () banked
 35594   008630  6FA4               	movwf	writeNVM@index& (0+255),b
 35595   008632  0EFF               	movlw	255
 35596   008634  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 35597   008636  0E00               	movlw	0
 35598   008638  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 35599   00863A  0E01               	movlw	1
 35600   00863C  6FA7               	movwf	writeNVM@value& (0+255),b
 35601   00863E  0E01               	movlw	1
 35602   008640  EC66  F05B         	call	_writeNVM
 35603                           
 35604                           ;../../VLCBlib_PIC/vlcb.c: 867:     APP_factoryReset();
 35605   008644  EC7B  F060         	call	_APP_factoryReset	;wreg free
 35606   008648  0012               	return		;funcret
 35607   00864A                     __end_of_factoryReset:
 35608                           	callstack 0
 35609                           
 35610 ;; *************** function _canFactoryReset *****************
 35611 ;; Defined at:
 35612 ;;		line 193 in file "../../VLCBlib_PIC/can18_ecan.c"
 35613 ;; Parameters:    Size  Location     Type
 35614 ;;		None
 35615 ;; Auto vars:     Size  Location     Type
 35616 ;;		None
 35617 ;; Return value:  Size  Location     Type
 35618 ;;                  1    wreg      void 
 35619 ;; Registers used:
 35620 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35621 ;; Tracked objects:
 35622 ;;		On entry : 0/0
 35623 ;;		On exit  : 0/0
 35624 ;;		Unchanged: 0/0
 35625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35630 ;;Total ram usage:        0 bytes
 35631 ;; Hardware stack levels used: 1
 35632 ;; Hardware stack levels required when called: 18
 35633 ;; This function calls:
 35634 ;;		_writeNVM
 35635 ;; This function is called by:
 35636 ;;		_factoryReset
 35637 ;; This function uses a non-reentrant model
 35638 ;;
 35639                           
 35640                           	psect	text141
 35641   00C202                     __ptext141:
 35642                           	callstack 0
 35643   00C202                     _canFactoryReset:
 35644                           	callstack 9
 35645                           
 35646                           ;../../VLCBlib_PIC/can18_ecan.c: 194:     canId = 0;
 35647                           
 35648                           ;incstack = 0
 35649   00C202  0E00               	movlw	0
 35650   00C204  0100               	movlb	0	; () banked
 35651   00C206  6FB7               	movwf	_canId& (0+255),b
 35652                           
 35653                           ; BSR set to: 0
 35654                           ;../../VLCBlib_PIC/can18_ecan.c: 195:     writeNVM(EEPROM_NVM_TYPE, 0x3FE, canId);
 35655   00C208  0EFE               	movlw	254
 35656   00C20A  6FA4               	movwf	writeNVM@index& (0+255),b
 35657   00C20C  0E03               	movlw	3
 35658   00C20E  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 35659   00C210  0E00               	movlw	0
 35660   00C212  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 35661   00C214  C0B7  F0A7         	movff	_canId,writeNVM@value
 35662   00C218  0E00               	movlw	0
 35663   00C21A  EC66  F05B         	call	_writeNVM
 35664   00C21E  0012               	return		;funcret
 35665   00C220                     __end_of_canFactoryReset:
 35666                           	callstack 0
 35667                           
 35668 ;; *************** function _nvFactoryReset *****************
 35669 ;; Defined at:
 35670 ;;		line 119 in file "../../VLCBlib_PIC/nv.c"
 35671 ;; Parameters:    Size  Location     Type
 35672 ;;		None
 35673 ;; Auto vars:     Size  Location     Type
 35674 ;;  i               1    4[BANK1 ] unsigned char 
 35675 ;; Return value:  Size  Location     Type
 35676 ;;                  1    wreg      void 
 35677 ;; Registers used:
 35678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35679 ;; Tracked objects:
 35680 ;;		On entry : 0/0
 35681 ;;		On exit  : 0/0
 35682 ;;		Unchanged: 0/0
 35683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35685 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35686 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35687 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35688 ;;Total ram usage:        3 bytes
 35689 ;; Hardware stack levels used: 1
 35690 ;; Hardware stack levels required when called: 18
 35691 ;; This function calls:
 35692 ;;		_APP_nvDefault
 35693 ;;		_writeNVM
 35694 ;; This function is called by:
 35695 ;;		_factoryReset
 35696 ;; This function uses a non-reentrant model
 35697 ;;
 35698                           
 35699                           	psect	text142
 35700   00BAA8                     __ptext142:
 35701                           	callstack 0
 35702   00BAA8                     _nvFactoryReset:
 35703                           	callstack 9
 35704                           
 35705                           ;../../VLCBlib_PIC/nv.c: 120:     uint8_t i;;../../VLCBlib_PIC/nv.c: 121:     for (i=1; 
      +                          i<= 127; i++) {
 35706                           
 35707                           ;incstack = 0
 35708   00BAA8  0E01               	movlw	1
 35709   00BAAA  0101               	movlb	1	; () banked
 35710   00BAAC  6FB9               	movwf	nvFactoryReset@i& (0+255),b
 35711   00BAAE                     l20228:
 35712                           
 35713                           ; BSR set to: 1
 35714                           ;../../VLCBlib_PIC/nv.c: 122:         writeNVM(FLASH_NVM_TYPE, 0xFF80 +i, APP_nvDefault(
      +                          i));
 35715   00BAAE  0E80               	movlw	128
 35716   00BAB0  25B9               	addwf	nvFactoryReset@i& (0+255),w,b
 35717   00BAB2  6FB7               	movwf	??_nvFactoryReset& (0+255),b
 35718   00BAB4  6BB8               	clrf	(??_nvFactoryReset+1)& (0+255),b
 35719   00BAB6  0EFF               	movlw	255
 35720   00BAB8  23B8               	addwfc	(??_nvFactoryReset+1)& (0+255),f,b
 35721   00BABA  C1B7  F0A4         	movff	??_nvFactoryReset,writeNVM@index
 35722   00BABE  C1B8  F0A5         	movff	??_nvFactoryReset+1,writeNVM@index+1
 35723   00BAC2  0100               	movlb	0	; () banked
 35724   00BAC4  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 35725   00BAC6  0101               	movlb	1	; () banked
 35726   00BAC8  51B9               	movf	nvFactoryReset@i& (0+255),w,b
 35727   00BACA  EC16  F048         	call	_APP_nvDefault
 35728   00BACE  0100               	movlb	0	; () banked
 35729   00BAD0  6FA7               	movwf	writeNVM@value& (0+255),b
 35730   00BAD2  0E01               	movlw	1
 35731   00BAD4  EC66  F05B         	call	_writeNVM
 35732                           
 35733                           ;../../VLCBlib_PIC/nv.c: 123:     }
 35734   00BAD8  0101               	movlb	1	; () banked
 35735   00BADA  2BB9               	incf	nvFactoryReset@i& (0+255),f,b
 35736                           
 35737                           ; BSR set to: 1
 35738   00BADC  0E7F               	movlw	127
 35739   00BADE  65B9               	cpfsgt	nvFactoryReset@i& (0+255),b
 35740   00BAE0  D7E6               	goto	l20228
 35741   00BAE2  0012               	return	
 35742   00BAE4                     __end_of_nvFactoryReset:
 35743                           	callstack 0
 35744                           
 35745 ;; *************** function _mnsFactoryReset *****************
 35746 ;; Defined at:
 35747 ;;		line 258 in file "../../VLCBlib_PIC/mns.c"
 35748 ;; Parameters:    Size  Location     Type
 35749 ;;		None
 35750 ;; Auto vars:     Size  Location     Type
 35751 ;;		None
 35752 ;; Return value:  Size  Location     Type
 35753 ;;                  1    wreg      void 
 35754 ;; Registers used:
 35755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35756 ;; Tracked objects:
 35757 ;;		On entry : 0/0
 35758 ;;		On exit  : 0/0
 35759 ;;		Unchanged: 0/0
 35760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35765 ;;Total ram usage:        0 bytes
 35766 ;; Hardware stack levels used: 1
 35767 ;; Hardware stack levels required when called: 18
 35768 ;; This function calls:
 35769 ;;		_writeNVM
 35770 ;; This function is called by:
 35771 ;;		_factoryReset
 35772 ;; This function uses a non-reentrant model
 35773 ;;
 35774                           
 35775                           	psect	text143
 35776   00AAA8                     __ptext143:
 35777                           	callstack 0
 35778   00AAA8                     _mnsFactoryReset:
 35779                           	callstack 9
 35780                           
 35781                           ;../../VLCBlib_PIC/mns.c: 259:     nn.bytes.hi = 0;
 35782                           
 35783                           ; BSR set to: 1
 35784                           ;incstack = 0
 35785   00AAA8  0E00               	movlw	0
 35786   00AAAA  0100               	movlb	0	; () banked
 35787   00AAAC  6FB4               	movwf	(_nn+1)& (0+255),b
 35788                           
 35789                           ;../../VLCBlib_PIC/mns.c: 260:     nn.bytes.lo = 0;
 35790   00AAAE  0E00               	movlw	0
 35791   00AAB0  6FB3               	movwf	_nn& (0+255),b
 35792                           
 35793                           ; BSR set to: 0
 35794                           ;../../VLCBlib_PIC/mns.c: 261:     writeNVM(EEPROM_NVM_TYPE, 0x3FC, nn.bytes.hi);
 35795   00AAB2  0EFC               	movlw	252
 35796   00AAB4  6FA4               	movwf	writeNVM@index& (0+255),b
 35797   00AAB6  0E03               	movlw	3
 35798   00AAB8  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 35799   00AABA  0E00               	movlw	0
 35800   00AABC  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 35801   00AABE  C0B4  F0A7         	movff	_nn+1,writeNVM@value
 35802   00AAC2  0E00               	movlw	0
 35803   00AAC4  EC66  F05B         	call	_writeNVM
 35804                           
 35805                           ;../../VLCBlib_PIC/mns.c: 262:     writeNVM(EEPROM_NVM_TYPE, 0x3FC +1, nn.bytes.lo);
 35806   00AAC8  0EFD               	movlw	253
 35807   00AACA  0100               	movlb	0	; () banked
 35808   00AACC  6FA4               	movwf	writeNVM@index& (0+255),b
 35809   00AACE  0E03               	movlw	3
 35810   00AAD0  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 35811   00AAD2  0E00               	movlw	0
 35812   00AAD4  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 35813   00AAD6  C0B3  F0A7         	movff	_nn,writeNVM@value
 35814   00AADA  0E00               	movlw	0
 35815   00AADC  EC66  F05B         	call	_writeNVM
 35816                           
 35817                           ;../../VLCBlib_PIC/mns.c: 264:     last_mode_state = mode_state = MODE_UNINITIALISED;
 35818   00AAE0  0100               	movlb	0	; () banked
 35819   00AAE2  69C1               	setf	_mode_state& (0+255),b
 35820   00AAE4  69C0               	setf	_last_mode_state& (0+255),b
 35821                           
 35822                           ; BSR set to: 0
 35823                           ;../../VLCBlib_PIC/mns.c: 265:     writeNVM(EEPROM_NVM_TYPE, 0x3FB, mode_state);
 35824   00AAE6  0EFB               	movlw	251
 35825   00AAE8  6FA4               	movwf	writeNVM@index& (0+255),b
 35826   00AAEA  0E03               	movlw	3
 35827   00AAEC  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 35828   00AAEE  0E00               	movlw	0
 35829   00AAF0  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 35830   00AAF2  C0C1  F0A7         	movff	_mode_state,writeNVM@value
 35831   00AAF6  0E00               	movlw	0
 35832   00AAF8  EC66  F05B         	call	_writeNVM
 35833                           
 35834                           ;../../VLCBlib_PIC/mns.c: 268:     last_mode_flags = mode_flags = 0;
 35835   00AAFC  0E00               	movlw	0
 35836   00AAFE  0101               	movlb	1	; () banked
 35837   00AB00  6F79               	movwf	_mode_flags& (0+255),b
 35838   00AB02  C179  F0BF         	movff	_mode_flags,_last_mode_flags
 35839                           
 35840                           ;../../VLCBlib_PIC/mns.c: 269:     writeNVM(EEPROM_NVM_TYPE, 0x3FA, mode_flags);
 35841   00AB06  0EFA               	movlw	250
 35842   00AB08  0100               	movlb	0	; () banked
 35843   00AB0A  6FA4               	movwf	writeNVM@index& (0+255),b
 35844   00AB0C  0E03               	movlw	3
 35845   00AB0E  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 35846   00AB10  0E00               	movlw	0
 35847   00AB12  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 35848   00AB14  C179  F0A7         	movff	_mode_flags,writeNVM@value
 35849   00AB18  0E00               	movlw	0
 35850   00AB1A  EC66  F05B         	call	_writeNVM
 35851   00AB1E  0012               	return		;funcret
 35852   00AB20                     __end_of_mnsFactoryReset:
 35853                           	callstack 0
 35854                           
 35855 ;; *************** function _teachFactoryReset *****************
 35856 ;; Defined at:
 35857 ;;		line 282 in file "../../VLCBlib_PIC/event_teach.c"
 35858 ;; Parameters:    Size  Location     Type
 35859 ;;		None
 35860 ;; Auto vars:     Size  Location     Type
 35861 ;;		None
 35862 ;; Return value:  Size  Location     Type
 35863 ;;                  1    wreg      void 
 35864 ;; Registers used:
 35865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35866 ;; Tracked objects:
 35867 ;;		On entry : 0/0
 35868 ;;		On exit  : 0/0
 35869 ;;		Unchanged: 0/0
 35870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35875 ;;Total ram usage:        0 bytes
 35876 ;; Hardware stack levels used: 1
 35877 ;; Hardware stack levels required when called: 19
 35878 ;; This function calls:
 35879 ;;		_clearAllEvents
 35880 ;; This function is called by:
 35881 ;;		_factoryReset
 35882 ;; This function uses a non-reentrant model
 35883 ;;
 35884                           
 35885                           	psect	text144
 35886   00C3B6                     __ptext144:
 35887                           	callstack 0
 35888   00C3B6                     _teachFactoryReset:
 35889                           	callstack 8
 35890                           
 35891                           ;../../VLCBlib_PIC/event_teach.c: 283:     clearAllEvents();
 35892                           
 35893                           ;incstack = 0
 35894   00C3B6  EC71  F05A         	call	_clearAllEvents	;wreg free
 35895   00C3BA  0012               	return		;funcret
 35896   00C3BC                     __end_of_teachFactoryReset:
 35897                           	callstack 0
 35898                           
 35899 ;; *************** function _clearAllEvents *****************
 35900 ;; Defined at:
 35901 ;;		line 475 in file "../../VLCBlib_PIC/event_teach.c"
 35902 ;; Parameters:    Size  Location     Type
 35903 ;;		None
 35904 ;; Auto vars:     Size  Location     Type
 35905 ;;  tableIndex      1   13[BANK1 ] unsigned char 
 35906 ;; Return value:  Size  Location     Type
 35907 ;;                  1    wreg      void 
 35908 ;; Registers used:
 35909 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35910 ;; Tracked objects:
 35911 ;;		On entry : 0/0
 35912 ;;		On exit  : 0/0
 35913 ;;		Unchanged: 0/0
 35914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35916 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35917 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35918 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35919 ;;Total ram usage:        5 bytes
 35920 ;; Hardware stack levels used: 1
 35921 ;; Hardware stack levels required when called: 18
 35922 ;; This function calls:
 35923 ;;		_flushFlashBlock
 35924 ;;		_rebuildHashtable
 35925 ;;		_writeNVM
 35926 ;; This function is called by:
 35927 ;;		_teachFactoryReset
 35928 ;;		_doNnclr
 35929 ;; This function uses a non-reentrant model
 35930 ;;
 35931                           
 35932                           	psect	text145
 35933   00B4E2                     __ptext145:
 35934                           	callstack 0
 35935   00B4E2                     _clearAllEvents:
 35936                           	callstack 9
 35937                           
 35938                           ;../../VLCBlib_PIC/event_teach.c: 476:     uint8_t tableIndex;;../../VLCBlib_PIC/event_t
      +                          each.c: 477:     for (tableIndex=0; tableIndex<255; tableIndex++) {
 35939                           
 35940                           ;incstack = 0
 35941   00B4E2  0E00               	movlw	0
 35942   00B4E4  0101               	movlb	1	; () banked
 35943   00B4E6  6FC2               	movwf	clearAllEvents@tableIndex& (0+255),b
 35944   00B4E8                     l19388:
 35945                           
 35946                           ; BSR set to: 1
 35947                           ;../../VLCBlib_PIC/event_teach.c: 479:         writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tabl
      +                          eIndex + 0, 0xff);
 35948   00B4E8  51C2               	movf	clearAllEvents@tableIndex& (0+255),w,b
 35949   00B4EA  6FBE               	movwf	??_clearAllEvents& (0+255),b
 35950   00B4EC  6BBF               	clrf	(??_clearAllEvents+1)& (0+255),b
 35951   00B4EE  3BBE               	swapf	??_clearAllEvents& (0+255),f,b
 35952   00B4F0  3BBF               	swapf	(??_clearAllEvents+1)& (0+255),f,b
 35953   00B4F2  0EF0               	movlw	240
 35954   00B4F4  17BF               	andwf	(??_clearAllEvents+1)& (0+255),f,b
 35955   00B4F6  51BE               	movf	??_clearAllEvents& (0+255),w,b
 35956   00B4F8  0B0F               	andlw	15
 35957   00B4FA  13BF               	iorwf	(??_clearAllEvents+1)& (0+255),f,b
 35958   00B4FC  0EF0               	movlw	240
 35959   00B4FE  17BE               	andwf	??_clearAllEvents& (0+255),f,b
 35960   00B500  0E80               	movlw	128
 35961   00B502  25BE               	addwf	??_clearAllEvents& (0+255),w,b
 35962   00B504  6FC0               	movwf	(??_clearAllEvents+2)& (0+255),b
 35963   00B506  0EEF               	movlw	239
 35964   00B508  21BF               	addwfc	(??_clearAllEvents+1)& (0+255),w,b
 35965   00B50A  6FC1               	movwf	(??_clearAllEvents+3)& (0+255),b
 35966   00B50C  C1C0  F0A4         	movff	??_clearAllEvents+2,writeNVM@index
 35967   00B510  C1C1  F0A5         	movff	??_clearAllEvents+3,writeNVM@index+1
 35968   00B514  0100               	movlb	0	; () banked
 35969   00B516  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 35970   00B518  0EFF               	movlw	255
 35971   00B51A  6FA7               	movwf	writeNVM@value& (0+255),b
 35972   00B51C  0E01               	movlw	1
 35973   00B51E  EC66  F05B         	call	_writeNVM
 35974                           
 35975                           ;../../VLCBlib_PIC/event_teach.c: 480:     }
 35976   00B522  0101               	movlb	1	; () banked
 35977   00B524  2BC2               	incf	clearAllEvents@tableIndex& (0+255),f,b
 35978                           
 35979                           ; BSR set to: 1
 35980   00B526  29C2               	incf	clearAllEvents@tableIndex& (0+255),w,b
 35981   00B528  A4D8               	btfss	status,2,c
 35982   00B52A  D7DE               	goto	l19388
 35983                           
 35984                           ; BSR set to: 1
 35985                           ;../../VLCBlib_PIC/event_teach.c: 481:     flushFlashBlock();
 35986   00B52C  EC1A  F053         	call	_flushFlashBlock	;wreg free
 35987                           
 35988                           ;../../VLCBlib_PIC/event_teach.c: 483:     rebuildHashtable();
 35989   00B530  EC9E  F03E         	call	_rebuildHashtable	;wreg free
 35990   00B534  0012               	return		;funcret
 35991   00B536                     __end_of_clearAllEvents:
 35992                           	callstack 0
 35993                           
 35994 ;; *************** function _APP_nvDefault *****************
 35995 ;; Defined at:
 35996 ;;		line 75 in file "../universalNv.c"
 35997 ;; Parameters:    Size  Location     Type
 35998 ;;  index           1    wreg     unsigned char 
 35999 ;; Auto vars:     Size  Location     Type
 36000 ;;  index           1   67[BANK0 ] unsigned char 
 36001 ;; Return value:  Size  Location     Type
 36002 ;;                  1    wreg      unsigned char 
 36003 ;; Registers used:
 36004 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36005 ;; Tracked objects:
 36006 ;;		On entry : 0/0
 36007 ;;		On exit  : 0/0
 36008 ;;		Unchanged: 0/0
 36009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36011 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36012 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36013 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36014 ;;Total ram usage:        5 bytes
 36015 ;; Hardware stack levels used: 1
 36016 ;; Hardware stack levels required when called: 13
 36017 ;; This function calls:
 36018 ;;		___awdiv
 36019 ;;		___awmod
 36020 ;;		___wmul
 36021 ;; This function is called by:
 36022 ;;		_nvFactoryReset
 36023 ;; This function uses a non-reentrant model
 36024 ;;
 36025                           
 36026                           	psect	text146
 36027   00902C                     __ptext146:
 36028                           	callstack 0
 36029   00902C                     _APP_nvDefault:
 36030                           	callstack 13
 36031                           
 36032                           ;incstack = 0
 36033                           ;APP_nvDefault@index stored from wreg
 36034   00902C  0100               	movlb	0	; () banked
 36035   00902E  6FA3               	movwf	APP_nvDefault@index& (0+255),b
 36036                           
 36037                           ;../universalNv.c: 76:     if (index < 16) {
 36038   009030  0E10               	movlw	16
 36039   009032  0100               	movlb	0	; () banked
 36040   009034  61A3               	cpfslt	APP_nvDefault@index& (0+255),b
 36041   009036  D025               	goto	l19268
 36042   009038  D00A               	goto	l19266
 36043   00903A                     l19236:
 36044                           
 36045                           ; BSR set to: 0
 36046                           ;../universalNv.c: 80:                 return 0;
 36047   00903A  0E00               	movlw	0
 36048   00903C  0012               	return	
 36049   00903E                     l19244:
 36050                           
 36051                           ; BSR set to: 0
 36052                           ;../universalNv.c: 84:                 return 234;
 36053   00903E  0EEA               	movlw	234
 36054   009040  0012               	return	
 36055   009042                     l19248:
 36056                           
 36057                           ; BSR set to: 0
 36058                           ;../universalNv.c: 86:                 return 0x33;
 36059   009042  0E33               	movlw	51
 36060   009044  0012               	return	
 36061   009046                     l19252:
 36062                           
 36063                           ; BSR set to: 0
 36064                           ;../universalNv.c: 88:                 return 2;
 36065   009046  0E02               	movlw	2
 36066   009048  0012               	return	
 36067   00904A                     l19256:
 36068                           
 36069                           ; BSR set to: 0
 36070                           ;../universalNv.c: 92:                 return 0xFF;
 36071   00904A  0EFF               	movlw	255
 36072   00904C  0012               	return	
 36073   00904E                     l19266:
 36074                           
 36075                           ; BSR set to: 0
 36076   00904E  51A3               	movf	APP_nvDefault@index& (0+255),w,b
 36077                           
 36078                           ; Switch size 1, requested type "simple"
 36079                           ; Number of cases is 8, Range of values is 1 to 8
 36080                           ; switch strategies available:
 36081                           ; Name         Instructions Cycles
 36082                           ; simple_byte           25    13 (average)
 36083                           ;	Chosen strategy is simple_byte
 36084   009050  0A01               	xorlw	1	; case 1
 36085   009052  B4D8               	btfsc	status,2,c
 36086   009054  D7F2               	goto	l19236
 36087   009056  0A03               	xorlw	3	; case 2
 36088   009058  B4D8               	btfsc	status,2,c
 36089   00905A  D7EF               	goto	l19236
 36090   00905C  0A01               	xorlw	1	; case 3
 36091   00905E  B4D8               	btfsc	status,2,c
 36092   009060  D7EE               	goto	l19244
 36093   009062  0A07               	xorlw	7	; case 4
 36094   009064  B4D8               	btfsc	status,2,c
 36095   009066  D7ED               	goto	l19248
 36096   009068  0A01               	xorlw	1	; case 5
 36097   00906A  B4D8               	btfsc	status,2,c
 36098   00906C  D7EC               	goto	l19252
 36099   00906E  0A03               	xorlw	3	; case 6
 36100   009070  B4D8               	btfsc	status,2,c
 36101   009072  D7EB               	goto	l19256
 36102   009074  0A01               	xorlw	1	; case 7
 36103   009076  B4D8               	btfsc	status,2,c
 36104   009078  D7E8               	goto	l19256
 36105   00907A  0A0F               	xorlw	15	; case 8
 36106   00907C  B4D8               	btfsc	status,2,c
 36107   00907E  D7E5               	goto	l19256
 36108   009080  D7DC               	goto	l19236
 36109   009082                     l19268:
 36110                           
 36111                           ; BSR set to: 0
 36112                           ;../universalNv.c: 98:     return channelDefaultNVs[(((uint8_t)((index-16)/7)) < 8) ? 0 
      +                          : 0][(index-16) % 7];
 36113   009082  0EF0               	movlw	240
 36114   009084  25A3               	addwf	APP_nvDefault@index& (0+255),w,b
 36115   009086  6F97               	movwf	___awdiv@dividend& (0+255),b
 36116   009088  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 36117   00908A  0EFF               	movlw	255
 36118   00908C  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 36119   00908E  0E00               	movlw	0
 36120   009090  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 36121   009092  0E07               	movlw	7
 36122   009094  6F99               	movwf	___awdiv@divisor& (0+255),b
 36123   009096  ECD7  F052         	call	___awdiv	;wreg free
 36124   00909A  0E00               	movlw	0
 36125   00909C  0100               	movlb	0	; () banked
 36126   00909E  6F92               	movwf	(___wmul@multiplier+1)& (0+255),b
 36127   0090A0  0E00               	movlw	0
 36128   0090A2  6F91               	movwf	___wmul@multiplier& (0+255),b
 36129   0090A4  0E00               	movlw	0
 36130   0090A6  6F94               	movwf	(___wmul@multiplicand+1)& (0+255),b
 36131   0090A8  0E07               	movlw	7
 36132   0090AA  6F93               	movwf	___wmul@multiplicand& (0+255),b
 36133   0090AC  EC1D  F060         	call	___wmul	;wreg free
 36134   0090B0  0E8C               	movlw	low _channelDefaultNVs
 36135   0090B2  0100               	movlb	0	; () banked
 36136   0090B4  2591               	addwf	?___wmul& (0+255),w,b
 36137   0090B6  6F9F               	movwf	??_APP_nvDefault& (0+255),b
 36138   0090B8  0EEE               	movlw	high _channelDefaultNVs
 36139   0090BA  2192               	addwfc	(?___wmul+1)& (0+255),w,b
 36140   0090BC  6FA0               	movwf	(??_APP_nvDefault+1)& (0+255),b
 36141   0090BE  0EF0               	movlw	240
 36142   0090C0  25A3               	addwf	APP_nvDefault@index& (0+255),w,b
 36143   0090C2  6F8D               	movwf	___awmod@dividend& (0+255),b
 36144   0090C4  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 36145   0090C6  0EFF               	movlw	255
 36146   0090C8  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 36147   0090CA  0E00               	movlw	0
 36148   0090CC  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 36149   0090CE  0E07               	movlw	7
 36150   0090D0  6F8F               	movwf	___awmod@divisor& (0+255),b
 36151   0090D2  EC74  F056         	call	___awmod	;wreg free
 36152   0090D6  0100               	movlb	0	; () banked
 36153   0090D8  518D               	movf	?___awmod& (0+255),w,b
 36154   0090DA  259F               	addwf	??_APP_nvDefault& (0+255),w,b
 36155   0090DC  6FA1               	movwf	(??_APP_nvDefault+2)& (0+255),b
 36156   0090DE  518E               	movf	(?___awmod+1)& (0+255),w,b
 36157   0090E0  21A0               	addwfc	(??_APP_nvDefault+1)& (0+255),w,b
 36158   0090E2  6FA2               	movwf	(??_APP_nvDefault+3)& (0+255),b
 36159   0090E4  C0A1  FFF6         	movff	??_APP_nvDefault+2,tblptrl
 36160   0090E8  C0A2  FFF7         	movff	??_APP_nvDefault+3,tblptrh
 36161   0090EC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 36162   0090EC  6AF8               	clrf	tblptru,c
 36163   0090EE                     	endif
 36164   0090EE                     	if	0	;tblptru may be non-zero
 36165   0090EE                     	endif
 36166   0090EE  0008               	tblrd		*
 36167   0090F0  50F5               	movf	tablat,w,c
 36168                           
 36169                           ; BSR set to: 0
 36170   0090F2  0012               	return		;funcret
 36171   0090F4                     __end_of_APP_nvDefault:
 36172                           	callstack 0
 36173                           
 36174 ;; *************** function ___wmul *****************
 36175 ;; Defined at:
 36176 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
 36177 ;; Parameters:    Size  Location     Type
 36178 ;;  multiplier      2   49[BANK0 ] unsigned int 
 36179 ;;  multiplicand    2   51[BANK0 ] unsigned int 
 36180 ;; Auto vars:     Size  Location     Type
 36181 ;;  product         2   53[BANK0 ] unsigned int 
 36182 ;; Return value:  Size  Location     Type
 36183 ;;                  2   49[BANK0 ] unsigned int 
 36184 ;; Registers used:
 36185 ;;		wreg, status,2, status,0, prodl, prodh
 36186 ;; Tracked objects:
 36187 ;;		On entry : 0/0
 36188 ;;		On exit  : 0/0
 36189 ;;		Unchanged: 0/0
 36190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36191 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36192 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36194 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36195 ;;Total ram usage:        6 bytes
 36196 ;; Hardware stack levels used: 1
 36197 ;; Hardware stack levels required when called: 12
 36198 ;; This function calls:
 36199 ;;		Nothing
 36200 ;; This function is called by:
 36201 ;;		_APP_nvDefault
 36202 ;;		_bounceDown
 36203 ;; This function uses a non-reentrant model
 36204 ;;
 36205                           
 36206                           	psect	text147
 36207   00C03A                     __ptext147:
 36208                           	callstack 0
 36209   00C03A                     ___wmul:
 36210                           	callstack 13
 36211                           
 36212                           ; BSR set to: 0
 36213                           ;incstack = 0
 36214   00C03A  0100               	movlb	0	; () banked
 36215   00C03C  5191               	movf	___wmul@multiplier& (0+255),w,b
 36216   00C03E  0393               	mulwf	___wmul@multiplicand& (0+255),b
 36217   00C040  CFF3 F095          	movff	prodl,___wmul@product
 36218   00C044  CFF4 F096          	movff	prodh,___wmul@product+1
 36219   00C048  5191               	movf	___wmul@multiplier& (0+255),w,b
 36220   00C04A  0394               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 36221   00C04C  50F3               	movf	243,w,c
 36222   00C04E  2796               	addwf	(___wmul@product+1)& (0+255),f,b
 36223   00C050  5192               	movf	(___wmul@multiplier+1)& (0+255),w,b
 36224   00C052  0393               	mulwf	___wmul@multiplicand& (0+255),b
 36225   00C054  50F3               	movf	243,w,c
 36226   00C056  2796               	addwf	(___wmul@product+1)& (0+255),f,b
 36227                           
 36228                           ; BSR set to: 0
 36229   00C058  C095  F091         	movff	___wmul@product,?___wmul
 36230   00C05C  C096  F092         	movff	___wmul@product+1,?___wmul+1
 36231                           
 36232                           ; BSR set to: 0
 36233   00C060  0012               	return		;funcret
 36234   00C062                     __end_of___wmul:
 36235                           	callstack 0
 36236                           
 36237 ;; *************** function ___awmod *****************
 36238 ;; Defined at:
 36239 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
 36240 ;; Parameters:    Size  Location     Type
 36241 ;;  dividend        2   45[BANK0 ] int 
 36242 ;;  divisor         2   47[BANK0 ] int 
 36243 ;; Auto vars:     Size  Location     Type
 36244 ;;  sign            1   50[BANK0 ] unsigned char 
 36245 ;;  counter         1   49[BANK0 ] unsigned char 
 36246 ;; Return value:  Size  Location     Type
 36247 ;;                  2   45[BANK0 ] int 
 36248 ;; Registers used:
 36249 ;;		wreg, status,2, status,0
 36250 ;; Tracked objects:
 36251 ;;		On entry : 0/0
 36252 ;;		On exit  : 0/0
 36253 ;;		Unchanged: 0/0
 36254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36255 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36256 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36258 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36259 ;;Total ram usage:        6 bytes
 36260 ;; Hardware stack levels used: 1
 36261 ;; Hardware stack levels required when called: 12
 36262 ;; This function calls:
 36263 ;;		Nothing
 36264 ;; This function is called by:
 36265 ;;		_consumer2QProcessMessage
 36266 ;;		_processActions
 36267 ;;		_APP_nvDefault
 36268 ;;		_APP_nvValueChanged
 36269 ;;		_APP_nvValidate
 36270 ;; This function uses a non-reentrant model
 36271 ;;
 36272                           
 36273                           	psect	text148
 36274   00ACE8                     __ptext148:
 36275                           	callstack 0
 36276   00ACE8                     ___awmod:
 36277                           	callstack 14
 36278                           
 36279                           ; BSR set to: 0
 36280                           ;incstack = 0
 36281   00ACE8  0E00               	movlw	0
 36282   00ACEA  0100               	movlb	0	; () banked
 36283   00ACEC  6F92               	movwf	___awmod@sign& (0+255),b
 36284                           
 36285                           ; BSR set to: 0
 36286   00ACEE  AF8E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 36287   00ACF0  D006               	goto	l19138
 36288                           
 36289                           ; BSR set to: 0
 36290   00ACF2  6D8D               	negf	___awmod@dividend& (0+255),b
 36291   00ACF4  1F8E               	comf	(___awmod@dividend+1)& (0+255),f,b
 36292   00ACF6  B0D8               	btfsc	status,0,c
 36293   00ACF8  2B8E               	incf	(___awmod@dividend+1)& (0+255),f,b
 36294                           
 36295                           ; BSR set to: 0
 36296   00ACFA  0E01               	movlw	1
 36297   00ACFC  6F92               	movwf	___awmod@sign& (0+255),b
 36298   00ACFE                     l19138:
 36299                           
 36300                           ; BSR set to: 0
 36301   00ACFE  AF90               	btfss	(___awmod@divisor+1)& (0+255),7,b
 36302   00AD00  D004               	goto	l19142
 36303                           
 36304                           ; BSR set to: 0
 36305   00AD02  6D8F               	negf	___awmod@divisor& (0+255),b
 36306   00AD04  1F90               	comf	(___awmod@divisor+1)& (0+255),f,b
 36307   00AD06  B0D8               	btfsc	status,0,c
 36308   00AD08  2B90               	incf	(___awmod@divisor+1)& (0+255),f,b
 36309   00AD0A                     l19142:
 36310                           
 36311                           ; BSR set to: 0
 36312   00AD0A  518F               	movf	___awmod@divisor& (0+255),w,b
 36313   00AD0C  1190               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 36314   00AD0E  B4D8               	btfsc	status,2,c
 36315   00AD10  D018               	goto	l19158
 36316                           
 36317                           ; BSR set to: 0
 36318   00AD12  0E01               	movlw	1
 36319   00AD14  6F91               	movwf	___awmod@counter& (0+255),b
 36320   00AD16  D004               	goto	l19148
 36321   00AD18                     l19146:
 36322                           
 36323                           ; BSR set to: 0
 36324   00AD18  90D8               	bcf	status,0,c
 36325   00AD1A  378F               	rlcf	___awmod@divisor& (0+255),f,b
 36326   00AD1C  3790               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 36327   00AD1E  2B91               	incf	___awmod@counter& (0+255),f,b
 36328   00AD20                     l19148:
 36329                           
 36330                           ; BSR set to: 0
 36331   00AD20  AF90               	btfss	(___awmod@divisor+1)& (0+255),7,b
 36332   00AD22  D7FA               	goto	l19146
 36333   00AD24                     u19300:
 36334                           
 36335                           ; BSR set to: 0
 36336   00AD24  518F               	movf	___awmod@divisor& (0+255),w,b
 36337   00AD26  5D8D               	subwf	___awmod@dividend& (0+255),w,b
 36338   00AD28  5190               	movf	(___awmod@divisor+1)& (0+255),w,b
 36339   00AD2A  598E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 36340   00AD2C  A0D8               	btfss	status,0,c
 36341   00AD2E  D004               	goto	l19154
 36342                           
 36343                           ; BSR set to: 0
 36344   00AD30  518F               	movf	___awmod@divisor& (0+255),w,b
 36345   00AD32  5F8D               	subwf	___awmod@dividend& (0+255),f,b
 36346   00AD34  5190               	movf	(___awmod@divisor+1)& (0+255),w,b
 36347   00AD36  5B8E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 36348   00AD38                     l19154:
 36349                           
 36350                           ; BSR set to: 0
 36351   00AD38  90D8               	bcf	status,0,c
 36352   00AD3A  3390               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 36353   00AD3C  338F               	rrcf	___awmod@divisor& (0+255),f,b
 36354                           
 36355                           ; BSR set to: 0
 36356   00AD3E  2F91               	decfsz	___awmod@counter& (0+255),f,b
 36357   00AD40  D7F1               	goto	u19300
 36358   00AD42                     l19158:
 36359                           
 36360                           ; BSR set to: 0
 36361   00AD42  5192               	movf	___awmod@sign& (0+255),w,b
 36362   00AD44  B4D8               	btfsc	status,2,c
 36363   00AD46  D004               	goto	l19162
 36364                           
 36365                           ; BSR set to: 0
 36366   00AD48  6D8D               	negf	___awmod@dividend& (0+255),b
 36367   00AD4A  1F8E               	comf	(___awmod@dividend+1)& (0+255),f,b
 36368   00AD4C  B0D8               	btfsc	status,0,c
 36369   00AD4E  2B8E               	incf	(___awmod@dividend+1)& (0+255),f,b
 36370   00AD50                     l19162:
 36371                           
 36372                           ; BSR set to: 0
 36373   00AD50  C08D  F08D         	movff	___awmod@dividend,?___awmod
 36374   00AD54  C08E  F08E         	movff	___awmod@dividend+1,?___awmod+1
 36375                           
 36376                           ; BSR set to: 0
 36377   00AD58  0012               	return		;funcret
 36378   00AD5A                     __end_of___awmod:
 36379                           	callstack 0
 36380                           
 36381 ;; *************** function ___awdiv *****************
 36382 ;; Defined at:
 36383 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
 36384 ;; Parameters:    Size  Location     Type
 36385 ;;  dividend        2   55[BANK0 ] int 
 36386 ;;  divisor         2   57[BANK0 ] int 
 36387 ;; Auto vars:     Size  Location     Type
 36388 ;;  quotient        2   61[BANK0 ] int 
 36389 ;;  sign            1   60[BANK0 ] unsigned char 
 36390 ;;  counter         1   59[BANK0 ] unsigned char 
 36391 ;; Return value:  Size  Location     Type
 36392 ;;                  2   55[BANK0 ] int 
 36393 ;; Registers used:
 36394 ;;		wreg, status,2, status,0
 36395 ;; Tracked objects:
 36396 ;;		On entry : 0/0
 36397 ;;		On exit  : 0/0
 36398 ;;		Unchanged: 0/0
 36399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36400 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36401 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36403 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36404 ;;Total ram usage:        8 bytes
 36405 ;; Hardware stack levels used: 1
 36406 ;; Hardware stack levels required when called: 12
 36407 ;; This function calls:
 36408 ;;		Nothing
 36409 ;; This function is called by:
 36410 ;;		_consumer2QProcessMessage
 36411 ;;		_processActions
 36412 ;;		_doSOD
 36413 ;;		_APP_nvDefault
 36414 ;;		_APP_nvValueChanged
 36415 ;;		_pollServos
 36416 ;;		_bounceDown
 36417 ;;		_bounceUp
 36418 ;;		_leds_poll
 36419 ;; This function uses a non-reentrant model
 36420 ;;
 36421                           
 36422                           	psect	text149
 36423   00A5AE                     __ptext149:
 36424                           	callstack 0
 36425   00A5AE                     ___awdiv:
 36426                           	callstack 14
 36427                           
 36428                           ; BSR set to: 0
 36429                           ;incstack = 0
 36430   00A5AE  0E00               	movlw	0
 36431   00A5B0  0100               	movlb	0	; () banked
 36432   00A5B2  6F9C               	movwf	___awdiv@sign& (0+255),b
 36433                           
 36434                           ; BSR set to: 0
 36435   00A5B4  AF9A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 36436   00A5B6  D006               	goto	l19094
 36437                           
 36438                           ; BSR set to: 0
 36439   00A5B8  6D99               	negf	___awdiv@divisor& (0+255),b
 36440   00A5BA  1F9A               	comf	(___awdiv@divisor+1)& (0+255),f,b
 36441   00A5BC  B0D8               	btfsc	status,0,c
 36442   00A5BE  2B9A               	incf	(___awdiv@divisor+1)& (0+255),f,b
 36443                           
 36444                           ; BSR set to: 0
 36445   00A5C0  0E01               	movlw	1
 36446   00A5C2  6F9C               	movwf	___awdiv@sign& (0+255),b
 36447   00A5C4                     l19094:
 36448                           
 36449                           ; BSR set to: 0
 36450   00A5C4  AF98               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 36451   00A5C6  D006               	goto	l19100
 36452                           
 36453                           ; BSR set to: 0
 36454   00A5C8  6D97               	negf	___awdiv@dividend& (0+255),b
 36455   00A5CA  1F98               	comf	(___awdiv@dividend+1)& (0+255),f,b
 36456   00A5CC  B0D8               	btfsc	status,0,c
 36457   00A5CE  2B98               	incf	(___awdiv@dividend+1)& (0+255),f,b
 36458                           
 36459                           ; BSR set to: 0
 36460   00A5D0  0E01               	movlw	1
 36461   00A5D2  1B9C               	xorwf	___awdiv@sign& (0+255),f,b
 36462   00A5D4                     l19100:
 36463                           
 36464                           ; BSR set to: 0
 36465   00A5D4  0E00               	movlw	0
 36466   00A5D6  6F9E               	movwf	(___awdiv@quotient+1)& (0+255),b
 36467   00A5D8  0E00               	movlw	0
 36468   00A5DA  6F9D               	movwf	___awdiv@quotient& (0+255),b
 36469                           
 36470                           ; BSR set to: 0
 36471   00A5DC  5199               	movf	___awdiv@divisor& (0+255),w,b
 36472   00A5DE  119A               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 36473   00A5E0  B4D8               	btfsc	status,2,c
 36474   00A5E2  D01C               	goto	l19122
 36475                           
 36476                           ; BSR set to: 0
 36477   00A5E4  0E01               	movlw	1
 36478   00A5E6  6F9B               	movwf	___awdiv@counter& (0+255),b
 36479   00A5E8  D004               	goto	l19108
 36480   00A5EA                     l19106:
 36481                           
 36482                           ; BSR set to: 0
 36483   00A5EA  90D8               	bcf	status,0,c
 36484   00A5EC  3799               	rlcf	___awdiv@divisor& (0+255),f,b
 36485   00A5EE  379A               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 36486   00A5F0  2B9B               	incf	___awdiv@counter& (0+255),f,b
 36487   00A5F2                     l19108:
 36488                           
 36489                           ; BSR set to: 0
 36490   00A5F2  AF9A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 36491   00A5F4  D7FA               	goto	l19106
 36492   00A5F6                     u19240:
 36493                           
 36494                           ; BSR set to: 0
 36495   00A5F6  90D8               	bcf	status,0,c
 36496   00A5F8  379D               	rlcf	___awdiv@quotient& (0+255),f,b
 36497   00A5FA  379E               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 36498                           
 36499                           ; BSR set to: 0
 36500   00A5FC  5199               	movf	___awdiv@divisor& (0+255),w,b
 36501   00A5FE  5D97               	subwf	___awdiv@dividend& (0+255),w,b
 36502   00A600  519A               	movf	(___awdiv@divisor+1)& (0+255),w,b
 36503   00A602  5998               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 36504   00A604  A0D8               	btfss	status,0,c
 36505   00A606  D005               	goto	l19118
 36506                           
 36507                           ; BSR set to: 0
 36508   00A608  5199               	movf	___awdiv@divisor& (0+255),w,b
 36509   00A60A  5F97               	subwf	___awdiv@dividend& (0+255),f,b
 36510   00A60C  519A               	movf	(___awdiv@divisor+1)& (0+255),w,b
 36511   00A60E  5B98               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 36512                           
 36513                           ; BSR set to: 0
 36514   00A610  819D               	bsf	___awdiv@quotient& (0+255),0,b
 36515   00A612                     l19118:
 36516                           
 36517                           ; BSR set to: 0
 36518   00A612  90D8               	bcf	status,0,c
 36519   00A614  339A               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 36520   00A616  3399               	rrcf	___awdiv@divisor& (0+255),f,b
 36521                           
 36522                           ; BSR set to: 0
 36523   00A618  2F9B               	decfsz	___awdiv@counter& (0+255),f,b
 36524   00A61A  D7ED               	goto	u19240
 36525   00A61C                     l19122:
 36526                           
 36527                           ; BSR set to: 0
 36528   00A61C  519C               	movf	___awdiv@sign& (0+255),w,b
 36529   00A61E  B4D8               	btfsc	status,2,c
 36530   00A620  D004               	goto	l19126
 36531                           
 36532                           ; BSR set to: 0
 36533   00A622  6D9D               	negf	___awdiv@quotient& (0+255),b
 36534   00A624  1F9E               	comf	(___awdiv@quotient+1)& (0+255),f,b
 36535   00A626  B0D8               	btfsc	status,0,c
 36536   00A628  2B9E               	incf	(___awdiv@quotient+1)& (0+255),f,b
 36537   00A62A                     l19126:
 36538                           
 36539                           ; BSR set to: 0
 36540   00A62A  C09D  F097         	movff	___awdiv@quotient,?___awdiv
 36541   00A62E  C09E  F098         	movff	___awdiv@quotient+1,?___awdiv+1
 36542                           
 36543                           ; BSR set to: 0
 36544   00A632  0012               	return		;funcret
 36545   00A634                     __end_of___awdiv:
 36546                           	callstack 0
 36547                           
 36548 ;; *************** function _APP_factoryReset *****************
 36549 ;; Defined at:
 36550 ;;		line 206 in file "../main.c"
 36551 ;; Parameters:    Size  Location     Type
 36552 ;;		None
 36553 ;; Auto vars:     Size  Location     Type
 36554 ;;  io              1   51[BANK1 ] unsigned char 
 36555 ;; Return value:  Size  Location     Type
 36556 ;;                  1    wreg      void 
 36557 ;; Registers used:
 36558 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36559 ;; Tracked objects:
 36560 ;;		On entry : 0/0
 36561 ;;		On exit  : 0/0
 36562 ;;		Unchanged: 0/0
 36563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36565 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36567 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36568 ;;Total ram usage:        1 bytes
 36569 ;; Hardware stack levels used: 1
 36570 ;; Hardware stack levels required when called: 25
 36571 ;; This function calls:
 36572 ;;		_factoryResetGlobalEvents
 36573 ;;		_flushFlashBlock
 36574 ;;		_setType
 36575 ;; This function is called by:
 36576 ;;		_factoryReset
 36577 ;; This function uses a non-reentrant model
 36578 ;;
 36579                           
 36580                           	psect	text150
 36581   00C0F6                     __ptext150:
 36582                           	callstack 0
 36583   00C0F6                     _APP_factoryReset:
 36584                           	callstack 2
 36585                           
 36586                           ;../main.c: 207:     uint8_t io;;../main.c: 209:     factoryResetGlobalEvents();
 36587                           
 36588                           ; BSR set to: 0
 36589                           ;incstack = 0
 36590   00C0F6  ECE4  F061         	call	_factoryResetGlobalEvents	;wreg free
 36591                           
 36592                           ;../main.c: 211:     for (io=0; io<16; io++) {
 36593   00C0FA  0E00               	movlw	0
 36594   00C0FC  0101               	movlb	1	; () banked
 36595   00C0FE  6FE8               	movwf	APP_factoryReset@io& (0+255),b
 36596   00C100                     l19516:
 36597                           
 36598                           ; BSR set to: 1
 36599                           
 36600                           ; BSR set to: 1
 36601                           
 36602                           ; BSR set to: 1
 36603   00C100  0E00               	movlw	0
 36604   00C102  6FE5               	movwf	setType@type& (0+255),b
 36605   00C104  51E8               	movf	APP_factoryReset@io& (0+255),w,b
 36606   00C106  EC19  F058         	call	_setType
 36607                           
 36608                           ;../main.c: 213:     }
 36609   00C10A  0101               	movlb	1	; () banked
 36610   00C10C  2BE8               	incf	APP_factoryReset@io& (0+255),f,b
 36611                           
 36612                           ; BSR set to: 1
 36613   00C10E  0E0F               	movlw	15
 36614   00C110  65E8               	cpfsgt	APP_factoryReset@io& (0+255),b
 36615   00C112  D7F6               	goto	l19516
 36616                           
 36617                           ; BSR set to: 1
 36618                           ;../main.c: 214:     flushFlashBlock();
 36619   00C114  EC1A  F053         	call	_flushFlashBlock	;wreg free
 36620   00C118  0012               	return		;funcret
 36621   00C11A                     __end_of_APP_factoryReset:
 36622                           	callstack 0
 36623                           
 36624 ;; *************** function _setType *****************
 36625 ;; Defined at:
 36626 ;;		line 416 in file "../main.c"
 36627 ;; Parameters:    Size  Location     Type
 36628 ;;  io              1    wreg     unsigned char 
 36629 ;;  type            1   48[BANK1 ] unsigned char 
 36630 ;; Auto vars:     Size  Location     Type
 36631 ;;  io              1   50[BANK1 ] unsigned char 
 36632 ;;  index           1   49[BANK1 ] unsigned char 
 36633 ;; Return value:  Size  Location     Type
 36634 ;;                  1    wreg      void 
 36635 ;; Registers used:
 36636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36637 ;; Tracked objects:
 36638 ;;		On entry : 0/0
 36639 ;;		On exit  : 0/0
 36640 ;;		Unchanged: 0/0
 36641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36642 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36643 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36645 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36646 ;;Total ram usage:        3 bytes
 36647 ;; Hardware stack levels used: 1
 36648 ;; Hardware stack levels required when called: 24
 36649 ;; This function calls:
 36650 ;;		_configIO
 36651 ;;		_defaultEvents
 36652 ;;		_defaultNVs
 36653 ;;		_saveNV
 36654 ;; This function is called by:
 36655 ;;		_APP_factoryReset
 36656 ;;		_APP_nvValueChanged
 36657 ;; This function uses a non-reentrant model
 36658 ;;
 36659                           
 36660                           	psect	text151
 36661   00B032                     __ptext151:
 36662                           	callstack 0
 36663   00B032                     _setType:
 36664                           	callstack 2
 36665                           
 36666                           ;incstack = 0
 36667                           ;setType@io stored from wreg
 36668   00B032  0101               	movlb	1	; () banked
 36669   00B034  6FE7               	movwf	setType@io& (0+255),b
 36670                           
 36671                           ;../main.c: 417:     uint8_t index;;../main.c: 419:     index = (16 + 7*(io) + 0);
 36672   00B036  0101               	movlb	1	; () banked
 36673   00B038  51E7               	movf	setType@io& (0+255),w,b
 36674   00B03A  0D07               	mullw	7
 36675   00B03C  50F3               	movf	243,w,c
 36676   00B03E  0F10               	addlw	16
 36677   00B040  6FE6               	movwf	setType@index& (0+255),b
 36678                           
 36679                           ; BSR set to: 1
 36680                           ;../main.c: 420:     saveNV((uint8_t)index, type);
 36681   00B042  C1E5  F1B7         	movff	setType@type,saveNV@value
 36682   00B046  51E6               	movf	setType@index& (0+255),w,b
 36683   00B048  EC72  F05D         	call	_saveNV
 36684                           
 36685                           ;../main.c: 423:     defaultNVs(io, type);
 36686   00B04C  C1E5  F1BB         	movff	setType@type,defaultNVs@type
 36687   00B050  0101               	movlb	1	; () banked
 36688   00B052  51E7               	movf	setType@io& (0+255),w,b
 36689   00B054  EC17  F05B         	call	_defaultNVs
 36690                           
 36691                           ;../main.c: 426:     configIO(io);
 36692   00B058  0101               	movlb	1	; () banked
 36693   00B05A  51E7               	movf	setType@io& (0+255),w,b
 36694   00B05C  ECC0  F026         	call	_configIO
 36695                           
 36696                           ;../main.c: 428:     if ((type == 2) || (type== 3) || (type == 4)) {
 36697   00B060  0E02               	movlw	2
 36698   00B062  0101               	movlb	1	; () banked
 36699   00B064  19E5               	xorwf	setType@type& (0+255),w,b
 36700   00B066  B4D8               	btfsc	status,2,c
 36701   00B068  D008               	goto	u19350
 36702                           
 36703                           ; BSR set to: 1
 36704   00B06A  0E03               	movlw	3
 36705   00B06C  19E5               	xorwf	setType@type& (0+255),w,b
 36706   00B06E  B4D8               	btfsc	status,2,c
 36707   00B070  D004               	goto	u19350
 36708                           
 36709                           ; BSR set to: 1
 36710   00B072  0E04               	movlw	4
 36711   00B074  19E5               	xorwf	setType@type& (0+255),w,b
 36712   00B076  A4D8               	btfss	status,2,c
 36713   00B078  D008               	goto	l19182
 36714   00B07A                     u19350:
 36715                           
 36716                           ; BSR set to: 1
 36717                           ;../main.c: 429:         currentPos[io] = 128;
 36718   00B07A  0E40               	movlw	low _currentPos
 36719   00B07C  25E7               	addwf	setType@io& (0+255),w,b
 36720   00B07E  6ED9               	movwf	fsr2l,c
 36721   00B080  6ADA               	clrf	fsr2h,c
 36722   00B082  0E01               	movlw	high _currentPos
 36723   00B084  22DA               	addwfc	fsr2h,f,c
 36724   00B086  0E80               	movlw	128
 36725   00B088  6EDF               	movwf	indf2,c
 36726   00B08A                     l19182:
 36727                           
 36728                           ; BSR set to: 1
 36729                           ;../main.c: 433:     defaultEvents(io, type);
 36730   00B08A  C1E5  F1E1         	movff	setType@type,defaultEvents@type
 36731   00B08E  51E7               	movf	setType@io& (0+255),w,b
 36732   00B090  EC0B  F03A         	call	_defaultEvents
 36733   00B094  0012               	return		;funcret
 36734   00B096                     __end_of_setType:
 36735                           	callstack 0
 36736                           
 36737 ;; *************** function _defaultNVs *****************
 36738 ;; Defined at:
 36739 ;;		line 337 in file "../universalNv.c"
 36740 ;; Parameters:    Size  Location     Type
 36741 ;;  io              1    wreg     unsigned char 
 36742 ;;  type            1    6[BANK1 ] unsigned char 
 36743 ;; Auto vars:     Size  Location     Type
 36744 ;;  io              1    9[BANK1 ] unsigned char 
 36745 ;;  i               1   10[BANK1 ] unsigned char 
 36746 ;; Return value:  Size  Location     Type
 36747 ;;                  1    wreg      void 
 36748 ;; Registers used:
 36749 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36750 ;; Tracked objects:
 36751 ;;		On entry : 0/0
 36752 ;;		On exit  : 0/0
 36753 ;;		Unchanged: 0/0
 36754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36755 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36756 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36757 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36758 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36759 ;;Total ram usage:        5 bytes
 36760 ;; Hardware stack levels used: 1
 36761 ;; Hardware stack levels required when called: 19
 36762 ;; This function calls:
 36763 ;;		_loadNvCache
 36764 ;;		_saveNV
 36765 ;; This function is called by:
 36766 ;;		_setType
 36767 ;; This function uses a non-reentrant model
 36768 ;;
 36769                           
 36770                           	psect	text152
 36771   00B62E                     __ptext152:
 36772                           	callstack 0
 36773   00B62E                     _defaultNVs:
 36774                           	callstack 6
 36775                           
 36776                           ;incstack = 0
 36777                           ;defaultNVs@io stored from wreg
 36778   00B62E  0101               	movlb	1	; () banked
 36779   00B630  6FBE               	movwf	defaultNVs@io& (0+255),b
 36780                           
 36781                           ;../universalNv.c: 338:     uint8_t i;;../universalNv.c: 340:     for (i=1; i<7; i++) {
 36782   00B632  0E01               	movlw	1
 36783   00B634  0101               	movlb	1	; () banked
 36784   00B636  6FBF               	movwf	defaultNVs@i& (0+255),b
 36785   00B638                     l19058:
 36786                           
 36787                           ; BSR set to: 1
 36788                           ;../universalNv.c: 341:         saveNV((16 + 7*(io) + 0)+i , channelDefaultNVs[type][i])
      +                          ;
 36789   00B638  51BB               	movf	defaultNVs@type& (0+255),w,b
 36790   00B63A  0D07               	mullw	7
 36791   00B63C  0E8C               	movlw	low _channelDefaultNVs
 36792   00B63E  24F3               	addwf	243,w,c
 36793   00B640  6FBC               	movwf	??_defaultNVs& (0+255),b
 36794   00B642  0EEE               	movlw	high _channelDefaultNVs
 36795   00B644  20F4               	addwfc	prodh,w,c
 36796   00B646  6FBD               	movwf	(??_defaultNVs+1)& (0+255),b
 36797   00B648  51BF               	movf	defaultNVs@i& (0+255),w,b
 36798   00B64A  27BC               	addwf	??_defaultNVs& (0+255),f,b
 36799   00B64C  0E00               	movlw	0
 36800   00B64E  23BD               	addwfc	(??_defaultNVs+1)& (0+255),f,b
 36801   00B650  C1BC  FFF6         	movff	??_defaultNVs,tblptrl
 36802   00B654  C1BD  FFF7         	movff	??_defaultNVs+1,tblptrh
 36803   00B658                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 36804   00B658  6AF8               	clrf	tblptru,c
 36805   00B65A                     	endif
 36806   00B65A                     	if	0	;tblptru may be non-zero
 36807   00B65A                     	endif
 36808   00B65A  0008               	tblrd		*
 36809   00B65C  CFF5 F1B7          	movff	tablat,saveNV@value
 36810   00B660  51BE               	movf	defaultNVs@io& (0+255),w,b
 36811   00B662  0D07               	mullw	7
 36812   00B664  50F3               	movf	243,w,c
 36813   00B666  25BF               	addwf	defaultNVs@i& (0+255),w,b
 36814   00B668  0F10               	addlw	16
 36815   00B66A  EC72  F05D         	call	_saveNV
 36816                           
 36817                           ;../universalNv.c: 342:     }
 36818   00B66E  0101               	movlb	1	; () banked
 36819   00B670  2BBF               	incf	defaultNVs@i& (0+255),f,b
 36820                           
 36821                           ; BSR set to: 1
 36822   00B672  0E06               	movlw	6
 36823   00B674  65BF               	cpfsgt	defaultNVs@i& (0+255),b
 36824   00B676  D7E0               	goto	l19058
 36825                           
 36826                           ; BSR set to: 1
 36827                           ;../universalNv.c: 343:     loadNvCache();
 36828   00B678  EC22  F05C         	call	_loadNvCache	;wreg free
 36829   00B67C  0012               	return		;funcret
 36830   00B67E                     __end_of_defaultNVs:
 36831                           	callstack 0
 36832                           
 36833 ;; *************** function _saveNV *****************
 36834 ;; Defined at:
 36835 ;;		line 188 in file "../../VLCBlib_PIC/nv.c"
 36836 ;; Parameters:    Size  Location     Type
 36837 ;;  index           1    wreg     unsigned char 
 36838 ;;  value           1    2[BANK1 ] unsigned char 
 36839 ;; Auto vars:     Size  Location     Type
 36840 ;;  index           1    5[BANK1 ] unsigned char 
 36841 ;; Return value:  Size  Location     Type
 36842 ;;                  1    wreg      void 
 36843 ;; Registers used:
 36844 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36845 ;; Tracked objects:
 36846 ;;		On entry : 0/0
 36847 ;;		On exit  : 0/0
 36848 ;;		Unchanged: 0/0
 36849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36850 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36851 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36852 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36853 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36854 ;;Total ram usage:        4 bytes
 36855 ;; Hardware stack levels used: 1
 36856 ;; Hardware stack levels required when called: 18
 36857 ;; This function calls:
 36858 ;;		_writeNVM
 36859 ;; This function is called by:
 36860 ;;		_setType
 36861 ;;		_defaultNVs
 36862 ;; This function uses a non-reentrant model
 36863 ;;
 36864                           
 36865                           	psect	text153
 36866   00BAE4                     __ptext153:
 36867                           	callstack 0
 36868   00BAE4                     _saveNV:
 36869                           	callstack 7
 36870                           
 36871                           ;incstack = 0
 36872                           ;saveNV@index stored from wreg
 36873   00BAE4  0101               	movlb	1	; () banked
 36874   00BAE6  6FBA               	movwf	saveNV@index& (0+255),b
 36875                           
 36876                           ;../../VLCBlib_PIC/nv.c: 190:     nvCache[index] = value;
 36877   00BAE8  0E00               	movlw	low _nvCache
 36878   00BAEA  0101               	movlb	1	; () banked
 36879   00BAEC  25BA               	addwf	saveNV@index& (0+255),w,b
 36880   00BAEE  6ED9               	movwf	fsr2l,c
 36881   00BAF0  6ADA               	clrf	fsr2h,c
 36882   00BAF2  0E04               	movlw	high _nvCache
 36883   00BAF4  22DA               	addwfc	fsr2h,f,c
 36884   00BAF6  C1B7  FFDF         	movff	saveNV@value,indf2
 36885                           
 36886                           ; BSR set to: 1
 36887                           ;../../VLCBlib_PIC/nv.c: 192:     writeNVM(FLASH_NVM_TYPE, 0xFF80 +index, value);
 36888   00BAFA  0E80               	movlw	128
 36889   00BAFC  25BA               	addwf	saveNV@index& (0+255),w,b
 36890   00BAFE  6FB8               	movwf	??_saveNV& (0+255),b
 36891   00BB00  6BB9               	clrf	(??_saveNV+1)& (0+255),b
 36892   00BB02  0EFF               	movlw	255
 36893   00BB04  23B9               	addwfc	(??_saveNV+1)& (0+255),f,b
 36894   00BB06  C1B8  F0A4         	movff	??_saveNV,writeNVM@index
 36895   00BB0A  C1B9  F0A5         	movff	??_saveNV+1,writeNVM@index+1
 36896   00BB0E  0100               	movlb	0	; () banked
 36897   00BB10  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 36898   00BB12  C1B7  F0A7         	movff	saveNV@value,writeNVM@value
 36899   00BB16  0E01               	movlw	1
 36900   00BB18  EC66  F05B         	call	_writeNVM
 36901   00BB1C  0012               	return		;funcret
 36902   00BB1E                     __end_of_saveNV:
 36903                           	callstack 0
 36904                           
 36905 ;; *************** function _loadNvCache *****************
 36906 ;; Defined at:
 36907 ;;		line 151 in file "../../VLCBlib_PIC/nv.c"
 36908 ;; Parameters:    Size  Location     Type
 36909 ;;		None
 36910 ;; Auto vars:     Size  Location     Type
 36911 ;;  temp            2   57[BANK0 ] short 
 36912 ;;  i               1   59[BANK0 ] unsigned char 
 36913 ;; Return value:  Size  Location     Type
 36914 ;;                  1    wreg      void 
 36915 ;; Registers used:
 36916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36917 ;; Tracked objects:
 36918 ;;		On entry : 0/0
 36919 ;;		On exit  : 0/0
 36920 ;;		Unchanged: 0/0
 36921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36923 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36924 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36925 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36926 ;;Total ram usage:        5 bytes
 36927 ;; Hardware stack levels used: 1
 36928 ;; Hardware stack levels required when called: 14
 36929 ;; This function calls:
 36930 ;;		_readNVM
 36931 ;; This function is called by:
 36932 ;;		_defaultNVs
 36933 ;;		_nvPowerUp
 36934 ;; This function uses a non-reentrant model
 36935 ;;
 36936                           
 36937                           	psect	text154
 36938   00B844                     __ptext154:
 36939                           	callstack 0
 36940   00B844                     _loadNvCache:
 36941                           	callstack 14
 36942                           
 36943                           ;../../VLCBlib_PIC/nv.c: 152:     uint8_t i;;../../VLCBlib_PIC/nv.c: 153:     int16_t te
      +                          mp;;../../VLCBlib_PIC/nv.c: 155:     for (i=1; i<= 127; i++) {
 36944                           
 36945                           ;incstack = 0
 36946   00B844  0E01               	movlw	1
 36947   00B846  0100               	movlb	0	; () banked
 36948   00B848  6F9B               	movwf	loadNvCache@i& (0+255),b
 36949   00B84A                     l18938:
 36950                           
 36951                           ; BSR set to: 0
 36952                           ;../../VLCBlib_PIC/nv.c: 156:         temp = readNVM(FLASH_NVM_TYPE, 0xFF80 +i);
 36953   00B84A  0E80               	movlw	128
 36954   00B84C  259B               	addwf	loadNvCache@i& (0+255),w,b
 36955   00B84E  6F97               	movwf	??_loadNvCache& (0+255),b
 36956   00B850  6B98               	clrf	(??_loadNvCache+1)& (0+255),b
 36957   00B852  0EFF               	movlw	255
 36958   00B854  2398               	addwfc	(??_loadNvCache+1)& (0+255),f,b
 36959   00B856  C097  F091         	movff	??_loadNvCache,readNVM@index
 36960   00B85A  C098  F092         	movff	??_loadNvCache+1,readNVM@index+1
 36961   00B85E  6B93               	clrf	(readNVM@index+2)& (0+255),b
 36962   00B860  0E01               	movlw	1
 36963   00B862  ECDD  F058         	call	_readNVM
 36964   00B866  C091  F099         	movff	?_readNVM,loadNvCache@temp
 36965   00B86A  C092  F09A         	movff	?_readNVM+1,loadNvCache@temp+1
 36966                           
 36967                           ;../../VLCBlib_PIC/nv.c: 157:         if (temp < 0) {
 36968   00B86E  0100               	movlb	0	; () banked
 36969   00B870  BF9A               	btfsc	(loadNvCache@temp+1)& (0+255),7,b
 36970   00B872  D008               	goto	l18946
 36971                           
 36972                           ; BSR set to: 0
 36973                           ;../../VLCBlib_PIC/nv.c: 160:             nvCache[i] = (uint8_t)temp;
 36974   00B874  0E00               	movlw	low _nvCache
 36975   00B876  259B               	addwf	loadNvCache@i& (0+255),w,b
 36976   00B878  6ED9               	movwf	fsr2l,c
 36977   00B87A  6ADA               	clrf	fsr2h,c
 36978   00B87C  0E04               	movlw	high _nvCache
 36979   00B87E  22DA               	addwfc	fsr2h,f,c
 36980   00B880  C099  FFDF         	movff	loadNvCache@temp,indf2
 36981   00B884                     l18946:
 36982                           
 36983                           ; BSR set to: 0
 36984                           ;../../VLCBlib_PIC/nv.c: 162:     }
 36985   00B884  2B9B               	incf	loadNvCache@i& (0+255),f,b
 36986                           
 36987                           ; BSR set to: 0
 36988   00B886  0E7F               	movlw	127
 36989   00B888  659B               	cpfsgt	loadNvCache@i& (0+255),b
 36990   00B88A  D7DF               	goto	l18938
 36991   00B88C  0012               	return	
 36992   00B88E                     __end_of_loadNvCache:
 36993                           	callstack 0
 36994                           
 36995 ;; *************** function _defaultEvents *****************
 36996 ;; Defined at:
 36997 ;;		line 103 in file "../universalEvents.c"
 36998 ;; Parameters:    Size  Location     Type
 36999 ;;  io              1    wreg     unsigned char 
 37000 ;;  type            1   44[BANK1 ] unsigned char 
 37001 ;; Auto vars:     Size  Location     Type
 37002 ;;  io              1   47[BANK1 ] unsigned char 
 37003 ;;  en              2   45[BANK1 ] unsigned short 
 37004 ;; Return value:  Size  Location     Type
 37005 ;;                  1    wreg      void 
 37006 ;; Registers used:
 37007 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37008 ;; Tracked objects:
 37009 ;;		On entry : 0/0
 37010 ;;		On exit  : 0/0
 37011 ;;		Unchanged: 0/0
 37012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37013 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37014 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37016 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37017 ;;Total ram usage:        4 bytes
 37018 ;; Hardware stack levels used: 1
 37019 ;; Hardware stack levels required when called: 23
 37020 ;; This function calls:
 37021 ;;		_addEvent
 37022 ;;		_clearEvents
 37023 ;; This function is called by:
 37024 ;;		_setType
 37025 ;; This function uses a non-reentrant model
 37026 ;;
 37027                           
 37028                           	psect	text155
 37029   007416                     __ptext155:
 37030                           	callstack 0
 37031   007416                     _defaultEvents:
 37032                           	callstack 2
 37033                           
 37034                           ; BSR set to: 0
 37035                           ;incstack = 0
 37036                           ;defaultEvents@io stored from wreg
 37037   007416  0101               	movlb	1	; () banked
 37038   007418  6FE4               	movwf	defaultEvents@io& (0+255),b
 37039                           
 37040                           ;../universalEvents.c: 104:     uint16_t en = io+1;
 37041   00741A  0E01               	movlw	1
 37042   00741C  0101               	movlb	1	; () banked
 37043   00741E  25E4               	addwf	defaultEvents@io& (0+255),w,b
 37044   007420  6FE2               	movwf	defaultEvents@en& (0+255),b
 37045   007422  6BE3               	clrf	(defaultEvents@en+1)& (0+255),b
 37046   007424  0E00               	movlw	0
 37047   007426  23E3               	addwfc	(defaultEvents@en+1)& (0+255),f,b
 37048                           
 37049                           ; BSR set to: 1
 37050                           ;../universalEvents.c: 105:     clearEvents(io);
 37051   007428  51E4               	movf	defaultEvents@io& (0+255),w,b
 37052   00742A  EC16  F05D         	call	_clearEvents
 37053                           
 37054                           ;../universalEvents.c: 108:     switch(type) {
 37055   00742E  D094               	goto	l19078
 37056   007430                     l19070:
 37057                           
 37058                           ; BSR set to: 1
 37059                           ;../universalEvents.c: 112:              addEvent(nn.word, 100+en, 0, ((8 + 4*(io))+0), 
      +                          TRUE);
 37060   007430  C0B3  F1D2         	movff	_nn,addEvent@nodeNumber
 37061   007434  C0B4  F1D3         	movff	_nn+1,addEvent@nodeNumber+1
 37062   007438  0E64               	movlw	100
 37063   00743A  25E2               	addwf	defaultEvents@en& (0+255),w,b
 37064   00743C  6FD4               	movwf	addEvent@eventNumber& (0+255),b
 37065   00743E  0E00               	movlw	0
 37066   007440  21E3               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 37067   007442  6FD5               	movwf	(addEvent@eventNumber+1)& (0+255),b
 37068   007444  0E00               	movlw	0
 37069   007446  6FD6               	movwf	addEvent@evNum& (0+255),b
 37070   007448  51E4               	movf	defaultEvents@io& (0+255),w,b
 37071   00744A  0D04               	mullw	4
 37072   00744C  50F3               	movf	243,w,c
 37073   00744E  0F08               	addlw	8
 37074   007450  6FD7               	movwf	addEvent@evVal& (0+255),b
 37075   007452  0E01               	movlw	1
 37076   007454  6FD8               	movwf	addEvent@forceOwnNN& (0+255),b
 37077   007456  ECC9  F032         	call	_addEvent	;wreg free
 37078   00745A                     l583:
 37079                           
 37080                           ;../universalEvents.c: 117:             addEvent(nn.word, en, 1, ((8 + 5*(io))+0), TRUE)
      +                          ;
 37081   00745A  C0B3  F1D2         	movff	_nn,addEvent@nodeNumber
 37082   00745E  C0B4  F1D3         	movff	_nn+1,addEvent@nodeNumber+1
 37083   007462  C1E2  F1D4         	movff	defaultEvents@en,addEvent@eventNumber
 37084   007466  C1E3  F1D5         	movff	defaultEvents@en+1,addEvent@eventNumber+1
 37085   00746A  0E01               	movlw	1
 37086   00746C  0101               	movlb	1	; () banked
 37087   00746E  6FD6               	movwf	addEvent@evNum& (0+255),b
 37088   007470  51E4               	movf	defaultEvents@io& (0+255),w,b
 37089   007472  0D05               	mullw	5
 37090   007474  50F3               	movf	243,w,c
 37091   007476  0F08               	addlw	8
 37092   007478  6FD7               	movwf	addEvent@evVal& (0+255),b
 37093   00747A  0E01               	movlw	1
 37094   00747C  6FD8               	movwf	addEvent@forceOwnNN& (0+255),b
 37095   00747E  ECC9  F032         	call	_addEvent	;wreg free
 37096                           
 37097                           ;../universalEvents.c: 120:             break;
 37098   007482  0012               	return	
 37099   007484                     l19072:
 37100                           
 37101                           ; BSR set to: 1
 37102                           ;../universalEvents.c: 123:             addEvent(nn.word, en, 0, ((8 + 4*(io))+0), TRUE)
      +                          ;
 37103   007484  C0B3  F1D2         	movff	_nn,addEvent@nodeNumber
 37104   007488  C0B4  F1D3         	movff	_nn+1,addEvent@nodeNumber+1
 37105   00748C  C1E2  F1D4         	movff	defaultEvents@en,addEvent@eventNumber
 37106   007490  C1E3  F1D5         	movff	defaultEvents@en+1,addEvent@eventNumber+1
 37107   007494  0E00               	movlw	0
 37108   007496  6FD6               	movwf	addEvent@evNum& (0+255),b
 37109   007498  51E4               	movf	defaultEvents@io& (0+255),w,b
 37110   00749A  0D04               	mullw	4
 37111   00749C  50F3               	movf	243,w,c
 37112   00749E  0F08               	addlw	8
 37113   0074A0  6FD7               	movwf	addEvent@evVal& (0+255),b
 37114   0074A2  0E01               	movlw	1
 37115   0074A4  6FD8               	movwf	addEvent@forceOwnNN& (0+255),b
 37116   0074A6  ECC9  F032         	call	_addEvent	;wreg free
 37117                           
 37118                           ;../universalEvents.c: 124:             break;
 37119   0074AA  0012               	return	
 37120   0074AC                     l19074:
 37121                           
 37122                           ; BSR set to: 1
 37123                           ;../universalEvents.c: 128:             addEvent(nn.word, 100+en, 0, ((8 + 4*(io))+0), T
      +                          RUE);
 37124   0074AC  C0B3  F1D2         	movff	_nn,addEvent@nodeNumber
 37125   0074B0  C0B4  F1D3         	movff	_nn+1,addEvent@nodeNumber+1
 37126   0074B4  0E64               	movlw	100
 37127   0074B6  25E2               	addwf	defaultEvents@en& (0+255),w,b
 37128   0074B8  6FD4               	movwf	addEvent@eventNumber& (0+255),b
 37129   0074BA  0E00               	movlw	0
 37130   0074BC  21E3               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 37131   0074BE  6FD5               	movwf	(addEvent@eventNumber+1)& (0+255),b
 37132   0074C0  0E00               	movlw	0
 37133   0074C2  6FD6               	movwf	addEvent@evNum& (0+255),b
 37134   0074C4  51E4               	movf	defaultEvents@io& (0+255),w,b
 37135   0074C6  0D04               	mullw	4
 37136   0074C8  50F3               	movf	243,w,c
 37137   0074CA  0F08               	addlw	8
 37138   0074CC  6FD7               	movwf	addEvent@evVal& (0+255),b
 37139   0074CE  0E01               	movlw	1
 37140   0074D0  6FD8               	movwf	addEvent@forceOwnNN& (0+255),b
 37141   0074D2  ECC9  F032         	call	_addEvent	;wreg free
 37142                           
 37143                           ;../universalEvents.c: 129:             addEvent(nn.word, 300+en, 0, ((8 + 4*(io))+1), T
      +                          RUE);
 37144   0074D6  C0B3  F1D2         	movff	_nn,addEvent@nodeNumber
 37145   0074DA  C0B4  F1D3         	movff	_nn+1,addEvent@nodeNumber+1
 37146   0074DE  0E2C               	movlw	44
 37147   0074E0  0101               	movlb	1	; () banked
 37148   0074E2  25E2               	addwf	defaultEvents@en& (0+255),w,b
 37149   0074E4  6FD4               	movwf	addEvent@eventNumber& (0+255),b
 37150   0074E6  0E01               	movlw	1
 37151   0074E8  21E3               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 37152   0074EA  6FD5               	movwf	(addEvent@eventNumber+1)& (0+255),b
 37153   0074EC  0E00               	movlw	0
 37154   0074EE  6FD6               	movwf	addEvent@evNum& (0+255),b
 37155   0074F0  51E4               	movf	defaultEvents@io& (0+255),w,b
 37156   0074F2  0D04               	mullw	4
 37157   0074F4  50F3               	movf	243,w,c
 37158   0074F6  0F09               	addlw	9
 37159   0074F8  6FD7               	movwf	addEvent@evVal& (0+255),b
 37160   0074FA  0E01               	movlw	1
 37161   0074FC  6FD8               	movwf	addEvent@forceOwnNN& (0+255),b
 37162   0074FE  ECC9  F032         	call	_addEvent	;wreg free
 37163                           
 37164                           ;../universalEvents.c: 130:             addEvent(nn.word, 200+en, 0, ((8 + 4*(io))+2), T
      +                          RUE);
 37165   007502  C0B3  F1D2         	movff	_nn,addEvent@nodeNumber
 37166   007506  C0B4  F1D3         	movff	_nn+1,addEvent@nodeNumber+1
 37167   00750A  0EC8               	movlw	200
 37168   00750C  0101               	movlb	1	; () banked
 37169   00750E  25E2               	addwf	defaultEvents@en& (0+255),w,b
 37170   007510  6FD4               	movwf	addEvent@eventNumber& (0+255),b
 37171   007512  0E00               	movlw	0
 37172   007514  21E3               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 37173   007516  6FD5               	movwf	(addEvent@eventNumber+1)& (0+255),b
 37174   007518  0E00               	movlw	0
 37175   00751A  6FD6               	movwf	addEvent@evNum& (0+255),b
 37176   00751C  51E4               	movf	defaultEvents@io& (0+255),w,b
 37177   00751E  0D04               	mullw	4
 37178   007520  50F3               	movf	243,w,c
 37179   007522  0F0A               	addlw	10
 37180   007524  6FD7               	movwf	addEvent@evVal& (0+255),b
 37181   007526  0E01               	movlw	1
 37182   007528  6FD8               	movwf	addEvent@forceOwnNN& (0+255),b
 37183   00752A  ECC9  F032         	call	_addEvent	;wreg free
 37184                           
 37185                           ;../universalEvents.c: 132:             addEvent(nn.word, en, 1, ((8 + 5*(io))+0), TRUE)
      +                          ;
 37186   00752E  C0B3  F1D2         	movff	_nn,addEvent@nodeNumber
 37187   007532  C0B4  F1D3         	movff	_nn+1,addEvent@nodeNumber+1
 37188   007536  C1E2  F1D4         	movff	defaultEvents@en,addEvent@eventNumber
 37189   00753A  C1E3  F1D5         	movff	defaultEvents@en+1,addEvent@eventNumber+1
 37190   00753E  0E01               	movlw	1
 37191   007540  0101               	movlb	1	; () banked
 37192   007542  6FD6               	movwf	addEvent@evNum& (0+255),b
 37193   007544  51E4               	movf	defaultEvents@io& (0+255),w,b
 37194   007546  0D05               	mullw	5
 37195   007548  50F3               	movf	243,w,c
 37196   00754A  0F08               	addlw	8
 37197   00754C  6FD7               	movwf	addEvent@evVal& (0+255),b
 37198   00754E  0E01               	movlw	1
 37199   007550  6FD8               	movwf	addEvent@forceOwnNN& (0+255),b
 37200   007552  ECC9  F032         	call	_addEvent	;wreg free
 37201                           
 37202                           ;../universalEvents.c: 133:             break;
 37203   007556  0012               	return	
 37204   007558                     l19078:
 37205   007558  0101               	movlb	1	; () banked
 37206   00755A  51E1               	movf	defaultEvents@type& (0+255),w,b
 37207                           
 37208                           ; Switch size 1, requested type "simple"
 37209                           ; Number of cases is 5, Range of values is 0 to 4
 37210                           ; switch strategies available:
 37211                           ; Name         Instructions Cycles
 37212                           ; simple_byte           16     9 (average)
 37213                           ;	Chosen strategy is simple_byte
 37214   00755C  0A00               	xorlw	0	; case 0
 37215   00755E  B4D8               	btfsc	status,2,c
 37216   007560  D791               	goto	l19072
 37217   007562  0A01               	xorlw	1	; case 1
 37218   007564  B4D8               	btfsc	status,2,c
 37219   007566  D779               	goto	l583
 37220   007568  0A03               	xorlw	3	; case 2
 37221   00756A  B4D8               	btfsc	status,2,c
 37222   00756C  D79F               	goto	l19074
 37223   00756E  0A01               	xorlw	1	; case 3
 37224   007570  B4D8               	btfsc	status,2,c
 37225   007572  D75E               	goto	l19070
 37226   007574  0A07               	xorlw	7	; case 4
 37227   007576  0012               	return	
 37228   007578                     __end_of_defaultEvents:
 37229                           	callstack 0
 37230                           
 37231 ;; *************** function _clearEvents *****************
 37232 ;; Defined at:
 37233 ;;		line 191 in file "../universalEvents.c"
 37234 ;; Parameters:    Size  Location     Type
 37235 ;;  io              1    wreg     unsigned char 
 37236 ;; Auto vars:     Size  Location     Type
 37237 ;;  io              1   39[BANK1 ] unsigned char 
 37238 ;; Return value:  Size  Location     Type
 37239 ;;                  1    wreg      void 
 37240 ;; Registers used:
 37241 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37242 ;; Tracked objects:
 37243 ;;		On entry : 0/0
 37244 ;;		On exit  : 0/0
 37245 ;;		Unchanged: 0/0
 37246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37248 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37250 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37251 ;;Total ram usage:        1 bytes
 37252 ;; Hardware stack levels used: 1
 37253 ;; Hardware stack levels required when called: 22
 37254 ;; This function calls:
 37255 ;;		_deleteActionRange
 37256 ;;		_deleteHappeningRange
 37257 ;; This function is called by:
 37258 ;;		_defaultEvents
 37259 ;; This function uses a non-reentrant model
 37260 ;;
 37261                           
 37262                           	psect	text156
 37263   00BA2C                     __ptext156:
 37264                           	callstack 0
 37265   00BA2C                     _clearEvents:
 37266                           	callstack 2
 37267                           
 37268                           ;incstack = 0
 37269                           ;clearEvents@io stored from wreg
 37270   00BA2C  0101               	movlb	1	; () banked
 37271   00BA2E  6FDC               	movwf	clearEvents@io& (0+255),b
 37272                           
 37273                           ;../universalEvents.c: 192:     deleteActionRange((8 + 5*(io)), 5);
 37274   00BA30  0E05               	movlw	5
 37275   00BA32  0101               	movlb	1	; () banked
 37276   00BA34  6FD2               	movwf	deleteActionRange@number& (0+255),b
 37277   00BA36  51DC               	movf	clearEvents@io& (0+255),w,b
 37278   00BA38  0D05               	mullw	5
 37279   00BA3A  50F3               	movf	243,w,c
 37280   00BA3C  0F08               	addlw	8
 37281   00BA3E  ECAF  F04A         	call	_deleteActionRange
 37282                           
 37283                           ;../universalEvents.c: 193:     deleteActionRange((8 + 5*(io)) | 0x80, 5);
 37284   00BA42  0E05               	movlw	5
 37285   00BA44  0101               	movlb	1	; () banked
 37286   00BA46  6FD2               	movwf	deleteActionRange@number& (0+255),b
 37287   00BA48  51DC               	movf	clearEvents@io& (0+255),w,b
 37288   00BA4A  0D05               	mullw	5
 37289   00BA4C  50F3               	movf	243,w,c
 37290   00BA4E  0F08               	addlw	8
 37291   00BA50  0980               	iorlw	128
 37292   00BA52  ECAF  F04A         	call	_deleteActionRange
 37293                           
 37294                           ;../universalEvents.c: 194:     deleteHappeningRange((8 + 4*(io)), 4);
 37295   00BA56  0E04               	movlw	4
 37296   00BA58  0101               	movlb	1	; () banked
 37297   00BA5A  6FD2               	movwf	deleteHappeningRange@number& (0+255),b
 37298   00BA5C  51DC               	movf	clearEvents@io& (0+255),w,b
 37299   00BA5E  0D04               	mullw	4
 37300   00BA60  50F3               	movf	243,w,c
 37301   00BA62  0F08               	addlw	8
 37302   00BA64  EC03  F044         	call	_deleteHappeningRange
 37303   00BA68  0012               	return		;funcret
 37304   00BA6A                     __end_of_clearEvents:
 37305                           	callstack 0
 37306                           
 37307 ;; *************** function _deleteHappeningRange *****************
 37308 ;; Defined at:
 37309 ;;		line 239 in file "../../VLCBlib_PIC/event_producer.c"
 37310 ;; Parameters:    Size  Location     Type
 37311 ;;  happening       1    wreg     unsigned char 
 37312 ;;  number          1   29[BANK1 ] unsigned char 
 37313 ;; Auto vars:     Size  Location     Type
 37314 ;;  happening       1   35[BANK1 ] unsigned char 
 37315 ;;  h               1   36[BANK1 ] unsigned char 
 37316 ;;  f               1    0        struct .
 37317 ;;  tableIndex      1   37[BANK1 ] unsigned char 
 37318 ;; Return value:  Size  Location     Type
 37319 ;;                  1    wreg      void 
 37320 ;; Registers used:
 37321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37322 ;; Tracked objects:
 37323 ;;		On entry : 0/0
 37324 ;;		On exit  : 0/0
 37325 ;;		Unchanged: 0/0
 37326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37327 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37328 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37329 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37330 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37331 ;;Total ram usage:        9 bytes
 37332 ;; Hardware stack levels used: 1
 37333 ;; Hardware stack levels required when called: 21
 37334 ;; This function calls:
 37335 ;;		_checkRemoveTableEntry
 37336 ;;		_flushFlashBlock
 37337 ;;		_readNVM
 37338 ;;		_rebuildHashtable
 37339 ;;		_validStart
 37340 ;;		_writeEv
 37341 ;; This function is called by:
 37342 ;;		_clearEvents
 37343 ;; This function uses a non-reentrant model
 37344 ;;
 37345                           
 37346                           	psect	text157
 37347   008806                     __ptext157:
 37348                           	callstack 0
 37349   008806                     _deleteHappeningRange:
 37350                           	callstack 2
 37351                           
 37352                           ;incstack = 0
 37353                           ;deleteHappeningRange@happening stored from wreg
 37354   008806  0101               	movlb	1	; () banked
 37355   008808  6FD8               	movwf	deleteHappeningRange@happening& (0+255),b
 37356                           
 37357                           ;../../VLCBlib_PIC/event_producer.c: 240:     uint8_t tableIndex;;../../VLCBlib_PIC/even
      +                          t_producer.c: 241:     for (tableIndex=0; tableIndex < 255; tableIndex++) {
 37358   00880A  0E00               	movlw	0
 37359   00880C  0101               	movlb	1	; () banked
 37360   00880E  6FDA               	movwf	deleteHappeningRange@tableIndex& (0+255),b
 37361   008810                     l18796:
 37362                           
 37363                           ; BSR set to: 1
 37364                           ;../../VLCBlib_PIC/event_producer.c: 242:         if ( validStart(tableIndex)) {
 37365   008810  51DA               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 37366   008812  EC3F  F05B         	call	_validStart
 37367   008816  0900               	iorlw	0
 37368   008818  B4D8               	btfsc	status,2,c
 37369   00881A  D059               	goto	l18808
 37370   00881C  0101               	movlb	1	; () banked
 37371   00881E  51DA               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 37372   008820  6FD3               	movwf	??_deleteHappeningRange& (0+255),b
 37373   008822  6BD4               	clrf	(??_deleteHappeningRange+1)& (0+255),b
 37374   008824  3BD3               	swapf	??_deleteHappeningRange& (0+255),f,b
 37375   008826  3BD4               	swapf	(??_deleteHappeningRange+1)& (0+255),f,b
 37376   008828  0EF0               	movlw	240
 37377   00882A  17D4               	andwf	(??_deleteHappeningRange+1)& (0+255),f,b
 37378   00882C  51D3               	movf	??_deleteHappeningRange& (0+255),w,b
 37379   00882E  0B0F               	andlw	15
 37380   008830  13D4               	iorwf	(??_deleteHappeningRange+1)& (0+255),f,b
 37381   008832  0EF0               	movlw	240
 37382   008834  17D3               	andwf	??_deleteHappeningRange& (0+255),f,b
 37383   008836  0E80               	movlw	128
 37384   008838  25D3               	addwf	??_deleteHappeningRange& (0+255),w,b
 37385   00883A  6FD5               	movwf	(??_deleteHappeningRange+2)& (0+255),b
 37386   00883C  0EEF               	movlw	239
 37387   00883E  21D4               	addwfc	(??_deleteHappeningRange+1)& (0+255),w,b
 37388   008840  6FD6               	movwf	(??_deleteHappeningRange+3)& (0+255),b
 37389   008842  C1D5  F091         	movff	??_deleteHappeningRange+2,readNVM@index
 37390   008846  C1D6  F092         	movff	??_deleteHappeningRange+3,readNVM@index+1
 37391   00884A  0100               	movlb	0	; () banked
 37392   00884C  6B93               	clrf	(readNVM@index+2)& (0+255),b
 37393   00884E  0E01               	movlw	1
 37394   008850  ECDD  F058         	call	_readNVM
 37395                           
 37396                           ;../../VLCBlib_PIC/event_producer.c: 247:             h = (Happening)readNVM(FLASH_NVM_T
      +                          YPE,
 37397   008854  0101               	movlb	1	; () banked
 37398   008856  51DA               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 37399   008858  0D10               	mullw	16
 37400   00885A  CFF3 F1D3          	movff	prodl,??_deleteHappeningRange
 37401   00885E  CFF4 F1D4          	movff	prodh,??_deleteHappeningRange+1
 37402   008862  0E86               	movlw	134
 37403   008864  25D3               	addwf	??_deleteHappeningRange& (0+255),w,b
 37404   008866  6FD5               	movwf	(??_deleteHappeningRange+2)& (0+255),b
 37405   008868  0EEF               	movlw	239
 37406   00886A  21D4               	addwfc	(??_deleteHappeningRange+1)& (0+255),w,b
 37407   00886C  6FD6               	movwf	(??_deleteHappeningRange+3)& (0+255),b
 37408   00886E  C1D5  F091         	movff	??_deleteHappeningRange+2,readNVM@index
 37409   008872  C1D6  F092         	movff	??_deleteHappeningRange+3,readNVM@index+1
 37410   008876  0100               	movlb	0	; () banked
 37411   008878  6B93               	clrf	(readNVM@index+2)& (0+255),b
 37412   00887A  0E01               	movlw	1
 37413   00887C  ECDD  F058         	call	_readNVM
 37414   008880  0100               	movlb	0	; () banked
 37415   008882  5191               	movf	?_readNVM& (0+255),w,b
 37416   008884  0101               	movlb	1	; () banked
 37417   008886  6FD9               	movwf	deleteHappeningRange@h& (0+255),b
 37418                           
 37419                           ; BSR set to: 1
 37420                           ;../../VLCBlib_PIC/event_producer.c: 249:             if ((h >= happening) && (h < happe
      +                          ning+number)) {
 37421   008888  51D8               	movf	deleteHappeningRange@happening& (0+255),w,b
 37422   00888A  5DD9               	subwf	deleteHappeningRange@h& (0+255),w,b
 37423   00888C  A0D8               	btfss	status,0,c
 37424   00888E  D01F               	goto	l18808
 37425                           
 37426                           ; BSR set to: 1
 37427   008890  51D2               	movf	deleteHappeningRange@number& (0+255),w,b
 37428   008892  C1D8  F1D3         	movff	deleteHappeningRange@happening,??_deleteHappeningRange
 37429   008896  6BD4               	clrf	(??_deleteHappeningRange+1)& (0+255),b
 37430   008898  27D3               	addwf	??_deleteHappeningRange& (0+255),f,b
 37431   00889A  0E00               	movlw	0
 37432   00889C  23D4               	addwfc	(??_deleteHappeningRange+1)& (0+255),f,b
 37433   00889E  51D9               	movf	deleteHappeningRange@h& (0+255),w,b
 37434   0088A0  6FD5               	movwf	(??_deleteHappeningRange+2)& (0+255),b
 37435   0088A2  6BD6               	clrf	(??_deleteHappeningRange+3)& (0+255),b
 37436   0088A4  51D3               	movf	??_deleteHappeningRange& (0+255),w,b
 37437   0088A6  5DD5               	subwf	(??_deleteHappeningRange+2)& (0+255),w,b
 37438   0088A8  51D6               	movf	(??_deleteHappeningRange+3)& (0+255),w,b
 37439   0088AA  0A80               	xorlw	128
 37440   0088AC  6FD7               	movwf	(??_deleteHappeningRange+4)& (0+255),b
 37441   0088AE  51D4               	movf	(??_deleteHappeningRange+1)& (0+255),w,b
 37442   0088B0  0A80               	xorlw	128
 37443   0088B2  59D7               	subwfb	(??_deleteHappeningRange+4)& (0+255),w,b
 37444   0088B4  B0D8               	btfsc	status,0,c
 37445   0088B6  D00B               	goto	l18808
 37446                           
 37447                           ; BSR set to: 1
 37448                           ;../../VLCBlib_PIC/event_producer.c: 250:                 writeEv(tableIndex, 0, 0);
 37449   0088B8  0E00               	movlw	0
 37450   0088BA  6FC6               	movwf	writeEv@evNum& (0+255),b
 37451   0088BC  0E00               	movlw	0
 37452   0088BE  6FC7               	movwf	writeEv@evVal& (0+255),b
 37453   0088C0  51DA               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 37454   0088C2  ECF5  F01C         	call	_writeEv
 37455                           
 37456                           ;../../VLCBlib_PIC/event_producer.c: 251:                 checkRemoveTableEntry(tableInd
      +                          ex);
 37457   0088C6  0101               	movlb	1	; () banked
 37458   0088C8  51DA               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 37459   0088CA  EC6C  F05C         	call	_checkRemoveTableEntry
 37460   0088CE                     l18808:
 37461                           
 37462                           ;../../VLCBlib_PIC/event_producer.c: 254:     }
 37463   0088CE  0101               	movlb	1	; () banked
 37464   0088D0  2BDA               	incf	deleteHappeningRange@tableIndex& (0+255),f,b
 37465                           
 37466                           ; BSR set to: 1
 37467   0088D2  29DA               	incf	deleteHappeningRange@tableIndex& (0+255),w,b
 37468   0088D4  A4D8               	btfss	status,2,c
 37469   0088D6  D79C               	goto	l18796
 37470                           
 37471                           ; BSR set to: 1
 37472                           ;../../VLCBlib_PIC/event_producer.c: 255:     flushFlashBlock();
 37473   0088D8  EC1A  F053         	call	_flushFlashBlock	;wreg free
 37474                           
 37475                           ;../../VLCBlib_PIC/event_producer.c: 256:     rebuildHashtable();
 37476   0088DC  EC9E  F03E         	call	_rebuildHashtable	;wreg free
 37477   0088E0  0012               	return		;funcret
 37478   0088E2                     __end_of_deleteHappeningRange:
 37479                           	callstack 0
 37480                           
 37481 ;; *************** function _deleteActionRange *****************
 37482 ;; Defined at:
 37483 ;;		line 471 in file "../event_consumerDualActionQueue.c"
 37484 ;; Parameters:    Size  Location     Type
 37485 ;;  action          1    wreg     unsigned char 
 37486 ;;  number          1   29[BANK1 ] unsigned char 
 37487 ;; Auto vars:     Size  Location     Type
 37488 ;;  action          1   36[BANK1 ] unsigned char 
 37489 ;;  e               1   37[BANK1 ] unsigned char 
 37490 ;;  updated         1   35[BANK1 ] enum E12700
 37491 ;;  tableIndex      1   38[BANK1 ] unsigned char 
 37492 ;; Return value:  Size  Location     Type
 37493 ;;                  1    wreg      void 
 37494 ;; Registers used:
 37495 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37496 ;; Tracked objects:
 37497 ;;		On entry : 0/0
 37498 ;;		On exit  : 0/0
 37499 ;;		Unchanged: 0/0
 37500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37501 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37502 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37503 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37504 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37505 ;;Total ram usage:       10 bytes
 37506 ;; Hardware stack levels used: 1
 37507 ;; Hardware stack levels required when called: 21
 37508 ;; This function calls:
 37509 ;;		_checkRemoveTableEntry
 37510 ;;		_flushFlashBlock
 37511 ;;		_getEVs
 37512 ;;		_validStart
 37513 ;;		_writeEv
 37514 ;; This function is called by:
 37515 ;;		_clearEvents
 37516 ;; This function uses a non-reentrant model
 37517 ;;
 37518                           
 37519                           	psect	text158
 37520   00955E                     __ptext158:
 37521                           	callstack 0
 37522   00955E                     _deleteActionRange:
 37523                           	callstack 2
 37524                           
 37525                           ;incstack = 0
 37526                           ;deleteActionRange@action stored from wreg
 37527   00955E  0101               	movlb	1	; () banked
 37528   009560  6FD9               	movwf	deleteActionRange@action& (0+255),b
 37529                           
 37530                           ;../event_consumerDualActionQueue.c: 472:     uint8_t tableIndex;;../event_consumerDualA
      +                          ctionQueue.c: 473:     for (tableIndex=0; tableIndex < 255; tableIndex++) {
 37531   009562  0E00               	movlw	0
 37532   009564  0101               	movlb	1	; () banked
 37533   009566  6FDB               	movwf	deleteActionRange@tableIndex& (0+255),b
 37534   009568                     l18754:
 37535                           
 37536                           ; BSR set to: 1
 37537                           ;../event_consumerDualActionQueue.c: 474:         if (validStart(tableIndex)) {
 37538   009568  51DB               	movf	deleteActionRange@tableIndex& (0+255),w,b
 37539   00956A  EC3F  F05B         	call	_validStart
 37540   00956E  0900               	iorlw	0
 37541   009570  B4D8               	btfsc	status,2,c
 37542   009572  D044               	goto	l18784
 37543                           
 37544                           ;../event_consumerDualActionQueue.c: 475:             Boolean updated = FALSE;
 37545   009574  0E00               	movlw	0
 37546   009576  0101               	movlb	1	; () banked
 37547   009578  6FD8               	movwf	deleteActionRange@updated& (0+255),b
 37548                           
 37549                           ; BSR set to: 1
 37550                           ;../event_consumerDualActionQueue.c: 476:             uint8_t e;;../event_consumerDualAc
      +                          tionQueue.c: 477:             if (getEVs(tableIndex)) {
 37551   00957A  51DB               	movf	deleteActionRange@tableIndex& (0+255),w,b
 37552   00957C  EC47  F041         	call	_getEVs
 37553   009580  0900               	iorlw	0
 37554   009582  A4D8               	btfss	status,2,c
 37555   009584  0012               	return	
 37556                           
 37557                           ;../event_consumerDualActionQueue.c: 481:             for (e=1; e<20; e++) {
 37558   009586  0E01               	movlw	1
 37559   009588  0101               	movlb	1	; () banked
 37560   00958A  6FDA               	movwf	deleteActionRange@e& (0+255),b
 37561   00958C                     l18768:
 37562                           
 37563                           ; BSR set to: 1
 37564                           ;../event_consumerDualActionQueue.c: 482:                 if ((evs[e] >= action) && (evs
      +                          [e] < action+number)) {
 37565   00958C  0E00               	movlw	low _evs
 37566   00958E  25DA               	addwf	deleteActionRange@e& (0+255),w,b
 37567   009590  6ED9               	movwf	fsr2l,c
 37568   009592  6ADA               	clrf	fsr2h,c
 37569   009594  0E02               	movlw	high _evs
 37570   009596  22DA               	addwfc	fsr2h,f,c
 37571   009598  51D9               	movf	deleteActionRange@action& (0+255),w,b
 37572   00959A  5CDE               	subwf	postinc2,w,c
 37573   00959C  A0D8               	btfss	status,0,c
 37574   00959E  D024               	goto	l18776
 37575                           
 37576                           ; BSR set to: 1
 37577   0095A0  51D2               	movf	deleteActionRange@number& (0+255),w,b
 37578   0095A2  C1D9  F1D3         	movff	deleteActionRange@action,??_deleteActionRange
 37579   0095A6  6BD4               	clrf	(??_deleteActionRange+1)& (0+255),b
 37580   0095A8  27D3               	addwf	??_deleteActionRange& (0+255),f,b
 37581   0095AA  0E00               	movlw	0
 37582   0095AC  23D4               	addwfc	(??_deleteActionRange+1)& (0+255),f,b
 37583   0095AE  0E00               	movlw	low _evs
 37584   0095B0  25DA               	addwf	deleteActionRange@e& (0+255),w,b
 37585   0095B2  6ED9               	movwf	fsr2l,c
 37586   0095B4  6ADA               	clrf	fsr2h,c
 37587   0095B6  0E02               	movlw	high _evs
 37588   0095B8  22DA               	addwfc	fsr2h,f,c
 37589   0095BA  50DF               	movf	indf2,w,c
 37590   0095BC  6FD5               	movwf	(??_deleteActionRange+2)& (0+255),b
 37591   0095BE  6BD6               	clrf	(??_deleteActionRange+3)& (0+255),b
 37592   0095C0  51D3               	movf	??_deleteActionRange& (0+255),w,b
 37593   0095C2  5DD5               	subwf	(??_deleteActionRange+2)& (0+255),w,b
 37594   0095C4  51D6               	movf	(??_deleteActionRange+3)& (0+255),w,b
 37595   0095C6  0A80               	xorlw	128
 37596   0095C8  6FD7               	movwf	(??_deleteActionRange+4)& (0+255),b
 37597   0095CA  51D4               	movf	(??_deleteActionRange+1)& (0+255),w,b
 37598   0095CC  0A80               	xorlw	128
 37599   0095CE  59D7               	subwfb	(??_deleteActionRange+4)& (0+255),w,b
 37600   0095D0  B0D8               	btfsc	status,0,c
 37601   0095D2  D00A               	goto	l18776
 37602                           
 37603                           ; BSR set to: 1
 37604                           ;../event_consumerDualActionQueue.c: 483:                     writeEv(tableIndex, e, 0);
 37605   0095D4  C1DA  F1C6         	movff	deleteActionRange@e,writeEv@evNum
 37606   0095D8  0E00               	movlw	0
 37607   0095DA  6FC7               	movwf	writeEv@evVal& (0+255),b
 37608   0095DC  51DB               	movf	deleteActionRange@tableIndex& (0+255),w,b
 37609   0095DE  ECF5  F01C         	call	_writeEv
 37610                           
 37611                           ;../event_consumerDualActionQueue.c: 484:                     updated = TRUE;
 37612   0095E2  0E01               	movlw	1
 37613   0095E4  0101               	movlb	1	; () banked
 37614   0095E6  6FD8               	movwf	deleteActionRange@updated& (0+255),b
 37615   0095E8                     l18776:
 37616                           
 37617                           ; BSR set to: 1
 37618                           ;../event_consumerDualActionQueue.c: 486:             }
 37619   0095E8  2BDA               	incf	deleteActionRange@e& (0+255),f,b
 37620                           
 37621                           ; BSR set to: 1
 37622   0095EA  0E13               	movlw	19
 37623   0095EC  65DA               	cpfsgt	deleteActionRange@e& (0+255),b
 37624   0095EE  D7CE               	goto	l18768
 37625                           
 37626                           ; BSR set to: 1
 37627                           ;../event_consumerDualActionQueue.c: 487:             if (updated) {
 37628   0095F0  51D8               	movf	deleteActionRange@updated& (0+255),w,b
 37629   0095F2  B4D8               	btfsc	status,2,c
 37630   0095F4  D003               	goto	l18784
 37631                           
 37632                           ; BSR set to: 1
 37633                           ;../event_consumerDualActionQueue.c: 488:                 checkRemoveTableEntry(tableInd
      +                          ex);
 37634   0095F6  51DB               	movf	deleteActionRange@tableIndex& (0+255),w,b
 37635   0095F8  EC6C  F05C         	call	_checkRemoveTableEntry
 37636   0095FC                     l18784:
 37637                           
 37638                           ;../event_consumerDualActionQueue.c: 491:     }
 37639   0095FC  0101               	movlb	1	; () banked
 37640   0095FE  2BDB               	incf	deleteActionRange@tableIndex& (0+255),f,b
 37641                           
 37642                           ; BSR set to: 1
 37643   009600  29DB               	incf	deleteActionRange@tableIndex& (0+255),w,b
 37644   009602  A4D8               	btfss	status,2,c
 37645   009604  D7B1               	goto	l18754
 37646                           
 37647                           ; BSR set to: 1
 37648                           ;../event_consumerDualActionQueue.c: 492:     flushFlashBlock();
 37649   009606  EC1A  F053         	call	_flushFlashBlock	;wreg free
 37650   00960A  0012               	return		;funcret
 37651   00960C                     __end_of_deleteActionRange:
 37652                           	callstack 0
 37653                           
 37654 ;; *************** function _addEvent *****************
 37655 ;; Defined at:
 37656 ;;		line 830 in file "../../VLCBlib_PIC/event_teach.c"
 37657 ;; Parameters:    Size  Location     Type
 37658 ;;  nodeNumber      2   29[BANK1 ] unsigned short 
 37659 ;;  eventNumber     2   31[BANK1 ] unsigned short 
 37660 ;;  evNum           1   33[BANK1 ] unsigned char 
 37661 ;;  evVal           1   34[BANK1 ] unsigned char 
 37662 ;;  forceOwnNN      1   35[BANK1 ] unsigned char 
 37663 ;; Auto vars:     Size  Location     Type
 37664 ;;  e               1   42[BANK1 ] unsigned char 
 37665 ;;  f               1   41[BANK1 ] struct .
 37666 ;;  tableIndex      1   43[BANK1 ] unsigned char 
 37667 ;;  error           1   40[BANK1 ] unsigned char 
 37668 ;; Return value:  Size  Location     Type
 37669 ;;                  1    wreg      unsigned char 
 37670 ;; Registers used:
 37671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37672 ;; Tracked objects:
 37673 ;;		On entry : 0/0
 37674 ;;		On exit  : 0/0
 37675 ;;		Unchanged: 0/0
 37676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37677 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37678 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37679 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37680 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37681 ;;Total ram usage:       15 bytes
 37682 ;; Hardware stack levels used: 1
 37683 ;; Hardware stack levels required when called: 21
 37684 ;; This function calls:
 37685 ;;		_findEvent
 37686 ;;		_flushFlashBlock
 37687 ;;		_readNVM
 37688 ;;		_rebuildHashtable
 37689 ;;		_writeEv
 37690 ;;		_writeNVM
 37691 ;; This function is called by:
 37692 ;;		_defaultEvents
 37693 ;;		_APP_addEvent
 37694 ;; This function uses a non-reentrant model
 37695 ;;
 37696                           
 37697                           	psect	text159
 37698   006592                     __ptext159:
 37699                           	callstack 0
 37700   006592                     _addEvent:
 37701                           	callstack 5
 37702                           
 37703                           ;../../VLCBlib_PIC/event_teach.c: 831:     uint8_t tableIndex;;../../VLCBlib_PIC/event_t
      +                          each.c: 832:     uint8_t error;;../../VLCBlib_PIC/event_teach.c: 834:     tableIndex = f
      +                          indEvent(nodeNumber, eventNumber);
 37704                           
 37705                           ;incstack = 0
 37706   006592  C1D2  F1B5         	movff	addEvent@nodeNumber,findEvent@nodeNumber
 37707   006596  C1D3  F1B6         	movff	addEvent@nodeNumber+1,findEvent@nodeNumber+1
 37708   00659A  C1D4  F1B7         	movff	addEvent@eventNumber,findEvent@eventNumber
 37709   00659E  C1D5  F1B8         	movff	addEvent@eventNumber+1,findEvent@eventNumber+1
 37710   0065A2  ECBE  F051         	call	_findEvent	;wreg free
 37711   0065A6  0101               	movlb	1	; () banked
 37712   0065A8  6FE0               	movwf	addEvent@tableIndex& (0+255),b
 37713                           
 37714                           ; BSR set to: 1
 37715                           ;../../VLCBlib_PIC/event_teach.c: 835:     if (tableIndex == 0xff) {
 37716   0065AA  29E0               	incf	addEvent@tableIndex& (0+255),w,b
 37717   0065AC  A4D8               	btfss	status,2,c
 37718   0065AE  D0E2               	goto	l18918
 37719                           
 37720                           ; BSR set to: 1
 37721                           ;../../VLCBlib_PIC/event_teach.c: 841:         if (evVal == 0) {
 37722   0065B0  51D7               	movf	addEvent@evVal& (0+255),w,b
 37723   0065B2  A4D8               	btfss	status,2,c
 37724   0065B4  D002               	goto	l18876
 37725   0065B6                     u18890:
 37726                           
 37727                           ;../../VLCBlib_PIC/event_teach.c: 842:             return 0;
 37728   0065B6  0E00               	movlw	0
 37729   0065B8  0012               	return	
 37730   0065BA                     l18876:
 37731                           
 37732                           ; BSR set to: 1
 37733                           ;../../VLCBlib_PIC/event_teach.c: 844:         error = 1;
 37734   0065BA  0E01               	movlw	1
 37735   0065BC  6FDD               	movwf	addEvent@error& (0+255),b
 37736                           
 37737                           ;../../VLCBlib_PIC/event_teach.c: 846:         for (tableIndex=0; tableIndex<255; tableI
      +                          ndex++) {
 37738   0065BE  0E00               	movlw	0
 37739   0065C0  6FE0               	movwf	addEvent@tableIndex& (0+255),b
 37740   0065C2                     l18882:
 37741                           
 37742                           ; BSR set to: 1
 37743                           ;../../VLCBlib_PIC/event_teach.c: 847:             EventTableFlags f;;../../VLCBlib_PIC/
      +                          event_teach.c: 848:             f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80 + 16*
      +                          tableIndex+0);
 37744   0065C2  51E0               	movf	addEvent@tableIndex& (0+255),w,b
 37745   0065C4  6FD9               	movwf	??_addEvent& (0+255),b
 37746   0065C6  6BDA               	clrf	(??_addEvent+1)& (0+255),b
 37747   0065C8  3BD9               	swapf	??_addEvent& (0+255),f,b
 37748   0065CA  3BDA               	swapf	(??_addEvent+1)& (0+255),f,b
 37749   0065CC  0EF0               	movlw	240
 37750   0065CE  17DA               	andwf	(??_addEvent+1)& (0+255),f,b
 37751   0065D0  51D9               	movf	??_addEvent& (0+255),w,b
 37752   0065D2  0B0F               	andlw	15
 37753   0065D4  13DA               	iorwf	(??_addEvent+1)& (0+255),f,b
 37754   0065D6  0EF0               	movlw	240
 37755   0065D8  17D9               	andwf	??_addEvent& (0+255),f,b
 37756   0065DA  0E80               	movlw	128
 37757   0065DC  25D9               	addwf	??_addEvent& (0+255),w,b
 37758   0065DE  6FDB               	movwf	(??_addEvent+2)& (0+255),b
 37759   0065E0  0EEF               	movlw	239
 37760   0065E2  21DA               	addwfc	(??_addEvent+1)& (0+255),w,b
 37761   0065E4  6FDC               	movwf	(??_addEvent+3)& (0+255),b
 37762   0065E6  C1DB  F091         	movff	??_addEvent+2,readNVM@index
 37763   0065EA  C1DC  F092         	movff	??_addEvent+3,readNVM@index+1
 37764   0065EE  0100               	movlb	0	; () banked
 37765   0065F0  6B93               	clrf	(readNVM@index+2)& (0+255),b
 37766   0065F2  0E01               	movlw	1
 37767   0065F4  ECDD  F058         	call	_readNVM
 37768   0065F8  0100               	movlb	0	; () banked
 37769   0065FA  5191               	movf	?_readNVM& (0+255),w,b
 37770   0065FC  0101               	movlb	1	; () banked
 37771   0065FE  6FDE               	movwf	addEvent@f& (0+255),b
 37772                           
 37773                           ; BSR set to: 1
 37774                           ;../../VLCBlib_PIC/event_teach.c: 849:             if (f.freeEntry) {
 37775   006600  AFDE               	btfss	addEvent@f& (0+255),7,b
 37776   006602  D0AF               	goto	l18908
 37777                           
 37778                           ; BSR set to: 1
 37779                           ;../../VLCBlib_PIC/event_teach.c: 850:                 uint8_t e;;../../VLCBlib_PIC/even
      +                          t_teach.c: 852:                 writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+2, nodeN
      +                          umber&0xFF);
 37780   006604  51E0               	movf	addEvent@tableIndex& (0+255),w,b
 37781   006606  0D10               	mullw	16
 37782   006608  CFF3 F1D9          	movff	prodl,??_addEvent
 37783   00660C  CFF4 F1DA          	movff	prodh,??_addEvent+1
 37784   006610  0E82               	movlw	130
 37785   006612  25D9               	addwf	??_addEvent& (0+255),w,b
 37786   006614  6FDB               	movwf	(??_addEvent+2)& (0+255),b
 37787   006616  0EEF               	movlw	239
 37788   006618  21DA               	addwfc	(??_addEvent+1)& (0+255),w,b
 37789   00661A  6FDC               	movwf	(??_addEvent+3)& (0+255),b
 37790   00661C  C1DB  F0A4         	movff	??_addEvent+2,writeNVM@index
 37791   006620  C1DC  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 37792   006624  0100               	movlb	0	; () banked
 37793   006626  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 37794   006628  C1D2  F0A7         	movff	addEvent@nodeNumber,writeNVM@value
 37795   00662C  0E01               	movlw	1
 37796   00662E  EC66  F05B         	call	_writeNVM
 37797                           
 37798                           ;../../VLCBlib_PIC/event_teach.c: 853:                 writeNVM(FLASH_NVM_TYPE, 0xEF80 +
      +                           16*tableIndex+2 +1, nodeNumber>>8);
 37799   006632  0101               	movlb	1	; () banked
 37800   006634  51E0               	movf	addEvent@tableIndex& (0+255),w,b
 37801   006636  0D10               	mullw	16
 37802   006638  CFF3 F1D9          	movff	prodl,??_addEvent
 37803   00663C  CFF4 F1DA          	movff	prodh,??_addEvent+1
 37804   006640  0E83               	movlw	131
 37805   006642  25D9               	addwf	??_addEvent& (0+255),w,b
 37806   006644  6FDB               	movwf	(??_addEvent+2)& (0+255),b
 37807   006646  0EEF               	movlw	239
 37808   006648  21DA               	addwfc	(??_addEvent+1)& (0+255),w,b
 37809   00664A  6FDC               	movwf	(??_addEvent+3)& (0+255),b
 37810   00664C  C1DB  F0A4         	movff	??_addEvent+2,writeNVM@index
 37811   006650  C1DC  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 37812   006654  0100               	movlb	0	; () banked
 37813   006656  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 37814   006658  0101               	movlb	1	; () banked
 37815   00665A  51D3               	movf	(addEvent@nodeNumber+1)& (0+255),w,b
 37816   00665C  0100               	movlb	0	; () banked
 37817   00665E  6FA7               	movwf	writeNVM@value& (0+255),b
 37818   006660  0E01               	movlw	1
 37819   006662  EC66  F05B         	call	_writeNVM
 37820                           
 37821                           ;../../VLCBlib_PIC/event_teach.c: 854:                 writeNVM(FLASH_NVM_TYPE, 0xEF80 +
      +                           16*tableIndex+4, eventNumber&0xFF);
 37822   006666  0101               	movlb	1	; () banked
 37823   006668  51E0               	movf	addEvent@tableIndex& (0+255),w,b
 37824   00666A  0D10               	mullw	16
 37825   00666C  CFF3 F1D9          	movff	prodl,??_addEvent
 37826   006670  CFF4 F1DA          	movff	prodh,??_addEvent+1
 37827   006674  0E84               	movlw	132
 37828   006676  25D9               	addwf	??_addEvent& (0+255),w,b
 37829   006678  6FDB               	movwf	(??_addEvent+2)& (0+255),b
 37830   00667A  0EEF               	movlw	239
 37831   00667C  21DA               	addwfc	(??_addEvent+1)& (0+255),w,b
 37832   00667E  6FDC               	movwf	(??_addEvent+3)& (0+255),b
 37833   006680  C1DB  F0A4         	movff	??_addEvent+2,writeNVM@index
 37834   006684  C1DC  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 37835   006688  0100               	movlb	0	; () banked
 37836   00668A  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 37837   00668C  C1D4  F0A7         	movff	addEvent@eventNumber,writeNVM@value
 37838   006690  0E01               	movlw	1
 37839   006692  EC66  F05B         	call	_writeNVM
 37840                           
 37841                           ;../../VLCBlib_PIC/event_teach.c: 855:                 writeNVM(FLASH_NVM_TYPE, 0xEF80 +
      +                           16*tableIndex+4 +1, eventNumber>>8);
 37842   006696  0101               	movlb	1	; () banked
 37843   006698  51E0               	movf	addEvent@tableIndex& (0+255),w,b
 37844   00669A  0D10               	mullw	16
 37845   00669C  CFF3 F1D9          	movff	prodl,??_addEvent
 37846   0066A0  CFF4 F1DA          	movff	prodh,??_addEvent+1
 37847   0066A4  0E85               	movlw	133
 37848   0066A6  25D9               	addwf	??_addEvent& (0+255),w,b
 37849   0066A8  6FDB               	movwf	(??_addEvent+2)& (0+255),b
 37850   0066AA  0EEF               	movlw	239
 37851   0066AC  21DA               	addwfc	(??_addEvent+1)& (0+255),w,b
 37852   0066AE  6FDC               	movwf	(??_addEvent+3)& (0+255),b
 37853   0066B0  C1DB  F0A4         	movff	??_addEvent+2,writeNVM@index
 37854   0066B4  C1DC  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 37855   0066B8  0100               	movlb	0	; () banked
 37856   0066BA  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 37857   0066BC  0101               	movlb	1	; () banked
 37858   0066BE  51D5               	movf	(addEvent@eventNumber+1)& (0+255),w,b
 37859   0066C0  0100               	movlb	0	; () banked
 37860   0066C2  6FA7               	movwf	writeNVM@value& (0+255),b
 37861   0066C4  0E01               	movlw	1
 37862   0066C6  EC66  F05B         	call	_writeNVM
 37863                           
 37864                           ;../../VLCBlib_PIC/event_teach.c: 856:                 f.asByte = 0;
 37865   0066CA  0E00               	movlw	0
 37866   0066CC  0101               	movlb	1	; () banked
 37867   0066CE  6FDE               	movwf	addEvent@f& (0+255),b
 37868                           
 37869                           ; BSR set to: 1
 37870                           ;../../VLCBlib_PIC/event_teach.c: 857:                 f.forceOwnNN = forceOwnNN;
 37871   0066D0  B1D8               	btfsc	addEvent@forceOwnNN& (0+255),0,b
 37872   0066D2  D002               	bra	u18915
 37873   0066D4  9DDE               	bcf	addEvent@f& (0+255),6,b
 37874   0066D6  D002               	bra	u18916
 37875   0066D8                     u18915:
 37876   0066D8  0101               	movlb	1	; () banked
 37877   0066DA  8DDE               	bsf	addEvent@f& (0+255),6,b
 37878   0066DC                     u18916:
 37879                           
 37880                           ; BSR set to: 1
 37881                           ;../../VLCBlib_PIC/event_teach.c: 858:                 writeNVM(FLASH_NVM_TYPE, 0xEF80 +
      +                           16*tableIndex+0, f.asByte);
 37882   0066DC  51E0               	movf	addEvent@tableIndex& (0+255),w,b
 37883   0066DE  6FD9               	movwf	??_addEvent& (0+255),b
 37884   0066E0  6BDA               	clrf	(??_addEvent+1)& (0+255),b
 37885   0066E2  3BD9               	swapf	??_addEvent& (0+255),f,b
 37886   0066E4  3BDA               	swapf	(??_addEvent+1)& (0+255),f,b
 37887   0066E6  0EF0               	movlw	240
 37888   0066E8  17DA               	andwf	(??_addEvent+1)& (0+255),f,b
 37889   0066EA  51D9               	movf	??_addEvent& (0+255),w,b
 37890   0066EC  0B0F               	andlw	15
 37891   0066EE  13DA               	iorwf	(??_addEvent+1)& (0+255),f,b
 37892   0066F0  0EF0               	movlw	240
 37893   0066F2  17D9               	andwf	??_addEvent& (0+255),f,b
 37894   0066F4  0E80               	movlw	128
 37895   0066F6  25D9               	addwf	??_addEvent& (0+255),w,b
 37896   0066F8  6FDB               	movwf	(??_addEvent+2)& (0+255),b
 37897   0066FA  0EEF               	movlw	239
 37898   0066FC  21DA               	addwfc	(??_addEvent+1)& (0+255),w,b
 37899   0066FE  6FDC               	movwf	(??_addEvent+3)& (0+255),b
 37900   006700  C1DB  F0A4         	movff	??_addEvent+2,writeNVM@index
 37901   006704  C1DC  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 37902   006708  0100               	movlb	0	; () banked
 37903   00670A  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 37904   00670C  C1DE  F0A7         	movff	addEvent@f,writeNVM@value
 37905   006710  0E01               	movlw	1
 37906   006712  EC66  F05B         	call	_writeNVM
 37907                           
 37908                           ;../../VLCBlib_PIC/event_teach.c: 860:                 for (e = 0; e < 10; e++) {
 37909   006716  0E00               	movlw	0
 37910   006718  0101               	movlb	1	; () banked
 37911   00671A  6FDF               	movwf	addEvent@e& (0+255),b
 37912   00671C                     l18900:
 37913                           
 37914                           ; BSR set to: 1
 37915                           ;../../VLCBlib_PIC/event_teach.c: 861:                     writeNVM(FLASH_NVM_TYPE, 0xEF
      +                          80 + 16*tableIndex+6 +e, 0);
 37916   00671C  51E0               	movf	addEvent@tableIndex& (0+255),w,b
 37917   00671E  0D10               	mullw	16
 37918   006720  CFF3 F1D9          	movff	prodl,??_addEvent
 37919   006724  CFF4 F1DA          	movff	prodh,??_addEvent+1
 37920   006728  51DF               	movf	addEvent@e& (0+255),w,b
 37921   00672A  27D9               	addwf	??_addEvent& (0+255),f,b
 37922   00672C  0E00               	movlw	0
 37923   00672E  23DA               	addwfc	(??_addEvent+1)& (0+255),f,b
 37924   006730  0E86               	movlw	134
 37925   006732  25D9               	addwf	??_addEvent& (0+255),w,b
 37926   006734  6FDB               	movwf	(??_addEvent+2)& (0+255),b
 37927   006736  0EEF               	movlw	239
 37928   006738  21DA               	addwfc	(??_addEvent+1)& (0+255),w,b
 37929   00673A  6FDC               	movwf	(??_addEvent+3)& (0+255),b
 37930   00673C  C1DB  F0A4         	movff	??_addEvent+2,writeNVM@index
 37931   006740  C1DC  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 37932   006744  0100               	movlb	0	; () banked
 37933   006746  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 37934   006748  0E00               	movlw	0
 37935   00674A  6FA7               	movwf	writeNVM@value& (0+255),b
 37936   00674C  0E01               	movlw	1
 37937   00674E  EC66  F05B         	call	_writeNVM
 37938                           
 37939                           ;../../VLCBlib_PIC/event_teach.c: 862:                 }
 37940   006752  0101               	movlb	1	; () banked
 37941   006754  2BDF               	incf	addEvent@e& (0+255),f,b
 37942                           
 37943                           ; BSR set to: 1
 37944   006756  0E09               	movlw	9
 37945   006758  65DF               	cpfsgt	addEvent@e& (0+255),b
 37946   00675A  D7E0               	goto	l18900
 37947                           
 37948                           ; BSR set to: 1
 37949                           ;../../VLCBlib_PIC/event_teach.c: 863:                 error = 0;
 37950   00675C  0E00               	movlw	0
 37951   00675E  6FDD               	movwf	addEvent@error& (0+255),b
 37952                           
 37953                           ;../../VLCBlib_PIC/event_teach.c: 864:                 break;
 37954   006760  D004               	goto	u18930
 37955   006762                     l18908:
 37956                           
 37957                           ; BSR set to: 1
 37958                           ;../../VLCBlib_PIC/event_teach.c: 866:         }
 37959   006762  2BE0               	incf	addEvent@tableIndex& (0+255),f,b
 37960                           
 37961                           ; BSR set to: 1
 37962   006764  29E0               	incf	addEvent@tableIndex& (0+255),w,b
 37963   006766  A4D8               	btfss	status,2,c
 37964   006768  D72C               	goto	l18882
 37965   00676A                     u18930:
 37966                           
 37967                           ; BSR set to: 1
 37968                           ;../../VLCBlib_PIC/event_teach.c: 867:         if (error) {
 37969   00676A  51DD               	movf	addEvent@error& (0+255),w,b
 37970   00676C  B4D8               	btfsc	status,2,c
 37971   00676E  D002               	goto	l18918
 37972                           
 37973                           ; BSR set to: 1
 37974                           ;../../VLCBlib_PIC/event_teach.c: 868:             return CMDERR_TOO_MANY_EVENTS;
 37975   006770  0E04               	movlw	4
 37976   006772  0012               	return	
 37977   006774                     l18918:
 37978                           
 37979                           ; BSR set to: 1
 37980                           ;../../VLCBlib_PIC/event_teach.c: 872:     if (writeEv(tableIndex, evNum, evVal)) {
 37981   006774  C1D6  F1C6         	movff	addEvent@evNum,writeEv@evNum
 37982   006778  C1D7  F1C7         	movff	addEvent@evVal,writeEv@evVal
 37983   00677C  51E0               	movf	addEvent@tableIndex& (0+255),w,b
 37984   00677E  ECF5  F01C         	call	_writeEv
 37985   006782  0900               	iorlw	0
 37986   006784  B4D8               	btfsc	status,2,c
 37987   006786  D002               	goto	l18924
 37988                           
 37989                           ;../../VLCBlib_PIC/event_teach.c: 874:         return CMDERR_INV_EV_IDX;
 37990   006788  0E06               	movlw	6
 37991   00678A  0012               	return	
 37992   00678C                     l18924:
 37993                           
 37994                           ;../../VLCBlib_PIC/event_teach.c: 877:     flushFlashBlock();
 37995   00678C  EC1A  F053         	call	_flushFlashBlock	;wreg free
 37996                           
 37997                           ;../../VLCBlib_PIC/event_teach.c: 879:     rebuildHashtable();
 37998   006790  EC9E  F03E         	call	_rebuildHashtable	;wreg free
 37999   006794  D710               	goto	u18890
 38000   006796                     __end_of_addEvent:
 38001                           	callstack 0
 38002                           
 38003 ;; *************** function _writeEv *****************
 38004 ;; Defined at:
 38005 ;;		line 931 in file "../../VLCBlib_PIC/event_teach.c"
 38006 ;; Parameters:    Size  Location     Type
 38007 ;;  tableIndex      1    wreg     unsigned char 
 38008 ;;  evNum           1   17[BANK1 ] unsigned char 
 38009 ;;  evVal           1   18[BANK1 ] unsigned char 
 38010 ;; Auto vars:     Size  Location     Type
 38011 ;;  tableIndex      1   27[BANK1 ] unsigned char 
 38012 ;;  e               1   25[BANK1 ] unsigned char 
 38013 ;;  nextF           1   24[BANK1 ] struct .
 38014 ;;  nextIdx         1   28[BANK1 ] unsigned char 
 38015 ;;  f               1   26[BANK1 ] struct .
 38016 ;;  startIndex      1   23[BANK1 ] unsigned char 
 38017 ;; Return value:  Size  Location     Type
 38018 ;;                  1    wreg      unsigned char 
 38019 ;; Registers used:
 38020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38021 ;; Tracked objects:
 38022 ;;		On entry : 0/0
 38023 ;;		On exit  : 0/0
 38024 ;;		Unchanged: 0/0
 38025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38026 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38027 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38028 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38029 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38030 ;;Total ram usage:       12 bytes
 38031 ;; Hardware stack levels used: 1
 38032 ;; Hardware stack levels required when called: 20
 38033 ;; This function calls:
 38034 ;;		_checkRemoveTableEntry
 38035 ;;		_readNVM
 38036 ;;		_writeNVM
 38037 ;; This function is called by:
 38038 ;;		_deleteActionRange
 38039 ;;		_deleteHappeningRange
 38040 ;;		_addEvent
 38041 ;; This function uses a non-reentrant model
 38042 ;;
 38043                           
 38044                           	psect	text160
 38045   0039EA                     __ptext160:
 38046                           	callstack 0
 38047   0039EA                     _writeEv:
 38048                           	callstack 5
 38049                           
 38050                           ;incstack = 0
 38051                           ;writeEv@tableIndex stored from wreg
 38052   0039EA  0101               	movlb	1	; () banked
 38053   0039EC  6FD0               	movwf	writeEv@tableIndex& (0+255),b
 38054                           
 38055                           ;../../VLCBlib_PIC/event_teach.c: 932:     EventTableFlags f;;../../VLCBlib_PIC/event_te
      +                          ach.c: 933:     uint8_t startIndex = tableIndex;
 38056   0039EE  C1D0  F1CC         	movff	writeEv@tableIndex,writeEv@startIndex
 38057                           
 38058                           ;../../VLCBlib_PIC/event_teach.c: 934:     if (evNum >= 20) {
 38059   0039F2  0E13               	movlw	19
 38060   0039F4  0101               	movlb	1	; () banked
 38061   0039F6  65C6               	cpfsgt	writeEv@evNum& (0+255),b
 38062   0039F8  D14F               	goto	l18568
 38063                           
 38064                           ; BSR set to: 1
 38065                           ;../../VLCBlib_PIC/event_teach.c: 935:         return CMDERR_INV_EV_IDX;
 38066   0039FA  0E06               	movlw	6
 38067   0039FC  0012               	return	
 38068   0039FE                     l18506:
 38069                           
 38070                           ; BSR set to: 1
 38071                           ;../../VLCBlib_PIC/event_teach.c: 938:         uint8_t nextIdx;;../../VLCBlib_PIC/event_
      +                          teach.c: 941:         evNum -= 10;
 38072   0039FE  0E0A               	movlw	10
 38073   003A00  5FC6               	subwf	writeEv@evNum& (0+255),f,b
 38074                           
 38075                           ; BSR set to: 1
 38076                           ;../../VLCBlib_PIC/event_teach.c: 942:         f.asByte = (uint8_t)readNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*tableIndex+0);
 38077   003A02  51D0               	movf	writeEv@tableIndex& (0+255),w,b
 38078   003A04  6FC8               	movwf	??_writeEv& (0+255),b
 38079   003A06  6BC9               	clrf	(??_writeEv+1)& (0+255),b
 38080   003A08  3BC8               	swapf	??_writeEv& (0+255),f,b
 38081   003A0A  3BC9               	swapf	(??_writeEv+1)& (0+255),f,b
 38082   003A0C  0EF0               	movlw	240
 38083   003A0E  17C9               	andwf	(??_writeEv+1)& (0+255),f,b
 38084   003A10  51C8               	movf	??_writeEv& (0+255),w,b
 38085   003A12  0B0F               	andlw	15
 38086   003A14  13C9               	iorwf	(??_writeEv+1)& (0+255),f,b
 38087   003A16  0EF0               	movlw	240
 38088   003A18  17C8               	andwf	??_writeEv& (0+255),f,b
 38089   003A1A  0E80               	movlw	128
 38090   003A1C  25C8               	addwf	??_writeEv& (0+255),w,b
 38091   003A1E  6FCA               	movwf	(??_writeEv+2)& (0+255),b
 38092   003A20  0EEF               	movlw	239
 38093   003A22  21C9               	addwfc	(??_writeEv+1)& (0+255),w,b
 38094   003A24  6FCB               	movwf	(??_writeEv+3)& (0+255),b
 38095   003A26  C1CA  F091         	movff	??_writeEv+2,readNVM@index
 38096   003A2A  C1CB  F092         	movff	??_writeEv+3,readNVM@index+1
 38097   003A2E  0100               	movlb	0	; () banked
 38098   003A30  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38099   003A32  0E01               	movlw	1
 38100   003A34  ECDD  F058         	call	_readNVM
 38101   003A38  0100               	movlb	0	; () banked
 38102   003A3A  5191               	movf	?_readNVM& (0+255),w,b
 38103   003A3C  0101               	movlb	1	; () banked
 38104   003A3E  6FCF               	movwf	writeEv@f& (0+255),b
 38105                           
 38106                           ; BSR set to: 1
 38107                           ;../../VLCBlib_PIC/event_teach.c: 944:         if (f.continued) {
 38108   003A40  A9CF               	btfss	writeEv@f& (0+255),4,b
 38109   003A42  D01E               	goto	l18520
 38110                           
 38111                           ; BSR set to: 1
 38112                           ;../../VLCBlib_PIC/event_teach.c: 945:             tableIndex = (uint8_t)readNVM(FLASH_N
      +                          VM_TYPE, 0xEF80 + 16*tableIndex+1);
 38113   003A44  51D0               	movf	writeEv@tableIndex& (0+255),w,b
 38114   003A46  0D10               	mullw	16
 38115   003A48  CFF3 F1C8          	movff	prodl,??_writeEv
 38116   003A4C  CFF4 F1C9          	movff	prodh,??_writeEv+1
 38117   003A50  0E81               	movlw	129
 38118   003A52  25C8               	addwf	??_writeEv& (0+255),w,b
 38119   003A54  6FCA               	movwf	(??_writeEv+2)& (0+255),b
 38120   003A56  0EEF               	movlw	239
 38121   003A58  21C9               	addwfc	(??_writeEv+1)& (0+255),w,b
 38122   003A5A  6FCB               	movwf	(??_writeEv+3)& (0+255),b
 38123   003A5C  C1CA  F091         	movff	??_writeEv+2,readNVM@index
 38124   003A60  C1CB  F092         	movff	??_writeEv+3,readNVM@index+1
 38125   003A64  0100               	movlb	0	; () banked
 38126   003A66  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38127   003A68  0E01               	movlw	1
 38128   003A6A  ECDD  F058         	call	_readNVM
 38129   003A6E  0100               	movlb	0	; () banked
 38130   003A70  5191               	movf	?_readNVM& (0+255),w,b
 38131   003A72  0101               	movlb	1	; () banked
 38132   003A74  6FD0               	movwf	writeEv@tableIndex& (0+255),b
 38133                           
 38134                           ; BSR set to: 1
 38135                           ;../../VLCBlib_PIC/event_teach.c: 946:             if (tableIndex == 0xff) {
 38136   003A76  29D0               	incf	writeEv@tableIndex& (0+255),w,b
 38137   003A78  A4D8               	btfss	status,2,c
 38138   003A7A  D10E               	goto	l18568
 38139                           
 38140                           ; BSR set to: 1
 38141                           ;../../VLCBlib_PIC/event_teach.c: 947:                 return CMDERR_INVALID_EVENT;
 38142   003A7C  0E07               	movlw	7
 38143   003A7E  0012               	return	
 38144   003A80                     l18520:
 38145                           
 38146                           ; BSR set to: 1
 38147                           ;../../VLCBlib_PIC/event_teach.c: 956:             if (evVal == 0) {
 38148   003A80  51C7               	movf	writeEv@evVal& (0+255),w,b
 38149   003A82  A4D8               	btfss	status,2,c
 38150   003A84  D002               	goto	l18526
 38151   003A86                     u18350:
 38152                           
 38153                           ;../../VLCBlib_PIC/event_teach.c: 957:                 return 0;
 38154   003A86  0E00               	movlw	0
 38155   003A88  0012               	return	
 38156   003A8A                     l18526:
 38157                           
 38158                           ; BSR set to: 1
 38159                           ;../../VLCBlib_PIC/event_teach.c: 960:             for (nextIdx = tableIndex+1 ; nextIdx
      +                           < 255; nextIdx++) {
 38160   003A8A  29D0               	incf	writeEv@tableIndex& (0+255),w,b
 38161   003A8C  6FD1               	movwf	writeEv@nextIdx& (0+255),b
 38162   003A8E  D0FB               	goto	l18560
 38163   003A90                     l18530:
 38164                           
 38165                           ; BSR set to: 1
 38166                           ;../../VLCBlib_PIC/event_teach.c: 961:                 EventTableFlags nextF;;../../VLCB
      +                          lib_PIC/event_teach.c: 962:                 nextF.asByte = (uint8_t)readNVM(FLASH_NVM_TY
      +                          PE, 0xEF80 + 16*nextIdx+0);
 38167   003A90  51D1               	movf	writeEv@nextIdx& (0+255),w,b
 38168   003A92  6FC8               	movwf	??_writeEv& (0+255),b
 38169   003A94  6BC9               	clrf	(??_writeEv+1)& (0+255),b
 38170   003A96  3BC8               	swapf	??_writeEv& (0+255),f,b
 38171   003A98  3BC9               	swapf	(??_writeEv+1)& (0+255),f,b
 38172   003A9A  0EF0               	movlw	240
 38173   003A9C  17C9               	andwf	(??_writeEv+1)& (0+255),f,b
 38174   003A9E  51C8               	movf	??_writeEv& (0+255),w,b
 38175   003AA0  0B0F               	andlw	15
 38176   003AA2  13C9               	iorwf	(??_writeEv+1)& (0+255),f,b
 38177   003AA4  0EF0               	movlw	240
 38178   003AA6  17C8               	andwf	??_writeEv& (0+255),f,b
 38179   003AA8  0E80               	movlw	128
 38180   003AAA  25C8               	addwf	??_writeEv& (0+255),w,b
 38181   003AAC  6FCA               	movwf	(??_writeEv+2)& (0+255),b
 38182   003AAE  0EEF               	movlw	239
 38183   003AB0  21C9               	addwfc	(??_writeEv+1)& (0+255),w,b
 38184   003AB2  6FCB               	movwf	(??_writeEv+3)& (0+255),b
 38185   003AB4  C1CA  F091         	movff	??_writeEv+2,readNVM@index
 38186   003AB8  C1CB  F092         	movff	??_writeEv+3,readNVM@index+1
 38187   003ABC  0100               	movlb	0	; () banked
 38188   003ABE  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38189   003AC0  0E01               	movlw	1
 38190   003AC2  ECDD  F058         	call	_readNVM
 38191   003AC6  0100               	movlb	0	; () banked
 38192   003AC8  5191               	movf	?_readNVM& (0+255),w,b
 38193   003ACA  0101               	movlb	1	; () banked
 38194   003ACC  6FCD               	movwf	writeEv@nextF& (0+255),b
 38195                           
 38196                           ; BSR set to: 1
 38197                           ;../../VLCBlib_PIC/event_teach.c: 963:                 if (nextF.freeEntry) {
 38198   003ACE  AFCD               	btfss	writeEv@nextF& (0+255),7,b
 38199   003AD0  D0D9               	goto	l18558
 38200                           
 38201                           ; BSR set to: 1
 38202                           ;../../VLCBlib_PIC/event_teach.c: 964:                     uint8_t e;;../../VLCBlib_PIC/
      +                          event_teach.c: 966:                     writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*nextIdx+2, 
      +                          0xff);
 38203   003AD2  51D1               	movf	writeEv@nextIdx& (0+255),w,b
 38204   003AD4  0D10               	mullw	16
 38205   003AD6  CFF3 F1C8          	movff	prodl,??_writeEv
 38206   003ADA  CFF4 F1C9          	movff	prodh,??_writeEv+1
 38207   003ADE  0E82               	movlw	130
 38208   003AE0  25C8               	addwf	??_writeEv& (0+255),w,b
 38209   003AE2  6FCA               	movwf	(??_writeEv+2)& (0+255),b
 38210   003AE4  0EEF               	movlw	239
 38211   003AE6  21C9               	addwfc	(??_writeEv+1)& (0+255),w,b
 38212   003AE8  6FCB               	movwf	(??_writeEv+3)& (0+255),b
 38213   003AEA  C1CA  F0A4         	movff	??_writeEv+2,writeNVM@index
 38214   003AEE  C1CB  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38215   003AF2  0100               	movlb	0	; () banked
 38216   003AF4  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38217   003AF6  0EFF               	movlw	255
 38218   003AF8  6FA7               	movwf	writeNVM@value& (0+255),b
 38219   003AFA  0E01               	movlw	1
 38220   003AFC  EC66  F05B         	call	_writeNVM
 38221                           
 38222                           ;../../VLCBlib_PIC/event_teach.c: 967:                     writeNVM(FLASH_NVM_TYPE, 0xEF
      +                          80 + 16*nextIdx+2 +1, 0xff);
 38223   003B00  0101               	movlb	1	; () banked
 38224   003B02  51D1               	movf	writeEv@nextIdx& (0+255),w,b
 38225   003B04  0D10               	mullw	16
 38226   003B06  CFF3 F1C8          	movff	prodl,??_writeEv
 38227   003B0A  CFF4 F1C9          	movff	prodh,??_writeEv+1
 38228   003B0E  0E83               	movlw	131
 38229   003B10  25C8               	addwf	??_writeEv& (0+255),w,b
 38230   003B12  6FCA               	movwf	(??_writeEv+2)& (0+255),b
 38231   003B14  0EEF               	movlw	239
 38232   003B16  21C9               	addwfc	(??_writeEv+1)& (0+255),w,b
 38233   003B18  6FCB               	movwf	(??_writeEv+3)& (0+255),b
 38234   003B1A  C1CA  F0A4         	movff	??_writeEv+2,writeNVM@index
 38235   003B1E  C1CB  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38236   003B22  0100               	movlb	0	; () banked
 38237   003B24  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38238   003B26  0EFF               	movlw	255
 38239   003B28  6FA7               	movwf	writeNVM@value& (0+255),b
 38240   003B2A  0E01               	movlw	1
 38241   003B2C  EC66  F05B         	call	_writeNVM
 38242                           
 38243                           ;../../VLCBlib_PIC/event_teach.c: 968:                     writeNVM(FLASH_NVM_TYPE, 0xEF
      +                          80 + 16*nextIdx+4, 0xff);
 38244   003B30  0101               	movlb	1	; () banked
 38245   003B32  51D1               	movf	writeEv@nextIdx& (0+255),w,b
 38246   003B34  0D10               	mullw	16
 38247   003B36  CFF3 F1C8          	movff	prodl,??_writeEv
 38248   003B3A  CFF4 F1C9          	movff	prodh,??_writeEv+1
 38249   003B3E  0E84               	movlw	132
 38250   003B40  25C8               	addwf	??_writeEv& (0+255),w,b
 38251   003B42  6FCA               	movwf	(??_writeEv+2)& (0+255),b
 38252   003B44  0EEF               	movlw	239
 38253   003B46  21C9               	addwfc	(??_writeEv+1)& (0+255),w,b
 38254   003B48  6FCB               	movwf	(??_writeEv+3)& (0+255),b
 38255   003B4A  C1CA  F0A4         	movff	??_writeEv+2,writeNVM@index
 38256   003B4E  C1CB  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38257   003B52  0100               	movlb	0	; () banked
 38258   003B54  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38259   003B56  0EFF               	movlw	255
 38260   003B58  6FA7               	movwf	writeNVM@value& (0+255),b
 38261   003B5A  0E01               	movlw	1
 38262   003B5C  EC66  F05B         	call	_writeNVM
 38263                           
 38264                           ;../../VLCBlib_PIC/event_teach.c: 969:                     writeNVM(FLASH_NVM_TYPE, 0xEF
      +                          80 + 16*nextIdx+4 +1, 0xff);
 38265   003B60  0101               	movlb	1	; () banked
 38266   003B62  51D1               	movf	writeEv@nextIdx& (0+255),w,b
 38267   003B64  0D10               	mullw	16
 38268   003B66  CFF3 F1C8          	movff	prodl,??_writeEv
 38269   003B6A  CFF4 F1C9          	movff	prodh,??_writeEv+1
 38270   003B6E  0E85               	movlw	133
 38271   003B70  25C8               	addwf	??_writeEv& (0+255),w,b
 38272   003B72  6FCA               	movwf	(??_writeEv+2)& (0+255),b
 38273   003B74  0EEF               	movlw	239
 38274   003B76  21C9               	addwfc	(??_writeEv+1)& (0+255),w,b
 38275   003B78  6FCB               	movwf	(??_writeEv+3)& (0+255),b
 38276   003B7A  C1CA  F0A4         	movff	??_writeEv+2,writeNVM@index
 38277   003B7E  C1CB  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38278   003B82  0100               	movlb	0	; () banked
 38279   003B84  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38280   003B86  0EFF               	movlw	255
 38281   003B88  6FA7               	movwf	writeNVM@value& (0+255),b
 38282   003B8A  0E01               	movlw	1
 38283   003B8C  EC66  F05B         	call	_writeNVM
 38284                           
 38285                           ;../../VLCBlib_PIC/event_teach.c: 970:                     writeNVM(FLASH_NVM_TYPE, 0xEF
      +                          80 + 16*nextIdx+0, 0x20);
 38286   003B90  0101               	movlb	1	; () banked
 38287   003B92  51D1               	movf	writeEv@nextIdx& (0+255),w,b
 38288   003B94  6FC8               	movwf	??_writeEv& (0+255),b
 38289   003B96  6BC9               	clrf	(??_writeEv+1)& (0+255),b
 38290   003B98  3BC8               	swapf	??_writeEv& (0+255),f,b
 38291   003B9A  3BC9               	swapf	(??_writeEv+1)& (0+255),f,b
 38292   003B9C  0EF0               	movlw	240
 38293   003B9E  17C9               	andwf	(??_writeEv+1)& (0+255),f,b
 38294   003BA0  51C8               	movf	??_writeEv& (0+255),w,b
 38295   003BA2  0B0F               	andlw	15
 38296   003BA4  13C9               	iorwf	(??_writeEv+1)& (0+255),f,b
 38297   003BA6  0EF0               	movlw	240
 38298   003BA8  17C8               	andwf	??_writeEv& (0+255),f,b
 38299   003BAA  0E80               	movlw	128
 38300   003BAC  25C8               	addwf	??_writeEv& (0+255),w,b
 38301   003BAE  6FCA               	movwf	(??_writeEv+2)& (0+255),b
 38302   003BB0  0EEF               	movlw	239
 38303   003BB2  21C9               	addwfc	(??_writeEv+1)& (0+255),w,b
 38304   003BB4  6FCB               	movwf	(??_writeEv+3)& (0+255),b
 38305   003BB6  C1CA  F0A4         	movff	??_writeEv+2,writeNVM@index
 38306   003BBA  C1CB  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38307   003BBE  0100               	movlb	0	; () banked
 38308   003BC0  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38309   003BC2  0E20               	movlw	32
 38310   003BC4  6FA7               	movwf	writeNVM@value& (0+255),b
 38311   003BC6  0E01               	movlw	1
 38312   003BC8  EC66  F05B         	call	_writeNVM
 38313                           
 38314                           ;../../VLCBlib_PIC/event_teach.c: 971:                     for (e = 0; e < 10; e++) {
 38315   003BCC  0E00               	movlw	0
 38316   003BCE  0101               	movlb	1	; () banked
 38317   003BD0  6FCE               	movwf	writeEv@e& (0+255),b
 38318   003BD2                     l18544:
 38319                           
 38320                           ; BSR set to: 1
 38321                           ;../../VLCBlib_PIC/event_teach.c: 972:                         writeNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*nextIdx+6 +e, 0);
 38322   003BD2  51D1               	movf	writeEv@nextIdx& (0+255),w,b
 38323   003BD4  0D10               	mullw	16
 38324   003BD6  CFF3 F1C8          	movff	prodl,??_writeEv
 38325   003BDA  CFF4 F1C9          	movff	prodh,??_writeEv+1
 38326   003BDE  51CE               	movf	writeEv@e& (0+255),w,b
 38327   003BE0  27C8               	addwf	??_writeEv& (0+255),f,b
 38328   003BE2  0E00               	movlw	0
 38329   003BE4  23C9               	addwfc	(??_writeEv+1)& (0+255),f,b
 38330   003BE6  0E86               	movlw	134
 38331   003BE8  25C8               	addwf	??_writeEv& (0+255),w,b
 38332   003BEA  6FCA               	movwf	(??_writeEv+2)& (0+255),b
 38333   003BEC  0EEF               	movlw	239
 38334   003BEE  21C9               	addwfc	(??_writeEv+1)& (0+255),w,b
 38335   003BF0  6FCB               	movwf	(??_writeEv+3)& (0+255),b
 38336   003BF2  C1CA  F0A4         	movff	??_writeEv+2,writeNVM@index
 38337   003BF6  C1CB  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38338   003BFA  0100               	movlb	0	; () banked
 38339   003BFC  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38340   003BFE  0E00               	movlw	0
 38341   003C00  6FA7               	movwf	writeNVM@value& (0+255),b
 38342   003C02  0E01               	movlw	1
 38343   003C04  EC66  F05B         	call	_writeNVM
 38344                           
 38345                           ;../../VLCBlib_PIC/event_teach.c: 973:                     }
 38346   003C08  0101               	movlb	1	; () banked
 38347   003C0A  2BCE               	incf	writeEv@e& (0+255),f,b
 38348                           
 38349                           ; BSR set to: 1
 38350   003C0C  0E09               	movlw	9
 38351   003C0E  65CE               	cpfsgt	writeEv@e& (0+255),b
 38352   003C10  D7E0               	goto	l18544
 38353                           
 38354                           ; BSR set to: 1
 38355                           ;../../VLCBlib_PIC/event_teach.c: 975:                     writeNVM(FLASH_NVM_TYPE, 0xEF
      +                          80 + 16*tableIndex+1, nextIdx);
 38356   003C12  51D0               	movf	writeEv@tableIndex& (0+255),w,b
 38357   003C14  0D10               	mullw	16
 38358   003C16  CFF3 F1C8          	movff	prodl,??_writeEv
 38359   003C1A  CFF4 F1C9          	movff	prodh,??_writeEv+1
 38360   003C1E  0E81               	movlw	129
 38361   003C20  25C8               	addwf	??_writeEv& (0+255),w,b
 38362   003C22  6FCA               	movwf	(??_writeEv+2)& (0+255),b
 38363   003C24  0EEF               	movlw	239
 38364   003C26  21C9               	addwfc	(??_writeEv+1)& (0+255),w,b
 38365   003C28  6FCB               	movwf	(??_writeEv+3)& (0+255),b
 38366   003C2A  C1CA  F0A4         	movff	??_writeEv+2,writeNVM@index
 38367   003C2E  C1CB  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38368   003C32  0100               	movlb	0	; () banked
 38369   003C34  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38370   003C36  C1D1  F0A7         	movff	writeEv@nextIdx,writeNVM@value
 38371   003C3A  0E01               	movlw	1
 38372   003C3C  EC66  F05B         	call	_writeNVM
 38373                           
 38374                           ;../../VLCBlib_PIC/event_teach.c: 977:                     f.continued = 1;
 38375   003C40  0101               	movlb	1	; () banked
 38376   003C42  89CF               	bsf	writeEv@f& (0+255),4,b
 38377                           
 38378                           ; BSR set to: 1
 38379                           ;../../VLCBlib_PIC/event_teach.c: 978:                     writeNVM(FLASH_NVM_TYPE, 0xEF
      +                          80 + 16*tableIndex+0, f.asByte);
 38380   003C44  51D0               	movf	writeEv@tableIndex& (0+255),w,b
 38381   003C46  6FC8               	movwf	??_writeEv& (0+255),b
 38382   003C48  6BC9               	clrf	(??_writeEv+1)& (0+255),b
 38383   003C4A  3BC8               	swapf	??_writeEv& (0+255),f,b
 38384   003C4C  3BC9               	swapf	(??_writeEv+1)& (0+255),f,b
 38385   003C4E  0EF0               	movlw	240
 38386   003C50  17C9               	andwf	(??_writeEv+1)& (0+255),f,b
 38387   003C52  51C8               	movf	??_writeEv& (0+255),w,b
 38388   003C54  0B0F               	andlw	15
 38389   003C56  13C9               	iorwf	(??_writeEv+1)& (0+255),f,b
 38390   003C58  0EF0               	movlw	240
 38391   003C5A  17C8               	andwf	??_writeEv& (0+255),f,b
 38392   003C5C  0E80               	movlw	128
 38393   003C5E  25C8               	addwf	??_writeEv& (0+255),w,b
 38394   003C60  6FCA               	movwf	(??_writeEv+2)& (0+255),b
 38395   003C62  0EEF               	movlw	239
 38396   003C64  21C9               	addwfc	(??_writeEv+1)& (0+255),w,b
 38397   003C66  6FCB               	movwf	(??_writeEv+3)& (0+255),b
 38398   003C68  C1CA  F0A4         	movff	??_writeEv+2,writeNVM@index
 38399   003C6C  C1CB  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38400   003C70  0100               	movlb	0	; () banked
 38401   003C72  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38402   003C74  C1CF  F0A7         	movff	writeEv@f,writeNVM@value
 38403   003C78  0E01               	movlw	1
 38404   003C7A  EC66  F05B         	call	_writeNVM
 38405                           
 38406                           ;../../VLCBlib_PIC/event_teach.c: 979:                     tableIndex = nextIdx;
 38407   003C7E  C1D1  F1D0         	movff	writeEv@nextIdx,writeEv@tableIndex
 38408                           
 38409                           ;../../VLCBlib_PIC/event_teach.c: 980:                     break;
 38410   003C82  D004               	goto	u18390
 38411   003C84                     l18558:
 38412                           
 38413                           ; BSR set to: 1
 38414                           ;../../VLCBlib_PIC/event_teach.c: 982:             }
 38415   003C84  2BD1               	incf	writeEv@nextIdx& (0+255),f,b
 38416   003C86                     l18560:
 38417                           
 38418                           ; BSR set to: 1
 38419   003C86  29D1               	incf	writeEv@nextIdx& (0+255),w,b
 38420   003C88  A4D8               	btfss	status,2,c
 38421   003C8A  D702               	goto	l18530
 38422   003C8C                     u18390:
 38423                           
 38424                           ;../../VLCBlib_PIC/event_teach.c: 983:             if (nextIdx >= 255) {
 38425   003C8C  0101               	movlb	1	; () banked
 38426   003C8E  29D1               	incf	writeEv@nextIdx& (0+255),w,b
 38427   003C90  A4D8               	btfss	status,2,c
 38428   003C92  D002               	goto	l18568
 38429                           
 38430                           ; BSR set to: 1
 38431                           ;../../VLCBlib_PIC/event_teach.c: 985:                 return CMDERR_TOO_MANY_EVENTS;
 38432   003C94  0E04               	movlw	4
 38433   003C96  0012               	return	
 38434   003C98                     l18568:
 38435                           
 38436                           ; BSR set to: 1
 38437                           ;../../VLCBlib_PIC/event_teach.c: 937:     while (evNum >= 10) {
 38438   003C98  0E0A               	movlw	10
 38439   003C9A  61C6               	cpfslt	writeEv@evNum& (0+255),b
 38440   003C9C  D6B0               	goto	l18506
 38441                           
 38442                           ; BSR set to: 1
 38443                           ;../../VLCBlib_PIC/event_teach.c: 990:     writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tableInd
      +                          ex+6 +evNum, evVal);
 38444   003C9E  51D0               	movf	writeEv@tableIndex& (0+255),w,b
 38445   003CA0  0D10               	mullw	16
 38446   003CA2  CFF3 F1C8          	movff	prodl,??_writeEv
 38447   003CA6  CFF4 F1C9          	movff	prodh,??_writeEv+1
 38448   003CAA  51C6               	movf	writeEv@evNum& (0+255),w,b
 38449   003CAC  27C8               	addwf	??_writeEv& (0+255),f,b
 38450   003CAE  0E00               	movlw	0
 38451   003CB0  23C9               	addwfc	(??_writeEv+1)& (0+255),f,b
 38452   003CB2  0E86               	movlw	134
 38453   003CB4  25C8               	addwf	??_writeEv& (0+255),w,b
 38454   003CB6  6FCA               	movwf	(??_writeEv+2)& (0+255),b
 38455   003CB8  0EEF               	movlw	239
 38456   003CBA  21C9               	addwfc	(??_writeEv+1)& (0+255),w,b
 38457   003CBC  6FCB               	movwf	(??_writeEv+3)& (0+255),b
 38458   003CBE  C1CA  F0A4         	movff	??_writeEv+2,writeNVM@index
 38459   003CC2  C1CB  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38460   003CC6  0100               	movlb	0	; () banked
 38461   003CC8  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38462   003CCA  C1C7  F0A7         	movff	writeEv@evVal,writeNVM@value
 38463   003CCE  0E01               	movlw	1
 38464   003CD0  EC66  F05B         	call	_writeNVM
 38465                           
 38466                           ;../../VLCBlib_PIC/event_teach.c: 992:     f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 0
      +                          xEF80 + 16*tableIndex+0);
 38467   003CD4  0101               	movlb	1	; () banked
 38468   003CD6  51D0               	movf	writeEv@tableIndex& (0+255),w,b
 38469   003CD8  6FC8               	movwf	??_writeEv& (0+255),b
 38470   003CDA  6BC9               	clrf	(??_writeEv+1)& (0+255),b
 38471   003CDC  3BC8               	swapf	??_writeEv& (0+255),f,b
 38472   003CDE  3BC9               	swapf	(??_writeEv+1)& (0+255),f,b
 38473   003CE0  0EF0               	movlw	240
 38474   003CE2  17C9               	andwf	(??_writeEv+1)& (0+255),f,b
 38475   003CE4  51C8               	movf	??_writeEv& (0+255),w,b
 38476   003CE6  0B0F               	andlw	15
 38477   003CE8  13C9               	iorwf	(??_writeEv+1)& (0+255),f,b
 38478   003CEA  0EF0               	movlw	240
 38479   003CEC  17C8               	andwf	??_writeEv& (0+255),f,b
 38480   003CEE  0E80               	movlw	128
 38481   003CF0  25C8               	addwf	??_writeEv& (0+255),w,b
 38482   003CF2  6FCA               	movwf	(??_writeEv+2)& (0+255),b
 38483   003CF4  0EEF               	movlw	239
 38484   003CF6  21C9               	addwfc	(??_writeEv+1)& (0+255),w,b
 38485   003CF8  6FCB               	movwf	(??_writeEv+3)& (0+255),b
 38486   003CFA  C1CA  F091         	movff	??_writeEv+2,readNVM@index
 38487   003CFE  C1CB  F092         	movff	??_writeEv+3,readNVM@index+1
 38488   003D02  0100               	movlb	0	; () banked
 38489   003D04  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38490   003D06  0E01               	movlw	1
 38491   003D08  ECDD  F058         	call	_readNVM
 38492   003D0C  0100               	movlb	0	; () banked
 38493   003D0E  5191               	movf	?_readNVM& (0+255),w,b
 38494   003D10  0101               	movlb	1	; () banked
 38495   003D12  6FCF               	movwf	writeEv@f& (0+255),b
 38496                           
 38497                           ; BSR set to: 1
 38498                           ;../../VLCBlib_PIC/event_teach.c: 993:     if (f.eVsUsed <= evNum) {
 38499   003D14  51CF               	movf	writeEv@f& (0+255),w,b
 38500   003D16  0B0F               	andlw	15
 38501   003D18  6FC8               	movwf	??_writeEv& (0+255),b
 38502   003D1A  51C8               	movf	??_writeEv& (0+255),w,b
 38503   003D1C  5DC6               	subwf	writeEv@evNum& (0+255),w,b
 38504   003D1E  A0D8               	btfss	status,0,c
 38505   003D20  D026               	goto	l18580
 38506                           
 38507                           ; BSR set to: 1
 38508                           ;../../VLCBlib_PIC/event_teach.c: 994:         f.eVsUsed = evNum+1U;
 38509   003D22  C1C6  F1C8         	movff	writeEv@evNum,??_writeEv
 38510   003D26  0E01               	movlw	1
 38511   003D28  27C8               	addwf	??_writeEv& (0+255),f,b
 38512   003D2A  51CF               	movf	writeEv@f& (0+255),w,b
 38513   003D2C  19C8               	xorwf	??_writeEv& (0+255),w,b
 38514   003D2E  0BF0               	andlw	-16
 38515   003D30  19C8               	xorwf	??_writeEv& (0+255),w,b
 38516   003D32  6FCF               	movwf	writeEv@f& (0+255),b
 38517                           
 38518                           ; BSR set to: 1
 38519                           ;../../VLCBlib_PIC/event_teach.c: 995:         writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tabl
      +                          eIndex+0, f.asByte);
 38520   003D34  51D0               	movf	writeEv@tableIndex& (0+255),w,b
 38521   003D36  6FC8               	movwf	??_writeEv& (0+255),b
 38522   003D38  6BC9               	clrf	(??_writeEv+1)& (0+255),b
 38523   003D3A  3BC8               	swapf	??_writeEv& (0+255),f,b
 38524   003D3C  3BC9               	swapf	(??_writeEv+1)& (0+255),f,b
 38525   003D3E  0EF0               	movlw	240
 38526   003D40  17C9               	andwf	(??_writeEv+1)& (0+255),f,b
 38527   003D42  51C8               	movf	??_writeEv& (0+255),w,b
 38528   003D44  0B0F               	andlw	15
 38529   003D46  13C9               	iorwf	(??_writeEv+1)& (0+255),f,b
 38530   003D48  0EF0               	movlw	240
 38531   003D4A  17C8               	andwf	??_writeEv& (0+255),f,b
 38532   003D4C  0E80               	movlw	128
 38533   003D4E  25C8               	addwf	??_writeEv& (0+255),w,b
 38534   003D50  6FCA               	movwf	(??_writeEv+2)& (0+255),b
 38535   003D52  0EEF               	movlw	239
 38536   003D54  21C9               	addwfc	(??_writeEv+1)& (0+255),w,b
 38537   003D56  6FCB               	movwf	(??_writeEv+3)& (0+255),b
 38538   003D58  C1CA  F0A4         	movff	??_writeEv+2,writeNVM@index
 38539   003D5C  C1CB  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38540   003D60  0100               	movlb	0	; () banked
 38541   003D62  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38542   003D64  C1CF  F0A7         	movff	writeEv@f,writeNVM@value
 38543   003D68  0E01               	movlw	1
 38544   003D6A  EC66  F05B         	call	_writeNVM
 38545   003D6E                     l18580:
 38546                           
 38547                           ;../../VLCBlib_PIC/event_teach.c: 998:     if (evVal == 0) {
 38548   003D6E  0101               	movlb	1	; () banked
 38549   003D70  51C7               	movf	writeEv@evVal& (0+255),w,b
 38550   003D72  A4D8               	btfss	status,2,c
 38551   003D74  D688               	goto	u18350
 38552                           
 38553                           ; BSR set to: 1
 38554                           ;../../VLCBlib_PIC/event_teach.c: 999:         checkRemoveTableEntry(startIndex);
 38555   003D76  51CC               	movf	writeEv@startIndex& (0+255),w,b
 38556   003D78  EC6C  F05C         	call	_checkRemoveTableEntry
 38557   003D7C  D684               	goto	u18350
 38558   003D7E                     __end_of_writeEv:
 38559                           	callstack 0
 38560                           
 38561 ;; *************** function _checkRemoveTableEntry *****************
 38562 ;; Defined at:
 38563 ;;		line 800 in file "../../VLCBlib_PIC/event_teach.c"
 38564 ;; Parameters:    Size  Location     Type
 38565 ;;  tableIndex      1    wreg     unsigned char 
 38566 ;; Auto vars:     Size  Location     Type
 38567 ;;  tableIndex      1   15[BANK1 ] unsigned char 
 38568 ;;  e               1   16[BANK1 ] unsigned char 
 38569 ;; Return value:  Size  Location     Type
 38570 ;;                  1    wreg      void 
 38571 ;; Registers used:
 38572 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38573 ;; Tracked objects:
 38574 ;;		On entry : 0/0
 38575 ;;		On exit  : 0/0
 38576 ;;		Unchanged: 0/0
 38577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38579 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38581 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38582 ;;Total ram usage:        2 bytes
 38583 ;; Hardware stack levels used: 1
 38584 ;; Hardware stack levels required when called: 19
 38585 ;; This function calls:
 38586 ;;		_getEVs
 38587 ;;		_removeTableEntry
 38588 ;;		_validStart
 38589 ;; This function is called by:
 38590 ;;		_deleteActionRange
 38591 ;;		_deleteHappeningRange
 38592 ;;		_writeEv
 38593 ;; This function uses a non-reentrant model
 38594 ;;
 38595                           
 38596                           	psect	text161
 38597   00B8D8                     __ptext161:
 38598                           	callstack 0
 38599   00B8D8                     _checkRemoveTableEntry:
 38600                           	callstack 5
 38601                           
 38602                           ;incstack = 0
 38603                           ;checkRemoveTableEntry@tableIndex stored from wreg
 38604   00B8D8  0101               	movlb	1	; () banked
 38605   00B8DA  6FC4               	movwf	checkRemoveTableEntry@tableIndex& (0+255),b
 38606                           
 38607                           ;../../VLCBlib_PIC/event_teach.c: 801:     uint8_t e;;../../VLCBlib_PIC/event_teach.c: 8
      +                          03:     if ( validStart(tableIndex)) {
 38608   00B8DC  0101               	movlb	1	; () banked
 38609   00B8DE  51C4               	movf	checkRemoveTableEntry@tableIndex& (0+255),w,b
 38610   00B8E0  EC3F  F05B         	call	_validStart
 38611   00B8E4  0900               	iorlw	0
 38612   00B8E6  B4D8               	btfsc	status,2,c
 38613   00B8E8  0012               	return	
 38614                           
 38615                           ;../../VLCBlib_PIC/event_teach.c: 804:         if (getEVs(tableIndex)) {
 38616   00B8EA  0101               	movlb	1	; () banked
 38617   00B8EC  51C4               	movf	checkRemoveTableEntry@tableIndex& (0+255),w,b
 38618   00B8EE  EC47  F041         	call	_getEVs
 38619   00B8F2  0900               	iorlw	0
 38620   00B8F4  A4D8               	btfss	status,2,c
 38621   00B8F6  0012               	return	
 38622                           
 38623                           ;../../VLCBlib_PIC/event_teach.c: 807:         for (e=0; e<20; e++) {
 38624   00B8F8  0E00               	movlw	0
 38625   00B8FA  0101               	movlb	1	; () banked
 38626   00B8FC  6FC5               	movwf	checkRemoveTableEntry@e& (0+255),b
 38627   00B8FE                     l18418:
 38628                           
 38629                           ; BSR set to: 1
 38630                           ;../../VLCBlib_PIC/event_teach.c: 808:             if (evs[e] != 0) {
 38631   00B8FE  0E00               	movlw	low _evs
 38632   00B900  25C5               	addwf	checkRemoveTableEntry@e& (0+255),w,b
 38633   00B902  6ED9               	movwf	fsr2l,c
 38634   00B904  6ADA               	clrf	fsr2h,c
 38635   00B906  0E02               	movlw	high _evs
 38636   00B908  22DA               	addwfc	fsr2h,f,c
 38637   00B90A  50DF               	movf	indf2,w,c
 38638   00B90C  A4D8               	btfss	status,2,c
 38639   00B90E  0012               	return	
 38640                           
 38641                           ; BSR set to: 1
 38642                           ;../../VLCBlib_PIC/event_teach.c: 811:         }
 38643   00B910  2BC5               	incf	checkRemoveTableEntry@e& (0+255),f,b
 38644                           
 38645                           ; BSR set to: 1
 38646   00B912  0E13               	movlw	19
 38647   00B914  65C5               	cpfsgt	checkRemoveTableEntry@e& (0+255),b
 38648   00B916  D7F3               	goto	l18418
 38649                           
 38650                           ; BSR set to: 1
 38651                           ;../../VLCBlib_PIC/event_teach.c: 812:         removeTableEntry(tableIndex);
 38652   00B918  51C4               	movf	checkRemoveTableEntry@tableIndex& (0+255),w,b
 38653   00B91A  EC2D  F03F         	call	_removeTableEntry
 38654   00B91E  0012               	return		;funcret
 38655   00B920                     __end_of_checkRemoveTableEntry:
 38656                           	callstack 0
 38657                           
 38658 ;; *************** function _removeTableEntry *****************
 38659 ;; Defined at:
 38660 ;;		line 761 in file "../../VLCBlib_PIC/event_teach.c"
 38661 ;; Parameters:    Size  Location     Type
 38662 ;;  tableIndex      1    wreg     unsigned char 
 38663 ;; Auto vars:     Size  Location     Type
 38664 ;;  tableIndex      1   14[BANK1 ] unsigned char 
 38665 ;;  f               1   13[BANK1 ] struct .
 38666 ;; Return value:  Size  Location     Type
 38667 ;;                  1    wreg      unsigned char 
 38668 ;; Registers used:
 38669 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38670 ;; Tracked objects:
 38671 ;;		On entry : 0/0
 38672 ;;		On exit  : 0/0
 38673 ;;		Unchanged: 0/0
 38674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38676 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38677 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38678 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38679 ;;Total ram usage:        6 bytes
 38680 ;; Hardware stack levels used: 1
 38681 ;; Hardware stack levels required when called: 18
 38682 ;; This function calls:
 38683 ;;		_flushFlashBlock
 38684 ;;		_readNVM
 38685 ;;		_rebuildHashtable
 38686 ;;		_validStart
 38687 ;;		_writeNVM
 38688 ;; This function is called by:
 38689 ;;		_removeEvent
 38690 ;;		_checkRemoveTableEntry
 38691 ;; This function uses a non-reentrant model
 38692 ;;
 38693                           
 38694                           	psect	text162
 38695   007E5A                     __ptext162:
 38696                           	callstack 0
 38697   007E5A                     _removeTableEntry:
 38698                           	callstack 8
 38699                           
 38700                           ;incstack = 0
 38701                           ;removeTableEntry@tableIndex stored from wreg
 38702   007E5A  0101               	movlb	1	; () banked
 38703   007E5C  6FC3               	movwf	removeTableEntry@tableIndex& (0+255),b
 38704                           
 38705                           ;../../VLCBlib_PIC/event_teach.c: 762:     EventTableFlags f;;../../VLCBlib_PIC/event_te
      +                          ach.c: 767:     if (validStart(tableIndex)) {
 38706   007E5E  0101               	movlb	1	; () banked
 38707   007E60  51C3               	movf	removeTableEntry@tableIndex& (0+255),w,b
 38708   007E62  EC3F  F05B         	call	_validStart
 38709   007E66  0900               	iorlw	0
 38710   007E68  B4D8               	btfsc	status,2,c
 38711   007E6A  D082               	goto	l18402
 38712                           
 38713                           ;../../VLCBlib_PIC/event_teach.c: 769:         writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tabl
      +                          eIndex+0, 0xff);
 38714   007E6C  0101               	movlb	1	; () banked
 38715   007E6E  51C3               	movf	removeTableEntry@tableIndex& (0+255),w,b
 38716   007E70  6FBE               	movwf	??_removeTableEntry& (0+255),b
 38717   007E72  6BBF               	clrf	(??_removeTableEntry+1)& (0+255),b
 38718   007E74  3BBE               	swapf	??_removeTableEntry& (0+255),f,b
 38719   007E76  3BBF               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 38720   007E78  0EF0               	movlw	240
 38721   007E7A  17BF               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 38722   007E7C  51BE               	movf	??_removeTableEntry& (0+255),w,b
 38723   007E7E  0B0F               	andlw	15
 38724   007E80  13BF               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 38725   007E82  0EF0               	movlw	240
 38726   007E84  17BE               	andwf	??_removeTableEntry& (0+255),f,b
 38727   007E86  0E80               	movlw	128
 38728   007E88  25BE               	addwf	??_removeTableEntry& (0+255),w,b
 38729   007E8A  6FC0               	movwf	(??_removeTableEntry+2)& (0+255),b
 38730   007E8C  0EEF               	movlw	239
 38731   007E8E  21BF               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 38732   007E90  6FC1               	movwf	(??_removeTableEntry+3)& (0+255),b
 38733   007E92  C1C0  F0A4         	movff	??_removeTableEntry+2,writeNVM@index
 38734   007E96  C1C1  F0A5         	movff	??_removeTableEntry+3,writeNVM@index+1
 38735   007E9A  0100               	movlb	0	; () banked
 38736   007E9C  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38737   007E9E  0EFF               	movlw	255
 38738   007EA0  6FA7               	movwf	writeNVM@value& (0+255),b
 38739   007EA2  0E01               	movlw	1
 38740   007EA4  EC66  F05B         	call	_writeNVM
 38741                           
 38742                           ;../../VLCBlib_PIC/event_teach.c: 771:         f.asByte = 0xff;
 38743   007EA8  0101               	movlb	1	; () banked
 38744   007EAA  69C2               	setf	removeTableEntry@f& (0+255),b
 38745                           
 38746                           ;../../VLCBlib_PIC/event_teach.c: 772:         while (f.continued) {
 38747   007EAC  D05A               	goto	l18396
 38748   007EAE                     l18384:
 38749                           
 38750                           ; BSR set to: 1
 38751                           ;../../VLCBlib_PIC/event_teach.c: 773:             tableIndex = (uint8_t)readNVM(FLASH_N
      +                          VM_TYPE, 0xEF80 + 16*tableIndex+1);
 38752   007EAE  51C3               	movf	removeTableEntry@tableIndex& (0+255),w,b
 38753   007EB0  0D10               	mullw	16
 38754   007EB2  CFF3 F1BE          	movff	prodl,??_removeTableEntry
 38755   007EB6  CFF4 F1BF          	movff	prodh,??_removeTableEntry+1
 38756   007EBA  0E81               	movlw	129
 38757   007EBC  25BE               	addwf	??_removeTableEntry& (0+255),w,b
 38758   007EBE  6FC0               	movwf	(??_removeTableEntry+2)& (0+255),b
 38759   007EC0  0EEF               	movlw	239
 38760   007EC2  21BF               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 38761   007EC4  6FC1               	movwf	(??_removeTableEntry+3)& (0+255),b
 38762   007EC6  C1C0  F091         	movff	??_removeTableEntry+2,readNVM@index
 38763   007ECA  C1C1  F092         	movff	??_removeTableEntry+3,readNVM@index+1
 38764   007ECE  0100               	movlb	0	; () banked
 38765   007ED0  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38766   007ED2  0E01               	movlw	1
 38767   007ED4  ECDD  F058         	call	_readNVM
 38768   007ED8  0100               	movlb	0	; () banked
 38769   007EDA  5191               	movf	?_readNVM& (0+255),w,b
 38770   007EDC  0101               	movlb	1	; () banked
 38771   007EDE  6FC3               	movwf	removeTableEntry@tableIndex& (0+255),b
 38772                           
 38773                           ; BSR set to: 1
 38774                           ;../../VLCBlib_PIC/event_teach.c: 774:             f.asByte = (uint8_t)readNVM(FLASH_NVM
      +                          _TYPE, 0xEF80 + 16*tableIndex+0);
 38775   007EE0  51C3               	movf	removeTableEntry@tableIndex& (0+255),w,b
 38776   007EE2  6FBE               	movwf	??_removeTableEntry& (0+255),b
 38777   007EE4  6BBF               	clrf	(??_removeTableEntry+1)& (0+255),b
 38778   007EE6  3BBE               	swapf	??_removeTableEntry& (0+255),f,b
 38779   007EE8  3BBF               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 38780   007EEA  0EF0               	movlw	240
 38781   007EEC  17BF               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 38782   007EEE  51BE               	movf	??_removeTableEntry& (0+255),w,b
 38783   007EF0  0B0F               	andlw	15
 38784   007EF2  13BF               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 38785   007EF4  0EF0               	movlw	240
 38786   007EF6  17BE               	andwf	??_removeTableEntry& (0+255),f,b
 38787   007EF8  0E80               	movlw	128
 38788   007EFA  25BE               	addwf	??_removeTableEntry& (0+255),w,b
 38789   007EFC  6FC0               	movwf	(??_removeTableEntry+2)& (0+255),b
 38790   007EFE  0EEF               	movlw	239
 38791   007F00  21BF               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 38792   007F02  6FC1               	movwf	(??_removeTableEntry+3)& (0+255),b
 38793   007F04  C1C0  F091         	movff	??_removeTableEntry+2,readNVM@index
 38794   007F08  C1C1  F092         	movff	??_removeTableEntry+3,readNVM@index+1
 38795   007F0C  0100               	movlb	0	; () banked
 38796   007F0E  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38797   007F10  0E01               	movlw	1
 38798   007F12  ECDD  F058         	call	_readNVM
 38799   007F16  0100               	movlb	0	; () banked
 38800   007F18  5191               	movf	?_readNVM& (0+255),w,b
 38801   007F1A  0101               	movlb	1	; () banked
 38802   007F1C  6FC2               	movwf	removeTableEntry@f& (0+255),b
 38803                           
 38804                           ; BSR set to: 1
 38805                           ;../../VLCBlib_PIC/event_teach.c: 776:             if (tableIndex >= 255) return CMDERR_
      +                          INV_EV_IDX;
 38806   007F1E  29C3               	incf	removeTableEntry@tableIndex& (0+255),w,b
 38807   007F20  A4D8               	btfss	status,2,c
 38808   007F22  D002               	goto	l18394
 38809                           
 38810                           ; BSR set to: 1
 38811   007F24  0E06               	movlw	6
 38812   007F26  0012               	return	
 38813   007F28                     l18394:
 38814                           
 38815                           ; BSR set to: 1
 38816                           ;../../VLCBlib_PIC/event_teach.c: 782:             writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*
      +                          tableIndex+0, 0xff);
 38817   007F28  51C3               	movf	removeTableEntry@tableIndex& (0+255),w,b
 38818   007F2A  6FBE               	movwf	??_removeTableEntry& (0+255),b
 38819   007F2C  6BBF               	clrf	(??_removeTableEntry+1)& (0+255),b
 38820   007F2E  3BBE               	swapf	??_removeTableEntry& (0+255),f,b
 38821   007F30  3BBF               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 38822   007F32  0EF0               	movlw	240
 38823   007F34  17BF               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 38824   007F36  51BE               	movf	??_removeTableEntry& (0+255),w,b
 38825   007F38  0B0F               	andlw	15
 38826   007F3A  13BF               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 38827   007F3C  0EF0               	movlw	240
 38828   007F3E  17BE               	andwf	??_removeTableEntry& (0+255),f,b
 38829   007F40  0E80               	movlw	128
 38830   007F42  25BE               	addwf	??_removeTableEntry& (0+255),w,b
 38831   007F44  6FC0               	movwf	(??_removeTableEntry+2)& (0+255),b
 38832   007F46  0EEF               	movlw	239
 38833   007F48  21BF               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 38834   007F4A  6FC1               	movwf	(??_removeTableEntry+3)& (0+255),b
 38835   007F4C  C1C0  F0A4         	movff	??_removeTableEntry+2,writeNVM@index
 38836   007F50  C1C1  F0A5         	movff	??_removeTableEntry+3,writeNVM@index+1
 38837   007F54  0100               	movlb	0	; () banked
 38838   007F56  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38839   007F58  0EFF               	movlw	255
 38840   007F5A  6FA7               	movwf	writeNVM@value& (0+255),b
 38841   007F5C  0E01               	movlw	1
 38842   007F5E  EC66  F05B         	call	_writeNVM
 38843   007F62                     l18396:
 38844                           
 38845                           ;../../VLCBlib_PIC/event_teach.c: 772:         while (f.continued) {
 38846   007F62  0101               	movlb	1	; () banked
 38847   007F64  B9C2               	btfsc	removeTableEntry@f& (0+255),4,b
 38848   007F66  D7A3               	goto	l18384
 38849                           
 38850                           ; BSR set to: 1
 38851                           ;../../VLCBlib_PIC/event_teach.c: 785:         flushFlashBlock();
 38852   007F68  EC1A  F053         	call	_flushFlashBlock	;wreg free
 38853                           
 38854                           ;../../VLCBlib_PIC/event_teach.c: 788:         rebuildHashtable();
 38855   007F6C  EC9E  F03E         	call	_rebuildHashtable	;wreg free
 38856   007F70                     l18402:
 38857                           
 38858                           ;../../VLCBlib_PIC/event_teach.c: 791:     return 0;
 38859   007F70  0E00               	movlw	0
 38860   007F72  0012               	return		;funcret
 38861   007F74                     __end_of_removeTableEntry:
 38862                           	callstack 0
 38863                           
 38864 ;; *************** function _rebuildHashtable *****************
 38865 ;; Defined at:
 38866 ;;		line 1220 in file "../../VLCBlib_PIC/event_teach.c"
 38867 ;; Parameters:    Size  Location     Type
 38868 ;;		None
 38869 ;; Auto vars:     Size  Location     Type
 38870 ;;  ev              2    3[BANK1 ] short 
 38871 ;;  a               2    0        int 
 38872 ;;  tableIndex      1    8[BANK1 ] unsigned char 
 38873 ;;  chainIdx        1    7[BANK1 ] unsigned char 
 38874 ;;  happening       1    6[BANK1 ] unsigned char 
 38875 ;;  hash            1    5[BANK1 ] unsigned char 
 38876 ;; Return value:  Size  Location     Type
 38877 ;;                  1    wreg      void 
 38878 ;; Registers used:
 38879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38880 ;; Tracked objects:
 38881 ;;		On entry : 0/0
 38882 ;;		On exit  : 0/0
 38883 ;;		Unchanged: 0/0
 38884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38886 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38887 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38888 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38889 ;;Total ram usage:        9 bytes
 38890 ;; Hardware stack levels used: 1
 38891 ;; Hardware stack levels required when called: 16
 38892 ;; This function calls:
 38893 ;;		_getEN
 38894 ;;		_getEv
 38895 ;;		_getHash
 38896 ;;		_getNN
 38897 ;;		_validStart
 38898 ;; This function is called by:
 38899 ;;		_deleteHappeningRange
 38900 ;;		_teachPowerUp
 38901 ;;		_clearAllEvents
 38902 ;;		_removeTableEntry
 38903 ;;		_addEvent
 38904 ;; This function uses a non-reentrant model
 38905 ;;
 38906                           
 38907                           	psect	text163
 38908   007D3C                     __ptext163:
 38909                           	callstack 0
 38910   007D3C                     _rebuildHashtable:
 38911                           	callstack 12
 38912                           
 38913                           ;../../VLCBlib_PIC/event_teach.c: 1222:     uint8_t hash;;../../VLCBlib_PIC/event_teach.
      +                          c: 1223:     uint8_t chainIdx;;../../VLCBlib_PIC/event_teach.c: 1224:     uint8_t tableI
      +                          ndex;;../../VLCBlib_PIC/event_teach.c: 1225:     int a;;../../VLCBlib_PIC/event_teach.c:
      +                           1228:     Happening happening;;../../VLCBlib_PIC/event_teach.c: 1229:     for (happenin
      +                          g=0; happening<=71; happening++) {
 38914                           
 38915                           ;incstack = 0
 38916   007D3C  0E00               	movlw	0
 38917   007D3E  0101               	movlb	1	; () banked
 38918   007D40  6FBB               	movwf	rebuildHashtable@happening& (0+255),b
 38919   007D42                     l18254:
 38920                           
 38921                           ; BSR set to: 1
 38922                           ;../../VLCBlib_PIC/event_teach.c: 1230:         happening2Event[happening] = 0xff;
 38923   007D42  0E00               	movlw	low _happening2Event
 38924   007D44  25BB               	addwf	rebuildHashtable@happening& (0+255),w,b
 38925   007D46  6ED9               	movwf	fsr2l,c
 38926   007D48  6ADA               	clrf	fsr2h,c
 38927   007D4A  0E03               	movlw	high _happening2Event
 38928   007D4C  22DA               	addwfc	fsr2h,f,c
 38929   007D4E  0EFF               	movlw	255
 38930   007D50  6EDF               	movwf	indf2,c
 38931                           
 38932                           ; BSR set to: 1
 38933                           ;../../VLCBlib_PIC/event_teach.c: 1231:     }
 38934   007D52  2BBB               	incf	rebuildHashtable@happening& (0+255),f,b
 38935                           
 38936                           ; BSR set to: 1
 38937   007D54  0E47               	movlw	71
 38938   007D56  65BB               	cpfsgt	rebuildHashtable@happening& (0+255),b
 38939   007D58  D7F4               	goto	l18254
 38940                           
 38941                           ; BSR set to: 1
 38942                           ;../../VLCBlib_PIC/event_teach.c: 1233:     for (hash=0; hash<32; hash++) {
 38943   007D5A  0E00               	movlw	0
 38944   007D5C  6FBA               	movwf	rebuildHashtable@hash& (0+255),b
 38945   007D5E                     l18266:
 38946                           
 38947                           ; BSR set to: 1
 38948                           ;../../VLCBlib_PIC/event_teach.c: 1234:         for (chainIdx=0; chainIdx < 20; chainIdx
      +                          ++) {
 38949   007D5E  0E00               	movlw	0
 38950   007D60  6FBC               	movwf	rebuildHashtable@chainIdx& (0+255),b
 38951   007D62                     l18272:
 38952                           
 38953                           ; BSR set to: 1
 38954                           ;../../VLCBlib_PIC/event_teach.c: 1235:             eventChains[hash][chainIdx] = 0xff;
 38955   007D62  51BA               	movf	rebuildHashtable@hash& (0+255),w,b
 38956   007D64  0D14               	mullw	20
 38957   007D66  0E80               	movlw	low _eventChains
 38958   007D68  24F3               	addwf	243,w,c
 38959   007D6A  6FB5               	movwf	??_rebuildHashtable& (0+255),b
 38960   007D6C  0E05               	movlw	high _eventChains
 38961   007D6E  20F4               	addwfc	prodh,w,c
 38962   007D70  6FB6               	movwf	(??_rebuildHashtable+1)& (0+255),b
 38963   007D72  51BC               	movf	rebuildHashtable@chainIdx& (0+255),w,b
 38964   007D74  25B5               	addwf	??_rebuildHashtable& (0+255),w,b
 38965   007D76  6ED9               	movwf	fsr2l,c
 38966   007D78  0E00               	movlw	0
 38967   007D7A  21B6               	addwfc	(??_rebuildHashtable+1)& (0+255),w,b
 38968   007D7C  6EDA               	movwf	fsr2h,c
 38969   007D7E  0EFF               	movlw	255
 38970   007D80  6EDF               	movwf	indf2,c
 38971                           
 38972                           ; BSR set to: 1
 38973                           ;../../VLCBlib_PIC/event_teach.c: 1236:         }
 38974   007D82  2BBC               	incf	rebuildHashtable@chainIdx& (0+255),f,b
 38975                           
 38976                           ; BSR set to: 1
 38977   007D84  0E13               	movlw	19
 38978   007D86  65BC               	cpfsgt	rebuildHashtable@chainIdx& (0+255),b
 38979   007D88  D7EC               	goto	l18272
 38980                           
 38981                           ; BSR set to: 1
 38982                           ;../../VLCBlib_PIC/event_teach.c: 1237:     }
 38983   007D8A  2BBA               	incf	rebuildHashtable@hash& (0+255),f,b
 38984                           
 38985                           ; BSR set to: 1
 38986   007D8C  0E1F               	movlw	31
 38987   007D8E  65BA               	cpfsgt	rebuildHashtable@hash& (0+255),b
 38988   007D90  D7E6               	goto	l18266
 38989                           
 38990                           ; BSR set to: 1
 38991                           ;../../VLCBlib_PIC/event_teach.c: 1240:     for (tableIndex=0; tableIndex<255; tableInde
      +                          x++) {
 38992   007D92  0E00               	movlw	0
 38993   007D94  6FBD               	movwf	rebuildHashtable@tableIndex& (0+255),b
 38994   007D96                     l18288:
 38995                           
 38996                           ; BSR set to: 1
 38997                           ;../../VLCBlib_PIC/event_teach.c: 1241:         if (validStart(tableIndex)) {
 38998   007D96  51BD               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 38999   007D98  EC3F  F05B         	call	_validStart
 39000   007D9C  0900               	iorlw	0
 39001   007D9E  B4D8               	btfsc	status,2,c
 39002   007DA0  D056               	goto	u18080
 39003                           
 39004                           ;../../VLCBlib_PIC/event_teach.c: 1242:             int16_t ev;;../../VLCBlib_PIC/event_
      +                          teach.c: 1257:             ev = getEv(tableIndex, 0);
 39005   007DA2  0E00               	movlw	0
 39006   007DA4  0100               	movlb	0	; () banked
 39007   007DA6  6F9D               	movwf	getEv@evNum& (0+255),b
 39008   007DA8  0101               	movlb	1	; () banked
 39009   007DAA  51BD               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 39010   007DAC  EC15  F03C         	call	_getEv
 39011   007DB0  C09D  F1B8         	movff	?_getEv,rebuildHashtable@ev
 39012   007DB4  C09E  F1B9         	movff	?_getEv+1,rebuildHashtable@ev+1
 39013                           
 39014                           ;../../VLCBlib_PIC/event_teach.c: 1258:             if (ev < 0) continue;
 39015   007DB8  0101               	movlb	1	; () banked
 39016   007DBA  BFB9               	btfsc	(rebuildHashtable@ev+1)& (0+255),7,b
 39017   007DBC  D048               	goto	u18080
 39018                           
 39019                           ; BSR set to: 1
 39020                           ;../../VLCBlib_PIC/event_teach.c: 1259:             happening = (uint8_t) ev;
 39021   007DBE  C1B8  F1BB         	movff	rebuildHashtable@ev,rebuildHashtable@happening
 39022                           
 39023                           ; BSR set to: 1
 39024                           ;../../VLCBlib_PIC/event_teach.c: 1261:             if (happening<= 71) {
 39025   007DC2  0E48               	movlw	72
 39026   007DC4  61BB               	cpfslt	rebuildHashtable@happening& (0+255),b
 39027   007DC6  D008               	goto	l18300
 39028                           
 39029                           ; BSR set to: 1
 39030                           ;../../VLCBlib_PIC/event_teach.c: 1262:                 happening2Event[happening] = tab
      +                          leIndex;
 39031   007DC8  0E00               	movlw	low _happening2Event
 39032   007DCA  25BB               	addwf	rebuildHashtable@happening& (0+255),w,b
 39033   007DCC  6ED9               	movwf	fsr2l,c
 39034   007DCE  6ADA               	clrf	fsr2h,c
 39035   007DD0  0E03               	movlw	high _happening2Event
 39036   007DD2  22DA               	addwfc	fsr2h,f,c
 39037   007DD4  C1BD  FFDF         	movff	rebuildHashtable@tableIndex,indf2
 39038   007DD8                     l18300:
 39039                           
 39040                           ; BSR set to: 1
 39041                           ;../../VLCBlib_PIC/event_teach.c: 1265:             hash = getHash(getNN(tableIndex), ge
      +                          tEN(tableIndex));
 39042   007DD8  51BD               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 39043   007DDA  EC3F  F049         	call	_getNN
 39044   007DDE  C097  F0A3         	movff	?_getNN,getHash@nn
 39045   007DE2  C098  F0A4         	movff	?_getNN+1,getHash@nn+1
 39046   007DE6  0101               	movlb	1	; () banked
 39047   007DE8  51BD               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 39048   007DEA  EC17  F055         	call	_getEN
 39049   007DEE  C097  F0A5         	movff	?_getEN,getHash@en
 39050   007DF2  C098  F0A6         	movff	?_getEN+1,getHash@en+1
 39051   007DF6  ECD1  F060         	call	_getHash	;wreg free
 39052   007DFA  0101               	movlb	1	; () banked
 39053   007DFC  6FBA               	movwf	rebuildHashtable@hash& (0+255),b
 39054                           
 39055                           ; BSR set to: 1
 39056                           ;../../VLCBlib_PIC/event_teach.c: 1267:             for (chainIdx=0; chainIdx<20; chainI
      +                          dx++) {
 39057   007DFE  0E00               	movlw	0
 39058   007E00  6FBC               	movwf	rebuildHashtable@chainIdx& (0+255),b
 39059   007E02                     l18308:
 39060                           
 39061                           ; BSR set to: 1
 39062                           ;../../VLCBlib_PIC/event_teach.c: 1268:                 if (eventChains[hash][chainIdx] 
      +                          == 0xff) {
 39063   007E02  51BA               	movf	rebuildHashtable@hash& (0+255),w,b
 39064   007E04  0D14               	mullw	20
 39065   007E06  0E80               	movlw	low _eventChains
 39066   007E08  24F3               	addwf	243,w,c
 39067   007E0A  6FB5               	movwf	??_rebuildHashtable& (0+255),b
 39068   007E0C  0E05               	movlw	high _eventChains
 39069   007E0E  20F4               	addwfc	prodh,w,c
 39070   007E10  6FB6               	movwf	(??_rebuildHashtable+1)& (0+255),b
 39071   007E12  51BC               	movf	rebuildHashtable@chainIdx& (0+255),w,b
 39072   007E14  25B5               	addwf	??_rebuildHashtable& (0+255),w,b
 39073   007E16  6ED9               	movwf	fsr2l,c
 39074   007E18  0E00               	movlw	0
 39075   007E1A  21B6               	addwfc	(??_rebuildHashtable+1)& (0+255),w,b
 39076   007E1C  6EDA               	movwf	fsr2h,c
 39077   007E1E  28DE               	incf	postinc2,w,c
 39078   007E20  A4D8               	btfss	status,2,c
 39079   007E22  D011               	goto	l18312
 39080                           
 39081                           ; BSR set to: 1
 39082                           ;../../VLCBlib_PIC/event_teach.c: 1270:                     eventChains[hash][chainIdx] 
      +                          = tableIndex;
 39083   007E24  51BA               	movf	rebuildHashtable@hash& (0+255),w,b
 39084   007E26  0D14               	mullw	20
 39085   007E28  0E80               	movlw	low _eventChains
 39086   007E2A  24F3               	addwf	243,w,c
 39087   007E2C  6FB5               	movwf	??_rebuildHashtable& (0+255),b
 39088   007E2E  0E05               	movlw	high _eventChains
 39089   007E30  20F4               	addwfc	prodh,w,c
 39090   007E32  6FB6               	movwf	(??_rebuildHashtable+1)& (0+255),b
 39091   007E34  51BC               	movf	rebuildHashtable@chainIdx& (0+255),w,b
 39092   007E36  25B5               	addwf	??_rebuildHashtable& (0+255),w,b
 39093   007E38  6ED9               	movwf	fsr2l,c
 39094   007E3A  0E00               	movlw	0
 39095   007E3C  21B6               	addwfc	(??_rebuildHashtable+1)& (0+255),w,b
 39096   007E3E  6EDA               	movwf	fsr2h,c
 39097   007E40  C1BD  FFDF         	movff	rebuildHashtable@tableIndex,indf2
 39098                           
 39099                           ;../../VLCBlib_PIC/event_teach.c: 1271:                     break;
 39100   007E44  D004               	goto	u18080
 39101   007E46                     l18312:
 39102                           
 39103                           ; BSR set to: 1
 39104                           ;../../VLCBlib_PIC/event_teach.c: 1273:             }
 39105   007E46  2BBC               	incf	rebuildHashtable@chainIdx& (0+255),f,b
 39106                           
 39107                           ; BSR set to: 1
 39108   007E48  0E13               	movlw	19
 39109   007E4A  65BC               	cpfsgt	rebuildHashtable@chainIdx& (0+255),b
 39110   007E4C  D7DA               	goto	l18308
 39111   007E4E                     u18080:
 39112   007E4E  0101               	movlb	1	; () banked
 39113   007E50  2BBD               	incf	rebuildHashtable@tableIndex& (0+255),f,b
 39114                           
 39115                           ; BSR set to: 1
 39116   007E52  29BD               	incf	rebuildHashtable@tableIndex& (0+255),w,b
 39117   007E54  B4D8               	btfsc	status,2,c
 39118   007E56  0012               	return	
 39119   007E58  D79E               	goto	l18288
 39120   007E5A                     __end_of_rebuildHashtable:
 39121                           	callstack 0
 39122                           
 39123 ;; *************** function _getEv *****************
 39124 ;; Defined at:
 39125 ;;		line 1011 in file "../../VLCBlib_PIC/event_teach.c"
 39126 ;; Parameters:    Size  Location     Type
 39127 ;;  tableIndex      1    wreg     unsigned char 
 39128 ;;  evNum           1   61[BANK0 ] unsigned char 
 39129 ;; Auto vars:     Size  Location     Type
 39130 ;;  tableIndex      1   69[BANK0 ] unsigned char 
 39131 ;;  f               1   68[BANK0 ] struct .
 39132 ;; Return value:  Size  Location     Type
 39133 ;;                  2   61[BANK0 ] short 
 39134 ;; Registers used:
 39135 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39136 ;; Tracked objects:
 39137 ;;		On entry : 0/0
 39138 ;;		On exit  : 0/0
 39139 ;;		Unchanged: 0/0
 39140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39141 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39142 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39143 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39144 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39145 ;;Total ram usage:        9 bytes
 39146 ;; Hardware stack levels used: 1
 39147 ;; Hardware stack levels required when called: 15
 39148 ;; This function calls:
 39149 ;;		_readNVM
 39150 ;;		_validStart
 39151 ;; This function is called by:
 39152 ;;		_ackEventProcessMessage
 39153 ;;		_producerProcessMessage
 39154 ;;		_doReval
 39155 ;;		_doReqev
 39156 ;;		_reqevCallback
 39157 ;;		_rebuildHashtable
 39158 ;; This function uses a non-reentrant model
 39159 ;;
 39160                           
 39161                           	psect	text164
 39162   00782A                     __ptext164:
 39163                           	callstack 0
 39164   00782A                     _getEv:
 39165                           	callstack 12
 39166                           
 39167                           ; BSR set to: 1
 39168                           ;incstack = 0
 39169                           ;getEv@tableIndex stored from wreg
 39170   00782A  0100               	movlb	0	; () banked
 39171   00782C  6FA5               	movwf	getEv@tableIndex& (0+255),b
 39172                           
 39173                           ;../../VLCBlib_PIC/event_teach.c: 1012:     EventTableFlags f;;../../VLCBlib_PIC/event_t
      +                          each.c: 1013:     if ( ! validStart(tableIndex)) {
 39174   00782E  0100               	movlb	0	; () banked
 39175   007830  51A5               	movf	getEv@tableIndex& (0+255),w,b
 39176   007832  EC3F  F05B         	call	_validStart
 39177   007836  0900               	iorlw	0
 39178   007838  A4D8               	btfss	status,2,c
 39179   00783A  D006               	goto	l18096
 39180   00783C                     u17840:
 39181                           
 39182                           ;../../VLCBlib_PIC/event_teach.c: 1015:         return -CMDERR_INVALID_EVENT;
 39183   00783C  0EFF               	movlw	255
 39184   00783E  0100               	movlb	0	; () banked
 39185   007840  6F9E               	movwf	(?_getEv+1)& (0+255),b
 39186   007842  0EF9               	movlw	249
 39187   007844  6F9D               	movwf	?_getEv& (0+255),b
 39188   007846  0012               	return	
 39189   007848                     l18096:
 39190                           
 39191                           ;../../VLCBlib_PIC/event_teach.c: 1017:     if (evNum >= 20) {
 39192   007848  0E13               	movlw	19
 39193   00784A  0100               	movlb	0	; () banked
 39194   00784C  659D               	cpfsgt	getEv@evNum& (0+255),b
 39195   00784E  D005               	goto	l18102
 39196                           
 39197                           ; BSR set to: 0
 39198                           ;../../VLCBlib_PIC/event_teach.c: 1018:         return -CMDERR_INV_EV_IDX;
 39199   007850  0EFF               	movlw	255
 39200   007852  6F9E               	movwf	(?_getEv+1)& (0+255),b
 39201   007854  0EFA               	movlw	250
 39202   007856  6F9D               	movwf	?_getEv& (0+255),b
 39203   007858  0012               	return	
 39204   00785A                     l18102:
 39205                           
 39206                           ; BSR set to: 0
 39207                           ;../../VLCBlib_PIC/event_teach.c: 1020:     f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*tableIndex+0);
 39208   00785A  51A5               	movf	getEv@tableIndex& (0+255),w,b
 39209   00785C  6F9F               	movwf	??_getEv& (0+255),b
 39210   00785E  6BA0               	clrf	(??_getEv+1)& (0+255),b
 39211   007860  3B9F               	swapf	??_getEv& (0+255),f,b
 39212   007862  3BA0               	swapf	(??_getEv+1)& (0+255),f,b
 39213   007864  0EF0               	movlw	240
 39214   007866  17A0               	andwf	(??_getEv+1)& (0+255),f,b
 39215   007868  519F               	movf	??_getEv& (0+255),w,b
 39216   00786A  0B0F               	andlw	15
 39217   00786C  13A0               	iorwf	(??_getEv+1)& (0+255),f,b
 39218   00786E  0EF0               	movlw	240
 39219   007870  179F               	andwf	??_getEv& (0+255),f,b
 39220   007872  0E80               	movlw	128
 39221   007874  259F               	addwf	??_getEv& (0+255),w,b
 39222   007876  6FA1               	movwf	(??_getEv+2)& (0+255),b
 39223   007878  0EEF               	movlw	239
 39224   00787A  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 39225   00787C  6FA2               	movwf	(??_getEv+3)& (0+255),b
 39226   00787E  C0A1  F091         	movff	??_getEv+2,readNVM@index
 39227   007882  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 39228   007886  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39229   007888  0E01               	movlw	1
 39230   00788A  ECDD  F058         	call	_readNVM
 39231   00788E  0100               	movlb	0	; () banked
 39232   007890  5191               	movf	?_readNVM& (0+255),w,b
 39233   007892  6FA4               	movwf	getEv@f& (0+255),b
 39234                           
 39235                           ;../../VLCBlib_PIC/event_teach.c: 1021:     while (evNum >= 10) {
 39236   007894  D040               	goto	l18120
 39237   007896                     l1664:
 39238                           
 39239                           ; BSR set to: 0
 39240                           ;../../VLCBlib_PIC/event_teach.c: 1023:         if (! f.continued) {
 39241   007896  B9A4               	btfsc	getEv@f& (0+255),4,b
 39242   007898  D005               	goto	l18108
 39243   00789A                     u17860:
 39244                           
 39245                           ; BSR set to: 0
 39246                           ;../../VLCBlib_PIC/event_teach.c: 1024:             return -CMDERR_NO_EV;
 39247   00789A  0EFF               	movlw	255
 39248   00789C  6F9E               	movwf	(?_getEv+1)& (0+255),b
 39249   00789E  0EFB               	movlw	251
 39250   0078A0  6F9D               	movwf	?_getEv& (0+255),b
 39251   0078A2  0012               	return	
 39252   0078A4                     l18108:
 39253                           
 39254                           ; BSR set to: 0
 39255                           ;../../VLCBlib_PIC/event_teach.c: 1026:         tableIndex = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, 0xEF80 + 16*tableIndex+1);
 39256   0078A4  51A5               	movf	getEv@tableIndex& (0+255),w,b
 39257   0078A6  0D10               	mullw	16
 39258   0078A8  CFF3 F09F          	movff	prodl,??_getEv
 39259   0078AC  CFF4 F0A0          	movff	prodh,??_getEv+1
 39260   0078B0  0E81               	movlw	129
 39261   0078B2  259F               	addwf	??_getEv& (0+255),w,b
 39262   0078B4  6FA1               	movwf	(??_getEv+2)& (0+255),b
 39263   0078B6  0EEF               	movlw	239
 39264   0078B8  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 39265   0078BA  6FA2               	movwf	(??_getEv+3)& (0+255),b
 39266   0078BC  C0A1  F091         	movff	??_getEv+2,readNVM@index
 39267   0078C0  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 39268   0078C4  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39269   0078C6  0E01               	movlw	1
 39270   0078C8  ECDD  F058         	call	_readNVM
 39271   0078CC  0100               	movlb	0	; () banked
 39272   0078CE  5191               	movf	?_readNVM& (0+255),w,b
 39273   0078D0  6FA5               	movwf	getEv@tableIndex& (0+255),b
 39274                           
 39275                           ; BSR set to: 0
 39276                           ;../../VLCBlib_PIC/event_teach.c: 1027:         if (tableIndex == 0xff) {
 39277   0078D2  29A5               	incf	getEv@tableIndex& (0+255),w,b
 39278   0078D4  B4D8               	btfsc	status,2,c
 39279   0078D6  D7B2               	goto	u17840
 39280                           
 39281                           ; BSR set to: 0
 39282                           ;../../VLCBlib_PIC/event_teach.c: 1030:         f.asByte = (uint8_t)readNVM(FLASH_NVM_TY
      +                          PE, 0xEF80 + 16*tableIndex+0);
 39283   0078D8  51A5               	movf	getEv@tableIndex& (0+255),w,b
 39284   0078DA  6F9F               	movwf	??_getEv& (0+255),b
 39285   0078DC  6BA0               	clrf	(??_getEv+1)& (0+255),b
 39286   0078DE  3B9F               	swapf	??_getEv& (0+255),f,b
 39287   0078E0  3BA0               	swapf	(??_getEv+1)& (0+255),f,b
 39288   0078E2  0EF0               	movlw	240
 39289   0078E4  17A0               	andwf	(??_getEv+1)& (0+255),f,b
 39290   0078E6  519F               	movf	??_getEv& (0+255),w,b
 39291   0078E8  0B0F               	andlw	15
 39292   0078EA  13A0               	iorwf	(??_getEv+1)& (0+255),f,b
 39293   0078EC  0EF0               	movlw	240
 39294   0078EE  179F               	andwf	??_getEv& (0+255),f,b
 39295   0078F0  0E80               	movlw	128
 39296   0078F2  259F               	addwf	??_getEv& (0+255),w,b
 39297   0078F4  6FA1               	movwf	(??_getEv+2)& (0+255),b
 39298   0078F6  0EEF               	movlw	239
 39299   0078F8  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 39300   0078FA  6FA2               	movwf	(??_getEv+3)& (0+255),b
 39301   0078FC  C0A1  F091         	movff	??_getEv+2,readNVM@index
 39302   007900  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 39303   007904  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39304   007906  0E01               	movlw	1
 39305   007908  ECDD  F058         	call	_readNVM
 39306   00790C  0100               	movlb	0	; () banked
 39307   00790E  5191               	movf	?_readNVM& (0+255),w,b
 39308   007910  6FA4               	movwf	getEv@f& (0+255),b
 39309                           
 39310                           ; BSR set to: 0
 39311                           ;../../VLCBlib_PIC/event_teach.c: 1031:         evNum -= 10;
 39312   007912  0E0A               	movlw	10
 39313   007914  5F9D               	subwf	getEv@evNum& (0+255),f,b
 39314   007916                     l18120:
 39315                           
 39316                           ; BSR set to: 0
 39317                           ;../../VLCBlib_PIC/event_teach.c: 1021:     while (evNum >= 10) {
 39318   007916  0E0A               	movlw	10
 39319   007918  619D               	cpfslt	getEv@evNum& (0+255),b
 39320   00791A  D7BD               	goto	l1664
 39321                           
 39322                           ; BSR set to: 0
 39323                           ;../../VLCBlib_PIC/event_teach.c: 1033:     if (evNum+1 > f.eVsUsed) {
 39324   00791C  519D               	movf	getEv@evNum& (0+255),w,b
 39325   00791E  6F9F               	movwf	??_getEv& (0+255),b
 39326   007920  6BA0               	clrf	(??_getEv+1)& (0+255),b
 39327   007922  0E01               	movlw	1
 39328   007924  279F               	addwf	??_getEv& (0+255),f,b
 39329   007926  0E00               	movlw	0
 39330   007928  23A0               	addwfc	(??_getEv+1)& (0+255),f,b
 39331   00792A  51A4               	movf	getEv@f& (0+255),w,b
 39332   00792C  0B0F               	andlw	15
 39333   00792E  6FA1               	movwf	(??_getEv+2)& (0+255),b
 39334   007930  6BA2               	clrf	(??_getEv+3)& (0+255),b
 39335   007932  519F               	movf	??_getEv& (0+255),w,b
 39336   007934  5DA1               	subwf	(??_getEv+2)& (0+255),w,b
 39337   007936  51A2               	movf	(??_getEv+3)& (0+255),w,b
 39338   007938  0A80               	xorlw	128
 39339   00793A  6FA3               	movwf	(??_getEv+4)& (0+255),b
 39340   00793C  51A0               	movf	(??_getEv+1)& (0+255),w,b
 39341   00793E  0A80               	xorlw	128
 39342   007940  59A3               	subwfb	(??_getEv+4)& (0+255),w,b
 39343   007942  A0D8               	btfss	status,0,c
 39344   007944  D7AA               	goto	u17860
 39345                           
 39346                           ; BSR set to: 0
 39347                           ;../../VLCBlib_PIC/event_teach.c: 1037:     return (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF
      +                          80 + 16*tableIndex+6 +evNum);
 39348   007946  51A5               	movf	getEv@tableIndex& (0+255),w,b
 39349   007948  0D10               	mullw	16
 39350   00794A  CFF3 F09F          	movff	prodl,??_getEv
 39351   00794E  CFF4 F0A0          	movff	prodh,??_getEv+1
 39352   007952  519D               	movf	getEv@evNum& (0+255),w,b
 39353   007954  279F               	addwf	??_getEv& (0+255),f,b
 39354   007956  0E00               	movlw	0
 39355   007958  23A0               	addwfc	(??_getEv+1)& (0+255),f,b
 39356   00795A  0E86               	movlw	134
 39357   00795C  259F               	addwf	??_getEv& (0+255),w,b
 39358   00795E  6FA1               	movwf	(??_getEv+2)& (0+255),b
 39359   007960  0EEF               	movlw	239
 39360   007962  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 39361   007964  6FA2               	movwf	(??_getEv+3)& (0+255),b
 39362   007966  C0A1  F091         	movff	??_getEv+2,readNVM@index
 39363   00796A  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 39364   00796E  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39365   007970  0E01               	movlw	1
 39366   007972  ECDD  F058         	call	_readNVM
 39367   007976  0100               	movlb	0	; () banked
 39368   007978  5191               	movf	?_readNVM& (0+255),w,b
 39369   00797A  6F9D               	movwf	?_getEv& (0+255),b
 39370   00797C  6B9E               	clrf	(?_getEv+1)& (0+255),b
 39371                           
 39372                           ; BSR set to: 0
 39373   00797E  0012               	return		;funcret
 39374   007980                     __end_of_getEv:
 39375                           	callstack 0
 39376                           
 39377 ;; *************** function _getEVs *****************
 39378 ;; Defined at:
 39379 ;;		line 1076 in file "../../VLCBlib_PIC/event_teach.c"
 39380 ;; Parameters:    Size  Location     Type
 39381 ;;  tableIndex      1    wreg     unsigned char 
 39382 ;; Auto vars:     Size  Location     Type
 39383 ;;  tableIndex      1   67[BANK0 ] unsigned char 
 39384 ;;  evIdx           1   66[BANK0 ] unsigned char 
 39385 ;;  evNum           1   68[BANK0 ] unsigned char 
 39386 ;;  f               1   65[BANK0 ] struct .
 39387 ;; Return value:  Size  Location     Type
 39388 ;;                  1    wreg      unsigned char 
 39389 ;; Registers used:
 39390 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39391 ;; Tracked objects:
 39392 ;;		On entry : 0/0
 39393 ;;		On exit  : 0/0
 39394 ;;		Unchanged: 0/0
 39395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39397 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39398 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39399 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39400 ;;Total ram usage:        8 bytes
 39401 ;; Hardware stack levels used: 1
 39402 ;; Hardware stack levels required when called: 15
 39403 ;; This function calls:
 39404 ;;		_readNVM
 39405 ;;		_validStart
 39406 ;; This function is called by:
 39407 ;;		_consumer2QProcessMessage
 39408 ;;		_deleteActionRange
 39409 ;;		_checkRemoveTableEntry
 39410 ;; This function uses a non-reentrant model
 39411 ;;
 39412                           
 39413                           	psect	text165
 39414   00828E                     __ptext165:
 39415                           	callstack 0
 39416   00828E                     _getEVs:
 39417                           	callstack 8
 39418                           
 39419                           ; BSR set to: 0
 39420                           ;incstack = 0
 39421                           ;getEVs@tableIndex stored from wreg
 39422   00828E  0100               	movlb	0	; () banked
 39423   008290  6FA3               	movwf	getEVs@tableIndex& (0+255),b
 39424                           
 39425                           ;../../VLCBlib_PIC/event_teach.c: 1077:     EventTableFlags f;;../../VLCBlib_PIC/event_t
      +                          each.c: 1078:     uint8_t evNum;;../../VLCBlib_PIC/event_teach.c: 1080:     if ( ! valid
      +                          Start(tableIndex)) {
 39426   008292  0100               	movlb	0	; () banked
 39427   008294  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 39428   008296  EC3F  F05B         	call	_validStart
 39429   00829A  0900               	iorlw	0
 39430   00829C  A4D8               	btfss	status,2,c
 39431   00829E  D002               	goto	l18326
 39432   0082A0                     u18100:
 39433                           
 39434                           ;../../VLCBlib_PIC/event_teach.c: 1082:         return CMDERR_INVALID_EVENT;
 39435   0082A0  0E07               	movlw	7
 39436   0082A2  0012               	return	
 39437   0082A4                     l18326:
 39438                           
 39439                           ;../../VLCBlib_PIC/event_teach.c: 1084:     for (evNum=0; evNum < 20; ) {
 39440   0082A4  0E00               	movlw	0
 39441   0082A6  0100               	movlb	0	; () banked
 39442   0082A8  6FA4               	movwf	getEVs@evNum& (0+255),b
 39443   0082AA                     l18332:
 39444                           
 39445                           ; BSR set to: 0
 39446                           ;../../VLCBlib_PIC/event_teach.c: 1085:         uint8_t evIdx;;../../VLCBlib_PIC/event_t
      +                          each.c: 1086:         for (evIdx=0; evIdx < 10; evIdx++) {
 39447   0082AA  0E00               	movlw	0
 39448   0082AC  6FA2               	movwf	getEVs@evIdx& (0+255),b
 39449   0082AE                     l18338:
 39450                           
 39451                           ; BSR set to: 0
 39452                           ;../../VLCBlib_PIC/event_teach.c: 1087:             evs[evNum] = (uint8_t)readNVM(FLASH_
      +                          NVM_TYPE, 0xEF80 + 16*tableIndex+6 +evIdx);
 39453   0082AE  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 39454   0082B0  0D10               	mullw	16
 39455   0082B2  CFF3 F09D          	movff	prodl,??_getEVs
 39456   0082B6  CFF4 F09E          	movff	prodh,??_getEVs+1
 39457   0082BA  51A2               	movf	getEVs@evIdx& (0+255),w,b
 39458   0082BC  279D               	addwf	??_getEVs& (0+255),f,b
 39459   0082BE  0E00               	movlw	0
 39460   0082C0  239E               	addwfc	(??_getEVs+1)& (0+255),f,b
 39461   0082C2  0E86               	movlw	134
 39462   0082C4  259D               	addwf	??_getEVs& (0+255),w,b
 39463   0082C6  6F9F               	movwf	(??_getEVs+2)& (0+255),b
 39464   0082C8  0EEF               	movlw	239
 39465   0082CA  219E               	addwfc	(??_getEVs+1)& (0+255),w,b
 39466   0082CC  6FA0               	movwf	(??_getEVs+3)& (0+255),b
 39467   0082CE  C09F  F091         	movff	??_getEVs+2,readNVM@index
 39468   0082D2  C0A0  F092         	movff	??_getEVs+3,readNVM@index+1
 39469   0082D6  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39470   0082D8  0E01               	movlw	1
 39471   0082DA  ECDD  F058         	call	_readNVM
 39472   0082DE  0E00               	movlw	low _evs
 39473   0082E0  0100               	movlb	0	; () banked
 39474   0082E2  25A4               	addwf	getEVs@evNum& (0+255),w,b
 39475   0082E4  6ED9               	movwf	fsr2l,c
 39476   0082E6  6ADA               	clrf	fsr2h,c
 39477   0082E8  0E02               	movlw	high _evs
 39478   0082EA  22DA               	addwfc	fsr2h,f,c
 39479   0082EC  C091  FFDF         	movff	?_readNVM,indf2
 39480                           
 39481                           ; BSR set to: 0
 39482                           ;../../VLCBlib_PIC/event_teach.c: 1088:             evNum++;
 39483   0082F0  2BA4               	incf	getEVs@evNum& (0+255),f,b
 39484                           
 39485                           ; BSR set to: 0
 39486                           ;../../VLCBlib_PIC/event_teach.c: 1089:         }
 39487   0082F2  2BA2               	incf	getEVs@evIdx& (0+255),f,b
 39488                           
 39489                           ; BSR set to: 0
 39490   0082F4  0E09               	movlw	9
 39491   0082F6  65A2               	cpfsgt	getEVs@evIdx& (0+255),b
 39492   0082F8  D7DA               	goto	l18338
 39493                           
 39494                           ; BSR set to: 0
 39495                           ;../../VLCBlib_PIC/event_teach.c: 1090:         f.asByte = (uint8_t)readNVM(FLASH_NVM_TY
      +                          PE, 0xEF80 + 16*tableIndex+0);
 39496   0082FA  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 39497   0082FC  6F9D               	movwf	??_getEVs& (0+255),b
 39498   0082FE  6B9E               	clrf	(??_getEVs+1)& (0+255),b
 39499   008300  3B9D               	swapf	??_getEVs& (0+255),f,b
 39500   008302  3B9E               	swapf	(??_getEVs+1)& (0+255),f,b
 39501   008304  0EF0               	movlw	240
 39502   008306  179E               	andwf	(??_getEVs+1)& (0+255),f,b
 39503   008308  519D               	movf	??_getEVs& (0+255),w,b
 39504   00830A  0B0F               	andlw	15
 39505   00830C  139E               	iorwf	(??_getEVs+1)& (0+255),f,b
 39506   00830E  0EF0               	movlw	240
 39507   008310  179D               	andwf	??_getEVs& (0+255),f,b
 39508   008312  0E80               	movlw	128
 39509   008314  259D               	addwf	??_getEVs& (0+255),w,b
 39510   008316  6F9F               	movwf	(??_getEVs+2)& (0+255),b
 39511   008318  0EEF               	movlw	239
 39512   00831A  219E               	addwfc	(??_getEVs+1)& (0+255),w,b
 39513   00831C  6FA0               	movwf	(??_getEVs+3)& (0+255),b
 39514   00831E  C09F  F091         	movff	??_getEVs+2,readNVM@index
 39515   008322  C0A0  F092         	movff	??_getEVs+3,readNVM@index+1
 39516   008326  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39517   008328  0E01               	movlw	1
 39518   00832A  ECDD  F058         	call	_readNVM
 39519   00832E  0100               	movlb	0	; () banked
 39520   008330  5191               	movf	?_readNVM& (0+255),w,b
 39521   008332  6FA1               	movwf	getEVs@f& (0+255),b
 39522                           
 39523                           ; BSR set to: 0
 39524                           ;../../VLCBlib_PIC/event_teach.c: 1091:         if (! f.continued) {
 39525   008334  B9A1               	btfsc	getEVs@f& (0+255),4,b
 39526   008336  D00F               	goto	l18364
 39527   008338                     u18120:
 39528                           
 39529                           ; BSR set to: 0
 39530                           ;../../VLCBlib_PIC/event_teach.c: 1092:             for (; evNum < 20; evNum++) {
 39531   008338  0E13               	movlw	19
 39532   00833A  65A4               	cpfsgt	getEVs@evNum& (0+255),b
 39533   00833C  D001               	goto	l18354
 39534   00833E  D009               	goto	l18360
 39535   008340                     l18354:
 39536                           
 39537                           ; BSR set to: 0
 39538                           ;../../VLCBlib_PIC/event_teach.c: 1093:                 evs[evNum] = 0;
 39539   008340  0E00               	movlw	low _evs
 39540   008342  25A4               	addwf	getEVs@evNum& (0+255),w,b
 39541   008344  6ED9               	movwf	fsr2l,c
 39542   008346  6ADA               	clrf	fsr2h,c
 39543   008348  0E02               	movlw	high _evs
 39544   00834A  22DA               	addwfc	fsr2h,f,c
 39545   00834C  6ADF               	clrf	indf2,c
 39546                           
 39547                           ; BSR set to: 0
 39548                           ;../../VLCBlib_PIC/event_teach.c: 1094:             }
 39549   00834E  2BA4               	incf	getEVs@evNum& (0+255),f,b
 39550   008350  D7F3               	goto	u18120
 39551   008352                     l18360:
 39552                           
 39553                           ; BSR set to: 0
 39554                           ;../../VLCBlib_PIC/event_teach.c: 1095:             return 0;
 39555   008352  0E00               	movlw	0
 39556   008354  0012               	return	
 39557   008356                     l18364:
 39558                           
 39559                           ; BSR set to: 0
 39560                           ;../../VLCBlib_PIC/event_teach.c: 1097:         tableIndex = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, 0xEF80 + 16*tableIndex+1);
 39561   008356  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 39562   008358  0D10               	mullw	16
 39563   00835A  CFF3 F09D          	movff	prodl,??_getEVs
 39564   00835E  CFF4 F09E          	movff	prodh,??_getEVs+1
 39565   008362  0E81               	movlw	129
 39566   008364  259D               	addwf	??_getEVs& (0+255),w,b
 39567   008366  6F9F               	movwf	(??_getEVs+2)& (0+255),b
 39568   008368  0EEF               	movlw	239
 39569   00836A  219E               	addwfc	(??_getEVs+1)& (0+255),w,b
 39570   00836C  6FA0               	movwf	(??_getEVs+3)& (0+255),b
 39571   00836E  C09F  F091         	movff	??_getEVs+2,readNVM@index
 39572   008372  C0A0  F092         	movff	??_getEVs+3,readNVM@index+1
 39573   008376  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39574   008378  0E01               	movlw	1
 39575   00837A  ECDD  F058         	call	_readNVM
 39576   00837E  0100               	movlb	0	; () banked
 39577   008380  5191               	movf	?_readNVM& (0+255),w,b
 39578   008382  6FA3               	movwf	getEVs@tableIndex& (0+255),b
 39579                           
 39580                           ; BSR set to: 0
 39581                           ;../../VLCBlib_PIC/event_teach.c: 1098:         if (tableIndex == 0xff) {
 39582   008384  29A3               	incf	getEVs@tableIndex& (0+255),w,b
 39583   008386  B4D8               	btfsc	status,2,c
 39584   008388  D78B               	goto	u18100
 39585                           
 39586                           ; BSR set to: 0
 39587                           ;../../VLCBlib_PIC/event_teach.c: 1101:     }
 39588   00838A  0E13               	movlw	19
 39589   00838C  65A4               	cpfsgt	getEVs@evNum& (0+255),b
 39590   00838E  D78D               	goto	l18332
 39591   008390  D7E0               	goto	l18360
 39592   008392                     __end_of_getEVs:
 39593                           	callstack 0
 39594                           
 39595 ;; *************** function _validStart *****************
 39596 ;; Defined at:
 39597 ;;		line 1175 in file "../../VLCBlib_PIC/event_teach.c"
 39598 ;; Parameters:    Size  Location     Type
 39599 ;;  tableIndex      1    wreg     unsigned char 
 39600 ;; Auto vars:     Size  Location     Type
 39601 ;;  tableIndex      1   59[BANK0 ] unsigned char 
 39602 ;;  f               1   60[BANK0 ] struct .
 39603 ;; Return value:  Size  Location     Type
 39604 ;;                  1    wreg      enum E12700
 39605 ;; Registers used:
 39606 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 39607 ;; Tracked objects:
 39608 ;;		On entry : 0/0
 39609 ;;		On exit  : 0/0
 39610 ;;		Unchanged: 0/0
 39611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39613 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39614 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39615 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39616 ;;Total ram usage:        6 bytes
 39617 ;; Hardware stack levels used: 1
 39618 ;; Hardware stack levels required when called: 14
 39619 ;; This function calls:
 39620 ;;		_readNVM
 39621 ;; This function is called by:
 39622 ;;		_deleteActionRange
 39623 ;;		_deleteHappeningRange
 39624 ;;		_nerdCallback
 39625 ;;		_doNenrd
 39626 ;;		_doRqevn
 39627 ;;		_doReval
 39628 ;;		_removeTableEntry
 39629 ;;		_checkRemoveTableEntry
 39630 ;;		_getEv
 39631 ;;		_numEv
 39632 ;;		_getEVs
 39633 ;;		_rebuildHashtable
 39634 ;; This function uses a non-reentrant model
 39635 ;;
 39636                           
 39637                           	psect	text166
 39638   00B67E                     __ptext166:
 39639                           	callstack 0
 39640   00B67E                     _validStart:
 39641                           	callstack 13
 39642                           
 39643                           ;incstack = 0
 39644                           ;validStart@tableIndex stored from wreg
 39645   00B67E  0100               	movlb	0	; () banked
 39646   00B680  6F9B               	movwf	validStart@tableIndex& (0+255),b
 39647                           
 39648                           ;../../VLCBlib_PIC/event_teach.c: 1176:     EventTableFlags f;;../../VLCBlib_PIC/event_t
      +                          each.c: 1180:     f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 39649   00B682  0100               	movlb	0	; () banked
 39650   00B684  519B               	movf	validStart@tableIndex& (0+255),w,b
 39651   00B686  6F97               	movwf	??_validStart& (0+255),b
 39652   00B688  6B98               	clrf	(??_validStart+1)& (0+255),b
 39653   00B68A  3B97               	swapf	??_validStart& (0+255),f,b
 39654   00B68C  3B98               	swapf	(??_validStart+1)& (0+255),f,b
 39655   00B68E  0EF0               	movlw	240
 39656   00B690  1798               	andwf	(??_validStart+1)& (0+255),f,b
 39657   00B692  5197               	movf	??_validStart& (0+255),w,b
 39658   00B694  0B0F               	andlw	15
 39659   00B696  1398               	iorwf	(??_validStart+1)& (0+255),f,b
 39660   00B698  0EF0               	movlw	240
 39661   00B69A  1797               	andwf	??_validStart& (0+255),f,b
 39662   00B69C  0E80               	movlw	128
 39663   00B69E  2597               	addwf	??_validStart& (0+255),w,b
 39664   00B6A0  6F99               	movwf	(??_validStart+2)& (0+255),b
 39665   00B6A2  0EEF               	movlw	239
 39666   00B6A4  2198               	addwfc	(??_validStart+1)& (0+255),w,b
 39667   00B6A6  6F9A               	movwf	(??_validStart+3)& (0+255),b
 39668   00B6A8  C099  F091         	movff	??_validStart+2,readNVM@index
 39669   00B6AC  C09A  F092         	movff	??_validStart+3,readNVM@index+1
 39670   00B6B0  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39671   00B6B2  0E01               	movlw	1
 39672   00B6B4  ECDD  F058         	call	_readNVM
 39673   00B6B8  0100               	movlb	0	; () banked
 39674   00B6BA  5191               	movf	?_readNVM& (0+255),w,b
 39675   00B6BC  6F9C               	movwf	validStart@f& (0+255),b
 39676                           
 39677                           ; BSR set to: 0
 39678                           ;../../VLCBlib_PIC/event_teach.c: 1181:     if (( !f.freeEntry) && ( ! f.continuation)) 
      +                          {
 39679   00B6BE  AF9C               	btfss	validStart@f& (0+255),7,b
 39680                           
 39681                           ; BSR set to: 0
 39682   00B6C0  BB9C               	btfsc	validStart@f& (0+255),5,b
 39683   00B6C2  D002               	goto	l18058
 39684                           
 39685                           ; BSR set to: 0
 39686                           ;../../VLCBlib_PIC/event_teach.c: 1182:         return TRUE;
 39687   00B6C4  0E01               	movlw	1
 39688   00B6C6  0012               	return	
 39689   00B6C8                     l18058:
 39690                           
 39691                           ; BSR set to: 0
 39692                           ;../../VLCBlib_PIC/event_teach.c: 1184:         return FALSE;
 39693   00B6C8  0E00               	movlw	0
 39694                           
 39695                           ; BSR set to: 0
 39696   00B6CA  0012               	return		;funcret
 39697   00B6CC                     __end_of_validStart:
 39698                           	callstack 0
 39699                           
 39700 ;; *************** function _findEvent *****************
 39701 ;; Defined at:
 39702 ;;		line 891 in file "../../VLCBlib_PIC/event_teach.c"
 39703 ;; Parameters:    Size  Location     Type
 39704 ;;  nodeNumber      2    0[BANK1 ] unsigned short 
 39705 ;;  eventNumber     2    2[BANK1 ] unsigned short 
 39706 ;; Auto vars:     Size  Location     Type
 39707 ;;  en              2    8[BANK1 ] unsigned short 
 39708 ;;  nn              2    6[BANK1 ] unsigned short 
 39709 ;;  tableIndex      1   12[BANK1 ] unsigned char 
 39710 ;;  chainIdx        1   11[BANK1 ] unsigned char 
 39711 ;;  hash            1   10[BANK1 ] unsigned char 
 39712 ;; Return value:  Size  Location     Type
 39713 ;;                  1    wreg      unsigned char 
 39714 ;; Registers used:
 39715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39716 ;; Tracked objects:
 39717 ;;		On entry : 0/0
 39718 ;;		On exit  : 0/0
 39719 ;;		Unchanged: 0/0
 39720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39721 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39722 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39723 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39724 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39725 ;;Total ram usage:       13 bytes
 39726 ;; Hardware stack levels used: 1
 39727 ;; Hardware stack levels required when called: 15
 39728 ;; This function calls:
 39729 ;;		_getEN
 39730 ;;		_getHash
 39731 ;;		_getNN
 39732 ;; This function is called by:
 39733 ;;		_consumer2QProcessMessage
 39734 ;;		_ackEventProcessMessage
 39735 ;;		_producerProcessMessage
 39736 ;;		_doReqev
 39737 ;;		_removeEvent
 39738 ;;		_addEvent
 39739 ;; This function uses a non-reentrant model
 39740 ;;
 39741                           
 39742                           	psect	text167
 39743   00A37C                     __ptext167:
 39744                           	callstack 0
 39745   00A37C                     _findEvent:
 39746                           	callstack 12
 39747                           
 39748                           ;../../VLCBlib_PIC/event_teach.c: 893:     uint8_t hash = getHash(nodeNumber, eventNumbe
      +                          r);
 39749                           
 39750                           ; BSR set to: 0
 39751                           ;incstack = 0
 39752   00A37C  C1B5  F0A3         	movff	findEvent@nodeNumber,getHash@nn
 39753   00A380  C1B6  F0A4         	movff	findEvent@nodeNumber+1,getHash@nn+1
 39754   00A384  C1B7  F0A5         	movff	findEvent@eventNumber,getHash@en
 39755   00A388  C1B8  F0A6         	movff	findEvent@eventNumber+1,getHash@en+1
 39756   00A38C  ECD1  F060         	call	_getHash	;wreg free
 39757   00A390  0101               	movlb	1	; () banked
 39758   00A392  6FBF               	movwf	findEvent@hash& (0+255),b
 39759                           
 39760                           ; BSR set to: 1
 39761                           ;../../VLCBlib_PIC/event_teach.c: 894:     uint8_t chainIdx;;../../VLCBlib_PIC/event_tea
      +                          ch.c: 895:     for (chainIdx=0; chainIdx<20; chainIdx++) {
 39762   00A394  0E00               	movlw	0
 39763   00A396  6FC0               	movwf	findEvent@chainIdx& (0+255),b
 39764   00A398                     l18722:
 39765                           
 39766                           ; BSR set to: 1
 39767                           ;../../VLCBlib_PIC/event_teach.c: 896:         uint8_t tableIndex = eventChains[hash][ch
      +                          ainIdx];
 39768   00A398  51BF               	movf	findEvent@hash& (0+255),w,b
 39769   00A39A  0D14               	mullw	20
 39770   00A39C  0E80               	movlw	low _eventChains
 39771   00A39E  24F3               	addwf	243,w,c
 39772   00A3A0  6FB9               	movwf	??_findEvent& (0+255),b
 39773   00A3A2  0E05               	movlw	high _eventChains
 39774   00A3A4  20F4               	addwfc	prodh,w,c
 39775   00A3A6  6FBA               	movwf	(??_findEvent+1)& (0+255),b
 39776   00A3A8  51C0               	movf	findEvent@chainIdx& (0+255),w,b
 39777   00A3AA  25B9               	addwf	??_findEvent& (0+255),w,b
 39778   00A3AC  6ED9               	movwf	fsr2l,c
 39779   00A3AE  0E00               	movlw	0
 39780   00A3B0  21BA               	addwfc	(??_findEvent+1)& (0+255),w,b
 39781   00A3B2  6EDA               	movwf	fsr2h,c
 39782   00A3B4  50DF               	movf	indf2,w,c
 39783   00A3B6  6FC1               	movwf	findEvent@tableIndex& (0+255),b
 39784                           
 39785                           ; BSR set to: 1
 39786                           ;../../VLCBlib_PIC/event_teach.c: 897:         uint16_t nn, en;;../../VLCBlib_PIC/event_
      +                          teach.c: 898:         if (tableIndex == 0xff) return 0xff;
 39787   00A3B8  29C1               	incf	findEvent@tableIndex& (0+255),w,b
 39788   00A3BA  A4D8               	btfss	status,2,c
 39789   00A3BC  D002               	goto	l18730
 39790   00A3BE                     u18650:
 39791                           
 39792                           ; BSR set to: 1
 39793   00A3BE  0EFF               	movlw	255
 39794   00A3C0  0012               	return	
 39795   00A3C2                     l18730:
 39796                           
 39797                           ; BSR set to: 1
 39798                           ;../../VLCBlib_PIC/event_teach.c: 899:         nn = getNN(tableIndex);
 39799   00A3C2  51C1               	movf	findEvent@tableIndex& (0+255),w,b
 39800   00A3C4  EC3F  F049         	call	_getNN
 39801   00A3C8  C097  F1BB         	movff	?_getNN,findEvent@nn
 39802   00A3CC  C098  F1BC         	movff	?_getNN+1,findEvent@nn+1
 39803                           
 39804                           ;../../VLCBlib_PIC/event_teach.c: 900:         en = getEN(tableIndex);
 39805   00A3D0  0101               	movlb	1	; () banked
 39806   00A3D2  51C1               	movf	findEvent@tableIndex& (0+255),w,b
 39807   00A3D4  EC17  F055         	call	_getEN
 39808   00A3D8  C097  F1BD         	movff	?_getEN,findEvent@en
 39809   00A3DC  C098  F1BE         	movff	?_getEN+1,findEvent@en+1
 39810                           
 39811                           ;../../VLCBlib_PIC/event_teach.c: 901:         if ((nn == nodeNumber) && (en == eventNum
      +                          ber)) {
 39812   00A3E0  0101               	movlb	1	; () banked
 39813   00A3E2  51B5               	movf	findEvent@nodeNumber& (0+255),w,b
 39814   00A3E4  19BB               	xorwf	findEvent@nn& (0+255),w,b
 39815   00A3E6  E10D               	bnz	l18740
 39816   00A3E8  51B6               	movf	(findEvent@nodeNumber+1)& (0+255),w,b
 39817   00A3EA  19BC               	xorwf	(findEvent@nn+1)& (0+255),w,b
 39818   00A3EC  A4D8               	btfss	status,2,c
 39819   00A3EE  D009               	goto	l18740
 39820                           
 39821                           ; BSR set to: 1
 39822   00A3F0  51B7               	movf	findEvent@eventNumber& (0+255),w,b
 39823   00A3F2  19BD               	xorwf	findEvent@en& (0+255),w,b
 39824   00A3F4  E106               	bnz	l18740
 39825   00A3F6  51B8               	movf	(findEvent@eventNumber+1)& (0+255),w,b
 39826   00A3F8  19BE               	xorwf	(findEvent@en+1)& (0+255),w,b
 39827   00A3FA  A4D8               	btfss	status,2,c
 39828   00A3FC  D002               	goto	l18740
 39829                           
 39830                           ; BSR set to: 1
 39831                           ;../../VLCBlib_PIC/event_teach.c: 902:             return tableIndex;
 39832   00A3FE  51C1               	movf	findEvent@tableIndex& (0+255),w,b
 39833   00A400  0012               	return	
 39834   00A402                     l18740:
 39835                           
 39836                           ; BSR set to: 1
 39837                           ;../../VLCBlib_PIC/event_teach.c: 904:     }
 39838   00A402  2BC0               	incf	findEvent@chainIdx& (0+255),f,b
 39839                           
 39840                           ; BSR set to: 1
 39841   00A404  0E13               	movlw	19
 39842   00A406  65C0               	cpfsgt	findEvent@chainIdx& (0+255),b
 39843   00A408  D7C7               	goto	l18722
 39844   00A40A  D7D9               	goto	u18650
 39845   00A40C                     __end_of_findEvent:
 39846                           	callstack 0
 39847                           
 39848 ;; *************** function _getNN *****************
 39849 ;; Defined at:
 39850 ;;		line 1112 in file "../../VLCBlib_PIC/event_teach.c"
 39851 ;; Parameters:    Size  Location     Type
 39852 ;;  tableIndex      1    wreg     unsigned char 
 39853 ;; Auto vars:     Size  Location     Type
 39854 ;;  tableIndex      1   66[BANK0 ] unsigned char 
 39855 ;;  lo              2   63[BANK0 ] unsigned short 
 39856 ;;  hi              2   61[BANK0 ] unsigned short 
 39857 ;;  f               1   65[BANK0 ] struct .
 39858 ;; Return value:  Size  Location     Type
 39859 ;;                  2   55[BANK0 ] unsigned short 
 39860 ;; Registers used:
 39861 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39862 ;; Tracked objects:
 39863 ;;		On entry : 0/0
 39864 ;;		On exit  : 0/0
 39865 ;;		Unchanged: 0/0
 39866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39867 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39868 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39869 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39870 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39871 ;;Total ram usage:       12 bytes
 39872 ;; Hardware stack levels used: 1
 39873 ;; Hardware stack levels required when called: 14
 39874 ;; This function calls:
 39875 ;;		_readNVM
 39876 ;; This function is called by:
 39877 ;;		_sendProducedEvent
 39878 ;;		_nerdCallback
 39879 ;;		_doNenrd
 39880 ;;		_reqevCallback
 39881 ;;		_findEvent
 39882 ;;		_rebuildHashtable
 39883 ;; This function uses a non-reentrant model
 39884 ;;
 39885                           
 39886                           	psect	text168
 39887   00927E                     __ptext168:
 39888                           	callstack 0
 39889   00927E                     _getNN:
 39890                           	callstack 13
 39891                           
 39892                           ; BSR set to: 1
 39893                           ;incstack = 0
 39894                           ;getNN@tableIndex stored from wreg
 39895   00927E  0100               	movlb	0	; () banked
 39896   009280  6FA2               	movwf	getNN@tableIndex& (0+255),b
 39897                           
 39898                           ;../../VLCBlib_PIC/event_teach.c: 1113:     uint16_t hi;;../../VLCBlib_PIC/event_teach.c
      +                          : 1114:     uint16_t lo;;../../VLCBlib_PIC/event_teach.c: 1115:     EventTableFlags f;;.
      +                          ./../VLCBlib_PIC/event_teach.c: 1117:     f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 0x
      +                          EF80 + 16*tableIndex+0);
 39899   009282  0100               	movlb	0	; () banked
 39900   009284  51A2               	movf	getNN@tableIndex& (0+255),w,b
 39901   009286  6F99               	movwf	??_getNN& (0+255),b
 39902   009288  6B9A               	clrf	(??_getNN+1)& (0+255),b
 39903   00928A  3B99               	swapf	??_getNN& (0+255),f,b
 39904   00928C  3B9A               	swapf	(??_getNN+1)& (0+255),f,b
 39905   00928E  0EF0               	movlw	240
 39906   009290  179A               	andwf	(??_getNN+1)& (0+255),f,b
 39907   009292  5199               	movf	??_getNN& (0+255),w,b
 39908   009294  0B0F               	andlw	15
 39909   009296  139A               	iorwf	(??_getNN+1)& (0+255),f,b
 39910   009298  0EF0               	movlw	240
 39911   00929A  1799               	andwf	??_getNN& (0+255),f,b
 39912   00929C  0E80               	movlw	128
 39913   00929E  2599               	addwf	??_getNN& (0+255),w,b
 39914   0092A0  6F9B               	movwf	(??_getNN+2)& (0+255),b
 39915   0092A2  0EEF               	movlw	239
 39916   0092A4  219A               	addwfc	(??_getNN+1)& (0+255),w,b
 39917   0092A6  6F9C               	movwf	(??_getNN+3)& (0+255),b
 39918   0092A8  C09B  F091         	movff	??_getNN+2,readNVM@index
 39919   0092AC  C09C  F092         	movff	??_getNN+3,readNVM@index+1
 39920   0092B0  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39921   0092B2  0E01               	movlw	1
 39922   0092B4  ECDD  F058         	call	_readNVM
 39923   0092B8  0100               	movlb	0	; () banked
 39924   0092BA  5191               	movf	?_readNVM& (0+255),w,b
 39925   0092BC  6FA1               	movwf	getNN@f& (0+255),b
 39926                           
 39927                           ; BSR set to: 0
 39928                           ;../../VLCBlib_PIC/event_teach.c: 1118:     if (f.forceOwnNN) {
 39929   0092BE  ADA1               	btfss	getNN@f& (0+255),6,b
 39930   0092C0  D005               	goto	l18138
 39931                           
 39932                           ; BSR set to: 0
 39933                           ;../../VLCBlib_PIC/event_teach.c: 1119:         return nn.word;
 39934   0092C2  C0B3  F097         	movff	_nn,?_getNN
 39935   0092C6  C0B4  F098         	movff	_nn+1,?_getNN+1
 39936   0092CA  0012               	return	
 39937   0092CC                     l18138:
 39938                           
 39939                           ; BSR set to: 0
 39940                           ;../../VLCBlib_PIC/event_teach.c: 1121:     lo = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80
      +                           + 16*tableIndex+2);
 39941   0092CC  51A2               	movf	getNN@tableIndex& (0+255),w,b
 39942   0092CE  0D10               	mullw	16
 39943   0092D0  CFF3 F099          	movff	prodl,??_getNN
 39944   0092D4  CFF4 F09A          	movff	prodh,??_getNN+1
 39945   0092D8  0E82               	movlw	130
 39946   0092DA  2599               	addwf	??_getNN& (0+255),w,b
 39947   0092DC  6F9B               	movwf	(??_getNN+2)& (0+255),b
 39948   0092DE  0EEF               	movlw	239
 39949   0092E0  219A               	addwfc	(??_getNN+1)& (0+255),w,b
 39950   0092E2  6F9C               	movwf	(??_getNN+3)& (0+255),b
 39951   0092E4  C09B  F091         	movff	??_getNN+2,readNVM@index
 39952   0092E8  C09C  F092         	movff	??_getNN+3,readNVM@index+1
 39953   0092EC  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39954   0092EE  0E01               	movlw	1
 39955   0092F0  ECDD  F058         	call	_readNVM
 39956   0092F4  0100               	movlb	0	; () banked
 39957   0092F6  5191               	movf	?_readNVM& (0+255),w,b
 39958   0092F8  6F9F               	movwf	getNN@lo& (0+255),b
 39959   0092FA  6BA0               	clrf	(getNN@lo+1)& (0+255),b
 39960                           
 39961                           ;../../VLCBlib_PIC/event_teach.c: 1122:     hi = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80
      +                           + 16*tableIndex+2 +1);
 39962   0092FC  51A2               	movf	getNN@tableIndex& (0+255),w,b
 39963   0092FE  0D10               	mullw	16
 39964   009300  CFF3 F099          	movff	prodl,??_getNN
 39965   009304  CFF4 F09A          	movff	prodh,??_getNN+1
 39966   009308  0E83               	movlw	131
 39967   00930A  2599               	addwf	??_getNN& (0+255),w,b
 39968   00930C  6F9B               	movwf	(??_getNN+2)& (0+255),b
 39969   00930E  0EEF               	movlw	239
 39970   009310  219A               	addwfc	(??_getNN+1)& (0+255),w,b
 39971   009312  6F9C               	movwf	(??_getNN+3)& (0+255),b
 39972   009314  C09B  F091         	movff	??_getNN+2,readNVM@index
 39973   009318  C09C  F092         	movff	??_getNN+3,readNVM@index+1
 39974   00931C  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39975   00931E  0E01               	movlw	1
 39976   009320  ECDD  F058         	call	_readNVM
 39977   009324  0100               	movlb	0	; () banked
 39978   009326  5191               	movf	?_readNVM& (0+255),w,b
 39979   009328  6F9D               	movwf	getNN@hi& (0+255),b
 39980   00932A  6B9E               	clrf	(getNN@hi+1)& (0+255),b
 39981                           
 39982                           ; BSR set to: 0
 39983                           ;../../VLCBlib_PIC/event_teach.c: 1123:     return lo | (hi << 8);
 39984   00932C  519D               	movf	getNN@hi& (0+255),w,b
 39985   00932E  6F9A               	movwf	(??_getNN+1)& (0+255),b
 39986   009330  6B99               	clrf	??_getNN& (0+255),b
 39987   009332  519F               	movf	getNN@lo& (0+255),w,b
 39988   009334  1199               	iorwf	??_getNN& (0+255),w,b
 39989   009336  6F97               	movwf	?_getNN& (0+255),b
 39990   009338  51A0               	movf	(getNN@lo+1)& (0+255),w,b
 39991   00933A  119A               	iorwf	(??_getNN+1)& (0+255),w,b
 39992   00933C  6F98               	movwf	(?_getNN+1)& (0+255),b
 39993                           
 39994                           ; BSR set to: 0
 39995   00933E  0012               	return		;funcret
 39996   009340                     __end_of_getNN:
 39997                           	callstack 0
 39998                           
 39999 ;; *************** function _getHash *****************
 40000 ;; Defined at:
 40001 ;;		line 1206 in file "../../VLCBlib_PIC/event_teach.c"
 40002 ;; Parameters:    Size  Location     Type
 40003 ;;  nn              2   67[BANK0 ] unsigned short 
 40004 ;;  en              2   69[BANK0 ] unsigned short 
 40005 ;; Auto vars:     Size  Location     Type
 40006 ;;  hash            1   72[BANK0 ] unsigned char 
 40007 ;; Return value:  Size  Location     Type
 40008 ;;                  1    wreg      unsigned char 
 40009 ;; Registers used:
 40010 ;;		wreg, status,2, status,0, prodl, prodh
 40011 ;; Tracked objects:
 40012 ;;		On entry : 0/0
 40013 ;;		On exit  : 0/0
 40014 ;;		Unchanged: 0/0
 40015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40016 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40017 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40018 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40019 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40020 ;;Total ram usage:        6 bytes
 40021 ;; Hardware stack levels used: 1
 40022 ;; Hardware stack levels required when called: 12
 40023 ;; This function calls:
 40024 ;;		Nothing
 40025 ;; This function is called by:
 40026 ;;		_findEvent
 40027 ;;		_rebuildHashtable
 40028 ;; This function uses a non-reentrant model
 40029 ;;
 40030                           
 40031                           	psect	text169
 40032   00C1A2                     __ptext169:
 40033                           	callstack 0
 40034   00C1A2                     _getHash:
 40035                           	callstack 15
 40036                           
 40037                           ;../../VLCBlib_PIC/event_teach.c: 1207:     uint8_t hash;;../../VLCBlib_PIC/event_teach.
      +                          c: 1209:     hash = (uint8_t)(nn ^ (nn >> 8U));
 40038                           
 40039                           ; BSR set to: 0
 40040                           ;incstack = 0
 40041   00C1A2  0100               	movlb	0	; () banked
 40042   00C1A4  51A4               	movf	(getHash@nn+1)& (0+255),w,b
 40043   00C1A6  19A3               	xorwf	getHash@nn& (0+255),w,b
 40044   00C1A8  6FA8               	movwf	getHash@hash& (0+255),b
 40045                           
 40046                           ; BSR set to: 0
 40047                           ;../../VLCBlib_PIC/event_teach.c: 1210:     hash = (uint8_t)(7U*hash + (en ^ (en>>8U)));
 40048   00C1AA  51A6               	movf	(getHash@en+1)& (0+255),w,b
 40049   00C1AC  19A5               	xorwf	getHash@en& (0+255),w,b
 40050   00C1AE  6FA7               	movwf	??_getHash& (0+255),b
 40051   00C1B0  51A8               	movf	getHash@hash& (0+255),w,b
 40052   00C1B2  0D07               	mullw	7
 40053   00C1B4  50F3               	movf	243,w,c
 40054   00C1B6  25A7               	addwf	??_getHash& (0+255),w,b
 40055   00C1B8  6FA8               	movwf	getHash@hash& (0+255),b
 40056                           
 40057                           ; BSR set to: 0
 40058                           ;../../VLCBlib_PIC/event_teach.c: 1212:     hash %= 32;
 40059   00C1BA  0E1F               	movlw	31
 40060   00C1BC  17A8               	andwf	getHash@hash& (0+255),f,b
 40061                           
 40062                           ; BSR set to: 0
 40063                           ;../../VLCBlib_PIC/event_teach.c: 1213:     return hash;
 40064   00C1BE  51A8               	movf	getHash@hash& (0+255),w,b
 40065                           
 40066                           ; BSR set to: 0
 40067   00C1C0  0012               	return		;funcret
 40068   00C1C2                     __end_of_getHash:
 40069                           	callstack 0
 40070                           
 40071 ;; *************** function _getEN *****************
 40072 ;; Defined at:
 40073 ;;		line 1133 in file "../../VLCBlib_PIC/event_teach.c"
 40074 ;; Parameters:    Size  Location     Type
 40075 ;;  tableIndex      1    wreg     unsigned char 
 40076 ;; Auto vars:     Size  Location     Type
 40077 ;;  tableIndex      1   65[BANK0 ] unsigned char 
 40078 ;;  lo              2   63[BANK0 ] unsigned short 
 40079 ;;  hi              2   61[BANK0 ] unsigned short 
 40080 ;; Return value:  Size  Location     Type
 40081 ;;                  2   55[BANK0 ] unsigned short 
 40082 ;; Registers used:
 40083 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40084 ;; Tracked objects:
 40085 ;;		On entry : 0/0
 40086 ;;		On exit  : 0/0
 40087 ;;		Unchanged: 0/0
 40088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40089 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40090 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40091 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40092 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40093 ;;Total ram usage:       11 bytes
 40094 ;; Hardware stack levels used: 1
 40095 ;; Hardware stack levels required when called: 14
 40096 ;; This function calls:
 40097 ;;		_readNVM
 40098 ;; This function is called by:
 40099 ;;		_sendProducedEvent
 40100 ;;		_nerdCallback
 40101 ;;		_doNenrd
 40102 ;;		_reqevCallback
 40103 ;;		_findEvent
 40104 ;;		_rebuildHashtable
 40105 ;; This function uses a non-reentrant model
 40106 ;;
 40107                           
 40108                           	psect	text170
 40109   00AA2E                     __ptext170:
 40110                           	callstack 0
 40111   00AA2E                     _getEN:
 40112                           	callstack 13
 40113                           
 40114                           ; BSR set to: 0
 40115                           ;incstack = 0
 40116                           ;getEN@tableIndex stored from wreg
 40117   00AA2E  0100               	movlb	0	; () banked
 40118   00AA30  6FA1               	movwf	getEN@tableIndex& (0+255),b
 40119                           
 40120                           ;../../VLCBlib_PIC/event_teach.c: 1134:     uint16_t hi;;../../VLCBlib_PIC/event_teach.c
      +                          : 1135:     uint16_t lo;;../../VLCBlib_PIC/event_teach.c: 1137:     lo = (uint8_t)readNV
      +                          M(FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+4);
 40121   00AA32  0100               	movlb	0	; () banked
 40122   00AA34  51A1               	movf	getEN@tableIndex& (0+255),w,b
 40123   00AA36  0D10               	mullw	16
 40124   00AA38  CFF3 F099          	movff	prodl,??_getEN
 40125   00AA3C  CFF4 F09A          	movff	prodh,??_getEN+1
 40126   00AA40  0E84               	movlw	132
 40127   00AA42  2599               	addwf	??_getEN& (0+255),w,b
 40128   00AA44  6F9B               	movwf	(??_getEN+2)& (0+255),b
 40129   00AA46  0EEF               	movlw	239
 40130   00AA48  219A               	addwfc	(??_getEN+1)& (0+255),w,b
 40131   00AA4A  6F9C               	movwf	(??_getEN+3)& (0+255),b
 40132   00AA4C  C09B  F091         	movff	??_getEN+2,readNVM@index
 40133   00AA50  C09C  F092         	movff	??_getEN+3,readNVM@index+1
 40134   00AA54  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40135   00AA56  0E01               	movlw	1
 40136   00AA58  ECDD  F058         	call	_readNVM
 40137   00AA5C  0100               	movlb	0	; () banked
 40138   00AA5E  5191               	movf	?_readNVM& (0+255),w,b
 40139   00AA60  6F9F               	movwf	getEN@lo& (0+255),b
 40140   00AA62  6BA0               	clrf	(getEN@lo+1)& (0+255),b
 40141                           
 40142                           ;../../VLCBlib_PIC/event_teach.c: 1138:     hi = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80
      +                           + 16*tableIndex+4 +1);
 40143   00AA64  51A1               	movf	getEN@tableIndex& (0+255),w,b
 40144   00AA66  0D10               	mullw	16
 40145   00AA68  CFF3 F099          	movff	prodl,??_getEN
 40146   00AA6C  CFF4 F09A          	movff	prodh,??_getEN+1
 40147   00AA70  0E85               	movlw	133
 40148   00AA72  2599               	addwf	??_getEN& (0+255),w,b
 40149   00AA74  6F9B               	movwf	(??_getEN+2)& (0+255),b
 40150   00AA76  0EEF               	movlw	239
 40151   00AA78  219A               	addwfc	(??_getEN+1)& (0+255),w,b
 40152   00AA7A  6F9C               	movwf	(??_getEN+3)& (0+255),b
 40153   00AA7C  C09B  F091         	movff	??_getEN+2,readNVM@index
 40154   00AA80  C09C  F092         	movff	??_getEN+3,readNVM@index+1
 40155   00AA84  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40156   00AA86  0E01               	movlw	1
 40157   00AA88  ECDD  F058         	call	_readNVM
 40158   00AA8C  0100               	movlb	0	; () banked
 40159   00AA8E  5191               	movf	?_readNVM& (0+255),w,b
 40160   00AA90  6F9D               	movwf	getEN@hi& (0+255),b
 40161   00AA92  6B9E               	clrf	(getEN@hi+1)& (0+255),b
 40162                           
 40163                           ; BSR set to: 0
 40164                           ;../../VLCBlib_PIC/event_teach.c: 1139:     return lo | (hi << 8);
 40165   00AA94  519D               	movf	getEN@hi& (0+255),w,b
 40166   00AA96  6F9A               	movwf	(??_getEN+1)& (0+255),b
 40167   00AA98  6B99               	clrf	??_getEN& (0+255),b
 40168   00AA9A  519F               	movf	getEN@lo& (0+255),w,b
 40169   00AA9C  1199               	iorwf	??_getEN& (0+255),w,b
 40170   00AA9E  6F97               	movwf	?_getEN& (0+255),b
 40171   00AAA0  51A0               	movf	(getEN@lo+1)& (0+255),w,b
 40172   00AAA2  119A               	iorwf	(??_getEN+1)& (0+255),w,b
 40173   00AAA4  6F98               	movwf	(?_getEN+1)& (0+255),b
 40174                           
 40175                           ; BSR set to: 0
 40176   00AAA6  0012               	return		;funcret
 40177   00AAA8                     __end_of_getEN:
 40178                           	callstack 0
 40179                           
 40180 ;; *************** function _configIO *****************
 40181 ;; Defined at:
 40182 ;;		line 447 in file "../main.c"
 40183 ;; Parameters:    Size  Location     Type
 40184 ;;  i               1    wreg     unsigned char 
 40185 ;; Auto vars:     Size  Location     Type
 40186 ;;  i               1    9[BANK1 ] unsigned char 
 40187 ;;  type            1    8[BANK1 ] unsigned char 
 40188 ;;  action          1    7[BANK1 ] unsigned char 
 40189 ;; Return value:  Size  Location     Type
 40190 ;;                  1    wreg      void 
 40191 ;; Registers used:
 40192 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40193 ;; Tracked objects:
 40194 ;;		On entry : 0/0
 40195 ;;		On exit  : 0/0
 40196 ;;		Unchanged: 0/0
 40197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40199 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40200 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40201 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40202 ;;Total ram usage:        8 bytes
 40203 ;; Hardware stack levels used: 1
 40204 ;; Hardware stack levels required when called: 18
 40205 ;; This function calls:
 40206 ;;		_getNV
 40207 ;;		_readNVM
 40208 ;;		_setDigitalOutput
 40209 ;;		_writeNVM
 40210 ;; This function is called by:
 40211 ;;		_setup
 40212 ;;		_setType
 40213 ;; This function uses a non-reentrant model
 40214 ;;
 40215                           
 40216                           	psect	text171
 40217   004D80                     __ptext171:
 40218                           	callstack 0
 40219   004D80                     _configIO:
 40220                           	callstack 11
 40221                           
 40222                           ; BSR set to: 0
 40223                           ;incstack = 0
 40224                           ;configIO@i stored from wreg
 40225   004D80  0101               	movlb	1	; () banked
 40226   004D82  6FBE               	movwf	configIO@i& (0+255),b
 40227                           
 40228                           ;../main.c: 448:     uint8_t action;;../main.c: 449:     uint8_t type;;../main.c: 451:  
      +                             if (i >= 16) return;
 40229   004D84  0E0F               	movlw	15
 40230   004D86  0101               	movlb	1	; () banked
 40231   004D88  65BE               	cpfsgt	configIO@i& (0+255),b
 40232   004D8A  D001               	goto	l18956
 40233   004D8C  0012               	return	
 40234   004D8E                     l18956:
 40235                           
 40236                           ; BSR set to: 1
 40237                           ;../main.c: 454:     type = (uint8_t)getNV((16 + 7*(i) + 0));
 40238   004D8E  51BE               	movf	configIO@i& (0+255),w,b
 40239   004D90  0D07               	mullw	7
 40240   004D92  50F3               	movf	243,w,c
 40241   004D94  0F10               	addlw	16
 40242   004D96  EC35  F05D         	call	_getNV
 40243   004D9A  0100               	movlb	0	; () banked
 40244   004D9C  518D               	movf	?_getNV& (0+255),w,b
 40245   004D9E  0101               	movlb	1	; () banked
 40246   004DA0  6FBD               	movwf	configIO@type& (0+255),b
 40247                           
 40248                           ;../main.c: 455:     switch (type) {
 40249   004DA2  D060               	goto	l18980
 40250   004DA4                     l18958:
 40251                           
 40252                           ; BSR set to: 1
 40253                           ;../main.c: 457:             if (getNV((16 + 7*(i) + 1)) & 0x04) {
 40254   004DA4  51BE               	movf	configIO@i& (0+255),w,b
 40255   004DA6  0D07               	mullw	7
 40256   004DA8  50F3               	movf	243,w,c
 40257   004DAA  0F11               	addlw	17
 40258   004DAC  EC35  F05D         	call	_getNV
 40259   004DB0  0100               	movlb	0	; () banked
 40260   004DB2  A58D               	btfss	?_getNV& (0+255),2,b
 40261   004DB4  D018               	goto	l18962
 40262                           
 40263                           ; BSR set to: 0
 40264                           ;../main.c: 458:                 setDigitalOutput(i, (uint8_t)readNVM(EEPROM_NVM_TYPE, (
      +                          eeprom_address_t)((eeprom_address_t)((0x3FF -8))-25)+i));
 40265   004DB6  0EDE               	movlw	222
 40266   004DB8  0101               	movlb	1	; () banked
 40267   004DBA  25BE               	addwf	configIO@i& (0+255),w,b
 40268   004DBC  6FB7               	movwf	??_configIO& (0+255),b
 40269   004DBE  6BB8               	clrf	(??_configIO+1)& (0+255),b
 40270   004DC0  0E03               	movlw	3
 40271   004DC2  23B8               	addwfc	(??_configIO+1)& (0+255),f,b
 40272   004DC4  C1B7  F091         	movff	??_configIO,readNVM@index
 40273   004DC8  C1B8  F092         	movff	??_configIO+1,readNVM@index+1
 40274   004DCC  0100               	movlb	0	; () banked
 40275   004DCE  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40276   004DD0  0E00               	movlw	0
 40277   004DD2  ECDD  F058         	call	_readNVM
 40278   004DD6  0100               	movlb	0	; () banked
 40279   004DD8  5191               	movf	?_readNVM& (0+255),w,b
 40280   004DDA  6F97               	movwf	setDigitalOutput@state& (0+255),b
 40281   004DDC  0101               	movlb	1	; () banked
 40282   004DDE  51BE               	movf	configIO@i& (0+255),w,b
 40283   004DE0  EC4D  F052         	call	_setDigitalOutput
 40284                           
 40285                           ;../main.c: 459:             } else {
 40286   004DE4  D122               	goto	l19014
 40287   004DE6                     l18962:
 40288                           
 40289                           ; BSR set to: 0
 40290                           ;../main.c: 460:                 action = (getNV((16 + 7*(i) + 1)) & 0x20) ? 1 : 2;
 40291   004DE6  0101               	movlb	1	; () banked
 40292   004DE8  51BE               	movf	configIO@i& (0+255),w,b
 40293   004DEA  0D07               	mullw	7
 40294   004DEC  50F3               	movf	243,w,c
 40295   004DEE  0F11               	addlw	17
 40296   004DF0  EC35  F05D         	call	_getNV
 40297   004DF4  0100               	movlb	0	; () banked
 40298   004DF6  BB8D               	btfsc	?_getNV& (0+255),5,b
 40299   004DF8  D005               	goto	l18966
 40300                           
 40301                           ; BSR set to: 0
 40302   004DFA  0E00               	movlw	0
 40303   004DFC  0101               	movlb	1	; () banked
 40304   004DFE  6FBB               	movwf	(_configIO$741+1)& (0+255),b
 40305   004E00  0E02               	movlw	2
 40306   004E02  D004               	goto	L25
 40307   004E04                     l18966:
 40308                           
 40309                           ; BSR set to: 0
 40310   004E04  0E00               	movlw	0
 40311   004E06  0101               	movlb	1	; () banked
 40312   004E08  6FBB               	movwf	(_configIO$741+1)& (0+255),b
 40313   004E0A  0E01               	movlw	1
 40314   004E0C                     L25:
 40315   004E0C  6FBA               	movwf	_configIO$741& (0+255),b
 40316                           
 40317                           ; BSR set to: 1
 40318   004E0E  C1BA  F1BC         	movff	_configIO$741,configIO@action
 40319                           
 40320                           ; BSR set to: 1
 40321                           ;../main.c: 461:                 setDigitalOutput(i, action);
 40322   004E12  C1BC  F097         	movff	configIO@action,setDigitalOutput@state
 40323   004E16  51BE               	movf	configIO@i& (0+255),w,b
 40324   004E18  EC4D  F052         	call	_setDigitalOutput
 40325                           
 40326                           ;../main.c: 463:                 writeNVM(EEPROM_NVM_TYPE, (eeprom_address_t)(((eeprom_a
      +                          ddress_t)((0x3FF -8))-25)+i), action);
 40327   004E1C  0EDE               	movlw	222
 40328   004E1E  0101               	movlb	1	; () banked
 40329   004E20  25BE               	addwf	configIO@i& (0+255),w,b
 40330   004E22  6FB7               	movwf	??_configIO& (0+255),b
 40331   004E24  6BB8               	clrf	(??_configIO+1)& (0+255),b
 40332   004E26  0E03               	movlw	3
 40333   004E28  23B8               	addwfc	(??_configIO+1)& (0+255),f,b
 40334   004E2A  C1B7  F0A4         	movff	??_configIO,writeNVM@index
 40335   004E2E  C1B8  F0A5         	movff	??_configIO+1,writeNVM@index+1
 40336   004E32  0100               	movlb	0	; () banked
 40337   004E34  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 40338   004E36  C1BC  F0A7         	movff	configIO@action,writeNVM@value
 40339   004E3A  0E00               	movlw	0
 40340   004E3C  EC66  F05B         	call	_writeNVM
 40341   004E40  D0F4               	goto	l19014
 40342   004E42                     l18974:
 40343                           
 40344                           ; BSR set to: 1
 40345                           ;../main.c: 472:             setDigitalOutput(i, getNV((16 + 7*(i) + 1)) & 0x10);
 40346   004E42  51BE               	movf	configIO@i& (0+255),w,b
 40347   004E44  0D07               	mullw	7
 40348   004E46  50F3               	movf	243,w,c
 40349   004E48  0F11               	addlw	17
 40350   004E4A  EC35  F05D         	call	_getNV
 40351   004E4E  0100               	movlb	0	; () banked
 40352   004E50  518D               	movf	?_getNV& (0+255),w,b
 40353   004E52  0B10               	andlw	16
 40354   004E54  0101               	movlb	1	; () banked
 40355   004E56  6FB9               	movwf	_configIO$8019& (0+255),b
 40356                           
 40357                           ; BSR set to: 1
 40358                           ;../main.c: 472:             setDigitalOutput(i, getNV((16 + 7*(i) + 1)) & 0x10);
 40359   004E58  C1B9  F097         	movff	_configIO$8019,setDigitalOutput@state
 40360   004E5C  51BE               	movf	configIO@i& (0+255),w,b
 40361   004E5E  EC4D  F052         	call	_setDigitalOutput
 40362                           
 40363                           ;../main.c: 473:             break;
 40364   004E62  D0E3               	goto	l19014
 40365   004E64                     l18980:
 40366                           
 40367                           ; BSR set to: 1
 40368   004E64  51BD               	movf	configIO@type& (0+255),w,b
 40369                           
 40370                           ; Switch size 1, requested type "simple"
 40371                           ; Number of cases is 3, Range of values is 1 to 3
 40372                           ; switch strategies available:
 40373                           ; Name         Instructions Cycles
 40374                           ; simple_byte           10     6 (average)
 40375                           ;	Chosen strategy is simple_byte
 40376   004E66  0A01               	xorlw	1	; case 1
 40377   004E68  B4D8               	btfsc	status,2,c
 40378   004E6A  D79C               	goto	l18958
 40379   004E6C  0A03               	xorlw	3	; case 2
 40380   004E6E  B4D8               	btfsc	status,2,c
 40381   004E70  D7E8               	goto	l18974
 40382   004E72  0A01               	xorlw	1	; case 3
 40383   004E74  B4D8               	btfsc	status,2,c
 40384   004E76  D7E5               	goto	l18974
 40385   004E78  D0D8               	goto	l19014
 40386   004E7A                     l18982:
 40387                           
 40388                           ; BSR set to: 1
 40389                           ;../main.c: 479:             if ((type == 0) || (type == 5) || (type == 6)) {
 40390   004E7A  51BD               	movf	configIO@type& (0+255),w,b
 40391   004E7C  B4D8               	btfsc	status,2,c
 40392   004E7E  D008               	goto	u19030
 40393                           
 40394                           ; BSR set to: 1
 40395   004E80  0E05               	movlw	5
 40396   004E82  19BD               	xorwf	configIO@type& (0+255),w,b
 40397   004E84  B4D8               	btfsc	status,2,c
 40398   004E86  D004               	goto	u19030
 40399                           
 40400                           ; BSR set to: 1
 40401   004E88  0E06               	movlw	6
 40402   004E8A  19BD               	xorwf	configIO@type& (0+255),w,b
 40403   004E8C  A4D8               	btfss	status,2,c
 40404   004E8E  D01E               	goto	l18990
 40405   004E90                     u19030:
 40406                           
 40407                           ; BSR set to: 1
 40408                           ;../main.c: 480:                 TRISA |= (1 << configs[i].no);
 40409   004E90  51BE               	movf	configIO@i& (0+255),w,b
 40410   004E92  0D04               	mullw	4
 40411   004E94  0E02               	movlw	2
 40412   004E96  26F3               	addwf	243,f,c
 40413   004E98  0E00               	movlw	0
 40414   004E9A  22F4               	addwfc	244,f,c
 40415   004E9C  0E35               	movlw	low _configs
 40416   004E9E  24F3               	addwf	243,w,c
 40417   004EA0  6EF6               	movwf	tblptrl,c
 40418   004EA2  0EEE               	movlw	high _configs
 40419   004EA4  20F4               	addwfc	244,w,c
 40420   004EA6  6EF7               	movwf	tblptrh,c
 40421   004EA8                     	if	1	;There are 3 active tblptr bytes
 40422   004EA8  6AF8               	clrf	tblptru,c
 40423   004EAA  0E00               	movlw	low (__mediumconst shr (0+16))
 40424   004EAC  22F8               	addwfc	tblptru,f,c
 40425   004EAE                     	endif
 40426   004EAE  0008               	tblrd		*
 40427   004EB0  CFF5 F1B7          	movff	tablat,??_configIO
 40428   004EB4  0E01               	movlw	1
 40429   004EB6  6FB8               	movwf	(??_configIO+1)& (0+255),b
 40430   004EB8  2BB7               	incf	??_configIO& (0+255),f,b
 40431   004EBA  D002               	goto	u19044
 40432   004EBC                     u19045:
 40433   004EBC  90D8               	bcf	status,0,c
 40434   004EBE  37B8               	rlcf	(??_configIO+1)& (0+255),f,b
 40435   004EC0                     u19044:
 40436   004EC0  2FB7               	decfsz	??_configIO& (0+255),f,b
 40437   004EC2  D7FC               	goto	u19045
 40438   004EC4  0101               	movlb	1	; () banked
 40439   004EC6  51B8               	movf	(??_configIO+1)& (0+255),w,b
 40440   004EC8  1292               	iorwf	146,f,c	;volatile
 40441                           
 40442                           ;../main.c: 481:             } else {
 40443   004ECA  0012               	return	
 40444   004ECC                     l18990:
 40445                           
 40446                           ; BSR set to: 1
 40447                           ;../main.c: 482:                 TRISA &= ~(1 << configs[i].no);
 40448   004ECC  51BE               	movf	configIO@i& (0+255),w,b
 40449   004ECE  0D04               	mullw	4
 40450   004ED0  0E02               	movlw	2
 40451   004ED2  26F3               	addwf	243,f,c
 40452   004ED4  0E00               	movlw	0
 40453   004ED6  22F4               	addwfc	244,f,c
 40454   004ED8  0E35               	movlw	low _configs
 40455   004EDA  24F3               	addwf	243,w,c
 40456   004EDC  6EF6               	movwf	tblptrl,c
 40457   004EDE  0EEE               	movlw	high _configs
 40458   004EE0  20F4               	addwfc	244,w,c
 40459   004EE2  6EF7               	movwf	tblptrh,c
 40460   004EE4                     	if	1	;There are 3 active tblptr bytes
 40461   004EE4  6AF8               	clrf	tblptru,c
 40462   004EE6  0E00               	movlw	low (__mediumconst shr (0+16))
 40463   004EE8  22F8               	addwfc	tblptru,f,c
 40464   004EEA                     	endif
 40465   004EEA  0008               	tblrd		*
 40466   004EEC  CFF5 F1B7          	movff	tablat,??_configIO
 40467   004EF0  0E01               	movlw	1
 40468   004EF2  6FB8               	movwf	(??_configIO+1)& (0+255),b
 40469   004EF4  2BB7               	incf	??_configIO& (0+255),f,b
 40470   004EF6  D002               	goto	u19054
 40471   004EF8                     u19055:
 40472   004EF8  90D8               	bcf	status,0,c
 40473   004EFA  37B8               	rlcf	(??_configIO+1)& (0+255),f,b
 40474   004EFC                     u19054:
 40475   004EFC  2FB7               	decfsz	??_configIO& (0+255),f,b
 40476   004EFE  D7FC               	goto	u19055
 40477   004F00  0101               	movlb	1	; () banked
 40478   004F02  51B8               	movf	(??_configIO+1)& (0+255),w,b
 40479   004F04  0AFF               	xorlw	255
 40480   004F06  1692               	andwf	146,f,c	;volatile
 40481   004F08  0012               	return	
 40482   004F0A                     l18992:
 40483                           
 40484                           ; BSR set to: 1
 40485                           ;../main.c: 486:             if ((type == 0) || (type == 5) || (type == 6)) {
 40486   004F0A  51BD               	movf	configIO@type& (0+255),w,b
 40487   004F0C  B4D8               	btfsc	status,2,c
 40488   004F0E  D008               	goto	u19080
 40489                           
 40490                           ; BSR set to: 1
 40491   004F10  0E05               	movlw	5
 40492   004F12  19BD               	xorwf	configIO@type& (0+255),w,b
 40493   004F14  B4D8               	btfsc	status,2,c
 40494   004F16  D004               	goto	u19080
 40495                           
 40496                           ; BSR set to: 1
 40497   004F18  0E06               	movlw	6
 40498   004F1A  19BD               	xorwf	configIO@type& (0+255),w,b
 40499   004F1C  A4D8               	btfss	status,2,c
 40500   004F1E  D01E               	goto	l19000
 40501   004F20                     u19080:
 40502                           
 40503                           ; BSR set to: 1
 40504                           ;../main.c: 487:                 TRISB |= (1 << configs[i].no);
 40505   004F20  51BE               	movf	configIO@i& (0+255),w,b
 40506   004F22  0D04               	mullw	4
 40507   004F24  0E02               	movlw	2
 40508   004F26  26F3               	addwf	243,f,c
 40509   004F28  0E00               	movlw	0
 40510   004F2A  22F4               	addwfc	244,f,c
 40511   004F2C  0E35               	movlw	low _configs
 40512   004F2E  24F3               	addwf	243,w,c
 40513   004F30  6EF6               	movwf	tblptrl,c
 40514   004F32  0EEE               	movlw	high _configs
 40515   004F34  20F4               	addwfc	244,w,c
 40516   004F36  6EF7               	movwf	tblptrh,c
 40517   004F38                     	if	1	;There are 3 active tblptr bytes
 40518   004F38  6AF8               	clrf	tblptru,c
 40519   004F3A  0E00               	movlw	low (__mediumconst shr (0+16))
 40520   004F3C  22F8               	addwfc	tblptru,f,c
 40521   004F3E                     	endif
 40522   004F3E  0008               	tblrd		*
 40523   004F40  CFF5 F1B7          	movff	tablat,??_configIO
 40524   004F44  0E01               	movlw	1
 40525   004F46  6FB8               	movwf	(??_configIO+1)& (0+255),b
 40526   004F48  2BB7               	incf	??_configIO& (0+255),f,b
 40527   004F4A  D002               	goto	u19094
 40528   004F4C                     u19095:
 40529   004F4C  90D8               	bcf	status,0,c
 40530   004F4E  37B8               	rlcf	(??_configIO+1)& (0+255),f,b
 40531   004F50                     u19094:
 40532   004F50  2FB7               	decfsz	??_configIO& (0+255),f,b
 40533   004F52  D7FC               	goto	u19095
 40534   004F54  0101               	movlb	1	; () banked
 40535   004F56  51B8               	movf	(??_configIO+1)& (0+255),w,b
 40536   004F58  1293               	iorwf	147,f,c	;volatile
 40537                           
 40538                           ;../main.c: 488:             } else {
 40539   004F5A  0012               	return	
 40540   004F5C                     l19000:
 40541                           
 40542                           ; BSR set to: 1
 40543                           ;../main.c: 489:                 TRISB &= ~(1 << configs[i].no);
 40544   004F5C  51BE               	movf	configIO@i& (0+255),w,b
 40545   004F5E  0D04               	mullw	4
 40546   004F60  0E02               	movlw	2
 40547   004F62  26F3               	addwf	243,f,c
 40548   004F64  0E00               	movlw	0
 40549   004F66  22F4               	addwfc	244,f,c
 40550   004F68  0E35               	movlw	low _configs
 40551   004F6A  24F3               	addwf	243,w,c
 40552   004F6C  6EF6               	movwf	tblptrl,c
 40553   004F6E  0EEE               	movlw	high _configs
 40554   004F70  20F4               	addwfc	244,w,c
 40555   004F72  6EF7               	movwf	tblptrh,c
 40556   004F74                     	if	1	;There are 3 active tblptr bytes
 40557   004F74  6AF8               	clrf	tblptru,c
 40558   004F76  0E00               	movlw	low (__mediumconst shr (0+16))
 40559   004F78  22F8               	addwfc	tblptru,f,c
 40560   004F7A                     	endif
 40561   004F7A  0008               	tblrd		*
 40562   004F7C  CFF5 F1B7          	movff	tablat,??_configIO
 40563   004F80  0E01               	movlw	1
 40564   004F82  6FB8               	movwf	(??_configIO+1)& (0+255),b
 40565   004F84  2BB7               	incf	??_configIO& (0+255),f,b
 40566   004F86  D002               	goto	u19104
 40567   004F88                     u19105:
 40568   004F88  90D8               	bcf	status,0,c
 40569   004F8A  37B8               	rlcf	(??_configIO+1)& (0+255),f,b
 40570   004F8C                     u19104:
 40571   004F8C  2FB7               	decfsz	??_configIO& (0+255),f,b
 40572   004F8E  D7FC               	goto	u19105
 40573   004F90  0101               	movlb	1	; () banked
 40574   004F92  51B8               	movf	(??_configIO+1)& (0+255),w,b
 40575   004F94  0AFF               	xorlw	255
 40576   004F96  1693               	andwf	147,f,c	;volatile
 40577   004F98  0012               	return	
 40578   004F9A                     l19002:
 40579                           
 40580                           ; BSR set to: 1
 40581                           ;../main.c: 493:             if ((type == 0) || (type == 5) || (type == 6)) {
 40582   004F9A  51BD               	movf	configIO@type& (0+255),w,b
 40583   004F9C  B4D8               	btfsc	status,2,c
 40584   004F9E  D008               	goto	u19130
 40585                           
 40586                           ; BSR set to: 1
 40587   004FA0  0E05               	movlw	5
 40588   004FA2  19BD               	xorwf	configIO@type& (0+255),w,b
 40589   004FA4  B4D8               	btfsc	status,2,c
 40590   004FA6  D004               	goto	u19130
 40591                           
 40592                           ; BSR set to: 1
 40593   004FA8  0E06               	movlw	6
 40594   004FAA  19BD               	xorwf	configIO@type& (0+255),w,b
 40595   004FAC  A4D8               	btfss	status,2,c
 40596   004FAE  D01E               	goto	l19010
 40597   004FB0                     u19130:
 40598                           
 40599                           ; BSR set to: 1
 40600                           ;../main.c: 494:                 TRISC |= (1 << configs[i].no);
 40601   004FB0  51BE               	movf	configIO@i& (0+255),w,b
 40602   004FB2  0D04               	mullw	4
 40603   004FB4  0E02               	movlw	2
 40604   004FB6  26F3               	addwf	243,f,c
 40605   004FB8  0E00               	movlw	0
 40606   004FBA  22F4               	addwfc	244,f,c
 40607   004FBC  0E35               	movlw	low _configs
 40608   004FBE  24F3               	addwf	243,w,c
 40609   004FC0  6EF6               	movwf	tblptrl,c
 40610   004FC2  0EEE               	movlw	high _configs
 40611   004FC4  20F4               	addwfc	244,w,c
 40612   004FC6  6EF7               	movwf	tblptrh,c
 40613   004FC8                     	if	1	;There are 3 active tblptr bytes
 40614   004FC8  6AF8               	clrf	tblptru,c
 40615   004FCA  0E00               	movlw	low (__mediumconst shr (0+16))
 40616   004FCC  22F8               	addwfc	tblptru,f,c
 40617   004FCE                     	endif
 40618   004FCE  0008               	tblrd		*
 40619   004FD0  CFF5 F1B7          	movff	tablat,??_configIO
 40620   004FD4  0E01               	movlw	1
 40621   004FD6  6FB8               	movwf	(??_configIO+1)& (0+255),b
 40622   004FD8  2BB7               	incf	??_configIO& (0+255),f,b
 40623   004FDA  D002               	goto	u19144
 40624   004FDC                     u19145:
 40625   004FDC  90D8               	bcf	status,0,c
 40626   004FDE  37B8               	rlcf	(??_configIO+1)& (0+255),f,b
 40627   004FE0                     u19144:
 40628   004FE0  2FB7               	decfsz	??_configIO& (0+255),f,b
 40629   004FE2  D7FC               	goto	u19145
 40630   004FE4  0101               	movlb	1	; () banked
 40631   004FE6  51B8               	movf	(??_configIO+1)& (0+255),w,b
 40632   004FE8  1294               	iorwf	148,f,c	;volatile
 40633                           
 40634                           ;../main.c: 495:             } else {
 40635   004FEA  0012               	return	
 40636   004FEC                     l19010:
 40637                           
 40638                           ; BSR set to: 1
 40639                           ;../main.c: 496:                 TRISC &= ~(1 << configs[i].no);
 40640   004FEC  51BE               	movf	configIO@i& (0+255),w,b
 40641   004FEE  0D04               	mullw	4
 40642   004FF0  0E02               	movlw	2
 40643   004FF2  26F3               	addwf	243,f,c
 40644   004FF4  0E00               	movlw	0
 40645   004FF6  22F4               	addwfc	244,f,c
 40646   004FF8  0E35               	movlw	low _configs
 40647   004FFA  24F3               	addwf	243,w,c
 40648   004FFC  6EF6               	movwf	tblptrl,c
 40649   004FFE  0EEE               	movlw	high _configs
 40650   005000  20F4               	addwfc	244,w,c
 40651   005002  6EF7               	movwf	tblptrh,c
 40652   005004                     	if	1	;There are 3 active tblptr bytes
 40653   005004  6AF8               	clrf	tblptru,c
 40654   005006  0E00               	movlw	low (__mediumconst shr (0+16))
 40655   005008  22F8               	addwfc	tblptru,f,c
 40656   00500A                     	endif
 40657   00500A  0008               	tblrd		*
 40658   00500C  CFF5 F1B7          	movff	tablat,??_configIO
 40659   005010  0E01               	movlw	1
 40660   005012  6FB8               	movwf	(??_configIO+1)& (0+255),b
 40661   005014  2BB7               	incf	??_configIO& (0+255),f,b
 40662   005016  D002               	goto	u19154
 40663   005018                     u19155:
 40664   005018  90D8               	bcf	status,0,c
 40665   00501A  37B8               	rlcf	(??_configIO+1)& (0+255),f,b
 40666   00501C                     u19154:
 40667   00501C  2FB7               	decfsz	??_configIO& (0+255),f,b
 40668   00501E  D7FC               	goto	u19155
 40669   005020  0101               	movlb	1	; () banked
 40670   005022  51B8               	movf	(??_configIO+1)& (0+255),w,b
 40671   005024  0AFF               	xorlw	255
 40672   005026  1694               	andwf	148,f,c	;volatile
 40673   005028  0012               	return	
 40674   00502A                     l19014:
 40675   00502A  0101               	movlb	1	; () banked
 40676   00502C  51BE               	movf	configIO@i& (0+255),w,b
 40677   00502E  0D04               	mullw	4
 40678   005030  0E01               	movlw	1
 40679   005032  26F3               	addwf	243,f,c
 40680   005034  0E00               	movlw	0
 40681   005036  22F4               	addwfc	244,f,c
 40682   005038  0E35               	movlw	low _configs
 40683   00503A  24F3               	addwf	243,w,c
 40684   00503C  6EF6               	movwf	tblptrl,c
 40685   00503E  0EEE               	movlw	high _configs
 40686   005040  20F4               	addwfc	244,w,c
 40687   005042  6EF7               	movwf	tblptrh,c
 40688   005044                     	if	1	;There are 3 active tblptr bytes
 40689   005044  6AF8               	clrf	tblptru,c
 40690   005046  0E00               	movlw	low (__mediumconst shr (0+16))
 40691   005048  22F8               	addwfc	tblptru,f,c
 40692   00504A                     	endif
 40693   00504A  0008               	tblrd		*
 40694   00504C  50F5               	movf	tablat,w,c
 40695                           
 40696                           ; Switch size 1, requested type "simple"
 40697                           ; Number of cases is 3, Range of values is 65 to 67
 40698                           ; switch strategies available:
 40699                           ; Name         Instructions Cycles
 40700                           ; simple_byte           10     6 (average)
 40701                           ;	Chosen strategy is simple_byte
 40702   00504E  0A41               	xorlw	65	; case 65
 40703   005050  B4D8               	btfsc	status,2,c
 40704   005052  D713               	goto	l18982
 40705   005054  0A03               	xorlw	3	; case 66
 40706   005056  B4D8               	btfsc	status,2,c
 40707   005058  D758               	goto	l18992
 40708   00505A  0A01               	xorlw	1	; case 67
 40709   00505C  A4D8               	btfss	status,2,c
 40710   00505E  0012               	return	
 40711   005060  D79C               	goto	l19002
 40712   005062                     __end_of_configIO:
 40713                           	callstack 0
 40714                           
 40715 ;; *************** function _writeNVM *****************
 40716 ;; Defined at:
 40717 ;;		line 520 in file "../../VLCBlib_PIC/nvm.c"
 40718 ;; Parameters:    Size  Location     Type
 40719 ;;  type            1    wreg     enum E12672
 40720 ;;  index           3   68[BANK0 ] unsigned um
 40721 ;;  value           1   71[BANK0 ] unsigned char 
 40722 ;; Auto vars:     Size  Location     Type
 40723 ;;  type            1   72[BANK0 ] enum E12672
 40724 ;; Return value:  Size  Location     Type
 40725 ;;                  1    wreg      unsigned char 
 40726 ;; Registers used:
 40727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40728 ;; Tracked objects:
 40729 ;;		On entry : 0/0
 40730 ;;		On exit  : 0/0
 40731 ;;		Unchanged: 0/0
 40732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40733 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40734 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40735 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40736 ;;      Totals:         0       5       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40737 ;;Total ram usage:        7 bytes
 40738 ;; Hardware stack levels used: 1
 40739 ;; Hardware stack levels required when called: 17
 40740 ;; This function calls:
 40741 ;;		_EEPROM_Write
 40742 ;;		_FLASH_Write
 40743 ;; This function is called by:
 40744 ;;		_configIO
 40745 ;;		_startDigitalOutput
 40746 ;;		_inputScan
 40747 ;;		_pollServos
 40748 ;;		_bootProcessMessage
 40749 ;;		_clearAllEvents
 40750 ;;		_removeTableEntry
 40751 ;;		_addEvent
 40752 ;;		_writeEv
 40753 ;;		_mnsFactoryReset
 40754 ;;		_mnsProcessMessage
 40755 ;;		_mnsPoll
 40756 ;;		_nvFactoryReset
 40757 ;;		_saveNV
 40758 ;;		_setNV
 40759 ;;		_factoryReset
 40760 ;;		_canFactoryReset
 40761 ;;		_setNewCanId
 40762 ;; This function uses a non-reentrant model
 40763 ;;
 40764                           
 40765                           	psect	text172
 40766   00B6CC                     __ptext172:
 40767                           	callstack 0
 40768   00B6CC                     _writeNVM:
 40769                           	callstack 11
 40770                           
 40771                           ; BSR set to: 1
 40772                           ;incstack = 0
 40773                           ;writeNVM@type stored from wreg
 40774   00B6CC  0100               	movlb	0	; () banked
 40775   00B6CE  6FA8               	movwf	writeNVM@type& (0+255),b
 40776                           
 40777                           ;../../VLCBlib_PIC/nvm.c: 521:     switch(type) {
 40778   00B6D0  D012               	goto	l18240
 40779   00B6D2                     l18230:
 40780                           
 40781                           ; BSR set to: 1
 40782                           ;../../VLCBlib_PIC/nvm.c: 523:             return EEPROM_Write((eeprom_address_t)index, 
      +                          value);;	Return value of _writeNVM is never used
 40783   00B6D2  C0A4  F08F         	movff	writeNVM@index,EEPROM_Write@index
 40784   00B6D6  C0A5  F090         	movff	writeNVM@index+1,EEPROM_Write@index+1
 40785   00B6DA  C0A7  F091         	movff	writeNVM@value,EEPROM_Write@value
 40786   00B6DE  EC4D  F057         	call	_EEPROM_Write	;wreg free
 40787   00B6E2  0012               	return	
 40788   00B6E4                     l18234:
 40789                           
 40790                           ; BSR set to: 1
 40791                           ;../../VLCBlib_PIC/nvm.c: 525:             return FLASH_Write((flash_address_t)index, va
      +                          lue);;	Return value of _writeNVM is never used
 40792   00B6E4  C0A4  F090         	movff	writeNVM@index,FLASH_Write@index
 40793   00B6E8  C0A5  F091         	movff	writeNVM@index+1,FLASH_Write@index+1
 40794   00B6EC  C0A7  F092         	movff	writeNVM@value,FLASH_Write@value
 40795   00B6F0  EC7F  F046         	call	_FLASH_Write	;wreg free
 40796   00B6F4  0012               	return	
 40797   00B6F6                     l18240:
 40798   00B6F6  0100               	movlb	0	; () banked
 40799   00B6F8  51A8               	movf	writeNVM@type& (0+255),w,b
 40800   00B6FA  0101               	movlb	1	; () banked
 40801   00B6FC  6FB5               	movwf	??_writeNVM& (0+255),b
 40802   00B6FE  6BB6               	clrf	(??_writeNVM+1)& (0+255),b
 40803                           
 40804                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 40805                           ; Switch size 1, requested type "simple"
 40806                           ; Number of cases is 1, Range of values is 0 to 0
 40807                           ; switch strategies available:
 40808                           ; Name         Instructions Cycles
 40809                           ; simple_byte            4     3 (average)
 40810                           ;	Chosen strategy is simple_byte
 40811   00B700  51B6               	movf	(??_writeNVM+1)& (0+255),w,b
 40812   00B702  0A00               	xorlw	0	; case 0
 40813   00B704  A4D8               	btfss	status,2,c
 40814   00B706  0012               	return	
 40815                           
 40816                           ; BSR set to: 1
 40817                           ; Switch size 1, requested type "simple"
 40818                           ; Number of cases is 2, Range of values is 0 to 1
 40819                           ; switch strategies available:
 40820                           ; Name         Instructions Cycles
 40821                           ; simple_byte            7     4 (average)
 40822                           ;	Chosen strategy is simple_byte
 40823   00B708  51B5               	movf	??_writeNVM& (0+255),w,b
 40824   00B70A  0A00               	xorlw	0	; case 0
 40825   00B70C  B4D8               	btfsc	status,2,c
 40826   00B70E  D7E1               	goto	l18230
 40827   00B710  0A01               	xorlw	1	; case 1
 40828   00B712  A4D8               	btfss	status,2,c
 40829   00B714  0012               	return	
 40830   00B716  D7E6               	goto	l18234
 40831   00B718                     __end_of_writeNVM:
 40832                           	callstack 0
 40833                           
 40834 ;; *************** function _FLASH_Write *****************
 40835 ;; Defined at:
 40836 ;;		line 474 in file "../../VLCBlib_PIC/nvm.c"
 40837 ;; Parameters:    Size  Location     Type
 40838 ;;  index           2   48[BANK0 ] unsigned short 
 40839 ;;  value           1   50[BANK0 ] unsigned char 
 40840 ;; Auto vars:     Size  Location     Type
 40841 ;;  oldValue        1    0        unsigned char 
 40842 ;; Return value:  Size  Location     Type
 40843 ;;                  1    wreg      unsigned char 
 40844 ;; Registers used:
 40845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40846 ;; Tracked objects:
 40847 ;;		On entry : 0/0
 40848 ;;		On exit  : 0/0
 40849 ;;		Unchanged: 0/0
 40850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40851 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40853 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40854 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40855 ;;Total ram usage:        7 bytes
 40856 ;; Hardware stack levels used: 1
 40857 ;; Hardware stack levels required when called: 16
 40858 ;; This function calls:
 40859 ;;		_eraseFlashBlock
 40860 ;;		_flushFlashBlock
 40861 ;;		_loadFlashBlock
 40862 ;; This function is called by:
 40863 ;;		_writeNVM
 40864 ;; This function uses a non-reentrant model
 40865 ;;
 40866                           
 40867                           	psect	text173
 40868   008CFE                     __ptext173:
 40869                           	callstack 0
 40870   008CFE                     _FLASH_Write:
 40871                           	callstack 11
 40872                           
 40873                           ;../../VLCBlib_PIC/nvm.c: 475:     uint8_t oldValue;;../../VLCBlib_PIC/nvm.c: 490:     i
      +                          f ((index&(~((flash_address_t)64 -1))) != flashBlock) {
 40874                           
 40875                           ;incstack = 0
 40876   008CFE  0EC0               	movlw	192
 40877   008D00  0100               	movlb	0	; () banked
 40878   008D02  1590               	andwf	FLASH_Write@index& (0+255),w,b
 40879   008D04  6F93               	movwf	??_FLASH_Write& (0+255),b
 40880   008D06  0EFF               	movlw	255
 40881   008D08  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 40882   008D0A  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 40883   008D0C  51AD               	movf	_flashBlock& (0+255),w,b
 40884   008D0E  1993               	xorwf	??_FLASH_Write& (0+255),w,b
 40885   008D10  E104               	bnz	u17950
 40886   008D12  51AE               	movf	(_flashBlock+1)& (0+255),w,b
 40887   008D14  1994               	xorwf	(??_FLASH_Write+1)& (0+255),w,b
 40888   008D16  B4D8               	btfsc	status,2,c
 40889   008D18  D015               	goto	l18216
 40890   008D1A                     u17950:
 40891                           
 40892                           ; BSR set to: 0
 40893                           ;../../VLCBlib_PIC/nvm.c: 491:         if (flashBlock != 0) {
 40894   008D1A  51AD               	movf	_flashBlock& (0+255),w,b
 40895   008D1C  11AE               	iorwf	(_flashBlock+1)& (0+255),w,b
 40896   008D1E  B4D8               	btfsc	status,2,c
 40897   008D20  D008               	goto	l18212
 40898                           
 40899                           ; BSR set to: 0
 40900                           ;../../VLCBlib_PIC/nvm.c: 493:             if (flashFlags.eraseNeeded) {
 40901   008D22  A3B8               	btfss	_flashFlags& (0+255),1,b
 40902   008D24  D004               	goto	l18210
 40903                           
 40904                           ; BSR set to: 0
 40905                           ;../../VLCBlib_PIC/nvm.c: 494:                 eraseFlashBlock();
 40906   008D26  EC8C  F05B         	call	_eraseFlashBlock	;wreg free
 40907                           
 40908                           ;../../VLCBlib_PIC/nvm.c: 495:                 flashFlags.eraseNeeded = 0;
 40909   008D2A  0100               	movlb	0	; () banked
 40910   008D2C  93B8               	bcf	_flashFlags& (0+255),1,b
 40911   008D2E                     l18210:
 40912                           
 40913                           ; BSR set to: 0
 40914                           ;../../VLCBlib_PIC/nvm.c: 498:             flushFlashBlock();
 40915   008D2E  EC1A  F053         	call	_flushFlashBlock	;wreg free
 40916   008D32                     l18212:
 40917                           
 40918                           ;../../VLCBlib_PIC/nvm.c: 502:         flashBlock = (index&(~((flash_address_t)64 -1)));
 40919   008D32  0EC0               	movlw	192
 40920   008D34  0100               	movlb	0	; () banked
 40921   008D36  1590               	andwf	FLASH_Write@index& (0+255),w,b
 40922   008D38  6FAD               	movwf	_flashBlock& (0+255),b
 40923   008D3A  0EFF               	movlw	255
 40924   008D3C  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 40925   008D3E  6FAE               	movwf	(_flashBlock+1)& (0+255),b
 40926                           
 40927                           ; BSR set to: 0
 40928                           ;../../VLCBlib_PIC/nvm.c: 503:         loadFlashBlock();
 40929   008D40  EC47  F05C         	call	_loadFlashBlock	;wreg free
 40930   008D44                     l18216:
 40931                           
 40932                           ;../../VLCBlib_PIC/nvm.c: 505:     flashFlags.eraseNeeded |= (value & ~flashBuffer[(inde
      +                          x&(64 -1))])?1:0;
 40933   008D44  0E3F               	movlw	63
 40934   008D46  0100               	movlb	0	; () banked
 40935   008D48  1590               	andwf	FLASH_Write@index& (0+255),w,b
 40936   008D4A  6F93               	movwf	??_FLASH_Write& (0+255),b
 40937   008D4C  0E00               	movlw	0
 40938   008D4E  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 40939   008D50  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 40940   008D52  0E48               	movlw	low _flashBuffer
 40941   008D54  2593               	addwf	??_FLASH_Write& (0+255),w,b
 40942   008D56  6ED9               	movwf	fsr2l,c
 40943   008D58  0E03               	movlw	high _flashBuffer
 40944   008D5A  2194               	addwfc	(??_FLASH_Write+1)& (0+255),w,b
 40945   008D5C  6EDA               	movwf	fsr2h,c
 40946   008D5E  50DF               	movf	indf2,w,c
 40947   008D60  0AFF               	xorlw	255
 40948   008D62  1592               	andwf	FLASH_Write@value& (0+255),w,b
 40949   008D64  0900               	iorlw	0
 40950   008D66  B4D8               	btfsc	status,2,c
 40951   008D68  D003               	goto	u17980
 40952   008D6A  6B95               	clrf	(??_FLASH_Write+2)& (0+255),b
 40953   008D6C  2B95               	incf	(??_FLASH_Write+2)& (0+255),f,b
 40954   008D6E  D002               	goto	u17998
 40955   008D70                     u17980:
 40956   008D70  0100               	movlb	0	; () banked
 40957   008D72  6B95               	clrf	(??_FLASH_Write+2)& (0+255),b
 40958   008D74                     u17998:
 40959   008D74  31B8               	rrcf	_flashFlags& (0+255),w,b
 40960   008D76  0B01               	andlw	1
 40961   008D78  6F96               	movwf	(??_FLASH_Write+3)& (0+255),b
 40962   008D7A  5195               	movf	(??_FLASH_Write+2)& (0+255),w,b
 40963   008D7C  1396               	iorwf	(??_FLASH_Write+3)& (0+255),f,b
 40964   008D7E  3796               	rlcf	(??_FLASH_Write+3)& (0+255),f,b
 40965   008D80  51B8               	movf	_flashFlags& (0+255),w,b
 40966   008D82  1996               	xorwf	(??_FLASH_Write+3)& (0+255),w,b
 40967   008D84  0BFD               	andlw	-3
 40968   008D86  1996               	xorwf	(??_FLASH_Write+3)& (0+255),w,b
 40969   008D88  6FB8               	movwf	_flashFlags& (0+255),b
 40970                           
 40971                           ; BSR set to: 0
 40972                           ;../../VLCBlib_PIC/nvm.c: 506:     if (flashBuffer[(index&(64 -1))] != value) {
 40973   008D8A  0E3F               	movlw	63
 40974   008D8C  1590               	andwf	FLASH_Write@index& (0+255),w,b
 40975   008D8E  6F93               	movwf	??_FLASH_Write& (0+255),b
 40976   008D90  0E00               	movlw	0
 40977   008D92  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 40978   008D94  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 40979   008D96  0E48               	movlw	low _flashBuffer
 40980   008D98  2593               	addwf	??_FLASH_Write& (0+255),w,b
 40981   008D9A  6ED9               	movwf	fsr2l,c
 40982   008D9C  0E03               	movlw	high _flashBuffer
 40983   008D9E  2194               	addwfc	(??_FLASH_Write+1)& (0+255),w,b
 40984   008DA0  6EDA               	movwf	fsr2h,c
 40985   008DA2  5192               	movf	FLASH_Write@value& (0+255),w,b
 40986   008DA4  18DE               	xorwf	postinc2,w,c
 40987   008DA6  B4D8               	btfsc	status,2,c
 40988   008DA8  D00F               	goto	l18224
 40989                           
 40990                           ; BSR set to: 0
 40991                           ;../../VLCBlib_PIC/nvm.c: 507:         flashFlags.writeNeeded = 1;
 40992   008DAA  81B8               	bsf	_flashFlags& (0+255),0,b
 40993                           
 40994                           ; BSR set to: 0
 40995                           ;../../VLCBlib_PIC/nvm.c: 508:         flashBuffer[(index&(64 -1))] = value;
 40996   008DAC  0E3F               	movlw	63
 40997   008DAE  1590               	andwf	FLASH_Write@index& (0+255),w,b
 40998   008DB0  6F93               	movwf	??_FLASH_Write& (0+255),b
 40999   008DB2  0E00               	movlw	0
 41000   008DB4  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 41001   008DB6  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 41002   008DB8  0E48               	movlw	low _flashBuffer
 41003   008DBA  2593               	addwf	??_FLASH_Write& (0+255),w,b
 41004   008DBC  6ED9               	movwf	fsr2l,c
 41005   008DBE  0E03               	movlw	high _flashBuffer
 41006   008DC0  2194               	addwfc	(??_FLASH_Write+1)& (0+255),w,b
 41007   008DC2  6EDA               	movwf	fsr2h,c
 41008   008DC4  C092  FFDF         	movff	FLASH_Write@value,indf2
 41009   008DC8                     l18224:
 41010                           
 41011                           ; BSR set to: 0
 41012                           ;../../VLCBlib_PIC/nvm.c: 510:     return GRSP_OK;
 41013   008DC8  0E00               	movlw	0
 41014                           
 41015                           ; BSR set to: 0
 41016   008DCA  0012               	return		;funcret
 41017   008DCC                     __end_of_FLASH_Write:
 41018                           	callstack 0
 41019                           
 41020 ;; *************** function _loadFlashBlock *****************
 41021 ;; Defined at:
 41022 ;;		line 436 in file "../../VLCBlib_PIC/nvm.c"
 41023 ;; Parameters:    Size  Location     Type
 41024 ;;		None
 41025 ;; Auto vars:     Size  Location     Type
 41026 ;;  i               1   45[BANK0 ] unsigned char 
 41027 ;; Return value:  Size  Location     Type
 41028 ;;                  1    wreg      void 
 41029 ;; Registers used:
 41030 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 41031 ;; Tracked objects:
 41032 ;;		On entry : 0/0
 41033 ;;		On exit  : 0/0
 41034 ;;		Unchanged: 0/0
 41035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41037 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41039 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41040 ;;Total ram usage:        1 bytes
 41041 ;; Hardware stack levels used: 1
 41042 ;; Hardware stack levels required when called: 12
 41043 ;; This function calls:
 41044 ;;		Nothing
 41045 ;; This function is called by:
 41046 ;;		_FLASH_Write
 41047 ;; This function uses a non-reentrant model
 41048 ;;
 41049                           
 41050                           	psect	text174
 41051   00B88E                     __ptext174:
 41052                           	callstack 0
 41053   00B88E                     _loadFlashBlock:
 41054                           	callstack 14
 41055                           
 41056                           ;../../VLCBlib_PIC/nvm.c: 438:     EECON1=0X80;
 41057                           
 41058                           ; BSR set to: 0
 41059                           ;incstack = 0
 41060   00B88E  0E80               	movlw	128
 41061   00B890  6E7F               	movwf	127,c	;volsfr
 41062                           
 41063                           ;../../VLCBlib_PIC/nvm.c: 439:     TBLPTR = flashBlock;
 41064   00B892  C0AD  FFF6         	movff	_flashBlock,tblptrl	;volatile
 41065   00B896  C0AE  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 41066   00B89A  6AF8               	clrf	248,c	;volatile
 41067                           
 41068                           ;../../VLCBlib_PIC/nvm.c: 440:     TBLPTRU = 0;
 41069   00B89C  0E00               	movlw	0
 41070   00B89E  6EF8               	movwf	248,c	;volatile
 41071                           
 41072                           ;../../VLCBlib_PIC/nvm.c: 441:     for (uint8_t i=0; i<64; i++) {
 41073   00B8A0  0E00               	movlw	0
 41074   00B8A2  0100               	movlb	0	; () banked
 41075   00B8A4  6F8D               	movwf	loadFlashBlock@i& (0+255),b
 41076   00B8A6                     l2588:
 41077                           
 41078                           ; BSR set to: 0
 41079   00B8A6  0009               	tblrd		*+	;# 
 41080                           
 41081                           ;../../VLCBlib_PIC/nvm.c: 443:         __nop();
 41082   00B8A8  0000               	nop	
 41083                           
 41084                           ;../../VLCBlib_PIC/nvm.c: 444:         flashBuffer[i] = TABLAT;
 41085   00B8AA  0E48               	movlw	low _flashBuffer
 41086   00B8AC  0100               	movlb	0	; () banked
 41087   00B8AE  258D               	addwf	loadFlashBlock@i& (0+255),w,b
 41088   00B8B0  6ED9               	movwf	fsr2l,c
 41089   00B8B2  6ADA               	clrf	fsr2h,c
 41090   00B8B4  0E03               	movlw	high _flashBuffer
 41091   00B8B6  22DA               	addwfc	fsr2h,f,c
 41092   00B8B8  CFF5 FFDF          	movff	tablat,indf2	;volatile
 41093                           
 41094                           ; BSR set to: 0
 41095                           ;../../VLCBlib_PIC/nvm.c: 445:     }
 41096   00B8BC  2B8D               	incf	loadFlashBlock@i& (0+255),f,b
 41097                           
 41098                           ; BSR set to: 0
 41099   00B8BE  0E3F               	movlw	63
 41100   00B8C0  658D               	cpfsgt	loadFlashBlock@i& (0+255),b
 41101   00B8C2  D7F1               	goto	l2588
 41102                           
 41103                           ; BSR set to: 0
 41104                           ;../../VLCBlib_PIC/nvm.c: 446:     TBLPTR = flashBlock;
 41105   00B8C4  C0AD  FFF6         	movff	_flashBlock,tblptrl	;volatile
 41106   00B8C8  C0AE  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 41107   00B8CC  6AF8               	clrf	248,c	;volatile
 41108                           
 41109                           ; BSR set to: 0
 41110                           ;../../VLCBlib_PIC/nvm.c: 447:     TBLPTRU = 0;
 41111   00B8CE  0E00               	movlw	0
 41112   00B8D0  6EF8               	movwf	248,c	;volatile
 41113                           
 41114                           ; BSR set to: 0
 41115                           ;../../VLCBlib_PIC/nvm.c: 463:     flashFlags.asByte = 0;
 41116   00B8D2  0E00               	movlw	0
 41117   00B8D4  6FB8               	movwf	_flashFlags& (0+255),b
 41118                           
 41119                           ; BSR set to: 0
 41120   00B8D6  0012               	return		;funcret
 41121   00B8D8                     __end_of_loadFlashBlock:
 41122                           	callstack 0
 41123                           
 41124 ;; *************** function _flushFlashBlock *****************
 41125 ;; Defined at:
 41126 ;;		line 364 in file "../../VLCBlib_PIC/nvm.c"
 41127 ;; Parameters:    Size  Location     Type
 41128 ;;		None
 41129 ;; Auto vars:     Size  Location     Type
 41130 ;;  i               1   47[BANK0 ] unsigned char 
 41131 ;;  interruptEna    1   46[BANK0 ] unsigned char 
 41132 ;; Return value:  Size  Location     Type
 41133 ;;                  1    wreg      void 
 41134 ;; Registers used:
 41135 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41136 ;; Tracked objects:
 41137 ;;		On entry : 0/0
 41138 ;;		On exit  : 0/0
 41139 ;;		Unchanged: 0/0
 41140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41142 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41144 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41145 ;;Total ram usage:        2 bytes
 41146 ;; Hardware stack levels used: 1
 41147 ;; Hardware stack levels required when called: 15
 41148 ;; This function calls:
 41149 ;;		_APP_isSuitableTimeToWriteFlash
 41150 ;;		_eraseFlashBlock
 41151 ;; This function is called by:
 41152 ;;		_APP_factoryReset
 41153 ;;		_deleteActionRange
 41154 ;;		_deleteHappeningRange
 41155 ;;		_clearAllEvents
 41156 ;;		_removeTableEntry
 41157 ;;		_addEvent
 41158 ;;		_poll
 41159 ;;		_FLASH_Write
 41160 ;; This function uses a non-reentrant model
 41161 ;;
 41162                           
 41163                           	psect	text175
 41164   00A634                     __ptext175:
 41165                           	callstack 0
 41166   00A634                     _flushFlashBlock:
 41167                           	callstack 11
 41168                           
 41169                           ;../../VLCBlib_PIC/nvm.c: 365:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 36
      +                          7:     TBLPTR = flashBlock;
 41170                           
 41171                           ; BSR set to: 0
 41172                           ;incstack = 0
 41173   00A634  C0AD  FFF6         	movff	_flashBlock,tblptrl	;volatile
 41174   00A638  C0AE  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 41175   00A63C  6AF8               	clrf	248,c	;volatile
 41176                           
 41177                           ;../../VLCBlib_PIC/nvm.c: 368:     TBLPTRU = 0;
 41178   00A63E  0E00               	movlw	0
 41179   00A640  6EF8               	movwf	248,c	;volatile
 41180                           
 41181                           ;../../VLCBlib_PIC/nvm.c: 373:     if (! flashFlags.writeNeeded) return;
 41182   00A642  0100               	movlb	0	; () banked
 41183   00A644  A1B8               	btfss	_flashFlags& (0+255),0,b
 41184   00A646  0012               	return	
 41185   00A648                     l17998:
 41186                           
 41187                           ;../../VLCBlib_PIC/nvm.c: 376:     while (APP_isSuitableTimeToWriteFlash() == BAD_TIME)
 41188   00A648  EC93  F061         	call	_APP_isSuitableTimeToWriteFlash	;wreg free
 41189   00A64C  0900               	iorlw	0
 41190   00A64E  B4D8               	btfsc	status,2,c
 41191   00A650  D7FB               	goto	l17998
 41192                           
 41193                           ;../../VLCBlib_PIC/nvm.c: 379:     if (flashFlags.eraseNeeded) {
 41194   00A652  0100               	movlb	0	; () banked
 41195   00A654  B3B8               	btfsc	_flashFlags& (0+255),1,b
 41196                           
 41197                           ; BSR set to: 0
 41198                           ;../../VLCBlib_PIC/nvm.c: 380:         eraseFlashBlock();
 41199   00A656  EC8C  F05B         	call	_eraseFlashBlock	;wreg free
 41200                           
 41201                           ;../../VLCBlib_PIC/nvm.c: 383:     interruptEnabled = (INTCONbits.GIEH);
 41202   00A65A  0E00               	movlw	0
 41203   00A65C  BEF2               	btfsc	242,7,c	;volatile
 41204   00A65E  0E01               	movlw	1
 41205   00A660  0100               	movlb	0	; () banked
 41206   00A662  6F8E               	movwf	flushFlashBlock@interruptEnabled& (0+255),b
 41207                           
 41208                           ; BSR set to: 0
 41209                           ;../../VLCBlib_PIC/nvm.c: 384:     {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
 41210   00A664  9EF2               	bcf	242,7,c	;volatile
 41211                           
 41212                           ; BSR set to: 0
 41213   00A666  9CF2               	bcf	242,6,c	;volatile
 41214                           
 41215                           ; BSR set to: 0
 41216                           ;../../VLCBlib_PIC/nvm.c: 386:     for (uint8_t i=0; i<64; i++) {
 41217   00A668  0E00               	movlw	0
 41218   00A66A  6F8F               	movwf	flushFlashBlock@i& (0+255),b
 41219   00A66C                     l18014:
 41220                           
 41221                           ; BSR set to: 0
 41222                           ;../../VLCBlib_PIC/nvm.c: 387:         TABLAT = flashBuffer[i];
 41223   00A66C  0E48               	movlw	low _flashBuffer
 41224   00A66E  258F               	addwf	flushFlashBlock@i& (0+255),w,b
 41225   00A670  6ED9               	movwf	fsr2l,c
 41226   00A672  6ADA               	clrf	fsr2h,c
 41227   00A674  0E03               	movlw	high _flashBuffer
 41228   00A676  22DA               	addwfc	fsr2h,f,c
 41229   00A678  50DF               	movf	indf2,w,c
 41230   00A67A  6EF5               	movwf	245,c	;volatile
 41231   00A67C  000D               	tblwt		*+	;# 
 41232                           
 41233                           ;../../VLCBlib_PIC/nvm.c: 389:     }
 41234   00A67E  0100               	movlb	0	; () banked
 41235   00A680  2B8F               	incf	flushFlashBlock@i& (0+255),f,b
 41236                           
 41237                           ; BSR set to: 0
 41238   00A682  0E3F               	movlw	63
 41239   00A684  658F               	cpfsgt	flushFlashBlock@i& (0+255),b
 41240   00A686  D7F2               	goto	l18014
 41241                           
 41242                           ; BSR set to: 0
 41243                           ;../../VLCBlib_PIC/nvm.c: 396:     TBLPTR = flashBlock;
 41244   00A688  C0AD  FFF6         	movff	_flashBlock,tblptrl	;volatile
 41245   00A68C  C0AE  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 41246   00A690  6AF8               	clrf	248,c	;volatile
 41247                           
 41248                           ; BSR set to: 0
 41249                           ;../../VLCBlib_PIC/nvm.c: 397:     TBLPTRU = 0;
 41250   00A692  0E00               	movlw	0
 41251   00A694  6EF8               	movwf	248,c	;volatile
 41252                           
 41253                           ; BSR set to: 0
 41254                           ;../../VLCBlib_PIC/nvm.c: 398:     EECON1bits.EEPGD = 1;
 41255   00A696  8E7F               	bsf	127,7,c	;volsfr
 41256                           
 41257                           ; BSR set to: 0
 41258                           ;../../VLCBlib_PIC/nvm.c: 399:     EECON1bits.CFGS = 0;
 41259   00A698  9C7F               	bcf	127,6,c	;volsfr
 41260                           
 41261                           ; BSR set to: 0
 41262                           ;../../VLCBlib_PIC/nvm.c: 400:     EECON1bits.FREE = 0;
 41263   00A69A  987F               	bcf	127,4,c	;volsfr
 41264                           
 41265                           ; BSR set to: 0
 41266                           ;../../VLCBlib_PIC/nvm.c: 401:     EECON1bits.WREN = 1;
 41267   00A69C  847F               	bsf	127,2,c	;volsfr
 41268                           
 41269                           ; BSR set to: 0
 41270                           ;../../VLCBlib_PIC/nvm.c: 403:     EECON2 = 0x55;
 41271   00A69E  0E55               	movlw	85
 41272   00A6A0  6E7E               	movwf	126,c	;volsfr
 41273                           
 41274                           ; BSR set to: 0
 41275                           ;../../VLCBlib_PIC/nvm.c: 404:     EECON2 = 0xAA;
 41276   00A6A2  0EAA               	movlw	170
 41277   00A6A4  6E7E               	movwf	126,c	;volsfr
 41278                           
 41279                           ; BSR set to: 0
 41280                           ;../../VLCBlib_PIC/nvm.c: 405:     EECON1bits.WR = 1;
 41281   00A6A6  827F               	bsf	127,1,c	;volsfr
 41282                           
 41283                           ; BSR set to: 0
 41284                           ;../../VLCBlib_PIC/nvm.c: 406:     EECON1bits.WREN = 0;
 41285   00A6A8  947F               	bcf	127,2,c	;volsfr
 41286                           
 41287                           ; BSR set to: 0
 41288                           ;../../VLCBlib_PIC/nvm.c: 427:     if (interruptEnabled) {
 41289   00A6AA  518E               	movf	flushFlashBlock@interruptEnabled& (0+255),w,b
 41290   00A6AC  B4D8               	btfsc	status,2,c
 41291   00A6AE  D002               	goto	l18044
 41292                           
 41293                           ; BSR set to: 0
 41294                           ;../../VLCBlib_PIC/nvm.c: 428:         {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
 41295   00A6B0  8EF2               	bsf	242,7,c	;volatile
 41296   00A6B2  8CF2               	bsf	242,6,c	;volatile
 41297   00A6B4                     l18044:
 41298                           
 41299                           ; BSR set to: 0
 41300                           ;../../VLCBlib_PIC/nvm.c: 430:     flashFlags.asByte = 0;
 41301   00A6B4  0E00               	movlw	0
 41302   00A6B6  6FB8               	movwf	_flashFlags& (0+255),b
 41303                           
 41304                           ; BSR set to: 0
 41305   00A6B8  0012               	return		;funcret
 41306   00A6BA                     __end_of_flushFlashBlock:
 41307                           	callstack 0
 41308                           
 41309 ;; *************** function _eraseFlashBlock *****************
 41310 ;; Defined at:
 41311 ;;		line 313 in file "../../VLCBlib_PIC/nvm.c"
 41312 ;; Parameters:    Size  Location     Type
 41313 ;;		None
 41314 ;; Auto vars:     Size  Location     Type
 41315 ;;  interruptEna    1   45[BANK0 ] unsigned char 
 41316 ;; Return value:  Size  Location     Type
 41317 ;;                  1    wreg      void 
 41318 ;; Registers used:
 41319 ;;		wreg, status,2, cstack
 41320 ;; Tracked objects:
 41321 ;;		On entry : 0/0
 41322 ;;		On exit  : 0/0
 41323 ;;		Unchanged: 0/0
 41324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41326 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41328 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41329 ;;Total ram usage:        1 bytes
 41330 ;; Hardware stack levels used: 1
 41331 ;; Hardware stack levels required when called: 14
 41332 ;; This function calls:
 41333 ;;		_APP_isSuitableTimeToWriteFlash
 41334 ;; This function is called by:
 41335 ;;		_flushFlashBlock
 41336 ;;		_FLASH_Write
 41337 ;; This function uses a non-reentrant model
 41338 ;;
 41339                           
 41340                           	psect	text176
 41341   00B718                     __ptext176:
 41342                           	callstack 0
 41343   00B718                     _eraseFlashBlock:
 41344                           	callstack 11
 41345                           
 41346                           ;../../VLCBlib_PIC/nvm.c: 317:     while (! APP_isSuitableTimeToWriteFlash())
 41347                           
 41348                           ;../../VLCBlib_PIC/nvm.c: 314:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 31
      +                          7:     while (! APP_isSuitableTimeToWriteFlash())
 41349                           
 41350                           ; BSR set to: 0
 41351                           ;incstack = 0
 41352   00B718  EC93  F061         	call	_APP_isSuitableTimeToWriteFlash	;wreg free
 41353   00B71C  0900               	iorlw	0
 41354   00B71E  B4D8               	btfsc	status,2,c
 41355   00B720  D7FB               	goto	__ptext176
 41356                           
 41357                           ;../../VLCBlib_PIC/nvm.c: 320:     interruptEnabled = (INTCONbits.GIEH);
 41358   00B722  0E00               	movlw	0
 41359   00B724  BEF2               	btfsc	242,7,c	;volatile
 41360   00B726  0E01               	movlw	1
 41361   00B728  0100               	movlb	0	; () banked
 41362   00B72A  6F8D               	movwf	eraseFlashBlock@interruptEnabled& (0+255),b
 41363                           
 41364                           ; BSR set to: 0
 41365                           ;../../VLCBlib_PIC/nvm.c: 322:     TBLPTR = flashBlock;
 41366   00B72C  C0AD  FFF6         	movff	_flashBlock,tblptrl	;volatile
 41367   00B730  C0AE  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 41368   00B734  6AF8               	clrf	248,c	;volatile
 41369                           
 41370                           ;../../VLCBlib_PIC/nvm.c: 323:     TBLPTRU = 0;
 41371   00B736  0E00               	movlw	0
 41372   00B738  6EF8               	movwf	248,c	;volatile
 41373                           
 41374                           ; BSR set to: 0
 41375                           ;../../VLCBlib_PIC/nvm.c: 324:     EECON1bits.EEPGD = 1;
 41376   00B73A  8E7F               	bsf	127,7,c	;volsfr
 41377                           
 41378                           ; BSR set to: 0
 41379                           ;../../VLCBlib_PIC/nvm.c: 325:     EECON1bits.CFGS = 0;
 41380   00B73C  9C7F               	bcf	127,6,c	;volsfr
 41381                           
 41382                           ; BSR set to: 0
 41383                           ;../../VLCBlib_PIC/nvm.c: 326:     EECON1bits.WREN = 1;
 41384   00B73E  847F               	bsf	127,2,c	;volsfr
 41385                           
 41386                           ; BSR set to: 0
 41387                           ;../../VLCBlib_PIC/nvm.c: 327:     EECON1bits.FREE = 1;
 41388   00B740  887F               	bsf	127,4,c	;volsfr
 41389                           
 41390                           ; BSR set to: 0
 41391                           ;../../VLCBlib_PIC/nvm.c: 328:     {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
 41392   00B742  9EF2               	bcf	242,7,c	;volatile
 41393                           
 41394                           ; BSR set to: 0
 41395   00B744  9CF2               	bcf	242,6,c	;volatile
 41396                           
 41397                           ;../../VLCBlib_PIC/nvm.c: 329:     EECON2 = 0x55;
 41398   00B746  0E55               	movlw	85
 41399   00B748  6E7E               	movwf	126,c	;volsfr
 41400                           
 41401                           ;../../VLCBlib_PIC/nvm.c: 330:     EECON2 = 0xaa;
 41402   00B74A  0EAA               	movlw	170
 41403   00B74C  6E7E               	movwf	126,c	;volsfr
 41404                           
 41405                           ; BSR set to: 0
 41406                           ;../../VLCBlib_PIC/nvm.c: 331:     EECON1bits.WR = 1;
 41407   00B74E  827F               	bsf	127,1,c	;volsfr
 41408   00B750                     l2570:
 41409                           
 41410                           ;../../VLCBlib_PIC/nvm.c: 332:     while(EECON1bits.WR)
 41411   00B750  B27F               	btfsc	127,1,c	;volsfr
 41412   00B752  D7FE               	goto	l2570
 41413                           
 41414                           ;../../VLCBlib_PIC/nvm.c: 334:     EECON1bits.WREN = 0;
 41415   00B754  947F               	bcf	127,2,c	;volsfr
 41416                           
 41417                           ;../../VLCBlib_PIC/nvm.c: 354:     if (interruptEnabled) {
 41418   00B756  0100               	movlb	0	; () banked
 41419   00B758  518D               	movf	eraseFlashBlock@interruptEnabled& (0+255),w,b
 41420   00B75A  B4D8               	btfsc	status,2,c
 41421   00B75C  0012               	return	
 41422                           
 41423                           ; BSR set to: 0
 41424                           ;../../VLCBlib_PIC/nvm.c: 355:         {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
 41425   00B75E  8EF2               	bsf	242,7,c	;volatile
 41426   00B760  8CF2               	bsf	242,6,c	;volatile
 41427                           
 41428                           ; BSR set to: 0
 41429   00B762  0012               	return		;funcret
 41430   00B764                     __end_of_eraseFlashBlock:
 41431                           	callstack 0
 41432                           
 41433 ;; *************** function _APP_isSuitableTimeToWriteFlash *****************
 41434 ;; Defined at:
 41435 ;;		line 377 in file "../main.c"
 41436 ;; Parameters:    Size  Location     Type
 41437 ;;		None
 41438 ;; Auto vars:     Size  Location     Type
 41439 ;;		None
 41440 ;; Return value:  Size  Location     Type
 41441 ;;                  1    wreg      enum E12676
 41442 ;; Registers used:
 41443 ;;		wreg, status,2, cstack
 41444 ;; Tracked objects:
 41445 ;;		On entry : 0/0
 41446 ;;		On exit  : 0/0
 41447 ;;		Unchanged: 0/0
 41448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41453 ;;Total ram usage:        0 bytes
 41454 ;; Hardware stack levels used: 1
 41455 ;; Hardware stack levels required when called: 13
 41456 ;; This function calls:
 41457 ;;		_isNoServoPulses
 41458 ;; This function is called by:
 41459 ;;		_eraseFlashBlock
 41460 ;;		_flushFlashBlock
 41461 ;; This function uses a non-reentrant model
 41462 ;;
 41463                           
 41464                           	psect	text177
 41465   00C326                     __ptext177:
 41466                           	callstack 0
 41467   00C326                     _APP_isSuitableTimeToWriteFlash:
 41468                           	callstack 11
 41469                           
 41470                           ;../main.c: 379:     return isNoServoPulses() ? GOOD_TIME : BAD_TIME;
 41471                           
 41472                           ; BSR set to: 0
 41473                           ;incstack = 0
 41474   00C326  ECA4  F061         	call	_isNoServoPulses	;wreg free
 41475   00C32A  0900               	iorlw	0
 41476   00C32C  B4D8               	btfsc	status,2,c
 41477   00C32E  D002               	goto	u17670
 41478   00C330  0E01               	movlw	1
 41479   00C332  0012               	return	
 41480   00C334                     u17670:
 41481   00C334  0E00               	movlw	0
 41482   00C336  0012               	return		;funcret
 41483   00C338                     __end_of_APP_isSuitableTimeToWriteFlash:
 41484                           	callstack 0
 41485                           
 41486 ;; *************** function _isNoServoPulses *****************
 41487 ;; Defined at:
 41488 ;;		line 694 in file "../servo.c"
 41489 ;; Parameters:    Size  Location     Type
 41490 ;;		None
 41491 ;; Auto vars:     Size  Location     Type
 41492 ;;		None
 41493 ;; Return value:  Size  Location     Type
 41494 ;;                  1    wreg      enum E12700
 41495 ;; Registers used:
 41496 ;;		wreg
 41497 ;; Tracked objects:
 41498 ;;		On entry : 0/0
 41499 ;;		On exit  : 0/0
 41500 ;;		Unchanged: 0/0
 41501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41506 ;;Total ram usage:        0 bytes
 41507 ;; Hardware stack levels used: 1
 41508 ;; Hardware stack levels required when called: 12
 41509 ;; This function calls:
 41510 ;;		Nothing
 41511 ;; This function is called by:
 41512 ;;		_APP_isSuitableTimeToWriteFlash
 41513 ;; This function uses a non-reentrant model
 41514 ;;
 41515                           
 41516                           	psect	text178
 41517   00C348                     __ptext178:
 41518                           	callstack 0
 41519   00C348                     _isNoServoPulses:
 41520                           	callstack 11
 41521                           
 41522                           ;../servo.c: 696:     if (T1CONbits.TMR1ON) return FALSE;
 41523                           
 41524                           ;incstack = 0
 41525   00C348  A0CD               	btfss	205,0,c	;volatile
 41526   00C34A  D002               	goto	l1128
 41527   00C34C                     u17650:
 41528   00C34C  0E00               	movlw	0
 41529   00C34E  0012               	return	
 41530   00C350                     l1128:
 41531                           
 41532                           ;../servo.c: 697:     if (T3CONbits.TMR3ON) return FALSE;
 41533   00C350  B0B1               	btfsc	177,0,c	;volatile
 41534   00C352  D7FC               	goto	u17650
 41535                           
 41536                           ;../servo.c: 699:     return TRUE;
 41537   00C354  0E01               	movlw	1
 41538   00C356  0012               	return		;funcret
 41539   00C358                     __end_of_isNoServoPulses:
 41540                           	callstack 0
 41541                           
 41542 ;; *************** function _EEPROM_Write *****************
 41543 ;; Defined at:
 41544 ;;		line 207 in file "../../VLCBlib_PIC/nvm.c"
 41545 ;; Parameters:    Size  Location     Type
 41546 ;;  index           2   47[BANK0 ] unsigned short 
 41547 ;;  value           1   49[BANK0 ] unsigned char 
 41548 ;; Auto vars:     Size  Location     Type
 41549 ;;  interruptEna    1   50[BANK0 ] unsigned char 
 41550 ;; Return value:  Size  Location     Type
 41551 ;;                  1    wreg      unsigned char 
 41552 ;; Registers used:
 41553 ;;		wreg, status,2, status,0, cstack
 41554 ;; Tracked objects:
 41555 ;;		On entry : 0/0
 41556 ;;		On exit  : 0/0
 41557 ;;		Unchanged: 0/0
 41558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41559 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41560 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41562 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41563 ;;Total ram usage:        4 bytes
 41564 ;; Hardware stack levels used: 1
 41565 ;; Hardware stack levels required when called: 13
 41566 ;; This function calls:
 41567 ;;		_EEPROM_Read
 41568 ;;		_updateModuleErrorStatus
 41569 ;; This function is called by:
 41570 ;;		_writeNVM
 41571 ;; This function uses a non-reentrant model
 41572 ;;
 41573                           
 41574                           	psect	text179
 41575   00AE9A                     __ptext179:
 41576                           	callstack 0
 41577   00AE9A                     _EEPROM_Write:
 41578                           	callstack 14
 41579                           
 41580                           ;../../VLCBlib_PIC/nvm.c: 208:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 20
      +                          9:     interruptEnabled = (INTCONbits.GIEH);
 41581                           
 41582                           ;incstack = 0
 41583   00AE9A  0E00               	movlw	0
 41584   00AE9C  BEF2               	btfsc	242,7,c	;volatile
 41585   00AE9E  0E01               	movlw	1
 41586   00AEA0  0100               	movlb	0	; () banked
 41587   00AEA2  6F92               	movwf	EEPROM_Write@interruptEnabled& (0+255),b
 41588   00AEA4                     l18162:
 41589                           
 41590                           ;../../VLCBlib_PIC/nvm.c: 212:         EEADRH = (index >> 8)&0xFF;
 41591   00AEA4  0100               	movlb	0	; () banked
 41592   00AEA6  5190               	movf	(EEPROM_Write@index+1)& (0+255),w,b
 41593   00AEA8  6E75               	movwf	117,c	;volatile
 41594                           
 41595                           ; BSR set to: 0
 41596                           ;../../VLCBlib_PIC/nvm.c: 213:         EEADR = index & 0xFF;
 41597   00AEAA  C08F  FF74         	movff	EEPROM_Write@index,3956	;volatile
 41598                           
 41599                           ; BSR set to: 0
 41600                           ;../../VLCBlib_PIC/nvm.c: 214:         EEDATA = value;
 41601   00AEAE  C091  FF73         	movff	EEPROM_Write@value,3955	;volatile
 41602                           
 41603                           ; BSR set to: 0
 41604                           ;../../VLCBlib_PIC/nvm.c: 215:         EECON1bits.EEPGD = 0;
 41605   00AEB2  9E7F               	bcf	127,7,c	;volsfr
 41606                           
 41607                           ; BSR set to: 0
 41608                           ;../../VLCBlib_PIC/nvm.c: 216:         EECON1bits.CFGS = 0;
 41609   00AEB4  9C7F               	bcf	127,6,c	;volsfr
 41610                           
 41611                           ; BSR set to: 0
 41612                           ;../../VLCBlib_PIC/nvm.c: 217:         EECON1bits.WREN = 1;
 41613   00AEB6  847F               	bsf	127,2,c	;volsfr
 41614                           
 41615                           ; BSR set to: 0
 41616                           ;../../VLCBlib_PIC/nvm.c: 219:         {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
 41617   00AEB8  9EF2               	bcf	242,7,c	;volatile
 41618                           
 41619                           ; BSR set to: 0
 41620   00AEBA  9CF2               	bcf	242,6,c	;volatile
 41621                           
 41622                           ; BSR set to: 0
 41623                           ;../../VLCBlib_PIC/nvm.c: 220:         EECON2 = 0x55;
 41624   00AEBC  0E55               	movlw	85
 41625   00AEBE  6E7E               	movwf	126,c	;volsfr
 41626                           
 41627                           ; BSR set to: 0
 41628                           ;../../VLCBlib_PIC/nvm.c: 221:         EECON2 = 0xAA;
 41629   00AEC0  0EAA               	movlw	170
 41630   00AEC2  6E7E               	movwf	126,c	;volsfr
 41631                           
 41632                           ; BSR set to: 0
 41633                           ;../../VLCBlib_PIC/nvm.c: 222:         EECON1bits.WR = 1;
 41634   00AEC4  827F               	bsf	127,1,c	;volsfr
 41635   00AEC6                     l2550:
 41636                           
 41637                           ;../../VLCBlib_PIC/nvm.c: 223:         while (EECON1bits.WR)
 41638   00AEC6  B27F               	btfsc	127,1,c	;volsfr
 41639   00AEC8  D7FE               	goto	l2550
 41640   00AECA                     u17910:
 41641                           
 41642                           ;../../VLCBlib_PIC/nvm.c: 225:         while (!EEIF)
 41643                           
 41644                           ;../../VLCBlib_PIC/nvm.c: 226:             ;
 41645   00AECA  ACB7               	btfss	4023,6,c	;volatile
 41646   00AECC  D7FE               	goto	u17910
 41647                           
 41648                           ;../../VLCBlib_PIC/nvm.c: 227:         EEIF = 0;
 41649   00AECE  9CB7               	bcf	4023,6,c	;volatile
 41650                           
 41651                           ;../../VLCBlib_PIC/nvm.c: 228:         if (interruptEnabled) {
 41652   00AED0  0100               	movlb	0	; () banked
 41653   00AED2  5192               	movf	EEPROM_Write@interruptEnabled& (0+255),w,b
 41654   00AED4  B4D8               	btfsc	status,2,c
 41655   00AED6  D002               	goto	l2556
 41656                           
 41657                           ; BSR set to: 0
 41658                           ;../../VLCBlib_PIC/nvm.c: 230:             {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
 41659   00AED8  8EF2               	bsf	242,7,c	;volatile
 41660   00AEDA  8CF2               	bsf	242,6,c	;volatile
 41661   00AEDC                     l2556:
 41662                           
 41663                           ; BSR set to: 0
 41664                           ;../../VLCBlib_PIC/nvm.c: 232:         EECON1bits.WREN = 0;
 41665   00AEDC  947F               	bcf	127,2,c	;volsfr
 41666                           
 41667                           ; BSR set to: 0
 41668                           ;../../VLCBlib_PIC/nvm.c: 268:         if (EEPROM_Read(index) == value) {
 41669   00AEDE  C08F  F08D         	movff	EEPROM_Write@index,EEPROM_Read@index
 41670   00AEE2  C090  F08E         	movff	EEPROM_Write@index+1,EEPROM_Read@index+1
 41671   00AEE6  EC10  F061         	call	_EEPROM_Read	;wreg free
 41672   00AEEA  0100               	movlb	0	; () banked
 41673   00AEEC  1991               	xorwf	EEPROM_Write@value& (0+255),w,b
 41674   00AEEE  B4D8               	btfsc	status,2,c
 41675   00AEF0  D006               	goto	l18196
 41676                           
 41677                           ; BSR set to: 0
 41678                           ;../../VLCBlib_PIC/nvm.c: 271:         mnsDiagnostics[0x03].asUint++;
 41679   00AEF2  0101               	movlb	1	; () banked
 41680   00AEF4  4BA0               	infsnz	(_mnsDiagnostics+6)& (0+255),f,b
 41681   00AEF6  2BA1               	incf	(_mnsDiagnostics+7)& (0+255),f,b
 41682                           
 41683                           ; BSR set to: 1
 41684                           ;../../VLCBlib_PIC/nvm.c: 272:         updateModuleErrorStatus();
 41685   00AEF8  ECAC  F061         	call	_updateModuleErrorStatus	;wreg free
 41686                           
 41687                           ;../../VLCBlib_PIC/nvm.c: 273:     } while (1);
 41688   00AEFC  D7D3               	goto	l18162
 41689   00AEFE                     l18196:
 41690                           
 41691                           ; BSR set to: 0
 41692                           ;../../VLCBlib_PIC/nvm.c: 274:     return GRSP_OK;
 41693   00AEFE  0E00               	movlw	0
 41694                           
 41695                           ; BSR set to: 0
 41696   00AF00  0012               	return		;funcret
 41697   00AF02                     __end_of_EEPROM_Write:
 41698                           	callstack 0
 41699                           
 41700 ;; *************** function _updateModuleErrorStatus *****************
 41701 ;; Defined at:
 41702 ;;		line 583 in file "../../VLCBlib_PIC/mns.c"
 41703 ;; Parameters:    Size  Location     Type
 41704 ;;		None
 41705 ;; Auto vars:     Size  Location     Type
 41706 ;;		None
 41707 ;; Return value:  Size  Location     Type
 41708 ;;                  1    wreg      void 
 41709 ;; Registers used:
 41710 ;;		wreg, status,2, status,0
 41711 ;; Tracked objects:
 41712 ;;		On entry : 0/0
 41713 ;;		On exit  : 0/0
 41714 ;;		Unchanged: 0/0
 41715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41720 ;;Total ram usage:        0 bytes
 41721 ;; Hardware stack levels used: 1
 41722 ;; Hardware stack levels required when called: 12
 41723 ;; This function calls:
 41724 ;;		Nothing
 41725 ;; This function is called by:
 41726 ;;		_EEPROM_Write
 41727 ;;		_canSendMessage
 41728 ;;		_processEnumeration
 41729 ;; This function uses a non-reentrant model
 41730 ;;
 41731                           
 41732                           	psect	text180
 41733   00C358                     __ptext180:
 41734                           	callstack 0
 41735   00C358                     _updateModuleErrorStatus:
 41736                           	callstack 14
 41737                           
 41738                           ;../../VLCBlib_PIC/mns.c: 584:     if (mnsDiagnostics[0x00].asBytes.lo < 0xFF) {
 41739                           
 41740                           ; BSR set to: 0
 41741                           ;incstack = 0
 41742   00C358  0101               	movlb	1	; () banked
 41743   00C35A  299A               	incf	_mnsDiagnostics& (0+255),w,b
 41744   00C35C  B4D8               	btfsc	status,2,c
 41745   00C35E  0012               	return	
 41746                           
 41747                           ; BSR set to: 1
 41748                           ;../../VLCBlib_PIC/mns.c: 585:         mnsDiagnostics[0x00].asBytes.lo++;
 41749   00C360  2B9A               	incf	_mnsDiagnostics& (0+255),f,b
 41750                           
 41751                           ; BSR set to: 1
 41752   00C362  0012               	return		;funcret
 41753   00C364                     __end_of_updateModuleErrorStatus:
 41754                           	callstack 0
 41755                           
 41756 ;; *************** function _setDigitalOutput *****************
 41757 ;; Defined at:
 41758 ;;		line 224 in file "../digitalOut.c"
 41759 ;; Parameters:    Size  Location     Type
 41760 ;;  io              1    wreg     unsigned char 
 41761 ;;  state           1   55[BANK0 ] unsigned char 
 41762 ;; Auto vars:     Size  Location     Type
 41763 ;;  io              1   57[BANK0 ] unsigned char 
 41764 ;;  pinState        1   56[BANK0 ] enum E12700
 41765 ;; Return value:  Size  Location     Type
 41766 ;;                  1    wreg      void 
 41767 ;; Registers used:
 41768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41769 ;; Tracked objects:
 41770 ;;		On entry : 0/0
 41771 ;;		On exit  : 0/0
 41772 ;;		Unchanged: 0/0
 41773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41774 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41775 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41777 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41778 ;;Total ram usage:        3 bytes
 41779 ;; Hardware stack levels used: 1
 41780 ;; Hardware stack levels required when called: 13
 41781 ;; This function calls:
 41782 ;;		_getNV
 41783 ;;		_setOutputPin
 41784 ;; This function is called by:
 41785 ;;		_configIO
 41786 ;;		_setOutputPosition
 41787 ;; This function uses a non-reentrant model
 41788 ;;
 41789                           
 41790                           	psect	text181
 41791   00A49A                     __ptext181:
 41792                           	callstack 0
 41793   00A49A                     _setDigitalOutput:
 41794                           	callstack 14
 41795                           
 41796                           ; BSR set to: 1
 41797                           ;incstack = 0
 41798                           ;setDigitalOutput@io stored from wreg
 41799   00A49A  0100               	movlb	0	; () banked
 41800   00A49C  6F99               	movwf	setDigitalOutput@io& (0+255),b
 41801                           
 41802                           ;../digitalOut.c: 225:     Boolean pinState;;../digitalOut.c: 226:     switch (state) {
 41803   00A49E  D038               	goto	l18862
 41804   00A4A0                     l18846:
 41805                           
 41806                           ; BSR set to: 0
 41807                           ;../digitalOut.c: 228:             state = 2;
 41808   00A4A0  0E02               	movlw	2
 41809   00A4A2  6F97               	movwf	setDigitalOutput@state& (0+255),b
 41810   00A4A4                     l18848:
 41811                           
 41812                           ; BSR set to: 0
 41813                           ;../digitalOut.c: 232:             pinState = (state == 1);
 41814   00A4A4  0597               	decf	setDigitalOutput@state& (0+255),w,b
 41815   00A4A6  A4D8               	btfss	status,2,c
 41816   00A4A8  D002               	goto	u18830
 41817   00A4AA  0E01               	movlw	1
 41818   00A4AC  D001               	goto	u18840
 41819   00A4AE                     u18830:
 41820   00A4AE  0E00               	movlw	0
 41821   00A4B0                     u18840:
 41822   00A4B0  6F98               	movwf	setDigitalOutput@pinState& (0+255),b
 41823                           
 41824                           ; BSR set to: 0
 41825                           ;../digitalOut.c: 236:             if (getNV((16 + 7*(io) + 1)) & 0x20) {
 41826   00A4B2  5199               	movf	setDigitalOutput@io& (0+255),w,b
 41827   00A4B4  0D07               	mullw	7
 41828   00A4B6  50F3               	movf	243,w,c
 41829   00A4B8  0F11               	addlw	17
 41830   00A4BA  EC35  F05D         	call	_getNV
 41831   00A4BE  0100               	movlb	0	; () banked
 41832   00A4C0  AB8D               	btfss	?_getNV& (0+255),5,b
 41833   00A4C2  D00B               	goto	l18854
 41834                           
 41835                           ; BSR set to: 0
 41836                           ;../digitalOut.c: 237:                 setOutputPin(io, ! pinState);
 41837   00A4C4  5198               	movf	setDigitalOutput@pinState& (0+255),w,b
 41838   00A4C6  A4D8               	btfss	status,2,c
 41839   00A4C8  D002               	goto	u18860
 41840   00A4CA  0E01               	movlw	1
 41841   00A4CC  D001               	goto	u18870
 41842   00A4CE                     u18860:
 41843   00A4CE  0E00               	movlw	0
 41844   00A4D0                     u18870:
 41845   00A4D0  6F91               	movwf	setOutputPin@state& (0+255),b
 41846   00A4D2  5199               	movf	setDigitalOutput@io& (0+255),w,b
 41847   00A4D4  EC7B  F037         	call	_setOutputPin
 41848                           
 41849                           ;../digitalOut.c: 238:             } else {
 41850   00A4D8  0012               	return	
 41851   00A4DA                     l18854:
 41852                           
 41853                           ; BSR set to: 0
 41854                           ;../digitalOut.c: 239:                 setOutputPin(io, pinState);
 41855   00A4DA  C098  F091         	movff	setDigitalOutput@pinState,setOutputPin@state
 41856   00A4DE  5199               	movf	setDigitalOutput@io& (0+255),w,b
 41857   00A4E0  EC7B  F037         	call	_setOutputPin
 41858   00A4E4  0012               	return	
 41859   00A4E6                     l18856:
 41860                           
 41861                           ; BSR set to: 0
 41862                           ;../digitalOut.c: 243:             flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3));
 41863   00A4E6  5199               	movf	setDigitalOutput@io& (0+255),w,b
 41864   00A4E8  0D07               	mullw	7
 41865   00A4EA  50F3               	movf	243,w,c
 41866   00A4EC  0F13               	addlw	19
 41867   00A4EE  EC35  F05D         	call	_getNV
 41868   00A4F2  0E94               	movlw	low _flashDelays
 41869   00A4F4  0100               	movlb	0	; () banked
 41870   00A4F6  2599               	addwf	setDigitalOutput@io& (0+255),w,b
 41871   00A4F8  6ED9               	movwf	fsr2l,c
 41872   00A4FA  6ADA               	clrf	fsr2h,c
 41873   00A4FC  0E02               	movlw	high _flashDelays
 41874   00A4FE  22DA               	addwfc	fsr2h,f,c
 41875   00A500  C08D  FFDF         	movff	?_getNV,indf2
 41876                           
 41877                           ; BSR set to: 0
 41878                           ;../digitalOut.c: 244:             setOutputPin(io, TRUE);
 41879   00A504  0E01               	movlw	1
 41880   00A506  6F91               	movwf	setOutputPin@state& (0+255),b
 41881   00A508  5199               	movf	setDigitalOutput@io& (0+255),w,b
 41882   00A50A  EC7B  F037         	call	_setOutputPin
 41883                           
 41884                           ;../digitalOut.c: 245:             break;
 41885   00A50E  0012               	return	
 41886   00A510                     l18862:
 41887   00A510  0100               	movlb	0	; () banked
 41888   00A512  5197               	movf	setDigitalOutput@state& (0+255),w,b
 41889                           
 41890                           ; Switch size 1, requested type "simple"
 41891                           ; Number of cases is 3, Range of values is 1 to 3
 41892                           ; switch strategies available:
 41893                           ; Name         Instructions Cycles
 41894                           ; simple_byte           10     6 (average)
 41895                           ;	Chosen strategy is simple_byte
 41896   00A514  0A01               	xorlw	1	; case 1
 41897   00A516  B4D8               	btfsc	status,2,c
 41898   00A518  D7C5               	goto	l18848
 41899   00A51A  0A03               	xorlw	3	; case 2
 41900   00A51C  B4D8               	btfsc	status,2,c
 41901   00A51E  D7C2               	goto	l18848
 41902   00A520  0A01               	xorlw	1	; case 3
 41903   00A522  B4D8               	btfsc	status,2,c
 41904   00A524  D7E0               	goto	l18856
 41905   00A526  D7BC               	goto	l18846
 41906   00A528                     __end_of_setDigitalOutput:
 41907                           	callstack 0
 41908                           
 41909 ;; *************** function _setOutputPin *****************
 41910 ;; Defined at:
 41911 ;;		line 254 in file "../digitalOut.c"
 41912 ;; Parameters:    Size  Location     Type
 41913 ;;  io              1    wreg     unsigned char 
 41914 ;;  state           1   49[BANK0 ] enum E12700
 41915 ;; Auto vars:     Size  Location     Type
 41916 ;;  io              1   52[BANK0 ] unsigned char 
 41917 ;; Return value:  Size  Location     Type
 41918 ;;                  1    wreg      void 
 41919 ;; Registers used:
 41920 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 41921 ;; Tracked objects:
 41922 ;;		On entry : 0/0
 41923 ;;		On exit  : 0/0
 41924 ;;		Unchanged: 0/0
 41925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41926 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41927 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41928 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41929 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41930 ;;Total ram usage:        4 bytes
 41931 ;; Hardware stack levels used: 1
 41932 ;; Hardware stack levels required when called: 12
 41933 ;; This function calls:
 41934 ;;		Nothing
 41935 ;; This function is called by:
 41936 ;;		_startDigitalOutput
 41937 ;;		_processOutputs
 41938 ;;		_setDigitalOutput
 41939 ;;		_setOutputPosition
 41940 ;;		_setupTimer1
 41941 ;;		_setupTimer3
 41942 ;; This function uses a non-reentrant model
 41943 ;;
 41944                           
 41945                           	psect	text182
 41946   006EF6                     __ptext182:
 41947                           	callstack 0
 41948   006EF6                     _setOutputPin:
 41949                           	callstack 15
 41950                           
 41951                           ;incstack = 0
 41952                           ;setOutputPin@io stored from wreg
 41953   006EF6  0100               	movlb	0	; () banked
 41954   006EF8  6F94               	movwf	setOutputPin@io& (0+255),b
 41955                           
 41956                           ;../digitalOut.c: 255:     switch (configs[io].port) {
 41957   006EFA  D0C0               	goto	l18712
 41958   006EFC                     l18692:
 41959                           
 41960                           ; BSR set to: 0
 41961                           ;../digitalOut.c: 257:             if (state) {
 41962   006EFC  5191               	movf	setOutputPin@state& (0+255),w,b
 41963   006EFE  B4D8               	btfsc	status,2,c
 41964   006F00  D01E               	goto	l18696
 41965                           
 41966                           ; BSR set to: 0
 41967                           ;../digitalOut.c: 259:                LATA |= (1<<configs[io].no);
 41968   006F02  5194               	movf	setOutputPin@io& (0+255),w,b
 41969   006F04  0D04               	mullw	4
 41970   006F06  0E02               	movlw	2
 41971   006F08  26F3               	addwf	243,f,c
 41972   006F0A  0E00               	movlw	0
 41973   006F0C  22F4               	addwfc	244,f,c
 41974   006F0E  0E35               	movlw	low _configs
 41975   006F10  24F3               	addwf	243,w,c
 41976   006F12  6EF6               	movwf	tblptrl,c
 41977   006F14  0EEE               	movlw	high _configs
 41978   006F16  20F4               	addwfc	244,w,c
 41979   006F18  6EF7               	movwf	tblptrh,c
 41980   006F1A                     	if	1	;There are 3 active tblptr bytes
 41981   006F1A  6AF8               	clrf	tblptru,c
 41982   006F1C  0E00               	movlw	low (__mediumconst shr (0+16))
 41983   006F1E  22F8               	addwfc	tblptru,f,c
 41984   006F20                     	endif
 41985   006F20  0008               	tblrd		*
 41986   006F22  CFF5 F092          	movff	tablat,??_setOutputPin
 41987   006F26  0E01               	movlw	1
 41988   006F28  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 41989   006F2A  2B92               	incf	??_setOutputPin& (0+255),f,b
 41990   006F2C  D002               	goto	u18574
 41991   006F2E                     u18575:
 41992   006F2E  90D8               	bcf	status,0,c
 41993   006F30  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 41994   006F32                     u18574:
 41995   006F32  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 41996   006F34  D7FC               	goto	u18575
 41997   006F36  0100               	movlb	0	; () banked
 41998   006F38  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 41999   006F3A  1289               	iorwf	137,f,c	;volatile
 42000                           
 42001                           ;../digitalOut.c: 260:             } else {
 42002   006F3C  0012               	return	
 42003   006F3E                     l18696:
 42004                           
 42005                           ; BSR set to: 0
 42006                           ;../digitalOut.c: 262:                 LATA &= ~(1<<configs[io].no);
 42007   006F3E  5194               	movf	setOutputPin@io& (0+255),w,b
 42008   006F40  0D04               	mullw	4
 42009   006F42  0E02               	movlw	2
 42010   006F44  26F3               	addwf	243,f,c
 42011   006F46  0E00               	movlw	0
 42012   006F48  22F4               	addwfc	244,f,c
 42013   006F4A  0E35               	movlw	low _configs
 42014   006F4C  24F3               	addwf	243,w,c
 42015   006F4E  6EF6               	movwf	tblptrl,c
 42016   006F50  0EEE               	movlw	high _configs
 42017   006F52  20F4               	addwfc	244,w,c
 42018   006F54  6EF7               	movwf	tblptrh,c
 42019   006F56                     	if	1	;There are 3 active tblptr bytes
 42020   006F56  6AF8               	clrf	tblptru,c
 42021   006F58  0E00               	movlw	low (__mediumconst shr (0+16))
 42022   006F5A  22F8               	addwfc	tblptru,f,c
 42023   006F5C                     	endif
 42024   006F5C  0008               	tblrd		*
 42025   006F5E  CFF5 F092          	movff	tablat,??_setOutputPin
 42026   006F62  0E01               	movlw	1
 42027   006F64  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 42028   006F66  2B92               	incf	??_setOutputPin& (0+255),f,b
 42029   006F68  D002               	goto	u18584
 42030   006F6A                     u18585:
 42031   006F6A  90D8               	bcf	status,0,c
 42032   006F6C  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 42033   006F6E                     u18584:
 42034   006F6E  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 42035   006F70  D7FC               	goto	u18585
 42036   006F72  0100               	movlb	0	; () banked
 42037   006F74  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 42038   006F76  0AFF               	xorlw	255
 42039   006F78  1689               	andwf	137,f,c	;volatile
 42040   006F7A  0012               	return	
 42041   006F7C                     l18698:
 42042                           
 42043                           ; BSR set to: 0
 42044                           ;../digitalOut.c: 266:             if (state) {
 42045   006F7C  5191               	movf	setOutputPin@state& (0+255),w,b
 42046   006F7E  B4D8               	btfsc	status,2,c
 42047   006F80  D01E               	goto	l18702
 42048                           
 42049                           ; BSR set to: 0
 42050                           ;../digitalOut.c: 268:                 LATB |= (1<<configs[io].no);
 42051   006F82  5194               	movf	setOutputPin@io& (0+255),w,b
 42052   006F84  0D04               	mullw	4
 42053   006F86  0E02               	movlw	2
 42054   006F88  26F3               	addwf	243,f,c
 42055   006F8A  0E00               	movlw	0
 42056   006F8C  22F4               	addwfc	244,f,c
 42057   006F8E  0E35               	movlw	low _configs
 42058   006F90  24F3               	addwf	243,w,c
 42059   006F92  6EF6               	movwf	tblptrl,c
 42060   006F94  0EEE               	movlw	high _configs
 42061   006F96  20F4               	addwfc	244,w,c
 42062   006F98  6EF7               	movwf	tblptrh,c
 42063   006F9A                     	if	1	;There are 3 active tblptr bytes
 42064   006F9A  6AF8               	clrf	tblptru,c
 42065   006F9C  0E00               	movlw	low (__mediumconst shr (0+16))
 42066   006F9E  22F8               	addwfc	tblptru,f,c
 42067   006FA0                     	endif
 42068   006FA0  0008               	tblrd		*
 42069   006FA2  CFF5 F092          	movff	tablat,??_setOutputPin
 42070   006FA6  0E01               	movlw	1
 42071   006FA8  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 42072   006FAA  2B92               	incf	??_setOutputPin& (0+255),f,b
 42073   006FAC  D002               	goto	u18604
 42074   006FAE                     u18605:
 42075   006FAE  90D8               	bcf	status,0,c
 42076   006FB0  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 42077   006FB2                     u18604:
 42078   006FB2  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 42079   006FB4  D7FC               	goto	u18605
 42080   006FB6  0100               	movlb	0	; () banked
 42081   006FB8  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 42082   006FBA  128A               	iorwf	138,f,c	;volatile
 42083                           
 42084                           ;../digitalOut.c: 269:             } else {
 42085   006FBC  0012               	return	
 42086   006FBE                     l18702:
 42087                           
 42088                           ; BSR set to: 0
 42089                           ;../digitalOut.c: 271:                 LATB &= ~(1<<configs[io].no);
 42090   006FBE  5194               	movf	setOutputPin@io& (0+255),w,b
 42091   006FC0  0D04               	mullw	4
 42092   006FC2  0E02               	movlw	2
 42093   006FC4  26F3               	addwf	243,f,c
 42094   006FC6  0E00               	movlw	0
 42095   006FC8  22F4               	addwfc	244,f,c
 42096   006FCA  0E35               	movlw	low _configs
 42097   006FCC  24F3               	addwf	243,w,c
 42098   006FCE  6EF6               	movwf	tblptrl,c
 42099   006FD0  0EEE               	movlw	high _configs
 42100   006FD2  20F4               	addwfc	244,w,c
 42101   006FD4  6EF7               	movwf	tblptrh,c
 42102   006FD6                     	if	1	;There are 3 active tblptr bytes
 42103   006FD6  6AF8               	clrf	tblptru,c
 42104   006FD8  0E00               	movlw	low (__mediumconst shr (0+16))
 42105   006FDA  22F8               	addwfc	tblptru,f,c
 42106   006FDC                     	endif
 42107   006FDC  0008               	tblrd		*
 42108   006FDE  CFF5 F092          	movff	tablat,??_setOutputPin
 42109   006FE2  0E01               	movlw	1
 42110   006FE4  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 42111   006FE6  2B92               	incf	??_setOutputPin& (0+255),f,b
 42112   006FE8  D002               	goto	u18614
 42113   006FEA                     u18615:
 42114   006FEA  90D8               	bcf	status,0,c
 42115   006FEC  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 42116   006FEE                     u18614:
 42117   006FEE  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 42118   006FF0  D7FC               	goto	u18615
 42119   006FF2  0100               	movlb	0	; () banked
 42120   006FF4  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 42121   006FF6  0AFF               	xorlw	255
 42122   006FF8  168A               	andwf	138,f,c	;volatile
 42123   006FFA  0012               	return	
 42124   006FFC                     l18704:
 42125                           
 42126                           ; BSR set to: 0
 42127                           ;../digitalOut.c: 275:             if (state) {
 42128   006FFC  5191               	movf	setOutputPin@state& (0+255),w,b
 42129   006FFE  B4D8               	btfsc	status,2,c
 42130   007000  D01E               	goto	l18708
 42131                           
 42132                           ; BSR set to: 0
 42133                           ;../digitalOut.c: 277:                 LATC |= (1<<configs[io].no);
 42134   007002  5194               	movf	setOutputPin@io& (0+255),w,b
 42135   007004  0D04               	mullw	4
 42136   007006  0E02               	movlw	2
 42137   007008  26F3               	addwf	243,f,c
 42138   00700A  0E00               	movlw	0
 42139   00700C  22F4               	addwfc	244,f,c
 42140   00700E  0E35               	movlw	low _configs
 42141   007010  24F3               	addwf	243,w,c
 42142   007012  6EF6               	movwf	tblptrl,c
 42143   007014  0EEE               	movlw	high _configs
 42144   007016  20F4               	addwfc	244,w,c
 42145   007018  6EF7               	movwf	tblptrh,c
 42146   00701A                     	if	1	;There are 3 active tblptr bytes
 42147   00701A  6AF8               	clrf	tblptru,c
 42148   00701C  0E00               	movlw	low (__mediumconst shr (0+16))
 42149   00701E  22F8               	addwfc	tblptru,f,c
 42150   007020                     	endif
 42151   007020  0008               	tblrd		*
 42152   007022  CFF5 F092          	movff	tablat,??_setOutputPin
 42153   007026  0E01               	movlw	1
 42154   007028  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 42155   00702A  2B92               	incf	??_setOutputPin& (0+255),f,b
 42156   00702C  D002               	goto	u18634
 42157   00702E                     u18635:
 42158   00702E  90D8               	bcf	status,0,c
 42159   007030  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 42160   007032                     u18634:
 42161   007032  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 42162   007034  D7FC               	goto	u18635
 42163   007036  0100               	movlb	0	; () banked
 42164   007038  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 42165   00703A  128B               	iorwf	139,f,c	;volatile
 42166                           
 42167                           ;../digitalOut.c: 278:             } else {
 42168   00703C  0012               	return	
 42169   00703E                     l18708:
 42170                           
 42171                           ; BSR set to: 0
 42172                           ;../digitalOut.c: 280:                 LATC &= ~(1<<configs[io].no);
 42173   00703E  5194               	movf	setOutputPin@io& (0+255),w,b
 42174   007040  0D04               	mullw	4
 42175   007042  0E02               	movlw	2
 42176   007044  26F3               	addwf	243,f,c
 42177   007046  0E00               	movlw	0
 42178   007048  22F4               	addwfc	244,f,c
 42179   00704A  0E35               	movlw	low _configs
 42180   00704C  24F3               	addwf	243,w,c
 42181   00704E  6EF6               	movwf	tblptrl,c
 42182   007050  0EEE               	movlw	high _configs
 42183   007052  20F4               	addwfc	244,w,c
 42184   007054  6EF7               	movwf	tblptrh,c
 42185   007056                     	if	1	;There are 3 active tblptr bytes
 42186   007056  6AF8               	clrf	tblptru,c
 42187   007058  0E00               	movlw	low (__mediumconst shr (0+16))
 42188   00705A  22F8               	addwfc	tblptru,f,c
 42189   00705C                     	endif
 42190   00705C  0008               	tblrd		*
 42191   00705E  CFF5 F092          	movff	tablat,??_setOutputPin
 42192   007062  0E01               	movlw	1
 42193   007064  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 42194   007066  2B92               	incf	??_setOutputPin& (0+255),f,b
 42195   007068  D002               	goto	u18644
 42196   00706A                     u18645:
 42197   00706A  90D8               	bcf	status,0,c
 42198   00706C  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 42199   00706E                     u18644:
 42200   00706E  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 42201   007070  D7FC               	goto	u18645
 42202   007072  0100               	movlb	0	; () banked
 42203   007074  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 42204   007076  0AFF               	xorlw	255
 42205   007078  168B               	andwf	139,f,c	;volatile
 42206   00707A  0012               	return	
 42207   00707C                     l18712:
 42208   00707C  0100               	movlb	0	; () banked
 42209   00707E  5194               	movf	setOutputPin@io& (0+255),w,b
 42210   007080  0D04               	mullw	4
 42211   007082  0E01               	movlw	1
 42212   007084  26F3               	addwf	243,f,c
 42213   007086  0E00               	movlw	0
 42214   007088  22F4               	addwfc	244,f,c
 42215   00708A  0E35               	movlw	low _configs
 42216   00708C  24F3               	addwf	243,w,c
 42217   00708E  6EF6               	movwf	tblptrl,c
 42218   007090  0EEE               	movlw	high _configs
 42219   007092  20F4               	addwfc	244,w,c
 42220   007094  6EF7               	movwf	tblptrh,c
 42221   007096                     	if	1	;There are 3 active tblptr bytes
 42222   007096  6AF8               	clrf	tblptru,c
 42223   007098  0E00               	movlw	low (__mediumconst shr (0+16))
 42224   00709A  22F8               	addwfc	tblptru,f,c
 42225   00709C                     	endif
 42226   00709C  0008               	tblrd		*
 42227   00709E  50F5               	movf	tablat,w,c
 42228                           
 42229                           ; Switch size 1, requested type "simple"
 42230                           ; Number of cases is 3, Range of values is 65 to 67
 42231                           ; switch strategies available:
 42232                           ; Name         Instructions Cycles
 42233                           ; simple_byte           10     6 (average)
 42234                           ;	Chosen strategy is simple_byte
 42235   0070A0  0A41               	xorlw	65	; case 65
 42236   0070A2  B4D8               	btfsc	status,2,c
 42237   0070A4  D72B               	goto	l18692
 42238   0070A6  0A03               	xorlw	3	; case 66
 42239   0070A8  B4D8               	btfsc	status,2,c
 42240   0070AA  D768               	goto	l18698
 42241   0070AC  0A01               	xorlw	1	; case 67
 42242   0070AE  A4D8               	btfss	status,2,c
 42243   0070B0  0012               	return	
 42244   0070B2  D7A4               	goto	l18704
 42245   0070B4                     __end_of_setOutputPin:
 42246                           	callstack 0
 42247                           
 42248 ;; *************** function _getNV *****************
 42249 ;; Defined at:
 42250 ;;		line 171 in file "../../VLCBlib_PIC/nv.c"
 42251 ;; Parameters:    Size  Location     Type
 42252 ;;  index           1    wreg     unsigned char 
 42253 ;; Auto vars:     Size  Location     Type
 42254 ;;  index           1   48[BANK0 ] unsigned char 
 42255 ;; Return value:  Size  Location     Type
 42256 ;;                  2   45[BANK0 ] short 
 42257 ;; Registers used:
 42258 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 42259 ;; Tracked objects:
 42260 ;;		On entry : 0/0
 42261 ;;		On exit  : 0/0
 42262 ;;		Unchanged: 0/0
 42263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42264 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42265 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42266 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42267 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42268 ;;Total ram usage:        4 bytes
 42269 ;; Hardware stack levels used: 1
 42270 ;; Hardware stack levels required when called: 12
 42271 ;; This function calls:
 42272 ;;		Nothing
 42273 ;; This function is called by:
 42274 ;;		_setup
 42275 ;;		_loop
 42276 ;;		_configIO
 42277 ;;		_startDigitalOutput
 42278 ;;		_processOutputs
 42279 ;;		_setDigitalOutput
 42280 ;;		_initInputScan
 42281 ;;		_inputScan
 42282 ;;		_readInput
 42283 ;;		_consumer2QProcessMessage
 42284 ;;		_processActions
 42285 ;;		_doSOD
 42286 ;;		_APP_nvValueChanged
 42287 ;;		_setOutputPosition
 42288 ;;		_initServos
 42289 ;;		_startServos
 42290 ;;		_setupTimer1
 42291 ;;		_setupTimer3
 42292 ;;		_pollServos
 42293 ;;		_startServoOutput
 42294 ;;		_startMultiOutput
 42295 ;;		_setServoState
 42296 ;;		_setBounceState
 42297 ;;		_setMultiState
 42298 ;;		_bounceDown
 42299 ;;		_bounceUp
 42300 ;;		_nvProcessMessage
 42301 ;;		_nvTRnvrdCallback
 42302 ;; This function uses a non-reentrant model
 42303 ;;
 42304                           
 42305                           	psect	text183
 42306   00BA6A                     __ptext183:
 42307                           	callstack 0
 42308   00BA6A                     _getNV:
 42309                           	callstack 14
 42310                           
 42311                           ; BSR set to: 0
 42312                           ;incstack = 0
 42313                           ;getNV@index stored from wreg
 42314   00BA6A  0100               	movlb	0	; () banked
 42315   00BA6C  6F90               	movwf	getNV@index& (0+255),b
 42316                           
 42317                           ;../../VLCBlib_PIC/nv.c: 172:     if (index == 0) return 127;
 42318   00BA6E  0100               	movlb	0	; () banked
 42319   00BA70  5190               	movf	getNV@index& (0+255),w,b
 42320   00BA72  A4D8               	btfss	status,2,c
 42321   00BA74  D005               	goto	l18680
 42322                           
 42323                           ; BSR set to: 0
 42324   00BA76  0E00               	movlw	0
 42325   00BA78  6F8E               	movwf	(?_getNV+1)& (0+255),b
 42326   00BA7A  0E7F               	movlw	127
 42327   00BA7C  6F8D               	movwf	?_getNV& (0+255),b
 42328   00BA7E  0012               	return	
 42329   00BA80                     l18680:
 42330                           
 42331                           ; BSR set to: 0
 42332                           ;../../VLCBlib_PIC/nv.c: 173:     if (index > 127) return -CMDERR_INV_NV_IDX;
 42333   00BA80  0E7F               	movlw	127
 42334   00BA82  6590               	cpfsgt	getNV@index& (0+255),b
 42335   00BA84  D005               	goto	l18686
 42336                           
 42337                           ; BSR set to: 0
 42338   00BA86  0EFF               	movlw	255
 42339   00BA88  6F8E               	movwf	(?_getNV+1)& (0+255),b
 42340   00BA8A  0EF6               	movlw	246
 42341   00BA8C  6F8D               	movwf	?_getNV& (0+255),b
 42342   00BA8E  0012               	return	
 42343   00BA90                     l18686:
 42344                           
 42345                           ; BSR set to: 0
 42346                           ;../../VLCBlib_PIC/nv.c: 175:     return nvCache[index];
 42347   00BA90  0E00               	movlw	low _nvCache
 42348   00BA92  2590               	addwf	getNV@index& (0+255),w,b
 42349   00BA94  6ED9               	movwf	fsr2l,c
 42350   00BA96  6ADA               	clrf	fsr2h,c
 42351   00BA98  0E04               	movlw	high _nvCache
 42352   00BA9A  22DA               	addwfc	fsr2h,f,c
 42353   00BA9C  50DF               	movf	indf2,w,c
 42354   00BA9E  6F8F               	movwf	??_getNV& (0+255),b
 42355   00BAA0  518F               	movf	??_getNV& (0+255),w,b
 42356   00BAA2  6F8D               	movwf	?_getNV& (0+255),b
 42357   00BAA4  6B8E               	clrf	(?_getNV+1)& (0+255),b
 42358                           
 42359                           ; BSR set to: 0
 42360   00BAA6  0012               	return		;funcret
 42361   00BAA8                     __end_of_getNV:
 42362                           	callstack 0
 42363                           
 42364 ;; *************** function _readNVM *****************
 42365 ;; Defined at:
 42366 ;;		line 537 in file "../../VLCBlib_PIC/nvm.c"
 42367 ;; Parameters:    Size  Location     Type
 42368 ;;  type            1    wreg     enum E12672
 42369 ;;  index           3   49[BANK0 ] unsigned um
 42370 ;; Auto vars:     Size  Location     Type
 42371 ;;  type            1   54[BANK0 ] enum E12672
 42372 ;; Return value:  Size  Location     Type
 42373 ;;                  2   49[BANK0 ] short 
 42374 ;; Registers used:
 42375 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 42376 ;; Tracked objects:
 42377 ;;		On entry : 0/0
 42378 ;;		On exit  : 0/0
 42379 ;;		Unchanged: 0/0
 42380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42381 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42382 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42383 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42384 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42385 ;;Total ram usage:        6 bytes
 42386 ;; Hardware stack levels used: 1
 42387 ;; Hardware stack levels required when called: 13
 42388 ;; This function calls:
 42389 ;;		_EEPROM_Read
 42390 ;;		_FLASH_Read
 42391 ;; This function is called by:
 42392 ;;		_configIO
 42393 ;;		_initInputScan
 42394 ;;		_doSOD
 42395 ;;		_initServos
 42396 ;;		_deleteHappeningRange
 42397 ;;		_doNnevn
 42398 ;;		_removeTableEntry
 42399 ;;		_addEvent
 42400 ;;		_writeEv
 42401 ;;		_getEv
 42402 ;;		_numEv
 42403 ;;		_getEVs
 42404 ;;		_getNN
 42405 ;;		_getEN
 42406 ;;		_validStart
 42407 ;;		_mnsPowerUp
 42408 ;;		_loadNvCache
 42409 ;;		_main
 42410 ;;		_canPowerUp
 42411 ;; This function uses a non-reentrant model
 42412 ;;
 42413                           
 42414                           	psect	text184
 42415   00B1BA                     __ptext184:
 42416                           	callstack 0
 42417   00B1BA                     _readNVM:
 42418                           	callstack 15
 42419                           
 42420                           ; BSR set to: 0
 42421                           ;incstack = 0
 42422                           ;readNVM@type stored from wreg
 42423   00B1BA  0100               	movlb	0	; () banked
 42424   00B1BC  6F96               	movwf	readNVM@type& (0+255),b
 42425                           
 42426                           ;../../VLCBlib_PIC/nvm.c: 538:     switch(type) {
 42427   00B1BE  D01D               	goto	l17958
 42428   00B1C0                     l17944:
 42429                           
 42430                           ; BSR set to: 0
 42431                           ;../../VLCBlib_PIC/nvm.c: 540:             return EEPROM_Read((uint16_t)index);
 42432   00B1C0  C091  F08D         	movff	readNVM@index,EEPROM_Read@index
 42433   00B1C4  C092  F08E         	movff	readNVM@index+1,EEPROM_Read@index+1
 42434   00B1C8  EC10  F061         	call	_EEPROM_Read	;wreg free
 42435   00B1CC  0100               	movlb	0	; () banked
 42436   00B1CE  6F94               	movwf	??_readNVM& (0+255),b
 42437   00B1D0  5194               	movf	??_readNVM& (0+255),w,b
 42438   00B1D2  6F91               	movwf	?_readNVM& (0+255),b
 42439   00B1D4  6B92               	clrf	(?_readNVM+1)& (0+255),b
 42440   00B1D6  0012               	return	
 42441   00B1D8                     l17948:
 42442                           
 42443                           ; BSR set to: 0
 42444                           ;../../VLCBlib_PIC/nvm.c: 543:             return FLASH_Read((uint16_t)index);
 42445   00B1D8  C091  F08D         	movff	readNVM@index,FLASH_Read@address
 42446   00B1DC  C092  F08E         	movff	readNVM@index+1,FLASH_Read@address+1
 42447   00B1E0  ECB2  F05B         	call	_FLASH_Read	;wreg free
 42448   00B1E4  0100               	movlb	0	; () banked
 42449   00B1E6  6F94               	movwf	??_readNVM& (0+255),b
 42450   00B1E8  5194               	movf	??_readNVM& (0+255),w,b
 42451   00B1EA  6F91               	movwf	?_readNVM& (0+255),b
 42452   00B1EC  6B92               	clrf	(?_readNVM+1)& (0+255),b
 42453   00B1EE  0012               	return	
 42454   00B1F0                     l17952:
 42455                           
 42456                           ; BSR set to: 0
 42457                           ;../../VLCBlib_PIC/nvm.c: 549:             return -GRSP_UNKNOWN_NVM_TYPE;
 42458   00B1F0  0EFF               	movlw	255
 42459   00B1F2  6F92               	movwf	(?_readNVM+1)& (0+255),b
 42460   00B1F4  0E02               	movlw	2
 42461   00B1F6  6F91               	movwf	?_readNVM& (0+255),b
 42462   00B1F8  0012               	return	
 42463   00B1FA                     l17958:
 42464   00B1FA  0100               	movlb	0	; () banked
 42465   00B1FC  5196               	movf	readNVM@type& (0+255),w,b
 42466   00B1FE  6F94               	movwf	??_readNVM& (0+255),b
 42467   00B200  6B95               	clrf	(??_readNVM+1)& (0+255),b
 42468                           
 42469                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 42470                           ; Switch size 1, requested type "simple"
 42471                           ; Number of cases is 1, Range of values is 0 to 0
 42472                           ; switch strategies available:
 42473                           ; Name         Instructions Cycles
 42474                           ; simple_byte            4     3 (average)
 42475                           ;	Chosen strategy is simple_byte
 42476   00B202  5195               	movf	(??_readNVM+1)& (0+255),w,b
 42477   00B204  0A00               	xorlw	0	; case 0
 42478   00B206  A4D8               	btfss	status,2,c
 42479   00B208  D7F3               	goto	l17952
 42480                           
 42481                           ; BSR set to: 0
 42482                           ; Switch size 1, requested type "simple"
 42483                           ; Number of cases is 2, Range of values is 0 to 1
 42484                           ; switch strategies available:
 42485                           ; Name         Instructions Cycles
 42486                           ; simple_byte            7     4 (average)
 42487                           ;	Chosen strategy is simple_byte
 42488   00B20A  5194               	movf	??_readNVM& (0+255),w,b
 42489   00B20C  0A00               	xorlw	0	; case 0
 42490   00B20E  B4D8               	btfsc	status,2,c
 42491   00B210  D7D7               	goto	l17944
 42492   00B212  0A01               	xorlw	1	; case 1
 42493   00B214  B4D8               	btfsc	status,2,c
 42494   00B216  D7E0               	goto	l17948
 42495   00B218  D7EB               	goto	l17952
 42496   00B21A                     __end_of_readNVM:
 42497                           	callstack 0
 42498                           
 42499 ;; *************** function _FLASH_Read *****************
 42500 ;; Defined at:
 42501 ;;		line 284 in file "../../VLCBlib_PIC/nvm.c"
 42502 ;; Parameters:    Size  Location     Type
 42503 ;;  address         2   45[BANK0 ] unsigned short 
 42504 ;; Auto vars:     Size  Location     Type
 42505 ;;		None
 42506 ;; Return value:  Size  Location     Type
 42507 ;;                  1    wreg      unsigned char 
 42508 ;; Registers used:
 42509 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 42510 ;; Tracked objects:
 42511 ;;		On entry : 0/0
 42512 ;;		On exit  : 0/0
 42513 ;;		Unchanged: 0/0
 42514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42515 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42517 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42518 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42519 ;;Total ram usage:        4 bytes
 42520 ;; Hardware stack levels used: 1
 42521 ;; Hardware stack levels required when called: 12
 42522 ;; This function calls:
 42523 ;;		Nothing
 42524 ;; This function is called by:
 42525 ;;		_readNVM
 42526 ;; This function uses a non-reentrant model
 42527 ;;
 42528                           
 42529                           	psect	text185
 42530   00B764                     __ptext185:
 42531                           	callstack 0
 42532   00B764                     _FLASH_Read:
 42533                           	callstack 15
 42534                           
 42535                           ;../../VLCBlib_PIC/nvm.c: 286:     if ((address&(~((flash_address_t)64 -1))) == flashBlo
      +                          ck) {
 42536                           
 42537                           ; BSR set to: 0
 42538                           ;incstack = 0
 42539   00B764  0EC0               	movlw	192
 42540   00B766  0100               	movlb	0	; () banked
 42541   00B768  158D               	andwf	FLASH_Read@address& (0+255),w,b
 42542   00B76A  6F8F               	movwf	??_FLASH_Read& (0+255),b
 42543   00B76C  0EFF               	movlw	255
 42544   00B76E  158E               	andwf	(FLASH_Read@address+1)& (0+255),w,b
 42545   00B770  6F90               	movwf	(??_FLASH_Read+1)& (0+255),b
 42546   00B772  51AD               	movf	_flashBlock& (0+255),w,b
 42547   00B774  198F               	xorwf	??_FLASH_Read& (0+255),w,b
 42548   00B776  E112               	bnz	l17934
 42549   00B778  51AE               	movf	(_flashBlock+1)& (0+255),w,b
 42550   00B77A  1990               	xorwf	(??_FLASH_Read+1)& (0+255),w,b
 42551   00B77C  A4D8               	btfss	status,2,c
 42552   00B77E  D00E               	goto	l17934
 42553                           
 42554                           ; BSR set to: 0
 42555                           ;../../VLCBlib_PIC/nvm.c: 288:         return flashBuffer[(address&(64 -1))];
 42556   00B780  0E3F               	movlw	63
 42557   00B782  158D               	andwf	FLASH_Read@address& (0+255),w,b
 42558   00B784  6F8F               	movwf	??_FLASH_Read& (0+255),b
 42559   00B786  0E00               	movlw	0
 42560   00B788  158E               	andwf	(FLASH_Read@address+1)& (0+255),w,b
 42561   00B78A  6F90               	movwf	(??_FLASH_Read+1)& (0+255),b
 42562   00B78C  0E48               	movlw	low _flashBuffer
 42563   00B78E  258F               	addwf	??_FLASH_Read& (0+255),w,b
 42564   00B790  6ED9               	movwf	fsr2l,c
 42565   00B792  0E03               	movlw	high _flashBuffer
 42566   00B794  2190               	addwfc	(??_FLASH_Read+1)& (0+255),w,b
 42567   00B796  6EDA               	movwf	fsr2h,c
 42568   00B798  50DF               	movf	indf2,w,c
 42569   00B79A  0012               	return	
 42570   00B79C                     l17934:
 42571                           
 42572                           ; BSR set to: 0
 42573                           ;../../VLCBlib_PIC/nvm.c: 292:         TBLPTR = address;
 42574   00B79C  C08D  FFF6         	movff	FLASH_Read@address,tblptrl	;volatile
 42575   00B7A0  C08E  FFF7         	movff	FLASH_Read@address+1,tblptrh	;volatile
 42576   00B7A4  6AF8               	clrf	248,c	;volatile
 42577                           
 42578                           ; BSR set to: 0
 42579                           ;../../VLCBlib_PIC/nvm.c: 293:         TBLPTRU = 0;
 42580   00B7A6  0E00               	movlw	0
 42581   00B7A8  6EF8               	movwf	248,c	;volatile
 42582   00B7AA  0008               	tblrd		*	;# 
 42583                           
 42584                           ;../../VLCBlib_PIC/nvm.c: 304:         return TABLAT;
 42585   00B7AC  50F5               	movf	245,w,c	;volatile
 42586   00B7AE  0012               	return		;funcret
 42587   00B7B0                     __end_of_FLASH_Read:
 42588                           	callstack 0
 42589                           
 42590 ;; *************** function _EEPROM_Read *****************
 42591 ;; Defined at:
 42592 ;;		line 162 in file "../../VLCBlib_PIC/nvm.c"
 42593 ;; Parameters:    Size  Location     Type
 42594 ;;  index           2   45[BANK0 ] unsigned short 
 42595 ;; Auto vars:     Size  Location     Type
 42596 ;;		None
 42597 ;; Return value:  Size  Location     Type
 42598 ;;                  1    wreg      unsigned char 
 42599 ;; Registers used:
 42600 ;;		wreg, status,2
 42601 ;; Tracked objects:
 42602 ;;		On entry : 0/0
 42603 ;;		On exit  : 0/0
 42604 ;;		Unchanged: 0/0
 42605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42606 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42609 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42610 ;;Total ram usage:        2 bytes
 42611 ;; Hardware stack levels used: 1
 42612 ;; Hardware stack levels required when called: 12
 42613 ;; This function calls:
 42614 ;;		Nothing
 42615 ;; This function is called by:
 42616 ;;		_EEPROM_Write
 42617 ;;		_readNVM
 42618 ;; This function uses a non-reentrant model
 42619 ;;
 42620                           
 42621                           	psect	text186
 42622   00C220                     __ptext186:
 42623                           	callstack 0
 42624   00C220                     _EEPROM_Read:
 42625                           	callstack 15
 42626                           
 42627                           ;../../VLCBlib_PIC/nvm.c: 165:     while (EECON1bits.WR)
 42628                           
 42629                           ;../../VLCBlib_PIC/nvm.c: 166:         ;
 42630                           
 42631                           ;incstack = 0
 42632   00C220  B27F               	btfsc	127,1,c	;volsfr
 42633   00C222  D7FE               	goto	__ptext186
 42634                           
 42635                           ;../../VLCBlib_PIC/nvm.c: 168:     EEADRH = (index >> 8)&0xFF;
 42636   00C224  0100               	movlb	0	; () banked
 42637   00C226  518E               	movf	(EEPROM_Read@index+1)& (0+255),w,b
 42638   00C228  6E75               	movwf	117,c	;volatile
 42639                           
 42640                           ; BSR set to: 0
 42641                           ;../../VLCBlib_PIC/nvm.c: 169:     EEADR = index & 0xFF;
 42642   00C22A  C08D  FF74         	movff	EEPROM_Read@index,3956	;volatile
 42643                           
 42644                           ; BSR set to: 0
 42645                           ;../../VLCBlib_PIC/nvm.c: 170:     EECON1bits.EEPGD = 0;
 42646   00C22E  9E7F               	bcf	127,7,c	;volsfr
 42647                           
 42648                           ; BSR set to: 0
 42649                           ;../../VLCBlib_PIC/nvm.c: 171:     EECON1bits.CFGS = 0;
 42650   00C230  9C7F               	bcf	127,6,c	;volsfr
 42651                           
 42652                           ; BSR set to: 0
 42653                           ;../../VLCBlib_PIC/nvm.c: 172:     EECON1bits.RD = 1;
 42654   00C232  807F               	bsf	127,0,c	;volsfr
 42655   00C234                     l2543:
 42656                           
 42657                           ;../../VLCBlib_PIC/nvm.c: 173:     while (EECON1bits.RD)
 42658   00C234  B07F               	btfsc	127,0,c	;volsfr
 42659   00C236  D7FE               	goto	l2543
 42660   00C238  0000               	nop		;# 
 42661                           
 42662                           ;../../VLCBlib_PIC/nvm.c: 178:     return EEDATA;
 42663   00C23A  5073               	movf	115,w,c	;volatile
 42664   00C23C  0012               	return		;funcret
 42665   00C23E                     __end_of_EEPROM_Read:
 42666                           	callstack 0
 42667                           
 42668 ;; *************** function _factoryResetGlobalEvents *****************
 42669 ;; Defined at:
 42670 ;;		line 93 in file "../universalEvents.c"
 42671 ;; Parameters:    Size  Location     Type
 42672 ;;		None
 42673 ;; Auto vars:     Size  Location     Type
 42674 ;;		None
 42675 ;; Return value:  Size  Location     Type
 42676 ;;                  1    wreg      void 
 42677 ;; Registers used:
 42678 ;;		None
 42679 ;; Tracked objects:
 42680 ;;		On entry : 0/0
 42681 ;;		On exit  : 0/0
 42682 ;;		Unchanged: 0/0
 42683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42688 ;;Total ram usage:        0 bytes
 42689 ;; Hardware stack levels used: 1
 42690 ;; Hardware stack levels required when called: 12
 42691 ;; This function calls:
 42692 ;;		Nothing
 42693 ;; This function is called by:
 42694 ;;		_APP_factoryReset
 42695 ;; This function uses a non-reentrant model
 42696 ;;
 42697                           
 42698                           	psect	text187
 42699   00C3C8                     __ptext187:
 42700                           	callstack 0
 42701   00C3C8                     _factoryResetGlobalEvents:
 42702                           	callstack 14
 42703                           
 42704                           ;incstack = 0
 42705   00C3C8  0012               	return		;funcret
 42706   00C3CA                     __end_of_factoryResetGlobalEvents:
 42707                           	callstack 0
 42708                           
 42709 ;; *************** function _APP_testMode *****************
 42710 ;; Defined at:
 42711 ;;		line 221 in file "../main.c"
 42712 ;; Parameters:    Size  Location     Type
 42713 ;;		None
 42714 ;; Auto vars:     Size  Location     Type
 42715 ;;		None
 42716 ;; Return value:  Size  Location     Type
 42717 ;;                  1    wreg      void 
 42718 ;; Registers used:
 42719 ;;		None
 42720 ;; Tracked objects:
 42721 ;;		On entry : 0/0
 42722 ;;		On exit  : 0/0
 42723 ;;		Unchanged: 0/0
 42724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42729 ;;Total ram usage:        0 bytes
 42730 ;; Hardware stack levels used: 1
 42731 ;; Hardware stack levels required when called: 12
 42732 ;; This function calls:
 42733 ;;		Nothing
 42734 ;; This function is called by:
 42735 ;;		_checkPowerOnPb
 42736 ;; This function uses a non-reentrant model
 42737 ;;
 42738                           
 42739                           	psect	text188
 42740   00C3CA                     __ptext188:
 42741                           	callstack 0
 42742   00C3CA                     _APP_testMode:
 42743                           	callstack 17
 42744                           
 42745                           ;incstack = 0
 42746   00C3CA  0012               	return		;funcret
 42747   00C3CC                     __end_of_APP_testMode:
 42748                           	callstack 0
 42749                           
 42750 ;; *************** function _isrLow *****************
 42751 ;; Defined at:
 42752 ;;		line 1328 in file "../../VLCBlib_PIC/vlcb.c"
 42753 ;; Parameters:    Size  Location     Type
 42754 ;;		None
 42755 ;; Auto vars:     Size  Location     Type
 42756 ;;		None
 42757 ;; Return value:  Size  Location     Type
 42758 ;;                  1    wreg      void 
 42759 ;; Registers used:
 42760 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 42761 ;; Tracked objects:
 42762 ;;		On entry : 0/0
 42763 ;;		On exit  : 0/0
 42764 ;;		Unchanged: 0/0
 42765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42768 ;;      Temps:          0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42769 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42770 ;;Total ram usage:       15 bytes
 42771 ;; Hardware stack levels used: 1
 42772 ;; Hardware stack levels required when called: 11
 42773 ;; This function calls:
 42774 ;;		_lowIsr
 42775 ;; This function is called by:
 42776 ;;		Interrupt level 1
 42777 ;; This function uses a non-reentrant model
 42778 ;;
 42779                           
 42780 ;; *************** function _isrHigh *****************
 42781 ;; Defined at:
 42782 ;;		line 1321 in file "../../VLCBlib_PIC/vlcb.c"
 42783 ;; Parameters:    Size  Location     Type
 42784 ;;		None
 42785 ;; Auto vars:     Size  Location     Type
 42786 ;;		None
 42787 ;; Return value:  Size  Location     Type
 42788 ;;                  1    wreg      void 
 42789 ;; Registers used:
 42790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 42791 ;; Tracked objects:
 42792 ;;		On entry : 0/0
 42793 ;;		On exit  : 0/0
 42794 ;;		Unchanged: 0/0
 42795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42798 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42799 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42800 ;;Total ram usage:       12 bytes
 42801 ;; Hardware stack levels used: 1
 42802 ;; Hardware stack levels required when called: 5
 42803 ;; This function calls:
 42804 ;;		_highIsr
 42805 ;; This function is called by:
 42806 ;;		Interrupt level 2
 42807 ;; This function uses a non-reentrant model
 42808 ;;
 42809                           
 42810                           	psect	mainSec
 42811   008392                     __pmainSec:
 42812                           	callstack 0
 42813   008392                     _isrLow:
 42814                           	callstack 2
 42815                           
 42816                           ;incstack = 0
 42817   008392  8055               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
 42818   008394  CFD8 F07E          	movff	status,??_isrLow
 42819   008398  CFE8 F07F          	movff	wreg,??_isrLow+1
 42820   00839C  CFE0 F080          	movff	bsr,??_isrLow+2
 42821   0083A0  CFFA F081          	movff	pclath,??_isrLow+3
 42822   0083A4  CFFB F082          	movff	pclatu,??_isrLow+4
 42823   0083A8  CFE1 F083          	movff	fsr1l,??_isrLow+5
 42824   0083AC  CFE2 F084          	movff	fsr1h,??_isrLow+6
 42825   0083B0  CFD9 F085          	movff	fsr2l,??_isrLow+7
 42826   0083B4  CFDA F086          	movff	fsr2h,??_isrLow+8
 42827   0083B8  CFF3 F087          	movff	prodl,??_isrLow+9
 42828   0083BC  CFF4 F088          	movff	prodh,??_isrLow+10
 42829   0083C0  CFF6 F089          	movff	tblptrl,??_isrLow+11
 42830   0083C4  CFF7 F08A          	movff	tblptrh,??_isrLow+12
 42831   0083C8  CFF8 F08B          	movff	tblptru,??_isrLow+13
 42832   0083CC  CFF5 F08C          	movff	tablat,??_isrLow+14
 42833   0083D0                     
 42834                           ;../../VLCBlib_PIC/vlcb.c: 1329:     lowIsr();
 42835   0083D0  ECE6  F046         	call	_lowIsr	;wreg free
 42836   0083D4  C08C  FFF5         	movff	??_isrLow+14,tablat
 42837   0083D8  C08B  FFF8         	movff	??_isrLow+13,tblptru
 42838   0083DC  C08A  FFF7         	movff	??_isrLow+12,tblptrh
 42839   0083E0  C089  FFF6         	movff	??_isrLow+11,tblptrl
 42840   0083E4  C088  FFF4         	movff	??_isrLow+10,prodh
 42841   0083E8  C087  FFF3         	movff	??_isrLow+9,prodl
 42842   0083EC  C086  FFDA         	movff	??_isrLow+8,fsr2h
 42843   0083F0  C085  FFD9         	movff	??_isrLow+7,fsr2l
 42844   0083F4  C084  FFE2         	movff	??_isrLow+6,fsr1h
 42845   0083F8  C083  FFE1         	movff	??_isrLow+5,fsr1l
 42846   0083FC  C082  FFFB         	movff	??_isrLow+4,pclatu
 42847   008400  C081  FFFA         	movff	??_isrLow+3,pclath
 42848   008404  C080  FFE0         	movff	??_isrLow+2,bsr
 42849   008408  C07F  FFE8         	movff	??_isrLow+1,wreg
 42850   00840C  C07E  FFD8         	movff	??_isrLow,status
 42851   008410  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 42852   008412  0010               	retfie	
 42853   008414                     __end_of_isrLow:
 42854                           	callstack 0
 42855   008414                     _isrHigh:
 42856                           	callstack 2
 42857                           
 42858                           ;incstack = 0
 42859   008414  8255               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 42860   008416  CFFA F049          	movff	pclath,??_isrHigh
 42861   00841A  CFFB F04A          	movff	pclatu,??_isrHigh+1
 42862   00841E  CFE1 F04B          	movff	fsr1l,??_isrHigh+2
 42863   008422  CFE2 F04C          	movff	fsr1h,??_isrHigh+3
 42864   008426  CFD9 F04D          	movff	fsr2l,??_isrHigh+4
 42865   00842A  CFDA F04E          	movff	fsr2h,??_isrHigh+5
 42866   00842E  CFF3 F04F          	movff	prodl,??_isrHigh+6
 42867   008432  CFF4 F050          	movff	prodh,??_isrHigh+7
 42868   008436  CFF6 F051          	movff	tblptrl,??_isrHigh+8
 42869   00843A  CFF7 F052          	movff	tblptrh,??_isrHigh+9
 42870   00843E  CFF8 F053          	movff	tblptru,??_isrHigh+10
 42871   008442  CFF5 F054          	movff	tablat,??_isrHigh+11
 42872   008446                     
 42873                           ;../../VLCBlib_PIC/vlcb.c: 1322:     highIsr();
 42874   008446  EC4D  F047         	call	_highIsr	;wreg free
 42875   00844A  C054  FFF5         	movff	??_isrHigh+11,tablat
 42876   00844E  C053  FFF8         	movff	??_isrHigh+10,tblptru
 42877   008452  C052  FFF7         	movff	??_isrHigh+9,tblptrh
 42878   008456  C051  FFF6         	movff	??_isrHigh+8,tblptrl
 42879   00845A  C050  FFF4         	movff	??_isrHigh+7,prodh
 42880   00845E  C04F  FFF3         	movff	??_isrHigh+6,prodl
 42881   008462  C04E  FFDA         	movff	??_isrHigh+5,fsr2h
 42882   008466  C04D  FFD9         	movff	??_isrHigh+4,fsr2l
 42883   00846A  C04C  FFE2         	movff	??_isrHigh+3,fsr1h
 42884   00846E  C04B  FFE1         	movff	??_isrHigh+2,fsr1l
 42885   008472  C04A  FFFB         	movff	??_isrHigh+1,pclatu
 42886   008476  C049  FFFA         	movff	??_isrHigh,pclath
 42887   00847A  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 42888   00847C  0011               	retfie		f
 42889   00847E                     __end_of_isrHigh:
 42890                           	callstack 0
 42891                           
 42892                           	psect	intcodelo
 42893   000818                     __pintcodelo:
 42894                           	callstack 2
 42895   000818  EFC9  F041         	goto	_isrLow
 42896                           
 42897 ;; *************** function _lowIsr *****************
 42898 ;; Defined at:
 42899 ;;		line 1075 in file "../../VLCBlib_PIC/vlcb.c"
 42900 ;; Parameters:    Size  Location     Type
 42901 ;;		None
 42902 ;; Auto vars:     Size  Location     Type
 42903 ;;  i               1   29[BANK0 ] unsigned char 
 42904 ;; Return value:  Size  Location     Type
 42905 ;;                  1    wreg      void 
 42906 ;; Registers used:
 42907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 42908 ;; Tracked objects:
 42909 ;;		On entry : 0/0
 42910 ;;		On exit  : 0/0
 42911 ;;		Unchanged: 0/0
 42912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42914 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42915 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42916 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42917 ;;Total ram usage:        5 bytes
 42918 ;; Hardware stack levels used: 1
 42919 ;; Hardware stack levels required when called: 10
 42920 ;; This function calls:
 42921 ;;		NULL
 42922 ;;		_APP_lowIsr
 42923 ;;		_canIsr
 42924 ;;		_mnsLowIsr
 42925 ;; This function is called by:
 42926 ;;		_isrLow
 42927 ;; This function uses a non-reentrant model
 42928 ;;
 42929                           
 42930                           	psect	text190
 42931   008DCC                     __ptext190:
 42932                           	callstack 0
 42933   008DCC                     _lowIsr:
 42934                           	callstack 2
 42935                           
 42936                           ;../../VLCBlib_PIC/vlcb.c: 1076:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1078:     for 
      +                          (i=0; i<9; i++) {
 42937                           
 42938                           ;incstack = 0
 42939   008DCC  0E00               	movlw	0
 42940   008DCE  0100               	movlb	0	; () banked
 42941   008DD0  6F7D               	movwf	lowIsr@i& (0+255),b
 42942   008DD2                     i1l23900:
 42943                           
 42944                           ; BSR set to: 0
 42945                           ;../../VLCBlib_PIC/vlcb.c: 1079:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->lowIsr != ((void*)0))) {
 42946   008DD2  517D               	movf	lowIsr@i& (0+255),w,b
 42947   008DD4  0D02               	mullw	2
 42948   008DD6  0E75               	movlw	low _services
 42949   008DD8  24F3               	addwf	243,w,c
 42950   008DDA  6EF6               	movwf	tblptrl,c
 42951   008DDC  0EEE               	movlw	high _services
 42952   008DDE  20F4               	addwfc	244,w,c
 42953   008DE0  6EF7               	movwf	tblptrh,c
 42954   008DE2                     	if	1	;There are 3 active tblptr bytes
 42955   008DE2  6AF8               	clrf	tblptru,c
 42956   008DE4  0E00               	movlw	low (__mediumconst shr (0+16))
 42957   008DE6  22F8               	addwfc	tblptru,f,c
 42958   008DE8                     	endif
 42959   008DE8  0009               	tblrd		*+
 42960   008DEA  50F5               	movf	tablat,w,c
 42961   008DEC  0009               	tblrd		*+
 42962   008DEE  10F5               	iorwf	tablat,w,c
 42963   008DF0  B4D8               	btfsc	status,2,c
 42964   008DF2  D04B               	goto	i1u2598_29
 42965                           
 42966                           ; BSR set to: 0
 42967   008DF4  517D               	movf	lowIsr@i& (0+255),w,b
 42968   008DF6  0D02               	mullw	2
 42969   008DF8  0E75               	movlw	low _services
 42970   008DFA  24F3               	addwf	243,w,c
 42971   008DFC  6EF6               	movwf	tblptrl,c
 42972   008DFE  0EEE               	movlw	high _services
 42973   008E00  20F4               	addwfc	244,w,c
 42974   008E02  6EF7               	movwf	tblptrh,c
 42975   008E04                     	if	1	;There are 3 active tblptr bytes
 42976   008E04  6AF8               	clrf	tblptru,c
 42977   008E06  0E00               	movlw	low (__mediumconst shr (0+16))
 42978   008E08  22F8               	addwfc	tblptru,f,c
 42979   008E0A                     	endif
 42980   008E0A  0009               	tblrd		*+
 42981   008E0C  CFF5 F079          	movff	tablat,??_lowIsr
 42982   008E10  0009               	tblrd		*+
 42983   008E12  CFF5 F07A          	movff	tablat,??_lowIsr+1
 42984   008E16  0E0C               	movlw	12
 42985   008E18  2779               	addwf	??_lowIsr& (0+255),f,b
 42986   008E1A  0E00               	movlw	0
 42987   008E1C  237A               	addwfc	(??_lowIsr+1)& (0+255),f,b
 42988   008E1E  C079  FFF6         	movff	??_lowIsr,tblptrl
 42989   008E22  C07A  FFF7         	movff	??_lowIsr+1,tblptrh
 42990   008E26                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 42991   008E26  6AF8               	clrf	tblptru,c
 42992   008E28                     	endif
 42993   008E28                     	if	0	;tblptru may be non-zero
 42994   008E28                     	endif
 42995   008E28  0009               	tblrd		*+
 42996   008E2A  50F5               	movf	tablat,w,c
 42997   008E2C  0009               	tblrd		*+
 42998   008E2E  10F5               	iorwf	tablat,w,c
 42999   008E30  B4D8               	btfsc	status,2,c
 43000   008E32  D02B               	goto	i1u2598_29
 43001                           
 43002                           ; BSR set to: 0
 43003                           ;../../VLCBlib_PIC/vlcb.c: 1080:             services[i]->lowIsr();
 43004   008E34  517D               	movf	lowIsr@i& (0+255),w,b
 43005   008E36  0D02               	mullw	2
 43006   008E38  0E75               	movlw	low _services
 43007   008E3A  24F3               	addwf	243,w,c
 43008   008E3C  6EF6               	movwf	tblptrl,c
 43009   008E3E  0EEE               	movlw	high _services
 43010   008E40  20F4               	addwfc	244,w,c
 43011   008E42  6EF7               	movwf	tblptrh,c
 43012   008E44                     	if	1	;There are 3 active tblptr bytes
 43013   008E44  6AF8               	clrf	tblptru,c
 43014   008E46  0E00               	movlw	low (__mediumconst shr (0+16))
 43015   008E48  22F8               	addwfc	tblptru,f,c
 43016   008E4A                     	endif
 43017   008E4A  0009               	tblrd		*+
 43018   008E4C  CFF5 F079          	movff	tablat,??_lowIsr
 43019   008E50  0009               	tblrd		*+
 43020   008E52  CFF5 F07A          	movff	tablat,??_lowIsr+1
 43021   008E56  0E0C               	movlw	12
 43022   008E58  2779               	addwf	??_lowIsr& (0+255),f,b
 43023   008E5A  0E00               	movlw	0
 43024   008E5C  237A               	addwfc	(??_lowIsr+1)& (0+255),f,b
 43025   008E5E  C079  FFF6         	movff	??_lowIsr,tblptrl
 43026   008E62  C07A  FFF7         	movff	??_lowIsr+1,tblptrh
 43027   008E66                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 43028   008E66  6AF8               	clrf	tblptru,c
 43029   008E68                     	endif
 43030   008E68                     	if	0	;tblptru may be non-zero
 43031   008E68                     	endif
 43032   008E68  0009               	tblrd		*+
 43033   008E6A  CFF5 F07B          	movff	tablat,??_lowIsr+2
 43034   008E6E  0009               	tblrd		*+
 43035   008E70  CFF5 F07C          	movff	tablat,??_lowIsr+3
 43036   008E74  D801               	call	i1u2598_28
 43037   008E76  D009               	goto	i1u2598_29
 43038   008E78                     i1u2598_28:
 43039   008E78  0005               	push	
 43040   008E7A  6EFA               	movwf	pclath,c
 43041   008E7C  517B               	movf	(??_lowIsr+2)& (0+255),w,b
 43042   008E7E  6EFD               	movwf	tosl,c
 43043   008E80  517C               	movf	(??_lowIsr+3)& (0+255),w,b
 43044   008E82  6EFE               	movwf	tosh,c
 43045   008E84  6AFF               	clrf	tosu,c
 43046   008E86  50FA               	movf	pclath,w,c
 43047   008E88  0012               	return		;indir
 43048   008E8A                     i1u2598_29:
 43049                           
 43050                           ;../../VLCBlib_PIC/vlcb.c: 1082:     }
 43051   008E8A  0100               	movlb	0	; () banked
 43052   008E8C  2B7D               	incf	lowIsr@i& (0+255),f,b
 43053                           
 43054                           ; BSR set to: 0
 43055   008E8E  0E08               	movlw	8
 43056   008E90  657D               	cpfsgt	lowIsr@i& (0+255),b
 43057   008E92  D79F               	goto	i1l23900
 43058                           
 43059                           ; BSR set to: 0
 43060                           ;../../VLCBlib_PIC/vlcb.c: 1083:     APP_lowIsr();
 43061   008E94  ECE6  F061         	call	_APP_lowIsr	;wreg free
 43062   008E98  0012               	return		;funcret
 43063   008E9A                     __end_of_lowIsr:
 43064                           	callstack 0
 43065                           
 43066 ;; *************** function _canIsr *****************
 43067 ;; Defined at:
 43068 ;;		line 397 in file "../../VLCBlib_PIC/can18_ecan.c"
 43069 ;; Parameters:    Size  Location     Type
 43070 ;;		None
 43071 ;; Auto vars:     Size  Location     Type
 43072 ;;		None
 43073 ;; Return value:  Size  Location     Type
 43074 ;;                  1    wreg      void 
 43075 ;; Registers used:
 43076 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43077 ;; Tracked objects:
 43078 ;;		On entry : 0/0
 43079 ;;		On exit  : 0/0
 43080 ;;		Unchanged: 0/0
 43081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43086 ;;Total ram usage:        0 bytes
 43087 ;; Hardware stack levels used: 1
 43088 ;; Hardware stack levels required when called: 9
 43089 ;; This function calls:
 43090 ;;		_canFillRxFifo
 43091 ;;		_canTxError
 43092 ;;		_checkCANTimeout
 43093 ;;		_checkTxFifo
 43094 ;; This function is called by:
 43095 ;;		_highIsr
 43096 ;;		_lowIsr
 43097 ;; This function uses a non-reentrant model
 43098 ;;
 43099                           
 43100                           	psect	text191
 43101   00C1C2                     __ptext191:
 43102                           	callstack 0
 43103   00C1C2                     _canIsr:
 43104                           	callstack 0
 43105                           
 43106                           ;Skip over the trampoline to the duplicate function for level 2
 43107   00C1C2  A255               	btfss	btemp,1,c
 43108   00C1C4  D002               	goto	_canIsr$intlevel1
 43109   00C1C6  EF5E  F061         	goto	i2_canIsr
 43110   00C1CA                     _canIsr$intlevel1:
 43111                           	callstack 2
 43112                           
 43113                           ;../../VLCBlib_PIC/can18_ecan.c: 399:     if (PIR5bits.FIFOWMIF) {
 43114                           
 43115                           ;incstack = 0
 43116   00C1CA  B077               	btfsc	119,0,c	;volatile
 43117                           
 43118                           ;../../VLCBlib_PIC/can18_ecan.c: 400:         canFillRxFifo();
 43119   00C1CC  EC69  F03B         	call	_canFillRxFifo	;wreg free
 43120                           
 43121                           ;../../VLCBlib_PIC/can18_ecan.c: 402:     if (PIR5bits.ERRIF) {
 43122   00C1D0  BA77               	btfsc	119,5,c	;volatile
 43123                           
 43124                           ;../../VLCBlib_PIC/can18_ecan.c: 403:         canTxError();
 43125   00C1D2  EC4B  F058         	call	_canTxError	;wreg free
 43126                           
 43127                           ;../../VLCBlib_PIC/can18_ecan.c: 405:     if (PIR5bits.TXBnIF) {
 43128   00C1D6  B877               	btfsc	119,4,c	;volatile
 43129                           
 43130                           ;../../VLCBlib_PIC/can18_ecan.c: 406:         checkTxFifo();
 43131   00C1D8  EC04  F02B         	call	_checkTxFifo	;wreg free
 43132                           
 43133                           ;../../VLCBlib_PIC/can18_ecan.c: 408:     checkCANTimeout();
 43134                           
 43135                           ;../../VLCBlib_PIC/can18_ecan.c: 407:     }
 43136   00C1DC  EC9B  F05A         	call	_checkCANTimeout	;wreg free
 43137   00C1E0  0012               	return		;funcret
 43138   00C1E2                     __end_of_canIsr:
 43139                           	callstack 0
 43140                           
 43141 ;; *************** function _mnsLowIsr *****************
 43142 ;; Defined at:
 43143 ;;		line 710 in file "../../VLCBlib_PIC/mns.c"
 43144 ;; Parameters:    Size  Location     Type
 43145 ;;		None
 43146 ;; Auto vars:     Size  Location     Type
 43147 ;;		None
 43148 ;; Return value:  Size  Location     Type
 43149 ;;                  1    wreg      void 
 43150 ;; Registers used:
 43151 ;;		wreg, status,2, status,0
 43152 ;; Tracked objects:
 43153 ;;		On entry : 0/0
 43154 ;;		On exit  : 0/0
 43155 ;;		Unchanged: 0/0
 43156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43161 ;;Total ram usage:        0 bytes
 43162 ;; Hardware stack levels used: 1
 43163 ;; Hardware stack levels required when called: 6
 43164 ;; This function calls:
 43165 ;;		Nothing
 43166 ;; This function is called by:
 43167 ;;		_lowIsr
 43168 ;; This function uses a non-reentrant model
 43169 ;;
 43170                           
 43171                           	psect	text192
 43172   00C312                     __ptext192:
 43173                           	callstack 0
 43174   00C312                     _mnsLowIsr:
 43175                           	callstack 5
 43176                           
 43177                           ;../../VLCBlib_PIC/mns.c: 713:     if(INTCONbits.TMR0IF) {
 43178                           
 43179                           ;incstack = 0
 43180   00C312  A4F2               	btfss	242,2,c	;volatile
 43181   00C314  0012               	return	
 43182                           
 43183                           ;../../VLCBlib_PIC/mns.c: 715:         INTCONbits.TMR0IF = 0;
 43184   00C316  94F2               	bcf	242,2,c	;volatile
 43185                           
 43186                           ;../../VLCBlib_PIC/mns.c: 716:         timerExtension1++;
 43187   00C318  0100               	movlb	0	; () banked
 43188   00C31A  2BC3               	incf	_timerExtension1& (0+255),f,b	;volatile
 43189                           
 43190                           ; BSR set to: 0
 43191                           ;../../VLCBlib_PIC/mns.c: 717:         if(timerExtension1 == 0) {
 43192   00C31C  51C3               	movf	_timerExtension1& (0+255),w,b	;volatile
 43193   00C31E  A4D8               	btfss	status,2,c
 43194   00C320  0012               	return	
 43195                           
 43196                           ; BSR set to: 0
 43197                           ;../../VLCBlib_PIC/mns.c: 718:             timerExtension2++;
 43198   00C322  2BC2               	incf	_timerExtension2& (0+255),f,b	;volatile
 43199   00C324  0012               	return		;funcret
 43200   00C326                     __end_of_mnsLowIsr:
 43201                           	callstack 0
 43202                           
 43203 ;; *************** function _checkCANTimeout *****************
 43204 ;; Defined at:
 43205 ;;		line 685 in file "../../VLCBlib_PIC/can18_ecan.c"
 43206 ;; Parameters:    Size  Location     Type
 43207 ;;		None
 43208 ;; Auto vars:     Size  Location     Type
 43209 ;;		None
 43210 ;; Return value:  Size  Location     Type
 43211 ;;                  1    wreg      void 
 43212 ;; Registers used:
 43213 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43214 ;; Tracked objects:
 43215 ;;		On entry : 0/0
 43216 ;;		On exit  : 0/0
 43217 ;;		Unchanged: 0/0
 43218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43221 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43222 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43223 ;;Total ram usage:        4 bytes
 43224 ;; Hardware stack levels used: 1
 43225 ;; Hardware stack levels required when called: 8
 43226 ;; This function calls:
 43227 ;;		_checkTxFifo
 43228 ;;		i1_tickGet
 43229 ;;		i1_updateModuleErrorStatus
 43230 ;; This function is called by:
 43231 ;;		_canIsr
 43232 ;; This function uses a non-reentrant model
 43233 ;;
 43234                           
 43235                           	psect	text193
 43236   00B536                     __ptext193:
 43237                           	callstack 0
 43238   00B536                     _checkCANTimeout:
 43239                           	callstack 2
 43240                           
 43241                           ;../../VLCBlib_PIC/can18_ecan.c: 686:     if (canTransmitTimeout.val != 0) {
 43242                           
 43243                           ;incstack = 0
 43244   00B536  5015               	movf	_canTransmitTimeout^0,w,c
 43245   00B538  1016               	iorwf	(_canTransmitTimeout+1)^0,w,c
 43246   00B53A  1017               	iorwf	(_canTransmitTimeout+2)^0,w,c
 43247   00B53C  1018               	iorwf	(_canTransmitTimeout+3)^0,w,c
 43248   00B53E  B4D8               	btfsc	status,2,c
 43249   00B540  0012               	return	
 43250                           
 43251                           ;../../VLCBlib_PIC/can18_ecan.c: 687:         if ((tickGet() - canTransmitTimeout.val) >
      +                           62500) {
 43252   00B542  EC1A  F05A         	call	i1_tickGet	;wreg free
 43253   00B546  5015               	movf	_canTransmitTimeout^0,w,c
 43254   00B548  0100               	movlb	0	; () banked
 43255   00B54A  5D60               	subwf	?i1_tickGet& (0+255),w,b
 43256   00B54C  6F75               	movwf	??_checkCANTimeout& (0+255),b
 43257   00B54E  5016               	movf	(_canTransmitTimeout+1)^0,w,c
 43258   00B550  5961               	subwfb	(?i1_tickGet+1)& (0+255),w,b
 43259   00B552  6F76               	movwf	(??_checkCANTimeout+1)& (0+255),b
 43260   00B554  5017               	movf	(_canTransmitTimeout+2)^0,w,c
 43261   00B556  5962               	subwfb	(?i1_tickGet+2)& (0+255),w,b
 43262   00B558  6F77               	movwf	(??_checkCANTimeout+2)& (0+255),b
 43263   00B55A  5018               	movf	(_canTransmitTimeout+3)^0,w,c
 43264   00B55C  5963               	subwfb	(?i1_tickGet+3)& (0+255),w,b
 43265   00B55E  6F78               	movwf	(??_checkCANTimeout+3)& (0+255),b
 43266   00B560  5178               	movf	(??_checkCANTimeout+3)& (0+255),w,b
 43267   00B562  1177               	iorwf	(??_checkCANTimeout+2)& (0+255),w,b
 43268   00B564  E106               	bnz	i1u2286_20
 43269   00B566  0E25               	movlw	37
 43270   00B568  5D75               	subwf	??_checkCANTimeout& (0+255),w,b
 43271   00B56A  0EF4               	movlw	244
 43272   00B56C  5976               	subwfb	(??_checkCANTimeout+1)& (0+255),w,b
 43273   00B56E  A0D8               	btfss	status,0,c
 43274   00B570  0012               	return	
 43275   00B572                     i1u2286_20:
 43276                           
 43277                           ; BSR set to: 0
 43278                           ;../../VLCBlib_PIC/can18_ecan.c: 688:             canTransmitFailed = 1;
 43279   00B572  0E01               	movlw	1
 43280   00B574  6FB6               	movwf	_canTransmitFailed& (0+255),b
 43281                           
 43282                           ; BSR set to: 0
 43283                           ;../../VLCBlib_PIC/can18_ecan.c: 689:             TXB0CONbits.TXREQ = 0;
 43284   00B576  010F               	movlb	15	; () banked
 43285   00B578  9720               	bcf	32,3,b	;volatile
 43286                           
 43287                           ; BSR set to: 15
 43288                           ;../../VLCBlib_PIC/can18_ecan.c: 690:             checkTxFifo();
 43289   00B57A  EC04  F02B         	call	_checkTxFifo	;wreg free
 43290                           
 43291                           ;../../VLCBlib_PIC/can18_ecan.c: 691:             canDiagnostics[0x01].asUint++;
 43292   00B57E  0101               	movlb	1	; () banked
 43293   00B580  4B7C               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 43294   00B582  2B7D               	incf	(_canDiagnostics+3)& (0+255),f,b
 43295                           
 43296                           ; BSR set to: 1
 43297                           ;../../VLCBlib_PIC/can18_ecan.c: 692:             updateModuleErrorStatus();
 43298   00B584  ECB2  F061         	call	i1_updateModuleErrorStatus	;wreg free
 43299   00B588  0012               	return		;funcret
 43300   00B58A                     __end_of_checkCANTimeout:
 43301                           	callstack 0
 43302                           
 43303 ;; *************** function _canTxError *****************
 43304 ;; Defined at:
 43305 ;;		line 702 in file "../../VLCBlib_PIC/can18_ecan.c"
 43306 ;; Parameters:    Size  Location     Type
 43307 ;;		None
 43308 ;; Auto vars:     Size  Location     Type
 43309 ;;		None
 43310 ;; Return value:  Size  Location     Type
 43311 ;;                  1    wreg      void 
 43312 ;; Registers used:
 43313 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43314 ;; Tracked objects:
 43315 ;;		On entry : 0/0
 43316 ;;		On exit  : 0/0
 43317 ;;		Unchanged: 0/0
 43318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43323 ;;Total ram usage:        0 bytes
 43324 ;; Hardware stack levels used: 1
 43325 ;; Hardware stack levels required when called: 8
 43326 ;; This function calls:
 43327 ;;		_checkTxFifo
 43328 ;;		i1_updateModuleErrorStatus
 43329 ;; This function is called by:
 43330 ;;		_canIsr
 43331 ;; This function uses a non-reentrant model
 43332 ;;
 43333                           
 43334                           	psect	text194
 43335   00B096                     __ptext194:
 43336                           	callstack 0
 43337   00B096                     _canTxError:
 43338                           	callstack 2
 43339                           
 43340                           ;../../VLCBlib_PIC/can18_ecan.c: 703:     if (TXB0CONbits.TXLARB) {
 43341                           
 43342                           ;incstack = 0
 43343   00B096  010F               	movlb	15	; () banked
 43344   00B098  AB20               	btfss	32,5,b	;volatile
 43345   00B09A  D012               	goto	i1l21550
 43346                           
 43347                           ; BSR set to: 15
 43348                           ;../../VLCBlib_PIC/can18_ecan.c: 704:         canTransmitFailed = 1;
 43349   00B09C  0E01               	movlw	1
 43350   00B09E  0100               	movlb	0	; () banked
 43351   00B0A0  6FB6               	movwf	_canTransmitFailed& (0+255),b
 43352                           
 43353                           ;../../VLCBlib_PIC/can18_ecan.c: 705:         canTransmitTimeout.val = 0;
 43354   00B0A2  0E00               	movlw	0
 43355   00B0A4  6E15               	movwf	_canTransmitTimeout^0,c
 43356   00B0A6  0E00               	movlw	0
 43357   00B0A8  6E16               	movwf	(_canTransmitTimeout+1)^0,c
 43358   00B0AA  0E00               	movlw	0
 43359   00B0AC  6E17               	movwf	(_canTransmitTimeout+2)^0,c
 43360   00B0AE  0E00               	movlw	0
 43361   00B0B0  6E18               	movwf	(_canTransmitTimeout+3)^0,c
 43362                           
 43363                           ; BSR set to: 0
 43364                           ;../../VLCBlib_PIC/can18_ecan.c: 706:         TXB0CONbits.TXREQ = 0;
 43365   00B0B2  010F               	movlb	15	; () banked
 43366   00B0B4  9720               	bcf	32,3,b	;volatile
 43367                           
 43368                           ; BSR set to: 15
 43369                           ;../../VLCBlib_PIC/can18_ecan.c: 707:         canDiagnostics[0x0B].asUint++;
 43370   00B0B6  0101               	movlb	1	; () banked
 43371   00B0B8  4B90               	infsnz	(_canDiagnostics+22)& (0+255),f,b
 43372   00B0BA  2B91               	incf	(_canDiagnostics+23)& (0+255),f,b
 43373                           
 43374                           ; BSR set to: 1
 43375                           ;../../VLCBlib_PIC/can18_ecan.c: 708:         updateModuleErrorStatus();
 43376   00B0BC  ECB2  F061         	call	i1_updateModuleErrorStatus	;wreg free
 43377   00B0C0                     i1l21550:
 43378                           
 43379                           ;../../VLCBlib_PIC/can18_ecan.c: 710:     if (TXB0CONbits.TXERR) {
 43380   00B0C0  010F               	movlb	15	; () banked
 43381   00B0C2  A920               	btfss	32,4,b	;volatile
 43382   00B0C4  D012               	goto	i1l21560
 43383                           
 43384                           ; BSR set to: 15
 43385                           ;../../VLCBlib_PIC/can18_ecan.c: 711:         canTransmitFailed = 1;
 43386   00B0C6  0E01               	movlw	1
 43387   00B0C8  0100               	movlb	0	; () banked
 43388   00B0CA  6FB6               	movwf	_canTransmitFailed& (0+255),b
 43389                           
 43390                           ;../../VLCBlib_PIC/can18_ecan.c: 712:         canTransmitTimeout.val = 0;
 43391   00B0CC  0E00               	movlw	0
 43392   00B0CE  6E15               	movwf	_canTransmitTimeout^0,c
 43393   00B0D0  0E00               	movlw	0
 43394   00B0D2  6E16               	movwf	(_canTransmitTimeout+1)^0,c
 43395   00B0D4  0E00               	movlw	0
 43396   00B0D6  6E17               	movwf	(_canTransmitTimeout+2)^0,c
 43397   00B0D8  0E00               	movlw	0
 43398   00B0DA  6E18               	movwf	(_canTransmitTimeout+3)^0,c
 43399                           
 43400                           ; BSR set to: 0
 43401                           ;../../VLCBlib_PIC/can18_ecan.c: 713:         TXB0CONbits.TXREQ = 0;
 43402   00B0DC  010F               	movlb	15	; () banked
 43403   00B0DE  9720               	bcf	32,3,b	;volatile
 43404                           
 43405                           ; BSR set to: 15
 43406                           ;../../VLCBlib_PIC/can18_ecan.c: 714:         canDiagnostics[0x01].asUint++;
 43407   00B0E0  0101               	movlb	1	; () banked
 43408   00B0E2  4B7C               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 43409   00B0E4  2B7D               	incf	(_canDiagnostics+3)& (0+255),f,b
 43410                           
 43411                           ; BSR set to: 1
 43412                           ;../../VLCBlib_PIC/can18_ecan.c: 715:         updateModuleErrorStatus();
 43413   00B0E6  ECB2  F061         	call	i1_updateModuleErrorStatus	;wreg free
 43414   00B0EA                     i1l21560:
 43415                           
 43416                           ;../../VLCBlib_PIC/can18_ecan.c: 717:     if (canTransmitFailed) {
 43417   00B0EA  0100               	movlb	0	; () banked
 43418   00B0EC  51B6               	movf	_canTransmitFailed& (0+255),w,b
 43419   00B0EE  A4D8               	btfss	status,2,c
 43420                           
 43421                           ; BSR set to: 0
 43422                           ;../../VLCBlib_PIC/can18_ecan.c: 718:         checkTxFifo();
 43423   00B0F0  EC04  F02B         	call	_checkTxFifo	;wreg free
 43424                           
 43425                           ;../../VLCBlib_PIC/can18_ecan.c: 720:     PIR5bits.ERRIF = 0;
 43426   00B0F4  9A77               	bcf	119,5,c	;volatile
 43427   00B0F6  0012               	return		;funcret
 43428   00B0F8                     __end_of_canTxError:
 43429                           	callstack 0
 43430                           
 43431 ;; *************** function _checkTxFifo *****************
 43432 ;; Defined at:
 43433 ;;		line 616 in file "../../VLCBlib_PIC/can18_ecan.c"
 43434 ;; Parameters:    Size  Location     Type
 43435 ;;		None
 43436 ;; Auto vars:     Size  Location     Type
 43437 ;;  mp              2   19[BANK0 ] PTR struct Message
 43438 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 43439 ;;  m               2   17[BANK0 ] PTR struct Message
 43440 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 43441 ;; Return value:  Size  Location     Type
 43442 ;;                  1    wreg      void 
 43443 ;; Registers used:
 43444 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43445 ;; Tracked objects:
 43446 ;;		On entry : 0/0
 43447 ;;		On exit  : 0/0
 43448 ;;		Unchanged: 0/0
 43449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43451 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43452 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43453 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43454 ;;Total ram usage:        9 bytes
 43455 ;; Hardware stack levels used: 1
 43456 ;; Hardware stack levels required when called: 7
 43457 ;; This function calls:
 43458 ;;		i1_getNextWriteMessage
 43459 ;;		i1_isEvent
 43460 ;;		i1_pop
 43461 ;;		i1_tickGet
 43462 ;;		i1_updateModuleErrorStatus
 43463 ;; This function is called by:
 43464 ;;		_canIsr
 43465 ;;		_checkCANTimeout
 43466 ;;		_canTxError
 43467 ;; This function uses a non-reentrant model
 43468 ;;
 43469                           
 43470                           	psect	text195
 43471   005608                     __ptext195:
 43472                           	callstack 0
 43473   005608                     _checkTxFifo:
 43474                           	callstack 3
 43475                           
 43476                           ;../../VLCBlib_PIC/can18_ecan.c: 617:     Message * mp;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          619:     Message * m;;../../VLCBlib_PIC/can18_ecan.c: 622:     PIR5bits.TXBnIF = 0;
 43477                           
 43478                           ;incstack = 0
 43479   005608  9877               	bcf	119,4,c	;volatile
 43480                           
 43481                           ;../../VLCBlib_PIC/can18_ecan.c: 623:     if (!TXB0CONbits.TXREQ) {
 43482   00560A  010F               	movlb	15	; () banked
 43483   00560C  B720               	btfsc	32,3,b	;volatile
 43484   00560E  D158               	goto	i1l2919
 43485                           
 43486                           ; BSR set to: 15
 43487                           ;../../VLCBlib_PIC/can18_ecan.c: 624:         mp = pop(&txQueue);
 43488   005610  0E21               	movlw	low _txQueue
 43489   005612  0100               	movlb	0	; () banked
 43490   005614  6F60               	movwf	i1pop@q& (0+255),b
 43491   005616  ECD1  F04E         	call	i1_pop	;wreg free
 43492   00561A  C060  F073         	movff	?i1_pop,checkTxFifo@mp
 43493   00561E  C061  F074         	movff	?i1_pop+1,checkTxFifo@mp+1
 43494                           
 43495                           ;../../VLCBlib_PIC/can18_ecan.c: 625:         if (mp != ((void*)0)) {
 43496   005622  0100               	movlb	0	; () banked
 43497   005624  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43498   005626  1174               	iorwf	(checkTxFifo@mp+1)& (0+255),w,b
 43499   005628  B4D8               	btfsc	status,2,c
 43500   00562A  D13C               	goto	i1l20316
 43501                           
 43502                           ; BSR set to: 0
 43503                           ;../../VLCBlib_PIC/can18_ecan.c: 627:             TXB0SIDH = canPri[priorities[mp->opc]]
      +                           | ((canId & 0x78) >> 3);
 43504   00562C  EE20 F001          	lfsr	2,1
 43505   005630  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43506   005632  26D9               	addwf	fsr2l,f,c
 43507   005634  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43508   005636  22DA               	addwfc	fsr2h,f,c
 43509   005638  50DF               	movf	indf2,w,c
 43510   00563A  6F6C               	movwf	??_checkTxFifo& (0+255),b
 43511   00563C  6B6D               	clrf	(??_checkTxFifo+1)& (0+255),b
 43512   00563E  0E35               	movlw	low _priorities
 43513   005640  256C               	addwf	??_checkTxFifo& (0+255),w,b
 43514   005642  6EF6               	movwf	tblptrl,c
 43515   005644  0EED               	movlw	high _priorities
 43516   005646  216D               	addwfc	(??_checkTxFifo+1)& (0+255),w,b
 43517   005648  6EF7               	movwf	tblptrh,c
 43518   00564A                     	if	1	;There are 3 active tblptr bytes
 43519   00564A  6AF8               	clrf	tblptru,c
 43520   00564C  0E00               	movlw	low (__mediumconst shr (0+16))
 43521   00564E  22F8               	addwfc	tblptru,f,c
 43522   005650                     	endif
 43523   005650  0008               	tblrd		*
 43524   005652  50F5               	movf	tablat,w,c
 43525   005654  6F6E               	movwf	(??_checkTxFifo+2)& (0+255),b
 43526   005656  6B6F               	clrf	(??_checkTxFifo+3)& (0+255),b
 43527   005658  0E87               	movlw	low _canPri
 43528   00565A  256E               	addwf	(??_checkTxFifo+2)& (0+255),w,b
 43529   00565C  6EF6               	movwf	tblptrl,c
 43530   00565E  0EEE               	movlw	high _canPri
 43531   005660  216F               	addwfc	(??_checkTxFifo+3)& (0+255),w,b
 43532   005662  6EF7               	movwf	tblptrh,c
 43533   005664                     	if	1	;There are 3 active tblptr bytes
 43534   005664  6AF8               	clrf	tblptru,c
 43535   005666  0E00               	movlw	low (__mediumconst shr (0+16))
 43536   005668  22F8               	addwfc	tblptru,f,c
 43537   00566A                     	endif
 43538   00566A  0008               	tblrd		*
 43539   00566C  CFF5 F070          	movff	tablat,??_checkTxFifo+4
 43540   005670  39B7               	swapf	_canId& (0+255),w,b
 43541   005672  46E8               	rlncf	wreg,f,c
 43542   005674  0B1F               	andlw	31
 43543   005676  0B0F               	andlw	15
 43544   005678  1170               	iorwf	(??_checkTxFifo+4)& (0+255),w,b
 43545   00567A  010F               	movlb	15	; () banked
 43546   00567C  6F21               	movwf	33,b	;volatile
 43547                           
 43548                           ; BSR set to: 15
 43549                           ;../../VLCBlib_PIC/can18_ecan.c: 628:             TXB0SIDL = (uint8_t)((canId & 0x07) <<
      +                           5);
 43550   00567E  C0B7  F06C         	movff	_canId,??_checkTxFifo
 43551   005682  0E07               	movlw	7
 43552   005684  0100               	movlb	0	; () banked
 43553   005686  176C               	andwf	??_checkTxFifo& (0+255),f,b
 43554   005688  0E05               	movlw	5
 43555   00568A  6F6D               	movwf	(??_checkTxFifo+1)& (0+255),b
 43556   00568C                     i1u2082_25:
 43557   00568C  90D8               	bcf	status,0,c
 43558   00568E  376C               	rlcf	??_checkTxFifo& (0+255),f,b
 43559   005690  2F6D               	decfsz	(??_checkTxFifo+1)& (0+255),f,b
 43560   005692  D7FC               	goto	i1u2082_25
 43561   005694  516C               	movf	??_checkTxFifo& (0+255),w,b
 43562   005696  010F               	movlb	15	; () banked
 43563   005698  6F22               	movwf	34,b	;volatile
 43564                           
 43565                           ; BSR set to: 15
 43566                           ;../../VLCBlib_PIC/can18_ecan.c: 629:             TXB0D0 = mp->opc;
 43567   00569A  0100               	movlb	0	; () banked
 43568   00569C  EE20 F001          	lfsr	2,1
 43569   0056A0  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43570   0056A2  26D9               	addwf	fsr2l,f,c
 43571   0056A4  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43572   0056A6  22DA               	addwfc	fsr2h,f,c
 43573   0056A8  50DF               	movf	indf2,w,c
 43574   0056AA  010F               	movlb	15	; () banked
 43575   0056AC  6F26               	movwf	38,b	;volatile
 43576                           
 43577                           ; BSR set to: 15
 43578                           ;../../VLCBlib_PIC/can18_ecan.c: 630:             TXB0D1 = mp->bytes[0];
 43579   0056AE  0100               	movlb	0	; () banked
 43580   0056B0  EE20 F002          	lfsr	2,2
 43581   0056B4  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43582   0056B6  26D9               	addwf	fsr2l,f,c
 43583   0056B8  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43584   0056BA  22DA               	addwfc	fsr2h,f,c
 43585   0056BC  50DF               	movf	indf2,w,c
 43586   0056BE  010F               	movlb	15	; () banked
 43587   0056C0  6F27               	movwf	39,b	;volatile
 43588                           
 43589                           ; BSR set to: 15
 43590                           ;../../VLCBlib_PIC/can18_ecan.c: 631:             TXB0D2 = mp->bytes[1];
 43591   0056C2  0100               	movlb	0	; () banked
 43592   0056C4  EE20 F003          	lfsr	2,3
 43593   0056C8  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43594   0056CA  26D9               	addwf	fsr2l,f,c
 43595   0056CC  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43596   0056CE  22DA               	addwfc	fsr2h,f,c
 43597   0056D0  50DF               	movf	indf2,w,c
 43598   0056D2  010F               	movlb	15	; () banked
 43599   0056D4  6F28               	movwf	40,b	;volatile
 43600                           
 43601                           ; BSR set to: 15
 43602                           ;../../VLCBlib_PIC/can18_ecan.c: 632:             TXB0D3 = mp->bytes[2];
 43603   0056D6  0100               	movlb	0	; () banked
 43604   0056D8  EE20 F004          	lfsr	2,4
 43605   0056DC  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43606   0056DE  26D9               	addwf	fsr2l,f,c
 43607   0056E0  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43608   0056E2  22DA               	addwfc	fsr2h,f,c
 43609   0056E4  50DF               	movf	indf2,w,c
 43610   0056E6  010F               	movlb	15	; () banked
 43611   0056E8  6F29               	movwf	41,b	;volatile
 43612                           
 43613                           ; BSR set to: 15
 43614                           ;../../VLCBlib_PIC/can18_ecan.c: 633:             TXB0D4 = mp->bytes[3];
 43615   0056EA  0100               	movlb	0	; () banked
 43616   0056EC  EE20 F005          	lfsr	2,5
 43617   0056F0  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43618   0056F2  26D9               	addwf	fsr2l,f,c
 43619   0056F4  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43620   0056F6  22DA               	addwfc	fsr2h,f,c
 43621   0056F8  50DF               	movf	indf2,w,c
 43622   0056FA  010F               	movlb	15	; () banked
 43623   0056FC  6F2A               	movwf	42,b	;volatile
 43624                           
 43625                           ; BSR set to: 15
 43626                           ;../../VLCBlib_PIC/can18_ecan.c: 634:             TXB0D5 = mp->bytes[4];
 43627   0056FE  0100               	movlb	0	; () banked
 43628   005700  EE20 F006          	lfsr	2,6
 43629   005704  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43630   005706  26D9               	addwf	fsr2l,f,c
 43631   005708  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43632   00570A  22DA               	addwfc	fsr2h,f,c
 43633   00570C  50DF               	movf	indf2,w,c
 43634   00570E  010F               	movlb	15	; () banked
 43635   005710  6F2B               	movwf	43,b	;volatile
 43636                           
 43637                           ; BSR set to: 15
 43638                           ;../../VLCBlib_PIC/can18_ecan.c: 635:             TXB0D6 = mp->bytes[5];
 43639   005712  0100               	movlb	0	; () banked
 43640   005714  EE20 F007          	lfsr	2,7
 43641   005718  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43642   00571A  26D9               	addwf	fsr2l,f,c
 43643   00571C  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43644   00571E  22DA               	addwfc	fsr2h,f,c
 43645   005720  50DF               	movf	indf2,w,c
 43646   005722  010F               	movlb	15	; () banked
 43647   005724  6F2C               	movwf	44,b	;volatile
 43648                           
 43649                           ; BSR set to: 15
 43650                           ;../../VLCBlib_PIC/can18_ecan.c: 636:             TXB0D7 = mp->bytes[6];
 43651   005726  0100               	movlb	0	; () banked
 43652   005728  EE20 F008          	lfsr	2,8
 43653   00572C  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43654   00572E  26D9               	addwf	fsr2l,f,c
 43655   005730  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43656   005732  22DA               	addwfc	fsr2h,f,c
 43657   005734  50DF               	movf	indf2,w,c
 43658   005736  010F               	movlb	15	; () banked
 43659   005738  6F2D               	movwf	45,b	;volatile
 43660                           
 43661                           ; BSR set to: 15
 43662                           ;../../VLCBlib_PIC/can18_ecan.c: 637:             TXB0DLC = mp->len;
 43663   00573A  C073  FFD9         	movff	checkTxFifo@mp,fsr2l
 43664   00573E  C074  FFDA         	movff	checkTxFifo@mp+1,fsr2h
 43665   005742  50DF               	movf	indf2,w,c
 43666   005744  6F25               	movwf	37,b	;volatile
 43667                           
 43668                           ; BSR set to: 15
 43669                           ;../../VLCBlib_PIC/can18_ecan.c: 639:             canTransmitTimeout.val = tickGet();
 43670   005746  EC1A  F05A         	call	i1_tickGet	;wreg free
 43671   00574A  C060  F015         	movff	?i1_tickGet,_canTransmitTimeout
 43672   00574E  C061  F016         	movff	?i1_tickGet+1,_canTransmitTimeout+1
 43673   005752  C062  F017         	movff	?i1_tickGet+2,_canTransmitTimeout+2
 43674   005756  C063  F018         	movff	?i1_tickGet+3,_canTransmitTimeout+3
 43675                           
 43676                           ;../../VLCBlib_PIC/can18_ecan.c: 640:             canTransmitFailed = 0;
 43677   00575A  0E00               	movlw	0
 43678   00575C  0100               	movlb	0	; () banked
 43679   00575E  6FB6               	movwf	_canTransmitFailed& (0+255),b
 43680                           
 43681                           ; BSR set to: 0
 43682                           ;../../VLCBlib_PIC/can18_ecan.c: 641:             TXB0CONbits.TXREQ = 1;
 43683   005760  010F               	movlb	15	; () banked
 43684   005762  8720               	bsf	32,3,b	;volatile
 43685                           
 43686                           ; BSR set to: 15
 43687                           ;../../VLCBlib_PIC/can18_ecan.c: 642:             PIE5bits.TXBnIE = 1;
 43688   005764  8876               	bsf	118,4,c	;volatile
 43689                           
 43690                           ; BSR set to: 15
 43691                           ;../../VLCBlib_PIC/can18_ecan.c: 643:             canDiagnostics[0x05].asUint++;
 43692   005766  0101               	movlb	1	; () banked
 43693   005768  4B84               	infsnz	(_canDiagnostics+10)& (0+255),f,b
 43694   00576A  2B85               	incf	(_canDiagnostics+11)& (0+255),f,b
 43695                           
 43696                           ; BSR set to: 1
 43697                           ;../../VLCBlib_PIC/can18_ecan.c: 646:             if (isEvent(mp->opc)) {
 43698   00576C  0100               	movlb	0	; () banked
 43699   00576E  EE20 F001          	lfsr	2,1
 43700   005772  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43701   005774  26D9               	addwf	fsr2l,f,c
 43702   005776  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43703   005778  22DA               	addwfc	fsr2h,f,c
 43704   00577A  50DF               	movf	indf2,w,c
 43705   00577C  EC31  F060         	call	i1_isEvent
 43706   005780  0900               	iorlw	0
 43707   005782  B4D8               	btfsc	status,2,c
 43708   005784  0012               	return	
 43709                           
 43710                           ;../../VLCBlib_PIC/can18_ecan.c: 648:                 m = getNextWriteMessage(&rxQueue);
 43711   005786  0E26               	movlw	low _rxQueue
 43712   005788  0100               	movlb	0	; () banked
 43713   00578A  6F60               	movwf	i1getNextWriteMessage@q& (0+255),b
 43714   00578C  EC46  F045         	call	i1_getNextWriteMessage	;wreg free
 43715   005790  C060  F071         	movff	?i1_getNextWriteMessage,checkTxFifo@m
 43716   005794  C061  F072         	movff	?i1_getNextWriteMessage+1,checkTxFifo@m+1
 43717                           
 43718                           ;../../VLCBlib_PIC/can18_ecan.c: 649:                 if (m == ((void*)0)) {
 43719   005798  0100               	movlb	0	; () banked
 43720   00579A  5171               	movf	checkTxFifo@m& (0+255),w,b
 43721   00579C  1172               	iorwf	(checkTxFifo@m+1)& (0+255),w,b
 43722   00579E  A4D8               	btfss	status,2,c
 43723   0057A0  D006               	goto	i1l20298
 43724                           
 43725                           ; BSR set to: 0
 43726                           ;../../VLCBlib_PIC/can18_ecan.c: 650:                     canDiagnostics[0x07].asUint++;
 43727   0057A2  0101               	movlb	1	; () banked
 43728   0057A4  4B88               	infsnz	(_canDiagnostics+14)& (0+255),f,b
 43729   0057A6  2B89               	incf	(_canDiagnostics+15)& (0+255),f,b
 43730                           
 43731                           ; BSR set to: 1
 43732                           ;../../VLCBlib_PIC/can18_ecan.c: 651:                     updateModuleErrorStatus();
 43733   0057A8  ECB2  F061         	call	i1_updateModuleErrorStatus	;wreg free
 43734                           
 43735                           ;../../VLCBlib_PIC/can18_ecan.c: 652:                 } else {
 43736   0057AC  0012               	return	
 43737   0057AE                     i1l20298:
 43738                           
 43739                           ; BSR set to: 0
 43740                           ;../../VLCBlib_PIC/can18_ecan.c: 654:                     m->opc = mp->opc;
 43741   0057AE  EE20 F001          	lfsr	2,1
 43742   0057B2  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43743   0057B4  26D9               	addwf	fsr2l,f,c
 43744   0057B6  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43745   0057B8  22DA               	addwfc	fsr2h,f,c
 43746   0057BA  EE10 F001          	lfsr	1,1
 43747   0057BE  5171               	movf	checkTxFifo@m& (0+255),w,b
 43748   0057C0  26E1               	addwf	fsr1l,f,c
 43749   0057C2  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 43750   0057C4  22E2               	addwfc	fsr1h,f,c
 43751   0057C6  CFDF FFE7          	movff	indf2,indf1
 43752                           
 43753                           ; BSR set to: 0
 43754                           ;../../VLCBlib_PIC/can18_ecan.c: 655:                     m->len = mp->len;
 43755   0057CA  C073  FFD9         	movff	checkTxFifo@mp,fsr2l
 43756   0057CE  C074  FFDA         	movff	checkTxFifo@mp+1,fsr2h
 43757   0057D2  C071  FFE1         	movff	checkTxFifo@m,fsr1l
 43758   0057D6  C072  FFE2         	movff	checkTxFifo@m+1,fsr1h
 43759   0057DA  CFDF FFE7          	movff	indf2,indf1
 43760                           
 43761                           ; BSR set to: 0
 43762                           ;../../VLCBlib_PIC/can18_ecan.c: 656:                     m->bytes[0] = mp->bytes[0];
 43763   0057DE  EE20 F002          	lfsr	2,2
 43764   0057E2  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43765   0057E4  26D9               	addwf	fsr2l,f,c
 43766   0057E6  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43767   0057E8  22DA               	addwfc	fsr2h,f,c
 43768   0057EA  EE10 F002          	lfsr	1,2
 43769   0057EE  5171               	movf	checkTxFifo@m& (0+255),w,b
 43770   0057F0  26E1               	addwf	fsr1l,f,c
 43771   0057F2  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 43772   0057F4  22E2               	addwfc	fsr1h,f,c
 43773   0057F6  CFDF FFE7          	movff	indf2,indf1
 43774                           
 43775                           ; BSR set to: 0
 43776                           ;../../VLCBlib_PIC/can18_ecan.c: 657:                     m->bytes[1] = mp->bytes[1];
 43777   0057FA  EE20 F003          	lfsr	2,3
 43778   0057FE  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43779   005800  26D9               	addwf	fsr2l,f,c
 43780   005802  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43781   005804  22DA               	addwfc	fsr2h,f,c
 43782   005806  EE10 F003          	lfsr	1,3
 43783   00580A  5171               	movf	checkTxFifo@m& (0+255),w,b
 43784   00580C  26E1               	addwf	fsr1l,f,c
 43785   00580E  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 43786   005810  22E2               	addwfc	fsr1h,f,c
 43787   005812  CFDF FFE7          	movff	indf2,indf1
 43788                           
 43789                           ; BSR set to: 0
 43790                           ;../../VLCBlib_PIC/can18_ecan.c: 658:                     m->bytes[2] = mp->bytes[2];
 43791   005816  EE20 F004          	lfsr	2,4
 43792   00581A  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43793   00581C  26D9               	addwf	fsr2l,f,c
 43794   00581E  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43795   005820  22DA               	addwfc	fsr2h,f,c
 43796   005822  EE10 F004          	lfsr	1,4
 43797   005826  5171               	movf	checkTxFifo@m& (0+255),w,b
 43798   005828  26E1               	addwf	fsr1l,f,c
 43799   00582A  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 43800   00582C  22E2               	addwfc	fsr1h,f,c
 43801   00582E  CFDF FFE7          	movff	indf2,indf1
 43802                           
 43803                           ; BSR set to: 0
 43804                           ;../../VLCBlib_PIC/can18_ecan.c: 659:                     m->bytes[3] = mp->bytes[3];
 43805   005832  EE20 F005          	lfsr	2,5
 43806   005836  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43807   005838  26D9               	addwf	fsr2l,f,c
 43808   00583A  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43809   00583C  22DA               	addwfc	fsr2h,f,c
 43810   00583E  EE10 F005          	lfsr	1,5
 43811   005842  5171               	movf	checkTxFifo@m& (0+255),w,b
 43812   005844  26E1               	addwf	fsr1l,f,c
 43813   005846  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 43814   005848  22E2               	addwfc	fsr1h,f,c
 43815   00584A  CFDF FFE7          	movff	indf2,indf1
 43816                           
 43817                           ; BSR set to: 0
 43818                           ;../../VLCBlib_PIC/can18_ecan.c: 660:                     m->bytes[4] = mp->bytes[4];
 43819   00584E  EE20 F006          	lfsr	2,6
 43820   005852  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43821   005854  26D9               	addwf	fsr2l,f,c
 43822   005856  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43823   005858  22DA               	addwfc	fsr2h,f,c
 43824   00585A  EE10 F006          	lfsr	1,6
 43825   00585E  5171               	movf	checkTxFifo@m& (0+255),w,b
 43826   005860  26E1               	addwf	fsr1l,f,c
 43827   005862  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 43828   005864  22E2               	addwfc	fsr1h,f,c
 43829   005866  CFDF FFE7          	movff	indf2,indf1
 43830                           
 43831                           ; BSR set to: 0
 43832                           ;../../VLCBlib_PIC/can18_ecan.c: 661:                     m->bytes[5] = mp->bytes[5];
 43833   00586A  EE20 F007          	lfsr	2,7
 43834   00586E  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43835   005870  26D9               	addwf	fsr2l,f,c
 43836   005872  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43837   005874  22DA               	addwfc	fsr2h,f,c
 43838   005876  EE10 F007          	lfsr	1,7
 43839   00587A  5171               	movf	checkTxFifo@m& (0+255),w,b
 43840   00587C  26E1               	addwf	fsr1l,f,c
 43841   00587E  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 43842   005880  22E2               	addwfc	fsr1h,f,c
 43843   005882  CFDF FFE7          	movff	indf2,indf1
 43844                           
 43845                           ; BSR set to: 0
 43846                           ;../../VLCBlib_PIC/can18_ecan.c: 662:                     m->bytes[6] = mp->bytes[6];
 43847   005886  EE20 F008          	lfsr	2,8
 43848   00588A  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43849   00588C  26D9               	addwf	fsr2l,f,c
 43850   00588E  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43851   005890  22DA               	addwfc	fsr2h,f,c
 43852   005892  EE10 F008          	lfsr	1,8
 43853   005896  5171               	movf	checkTxFifo@m& (0+255),w,b
 43854   005898  26E1               	addwf	fsr1l,f,c
 43855   00589A  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 43856   00589C  22E2               	addwfc	fsr1h,f,c
 43857   00589E  CFDF FFE7          	movff	indf2,indf1
 43858   0058A2  0012               	return	
 43859   0058A4                     i1l20316:
 43860                           
 43861                           ; BSR set to: 0
 43862                           ;../../VLCBlib_PIC/can18_ecan.c: 668:             canTransmitTimeout.val = 0;
 43863   0058A4  0E00               	movlw	0
 43864   0058A6  6E15               	movwf	_canTransmitTimeout^0,c
 43865   0058A8  0E00               	movlw	0
 43866   0058AA  6E16               	movwf	(_canTransmitTimeout+1)^0,c
 43867   0058AC  0E00               	movlw	0
 43868   0058AE  6E17               	movwf	(_canTransmitTimeout+2)^0,c
 43869   0058B0  0E00               	movlw	0
 43870   0058B2  6E18               	movwf	(_canTransmitTimeout+3)^0,c
 43871                           
 43872                           ;../../VLCBlib_PIC/can18_ecan.c: 669:             TXB0CON = 0;
 43873   0058B4  0E00               	movlw	0
 43874   0058B6  010F               	movlb	15	; () banked
 43875   0058B8  6F20               	movwf	32,b	;volatile
 43876                           
 43877                           ; BSR set to: 15
 43878                           ;../../VLCBlib_PIC/can18_ecan.c: 670:             PIR5bits.TXBnIF = 0;
 43879   0058BA  9877               	bcf	119,4,c	;volatile
 43880                           
 43881                           ; BSR set to: 15
 43882                           ;../../VLCBlib_PIC/can18_ecan.c: 671:             PIE5bits.TXBnIE = 0;
 43883   0058BC  9876               	bcf	118,4,c	;volatile
 43884   0058BE  0012               	return	
 43885   0058C0                     i1l2919:
 43886                           
 43887                           ; BSR set to: 15
 43888                           ;../../VLCBlib_PIC/can18_ecan.c: 675:         PIR5bits.TXBnIF = 0;
 43889   0058C0  9877               	bcf	119,4,c	;volatile
 43890                           
 43891                           ;../../VLCBlib_PIC/can18_ecan.c: 676:         PIE5bits.TXBnIE = 1;
 43892   0058C2  8876               	bsf	118,4,c	;volatile
 43893   0058C4  0012               	return		;funcret
 43894   0058C6                     __end_of_checkTxFifo:
 43895                           	callstack 0
 43896                           
 43897 ;; *************** function i1_tickGet *****************
 43898 ;; Defined at:
 43899 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 43900 ;; Parameters:    Size  Location     Type
 43901 ;;		None
 43902 ;; Auto vars:     Size  Location     Type
 43903 ;;  currentTime     4    6[BANK0 ] struct _TickValue
 43904 ;;  IntFlag1        1    5[BANK0 ] unsigned char 
 43905 ;;  IntFlag2        1    4[BANK0 ] unsigned char 
 43906 ;; Return value:  Size  Location     Type
 43907 ;;                  4    0[BANK0 ] unsigned long 
 43908 ;; Registers used:
 43909 ;;		wreg, status,2, status,0
 43910 ;; Tracked objects:
 43911 ;;		On entry : 0/0
 43912 ;;		On exit  : 0/0
 43913 ;;		Unchanged: 0/0
 43914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43915 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43916 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43918 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43919 ;;Total ram usage:       10 bytes
 43920 ;; Hardware stack levels used: 1
 43921 ;; Hardware stack levels required when called: 6
 43922 ;; This function calls:
 43923 ;;		Nothing
 43924 ;; This function is called by:
 43925 ;;		_checkTxFifo
 43926 ;;		_checkCANTimeout
 43927 ;; This function uses a non-reentrant model
 43928 ;;
 43929                           
 43930                           	psect	text196
 43931   00B434                     __ptext196:
 43932                           	callstack 0
 43933   00B434                     i1_tickGet:
 43934                           	callstack 3
 43935                           
 43936                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 43937                           
 43938                           ;incstack = 0
 43939   00B434  0E00               	movlw	0
 43940   00B436  0100               	movlb	0	; () banked
 43941   00B438  6F68               	movwf	(i1tickGet@currentTime+2)& (0+255),b
 43942                           
 43943                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 43944   00B43A  0E00               	movlw	0
 43945   00B43C  6F69               	movwf	(i1tickGet@currentTime+3)& (0+255),b
 43946                           
 43947                           ; BSR set to: 0
 43948                           ;../../VLCBlib_PIC/ticktime.c: 169:     INTCONbits.TMR0IE = 0;
 43949   00B43E  9AF2               	bcf	242,5,c	;volatile
 43950   00B440                     i1l19434:
 43951                           
 43952                           ; BSR set to: 0
 43953                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = INTCONbits.TMR0IF;
 43954   00B440  0E00               	movlw	0
 43955   00B442  B4F2               	btfsc	242,2,c	;volatile
 43956   00B444  0E01               	movlw	1
 43957   00B446  6F65               	movwf	i1tickGet@IntFlag1& (0+255),b
 43958                           
 43959                           ; BSR set to: 0
 43960                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 43961   00B448  CFD6 F066          	movff	4054,i1tickGet@currentTime	;volatile
 43962                           
 43963                           ; BSR set to: 0
 43964                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 43965   00B44C  CFD7 F067          	movff	4055,i1tickGet@currentTime+1	;volatile
 43966                           
 43967                           ; BSR set to: 0
 43968                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = INTCONbits.TMR0IF;
 43969   00B450  0E00               	movlw	0
 43970   00B452  B4F2               	btfsc	242,2,c	;volatile
 43971   00B454  0E01               	movlw	1
 43972   00B456  6F64               	movwf	i1tickGet@IntFlag2& (0+255),b
 43973                           
 43974                           ; BSR set to: 0
 43975                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 43976   00B458  5164               	movf	i1tickGet@IntFlag2& (0+255),w,b
 43977   00B45A  1965               	xorwf	i1tickGet@IntFlag1& (0+255),w,b
 43978   00B45C  A4D8               	btfss	status,2,c
 43979   00B45E  D7F0               	goto	i1l19434
 43980                           
 43981                           ; BSR set to: 0
 43982                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 43983   00B460  5165               	movf	i1tickGet@IntFlag1& (0+255),w,b
 43984   00B462  B4D8               	btfsc	status,2,c
 43985   00B464  D005               	goto	i1l19454
 43986                           
 43987                           ; BSR set to: 0
 43988                           ;../../VLCBlib_PIC/ticktime.c: 178:         INTCONbits.TMR0IF = 0;
 43989   00B466  94F2               	bcf	242,2,c	;volatile
 43990                           
 43991                           ; BSR set to: 0
 43992                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 43993   00B468  2BC3               	incf	_timerExtension1& (0+255),f,b	;volatile
 43994                           
 43995                           ; BSR set to: 0
 43996                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 43997   00B46A  51C3               	movf	_timerExtension1& (0+255),w,b	;volatile
 43998   00B46C  B4D8               	btfsc	status,2,c
 43999                           
 44000                           ; BSR set to: 0
 44001                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 44002   00B46E  2BC2               	incf	_timerExtension2& (0+255),f,b	;volatile
 44003   00B470                     i1l19454:
 44004                           
 44005                           ; BSR set to: 0
 44006                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 44007   00B470  51C3               	movf	_timerExtension1& (0+255),w,b	;volatile
 44008   00B472  2768               	addwf	(i1tickGet@currentTime+2)& (0+255),f,b
 44009                           
 44010                           ; BSR set to: 0
 44011                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 44012   00B474  51C2               	movf	_timerExtension2& (0+255),w,b	;volatile
 44013   00B476  2769               	addwf	(i1tickGet@currentTime+3)& (0+255),f,b
 44014                           
 44015                           ; BSR set to: 0
 44016                           ;../../VLCBlib_PIC/ticktime.c: 191:     INTCONbits.TMR0IE = 1;
 44017   00B478  8AF2               	bsf	242,5,c	;volatile
 44018                           
 44019                           ; BSR set to: 0
 44020                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 44021   00B47A  C066  F060         	movff	i1tickGet@currentTime,?i1_tickGet
 44022   00B47E  C067  F061         	movff	i1tickGet@currentTime+1,?i1_tickGet+1
 44023   00B482  C068  F062         	movff	i1tickGet@currentTime+2,?i1_tickGet+2
 44024   00B486  C069  F063         	movff	i1tickGet@currentTime+3,?i1_tickGet+3
 44025                           
 44026                           ; BSR set to: 0
 44027   00B48A  0012               	return		;funcret
 44028   00B48C                     __end_ofi1_tickGet:
 44029                           	callstack 0
 44030                           
 44031 ;; *************** function i1_pop *****************
 44032 ;; Defined at:
 44033 ;;		line 95 in file "../../VLCBlib_PIC/messageQueue.c"
 44034 ;; Parameters:    Size  Location     Type
 44035 ;;  q               1    0[BANK0 ] PTR struct MessageQueue
 44036 ;;		 -> txQueue(5), rxQueue(5), 
 44037 ;; Auto vars:     Size  Location     Type
 44038 ;;  ret             2    7[BANK0 ] PTR struct Message
 44039 ;;		 -> txBuffers(72), rxBuffers(288), 
 44040 ;; Return value:  Size  Location     Type
 44041 ;;                  2    0[BANK0 ] PTR struct Message
 44042 ;; Registers used:
 44043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 44044 ;; Tracked objects:
 44045 ;;		On entry : 0/0
 44046 ;;		On exit  : 0/0
 44047 ;;		Unchanged: 0/0
 44048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44049 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44050 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44051 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44052 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44053 ;;Total ram usage:        9 bytes
 44054 ;; Hardware stack levels used: 1
 44055 ;; Hardware stack levels required when called: 6
 44056 ;; This function calls:
 44057 ;;		Nothing
 44058 ;; This function is called by:
 44059 ;;		_checkTxFifo
 44060 ;; This function uses a non-reentrant model
 44061 ;;
 44062                           
 44063                           	psect	text197
 44064   009DA2                     __ptext197:
 44065                           	callstack 0
 44066   009DA2                     i1_pop:
 44067                           	callstack 3
 44068                           
 44069                           ;../../VLCBlib_PIC/messageQueue.c: 96:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 97:  if (q->writeIndex == q->readIndex) {
 44070                           
 44071                           ; BSR set to: 0
 44072                           ;incstack = 0
 44073   009DA2  0100               	movlb	0	; () banked
 44074   009DA4  5160               	movf	i1pop@q& (0+255),w,b
 44075   009DA6  6ED9               	movwf	fsr2l,c
 44076   009DA8  6ADA               	clrf	fsr2h,c
 44077   009DAA  0E02               	movlw	2
 44078   009DAC  26D9               	addwf	fsr2l,f,c
 44079   009DAE  5160               	movf	i1pop@q& (0+255),w,b
 44080   009DB0  6EE1               	movwf	fsr1l,c
 44081   009DB2  6AE2               	clrf	fsr1h,c
 44082   009DB4  0E03               	movlw	3
 44083   009DB6  26E1               	addwf	fsr1l,f,c
 44084   009DB8  50DE               	movf	postinc2,w,c
 44085   009DBA  18E6               	xorwf	postinc1,w,c
 44086   009DBC  A4D8               	btfss	status,2,c
 44087   009DBE  D005               	goto	i1l19496
 44088                           
 44089                           ; BSR set to: 0
 44090                           ;../../VLCBlib_PIC/messageQueue.c: 98:         return ((void*)0);
 44091   009DC0  0E00               	movlw	0
 44092   009DC2  6F60               	movwf	?i1_pop& (0+255),b
 44093   009DC4  0E00               	movlw	0
 44094   009DC6  6F61               	movwf	(?i1_pop+1)& (0+255),b
 44095   009DC8  0012               	return	
 44096   009DCA                     i1l19496:
 44097                           
 44098                           ; BSR set to: 0
 44099                           ;../../VLCBlib_PIC/messageQueue.c: 100:  ret = &(q->messages[q->readIndex++]);
 44100   009DCA  5160               	movf	i1pop@q& (0+255),w,b
 44101   009DCC  6ED9               	movwf	fsr2l,c
 44102   009DCE  6ADA               	clrf	fsr2h,c
 44103   009DD0  0E02               	movlw	2
 44104   009DD2  26D9               	addwf	fsr2l,f,c
 44105   009DD4  50DF               	movf	indf2,w,c
 44106   009DD6  6F62               	movwf	??i1_pop& (0+255),b
 44107   009DD8  5162               	movf	??i1_pop& (0+255),w,b
 44108   009DDA  0D09               	mullw	9
 44109   009DDC  CFF3 F063          	movff	prodl,??i1_pop+1
 44110   009DE0  CFF4 F064          	movff	prodh,??i1_pop+2
 44111   009DE4  5160               	movf	i1pop@q& (0+255),w,b
 44112   009DE6  6ED9               	movwf	fsr2l,c
 44113   009DE8  6ADA               	clrf	fsr2h,c
 44114   009DEA  CFDE F065          	movff	postinc2,??i1_pop+3
 44115   009DEE  CFDD F066          	movff	postdec2,??i1_pop+4
 44116   009DF2  5163               	movf	(??i1_pop+1)& (0+255),w,b
 44117   009DF4  2565               	addwf	(??i1_pop+3)& (0+255),w,b
 44118   009DF6  6F67               	movwf	i1pop@ret& (0+255),b
 44119   009DF8  5164               	movf	(??i1_pop+2)& (0+255),w,b
 44120   009DFA  2166               	addwfc	(??i1_pop+4)& (0+255),w,b
 44121   009DFC  6F68               	movwf	(i1pop@ret+1)& (0+255),b
 44122                           
 44123                           ; BSR set to: 0
 44124   009DFE  5160               	movf	i1pop@q& (0+255),w,b
 44125   009E00  6ED9               	movwf	fsr2l,c
 44126   009E02  6ADA               	clrf	fsr2h,c
 44127   009E04  0E02               	movlw	2
 44128   009E06  26D9               	addwf	fsr2l,f,c
 44129   009E08  2ADF               	incf	indf2,f,c
 44130                           
 44131                           ; BSR set to: 0
 44132                           ;../../VLCBlib_PIC/messageQueue.c: 101:  if (q->readIndex >= q->size) q->readIndex = 0;
 44133   009E0A  5160               	movf	i1pop@q& (0+255),w,b
 44134   009E0C  6ED9               	movwf	fsr2l,c
 44135   009E0E  6ADA               	clrf	fsr2h,c
 44136   009E10  0E04               	movlw	4
 44137   009E12  26D9               	addwf	fsr2l,f,c
 44138   009E14  5160               	movf	i1pop@q& (0+255),w,b
 44139   009E16  6EE1               	movwf	fsr1l,c
 44140   009E18  6AE2               	clrf	fsr1h,c
 44141   009E1A  0E02               	movlw	2
 44142   009E1C  26E1               	addwf	fsr1l,f,c
 44143   009E1E  50DE               	movf	postinc2,w,c
 44144   009E20  5CE6               	subwf	postinc1,w,c
 44145   009E22  A0D8               	btfss	status,0,c
 44146   009E24  D006               	goto	i1l19504
 44147                           
 44148                           ; BSR set to: 0
 44149   009E26  5160               	movf	i1pop@q& (0+255),w,b
 44150   009E28  6ED9               	movwf	fsr2l,c
 44151   009E2A  6ADA               	clrf	fsr2h,c
 44152   009E2C  0E02               	movlw	2
 44153   009E2E  26D9               	addwf	fsr2l,f,c
 44154   009E30  6ADF               	clrf	indf2,c
 44155   009E32                     i1l19504:
 44156                           
 44157                           ; BSR set to: 0
 44158                           ;../../VLCBlib_PIC/messageQueue.c: 102:  return ret;
 44159   009E32  C067  F060         	movff	i1pop@ret,?i1_pop
 44160   009E36  C068  F061         	movff	i1pop@ret+1,?i1_pop+1
 44161                           
 44162                           ; BSR set to: 0
 44163   009E3A  0012               	return		;funcret
 44164   009E3C                     __end_ofi1_pop:
 44165                           	callstack 0
 44166                           
 44167 ;; *************** function i1_isEvent *****************
 44168 ;; Defined at:
 44169 ;;		line 1114 in file "../../VLCBlib_PIC/vlcb.c"
 44170 ;; Parameters:    Size  Location     Type
 44171 ;;  opc             1    wreg     unsigned char 
 44172 ;; Auto vars:     Size  Location     Type
 44173 ;;  opc             1    1[BANK0 ] unsigned char 
 44174 ;; Return value:  Size  Location     Type
 44175 ;;                  1    wreg      enum E12700
 44176 ;; Registers used:
 44177 ;;		wreg, status,2, status,0
 44178 ;; Tracked objects:
 44179 ;;		On entry : 0/0
 44180 ;;		On exit  : 0/0
 44181 ;;		Unchanged: 0/0
 44182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44184 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44186 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44187 ;;Total ram usage:        2 bytes
 44188 ;; Hardware stack levels used: 1
 44189 ;; Hardware stack levels required when called: 6
 44190 ;; This function calls:
 44191 ;;		Nothing
 44192 ;; This function is called by:
 44193 ;;		_checkTxFifo
 44194 ;; This function uses a non-reentrant model
 44195 ;;
 44196                           
 44197                           	psect	text198
 44198   00C062                     __ptext198:
 44199                           	callstack 0
 44200   00C062                     i1_isEvent:
 44201                           	callstack 3
 44202                           
 44203                           ; BSR set to: 0
 44204                           ;incstack = 0
 44205                           ;i1isEvent@opc stored from wreg
 44206   00C062  0100               	movlb	0	; () banked
 44207   00C064  6F61               	movwf	i1isEvent@opc& (0+255),b
 44208                           
 44209                           ;../../VLCBlib_PIC/vlcb.c: 1115:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 44210   00C066  0E00               	movlw	0
 44211   00C068  0100               	movlb	0	; () banked
 44212   00C06A  6F60               	movwf	i1_isEvent$5877& (0+255),b
 44213                           
 44214                           ; BSR set to: 0
 44215   00C06C  5161               	movf	i1isEvent@opc& (0+255),w,b
 44216   00C06E  0B90               	andlw	144
 44217   00C070  0A90               	xorlw	144
 44218   00C072  A4D8               	btfss	status,2,c
 44219   00C074  D008               	goto	i1l2425
 44220                           
 44221                           ; BSR set to: 0
 44222   00C076  5161               	movf	i1isEvent@opc& (0+255),w,b
 44223   00C078  0AFF               	xorlw	255
 44224   00C07A  0B06               	andlw	6
 44225   00C07C  0A06               	xorlw	6
 44226   00C07E  A4D8               	btfss	status,2,c
 44227   00C080  D002               	goto	i1l2425
 44228                           
 44229                           ; BSR set to: 0
 44230   00C082  0E01               	movlw	1
 44231   00C084  6F60               	movwf	i1_isEvent$5877& (0+255),b
 44232   00C086                     i1l2425:
 44233                           
 44234                           ; BSR set to: 0
 44235   00C086  5160               	movf	i1_isEvent$5877& (0+255),w,b
 44236                           
 44237                           ; BSR set to: 0
 44238   00C088  0012               	return		;funcret
 44239   00C08A                     __end_ofi1_isEvent:
 44240                           	callstack 0
 44241                           
 44242 ;; *************** function _canFillRxFifo *****************
 44243 ;; Defined at:
 44244 ;;		line 761 in file "../../VLCBlib_PIC/can18_ecan.c"
 44245 ;; Parameters:    Size  Location     Type
 44246 ;;		None
 44247 ;; Auto vars:     Size  Location     Type
 44248 ;;  m               2   14[BANK0 ] PTR struct Message
 44249 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 44250 ;;  ptr             2   12[BANK0 ] PTR unsigned char 
 44251 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 44252 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 44253 ;;		 -> NULL(0), 
 44254 ;;  hiIndex         1    0        unsigned char 
 44255 ;; Return value:  Size  Location     Type
 44256 ;;                  1    wreg      void 
 44257 ;; Registers used:
 44258 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44259 ;; Tracked objects:
 44260 ;;		On entry : 0/0
 44261 ;;		On exit  : 0/0
 44262 ;;		Unchanged: 0/0
 44263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44265 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44267 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44268 ;;Total ram usage:        4 bytes
 44269 ;; Hardware stack levels used: 1
 44270 ;; Hardware stack levels required when called: 7
 44271 ;; This function calls:
 44272 ;;		i1_getBufferPointer
 44273 ;;		i1_getNextWriteMessage
 44274 ;;		i1_updateModuleErrorStatus
 44275 ;; This function is called by:
 44276 ;;		_canIsr
 44277 ;; This function uses a non-reentrant model
 44278 ;;
 44279                           
 44280                           	psect	text199
 44281   0076D2                     __ptext199:
 44282                           	callstack 0
 44283   0076D2                     _canFillRxFifo:
 44284                           	callstack 3
 44285                           
 44286                           ;../../VLCBlib_PIC/can18_ecan.c: 762:     uint8_t *ptr;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          763:     uint8_t hiIndex;;../../VLCBlib_PIC/can18_ecan.c: 764:     Message * m;;../../VL
      +                          CBlib_PIC/can18_ecan.c: 766:     while (COMSTATbits.NOT_FIFOEMPTY) {
 44287                           
 44288                           ; BSR set to: 0
 44289                           ;incstack = 0
 44290   0076D2  D0A8               	goto	i1l21538
 44291   0076D4                     i1l21504:
 44292                           
 44293                           ;../../VLCBlib_PIC/can18_ecan.c: 767:         ptr = getBufferPointer(CANCON & 0x07U);
 44294   0076D4  506F               	movf	111,w,c	;volatile
 44295   0076D6  0B07               	andlw	7
 44296   0076D8  EC4C  F050         	call	i1_getBufferPointer
 44297   0076DC  C060  F06C         	movff	?i1_getBufferPointer,canFillRxFifo@ptr
 44298   0076E0  C061  F06D         	movff	?i1_getBufferPointer+1,canFillRxFifo@ptr+1
 44299                           
 44300                           ;../../VLCBlib_PIC/can18_ecan.c: 768:         PIR5bits.RXBnIF = 0;
 44301   0076E4  9277               	bcf	119,1,c	;volatile
 44302                           
 44303                           ;../../VLCBlib_PIC/can18_ecan.c: 769:         if (COMSTATbits.RXB1OVFL) {
 44304   0076E6  BC71               	btfsc	113,6,c	;volatile
 44305                           
 44306                           ;../../VLCBlib_PIC/can18_ecan.c: 770:             COMSTATbits.RXB1OVFL = 0;
 44307   0076E8  9C71               	bcf	113,6,c	;volatile
 44308                           
 44309                           ;../../VLCBlib_PIC/can18_ecan.c: 774:         m = getNextWriteMessage(&rxQueue);
 44310   0076EA  0E26               	movlw	low _rxQueue
 44311   0076EC  0100               	movlb	0	; () banked
 44312   0076EE  6F60               	movwf	i1getNextWriteMessage@q& (0+255),b
 44313   0076F0  EC46  F045         	call	i1_getNextWriteMessage	;wreg free
 44314   0076F4  C060  F06E         	movff	?i1_getNextWriteMessage,canFillRxFifo@m
 44315   0076F8  C061  F06F         	movff	?i1_getNextWriteMessage+1,canFillRxFifo@m+1
 44316                           
 44317                           ;../../VLCBlib_PIC/can18_ecan.c: 775:         if (m == ((void*)0)) {
 44318   0076FC  0100               	movlb	0	; () banked
 44319   0076FE  516E               	movf	canFillRxFifo@m& (0+255),w,b
 44320   007700  116F               	iorwf	(canFillRxFifo@m+1)& (0+255),w,b
 44321   007702  A4D8               	btfss	status,2,c
 44322   007704  D009               	goto	i1l21526
 44323                           
 44324                           ; BSR set to: 0
 44325                           ;../../VLCBlib_PIC/can18_ecan.c: 776:             canDiagnostics[0x07].asUint++;
 44326   007706  0101               	movlb	1	; () banked
 44327   007708  4B88               	infsnz	(_canDiagnostics+14)& (0+255),f,b
 44328   00770A  2B89               	incf	(_canDiagnostics+15)& (0+255),f,b
 44329                           
 44330                           ; BSR set to: 1
 44331                           ;../../VLCBlib_PIC/can18_ecan.c: 777:             updateModuleErrorStatus();
 44332   00770C  ECB2  F061         	call	i1_updateModuleErrorStatus	;wreg free
 44333                           
 44334                           ;../../VLCBlib_PIC/can18_ecan.c: 779:             if (PIR5bits.IRXIF) {
 44335   007710  AE77               	btfss	119,7,c	;volatile
 44336   007712  0012               	return	
 44337                           
 44338                           ;../../VLCBlib_PIC/can18_ecan.c: 780:                 PIR5bits.IRXIF = 0;
 44339   007714  9E77               	bcf	119,7,c	;volatile
 44340   007716  0012               	return	
 44341   007718                     i1l21526:
 44342                           
 44343                           ; BSR set to: 0
 44344                           ;../../VLCBlib_PIC/can18_ecan.c: 785:             m->opc = ptr[6];
 44345   007718  EE20 F006          	lfsr	2,6
 44346   00771C  516C               	movf	canFillRxFifo@ptr& (0+255),w,b
 44347   00771E  26D9               	addwf	fsr2l,f,c
 44348   007720  516D               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44349   007722  22DA               	addwfc	fsr2h,f,c
 44350   007724  EE10 F001          	lfsr	1,1
 44351   007728  516E               	movf	canFillRxFifo@m& (0+255),w,b
 44352   00772A  26E1               	addwf	fsr1l,f,c
 44353   00772C  516F               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44354   00772E  22E2               	addwfc	fsr1h,f,c
 44355   007730  CFDF FFE7          	movff	indf2,indf1
 44356                           
 44357                           ;../../VLCBlib_PIC/can18_ecan.c: 786:             m->bytes[0] = ptr[7];
 44358   007734  EE20 F007          	lfsr	2,7
 44359   007738  516C               	movf	canFillRxFifo@ptr& (0+255),w,b
 44360   00773A  26D9               	addwf	fsr2l,f,c
 44361   00773C  516D               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44362   00773E  22DA               	addwfc	fsr2h,f,c
 44363   007740  EE10 F002          	lfsr	1,2
 44364   007744  516E               	movf	canFillRxFifo@m& (0+255),w,b
 44365   007746  26E1               	addwf	fsr1l,f,c
 44366   007748  516F               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44367   00774A  22E2               	addwfc	fsr1h,f,c
 44368   00774C  CFDF FFE7          	movff	indf2,indf1
 44369                           
 44370                           ;../../VLCBlib_PIC/can18_ecan.c: 787:             m->bytes[1] = ptr[8];
 44371   007750  EE20 F008          	lfsr	2,8
 44372   007754  516C               	movf	canFillRxFifo@ptr& (0+255),w,b
 44373   007756  26D9               	addwf	fsr2l,f,c
 44374   007758  516D               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44375   00775A  22DA               	addwfc	fsr2h,f,c
 44376   00775C  EE10 F003          	lfsr	1,3
 44377   007760  516E               	movf	canFillRxFifo@m& (0+255),w,b
 44378   007762  26E1               	addwf	fsr1l,f,c
 44379   007764  516F               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44380   007766  22E2               	addwfc	fsr1h,f,c
 44381   007768  CFDF FFE7          	movff	indf2,indf1
 44382                           
 44383                           ;../../VLCBlib_PIC/can18_ecan.c: 788:             m->bytes[2] = ptr[9];
 44384   00776C  EE20 F009          	lfsr	2,9
 44385   007770  516C               	movf	canFillRxFifo@ptr& (0+255),w,b
 44386   007772  26D9               	addwf	fsr2l,f,c
 44387   007774  516D               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44388   007776  22DA               	addwfc	fsr2h,f,c
 44389   007778  EE10 F004          	lfsr	1,4
 44390   00777C  516E               	movf	canFillRxFifo@m& (0+255),w,b
 44391   00777E  26E1               	addwf	fsr1l,f,c
 44392   007780  516F               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44393   007782  22E2               	addwfc	fsr1h,f,c
 44394   007784  CFDF FFE7          	movff	indf2,indf1
 44395                           
 44396                           ;../../VLCBlib_PIC/can18_ecan.c: 789:             m->bytes[3] = ptr[10];
 44397   007788  EE20 F00A          	lfsr	2,10
 44398   00778C  516C               	movf	canFillRxFifo@ptr& (0+255),w,b
 44399   00778E  26D9               	addwf	fsr2l,f,c
 44400   007790  516D               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44401   007792  22DA               	addwfc	fsr2h,f,c
 44402   007794  EE10 F005          	lfsr	1,5
 44403   007798  516E               	movf	canFillRxFifo@m& (0+255),w,b
 44404   00779A  26E1               	addwf	fsr1l,f,c
 44405   00779C  516F               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44406   00779E  22E2               	addwfc	fsr1h,f,c
 44407   0077A0  CFDF FFE7          	movff	indf2,indf1
 44408                           
 44409                           ;../../VLCBlib_PIC/can18_ecan.c: 790:             m->bytes[4] = ptr[11];
 44410   0077A4  EE20 F00B          	lfsr	2,11
 44411   0077A8  516C               	movf	canFillRxFifo@ptr& (0+255),w,b
 44412   0077AA  26D9               	addwf	fsr2l,f,c
 44413   0077AC  516D               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44414   0077AE  22DA               	addwfc	fsr2h,f,c
 44415   0077B0  EE10 F006          	lfsr	1,6
 44416   0077B4  516E               	movf	canFillRxFifo@m& (0+255),w,b
 44417   0077B6  26E1               	addwf	fsr1l,f,c
 44418   0077B8  516F               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44419   0077BA  22E2               	addwfc	fsr1h,f,c
 44420   0077BC  CFDF FFE7          	movff	indf2,indf1
 44421                           
 44422                           ;../../VLCBlib_PIC/can18_ecan.c: 791:             m->bytes[5] = ptr[12];
 44423   0077C0  EE20 F00C          	lfsr	2,12
 44424   0077C4  516C               	movf	canFillRxFifo@ptr& (0+255),w,b
 44425   0077C6  26D9               	addwf	fsr2l,f,c
 44426   0077C8  516D               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44427   0077CA  22DA               	addwfc	fsr2h,f,c
 44428   0077CC  EE10 F007          	lfsr	1,7
 44429   0077D0  516E               	movf	canFillRxFifo@m& (0+255),w,b
 44430   0077D2  26E1               	addwf	fsr1l,f,c
 44431   0077D4  516F               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44432   0077D6  22E2               	addwfc	fsr1h,f,c
 44433   0077D8  CFDF FFE7          	movff	indf2,indf1
 44434                           
 44435                           ;../../VLCBlib_PIC/can18_ecan.c: 792:             m->bytes[6] = ptr[13];
 44436   0077DC  EE20 F00D          	lfsr	2,13
 44437   0077E0  516C               	movf	canFillRxFifo@ptr& (0+255),w,b
 44438   0077E2  26D9               	addwf	fsr2l,f,c
 44439   0077E4  516D               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44440   0077E6  22DA               	addwfc	fsr2h,f,c
 44441   0077E8  EE10 F008          	lfsr	1,8
 44442   0077EC  516E               	movf	canFillRxFifo@m& (0+255),w,b
 44443   0077EE  26E1               	addwf	fsr1l,f,c
 44444   0077F0  516F               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44445   0077F2  22E2               	addwfc	fsr1h,f,c
 44446   0077F4  CFDF FFE7          	movff	indf2,indf1
 44447                           
 44448                           ; BSR set to: 0
 44449                           ;../../VLCBlib_PIC/can18_ecan.c: 793:             m->len = ptr[5]&0xF;
 44450   0077F8  EE20 F005          	lfsr	2,5
 44451   0077FC  516C               	movf	canFillRxFifo@ptr& (0+255),w,b
 44452   0077FE  26D9               	addwf	fsr2l,f,c
 44453   007800  516D               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44454   007802  22DA               	addwfc	fsr2h,f,c
 44455   007804  50DF               	movf	indf2,w,c
 44456   007806  0B0F               	andlw	15
 44457   007808  C06E  FFD9         	movff	canFillRxFifo@m,fsr2l
 44458   00780C  C06F  FFDA         	movff	canFillRxFifo@m+1,fsr2h
 44459   007810  6EDF               	movwf	indf2,c
 44460                           
 44461                           ; BSR set to: 0
 44462                           ;../../VLCBlib_PIC/can18_ecan.c: 796:         if (PIR5bits.IRXIF) {
 44463   007812  BE77               	btfsc	119,7,c	;volatile
 44464                           
 44465                           ; BSR set to: 0
 44466                           ;../../VLCBlib_PIC/can18_ecan.c: 797:             PIR5bits.IRXIF = 0;
 44467   007814  9E77               	bcf	119,7,c	;volatile
 44468                           
 44469                           ; BSR set to: 0
 44470                           ;../../VLCBlib_PIC/can18_ecan.c: 800:         ptr[0] &= 0x7f;
 44471   007816  C06C  FFD9         	movff	canFillRxFifo@ptr,fsr2l
 44472   00781A  C06D  FFDA         	movff	canFillRxFifo@ptr+1,fsr2h
 44473   00781E  0E7F               	movlw	127
 44474   007820  16DF               	andwf	indf2,f,c
 44475                           
 44476                           ; BSR set to: 0
 44477                           ;../../VLCBlib_PIC/can18_ecan.c: 801:         PIR5bits.FIFOWMIF = 0;
 44478   007822  9077               	bcf	119,0,c	;volatile
 44479   007824                     i1l21538:
 44480                           
 44481                           ;../../VLCBlib_PIC/can18_ecan.c: 766:     while (COMSTATbits.NOT_FIFOEMPTY) {
 44482   007824  AE71               	btfss	113,7,c	;volatile
 44483   007826  0012               	return	
 44484   007828  D755               	goto	i1l21504
 44485   00782A                     __end_of_canFillRxFifo:
 44486                           	callstack 0
 44487                           
 44488 ;; *************** function i1_updateModuleErrorStatus *****************
 44489 ;; Defined at:
 44490 ;;		line 583 in file "../../VLCBlib_PIC/mns.c"
 44491 ;; Parameters:    Size  Location     Type
 44492 ;;		None
 44493 ;; Auto vars:     Size  Location     Type
 44494 ;;		None
 44495 ;; Return value:  Size  Location     Type
 44496 ;;                  1    wreg      void 
 44497 ;; Registers used:
 44498 ;;		wreg, status,2, status,0
 44499 ;; Tracked objects:
 44500 ;;		On entry : 0/0
 44501 ;;		On exit  : 0/0
 44502 ;;		Unchanged: 0/0
 44503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44508 ;;Total ram usage:        0 bytes
 44509 ;; Hardware stack levels used: 1
 44510 ;; Hardware stack levels required when called: 6
 44511 ;; This function calls:
 44512 ;;		Nothing
 44513 ;; This function is called by:
 44514 ;;		_checkTxFifo
 44515 ;;		_checkCANTimeout
 44516 ;;		_canTxError
 44517 ;;		_canFillRxFifo
 44518 ;; This function uses a non-reentrant model
 44519 ;;
 44520                           
 44521                           	psect	text200
 44522   00C364                     __ptext200:
 44523                           	callstack 0
 44524   00C364                     i1_updateModuleErrorStatus:
 44525                           	callstack 3
 44526                           
 44527                           ;../../VLCBlib_PIC/mns.c: 584:     if (mnsDiagnostics[0x00].asBytes.lo < 0xFF) {
 44528                           
 44529                           ;incstack = 0
 44530   00C364  0101               	movlb	1	; () banked
 44531   00C366  299A               	incf	_mnsDiagnostics& (0+255),w,b
 44532   00C368  B4D8               	btfsc	status,2,c
 44533   00C36A  0012               	return	
 44534                           
 44535                           ; BSR set to: 1
 44536                           ;../../VLCBlib_PIC/mns.c: 585:         mnsDiagnostics[0x00].asBytes.lo++;
 44537   00C36C  2B9A               	incf	_mnsDiagnostics& (0+255),f,b
 44538                           
 44539                           ; BSR set to: 1
 44540   00C36E  0012               	return		;funcret
 44541   00C370                     __end_ofi1_updateModuleErrorStatus:
 44542                           	callstack 0
 44543                           
 44544 ;; *************** function i1_getNextWriteMessage *****************
 44545 ;; Defined at:
 44546 ;;		line 79 in file "../../VLCBlib_PIC/messageQueue.c"
 44547 ;; Parameters:    Size  Location     Type
 44548 ;;  q               1    0[BANK0 ] PTR struct MessageQueue
 44549 ;;		 -> rxQueue(5), 
 44550 ;; Auto vars:     Size  Location     Type
 44551 ;;  wr              1   11[BANK0 ] unsigned char 
 44552 ;; Return value:  Size  Location     Type
 44553 ;;                  2    0[BANK0 ] PTR struct Message
 44554 ;; Registers used:
 44555 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 44556 ;; Tracked objects:
 44557 ;;		On entry : 0/0
 44558 ;;		On exit  : 0/0
 44559 ;;		Unchanged: 0/0
 44560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44561 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44562 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44563 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44564 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44565 ;;Total ram usage:       12 bytes
 44566 ;; Hardware stack levels used: 1
 44567 ;; Hardware stack levels required when called: 6
 44568 ;; This function calls:
 44569 ;;		Nothing
 44570 ;; This function is called by:
 44571 ;;		_checkTxFifo
 44572 ;;		_canFillRxFifo
 44573 ;; This function uses a non-reentrant model
 44574 ;;
 44575                           
 44576                           	psect	text201
 44577   008A8C                     __ptext201:
 44578                           	callstack 0
 44579   008A8C                     i1_getNextWriteMessage:
 44580                           	callstack 3
 44581                           
 44582                           ;../../VLCBlib_PIC/messageQueue.c: 80:     uint8_t wr;;../../VLCBlib_PIC/messageQueue.c:
      +                           81:     if (((q->writeIndex+1)&((q->size)-1)) == q->readIndex) return ((void*)0);
 44583                           
 44584                           ; BSR set to: 1
 44585                           ;incstack = 0
 44586   008A8C  0100               	movlb	0	; () banked
 44587   008A8E  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44588   008A90  6ED9               	movwf	fsr2l,c
 44589   008A92  6ADA               	clrf	fsr2h,c
 44590   008A94  0E02               	movlw	2
 44591   008A96  26D9               	addwf	fsr2l,f,c
 44592   008A98  50DF               	movf	indf2,w,c
 44593   008A9A  6F62               	movwf	??i1_getNextWriteMessage& (0+255),b
 44594   008A9C  6B63               	clrf	(??i1_getNextWriteMessage+1)& (0+255),b
 44595   008A9E  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44596   008AA0  6ED9               	movwf	fsr2l,c
 44597   008AA2  6ADA               	clrf	fsr2h,c
 44598   008AA4  0E04               	movlw	4
 44599   008AA6  26D9               	addwf	fsr2l,f,c
 44600   008AA8  50DF               	movf	indf2,w,c
 44601   008AAA  6F64               	movwf	(??i1_getNextWriteMessage+2)& (0+255),b
 44602   008AAC  0EFF               	movlw	255
 44603   008AAE  2564               	addwf	(??i1_getNextWriteMessage+2)& (0+255),w,b
 44604   008AB0  6F65               	movwf	(??i1_getNextWriteMessage+3)& (0+255),b
 44605   008AB2  6B66               	clrf	(??i1_getNextWriteMessage+4)& (0+255),b
 44606   008AB4  0EFF               	movlw	255
 44607   008AB6  2366               	addwfc	(??i1_getNextWriteMessage+4)& (0+255),f,b
 44608   008AB8  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44609   008ABA  6ED9               	movwf	fsr2l,c
 44610   008ABC  6ADA               	clrf	fsr2h,c
 44611   008ABE  0E03               	movlw	3
 44612   008AC0  26D9               	addwf	fsr2l,f,c
 44613   008AC2  50DF               	movf	indf2,w,c
 44614   008AC4  6F67               	movwf	(??i1_getNextWriteMessage+5)& (0+255),b
 44615   008AC6  6B68               	clrf	(??i1_getNextWriteMessage+6)& (0+255),b
 44616   008AC8  0E01               	movlw	1
 44617   008ACA  2767               	addwf	(??i1_getNextWriteMessage+5)& (0+255),f,b
 44618   008ACC  0E00               	movlw	0
 44619   008ACE  2368               	addwfc	(??i1_getNextWriteMessage+6)& (0+255),f,b
 44620   008AD0  5165               	movf	(??i1_getNextWriteMessage+3)& (0+255),w,b
 44621   008AD2  1567               	andwf	(??i1_getNextWriteMessage+5)& (0+255),w,b
 44622   008AD4  6F69               	movwf	(??i1_getNextWriteMessage+7)& (0+255),b
 44623   008AD6  5166               	movf	(??i1_getNextWriteMessage+4)& (0+255),w,b
 44624   008AD8  1568               	andwf	(??i1_getNextWriteMessage+6)& (0+255),w,b
 44625   008ADA  6F6A               	movwf	(??i1_getNextWriteMessage+8)& (0+255),b
 44626   008ADC  5162               	movf	??i1_getNextWriteMessage& (0+255),w,b
 44627   008ADE  1969               	xorwf	(??i1_getNextWriteMessage+7)& (0+255),w,b
 44628   008AE0  E109               	bnz	i1l19480
 44629   008AE2  5163               	movf	(??i1_getNextWriteMessage+1)& (0+255),w,b
 44630   008AE4  196A               	xorwf	(??i1_getNextWriteMessage+8)& (0+255),w,b
 44631   008AE6  A4D8               	btfss	status,2,c
 44632   008AE8  D005               	goto	i1l19480
 44633                           
 44634                           ; BSR set to: 0
 44635   008AEA  0E00               	movlw	0
 44636   008AEC  6F60               	movwf	?i1_getNextWriteMessage& (0+255),b
 44637   008AEE  0E00               	movlw	0
 44638   008AF0  6F61               	movwf	(?i1_getNextWriteMessage+1)& (0+255),b
 44639   008AF2  0012               	return	
 44640   008AF4                     i1l19480:
 44641                           
 44642                           ; BSR set to: 0
 44643                           ;../../VLCBlib_PIC/messageQueue.c: 82:     wr = q->writeIndex;
 44644   008AF4  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44645   008AF6  6ED9               	movwf	fsr2l,c
 44646   008AF8  6ADA               	clrf	fsr2h,c
 44647   008AFA  0E03               	movlw	3
 44648   008AFC  26D9               	addwf	fsr2l,f,c
 44649   008AFE  50DF               	movf	indf2,w,c
 44650   008B00  6F6B               	movwf	i1getNextWriteMessage@wr& (0+255),b
 44651                           
 44652                           ;../../VLCBlib_PIC/messageQueue.c: 83:     q->writeIndex++;
 44653   008B02  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44654   008B04  6ED9               	movwf	fsr2l,c
 44655   008B06  6ADA               	clrf	fsr2h,c
 44656   008B08  0E03               	movlw	3
 44657   008B0A  26D9               	addwf	fsr2l,f,c
 44658   008B0C  2ADF               	incf	indf2,f,c
 44659                           
 44660                           ; BSR set to: 0
 44661                           ;../../VLCBlib_PIC/messageQueue.c: 84:     if (q->writeIndex >= q->size) q->writeIndex =
      +                           0;
 44662   008B0E  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44663   008B10  6ED9               	movwf	fsr2l,c
 44664   008B12  6ADA               	clrf	fsr2h,c
 44665   008B14  0E04               	movlw	4
 44666   008B16  26D9               	addwf	fsr2l,f,c
 44667   008B18  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44668   008B1A  6EE1               	movwf	fsr1l,c
 44669   008B1C  6AE2               	clrf	fsr1h,c
 44670   008B1E  0E03               	movlw	3
 44671   008B20  26E1               	addwf	fsr1l,f,c
 44672   008B22  50DE               	movf	postinc2,w,c
 44673   008B24  5CE6               	subwf	postinc1,w,c
 44674   008B26  A0D8               	btfss	status,0,c
 44675   008B28  D006               	goto	i1l19486
 44676                           
 44677                           ; BSR set to: 0
 44678   008B2A  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44679   008B2C  6ED9               	movwf	fsr2l,c
 44680   008B2E  6ADA               	clrf	fsr2h,c
 44681   008B30  0E03               	movlw	3
 44682   008B32  26D9               	addwf	fsr2l,f,c
 44683   008B34  6ADF               	clrf	indf2,c
 44684   008B36                     i1l19486:
 44685                           
 44686                           ; BSR set to: 0
 44687                           ;../../VLCBlib_PIC/messageQueue.c: 85:     return &(q->messages[wr]);
 44688   008B36  516B               	movf	i1getNextWriteMessage@wr& (0+255),w,b
 44689   008B38  0D09               	mullw	9
 44690   008B3A  CFF3 F062          	movff	prodl,??i1_getNextWriteMessage
 44691   008B3E  CFF4 F063          	movff	prodh,??i1_getNextWriteMessage+1
 44692   008B42  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44693   008B44  6ED9               	movwf	fsr2l,c
 44694   008B46  6ADA               	clrf	fsr2h,c
 44695   008B48  CFDE F064          	movff	postinc2,??i1_getNextWriteMessage+2
 44696   008B4C  CFDD F065          	movff	postdec2,??i1_getNextWriteMessage+3
 44697   008B50  5162               	movf	??i1_getNextWriteMessage& (0+255),w,b
 44698   008B52  2564               	addwf	(??i1_getNextWriteMessage+2)& (0+255),w,b
 44699   008B54  6F60               	movwf	?i1_getNextWriteMessage& (0+255),b
 44700   008B56  5163               	movf	(??i1_getNextWriteMessage+1)& (0+255),w,b
 44701   008B58  2165               	addwfc	(??i1_getNextWriteMessage+3)& (0+255),w,b
 44702   008B5A  6F61               	movwf	(?i1_getNextWriteMessage+1)& (0+255),b
 44703                           
 44704                           ; BSR set to: 0
 44705   008B5C  0012               	return		;funcret
 44706   008B5E                     __end_ofi1_getNextWriteMessage:
 44707                           	callstack 0
 44708                           
 44709 ;; *************** function i1_getBufferPointer *****************
 44710 ;; Defined at:
 44711 ;;		line 588 in file "../../VLCBlib_PIC/can18_ecan.c"
 44712 ;; Parameters:    Size  Location     Type
 44713 ;;  b               1    wreg     unsigned char 
 44714 ;; Auto vars:     Size  Location     Type
 44715 ;;  b               1    2[BANK0 ] unsigned char 
 44716 ;; Return value:  Size  Location     Type
 44717 ;;                  2    0[BANK0 ] PTR unsigned char 
 44718 ;; Registers used:
 44719 ;;		wreg, status,2, status,0
 44720 ;; Tracked objects:
 44721 ;;		On entry : 0/0
 44722 ;;		On exit  : 0/0
 44723 ;;		Unchanged: 0/0
 44724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44725 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44726 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44728 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44729 ;;Total ram usage:        3 bytes
 44730 ;; Hardware stack levels used: 1
 44731 ;; Hardware stack levels required when called: 6
 44732 ;; This function calls:
 44733 ;;		Nothing
 44734 ;; This function is called by:
 44735 ;;		_canFillRxFifo
 44736 ;; This function uses a non-reentrant model
 44737 ;;
 44738                           
 44739                           	psect	text202
 44740   00A098                     __ptext202:
 44741                           	callstack 0
 44742   00A098                     i1_getBufferPointer:
 44743                           	callstack 3
 44744                           
 44745                           ; BSR set to: 0
 44746                           ;incstack = 0
 44747                           ;i1getBufferPointer@b stored from wreg
 44748   00A098  0100               	movlb	0	; () banked
 44749   00A09A  6F62               	movwf	i1getBufferPointer@b& (0+255),b
 44750                           
 44751                           ;../../VLCBlib_PIC/can18_ecan.c: 589:     switch (b) {
 44752   00A09C  D02D               	goto	i1l20404
 44753   00A09E                     i1l20366:
 44754                           
 44755                           ; BSR set to: 0
 44756                           ;../../VLCBlib_PIC/can18_ecan.c: 591:             return (uint8_t*) & RXB0CON;
 44757   00A09E  0E60               	movlw	96
 44758   00A0A0  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 44759   00A0A2  0E0F               	movlw	15
 44760   00A0A4  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 44761   00A0A6  0012               	return	
 44762   00A0A8                     i1l20370:
 44763                           
 44764                           ; BSR set to: 0
 44765                           ;../../VLCBlib_PIC/can18_ecan.c: 593:             return (uint8_t*) & RXB1CON;
 44766   00A0A8  0E30               	movlw	48
 44767   00A0AA  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 44768   00A0AC  0E0F               	movlw	15
 44769   00A0AE  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 44770   00A0B0  0012               	return	
 44771   00A0B2                     i1l20374:
 44772                           
 44773                           ; BSR set to: 0
 44774                           ;../../VLCBlib_PIC/can18_ecan.c: 595:             return (uint8_t*) & B0CON;
 44775   00A0B2  0E80               	movlw	128
 44776   00A0B4  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 44777   00A0B6  0E0E               	movlw	14
 44778   00A0B8  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 44779   00A0BA  0012               	return	
 44780   00A0BC                     i1l20378:
 44781                           
 44782                           ; BSR set to: 0
 44783                           ;../../VLCBlib_PIC/can18_ecan.c: 597:             return (uint8_t*) & B1CON;
 44784   00A0BC  0E90               	movlw	144
 44785   00A0BE  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 44786   00A0C0  0E0E               	movlw	14
 44787   00A0C2  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 44788   00A0C4  0012               	return	
 44789   00A0C6                     i1l20382:
 44790                           
 44791                           ; BSR set to: 0
 44792                           ;../../VLCBlib_PIC/can18_ecan.c: 599:             return (uint8_t*) & B2CON;
 44793   00A0C6  0EA0               	movlw	160
 44794   00A0C8  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 44795   00A0CA  0E0E               	movlw	14
 44796   00A0CC  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 44797   00A0CE  0012               	return	
 44798   00A0D0                     i1l20386:
 44799                           
 44800                           ; BSR set to: 0
 44801                           ;../../VLCBlib_PIC/can18_ecan.c: 601:             return (uint8_t*) & B3CON;
 44802   00A0D0  0EB0               	movlw	176
 44803   00A0D2  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 44804   00A0D4  0E0E               	movlw	14
 44805   00A0D6  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 44806   00A0D8  0012               	return	
 44807   00A0DA                     i1l20390:
 44808                           
 44809                           ; BSR set to: 0
 44810                           ;../../VLCBlib_PIC/can18_ecan.c: 603:             return (uint8_t*) & B4CON;
 44811   00A0DA  0EC0               	movlw	192
 44812   00A0DC  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 44813   00A0DE  0E0E               	movlw	14
 44814   00A0E0  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 44815   00A0E2  0012               	return	
 44816   00A0E4                     i1l20394:
 44817                           
 44818                           ; BSR set to: 0
 44819                           ;../../VLCBlib_PIC/can18_ecan.c: 605:             return (uint8_t*) & B5CON;
 44820   00A0E4  0ED0               	movlw	208
 44821   00A0E6  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 44822   00A0E8  0E0E               	movlw	14
 44823   00A0EA  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 44824   00A0EC  0012               	return	
 44825   00A0EE                     i1l20398:
 44826                           
 44827                           ; BSR set to: 0
 44828                           ;../../VLCBlib_PIC/can18_ecan.c: 607:             return ((void*)0);
 44829   00A0EE  0E00               	movlw	0
 44830   00A0F0  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 44831   00A0F2  0E00               	movlw	0
 44832   00A0F4  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 44833   00A0F6  0012               	return	
 44834   00A0F8                     i1l20404:
 44835   00A0F8  0100               	movlb	0	; () banked
 44836   00A0FA  5162               	movf	i1getBufferPointer@b& (0+255),w,b
 44837                           
 44838                           ; Switch size 1, requested type "simple"
 44839                           ; Number of cases is 8, Range of values is 0 to 7
 44840                           ; switch strategies available:
 44841                           ; Name         Instructions Cycles
 44842                           ; simple_byte           25    13 (average)
 44843                           ;	Chosen strategy is simple_byte
 44844   00A0FC  0A00               	xorlw	0	; case 0
 44845   00A0FE  B4D8               	btfsc	status,2,c
 44846   00A100  D7CE               	goto	i1l20366
 44847   00A102  0A01               	xorlw	1	; case 1
 44848   00A104  B4D8               	btfsc	status,2,c
 44849   00A106  D7D0               	goto	i1l20370
 44850   00A108  0A03               	xorlw	3	; case 2
 44851   00A10A  B4D8               	btfsc	status,2,c
 44852   00A10C  D7D2               	goto	i1l20374
 44853   00A10E  0A01               	xorlw	1	; case 3
 44854   00A110  B4D8               	btfsc	status,2,c
 44855   00A112  D7D4               	goto	i1l20378
 44856   00A114  0A07               	xorlw	7	; case 4
 44857   00A116  B4D8               	btfsc	status,2,c
 44858   00A118  D7D6               	goto	i1l20382
 44859   00A11A  0A01               	xorlw	1	; case 5
 44860   00A11C  B4D8               	btfsc	status,2,c
 44861   00A11E  D7D8               	goto	i1l20386
 44862   00A120  0A03               	xorlw	3	; case 6
 44863   00A122  B4D8               	btfsc	status,2,c
 44864   00A124  D7DA               	goto	i1l20390
 44865   00A126  0A01               	xorlw	1	; case 7
 44866   00A128  B4D8               	btfsc	status,2,c
 44867   00A12A  D7DC               	goto	i1l20394
 44868   00A12C  D7E0               	goto	i1l20398
 44869   00A12E                     __end_ofi1_getBufferPointer:
 44870                           	callstack 0
 44871                           
 44872 ;; *************** function _APP_lowIsr *****************
 44873 ;; Defined at:
 44874 ;;		line 588 in file "../main.c"
 44875 ;; Parameters:    Size  Location     Type
 44876 ;;		None
 44877 ;; Auto vars:     Size  Location     Type
 44878 ;;		None
 44879 ;; Return value:  Size  Location     Type
 44880 ;;                  1    wreg      void 
 44881 ;; Registers used:
 44882 ;;		None
 44883 ;; Tracked objects:
 44884 ;;		On entry : 0/0
 44885 ;;		On exit  : 0/0
 44886 ;;		Unchanged: 0/0
 44887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44892 ;;Total ram usage:        0 bytes
 44893 ;; Hardware stack levels used: 1
 44894 ;; Hardware stack levels required when called: 6
 44895 ;; This function calls:
 44896 ;;		Nothing
 44897 ;; This function is called by:
 44898 ;;		_lowIsr
 44899 ;; This function uses a non-reentrant model
 44900 ;;
 44901                           
 44902                           	psect	text203
 44903   00C3CC                     __ptext203:
 44904                           	callstack 0
 44905   00C3CC                     _APP_lowIsr:
 44906                           	callstack 5
 44907                           
 44908                           ; BSR set to: 0
 44909                           ;incstack = 0
 44910   00C3CC  0012               	return		;funcret
 44911   00C3CE                     __end_of_APP_lowIsr:
 44912                           	callstack 0
 44913                           
 44914                           	psect	intcode
 44915   000808                     __pintcode:
 44916                           	callstack 2
 44917   000808  EF0A  F042         	goto	_isrHigh
 44918                           
 44919 ;; *************** function _highIsr *****************
 44920 ;; Defined at:
 44921 ;;		line 1055 in file "../../VLCBlib_PIC/vlcb.c"
 44922 ;; Parameters:    Size  Location     Type
 44923 ;;		None
 44924 ;; Auto vars:     Size  Location     Type
 44925 ;;  i               1   29[COMRAM] unsigned char 
 44926 ;; Return value:  Size  Location     Type
 44927 ;;                  1    wreg      void 
 44928 ;; Registers used:
 44929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 44930 ;; Tracked objects:
 44931 ;;		On entry : 0/0
 44932 ;;		On exit  : 0/0
 44933 ;;		Unchanged: 0/0
 44934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44936 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44937 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44938 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44939 ;;Total ram usage:        5 bytes
 44940 ;; Hardware stack levels used: 1
 44941 ;; Hardware stack levels required when called: 4
 44942 ;; This function calls:
 44943 ;;		NULL
 44944 ;;		_APP_highIsr
 44945 ;;		i2_canIsr
 44946 ;; This function is called by:
 44947 ;;		_isrHigh
 44948 ;; This function uses a non-reentrant model
 44949 ;;
 44950                           
 44951                           	psect	text205
 44952   008E9A                     __ptext205:
 44953                           	callstack 0
 44954   008E9A                     _highIsr:
 44955                           	callstack 2
 44956                           
 44957                           ;../../VLCBlib_PIC/vlcb.c: 1056:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1058:     for 
      +                          (i=0; i<9; i++) {
 44958                           
 44959                           ;incstack = 0
 44960   008E9A  0E00               	movlw	0
 44961   008E9C  6E48               	movwf	highIsr@i^0,c
 44962   008E9E                     i2l23882:
 44963                           
 44964                           ;../../VLCBlib_PIC/vlcb.c: 1059:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->highIsr != ((void*)0))) {
 44965   008E9E  5048               	movf	highIsr@i^0,w,c
 44966   008EA0  0D02               	mullw	2
 44967   008EA2  0E75               	movlw	low _services
 44968   008EA4  24F3               	addwf	243,w,c
 44969   008EA6  6EF6               	movwf	tblptrl,c
 44970   008EA8  0EEE               	movlw	high _services
 44971   008EAA  20F4               	addwfc	244,w,c
 44972   008EAC  6EF7               	movwf	tblptrh,c
 44973   008EAE                     	if	1	;There are 3 active tblptr bytes
 44974   008EAE  6AF8               	clrf	tblptru,c
 44975   008EB0  0E00               	movlw	low (__mediumconst shr (0+16))
 44976   008EB2  22F8               	addwfc	tblptru,f,c
 44977   008EB4                     	endif
 44978   008EB4  0009               	tblrd		*+
 44979   008EB6  50F5               	movf	tablat,w,c
 44980   008EB8  0009               	tblrd		*+
 44981   008EBA  10F5               	iorwf	tablat,w,c
 44982   008EBC  B4D8               	btfsc	status,2,c
 44983   008EBE  D04B               	goto	i2u2594_49
 44984   008EC0  5048               	movf	highIsr@i^0,w,c
 44985   008EC2  0D02               	mullw	2
 44986   008EC4  0E75               	movlw	low _services
 44987   008EC6  24F3               	addwf	243,w,c
 44988   008EC8  6EF6               	movwf	tblptrl,c
 44989   008ECA  0EEE               	movlw	high _services
 44990   008ECC  20F4               	addwfc	244,w,c
 44991   008ECE  6EF7               	movwf	tblptrh,c
 44992   008ED0                     	if	1	;There are 3 active tblptr bytes
 44993   008ED0  6AF8               	clrf	tblptru,c
 44994   008ED2  0E00               	movlw	low (__mediumconst shr (0+16))
 44995   008ED4  22F8               	addwfc	tblptru,f,c
 44996   008ED6                     	endif
 44997   008ED6  0009               	tblrd		*+
 44998   008ED8  CFF5 F044          	movff	tablat,??_highIsr
 44999   008EDC  0009               	tblrd		*+
 45000   008EDE  CFF5 F045          	movff	tablat,??_highIsr+1
 45001   008EE2  0E0A               	movlw	10
 45002   008EE4  2644               	addwf	??_highIsr^0,f,c
 45003   008EE6  0E00               	movlw	0
 45004   008EE8  2245               	addwfc	(??_highIsr+1)^0,f,c
 45005   008EEA  C044  FFF6         	movff	??_highIsr,tblptrl
 45006   008EEE  C045  FFF7         	movff	??_highIsr+1,tblptrh
 45007   008EF2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 45008   008EF2  6AF8               	clrf	tblptru,c
 45009   008EF4                     	endif
 45010   008EF4                     	if	0	;tblptru may be non-zero
 45011   008EF4                     	endif
 45012   008EF4  0009               	tblrd		*+
 45013   008EF6  50F5               	movf	tablat,w,c
 45014   008EF8  0009               	tblrd		*+
 45015   008EFA  10F5               	iorwf	tablat,w,c
 45016   008EFC  B4D8               	btfsc	status,2,c
 45017   008EFE  D02B               	goto	i2u2594_49
 45018                           
 45019                           ;../../VLCBlib_PIC/vlcb.c: 1060:             services[i]->highIsr();
 45020   008F00  5048               	movf	highIsr@i^0,w,c
 45021   008F02  0D02               	mullw	2
 45022   008F04  0E75               	movlw	low _services
 45023   008F06  24F3               	addwf	243,w,c
 45024   008F08  6EF6               	movwf	tblptrl,c
 45025   008F0A  0EEE               	movlw	high _services
 45026   008F0C  20F4               	addwfc	244,w,c
 45027   008F0E  6EF7               	movwf	tblptrh,c
 45028   008F10                     	if	1	;There are 3 active tblptr bytes
 45029   008F10  6AF8               	clrf	tblptru,c
 45030   008F12  0E00               	movlw	low (__mediumconst shr (0+16))
 45031   008F14  22F8               	addwfc	tblptru,f,c
 45032   008F16                     	endif
 45033   008F16  0009               	tblrd		*+
 45034   008F18  CFF5 F044          	movff	tablat,??_highIsr
 45035   008F1C  0009               	tblrd		*+
 45036   008F1E  CFF5 F045          	movff	tablat,??_highIsr+1
 45037   008F22  0E0A               	movlw	10
 45038   008F24  2644               	addwf	??_highIsr^0,f,c
 45039   008F26  0E00               	movlw	0
 45040   008F28  2245               	addwfc	(??_highIsr+1)^0,f,c
 45041   008F2A  C044  FFF6         	movff	??_highIsr,tblptrl
 45042   008F2E  C045  FFF7         	movff	??_highIsr+1,tblptrh
 45043   008F32                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 45044   008F32  6AF8               	clrf	tblptru,c
 45045   008F34                     	endif
 45046   008F34                     	if	0	;tblptru may be non-zero
 45047   008F34                     	endif
 45048   008F34  0009               	tblrd		*+
 45049   008F36  CFF5 F046          	movff	tablat,??_highIsr+2
 45050   008F3A  0009               	tblrd		*+
 45051   008F3C  CFF5 F047          	movff	tablat,??_highIsr+3
 45052   008F40  D801               	call	i2u2594_48
 45053   008F42  D009               	goto	i2u2594_49
 45054   008F44                     i2u2594_48:
 45055   008F44  0005               	push	
 45056   008F46  6EFA               	movwf	pclath,c
 45057   008F48  5046               	movf	(??_highIsr+2)^0,w,c
 45058   008F4A  6EFD               	movwf	tosl,c
 45059   008F4C  5047               	movf	(??_highIsr+3)^0,w,c
 45060   008F4E  6EFE               	movwf	tosh,c
 45061   008F50  6AFF               	clrf	tosu,c
 45062   008F52  50FA               	movf	pclath,w,c
 45063   008F54  0012               	return		;indir
 45064   008F56                     i2u2594_49:
 45065                           
 45066                           ;../../VLCBlib_PIC/vlcb.c: 1062:     }
 45067   008F56  2A48               	incf	highIsr@i^0,f,c
 45068   008F58  0E08               	movlw	8
 45069   008F5A  6448               	cpfsgt	highIsr@i^0,c
 45070   008F5C  D7A0               	goto	i2l23882
 45071                           
 45072                           ;../../VLCBlib_PIC/vlcb.c: 1063:     APP_highIsr();
 45073   008F5E  EC6A  F061         	call	_APP_highIsr	;wreg free
 45074   008F62  0012               	return		;funcret
 45075   008F64                     __end_of_highIsr:
 45076                           	callstack 0
 45077                           
 45078 ;; *************** function i2_canIsr *****************
 45079 ;; Defined at:
 45080 ;;		line 397 in file "../../VLCBlib_PIC/can18_ecan.c"
 45081 ;; Parameters:    Size  Location     Type
 45082 ;;		None
 45083 ;; Auto vars:     Size  Location     Type
 45084 ;;		None
 45085 ;; Return value:  Size  Location     Type
 45086 ;;                  1    wreg      void 
 45087 ;; Registers used:
 45088 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45089 ;; Tracked objects:
 45090 ;;		On entry : 0/0
 45091 ;;		On exit  : 0/0
 45092 ;;		Unchanged: 0/0
 45093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45098 ;;Total ram usage:        0 bytes
 45099 ;; Hardware stack levels used: 1
 45100 ;; Hardware stack levels required when called: 3
 45101 ;; This function calls:
 45102 ;;		i2_canFillRxFifo
 45103 ;;		i2_canTxError
 45104 ;;		i2_checkCANTimeout
 45105 ;;		i2_checkTxFifo
 45106 ;; This function is called by:
 45107 ;;		_highIsr
 45108 ;;		_lowIsr
 45109 ;; This function uses a non-reentrant model
 45110 ;;
 45111                           
 45112                           	psect	text206
 45113   00C2BC                     __ptext206:
 45114                           	callstack 0
 45115   00C2BC                     i2_canIsr:
 45116                           	callstack 2
 45117                           
 45118                           ;../../VLCBlib_PIC/can18_ecan.c: 399:     if (PIR5bits.FIFOWMIF) {
 45119                           
 45120                           ;incstack = 0
 45121   00C2BC  B077               	btfsc	119,0,c	;volatile
 45122                           
 45123                           ;../../VLCBlib_PIC/can18_ecan.c: 400:         canFillRxFifo();
 45124   00C2BE  ECC0  F03C         	call	i2_canFillRxFifo	;wreg free
 45125                           
 45126                           ;../../VLCBlib_PIC/can18_ecan.c: 402:     if (PIR5bits.ERRIF) {
 45127   00C2C2  BA77               	btfsc	119,5,c	;volatile
 45128                           
 45129                           ;../../VLCBlib_PIC/can18_ecan.c: 403:         canTxError();
 45130   00C2C4  EC7C  F058         	call	i2_canTxError	;wreg free
 45131                           
 45132                           ;../../VLCBlib_PIC/can18_ecan.c: 405:     if (PIR5bits.TXBnIF) {
 45133   00C2C8  B877               	btfsc	119,4,c	;volatile
 45134                           
 45135                           ;../../VLCBlib_PIC/can18_ecan.c: 406:         checkTxFifo();
 45136   00C2CA  EC02  F02F         	call	i2_checkTxFifo	;wreg free
 45137                           
 45138                           ;../../VLCBlib_PIC/can18_ecan.c: 408:     checkCANTimeout();
 45139                           
 45140                           ;../../VLCBlib_PIC/can18_ecan.c: 407:     }
 45141   00C2CE  ECC5  F05A         	call	i2_checkCANTimeout	;wreg free
 45142   00C2D2  0012               	return		;funcret
 45143   00C2D4                     __end_ofi2_canIsr:
 45144                           	callstack 0
 45145                           
 45146 ;; *************** function i2_checkCANTimeout *****************
 45147 ;; Defined at:
 45148 ;;		line 685 in file "../../VLCBlib_PIC/can18_ecan.c"
 45149 ;; Parameters:    Size  Location     Type
 45150 ;;		None
 45151 ;; Auto vars:     Size  Location     Type
 45152 ;;		None
 45153 ;; Return value:  Size  Location     Type
 45154 ;;                  1    wreg      void 
 45155 ;; Registers used:
 45156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45157 ;; Tracked objects:
 45158 ;;		On entry : 0/0
 45159 ;;		On exit  : 0/0
 45160 ;;		Unchanged: 0/0
 45161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45164 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45165 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45166 ;;Total ram usage:        4 bytes
 45167 ;; Hardware stack levels used: 1
 45168 ;; Hardware stack levels required when called: 2
 45169 ;; This function calls:
 45170 ;;		i2_checkTxFifo
 45171 ;;		i2_tickGet
 45172 ;;		i2_updateModuleErrorStatus
 45173 ;; This function is called by:
 45174 ;;		i2_canIsr
 45175 ;; This function uses a non-reentrant model
 45176 ;;
 45177                           
 45178                           	psect	text207
 45179   00B58A                     __ptext207:
 45180                           	callstack 0
 45181   00B58A                     i2_checkCANTimeout:
 45182                           	callstack 2
 45183                           
 45184                           ;../../VLCBlib_PIC/can18_ecan.c: 686:     if (canTransmitTimeout.val != 0) {
 45185                           
 45186                           ;incstack = 0
 45187   00B58A  5015               	movf	_canTransmitTimeout^0,w,c
 45188   00B58C  1016               	iorwf	(_canTransmitTimeout+1)^0,w,c
 45189   00B58E  1017               	iorwf	(_canTransmitTimeout+2)^0,w,c
 45190   00B590  1018               	iorwf	(_canTransmitTimeout+3)^0,w,c
 45191   00B592  B4D8               	btfsc	status,2,c
 45192   00B594  0012               	return	
 45193                           
 45194                           ;../../VLCBlib_PIC/can18_ecan.c: 687:         if ((tickGet() - canTransmitTimeout.val) >
      +                           62500) {
 45195   00B596  EC69  F059         	call	i2_tickGet	;wreg free
 45196   00B59A  5015               	movf	_canTransmitTimeout^0,w,c
 45197   00B59C  5C2B               	subwf	?i2_tickGet^0,w,c
 45198   00B59E  6E40               	movwf	??i2_checkCANTimeout^0,c
 45199   00B5A0  5016               	movf	(_canTransmitTimeout+1)^0,w,c
 45200   00B5A2  582C               	subwfb	(?i2_tickGet+1)^0,w,c
 45201   00B5A4  6E41               	movwf	(??i2_checkCANTimeout+1)^0,c
 45202   00B5A6  5017               	movf	(_canTransmitTimeout+2)^0,w,c
 45203   00B5A8  582D               	subwfb	(?i2_tickGet+2)^0,w,c
 45204   00B5AA  6E42               	movwf	(??i2_checkCANTimeout+2)^0,c
 45205   00B5AC  5018               	movf	(_canTransmitTimeout+3)^0,w,c
 45206   00B5AE  582E               	subwfb	(?i2_tickGet+3)^0,w,c
 45207   00B5B0  6E43               	movwf	(??i2_checkCANTimeout+3)^0,c
 45208   00B5B2  5043               	movf	(??i2_checkCANTimeout+3)^0,w,c
 45209   00B5B4  1042               	iorwf	(??i2_checkCANTimeout+2)^0,w,c
 45210   00B5B6  E106               	bnz	i2u1455_40
 45211   00B5B8  0E25               	movlw	37
 45212   00B5BA  5C40               	subwf	??i2_checkCANTimeout^0,w,c
 45213   00B5BC  0EF4               	movlw	244
 45214   00B5BE  5841               	subwfb	(??i2_checkCANTimeout+1)^0,w,c
 45215   00B5C0  A0D8               	btfss	status,0,c
 45216   00B5C2  0012               	return	
 45217   00B5C4                     i2u1455_40:
 45218                           
 45219                           ;../../VLCBlib_PIC/can18_ecan.c: 688:             canTransmitFailed = 1;
 45220   00B5C4  0E01               	movlw	1
 45221   00B5C6  0100               	movlb	0	; () banked
 45222   00B5C8  6FB6               	movwf	_canTransmitFailed& (0+255),b
 45223                           
 45224                           ; BSR set to: 0
 45225                           ;../../VLCBlib_PIC/can18_ecan.c: 689:             TXB0CONbits.TXREQ = 0;
 45226   00B5CA  010F               	movlb	15	; () banked
 45227   00B5CC  9720               	bcf	32,3,b	;volatile
 45228                           
 45229                           ; BSR set to: 15
 45230                           ;../../VLCBlib_PIC/can18_ecan.c: 690:             checkTxFifo();
 45231   00B5CE  EC02  F02F         	call	i2_checkTxFifo	;wreg free
 45232                           
 45233                           ;../../VLCBlib_PIC/can18_ecan.c: 691:             canDiagnostics[0x01].asUint++;
 45234   00B5D2  0101               	movlb	1	; () banked
 45235   00B5D4  4B7C               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 45236   00B5D6  2B7D               	incf	(_canDiagnostics+3)& (0+255),f,b
 45237                           
 45238                           ; BSR set to: 1
 45239                           ;../../VLCBlib_PIC/can18_ecan.c: 692:             updateModuleErrorStatus();
 45240   00B5D8  ECB8  F061         	call	i2_updateModuleErrorStatus	;wreg free
 45241   00B5DC  0012               	return		;funcret
 45242   00B5DE                     __end_ofi2_checkCANTimeout:
 45243                           	callstack 0
 45244                           
 45245 ;; *************** function i2_canTxError *****************
 45246 ;; Defined at:
 45247 ;;		line 702 in file "../../VLCBlib_PIC/can18_ecan.c"
 45248 ;; Parameters:    Size  Location     Type
 45249 ;;		None
 45250 ;; Auto vars:     Size  Location     Type
 45251 ;;		None
 45252 ;; Return value:  Size  Location     Type
 45253 ;;                  1    wreg      void 
 45254 ;; Registers used:
 45255 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45256 ;; Tracked objects:
 45257 ;;		On entry : 0/0
 45258 ;;		On exit  : 0/0
 45259 ;;		Unchanged: 0/0
 45260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45265 ;;Total ram usage:        0 bytes
 45266 ;; Hardware stack levels used: 1
 45267 ;; Hardware stack levels required when called: 2
 45268 ;; This function calls:
 45269 ;;		i2_checkTxFifo
 45270 ;;		i2_updateModuleErrorStatus
 45271 ;; This function is called by:
 45272 ;;		i2_canIsr
 45273 ;; This function uses a non-reentrant model
 45274 ;;
 45275                           
 45276                           	psect	text208
 45277   00B0F8                     __ptext208:
 45278                           	callstack 0
 45279   00B0F8                     i2_canTxError:
 45280                           	callstack 2
 45281                           
 45282                           ;../../VLCBlib_PIC/can18_ecan.c: 703:     if (TXB0CONbits.TXLARB) {
 45283                           
 45284                           ;incstack = 0
 45285   00B0F8  010F               	movlb	15	; () banked
 45286   00B0FA  AB20               	btfss	32,5,b	;volatile
 45287   00B0FC  D012               	goto	i2l14890
 45288                           
 45289                           ; BSR set to: 15
 45290                           ;../../VLCBlib_PIC/can18_ecan.c: 704:         canTransmitFailed = 1;
 45291   00B0FE  0E01               	movlw	1
 45292   00B100  0100               	movlb	0	; () banked
 45293   00B102  6FB6               	movwf	_canTransmitFailed& (0+255),b
 45294                           
 45295                           ;../../VLCBlib_PIC/can18_ecan.c: 705:         canTransmitTimeout.val = 0;
 45296   00B104  0E00               	movlw	0
 45297   00B106  6E15               	movwf	_canTransmitTimeout^0,c
 45298   00B108  0E00               	movlw	0
 45299   00B10A  6E16               	movwf	(_canTransmitTimeout+1)^0,c
 45300   00B10C  0E00               	movlw	0
 45301   00B10E  6E17               	movwf	(_canTransmitTimeout+2)^0,c
 45302   00B110  0E00               	movlw	0
 45303   00B112  6E18               	movwf	(_canTransmitTimeout+3)^0,c
 45304                           
 45305                           ; BSR set to: 0
 45306                           ;../../VLCBlib_PIC/can18_ecan.c: 706:         TXB0CONbits.TXREQ = 0;
 45307   00B114  010F               	movlb	15	; () banked
 45308   00B116  9720               	bcf	32,3,b	;volatile
 45309                           
 45310                           ; BSR set to: 15
 45311                           ;../../VLCBlib_PIC/can18_ecan.c: 707:         canDiagnostics[0x0B].asUint++;
 45312   00B118  0101               	movlb	1	; () banked
 45313   00B11A  4B90               	infsnz	(_canDiagnostics+22)& (0+255),f,b
 45314   00B11C  2B91               	incf	(_canDiagnostics+23)& (0+255),f,b
 45315                           
 45316                           ; BSR set to: 1
 45317                           ;../../VLCBlib_PIC/can18_ecan.c: 708:         updateModuleErrorStatus();
 45318   00B11E  ECB8  F061         	call	i2_updateModuleErrorStatus	;wreg free
 45319   00B122                     i2l14890:
 45320                           
 45321                           ;../../VLCBlib_PIC/can18_ecan.c: 710:     if (TXB0CONbits.TXERR) {
 45322   00B122  010F               	movlb	15	; () banked
 45323   00B124  A920               	btfss	32,4,b	;volatile
 45324   00B126  D012               	goto	i2l14900
 45325                           
 45326                           ; BSR set to: 15
 45327                           ;../../VLCBlib_PIC/can18_ecan.c: 711:         canTransmitFailed = 1;
 45328   00B128  0E01               	movlw	1
 45329   00B12A  0100               	movlb	0	; () banked
 45330   00B12C  6FB6               	movwf	_canTransmitFailed& (0+255),b
 45331                           
 45332                           ;../../VLCBlib_PIC/can18_ecan.c: 712:         canTransmitTimeout.val = 0;
 45333   00B12E  0E00               	movlw	0
 45334   00B130  6E15               	movwf	_canTransmitTimeout^0,c
 45335   00B132  0E00               	movlw	0
 45336   00B134  6E16               	movwf	(_canTransmitTimeout+1)^0,c
 45337   00B136  0E00               	movlw	0
 45338   00B138  6E17               	movwf	(_canTransmitTimeout+2)^0,c
 45339   00B13A  0E00               	movlw	0
 45340   00B13C  6E18               	movwf	(_canTransmitTimeout+3)^0,c
 45341                           
 45342                           ; BSR set to: 0
 45343                           ;../../VLCBlib_PIC/can18_ecan.c: 713:         TXB0CONbits.TXREQ = 0;
 45344   00B13E  010F               	movlb	15	; () banked
 45345   00B140  9720               	bcf	32,3,b	;volatile
 45346                           
 45347                           ; BSR set to: 15
 45348                           ;../../VLCBlib_PIC/can18_ecan.c: 714:         canDiagnostics[0x01].asUint++;
 45349   00B142  0101               	movlb	1	; () banked
 45350   00B144  4B7C               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 45351   00B146  2B7D               	incf	(_canDiagnostics+3)& (0+255),f,b
 45352                           
 45353                           ; BSR set to: 1
 45354                           ;../../VLCBlib_PIC/can18_ecan.c: 715:         updateModuleErrorStatus();
 45355   00B148  ECB8  F061         	call	i2_updateModuleErrorStatus	;wreg free
 45356   00B14C                     i2l14900:
 45357                           
 45358                           ;../../VLCBlib_PIC/can18_ecan.c: 717:     if (canTransmitFailed) {
 45359   00B14C  0100               	movlb	0	; () banked
 45360   00B14E  51B6               	movf	_canTransmitFailed& (0+255),w,b
 45361   00B150  A4D8               	btfss	status,2,c
 45362                           
 45363                           ; BSR set to: 0
 45364                           ;../../VLCBlib_PIC/can18_ecan.c: 718:         checkTxFifo();
 45365   00B152  EC02  F02F         	call	i2_checkTxFifo	;wreg free
 45366                           
 45367                           ;../../VLCBlib_PIC/can18_ecan.c: 720:     PIR5bits.ERRIF = 0;
 45368   00B156  9A77               	bcf	119,5,c	;volatile
 45369   00B158  0012               	return		;funcret
 45370   00B15A                     __end_ofi2_canTxError:
 45371                           	callstack 0
 45372                           
 45373 ;; *************** function i2_checkTxFifo *****************
 45374 ;; Defined at:
 45375 ;;		line 616 in file "../../VLCBlib_PIC/can18_ecan.c"
 45376 ;; Parameters:    Size  Location     Type
 45377 ;;		None
 45378 ;; Auto vars:     Size  Location     Type
 45379 ;;  mp              2   19[COMRAM] PTR struct Message
 45380 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 45381 ;;  m               2   17[COMRAM] PTR struct Message
 45382 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 45383 ;; Return value:  Size  Location     Type
 45384 ;;                  1    wreg      void 
 45385 ;; Registers used:
 45386 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45387 ;; Tracked objects:
 45388 ;;		On entry : 0/0
 45389 ;;		On exit  : 0/0
 45390 ;;		Unchanged: 0/0
 45391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45393 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45394 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45395 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45396 ;;Total ram usage:        9 bytes
 45397 ;; Hardware stack levels used: 1
 45398 ;; Hardware stack levels required when called: 1
 45399 ;; This function calls:
 45400 ;;		i2_getNextWriteMessage
 45401 ;;		i2_isEvent
 45402 ;;		i2_pop
 45403 ;;		i2_tickGet
 45404 ;;		i2_updateModuleErrorStatus
 45405 ;; This function is called by:
 45406 ;;		i2_canIsr
 45407 ;;		i2_checkCANTimeout
 45408 ;;		i2_canTxError
 45409 ;; This function uses a non-reentrant model
 45410 ;;
 45411                           
 45412                           	psect	text209
 45413   005E04                     __ptext209:
 45414                           	callstack 0
 45415   005E04                     i2_checkTxFifo:
 45416                           	callstack 3
 45417                           
 45418                           ;../../VLCBlib_PIC/can18_ecan.c: 617:     Message * mp;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          619:     Message * m;;../../VLCBlib_PIC/can18_ecan.c: 622:     PIR5bits.TXBnIF = 0;
 45419                           
 45420                           ;incstack = 0
 45421   005E04  9877               	bcf	119,4,c	;volatile
 45422                           
 45423                           ;../../VLCBlib_PIC/can18_ecan.c: 623:     if (!TXB0CONbits.TXREQ) {
 45424   005E06  010F               	movlb	15	; () banked
 45425   005E08  B720               	btfsc	32,3,b	;volatile
 45426   005E0A  D142               	goto	i2l2919
 45427                           
 45428                           ; BSR set to: 15
 45429                           ;../../VLCBlib_PIC/can18_ecan.c: 624:         mp = pop(&txQueue);
 45430   005E0C  0E21               	movlw	low _txQueue
 45431   005E0E  6E2B               	movwf	i2pop@q^0,c
 45432   005E10  EC6A  F04F         	call	i2_pop	;wreg free
 45433   005E14  C02B  F03E         	movff	?i2_pop,i2checkTxFifo@mp
 45434   005E18  C02C  F03F         	movff	?i2_pop+1,i2checkTxFifo@mp+1
 45435                           
 45436                           ;../../VLCBlib_PIC/can18_ecan.c: 625:         if (mp != ((void*)0)) {
 45437   005E1C  503E               	movf	i2checkTxFifo@mp^0,w,c
 45438   005E1E  103F               	iorwf	(i2checkTxFifo@mp+1)^0,w,c
 45439   005E20  B4D8               	btfsc	status,2,c
 45440   005E22  D128               	goto	i2l13496
 45441                           
 45442                           ;../../VLCBlib_PIC/can18_ecan.c: 627:             TXB0SIDH = canPri[priorities[mp->opc]]
      +                           | ((canId & 0x78) >> 3);
 45443   005E24  EE20 F001          	lfsr	2,1
 45444   005E28  503E               	movf	i2checkTxFifo@mp^0,w,c
 45445   005E2A  26D9               	addwf	fsr2l,f,c
 45446   005E2C  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45447   005E2E  22DA               	addwfc	fsr2h,f,c
 45448   005E30  50DF               	movf	indf2,w,c
 45449   005E32  6E37               	movwf	??i2_checkTxFifo^0,c
 45450   005E34  6A38               	clrf	(??i2_checkTxFifo+1)^0,c
 45451   005E36  0E35               	movlw	low _priorities
 45452   005E38  2437               	addwf	??i2_checkTxFifo^0,w,c
 45453   005E3A  6EF6               	movwf	tblptrl,c
 45454   005E3C  0EED               	movlw	high _priorities
 45455   005E3E  2038               	addwfc	(??i2_checkTxFifo+1)^0,w,c
 45456   005E40  6EF7               	movwf	tblptrh,c
 45457   005E42                     	if	1	;There are 3 active tblptr bytes
 45458   005E42  6AF8               	clrf	tblptru,c
 45459   005E44  0E00               	movlw	low (__mediumconst shr (0+16))
 45460   005E46  22F8               	addwfc	tblptru,f,c
 45461   005E48                     	endif
 45462   005E48  0008               	tblrd		*
 45463   005E4A  50F5               	movf	tablat,w,c
 45464   005E4C  6E39               	movwf	(??i2_checkTxFifo+2)^0,c
 45465   005E4E  6A3A               	clrf	(??i2_checkTxFifo+3)^0,c
 45466   005E50  0E87               	movlw	low _canPri
 45467   005E52  2439               	addwf	(??i2_checkTxFifo+2)^0,w,c
 45468   005E54  6EF6               	movwf	tblptrl,c
 45469   005E56  0EEE               	movlw	high _canPri
 45470   005E58  203A               	addwfc	(??i2_checkTxFifo+3)^0,w,c
 45471   005E5A  6EF7               	movwf	tblptrh,c
 45472   005E5C                     	if	1	;There are 3 active tblptr bytes
 45473   005E5C  6AF8               	clrf	tblptru,c
 45474   005E5E  0E00               	movlw	low (__mediumconst shr (0+16))
 45475   005E60  22F8               	addwfc	tblptru,f,c
 45476   005E62                     	endif
 45477   005E62  0008               	tblrd		*
 45478   005E64  CFF5 F03B          	movff	tablat,??i2_checkTxFifo+4
 45479   005E68  0100               	movlb	0	; () banked
 45480   005E6A  39B7               	swapf	_canId& (0+255),w,b
 45481   005E6C  46E8               	rlncf	wreg,f,c
 45482   005E6E  0B1F               	andlw	31
 45483   005E70  0B0F               	andlw	15
 45484   005E72  103B               	iorwf	(??i2_checkTxFifo+4)^0,w,c
 45485   005E74  010F               	movlb	15	; () banked
 45486   005E76  6F21               	movwf	33,b	;volatile
 45487                           
 45488                           ; BSR set to: 15
 45489                           ;../../VLCBlib_PIC/can18_ecan.c: 628:             TXB0SIDL = (uint8_t)((canId & 0x07) <<
      +                           5);
 45490   005E78  C0B7  F037         	movff	_canId,??i2_checkTxFifo
 45491   005E7C  0E07               	movlw	7
 45492   005E7E  1637               	andwf	??i2_checkTxFifo^0,f,c
 45493   005E80  0E05               	movlw	5
 45494   005E82  6E38               	movwf	(??i2_checkTxFifo+1)^0,c
 45495   005E84                     i2u1233_45:
 45496   005E84  90D8               	bcf	status,0,c
 45497   005E86  3637               	rlcf	??i2_checkTxFifo^0,f,c
 45498   005E88  2E38               	decfsz	(??i2_checkTxFifo+1)^0,f,c
 45499   005E8A  D7FC               	goto	i2u1233_45
 45500   005E8C  5037               	movf	??i2_checkTxFifo^0,w,c
 45501   005E8E  6F22               	movwf	34,b	;volatile
 45502                           
 45503                           ; BSR set to: 15
 45504                           ;../../VLCBlib_PIC/can18_ecan.c: 629:             TXB0D0 = mp->opc;
 45505   005E90  EE20 F001          	lfsr	2,1
 45506   005E94  503E               	movf	i2checkTxFifo@mp^0,w,c
 45507   005E96  26D9               	addwf	fsr2l,f,c
 45508   005E98  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45509   005E9A  22DA               	addwfc	fsr2h,f,c
 45510   005E9C  50DF               	movf	indf2,w,c
 45511   005E9E  6F26               	movwf	38,b	;volatile
 45512                           
 45513                           ; BSR set to: 15
 45514                           ;../../VLCBlib_PIC/can18_ecan.c: 630:             TXB0D1 = mp->bytes[0];
 45515   005EA0  EE20 F002          	lfsr	2,2
 45516   005EA4  503E               	movf	i2checkTxFifo@mp^0,w,c
 45517   005EA6  26D9               	addwf	fsr2l,f,c
 45518   005EA8  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45519   005EAA  22DA               	addwfc	fsr2h,f,c
 45520   005EAC  50DF               	movf	indf2,w,c
 45521   005EAE  6F27               	movwf	39,b	;volatile
 45522                           
 45523                           ; BSR set to: 15
 45524                           ;../../VLCBlib_PIC/can18_ecan.c: 631:             TXB0D2 = mp->bytes[1];
 45525   005EB0  EE20 F003          	lfsr	2,3
 45526   005EB4  503E               	movf	i2checkTxFifo@mp^0,w,c
 45527   005EB6  26D9               	addwf	fsr2l,f,c
 45528   005EB8  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45529   005EBA  22DA               	addwfc	fsr2h,f,c
 45530   005EBC  50DF               	movf	indf2,w,c
 45531   005EBE  6F28               	movwf	40,b	;volatile
 45532                           
 45533                           ; BSR set to: 15
 45534                           ;../../VLCBlib_PIC/can18_ecan.c: 632:             TXB0D3 = mp->bytes[2];
 45535   005EC0  EE20 F004          	lfsr	2,4
 45536   005EC4  503E               	movf	i2checkTxFifo@mp^0,w,c
 45537   005EC6  26D9               	addwf	fsr2l,f,c
 45538   005EC8  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45539   005ECA  22DA               	addwfc	fsr2h,f,c
 45540   005ECC  50DF               	movf	indf2,w,c
 45541   005ECE  6F29               	movwf	41,b	;volatile
 45542                           
 45543                           ; BSR set to: 15
 45544                           ;../../VLCBlib_PIC/can18_ecan.c: 633:             TXB0D4 = mp->bytes[3];
 45545   005ED0  EE20 F005          	lfsr	2,5
 45546   005ED4  503E               	movf	i2checkTxFifo@mp^0,w,c
 45547   005ED6  26D9               	addwf	fsr2l,f,c
 45548   005ED8  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45549   005EDA  22DA               	addwfc	fsr2h,f,c
 45550   005EDC  50DF               	movf	indf2,w,c
 45551   005EDE  6F2A               	movwf	42,b	;volatile
 45552                           
 45553                           ; BSR set to: 15
 45554                           ;../../VLCBlib_PIC/can18_ecan.c: 634:             TXB0D5 = mp->bytes[4];
 45555   005EE0  EE20 F006          	lfsr	2,6
 45556   005EE4  503E               	movf	i2checkTxFifo@mp^0,w,c
 45557   005EE6  26D9               	addwf	fsr2l,f,c
 45558   005EE8  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45559   005EEA  22DA               	addwfc	fsr2h,f,c
 45560   005EEC  50DF               	movf	indf2,w,c
 45561   005EEE  6F2B               	movwf	43,b	;volatile
 45562                           
 45563                           ; BSR set to: 15
 45564                           ;../../VLCBlib_PIC/can18_ecan.c: 635:             TXB0D6 = mp->bytes[5];
 45565   005EF0  EE20 F007          	lfsr	2,7
 45566   005EF4  503E               	movf	i2checkTxFifo@mp^0,w,c
 45567   005EF6  26D9               	addwf	fsr2l,f,c
 45568   005EF8  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45569   005EFA  22DA               	addwfc	fsr2h,f,c
 45570   005EFC  50DF               	movf	indf2,w,c
 45571   005EFE  6F2C               	movwf	44,b	;volatile
 45572                           
 45573                           ; BSR set to: 15
 45574                           ;../../VLCBlib_PIC/can18_ecan.c: 636:             TXB0D7 = mp->bytes[6];
 45575   005F00  EE20 F008          	lfsr	2,8
 45576   005F04  503E               	movf	i2checkTxFifo@mp^0,w,c
 45577   005F06  26D9               	addwf	fsr2l,f,c
 45578   005F08  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45579   005F0A  22DA               	addwfc	fsr2h,f,c
 45580   005F0C  50DF               	movf	indf2,w,c
 45581   005F0E  6F2D               	movwf	45,b	;volatile
 45582                           
 45583                           ; BSR set to: 15
 45584                           ;../../VLCBlib_PIC/can18_ecan.c: 637:             TXB0DLC = mp->len;
 45585   005F10  C03E  FFD9         	movff	i2checkTxFifo@mp,fsr2l
 45586   005F14  C03F  FFDA         	movff	i2checkTxFifo@mp+1,fsr2h
 45587   005F18  50DF               	movf	indf2,w,c
 45588   005F1A  6F25               	movwf	37,b	;volatile
 45589                           
 45590                           ; BSR set to: 15
 45591                           ;../../VLCBlib_PIC/can18_ecan.c: 639:             canTransmitTimeout.val = tickGet();
 45592   005F1C  EC69  F059         	call	i2_tickGet	;wreg free
 45593   005F20  C02B  F015         	movff	?i2_tickGet,_canTransmitTimeout
 45594   005F24  C02C  F016         	movff	?i2_tickGet+1,_canTransmitTimeout+1
 45595   005F28  C02D  F017         	movff	?i2_tickGet+2,_canTransmitTimeout+2
 45596   005F2C  C02E  F018         	movff	?i2_tickGet+3,_canTransmitTimeout+3
 45597                           
 45598                           ;../../VLCBlib_PIC/can18_ecan.c: 640:             canTransmitFailed = 0;
 45599   005F30  0E00               	movlw	0
 45600   005F32  0100               	movlb	0	; () banked
 45601   005F34  6FB6               	movwf	_canTransmitFailed& (0+255),b
 45602                           
 45603                           ; BSR set to: 0
 45604                           ;../../VLCBlib_PIC/can18_ecan.c: 641:             TXB0CONbits.TXREQ = 1;
 45605   005F36  010F               	movlb	15	; () banked
 45606   005F38  8720               	bsf	32,3,b	;volatile
 45607                           
 45608                           ; BSR set to: 15
 45609                           ;../../VLCBlib_PIC/can18_ecan.c: 642:             PIE5bits.TXBnIE = 1;
 45610   005F3A  8876               	bsf	118,4,c	;volatile
 45611                           
 45612                           ; BSR set to: 15
 45613                           ;../../VLCBlib_PIC/can18_ecan.c: 643:             canDiagnostics[0x05].asUint++;
 45614   005F3C  0101               	movlb	1	; () banked
 45615   005F3E  4B84               	infsnz	(_canDiagnostics+10)& (0+255),f,b
 45616   005F40  2B85               	incf	(_canDiagnostics+11)& (0+255),f,b
 45617                           
 45618                           ; BSR set to: 1
 45619                           ;../../VLCBlib_PIC/can18_ecan.c: 646:             if (isEvent(mp->opc)) {
 45620   005F42  EE20 F001          	lfsr	2,1
 45621   005F46  503E               	movf	i2checkTxFifo@mp^0,w,c
 45622   005F48  26D9               	addwf	fsr2l,f,c
 45623   005F4A  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45624   005F4C  22DA               	addwfc	fsr2h,f,c
 45625   005F4E  50DF               	movf	indf2,w,c
 45626   005F50  EC8D  F060         	call	i2_isEvent
 45627   005F54  0900               	iorlw	0
 45628   005F56  B4D8               	btfsc	status,2,c
 45629   005F58  0012               	return	
 45630                           
 45631                           ;../../VLCBlib_PIC/can18_ecan.c: 648:                 m = getNextWriteMessage(&rxQueue);
 45632   005F5A  0E26               	movlw	low _rxQueue
 45633   005F5C  6E2B               	movwf	i2getNextWriteMessage@q^0,c
 45634   005F5E  EC17  F046         	call	i2_getNextWriteMessage	;wreg free
 45635   005F62  C02B  F03C         	movff	?i2_getNextWriteMessage,i2checkTxFifo@m
 45636   005F66  C02C  F03D         	movff	?i2_getNextWriteMessage+1,i2checkTxFifo@m+1
 45637                           
 45638                           ;../../VLCBlib_PIC/can18_ecan.c: 649:                 if (m == ((void*)0)) {
 45639   005F6A  503C               	movf	i2checkTxFifo@m^0,w,c
 45640   005F6C  103D               	iorwf	(i2checkTxFifo@m+1)^0,w,c
 45641   005F6E  A4D8               	btfss	status,2,c
 45642   005F70  D006               	goto	i2l13478
 45643                           
 45644                           ;../../VLCBlib_PIC/can18_ecan.c: 650:                     canDiagnostics[0x07].asUint++;
 45645   005F72  0101               	movlb	1	; () banked
 45646   005F74  4B88               	infsnz	(_canDiagnostics+14)& (0+255),f,b
 45647   005F76  2B89               	incf	(_canDiagnostics+15)& (0+255),f,b
 45648                           
 45649                           ; BSR set to: 1
 45650                           ;../../VLCBlib_PIC/can18_ecan.c: 651:                     updateModuleErrorStatus();
 45651   005F78  ECB8  F061         	call	i2_updateModuleErrorStatus	;wreg free
 45652                           
 45653                           ;../../VLCBlib_PIC/can18_ecan.c: 652:                 } else {
 45654   005F7C  0012               	return	
 45655   005F7E                     i2l13478:
 45656                           
 45657                           ;../../VLCBlib_PIC/can18_ecan.c: 654:                     m->opc = mp->opc;
 45658   005F7E  EE20 F001          	lfsr	2,1
 45659   005F82  503E               	movf	i2checkTxFifo@mp^0,w,c
 45660   005F84  26D9               	addwf	fsr2l,f,c
 45661   005F86  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45662   005F88  22DA               	addwfc	fsr2h,f,c
 45663   005F8A  EE10 F001          	lfsr	1,1
 45664   005F8E  503C               	movf	i2checkTxFifo@m^0,w,c
 45665   005F90  26E1               	addwf	fsr1l,f,c
 45666   005F92  503D               	movf	(i2checkTxFifo@m+1)^0,w,c
 45667   005F94  22E2               	addwfc	fsr1h,f,c
 45668   005F96  CFDF FFE7          	movff	indf2,indf1
 45669                           
 45670                           ;../../VLCBlib_PIC/can18_ecan.c: 655:                     m->len = mp->len;
 45671   005F9A  C03E  FFD9         	movff	i2checkTxFifo@mp,fsr2l
 45672   005F9E  C03F  FFDA         	movff	i2checkTxFifo@mp+1,fsr2h
 45673   005FA2  C03C  FFE1         	movff	i2checkTxFifo@m,fsr1l
 45674   005FA6  C03D  FFE2         	movff	i2checkTxFifo@m+1,fsr1h
 45675   005FAA  CFDF FFE7          	movff	indf2,indf1
 45676                           
 45677                           ;../../VLCBlib_PIC/can18_ecan.c: 656:                     m->bytes[0] = mp->bytes[0];
 45678   005FAE  EE20 F002          	lfsr	2,2
 45679   005FB2  503E               	movf	i2checkTxFifo@mp^0,w,c
 45680   005FB4  26D9               	addwf	fsr2l,f,c
 45681   005FB6  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45682   005FB8  22DA               	addwfc	fsr2h,f,c
 45683   005FBA  EE10 F002          	lfsr	1,2
 45684   005FBE  503C               	movf	i2checkTxFifo@m^0,w,c
 45685   005FC0  26E1               	addwf	fsr1l,f,c
 45686   005FC2  503D               	movf	(i2checkTxFifo@m+1)^0,w,c
 45687   005FC4  22E2               	addwfc	fsr1h,f,c
 45688   005FC6  CFDF FFE7          	movff	indf2,indf1
 45689                           
 45690                           ;../../VLCBlib_PIC/can18_ecan.c: 657:                     m->bytes[1] = mp->bytes[1];
 45691   005FCA  EE20 F003          	lfsr	2,3
 45692   005FCE  503E               	movf	i2checkTxFifo@mp^0,w,c
 45693   005FD0  26D9               	addwf	fsr2l,f,c
 45694   005FD2  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45695   005FD4  22DA               	addwfc	fsr2h,f,c
 45696   005FD6  EE10 F003          	lfsr	1,3
 45697   005FDA  503C               	movf	i2checkTxFifo@m^0,w,c
 45698   005FDC  26E1               	addwf	fsr1l,f,c
 45699   005FDE  503D               	movf	(i2checkTxFifo@m+1)^0,w,c
 45700   005FE0  22E2               	addwfc	fsr1h,f,c
 45701   005FE2  CFDF FFE7          	movff	indf2,indf1
 45702                           
 45703                           ;../../VLCBlib_PIC/can18_ecan.c: 658:                     m->bytes[2] = mp->bytes[2];
 45704   005FE6  EE20 F004          	lfsr	2,4
 45705   005FEA  503E               	movf	i2checkTxFifo@mp^0,w,c
 45706   005FEC  26D9               	addwf	fsr2l,f,c
 45707   005FEE  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45708   005FF0  22DA               	addwfc	fsr2h,f,c
 45709   005FF2  EE10 F004          	lfsr	1,4
 45710   005FF6  503C               	movf	i2checkTxFifo@m^0,w,c
 45711   005FF8  26E1               	addwf	fsr1l,f,c
 45712   005FFA  503D               	movf	(i2checkTxFifo@m+1)^0,w,c
 45713   005FFC  22E2               	addwfc	fsr1h,f,c
 45714   005FFE  CFDF FFE7          	movff	indf2,indf1
 45715                           
 45716                           ;../../VLCBlib_PIC/can18_ecan.c: 659:                     m->bytes[3] = mp->bytes[3];
 45717   006002  EE20 F005          	lfsr	2,5
 45718   006006  503E               	movf	i2checkTxFifo@mp^0,w,c
 45719   006008  26D9               	addwf	fsr2l,f,c
 45720   00600A  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45721   00600C  22DA               	addwfc	fsr2h,f,c
 45722   00600E  EE10 F005          	lfsr	1,5
 45723   006012  503C               	movf	i2checkTxFifo@m^0,w,c
 45724   006014  26E1               	addwf	fsr1l,f,c
 45725   006016  503D               	movf	(i2checkTxFifo@m+1)^0,w,c
 45726   006018  22E2               	addwfc	fsr1h,f,c
 45727   00601A  CFDF FFE7          	movff	indf2,indf1
 45728                           
 45729                           ;../../VLCBlib_PIC/can18_ecan.c: 660:                     m->bytes[4] = mp->bytes[4];
 45730   00601E  EE20 F006          	lfsr	2,6
 45731   006022  503E               	movf	i2checkTxFifo@mp^0,w,c
 45732   006024  26D9               	addwf	fsr2l,f,c
 45733   006026  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45734   006028  22DA               	addwfc	fsr2h,f,c
 45735   00602A  EE10 F006          	lfsr	1,6
 45736   00602E  503C               	movf	i2checkTxFifo@m^0,w,c
 45737   006030  26E1               	addwf	fsr1l,f,c
 45738   006032  503D               	movf	(i2checkTxFifo@m+1)^0,w,c
 45739   006034  22E2               	addwfc	fsr1h,f,c
 45740   006036  CFDF FFE7          	movff	indf2,indf1
 45741                           
 45742                           ;../../VLCBlib_PIC/can18_ecan.c: 661:                     m->bytes[5] = mp->bytes[5];
 45743   00603A  EE20 F007          	lfsr	2,7
 45744   00603E  503E               	movf	i2checkTxFifo@mp^0,w,c
 45745   006040  26D9               	addwf	fsr2l,f,c
 45746   006042  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45747   006044  22DA               	addwfc	fsr2h,f,c
 45748   006046  EE10 F007          	lfsr	1,7
 45749   00604A  503C               	movf	i2checkTxFifo@m^0,w,c
 45750   00604C  26E1               	addwf	fsr1l,f,c
 45751   00604E  503D               	movf	(i2checkTxFifo@m+1)^0,w,c
 45752   006050  22E2               	addwfc	fsr1h,f,c
 45753   006052  CFDF FFE7          	movff	indf2,indf1
 45754                           
 45755                           ;../../VLCBlib_PIC/can18_ecan.c: 662:                     m->bytes[6] = mp->bytes[6];
 45756   006056  EE20 F008          	lfsr	2,8
 45757   00605A  503E               	movf	i2checkTxFifo@mp^0,w,c
 45758   00605C  26D9               	addwf	fsr2l,f,c
 45759   00605E  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45760   006060  22DA               	addwfc	fsr2h,f,c
 45761   006062  EE10 F008          	lfsr	1,8
 45762   006066  503C               	movf	i2checkTxFifo@m^0,w,c
 45763   006068  26E1               	addwf	fsr1l,f,c
 45764   00606A  503D               	movf	(i2checkTxFifo@m+1)^0,w,c
 45765   00606C  22E2               	addwfc	fsr1h,f,c
 45766   00606E  CFDF FFE7          	movff	indf2,indf1
 45767   006072  0012               	return	
 45768   006074                     i2l13496:
 45769                           
 45770                           ;../../VLCBlib_PIC/can18_ecan.c: 668:             canTransmitTimeout.val = 0;
 45771   006074  0E00               	movlw	0
 45772   006076  6E15               	movwf	_canTransmitTimeout^0,c
 45773   006078  0E00               	movlw	0
 45774   00607A  6E16               	movwf	(_canTransmitTimeout+1)^0,c
 45775   00607C  0E00               	movlw	0
 45776   00607E  6E17               	movwf	(_canTransmitTimeout+2)^0,c
 45777   006080  0E00               	movlw	0
 45778   006082  6E18               	movwf	(_canTransmitTimeout+3)^0,c
 45779                           
 45780                           ;../../VLCBlib_PIC/can18_ecan.c: 669:             TXB0CON = 0;
 45781   006084  0E00               	movlw	0
 45782   006086  010F               	movlb	15	; () banked
 45783   006088  6F20               	movwf	32,b	;volatile
 45784                           
 45785                           ; BSR set to: 15
 45786                           ;../../VLCBlib_PIC/can18_ecan.c: 670:             PIR5bits.TXBnIF = 0;
 45787   00608A  9877               	bcf	119,4,c	;volatile
 45788                           
 45789                           ; BSR set to: 15
 45790                           ;../../VLCBlib_PIC/can18_ecan.c: 671:             PIE5bits.TXBnIE = 0;
 45791   00608C  9876               	bcf	118,4,c	;volatile
 45792   00608E  0012               	return	
 45793   006090                     i2l2919:
 45794                           
 45795                           ; BSR set to: 15
 45796                           ;../../VLCBlib_PIC/can18_ecan.c: 675:         PIR5bits.TXBnIF = 0;
 45797   006090  9877               	bcf	119,4,c	;volatile
 45798                           
 45799                           ;../../VLCBlib_PIC/can18_ecan.c: 676:         PIE5bits.TXBnIE = 1;
 45800   006092  8876               	bsf	118,4,c	;volatile
 45801   006094  0012               	return		;funcret
 45802   006096                     __end_ofi2_checkTxFifo:
 45803                           	callstack 0
 45804                           
 45805 ;; *************** function i2_tickGet *****************
 45806 ;; Defined at:
 45807 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 45808 ;; Parameters:    Size  Location     Type
 45809 ;;		None
 45810 ;; Auto vars:     Size  Location     Type
 45811 ;;  currentTime     4    6[COMRAM] struct _TickValue
 45812 ;;  IntFlag1        1    5[COMRAM] unsigned char 
 45813 ;;  IntFlag2        1    4[COMRAM] unsigned char 
 45814 ;; Return value:  Size  Location     Type
 45815 ;;                  4    0[COMRAM] unsigned long 
 45816 ;; Registers used:
 45817 ;;		wreg, status,2, status,0
 45818 ;; Tracked objects:
 45819 ;;		On entry : 0/0
 45820 ;;		On exit  : 0/0
 45821 ;;		Unchanged: 0/0
 45822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45823 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45824 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45826 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45827 ;;Total ram usage:       10 bytes
 45828 ;; Hardware stack levels used: 1
 45829 ;; This function calls:
 45830 ;;		Nothing
 45831 ;; This function is called by:
 45832 ;;		i2_checkTxFifo
 45833 ;;		i2_checkCANTimeout
 45834 ;; This function uses a non-reentrant model
 45835 ;;
 45836                           
 45837                           	psect	text210
 45838   00B2D2                     __ptext210:
 45839                           	callstack 0
 45840   00B2D2                     i2_tickGet:
 45841                           	callstack 3
 45842                           
 45843                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 45844                           
 45845                           ;incstack = 0
 45846   00B2D2  0E00               	movlw	0
 45847   00B2D4  6E33               	movwf	(i2tickGet@currentTime+2)^0,c
 45848                           
 45849                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 45850   00B2D6  0E00               	movlw	0
 45851   00B2D8  6E34               	movwf	(i2tickGet@currentTime+3)^0,c
 45852                           
 45853                           ;../../VLCBlib_PIC/ticktime.c: 169:     INTCONbits.TMR0IE = 0;
 45854   00B2DA  9AF2               	bcf	242,5,c	;volatile
 45855   00B2DC                     i2l12332:
 45856                           
 45857                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = INTCONbits.TMR0IF;
 45858   00B2DC  0E00               	movlw	0
 45859   00B2DE  B4F2               	btfsc	242,2,c	;volatile
 45860   00B2E0  0E01               	movlw	1
 45861   00B2E2  6E30               	movwf	i2tickGet@IntFlag1^0,c
 45862                           
 45863                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 45864   00B2E4  CFD6 F031          	movff	4054,i2tickGet@currentTime	;volatile
 45865                           
 45866                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 45867   00B2E8  CFD7 F032          	movff	4055,i2tickGet@currentTime+1	;volatile
 45868                           
 45869                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = INTCONbits.TMR0IF;
 45870   00B2EC  0E00               	movlw	0
 45871   00B2EE  B4F2               	btfsc	242,2,c	;volatile
 45872   00B2F0  0E01               	movlw	1
 45873   00B2F2  6E2F               	movwf	i2tickGet@IntFlag2^0,c
 45874                           
 45875                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 45876   00B2F4  502F               	movf	i2tickGet@IntFlag2^0,w,c
 45877   00B2F6  1830               	xorwf	i2tickGet@IntFlag1^0,w,c
 45878   00B2F8  A4D8               	btfss	status,2,c
 45879   00B2FA  D7F0               	goto	i2l12332
 45880                           
 45881                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 45882   00B2FC  5030               	movf	i2tickGet@IntFlag1^0,w,c
 45883   00B2FE  B4D8               	btfsc	status,2,c
 45884   00B300  D006               	goto	i2l12352
 45885                           
 45886                           ;../../VLCBlib_PIC/ticktime.c: 178:         INTCONbits.TMR0IF = 0;
 45887   00B302  94F2               	bcf	242,2,c	;volatile
 45888                           
 45889                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 45890   00B304  0100               	movlb	0	; () banked
 45891   00B306  2BC3               	incf	_timerExtension1& (0+255),f,b	;volatile
 45892                           
 45893                           ; BSR set to: 0
 45894                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 45895   00B308  51C3               	movf	_timerExtension1& (0+255),w,b	;volatile
 45896   00B30A  B4D8               	btfsc	status,2,c
 45897                           
 45898                           ; BSR set to: 0
 45899                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 45900   00B30C  2BC2               	incf	_timerExtension2& (0+255),f,b	;volatile
 45901   00B30E                     i2l12352:
 45902                           
 45903                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 45904   00B30E  0100               	movlb	0	; () banked
 45905   00B310  51C3               	movf	_timerExtension1& (0+255),w,b	;volatile
 45906   00B312  2633               	addwf	(i2tickGet@currentTime+2)^0,f,c
 45907                           
 45908                           ; BSR set to: 0
 45909                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 45910   00B314  51C2               	movf	_timerExtension2& (0+255),w,b	;volatile
 45911   00B316  2634               	addwf	(i2tickGet@currentTime+3)^0,f,c
 45912                           
 45913                           ; BSR set to: 0
 45914                           ;../../VLCBlib_PIC/ticktime.c: 191:     INTCONbits.TMR0IE = 1;
 45915   00B318  8AF2               	bsf	242,5,c	;volatile
 45916                           
 45917                           ; BSR set to: 0
 45918                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 45919   00B31A  C031  F02B         	movff	i2tickGet@currentTime,?i2_tickGet
 45920   00B31E  C032  F02C         	movff	i2tickGet@currentTime+1,?i2_tickGet+1
 45921   00B322  C033  F02D         	movff	i2tickGet@currentTime+2,?i2_tickGet+2
 45922   00B326  C034  F02E         	movff	i2tickGet@currentTime+3,?i2_tickGet+3
 45923                           
 45924                           ; BSR set to: 0
 45925   00B32A  0012               	return		;funcret
 45926   00B32C                     __end_ofi2_tickGet:
 45927                           	callstack 0
 45928                           
 45929 ;; *************** function i2_pop *****************
 45930 ;; Defined at:
 45931 ;;		line 95 in file "../../VLCBlib_PIC/messageQueue.c"
 45932 ;; Parameters:    Size  Location     Type
 45933 ;;  q               1    0[COMRAM] PTR struct MessageQueue
 45934 ;;		 -> txQueue(5), rxQueue(5), 
 45935 ;; Auto vars:     Size  Location     Type
 45936 ;;  ret             2    7[COMRAM] PTR struct Message
 45937 ;;		 -> txBuffers(72), rxBuffers(288), 
 45938 ;; Return value:  Size  Location     Type
 45939 ;;                  2    0[COMRAM] PTR struct Message
 45940 ;; Registers used:
 45941 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 45942 ;; Tracked objects:
 45943 ;;		On entry : 0/0
 45944 ;;		On exit  : 0/0
 45945 ;;		Unchanged: 0/0
 45946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45947 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45948 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45949 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45950 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45951 ;;Total ram usage:        9 bytes
 45952 ;; Hardware stack levels used: 1
 45953 ;; This function calls:
 45954 ;;		Nothing
 45955 ;; This function is called by:
 45956 ;;		i2_checkTxFifo
 45957 ;; This function uses a non-reentrant model
 45958 ;;
 45959                           
 45960                           	psect	text211
 45961   009ED4                     __ptext211:
 45962                           	callstack 0
 45963   009ED4                     i2_pop:
 45964                           	callstack 3
 45965                           
 45966                           ;../../VLCBlib_PIC/messageQueue.c: 96:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 97:  if (q->writeIndex == q->readIndex) {
 45967                           
 45968                           ; BSR set to: 0
 45969                           ;incstack = 0
 45970   009ED4  502B               	movf	i2pop@q^0,w,c
 45971   009ED6  6ED9               	movwf	fsr2l,c
 45972   009ED8  6ADA               	clrf	fsr2h,c
 45973   009EDA  0E02               	movlw	2
 45974   009EDC  26D9               	addwf	fsr2l,f,c
 45975   009EDE  502B               	movf	i2pop@q^0,w,c
 45976   009EE0  6EE1               	movwf	fsr1l,c
 45977   009EE2  6AE2               	clrf	fsr1h,c
 45978   009EE4  0E03               	movlw	3
 45979   009EE6  26E1               	addwf	fsr1l,f,c
 45980   009EE8  50DE               	movf	postinc2,w,c
 45981   009EEA  18E6               	xorwf	postinc1,w,c
 45982   009EEC  A4D8               	btfss	status,2,c
 45983   009EEE  D005               	goto	i2l12438
 45984                           
 45985                           ;../../VLCBlib_PIC/messageQueue.c: 98:         return ((void*)0);
 45986   009EF0  0E00               	movlw	0
 45987   009EF2  6E2B               	movwf	?i2_pop^0,c
 45988   009EF4  0E00               	movlw	0
 45989   009EF6  6E2C               	movwf	(?i2_pop+1)^0,c
 45990   009EF8  0012               	return	
 45991   009EFA                     i2l12438:
 45992                           
 45993                           ;../../VLCBlib_PIC/messageQueue.c: 100:  ret = &(q->messages[q->readIndex++]);
 45994   009EFA  502B               	movf	i2pop@q^0,w,c
 45995   009EFC  6ED9               	movwf	fsr2l,c
 45996   009EFE  6ADA               	clrf	fsr2h,c
 45997   009F00  0E02               	movlw	2
 45998   009F02  26D9               	addwf	fsr2l,f,c
 45999   009F04  50DF               	movf	indf2,w,c
 46000   009F06  6E2D               	movwf	??i2_pop^0,c
 46001   009F08  502D               	movf	??i2_pop^0,w,c
 46002   009F0A  0D09               	mullw	9
 46003   009F0C  CFF3 F02E          	movff	prodl,??i2_pop+1
 46004   009F10  CFF4 F02F          	movff	prodh,??i2_pop+2
 46005   009F14  502B               	movf	i2pop@q^0,w,c
 46006   009F16  6ED9               	movwf	fsr2l,c
 46007   009F18  6ADA               	clrf	fsr2h,c
 46008   009F1A  CFDE F030          	movff	postinc2,??i2_pop+3
 46009   009F1E  CFDD F031          	movff	postdec2,??i2_pop+4
 46010   009F22  502E               	movf	(??i2_pop+1)^0,w,c
 46011   009F24  2430               	addwf	(??i2_pop+3)^0,w,c
 46012   009F26  6E32               	movwf	i2pop@ret^0,c
 46013   009F28  502F               	movf	(??i2_pop+2)^0,w,c
 46014   009F2A  2031               	addwfc	(??i2_pop+4)^0,w,c
 46015   009F2C  6E33               	movwf	(i2pop@ret+1)^0,c
 46016   009F2E  502B               	movf	i2pop@q^0,w,c
 46017   009F30  6ED9               	movwf	fsr2l,c
 46018   009F32  6ADA               	clrf	fsr2h,c
 46019   009F34  0E02               	movlw	2
 46020   009F36  26D9               	addwf	fsr2l,f,c
 46021   009F38  2ADF               	incf	indf2,f,c
 46022                           
 46023                           ;../../VLCBlib_PIC/messageQueue.c: 101:  if (q->readIndex >= q->size) q->readIndex = 0;
 46024   009F3A  502B               	movf	i2pop@q^0,w,c
 46025   009F3C  6ED9               	movwf	fsr2l,c
 46026   009F3E  6ADA               	clrf	fsr2h,c
 46027   009F40  0E04               	movlw	4
 46028   009F42  26D9               	addwf	fsr2l,f,c
 46029   009F44  502B               	movf	i2pop@q^0,w,c
 46030   009F46  6EE1               	movwf	fsr1l,c
 46031   009F48  6AE2               	clrf	fsr1h,c
 46032   009F4A  0E02               	movlw	2
 46033   009F4C  26E1               	addwf	fsr1l,f,c
 46034   009F4E  50DE               	movf	postinc2,w,c
 46035   009F50  5CE6               	subwf	postinc1,w,c
 46036   009F52  A0D8               	btfss	status,0,c
 46037   009F54  D006               	goto	i2l12446
 46038   009F56  502B               	movf	i2pop@q^0,w,c
 46039   009F58  6ED9               	movwf	fsr2l,c
 46040   009F5A  6ADA               	clrf	fsr2h,c
 46041   009F5C  0E02               	movlw	2
 46042   009F5E  26D9               	addwf	fsr2l,f,c
 46043   009F60  6ADF               	clrf	indf2,c
 46044   009F62                     i2l12446:
 46045                           
 46046                           ;../../VLCBlib_PIC/messageQueue.c: 102:  return ret;
 46047   009F62  C032  F02B         	movff	i2pop@ret,?i2_pop
 46048   009F66  C033  F02C         	movff	i2pop@ret+1,?i2_pop+1
 46049   009F6A  0012               	return		;funcret
 46050   009F6C                     __end_ofi2_pop:
 46051                           	callstack 0
 46052                           
 46053 ;; *************** function i2_isEvent *****************
 46054 ;; Defined at:
 46055 ;;		line 1114 in file "../../VLCBlib_PIC/vlcb.c"
 46056 ;; Parameters:    Size  Location     Type
 46057 ;;  opc             1    wreg     unsigned char 
 46058 ;; Auto vars:     Size  Location     Type
 46059 ;;  opc             1    1[COMRAM] unsigned char 
 46060 ;; Return value:  Size  Location     Type
 46061 ;;                  1    wreg      enum E12700
 46062 ;; Registers used:
 46063 ;;		wreg, status,2, status,0
 46064 ;; Tracked objects:
 46065 ;;		On entry : 0/0
 46066 ;;		On exit  : 0/0
 46067 ;;		Unchanged: 0/0
 46068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46070 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46072 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46073 ;;Total ram usage:        2 bytes
 46074 ;; Hardware stack levels used: 1
 46075 ;; This function calls:
 46076 ;;		Nothing
 46077 ;; This function is called by:
 46078 ;;		i2_checkTxFifo
 46079 ;; This function uses a non-reentrant model
 46080 ;;
 46081                           
 46082                           	psect	text212
 46083   00C11A                     __ptext212:
 46084                           	callstack 0
 46085   00C11A                     i2_isEvent:
 46086                           	callstack 3
 46087                           
 46088                           ;incstack = 0
 46089                           ;i2isEvent@opc stored from wreg
 46090   00C11A  6E2C               	movwf	i2isEvent@opc^0,c
 46091                           
 46092                           ;../../VLCBlib_PIC/vlcb.c: 1115:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 46093   00C11C  0E00               	movlw	0
 46094   00C11E  6E2B               	movwf	i2_isEvent$5877^0,c
 46095   00C120  502C               	movf	i2isEvent@opc^0,w,c
 46096   00C122  0B90               	andlw	144
 46097   00C124  0A90               	xorlw	144
 46098   00C126  A4D8               	btfss	status,2,c
 46099   00C128  D008               	goto	i2l2425
 46100   00C12A  502C               	movf	i2isEvent@opc^0,w,c
 46101   00C12C  0AFF               	xorlw	255
 46102   00C12E  0B06               	andlw	6
 46103   00C130  0A06               	xorlw	6
 46104   00C132  A4D8               	btfss	status,2,c
 46105   00C134  D002               	goto	i2l2425
 46106   00C136  0E01               	movlw	1
 46107   00C138  6E2B               	movwf	i2_isEvent$5877^0,c
 46108   00C13A                     i2l2425:
 46109   00C13A  502B               	movf	i2_isEvent$5877^0,w,c
 46110   00C13C  0012               	return		;funcret
 46111   00C13E                     __end_ofi2_isEvent:
 46112                           	callstack 0
 46113                           
 46114 ;; *************** function i2_canFillRxFifo *****************
 46115 ;; Defined at:
 46116 ;;		line 761 in file "../../VLCBlib_PIC/can18_ecan.c"
 46117 ;; Parameters:    Size  Location     Type
 46118 ;;		None
 46119 ;; Auto vars:     Size  Location     Type
 46120 ;;  m               2   14[COMRAM] PTR struct Message
 46121 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 46122 ;;  ptr             2   12[COMRAM] PTR unsigned char 
 46123 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 46124 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 46125 ;;		 -> NULL(0), 
 46126 ;;  hiIndex         1    0        unsigned char 
 46127 ;; Return value:  Size  Location     Type
 46128 ;;                  1    wreg      void 
 46129 ;; Registers used:
 46130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 46131 ;; Tracked objects:
 46132 ;;		On entry : 0/0
 46133 ;;		On exit  : 0/0
 46134 ;;		Unchanged: 0/0
 46135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46137 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46139 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46140 ;;Total ram usage:        4 bytes
 46141 ;; Hardware stack levels used: 1
 46142 ;; Hardware stack levels required when called: 1
 46143 ;; This function calls:
 46144 ;;		i2_getBufferPointer
 46145 ;;		i2_getNextWriteMessage
 46146 ;;		i2_updateModuleErrorStatus
 46147 ;; This function is called by:
 46148 ;;		i2_canIsr
 46149 ;; This function uses a non-reentrant model
 46150 ;;
 46151                           
 46152                           	psect	text213
 46153   007980                     __ptext213:
 46154                           	callstack 0
 46155   007980                     i2_canFillRxFifo:
 46156                           	callstack 3
 46157                           
 46158                           ;../../VLCBlib_PIC/can18_ecan.c: 762:     uint8_t *ptr;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          763:     uint8_t hiIndex;;../../VLCBlib_PIC/can18_ecan.c: 764:     Message * m;;../../VL
      +                          CBlib_PIC/can18_ecan.c: 766:     while (COMSTATbits.NOT_FIFOEMPTY) {
 46159                           
 46160                           ;incstack = 0
 46161   007980  D0A6               	goto	i2l14942
 46162   007982                     i2l14908:
 46163                           
 46164                           ;../../VLCBlib_PIC/can18_ecan.c: 767:         ptr = getBufferPointer(CANCON & 0x07U);
 46165   007982  506F               	movf	111,w,c	;volatile
 46166   007984  0B07               	andlw	7
 46167   007986  EC75  F051         	call	i2_getBufferPointer
 46168   00798A  C02B  F037         	movff	?i2_getBufferPointer,i2canFillRxFifo@ptr
 46169   00798E  C02C  F038         	movff	?i2_getBufferPointer+1,i2canFillRxFifo@ptr+1
 46170                           
 46171                           ;../../VLCBlib_PIC/can18_ecan.c: 768:         PIR5bits.RXBnIF = 0;
 46172   007992  9277               	bcf	119,1,c	;volatile
 46173                           
 46174                           ;../../VLCBlib_PIC/can18_ecan.c: 769:         if (COMSTATbits.RXB1OVFL) {
 46175   007994  BC71               	btfsc	113,6,c	;volatile
 46176                           
 46177                           ;../../VLCBlib_PIC/can18_ecan.c: 770:             COMSTATbits.RXB1OVFL = 0;
 46178   007996  9C71               	bcf	113,6,c	;volatile
 46179                           
 46180                           ;../../VLCBlib_PIC/can18_ecan.c: 774:         m = getNextWriteMessage(&rxQueue);
 46181   007998  0E26               	movlw	low _rxQueue
 46182   00799A  6E2B               	movwf	i2getNextWriteMessage@q^0,c
 46183   00799C  EC17  F046         	call	i2_getNextWriteMessage	;wreg free
 46184   0079A0  C02B  F039         	movff	?i2_getNextWriteMessage,i2canFillRxFifo@m
 46185   0079A4  C02C  F03A         	movff	?i2_getNextWriteMessage+1,i2canFillRxFifo@m+1
 46186                           
 46187                           ;../../VLCBlib_PIC/can18_ecan.c: 775:         if (m == ((void*)0)) {
 46188   0079A8  5039               	movf	i2canFillRxFifo@m^0,w,c
 46189   0079AA  103A               	iorwf	(i2canFillRxFifo@m+1)^0,w,c
 46190   0079AC  A4D8               	btfss	status,2,c
 46191   0079AE  D009               	goto	i2l14930
 46192                           
 46193                           ;../../VLCBlib_PIC/can18_ecan.c: 776:             canDiagnostics[0x07].asUint++;
 46194   0079B0  0101               	movlb	1	; () banked
 46195   0079B2  4B88               	infsnz	(_canDiagnostics+14)& (0+255),f,b
 46196   0079B4  2B89               	incf	(_canDiagnostics+15)& (0+255),f,b
 46197                           
 46198                           ; BSR set to: 1
 46199                           ;../../VLCBlib_PIC/can18_ecan.c: 777:             updateModuleErrorStatus();
 46200   0079B6  ECB8  F061         	call	i2_updateModuleErrorStatus	;wreg free
 46201                           
 46202                           ;../../VLCBlib_PIC/can18_ecan.c: 779:             if (PIR5bits.IRXIF) {
 46203   0079BA  AE77               	btfss	119,7,c	;volatile
 46204   0079BC  0012               	return	
 46205                           
 46206                           ;../../VLCBlib_PIC/can18_ecan.c: 780:                 PIR5bits.IRXIF = 0;
 46207   0079BE  9E77               	bcf	119,7,c	;volatile
 46208   0079C0  0012               	return	
 46209   0079C2                     i2l14930:
 46210                           
 46211                           ;../../VLCBlib_PIC/can18_ecan.c: 785:             m->opc = ptr[6];
 46212   0079C2  EE20 F006          	lfsr	2,6
 46213   0079C6  5037               	movf	i2canFillRxFifo@ptr^0,w,c
 46214   0079C8  26D9               	addwf	fsr2l,f,c
 46215   0079CA  5038               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46216   0079CC  22DA               	addwfc	fsr2h,f,c
 46217   0079CE  EE10 F001          	lfsr	1,1
 46218   0079D2  5039               	movf	i2canFillRxFifo@m^0,w,c
 46219   0079D4  26E1               	addwf	fsr1l,f,c
 46220   0079D6  503A               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46221   0079D8  22E2               	addwfc	fsr1h,f,c
 46222   0079DA  CFDF FFE7          	movff	indf2,indf1
 46223                           
 46224                           ;../../VLCBlib_PIC/can18_ecan.c: 786:             m->bytes[0] = ptr[7];
 46225   0079DE  EE20 F007          	lfsr	2,7
 46226   0079E2  5037               	movf	i2canFillRxFifo@ptr^0,w,c
 46227   0079E4  26D9               	addwf	fsr2l,f,c
 46228   0079E6  5038               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46229   0079E8  22DA               	addwfc	fsr2h,f,c
 46230   0079EA  EE10 F002          	lfsr	1,2
 46231   0079EE  5039               	movf	i2canFillRxFifo@m^0,w,c
 46232   0079F0  26E1               	addwf	fsr1l,f,c
 46233   0079F2  503A               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46234   0079F4  22E2               	addwfc	fsr1h,f,c
 46235   0079F6  CFDF FFE7          	movff	indf2,indf1
 46236                           
 46237                           ;../../VLCBlib_PIC/can18_ecan.c: 787:             m->bytes[1] = ptr[8];
 46238   0079FA  EE20 F008          	lfsr	2,8
 46239   0079FE  5037               	movf	i2canFillRxFifo@ptr^0,w,c
 46240   007A00  26D9               	addwf	fsr2l,f,c
 46241   007A02  5038               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46242   007A04  22DA               	addwfc	fsr2h,f,c
 46243   007A06  EE10 F003          	lfsr	1,3
 46244   007A0A  5039               	movf	i2canFillRxFifo@m^0,w,c
 46245   007A0C  26E1               	addwf	fsr1l,f,c
 46246   007A0E  503A               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46247   007A10  22E2               	addwfc	fsr1h,f,c
 46248   007A12  CFDF FFE7          	movff	indf2,indf1
 46249                           
 46250                           ;../../VLCBlib_PIC/can18_ecan.c: 788:             m->bytes[2] = ptr[9];
 46251   007A16  EE20 F009          	lfsr	2,9
 46252   007A1A  5037               	movf	i2canFillRxFifo@ptr^0,w,c
 46253   007A1C  26D9               	addwf	fsr2l,f,c
 46254   007A1E  5038               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46255   007A20  22DA               	addwfc	fsr2h,f,c
 46256   007A22  EE10 F004          	lfsr	1,4
 46257   007A26  5039               	movf	i2canFillRxFifo@m^0,w,c
 46258   007A28  26E1               	addwf	fsr1l,f,c
 46259   007A2A  503A               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46260   007A2C  22E2               	addwfc	fsr1h,f,c
 46261   007A2E  CFDF FFE7          	movff	indf2,indf1
 46262                           
 46263                           ;../../VLCBlib_PIC/can18_ecan.c: 789:             m->bytes[3] = ptr[10];
 46264   007A32  EE20 F00A          	lfsr	2,10
 46265   007A36  5037               	movf	i2canFillRxFifo@ptr^0,w,c
 46266   007A38  26D9               	addwf	fsr2l,f,c
 46267   007A3A  5038               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46268   007A3C  22DA               	addwfc	fsr2h,f,c
 46269   007A3E  EE10 F005          	lfsr	1,5
 46270   007A42  5039               	movf	i2canFillRxFifo@m^0,w,c
 46271   007A44  26E1               	addwf	fsr1l,f,c
 46272   007A46  503A               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46273   007A48  22E2               	addwfc	fsr1h,f,c
 46274   007A4A  CFDF FFE7          	movff	indf2,indf1
 46275                           
 46276                           ;../../VLCBlib_PIC/can18_ecan.c: 790:             m->bytes[4] = ptr[11];
 46277   007A4E  EE20 F00B          	lfsr	2,11
 46278   007A52  5037               	movf	i2canFillRxFifo@ptr^0,w,c
 46279   007A54  26D9               	addwf	fsr2l,f,c
 46280   007A56  5038               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46281   007A58  22DA               	addwfc	fsr2h,f,c
 46282   007A5A  EE10 F006          	lfsr	1,6
 46283   007A5E  5039               	movf	i2canFillRxFifo@m^0,w,c
 46284   007A60  26E1               	addwf	fsr1l,f,c
 46285   007A62  503A               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46286   007A64  22E2               	addwfc	fsr1h,f,c
 46287   007A66  CFDF FFE7          	movff	indf2,indf1
 46288                           
 46289                           ;../../VLCBlib_PIC/can18_ecan.c: 791:             m->bytes[5] = ptr[12];
 46290   007A6A  EE20 F00C          	lfsr	2,12
 46291   007A6E  5037               	movf	i2canFillRxFifo@ptr^0,w,c
 46292   007A70  26D9               	addwf	fsr2l,f,c
 46293   007A72  5038               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46294   007A74  22DA               	addwfc	fsr2h,f,c
 46295   007A76  EE10 F007          	lfsr	1,7
 46296   007A7A  5039               	movf	i2canFillRxFifo@m^0,w,c
 46297   007A7C  26E1               	addwf	fsr1l,f,c
 46298   007A7E  503A               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46299   007A80  22E2               	addwfc	fsr1h,f,c
 46300   007A82  CFDF FFE7          	movff	indf2,indf1
 46301                           
 46302                           ;../../VLCBlib_PIC/can18_ecan.c: 792:             m->bytes[6] = ptr[13];
 46303   007A86  EE20 F00D          	lfsr	2,13
 46304   007A8A  5037               	movf	i2canFillRxFifo@ptr^0,w,c
 46305   007A8C  26D9               	addwf	fsr2l,f,c
 46306   007A8E  5038               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46307   007A90  22DA               	addwfc	fsr2h,f,c
 46308   007A92  EE10 F008          	lfsr	1,8
 46309   007A96  5039               	movf	i2canFillRxFifo@m^0,w,c
 46310   007A98  26E1               	addwf	fsr1l,f,c
 46311   007A9A  503A               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46312   007A9C  22E2               	addwfc	fsr1h,f,c
 46313   007A9E  CFDF FFE7          	movff	indf2,indf1
 46314                           
 46315                           ;../../VLCBlib_PIC/can18_ecan.c: 793:             m->len = ptr[5]&0xF;
 46316   007AA2  EE20 F005          	lfsr	2,5
 46317   007AA6  5037               	movf	i2canFillRxFifo@ptr^0,w,c
 46318   007AA8  26D9               	addwf	fsr2l,f,c
 46319   007AAA  5038               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46320   007AAC  22DA               	addwfc	fsr2h,f,c
 46321   007AAE  50DF               	movf	indf2,w,c
 46322   007AB0  0B0F               	andlw	15
 46323   007AB2  C039  FFD9         	movff	i2canFillRxFifo@m,fsr2l
 46324   007AB6  C03A  FFDA         	movff	i2canFillRxFifo@m+1,fsr2h
 46325   007ABA  6EDF               	movwf	indf2,c
 46326                           
 46327                           ;../../VLCBlib_PIC/can18_ecan.c: 796:         if (PIR5bits.IRXIF) {
 46328   007ABC  BE77               	btfsc	119,7,c	;volatile
 46329                           
 46330                           ;../../VLCBlib_PIC/can18_ecan.c: 797:             PIR5bits.IRXIF = 0;
 46331   007ABE  9E77               	bcf	119,7,c	;volatile
 46332                           
 46333                           ;../../VLCBlib_PIC/can18_ecan.c: 800:         ptr[0] &= 0x7f;
 46334   007AC0  C037  FFD9         	movff	i2canFillRxFifo@ptr,fsr2l
 46335   007AC4  C038  FFDA         	movff	i2canFillRxFifo@ptr+1,fsr2h
 46336   007AC8  0E7F               	movlw	127
 46337   007ACA  16DF               	andwf	indf2,f,c
 46338                           
 46339                           ;../../VLCBlib_PIC/can18_ecan.c: 801:         PIR5bits.FIFOWMIF = 0;
 46340   007ACC  9077               	bcf	119,0,c	;volatile
 46341   007ACE                     i2l14942:
 46342                           
 46343                           ;../../VLCBlib_PIC/can18_ecan.c: 766:     while (COMSTATbits.NOT_FIFOEMPTY) {
 46344   007ACE  AE71               	btfss	113,7,c	;volatile
 46345   007AD0  0012               	return	
 46346   007AD2  D757               	goto	i2l14908
 46347   007AD4                     __end_ofi2_canFillRxFifo:
 46348                           	callstack 0
 46349                           
 46350 ;; *************** function i2_updateModuleErrorStatus *****************
 46351 ;; Defined at:
 46352 ;;		line 583 in file "../../VLCBlib_PIC/mns.c"
 46353 ;; Parameters:    Size  Location     Type
 46354 ;;		None
 46355 ;; Auto vars:     Size  Location     Type
 46356 ;;		None
 46357 ;; Return value:  Size  Location     Type
 46358 ;;                  1    wreg      void 
 46359 ;; Registers used:
 46360 ;;		wreg, status,2, status,0
 46361 ;; Tracked objects:
 46362 ;;		On entry : 0/0
 46363 ;;		On exit  : 0/0
 46364 ;;		Unchanged: 0/0
 46365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46370 ;;Total ram usage:        0 bytes
 46371 ;; Hardware stack levels used: 1
 46372 ;; This function calls:
 46373 ;;		Nothing
 46374 ;; This function is called by:
 46375 ;;		i2_checkTxFifo
 46376 ;;		i2_checkCANTimeout
 46377 ;;		i2_canTxError
 46378 ;;		i2_canFillRxFifo
 46379 ;; This function uses a non-reentrant model
 46380 ;;
 46381                           
 46382                           	psect	text214
 46383   00C370                     __ptext214:
 46384                           	callstack 0
 46385   00C370                     i2_updateModuleErrorStatus:
 46386                           	callstack 3
 46387                           
 46388                           ;../../VLCBlib_PIC/mns.c: 584:     if (mnsDiagnostics[0x00].asBytes.lo < 0xFF) {
 46389                           
 46390                           ;incstack = 0
 46391   00C370  0101               	movlb	1	; () banked
 46392   00C372  299A               	incf	_mnsDiagnostics& (0+255),w,b
 46393   00C374  B4D8               	btfsc	status,2,c
 46394   00C376  0012               	return	
 46395                           
 46396                           ; BSR set to: 1
 46397                           ;../../VLCBlib_PIC/mns.c: 585:         mnsDiagnostics[0x00].asBytes.lo++;
 46398   00C378  2B9A               	incf	_mnsDiagnostics& (0+255),f,b
 46399                           
 46400                           ; BSR set to: 1
 46401   00C37A  0012               	return		;funcret
 46402   00C37C                     __end_ofi2_updateModuleErrorStatus:
 46403                           	callstack 0
 46404                           
 46405 ;; *************** function i2_getNextWriteMessage *****************
 46406 ;; Defined at:
 46407 ;;		line 79 in file "../../VLCBlib_PIC/messageQueue.c"
 46408 ;; Parameters:    Size  Location     Type
 46409 ;;  q               1    0[COMRAM] PTR struct MessageQueue
 46410 ;;		 -> rxQueue(5), 
 46411 ;; Auto vars:     Size  Location     Type
 46412 ;;  wr              1   11[COMRAM] unsigned char 
 46413 ;; Return value:  Size  Location     Type
 46414 ;;                  2    0[COMRAM] PTR struct Message
 46415 ;; Registers used:
 46416 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 46417 ;; Tracked objects:
 46418 ;;		On entry : 0/0
 46419 ;;		On exit  : 0/0
 46420 ;;		Unchanged: 0/0
 46421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46422 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46423 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46424 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46425 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46426 ;;Total ram usage:       12 bytes
 46427 ;; Hardware stack levels used: 1
 46428 ;; This function calls:
 46429 ;;		Nothing
 46430 ;; This function is called by:
 46431 ;;		i2_checkTxFifo
 46432 ;;		i2_canFillRxFifo
 46433 ;; This function uses a non-reentrant model
 46434 ;;
 46435                           
 46436                           	psect	text215
 46437   008C2E                     __ptext215:
 46438                           	callstack 0
 46439   008C2E                     i2_getNextWriteMessage:
 46440                           	callstack 3
 46441                           
 46442                           ;../../VLCBlib_PIC/messageQueue.c: 80:     uint8_t wr;;../../VLCBlib_PIC/messageQueue.c:
      +                           81:     if (((q->writeIndex+1)&((q->size)-1)) == q->readIndex) return ((void*)0);
 46443                           
 46444                           ; BSR set to: 1
 46445                           ;incstack = 0
 46446   008C2E  502B               	movf	i2getNextWriteMessage@q^0,w,c
 46447   008C30  6ED9               	movwf	fsr2l,c
 46448   008C32  6ADA               	clrf	fsr2h,c
 46449   008C34  0E02               	movlw	2
 46450   008C36  26D9               	addwf	fsr2l,f,c
 46451   008C38  50DF               	movf	indf2,w,c
 46452   008C3A  6E2D               	movwf	??i2_getNextWriteMessage^0,c
 46453   008C3C  6A2E               	clrf	(??i2_getNextWriteMessage+1)^0,c
 46454   008C3E  502B               	movf	i2getNextWriteMessage@q^0,w,c
 46455   008C40  6ED9               	movwf	fsr2l,c
 46456   008C42  6ADA               	clrf	fsr2h,c
 46457   008C44  0E04               	movlw	4
 46458   008C46  26D9               	addwf	fsr2l,f,c
 46459   008C48  50DF               	movf	indf2,w,c
 46460   008C4A  6E2F               	movwf	(??i2_getNextWriteMessage+2)^0,c
 46461   008C4C  0EFF               	movlw	255
 46462   008C4E  242F               	addwf	(??i2_getNextWriteMessage+2)^0,w,c
 46463   008C50  6E30               	movwf	(??i2_getNextWriteMessage+3)^0,c
 46464   008C52  6A31               	clrf	(??i2_getNextWriteMessage+4)^0,c
 46465   008C54  0EFF               	movlw	255
 46466   008C56  2231               	addwfc	(??i2_getNextWriteMessage+4)^0,f,c
 46467   008C58  502B               	movf	i2getNextWriteMessage@q^0,w,c
 46468   008C5A  6ED9               	movwf	fsr2l,c
 46469   008C5C  6ADA               	clrf	fsr2h,c
 46470   008C5E  0E03               	movlw	3
 46471   008C60  26D9               	addwf	fsr2l,f,c
 46472   008C62  50DF               	movf	indf2,w,c
 46473   008C64  6E32               	movwf	(??i2_getNextWriteMessage+5)^0,c
 46474   008C66  6A33               	clrf	(??i2_getNextWriteMessage+6)^0,c
 46475   008C68  0E01               	movlw	1
 46476   008C6A  2632               	addwf	(??i2_getNextWriteMessage+5)^0,f,c
 46477   008C6C  0E00               	movlw	0
 46478   008C6E  2233               	addwfc	(??i2_getNextWriteMessage+6)^0,f,c
 46479   008C70  5030               	movf	(??i2_getNextWriteMessage+3)^0,w,c
 46480   008C72  1432               	andwf	(??i2_getNextWriteMessage+5)^0,w,c
 46481   008C74  6E34               	movwf	(??i2_getNextWriteMessage+7)^0,c
 46482   008C76  5031               	movf	(??i2_getNextWriteMessage+4)^0,w,c
 46483   008C78  1433               	andwf	(??i2_getNextWriteMessage+6)^0,w,c
 46484   008C7A  6E35               	movwf	(??i2_getNextWriteMessage+8)^0,c
 46485   008C7C  502D               	movf	??i2_getNextWriteMessage^0,w,c
 46486   008C7E  1834               	xorwf	(??i2_getNextWriteMessage+7)^0,w,c
 46487   008C80  E109               	bnz	i2l12404
 46488   008C82  502E               	movf	(??i2_getNextWriteMessage+1)^0,w,c
 46489   008C84  1835               	xorwf	(??i2_getNextWriteMessage+8)^0,w,c
 46490   008C86  A4D8               	btfss	status,2,c
 46491   008C88  D005               	goto	i2l12404
 46492   008C8A  0E00               	movlw	0
 46493   008C8C  6E2B               	movwf	?i2_getNextWriteMessage^0,c
 46494   008C8E  0E00               	movlw	0
 46495   008C90  6E2C               	movwf	(?i2_getNextWriteMessage+1)^0,c
 46496   008C92  0012               	return	
 46497   008C94                     i2l12404:
 46498                           
 46499                           ;../../VLCBlib_PIC/messageQueue.c: 82:     wr = q->writeIndex;
 46500   008C94  502B               	movf	i2getNextWriteMessage@q^0,w,c
 46501   008C96  6ED9               	movwf	fsr2l,c
 46502   008C98  6ADA               	clrf	fsr2h,c
 46503   008C9A  0E03               	movlw	3
 46504   008C9C  26D9               	addwf	fsr2l,f,c
 46505   008C9E  50DF               	movf	indf2,w,c
 46506   008CA0  6E36               	movwf	i2getNextWriteMessage@wr^0,c
 46507                           
 46508                           ;../../VLCBlib_PIC/messageQueue.c: 83:     q->writeIndex++;
 46509   008CA2  502B               	movf	i2getNextWriteMessage@q^0,w,c
 46510   008CA4  6ED9               	movwf	fsr2l,c
 46511   008CA6  6ADA               	clrf	fsr2h,c
 46512   008CA8  0E03               	movlw	3
 46513   008CAA  26D9               	addwf	fsr2l,f,c
 46514   008CAC  2ADF               	incf	indf2,f,c
 46515                           
 46516                           ;../../VLCBlib_PIC/messageQueue.c: 84:     if (q->writeIndex >= q->size) q->writeIndex =
      +                           0;
 46517   008CAE  502B               	movf	i2getNextWriteMessage@q^0,w,c
 46518   008CB0  6ED9               	movwf	fsr2l,c
 46519   008CB2  6ADA               	clrf	fsr2h,c
 46520   008CB4  0E04               	movlw	4
 46521   008CB6  26D9               	addwf	fsr2l,f,c
 46522   008CB8  502B               	movf	i2getNextWriteMessage@q^0,w,c
 46523   008CBA  6EE1               	movwf	fsr1l,c
 46524   008CBC  6AE2               	clrf	fsr1h,c
 46525   008CBE  0E03               	movlw	3
 46526   008CC0  26E1               	addwf	fsr1l,f,c
 46527   008CC2  50DE               	movf	postinc2,w,c
 46528   008CC4  5CE6               	subwf	postinc1,w,c
 46529   008CC6  A0D8               	btfss	status,0,c
 46530   008CC8  D006               	goto	i2l12410
 46531   008CCA  502B               	movf	i2getNextWriteMessage@q^0,w,c
 46532   008CCC  6ED9               	movwf	fsr2l,c
 46533   008CCE  6ADA               	clrf	fsr2h,c
 46534   008CD0  0E03               	movlw	3
 46535   008CD2  26D9               	addwf	fsr2l,f,c
 46536   008CD4  6ADF               	clrf	indf2,c
 46537   008CD6                     i2l12410:
 46538                           
 46539                           ;../../VLCBlib_PIC/messageQueue.c: 85:     return &(q->messages[wr]);
 46540   008CD6  5036               	movf	i2getNextWriteMessage@wr^0,w,c
 46541   008CD8  0D09               	mullw	9
 46542   008CDA  CFF3 F02D          	movff	prodl,??i2_getNextWriteMessage
 46543   008CDE  CFF4 F02E          	movff	prodh,??i2_getNextWriteMessage+1
 46544   008CE2  502B               	movf	i2getNextWriteMessage@q^0,w,c
 46545   008CE4  6ED9               	movwf	fsr2l,c
 46546   008CE6  6ADA               	clrf	fsr2h,c
 46547   008CE8  CFDE F02F          	movff	postinc2,??i2_getNextWriteMessage+2
 46548   008CEC  CFDD F030          	movff	postdec2,??i2_getNextWriteMessage+3
 46549   008CF0  502D               	movf	??i2_getNextWriteMessage^0,w,c
 46550   008CF2  242F               	addwf	(??i2_getNextWriteMessage+2)^0,w,c
 46551   008CF4  6E2B               	movwf	?i2_getNextWriteMessage^0,c
 46552   008CF6  502E               	movf	(??i2_getNextWriteMessage+1)^0,w,c
 46553   008CF8  2030               	addwfc	(??i2_getNextWriteMessage+3)^0,w,c
 46554   008CFA  6E2C               	movwf	(?i2_getNextWriteMessage+1)^0,c
 46555   008CFC  0012               	return		;funcret
 46556   008CFE                     __end_ofi2_getNextWriteMessage:
 46557                           	callstack 0
 46558                           
 46559 ;; *************** function i2_getBufferPointer *****************
 46560 ;; Defined at:
 46561 ;;		line 588 in file "../../VLCBlib_PIC/can18_ecan.c"
 46562 ;; Parameters:    Size  Location     Type
 46563 ;;  b               1    wreg     unsigned char 
 46564 ;; Auto vars:     Size  Location     Type
 46565 ;;  b               1    2[COMRAM] unsigned char 
 46566 ;; Return value:  Size  Location     Type
 46567 ;;                  2    0[COMRAM] PTR unsigned char 
 46568 ;; Registers used:
 46569 ;;		wreg, status,2, status,0
 46570 ;; Tracked objects:
 46571 ;;		On entry : 0/0
 46572 ;;		On exit  : 0/0
 46573 ;;		Unchanged: 0/0
 46574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46576 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46578 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46579 ;;Total ram usage:        3 bytes
 46580 ;; Hardware stack levels used: 1
 46581 ;; This function calls:
 46582 ;;		Nothing
 46583 ;; This function is called by:
 46584 ;;		i2_canFillRxFifo
 46585 ;; This function uses a non-reentrant model
 46586 ;;
 46587                           
 46588                           	psect	text216
 46589   00A2EA                     __ptext216:
 46590                           	callstack 0
 46591   00A2EA                     i2_getBufferPointer:
 46592                           	callstack 3
 46593                           
 46594                           ;incstack = 0
 46595                           ;i2getBufferPointer@b stored from wreg
 46596   00A2EA  6E2D               	movwf	i2getBufferPointer@b^0,c
 46597                           
 46598                           ;../../VLCBlib_PIC/can18_ecan.c: 589:     switch (b) {
 46599   00A2EC  D02D               	goto	i2l13428
 46600   00A2EE                     i2l13390:
 46601                           
 46602                           ;../../VLCBlib_PIC/can18_ecan.c: 591:             return (uint8_t*) & RXB0CON;
 46603   00A2EE  0E60               	movlw	96
 46604   00A2F0  6E2B               	movwf	?i2_getBufferPointer^0,c
 46605   00A2F2  0E0F               	movlw	15
 46606   00A2F4  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 46607   00A2F6  0012               	return	
 46608   00A2F8                     i2l13394:
 46609                           
 46610                           ;../../VLCBlib_PIC/can18_ecan.c: 593:             return (uint8_t*) & RXB1CON;
 46611   00A2F8  0E30               	movlw	48
 46612   00A2FA  6E2B               	movwf	?i2_getBufferPointer^0,c
 46613   00A2FC  0E0F               	movlw	15
 46614   00A2FE  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 46615   00A300  0012               	return	
 46616   00A302                     i2l13398:
 46617                           
 46618                           ;../../VLCBlib_PIC/can18_ecan.c: 595:             return (uint8_t*) & B0CON;
 46619   00A302  0E80               	movlw	128
 46620   00A304  6E2B               	movwf	?i2_getBufferPointer^0,c
 46621   00A306  0E0E               	movlw	14
 46622   00A308  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 46623   00A30A  0012               	return	
 46624   00A30C                     i2l13402:
 46625                           
 46626                           ;../../VLCBlib_PIC/can18_ecan.c: 597:             return (uint8_t*) & B1CON;
 46627   00A30C  0E90               	movlw	144
 46628   00A30E  6E2B               	movwf	?i2_getBufferPointer^0,c
 46629   00A310  0E0E               	movlw	14
 46630   00A312  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 46631   00A314  0012               	return	
 46632   00A316                     i2l13406:
 46633                           
 46634                           ;../../VLCBlib_PIC/can18_ecan.c: 599:             return (uint8_t*) & B2CON;
 46635   00A316  0EA0               	movlw	160
 46636   00A318  6E2B               	movwf	?i2_getBufferPointer^0,c
 46637   00A31A  0E0E               	movlw	14
 46638   00A31C  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 46639   00A31E  0012               	return	
 46640   00A320                     i2l13410:
 46641                           
 46642                           ;../../VLCBlib_PIC/can18_ecan.c: 601:             return (uint8_t*) & B3CON;
 46643   00A320  0EB0               	movlw	176
 46644   00A322  6E2B               	movwf	?i2_getBufferPointer^0,c
 46645   00A324  0E0E               	movlw	14
 46646   00A326  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 46647   00A328  0012               	return	
 46648   00A32A                     i2l13414:
 46649                           
 46650                           ;../../VLCBlib_PIC/can18_ecan.c: 603:             return (uint8_t*) & B4CON;
 46651   00A32A  0EC0               	movlw	192
 46652   00A32C  6E2B               	movwf	?i2_getBufferPointer^0,c
 46653   00A32E  0E0E               	movlw	14
 46654   00A330  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 46655   00A332  0012               	return	
 46656   00A334                     i2l13418:
 46657                           
 46658                           ;../../VLCBlib_PIC/can18_ecan.c: 605:             return (uint8_t*) & B5CON;
 46659   00A334  0ED0               	movlw	208
 46660   00A336  6E2B               	movwf	?i2_getBufferPointer^0,c
 46661   00A338  0E0E               	movlw	14
 46662   00A33A  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 46663   00A33C  0012               	return	
 46664   00A33E                     i2l13422:
 46665                           
 46666                           ;../../VLCBlib_PIC/can18_ecan.c: 607:             return ((void*)0);
 46667   00A33E  0E00               	movlw	0
 46668   00A340  6E2B               	movwf	?i2_getBufferPointer^0,c
 46669   00A342  0E00               	movlw	0
 46670   00A344  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 46671   00A346  0012               	return	
 46672   00A348                     i2l13428:
 46673   00A348  502D               	movf	i2getBufferPointer@b^0,w,c
 46674                           
 46675                           ; Switch size 1, requested type "simple"
 46676                           ; Number of cases is 8, Range of values is 0 to 7
 46677                           ; switch strategies available:
 46678                           ; Name         Instructions Cycles
 46679                           ; simple_byte           25    13 (average)
 46680                           ;	Chosen strategy is simple_byte
 46681   00A34A  0A00               	xorlw	0	; case 0
 46682   00A34C  B4D8               	btfsc	status,2,c
 46683   00A34E  D7CF               	goto	i2l13390
 46684   00A350  0A01               	xorlw	1	; case 1
 46685   00A352  B4D8               	btfsc	status,2,c
 46686   00A354  D7D1               	goto	i2l13394
 46687   00A356  0A03               	xorlw	3	; case 2
 46688   00A358  B4D8               	btfsc	status,2,c
 46689   00A35A  D7D3               	goto	i2l13398
 46690   00A35C  0A01               	xorlw	1	; case 3
 46691   00A35E  B4D8               	btfsc	status,2,c
 46692   00A360  D7D5               	goto	i2l13402
 46693   00A362  0A07               	xorlw	7	; case 4
 46694   00A364  B4D8               	btfsc	status,2,c
 46695   00A366  D7D7               	goto	i2l13406
 46696   00A368  0A01               	xorlw	1	; case 5
 46697   00A36A  B4D8               	btfsc	status,2,c
 46698   00A36C  D7D9               	goto	i2l13410
 46699   00A36E  0A03               	xorlw	3	; case 6
 46700   00A370  B4D8               	btfsc	status,2,c
 46701   00A372  D7DB               	goto	i2l13414
 46702   00A374  0A01               	xorlw	1	; case 7
 46703   00A376  B4D8               	btfsc	status,2,c
 46704   00A378  D7DD               	goto	i2l13418
 46705   00A37A  D7E1               	goto	i2l13422
 46706   00A37C                     __end_ofi2_getBufferPointer:
 46707                           	callstack 0
 46708                           
 46709 ;; *************** function _APP_highIsr *****************
 46710 ;; Defined at:
 46711 ;;		line 592 in file "../main.c"
 46712 ;; Parameters:    Size  Location     Type
 46713 ;;		None
 46714 ;; Auto vars:     Size  Location     Type
 46715 ;;		None
 46716 ;; Return value:  Size  Location     Type
 46717 ;;                  1    wreg      void 
 46718 ;; Registers used:
 46719 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46720 ;; Tracked objects:
 46721 ;;		On entry : 0/0
 46722 ;;		On exit  : 0/0
 46723 ;;		Unchanged: 0/0
 46724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46729 ;;Total ram usage:        0 bytes
 46730 ;; Hardware stack levels used: 1
 46731 ;; Hardware stack levels required when called: 2
 46732 ;; This function calls:
 46733 ;;		_timer1DoneInterruptHandler
 46734 ;;		_timer3DoneInterruptHandler
 46735 ;; This function is called by:
 46736 ;;		_highIsr
 46737 ;; This function uses a non-reentrant model
 46738 ;;
 46739                           
 46740                           	psect	text217
 46741   00C2D4                     __ptext217:
 46742                           	callstack 0
 46743   00C2D4                     _APP_highIsr:
 46744                           	callstack 3
 46745                           
 46746                           ;../main.c: 595:     if (PIR1bits.TMR1IF) {
 46747                           
 46748                           ;incstack = 0
 46749   00C2D4  A09E               	btfss	158,0,c	;volatile
 46750   00C2D6  D003               	goto	i2l15288
 46751                           
 46752                           ;../main.c: 596:         timer1DoneInterruptHandler();
 46753   00C2D8  ECF1  F060         	call	_timer1DoneInterruptHandler	;wreg free
 46754                           
 46755                           ;../main.c: 597:         PIR1bits.TMR1IF = 0;
 46756   00C2DC  909E               	bcf	158,0,c	;volatile
 46757   00C2DE                     i2l15288:
 46758                           
 46759                           ;../main.c: 599:     if (PIR2bits.TMR3IF) {
 46760   00C2DE  A2A1               	btfss	161,1,c	;volatile
 46761   00C2E0  0012               	return	
 46762                           
 46763                           ;../main.c: 600:         timer3DoneInterruptHandler();
 46764   00C2E2  ECB0  F060         	call	_timer3DoneInterruptHandler	;wreg free
 46765                           
 46766                           ;../main.c: 601:         PIR2bits.TMR3IF = 0;
 46767   00C2E6  92A1               	bcf	161,1,c	;volatile
 46768   00C2E8  0012               	return		;funcret
 46769   00C2EA                     __end_of_APP_highIsr:
 46770                           	callstack 0
 46771                           
 46772 ;; *************** function _timer3DoneInterruptHandler *****************
 46773 ;; Defined at:
 46774 ;;		line 240 in file "../servo.c"
 46775 ;; Parameters:    Size  Location     Type
 46776 ;;		None
 46777 ;; Auto vars:     Size  Location     Type
 46778 ;;		None
 46779 ;; Return value:  Size  Location     Type
 46780 ;;                  1    wreg      void 
 46781 ;; Registers used:
 46782 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46783 ;; Tracked objects:
 46784 ;;		On entry : 0/0
 46785 ;;		On exit  : 0/0
 46786 ;;		Unchanged: 0/0
 46787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46792 ;;Total ram usage:        0 bytes
 46793 ;; Hardware stack levels used: 1
 46794 ;; Hardware stack levels required when called: 1
 46795 ;; This function calls:
 46796 ;;		i2_getNV
 46797 ;;		i2_setOutputPin
 46798 ;; This function is called by:
 46799 ;;		_APP_highIsr
 46800 ;; This function uses a non-reentrant model
 46801 ;;
 46802                           
 46803                           	psect	text218
 46804   00C160                     __ptext218:
 46805                           	callstack 0
 46806   00C160                     _timer3DoneInterruptHandler:
 46807                           	callstack 3
 46808                           
 46809                           ;../servo.c: 241:     T3CONbits.TMR3ON = 0;
 46810                           
 46811                           ;incstack = 0
 46812   00C160  90B1               	bcf	177,0,c	;volatile
 46813                           
 46814                           ;../servo.c: 242:     setOutputPin(servoInBlock+8, (uint8_t)getNV((16 + 7*(servoInBlock+
      +                          8) + 1)) & 0x20);
 46815   00C162  0100               	movlb	0	; () banked
 46816   00C164  51C4               	movf	_servoInBlock& (0+255),w,b
 46817   00C166  0D07               	mullw	7
 46818   00C168  50F3               	movf	243,w,c
 46819   00C16A  0F49               	addlw	73
 46820   00C16C  EC8F  F05D         	call	i2_getNV
 46821   00C170  502B               	movf	?i2_getNV^0,w,c
 46822   00C172  0B20               	andlw	32
 46823   00C174  6E2F               	movwf	i2setOutputPin@state^0,c
 46824   00C176  0100               	movlb	0	; () banked
 46825   00C178  51C4               	movf	_servoInBlock& (0+255),w,b
 46826   00C17A  0F08               	addlw	8
 46827   00C17C  EC34  F039         	call	i2_setOutputPin
 46828   00C180  0012               	return		;funcret
 46829   00C182                     __end_of_timer3DoneInterruptHandler:
 46830                           	callstack 0
 46831                           
 46832 ;; *************** function _timer1DoneInterruptHandler *****************
 46833 ;; Defined at:
 46834 ;;		line 235 in file "../servo.c"
 46835 ;; Parameters:    Size  Location     Type
 46836 ;;		None
 46837 ;; Auto vars:     Size  Location     Type
 46838 ;;		None
 46839 ;; Return value:  Size  Location     Type
 46840 ;;                  1    wreg      void 
 46841 ;; Registers used:
 46842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46843 ;; Tracked objects:
 46844 ;;		On entry : 0/0
 46845 ;;		On exit  : 0/0
 46846 ;;		Unchanged: 0/0
 46847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46852 ;;Total ram usage:        0 bytes
 46853 ;; Hardware stack levels used: 1
 46854 ;; Hardware stack levels required when called: 1
 46855 ;; This function calls:
 46856 ;;		i2_getNV
 46857 ;;		i2_setOutputPin
 46858 ;; This function is called by:
 46859 ;;		_APP_highIsr
 46860 ;; This function uses a non-reentrant model
 46861 ;;
 46862                           
 46863                           	psect	text219
 46864   00C1E2                     __ptext219:
 46865                           	callstack 0
 46866   00C1E2                     _timer1DoneInterruptHandler:
 46867                           	callstack 3
 46868                           
 46869                           ;../servo.c: 236:     T1CONbits.TMR1ON = 0;
 46870                           
 46871                           ;incstack = 0
 46872   00C1E2  90CD               	bcf	205,0,c	;volatile
 46873                           
 46874                           ;../servo.c: 237:     setOutputPin(servoInBlock, (uint8_t)getNV((16 + 7*(servoInBlock) +
      +                           1)) & 0x20);
 46875   00C1E4  0100               	movlb	0	; () banked
 46876   00C1E6  51C4               	movf	_servoInBlock& (0+255),w,b
 46877   00C1E8  0D07               	mullw	7
 46878   00C1EA  50F3               	movf	243,w,c
 46879   00C1EC  0F11               	addlw	17
 46880   00C1EE  EC8F  F05D         	call	i2_getNV
 46881   00C1F2  502B               	movf	?i2_getNV^0,w,c
 46882   00C1F4  0B20               	andlw	32
 46883   00C1F6  6E2F               	movwf	i2setOutputPin@state^0,c
 46884   00C1F8  0100               	movlb	0	; () banked
 46885   00C1FA  51C4               	movf	_servoInBlock& (0+255),w,b
 46886   00C1FC  EC34  F039         	call	i2_setOutputPin
 46887   00C200  0012               	return		;funcret
 46888   00C202                     __end_of_timer1DoneInterruptHandler:
 46889                           	callstack 0
 46890                           
 46891 ;; *************** function i2_setOutputPin *****************
 46892 ;; Defined at:
 46893 ;;		line 254 in file "../digitalOut.c"
 46894 ;; Parameters:    Size  Location     Type
 46895 ;;  io              1    wreg     unsigned char 
 46896 ;;  state           1    4[COMRAM] enum E12700
 46897 ;; Auto vars:     Size  Location     Type
 46898 ;;  io              1    7[COMRAM] unsigned char 
 46899 ;; Return value:  Size  Location     Type
 46900 ;;                  1    wreg      void 
 46901 ;; Registers used:
 46902 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 46903 ;; Tracked objects:
 46904 ;;		On entry : 0/0
 46905 ;;		On exit  : 0/0
 46906 ;;		Unchanged: 0/0
 46907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46908 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46909 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46910 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46911 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46912 ;;Total ram usage:        4 bytes
 46913 ;; Hardware stack levels used: 1
 46914 ;; This function calls:
 46915 ;;		Nothing
 46916 ;; This function is called by:
 46917 ;;		_timer1DoneInterruptHandler
 46918 ;;		_timer3DoneInterruptHandler
 46919 ;; This function uses a non-reentrant model
 46920 ;;
 46921                           
 46922                           	psect	text220
 46923   007268                     __ptext220:
 46924                           	callstack 0
 46925   007268                     i2_setOutputPin:
 46926                           	callstack 3
 46927                           
 46928                           ;incstack = 0
 46929                           ;i2setOutputPin@io stored from wreg
 46930   007268  6E32               	movwf	i2setOutputPin@io^0,c
 46931                           
 46932                           ;../digitalOut.c: 255:     switch (configs[io].port) {
 46933   00726A  D0BA               	goto	i2l13328
 46934   00726C                     i2l13308:
 46935                           
 46936                           ;../digitalOut.c: 257:             if (state) {
 46937   00726C  502F               	movf	i2setOutputPin@state^0,w,c
 46938   00726E  B4D8               	btfsc	status,2,c
 46939   007270  D01D               	goto	i2l13312
 46940                           
 46941                           ;../digitalOut.c: 259:                LATA |= (1<<configs[io].no);
 46942   007272  5032               	movf	i2setOutputPin@io^0,w,c
 46943   007274  0D04               	mullw	4
 46944   007276  0E02               	movlw	2
 46945   007278  26F3               	addwf	243,f,c
 46946   00727A  0E00               	movlw	0
 46947   00727C  22F4               	addwfc	244,f,c
 46948   00727E  0E35               	movlw	low _configs
 46949   007280  24F3               	addwf	243,w,c
 46950   007282  6EF6               	movwf	tblptrl,c
 46951   007284  0EEE               	movlw	high _configs
 46952   007286  20F4               	addwfc	244,w,c
 46953   007288  6EF7               	movwf	tblptrh,c
 46954   00728A                     	if	1	;There are 3 active tblptr bytes
 46955   00728A  6AF8               	clrf	tblptru,c
 46956   00728C  0E00               	movlw	low (__mediumconst shr (0+16))
 46957   00728E  22F8               	addwfc	tblptru,f,c
 46958   007290                     	endif
 46959   007290  0008               	tblrd		*
 46960   007292  CFF5 F030          	movff	tablat,??i2_setOutputPin
 46961   007296  0E01               	movlw	1
 46962   007298  6E31               	movwf	(??i2_setOutputPin+1)^0,c
 46963   00729A  2A30               	incf	??i2_setOutputPin^0,f,c
 46964   00729C  D002               	goto	i2u1221_44
 46965   00729E                     i2u1221_45:
 46966   00729E  90D8               	bcf	status,0,c
 46967   0072A0  3631               	rlcf	(??i2_setOutputPin+1)^0,f,c
 46968   0072A2                     i2u1221_44:
 46969   0072A2  2E30               	decfsz	??i2_setOutputPin^0,f,c
 46970   0072A4  D7FC               	goto	i2u1221_45
 46971   0072A6  5031               	movf	(??i2_setOutputPin+1)^0,w,c
 46972   0072A8  1289               	iorwf	137,f,c	;volatile
 46973                           
 46974                           ;../digitalOut.c: 260:             } else {
 46975   0072AA  0012               	return	
 46976   0072AC                     i2l13312:
 46977                           
 46978                           ;../digitalOut.c: 262:                 LATA &= ~(1<<configs[io].no);
 46979   0072AC  5032               	movf	i2setOutputPin@io^0,w,c
 46980   0072AE  0D04               	mullw	4
 46981   0072B0  0E02               	movlw	2
 46982   0072B2  26F3               	addwf	243,f,c
 46983   0072B4  0E00               	movlw	0
 46984   0072B6  22F4               	addwfc	244,f,c
 46985   0072B8  0E35               	movlw	low _configs
 46986   0072BA  24F3               	addwf	243,w,c
 46987   0072BC  6EF6               	movwf	tblptrl,c
 46988   0072BE  0EEE               	movlw	high _configs
 46989   0072C0  20F4               	addwfc	244,w,c
 46990   0072C2  6EF7               	movwf	tblptrh,c
 46991   0072C4                     	if	1	;There are 3 active tblptr bytes
 46992   0072C4  6AF8               	clrf	tblptru,c
 46993   0072C6  0E00               	movlw	low (__mediumconst shr (0+16))
 46994   0072C8  22F8               	addwfc	tblptru,f,c
 46995   0072CA                     	endif
 46996   0072CA  0008               	tblrd		*
 46997   0072CC  CFF5 F030          	movff	tablat,??i2_setOutputPin
 46998   0072D0  0E01               	movlw	1
 46999   0072D2  6E31               	movwf	(??i2_setOutputPin+1)^0,c
 47000   0072D4  2A30               	incf	??i2_setOutputPin^0,f,c
 47001   0072D6  D002               	goto	i2u1222_44
 47002   0072D8                     i2u1222_45:
 47003   0072D8  90D8               	bcf	status,0,c
 47004   0072DA  3631               	rlcf	(??i2_setOutputPin+1)^0,f,c
 47005   0072DC                     i2u1222_44:
 47006   0072DC  2E30               	decfsz	??i2_setOutputPin^0,f,c
 47007   0072DE  D7FC               	goto	i2u1222_45
 47008   0072E0  5031               	movf	(??i2_setOutputPin+1)^0,w,c
 47009   0072E2  0AFF               	xorlw	255
 47010   0072E4  1689               	andwf	137,f,c	;volatile
 47011   0072E6  0012               	return	
 47012   0072E8                     i2l13314:
 47013                           
 47014                           ;../digitalOut.c: 266:             if (state) {
 47015   0072E8  502F               	movf	i2setOutputPin@state^0,w,c
 47016   0072EA  B4D8               	btfsc	status,2,c
 47017   0072EC  D01D               	goto	i2l13318
 47018                           
 47019                           ;../digitalOut.c: 268:                 LATB |= (1<<configs[io].no);
 47020   0072EE  5032               	movf	i2setOutputPin@io^0,w,c
 47021   0072F0  0D04               	mullw	4
 47022   0072F2  0E02               	movlw	2
 47023   0072F4  26F3               	addwf	243,f,c
 47024   0072F6  0E00               	movlw	0
 47025   0072F8  22F4               	addwfc	244,f,c
 47026   0072FA  0E35               	movlw	low _configs
 47027   0072FC  24F3               	addwf	243,w,c
 47028   0072FE  6EF6               	movwf	tblptrl,c
 47029   007300  0EEE               	movlw	high _configs
 47030   007302  20F4               	addwfc	244,w,c
 47031   007304  6EF7               	movwf	tblptrh,c
 47032   007306                     	if	1	;There are 3 active tblptr bytes
 47033   007306  6AF8               	clrf	tblptru,c
 47034   007308  0E00               	movlw	low (__mediumconst shr (0+16))
 47035   00730A  22F8               	addwfc	tblptru,f,c
 47036   00730C                     	endif
 47037   00730C  0008               	tblrd		*
 47038   00730E  CFF5 F030          	movff	tablat,??i2_setOutputPin
 47039   007312  0E01               	movlw	1
 47040   007314  6E31               	movwf	(??i2_setOutputPin+1)^0,c
 47041   007316  2A30               	incf	??i2_setOutputPin^0,f,c
 47042   007318  D002               	goto	i2u1224_44
 47043   00731A                     i2u1224_45:
 47044   00731A  90D8               	bcf	status,0,c
 47045   00731C  3631               	rlcf	(??i2_setOutputPin+1)^0,f,c
 47046   00731E                     i2u1224_44:
 47047   00731E  2E30               	decfsz	??i2_setOutputPin^0,f,c
 47048   007320  D7FC               	goto	i2u1224_45
 47049   007322  5031               	movf	(??i2_setOutputPin+1)^0,w,c
 47050   007324  128A               	iorwf	138,f,c	;volatile
 47051                           
 47052                           ;../digitalOut.c: 269:             } else {
 47053   007326  0012               	return	
 47054   007328                     i2l13318:
 47055                           
 47056                           ;../digitalOut.c: 271:                 LATB &= ~(1<<configs[io].no);
 47057   007328  5032               	movf	i2setOutputPin@io^0,w,c
 47058   00732A  0D04               	mullw	4
 47059   00732C  0E02               	movlw	2
 47060   00732E  26F3               	addwf	243,f,c
 47061   007330  0E00               	movlw	0
 47062   007332  22F4               	addwfc	244,f,c
 47063   007334  0E35               	movlw	low _configs
 47064   007336  24F3               	addwf	243,w,c
 47065   007338  6EF6               	movwf	tblptrl,c
 47066   00733A  0EEE               	movlw	high _configs
 47067   00733C  20F4               	addwfc	244,w,c
 47068   00733E  6EF7               	movwf	tblptrh,c
 47069   007340                     	if	1	;There are 3 active tblptr bytes
 47070   007340  6AF8               	clrf	tblptru,c
 47071   007342  0E00               	movlw	low (__mediumconst shr (0+16))
 47072   007344  22F8               	addwfc	tblptru,f,c
 47073   007346                     	endif
 47074   007346  0008               	tblrd		*
 47075   007348  CFF5 F030          	movff	tablat,??i2_setOutputPin
 47076   00734C  0E01               	movlw	1
 47077   00734E  6E31               	movwf	(??i2_setOutputPin+1)^0,c
 47078   007350  2A30               	incf	??i2_setOutputPin^0,f,c
 47079   007352  D002               	goto	i2u1225_44
 47080   007354                     i2u1225_45:
 47081   007354  90D8               	bcf	status,0,c
 47082   007356  3631               	rlcf	(??i2_setOutputPin+1)^0,f,c
 47083   007358                     i2u1225_44:
 47084   007358  2E30               	decfsz	??i2_setOutputPin^0,f,c
 47085   00735A  D7FC               	goto	i2u1225_45
 47086   00735C  5031               	movf	(??i2_setOutputPin+1)^0,w,c
 47087   00735E  0AFF               	xorlw	255
 47088   007360  168A               	andwf	138,f,c	;volatile
 47089   007362  0012               	return	
 47090   007364                     i2l13320:
 47091                           
 47092                           ;../digitalOut.c: 275:             if (state) {
 47093   007364  502F               	movf	i2setOutputPin@state^0,w,c
 47094   007366  B4D8               	btfsc	status,2,c
 47095   007368  D01D               	goto	i2l13324
 47096                           
 47097                           ;../digitalOut.c: 277:                 LATC |= (1<<configs[io].no);
 47098   00736A  5032               	movf	i2setOutputPin@io^0,w,c
 47099   00736C  0D04               	mullw	4
 47100   00736E  0E02               	movlw	2
 47101   007370  26F3               	addwf	243,f,c
 47102   007372  0E00               	movlw	0
 47103   007374  22F4               	addwfc	244,f,c
 47104   007376  0E35               	movlw	low _configs
 47105   007378  24F3               	addwf	243,w,c
 47106   00737A  6EF6               	movwf	tblptrl,c
 47107   00737C  0EEE               	movlw	high _configs
 47108   00737E  20F4               	addwfc	244,w,c
 47109   007380  6EF7               	movwf	tblptrh,c
 47110   007382                     	if	1	;There are 3 active tblptr bytes
 47111   007382  6AF8               	clrf	tblptru,c
 47112   007384  0E00               	movlw	low (__mediumconst shr (0+16))
 47113   007386  22F8               	addwfc	tblptru,f,c
 47114   007388                     	endif
 47115   007388  0008               	tblrd		*
 47116   00738A  CFF5 F030          	movff	tablat,??i2_setOutputPin
 47117   00738E  0E01               	movlw	1
 47118   007390  6E31               	movwf	(??i2_setOutputPin+1)^0,c
 47119   007392  2A30               	incf	??i2_setOutputPin^0,f,c
 47120   007394  D002               	goto	i2u1227_44
 47121   007396                     i2u1227_45:
 47122   007396  90D8               	bcf	status,0,c
 47123   007398  3631               	rlcf	(??i2_setOutputPin+1)^0,f,c
 47124   00739A                     i2u1227_44:
 47125   00739A  2E30               	decfsz	??i2_setOutputPin^0,f,c
 47126   00739C  D7FC               	goto	i2u1227_45
 47127   00739E  5031               	movf	(??i2_setOutputPin+1)^0,w,c
 47128   0073A0  128B               	iorwf	139,f,c	;volatile
 47129                           
 47130                           ;../digitalOut.c: 278:             } else {
 47131   0073A2  0012               	return	
 47132   0073A4                     i2l13324:
 47133                           
 47134                           ;../digitalOut.c: 280:                 LATC &= ~(1<<configs[io].no);
 47135   0073A4  5032               	movf	i2setOutputPin@io^0,w,c
 47136   0073A6  0D04               	mullw	4
 47137   0073A8  0E02               	movlw	2
 47138   0073AA  26F3               	addwf	243,f,c
 47139   0073AC  0E00               	movlw	0
 47140   0073AE  22F4               	addwfc	244,f,c
 47141   0073B0  0E35               	movlw	low _configs
 47142   0073B2  24F3               	addwf	243,w,c
 47143   0073B4  6EF6               	movwf	tblptrl,c
 47144   0073B6  0EEE               	movlw	high _configs
 47145   0073B8  20F4               	addwfc	244,w,c
 47146   0073BA  6EF7               	movwf	tblptrh,c
 47147   0073BC                     	if	1	;There are 3 active tblptr bytes
 47148   0073BC  6AF8               	clrf	tblptru,c
 47149   0073BE  0E00               	movlw	low (__mediumconst shr (0+16))
 47150   0073C0  22F8               	addwfc	tblptru,f,c
 47151   0073C2                     	endif
 47152   0073C2  0008               	tblrd		*
 47153   0073C4  CFF5 F030          	movff	tablat,??i2_setOutputPin
 47154   0073C8  0E01               	movlw	1
 47155   0073CA  6E31               	movwf	(??i2_setOutputPin+1)^0,c
 47156   0073CC  2A30               	incf	??i2_setOutputPin^0,f,c
 47157   0073CE  D002               	goto	i2u1228_44
 47158   0073D0                     i2u1228_45:
 47159   0073D0  90D8               	bcf	status,0,c
 47160   0073D2  3631               	rlcf	(??i2_setOutputPin+1)^0,f,c
 47161   0073D4                     i2u1228_44:
 47162   0073D4  2E30               	decfsz	??i2_setOutputPin^0,f,c
 47163   0073D6  D7FC               	goto	i2u1228_45
 47164   0073D8  5031               	movf	(??i2_setOutputPin+1)^0,w,c
 47165   0073DA  0AFF               	xorlw	255
 47166   0073DC  168B               	andwf	139,f,c	;volatile
 47167   0073DE  0012               	return	
 47168   0073E0                     i2l13328:
 47169   0073E0  5032               	movf	i2setOutputPin@io^0,w,c
 47170   0073E2  0D04               	mullw	4
 47171   0073E4  0E01               	movlw	1
 47172   0073E6  26F3               	addwf	243,f,c
 47173   0073E8  0E00               	movlw	0
 47174   0073EA  22F4               	addwfc	244,f,c
 47175   0073EC  0E35               	movlw	low _configs
 47176   0073EE  24F3               	addwf	243,w,c
 47177   0073F0  6EF6               	movwf	tblptrl,c
 47178   0073F2  0EEE               	movlw	high _configs
 47179   0073F4  20F4               	addwfc	244,w,c
 47180   0073F6  6EF7               	movwf	tblptrh,c
 47181   0073F8                     	if	1	;There are 3 active tblptr bytes
 47182   0073F8  6AF8               	clrf	tblptru,c
 47183   0073FA  0E00               	movlw	low (__mediumconst shr (0+16))
 47184   0073FC  22F8               	addwfc	tblptru,f,c
 47185   0073FE                     	endif
 47186   0073FE  0008               	tblrd		*
 47187   007400  50F5               	movf	tablat,w,c
 47188                           
 47189                           ; Switch size 1, requested type "simple"
 47190                           ; Number of cases is 3, Range of values is 65 to 67
 47191                           ; switch strategies available:
 47192                           ; Name         Instructions Cycles
 47193                           ; simple_byte           10     6 (average)
 47194                           ;	Chosen strategy is simple_byte
 47195   007402  0A41               	xorlw	65	; case 65
 47196   007404  B4D8               	btfsc	status,2,c
 47197   007406  D732               	goto	i2l13308
 47198   007408  0A03               	xorlw	3	; case 66
 47199   00740A  B4D8               	btfsc	status,2,c
 47200   00740C  D76D               	goto	i2l13314
 47201   00740E  0A01               	xorlw	1	; case 67
 47202   007410  A4D8               	btfss	status,2,c
 47203   007412  0012               	return	
 47204   007414  D7A7               	goto	i2l13320
 47205   007416                     __end_ofi2_setOutputPin:
 47206                           	callstack 0
 47207                           
 47208 ;; *************** function i2_getNV *****************
 47209 ;; Defined at:
 47210 ;;		line 171 in file "../../VLCBlib_PIC/nv.c"
 47211 ;; Parameters:    Size  Location     Type
 47212 ;;  index           1    wreg     unsigned char 
 47213 ;; Auto vars:     Size  Location     Type
 47214 ;;  index           1    3[COMRAM] unsigned char 
 47215 ;; Return value:  Size  Location     Type
 47216 ;;                  2    0[COMRAM] short 
 47217 ;; Registers used:
 47218 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 47219 ;; Tracked objects:
 47220 ;;		On entry : 0/0
 47221 ;;		On exit  : 0/0
 47222 ;;		Unchanged: 0/0
 47223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47224 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47225 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47226 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47227 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47228 ;;Total ram usage:        4 bytes
 47229 ;; Hardware stack levels used: 1
 47230 ;; This function calls:
 47231 ;;		Nothing
 47232 ;; This function is called by:
 47233 ;;		_timer1DoneInterruptHandler
 47234 ;;		_timer3DoneInterruptHandler
 47235 ;; This function uses a non-reentrant model
 47236 ;;
 47237                           
 47238                           	psect	text221
 47239   00BB1E                     __ptext221:
 47240                           	callstack 0
 47241   00BB1E                     i2_getNV:
 47242                           	callstack 3
 47243                           
 47244                           ;incstack = 0
 47245                           ;i2getNV@index stored from wreg
 47246   00BB1E  6E2E               	movwf	i2getNV@index^0,c
 47247                           
 47248                           ;../../VLCBlib_PIC/nv.c: 172:     if (index == 0) return 127;
 47249   00BB20  502E               	movf	i2getNV@index^0,w,c
 47250   00BB22  A4D8               	btfss	status,2,c
 47251   00BB24  D005               	goto	i2l13336
 47252   00BB26  0E00               	movlw	0
 47253   00BB28  6E2C               	movwf	(?i2_getNV+1)^0,c
 47254   00BB2A  0E7F               	movlw	127
 47255   00BB2C  6E2B               	movwf	?i2_getNV^0,c
 47256   00BB2E  0012               	return	
 47257   00BB30                     i2l13336:
 47258                           
 47259                           ;../../VLCBlib_PIC/nv.c: 173:     if (index > 127) return -CMDERR_INV_NV_IDX;
 47260   00BB30  0E7F               	movlw	127
 47261   00BB32  642E               	cpfsgt	i2getNV@index^0,c
 47262   00BB34  D005               	goto	i2l13342
 47263   00BB36  0EFF               	movlw	255
 47264   00BB38  6E2C               	movwf	(?i2_getNV+1)^0,c
 47265   00BB3A  0EF6               	movlw	246
 47266   00BB3C  6E2B               	movwf	?i2_getNV^0,c
 47267   00BB3E  0012               	return	
 47268   00BB40                     i2l13342:
 47269                           
 47270                           ;../../VLCBlib_PIC/nv.c: 175:     return nvCache[index];
 47271   00BB40  0E00               	movlw	low _nvCache
 47272   00BB42  242E               	addwf	i2getNV@index^0,w,c
 47273   00BB44  6ED9               	movwf	fsr2l,c
 47274   00BB46  6ADA               	clrf	fsr2h,c
 47275   00BB48  0E04               	movlw	high _nvCache
 47276   00BB4A  22DA               	addwfc	fsr2h,f,c
 47277   00BB4C  50DF               	movf	indf2,w,c
 47278   00BB4E  6E2D               	movwf	??i2_getNV^0,c
 47279   00BB50  502D               	movf	??i2_getNV^0,w,c
 47280   00BB52  6E2B               	movwf	?i2_getNV^0,c
 47281   00BB54  6A2C               	clrf	(?i2_getNV+1)^0,c
 47282   00BB56  0012               	return		;funcret
 47283   00BB58                     __end_ofi2_getNV:
 47284                           	callstack 0
 47285                           
 47286                           	psect	rparam
 47287   000000                     
 47288                           	psect	temp
 47289   000055                     btemp:
 47290                           	callstack 0
 47291   000055                     	ds	1
 47292   000000                     int$flags	set	btemp
 47293   000000                     wtemp8	set	btemp+1
 47294   000000                     ttemp5	set	btemp+1
 47295   000000                     ttemp6	set	btemp+4
 47296   000000                     ttemp7	set	btemp+8
 47297                           
 47298                           	psect	config
 47299                           
 47300                           ;Config register CONFIG1L @ 0x300000
 47301                           ;	VREG Sleep Enable bit
 47302                           ;	RETEN = OFF, Ultra low-power regulator is Disabled (Controlled by REGSLP bit)
 47303                           ;	LF-INTOSC Low-power Enable bit
 47304                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
 47305                           ;	SOSC Power Selection and mode Configuration bits
 47306                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
 47307                           ;	Extended Instruction Set
 47308                           ;	XINST = OFF, Disabled
 47309   300000                     	org	3145728
 47310   300000  15                 	db	21
 47311                           
 47312                           ;Config register CONFIG1H @ 0x300001
 47313                           ;	Oscillator
 47314                           ;	FOSC = HS1, HS oscillator (Medium power, 4 MHz - 16 MHz)
 47315                           ;	PLL x4 Enable bit
 47316                           ;	PLLCFG = OFF, Disabled
 47317                           ;	Fail-Safe Clock Monitor
 47318                           ;	FCMEN = OFF, Disabled
 47319                           ;	Internal External Oscillator Switch Over Mode
 47320                           ;	IESO = OFF, Disabled
 47321   300001                     	org	3145729
 47322   300001  03                 	db	3
 47323                           
 47324                           ;Config register CONFIG2L @ 0x300002
 47325                           ;	Power Up Timer
 47326                           ;	PWRTEN = ON, Enabled
 47327                           ;	Brown Out Detect
 47328                           ;	BOREN = SBORDIS, Enabled in hardware, SBOREN disabled
 47329                           ;	Brown-out Reset Voltage bits
 47330                           ;	BORV = 0, 3.0V
 47331                           ;	BORMV Power level
 47332                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
 47333   300002                     	org	3145730
 47334   300002  66                 	db	102
 47335                           
 47336                           ;Config register CONFIG2H @ 0x300003
 47337                           ;	Watchdog Timer
 47338                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
 47339                           ;	Watchdog Postscaler
 47340                           ;	WDTPS = 1048576, 1:1048576
 47341   300003                     	org	3145731
 47342   300003  50                 	db	80
 47343                           
 47344                           ; Padding undefined space
 47345   300004                     	org	3145732
 47346   300004  FF                 	db	255
 47347                           
 47348                           ;Config register CONFIG3H @ 0x300005
 47349                           ;	ECAN Mux bit
 47350                           ;	CANMX = PORTB, ECAN TX and RX pins are located on RB2 and RB3, respectively
 47351                           ;	MSSP address masking
 47352                           ;	MSSPMSK = MSK7, 7 Bit address masking mode
 47353                           ;	Master Clear Enable
 47354                           ;	MCLRE = ON, MCLR Enabled, RE3 Disabled
 47355   300005                     	org	3145733
 47356   300005  89                 	db	137
 47357                           
 47358                           ;Config register CONFIG4L @ 0x300006
 47359                           ;	Stack Overflow Reset
 47360                           ;	STVREN = ON, Enabled
 47361                           ;	Boot Block Size
 47362                           ;	BBSIZ = BB1K, 1K word Boot Block size
 47363                           ;	Background Debugger
 47364                           ;	DEBUG = 0x1, unprogrammed default
 47365   300006                     	org	3145734
 47366   300006  81                 	db	129
 47367                           
 47368                           ; Padding undefined space
 47369   300007                     	org	3145735
 47370   300007  FF                 	db	255
 47371                           
 47372                           ;Config register CONFIG5L @ 0x300008
 47373                           ;	Code Protect 00800-03FFF
 47374                           ;	CP0 = OFF, Disabled
 47375                           ;	Code Protect 04000-07FFF
 47376                           ;	CP1 = OFF, Disabled
 47377                           ;	Code Protect 08000-0BFFF
 47378                           ;	CP2 = OFF, Disabled
 47379                           ;	Code Protect 0C000-0FFFF
 47380                           ;	CP3 = OFF, Disabled
 47381   300008                     	org	3145736
 47382   300008  0F                 	db	15
 47383                           
 47384                           ;Config register CONFIG5H @ 0x300009
 47385                           ;	Code Protect Boot
 47386                           ;	CPB = OFF, Disabled
 47387                           ;	Data EE Read Protect
 47388                           ;	CPD = OFF, Disabled
 47389   300009                     	org	3145737
 47390   300009  C0                 	db	192
 47391                           
 47392                           ;Config register CONFIG6L @ 0x30000A
 47393                           ;	Table Write Protect 00800-03FFF
 47394                           ;	WRT0 = OFF, Disabled
 47395                           ;	Table Write Protect 04000-07FFF
 47396                           ;	WRT1 = OFF, Disabled
 47397                           ;	Table Write Protect 08000-0BFFF
 47398                           ;	WRT2 = OFF, Disabled
 47399                           ;	Table Write Protect 0C000-0FFFF
 47400                           ;	WRT3 = OFF, Disabled
 47401   30000A                     	org	3145738
 47402   30000A  0F                 	db	15
 47403                           
 47404                           ;Config register CONFIG6H @ 0x30000B
 47405                           ;	Config. Write Protect
 47406                           ;	WRTC = OFF, Disabled
 47407                           ;	Table Write Protect Boot
 47408                           ;	WRTB = OFF, Disabled
 47409                           ;	Data EE Write Protect
 47410                           ;	WRTD = OFF, Disabled
 47411   30000B                     	org	3145739
 47412   30000B  E0                 	db	224
 47413                           
 47414                           ;Config register CONFIG7L @ 0x30000C
 47415                           ;	Table Read Protect 00800-03FFF
 47416                           ;	EBTR0 = OFF, Disabled
 47417                           ;	Table Read Protect 04000-07FFF
 47418                           ;	EBTR1 = OFF, Disabled
 47419                           ;	Table Read Protect 08000-0BFFF
 47420                           ;	EBTR2 = OFF, Disabled
 47421                           ;	Table Read Protect 0C000-0FFFF
 47422                           ;	EBTR3 = OFF, Disabled
 47423   30000C                     	org	3145740
 47424   30000C  0F                 	db	15
 47425                           
 47426                           ;Config register CONFIG7H @ 0x30000D
 47427                           ;	Table Read Protect Boot
 47428                           ;	EBTRB = OFF, Disabled
 47429   30000D                     	org	3145741
 47430   30000D  40                 	db	64
 47431                           tosu	equ	0xFFF
 47432                           tosh	equ	0xFFE
 47433                           tosl	equ	0xFFD
 47434                           stkptr	equ	0xFFC
 47435                           pclatu	equ	0xFFB
 47436                           pclath	equ	0xFFA
 47437                           pcl	equ	0xFF9
 47438                           tblptru	equ	0xFF8
 47439                           tblptrh	equ	0xFF7
 47440                           tblptrl	equ	0xFF6
 47441                           tablat	equ	0xFF5
 47442                           prodh	equ	0xFF4
 47443                           prodl	equ	0xFF3
 47444                           indf0	equ	0xFEF
 47445                           postinc0	equ	0xFEE
 47446                           postdec0	equ	0xFED
 47447                           preinc0	equ	0xFEC
 47448                           plusw0	equ	0xFEB
 47449                           fsr0h	equ	0xFEA
 47450                           fsr0l	equ	0xFE9
 47451                           wreg	equ	0xFE8
 47452                           indf1	equ	0xFE7
 47453                           postinc1	equ	0xFE6
 47454                           postdec1	equ	0xFE5
 47455                           preinc1	equ	0xFE4
 47456                           plusw1	equ	0xFE3
 47457                           fsr1h	equ	0xFE2
 47458                           fsr1l	equ	0xFE1
 47459                           bsr	equ	0xFE0
 47460                           indf2	equ	0xFDF
 47461                           postinc2	equ	0xFDE
 47462                           postdec2	equ	0xFDD
 47463                           preinc2	equ	0xFDC
 47464                           plusw2	equ	0xFDB
 47465                           fsr2h	equ	0xFDA
 47466                           fsr2l	equ	0xFD9
 47467                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    586
    Data        0
    BSS         1917
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      84
    BANK0           160     73     115
    BANK1           256     74     255
    BANK2           256     45     241
    BANK3           256      0     200
    BANK4           256      0     200
    BANK5           256      0     128
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    ackEventCheckLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    ackEventProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    APP_postProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    APP_preProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    bootProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    bootService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    bootService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    bootService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    bootService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    bootService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    bootService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    bootService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), NULL(), 

    bootService$processMessage	PTR FTN(PTR struct Message,)enum E12732 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    canFillRxFifo@m	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    canFillRxFifo@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    canProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    canReceiveMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    canReceiveMessage@mp	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    canReceiveMessage@p	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    canSendMessage@m	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    canSendMessage@mp	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK1[9]), 

    canService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    canService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    canService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    canService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), i2_canIsr(), NULL(), 

    canService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), i2_canIsr(), mnsLowIsr(), NULL(), 

    canService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    canService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), NULL(), 

    canService$processMessage	PTR FTN(PTR struct Message,)enum E12732 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    canTransport$receiveMessage	PTR FTN(PTR struct Message,)enum E12843 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    canTransport$sendMessage	PTR FTN(PTR struct Message,)enum E12847 size(2) Largest target is 1
		 -> canSendMessage(), 

    checkLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    checkTxFifo@m	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    checkTxFifo@mp	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    completed@action	PTR struct . size(2) Largest target is 128
		 -> expeditedQueueBuf(BANK2[16]), normalQueueBuf(BANK5[128]), NULL(NULL[0]), 

    consumer2QProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    eventAckService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventAckService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventAckService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    eventAckService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventAckService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventAckService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventAckService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), NULL(), 

    eventAckService$processMessage	PTR FTN(PTR struct Message,)enum E12732 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventCoeService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventCoeService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventCoeService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    eventCoeService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventCoeService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventCoeService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventCoeService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), NULL(), 

    eventCoeService$processMessage	PTR FTN(PTR struct Message,)enum E12732 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventConsumer2QService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventConsumer2QService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventConsumer2QService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    eventConsumer2QService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventConsumer2QService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventConsumer2QService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventConsumer2QService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), NULL(), 

    eventConsumer2QService$processMessage	PTR FTN(PTR struct Message,)enum E12732 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventProducerService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventProducerService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventProducerService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    eventProducerService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventProducerService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventProducerService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventProducerService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), NULL(), 

    eventProducerService$processMessage	PTR FTN(PTR struct Message,)enum E12732 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventTeachService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventTeachService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventTeachService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    eventTeachService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventTeachService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventTeachService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventTeachService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), NULL(), 

    eventTeachService$processMessage	PTR FTN(PTR struct Message,)enum E12732 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    factoryReset$8032	const PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    getNextWriteMessage@q	PTR struct MessageQueue size(1) Largest target is 6
		 -> rxQueue(COMRAM[5]), 

    getNextWriteMessage@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    handleSelfEnumeration@p	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    memcpy@d1	PTR void  size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    mnsProcessMessage@d	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK0[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK0[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    mnsProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    mnsService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    mnsService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    mnsService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    mnsService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    mnsService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    mnsService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    mnsService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), NULL(), 

    mnsService$processMessage	PTR FTN(PTR struct Message,)enum E12732 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    mnsTRallDiagnosticsCallback@d	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK0[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK0[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    nvProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    nvService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    nvService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    nvService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    nvService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    nvService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    nvService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    nvService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), NULL(), 

    nvService$processMessage	PTR FTN(PTR struct Message,)enum E12732 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    peek@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    poll$8033	const PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    poll$8034	const PTR FTN(PTR struct Message,)enum E12732 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    poll$8034$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    pop@q	PTR struct MessageQueue size(1) Largest target is 6
		 -> rxQueue(COMRAM[5]), txQueue(COMRAM[5]), 

    pop@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    pop@ret	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    popTwoAction@ret	PTR struct . size(2) Largest target is 128
		 -> expeditedQueueBuf(BANK2[16]), normalQueueBuf(BANK5[128]), 

    processActions@action	PTR struct . size(2) Largest target is 128
		 -> expeditedQueueBuf(BANK2[16]), normalQueueBuf(BANK5[128]), NULL(NULL[0]), 

    processActions@nextAction	PTR struct . size(2) Largest target is 128
		 -> expeditedQueueBuf(BANK2[16]), normalQueueBuf(BANK5[128]), NULL(NULL[0]), 

    producerProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    push@m	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK1[9]), 

    push@q	PTR struct MessageQueue size(1) Largest target is 6
		 -> txQueue(COMRAM[5]), 

    push@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    quantity@q	PTR struct MessageQueue size(1) Largest target is 6
		 -> txQueue(COMRAM[5]), 

    quantity@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    rxQueue$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    S208$4$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    S208Service$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    S208Service$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    S208Service$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    S208Service$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    S208Service$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    S208Service$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    S208Service$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), NULL(), 

    S208Service$processMessage	PTR FTN(PTR struct Message,)enum E12732 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    S352$0$0	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK1[9]), 

    S352$1$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    S352Transport$receiveMessage	PTR FTN(PTR struct Message,)enum E12843 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    S352Transport$sendMessage	PTR FTN(PTR struct Message,)enum E12847 size(2) Largest target is 1
		 -> canSendMessage(), 

    S6117MessageQueue$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    services	const PTR const struct Service[9] size(2) Largest target is 18
		 -> bootService(CODE[18]), canService(CODE[18]), eventAckService(CODE[18]), eventCoeService(CODE[18]), 
		 -> eventConsumer2QService(CODE[18]), eventProducerService(CODE[18]), eventTeachService(CODE[18]), mnsService(CODE[18]), 
		 -> nvService(CODE[18]), 

    services$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    services$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    services$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    services$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    services$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    services$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    services$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), NULL(), 

    services$processMessage	PTR FTN(PTR struct Message,)enum E12732 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    sp__ackGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK0[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK0[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    sp__canGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK0[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK0[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    sp__consumer2QGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK0[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK0[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    sp__findService	PTR const struct Service size(2) Largest target is 18
		 -> bootService(CODE[18]), canService(CODE[18]), eventAckService(CODE[18]), eventCoeService(CODE[18]), 
		 -> eventConsumer2QService(CODE[18]), eventProducerService(CODE[18]), eventTeachService(CODE[18]), mnsService(CODE[18]), 
		 -> nvService(CODE[18]), NULL(NULL[0]), 

    sp__getBufferPointer	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    sp__getNextWriteMessage	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    sp__getTwoAction	PTR struct . size(2) Largest target is 128
		 -> expeditedQueueBuf(BANK2[16]), normalQueueBuf(BANK5[128]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    sp__mnsGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK0[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK0[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    sp__nvGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK0[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK0[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    sp__peek	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    sp__peekTwoActionQueue	PTR struct . size(2) Largest target is 128
		 -> expeditedQueueBuf(BANK2[16]), normalQueueBuf(BANK5[128]), NULL(NULL[0]), 

    sp__pop	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    sp__popTwoAction	PTR struct . size(2) Largest target is 128
		 -> expeditedQueueBuf(BANK2[16]), normalQueueBuf(BANK5[128]), NULL(NULL[0]), 

    sp__producerGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK0[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK0[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    sp__teachGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK0[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK0[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    sp_S208$9	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK0[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK0[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    startTimedResponse@callback	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)enum E12937 size(2) Largest target is 1
		 -> mnsTRallDiagnosticsCallback(), mnsTRrqnpnCallback(), mnsTRserviceDiscoveryCallback(), nerdCallback(), 
		 -> nvTRnvrdCallback(), reqevCallback(), 

    teachCheckLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    teachProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    timedResponseCallback	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)enum E12937 size(2) Largest target is 1
		 -> mnsTRallDiagnosticsCallback(), mnsTRrqnpnCallback(), mnsTRserviceDiscoveryCallback(), nerdCallback(), 
		 -> nvTRnvrdCallback(), reqevCallback(), NULL(), 

    transport	PTR const struct Transport size(2) Largest target is 4
		 -> canTransport(CODE[4]), NULL(NULL[0]), 

    transport$receiveMessage	PTR FTN(PTR struct Message,)enum E12843 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    transport$sendMessage	PTR FTN(PTR struct Message,)enum E12847 size(2) Largest target is 1
		 -> canSendMessage(), 

    txQueue$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isrLow in COMRAM

    None.

Critical Paths under _isrHigh in COMRAM

    _isrHigh->_highIsr
    i2_canIsr->i2_checkCANTimeout
    i2_checkCANTimeout->i2_checkTxFifo
    i2_canTxError->i2_checkTxFifo
    i2_checkTxFifo->i2_getNextWriteMessage
    i2_canFillRxFifo->i2_getNextWriteMessage
    _timer3DoneInterruptHandler->i2_setOutputPin
    _timer1DoneInterruptHandler->i2_setOutputPin
    i2_setOutputPin->i2_getNV

Critical Paths under _main in BANK0

    _setup->_initServos
    _initServos->_setOutputPosition
    _setOutputPosition->_setServoPosition
    _initInputScan->_readNVM
    _nvPowerUp->_loadNvCache
    _mnsPowerUp->_readNVM
    _mnsPowerUp->_tickGet
    _leds_powerUp->_tickGet
    _canPowerUp->_readNVM
    _canPowerUp->_tickGet
    _teachProcessMessage->_sendMessage3
    _teachCheckLen->_checkLen
    _doRqevn->_sendMessage3
    _doReval->_sendMessage3
    _doReqev->_sendMessage3
    _doNnevn->_sendMessage3
    _doNerd->_startTimedResponse
    _doNenrd->_sendMessage3
    _doEvuln->_sendMessage3
    _doEvlrn->_sendMessage3
    _producerProcessMessage->_sendMessage3
    _producerProcessMessage->_sendMessage4
    _numEv->_validStart
    _nvTRnvrdCallback->_sendMessage4
    _mnsTRrqnpnCallback->_sendMessage4
    _nvProcessMessage->_sendMessage3
    _nvProcessMessage->_sendMessage4
    _setNV->_writeNVM
    _setServoPosition->___awdiv
    _APP_nvValidate->___awmod
    _mnsProcessMessage->_sendMessage3
    _mnsProcessMessage->_sendMessage4
    _mnsProcessMessage->_writeNVM
    _startTimedResponse->_findServiceIndex
    _sendMessage6->_sendMessage
    _sendMessage3->_sendMessage
    _getParameter->_getParameterFlags
    _getParameterFlags->_have
    _mnsPoll->_writeNVM
    _setLEDsByMode->_showStatus
    _sendMessage2->_sendMessage
    _setNewCanId->_writeNVM
    _handleSelfEnumeration->_tickGet
    _bootProcessMessage->_writeNVM
    _sendMessage7->_sendMessage
    _ackEventCheckLen->_checkLen
    _checkLen->_sendMessage5
    _sendMessage5->_sendMessage
    _setupTimer3->_setOutputPin
    _setupTimer1->_setOutputPin
    _pollServos->_writeNVM
    _bounceUp->___awdiv
    _bounceDown->___awdiv
    _startServoOutput->_getNV
    _startMultiOutput->_getNV
    _startDigitalOutput->_writeNVM
    _setOutputState->_setBounceState
    _setOutputState->_setMultiState
    _setOutputState->_setServoState
    _setServoState->_getNV
    _setMultiState->_getNV
    _setBounceState->_getNV
    _getTwoAction->_peekTwoActionQueue
    _doWait->___lmul
    _inputScan->_writeNVM
    _sendProducedEvent->_sendMessage4
    _sendMessage4->_sendMessage
    _sendMessage->_canSendMessage
    _canSendMessage->_getNextWriteMessage
    _canSendMessage->_push
    _readInput->_getNV
    _checkPowerOnPb->_pbDownTimer
    _checkPowerOnPb->_pbUpTimer
    _pbUpTimer->___lldiv
    _pbDownTimer->___lldiv
    _leds_poll->___awdiv
    ___lmul->_getNV
    ___lldiv->_tickGet
    _factoryReset->_writeNVM
    _clearAllEvents->_writeNVM
    _nvFactoryReset->_writeNVM
    _APP_nvDefault->___awdiv
    ___wmul->_getNV
    ___awdiv->___wmul
    _mnsFactoryReset->_writeNVM
    _canFactoryReset->_writeNVM
    _saveNV->_writeNVM
    _loadNvCache->_readNVM
    _addEvent->_writeNVM
    _writeEv->_writeNVM
    _removeTableEntry->_writeNVM
    _rebuildHashtable->_getHash
    _getEv->_validStart
    _getEVs->_validStart
    _validStart->_readNVM
    _findEvent->_getHash
    _getNN->_readNVM
    _getHash->_getNN
    _getEN->_readNVM
    _configIO->_writeNVM
    _writeNVM->_APP_nvDefault
    _FLASH_Write->_flushFlashBlock
    _flushFlashBlock->_eraseFlashBlock
    _EEPROM_Write->_EEPROM_Read
    _setDigitalOutput->_readNVM
    _setOutputPin->_getNV
    _readNVM->_FLASH_Read

Critical Paths under _isrLow in BANK0

    _isrLow->_lowIsr
    _canIsr->_checkCANTimeout
    _checkCANTimeout->_checkTxFifo
    _canTxError->_checkTxFifo
    _checkTxFifo->i1_getNextWriteMessage
    _canFillRxFifo->i1_getNextWriteMessage

Critical Paths under _isrHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _setup->_configIO
    _powerUp->_teachPowerUp
    _teachPowerUp->_rebuildHashtable
    _poll->_ackEventProcessMessage
    _teachCheckLen->_checkLen
    _doReval->_sendMessage5
    _doReqev->_sendMessage6
    _doNnclr->_clearAllEvents
    _doNenrd->_sendMessage5
    _doEvuln->_removeEvent
    _removeEvent->_removeTableEntry
    _doEvlrn->_APP_addEvent
    _APP_addEvent->_addEvent
    _pollTimedResponse->_reqevCallback
    _nerdCallback->_sendMessage7
    _nvProcessMessage->_setNV
    _setNV->_APP_nvValueChanged
    _APP_nvValueChanged->_setType
    _sendMessage6->_sendMessage
    _sendMessage3->_sendMessage
    _mnsPoll->_sendMessage5
    _sendMessage2->_sendMessage
    _canReceiveMessage->_processEnumeration
    _processEnumeration->_setNewCanId
    _setNewCanId->_writeNVM
    _sendMessage7->_sendMessage
    _ackEventCheckLen->_checkLen
    _checkLen->_sendMessage5
    _sendMessage5->_sendMessage
    _loop->_processActions
    _startServos->_pollServos
    _pollServos->_sendProducedEvent
    _processOutputs->_sendProducedEvent
    _processActions->_startOutput
    _startOutput->_startDigitalOutput
    _startDigitalOutput->_sendInvertedProducedEvent
    _sendInvertedProducedEvent->_sendProducedEvent
    _doSOD->_alwaysSendInvertedProducedEvent
    _alwaysSendInvertedProducedEvent->_sendProducedEvent
    _inputScan->_sendProducedEvent
    _sendProducedEvent->_sendMessage4
    _sendMessage4->_sendMessage
    _checkPowerOnPb->_factoryReset
    _factoryReset->_APP_factoryReset
    _teachFactoryReset->_clearAllEvents
    _clearAllEvents->_rebuildHashtable
    _nvFactoryReset->_writeNVM
    _mnsFactoryReset->_writeNVM
    _canFactoryReset->_writeNVM
    _APP_factoryReset->_setType
    _setType->_defaultEvents
    _defaultNVs->_saveNV
    _saveNV->_writeNVM
    _defaultEvents->_addEvent
    _clearEvents->_deleteActionRange
    _deleteHappeningRange->_writeEv
    _deleteActionRange->_writeEv
    _addEvent->_writeEv
    _writeEv->_checkRemoveTableEntry
    _checkRemoveTableEntry->_removeTableEntry
    _removeTableEntry->_rebuildHashtable
    _configIO->_writeNVM

Critical Paths under _isrLow in BANK1

    None.

Critical Paths under _isrHigh in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_poll
    _poll->_mnsProcessMessage

Critical Paths under _isrLow in BANK2

    None.

Critical Paths under _isrHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isrLow in BANK3

    None.

Critical Paths under _isrHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrLow in BANK4

    None.

Critical Paths under _isrHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrLow in BANK5

    None.

Critical Paths under _isrHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrLow in BANK6

    None.

Critical Paths under _isrHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrLow in BANK7

    None.

Critical Paths under _isrHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isrLow in BANK8

    None.

Critical Paths under _isrHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isrLow in BANK9

    None.

Critical Paths under _isrHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isrLow in BANK10

    None.

Critical Paths under _isrHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isrLow in BANK11

    None.

Critical Paths under _isrHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isrLow in BANK12

    None.

Critical Paths under _isrHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isrLow in BANK13

    None.

Critical Paths under _isrHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isrLow in BANK14

    None.

Critical Paths under _isrHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0 3711715
                     _checkPowerOnPb
                       _factoryReset
                         _initRomOps
                               _loop
                               _poll
                            _powerUp
                            _readNVM
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0   31625
                           _configIO
                              _getNV
                      _initInputScan
                        _initOutputs
                         _initServos
              _setTimedResponseDelay
                            _tickGet
                _universalEventsInit
 ---------------------------------------------------------------------------------
 (2) _universalEventsInit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initServos                                           5     5      0    9665
                                             68 BANK0      5     5      0
                              _getNV
                            _readNVM
                  _setOutputPosition
                            _tickGet
 ---------------------------------------------------------------------------------
 (3) _setOutputPosition                                    3     1      2    4743
                                             65 BANK0      3     1      2
                              _getNV
                            _readNVM (ARG)
                   _setDigitalOutput
                       _setOutputPin
                   _setServoPosition
 ---------------------------------------------------------------------------------
 (2) _initOutputs                                          1     1      0      90
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _initInputScan                                        3     3      0    4378
                                             55 BANK0      3     3      0
                              _getNV
                          _readInput
                            _readNVM
 ---------------------------------------------------------------------------------
 (1) _powerUp                                              6     6      0   36673
                                             10 BANK1      5     5      0
                                NULL *
                         _ackPowerUp *
                         _canPowerUp *
                  _consumer2QPowerUp *
                         _initTicker
                  _initTimedResponse
                       _leds_powerUp
                         _mnsPowerUp *
                          _nvPowerUp *
                       _teachPowerUp *
 ---------------------------------------------------------------------------------
 (2) _teachPowerUp                                         1     1      0   22661
                                              9 BANK1      1     1      0
                   _rebuildHashtable
 ---------------------------------------------------------------------------------
 (2) _nvPowerUp                                            1     1      0    4232
                                             60 BANK0      1     1      0
                        _loadNvCache
 ---------------------------------------------------------------------------------
 (2) _mnsPowerUp                                           3     3      0    4646
                                             55 BANK0      3     3      0
                            _readNVM
                      _setLEDsByMode
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _leds_powerUp                                         0     0      0     318
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _initTimedResponse                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initTicker                                           3     3      0     136
                                             45 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _consumer2QPowerUp                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _canPowerUp                                           3     3      0    4420
                                             55 BANK0      3     3      0
                            _readNVM
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _ackPowerUp                                           1     1      0      99
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _poll                                                15    15      0 2294768
                                             30 BANK2     15    15      0
                                NULL *
             _APP_postProcessMessage
              _APP_preProcessMessage
                             ___lmul
             _ackEventProcessMessage *
                 _bootProcessMessage *
                  _canProcessMessage *
                  _canReceiveMessage *
           _consumer2QProcessMessage *
                    _flushFlashBlock
                          _leds_poll
                            _mnsPoll *
                  _mnsProcessMessage *
                   _nvProcessMessage *
                  _pollTimedResponse
             _producerProcessMessage *
                         _showStatus
                _teachProcessMessage *
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _teachProcessMessage                                  8     6      2  711636
                                             63 BANK1      8     6      2
                            _doEvlrn
                            _doEvuln
                            _doNenrd
                             _doNerd
                            _doNnclr
                            _doNnevn
                            _doReqev
                            _doReval
                            _doRqevn
                       _sendMessage3
                       _sendMessage5
                      _teachCheckLen
 ---------------------------------------------------------------------------------
 (3) _teachCheckLen                                        5     1      4   61265
                                             71 BANK0      1     1      0
                                             17 BANK1      4     0      4
                           _checkLen
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _doRqevn                                              2     2      0   19284
                                              8 BANK1      2     2      0
                       _sendMessage3
                         _validStart
 ---------------------------------------------------------------------------------
 (3) _doReval                                              7     6      1   65255
                                             13 BANK1      7     6      1
                 _evtIdxToTableIndex
                              _getEv
                              _numEv
                       _sendMessage3
                       _sendMessage5
                         _validStart
 ---------------------------------------------------------------------------------
 (3) _doReqev                                              8     3      5   86315
                                             14 BANK1      8     3      5
                          _findEvent
                   _findServiceIndex
                              _getEv
                              _numEv
                       _sendMessage3
                       _sendMessage5
                       _sendMessage6
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doNnevn                                              7     7      0   19222
                                              8 BANK1      7     7      0
                            _readNVM
                       _sendMessage3
 ---------------------------------------------------------------------------------
 (3) _doNnclr                                              0     0      0   72581
                     _clearAllEvents
                       _sendMessage2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _doNerd                                               0     0      0    1638
                   _findServiceIndex
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doNenrd                                              6     6      0   56074
                                             13 BANK1      6     6      0
                 _evtIdxToTableIndex
                              _getEN
                              _getNN
                       _sendMessage3
                       _sendMessage5
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _evtIdxToTableIndex                                   1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _doEvuln                                              5     1      4  107267
                                             20 BANK1      5     1      4
                        _removeEvent
                       _sendMessage2
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _removeEvent                                          5     1      4   51836
                                             15 BANK1      5     1      4
                          _findEvent
                   _removeTableEntry
 ---------------------------------------------------------------------------------
 (3) _doEvlrn                                              7     1      6  177355
                                             51 BANK1      7     1      6
                       _APP_addEvent
                       _sendMessage2
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _APP_addEvent                                         7     0      7  121288
                                             44 BANK1      7     0      7
                           _addEvent
 ---------------------------------------------------------------------------------
 (2) _producerProcessMessage                              14    12      2   48793
                                             63 BANK1     10     8      2
                                              0 BANK2      4     4      0
                  _APP_GetEventState
                          _findEvent
                              _getEv
                       _sendMessage3
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _APP_GetEventState                                    1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _pollTimedResponse                                    3     3      0  132692
                                             30 BANK1      3     3      0
                                NULL *
        _mnsTRallDiagnosticsCallback *
                 _mnsTRrqnpnCallback *
      _mnsTRserviceDiscoveryCallback *
                       _nerdCallback *
                   _nvTRnvrdCallback *
                      _reqevCallback *
 ---------------------------------------------------------------------------------
 (3) _reqevCallback                                       15    13      2   38024
                                             15 BANK1     15    13      2
                              _getEN
                              _getEv
                              _getNN
                              _numEv
                       _sendMessage6
 ---------------------------------------------------------------------------------
 (4) _numEv                                                7     7      0    8238
                                             61 BANK0      7     7      0
                            _readNVM
                         _validStart
 ---------------------------------------------------------------------------------
 (3) _nvTRnvrdCallback                                     5     3      2   13456
                                             15 BANK1      4     2      2
                              _getNV
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _nerdCallback                                         7     5      2   25905
                                             15 BANK1      6     4      2
                              _getEN
                              _getNN
                       _sendMessage7
                 _tableIndexToEvtIdx
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _tableIndexToEvtIdx                                   1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _mnsTRserviceDiscoveryCallback                        7     5      2   28530
                                             15 BANK1      6     4      2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _mnsTRrqnpnCallback                                   3     1      2   13604
                                             15 BANK1      2     0      2
                       _getParameter
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _mnsTRallDiagnosticsCallback                          9     7      2   13139
                                             15 BANK1      8     6      2
                                NULL *
                   _ackGetDiagnostic *
                   _canGetDiagnostic *
            _consumer2QGetDiagnostic *
                   _mnsGetDiagnostic *
                    _nvGetDiagnostic *
              _producerGetDiagnostic *
                       _sendMessage6
                 _teachGetDiagnostic *
 ---------------------------------------------------------------------------------
 (2) _nvProcessMessage                                     6     4      2  550582
                                             63 BANK1      6     4      2
                   _findServiceIndex
                              _getNV
                       _sendMessage2
                       _sendMessage3
                       _sendMessage4
                       _sendMessage5
                              _setNV
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _setNV                                                5     4      1  479772
                                             58 BANK1      5     4      1
                     _APP_nvValidate
                 _APP_nvValueChanged
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _APP_nvValueChanged                                   8     6      2  467598
                                             51 BANK1      7     5      2
                            ___awdiv
                            ___awmod
                              _getNV
                     _setBounceState
                      _setMultiState
                   _setServoPosition
                      _setServoState
              _setTimedResponseDelay
                            _setType
                  _startBounceOutput
                   _startMultiOutput
                   _startServoOutput
 ---------------------------------------------------------------------------------
 (2) _setTimedResponseDelay                                1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _setServoPosition                                     2     1      1     304
                                             63 BANK0      2     1      1
                            ___awdiv (ARG)
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (4) _APP_nvValidate                                       3     2      1    1876
                                             51 BANK0      2     1      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _mnsProcessMessage                                   37    35      2  645800
                                             63 BANK1      6     4      2
                                              0 BANK2     30    30      0
                                NULL *
                   _ackGetDiagnostic *
                         _canEsdData *
                   _canGetDiagnostic *
            _consumer2QGetDiagnostic *
                       _factoryReset
                   _findServiceIndex
                       _getParameter
                  _getParameterFlags
                   _mnsGetDiagnostic *
                    _nvGetDiagnostic *
                       _nvGetESDdata *
              _producerGetDiagnostic *
                       _sendMessage2
                       _sendMessage3
                       _sendMessage4
                       _sendMessage5
                       _sendMessage6
                       _sendMessage7
                      _setLEDsByMode
                 _startTimedResponse
                 _teachGetDiagnostic *
                    _teachGetESDdata *
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _teachGetESDdata                                      1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _teachGetDiagnostic                                   5     3      2      93
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _startTimedResponse                                   4     1      3    1446
                                             49 BANK0      4     1      3
                   _findServiceIndex (ARG)
 ---------------------------------------------------------------------------------
 (4) _sendMessage6                                         7     1      6   12237
                                             69 BANK0      1     1      0
                                              8 BANK1      6     0      6
                              _numEv (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (3) _sendMessage3                                         4     1      3   15114
                                             69 BANK0      4     1      3
                        _sendMessage
 ---------------------------------------------------------------------------------
 (4) _producerGetDiagnostic                                5     3      2      93
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _nvGetESDdata                                         1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _nvGetDiagnostic                                      4     2      2      93
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) _mnsGetDiagnostic                                     5     3      2      93
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _getParameter                                         2     2      0     436
                                             50 BANK0      1     1      0
                  _getParameterFlags
                               _have
 ---------------------------------------------------------------------------------
 (5) _getParameterFlags                                    1     1      0     244
                                             49 BANK0      1     1      0
                               _have
 ---------------------------------------------------------------------------------
 (4) _findServiceIndex                                     4     4      0     192
                                             45 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _consumer2QGetDiagnostic                              5     3      2      93
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _canGetDiagnostic                                     5     3      2      93
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _canEsdData                                           1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _ackGetDiagnostic                                     4     2      2      93
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _mnsPoll                                              4     4      0   50102
                                             13 BANK1      4     4      0
                       _sendMessage2
                       _sendMessage5
                      _setLEDsByMode
                            _tickGet
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _setLEDsByMode                                        0     0      0      31
                         _showStatus
 ---------------------------------------------------------------------------------
 (4) _sendMessage2                                         3     1      2   11573
                                             69 BANK0      3     1      2
                        _sendMessage
 ---------------------------------------------------------------------------------
 (2) _consumer2QProcessMessage                            22    20      2   30346
                                             63 BANK1      8     6      2
                                              0 BANK2     13    13      0
                            ___awdiv
                            ___awmod
                          _findEvent
                             _getEVs
                              _getNV
                      _pushTwoAction
                _setExpeditedActions
                   _setNormalActions
 ---------------------------------------------------------------------------------
 (3) _setNormalActions                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _setExpeditedActions                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _pushTwoAction                                        2     0      2     602
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _canReceiveMessage                                    9     7      2   13149
                                             10 BANK1      8     6      2
                   _getBufferPointer
              _handleSelfEnumeration
                             _memcpy
                                _pop
                 _processEnumeration
 ---------------------------------------------------------------------------------
 (3) _processEnumeration                                   7     7      0   10643
                                              3 BANK1      7     7      0
                        _setNewCanId
                            _tickGet
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (4) _setNewCanId                                          1     1      0    9960
                                              2 BANK1      1     1      0
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _pop                                                  9     7      2     427
                                             45 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              11     5      6     478
                                             45 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) _handleSelfEnumeration                                7     5      2     659
                                             55 BANK0      7     5      2
                            _tickGet
 ---------------------------------------------------------------------------------
 (3) _getBufferPointer                                     3     1      2      31
                                             45 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _canProcessMessage                                    4     2      2   28626
                                             63 BANK1      4     2      2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (2) _bootProcessMessage                                   4     2      2    9898
                                             63 BANK1      4     2      2
                           _writeNVM
 ---------------------------------------------------------------------------------
 (2) _ackEventProcessMessage                              11     9      2   63471
                                             63 BANK1     11     9      2
                   _ackEventCheckLen
                          _findEvent
                        _findService
                              _getEv
                       _sendMessage7
 ---------------------------------------------------------------------------------
 (4) _sendMessage7                                         8     1      7   13348
                                             69 BANK0      1     1      0
                                              8 BANK1      7     0      7
                                NULL (ARG) *
                         _canEsdData (ARG) *
                       _nvGetESDdata (ARG) *
                        _sendMessage
                 _tableIndexToEvtIdx (ARG)
                    _teachGetESDdata (ARG) *
 ---------------------------------------------------------------------------------
 (3) _findService                                          6     4      2     192
                                             45 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _ackEventCheckLen                                     3     0      3   29405
                                             17 BANK1      3     0      3
                           _checkLen
 ---------------------------------------------------------------------------------
 (4) _checkLen                                             5     1      4   29163
                                             70 BANK0      1     1      0
                                             13 BANK1      4     0      4
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _sendMessage5                                         6     1      5   28406
                                             69 BANK0      1     1      0
                                              8 BANK1      5     0      5
                  _getParameterFlags (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (2) _APP_preProcessMessage                                2     0      2      90
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _APP_postProcessMessage                               2     0      2      90
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _loop                                                 8     8      0  252012
                                             48 BANK1      8     8      0
                             ___lmul
                              _getNV
                          _inputScan
                     _processActions
                     _processOutputs
                  _sendProducedEvent
                        _startServos
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _startServos                                          1     1      0   70194
                                             29 BANK1      1     1      0
                              _getNV
                         _pollServos
                        _setupTimer1
                        _setupTimer3
 ---------------------------------------------------------------------------------
 (3) _setupTimer3                                          8     8      0    1850
                                             53 BANK0      8     8      0
                              _getNV
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (3) _setupTimer1                                          8     8      0    1850
                                             53 BANK0      8     8      0
                              _getNV
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (3) _pollServos                                          12    12      0   66209
                                             17 BANK1     12    12      0
                            ___awdiv
                         _bounceDown
                           _bounceUp
                              _getNV
                         _initBounce
                  _sendProducedEvent
                            _tickGet
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _initBounce                                           1     1      0      62
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _bounceUp                                             9     9      0    7478
                                             63 BANK0      9     9      0
                            ___awdiv
                              _getNV
 ---------------------------------------------------------------------------------
 (4) _bounceDown                                          11    11      0   12174
                                             63 BANK0      7     7      0
                                              0 BANK1      4     4      0
                            ___awdiv
                             ___wmul
                              _getNV
 ---------------------------------------------------------------------------------
 (2) _processOutputs                                       3     3      0   26541
                                             17 BANK1      2     2      0
                              _getNV
                  _sendProducedEvent
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (2) _processActions                                      12    12      0   95226
                                             36 BANK1     12    12      0
                            ___awdiv
                            ___awmod
                          _completed
               _deleteTwoActionQueue
                              _doSOD
                             _doWait
                      _doneTwoAction
                              _getNV
                       _getTwoAction
                      _needsStarting
                 _peekTwoActionQueue
                     _setOutputState
                        _startOutput
 ---------------------------------------------------------------------------------
 (3) _startOutput                                          3     1      2   40809
                                             33 BANK1      3     1      2
                  _startBounceOutput
                 _startDigitalOutput
                   _startMultiOutput
                   _startServoOutput
 ---------------------------------------------------------------------------------
 (5) _startServoOutput                                     3     2      1     766
                                             49 BANK0      3     2      1
                              _getNV
 ---------------------------------------------------------------------------------
 (5) _startMultiOutput                                     3     2      1     822
                                             49 BANK0      3     2      1
                              _getNV
 ---------------------------------------------------------------------------------
 (4) _startDigitalOutput                                   8     7      1   38157
                                             25 BANK1      8     7      1
                              _getNV
          _sendInvertedProducedEvent
                       _setOutputPin
                           _writeNVM
 ---------------------------------------------------------------------------------
 (5) _sendInvertedProducedEvent                            8     4      4   25473
                                             17 BANK1      8     4      4
                              _getNV (ARG)
                  _sendProducedEvent
 ---------------------------------------------------------------------------------
 (5) _startBounceOutput                                    2     1      1     425
                                             45 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _setOutputState                                       3     1      2    2869
                                             51 BANK0      3     1      2
                     _setBounceState
                      _setMultiState
                      _setServoState
 ---------------------------------------------------------------------------------
 (5) _setServoState                                        2     1      1     704
                                             49 BANK0      2     1      1
                              _getNV
 ---------------------------------------------------------------------------------
 (5) _setMultiState                                        2     1      1     884
                                             49 BANK0      2     1      1
                              _getNV
 ---------------------------------------------------------------------------------
 (5) _setBounceState                                       2     1      1     704
                                             49 BANK0      2     1      1
                              _getNV
 ---------------------------------------------------------------------------------
 (3) _needsStarting                                        5     3      2     515
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _getTwoAction                                         2     0      2     362
                                             49 BANK0      2     0      2
                 _peekTwoActionQueue
 ---------------------------------------------------------------------------------
 (3) _peekTwoActionQueue                                   4     2      2     362
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _doWait                                               6     4      2    1905
                                             61 BANK0      6     4      2
                             ___lmul
                      _doneTwoAction
                            _tickGet
 ---------------------------------------------------------------------------------
 (3) _doneTwoAction                                        0     0      0      20
                       _popTwoAction
 ---------------------------------------------------------------------------------
 (4) _popTwoAction                                         2     2      0      20
 ---------------------------------------------------------------------------------
 (3) _doSOD                                                6     6      0   37835
                                             22 BANK1      6     6      0
                            ___awdiv
    _alwaysSendInvertedProducedEvent
                              _getNV
                            _readNVM
 ---------------------------------------------------------------------------------
 (4) _alwaysSendInvertedProducedEvent                      5     3      2   26035
                                             17 BANK1      5     3      2
                              _getNV (ARG)
                  _sendProducedEvent
 ---------------------------------------------------------------------------------
 (3) _deleteTwoActionQueue                                 2     2      0     362
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _completed                                            7     4      3     583
                                             45 BANK0      7     4      3
 ---------------------------------------------------------------------------------
 (2) _inputScan                                            4     4      0   34390
                                             17 BANK1      4     4      0
                              _getNV
                          _readInput
                  _sendProducedEvent
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _sendProducedEvent                                    8     7      1   24074
                                              9 BANK1      8     7      1
                              _getEN
                              _getNN
                              _getNV (ARG)
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _sendMessage4                                         5     1      4   13075
                                             69 BANK0      4     0      4
                                              8 BANK1      1     1      0
                       _getParameter (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (5) _sendMessage                                         11     3      8    9320
                                             66 BANK0      3     3      0
                                              0 BANK1      8     0      8
                     _canSendMessage *
 ---------------------------------------------------------------------------------
 (6) _canSendMessage                                       9     7      2    3281
                                             57 BANK0      9     7      2
                _getNextWriteMessage
                               _have
                            _isEvent
                               _push
                           _quantity
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (7) _quantity                                             5     4      1     183
                                             45 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (7) _push                                                12     9      3    1234
                                             45 BANK0     12     9      3
 ---------------------------------------------------------------------------------
 (7) _isEvent                                              2     2      0      99
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _have                                                 4     4      0     161
                                             45 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (7) _getNextWriteMessage                                 12    10      2     513
                                             45 BANK0     12    10      2
 ---------------------------------------------------------------------------------
 (3) _readInput                                            3     3      0     248
                                             49 BANK0      3     3      0
                              _getNV
 ---------------------------------------------------------------------------------
 (1) _initRomOps                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkPowerOnPb                                       1     1      0  555112
                                             57 BANK1      1     1      0
                       _APP_testMode
                       _factoryReset
                        _pbDownTimer
                          _pbUpTimer
                         _showStatus
 ---------------------------------------------------------------------------------
 (4) _showStatus                                           3     3      0      31
                                             45 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _pbUpTimer                                            5     5      0    8634
                                             68 BANK0      5     5      0
                            ___lldiv
                             ___lmul
                          _leds_poll
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _pbDownTimer                                          5     5      0    8634
                                             68 BANK0      5     5      0
                            ___lldiv
                             ___lmul
                          _leds_poll
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _leds_poll                                            4     4      0    6643
                                             63 BANK0      4     4      0
                            ___awdiv
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _tickGet                                             10     6      4     318
                                             45 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1176
                                             49 BANK0     12     4      8
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     466
                                             55 BANK0     13     5      8
                            _tickGet (ARG)
 ---------------------------------------------------------------------------------
 (3) _factoryReset                                         5     5      0  537587
                                             52 BANK1      5     5      0
                                NULL *
                   _APP_factoryReset
                    _canFactoryReset *
                    _mnsFactoryReset *
                     _nvFactoryReset *
                  _teachFactoryReset *
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _teachFactoryReset                                    0     0      0   32602
                     _clearAllEvents
 ---------------------------------------------------------------------------------
 (4) _clearAllEvents                                       5     5      0   32602
                                              9 BANK1      5     5      0
                    _flushFlashBlock
                   _rebuildHashtable
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _nvFactoryReset                                       3     3      0   22621
                                              2 BANK1      3     3      0
                      _APP_nvDefault
                           _writeNVM
 ---------------------------------------------------------------------------------
 (5) _APP_nvDefault                                        7     7      0   12717
                                             63 BANK0      5     5      0
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    4538
                                             49 BANK0      6     2      4
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    1693
                                             45 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    6325
                                             55 BANK0      8     4      4
                             ___wmul (ARG)
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (4) _mnsFactoryReset                                      0     0      0    9774
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _canFactoryReset                                      0     0      0    9774
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _APP_factoryReset                                     3     3      0  452881
                                             51 BANK1      1     1      0
           _factoryResetGlobalEvents
                    _flushFlashBlock
                            _setType
 ---------------------------------------------------------------------------------
 (5) _setType                                              3     2      1  452547
                                             48 BANK1      3     2      1
                           _configIO
                      _defaultEvents
                         _defaultNVs
                             _saveNV
 ---------------------------------------------------------------------------------
 (6) _defaultNVs                                           5     4      1   14493
                                              6 BANK1      5     4      1
                        _loadNvCache
                             _saveNV
 ---------------------------------------------------------------------------------
 (6) _saveNV                                               4     3      1   10078
                                              2 BANK1      4     3      1
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _loadNvCache                                          5     5      0    4133
                                             55 BANK0      5     5      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (6) _defaultEvents                                        4     3      1  410371
                                             44 BANK1      4     3      1
                           _addEvent
                        _clearEvents
 ---------------------------------------------------------------------------------
 (7) _clearEvents                                          1     1      0  289130
                                             39 BANK1      1     1      0
                  _deleteActionRange
               _deleteHappeningRange
 ---------------------------------------------------------------------------------
 (8) _deleteHappeningRange                                10     9      1  153445
                                             29 BANK1      9     8      1
              _checkRemoveTableEntry
                    _flushFlashBlock
                            _readNVM
                   _rebuildHashtable
                         _validStart
                            _writeEv
 ---------------------------------------------------------------------------------
 (8) _deleteActionRange                                   10     9      1  135592
                                             29 BANK1     10     9      1
              _checkRemoveTableEntry
                    _flushFlashBlock
                             _getEVs
                         _validStart
                            _writeEv
 ---------------------------------------------------------------------------------
 (5) _addEvent                                            15     8      7  120621
                                             29 BANK1     15     8      7
                          _findEvent
                    _flushFlashBlock
                            _readNVM
                   _rebuildHashtable
                            _writeEv
                           _writeNVM
 ---------------------------------------------------------------------------------
 (6) _writeEv                                             12    10      2   68885
                                             17 BANK1     12    10      2
              _checkRemoveTableEntry
                            _readNVM
                           _writeNVM
 ---------------------------------------------------------------------------------
 (7) _checkRemoveTableEntry                                2     2      0   53385
                                             15 BANK1      2     2      0
                             _getEVs
                   _removeTableEntry
                         _validStart
 ---------------------------------------------------------------------------------
 (5) _removeTableEntry                                     6     6      0   40701
                                              9 BANK1      6     6      0
                    _flushFlashBlock
                            _readNVM
                   _rebuildHashtable
                         _validStart
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _rebuildHashtable                                    11    11      0   22562
                                              0 BANK1      9     9      0
                              _getEN
                              _getEv
                            _getHash
                              _getNN
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _getEv                                                9     7      2    8896
                                             61 BANK0      9     7      2
                            _readNVM
                         _validStart
 ---------------------------------------------------------------------------------
 (8) _getEVs                                               8     8      0    8458
                                             61 BANK0      8     8      0
                            _readNVM
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _validStart                                           6     6      0    4034
                                             55 BANK0      6     6      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (4) _findEvent                                           13     9      4   10828
                                              0 BANK1     13     9      4
                              _getEN
                            _getHash
                              _getNN
 ---------------------------------------------------------------------------------
 (4) _getNN                                               12    10      2    4133
                                             55 BANK0     12    10      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (4) _getHash                                              6     2      4     555
                                             67 BANK0      6     2      4
                              _getEN (ARG)
                              _getNN (ARG)
 ---------------------------------------------------------------------------------
 (4) _getEN                                               11     9      2    4068
                                             55 BANK0     11     9      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (2) _configIO                                             8     8      0   17050
                                              2 BANK1      8     8      0
                              _getNV
                            _readNVM
                   _setDigitalOutput
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _writeNVM                                             7     3      4    9774
                                             68 BANK0      5     1      4
                                              0 BANK1      2     2      0
                      _APP_nvDefault (ARG)
                       _EEPROM_Write
                        _FLASH_Write
 ---------------------------------------------------------------------------------
 (4) _FLASH_Write                                          8     5      3     728
                                             48 BANK0      7     4      3
                    _eraseFlashBlock
                    _flushFlashBlock
                     _loadFlashBlock
 ---------------------------------------------------------------------------------
 (5) _loadFlashBlock                                       1     1      0      99
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _flushFlashBlock                                      2     2      0     167
                                             46 BANK0      2     2      0
     _APP_isSuitableTimeToWriteFlash
                    _eraseFlashBlock
 ---------------------------------------------------------------------------------
 (6) _eraseFlashBlock                                      1     1      0      34
                                             45 BANK0      1     1      0
     _APP_isSuitableTimeToWriteFlash
 ---------------------------------------------------------------------------------
 (7) _APP_isSuitableTimeToWriteFlash                       0     0      0       0
                    _isNoServoPulses
 ---------------------------------------------------------------------------------
 (8) _isNoServoPulses                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EEPROM_Write                                         4     1      3     611
                                             47 BANK0      4     1      3
                        _EEPROM_Read
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (5) _updateModuleErrorStatus                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _setDigitalOutput                                     3     2      1    2269
                                             55 BANK0      3     2      1
                              _getNV
                            _readNVM (ARG)
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (4) _setOutputPin                                         4     3      1    1500
                                             49 BANK0      4     3      1
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (5) _getNV                                                4     2      2      93
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _readNVM                                              6     3      3    3938
                                             49 BANK0      6     3      3
                        _EEPROM_Read
                         _FLASH_Read
 ---------------------------------------------------------------------------------
 (4) _FLASH_Read                                           4     2      2     183
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) _EEPROM_Read                                          2     0      2     242
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _factoryResetGlobalEvents                             0     0      0       0
 ---------------------------------------------------------------------------------
 (26) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _APP_testMode                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _isrLow                                             15    15      0    7771
                                             30 BANK0     15    15      0
                             _lowIsr
 ---------------------------------------------------------------------------------
 (19) _lowIsr                                              5     5      0    7771
                                             25 BANK0      5     5      0
                                NULL *
                         _APP_lowIsr
                             _canIsr *
                          _mnsLowIsr *
 ---------------------------------------------------------------------------------
 (20) _mnsLowIsr                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (20) _canIsr                                              0     0      0    7610
                      _canFillRxFifo
                         _canTxError
                    _checkCANTimeout
                        _checkTxFifo
 ---------------------------------------------------------------------------------
 (21) _checkCANTimeout                                     4     4      0    2402
                                             21 BANK0      4     4      0
                        _checkTxFifo
                          i1_tickGet
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (21) _canTxError                                          0     0      0    2084
                        _checkTxFifo
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (21) _checkTxFifo                                         9     9      0    2084
                                             12 BANK0      9     9      0
              i1_getNextWriteMessage
                          i1_isEvent
                              i1_pop
                          i1_tickGet
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (22) i1_tickGet                                          10     6      4     318
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (22) i1_pop                                               9     7      2     317
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (22) i1_isEvent                                           2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (21) _canFillRxFifo                                       5     5      0    1040
                                             12 BANK0      4     4      0
                 i1_getBufferPointer
              i1_getNextWriteMessage
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (22) i1_updateModuleErrorStatus                           0     0      0       0
 ---------------------------------------------------------------------------------
 (22) i1_getNextWriteMessage                              12    10      2     383
                                              0 BANK0     12    10      2
 ---------------------------------------------------------------------------------
 (22) i1_getBufferPointer                                  3     1      2      31
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (20) _APP_lowIsr                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (26) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (24) _isrHigh                                            12    12      0    6168
                                             30 COMRAM    12    12      0
                            _highIsr
 ---------------------------------------------------------------------------------
 (25) _highIsr                                             5     5      0    6168
                                             25 COMRAM     5     5      0
                                NULL *
                        _APP_highIsr
                           i2_canIsr *
 ---------------------------------------------------------------------------------
 (26) i2_canIsr                                            0     0      0    5331
                    i2_canFillRxFifo
                       i2_canTxError
                  i2_checkCANTimeout
                      i2_checkTxFifo
 ---------------------------------------------------------------------------------
 (27) i2_checkCANTimeout                                   4     4      0    1672
                                             21 COMRAM     4     4      0
                      i2_checkTxFifo
                          i2_tickGet
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (27) i2_canTxError                                        0     0      0    1461
                      i2_checkTxFifo
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (27) i2_checkTxFifo                                       9     9      0    1461
                                             12 COMRAM     9     9      0
              i2_getNextWriteMessage
                          i2_isEvent
                              i2_pop
                          i2_tickGet
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (28) i2_tickGet                                          10     6      4     211
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (28) i2_pop                                               9     7      2     225
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (28) i2_isEvent                                           2     2      0      68
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (27) i2_canFillRxFifo                                     5     5      0     737
                                             12 COMRAM     4     4      0
                 i2_getBufferPointer
              i2_getNextWriteMessage
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (28) i2_updateModuleErrorStatus                           0     0      0       0
 ---------------------------------------------------------------------------------
 (28) i2_getNextWriteMessage                              12    10      2     273
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (28) i2_getBufferPointer                                  3     1      2      22
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (26) _APP_highIsr                                         0     0      0     676
         _timer1DoneInterruptHandler
         _timer3DoneInterruptHandler
 ---------------------------------------------------------------------------------
 (27) _timer3DoneInterruptHandler                          0     0      0     338
                            i2_getNV
                     i2_setOutputPin
 ---------------------------------------------------------------------------------
 (27) _timer1DoneInterruptHandler                          0     0      0     338
                            i2_getNV
                     i2_setOutputPin
 ---------------------------------------------------------------------------------
 (28) i2_setOutputPin                                      4     3      1     272
                                              4 COMRAM     4     3      1
                            i2_getNV (ARG)
 ---------------------------------------------------------------------------------
 (28) i2_getNV                                             4     2      2      66
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (26) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 28
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _checkPowerOnPb
     _APP_testMode
     _factoryReset
       NULL(Fake) *
       _APP_factoryReset *
         _factoryResetGlobalEvents
         _flushFlashBlock
           _APP_isSuitableTimeToWriteFlash
             _isNoServoPulses
           _eraseFlashBlock
             _APP_isSuitableTimeToWriteFlash
         _setType
           _configIO
             _getNV
             _readNVM
               _EEPROM_Read
               _FLASH_Read
             _setDigitalOutput
               _getNV
               _readNVM (ARG)
               _setOutputPin (ARG)
                 _getNV (ARG)
             _writeNVM
               _APP_nvDefault (ARG)
                 ___awdiv
                   ___wmul (ARG)
                     _getNV (ARG)
                   _getNV (ARG)
                 ___awmod
                 ___wmul
               _EEPROM_Write (ARG)
                 _EEPROM_Read
                 _updateModuleErrorStatus
               _FLASH_Write (ARG)
                 _eraseFlashBlock
                 _flushFlashBlock
                 _loadFlashBlock
           _defaultEvents
             _addEvent
               _findEvent
                 _getEN
                   _readNVM
                 _getHash
                   _getEN (ARG)
                   _getNN (ARG)
                     _readNVM
                 _getNN
               _flushFlashBlock
               _readNVM
               _rebuildHashtable
                 _getEN
                 _getEv
                   _readNVM
                   _validStart
                     _readNVM
                 _getHash
                 _getNN
                 _validStart
               _writeEv
                 _checkRemoveTableEntry
                   _getEVs
                     _readNVM
                     _validStart
                   _removeTableEntry
                     _flushFlashBlock
                     _readNVM
                     _rebuildHashtable
                     _validStart
                     _writeNVM
                   _validStart
                 _readNVM
                 _writeNVM
               _writeNVM
             _clearEvents
               _deleteActionRange
                 _checkRemoveTableEntry
                 _flushFlashBlock
                 _getEVs
                 _validStart
                 _writeEv
               _deleteHappeningRange
                 _checkRemoveTableEntry
                 _flushFlashBlock
                 _readNVM
                 _rebuildHashtable
                 _validStart
                 _writeEv
           _defaultNVs
             _loadNvCache
               _readNVM
             _saveNV
               _writeNVM
           _saveNV
       _canFactoryReset *
         _writeNVM
       _mnsFactoryReset *
         _writeNVM
       _nvFactoryReset *
         _APP_nvDefault
         _writeNVM
       _teachFactoryReset *
         _clearAllEvents
           _flushFlashBlock
           _rebuildHashtable
           _writeNVM
       _writeNVM *
     _pbDownTimer
       ___lldiv
         _tickGet (ARG)
       ___lmul
         _getNV (ARG)
       _leds_poll
         ___awdiv
         _tickGet
       _tickGet
     _pbUpTimer
       ___lldiv
       ___lmul
       _leds_poll
       _tickGet
     _showStatus
   _factoryReset
   _initRomOps
   _loop
     ___lmul
     _getNV
     _inputScan
       _getNV
       _readInput
         _getNV
       _sendProducedEvent
         _getEN
         _getNN
         _getNV (ARG)
         _sendMessage4 (ARG)
           _getParameter (ARG)
             _getParameterFlags
               _have
             _have
           _sendMessage (ARG)
             _canSendMessage *
               _getNextWriteMessage
               _have
               _isEvent
               _push
               _quantity
               _updateModuleErrorStatus
       _writeNVM
     _processActions
       ___awdiv
       ___awmod
       _completed
       _deleteTwoActionQueue
       _doSOD
         ___awdiv
         _alwaysSendInvertedProducedEvent
           _getNV (ARG)
           _sendProducedEvent (ARG)
         _getNV
         _readNVM
       _doWait
         ___lmul
         _doneTwoAction
           _popTwoAction
         _tickGet
       _doneTwoAction
       _getNV
       _getTwoAction
         _peekTwoActionQueue
       _needsStarting
       _peekTwoActionQueue
       _setOutputState
         _setBounceState
           _getNV
         _setMultiState
           _getNV
         _setServoState
           _getNV
       _startOutput
         _startBounceOutput
         _startDigitalOutput
           _getNV
           _sendInvertedProducedEvent
             _getNV (ARG)
             _sendProducedEvent (ARG)
           _setOutputPin
           _writeNVM
         _startMultiOutput
           _getNV
         _startServoOutput
           _getNV
     _processOutputs
       _getNV
       _sendProducedEvent
       _setOutputPin
     _sendProducedEvent
     _startServos
       _getNV
       _pollServos
         ___awdiv
         _bounceDown
           ___awdiv
           ___wmul
           _getNV
         _bounceUp
           ___awdiv
           _getNV
         _getNV
         _initBounce
         _sendProducedEvent
         _tickGet
         _writeNVM
       _setupTimer1
         _getNV
         _setOutputPin
       _setupTimer3
         _getNV
         _setOutputPin
     _tickGet
   _poll
     NULL(Fake) *
     _APP_postProcessMessage *
     _APP_preProcessMessage *
     ___lmul *
     _ackEventProcessMessage *
       _ackEventCheckLen
         _checkLen
           _sendMessage5
             _getParameterFlags (ARG)
             _sendMessage (ARG)
       _findEvent
       _findService
       _getEv
       _sendMessage7
         NULL(Fake) (ARG) *
         _canEsdData (ARG) *
         _nvGetESDdata (ARG) *
         _sendMessage (ARG) *
         _tableIndexToEvtIdx (ARG) *
         _teachGetESDdata (ARG) *
     _bootProcessMessage *
       _writeNVM
     _canProcessMessage *
       _sendMessage5
     _canReceiveMessage *
       _getBufferPointer
       _handleSelfEnumeration
         _tickGet
       _memcpy
       _pop
       _processEnumeration
         _setNewCanId
           _writeNVM
         _tickGet
         _updateModuleErrorStatus
     _consumer2QProcessMessage *
       ___awdiv
       ___awmod
       _findEvent
       _getEVs
       _getNV
       _pushTwoAction
       _setExpeditedActions
       _setNormalActions
     _flushFlashBlock *
     _leds_poll *
     _mnsPoll *
       _sendMessage2
         _sendMessage
       _sendMessage5
       _setLEDsByMode
         _showStatus
       _tickGet
       _writeNVM
     _mnsProcessMessage *
       NULL(Fake) *
       _ackGetDiagnostic *
       _canEsdData *
       _canGetDiagnostic *
       _consumer2QGetDiagnostic *
       _factoryReset *
       _findServiceIndex *
       _getParameter *
       _getParameterFlags *
       _mnsGetDiagnostic *
       _nvGetDiagnostic *
       _nvGetESDdata *
       _producerGetDiagnostic *
       _sendMessage2 *
       _sendMessage3 *
         _sendMessage
       _sendMessage4 *
       _sendMessage5 *
       _sendMessage6 *
         _numEv (ARG)
           _readNVM
           _validStart
         _sendMessage (ARG)
       _sendMessage7 *
       _setLEDsByMode *
       _startTimedResponse *
         _findServiceIndex (ARG)
       _teachGetDiagnostic *
       _teachGetESDdata *
       _writeNVM *
     _nvProcessMessage *
       _findServiceIndex
       _getNV
       _sendMessage2
       _sendMessage3
       _sendMessage4
       _sendMessage5
       _setNV
         _APP_nvValidate
           ___awmod
         _APP_nvValueChanged
           ___awdiv
           ___awmod
           _getNV
           _setBounceState
           _setMultiState
           _setServoPosition
             ___awdiv (ARG)
             _getNV (ARG)
           _setServoState
           _setTimedResponseDelay
           _setType
           _startBounceOutput
           _startMultiOutput
           _startServoOutput
         _writeNVM
       _startTimedResponse
     _pollTimedResponse *
       NULL(Fake) *
       _mnsTRallDiagnosticsCallback *
         NULL(Fake) *
         _ackGetDiagnostic *
         _canGetDiagnostic *
         _consumer2QGetDiagnostic *
         _mnsGetDiagnostic *
         _nvGetDiagnostic *
         _producerGetDiagnostic *
         _sendMessage6 *
         _teachGetDiagnostic *
       _mnsTRrqnpnCallback *
         _getParameter
         _sendMessage4
       _mnsTRserviceDiscoveryCallback *
         _sendMessage5
       _nerdCallback *
         _getEN
         _getNN
         _sendMessage7
         _tableIndexToEvtIdx
         _validStart
       _nvTRnvrdCallback *
         _getNV
         _sendMessage4
       _reqevCallback *
         _getEN
         _getEv
         _getNN
         _numEv
         _sendMessage6
     _producerProcessMessage *
       _APP_GetEventState
       _findEvent
       _getEv
       _sendMessage3
       _sendMessage4
     _showStatus *
     _teachProcessMessage *
       _doEvlrn
         _APP_addEvent
           _addEvent
         _sendMessage2
         _sendMessage3
         _sendMessage5
       _doEvuln
         _removeEvent
           _findEvent
           _removeTableEntry
         _sendMessage2
         _sendMessage3
         _sendMessage5
       _doNenrd
         _evtIdxToTableIndex
         _getEN
         _getNN
         _sendMessage3
         _sendMessage5
         _validStart
       _doNerd
         _findServiceIndex
         _startTimedResponse
       _doNnclr
         _clearAllEvents
         _sendMessage2
         _sendMessage5
       _doNnevn
         _readNVM
         _sendMessage3
       _doReqev
         _findEvent
         _findServiceIndex
         _getEv
         _numEv
         _sendMessage3
         _sendMessage5
         _sendMessage6
         _startTimedResponse
       _doReval
         _evtIdxToTableIndex
         _getEv
         _numEv
         _sendMessage3
         _sendMessage5
         _validStart
       _doRqevn
         _sendMessage3
         _validStart
       _sendMessage3
       _sendMessage5
       _teachCheckLen
         _checkLen
         _sendMessage5
     _tickGet *
   _powerUp
     NULL(Fake) *
     _ackPowerUp *
     _canPowerUp *
       _readNVM
       _tickGet
     _consumer2QPowerUp *
     _initTicker *
     _initTimedResponse *
     _leds_powerUp *
       _tickGet
     _mnsPowerUp *
       _readNVM
       _setLEDsByMode
       _tickGet
     _nvPowerUp *
       _loadNvCache
     _teachPowerUp *
       _rebuildHashtable
   _readNVM
   _setup
     _configIO
     _getNV
     _initInputScan
       _getNV
       _readInput
       _readNVM
     _initOutputs
     _initServos
       _getNV
       _readNVM
       _setOutputPosition
         _getNV
         _readNVM (ARG)
         _setDigitalOutput (ARG)
         _setOutputPin (ARG)
         _setServoPosition (ARG)
       _tickGet
     _setTimedResponseDelay
     _tickGet
     _universalEventsInit

 _isrLow (ROOT)
   _lowIsr
     NULL(Fake) *
     _APP_lowIsr *
     _canIsr *
       _canFillRxFifo
         i1_getBufferPointer
         i1_getNextWriteMessage
         i1_updateModuleErrorStatus
       _canTxError
         _checkTxFifo
           i1_getNextWriteMessage
           i1_isEvent
           i1_pop
           i1_tickGet
           i1_updateModuleErrorStatus
         i1_updateModuleErrorStatus
       _checkCANTimeout
         _checkTxFifo
         i1_tickGet
         i1_updateModuleErrorStatus
       _checkTxFifo
     _mnsLowIsr *

 _isrHigh (ROOT)
   _highIsr
     NULL(Fake) *
     _APP_highIsr *
       _timer1DoneInterruptHandler
         i2_getNV
         i2_setOutputPin
           i2_getNV (ARG)
       _timer3DoneInterruptHandler
         i2_getNV
         i2_setOutputPin
     i2_canIsr *
       i2_canFillRxFifo
         i2_getBufferPointer
         i2_getNextWriteMessage
         i2_updateModuleErrorStatus
       i2_canTxError
         i2_checkTxFifo
           i2_getNextWriteMessage
           i2_isEvent
           i2_pop
           i2_tickGet
           i2_updateModuleErrorStatus
         i2_updateModuleErrorStatus
       i2_checkCANTimeout
         i2_checkTxFifo
         i2_tickGet
         i2_updateModuleErrorStatus
       i2_checkTxFifo

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0     3A0      67       25.4%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      65        0.0%
BANK13             100      0       0      22        0.0%
BITBANK12          100      0       0      64        0.0%
BANK12             100      0       0      21        0.0%
BITBANK11          100      0       0      63        0.0%
BANK11             100      0       0      20        0.0%
BITBANK10          100      0       0      62        0.0%
BANK10             100      0       0      19        0.0%
BITBANK9           100      0       0      61        0.0%
BANK9              100      0       0      18        0.0%
BITBANK8           100      0       0      60        0.0%
BANK8              100      0       0      17        0.0%
BITBANK7           100      0       0      59        0.0%
BANK7              100      0       0      16        0.0%
BITBANK6           100      0       0      58        0.0%
BANK6              100      0       0      15        0.0%
BITBANK5           100      0       0      57        0.0%
BANK5              100      0      80      14       50.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      C8      13       78.1%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C8      11       78.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100     2D      F1       9       94.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100     4A      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     49      73       5       71.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      54       1       89.4%
BITBANK14           41      0       0      66        0.0%
BANK14              41      0       0      23        0.0%
BITBIGSFRlllhl      2B      0       0      54        0.0%
BITBIGSFRllhhh      2A      0       0      40        0.0%
BITBIGSFRlhhhhh     19      0       0      26        0.0%
BITBIGSFRllhlh      16      0       0      47        0.0%
BITBIGSFRlhhhhh     15      0       0      28        0.0%
BITBIGSFRllhllh     10      0       0      48        0.0%
BITBIGSFRllhllh      F      0       0      49        0.0%
BITBIGSFRllhllh      F      0       0      50        0.0%
BITBIGSFRllhllh      F      0       0      51        0.0%
BITBIGSFRllhllh      F      0       0      52        0.0%
BITBIGSFRllhllh      F      0       0      53        0.0%
BITBIGSFRlhhlll      D      0       0      38        0.0%
BITBIGSFRllhhll      A      0       0      45        0.0%
BITBIGSFRllhhll      A      0       0      43        0.0%
BITBIGSFRlhhhhh      8      0       0      31        0.0%
BITBIGSFRhh          7      0       0      24        0.0%
BITBIGSFRlhhllh      6      0       0      36        0.0%
BITBIGSFRlhhlh       6      0       0      35        0.0%
BITBIGSFRlhhhll      6      0       0      34        0.0%
BITBIGSFRlhhlll      5      0       0      37        0.0%
BITBIGSFRlhhhhh      5      0       0      30        0.0%
BITBIGSFRlhhhhh      4      0       0      27        0.0%
BITBIGSFRlhhhhh      3      0       0      29        0.0%
BITBIGSFRllhhll      2      0       0      44        0.0%
BITBIGSFRllhhlh      2      0       0      41        0.0%
BITBIGSFRllhhlh      2      0       0      42        0.0%
BITBIGSFRllhhll      2      0       0      46        0.0%
BITBIGSFRlhhlll      2      0       0      39        0.0%
BITBIGSFRhl          2      0       0      25        0.0%
BITBIGSFRllll        2      0       0      55        0.0%
BITBIGSFRlhhhlh      1      0       0      33        0.0%
BITBIGSFRlhhhhl      1      0       0      32        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4C7      56        0.0%
DATA                 0      0     867       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri May 17 21:53:58 2024

                   nerdCallback@nodeNumber 01C6                        findEvent@tableIndex 01C1  
                __end_of_pollTimedResponse A938                     ?_handleSelfEnumeration 0097  
                       APP_GetEventState@h 002B                           sendMessage@data1 01B6  
                         sendMessage@data2 01B7                           sendMessage@data3 01B8  
                         sendMessage@data4 01B9                           sendMessage@data5 01BA  
                         sendMessage@data6 01BB                           sendMessage@data7 01BC  
                      findEvent@nodeNumber 01B5              __end_of_setTimedResponseDelay C39A  
            __end_of_producerGetDiagnostic BC6A                          ackEventCheckLen@m 01C6  
                           _completed$1519 0092                              ?_APP_addEvent 01E1  
                    _timedResponseCallback 001D                               ___awdiv@sign 009C  
                          _normalReadIndex 00C9                                         _io 00CB  
                                       _nn 00B3                                         bsr 0FE0  
                              ?_APP_lowIsr 002B                        ___wmul@multiplicand 0093  
                             configIO@type 01BD                         i2_getBufferPointer A2EA  
           _sendInvertedProducedEvent$1380 01CB                           ?_flushFlashBlock 002B  
                   _eventConsumer2QService EF0F                               ?_APP_highIsr 002B  
                  __end_of_eraseFlashBlock B764                __end_of_universalEventsInit C2FE  
                ?_consumer2QProcessMessage 01F4                                _startServos 98B4  
                           ??_getTwoAction 0093                                        l225 59C2  
                __end_of_deleteActionRange 960C                                        l500 A23C  
                                      l245 6C90                                        l318 4B86  
                                      l510 A592                                        l247 6D26  
                                      l424 38A0                                        l408 368A  
                                      l505 A54C                                        l417 3696  
                                      l460 398E                                        l428 3894  
                                      l449 39D6                                        l459 3982  
                              _startOutput B278                                        l583 745A  
                                      l496 A1F8                                        l774 B380  
                                      l871 A2C2                                        l768 323C  
                          checkPowerOnPb@i 01EE                         _enumerationResults 0214  
                    deleteHappeningRange@h 01D9            ?_APP_isSuitableTimeToWriteFlash 002B  
         ??_APP_isSuitableTimeToWriteFlash 008D                            _initServos$8020 00A7  
                          _initServos$8021 00A6                        _expeditedWriteIndex 00C6  
                                      _evs 0200                                        _pop 9BD4  
                            _APP_nvDefault 902C                               ___awmod@sign 0092  
                                      prod 0FF3                    i2getNextWriteMessage@wr 0036  
                                      tosl 0FFD                                        wreg 0FE8  
             tableIndexToEvtIdx@tableIndex 008D                        ?i2_getBufferPointer 002B  
     sendInvertedProducedEvent@can_send_on 01C8                    APP_nvValueChanged@index 01ED  
                  APP_nvValueChanged@value 01E8        __end_of_mnsTRallDiagnosticsCallback 8564  
              _mnsTRallDiagnosticsCallback 847E                                       l1044 1436  
                                     l1128 C350                                       l1228 682C  
                                     l2151 642C                                       l3016 A72C  
                                     l2136 637C                                       l2153 6432  
                                     l2145 6404                                       l2138 6384  
                                     l2171 6534                                       l2147 6414  
                                     l2156 6488                                       l2173 653E  
                                     l2165 650A                                       l2149 6426  
                                     l2158 6490                                       l2167 651A  
                                     l2169 652A                                       l2425 C036  
                                     l2362 9522                                       l2186 8F88  
                                     l1466 239C                                       l1564 BB72  
                                     l2550 AEC6                                       l2543 C234  
                                     l1831 8018                                       l1664 7896  
                                     l2369 9472                                       l1825 7FA0  
                                     l2570 B750                                       l1930 460E  
                                     l2394 40DE                                       l2556 AEDC  
                                     l1908 B626                                       l1925 4588  
                                     l1829 7FEC                                       l1937 46E0  
                                     l2841 69D2                                       l1867 1B04  
                                     l2588 B8A6                                       l2845 6A14  
                                     l2891 533A                                       l1899 2240  
                                     l2894 70FA              __end_ofi2_getNextWriteMessage 8CFE  
                                     l2898 711E                                       _BIE0 0E7E  
                       doEvuln@eventNumber 01CB                                       ?_pop 008D  
                         setOutputState@io 0095                                       _EEIF 7DBE  
                   __end_of_checkPowerOnPb B278                                       _LATA 0F89  
                                     _LATB 0F8A                                       _LATC 0F8B  
                                     _IPR5 0F78                          doEvuln@nodeNumber 01C9  
                           configIO@action 01BC                                       _WPUB 0F5B  
                        setOutputPin@state 0091                             i2_setOutputPin 7268  
                              _outputState 0274                              _pushTwoAction AE32  
                    i1_getNextWriteMessage 8A8C                                       _have AC76  
                                     _main B7B0                                       _name 0848  
                                     _loop 6D32                                       _poll 3D7E  
               __end_of_mnsTRrqnpnCallback BD66                                       fsr1h 0FE2  
                                     fsr2h 0FDA                                       indf1 0FE7  
                                     indf2 0FDF                                       fsr1l 0FE1  
                                     fsr2l 0FD9                                       _push 40EE  
                      setMultiState@action 0091                                       btemp 0055  
                        ?_removeTableEntry 002B                                       pop@q 008D  
                                     prodh 0FF4                                       prodl 0FF3  
                          __end_ofi2_getNV BB58                                       start 081C  
                             ?_loadNvCache 002B                         bounceDown@reversed 01B5  
                            setupTimer1@io 009C                        _setExpeditedActions C3A2  
                            setupTimer3@io 009C                 __end_of_startDigitalOutput 5B68  
                           _setBounceState 96B8                consumer2QProcessMessage@end 02C4  
                     ??i2_getBufferPointer 002D                consumer2QProcessMessage@opc 02C6  
                       ??_removeTableEntry 01BE                              ?_APP_testMode 002B  
                          getEN@tableIndex 00A1                               ___param_bank 0000  
                           ??_APP_addEvent 00A9                      __end_of_defaultEvents 7578  
                        findServiceIndex@i 0090                                completed@io 0093  
                     __end_of_EEPROM_Write AF02                                _uptimeTimer 015C  
                                    ??_pop 008F                                      l20000 AC6A  
                                    l20100 8658                                      l20014 BA06  
                                    l20200 8F7E                                      l20120 8668  
                                    l20104 865C                                      _B0CON 0E80  
                                    l20210 8FB8                                      l21010 9EC2  
                                    l21002 9E46                                      l20018 BA1A  
                                    l20042 88FC                                      l20204 8F92  
                                    l20132 8676                                      l20124 866C  
                                    l20116 8664                                      l20108 8660  
                                    l20044 893A                                      l20206 8FA4  
                                    l20214 8FCA                                      l21030 B1A0  
                                    l20208 8FAE                                      l20128 8672  
                                    l20056 89AC                                      l20072 BFE0  
                                    l21104 7BF4                                      _B1CON 0E90  
                                    l22010 55E4                                      l20162 86A0  
                                    l20146 868A                                      l20138 8686  
                                    l20242 BE72                                      l20330 BBE4  
                                    l21122 ADD4                                      l21026 B19C  
                                    l21034 B1A4                                      l20228 BAAE  
                                    l22012 55E8                                      l20092 8650  
                                    l20180 86B2                                      l21204 C0E4  
                                    l21212 AF0E                                      l20422 8114  
                                    l20414 809C                                      l20430 8184  
                                    l20510 3286                                      l22006 55C2  
                                    l20158 868E                                      l20190 BC1A  
                                    l21230 9FA8                                      l21310 BD42  
                                    l21054 918A                                      l21046 9130  
                                    l21070 AA02                                      l22102 369E  
                                    l20360 B402                                      l20520 33DE  
                                    l20512 32AE                                      l20096 8654  
                                    l21080 7B24                                      l22104 371E  
                                    l15000 BF42                                      _B2CON 0EA0  
                                    l20418 80D8                                      l20522 3414  
                                    l20514 32D8                                      l20506 3244  
                                    l22042 6C44                                      l22026 6B66  
                                    l20450 AE6A                                      l21242 BF6A  
                                    l21250 BF82                                      l21322 A948  
                                    l21218 AF64                                      l21154 AD8C  
                                    l21138 BB62                                      l23002 1DD4  
                                    l20356 B3EE                                      l20196 8F6A  
                                    l20428 8150                                      l20524 343C  
                                    l20508 325C                                      l20540 35D4  
                                    l22036 6BEE                                      l21244 BF72  
                                    l21340 C278                                      l21236 9FFE  
                                    l22204 3910                                      l22140 3828  
                                    l22124 37A4                                      l23012 1E02  
                                    l21430 6494                                      l20198 8F74  
                                    l20526 345A                                      l20542 360A  
                                    l20606 A79A                                      l20622 B296  
                                    l20614 B27E                                      l22046 6C6C  
                                    l20710 09EC                                      l21246 BF7A  
                                    l21190 C0D8                                      l21350 C280  
                                    l21086 7B5C                                      l21182 93D0  
                                    l21174 939C                                      l21166 936C  
                                    l22214 3976                                      l22206 3956  
                                    l23030 210A                                      l23022 20DC  
                                    l21424 6438                                      l20640 A260  
                                    l20632 B2AE                                      l22056 6CE2  
                                    l20712 0A0E                                      l20704 0978  
                                    l23200 46D2                                      l21344 C27C  
                                    l21328 A95C                                      l21096 7BA2  
                                    l21176 93AE                                      l22232 39A6  
                                    l22152 3852                                      l22144 383E  
                                    l22160 3864                                      l22400 60BA  
                                    l23016 1EE8                                      l22304 C188  
                                    _B3CON 0EB0                                      l21258 856A  
                                    l21442 64E4                                      l21426 648A  
                                    l20626 B2A2                                      l20618 B28A  
                                    l22058 6CEE                                      l20722 0A8C  
                                    l21194 C0DC                                      l21290 84C4  
                                    l21186 93E8                                      l22170 38AC  
                                    l22138 37E2                                      l22082 3628  
                                    l23050 2164                                      l23034 2126  
                                    l23106 2246                                      l21436 64BE  
                                    l21380 637E                                      l20644 A27A  
                                    l20636 A25C                                      l20484 A568  
                                    l20572 B49E                                      l20812 0F86  
                                    l20740 0B76                                      l21604 75BC  
                                    l23140 44B4                                      l22180 38CE  
                                    l22332 6810                                      l22340 6828  
                                    l22404 60BE                                      l21390 63B4  
                                    l21470 6544                                      l20558 9ABE  
                                    l20590 A748                                      l20582 B4B6  
                                    l20910 1640                                      l20902 15AA  
                                    l20742 0B98                                      l20734 0B04  
                                    l20718 0A58                                      l21710 A058  
                                    l21702 A044                                      l21622 7642  
                                    l21198 C0E0                                      l21278 A418  
                                    l21358 B9B8                                      l22318 67C6  
                                    l22430 6220                                      l20670 ABA4  
                                    l21384 6388                                      l20576 B4AA  
                                    l20568 B492                                      l20840 1182  
                                    l20832 10CE                                      l20752 0C16  
                                    l20728 0AD0                                      l21632 767C  
                                    l21624 7644                                      l23152 44F8  
                                    l22520 2364                                      l22280 A178  
                                    l22360 6850                                      l22432 6278  
                                    l22408 613C                                      l23072 21DA  
                                    l23320 4928                                      l21800 976A  
                                    _B4CON 0EC0                                      l20658 A2C6  
                                    l20594 A762                                      l20586 A744  
                                    l20906 160A                                      l20826 103E  
                                    l20770 0D34                                      l20690 08B6  
                                    l20914 1678                                      l21706 A04E  
                                    l21490 9BFC                                      l21618 75FE  
                                    l23218 4762                                      l23146 44D0  
                                    l22522 2368                                      l22274 A164  
                                    l22362 6894                                      l23074 21EC  
                                    l20666 AB98                                      l21396 63DC  
                                    l20916 16A6                                      l20844 11DC  
                                    l20836 1128                                      l20828 1076  
                                    l20924 172A                                      l20748 0BE2  
                                    l21716 A062                                      l21636 7682  
                                    l23172 45A2                                      l22292 A196  
                                    l22268 A14A                                      l22364 68AA  
                                    l22372 68C4                                      l22436 62BE  
                                    l22444 62F6                                      l23308 48DA  
                                    l23252 4786                                      l21812 97AC  
                                    l21804 9772                                      l20926 175A  
                                    l20862 12EA                                      l20854 127E  
                                    l20846 11EE                                      l20782 0DD0  
                                    l20758 0C52                                      l20694 0910  
                                    l20774 0D6C                                      l20686 085A  
                                    l21654 76A8                                      l21646 76A0  
                                    l23158 451C                                      l21582 C25E  
                                    l23422 A8D0                                      l22526 236C  
                                    l22374 68FA                                      l22446 6320  
                                    l23086 2216                                      l23326 4954  
                                    l23270 47FC                                      l23238 C090  
                                    l20678 ABD8                                      l21912 4CE2  
                                    l21920 4D58                                      l20856 12A0  
                                    l20776 0DAA                                      l20768 0D0C  
                                    l20696 0932                                      l21832 98C6  
                                    l21736 8240                                      l21728 81B6  
                                    l23168 4582                                      l21592 C266  
                                    l23432 A908                                      l23424 A8F6  
                                    l22616 25E2                                      l22560 248E  
                                    l22544 2418                                      l22480 22B2  
                                    l22800 179C                                      l23360 4A3E  
                                    l23336 497E                                      l23264 47B8  
                                    l22464 BF9E                                      l21760 7C3E  
                                    _B5CON 0ED0                                      l21906 4CA4  
                                    l21914 4CF8                                      l21922 4D6A  
                                    l20882 141A                                      l20874 13AE  
                                    l20866 1320                                      l20698 0944  
                                    l21690 A026                                      l21682 A012  
                                    l21746 826C                                      l21666 B978  
                                    l21674 B998                                      l21498 9C64  
                                    l21658 76B0                                      l23194 467C  
                                    l21586 C262                                      l23434 A90E  
                                    l22618 25E8                                      l22474 2294  
                                    l23274 4800                                      l21818 97FC  
                                    l21770 7CC4                                      l21762 7C4C  
                                    l21908 4CBA                                      l21924 4D7A  
                                    l20876 13D0                                      l20796 0EA2  
                                    l20964 9D46                                      l20980 9CAC  
                                    l21844 990E                                      l21596 757A  
                                    l22492 22EE                                      l22740 286A  
                                    l22396 6098                                      l22812 180C  
                                    l23348 49E8                                      l23268 47F6  
                                    l21756 7C1A                                      l18014 A66C  
                                    l18102 785A                                      l23446 94C8  
                                    l21918 4D36                                      l21862 4AAA  
                                    l21950 53A0                                      l20894 14EA  
                                    l21694 A030                                      l21686 A01C  
                                    l21678 A008                                      l23438 A914  
                                    l22718 27A8                                      l22638 2638  
                                    l22486 22E8                                      l22830 18C0  
                                    l22814 1810                                      l23286 4856  
                                    l23374 4A6A                                      l21774 7CF6  
                                    l23702 9852                                      l19000 4F5C  
                                    l18120 7916                                      l21944 537C  
                                    l21936 5364                                      l22576 2514  
                                    l22920 1A9C                                      l22912 1A56  
                                    l22904 1A2A                                      l22840 191A  
                                    l22824 183A                                      l23560 9A40  
                                    l18210 8D2E                                      l19010 4FEC  
                                    l19002 4F9A                                      l14850 A6DE  
                                    l23458 9418                                      l21858 4AA2  
                                    l21962 53E8                                      l20898 154A  
                                    l23730 6DE2                                      l21698 A03A  
                                    l22658 2688                                      l22850 1940  
                                    l22818 1814                                      l23298 48B0  
                                    l22770 7FF0                                      l18044 A6B4  
                                    l18212 8D32                                      l18108 78A4  
                                    l18300 7DD8                                      l19100 A5D4  
                                    l14852 A6EA                                      l21876 4B36  
                                    l21956 53C4                                      l23644 7188  
                                    l23660 7250                                      l22596 2560  
                                    l22844 191E                                      l23564 9A44  
                                    l23548 9A0E                                      l23812 3E10  
                                    l23396 B92E                                      l22764 7FC8  
                                    l23492 69DE                                      l18230 B6D2  
                                    l19014 502A                                      l14862 A71E  
                                    l19030 99C0                                      l19022 9976  
                                    l22678 26D8                                      l22950 1B56  
                                    l22942 1B2A                                      l22838 18E2  
                                    l23486 69D6                                      l18224 8DC8  
                                    l18216 8D44                                      l18240 B6F6  
                                    l18312 7E46                                      l19040 99DC  
                                    l21896 4C46                                      l21888 4BD0  
                                    l21984 54C8                                      l21968 540C  
                                    l23744 6E98                                      l23736 6E38  
                                    l23824 3E74                                      l22784 803A  
                                    l22776 801C                                      l18162 AEA4  
                                    l18234 B6E4                                      l18138 92CC  
                                    l18058 B6C8                                      l18402 7F70  
                                    l19106 A5EA                                      l19122 A61C  
                                    l19034 99CE                                      l21898 4C56  
                                    l21986 54D0                                      l22698 2738  
                                    l22962 1BAE                                      l22954 1B80  
                                    l22874 19AE                                      l22858 196C  
                                    l23578 9A6E                                      l23818 3E6E  
                                    l18332 82AA                                      l18308 7E02  
                                    l19108 A5F2                                      l19300 91CE  
                                    l22892 19F6                                      l22796 1770  
                                    l22884 19BA                                      l23764 8742  
                                    l18326 82A4                                      l18254 7D42  
                                    l19070 7430                                      l19126 A62A  
                                    l19118 A612                                      l19142 AD0A  
                                    l23790 B240                                      l19038 99D8  
                                    l19310 922C                                      l22982 1D18  
                                    l22966 1C2C                                      l22886 19E6  
                                    l18360 8352                                      l18096 7848  
                                    l18272 7D62                                      l18520 3A80  
                                    l19072 7484                                      l18600 5090  
                                    l19304 91EE                                      l22976 1C62  
                                    l23864 40BC                                      l23856 3FEA  
                                    l18354 8340                                      l18338 82AE  
                                    l18266 7D5E                                      l18418 B8FE  
                                    l18530 3A90                                      l18506 39FE  
                                    l19074 74AC                                      l19058 B638  
                                    l19162 AD50                                      l19154 AD38  
                                    l19146 AD18                                      l19138 ACFE  
                                    l18442 ACDC                                      l18434 AC80  
                                    l19218 BECA                                      l19322 96BE  
                                    l19306 91FE                                      l19410 B604  
                                    l23938 B7F0                                      l18196 AEFE  
                                    l18364 8356                                      l19148 AD20  
                                    l19252 9046                                      l19244 903E  
                                    l19236 903A                                      l19332 9736  
                                    l19340 AF6E                                      l22996 1D90  
                                    l22988 1D64                                      l18702 6FBE  
                                    l18526 3A8A                                      l19078 7558  
                                    l19182 B08A                                      l19094 A5C4  
                                    l19158 AD42                                      l18606 50AC  
                                    l19326 96EC                                      l19342 AF84  
                                    l19190 B80C                                      l19406 B5F4  
                                    l18704 6FFC                                      l18712 707C  
                                    l18288 7D96                                      l18384 7EAE  
                                    l18560 3C86                                      l18544 3BD2  
                                    l19256 904A                                      l19248 9042  
                                    l19328 9708                                      l19336 9752  
                                    l19360 8BD6                                      l19352 8B64  
                                    l19280 9612                                      l19600 5A58  
                                    l18730 A3C2                                      l18722 A398  
                                    l18394 7F28                                      l19266 904E  
                                    l18490 8A64                                      l18474 4444  
                                    l18466 4150                                      l19354 8B80  
                                    l19290 968A                                      l19346 AF9E  
                                    l19610 5AA2                                      l19418 B61C  
                                    l18708 703E                                      l18740 A402  
                                    l18396 7F62                                      l18580 3D6E  
                                    l18900 671C                                      l19516 C100  
                                    l19268 9082                                      l18484 8A22  
                                    l18644 521E                                      l19356 8B9C  
                                    l19284 9640                                      l19348 AFAE  
                                    l17934 B79C                                      l18558 3C84  
                                    l19534 B390                                      l19366 8C10  
                                    l19286 965C                                      l19294 96A6  
                                    l19606 5A78                                      l19374 9B82  
                                    l17952 B1F0                                      l17944 B1C0  
                                    l18680 BA80                                      l18568 3C98  
                                    l18808 88CE                                      l18664 5314  
                                    l19624 5B2C                                      l19616 5ACA  
                                    l19712 2E08                                      l18754 9568  
                                    l19554 B3C0                                      l19298 91C0  
                                    l19634 BC86                                      l19730 2EA8  
                                    l17948 B1D8                                      l18692 6EFC  
                                    l18924 678C                                      l18908 6762  
                                    l19388 B4E8                                      l19724 2E68  
                                    l19716 2E18                                      l17958 B1FA  
                                    l18686 BA90                                      l18854 A4DA  
                                    l18846 A4A0                                      l18862 A510  
                                    l18918 6774                                      l19646 A1EA  
                                    l19590 59E0                                      l19814 B360  
                                    l18696 6F3E                                      l18856 A4E6  
                                    l18848 A4A4                                      l18776 95E8  
                                    l18768 958C                                      l18784 95FC  
                                    l19904 2B70                                      l19808 B35C  
                                    l19760 3082                                      l19752 2FF0  
                                    l19744 2F72                                      l19736 2EE6  
                                    l18698 6F7C                                      l18962 4DE6  
                                    l18882 65C2                                      l18946 B884  
                                    l18938 B84A                                      l19658 A212  
                                    l19578 5984                                      l19914 2D46  
                                    l19922 2DA4                                      l19850 5CE4  
                                    l19826 5BA4                                      l18980 4E64  
                                    l18956 4D8E                                      l18876 65BA  
                                    l18796 8810                                      l19908 2BCC  
                                    l19852 5CFC                                      l19772 3100  
                                    l19748 2FB2                                      l17998 A648  
                                    l18990 4ECC                                      l18982 4E7A  
                                    l18974 4E42                                      l18966 4E04  
                                    l18958 4DA4                                      l19918 2DA0  
                                    l19846 5CBC                                      l19838 5C4C  
                                    l19942 A83A                                      l19766 30C2  
                                    l18992 4F0A                                      l19696 BEF2  
                                    l19864 5D72                                      l19784 317C  
                                    l19938 A836                                      l19954 BEA0  
                                    l19778 313E                                      l19794 320E  
                                    l19876 5DD0                                      l19894 29AE  
                                    l19878 5E00                                      l19982 BCBC  
                                    l19992 AC0E                                      l19968 BC50  
                                    ?_have 002B                                      ?_main 002B  
                ??_consumer2QGetDiagnostic 008F                               ?_initOutputs 002B  
                      processEnumeration@i 01BE                            __end_of___awdiv A634  
                                    _EEADR 0F74                                      ?_loop 002B  
                        setOutputState@act 0093                            __end_of___awmod AD5A  
                                    ?_poll 002B                                      ?_push 008D  
                                    _BSEL0 0E7D                        doSOD@event_inverted 01CF  
                          __end_of___lldiv A73E                                      u20000 BC7C  
                                    u20100 BEFC                                      u20020 A1E0  
                                    u20110 BEFE                                      _T0CON 0FD5  
                          ___awdiv@divisor 0099                                      u21110 3314  
                                    u21120 3316                                      u20241 300E  
                                    u21210 3496                                      u21130 332E  
                                    u22010 1538                                      u21300 357C  
                                    u21220 3498                                      u21140 336A  
                                    u20500 29E2                                      u22100 171A  
                                    u22020 153A                                      u21310 35B8  
                                    u21230 34B0                                      u21150 336C  
                                    u20430 5D5E                                      u20191 2F04  
                                    u21320 35BA                                      u21240 34EC  
                                    u21080 32BC                                      u21400 A796  
                                    u20360 5B9E                                      u22040 1598  
                                    u23000 820A                                      u21250 34EE  
                                    u21170 33F8                                      u21090 32BE  
                                    u20370 5BA0                                      u22050 159A  
                                    u22130 9D94                                      u20610 BC46  
                                    u21420 A276                                      u21260 3506  
                                    u21180 33FA                                      u22140 9D96  
                                    u20700 88F8                                      u21270 3542  
                                    u20470 298C                                      u22070 15F8  
                                    u23014 821E                                      u20630 BCB2  
                                    u23110 97A8                                      u23015 821A  
                                    u21280 3544                                      u20480 29AE  
                                    u22080 15FA                                      u22160 9CFA  
                                    u23040 828A                                      u23120 97AA  
                                    u21370 A75E                                      u20490 29E0  
                                    u22170 9CFC                                      u23210 993C  
                                    u24010 67C2                                      u21460 A2BE  
                                    u21700 0CF8                                      u20740 8682  
                                    u22500 84C0                                      u21710 0CFA  
                                    u20590 BE96                                      u21470 ABCC  
                                    u14520 A6EE                                      u23320 4BCC  
                                    u21800 0F40                                      u21720 0D22  
                                    u20760 BC10                                      u21480 ABCE  
                                    u23330 4BCE                                      u21730 0D24  
                                    u23170 98F4                                      u20690 BA16  
                                    u24210 22E2                                      u22700 6510  
                                    u20924 80CC                                      u21900 1306  
                                    u21580 0ABC                                      u25020 455C  
                                    u20860 BBDA                                      u20925 80C8  
                                    u22710 6520                                      u20934 8108  
                                    u23430 4D20                                      u21750 0E58  
                                    u21590 0ABE                                      u20790 BE68  
                                    u22518 8508                                      u20935 8104  
                                    u22519 851C                                      u20944 8144  
                                    u23440 4D22                                      u23360 4C10  
                                    u21760 0E5A                                      u25120 4724  
                                    u25040 458C                                      u22560 B9B4  
                                    u20945 8140                                      u23370 4C12  
                                    u23450 535E                                      u25050 45E2  
                                    u18100 82A0                                      u22580 6362  
                                    u25300 A8CC                                      u22478 8610  
                                    u23630 6C16                                      u21790 0F3E  
                                    u22910 765C                                      u25070 4652  
                                    u24190 22AE                                      u25230 4914  
                                    u22479 8622                                      u18120 8338  
                                    u23640 6C18                                      u23720 3624  
                                    u25160 4782                                      u25090 46BA  
                                    u25250 49B8                                      u25410 9A0A  
                                    u23580 55EE                                      u21980 14D8  
                                    u25500 7118                                      u19030 4E90  
                                    u21990 14DA                                      u22870 75B8  
                                    u25318 A8D4                                      u25319 A8F0  
                                    u19104 4F8C                                      u18080 7E4E  
                                    u25600 6ED8                                      u19105 4F88  
                                    u19130 4FB0                                      u22890 763C  
                                    u19044 4EC0                                      u19300 AD24  
                                    u24580 7F96                                      u19045 4EBC  
                                    u25285 B952                                      u19054 4EFC  
                                    u18350 3A86                                      u23950 39E0  
                                    u23790 37D4                                      u25286 B954  
                                    u25390 6A08                                      u19055 4EF8  
                                    u19144 4FE0                                      u19080 4F20  
                                    u19240 A5F6                                      u19400 B82C  
                                    u23960 A146                                      u19145 4FDC  
                                    u22985 81CA                                      u17650 C34C  
                                    u19154 501C                                      u25570 6E20  
                                    u19155 5018                                      u18604 6FB2  
                                    u19420 B838                                      u24908 20BA  
                                    u24828 1CC8                                      u25740 3E56  
                                    u18605 6FAE                                      u24909 20CE  
                                    u24829 1CEA                                      u18614 6FEE  
                                    u17910 AECA                                      u17670 C334  
                                    u19094 4F50                                      u18390 3C8C  
                                    u19350 B07A                                      u25590 6E80  
                                    u25638 87E8                                      u18615 6FEA  
                                    u19095 4F4C                                      u25639 87FA  
                                    u17840 783C                                      u18634 7032  
                                    u18650 A3BE                                      u19530 8BBA  
                                    u19370 B816                                      u24970 4492  
                                    u25818 3FA8                                      u18635 702E  
                                    u25819 3FBA                                      u18644 706E  
                                    u17860 789A                                      u19540 8BF4  
                                    u19380 B818                                      u18645 706A  
                                    u18574 6F32                                      u18830 A4AE  
                                    u17950 8D1A                                      u18575 6F2E  
                                    u18495 510C                                      u18584 6F6E  
                                    u18840 A4B0                                      u19800 599E  
                                    u24888 1FBE                                      u18585 6F6A  
                                    u24889 1FD2                                      u18930 676A  
                                    u24898 203C                                      u25890 40C6  
                                    u25778 3F1A                            reqevCallback@ev 01CC  
                                    u18915 66D8                       __end_of_factoryReset 864A  
                                    u24899 2050                                      u25779 3F2C  
                                    u18860 A4CE                                      u17980 8D70  
                                    u18916 66DC                                      u18828 A8AA  
                                    u19820 59BE                                      u18870 A4D0  
                                    u19910 5AC6                                      u19830 59C0  
                                    u25878 409C                                      u25879 40AE  
                                    u19920 5AC8                                      u18890 65B6  
                                    u19770 5922                                      u19780 5924  
                                    u17998 8D74                                      u19950 5AFC  
                                    u19790 599C                          _initTimedResponse C3AA  
                                    u19960 5AFE                                      u19970 5B38  
                                    u19980 5B3A                             ?_APP_nvDefault 002B  
                          ___awdiv@counter 009B                                      _MSEL0 0E79  
                                    _MSEL1 0E7A                                      _MSEL2 0E7B  
                                    _MSEL3 0E7C                   __end_of_nvTRnvrdCallback B9EE  
                             i2_canTxError B0F8           __end_of_factoryResetGlobalEvents C3CA  
                           _APP_nvValidate B32C                                      _TMR0H 0FD7  
                                    _TMR1H 0FCF                                      _TMR0L 0FD6  
                                    _TMR1L 0FCE                                      _TMR3H 0FB3  
                                    _TMR3L 0FB2                                      _PORTA 0F80  
                                    _PORTB 0F81                                      _PORTC 0F82  
                         i2setOutputPin@io 0032                                      _TRISA 0F92  
                                    _TRISB 0F93                                      _TRISC 0F94  
                          __end_of_doEvlrn 91BA                            __end_of_doNenrd ADCA  
                     ?_setExpeditedActions 002B               nvProcessMessage@valueOrError 01F8  
                          __end_of_doEvuln AA2E                             _ackDiagnostics 00D1  
                          __end_of_doNnclr BD36                            __end_of_doNnevn AE32  
       sendInvertedProducedEvent@happening 01CA                            __end_of_doReqev 7C14  
                          __end_of_doReval 93FE                                      i1_pop 9DA2  
                                    i2_pop 9ED4                            __end_of_doRqevn BB90  
                          __end_of_getHash C1C2                        ___lmul@multiplicand 0095  
                       _canTransmitTimeout 0015                         ?_initTimedResponse 002B  
                       __p_paramBlock_text 0820                            __end_of_highIsr 8F64  
                            ?_leds_powerUp 002B                            __end_of_isEvent C03A  
                          __end_of_configs EE75                                      _canId 00B7  
                                    _doSOD 323E                ??_sendInvertedProducedEvent 00A9  
                                    _getEN AA2E                                      _getNN 927E  
                                    _getNV BA6A                                      _getEv 782A  
                         needsStarting@act 008D                       _enumerationStartTime 0011  
                          __end_of_readNVM B21A                            __end_of_isrHigh 847E  
                                    _setNV A938                     __end_ofi2_setOutputPin 7416  
                                    _numEv 88E2                                      have@i 0090  
                                    _speed 0100                                      _setup 980E  
                      canReceiveMessage@mp 01C3                            __end_of_mnsPoll 4774  
                            setNV@oldValue 01F2                     APP_preProcessMessage@m 008D  
                          __end_of_tickGet B3DC                            ?_checkPowerOnPb 002B  
                          __end_of_setType B096                                      pclath 0FFA  
                                    pclatu 0FFB                                      tablat 0FF5  
                           ?_pushTwoAction 008D                        ??_initTimedResponse 008D  
                          ??_doneTwoAction 008D            mnsTRallDiagnosticsCallback@step 01C5  
          mnsTRallDiagnosticsCallback@type 002B                                      poll@i 02E7  
                                    poll@m 02E8                           __end_ofi2_canIsr C2D4  
                          __end_of_powerUp 8806                                      plusw2 0FDB  
                                    push@m 008E                                      push@q 008D  
                  reqevCallback@tableIndex 01D2                                      ttemp5 0056  
                                    ttemp6 0059                                      ttemp7 005D  
                         _setServoPosition C0AE                                      status 0FD8  
                                    wtemp8 0056                              ?_nvGetESDdata 002B  
                   __end_of_setBounceState 9764                    reqevCallback@nodeNumber 01CE  
                          __end_of_writeEv 3D7E                   ?_updateModuleErrorStatus 002B  
               __end_of_startTimedResponse BA2C                               bounceDown@io 01B8  
                         ?_nvGetDiagnostic 008D                          ?_startMultiOutput 0091  
                         bounceUp@reversed 00A5                             ??_APP_testMode 008D  
                        ?_startServoOutput 0091               processEnumeration@enumResult 01BC  
                          __initialization AB20                         ??_startMultiOutput 0092  
                       ??_startServoOutput 0092                               __end_of_have ACE8  
                             __end_of_main B7FA                               __end_of_name 0850  
                             __end_of_loop 6EF6                               __end_of_poll 40EE  
                             __end_of_push 4448                              ?_nerdCallback 01C4  
                         i2canFillRxFifo@m 0039                           _setupTimer1$1901 0098  
                         _setupTimer3$1905 0098                       __end_of_getParameter 872A  
                __end_of_initTimedResponse C3B0                     __end_of_APP_nvValidate B384  
                                   ??_have 008D                               ?_setNewCanId 002B  
                                   ??_main 00A9                           ?_eraseFlashBlock 002B  
                                   ??_loop 01E5                               ?_sendMessage 01B5  
                                   ??_poll 02E2                                     ??_push 0090  
                    __end_of_reqevCallback A002                   __end_of_ackEventCheckLen C2BC  
                            __activetblptr 0003                                readNVM@type 0096  
                    ??_setExpeditedActions 008D                    ?_ackEventProcessMessage 01F4  
                        _pollsPerStepSpeed 0254                                     ?i1_pop 0060  
                                   ?i2_pop 002B                             ??_leds_powerUp 0097  
                         _normalWriteIndex 00C8                    APP_postProcessMessage@m 008D  
                 ??_APP_postProcessMessage 008F                      __end_of_setMultiState 8C2E  
                                   ?_doSOD 002B                      __end_of_setServoState 96B8  
                        ?_getBufferPointer 008D                                     ?_getEN 0097  
                                   ?_getNN 0097                                     ?_getNV 008D  
                                   ?_getEv 009D                         _lastServoStartTime 0170  
                                   _CANCON 0F6F                                     _EEADRH 0F75  
                         __end_of_addEvent 6796                                     ?_setNV 01EF  
                                   _EEDATA 0F73                                     _EECON1 0F7F  
                                   _EECON2 0F7E                               _canTransport EF7B  
                                   ?_numEv 002B                                     _ANCON0 0F5D  
                                   _ANCON1 0F5C                           ___awdiv@dividend 0097  
                          ?i2_setOutputPin 002F                                     _CIOCON 0F70  
                                   ?_setup 002B                        APP_nvValidate@index 0094  
      consumer2QProcessMessage@firstAction 02C8                         ??_getBufferPointer 008F  
                      APP_nvValidate@value 0093                         setOutputState@type 0094  
                                ??i2_getNV 002D                     ?i1_getNextWriteMessage 0060  
                         reqevCallback@nEv 01CB                                     i1l2425 C086  
                                   i1l2474 83D4                                     i1l2919 58C0  
                                   i2l2425 C13A                                     i2l2469 844A  
                                   i2l2919 6090                                     _TABLAT 0FF5  
                       rebuildHashtable@ev 01B8                     _producerProcessMessage 6096  
                  ackEventProcessMessage@m 01F4                                     _TBLPTR 0FF6  
                           ??_nvGetESDdata 008D                              _needsStarting A73E  
          __end_of_consumer2QGetDiagnostic BCA0                                     _TXB0D0 0F26  
                                   _TXB0D1 0F27                                     _TXB0D2 0F28  
                                   _TXB0D3 0F29                                     _TXB0D4 0F2A  
                                   _TXB0D5 0F2B                                     _TXB0D6 0F2C  
                                   _TXB0D7 0F2D                           __end_of_checkLen A83E  
                             ?_removeEvent 01C4                            ?_setBounceState 0091  
                      setServoPosition@pos 009F                             _clearAllEvents B4E2  
                 __end_of_APP_factoryReset C11A                       __end_of_getTwoAction C348  
                      setServoState@action 0091                            setMultiState@io 0092  
                            _canFillRxFifo 76D2                                initTicker@i 008F  
                        ?_findServiceIndex 002B                           _rebuildHashtable 7D3C  
                         ??_processActions 01D9                          _canProcessMessage 99FC  
                                   i1pop@q 0060                              teachPowerUp@i 01BE  
                                   i2pop@q 002B                            completed@action 008D  
                 reqevCallback@eventNumber 01D0                 __end_of_APP_nvValueChanged 323E  
                          setServoState@io 0092                           __end_of_configIO 5062  
                       ??_findServiceIndex 008D                  _sendInvertedProducedEvent B7FA  
                       _processEnumeration 7578                                readInput@io 0093  
                       ?_canProcessMessage 01F4                           pollServos@midway 01D0  
               startDigitalOutput@pinState 01D3                             teachCheckLen@m 01C6  
             ??_timer3DoneInterruptHandler 0033                           __end_of_bounceUp 5E04  
                         pollServos@target 01CE                                     ___lmul B3DC  
                 __end_of_mnsGetDiagnostic BC34                             ??_nerdCallback 00A9  
                                   _canIsr C1C2            checkRemoveTableEntry@tableIndex 01C4  
                                   _canPri EE87                                     ___wmul C03A  
                                ??___awdiv 009B                                     _doNerd C23E  
                                ??___awmod 0091                      _APP_preProcessMessage C3C0  
                                   _doWait 9A9A                                     _getEVs 828E  
                                ??___lldiv 009F                  deleteTwoActionQueue@index 008E  
                            _nvDiagnostics 00CD                            getParameter@idx 0092  
                        needsStarting@type 008E                                     _memcpy B966  
                                ??_doEvlrn 00A9                                  ??_doNenrd 00A9  
                                   _isrLow 8392                                  ??_doEvuln 00A9  
                                   getNN@f 00A1                                  ??_doNnclr 00A9  
                                   clear_0 AB28                                     clear_1 AB3A  
                                   clear_2 AB46                                  ??_doNnevn 01BD  
                                   clear_3 AB52                                     clear_4 AB5E  
                                   clear_5 AB6A                                     clear_6 AB76  
                                   clear_7 AB82                                  ??_doReqev 00A9  
                                ??_doReval 01C3                                     _lowIsr 8DCC  
                                   _saveNV BAE4                           ___awdiv@quotient 009D  
                                   getEv@f 00A4                   __end_of_setDigitalOutput A528  
                          ___awmod@divisor 008F                                  ??_doRqevn 00A9  
                         flushFlashBlock@i 008F                        ?_processEnumeration 002B  
                                   have@id 008F                                  ??_getHash 00A7  
                          ??_APP_nvDefault 009F                        ??_canProcessMessage 01F6  
                                   isa$std 0001                            ___awmod@counter 0091  
                          ?_APP_nvValidate 0093                           ??_processOutputs 01C6  
                                ??_highIsr 0044                                  ??_isEvent 008D  
           __end_of_ackEventProcessMessage 6982                   __end_of_setNormalActions C3A2  
              producerProcessMessage@index 02C7                                  ??_readNVM 0094  
                 nerdCallback@serviceIndex 01C4                                  ??_isrHigh 0049  
                            i2_checkTxFifo 5E04                      ackGetDiagnostic@index 0090  
                        _canReceiveMessage 70B4                 __end_of_teachGetDiagnostic BCD6  
                         _nvProcessMessage 4774                                     numEv@f 00A2  
                                ??_mnsPoll 01C2                                     pop@ret 0094  
                         canFillRxFifo@ptr 006C                          ??_mnsFactoryReset 00A9  
                             __mediumconst ED34                                  ??_tickGet 0091  
                         __end_of_services EE87                         _tableIndexToEvtIdx C386  
              findServiceIndex@serviceType 008F                                  ??_setType 00A9  
                                   tblptrh 0FF7                                     tblptrl 0FF6  
                        doEvlrn@nodeNumber 01E8                                     tblptru 0FF8  
                             ??_FLASH_Read 008F                              _initInputScan 9764  
                         __end_of_quantity BBC8                          nvProcessMessage@m 01F4  
                       ?_canReceiveMessage 01BF                                  ??_powerUp 01BF  
                        __end_ofi1_isEvent C08A                               i2getNV@index 002E  
               __end_of_peekTwoActionQueue A256                     getParameterFlags@flags 0091  
                             ?_setupTimer1 002B          mnsTRserviceDiscoveryCallback@step 01C5  
                             ?_setupTimer3 002B                            ??_pushTwoAction 008F  
        mnsTRserviceDiscoveryCallback@type 002B                              checkTxFifo@mp 0073  
                        __end_ofi2_isEvent C13E                          i2_checkCANTimeout B58A  
                     __end_of_APP_addEvent C160                                  ??_writeEv 01C8  
                             __p_name_text 0848                      _checkRemoveTableEntry B8D8  
                      addEvent@eventNumber 01D4                          _expeditedQueueBuf 02B4  
             nvTRnvrdCallback@valueOrError 01C6                           __end_of_writeNVM B718  
                           ?_needsStarting 008D                        ?_tableIndexToEvtIdx 002B  
                   __end_of_clearAllEvents B536                      mnsGetDiagnostic@index 0091  
                        __end_ofi1_tickGet B48C                     startServoOutput@action 0091  
                     ??_processEnumeration 01B8                         ?i2_checkCANTimeout 002B  
                               __accesstop 0060                    __end_of__initialization AB88  
                __end_of_canProcessMessage 9A9A                          __end_ofi2_tickGet B32C  
                            bounceDown@tmp 01B6                        ??_canReceiveMessage 01C1  
                        EEPROM_Write@index 008F                             nvGetESDdata@id 008D  
                        EEPROM_Write@value 0091                             ?_canFillRxFifo 002B  
                           setOutputPin@io 0094                     checkRemoveTableEntry@e 01C5  
                            doEvuln@result 01CD                              ___rparam_used 0001  
                       teachCheckLen@learn 01C9                                 _eeBootFlag 0020  
                        i1tickGet@IntFlag1 0065                          i1tickGet@IntFlag2 0064  
                  ??_handleSelfEnumeration 0099                  ?_factoryResetGlobalEvents 002B  
                            ?_teachPowerUp 002B                           FLASH_Write@index 0090  
                        _getParameterFlags B5DE                              __end_ofi1_pop 9E3C  
                         FLASH_Write@value 0092                              __end_ofi2_pop 9F6C  
                      ??i2_checkCANTimeout 0040                             __pcstackCOMRAM 002B  
               ?i1_updateModuleErrorStatus 002B  mnsTRserviceDiscoveryCallback@serviceIndex 01C4  
                           _io@inputs$F843 00CA                                 _canEsdData C258  
                            __end_of_doSOD 3616                         ?_getParameterFlags 002B  
                            __end_of_getEN AAA8                              __end_of_getNN 9340  
                            __end_of_getNV BAA8                              __end_of_getEv 7980  
                       __end_of_FLASH_Read B7B0                                 _ackPowerUp C182  
                   ackEventCheckLen@needed 01C8                              __end_of_setNV A9B4  
                            __end_of_numEv 89BA                              __end_of_setup 98B4  
                     ??_tableIndexToEvtIdx 008D                               i1isEvent@opc 0061  
                             ??_APP_lowIsr 0060                         APP_factoryReset@io 01E8  
                             ?_startServos 002B                  __end_of_canReceiveMessage 7268  
                             ?_startOutput 01D6               nvTRnvrdCallback@serviceIndex 01C4  
               __end_of_bootProcessMessage A1C2                                  ?i2_canIsr 002B  
                      ??_getParameterFlags 0091                             ?i2_checkTxFifo 002B  
                               _canTxError B096                                 _canService EF69  
                               _canPowerUp 6982                    producerProcessMessage@h 02C6  
                  producerProcessMessage@m 01F4                                    ??i1_pop 0062  
                                  ??i2_pop 002D                             ?_initInputScan 002B  
                reqevCallback@serviceIndex 01C4                       __end_of_APP_testMode C3CC  
               rebuildHashtable@tableIndex 01BD               __end_of_deleteHappeningRange 88E2  
                __end_ofi2_checkCANTimeout B5DE               consumer2QGetDiagnostic@index 0091  
                                  ??_doSOD 01CB                              completed@type 008F  
                                  ??_getEN 0099                                    ??_getNN 0099  
                                  ??_getNV 008F                                    ??_getEv 009F  
                  startDigitalOutput@state 01CE                                saveNV@index 01BA  
                           canFillRxFifo@m 006E                                    ??_setNV 01F0  
                            ?_sendMessage2 00A5                              ?_sendMessage3 00A5  
                            ?_sendMessage4 00A5                              ?_sendMessage5 01BD  
                            ?_sendMessage6 01BD                              ?_sendMessage7 01BD  
                                  ??_numEv 009D                      _setupModePreviousMode 00BE  
                                  ??_setup 00A9                               canEsdData@id 008D  
                              saveNV@value 01B7                               readNVM@index 0091  
     _alwaysSendInvertedProducedEvent$1385 01C9                   mnsProcessMessage@newMode 01F9  
                        initTicker@divider 008E                               _EEPROM_Write AE9A  
                               __pbssBANK0 00A9                                 __pbssBANK1 0100  
                               __pbssBANK2 0200                                 __pbssBANK3 0300  
                               __pbssBANK4 0400                                 __pbssBANK5 0500  
                             loadNvCache@i 009B                               i2isEvent@opc 002C  
                          ?_clearAllEvents 002B                 startTimedResponse@callback 0092  
                          canSendMessage@m 00A0                                 doSOD@state 01CE  
                               _defaultNVs B62E                         __end_of_APP_lowIsr C3CE  
                      setNewCanId@newCanId 01B7                          ??_checkCANTimeout 0075  
                __end_of_getParameterFlags B62E                                 _delayCount 0264  
                           _loadFlashBlock B88E                               _factoryReset 8564  
                           ??_teachPowerUp 00A9                              _setLEDsByMode BF68  
                            addEvent@evVal 01D7                              addEvent@evNum 01D6  
                           _canDiagnostics 017A                              addEvent@error 01DD  
           __end_of_eventConsumer2QService EF21                     processActions@ioAction 01E0  
                              mnsPowerUp@i 0097                         mnsProcessMessage@d 01F7  
                       mnsProcessMessage@i 01F6                         mnsProcessMessage@m 01F4  
                     __end_of_leds_powerUp BD06                     ?_APP_preProcessMessage 008D  
                                  ?___lmul 0091                                    ?_canIsr 002B  
                     i2tickGet@currentTime 0031                                    ?___wmul 0091  
                             initBounce@io 008D                                    ?_doNerd 002B  
                                  ?_doWait 009D          __end_ofi1_updateModuleErrorStatus C370  
                                  ?_getEVs 002B                          i2tickGet@IntFlag1 0030  
                        i2tickGet@IntFlag2 002F                                    ?_memcpy 008D  
                                ?_addEvent 01D2                                    _ECANCON 0F72  
                                  ?_isrLow 002B                         _mnsTRrqnpnCallback BD36  
                           ___lmul@product 0099                        i1getBufferPointer@b 0062  
                                  ?_lowIsr 002B                                    ?_saveNV 01B7  
                      setOutputPosition@io 00A3                      _setTimedResponseDelay C390  
                    _producerGetDiagnostic BC34                                    _BRGCON1 0E43  
                                  _BRGCON2 0E44                                    _BRGCON3 0E45  
                   processActions@peekItem 01DB                   __end_of_setServoPosition C0D2  
                     __end_of_nvGetESDdata C28C                                 ??i2_canIsr 0044  
                       _startDigitalOutput 58C6                           _canGetDiagnostic BBC8  
                               _flashBlock 00AD                                 _flashFlags 00B8  
                                  i1l20404 A0F8                                    i1l20316 58A4  
                                  i1l20370 A0A8                                    i1l20390 A0DA  
                                  i1l20382 A0C6                                    i1l20374 A0B2  
                                  i1l20366 A09E                                    i1l21504 76D4  
                                  i1l20394 A0E4                                    i1l20386 A0D0  
                                  i1l20378 A0BC                                    i1l20298 57AE  
                                  i1l20398 A0EE                                    i1l21526 7718  
                                  i1l21550 B0C0                                    i1l21560 B0EA  
                                  i1l21538 7824                                    i1l23900 8DD2  
                                  i1l23944 83D0                                    i1l19504 9E32  
                                  i2l12410 8CD6                                    i1l19434 B440  
                                  i2l12404 8C94                                    i2l12332 B2DC  
                                  i1l19454 B470                                    i2l13320 7364  
                                  i2l13312 72AC                                    i2l12352 B30E  
                                  i1l19480 8AF4                                    i2l13314 72E8  
                                  i2l13410 A320                                    i2l13402 A30C  
                                  i2l13324 73A4                                    i2l13308 726C  
                                  i2l13342 BB40                                    i2l13318 7328  
                                  i2l13422 A33E                                    i2l13414 A32A  
                                  i2l13406 A316                                    i2l12446 9F62  
                                  i2l12438 9EFA                                    i1l19486 8B36  
                                  i2l13336 BB30                                    i2l13328 73E0  
                                  i1l19496 9DCA                                    i2l13418 A334  
                                  i2l13428 A348                                    i2l13390 A2EE  
                                  i2l13394 A2F8                                    i2l13398 A302  
                                  i2l13478 5F7E                                    i2l13496 6074  
                                  i2l14900 B14C                                    i2l15288 C2DE  
                                  i2l14930 79C2                                    i2l14908 7982  
                                  i2l14942 7ACE                                    i2l14890 B122  
                                  i2l23942 8446                                    i2l23882 8E9E  
                                ?_checkLen 01C2                             _setOutputState B48C  
                        ?_nvTRnvrdCallback 01C4                          reqevCallback@step 01C5  
                   processActions@nextType 01DD                        ?_mnsTRrqnpnCallback 01C4  
                         ??_checkPowerOnPb 00A9                   ackEventProcessMessage@ev 01F8  
                        ??i2_canFillRxFifo 0037                                    _TBLPTRU 0FF8  
          flushFlashBlock@interruptEnabled 008E                                    _RXB0CON 0F60  
                                  _RXB1CON 0F30                         ??_nvTRnvrdCallback 00A9  
                                  _TXB0DLC 0F25                                    _TXB1DLC 0F15  
                                  _TXB0CON 0F20                                    _TXB2DLC 0F05  
                                  _TXB1CON 0F10                                    _TXB2CON 0F00  
                           ??_sendMessage2 00A7                             ??_sendMessage3 00A8  
                           ??_sendMessage4 00A9                             ??_sendMessage5 00A5  
                           ??_sendMessage6 00A5                             ??_sendMessage7 00A5  
                            ?_setOutputPin 0091                        ?_startDigitalOutput 01CE  
                   ?_checkRemoveTableEntry 002B                           _teachDiagnostics 01AF  
                          ??_needsStarting 008F                                  ?_configIO 002B  
                               _bounceDown 28D8                       __end_of_nerdCallback AF68  
                           inputScan@input 01C9                                  ?_bounceUp 002B  
                                  i2_getNV BB1E                            loadFlashBlock@i 008D  
                          ??_canFillRxFifo 006C                             checkLen@needed 01C4  
                             _getParameter 864A                     __end_of_loadFlashBlock B8D8  
                        _sendProducedEvent 995A                      i2_getNextWriteMessage 8C2E  
                          _timerExtension1 00C3                            _timerExtension2 00C2  
                           ?_setLEDsByMode 002B                     mnsTRrqnpnCallback@step 01C5  
                   mnsTRrqnpnCallback@type 002B                         ?_sendProducedEvent 01BE  
                              poll@handled 02E6                       ??_mnsTRrqnpnCallback 00A9  
                        __end_of_findEvent A40C                                    __Hparam 0000  
                             initServos@io 00A8                      setOutputPosition@type 00A2  
                            ?_popTwoAction 002B                                    __Lparam 0000  
       __end_of_timer3DoneInterruptHandler C182                 _timer3DoneInterruptHandler C160  
                               _initBounce BFE8                     _APP_postProcessMessage C3C4  
                               _eventTable EF80                       ??_startDigitalOutput 01CF  
                       pbDownTimer@timeout 00A8                                ?_canEsdData 002B  
                        __end_of_pbUpTimer 94AE                           pbUpTimer@timeout 00A8  
                               _initTicker B920                                    ___awdiv A5AE  
                               _initRomOps C2FE                                    ___awmod ACE8  
                 _consumer2QProcessMessage 3616                           _ackGetDiagnostic BE84  
                               _initServos 7C14                                  ?_quantity 008D  
                                  ___lldiv A6BA                        ??_sendProducedEvent 01BF  
                        __end_of_completed A2EA                                ?_ackPowerUp 002B  
                              validStart@f 009C               EEPROM_Write@interruptEnabled 0092  
                     startDigitalOutput@io 01D5                                 ??_addEvent 01D9  
                               _currentPos 0140                                    _doEvlrn 90F4  
                               _paramBlock 0820                                    _doNenrd AD5A  
                       canProcessMessage@m 01F4                                    doSOD@io 01D0  
                                  _doEvuln A9B4                                    _doNnclr BD06  
                                  _doNnevn ADCA                                    _doReqev 7AD4  
                                  _doReval 9340                                    __pcinit AB20  
                          ??i2_checkTxFifo 0037                                setType@type 01E5  
                            _teachCheckLen B15A                                    _doRqevn BB58  
                        __end_of_leds_poll 6592                         _startTimedResponse B9EE  
                                  __ramtop 0F00                                    _getHash C1A2  
                                ?_writeNVM 00A4                         doEvlrn@eventNumber 01EA  
                            ??_checkTxFifo 006C                                    __ptext0 B7B0  
                                  __ptext1 980E                                    __ptext2 C2EA  
                                  __ptext3 7C14                                    __ptext4 AB92  
                                  __ptext5 BF3C                                    __ptext6 9764  
                                  __ptext7 872A                                    __ptext8 6982  
                                  __ptext9 C08A                     __end_of_setOutputState B4E2  
                                  _highIsr 8E9A                                    _isEvent C012  
                                  _configs EE35                                    _pbTimer 00A9  
                                _T0CONbits 0FD5                         APP_nvDefault@index 00A3  
                          getEv@tableIndex 00A5                                ?_canTxError 002B  
                         _EnumerationState 001F                          ??_canFactoryReset 00A9  
                        _mnsProcessMessage 1766                                    _nvCache 0400  
                          ??_initInputScan 0097                                 _mode_flags 0179  
                                _T1CONbits 0FCD                                ?_canPowerUp 002B  
                                  _readNVM B1BA                          __end_of_readInput 8188  
                           _nvFactoryReset BAA8                               _getTwoAction C338  
                                  getEN@hi 009D                                    getEN@lo 009F  
                        ?_ackEventCheckLen 01C6                                    _isrHigh 8414  
                        ??_teachGetESDdata 008D                   __end_of_rebuildHashtable 7E5A  
                               ??_checkLen 00A6                           ??i2_setOutputPin 0030  
                                _T3CONbits 0FB1                                    getNN@hi 009D  
                                  getNN@lo 009F                                 _mode_state 00C1  
                                  getEVs@f 00A1                           ___awmod@dividend 008D  
                             _configIO$741 01BA                         doReqev@eventNumber 01C5  
                                  _mnsPoll 4448                         ?_mnsProcessMessage 01F4  
                                  _tickGet B384                               _flashCounter 00AF  
                        doNenrd@tableIndex 01C7                        ?_startTimedResponse 0091  
                                  _setType B032                               _isEvent$5877 008D  
                       ??_ackEventCheckLen 00A7                             ??_setOutputPin 0092  
                  ??i1_getNextWriteMessage 0062                                 getNV@index 0090  
                               _inputState 0284                                    _rxQueue 0026  
                        doNenrd@nodeNumber 01C3                   processActions@nextAction 01E1  
                                  _powerUp 872A                          __end_of_inputScan 4D80  
                        __end_of_mnsLowIsr C326                                    _txQueue 0021  
                  ?_producerProcessMessage 01F4                            defaultEvents@en 01E2  
                          defaultEvents@io 01E4                                    _started 00CC  
                               ??_configIO 01B7                                 _mnsService EF57  
                        __end_of_nvService EF57                           ??_setBounceState 0092  
                               _mnsPowerUp 7F74                          __end_of_nvPowerUp C0AE  
                                  _writeEv 39EA                  __end_of_sendProducedEvent 99FC  
                               ??_bounceUp 009F                       end_of_initialization AB88  
                       _expeditedReadIndex 00C7                              startOutput@io 01D8  
                      ??_mnsProcessMessage 02C4                               writeNVM@type 00A8  
                               getEv@evNum 009D                                    memcpy@d 0094  
                                  memcpy@n 0091                                    memcpy@s 0096  
               APP_nvValueChanged@oldValue 01E9                                ?_defaultNVs 01BB  
                            ??_EEPROM_Read 008F                            ?_loadFlashBlock 002B  
                            ??_clearEvents 00A9                                  i1u2082_25 568C  
                    __end_of_doneTwoAction C3B6                                  i1u2286_20 B572  
                                i2u1221_44 72A2                                  i2u1221_45 729E  
                                  lowIsr@i 007D                                  i2u1222_44 72DC  
                                i2u1222_45 72D8                                  i2u1224_44 731E  
                                i2u1224_45 731A                                  i2u1225_44 7358  
                                i2u1225_45 7354                                  i2u1233_45 5E84  
                        _consumer2QPowerUp C28C                                  i2u1227_44 739A  
                                i2u1227_45 7396                                  i2u1228_44 73D4  
                                i2u1228_45 73D0                                  i1u2598_28 8E78  
                                i1u2598_29 8E8A                                  i2u1455_40 B5C4  
                        ?_APP_factoryReset 002B                             ??_popTwoAction 008D  
                               _validStart B67E                            ___lldiv@divisor 009B  
                                i2u2594_48 8F44                                  i2u2594_49 8F56  
                             writeEv@evVal 01C7                   __end_of_nvProcessMessage 4A9C  
                             writeEv@evNum 01C6                            ___lldiv@counter 00A3  
                     ??_startTimedResponse 0094                         ?_consumer2QPowerUp 002B  
                             writeEv@nextF 01CD                    pollTimedResponse@result 01D5  
                       ??_APP_factoryReset 00A9            eraseFlashBlock@interruptEnabled 008D  
                               _pollServos 0850                     pollServos@beforeMidway 01CF  
                         ??_APP_nvValidate 0094                  consumer2QProcessMessage@e 02CE  
                consumer2QProcessMessage@m 01F4                       _deleteHappeningRange 8806  
                            ??_FLASH_Write 0093                       nvGetDiagnostic@index 0090  
                                  postdec1 0FE5                                    postdec2 0FDD  
                                  postinc0 0FEE                                    postinc1 0FE6  
                                  postinc2 0FDE                   ?_consumer2QGetDiagnostic 008D  
                          _mnsFactoryReset AAA8                          ?_mnsGetDiagnostic 008D  
                               ??_quantity 008E                __end_of_setExpeditedActions C3AA  
                   ?_setTimedResponseDelay 002B                               _APP_addEvent C13E  
                        ??_isNoServoPulses 008D                     ?_producerGetDiagnostic 008D  
                           ?_teachCheckLen 01C6                        ??_consumer2QPowerUp 008D  
                __end_of_mnsProcessMessage 2292                                 _tmpMessage 01A6  
                       ??_mnsGetDiagnostic 008F             startTimedResponse@serviceIndex 0091  
                   __end_of_nvFactoryReset BAE4                                 _servoState 0130  
                               ??_writeNVM 01B5                                 _showStatus 8F64  
                                _PORTAbits 0F80                          ?_setDigitalOutput 0097  
                          ?_setOutputState 0093                                 _previousNN 0174  
           deleteHappeningRange@tableIndex 01DA                          ?_setNormalActions 002B  
                       _APP_nvValueChanged 2DA8                  _timedResponseServiceIndex 00BC  
                       setDigitalOutput@io 0099                         ??_setDigitalOutput 0098  
                       deleteActionRange@e 01DA                                 _priorities ED35  
                       _lastActionPollTime 0168                              ??_pbDownTimer 00A4  
        __end_of_sendInvertedProducedEvent B844                            sendMessage2@opc 00A7  
                     __end_of_teachPowerUp BFBE                            sendMessage3@opc 00A8  
                          sendMessage4@opc 01BD                            sendMessage5@opc 00A5  
                          sendMessage6@opc 00A5                            sendMessage7@opc 00A5  
                        _eventTeachService EF21             __end_of_producerProcessMessage 6324  
                         setupTimer1@ticks 009A                                  _TRISAbits 0F92  
                                _TRISBbits 0F93                                  _TXBIEbits 0E7F  
                       ??_setNormalActions 008D          canReceiveMessage@messageAvailable 01C2  
                         setupTimer3@ticks 009A                         _timedResponseDelay 0178  
                      __end_of_checkTxFifo 58C6                       APP_nvValueChanged@io 01EE  
                              showStatus@s 008F                              ??_findService 008F  
                          loadNvCache@temp 0099                                ?_bounceDown 002B  
                           i1_isEvent$5877 0060                        ?_APP_nvValueChanged 01E8  
                            clearEvents@io 01DC                                 isEvent@opc 008E  
                   ?i2_getNextWriteMessage 002B                    peekTwoActionQueue@index 0090  
                   i2getNextWriteMessage@q 002B                            ??_setLEDsByMode 0090  
                __end_of_consumer2QPowerUp C2A4                                  i1_isEvent C062  
                      teachCheckLen@needed 01C8            ??_mnsTRserviceDiscoveryCallback 01C6  
                        ??_flushFlashBlock 008E                                  i2_isEvent C11A  
                       _teachGetDiagnostic BCA0     sendInvertedProducedEvent@state_to_send 01CD  
               deleteHappeningRange@number 01D2                          _heartbeatSequence 00BD  
                      _teachProcessMessage 2292           sendProducedEvent@producedEventEN 01C1  
         sendProducedEvent@producedEventNN 01C4                                  i1_tickGet B434  
                        removeTableEntry@f 01C2                             bounceUp@midway 00A6  
                           _normalQueueBuf 0500                         _peekTwoActionQueue A1C2  
               consumer2QProcessMessage@ca 02CD                                  i2_tickGet B2D2  
               consumer2QProcessMessage@io 02CB                                 bounceUp@io 00A7  
                              ?_initBounce 002B                               _APP_testMode C3CA  
                    ?_deleteHappeningRange 01D2              __end_of_handleSelfEnumeration 828E  
             ??_timer1DoneInterruptHandler 0033                        __end_of_EEPROM_Read C23E  
                      ?_teachGetDiagnostic 008D                        __end_of_clearEvents BA6A  
                        _canTransmitFailed 00B6                ??i1_updateModuleErrorStatus 0060  
                              ?_initTicker 002B                                ?_initRomOps 002B  
                     ??_APP_nvValueChanged 01EA                                ?_initServos 002B  
                     __end_of_sendMessage2 BDF6                       __end_of_sendMessage3 BDC6  
                     __end_of_sendMessage4 BF3C                       __end_of_sendMessage5 BE56  
                     __end_of_sendMessage6 BD96                       __end_of_sendMessage7 BE26  
                           __end_of___lmul B434                              _defaultEvents 7416  
                           __end_of_canIsr C1E2                             __end_of_canPri EE8C  
                           __end_of___wmul C062                        ?_peekTwoActionQueue 008D  
                           __end_of_doNerd C258                 removeTableEntry@tableIndex 01C3  
                           __end_of_doWait 9B38                             __end_of_getEVs 8392  
                            ??_APP_highIsr 0033                            ?_nvFactoryReset 002B  
                         _removeTableEntry 7E5A                            needsStarting@io 0091  
                           __end_of_memcpy B9AC                             __end_of_isrLow 8414  
                       canReceiveMessage@m 01BF                         canReceiveMessage@p 01C5  
                           __end_of_lowIsr 8E9A                             __end_of_saveNV BB1E  
               __end_ofi1_getBufferPointer A12E                       ?_teachProcessMessage 01F4  
                __end_of_eventTeachService EF33                        __end_of_FLASH_Write 8DCC  
                    __end_of_APP_nvDefault 90F4                             _canSendMessage 5062  
                             _name_absaddr 0848                        start_initialization AB20  
                         ??_clearAllEvents 01BE                            _checkCANTimeout B536  
                             _leds_powerUp BCD6                       ??_teachGetDiagnostic 008F  
                              __end_of_pop 9C6E                              factoryReset@i 01ED  
                              ?_mnsPowerUp 002B               ?_mnsTRallDiagnosticsCallback 01C4  
                     setBounceState@action 0091                   setDigitalOutput@pinState 0098  
                     ??_peekTwoActionQueue 008F                                _CANSTATbits 0F6E  
                       i2canFillRxFifo@ptr 0037                      __end_of_pushTwoAction AE9A  
                      __end_of_pbDownTimer 955E                         _bootProcessMessage A12E  
                               ?i1_isEvent 002B                   producerProcessMessage@ev 02C4  
                      _getNextWriteMessage 89BA                                 ?i2_isEvent 002B  
                             _nvGetESDdata C272                   __end_of_canGetDiagnostic BBFE  
                  ??_APP_preProcessMessage 008F                    __end_of_mnsFactoryReset AB20  
                      __end_of_findService 9ED4                              ??_loadNvCache 0097  
                               ?i1_tickGet 0060                                ?_validStart 002B  
                       setServoPosition@io 00A0                        ?_bootProcessMessage 01F4  
                               ?i2_tickGet 002B                               doEvlrn@evVal 01ED  
                             doEvlrn@evNum 01EC                            numEv@tableIndex 00A3  
                   startTimedResponse@type 0094               __end_of_deleteTwoActionQueue A5AE  
                             doEvlrn@error 01EE                                ?_pollServos 002B  
               __end_of_evtIdxToTableIndex C386                   rebuildHashtable@chainIdx 01BC  
                     __end_of_setOutputPin 70B4                                   ??___lmul 0099  
                          ??_teachCheckLen 00A7                                   ??_canIsr 0079  
                      _universalEventsInit C2EA                                   ??___wmul 0095  
                             doNenrd@index 01C2                                   ??_doNerd 0095  
                                 ??_doWait 009F                                   ??_getEVs 009D  
                           ?_defaultEvents 01E1                        bootProcessMessage@m 01F4  
                       addEvent@forceOwnNN 01D8                               _nerdCallback AF02  
                          i2_canFillRxFifo 7980                 ?i2_updateModuleErrorStatus 002B  
                  _updateModuleErrorStatus C358                        __end_of_bootService EF45  
                                 ??_memcpy 0093                                   ??_isrLow 007E  
                                 ??_lowIsr 0079                                   ??_saveNV 01B8  
                   __end_of_canSendMessage 533E                                ?_showStatus 002B  
                            ??_initOutputs 008D                       ?_getNextWriteMessage 008D  
                    ??_teachProcessMessage 01F6                               checkTxFifo@m 0071  
                              _checkTxFifo 5608                           _startMultiOutput 9B38  
                        ?_setServoPosition 009F                              ?i2_canTxError 002B  
                       startMultiOutput@io 0093                           _startServoOutput 91BA  
                              __pbssBIGRAM 0580                                doSOD@midway 01CD  
                            _reqevCallback 9F6C         consumer2QProcessMessage@tableIndex 02C9  
                  ??_checkRemoveTableEntry 00A9      consumer2QProcessMessage@masked_action 02CC  
                     ??_bootProcessMessage 01F6                                __pbssCOMRAM 0001  
                    peekTwoActionQueue@qty 008F                          ??_nvGetDiagnostic 008F  
                     __end_of_popTwoAction BEE0                         ??_setServoPosition 00A0  
                         canSendMessage@mp 0099                              __pcstackBANK0 0060  
                            __pcstackBANK1 01B5                              __pcstackBANK2 02C4  
                      __end_of_APP_highIsr C2EA                  i1_updateModuleErrorStatus C364  
       consumer2QProcessMessage@nextAction 02C7                       ?_universalEventsInit 002B  
                               setNV@index 01F3                              _setMultiState 8B5E  
                          _happening2Event 0300                              _setServoState 960C  
                               setNV@value 01EF                         startServoOutput@io 0093  
                       addEvent@tableIndex 01E0                   __end_of_ackGetDiagnostic BEB2  
                           i2_isEvent$5877 002B                 setTimedResponseDelay@delay 008D  
                                addEvent@e 01DF                                  addEvent@f 01DE  
                                 ?i2_getNV 002B                         addEvent@nodeNumber 01D2  
            ??_mnsTRallDiagnosticsCallback 01C6                   _factoryResetGlobalEvents C3C8  
                       initInputScan@input 0099      sendInvertedProducedEvent@can_send_off 01C9  
                              _EEPROM_Read C220                 ??_consumer2QProcessMessage 01F6  
                       initTicker@priority 008D                                _clearEvents BA2C  
                  ?_APP_postProcessMessage 008D                          ??_eraseFlashBlock 008D  
                          i2checkTxFifo@mp 003E                           setBounceState@io 0092  
                   ??_deleteHappeningRange 01D3                             mnsPowerUp@temp 0098  
                             doNnevn@count 01C2                                  __pmainSec 8392  
                     teachProcessMessage@m 01F4                           _getBufferPointer A002  
                          _canFactoryReset C202                ?_timer3DoneInterruptHandler 002B  
    __end_of_mnsTRserviceDiscoveryCallback A49A              _mnsTRserviceDiscoveryCallback A40C  
     alwaysSendInvertedProducedEvent@state 01C6               mnsTRallDiagnosticsCallback@d 01CA  
                               nvPowerUp@i 009C                            tickGet@IntFlag1 0092  
                          tickGet@IntFlag2 0091                                  __pintcode 0808  
                          _teachGetESDdata C0D2                               ??_canEsdData 008D  
       handleSelfEnumeration@incomingCanId 009D                          _lastInputScanTime 016C  
                            __pmediumconst ED34                   ??_ackEventProcessMessage 01F6  
                     i1tickGet@currentTime 0066                                ackPowerUp@i 008D  
                         getEVs@tableIndex 00A3                                   ?___awdiv 0097  
                                __ptext100 B278                                  __ptext101 91BA  
                                __ptext110 A73E                                  __ptext102 9B38  
                                __ptext111 C338                                  __ptext103 58C6  
                                __ptext200 C364                                  __ptext120 4A9C  
                                __ptext112 A1C2                                  __ptext104 B7FA  
                                __ptext201 8A8C                                  __ptext121 995A  
                                __ptext113 9A9A                                  __ptext105 AF68  
                                __ptext210 B2D2                                  __ptext202 A098  
                                __ptext130 807E                                  __ptext122 BF0E  
                                __ptext114 C3B0                                  __ptext106 B48C  
                                __ptext211 9ED4                                  __ptext203 C3CC  
                                __ptext131 C2FE                                  __ptext123 A83E  
                                __ptext115 BEB2                                  __ptext107 960C  
                                __ptext220 7268                                  __ptext212 C11A  
                                __ptext140 8564                                  __ptext132 B21A  
                                __ptext124 5062                                  __ptext116 323E  
                                __ptext108 8B5E                                  __ptext221 BB1E  
                                __ptext213 7980                                  __ptext205 8E9A  
                                __ptext141 C202                                  __ptext133 8F64  
                                __ptext125 BB90                                  __ptext117 BEE0  
                                __ptext109 96B8                                _FLASH_Write 8CFE  
                                __ptext214 C370                                  __ptext206 C2BC  
                                __ptext150 C0F6                                  __ptext142 BAA8  
                                __ptext134 93FE                                  __ptext126 40EE  
                                __ptext118 A528                                  __ptext215 8C2E  
                                __ptext207 B58A                                  __ptext151 B032  
                                __ptext143 AAA8                                  __ptext135 94AE  
                                __ptext127 C012                                  __ptext119 A256  
                                __ptext216 A2EA                                  __ptext208 B0F8  
                                __ptext160 39EA                                  __ptext152 B62E  
                                __ptext144 C3B6                                  __ptext136 6324  
                                __ptext128 AC76                                  __ptext217 C2D4  
                                __ptext209 5E04                                  __ptext161 B8D8  
                                __ptext153 BAE4                                  __ptext145 B4E2  
                                __ptext137 B384                                  __ptext129 89BA  
                                __ptext218 C160                                  __ptext170 AA2E  
                                __ptext162 7E5A                                  __ptext154 B844  
                                __ptext146 902C                                  __ptext138 B3DC  
                                __ptext219 C1E2                                  __ptext171 4D80  
                                __ptext163 7D3C                                  __ptext155 7416  
                                __ptext147 C03A                                  __ptext139 A6BA  
                                __ptext180 C358                                  __ptext172 B6CC  
                                __ptext164 782A                                  __ptext156 BA2C  
                                __ptext148 ACE8                                  __ptext181 A49A  
                                __ptext173 8CFE                                  __ptext165 828E  
                                __ptext157 8806                                  __ptext149 A5AE  
                                __ptext190 8DCC                                  __ptext182 6EF6  
                                __ptext174 B88E                                  __ptext166 B67E  
                                __ptext158 955E                                  __ptext191 C1C2  
                                __ptext183 BA6A                                  __ptext175 A634  
                                __ptext167 A37C                                  __ptext159 6592  
                                __ptext192 C312                                  __ptext184 B1BA  
                                __ptext176 B718                                  __ptext168 927E  
                                __ptext193 B536                                  __ptext185 B764  
                                __ptext177 C326                                  __ptext169 C1A2  
                                __ptext194 B096                                  __ptext186 C220  
                                __ptext178 C348                                  __ptext195 5608  
                                __ptext187 C3C8                                  __ptext179 AE9A  
                                 ?___awmod 008D                                  __ptext196 B434  
                                __ptext188 C3CA                                  __ptext197 9DA2  
                                __ptext198 C062                                  __ptext199 76D2  
                             defaultNVs@io 01BE                                  _findEvent A37C  
                                 ?___lldiv 0097                     _startDigitalOutput$802 01D1  
                             ??_ackPowerUp 008D                        __end_of_loadNvCache B88E  
                             doReqev@evVal 01C8                               doReqev@evNum 01C7  
                          getNN@tableIndex 00A2                           processActions@io 01DF  
                             doReval@enNum 01C5                               doReval@evVal 01C6  
                             doReval@evNum 01C2                                   ?_doEvlrn 01E8  
                                 ?_doNenrd 002B                                   ?_doEvuln 01C9  
                              __pintcodelo 0818                                   ?_doNnclr 002B  
                                 ?_doNnevn 002B                        i2getBufferPointer@b 002D  
                                 ?_doReqev 01C3                                   ?_doReval 01C2  
                        teachGetESDdata@id 008D          __end_ofi2_updateModuleErrorStatus C37C  
                                 ?_doRqevn 002B                      ??_getNextWriteMessage 008F  
                                 ?_getHash 00A3                   deleteActionRange@updated 01D8  
                  __end_of_checkCANTimeout B58A                              ??_setNewCanId 00A9  
                                _pbUpTimer 93FE                            ?_canSendMessage 0099  
                            ??_sendMessage 00A2                                   ?_highIsr 002B  
                           ??i2_canTxError 0040                                   ?_isEvent 002B  
                             ??_canTxError 0075                           _findServiceIndex AC04  
                                _completed A256                           nerdCallback@step 01C5  
                         nerdCallback@type 002B                             ?_reqevCallback 01C4  
                             ??_canPowerUp 0097                             _heartbeatTimer 0160  
                                 ?_readNVM 0091                                   ?_isrHigh 002B  
                              _COMSTATbits 0F71                    i1getNextWriteMessage@wr 006B  
                                _leds_poll 6324                 producerGetDiagnostic@index 0091  
                                 ?_mnsPoll 002B                          ?_rebuildHashtable 002B  
                         _canIsr$intlevel1 C1CA                       setOutputPosition@pos 00A1  
                                 ?_tickGet 008D    mnsTRallDiagnosticsCallback@serviceIndex 01C4  
                              _pbDownTimer 94AE                                  checkLen@m 01C2  
                                 ?_setType 01E5           ackEventProcessMessage@eventIndex 01FC  
                    ??_universalEventsInit 008D                             defaultNVs@type 01BB  
                           ?_setMultiState 0091                    startBounceOutput@action 008D  
                      __end_of_initOutputs BF68                           ??_loadFlashBlock 008D  
                           ?_setServoState 0091                                   ?_powerUp 002B  
                                _readInput 807E                         ??_rebuildHashtable 01B5  
                              _findService 9E3C              __end_ofi1_getNextWriteMessage 8B5E  
                                 ?_writeEv 01C6                            startServos@type 01D2  
                              _flashDelays 0294                         processActions@type 01DC  
                                _expedited 00C5                         __end_of_canEsdData C272  
                    __end_of_needsStarting A7C0                                _flashBuffer 0348  
                           doReval@evIndex 01C4                                ??i1_isEvent 0060  
            deleteHappeningRange@happening 01D8                               ??_defaultNVs 01BC  
                                _inputScan 4A9C             __end_of_APP_postProcessMessage C3C8  
                          _eventAckService EED9                                  _mnsLowIsr C312  
                       __end_of_ackPowerUp C1A2                                  _nvService EF45  
                           ___wmul@product 0095                                  _loopCount 0234  
                            ??_removeEvent 00A9                                ??i2_isEvent 002B  
                     sendProducedEvent@opc 01C0                                   _LATBbits 0F8A  
                                _nvPowerUp C08A                      __end_of_canFillRxFifo 782A  
                        findEvent@chainIdx 01C0                            _isNoServoPulses C348  
               __end_ofi2_getBufferPointer A37C                                   _PIE1bits 0F9D  
                                 _PIE2bits 0FA0                       rebuildHashtable@hash 01BA  
                         ?_mnsFactoryReset 002B                                   _PIE5bits 0F76  
                              ??i1_tickGet 0064                                  _rxBuffers 0800  
                       __p_eventTable_text EF80                                  getHash@en 00A5  
                                getHash@nn 00A3                    __end_ofi2_canFillRxFifo 7AD4  
                           _flashFlushTime 0150     __end_of_APP_isSuitableTimeToWriteFlash C338  
           _APP_isSuitableTimeToWriteFlash C326                          _channelDefaultNVs EE8C  
                                _targetPos 0001                                _bootService EF33  
       __end_of_timer1DoneInterruptHandler C202                 _timer1DoneInterruptHandler C1E2  
                              ??i2_tickGet 002F                         __end_of_canTxError B0F8  
                       __end_of_canService EF7B                               _teachPowerUp BF94  
                                _pollCount 0244                                   _PIR1bits 0F9E  
                                 _PIR2bits 0FA1                         __end_of_canPowerUp 6B60  
                        ?_nvProcessMessage 01F4                    ??_setTimedResponseDelay 008D  
                                 _PIR5bits 0F77                          doReqev@tableIndex 01CA  
                  ??_producerGetDiagnostic 008F                            ??_defaultEvents 00A9  
                                _txBuffers 0480                             _mnsDiagnostics 019A  
                ??_updateModuleErrorStatus 008D                                   _RCONbits 0FD0  
                        doReqev@nodeNumber 01C3                           ??_setOutputState 0095  
                                 _RXF0SIDL 0EE1              startDigitalOutput@actionState 01D4  
                       ??_nvProcessMessage 01F6                                   _RXM0EIDH 0EFA  
                                 _RXM0EIDL 0EFB                                 ?_findEvent 01B5  
                                 _TXB0SIDH 0F21                                   _RXM1EIDH 0EFE  
                                 _TXB0SIDL 0F22                                   _RXM1EIDL 0EFF  
                                 _TXB1SIDH 0F11                                   _TXB1SIDL 0F12  
                                 _TXB2SIDH 0F01                                   _TXB2SIDL 0F02  
                                 _RXFBCON0 0E71                                   _RXFBCON1 0E72  
                                 _RXFBCON2 0E73                                   _RXFBCON3 0E74  
                                 _RXFBCON4 0E75                                   _RXFBCON5 0E76  
                                 _RXFBCON6 0E77                                   _RXFBCON7 0E78  
                                 _RXM0SIDH 0EF8                                   _RXM0SIDL 0EF9  
                                 _RXM1SIDH 0EFC                                   _RXM1SIDL 0EFD  
                           pushTwoAction@a 008D                            inputScan@change 01C8  
                      i2setOutputPin@state 002F                          _stepsPerPollSpeed 0120  
                        _teachFactoryReset C3B6                                 ?_pbUpTimer 002B  
                                configIO@i 01BE                                _bounceState 0224  
                              _APP_highIsr C2D4                             sendMessage@len 01B5  
                           sendMessage@opc 00A4                          _timedResponseTime 0154  
                        ___wmul@multiplier 0091                          _timedResponseStep 00B9  
                        _timedResponseType 00BA                                  _startWait 0164  
                                _startTime 0019                                 ?_completed 008D  
                                 i2_canIsr C2BC                      __end_ofi2_checkTxFifo 6096  
                         _enumerationState 00B5                               doRqevn@count 01BD  
                                _transport 0176                         ?_teachFactoryReset 002B  
                        defaultEvents@type 01E1                         __end_of_defaultNVs B67E  
                               ?_leds_poll 002B                      __end_of_initInputScan 980E  
                          _flushFlashBlock A634                 processActions@simultaneous 01DA  
                  ??i2_getNextWriteMessage 002D                        __end_of_setNewCanId B032  
                      __end_of_sendMessage A8BC                                 ?_readInput 002B  
                           doWait@duration 009D                              ??_setupTimer1 0095  
                            ??_setupTimer3 0095                       _deleteTwoActionQueue A528  
                          _eventCoeService EEEB                               ??_bounceDown 009F  
                      ??_teachFactoryReset 00A9                            checkLen@service 01C5  
                        ___lmul@multiplier 0091                                _INTCON2bits 0FF1  
                             _sendMessage2 BDC6                               _sendMessage3 BD96  
                             _sendMessage4 BF0E                               _sendMessage5 BE26  
                             _sendMessage6 BD66                               _sendMessage7 BDF6  
                                 i1pop@ret 0067                                   i2pop@ret 0032  
                          startOutput@type 01D7                            nvFactoryReset@i 01B9  
                               ?_inputScan 002B                                 ?_mnsLowIsr 002B  
                  __end_of_canFactoryReset C220                   __end_of_removeTableEntry 7F74  
                  __end_of_teachGetESDdata C0F6                                 ?_nvPowerUp 002B  
  __end_of_alwaysSendInvertedProducedEvent BF0E          ??_alwaysSendInvertedProducedEvent 00A9  
         ?_alwaysSendInvertedProducedEvent 01C6            _alwaysSendInvertedProducedEvent BEE0  
                __end_of_channelDefaultNVs EED9               __end_of_eventProducerService EF0F  
                   handleSelfEnumeration@p 0097                                 _EECON1bits 0F7F  
                      startBounceOutput@io 008E                                _loadNvCache B844  
                                 __Hrparam 0000                                _eventChains 0580  
                 evtIdxToTableIndex@evtIdx 008D                               ??_initBounce 008D  
                  APP_addEvent@eventNumber 01E3                                  memcpy@tmp 0093  
                                 __Lrparam 0000                          doReval@tableIndex 01C8  
                         ??_nvFactoryReset 01B7                               ??_initTicker 008D  
                      __end_of_removeEvent BFE8                               ??_initRomOps 008D  
                   removeEvent@eventNumber 01C6   consumer2QProcessMessage@nextSimultaneous 02CA  
                             ??_initServos 00A4                  __end_of_teachFactoryReset C3BC  
                                 _addEvent 6592                          _startBounceOutput AF68  
           ?_mnsTRserviceDiscoveryCallback 01C4                             _processActions 533E  
                       __end_of_bounceDown 2DA8                            ??_reqevCallback 01C6  
                            ??_startServos 00A9                           ?_checkCANTimeout 002B  
                            ??_startOutput 00A9                                _initOutputs BF3C  
                       ?_startBounceOutput 008D                         doNenrd@eventNumber 01C5  
                rebuildHashtable@happening 01BB                               setType@index 01E6  
                                 _checkLen A7C0                            ??_setMultiState 0092  
                          ??_setServoState 0092                             i2checkTxFifo@m 003C  
                      _producerDiagnostics 01B1                    deleteActionRange@action 01D9  
                            initOutputs@io 008D                       processActions@action 01E3  
          __end_of_updateModuleErrorStatus C364                    __end_of_eventAckService EEEB  
                               _FLASH_Read B764                 ?_sendInvertedProducedEvent 01C6  
                    ?_deleteTwoActionQueue 002B                      getNextWriteMessage@wr 0098  
                                 __ptext10 7F74                                   __ptext11 C182  
                                 __ptext20 1766                                   __ptext12 C28C  
                                 __ptext21 6096                                   __ptext13 BF94  
                               _T1GCONbits 0FAA                                   __ptext30 ADCA  
                                 __ptext22 6796                                   __ptext14 BCD6  
                                 __ptext31 BD06                                   __ptext23 A12E  
                                 __ptext15 C3AA                                defaultNVs@i 01BF  
                                 __ptext40 A8BC                                   __ptext32 C23E  
                                 __ptext24 3616                                   __ptext16 B920  
                                 __ptext41 B9AC                                   __ptext33 AD5A  
                                 __ptext25 2292                                   __ptext17 3D7E  
                                 __ptext50 2DA8                                   __ptext42 A40C  
                                 __ptext34 C37C                                   __ptext26 B15A  
                                 __ptext18 99FC                                   __ptext51 C390  
                                 __ptext43 847E                                   __ptext35 A9B4  
                                 __ptext27 BB58                                   __ptext19 4774  
                                 __ptext60 BC34                                   __ptext52 C0AE  
                                 __ptext44 BD36                                   __ptext36 BFBE  
                                 __ptext28 9340                                   __ptext61 BE84  
                                 __ptext53 B32C                                   __ptext45 AF02  
                                 __ptext37 90F4                                   __ptext29 7AD4  
                                 __ptext70 4448                                   __ptext62 BC6A  
                                 __ptext54 C258                                   __ptext46 9F6C  
                                 __ptext38 C13E                                   __ptext71 BF68  
                                 __ptext63 BCA0                                   __ptext55 C272  
                                 __ptext47 88E2                                   __ptext39 C3BC  
                                 __ptext80 B966                                   __ptext72 BDC6  
                                 __ptext64 B9EE                                   __ptext56 C0D2  
                                 __ptext48 C386                                   __ptext81 8188  
                                 __ptext73 C39A                                   __ptext65 BD66  
                                 __ptext57 BBC8                                   __ptext49 A938  
                                 __ptext90 6D32                                   __ptext82 A002  
                                 __ptext74 C3A2                                   __ptext66 BD96  
                                 __ptext58 BE56                                   __ptext91 98B4  
                                 __ptext83 BDF6                                   __ptext75 AE32  
                                 __ptext67 864A                                   __ptext59 BBFE  
                                 __ptext92 9C6E                                   __ptext84 9E3C  
                                 __ptext76 70B4                                   __ptext68 B5DE  
                                 __ptext93 9D08                                   __ptext85 C2A4  
                                 __ptext77 7578                                   __ptext69 AC04  
                                 __ptext94 0850                                   __ptext86 A7C0  
                                 __ptext78 AFCE                                   __ptext95 BFE8  
                                 __ptext87 BE26                                   __ptext79 9BD4  
                                 __ptext96 5B68                                   __ptext88 C3C0  
                                 __ptext97 28D8                                   __ptext89 C3C4  
                                 __ptext98 6B60                                   __ptext99 533E  
                      ??_startBounceOutput 008E                    __end_of_isNoServoPulses C358  
                             _setOutputPin 6EF6                       processActions@nextIo 01DE  
                             ??_mnsPowerUp 0097                                   _configIO 4D80  
                                 _ledTimer 0158                    deleteActionRange@number 01D2  
                           _processOutputs 6B60                          _APP_GetEventState C3BC  
                                 _ledState 00B1                         __end_of_initBounce C012  
                            ?_EEPROM_Write 008F                         __end_of_eventTable FF70  
                                 _bounceUp 5B68                                 _T3GCONbits 0FB0  
                   i1getNextWriteMessage@q 0060                         __end_of_initTicker B966  
                       __end_of_initRomOps C312                         i1_getBufferPointer A098  
                       ?_APP_GetEventState 002B                         __end_of_initServos 7D3C  
         __end_of_consumer2QProcessMessage 39EA                                  setType@io 01E7  
                                 doNnevn@f 01C1                                   doNnevn@i 01C3  
               sendProducedEvent@happening 01C3                         __end_of_paramBlock 0840  
                           canPowerUp@temp 0098                      __end_of_setLEDsByMode BF94  
                      __end_of_setupTimer1 9DA2                        __end_of_setupTimer3 9D08  
                     __end_ofi2_canTxError B15A                              ?_factoryReset 002B  
                 __end_of_startMultiOutput 9BD4                              _configIO$8019 01B9  
                         _nvTRnvrdCallback B9AC                              findEvent@hash 01BF  
                 __end_of_startServoOutput 927E                               ??_validStart 0097  
                                 doRqevn@i 01BE                          ?_canGetDiagnostic 008D  
                           writeEv@nextIdx 01D1                                getEVs@evIdx 00A2  
           consumer2QProcessMessage@change 02C5             consumer2QProcessMessage@action 02CF  
                         ?i2_canFillRxFifo 002B                                getEVs@evNum 00A4  
                      ?i1_getBufferPointer 0060                        ??_APP_GetEventState 008D  
            __end_of_APP_preProcessMessage C3C4              ackEventProcessMessage@eventEN 01FA  
            ackEventProcessMessage@eventNN 01FD                               _popTwoAction BEB2  
                       ??_canGetDiagnostic 008F                               ??_pollServos 01C6  
                                 isa$xinst 0000                                   _services EE75  
                __end_of_startBounceOutput AFCE                     __end_of_processActions 5608  
                 clearAllEvents@tableIndex 01C2                                   int$flags 0055  
                          _nvGetDiagnostic BE56                                   highIsr@i 0048  
                              ??_findEvent 01B9                                   _quantity BB90  
                    _handleSelfEnumeration 8188                ??i2_updateModuleErrorStatus 002B  
                               _APP_lowIsr C3CC                     sendProducedEvent@onOff 01BE  
                       __end_of_mnsService EF69                    __end_of_flushFlashBlock A6BA  
                        writeEv@tableIndex 01D0                         __end_of_mnsPowerUp 807E  
                        _setOutputPosition AB92                               ??_showStatus 008D  
                              ??_pbUpTimer 00A4                           processOutputs@io 01C7  
                                 _writeNVM B6CC                 processEnumeration@newCanId 01BD  
                   APP_addEvent@forceOwnNN 01E7                                _setNewCanId AFCE  
                             ?_checkTxFifo 002B                               pollServos@io 01D1  
                              ??_completed 0090                                _sendMessage A83E  
                           startOutput@act 01D6                    __end_of_eventCoeService EEFD  
                            writeNVM@index 00A4                         ?_setOutputPosition 00A1  
                                quantity@q 008D                              writeNVM@value 00A7  
                              _OSCTUNEbits 0F9B                                 _INTCONbits 0FF2  
                              ??_leds_poll 009F                 ??_factoryResetGlobalEvents 008D  
                       _evtIdxToTableIndex C37C                       ??i1_getBufferPointer 0062  
                    canGetDiagnostic@index 0091                                   memcpy@d1 008D  
                                 memcpy@s1 008F                     __end_of_processOutputs 6D32  
                __end_of_APP_GetEventState C3C0                   __end_of_getBufferPointer A098  
                          _eraseFlashBlock B718                          APP_addEvent@evVal 01E6  
            __end_of_checkRemoveTableEntry B920                          APP_addEvent@evNum 01E5  
                       __end_of_validStart B6CC                        __end_of_startServos 995A  
                  teachGetDiagnostic@index 0091                                ??_readInput 0091  
                      __end_of_startOutput B2D2                     _ackEventProcessMessage 6796  
                  deleteTwoActionQueue@qty 008D                             ??_EEPROM_Write 0092  
                      ??_setOutputPosition 00A3                 __end_of_processEnumeration 76D2  
                              getHash@hash 00A8                         __end_of_pollServos 1766  
                        ?_ackGetDiagnostic 008D                                   intlevel1 0000  
                                 intlevel2 0000                        ?_evtIdxToTableIndex 002B  
    alwaysSendInvertedProducedEvent@action 01C8                              ?_getParameter 002B  
                              ??_inputScan 01C6                               _servoInBlock 00C4  
                              ??_mnsLowIsr 0060                       getNextWriteMessage@q 008D  
                         ?_canFactoryReset 002B                                   numEv@num 00A1  
                             ?_EEPROM_Read 008D                           ___lldiv@dividend 0097  
                       ??_ackGetDiagnostic 008F      alwaysSendInvertedProducedEvent@invert 01C7  
          sendInvertedProducedEvent@invert 01C7                             ??_factoryReset 01E9  
                              ??_nvPowerUp 009C                               ?_clearEvents 002B  
                         _ackEventCheckLen C2A4                      removeEvent@tableIndex 01C8  
                         ?_teachGetESDdata 002B                   __end_of_findServiceIndex AC76  
                              _removeEvent BFBE                     APP_addEvent@nodeNumber 01E1  
                              _TXB0CONbits 0F20                              _doneTwoAction C3B0  
                       __end_of_showStatus 902C             mnsTRrqnpnCallback@serviceIndex 01C4  
                    removeEvent@nodeNumber 01C4                                _TXB1CONbits 0F10  
                              _TXB2CONbits 0F00                         _paramBlock_absaddr 0820  
              deleteActionRange@tableIndex 01DB                         __end_of_priorities EE35  
                         ??_canSendMessage 009B                __end_of_teachProcessMessage 28D8  
               __end_of_tableIndexToEvtIdx C390                       __end_of_canTransport EF7F  
                             ?_FLASH_Write 0090                         tickGet@currentTime 0093  
                          ?_processActions 002B                              findService@id 0091  
                __end_of_setOutputPosition AC04                                   powerUp@i 01C3  
                     ??_evtIdxToTableIndex 008D                          _pollTimedResponse A8BC  
                    __end_of_teachCheckLen B1BA                   ??_producerProcessMessage 01F6  
                    setDigitalOutput@state 0097                         _eventTable_absaddr EF80  
                       ?_pollTimedResponse 002B                          FLASH_Read@address 008D  
                         _APP_factoryReset C0F6                    nerdCallback@eventNumber 01C8  
                            ?_getTwoAction 0091                           _ticksWhenStopped 0388  
                         ___lldiv@quotient 009F                       _eventProducerService EEFD  
           sendInvertedProducedEvent@state 01C6                    _consumer2QGetDiagnostic BC6A  
                   ??_deleteTwoActionQueue 008D                          _deleteActionRange 955E  
                             ?_pbDownTimer 002B                                findEvent@en 01BD  
                              findEvent@nn 01BB                          writeEv@startIndex 01CC  
                     findEvent@eventNumber 01B7                                   writeEv@e 01CE  
                                 writeEv@f 01CF                            ?_processOutputs 002B  
                              ?_FLASH_Read 008D                        ??_pollTimedResponse 01D3  
                         _mnsGetDiagnostic BBFE                               findService@i 0092  
                       ?_deleteActionRange 01D2               _timedResponseAllServicesFlag 00BB  
                              _setupTimer1 9D08                                _setupTimer3 9C6E  
                         ?_isNoServoPulses 002B                               ?_findService 008D  
                   startMultiOutput@action 0091                  i2_updateModuleErrorStatus C370  
                           ??_getParameter 0092                          sendMessage2@data1 00A5  
                        sendMessage2@data2 00A6                          sendMessage3@data1 00A5  
                        sendMessage3@data2 00A6                          sendMessage3@data3 00A7  
                        sendMessage4@data1 00A5                          sendMessage4@data2 00A6  
                        sendMessage4@data3 00A7                          sendMessage4@data4 00A8  
                         _setDigitalOutput A49A                          getBufferPointer@b 008F  
                        sendMessage5@data1 01BD                          sendMessage5@data2 01BE  
                        sendMessage5@data3 01BF                          sendMessage5@data4 01C0  
                        sendMessage5@data5 01C1                      _consumer2QDiagnostics 01B3  
                        sendMessage6@data1 01BD                          sendMessage6@data2 01BE  
                        sendMessage6@data3 01BF                          sendMessage6@data4 01C0  
                        sendMessage6@data5 01C1                          sendMessage6@data6 01C2  
                          _last_mode_flags 00BF                          sendMessage7@data1 01BD  
                        sendMessage7@data2 01BE                          sendMessage7@data3 01BF  
                        sendMessage7@data4 01C0                          sendMessage7@data5 01C1  
                        sendMessage7@data6 01C2                          sendMessage7@data7 01C3  
                           _checkPowerOnPb B21A                           EEPROM_Read@index 008D  
                      ??_deleteActionRange 01D3                           _setNormalActions C39A  
                           ?_doneTwoAction 002B                            _last_mode_state 00C0  
                  __end_of_nvGetDiagnostic BE84                       validStart@tableIndex 009B  
                     nvTRnvrdCallback@step 01C5                ?_timer1DoneInterruptHandler 002B  
                     nvTRnvrdCallback@type 002B                                _pulseDelays 02A4  
              __end_of_getNextWriteMessage 8A8C  
